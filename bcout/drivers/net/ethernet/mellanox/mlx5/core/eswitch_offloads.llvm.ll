; ModuleID = '../bcout/drivers/net/ethernet/mellanox/mlx5/core/eswitch_offloads.llvm.bc'
source_filename = "drivers/net/ethernet/mellanox/mlx5/core/eswitch_offloads.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64"

%struct.lock_class_key = type {}
%struct.kmem_cache = type opaque
%struct.task_struct = type { %struct.thread_info, i64, i8*, %struct.refcount_struct, i32, i32, i32, i32, i32, i32, i32, %struct.sched_class*, %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, i32, i32, %struct.cpumask*, %struct.cpumask, %struct.sched_info, %struct.list_head, %struct.mm_struct*, %struct.mm_struct*, %struct.vmacache, i32, i32, i32, i32, i64, i32, i8, [3 x i8], i8, i64, %struct.restart_block, i32, i32, i64, %struct.task_struct*, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.pid*, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, %struct.completion*, i32*, i32*, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, %struct.posix_cputimers, %struct.posix_cputimers_work, %struct.cred*, %struct.cred*, %struct.cred*, %struct.key*, [16 x i8], %struct.nameidata*, %struct.fs_struct*, %struct.files_struct*, %struct.io_uring_task*, %struct.nsproxy*, %struct.signal_struct*, %struct.sighand_struct*, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i64, i64, i32, %struct.callback_head*, %struct.seccomp, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, %struct.task_struct*, %struct.rt_mutex_waiter*, i8*, %struct.bio_list*, %struct.blk_plug*, %struct.reclaim_state*, %struct.backing_dev_info*, %struct.io_context*, %struct.capture_control*, i64, %struct.kernel_siginfo*, %struct.task_io_accounting, %struct.robust_list_head*, %struct.list_head, %struct.futex_pi_state*, %struct.mutex, i32, [2 x %struct.perf_event_context*], %struct.mutex, %struct.list_head, %struct.rseq*, i32, i64, %struct.tlbflush_unmap_batch, %union.anon.123, %struct.pipe_inode_info*, %struct.page_frag, i32, i32, i64, i64, i64, i32, %struct.task_struct*, %struct.vm_struct*, %struct.refcount_struct, i8*, i64, i64, i64, %struct.callback_head, [24 x i8], %struct.thread_struct }
%struct.thread_info = type { i64, i32 }
%struct.sched_class = type opaque
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, %struct.sched_statistics }
%struct.load_weight = type { i64, i32 }
%struct.rb_node = type { i64, %struct.rb_node*, %struct.rb_node* }
%struct.sched_statistics = type {}
%struct.sched_rt_entity = type { %struct.list_head, i64, i64, i32, i16, i16, %struct.sched_rt_entity* }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, %struct.sched_dl_entity* }
%struct.hrtimer = type { %struct.timerqueue_node, i64, i32 (%struct.hrtimer*)*, %struct.hrtimer_clock_base*, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.hrtimer_clock_base = type { %struct.hrtimer_cpu_base*, i32, i32, %struct.seqcount_raw_spinlock, %struct.hrtimer*, %struct.timerqueue_head, i64 ()*, i64 }
%struct.hrtimer_cpu_base = type { %struct.raw_spinlock, i32, i32, i32, i8, i64, %struct.hrtimer*, i64, %struct.hrtimer*, [16 x i8], [8 x %struct.hrtimer_clock_base] }
%struct.seqcount_raw_spinlock = type { %struct.seqcount }
%struct.seqcount = type { i32 }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.cpumask = type { [1 x i64] }
%struct.sched_info = type {}
%struct.mm_struct = type { %struct.anon.18, [0 x i64] }
%struct.anon.18 = type { %struct.vm_area_struct*, %struct.rb_root, i64, i64 (%struct.file*, i64, i64, i64, i64)*, i64, i64, i64, i64, %struct.pgd_t*, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i32, %struct.spinlock, %struct.rw_semaphore, %struct.list_head, i64, i64, i64, i64, %struct.atomic64_t, i64, i64, i64, i64, %struct.spinlock, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [44 x i64], %struct.mm_rss_stat, %struct.linux_binfmt*, %struct.mm_context_t, i64, %struct.core_state*, %struct.spinlock, %struct.kioctx_table*, %struct.user_namespace*, %struct.file*, %struct.mmu_notifier_subscriptions*, %struct.atomic_t, i8, %struct.uprobes_state, %struct.work_struct, i32 }
%struct.vm_area_struct = type { i64, i64, %struct.vm_area_struct*, %struct.vm_area_struct*, %struct.rb_node, i64, %struct.mm_struct*, %struct.pgprot, i64, %struct.anon.19, %struct.list_head, %struct.anon_vma*, %struct.vm_operations_struct*, i64, %struct.file*, i8*, %struct.atomic64_t, %struct.vm_userfaultfd_ctx }
%struct.pgprot = type { i64 }
%struct.anon.19 = type { %struct.rb_node, i64 }
%struct.anon_vma = type opaque
%struct.vm_operations_struct = type { void (%struct.vm_area_struct*)*, void (%struct.vm_area_struct*)*, i32 (%struct.vm_area_struct*, i64)*, i32 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*, i32)*, void (%struct.vm_fault*, i64, i64)*, i64 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_area_struct*, i64, i8*, i32, i32)*, i8* (%struct.vm_area_struct*)*, %struct.page* (%struct.vm_area_struct*, i64)* }
%struct.vm_fault = type { %struct.vm_area_struct*, i32, i32, i64, i64, %struct.pmd_t*, %struct.pud_t*, %struct.pte_t, %struct.page*, %struct.page*, %struct.pte_t*, %struct.spinlock*, %struct.page* }
%struct.pmd_t = type { i64 }
%struct.pud_t = type { i64 }
%struct.pte_t = type { i64 }
%struct.page = type { i64, %union.anon.2, %union.anon.130, %struct.atomic_t, [8 x i8] }
%union.anon.2 = type { %struct.anon.3 }
%struct.anon.3 = type { %struct.list_head, %struct.address_space*, i64, i64 }
%struct.address_space = type { %struct.inode*, %struct.xarray, i32, %struct.atomic_t, %struct.rb_root_cached, %struct.rw_semaphore, i64, i64, i64, %struct.address_space_operations*, i64, i32, %struct.spinlock, %struct.list_head, i8* }
%struct.inode = type { i16, i16, %struct.kuid_t, %struct.kgid_t, i32, %struct.inode_operations*, %struct.super_block*, %struct.address_space*, i64, %union.anon.132, i32, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.spinlock, i16, i8, i8, i64, i64, %struct.rw_semaphore, i64, i64, %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %union.anon.133, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %union.anon.134, %struct.file_lock_context*, %struct.address_space, %struct.list_head, %union.anon.137, i32, i32, %struct.fsnotify_mark_connector*, i8* }
%struct.kuid_t = type { i32 }
%struct.kgid_t = type { i32 }
%struct.inode_operations = type { %struct.dentry* (%struct.inode*, %struct.dentry*, i32)*, i8* (%struct.dentry*, %struct.inode*, %struct.delayed_call*)*, i32 (%struct.inode*, i32)*, %struct.posix_acl* (%struct.inode*, i32)*, i32 (%struct.dentry*, i8*, i32)*, i32 (%struct.inode*, %struct.dentry*, i16, i1)*, i32 (%struct.dentry*, %struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i8*)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i16, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.inode*, %struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.iattr*)*, i32 (%struct.path*, %struct.kstat*, i32, i32)*, i64 (%struct.dentry*, i8*, i64)*, i32 (%struct.inode*, %struct.fiemap_extent_info*, i64, i64)*, i32 (%struct.inode*, %struct.timespec64*, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.file*, i32, i16)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.posix_acl*, i32)*, [24 x i8] }
%struct.dentry = type { i32, %struct.seqcount_spinlock, %struct.hlist_bl_node, %struct.dentry*, %struct.qstr, %struct.inode*, [32 x i8], %struct.lockref, %struct.dentry_operations*, %struct.super_block*, i64, i8*, %union.anon.140, %struct.list_head, %struct.list_head, %union.anon.141 }
%struct.seqcount_spinlock = type { %struct.seqcount }
%struct.hlist_bl_node = type { %struct.hlist_bl_node*, %struct.hlist_bl_node** }
%struct.qstr = type { %union.anon.0, i8* }
%union.anon.0 = type { i64 }
%struct.lockref = type { %union.anon.138 }
%union.anon.138 = type { %struct.anon.139 }
%struct.anon.139 = type { %struct.spinlock, i32 }
%struct.dentry_operations = type { i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.qstr*)*, i32 (%struct.dentry*, i32, i8*, %struct.qstr*)*, i32 (%struct.dentry*)*, i32 (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*, %struct.inode*)*, i8* (%struct.dentry*, i8*, i32)*, %struct.vfsmount* (%struct.path*)*, i32 (%struct.path*, i1)*, %struct.dentry* (%struct.dentry*, %struct.inode*)*, [24 x i8] }
%struct.vfsmount = type opaque
%struct.path = type { %struct.vfsmount*, %struct.dentry* }
%union.anon.140 = type { %struct.list_head }
%union.anon.141 = type { %struct.hlist_node }
%struct.delayed_call = type { void (i8*)*, i8* }
%struct.posix_acl = type opaque
%struct.iattr = type { i32, i16, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.file* }
%struct.kstat = type { i32, i16, i32, i32, i64, i64, i64, i32, i32, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.timespec64, i64, i64 }
%struct.fiemap_extent_info = type opaque
%struct.super_block = type { %struct.list_head, i32, i8, i64, i64, %struct.file_system_type*, %struct.super_operations*, %struct.dquot_operations*, %struct.quotactl_ops*, %struct.export_operations*, i64, i64, i64, %struct.dentry*, %struct.rw_semaphore, i32, %struct.atomic_t, %struct.xattr_handler**, %struct.hlist_bl_head, %struct.list_head, %struct.block_device*, %struct.backing_dev_info*, %struct.mtd_info*, %struct.hlist_node, i32, %struct.quota_info, %struct.sb_writers, i8*, i32, i64, i64, i32, %struct.fsnotify_mark_connector*, [32 x i8], %struct.uuid_t, i32, i32, %struct.mutex, i8*, %struct.dentry_operations*, i32, %struct.shrinker, %struct.atomic64_t, %struct.atomic64_t, i32, i32, %struct.workqueue_struct*, %struct.hlist_head, %struct.user_namespace*, %struct.list_lru, %struct.list_lru, %struct.callback_head, %struct.work_struct, %struct.mutex, i32, %struct.spinlock, %struct.list_head, %struct.spinlock, %struct.list_head }
%struct.file_system_type = type { i8*, i32, i32 (%struct.fs_context*)*, %struct.fs_parameter_spec*, %struct.dentry* (%struct.file_system_type*, i32, i8*, i8*)*, void (%struct.super_block*)*, %struct.module*, %struct.file_system_type*, %struct.hlist_head, %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key, [3 x %struct.lock_class_key], %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key }
%struct.fs_context = type opaque
%struct.fs_parameter_spec = type opaque
%struct.module = type opaque
%struct.super_operations = type { %struct.inode* (%struct.super_block*)*, void (%struct.inode*)*, void (%struct.inode*)*, void (%struct.inode*, i32)*, i32 (%struct.inode*, %struct.writeback_control*)*, i32 (%struct.inode*)*, void (%struct.inode*)*, void (%struct.super_block*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.dentry*, %struct.kstatfs*)*, i32 (%struct.super_block*, i32*, i8*)*, void (%struct.super_block*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.super_block*, %struct.page*, i32)*, i64 (%struct.super_block*, %struct.shrink_control*)*, i64 (%struct.super_block*, %struct.shrink_control*)* }
%struct.writeback_control = type { i64, i64, i64, i64, i32, i8 }
%struct.kstatfs = type opaque
%struct.seq_file = type { i8*, i64, i64, i64, i64, i64, i64, %struct.mutex, %struct.seq_operations*, i32, %struct.file*, i8* }
%struct.seq_operations = type { i8* (%struct.seq_file*, i64*)*, void (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i8*, i64*)*, i32 (%struct.seq_file*, i8*)* }
%struct.shrink_control = type { i32, i32, i64, i64, %struct.mem_cgroup* }
%struct.mem_cgroup = type opaque
%struct.dquot_operations = type { i32 (%struct.dquot*)*, %struct.dquot* (%struct.super_block*, i32)*, void (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, i32)*, i64* (%struct.inode*)*, i32 (%struct.inode*, %struct.kprojid_t*)*, i32 (%struct.inode*, i64*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.dquot = type { %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.mutex, %struct.spinlock, %struct.atomic_t, %struct.super_block*, %struct.kqid, i64, i64, %struct.mem_dqblk }
%struct.kqid = type { %union.anon.131, i32 }
%union.anon.131 = type { %struct.kuid_t }
%struct.mem_dqblk = type { i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.kprojid_t = type { i32 }
%struct.quotactl_ops = type { i32 (%struct.super_block*, i32, i32, %struct.path*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32, %struct.qc_info*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.kqid*, %struct.qc_dqblk*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.qc_state*)*, i32 (%struct.super_block*, i32)* }
%struct.qc_info = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.qc_dqblk = type { i32, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, i64, i64, i64, i64, i32 }
%struct.qc_state = type { i32, [3 x %struct.qc_type_state] }
%struct.qc_type_state = type { i32, i32, i32, i32, i32, i32, i32, i64, i64, i64 }
%struct.export_operations = type opaque
%struct.xattr_handler = type opaque
%struct.hlist_bl_head = type { %struct.hlist_bl_node* }
%struct.block_device = type { i32, i32, %struct.inode*, %struct.super_block*, %struct.mutex, i8*, i8*, i32, i8, %struct.list_head, %struct.block_device*, i8, %struct.hd_struct*, i32, %struct.spinlock, %struct.gendisk*, %struct.backing_dev_info*, i32, %struct.mutex }
%struct.hd_struct = type { i64, i64, i64, %struct.disk_stats*, %struct.percpu_ref, %struct.device, %struct.kobject*, i32, i32, %struct.partition_meta_info*, %struct.rcu_work }
%struct.disk_stats = type opaque
%struct.percpu_ref = type { i64, %struct.percpu_ref_data* }
%struct.percpu_ref_data = type { %struct.atomic64_t, void (%struct.percpu_ref*)*, void (%struct.percpu_ref*)*, i8, %struct.callback_head, %struct.percpu_ref* }
%struct.device = type { %struct.kobject, %struct.device*, %struct.device_private*, i8*, %struct.device_type*, %struct.bus_type*, %struct.device_driver*, i8*, i8*, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, %struct.dev_pm_domain*, %struct.irq_domain*, %struct.list_head, %struct.dma_map_ops*, i64*, i64, i64, %struct.bus_dma_region*, %struct.device_dma_parameters*, %struct.list_head, %struct.dev_archdata, %struct.device_node*, %struct.fwnode_handle*, i32, i32, %struct.spinlock, %struct.list_head, %struct.class*, %struct.attribute_group**, void (%struct.device*)*, %struct.iommu_group*, %struct.dev_iommu*, i8 }
%struct.kobject = type { i8*, %struct.list_head, %struct.kobject*, %struct.kset*, %struct.kobj_type*, %struct.kernfs_node*, %struct.kref, i8 }
%struct.kset = type { %struct.list_head, %struct.spinlock, %struct.kobject, %struct.kset_uevent_ops* }
%struct.kset_uevent_ops = type { i32 (%struct.kset*, %struct.kobject*)*, i8* (%struct.kset*, %struct.kobject*)*, i32 (%struct.kset*, %struct.kobject*, %struct.kobj_uevent_env*)* }
%struct.kobj_uevent_env = type { [3 x i8*], [64 x i8*], i32, [2048 x i8], i32 }
%struct.kobj_type = type { void (%struct.kobject*)*, %struct.sysfs_ops*, %struct.attribute**, %struct.attribute_group**, %struct.kobj_ns_type_operations* (%struct.kobject*)*, i8* (%struct.kobject*)*, void (%struct.kobject*, %struct.kuid_t*, %struct.kgid_t*)* }
%struct.sysfs_ops = type { i64 (%struct.kobject*, %struct.attribute*, i8*)*, i64 (%struct.kobject*, %struct.attribute*, i8*, i64)* }
%struct.attribute = type { i8*, i16 }
%struct.kobj_ns_type_operations = type { i32, i1 ()*, i8* ()*, i8* (%struct.sock*)*, i8* ()*, void (i8*)* }
%struct.sock = type { %struct.sock_common, %struct.socket_lock_t, %struct.atomic_t, i32, %struct.sk_buff_head, %struct.sk_buff*, %struct.sk_buff_head, %struct.anon.64, i32, i32, i32, i32, %struct.sk_filter*, %union.anon.93, %struct.dst_entry*, %struct.dst_entry*, %struct.atomic_t, i32, i32, %struct.refcount_struct, i64, %union.anon.96, %struct.sk_buff*, %struct.sk_buff_head, i32, i32, i32, i32, i64, %struct.timer_list, i32, i32, i64, i64, %struct.page_frag, i64, i64, i64, i32, i32, i32, i32, i8, i8, i16, i16, i16, i64, %struct.proto*, %struct.rwlock_t, i32, i32, i32, i32, %struct.kuid_t, %struct.pid*, %struct.cred*, i64, i64, i16, i8, i32, %struct.atomic_t, i8, i8, %struct.socket*, i8*, %struct.sock_cgroup_data, %struct.mem_cgroup*, void (%struct.sock*)*, void (%struct.sock*)*, void (%struct.sock*)*, void (%struct.sock*)*, i32 (%struct.sock*, %struct.sk_buff*)*, void (%struct.sock*)*, %struct.sock_reuseport*, %struct.callback_head }
%struct.sock_common = type { %union.anon.38, %union.anon.40, %union.anon.41, i16, i8, i8, i32, %union.anon.43, %struct.proto*, %struct.possible_net_t, %struct.in6_addr, %struct.in6_addr, %struct.atomic64_t, %union.anon.60, [0 x i32], %union.anon.61, i16, %union.anon.62, %struct.refcount_struct, [0 x i32], %union.anon.63 }
%union.anon.38 = type { i64 }
%union.anon.40 = type { i32 }
%union.anon.41 = type { i32 }
%union.anon.43 = type { %struct.hlist_node }
%struct.possible_net_t = type { %struct.net* }
%struct.net = type { %struct.refcount_struct, %struct.refcount_struct, %struct.spinlock, i32, i32, i32, %struct.spinlock, %struct.atomic_t, %struct.list_head, %struct.list_head, %struct.llist_node, %struct.key_tag*, %struct.user_namespace*, %struct.ucounts*, %struct.idr, %struct.ns_common, %struct.list_head, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.ctl_table_set, %struct.sock*, %struct.sock*, %struct.uevent_sock*, %struct.hlist_head*, %struct.hlist_head*, %struct.raw_notifier_head, i32, %struct.net_device*, %struct.list_head, %struct.netns_core, %struct.netns_mib, %struct.netns_packet, %struct.netns_unix, %struct.netns_nexthop, %struct.netns_ipv4, %struct.netns_ipv6, %struct.sk_buff_head, %struct.net_generic*, %struct.netns_bpf, %struct.atomic64_t, %struct.netns_can, %struct.sock* }
%struct.llist_node = type { %struct.llist_node* }
%struct.key_tag = type { %struct.callback_head, %struct.refcount_struct, i8 }
%struct.ucounts = type { %struct.hlist_node, %struct.user_namespace*, %struct.kuid_t, i32, [10 x %struct.atomic_t] }
%struct.idr = type { %struct.xarray, i32, i32 }
%struct.ns_common = type { %struct.atomic64_t, %struct.proc_ns_operations*, i32 }
%struct.proc_ns_operations = type opaque
%struct.proc_dir_entry = type opaque
%struct.ctl_table_set = type { i32 (%struct.ctl_table_set*)*, %struct.ctl_dir }
%struct.ctl_dir = type { %struct.ctl_table_header, %struct.rb_root }
%struct.ctl_table_header = type { %union.anon.35, %struct.completion*, %struct.ctl_table*, %struct.ctl_table_root*, %struct.ctl_table_set*, %struct.ctl_dir*, %struct.ctl_node*, %struct.hlist_head }
%union.anon.35 = type { %struct.anon.36 }
%struct.anon.36 = type { %struct.ctl_table*, i32, i32, i32 }
%struct.ctl_table = type { i8*, i8*, i32, i16, %struct.ctl_table*, i32 (%struct.ctl_table*, i32, i8*, i64*, i64*)*, %struct.ctl_table_poll*, i8*, i8* }
%struct.ctl_table_poll = type { %struct.atomic_t, %struct.wait_queue_head }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.ctl_table_root = type { %struct.ctl_table_set, %struct.ctl_table_set* (%struct.ctl_table_root*)*, void (%struct.ctl_table_header*, %struct.ctl_table*, %struct.kuid_t*, %struct.kgid_t*)*, i32 (%struct.ctl_table_header*, %struct.ctl_table*)* }
%struct.ctl_node = type { %struct.rb_node, %struct.ctl_table_header* }
%struct.uevent_sock = type opaque
%struct.raw_notifier_head = type { %struct.notifier_block* }
%struct.notifier_block = type { i32 (%struct.notifier_block*, i64, i8*)*, %struct.notifier_block*, i32 }
%struct.net_device = type { [16 x i8], %struct.netdev_name_node*, %struct.dev_ifalias*, i64, i64, i64, i32, i64, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.anon.175, i64, i64, i64, i64, i64, i64, i64, i32, i32, %struct.net_device_stats, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.iw_handler_def*, %struct.iw_public_data*, %struct.net_device_ops*, %struct.ethtool_ops*, %struct.ndisc_ops*, %struct.header_ops*, i32, i32, i16, i16, i8, i8, i8, i8, i32, i32, i32, i16, i16, i8, i8, i16, i16, [32 x i8], i8, i8, i8, i8, i16, i16, i16, %struct.spinlock, %struct.netdev_hw_addr_list, %struct.netdev_hw_addr_list, %struct.netdev_hw_addr_list, %struct.kset*, i32, i32, i8, %struct.vlan_info*, %struct.in_device*, %struct.inet6_dev*, %struct.wireless_dev*, %struct.wpan_dev*, i8*, %struct.netdev_rx_queue*, i32, i32, %struct.bpf_prog*, i64, i32, i32 (%struct.sk_buff**)*, i8*, %struct.netdev_queue*, [32 x i8], %struct.hlist_node, %struct.netdev_queue*, i32, i32, %struct.Qdisc*, i32, %struct.spinlock, %struct.xdp_dev_bulk_queue*, %struct.timer_list, i32, i32, %struct.list_head, i32*, %struct.list_head, i8, i8, i16, i8, void (%struct.net_device*)*, %struct.possible_net_t, %union.anon.191, %struct.device, [4 x %struct.attribute_group*], %struct.attribute_group*, %struct.rtnl_link_ops*, i32, i16, i16, [16 x %struct.netdev_tc_txq], [16 x i8], %struct.phy_device*, %struct.sfp_bus*, %struct.lock_class_key*, %struct.lock_class_key*, i8, i8, %struct.list_head, %struct.udp_tunnel_nic_info*, %struct.udp_tunnel_nic*, [3 x %struct.bpf_xdp_entity] }
%struct.netdev_name_node = type { %struct.hlist_node, %struct.list_head, %struct.net_device*, i8* }
%struct.dev_ifalias = type { %struct.callback_head, [0 x i8] }
%struct.anon.175 = type { %struct.list_head, %struct.list_head }
%struct.net_device_stats = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.iw_handler_def = type opaque
%struct.iw_public_data = type opaque
%struct.net_device_ops = type { i32 (%struct.net_device*)*, void (%struct.net_device*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*)*, i32 (%struct.sk_buff*, %struct.net_device*)*, i64 (%struct.sk_buff*, %struct.net_device*, i64)*, i16 (%struct.net_device*, %struct.sk_buff*, %struct.net_device*)*, void (%struct.net_device*, i32)*, void (%struct.net_device*)*, i32 (%struct.net_device*, i8*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, %struct.ifreq*, i32)*, i32 (%struct.net_device*, %struct.ifmap*)*, i32 (%struct.net_device*, i32)*, i32 (%struct.net_device*, %struct.neigh_parms*)*, void (%struct.net_device*, i32)*, void (%struct.net_device*, %struct.rtnl_link_stats64*)*, i1 (%struct.net_device*, i32)*, i32 (i32, %struct.net_device*, i8*)*, %struct.net_device_stats* (%struct.net_device*)*, i32 (%struct.net_device*, i16, i16)*, i32 (%struct.net_device*, i16, i16)*, i32 (%struct.net_device*, i32, i8*)*, i32 (%struct.net_device*, i32, i16, i8, i16)*, i32 (%struct.net_device*, i32, i32, i32)*, i32 (%struct.net_device*, i32, i1)*, i32 (%struct.net_device*, i32, i1)*, i32 (%struct.net_device*, i32, %struct.ifla_vf_info*)*, i32 (%struct.net_device*, i32, i32)*, i32 (%struct.net_device*, i32, %struct.ifla_vf_stats*)*, i32 (%struct.net_device*, i32, %struct.nlattr**)*, i32 (%struct.net_device*, i32, %struct.sk_buff*)*, i32 (%struct.net_device*, i32, %struct.ifla_vf_guid*, %struct.ifla_vf_guid*)*, i32 (%struct.net_device*, i32, i64, i32)*, i32 (%struct.net_device*, i32, i1)*, i32 (%struct.net_device*, i32, i8*)*, i32 (%struct.net_device*, %struct.net_device*, %struct.netlink_ext_ack*)*, i32 (%struct.net_device*, %struct.net_device*)*, %struct.net_device* (%struct.net_device*, %struct.sk_buff*, i1)*, i64 (%struct.net_device*, i64)*, i32 (%struct.net_device*, i64)*, i32 (%struct.net_device*, %struct.neighbour*)*, void (%struct.net_device*, %struct.neighbour*)*, i32 (%struct.ndmsg*, %struct.nlattr**, %struct.net_device*, i8*, i16, i16, %struct.netlink_ext_ack*)*, i32 (%struct.ndmsg*, %struct.nlattr**, %struct.net_device*, i8*, i16)*, i32 (%struct.sk_buff*, %struct.netlink_callback*, %struct.net_device*, %struct.net_device*, i32*)*, i32 (%struct.sk_buff*, %struct.nlattr**, %struct.net_device*, i8*, i16, i32, i32, %struct.netlink_ext_ack*)*, i32 (%struct.net_device*, %struct.nlmsghdr*, i16, %struct.netlink_ext_ack*)*, i32 (%struct.sk_buff*, i32, i32, %struct.net_device*, i32, i32)*, i32 (%struct.net_device*, %struct.nlmsghdr*, i16)*, i32 (%struct.net_device*, i1)*, i32 (%struct.net_device*, %struct.netdev_phys_item_id*)*, i32 (%struct.net_device*, %struct.netdev_phys_item_id*)*, i32 (%struct.net_device*, i8*, i64)*, void (%struct.net_device*, %struct.udp_tunnel_info*)*, void (%struct.net_device*, %struct.udp_tunnel_info*)*, i8* (%struct.net_device*, %struct.net_device*)*, void (%struct.net_device*, i8*)*, i32 (%struct.net_device*, i32, i32)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, i1)*, i32 (%struct.net_device*, %struct.sk_buff*)*, void (%struct.net_device*, i32)*, i32 (%struct.net_device*, %struct.netdev_bpf*)*, i32 (%struct.net_device*, i32, %struct.xdp_frame**, i32)*, i32 (%struct.net_device*, i32, i32)*, %struct.devlink_port* (%struct.net_device*)*, i32 (%struct.net_device*, %struct.ip_tunnel_parm*, i32)*, %struct.net_device* (%struct.net_device*)* }
%struct.ifreq = type { %union.anon.176, %union.anon.177 }
%union.anon.176 = type { [16 x i8] }
%union.anon.177 = type { %struct.ifmap }
%struct.ifmap = type { i64, i64, i16, i8, i8, i8 }
%struct.neigh_parms = type { %struct.possible_net_t, %struct.net_device*, %struct.list_head, i32 (%struct.neighbour*)*, %struct.neigh_table*, i8*, i32, %struct.refcount_struct, %struct.callback_head, i32, [13 x i32], [1 x i64] }
%struct.neighbour = type { %struct.neighbour*, %struct.neigh_table*, %struct.neigh_parms*, i64, i64, %struct.rwlock_t, %struct.refcount_struct, i32, %struct.sk_buff_head, %struct.timer_list, i64, %struct.atomic_t, i8, i8, i8, i8, i8, %struct.seqlock_t, [32 x i8], %struct.hh_cache, i32 (%struct.neighbour*, %struct.sk_buff*)*, %struct.neigh_ops*, %struct.list_head, %struct.callback_head, %struct.net_device*, [0 x i8] }
%struct.seqlock_t = type { %struct.seqcount_spinlock, %struct.spinlock }
%struct.hh_cache = type { i32, %struct.seqlock_t, [12 x i64] }
%struct.neigh_ops = type { i32, void (%struct.neighbour*, %struct.sk_buff*)*, void (%struct.neighbour*, %struct.sk_buff*)*, i32 (%struct.neighbour*, %struct.sk_buff*)*, i32 (%struct.neighbour*, %struct.sk_buff*)* }
%struct.neigh_table = type { i32, i32, i32, i16, i32 (i8*, %struct.net_device*, i32*)*, i1 (%struct.neighbour*, i8*)*, i32 (%struct.neighbour*)*, i32 (%struct.pneigh_entry*)*, void (%struct.pneigh_entry*)*, void (%struct.sk_buff*)*, i32 (i8*)*, i1 (%struct.net_device*, %struct.netlink_ext_ack*)*, i8*, %struct.neigh_parms, %struct.list_head, i32, i32, i32, i32, i64, %struct.delayed_work, %struct.timer_list, %struct.sk_buff_head, %struct.atomic_t, %struct.atomic_t, %struct.list_head, %struct.rwlock_t, i64, %struct.neigh_statistics*, %struct.neigh_hash_table*, %struct.pneigh_entry** }
%struct.pneigh_entry = type { %struct.pneigh_entry*, %struct.possible_net_t, %struct.net_device*, i8, i8, [0 x i8] }
%struct.netlink_ext_ack = type { i8*, %struct.nlattr*, %struct.nla_policy*, [20 x i8], i8 }
%struct.nlattr = type { i16, i16 }
%struct.nla_policy = type { i8, i8, i16, %union.anon.94 }
%union.anon.94 = type { i8* }
%struct.delayed_work = type { %struct.work_struct, %struct.timer_list, %struct.workqueue_struct*, i32 }
%struct.neigh_statistics = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.neigh_hash_table = type { %struct.neighbour**, i32, [4 x i32], %struct.callback_head }
%struct.rtnl_link_stats64 = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.ifla_vf_info = type { i32, [32 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i16 }
%struct.ifla_vf_stats = type { i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.ifla_vf_guid = type { i32, i64 }
%struct.ndmsg = type { i8, i8, i16, i32, i16, i8, i8 }
%struct.netlink_callback = type { %struct.sk_buff*, %struct.nlmsghdr*, i32 (%struct.sk_buff*, %struct.netlink_callback*)*, i32 (%struct.netlink_callback*)*, i8*, %struct.module*, %struct.netlink_ext_ack*, i16, i16, i32, i32, i32, i8, %union.anon.179 }
%struct.nlmsghdr = type { i32, i16, i16, i32, i32 }
%union.anon.179 = type { [6 x i64] }
%struct.netdev_phys_item_id = type { [32 x i8], i8 }
%struct.udp_tunnel_info = type { i16, i16, i16, i8 }
%struct.netdev_bpf = type { i32, %union.anon.180 }
%union.anon.180 = type { %struct.anon.181 }
%struct.anon.181 = type { i32, %struct.bpf_prog*, %struct.netlink_ext_ack* }
%struct.xdp_frame = type { i8*, i16, i16, i32, %struct.xdp_mem_info, %struct.net_device* }
%struct.xdp_mem_info = type { i32, i32 }
%struct.devlink_port = type { %struct.list_head, %struct.list_head, %struct.list_head, %struct.devlink*, i32, i8, %struct.spinlock, i32, i32, i8*, %struct.devlink_port_attrs, i8, %struct.delayed_work, %struct.list_head, %struct.mutex }
%struct.devlink = type { %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.mutex, %struct.devlink_dpipe_headers*, %struct.list_head, %struct.list_head, %struct.list_head, %struct.devlink_ops*, %struct.xarray, %struct.devlink_dev_stats, %struct.device*, %struct.possible_net_t, %struct.mutex, i8, [31 x i8], [0 x i8] }
%struct.devlink_dpipe_headers = type { %struct.devlink_dpipe_header**, i32 }
%struct.devlink_dpipe_header = type { i8*, i32, %struct.devlink_dpipe_field*, i32, i8 }
%struct.devlink_dpipe_field = type { i8*, i32, i32, i32 }
%struct.devlink_ops = type { i32, i64, i64, i32 (%struct.devlink*, i1, i32, i32, %struct.netlink_ext_ack*)*, i32 (%struct.devlink*, i32, i32, i32*, %struct.netlink_ext_ack*)*, i32 (%struct.devlink_port*, i32)*, i32 (%struct.devlink*, i32, i32, %struct.netlink_ext_ack*)*, i32 (%struct.devlink*, i32, %struct.netlink_ext_ack*)*, i32 (%struct.devlink*, i32, i16, %struct.devlink_sb_pool_info*)*, i32 (%struct.devlink*, i32, i16, i32, i32, %struct.netlink_ext_ack*)*, i32 (%struct.devlink_port*, i32, i16, i32*)*, i32 (%struct.devlink_port*, i32, i16, i32, %struct.netlink_ext_ack*)*, i32 (%struct.devlink_port*, i32, i16, i32, i16*, i32*)*, i32 (%struct.devlink_port*, i32, i16, i32, i16, i32, %struct.netlink_ext_ack*)*, i32 (%struct.devlink*, i32)*, i32 (%struct.devlink*, i32)*, i32 (%struct.devlink_port*, i32, i16, i32*, i32*)*, i32 (%struct.devlink_port*, i32, i16, i32, i32*, i32*)*, i32 (%struct.devlink*, i16*)*, i32 (%struct.devlink*, i16, %struct.netlink_ext_ack*)*, i32 (%struct.devlink*, i8*)*, i32 (%struct.devlink*, i8, %struct.netlink_ext_ack*)*, i32 (%struct.devlink*, i32*)*, i32 (%struct.devlink*, i32, %struct.netlink_ext_ack*)*, i32 (%struct.devlink*, %struct.devlink_info_req*, %struct.netlink_ext_ack*)*, i32 (%struct.devlink*, %struct.devlink_flash_update_params*, %struct.netlink_ext_ack*)*, i32 (%struct.devlink*, %struct.devlink_trap*, i8*)*, void (%struct.devlink*, %struct.devlink_trap*, i8*)*, i32 (%struct.devlink*, %struct.devlink_trap*, i32, %struct.netlink_ext_ack*)*, i32 (%struct.devlink*, %struct.devlink_trap_group*)*, i32 (%struct.devlink*, %struct.devlink_trap_group*, %struct.devlink_trap_policer*, %struct.netlink_ext_ack*)*, i32 (%struct.devlink*, %struct.devlink_trap_group*, i32, %struct.netlink_ext_ack*)*, i32 (%struct.devlink*, %struct.devlink_trap_policer*)*, void (%struct.devlink*, %struct.devlink_trap_policer*)*, i32 (%struct.devlink*, %struct.devlink_trap_policer*, i64, i64, %struct.netlink_ext_ack*)*, i32 (%struct.devlink*, %struct.devlink_trap_policer*, i64*)*, i32 (%struct.devlink*, %struct.devlink_port*, i8*, i32*, %struct.netlink_ext_ack*)*, i32 (%struct.devlink*, %struct.devlink_port*, i8*, i32, %struct.netlink_ext_ack*)* }
%struct.devlink_sb_pool_info = type { i32, i32, i32, i32 }
%struct.devlink_info_req = type opaque
%struct.devlink_flash_update_params = type { i8*, i8*, i32 }
%struct.devlink_trap = type { i32, i32, i8, i16, i8*, i16, i32 }
%struct.devlink_trap_group = type { i8*, i16, i8, i32 }
%struct.devlink_trap_policer = type { i32, i64, i64, i64, i64, i64, i64 }
%struct.devlink_dev_stats = type { [6 x i32], [6 x i32] }
%struct.devlink_port_attrs = type { i8, i32, i32, %struct.netdev_phys_item_id, %union.anon.163 }
%union.anon.163 = type { %struct.devlink_port_pci_vf_attrs }
%struct.devlink_port_pci_vf_attrs = type { i32, i16, i16, i8 }
%struct.ip_tunnel_parm = type { [16 x i8], i32, i16, i16, i32, i32, %struct.iphdr }
%struct.iphdr = type { i8, i8, i16, i16, i16, i8, i8, i16, i32, i32 }
%struct.ethtool_ops = type { i32, void (%struct.net_device*, %struct.ethtool_drvinfo*)*, i32 (%struct.net_device*)*, void (%struct.net_device*, %struct.ethtool_regs*, i8*)*, void (%struct.net_device*, %struct.ethtool_wolinfo*)*, i32 (%struct.net_device*, %struct.ethtool_wolinfo*)*, i32 (%struct.net_device*)*, void (%struct.net_device*, i32)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, %struct.ethtool_link_ext_state_info*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, %struct.ethtool_eeprom*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_eeprom*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_coalesce*)*, i32 (%struct.net_device*, %struct.ethtool_coalesce*)*, void (%struct.net_device*, %struct.ethtool_ringparam*)*, i32 (%struct.net_device*, %struct.ethtool_ringparam*)*, void (%struct.net_device*, %struct.ethtool_pause_stats*)*, void (%struct.net_device*, %struct.ethtool_pauseparam*)*, i32 (%struct.net_device*, %struct.ethtool_pauseparam*)*, void (%struct.net_device*, %struct.ethtool_test*, i64*)*, void (%struct.net_device*, i32, i8*)*, i32 (%struct.net_device*, i32)*, void (%struct.net_device*, %struct.ethtool_stats*, i64*)*, i32 (%struct.net_device*)*, void (%struct.net_device*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, i32)*, i32 (%struct.net_device*, i32)*, i32 (%struct.net_device*, %struct.ethtool_rxnfc*, i32*)*, i32 (%struct.net_device*, %struct.ethtool_rxnfc*)*, i32 (%struct.net_device*, %struct.ethtool_flash*)*, i32 (%struct.net_device*, i32*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, i32*, i8*, i8*)*, i32 (%struct.net_device*, i32*, i8*, i8)*, i32 (%struct.net_device*, i32*, i8*, i8*, i32)*, i32 (%struct.net_device*, i32*, i8*, i8, i32*, i1)*, void (%struct.net_device*, %struct.ethtool_channels*)*, i32 (%struct.net_device*, %struct.ethtool_channels*)*, i32 (%struct.net_device*, %struct.ethtool_dump*)*, i32 (%struct.net_device*, %struct.ethtool_dump*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_dump*)*, i32 (%struct.net_device*, %struct.ethtool_ts_info*)*, i32 (%struct.net_device*, %struct.ethtool_modinfo*)*, i32 (%struct.net_device*, %struct.ethtool_eeprom*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_eee*)*, i32 (%struct.net_device*, %struct.ethtool_eee*)*, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)*, i32 (%struct.net_device*, i32, %struct.ethtool_coalesce*)*, i32 (%struct.net_device*, i32, %struct.ethtool_coalesce*)*, i32 (%struct.net_device*, %struct.ethtool_link_ksettings*)*, i32 (%struct.net_device*, %struct.ethtool_link_ksettings*)*, i32 (%struct.net_device*, %struct.ethtool_fecparam*)*, i32 (%struct.net_device*, %struct.ethtool_fecparam*)*, void (%struct.net_device*, %struct.ethtool_stats*, i64*)*, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)* }
%struct.ethtool_drvinfo = type { i32, [32 x i8], [32 x i8], [32 x i8], [32 x i8], [32 x i8], [12 x i8], i32, i32, i32, i32, i32 }
%struct.ethtool_regs = type { i32, i32, i32, [0 x i8] }
%struct.ethtool_wolinfo = type { i32, i32, i32, [6 x i8] }
%struct.ethtool_link_ext_state_info = type { i32, %union.anon.184 }
%union.anon.184 = type { i32 }
%struct.ethtool_coalesce = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.ethtool_ringparam = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.ethtool_pause_stats = type { i64, i64 }
%struct.ethtool_pauseparam = type { i32, i32, i32, i32 }
%struct.ethtool_test = type { i32, i32, i32, i32, [0 x i64] }
%struct.ethtool_rxnfc = type { i32, i32, i64, %struct.ethtool_rx_flow_spec, %union.anon.185, [0 x i32] }
%struct.ethtool_rx_flow_spec = type { i32, %union.ethtool_flow_union, %struct.ethtool_flow_ext, %union.ethtool_flow_union, %struct.ethtool_flow_ext, i64, i32 }
%union.ethtool_flow_union = type { %struct.ethtool_tcpip6_spec, [12 x i8] }
%struct.ethtool_tcpip6_spec = type { [4 x i32], [4 x i32], i16, i16, i8 }
%struct.ethtool_flow_ext = type { [2 x i8], [6 x i8], i16, i16, [2 x i32] }
%union.anon.185 = type { i32 }
%struct.ethtool_flash = type { i32, i32, [128 x i8] }
%struct.ethtool_channels = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.ethtool_dump = type { i32, i32, i32, i32, [0 x i8] }
%struct.ethtool_ts_info = type { i32, i32, i32, i32, [3 x i32], i32, [3 x i32] }
%struct.ethtool_modinfo = type { i32, i32, i32, [8 x i32] }
%struct.ethtool_eeprom = type { i32, i32, i32, i32, [0 x i8] }
%struct.ethtool_eee = type { i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.ethtool_link_ksettings = type { %struct.ethtool_link_settings, %struct.anon.186 }
%struct.ethtool_link_settings = type { i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [1 x i8], [7 x i32], [0 x i32] }
%struct.anon.186 = type { [2 x i64], [2 x i64], [2 x i64] }
%struct.ethtool_fecparam = type { i32, i32, i32, i32 }
%struct.ethtool_stats = type { i32, i32, [0 x i64] }
%struct.ethtool_tunable = type { i32, i32, i32, i32, [0 x i8*] }
%struct.ndisc_ops = type { i32 (i8)*, i32 (%struct.net_device*, %struct.nd_opt_hdr*, %struct.ndisc_options*)*, void (%struct.net_device*, %struct.neighbour*, i32, i8, %struct.ndisc_options*)*, i32 (%struct.net_device*, i8, %struct.neighbour*, i8*, i8**)*, void (%struct.net_device*, %struct.sk_buff*, i8, i8*)*, void (%struct.net*, %struct.net_device*, %struct.prefix_info*, %struct.inet6_dev*, %struct.in6_addr*, i32, i32, i1, i1, i32, i32, i1)* }
%struct.nd_opt_hdr = type { i8, i8 }
%struct.ndisc_options = type { [15 x %struct.nd_opt_hdr*], %struct.nd_opt_hdr*, %struct.nd_opt_hdr* }
%struct.prefix_info = type { i8, i8, i8, i8, i32, i32, i32, %struct.in6_addr }
%struct.header_ops = type { i32 (%struct.sk_buff*, %struct.net_device*, i16, i8*, i8*, i32)*, i32 (%struct.sk_buff*, i8*)*, i32 (%struct.neighbour*, %struct.hh_cache*, i16)*, void (%struct.hh_cache*, %struct.net_device*, i8*)*, i1 (i8*, i32)*, i16 (%struct.sk_buff*)* }
%struct.netdev_hw_addr_list = type { %struct.list_head, i32 }
%struct.vlan_info = type opaque
%struct.in_device = type opaque
%struct.inet6_dev = type { %struct.net_device*, %struct.list_head, %struct.ifmcaddr6*, %struct.ifmcaddr6*, %struct.spinlock, i8, i8, i8, i8, i64, i64, i64, i64, %struct.timer_list, %struct.timer_list, %struct.timer_list, %struct.ifacaddr6*, %struct.rwlock_t, %struct.refcount_struct, i32, i32, i32, %struct.list_head, %struct.in6_addr, %struct.neigh_parms*, %struct.ipv6_devconf, %struct.ipv6_devstat, %struct.timer_list, i32, i8, i64, %struct.callback_head }
%struct.ifmcaddr6 = type { %struct.in6_addr, %struct.inet6_dev*, %struct.ifmcaddr6*, %struct.ip6_sf_list*, %struct.ip6_sf_list*, i32, i8, [2 x i64], %struct.timer_list, i32, i32, %struct.refcount_struct, %struct.spinlock, i64, i64 }
%struct.ip6_sf_list = type { %struct.ip6_sf_list*, %struct.in6_addr, [2 x i64], i8, i8, i8 }
%struct.ifacaddr6 = type { %struct.in6_addr, %struct.fib6_info*, %struct.ifacaddr6*, %struct.hlist_node, i32, %struct.refcount_struct, i64, i64, %struct.callback_head }
%struct.fib6_info = type { %struct.fib6_table*, %struct.fib6_info*, %struct.fib6_node*, %union.anon.100, i32, %struct.refcount_struct, i64, %struct.dst_metrics*, %struct.rt6key, i32, %struct.rt6key, %struct.rt6key, i32, i8, i8, i8, %struct.callback_head, %struct.nexthop*, [0 x %struct.fib6_nh] }
%struct.fib6_table = type { %struct.hlist_node, i32, %struct.spinlock, %struct.fib6_node, %struct.inet_peer_base, i32, i32 }
%struct.fib6_node = type { %struct.fib6_node*, %struct.fib6_node*, %struct.fib6_node*, %struct.fib6_info*, i16, i16, i32, %struct.fib6_info*, %struct.callback_head }
%struct.inet_peer_base = type { %struct.rb_root, %struct.seqlock_t, i32 }
%union.anon.100 = type { %struct.list_head }
%struct.dst_metrics = type { [17 x i32], %struct.refcount_struct }
%struct.rt6key = type { %struct.in6_addr, i32 }
%struct.nexthop = type { %struct.rb_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.net*, i32, i8, i8, i8, %struct.refcount_struct, %struct.callback_head, %union.anon.101 }
%union.anon.101 = type { %struct.nh_info* }
%struct.nh_info = type { %struct.hlist_node, %struct.nexthop*, i8, i8, i8, %union.anon.102 }
%union.anon.102 = type { %struct.fib_nh }
%struct.fib_nh = type { %struct.fib_nh_common, %struct.hlist_node, %struct.fib_info*, i32, i32 }
%struct.fib_nh_common = type { %struct.net_device*, i32, i8, i8, i8, i8, %struct.lwtunnel_state*, %union.anon.103, i32, %struct.atomic_t, %struct.rtable**, %struct.rtable*, %struct.fnhe_hash_bucket* }
%struct.lwtunnel_state = type { i16, i16, i16, %struct.atomic_t, i32 (%struct.net*, %struct.sock*, %struct.sk_buff*)*, i32 (%struct.sk_buff*)*, %struct.callback_head, [0 x i8] }
%union.anon.103 = type { %struct.in6_addr }
%struct.rtable = type { %struct.dst_entry, i32, i32, i16, i8, i8, i32, i8, %union.anon.104, i32, %struct.list_head, %struct.uncached_list* }
%struct.dst_entry = type { %struct.net_device*, %struct.dst_ops*, i64, i64, i8*, i32 (%struct.sk_buff*)*, i32 (%struct.net*, %struct.sock*, %struct.sk_buff*)*, i16, i16, i16, i16, %struct.atomic_t, i32, i64, %struct.lwtunnel_state*, %struct.callback_head, i16, i16, i32 }
%struct.dst_ops = type { i16, i32, i32 (%struct.dst_ops*)*, %struct.dst_entry* (%struct.dst_entry*, i32)*, i32 (%struct.dst_entry*)*, i32 (%struct.dst_entry*)*, i32* (%struct.dst_entry*, i64)*, void (%struct.dst_entry*)*, void (%struct.dst_entry*, %struct.net_device*, i32)*, %struct.dst_entry* (%struct.dst_entry*)*, void (%struct.sk_buff*)*, void (%struct.dst_entry*, %struct.sock*, %struct.sk_buff*, i32, i1)*, void (%struct.dst_entry*, %struct.sock*, %struct.sk_buff*)*, i32 (%struct.net*, %struct.sock*, %struct.sk_buff*)*, %struct.neighbour* (%struct.dst_entry*, %struct.sk_buff*, i8*)*, void (%struct.dst_entry*, i8*)*, %struct.kmem_cache*, %struct.percpu_counter }
%struct.percpu_counter = type { i64 }
%union.anon.104 = type { %struct.in6_addr }
%struct.uncached_list = type opaque
%struct.fnhe_hash_bucket = type { %struct.fib_nh_exception* }
%struct.fib_nh_exception = type { %struct.fib_nh_exception*, i32, i32, i32, i8, i32, i64, %struct.rtable*, %struct.rtable*, i64, %struct.callback_head }
%struct.fib_info = type { %struct.hlist_node, %struct.hlist_node, %struct.list_head, %struct.net*, i32, %struct.refcount_struct, i32, i8, i8, i8, i8, i32, i32, i32, %struct.dst_metrics*, i32, i8, i8, %struct.nexthop*, %struct.callback_head, [0 x %struct.fib_nh] }
%struct.fib6_nh = type { %struct.fib_nh_common, %struct.rt6_info**, %struct.rt6_exception_bucket* }
%struct.rt6_info = type { %struct.dst_entry, %struct.fib6_info*, i32, %struct.rt6key, %struct.rt6key, %struct.in6_addr, %struct.inet6_dev*, i32, %struct.list_head, %struct.uncached_list*, i16 }
%struct.rt6_exception_bucket = type { %struct.hlist_head, i32 }
%struct.ipv6_devconf = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.ipv6_stable_secret, i32, i32, i32, i32, i32, i32, i32, i32, %struct.ctl_table_header* }
%struct.ipv6_stable_secret = type { i8, %struct.in6_addr }
%struct.ipv6_devstat = type { %struct.proc_dir_entry*, %struct.ipstats_mib*, %struct.icmpv6_mib_device*, %struct.icmpv6msg_mib_device* }
%struct.ipstats_mib = type { [37 x i64], %struct.u64_stats_sync }
%struct.u64_stats_sync = type {}
%struct.icmpv6_mib_device = type { [6 x %struct.atomic64_t] }
%struct.icmpv6msg_mib_device = type { [512 x %struct.atomic64_t] }
%struct.wireless_dev = type opaque
%struct.wpan_dev = type opaque
%struct.netdev_rx_queue = type { %struct.kobject, %struct.net_device*, [56 x i8], %struct.xdp_rxq_info }
%struct.xdp_rxq_info = type { %struct.net_device*, i32, i32, %struct.xdp_mem_info, [40 x i8] }
%struct.bpf_prog = type { i16, i16, i32, i32, i32, i32, [8 x i8], %struct.bpf_prog_aux*, %struct.sock_fprog_kern*, i32 (i8*, %struct.bpf_insn*)*, [0 x %struct.sock_filter], [0 x %struct.bpf_insn] }
%struct.bpf_prog_aux = type { %struct.atomic64_t, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.bpf_ctx_arg_aux*, %struct.mutex, %struct.bpf_prog*, %struct.bpf_trampoline*, i32, i32, i8, i8, i8, i8, i8, i8, i32, %struct.hlist_node, %struct.btf_type*, i8*, %struct.bpf_prog**, i8*, %struct.bpf_jit_poke_descriptor*, i32, %struct.bpf_ksym, %struct.bpf_prog_ops*, %struct.bpf_map**, %struct.mutex, %struct.bpf_prog*, %struct.user_struct*, i64, [2 x %struct.bpf_map*], [16 x i8], %struct.bpf_prog_offload*, %struct.btf*, %struct.bpf_func_info*, %struct.bpf_func_info_aux*, %struct.bpf_line_info*, i8**, i32, i32, i32, i32, %struct.exception_table_entry*, %struct.bpf_prog_stats*, %union.anon.92 }
%struct.bpf_ctx_arg_aux = type { i32, i32, i32 }
%struct.bpf_trampoline = type { %struct.hlist_node, %struct.mutex, %struct.refcount_struct, i64, %struct.anon.65, %struct.bpf_prog*, [3 x %struct.hlist_head], [3 x i32], i8*, i64, %struct.bpf_ksym }
%struct.anon.65 = type { %struct.btf_func_model, i8*, i8 }
%struct.btf_func_model = type { i8, i8, [12 x i8] }
%struct.btf_type = type opaque
%struct.bpf_jit_poke_descriptor = type { i8*, i8*, i8*, %union.anon.66, i8, i8, i16, i32 }
%union.anon.66 = type { %struct.anon.67 }
%struct.anon.67 = type { %struct.bpf_map*, i32 }
%struct.bpf_map = type { %struct.bpf_map_ops*, %struct.bpf_map*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.btf*, %struct.bpf_map_memory, [16 x i8], i32, i8, i8, [26 x i8], %struct.atomic64_t, %struct.atomic64_t, %struct.work_struct, %struct.mutex, i64, [48 x i8] }
%struct.bpf_map_ops = type { i32 (%union.bpf_attr*)*, %struct.bpf_map* (%union.bpf_attr*)*, void (%struct.bpf_map*, %struct.file*)*, void (%struct.bpf_map*)*, i32 (%struct.bpf_map*, i8*, i8*)*, void (%struct.bpf_map*)*, i8* (%struct.bpf_map*, i8*)*, i32 (%struct.bpf_map*, %union.bpf_attr*, %union.bpf_attr*)*, i32 (%struct.bpf_map*, %union.bpf_attr*, %union.bpf_attr*)*, i32 (%struct.bpf_map*, %union.bpf_attr*, %union.bpf_attr*)*, i32 (%struct.bpf_map*, %union.bpf_attr*, %union.bpf_attr*)*, i8* (%struct.bpf_map*, i8*)*, i32 (%struct.bpf_map*, i8*, i8*, i64)*, i32 (%struct.bpf_map*, i8*)*, i32 (%struct.bpf_map*, i8*, i64)*, i32 (%struct.bpf_map*, i8*)*, i32 (%struct.bpf_map*, i8*)*, i8* (%struct.bpf_map*, %struct.file*, i32)*, void (i8*)*, i32 (%struct.bpf_map*, %struct.bpf_insn*)*, i32 (i8*)*, void (%struct.bpf_map*, i8*, %struct.seq_file*)*, i32 (%struct.bpf_map*, %struct.btf*, %struct.btf_type*, %struct.btf_type*)*, i32 (%struct.bpf_map*, %struct.bpf_prog_aux*)*, void (%struct.bpf_map*, %struct.bpf_prog_aux*)*, void (%struct.bpf_map*, i32, %struct.bpf_prog*, %struct.bpf_prog*)*, i32 (%struct.bpf_map*, i64*, i32)*, i32 (%struct.bpf_map*, i64, i32*)*, i32 (%struct.bpf_map*, %struct.vm_area_struct*)*, i32 (%struct.bpf_map*, %struct.file*, %struct.poll_table_struct*)*, i32 (%struct.bpf_local_storage_map*, i8*, i32)*, void (%struct.bpf_local_storage_map*, i8*, i32)*, %struct.bpf_local_storage** (i8*)*, i1 (%struct.bpf_map*, %struct.bpf_map*)*, i8*, i32*, %struct.bpf_iter_seq_info* }
%union.bpf_attr = type { %struct.anon.72 }
%struct.anon.72 = type { i32, i32, i64, i64, i32, i32, i64, i32, i32, [16 x i8], i32, i32, i32, i32, i64, i32, i32, i64, i32, i32, i32 }
%struct.bpf_insn = type { i8, i8, i16, i32 }
%struct.poll_table_struct = type { void (%struct.file*, %struct.wait_queue_head*, %struct.poll_table_struct*)*, i32 }
%struct.bpf_local_storage_map = type opaque
%struct.bpf_local_storage = type opaque
%struct.bpf_iter_seq_info = type { %struct.seq_operations*, i32 (i8*, %struct.bpf_iter_aux_info*)*, void (i8*)*, i32 }
%struct.bpf_iter_aux_info = type opaque
%struct.bpf_map_memory = type { i32, %struct.user_struct* }
%struct.bpf_ksym = type { i64, i64, [128 x i8], %struct.list_head, %struct.latch_tree_node, i8 }
%struct.latch_tree_node = type { [2 x %struct.rb_node] }
%struct.bpf_prog_ops = type { i32 (%struct.bpf_prog*, %union.bpf_attr*, %union.bpf_attr*)* }
%struct.user_struct = type { %struct.refcount_struct, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i64, i64, %struct.atomic64_t, %struct.hlist_node, %struct.kuid_t, %struct.atomic64_t, %struct.ratelimit_state }
%struct.ratelimit_state = type { %struct.raw_spinlock, i32, i32, i32, i32, i64, i64 }
%struct.bpf_prog_offload = type { %struct.bpf_prog*, %struct.net_device*, %struct.bpf_offload_dev*, i8*, %struct.list_head, i8, i8, i8*, i32 }
%struct.bpf_offload_dev = type opaque
%struct.btf = type opaque
%struct.bpf_func_info = type { i32, i32 }
%struct.bpf_func_info_aux = type { i16, i8 }
%struct.bpf_line_info = type { i32, i32, i32, i32 }
%struct.exception_table_entry = type { i32, i32, i32 }
%struct.bpf_prog_stats = type { i64, i64, %struct.u64_stats_sync }
%union.anon.92 = type { %struct.work_struct }
%struct.sock_fprog_kern = type { i16, %struct.sock_filter* }
%struct.sock_filter = type { i16, i8, i8, i32 }
%struct.netdev_queue = type { %struct.net_device*, %struct.Qdisc*, %struct.Qdisc*, %struct.kobject, i64, i64, %struct.net_device*, %struct.spinlock, i32, i64, i64, %struct.dql }
%struct.dql = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32 }
%struct.Qdisc = type { i32 (%struct.sk_buff*, %struct.Qdisc*, %struct.sk_buff**)*, %struct.sk_buff* (%struct.Qdisc*)*, i32, i32, %struct.Qdisc_ops*, %struct.qdisc_size_table*, %struct.hlist_node, i32, i32, %struct.netdev_queue*, %struct.net_rate_estimator*, %struct.gnet_stats_basic_cpu*, %struct.gnet_stats_queue*, i32, %struct.refcount_struct, %struct.sk_buff_head, %struct.qdisc_skb_head, %struct.gnet_stats_basic_packed, %struct.seqcount, %struct.gnet_stats_queue, i64, %struct.Qdisc*, %struct.sk_buff_head, %struct.spinlock, %struct.spinlock, i8, %struct.callback_head, [0 x i64] }
%struct.Qdisc_ops = type { %struct.Qdisc_ops*, %struct.Qdisc_class_ops*, [16 x i8], i32, i32, i32 (%struct.sk_buff*, %struct.Qdisc*, %struct.sk_buff**)*, %struct.sk_buff* (%struct.Qdisc*)*, %struct.sk_buff* (%struct.Qdisc*)*, i32 (%struct.Qdisc*, %struct.nlattr*, %struct.netlink_ext_ack*)*, void (%struct.Qdisc*)*, void (%struct.Qdisc*)*, i32 (%struct.Qdisc*, %struct.nlattr*, %struct.netlink_ext_ack*)*, void (%struct.Qdisc*)*, i32 (%struct.Qdisc*, i32)*, i32 (%struct.Qdisc*, %struct.sk_buff*)*, i32 (%struct.Qdisc*, %struct.gnet_dump*)*, void (%struct.Qdisc*, i32)*, void (%struct.Qdisc*, i32)*, i32 (%struct.Qdisc*)*, i32 (%struct.Qdisc*)*, %struct.module* }
%struct.Qdisc_class_ops = type { i32, %struct.netdev_queue* (%struct.Qdisc*, %struct.tcmsg*)*, i32 (%struct.Qdisc*, i64, %struct.Qdisc*, %struct.Qdisc**, %struct.netlink_ext_ack*)*, %struct.Qdisc* (%struct.Qdisc*, i64)*, void (%struct.Qdisc*, i64)*, i64 (%struct.Qdisc*, i32)*, i32 (%struct.Qdisc*, i32, i32, %struct.nlattr**, i64*, %struct.netlink_ext_ack*)*, i32 (%struct.Qdisc*, i64)*, void (%struct.Qdisc*, %struct.qdisc_walker*)*, %struct.tcf_block* (%struct.Qdisc*, i64, %struct.netlink_ext_ack*)*, i64 (%struct.Qdisc*, i64, i32)*, void (%struct.Qdisc*, i64)*, i32 (%struct.Qdisc*, i64, %struct.sk_buff*, %struct.tcmsg*)*, i32 (%struct.Qdisc*, i64, %struct.gnet_dump*)* }
%struct.tcmsg = type { i8, i8, i16, i32, i32, i32, i32 }
%struct.qdisc_walker = type { i32, i32, i32, i32 (%struct.Qdisc*, i64, %struct.qdisc_walker*)* }
%struct.tcf_block = type { %struct.mutex, %struct.list_head, i32, i32, %struct.refcount_struct, %struct.net*, %struct.Qdisc*, %struct.rw_semaphore, %struct.flow_block, %struct.list_head, i8, %struct.atomic_t, i32, i32, %struct.anon.187, %struct.callback_head, [128 x %struct.hlist_head], %struct.mutex }
%struct.flow_block = type { %struct.list_head }
%struct.anon.187 = type { %struct.tcf_chain*, %struct.list_head }
%struct.tcf_chain = type { %struct.mutex, %struct.tcf_proto*, %struct.list_head, %struct.tcf_block*, i32, i32, i32, i8, i8, %struct.tcf_proto_ops*, i8*, %struct.callback_head }
%struct.tcf_proto = type { %struct.tcf_proto*, i8*, i32 (%struct.sk_buff*, %struct.tcf_proto*, %struct.tcf_result*)*, i16, i32, i8*, %struct.tcf_proto_ops*, %struct.tcf_chain*, %struct.spinlock, i8, %struct.refcount_struct, %struct.callback_head, %struct.hlist_node }
%struct.tcf_result = type { %union.anon.188 }
%union.anon.188 = type { %struct.anon.189 }
%struct.anon.189 = type { i64, i32 }
%struct.tcf_proto_ops = type { %struct.list_head, [16 x i8], i32 (%struct.sk_buff*, %struct.tcf_proto*, %struct.tcf_result*)*, i32 (%struct.tcf_proto*)*, void (%struct.tcf_proto*, i1, %struct.netlink_ext_ack*)*, i8* (%struct.tcf_proto*, i32)*, void (%struct.tcf_proto*, i8*)*, i32 (%struct.net*, %struct.sk_buff*, %struct.tcf_proto*, i64, i32, %struct.nlattr**, i8**, i1, i1, %struct.netlink_ext_ack*)*, i32 (%struct.tcf_proto*, i8*, i8*, i1, %struct.netlink_ext_ack*)*, i1 (%struct.tcf_proto*)*, void (%struct.tcf_proto*, %struct.tcf_walker*, i1)*, i32 (%struct.tcf_proto*, i1, i32 (i32, i8*, i8*)*, i8*, %struct.netlink_ext_ack*)*, void (%struct.tcf_proto*, i8*)*, void (%struct.tcf_proto*, i8*)*, void (i8*, i32, i64, i8*, i64)*, i8* (%struct.net*, %struct.tcf_chain*, %struct.nlattr**, %struct.netlink_ext_ack*)*, void (i8*)*, i32 (%struct.net*, %struct.tcf_proto*, i8*, %struct.sk_buff*, %struct.tcmsg*, i1)*, i32 (%struct.net*, %struct.tcf_proto*, i8*, %struct.sk_buff*, %struct.tcmsg*, i1)*, i32 (%struct.sk_buff*, %struct.net*, i8*)*, %struct.module*, i32 }
%struct.tcf_walker = type { i32, i32, i32, i8, i64, i32 (%struct.tcf_proto*, i8*, %struct.tcf_walker*)* }
%struct.gnet_dump = type { %struct.spinlock*, %struct.sk_buff*, %struct.nlattr*, i32, i32, i32, i8*, i32, %struct.tc_stats }
%struct.tc_stats = type { i64, i32, i32, i32, i32, i32, i32, i32 }
%struct.qdisc_size_table = type { %struct.callback_head, %struct.list_head, %struct.tc_sizespec, i32, [0 x i16] }
%struct.tc_sizespec = type { i8, i8, i16, i32, i32, i32, i32, i32 }
%struct.net_rate_estimator = type opaque
%struct.gnet_stats_basic_cpu = type { %struct.gnet_stats_basic_packed, %struct.u64_stats_sync }
%struct.qdisc_skb_head = type { %struct.sk_buff*, %struct.sk_buff*, i32, %struct.spinlock }
%struct.gnet_stats_basic_packed = type { i64, i64 }
%struct.gnet_stats_queue = type { i32, i32, i32, i32, i32 }
%struct.xdp_dev_bulk_queue = type opaque
%union.anon.191 = type { i8* }
%struct.attribute_group = type { i8*, i16 (%struct.kobject*, %struct.attribute*, i32)*, i16 (%struct.kobject*, %struct.bin_attribute*, i32)*, %struct.attribute**, %struct.bin_attribute** }
%struct.bin_attribute = type { %struct.attribute, i64, i8*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i32 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, %struct.vm_area_struct*)* }
%struct.rtnl_link_ops = type { %struct.list_head, i8*, i64, void (%struct.net_device*)*, i32, %struct.nla_policy*, i32 (%struct.nlattr**, %struct.nlattr**, %struct.netlink_ext_ack*)*, i32 (%struct.net*, %struct.net_device*, %struct.nlattr**, %struct.nlattr**, %struct.netlink_ext_ack*)*, i32 (%struct.net_device*, %struct.nlattr**, %struct.nlattr**, %struct.netlink_ext_ack*)*, void (%struct.net_device*, %struct.list_head*)*, i64 (%struct.net_device*)*, i32 (%struct.sk_buff*, %struct.net_device*)*, i64 (%struct.net_device*)*, i32 (%struct.sk_buff*, %struct.net_device*)*, i32 ()*, i32 ()*, i32, %struct.nla_policy*, i32 (%struct.net_device*, %struct.net_device*, %struct.nlattr**, %struct.nlattr**, %struct.netlink_ext_ack*)*, i64 (%struct.net_device*, %struct.net_device*)*, i32 (%struct.sk_buff*, %struct.net_device*, %struct.net_device*)*, %struct.net* (%struct.net_device*)*, i64 (%struct.net_device*, i32)*, i32 (%struct.sk_buff*, %struct.net_device*, i32*, i32)* }
%struct.netdev_tc_txq = type { i16, i16 }
%struct.phy_device = type opaque
%struct.sfp_bus = type opaque
%struct.udp_tunnel_nic_info = type { i32 (%struct.net_device*, i32, i32, %struct.udp_tunnel_info*)*, i32 (%struct.net_device*, i32, i32, %struct.udp_tunnel_info*)*, i32 (%struct.net_device*, i32)*, %struct.udp_tunnel_nic_shared*, i32, [4 x %struct.udp_tunnel_nic_table_info] }
%struct.udp_tunnel_nic_shared = type { %struct.udp_tunnel_nic*, %struct.list_head }
%struct.udp_tunnel_nic_table_info = type { i32, i32 }
%struct.udp_tunnel_nic = type opaque
%struct.bpf_xdp_entity = type { %struct.bpf_prog*, %struct.bpf_xdp_link* }
%struct.bpf_xdp_link = type opaque
%struct.netns_core = type { %struct.ctl_table_header*, i32, i32*, %struct.prot_inuse* }
%struct.prot_inuse = type opaque
%struct.netns_mib = type { %struct.tcp_mib*, %struct.ipstats_mib*, %struct.linux_mib*, %struct.udp_mib*, %struct.udp_mib*, %struct.icmp_mib*, %struct.icmpmsg_mib*, %struct.proc_dir_entry*, %struct.udp_mib*, %struct.udp_mib*, %struct.ipstats_mib*, %struct.icmpv6_mib*, %struct.icmpv6msg_mib* }
%struct.tcp_mib = type { [16 x i64] }
%struct.linux_mib = type { [124 x i64] }
%struct.icmp_mib = type { [28 x i64] }
%struct.icmpmsg_mib = type { [512 x %struct.atomic64_t] }
%struct.udp_mib = type { [9 x i64] }
%struct.icmpv6_mib = type { [6 x i64] }
%struct.icmpv6msg_mib = type { [512 x %struct.atomic64_t] }
%struct.netns_packet = type { %struct.mutex, %struct.hlist_head }
%struct.netns_unix = type { i32, %struct.ctl_table_header* }
%struct.netns_nexthop = type { %struct.rb_root, %struct.hlist_head*, i32, i32, %struct.blocking_notifier_head }
%struct.blocking_notifier_head = type { %struct.rw_semaphore, %struct.notifier_block* }
%struct.netns_ipv4 = type { %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ipv4_devconf*, %struct.ipv4_devconf*, %struct.ip_ra_chain*, %struct.mutex, i8, %struct.hlist_head*, i8, %struct.sock*, %struct.sock**, %struct.sock*, %struct.inet_peer_base*, %struct.sock**, %struct.fqdir*, i32, i32, i32, i32, i32, i32, %struct.local_ports, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [3 x i32], [3 x i32], i32, i64, i64, %struct.inet_timewait_death_row, i32, i32, %struct.tcp_congestion_ops*, %struct.tcp_fastopen_context*, %struct.spinlock, i32, %struct.atomic_t, i64, i32, i32, i32, i32, i32, i32, i32, %struct.ping_group_range, %struct.atomic_t, i64*, i32, %struct.fib_notifier_ops*, i32, %struct.fib_notifier_ops*, i32, %struct.atomic_t, %struct.siphash_key_t }
%struct.ipv4_devconf = type opaque
%struct.ip_ra_chain = type { %struct.ip_ra_chain*, %struct.sock*, %union.anon.98, %struct.callback_head }
%union.anon.98 = type { void (%struct.sock*)* }
%struct.fqdir = type { i64, i64, i32, i32, %struct.inet_frags*, %struct.net*, i8, %struct.rhashtable, %struct.atomic64_t, %struct.work_struct }
%struct.inet_frags = type { i32, void (%struct.inet_frag_queue*, i8*)*, void (%struct.inet_frag_queue*)*, void (%struct.timer_list*)*, %struct.kmem_cache*, i8*, %struct.rhashtable_params, %struct.refcount_struct, %struct.completion }
%struct.inet_frag_queue = type { %struct.rhash_head, %union.anon.99, %struct.timer_list, %struct.spinlock, %struct.refcount_struct, %struct.rb_root, %struct.sk_buff*, %struct.sk_buff*, i64, i32, i32, i8, i16, %struct.fqdir*, %struct.callback_head }
%struct.rhash_head = type { %struct.rhash_head* }
%union.anon.99 = type { %struct.frag_v6_compare_key }
%struct.frag_v6_compare_key = type { %struct.in6_addr, %struct.in6_addr, i32, i32, i32 }
%struct.rhashtable_params = type { i16, i16, i16, i16, i32, i16, i8, i32 (i8*, i32, i32)*, i32 (i8*, i32, i32)*, i32 (%struct.rhashtable_compare_arg*, i8*)* }
%struct.rhashtable_compare_arg = type { %struct.rhashtable*, i8* }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.rhashtable = type { %struct.bucket_table*, i32, i32, %struct.rhashtable_params, i8, %struct.work_struct, %struct.mutex, %struct.spinlock, %struct.atomic_t }
%struct.bucket_table = type { i32, i32, i32, %struct.list_head, %struct.callback_head, %struct.bucket_table*, %struct.lockdep_map, [0 x %struct.rhash_lock_head*] }
%struct.lockdep_map = type {}
%struct.rhash_lock_head = type {}
%struct.local_ports = type { %struct.seqlock_t, [2 x i32], i8 }
%struct.inet_timewait_death_row = type { %struct.atomic_t, %struct.inet_hashinfo*, i32 }
%struct.inet_hashinfo = type opaque
%struct.tcp_congestion_ops = type opaque
%struct.tcp_fastopen_context = type opaque
%struct.ping_group_range = type { %struct.seqlock_t, [2 x %struct.kgid_t] }
%struct.fib_notifier_ops = type { i32, %struct.list_head, i32 (%struct.net*)*, i32 (%struct.net*, %struct.notifier_block*, %struct.netlink_ext_ack*)*, %struct.module*, %struct.callback_head }
%struct.siphash_key_t = type { [2 x i64] }
%struct.netns_ipv6 = type { %struct.netns_sysctl_ipv6, %struct.ipv6_devconf*, %struct.ipv6_devconf*, %struct.inet_peer_base*, %struct.fqdir*, %struct.fib6_info*, %struct.rt6_info*, %struct.rt6_statistics*, %struct.timer_list, %struct.hlist_head*, %struct.fib6_table*, %struct.list_head, %struct.dst_ops, %struct.rwlock_t, %struct.spinlock, i32, i64, %struct.sock**, %struct.sock*, %struct.sock*, %struct.sock*, %struct.sock*, %struct.atomic_t, %struct.atomic_t, %struct.seg6_pernet_data*, %struct.fib_notifier_ops*, %struct.fib_notifier_ops*, i32, %struct.anon.105 }
%struct.netns_sysctl_ipv6 = type { %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i64], i64*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8 }
%struct.rt6_statistics = type { i32, i32, i32, i32, i32, %struct.atomic_t, %struct.atomic_t }
%struct.seg6_pernet_data = type opaque
%struct.anon.105 = type { %struct.hlist_head, %struct.spinlock, i32 }
%struct.net_generic = type { %union.anon.106 }
%union.anon.106 = type { %struct.anon.107 }
%struct.anon.107 = type { i32, %struct.callback_head }
%struct.netns_bpf = type { [2 x %struct.bpf_prog_array*], [2 x %struct.bpf_prog*], [2 x %struct.list_head] }
%struct.bpf_prog_array = type { %struct.callback_head, [0 x %struct.bpf_prog_array_item] }
%struct.bpf_prog_array_item = type { %struct.bpf_prog*, [2 x %struct.bpf_cgroup_storage*] }
%struct.bpf_cgroup_storage = type opaque
%struct.netns_can = type { %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.can_dev_rcv_lists*, %struct.spinlock, %struct.timer_list, %struct.can_pkg_stats*, %struct.can_rcv_lists_stats*, %struct.hlist_head }
%struct.can_dev_rcv_lists = type opaque
%struct.can_pkg_stats = type opaque
%struct.can_rcv_lists_stats = type opaque
%struct.in6_addr = type { %union.anon.59 }
%union.anon.59 = type { [4 x i32] }
%union.anon.60 = type { i64 }
%union.anon.61 = type { %struct.hlist_node }
%union.anon.62 = type { i32 }
%union.anon.63 = type { i32 }
%struct.socket_lock_t = type { %struct.spinlock, i32, %struct.wait_queue_head }
%struct.anon.64 = type { %struct.atomic_t, i32, %struct.sk_buff*, %struct.sk_buff* }
%struct.sk_filter = type { %struct.refcount_struct, %struct.callback_head, %struct.bpf_prog* }
%union.anon.93 = type { %struct.socket_wq* }
%struct.socket_wq = type { %struct.wait_queue_head, %struct.fasync_struct*, i64, %struct.callback_head }
%struct.fasync_struct = type { %struct.rwlock_t, i32, i32, %struct.fasync_struct*, %struct.file*, %struct.callback_head }
%union.anon.96 = type { %struct.sk_buff* }
%struct.sk_buff = type { %union.anon.46, %union.anon.49, %union.anon.50, [48 x i8], %union.anon.51, i32, i32, i16, i16, i16, [0 x i8], i8, [0 x i32], [0 x i8], i16, [0 x i8], i16, %union.anon.53, i32, i32, i32, i16, i16, %union.anon.55, %union.anon.56, %union.anon.57, i16, i16, i16, i16, i16, i16, i16, [0 x i32], i32, i32, i8*, i8*, i32, %struct.refcount_struct }
%union.anon.46 = type { %struct.anon.47 }
%struct.anon.47 = type { %struct.sk_buff*, %struct.sk_buff*, %union.anon.48 }
%union.anon.48 = type { %struct.net_device* }
%union.anon.49 = type { %struct.sock* }
%union.anon.50 = type { i64 }
%union.anon.51 = type { %struct.anon.52 }
%struct.anon.52 = type { i64, void (%struct.sk_buff*)* }
%union.anon.53 = type { i32 }
%union.anon.55 = type { i32 }
%union.anon.56 = type { i32 }
%union.anon.57 = type { i16 }
%struct.sk_buff_head = type { %struct.sk_buff*, %struct.sk_buff*, i32, %struct.spinlock }
%struct.timer_list = type { %struct.hlist_node, i64, void (%struct.timer_list*)*, i32 }
%struct.proto = type { void (%struct.sock*, i64)*, i32 (%struct.sock*, %struct.sockaddr*, i32)*, i32 (%struct.sock*, %struct.sockaddr*, i32)*, i32 (%struct.sock*, i32)*, %struct.sock* (%struct.sock*, i32, i32*, i1)*, i32 (%struct.sock*, i32, i64)*, i32 (%struct.sock*)*, void (%struct.sock*)*, void (%struct.sock*, i32)*, i32 (%struct.sock*, i32, i32, i8*, i8, i32)*, i32 (%struct.sock*, i32, i32, i8*, i32*)*, void (%struct.sock*, i32)*, i32 (%struct.sock*, %struct.msghdr*, i64)*, i32 (%struct.sock*, %struct.msghdr*, i64, i32, i32, i32*)*, i32 (%struct.sock*, %struct.page*, i32, i64, i32)*, i32 (%struct.sock*, %struct.sockaddr*, i32)*, i32 (%struct.sock*, %struct.sockaddr*, i32)*, i32 (%struct.sock*, %struct.sk_buff*)*, void (%struct.sock*)*, i32 (%struct.sock*)*, void (%struct.sock*)*, void (%struct.sock*)*, i32 (%struct.sock*, i16)*, i32, i1 (%struct.sock*, i32)*, i1 (%struct.sock*)*, void (%struct.sock*)*, void (%struct.sock*)*, %struct.atomic64_t*, %struct.percpu_counter*, i64*, i64*, i32*, i32*, i32, i32, i32, i8, %struct.kmem_cache*, i32, i32, i32, i32, %struct.percpu_counter*, %struct.request_sock_ops*, %struct.timewait_sock_ops*, %union.anon.58, %struct.module*, [32 x i8], %struct.list_head, i32 (%struct.sock*, i32)* }
%struct.msghdr = type { i8*, i32, %struct.iov_iter, %union.anon.45, i8, i64, i32, %struct.kiocb* }
%struct.iov_iter = type { i32, i64, i64, %union.anon.5, %union.anon.6 }
%union.anon.5 = type { %struct.iovec* }
%struct.iovec = type { i8*, i64 }
%union.anon.6 = type { i64 }
%union.anon.45 = type { i8* }
%struct.kiocb = type { %struct.file*, i64, void (%struct.kiocb*, i64, i64)*, i8*, i32, i16, i16, %union.anon.4 }
%union.anon.4 = type { %struct.wait_page_queue* }
%struct.wait_page_queue = type { %struct.page*, i32, %struct.wait_queue_entry }
%struct.wait_queue_entry = type { i32, i8*, i32 (%struct.wait_queue_entry*, i32, i32, i8*)*, %struct.list_head }
%struct.sockaddr = type { i16, [14 x i8] }
%struct.request_sock_ops = type { i32, i32, %struct.kmem_cache*, i8*, i32 (%struct.sock*, %struct.request_sock*)*, void (%struct.sock*, %struct.sk_buff*, %struct.request_sock*)*, void (%struct.sock*, %struct.sk_buff*)*, void (%struct.request_sock*)*, void (%struct.request_sock*)* }
%struct.request_sock = type { %struct.sock_common, %struct.request_sock*, i16, i8, i8, i32, %struct.timer_list, %struct.request_sock_ops*, %struct.sock*, %struct.saved_syn*, i32, i32 }
%struct.saved_syn = type { i32, i32, i32, [0 x i8] }
%struct.timewait_sock_ops = type { %struct.kmem_cache*, i8*, i32, i32 (%struct.sock*, %struct.sock*, i8*)*, void (%struct.sock*)* }
%union.anon.58 = type { %struct.inet_hashinfo* }
%struct.rwlock_t = type { %struct.arch_rwlock_t }
%struct.arch_rwlock_t = type {}
%struct.socket = type { i32, i16, i64, %struct.file*, %struct.sock*, %struct.proto_ops*, %struct.socket_wq }
%struct.proto_ops = type { i32, i32, %struct.module*, i32 (%struct.socket*)*, i32 (%struct.socket*, %struct.sockaddr*, i32)*, i32 (%struct.socket*, %struct.sockaddr*, i32, i32)*, i32 (%struct.socket*, %struct.socket*)*, i32 (%struct.socket*, %struct.socket*, i32, i1)*, i32 (%struct.socket*, %struct.sockaddr*, i32)*, i32 (%struct.file*, %struct.socket*, %struct.poll_table_struct*)*, i32 (%struct.socket*, i32, i64)*, i32 (%struct.socket*, i8*, i1, i1)*, i32 (%struct.socket*, i32)*, i32 (%struct.socket*, i32)*, i32 (%struct.socket*, i32, i32, i8*, i8, i32)*, i32 (%struct.socket*, i32, i32, i8*, i32*)*, void (%struct.seq_file*, %struct.socket*)*, i32 (%struct.socket*, %struct.msghdr*, i64)*, i32 (%struct.socket*, %struct.msghdr*, i64, i32)*, i32 (%struct.file*, %struct.socket*, %struct.vm_area_struct*)*, i64 (%struct.socket*, %struct.page*, i32, i64, i32)*, i64 (%struct.socket*, i64*, %struct.pipe_inode_info*, i64, i32)*, i32 (%struct.sock*, i32)*, i32 (%struct.socket*)*, i32 (%struct.sock*, %struct.read_descriptor_t*, i32 (%struct.read_descriptor_t*, %struct.sk_buff*, i32, i64)*)*, i32 (%struct.sock*, %struct.page*, i32, i64, i32)*, i32 (%struct.sock*, %struct.msghdr*, i64)*, i32 (%struct.sock*, i32)* }
%struct.read_descriptor_t = type { i64, i64, %union.anon.97, i32 }
%union.anon.97 = type { i8* }
%struct.sock_cgroup_data = type {}
%struct.sock_reuseport = type opaque
%struct.kernfs_node = type { %struct.atomic_t, %struct.atomic_t, %struct.kernfs_node*, i8*, %struct.rb_node, i8*, i32, %union.anon.142, i8*, i64, i16, i16, %struct.kernfs_iattrs* }
%union.anon.142 = type { %struct.kernfs_elem_attr }
%struct.kernfs_elem_attr = type { %struct.kernfs_ops*, %struct.kernfs_open_node*, i64, %struct.kernfs_node* }
%struct.kernfs_ops = type { i32 (%struct.kernfs_open_file*)*, void (%struct.kernfs_open_file*)*, i32 (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i64*)*, i8* (%struct.seq_file*, i8*, i64*)*, void (%struct.seq_file*, i8*)*, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i64, i8, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i32 (%struct.kernfs_open_file*, %struct.poll_table_struct*)*, i32 (%struct.kernfs_open_file*, %struct.vm_area_struct*)* }
%struct.kernfs_open_file = type { %struct.kernfs_node*, %struct.file*, %struct.seq_file*, i8*, %struct.mutex, %struct.mutex, i32, %struct.list_head, i8*, i64, i8, %struct.vm_operations_struct* }
%struct.kernfs_open_node = type opaque
%struct.kernfs_iattrs = type opaque
%struct.kref = type { %struct.refcount_struct }
%struct.device_private = type opaque
%struct.device_type = type { i8*, %struct.attribute_group**, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*, %struct.kuid_t*, %struct.kgid_t*)*, void (%struct.device*)*, %struct.dev_pm_ops* }
%struct.dev_pm_ops = type { i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)* }
%struct.bus_type = type { i8*, i8*, %struct.device*, %struct.attribute_group**, %struct.attribute_group**, %struct.attribute_group**, i32 (%struct.device*, %struct.device_driver*)*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, %struct.dev_pm_ops*, %struct.iommu_ops*, %struct.subsys_private*, %struct.lock_class_key, i8 }
%struct.iommu_ops = type opaque
%struct.subsys_private = type opaque
%struct.device_driver = type { i8*, %struct.bus_type*, %struct.module*, i8*, i8, i32, %struct.of_device_id*, %struct.acpi_device_id*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, %struct.attribute_group**, %struct.attribute_group**, %struct.dev_pm_ops*, void (%struct.device*)*, %struct.driver_private* }
%struct.of_device_id = type { [32 x i8], [32 x i8], [128 x i8], i8* }
%struct.acpi_device_id = type { [9 x i8], i64, i32, i32 }
%struct.driver_private = type opaque
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, i8, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, %struct.wakeup_source*, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, %struct.wake_irq*, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i64, i64, i64, i64, %struct.pm_subsys_data*, void (%struct.device*, i32)*, %struct.dev_pm_qos* }
%struct.pm_message = type { i32 }
%struct.wakeup_source = type { i8*, i32, %struct.list_head, %struct.spinlock, %struct.wake_irq*, %struct.timer_list, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.device*, i8 }
%struct.wake_irq = type opaque
%struct.pm_subsys_data = type { %struct.spinlock, i32, %struct.list_head, %struct.pm_domain_data* }
%struct.pm_domain_data = type opaque
%struct.dev_pm_qos = type opaque
%struct.dev_pm_domain = type { %struct.dev_pm_ops, i32 (%struct.device*)*, void (%struct.device*, i1)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)* }
%struct.irq_domain = type opaque
%struct.dma_map_ops = type opaque
%struct.bus_dma_region = type opaque
%struct.device_dma_parameters = type { i32, i64 }
%struct.dev_archdata = type {}
%struct.device_node = type opaque
%struct.fwnode_handle = type { %struct.fwnode_handle*, %struct.fwnode_operations*, %struct.device* }
%struct.fwnode_operations = type { %struct.fwnode_handle* (%struct.fwnode_handle*)*, void (%struct.fwnode_handle*)*, i1 (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*, %struct.device*)*, i1 (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i32, i8*, i64)*, i32 (%struct.fwnode_handle*, i8*, i8**, i64)*, i8* (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i8*, i32, i32, %struct.fwnode_reference_args*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, i32 (%struct.fwnode_handle*, %struct.fwnode_endpoint*)*, i32 (%struct.fwnode_handle*, %struct.device*)* }
%struct.fwnode_reference_args = type { %struct.fwnode_handle*, i32, [8 x i64] }
%struct.fwnode_endpoint = type { i32, i32, %struct.fwnode_handle* }
%struct.class = type { i8*, %struct.module*, %struct.attribute_group**, %struct.attribute_group**, %struct.kobject*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*)*, void (%struct.class*)*, void (%struct.device*)*, i32 (%struct.device*)*, %struct.kobj_ns_type_operations*, i8* (%struct.device*)*, void (%struct.device*, %struct.kuid_t*, %struct.kgid_t*)*, %struct.dev_pm_ops*, %struct.subsys_private* }
%struct.iommu_group = type opaque
%struct.dev_iommu = type opaque
%struct.partition_meta_info = type { [37 x i8], [64 x i8] }
%struct.rcu_work = type { %struct.work_struct, %struct.callback_head, %struct.workqueue_struct* }
%struct.gendisk = type { i32, i32, i32, [32 x i8], i16, i16, %struct.disk_part_tbl*, %struct.hd_struct, %struct.block_device_operations*, %struct.request_queue*, i8*, i32, i64, %struct.rw_semaphore, %struct.kobject*, %struct.timer_rand_state*, %struct.atomic_t, %struct.disk_events*, %struct.kobject, i32, %struct.badblocks*, %struct.lockdep_map }
%struct.disk_part_tbl = type { %struct.callback_head, i32, %struct.hd_struct*, [0 x %struct.hd_struct*] }
%struct.block_device_operations = type { i32 (%struct.bio*)*, i32 (%struct.block_device*, i32)*, void (%struct.gendisk*, i32)*, i32 (%struct.block_device*, i64, %struct.page*, i32)*, i32 (%struct.block_device*, i32, i32, i64)*, i32 (%struct.block_device*, i32, i32, i64)*, i32 (%struct.gendisk*, i32)*, void (%struct.gendisk*)*, i32 (%struct.gendisk*)*, i32 (%struct.block_device*, %struct.hd_geometry*)*, void (%struct.block_device*, i64)*, i32 (%struct.gendisk*, i64, i32, i32 (%struct.blk_zone*, i32, i8*)*, i8*)*, i8* (%struct.gendisk*, i16*)*, %struct.module*, %struct.pr_ops* }
%struct.bio = type { %struct.bio*, %struct.gendisk*, i32, i16, i16, i16, i8, i8, %struct.atomic_t, %struct.bvec_iter, void (%struct.bio*)*, i8*, %union.anon.108, i16, i16, %struct.atomic_t, %struct.bio_vec*, %struct.bio_set*, [0 x %struct.bio_vec] }
%struct.bvec_iter = type { i64, i32, i32, i32 }
%union.anon.108 = type { %struct.bio_integrity_payload* }
%struct.bio_integrity_payload = type { %struct.bio*, %struct.bvec_iter, i16, i16, i16, i16, %struct.bvec_iter, %struct.work_struct, %struct.bio_vec*, [0 x %struct.bio_vec] }
%struct.bio_vec = type { %struct.page*, i32, i32 }
%struct.bio_set = type { %struct.kmem_cache*, i32, %struct.mempool_s, %struct.mempool_s, %struct.mempool_s, %struct.mempool_s, %struct.spinlock, %struct.bio_list, %struct.work_struct, %struct.workqueue_struct* }
%struct.mempool_s = type { %struct.spinlock, i32, i32, i8**, i8*, i8* (i32, i8*)*, void (i8*, i8*)*, %struct.wait_queue_head }
%struct.bio_list = type { %struct.bio*, %struct.bio* }
%struct.hd_geometry = type opaque
%struct.blk_zone = type { i64, i64, i64, i8, i8, i8, i8, [4 x i8], i64, [24 x i8] }
%struct.pr_ops = type opaque
%struct.request_queue = type { %struct.request*, %struct.elevator_queue*, %struct.percpu_ref, %struct.blk_queue_stats*, %struct.rq_qos*, %struct.blk_mq_ops*, %struct.blk_mq_ctx*, i32, %struct.blk_mq_hw_ctx**, i32, %struct.backing_dev_info*, i8*, i64, %struct.atomic_t, i32, i32, %struct.spinlock, %struct.kobject, %struct.kobject*, %struct.blk_integrity, %struct.device*, i32, i32, i64, i32, i32, i32, i32, %struct.blk_stat_callback*, [16 x %struct.blk_rq_stat], %struct.timer_list, %struct.work_struct, %struct.atomic_t, %struct.list_head, %struct.queue_limits, i32, i32, i32, i32, %struct.mutex, %struct.blk_flush_queue*, %struct.list_head, %struct.spinlock, %struct.delayed_work, %struct.mutex, %struct.mutex, %struct.list_head, %struct.spinlock, i32, %struct.bsg_class_device, %struct.callback_head, %struct.wait_queue_head, %struct.mutex, %struct.blk_mq_tag_set*, %struct.list_head, %struct.bio_set, %struct.dentry*, i8, i64, [5 x i64] }
%struct.request = type { %struct.request_queue*, %struct.blk_mq_ctx*, %struct.blk_mq_hw_ctx*, i32, i32, i32, i32, i32, i64, %struct.bio*, %struct.bio*, %struct.list_head, %union.anon.166, %union.anon.167, %union.anon.168, %struct.gendisk*, %struct.hd_struct*, i64, i64, i16, i16, i16, i16, i16, i32, %struct.refcount_struct, i32, i64, %union.anon.171, void (%struct.request*, i8)*, i8* }
%struct.blk_mq_hw_ctx = type opaque
%union.anon.166 = type { %struct.hlist_node }
%union.anon.167 = type { %struct.rb_node }
%union.anon.168 = type { %struct.anon.170 }
%struct.anon.170 = type { i32, %struct.list_head, void (%struct.request*, i8)* }
%union.anon.171 = type { %struct.__call_single_data }
%struct.__call_single_data = type { %union.anon.172, void (i8*)*, i8* }
%union.anon.172 = type { %struct.__call_single_node }
%struct.__call_single_node = type { %struct.llist_node, %union.anon.173, i16, i16 }
%union.anon.173 = type { i32 }
%struct.elevator_queue = type { %struct.elevator_type*, i8*, %struct.kobject, %struct.mutex, i8, [64 x %struct.hlist_head] }
%struct.elevator_type = type { %struct.kmem_cache*, %struct.elevator_mq_ops, i64, i64, %struct.elv_fs_entry*, i8*, i8*, i32, %struct.module*, [22 x i8], %struct.list_head }
%struct.elevator_mq_ops = type { i32 (%struct.request_queue*, %struct.elevator_type*)*, void (%struct.elevator_queue*)*, i32 (%struct.blk_mq_hw_ctx*, i32)*, void (%struct.blk_mq_hw_ctx*, i32)*, void (%struct.blk_mq_hw_ctx*)*, i1 (%struct.request_queue*, %struct.request*, %struct.bio*)*, i1 (%struct.blk_mq_hw_ctx*, %struct.bio*, i32)*, i32 (%struct.request_queue*, %struct.request**, %struct.bio*)*, void (%struct.request_queue*, %struct.request*, i32)*, void (%struct.request_queue*, %struct.request*, %struct.request*)*, void (i32, %struct.blk_mq_alloc_data*)*, void (%struct.request*)*, void (%struct.request*)*, void (%struct.blk_mq_hw_ctx*, %struct.list_head*, i1)*, %struct.request* (%struct.blk_mq_hw_ctx*)*, i1 (%struct.blk_mq_hw_ctx*)*, void (%struct.request*, i64)*, void (%struct.request*)*, %struct.request* (%struct.request_queue*, %struct.request*)*, %struct.request* (%struct.request_queue*, %struct.request*)*, void (%struct.io_cq*)*, void (%struct.io_cq*)* }
%struct.blk_mq_alloc_data = type opaque
%struct.io_cq = type { %struct.request_queue*, %struct.io_context*, %union.anon.109, %union.anon.110, i32 }
%union.anon.109 = type { %struct.list_head }
%union.anon.110 = type { %struct.hlist_node }
%struct.elv_fs_entry = type { %struct.attribute, i64 (%struct.elevator_queue*, i8*)*, i64 (%struct.elevator_queue*, i8*, i64)* }
%struct.blk_queue_stats = type opaque
%struct.rq_qos = type opaque
%struct.blk_mq_ops = type opaque
%struct.blk_mq_ctx = type opaque
%struct.blk_integrity = type { %struct.blk_integrity_profile*, i8, i8, i8, i8 }
%struct.blk_integrity_profile = type { i8 (%struct.blk_integrity_iter*)*, i8 (%struct.blk_integrity_iter*)*, void (%struct.request*)*, void (%struct.request*, i32)*, i8* }
%struct.blk_integrity_iter = type { i8*, i8*, i64, i32, i16, i8* }
%struct.blk_stat_callback = type opaque
%struct.blk_rq_stat = type { i64, i64, i64, i32, i64 }
%struct.queue_limits = type { i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, i8, i8, i8, i32 }
%struct.blk_flush_queue = type opaque
%struct.bsg_class_device = type { %struct.device*, i32, %struct.request_queue*, %struct.bsg_ops* }
%struct.bsg_ops = type { i32 (%struct.sg_io_v4*)*, i32 (%struct.request*, %struct.sg_io_v4*, i32)*, i32 (%struct.request*, %struct.sg_io_v4*)*, void (%struct.request*)* }
%struct.sg_io_v4 = type { i32, i32, i32, i32, i64, i64, i32, i32, i32, i32, i64, i32, i32, i32, i32, i64, i64, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32 }
%struct.blk_mq_tag_set = type opaque
%struct.timer_rand_state = type opaque
%struct.disk_events = type opaque
%struct.badblocks = type opaque
%struct.mtd_info = type opaque
%struct.quota_info = type { i32, %struct.rw_semaphore, [3 x %struct.inode*], [3 x %struct.mem_dqinfo], [3 x %struct.quota_format_ops*] }
%struct.mem_dqinfo = type { %struct.quota_format_type*, i32, %struct.list_head, i64, i32, i32, i64, i64, i8* }
%struct.quota_format_type = type { i32, %struct.quota_format_ops*, %struct.module*, %struct.quota_format_type* }
%struct.quota_format_ops = type { i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.sb_writers = type { i32, %struct.wait_queue_head, [3 x %struct.percpu_rw_semaphore] }
%struct.percpu_rw_semaphore = type { %struct.rcu_sync, i32*, %struct.rcuwait, %struct.wait_queue_head, %struct.atomic_t }
%struct.rcu_sync = type { i32, i32, %struct.wait_queue_head, %struct.callback_head }
%struct.rcuwait = type { %struct.task_struct* }
%struct.uuid_t = type { [16 x i8] }
%struct.shrinker = type { i64 (%struct.shrinker*, %struct.shrink_control*)*, i64 (%struct.shrinker*, %struct.shrink_control*)*, i64, i32, i32, %struct.list_head, %struct.atomic64_t* }
%struct.workqueue_struct = type opaque
%struct.hlist_head = type { %struct.hlist_node* }
%struct.list_lru = type { %struct.list_lru_node* }
%struct.list_lru_node = type { %struct.spinlock, %struct.list_lru_one, i64 }
%struct.list_lru_one = type { %struct.list_head, i64 }
%union.anon.132 = type { i32 }
%struct.timespec64 = type { i64, i64 }
%struct.hlist_node = type { %struct.hlist_node*, %struct.hlist_node** }
%union.anon.133 = type { %struct.callback_head }
%union.anon.134 = type { %struct.file_operations* }
%struct.file_operations = type { %struct.module*, i64 (%struct.file*, i64, i32)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.kiocb*, i1)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.poll_table_struct*)*, i64 (%struct.file*, i32, i64)*, i64 (%struct.file*, i32, i64)*, i32 (%struct.file*, %struct.vm_area_struct*)*, i64, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i8*)*, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i64, i64, i32)*, i32 (i32, %struct.file*, i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.file*, %struct.page*, i32, i64, i64*, i32)*, i64 (%struct.file*, i64, i64, i64, i64)*, i32 (i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.pipe_inode_info*, %struct.file*, i64*, i64, i32)*, i64 (%struct.file*, i64*, %struct.pipe_inode_info*, i64, i32)*, i32 (%struct.file*, i64, %struct.file_lock**, i8**)*, i64 (%struct.file*, i32, i64, i64)*, void (%struct.seq_file*, %struct.file*)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i32 (%struct.file*, i64, i64, i32)* }
%struct.dir_context = type { i32 (%struct.dir_context*, i8*, i32, i64, i64, i32)*, i64 }
%struct.file_lock = type { %struct.file_lock*, %struct.list_head, %struct.hlist_node, %struct.list_head, %struct.list_head, i8*, i32, i8, i32, i32, %struct.wait_queue_head, %struct.file*, i64, i64, %struct.fasync_struct*, i64, i64, %struct.file_lock_operations*, %struct.lock_manager_operations*, %union.anon.135 }
%struct.file_lock_operations = type { void (%struct.file_lock*, %struct.file_lock*)*, void (%struct.file_lock*)* }
%struct.lock_manager_operations = type { i8* (i8*)*, void (i8*)*, void (%struct.file_lock*)*, i32 (%struct.file_lock*, i32)*, i1 (%struct.file_lock*)*, i32 (%struct.file_lock*, i32, %struct.list_head*)*, void (%struct.file_lock*, i8**)*, i1 (%struct.file_lock*)* }
%union.anon.135 = type { %struct.nfs_lock_info }
%struct.nfs_lock_info = type { i32, %struct.nlm_lockowner*, %struct.list_head }
%struct.nlm_lockowner = type opaque
%struct.file_lock_context = type { %struct.spinlock, %struct.list_head, %struct.list_head, %struct.list_head }
%union.anon.137 = type { %struct.pipe_inode_info* }
%struct.fsnotify_mark_connector = type opaque
%struct.xarray = type { %struct.spinlock, i32, i8* }
%struct.address_space_operations = type { i32 (%struct.page*, %struct.writeback_control*)*, i32 (%struct.file*, %struct.page*)*, i32 (%struct.address_space*, %struct.writeback_control*)*, i32 (%struct.page*)*, i32 (%struct.file*, %struct.address_space*, %struct.list_head*, i32)*, void (%struct.readahead_control*)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page**, i8**)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page*, i8*)*, i64 (%struct.address_space*, i64)*, void (%struct.page*, i32, i32)*, i32 (%struct.page*, i32)*, void (%struct.page*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.address_space*, %struct.page*, %struct.page*, i32)*, i1 (%struct.page*, i32)*, void (%struct.page*)*, i32 (%struct.page*)*, i32 (%struct.page*, i64, i64)*, void (%struct.page*, i8*, i8*)*, i32 (%struct.address_space*, %struct.page*)*, i32 (%struct.swap_info_struct*, %struct.file*, i64*)*, void (%struct.file*)* }
%struct.readahead_control = type { %struct.file*, %struct.address_space*, i64, i32, i32 }
%struct.swap_info_struct = type opaque
%union.anon.130 = type { %struct.atomic_t }
%struct.vm_userfaultfd_ctx = type {}
%struct.rb_root = type { %struct.rb_node* }
%struct.pgd_t = type { i64 }
%struct.rw_semaphore = type { %struct.atomic64_t, %struct.atomic64_t, %struct.raw_spinlock, %struct.list_head }
%struct.atomic64_t = type { i64 }
%struct.mm_rss_stat = type { [4 x %struct.atomic64_t] }
%struct.linux_binfmt = type opaque
%struct.mm_context_t = type { i64, %struct.atomic64_t, %struct.rw_semaphore, %struct.ldt_struct*, i16, %struct.mutex, i8*, %struct.vdso_image*, %struct.atomic_t, i16, i16 }
%struct.ldt_struct = type opaque
%struct.vdso_image = type { i8*, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.core_state = type { %struct.atomic_t, %struct.core_thread, %struct.completion }
%struct.core_thread = type { %struct.task_struct*, %struct.core_thread* }
%struct.kioctx_table = type opaque
%struct.user_namespace = type { %struct.uid_gid_map, %struct.uid_gid_map, %struct.uid_gid_map, %struct.atomic_t, %struct.user_namespace*, i32, %struct.kuid_t, %struct.kgid_t, %struct.ns_common, i64, %struct.list_head, %struct.key*, %struct.rw_semaphore, %struct.work_struct, %struct.ctl_table_set, %struct.ctl_table_header*, %struct.ucounts*, [10 x i32] }
%struct.uid_gid_map = type { i32, %union.anon.25 }
%union.anon.25 = type { %struct.anon.26, [48 x i8] }
%struct.anon.26 = type { %struct.uid_gid_extent*, %struct.uid_gid_extent* }
%struct.uid_gid_extent = type { i32, i32, i32 }
%struct.file = type { %union.anon, %struct.path, %struct.inode*, %struct.file_operations*, %struct.spinlock, i32, %struct.atomic64_t, i32, i32, %struct.mutex, i64, %struct.fown_struct, %struct.cred*, %struct.file_ra_state, i64, i8*, %struct.list_head, %struct.list_head, %struct.address_space*, i32, i32 }
%union.anon = type { %struct.callback_head }
%struct.fown_struct = type { %struct.rwlock_t, %struct.pid*, i32, %struct.kuid_t, %struct.kuid_t, i32 }
%struct.file_ra_state = type { i64, i32, i32, i32, i32, i64 }
%struct.mmu_notifier_subscriptions = type opaque
%struct.atomic_t = type { i32 }
%struct.uprobes_state = type {}
%struct.work_struct = type { %struct.atomic64_t, %struct.list_head, void (%struct.work_struct*)* }
%struct.vmacache = type { i64, [4 x %struct.vm_area_struct*] }
%struct.restart_block = type { i64 (%struct.restart_block*)*, %union.anon.20 }
%union.anon.20 = type { %struct.anon.21 }
%struct.anon.21 = type { i32*, i32, i32, i32, i64, i32* }
%struct.pid = type { %struct.refcount_struct, i32, %struct.spinlock, [4 x %struct.hlist_head], %struct.hlist_head, %struct.wait_queue_head, %struct.callback_head, [1 x %struct.upid] }
%struct.upid = type { i32, %struct.pid_namespace* }
%struct.pid_namespace = type { %struct.kref, %struct.idr, %struct.callback_head, i32, %struct.task_struct*, %struct.kmem_cache*, i32, %struct.pid_namespace*, %struct.user_namespace*, %struct.ucounts*, i32, %struct.ns_common }
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.posix_cputimers_work = type { %struct.callback_head, i32 }
%struct.cred = type { %struct.atomic_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, i32, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, i8, %struct.key*, %struct.key*, %struct.key*, %struct.key*, %struct.user_struct*, %struct.user_namespace*, %struct.group_info*, %union.anon.37 }
%struct.kernel_cap_struct = type { [2 x i32] }
%struct.group_info = type { %struct.atomic_t, i32, [0 x %struct.kgid_t] }
%union.anon.37 = type { %struct.callback_head }
%struct.key = type { %struct.refcount_struct, i32, %union.anon.27, %struct.rw_semaphore, %struct.key_user*, i8*, %union.anon.28, i64, %struct.kuid_t, %struct.kgid_t, i32, i16, i16, i16, i64, %union.anon.29, %union.anon.33, %struct.key_restriction* }
%union.anon.27 = type { %struct.rb_node }
%struct.key_user = type opaque
%union.anon.28 = type { i64 }
%union.anon.29 = type { %struct.keyring_index_key }
%struct.keyring_index_key = type { i64, %union.anon.30, %struct.key_type*, %struct.key_tag*, i8* }
%union.anon.30 = type { i64 }
%struct.key_type = type opaque
%union.anon.33 = type { %union.key_payload }
%union.key_payload = type { [4 x i8*] }
%struct.key_restriction = type { i32 (%struct.key*, %struct.key_type*, %union.key_payload*, %struct.key*)*, %struct.key*, %struct.key_type* }
%struct.nameidata = type opaque
%struct.fs_struct = type opaque
%struct.files_struct = type opaque
%struct.io_uring_task = type opaque
%struct.nsproxy = type { %struct.atomic_t, %struct.uts_namespace*, %struct.ipc_namespace*, %struct.mnt_namespace*, %struct.pid_namespace*, %struct.net*, %struct.time_namespace*, %struct.time_namespace*, %struct.cgroup_namespace* }
%struct.uts_namespace = type opaque
%struct.ipc_namespace = type opaque
%struct.mnt_namespace = type opaque
%struct.time_namespace = type opaque
%struct.cgroup_namespace = type { %struct.refcount_struct, %struct.ns_common, %struct.user_namespace*, %struct.ucounts*, %struct.css_set* }
%struct.css_set = type opaque
%struct.signal_struct = type { %struct.refcount_struct, %struct.atomic_t, i32, %struct.list_head, %struct.wait_queue_head, %struct.task_struct*, %struct.sigpending, %struct.hlist_head, i32, i32, %struct.task_struct*, i32, i32, i8, i32, %struct.list_head, %struct.hrtimer, i64, [2 x %struct.cpu_itimer], %struct.thread_group_cputimer, %struct.posix_cputimers, [4 x %struct.pid*], %struct.pid*, i32, %struct.tty_struct*, %struct.seqlock_t, i64, i64, i64, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.task_io_accounting, i64, [16 x %struct.rlimit], i8, i16, i16, %struct.mm_struct*, %struct.mutex, %struct.mutex }
%struct.cpu_itimer = type { i64, i64 }
%struct.thread_group_cputimer = type { %struct.task_cputime_atomic }
%struct.task_cputime_atomic = type { %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t }
%struct.tty_struct = type opaque
%struct.rlimit = type { i64, i64 }
%struct.sighand_struct = type { %struct.spinlock, %struct.refcount_struct, %struct.wait_queue_head, [64 x %struct.k_sigaction] }
%struct.k_sigaction = type { %struct.sigaction }
%struct.sigaction = type { void (i32)*, i64, void ()*, %struct.sigset_t }
%struct.sigset_t = type { [1 x i64] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.seccomp = type { i32, %struct.atomic_t, %struct.seccomp_filter* }
%struct.seccomp_filter = type opaque
%struct.spinlock = type { %union.anon.1 }
%union.anon.1 = type { %struct.raw_spinlock }
%struct.raw_spinlock = type { %struct.arch_spinlock_t }
%struct.arch_spinlock_t = type {}
%struct.wake_q_node = type { %struct.wake_q_node* }
%struct.rb_root_cached = type { %struct.rb_root, %struct.rb_node* }
%struct.rt_mutex_waiter = type opaque
%struct.blk_plug = type { %struct.list_head, %struct.list_head, i16, i8, i8 }
%struct.reclaim_state = type opaque
%struct.backing_dev_info = type { i64, %struct.rb_node, %struct.list_head, i64, i64, %struct.kref, i32, i32, i32, i32, %struct.atomic64_t, %struct.bdi_writeback, %struct.list_head, %struct.wait_queue_head, %struct.device*, [64 x i8], %struct.device*, %struct.timer_list }
%struct.bdi_writeback = type { %struct.backing_dev_info*, i64, i64, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.spinlock, [4 x %struct.percpu_counter], i64, i64, i64, i64, i64, i64, i64, i64, %struct.fprop_local_percpu, i32, i32, %struct.spinlock, %struct.list_head, %struct.delayed_work, i64, %struct.list_head }
%struct.fprop_local_percpu = type { %struct.percpu_counter, i32, %struct.raw_spinlock }
%struct.io_context = type { %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.spinlock, i16, %struct.xarray, %struct.io_cq*, %struct.hlist_head, %struct.work_struct }
%struct.capture_control = type opaque
%struct.kernel_siginfo = type { %struct.anon.111 }
%struct.anon.111 = type { i32, i32, i32, %union.__sifields }
%union.__sifields = type { %struct.anon.115 }
%struct.anon.115 = type { i32, i32, i32, i64, i64 }
%struct.task_io_accounting = type {}
%struct.robust_list_head = type opaque
%struct.futex_pi_state = type opaque
%struct.perf_event_context = type opaque
%struct.mutex = type { %struct.atomic64_t, %struct.spinlock, %struct.list_head }
%struct.list_head = type { %struct.list_head*, %struct.list_head* }
%struct.rseq = type { i32, i32, %union.anon.122, i32, [12 x i8] }
%union.anon.122 = type { i64 }
%struct.tlbflush_unmap_batch = type { %struct.arch_tlbflush_unmap_batch, i8, i8 }
%struct.arch_tlbflush_unmap_batch = type { %struct.cpumask }
%union.anon.123 = type { %struct.callback_head }
%struct.pipe_inode_info = type { %struct.mutex, %struct.wait_queue_head, %struct.wait_queue_head, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.page*, %struct.fasync_struct*, %struct.fasync_struct*, %struct.pipe_buffer*, %struct.user_struct* }
%struct.pipe_buffer = type { %struct.page*, i32, i32, %struct.pipe_buf_operations*, i32, i64 }
%struct.pipe_buf_operations = type { i32 (%struct.pipe_inode_info*, %struct.pipe_buffer*)*, void (%struct.pipe_inode_info*, %struct.pipe_buffer*)*, i1 (%struct.pipe_inode_info*, %struct.pipe_buffer*)*, i1 (%struct.pipe_inode_info*, %struct.pipe_buffer*)* }
%struct.page_frag = type { %struct.page*, i32, i32 }
%struct.vm_struct = type { %struct.vm_struct*, i8*, i64, i64, %struct.page**, i32, i64, i8* }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.callback_head = type { %struct.callback_head*, void (%struct.callback_head*)* }
%struct.thread_struct = type { [3 x %struct.desc_struct], i64, i16, i16, i16, i16, i64, i64, [4 x %struct.perf_event*], i64, i64, i64, i64, i64, %struct.io_bitmap*, i64, i8, [47 x i8], %struct.fpu }
%struct.desc_struct = type { i16, i16, i32 }
%struct.perf_event = type opaque
%struct.io_bitmap = type opaque
%struct.fpu = type { i32, i64, [48 x i8], %union.fpregs_state }
%union.fpregs_state = type { %struct.xregs_state, [3520 x i8] }
%struct.xregs_state = type { %struct.fxregs_state, %struct.xstate_header, [0 x i8] }
%struct.fxregs_state = type { i16, i16, i16, i16, %union.anon.124, i32, i32, [32 x i32], [64 x i32], [12 x i32], %union.anon.127 }
%union.anon.124 = type { %struct.anon.125 }
%struct.anon.125 = type { i64, i64 }
%union.anon.127 = type { [12 x i32] }
%struct.xstate_header = type { i64, i64, [6 x i64] }
%struct.mlx5_eswitch = type { %struct.mlx5_core_dev*, %struct.mlx5_nb, %struct.mlx5_eswitch_fdb, [256 x %struct.hlist_head], %struct.esw_mc_addr, %struct.workqueue_struct*, %struct.mlx5_vport*, i32, i32, i32, %struct.mutex, %struct.mutex, %struct.anon.164, %struct.mlx5_esw_offload, i32, i16, i16, %struct.mlx5_esw_functions, %struct.anon.165 }
%struct.mlx5_core_dev = type { %struct.device*, i32, %struct.pci_dev*, %struct.mutex, i32, i8, [64 x i8], %struct.mlx5_cmd, [2 x %struct.mlx5_port_caps], %struct.anon.144, i64, i64, %struct.mlx5_init_seg*, i64, i32, %struct.mutex, i64, %struct.mlx5_priv, %struct.mlx5_profile*, i32, %struct.mlx5e_resources, %struct.mlx5_dm*, %struct.mlx5_vxlan*, %struct.mlx5_geneve*, %struct.anon.150, %struct.mlx5_clock, %struct.mlx5_ib_clock_info*, %struct.mlx5_fw_tracer*, %struct.mlx5_rsc_dump*, i32, %struct.mlx5_hv_vhca* }
%struct.pci_dev = type <{ %struct.list_head, %struct.pci_bus*, %struct.pci_bus*, i8*, %struct.proc_dir_entry*, %struct.pci_slot*, i32, i16, i16, i16, i16, i32, i8, i8, i8, i8, i8, i8, i8, i8, i16, [6 x i8], i64*, %struct.pci_driver*, i64, %struct.device_dma_parameters, i32, i8, i8, i24, [2 x i8], i32, i32, [4 x i8], %struct.pcie_link_state*, i8, [3 x i8], i32, i8, [3 x i8], i32, %struct.device, i32, i32, [17 x %struct.resource], i8, [5 x i8], i16, %struct.atomic_t, [16 x i32], [4 x i8], %struct.hlist_head, %struct.bin_attribute*, i32, [4 x i8], [17 x %struct.bin_attribute*], [17 x %struct.bin_attribute*], %struct.attribute_group**, %struct.pci_vpd*, %union.anon.143, i16, i8, i8, i16, [2 x i8], i64, i64, i8*, i64 }>
%struct.pci_bus = type { %struct.list_head, %struct.pci_bus*, %struct.list_head, %struct.list_head, %struct.pci_dev*, %struct.list_head, [4 x %struct.resource*], %struct.list_head, %struct.resource, %struct.pci_ops*, %struct.msi_controller*, i8*, %struct.proc_dir_entry*, i8, i8, i8, i8, [48 x i8], i16, i16, %struct.device*, %struct.device, %struct.bin_attribute*, %struct.bin_attribute*, i8 }
%struct.resource = type { i64, i64, i8*, i64, i64, %struct.resource*, %struct.resource*, %struct.resource* }
%struct.pci_ops = type { i32 (%struct.pci_bus*)*, void (%struct.pci_bus*)*, i8* (%struct.pci_bus*, i32, i32)*, i32 (%struct.pci_bus*, i32, i32, i32, i32*)*, i32 (%struct.pci_bus*, i32, i32, i32, i32)* }
%struct.msi_controller = type opaque
%struct.pci_slot = type { %struct.pci_bus*, %struct.list_head, %struct.hotplug_slot*, i8, %struct.kobject }
%struct.hotplug_slot = type opaque
%struct.pci_driver = type { %struct.list_head, i8*, %struct.pci_device_id*, i32 (%struct.pci_dev*, %struct.pci_device_id*)*, void (%struct.pci_dev*)*, i32 (%struct.pci_dev*, i32)*, i32 (%struct.pci_dev*)*, void (%struct.pci_dev*)*, i32 (%struct.pci_dev*, i32)*, %struct.pci_error_handlers*, %struct.attribute_group**, %struct.device_driver, %struct.pci_dynids }
%struct.pci_device_id = type { i32, i32, i32, i32, i32, i32, i64 }
%struct.pci_error_handlers = type { i32 (%struct.pci_dev*, i32)*, i32 (%struct.pci_dev*)*, i32 (%struct.pci_dev*)*, void (%struct.pci_dev*)*, void (%struct.pci_dev*)*, void (%struct.pci_dev*)* }
%struct.pci_dynids = type { %struct.spinlock, %struct.list_head }
%struct.pcie_link_state = type opaque
%struct.pci_vpd = type opaque
%union.anon.143 = type { %struct.pci_sriov* }
%struct.pci_sriov = type opaque
%struct.mlx5_cmd = type { %struct.mlx5_nb, i32, i8*, i64, i32, i8*, i64, i16, i8, i8, i32, i32, i32*, %struct.spinlock, %struct.spinlock, i8, i64, [32 x i8], %struct.workqueue_struct*, %struct.semaphore, %struct.semaphore, i32, i16, [32 x %struct.mlx5_cmd_work_ent*], %struct.dma_pool*, %struct.mlx5_cmd_debug, [5 x %struct.cmd_msg_cache], i32, %struct.mlx5_cmd_stats* }
%struct.semaphore = type { %struct.raw_spinlock, i32, %struct.list_head }
%struct.mlx5_cmd_work_ent = type { i64, %struct.mlx5_cmd_msg*, %struct.mlx5_cmd_msg*, i8*, i32, void (i32, i8*)*, %struct.delayed_work, i8*, i32, %struct.completion, %struct.completion, %struct.mlx5_cmd*, %struct.work_struct, %struct.mlx5_cmd_layout*, i32, i32, i8, i8, i64, i64, i16, i8, %struct.refcount_struct }
%struct.mlx5_cmd_msg = type { %struct.list_head, %struct.cmd_msg_cache*, i32, %struct.mlx5_cmd_first, %struct.mlx5_cmd_mailbox* }
%struct.cmd_msg_cache = type { %struct.spinlock, %struct.list_head, i32, i32 }
%struct.mlx5_cmd_first = type { [4 x i32] }
%struct.mlx5_cmd_mailbox = type { i8*, i64, %struct.mlx5_cmd_mailbox* }
%struct.mlx5_cmd_layout = type { i8, [3 x i8], i32, i64, [4 x i32], [4 x i32], i64, i32, i8, i8, i8, i8 }
%struct.dma_pool = type opaque
%struct.mlx5_cmd_debug = type { %struct.dentry*, i8*, i8*, i8, i16, i16 }
%struct.mlx5_cmd_stats = type { i64, i64, %struct.dentry*, %struct.spinlock }
%struct.mlx5_port_caps = type { i32, i32, i8, i8 }
%struct.anon.144 = type { [22 x [1024 x i32]], [22 x [1024 x i32]], [20 x i32], [3 x [18 x i32]], [64 x i32], [18 x i32], i8 }
%struct.mlx5_init_seg = type { i32, i32, [2 x i32], i32, i32, i32, [120 x i32], i32, %struct.health_buffer, [880 x i32], i32, i32, [2 x i32], i32, [1019 x i32], i64, i32, i32 }
%struct.health_buffer = type { [5 x i32], [3 x i32], i32, i32, [2 x i32], i32, i32, i32, i8, i8, i16 }
%struct.mlx5_priv = type { %struct.mlx5_irq_table*, %struct.mlx5_eq_table*, %struct.mlx5_nb, %struct.workqueue_struct*, %struct.xarray, i32, %struct.atomic_t, %struct.list_head, i32, i32, %struct.mlx5_core_health, %struct.dentry*, %struct.dentry*, %struct.dentry*, %struct.dentry*, %struct.mutex, i32, %struct.mutex, %struct.list_head, %struct.dentry*, %struct.list_head, %struct.list_head, %struct.spinlock, %struct.mlx5_events*, %struct.mlx5_flow_steering*, %struct.mlx5_mpfs*, %struct.mlx5_eswitch*, %struct.mlx5_core_sriov, %struct.mlx5_lag*, %struct.mlx5_devcom*, %struct.mlx5_fw_reset*, %struct.mlx5_core_roce, %struct.mlx5_fc_stats, %struct.mlx5_rl_table, %struct.mlx5_bfreg_data, %struct.mlx5_uars_page* }
%struct.mlx5_irq_table = type opaque
%struct.mlx5_eq_table = type opaque
%struct.mlx5_core_health = type { %struct.health_buffer*, i32*, %struct.timer_list, i32, i32, i8, i32, i32, %struct.spinlock, %struct.workqueue_struct*, i64, %struct.work_struct, %struct.work_struct, %struct.delayed_work, %struct.devlink_health_reporter*, %struct.devlink_health_reporter* }
%struct.devlink_health_reporter = type opaque
%struct.mlx5_events = type opaque
%struct.mlx5_flow_steering = type { %struct.mlx5_core_dev*, i32, %struct.kmem_cache*, %struct.kmem_cache*, %struct.mlx5_flow_root_namespace*, %struct.mlx5_flow_root_namespace*, %struct.mlx5_flow_namespace**, %struct.mlx5_flow_root_namespace**, %struct.mlx5_flow_root_namespace**, %struct.mlx5_flow_root_namespace*, %struct.mlx5_flow_root_namespace*, %struct.mlx5_flow_root_namespace*, %struct.mlx5_flow_root_namespace*, %struct.mlx5_flow_root_namespace* }
%struct.mlx5_flow_namespace = type { %struct.fs_node, i32 }
%struct.fs_node = type { %struct.list_head, %struct.list_head, i32, %struct.fs_node*, %struct.fs_node*, %struct.rw_semaphore, %struct.refcount_struct, i8, void (%struct.fs_node*)*, void (%struct.fs_node*)*, %struct.atomic_t }
%struct.mlx5_flow_root_namespace = type { %struct.mlx5_flow_namespace, i32, %struct.mlx5_fs_dr_domain, i32, %struct.mlx5_core_dev*, %struct.mlx5_flow_table*, %struct.mutex, %struct.list_head, %struct.mlx5_flow_cmds* }
%struct.mlx5_fs_dr_domain = type { %struct.mlx5dr_domain* }
%struct.mlx5dr_domain = type opaque
%struct.mlx5_flow_table = type { %struct.fs_node, %struct.mlx5_fs_dr_table, i32, i16, i32, i32, i32, i32, %struct.anon.145, %struct.mutex, %struct.list_head, i32, %struct.rhltable, i32, %struct.mlx5_flow_namespace* }
%struct.mlx5_fs_dr_table = type { %struct.mlx5dr_table*, %struct.mlx5dr_action* }
%struct.mlx5dr_table = type opaque
%struct.mlx5dr_action = type opaque
%struct.anon.145 = type { i8, i32, i32, i32, i32 }
%struct.rhltable = type { %struct.rhashtable }
%struct.mlx5_flow_cmds = type opaque
%struct.mlx5_mpfs = type opaque
%struct.mlx5_core_sriov = type { %struct.mlx5_vf_context*, i32, i16 }
%struct.mlx5_vf_context = type { i32, i64, i64, i8, i32 }
%struct.mlx5_lag = type opaque
%struct.mlx5_devcom = type opaque
%struct.mlx5_fw_reset = type opaque
%struct.mlx5_core_roce = type { %struct.mlx5_flow_table*, %struct.mlx5_flow_group*, %struct.mlx5_flow_handle* }
%struct.mlx5_flow_group = type { %struct.fs_node, %struct.mlx5_fs_dr_matcher, %struct.mlx5_flow_group_mask, i32, i32, %struct.ida, i32, %struct.rhashtable, %struct.rhlist_head }
%struct.mlx5_fs_dr_matcher = type { %struct.mlx5dr_matcher* }
%struct.mlx5dr_matcher = type opaque
%struct.mlx5_flow_group_mask = type { i8, [80 x i32] }
%struct.ida = type { %struct.xarray }
%struct.rhlist_head = type { %struct.rhash_head, %struct.rhlist_head* }
%struct.mlx5_flow_handle = type { i32, [0 x %struct.mlx5_flow_rule*] }
%struct.mlx5_flow_rule = type { %struct.fs_node, %struct.mlx5_flow_table*, %struct.mlx5_flow_destination, %struct.list_head, i32 }
%struct.mlx5_flow_destination = type { i32, %union.anon.146 }
%union.anon.146 = type { %struct.anon.147 }
%struct.anon.147 = type { i16, i16, %struct.mlx5_pkt_reformat*, i8 }
%struct.mlx5_pkt_reformat = type { i32, i32, %union.anon.148 }
%union.anon.148 = type { %struct.mlx5_fs_dr_action }
%struct.mlx5_fs_dr_action = type { %struct.mlx5dr_action* }
%struct.mlx5_fc_stats = type { %struct.spinlock, %struct.idr, %struct.list_head, %struct.llist_head, %struct.llist_head, %struct.workqueue_struct*, %struct.delayed_work, i64, i64, i32*, %struct.mlx5_fc_pool }
%struct.llist_head = type { %struct.llist_node* }
%struct.mlx5_fc_pool = type { %struct.mlx5_core_dev*, %struct.mutex, %struct.list_head, %struct.list_head, %struct.list_head, i32, i32, i32 }
%struct.mlx5_rl_table = type { %struct.mutex, i16, i32, i32, %struct.mlx5_rl_entry* }
%struct.mlx5_rl_entry = type { [48 x i8], i16, i64, i16, i8 }
%struct.mlx5_bfreg_data = type { %struct.mlx5_bfreg_head, %struct.mlx5_bfreg_head }
%struct.mlx5_bfreg_head = type { %struct.mutex, %struct.list_head }
%struct.mlx5_uars_page = type { i8*, i8, i32, %struct.list_head, i32, i64*, i64*, i32, i32, %struct.kref, %struct.mlx5_core_dev* }
%struct.mlx5_profile = type { i64, i8, [23 x %struct.anon.149] }
%struct.anon.149 = type { i32, i32 }
%struct.mlx5e_resources = type { i32, %struct.mlx5_td, %struct.mlx5_core_mkey, %struct.mlx5_sq_bfreg }
%struct.mlx5_td = type { %struct.mutex, %struct.list_head, i32 }
%struct.mlx5_core_mkey = type { i64, i64, i32, i32, i32 }
%struct.mlx5_sq_bfreg = type { i8*, %struct.mlx5_uars_page*, i8, i32, i32 }
%struct.mlx5_dm = type opaque
%struct.mlx5_vxlan = type opaque
%struct.mlx5_geneve = type opaque
%struct.anon.150 = type { %struct.mlx5_rsvd_gids, i32 }
%struct.mlx5_rsvd_gids = type { i32, i32, %struct.ida }
%struct.mlx5_clock = type { %struct.mlx5_nb, %struct.seqlock_t, %struct.cyclecounter, %struct.timecounter, %struct.hwtstamp_config, i32, i64, %struct.delayed_work, %struct.ptp_clock*, %struct.ptp_clock_info, %struct.mlx5_pps }
%struct.cyclecounter = type { i64 (%struct.cyclecounter*)*, i64, i32, i32 }
%struct.timecounter = type { %struct.cyclecounter*, i64, i64, i64, i64 }
%struct.hwtstamp_config = type { i32, i32, i32 }
%struct.ptp_clock = type opaque
%struct.ptp_clock_info = type { %struct.module*, [16 x i8], i32, i32, i32, i32, i32, i32, %struct.ptp_pin_desc*, i32 (%struct.ptp_clock_info*, i64)*, i32 (%struct.ptp_clock_info*, i32)*, i32 (%struct.ptp_clock_info*, i32)*, i32 (%struct.ptp_clock_info*, i64)*, i32 (%struct.ptp_clock_info*, %struct.timespec64*)*, i32 (%struct.ptp_clock_info*, %struct.timespec64*, %struct.ptp_system_timestamp*)*, i32 (%struct.ptp_clock_info*, %struct.system_device_crosststamp*)*, i32 (%struct.ptp_clock_info*, %struct.timespec64*)*, i32 (%struct.ptp_clock_info*, %struct.ptp_clock_request*, i32)*, i32 (%struct.ptp_clock_info*, i32, i32, i32)*, i64 (%struct.ptp_clock_info*)* }
%struct.ptp_pin_desc = type { [64 x i8], i32, i32, i32, [5 x i32] }
%struct.ptp_system_timestamp = type { %struct.timespec64, %struct.timespec64 }
%struct.system_device_crosststamp = type { i64, i64, i64 }
%struct.ptp_clock_request = type { i32, %union.anon.151 }
%union.anon.151 = type { %struct.ptp_perout_request }
%struct.ptp_perout_request = type { %union.anon.152, %struct.ptp_clock_time, i32, i32, %union.anon.153 }
%union.anon.152 = type { %struct.ptp_clock_time }
%struct.ptp_clock_time = type { i64, i32, i32 }
%union.anon.153 = type { %struct.ptp_clock_time }
%struct.mlx5_pps = type { [8 x i8], %struct.work_struct, [8 x i64], i8 }
%struct.mlx5_ib_clock_info = type opaque
%struct.mlx5_fw_tracer = type opaque
%struct.mlx5_rsc_dump = type opaque
%struct.mlx5_hv_vhca = type opaque
%struct.mlx5_nb = type { %struct.notifier_block, i8 }
%struct.mlx5_eswitch_fdb = type { %union.anon.154, i32 }
%union.anon.154 = type { %struct.offloads_fdb }
%struct.offloads_fdb = type { %struct.mlx5_flow_namespace*, %struct.mlx5_flow_table*, %struct.mlx5_flow_group*, %struct.mlx5_flow_group*, %struct.mlx5_flow_handle**, %struct.mlx5_flow_group*, %struct.mlx5_flow_handle*, %struct.mlx5_flow_handle*, i32, %struct.mlx5_fs_chains*, %struct.anon.155 }
%struct.mlx5_fs_chains = type opaque
%struct.anon.155 = type { [256 x %struct.hlist_head], %struct.mutex }
%struct.esw_mc_addr = type { %struct.l2addr_node, %struct.mlx5_flow_handle*, i32 }
%struct.l2addr_node = type { %struct.hlist_node, [6 x i8] }
%struct.mlx5_vport = type { %struct.mlx5_core_dev*, i32, [256 x %struct.hlist_head], [256 x %struct.hlist_head], %struct.mlx5_flow_handle*, %struct.mlx5_flow_handle*, %struct.work_struct, %struct.vport_ingress, %struct.vport_egress, i32, i32, %struct.mlx5_vport_info, %struct.anon.162, i8, i32, %struct.devlink_port* }
%struct.vport_ingress = type { %struct.mlx5_flow_table*, %struct.mlx5_flow_handle*, %struct.anon.156, %struct.anon.157 }
%struct.anon.156 = type { %struct.mlx5_flow_group*, %struct.mlx5_flow_group*, %struct.mlx5_flow_group*, %struct.mlx5_flow_group*, %struct.mlx5_flow_handle*, %struct.mlx5_fc* }
%struct.mlx5_fc = type opaque
%struct.anon.157 = type { %struct.mlx5_flow_group*, %struct.mlx5_flow_group*, %struct.mlx5_modify_hdr*, %struct.mlx5_flow_handle* }
%struct.mlx5_modify_hdr = type { i32, %union.anon.158 }
%union.anon.158 = type { %struct.mlx5_fs_dr_action }
%struct.vport_egress = type { %struct.mlx5_flow_table*, %struct.mlx5_flow_handle*, %struct.mlx5_flow_group*, %union.anon.159 }
%union.anon.159 = type { %struct.anon.160 }
%struct.anon.160 = type { %struct.mlx5_flow_group*, %struct.mlx5_flow_handle*, %struct.mlx5_fc* }
%struct.mlx5_vport_info = type { [6 x i8], i16, i8, i64, i32, i32, i32, i8, i8 }
%struct.anon.162 = type { i8, i32, i32 }
%struct.anon.164 = type { i8, i32 }
%struct.mlx5_esw_offload = type { %struct.mlx5_flow_table*, %struct.mlx5_flow_group*, %struct.mlx5_modify_hdr*, %struct.mlx5_flow_table*, %struct.mlx5_flow_group*, %struct.mlx5_eswitch_rep*, %struct.list_head, %struct.mutex, %struct.mutex, [256 x %struct.hlist_head], %struct.mutex, [256 x %struct.hlist_head], %struct.mod_hdr_tbl, [256 x %struct.hlist_head], %struct.mutex, [2 x %struct.mlx5_eswitch_rep_ops*], i8, %struct.atomic64_t, i32, %struct.ida, i32 }
%struct.mlx5_eswitch_rep = type { [2 x %struct.mlx5_eswitch_rep_data], i16, i16, i16, i32 }
%struct.mlx5_eswitch_rep_data = type { i8*, %struct.atomic_t }
%struct.mod_hdr_tbl = type { %struct.mutex, [256 x %struct.hlist_head] }
%struct.mlx5_eswitch_rep_ops = type { i32 (%struct.mlx5_core_dev*, %struct.mlx5_eswitch_rep*)*, void (%struct.mlx5_eswitch_rep*)*, i8* (%struct.mlx5_eswitch_rep*)* }
%struct.mlx5_esw_functions = type { %struct.mlx5_nb, i16 }
%struct.anon.165 = type { i32 }
%struct.mlx5_vport_tbl_attr = type { i16, i16, i16 }
%struct.mlx5_vport_table = type { %struct.hlist_node, %struct.mlx5_flow_table*, i32, %struct.mlx5_vport_key }
%struct.mlx5_vport_key = type <{ i32, i16, i16, i16 }>
%struct.mlx5_flow_spec = type { i8, [128 x i32], [128 x i32], %struct.mlx5_flow_context }
%struct.mlx5_flow_context = type { i32, i32, i32 }
%struct.mlx5_flow_attr = type { i32, %struct.mlx5_fc*, %struct.mlx5_modify_hdr*, %struct.mlx5_ct_attr, %struct.mlx5e_tc_flow_parse_attr*, i32, i16, i32, %struct.mlx5_flow_table*, %struct.mlx5_flow_table*, i8, i8, i32, %union.anon.192 }
%struct.mlx5_ct_attr = type { i16, i16, %struct.mlx5_ct_flow*, %struct.nf_flowtable*, i32 }
%struct.mlx5_ct_flow = type opaque
%struct.nf_flowtable = type opaque
%struct.mlx5e_tc_flow_parse_attr = type opaque
%union.anon.192 = type { [0 x %struct.mlx5_esw_flow_attr] }
%struct.mlx5_esw_flow_attr = type { %struct.mlx5_eswitch_rep*, %struct.mlx5_core_dev*, %struct.mlx5_core_dev*, i32, i32, [2 x i16], [2 x i16], [2 x i8], i8, [2 x %struct.anon.193], %struct.mlx5_pkt_reformat* }
%struct.anon.193 = type { i32, %struct.mlx5_eswitch_rep*, %struct.mlx5_pkt_reformat*, %struct.mlx5_core_dev*, %struct.mlx5_termtbl_handle* }
%struct.mlx5_termtbl_handle = type opaque
%struct.mlx5_flow_act = type { i32, %struct.mlx5_modify_hdr*, %struct.mlx5_pkt_reformat*, %union.anon.194, i32, [2 x %struct.mlx5_fs_vlan], %struct.ib_counters* }
%union.anon.194 = type { i64 }
%struct.mlx5_fs_vlan = type { i16, i16, i8 }
%struct.ib_counters = type { %struct.ib_device*, %struct.ib_uobject*, %struct.atomic_t }
%struct.ib_device = type { %struct.device*, %struct.ib_device_ops, [64 x i8], %struct.callback_head, %struct.list_head, %struct.rw_semaphore, %struct.spinlock, %struct.rw_semaphore, %struct.xarray, %struct.mutex, %struct.rwlock_t, %struct.ib_port_data*, i32, %union.anon.217, [3 x %struct.attribute_group*], i64, i64, [64 x i8], i64, i32, i8, i8, i8, %struct.ib_device_attr, %struct.attribute_group*, %struct.rdma_hw_stats*, i32, %struct.spinlock, [3 x %struct.list_head], %struct.rdma_restrack_root*, %struct.uapi_definition*, %struct.refcount_struct, %struct.completion, %struct.work_struct, %struct.rdma_link_ops*, %struct.mutex, %struct.xarray, [16 x i8], i32, i32 }
%struct.ib_device_ops = type { %struct.module*, i32, i32, i8, i32 (%struct.ib_qp*, %struct.ib_send_wr*, %struct.ib_send_wr**)*, i32 (%struct.ib_qp*, %struct.ib_recv_wr*, %struct.ib_recv_wr**)*, void (%struct.ib_qp*)*, void (%struct.ib_qp*)*, i32 (%struct.ib_cq*, i32, %struct.ib_wc*)*, i32 (%struct.ib_cq*, i32)*, i32 (%struct.ib_cq*, i32)*, i32 (%struct.ib_cq*, i32)*, i32 (%struct.ib_srq*, %struct.ib_recv_wr*, %struct.ib_recv_wr**)*, i32 (%struct.ib_device*, i32, i8, %struct.ib_wc*, %struct.ib_grh*, %struct.ib_mad*, %struct.ib_mad*, i64*, i16*)*, i32 (%struct.ib_device*, %struct.ib_device_attr*, %struct.ib_udata*)*, i32 (%struct.ib_device*, i32, %struct.ib_device_modify*)*, void (%struct.ib_device*, i8*)*, %struct.cpumask* (%struct.ib_device*, i32)*, i32 (%struct.ib_device*, i8, %struct.ib_port_attr*)*, i32 (%struct.ib_device*, i8, i32, %struct.ib_port_modify*)*, i32 (%struct.ib_device*, i8, %struct.ib_port_immutable*)*, i32 (%struct.ib_device*, i8)*, %struct.net_device* (%struct.ib_device*, i8)*, %struct.net_device* (%struct.ib_device*, i8, i32, i8*, i8, void (%struct.net_device*)*)*, i32 (%struct.ib_device*, i8, i32, %struct.rdma_netdev_alloc_params*)*, i32 (%struct.ib_device*, i8, i32, %union.ib_gid*)*, i32 (%struct.ib_gid_attr*, i8**)*, i32 (%struct.ib_gid_attr*, i8**)*, i32 (%struct.ib_device*, i8, i16, i16*)*, i32 (%struct.ib_ucontext*, %struct.ib_udata*)*, void (%struct.ib_ucontext*)*, i32 (%struct.ib_ucontext*, %struct.vm_area_struct*)*, void (%struct.rdma_user_mmap_entry*)*, void (%struct.ib_ucontext*)*, i32 (%struct.ib_pd*, %struct.ib_udata*)*, i32 (%struct.ib_pd*, %struct.ib_udata*)*, i32 (%struct.ib_ah*, %struct.rdma_ah_init_attr*, %struct.ib_udata*)*, i32 (%struct.ib_ah*, %struct.rdma_ah_attr*)*, i32 (%struct.ib_ah*, %struct.rdma_ah_attr*)*, i32 (%struct.ib_ah*, i32)*, i32 (%struct.ib_srq*, %struct.ib_srq_init_attr*, %struct.ib_udata*)*, i32 (%struct.ib_srq*, %struct.ib_srq_attr*, i32, %struct.ib_udata*)*, i32 (%struct.ib_srq*, %struct.ib_srq_attr*)*, i32 (%struct.ib_srq*, %struct.ib_udata*)*, %struct.ib_qp* (%struct.ib_pd*, %struct.ib_qp_init_attr*, %struct.ib_udata*)*, i32 (%struct.ib_qp*, %struct.ib_qp_attr*, i32, %struct.ib_udata*)*, i32 (%struct.ib_qp*, %struct.ib_qp_attr*, i32, %struct.ib_qp_init_attr*)*, i32 (%struct.ib_qp*, %struct.ib_udata*)*, i32 (%struct.ib_cq*, %struct.ib_cq_init_attr*, %struct.ib_udata*)*, i32 (%struct.ib_cq*, i16, i16)*, i32 (%struct.ib_cq*, %struct.ib_udata*)*, i32 (%struct.ib_cq*, i32, %struct.ib_udata*)*, %struct.ib_mr* (%struct.ib_pd*, i32)*, %struct.ib_mr* (%struct.ib_pd*, i64, i64, i64, i32, %struct.ib_udata*)*, i32 (%struct.ib_mr*, i32, i64, i64, i64, i32, %struct.ib_pd*, %struct.ib_udata*)*, i32 (%struct.ib_mr*, %struct.ib_udata*)*, %struct.ib_mr* (%struct.ib_pd*, i32, i32)*, %struct.ib_mr* (%struct.ib_pd*, i32, i32)*, i32 (%struct.ib_pd*, i32, i32, %struct.ib_sge*, i32, %struct.uverbs_attr_bundle*)*, i32 (%struct.ib_mr*, %struct.scatterlist*, i32, i32*)*, i32 (%struct.ib_mr*, i32, %struct.ib_mr_status*)*, i32 (%struct.ib_mw*, %struct.ib_udata*)*, i32 (%struct.ib_mw*)*, i32 (%struct.ib_qp*, %union.ib_gid*, i16)*, i32 (%struct.ib_qp*, %union.ib_gid*, i16)*, i32 (%struct.ib_xrcd*, %struct.ib_udata*)*, i32 (%struct.ib_xrcd*, %struct.ib_udata*)*, %struct.ib_flow* (%struct.ib_qp*, %struct.ib_flow_attr*, %struct.ib_udata*)*, i32 (%struct.ib_flow*)*, %struct.ib_flow_action* (%struct.ib_device*, %struct.ib_flow_action_attrs_esp*, %struct.uverbs_attr_bundle*)*, i32 (%struct.ib_flow_action*)*, i32 (%struct.ib_flow_action*, %struct.ib_flow_action_attrs_esp*, %struct.uverbs_attr_bundle*)*, i32 (%struct.ib_device*, i32, i8, i32)*, i32 (%struct.ib_device*, i32, i8, %struct.ifla_vf_info*)*, i32 (%struct.ib_device*, i32, i8, %struct.ifla_vf_stats*)*, i32 (%struct.ib_device*, i32, i8, %struct.ifla_vf_guid*, %struct.ifla_vf_guid*)*, i32 (%struct.ib_device*, i32, i8, i64, i32)*, %struct.ib_wq* (%struct.ib_pd*, %struct.ib_wq_init_attr*, %struct.ib_udata*)*, i32 (%struct.ib_wq*, %struct.ib_udata*)*, i32 (%struct.ib_wq*, %struct.ib_wq_attr*, i32, %struct.ib_udata*)*, i32 (%struct.ib_rwq_ind_table*, %struct.ib_rwq_ind_table_init_attr*, %struct.ib_udata*)*, i32 (%struct.ib_rwq_ind_table*)*, %struct.ib_dm* (%struct.ib_device*, %struct.ib_ucontext*, %struct.ib_dm_alloc_attr*, %struct.uverbs_attr_bundle*)*, i32 (%struct.ib_dm*, %struct.uverbs_attr_bundle*)*, %struct.ib_mr* (%struct.ib_pd*, %struct.ib_dm*, %struct.ib_dm_mr_attr*, %struct.uverbs_attr_bundle*)*, i32 (%struct.ib_counters*, %struct.uverbs_attr_bundle*)*, i32 (%struct.ib_counters*)*, i32 (%struct.ib_counters*, %struct.ib_counters_read_attr*, %struct.uverbs_attr_bundle*)*, i32 (%struct.ib_mr*, %struct.scatterlist*, i32, i32*, %struct.scatterlist*, i32, i32*)*, %struct.rdma_hw_stats* (%struct.ib_device*, i8)*, i32 (%struct.ib_device*, %struct.rdma_hw_stats*, i8, i32)*, i32 (%struct.ib_device*, i8, %struct.kobject*)*, i32 (%struct.sk_buff*, %struct.ib_mr*)*, i32 (%struct.sk_buff*, %struct.ib_mr*)*, i32 (%struct.sk_buff*, %struct.ib_cq*)*, i32 (%struct.sk_buff*, %struct.ib_cq*)*, i32 (%struct.sk_buff*, %struct.ib_qp*)*, i32 (%struct.sk_buff*, %struct.ib_qp*)*, i32 (%struct.sk_buff*, %struct.rdma_cm_id*)*, i32 (%struct.ib_device*)*, void (%struct.ib_device*)*, void (%struct.ib_qp*)*, void (%struct.ib_qp*)*, %struct.ib_qp* (%struct.ib_device*, i32)*, i32 (%struct.iw_cm_id*, %struct.iw_cm_conn_param*)*, i32 (%struct.iw_cm_id*, %struct.iw_cm_conn_param*)*, i32 (%struct.iw_cm_id*, i8*, i8)*, i32 (%struct.iw_cm_id*, i32)*, i32 (%struct.iw_cm_id*)*, i32 (%struct.rdma_counter*, %struct.ib_qp*)*, i32 (%struct.ib_qp*)*, i32 (%struct.rdma_counter*)*, %struct.rdma_hw_stats* (%struct.rdma_counter*)*, i32 (%struct.rdma_counter*)*, i32 (%struct.sk_buff*, %struct.ib_mr*)*, i32 (%struct.ib_ucontext*, %struct.uverbs_attr_bundle*)*, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.ib_qp = type { %struct.ib_device*, %struct.ib_pd*, %struct.ib_cq*, %struct.ib_cq*, %struct.spinlock, i32, %struct.list_head, %struct.list_head, %struct.ib_srq*, %struct.ib_xrcd*, %struct.list_head, %struct.atomic_t, %struct.list_head, %struct.ib_qp*, %struct.ib_uqp_object*, void (%struct.ib_event*, i8*)*, i8*, %struct.ib_gid_attr*, %struct.ib_gid_attr*, i32, i32, i32, i32, %struct.ib_rwq_ind_table*, %struct.ib_qp_security*, i8, i8, %struct.rdma_restrack_entry, %struct.rdma_counter* }
%struct.ib_pd = type { i32, i32, %struct.ib_device*, %struct.ib_uobject*, %struct.atomic_t, i32, %struct.ib_mr*, %struct.rdma_restrack_entry }
%struct.ib_mr = type { %struct.ib_device*, %struct.ib_pd*, i32, i32, i64, i64, i32, i32, i8, %union.anon.195, %struct.ib_dm*, %struct.ib_sig_attrs*, %struct.rdma_restrack_entry }
%union.anon.195 = type { %struct.list_head }
%struct.ib_dm = type { %struct.ib_device*, i32, i32, %struct.ib_uobject*, %struct.atomic_t }
%struct.ib_sig_attrs = type { i8, %struct.ib_sig_domain, %struct.ib_sig_domain, i32 }
%struct.ib_sig_domain = type { i32, %union.anon.196 }
%union.anon.196 = type { %struct.ib_t10_dif_domain }
%struct.ib_t10_dif_domain = type { i32, i16, i16, i16, i32, i8, i8, i8, i16 }
%struct.ib_cq = type { %struct.ib_device*, %struct.ib_ucq_object*, void (%struct.ib_cq*, i8*)*, void (%struct.ib_event*, i8*)*, i8*, i32, i32, %struct.atomic_t, i32, %struct.ib_wc*, %struct.list_head, %union.anon.203, %struct.workqueue_struct*, %struct.dim*, i64, i8, i32, %struct.rdma_restrack_entry }
%struct.ib_ucq_object = type opaque
%struct.ib_wc = type { %union.anon.201, i32, i32, i32, i32, %struct.ib_qp*, %union.anon.202, i32, i32, i32, i16, i8, i8, i8, [6 x i8], i16, i8 }
%union.anon.201 = type { i64 }
%union.anon.202 = type { i32 }
%union.anon.203 = type { %struct.irq_poll }
%struct.irq_poll = type { %struct.list_head, i64, i32, i32 (%struct.irq_poll*, i32)* }
%struct.dim = type { i8, %struct.dim_stats, %struct.dim_sample, %struct.dim_sample, %struct.work_struct, i8*, i8, i8, i8, i8, i8, i8 }
%struct.dim_stats = type { i32, i32, i32, i32, i32 }
%struct.dim_sample = type { i64, i32, i32, i16, i32 }
%struct.ib_srq = type { %struct.ib_device*, %struct.ib_pd*, %struct.ib_usrq_object*, {}*, i8*, i32, %struct.atomic_t, %struct.anon.198 }
%struct.ib_usrq_object = type opaque
%struct.anon.198 = type { %struct.ib_cq*, %union.anon.199 }
%union.anon.199 = type { %struct.anon.200 }
%struct.anon.200 = type { %struct.ib_xrcd*, i32 }
%struct.ib_xrcd = type { %struct.ib_device*, %struct.atomic_t, %struct.inode*, %struct.rw_semaphore, %struct.xarray }
%struct.ib_uqp_object = type opaque
%struct.ib_event = type { %struct.ib_device*, %union.anon.197, i32 }
%union.anon.197 = type { %struct.ib_cq* }
%struct.ib_gid_attr = type { %struct.net_device*, %struct.ib_device*, %union.ib_gid, i32, i16, i8 }
%union.ib_gid = type { %struct.anon.204 }
%struct.anon.204 = type { i64, i64 }
%struct.ib_rwq_ind_table = type { %struct.ib_device*, %struct.ib_uobject*, %struct.atomic_t, i32, i32, %struct.ib_wq** }
%struct.ib_wq = type { %struct.ib_device*, %struct.ib_uwq_object*, i8*, {}*, %struct.ib_pd*, %struct.ib_cq*, i32, i32, i32, %struct.atomic_t }
%struct.ib_uwq_object = type opaque
%struct.ib_qp_security = type { %struct.ib_qp*, %struct.ib_device*, %struct.mutex, %struct.ib_ports_pkeys*, %struct.list_head, i8*, i8, %struct.atomic_t, %struct.completion, i32 }
%struct.ib_ports_pkeys = type { %struct.ib_port_pkey, %struct.ib_port_pkey }
%struct.ib_port_pkey = type { i32, i16, i8, %struct.list_head, %struct.list_head, %struct.ib_qp_security* }
%struct.rdma_restrack_entry = type { i8, %struct.kref, %struct.completion, %struct.task_struct*, i8*, i32, i8, i32 }
%struct.rdma_counter = type { %struct.rdma_restrack_entry, %struct.ib_device*, i32, %struct.kref, %struct.rdma_counter_mode, %struct.mutex, %struct.rdma_hw_stats*, i8 }
%struct.rdma_counter_mode = type { i32, i32, %struct.auto_mode_param }
%struct.auto_mode_param = type { i32 }
%struct.ib_send_wr = type { %struct.ib_send_wr*, %union.anon.205, %struct.ib_sge*, i32, i32, i32, %union.anon.206 }
%union.anon.205 = type { i64 }
%struct.ib_sge = type { i64, i32, i32 }
%union.anon.206 = type { i32 }
%struct.ib_recv_wr = type { %struct.ib_recv_wr*, %union.anon.207, %struct.ib_sge*, i32 }
%union.anon.207 = type { i64 }
%struct.ib_grh = type { i32, i16, i8, i8, %union.ib_gid, %union.ib_gid }
%struct.ib_mad = type opaque
%struct.ib_udata = type { i8*, i8*, i64, i64 }
%struct.ib_device_modify = type { i64, [64 x i8] }
%struct.ib_port_attr = type { i64, i32, i32, i32, i32, i32, i8, i32, i32, i32, i32, i16, i32, i32, i8, i8, i8, i8, i8, i8, i16, i8, i16 }
%struct.ib_port_modify = type { i32, i32, i8 }
%struct.ib_port_immutable = type { i32, i32, i32, i32 }
%struct.rdma_netdev_alloc_params = type { i64, i32, i32, i8*, i32 (%struct.ib_device*, i8, %struct.net_device*, i8*)* }
%struct.ib_ucontext = type { %struct.ib_device*, %struct.ib_uverbs_file*, i8, %struct.ib_rdmacg_object, %struct.rdma_restrack_entry, %struct.xarray }
%struct.ib_uverbs_file = type opaque
%struct.ib_rdmacg_object = type {}
%struct.rdma_user_mmap_entry = type { %struct.kref, %struct.ib_ucontext*, i64, i64, i8 }
%struct.ib_ah = type { %struct.ib_device*, %struct.ib_pd*, %struct.ib_uobject*, %struct.ib_gid_attr*, i32 }
%struct.rdma_ah_init_attr = type { %struct.rdma_ah_attr*, i32, %struct.net_device* }
%struct.rdma_ah_attr = type { %struct.ib_global_route, i8, i8, i8, i8, i32, %union.anon.209 }
%struct.ib_global_route = type { %struct.ib_gid_attr*, %union.ib_gid, i32, i8, i8, i8 }
%union.anon.209 = type { %struct.opa_ah_attr }
%struct.opa_ah_attr = type { i32, i8, i8 }
%struct.ib_srq_init_attr = type { void (%struct.ib_event*, i8*)*, i8*, %struct.ib_srq_attr, i32, %struct.anon.210 }
%struct.ib_srq_attr = type { i32, i32, i32 }
%struct.anon.210 = type { %struct.ib_cq*, %union.anon.211 }
%union.anon.211 = type { %struct.anon.212 }
%struct.anon.212 = type { %struct.ib_xrcd* }
%struct.ib_qp_init_attr = type { void (%struct.ib_event*, i8*)*, i8*, %struct.ib_cq*, %struct.ib_cq*, %struct.ib_srq*, %struct.ib_xrcd*, %struct.ib_qp_cap, i32, i32, i32, i8, %struct.ib_rwq_ind_table*, i32 }
%struct.ib_qp_cap = type { i32, i32, i32, i32, i32, i32 }
%struct.ib_qp_attr = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.ib_qp_cap, %struct.rdma_ah_attr, %struct.rdma_ah_attr, i16, i16, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, %struct.net_device* }
%struct.ib_cq_init_attr = type { i32, i32, i32 }
%struct.uverbs_attr_bundle = type opaque
%struct.scatterlist = type { i64, i32, i32, i64, i32 }
%struct.ib_mr_status = type { i32, %struct.ib_sig_err }
%struct.ib_sig_err = type { i32, i32, i32, i64, i32 }
%struct.ib_mw = type { %struct.ib_device*, %struct.ib_pd*, %struct.ib_uobject*, i32, i32 }
%struct.ib_flow = type { %struct.ib_qp*, %struct.ib_device*, %struct.ib_uobject* }
%struct.ib_flow_attr = type { i32, i16, i16, i32, i8, i8, [0 x %union.ib_flow_spec] }
%union.ib_flow_spec = type { %struct.ib_flow_spec_action_handle, [72 x i8] }
%struct.ib_flow_spec_action_handle = type { i32, i16, %struct.ib_flow_action* }
%struct.ib_flow_action = type { %struct.ib_device*, %struct.ib_uobject*, i32, %struct.atomic_t }
%struct.ib_flow_action_attrs_esp = type { %struct.ib_flow_action_attrs_esp_keymats*, %struct.ib_flow_action_attrs_esp_replays*, %struct.ib_flow_spec_list*, i32, i32, i32, i32, i64, i64 }
%struct.ib_flow_action_attrs_esp_keymats = type { i32, %union.anon.215 }
%union.anon.215 = type { %struct.ib_uverbs_flow_action_esp_keymat_aes_gcm }
%struct.ib_uverbs_flow_action_esp_keymat_aes_gcm = type { i64, i32, i32, i32, i32, [8 x i32] }
%struct.ib_flow_action_attrs_esp_replays = type { i32, %union.anon.216 }
%union.anon.216 = type { %struct.ib_uverbs_flow_action_esp_replay_bmp }
%struct.ib_uverbs_flow_action_esp_replay_bmp = type { i32 }
%struct.ib_flow_spec_list = type { %struct.ib_flow_spec_list*, %union.ib_flow_spec }
%struct.ib_wq_init_attr = type { i8*, i32, i32, i32, %struct.ib_cq*, void (%struct.ib_event*, i8*)*, i32 }
%struct.ib_wq_attr = type { i32, i32, i32, i32 }
%struct.ib_rwq_ind_table_init_attr = type { i32, %struct.ib_wq** }
%struct.ib_dm_alloc_attr = type { i64, i32, i32 }
%struct.ib_dm_mr_attr = type { i64, i64, i32 }
%struct.ib_counters_read_attr = type { i64*, i32, i32 }
%struct.rdma_cm_id = type opaque
%struct.iw_cm_id = type opaque
%struct.iw_cm_conn_param = type opaque
%struct.ib_port_data = type { %struct.ib_device*, %struct.ib_port_immutable, %struct.spinlock, %struct.list_head, %struct.ib_port_cache, %struct.spinlock, %struct.net_device*, %struct.hlist_node, %struct.rdma_port_counter, %struct.rdma_hw_stats* }
%struct.ib_port_cache = type { i64, %struct.ib_pkey_cache*, %struct.ib_gid_table*, i8, i32 }
%struct.ib_pkey_cache = type opaque
%struct.ib_gid_table = type opaque
%struct.rdma_port_counter = type { %struct.rdma_counter_mode, %struct.rdma_hw_stats*, i32, %struct.mutex }
%union.anon.217 = type { %struct.ib_core_device }
%struct.ib_core_device = type { %struct.device, %struct.possible_net_t, %struct.kobject*, %struct.list_head, %struct.ib_device* }
%struct.ib_device_attr = type { i64, i64, i64, i64, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i8, i32, i32, %struct.ib_odp_caps, i64, i64, %struct.ib_rss_caps, i32, i32, %struct.ib_tm_caps, %struct.ib_cq_caps, i64, i32 }
%struct.ib_odp_caps = type { i64, %struct.anon.208 }
%struct.anon.208 = type { i32, i32, i32, i32 }
%struct.ib_rss_caps = type { i32, i32, i32 }
%struct.ib_tm_caps = type { i32, i32, i32, i32, i32 }
%struct.ib_cq_caps = type { i16, i16 }
%struct.rdma_hw_stats = type { %struct.mutex, i64, i64, i8**, i32, [0 x i64] }
%struct.rdma_restrack_root = type opaque
%struct.uapi_definition = type opaque
%struct.rdma_link_ops = type { %struct.list_head, i8*, i32 (i8*, %struct.net_device*)* }
%struct.ib_uobject = type { i64, %struct.ib_uverbs_file*, %struct.ib_ucontext*, i8*, %struct.list_head, %struct.ib_rdmacg_object, i32, %struct.kref, %struct.atomic_t, %struct.callback_head, %struct.uverbs_api_object* }
%struct.uverbs_api_object = type opaque
%struct.mlx5_host_work = type { %struct.work_struct, %struct.mlx5_eswitch* }
%struct.mlx5_flow_table_attr = type { i32, i32, i32, i32, %struct.mlx5_flow_table*, %struct.anon.218 }
%struct.anon.218 = type { i32, i32 }
%struct.__una_u32 = type { i32 }

@.str = private unnamed_addr constant [57 x i8] c"E-Switch: FDB: Failed to add send to vport rule err %ld\0A\00", align 1
@.str.1 = private unnamed_addr constant [62 x i8] c"E-Switch: Failed to create restore rule for tag: %d, err(%d)\0A\00", align 1
@.str.2 = private unnamed_addr constant [60 x i8] c"E-Switch: fs offloads: Failed to add vport rx rule err %ld\0A\00", align 1
@esw_offloads_enable.__key = internal global %struct.lock_class_key zeroinitializer, align 1, !dbg !0
@.str.3 = private unnamed_addr constant [29 x i8] c"&esw->offloads.termtbl_mutex\00", align 1
@mlx5_devlink_eswitch_inline_mode_set.__msg = internal constant [36 x i8] c"mlx5_core: Inline mode can't be set\00", align 16, !dbg !12276
@mlx5_devlink_eswitch_inline_mode_set.__msg.4 = internal constant [59 x i8] c"mlx5_core: Can't set inline mode when flows are configured\00", align 16, !dbg !12282
@mlx5_devlink_eswitch_inline_mode_set.__msg.5 = internal constant [45 x i8] c"mlx5_core: Failed to set min inline on vport\00", align 16, !dbg !12287
@mlx5_devlink_eswitch_encap_mode_set.__msg = internal constant [61 x i8] c"mlx5_core: Can't set encapsulation when flows are configured\00", align 16, !dbg !12292
@mlx5_devlink_eswitch_encap_mode_set.__msg.6 = internal constant [45 x i8] c"mlx5_core: Failed re-creating fast FDB table\00", align 16, !dbg !12298
@.str.7 = private unnamed_addr constant [59 x i8] c"drivers/net/ethernet/mellanox/mlx5/core/eswitch_offloads.c\00", align 1
@.str.8 = private unnamed_addr constant [39 x i8] c"E-Switch: Failed to get FDB namespace\0A\00", align 1
@.str.9 = private unnamed_addr constant [56 x i8] c"E-Switch: Failed to create per vport FDB Table err %ld\0A\00", align 1
@mlx5_core_debug_mask = external dso_local global i32, align 4
@kmalloc_caches = external dso_local global [3 x [14 x %struct.kmem_cache*]], align 16
@.str.10 = private unnamed_addr constant [21 x i8] c"include/linux/slab.h\00", align 1
@esw_offloads_steering_init.__key = internal global %struct.lock_class_key zeroinitializer, align 1, !dbg !12300
@.str.11 = private unnamed_addr constant [37 x i8] c"&esw->fdb_table.offloads.vports.lock\00", align 1
@.str.12 = private unnamed_addr constant [49 x i8] c"E-Switch: Failed to get offloads flow namespace\0A\00", align 1
@.str.13 = private unnamed_addr constant [51 x i8] c"E-Switch: Failed to create offloads table, err %d\0A\00", align 1
@.str.14 = private unnamed_addr constant [50 x i8] c"E-Switch: Failed to create restore table, err %d\0A\00", align 1
@.str.15 = private unnamed_addr constant [56 x i8] c"E-Switch: Failed to create restore flow group, err: %d\0A\00", align 1
@.str.16 = private unnamed_addr constant [56 x i8] c"E-Switch: Failed to create restore mod header, err: %d\0A\00", align 1
@.str.17 = private unnamed_addr constant [56 x i8] c"%s:%d:(pid %d): Failed to create vport rx group err %d\0A\00", align 1
@__func__.esw_create_vport_rx_group = private unnamed_addr constant [26 x i8] c"esw_create_vport_rx_group\00", align 1
@current_task = external dso_local global %struct.task_struct*, section ".data", align 8
@esw_offloads_devcom_init.__key = internal global %struct.lock_class_key zeroinitializer, align 1, !dbg !12303
@.str.18 = private unnamed_addr constant [26 x i8] c"&esw->offloads.peer_mutex\00", align 1
@.str.19 = private unnamed_addr constant [67 x i8] c"%s:%d:(pid %d): esw offloads devcom event failure, event %u err %d\00", align 1
@__func__.mlx5_esw_offloads_devcom_event = private unnamed_addr constant [31 x i8] c"mlx5_esw_offloads_devcom_event\00", align 1
@.str.20 = private unnamed_addr constant [57 x i8] c"E-Switch: FDB: Failed to add peer miss flow rule err %d\0A\00", align 1
@esw_offloads_start.__msg = internal constant [46 x i8] c"mlx5_core: Failed setting eswitch to offloads\00", align 16, !dbg !12308
@esw_offloads_start.__msg.21 = internal constant [49 x i8] c"mlx5_core: Failed setting eswitch back to legacy\00", align 16, !dbg !12316
@esw_offloads_start.__msg.22 = internal constant [51 x i8] c"mlx5_core: Inline mode is different between vports\00", align 16, !dbg !12321
@esw_offloads_stop.__msg = internal constant [44 x i8] c"mlx5_core: Failed setting eswitch to legacy\00", align 16, !dbg !12326
@esw_offloads_stop.__msg.23 = internal constant [51 x i8] c"mlx5_core: Failed setting eswitch back to offloads\00", align 16, !dbg !12330
@.str.24 = private unnamed_addr constant [22 x i8] c"include/net/devlink.h\00", align 1
@.str.25 = private unnamed_addr constant [44 x i8] c"E-Switch: Failed to get FDB flow namespace\0A\00", align 1
@.str.26 = private unnamed_addr constant [53 x i8] c"E-Switch: Failed to set FDB namespace steering mode\0A\00", align 1
@.str.27 = private unnamed_addr constant [55 x i8] c"E-Switch: Failed to create slow path FDB Table err %d\0A\00", align 1
@.str.28 = private unnamed_addr constant [45 x i8] c"E-Switch: Failed to open fdb chains err(%d)\0A\00", align 1
@.str.29 = private unnamed_addr constant [61 x i8] c"E-Switch: Failed to create send-to-vport flow group err(%d)\0A\00", align 1
@.str.30 = private unnamed_addr constant [57 x i8] c"E-Switch: Failed to create peer miss flow group err(%d)\0A\00", align 1
@.str.31 = private unnamed_addr constant [52 x i8] c"E-Switch: Failed to create miss flow group err(%d)\0A\00", align 1
@.str.32 = private unnamed_addr constant [60 x i8] c"E-Switch: FDB: Failed to add unicast miss flow rule err %d\0A\00", align 1
@.str.33 = private unnamed_addr constant [62 x i8] c"E-Switch: FDB: Failed to add multicast miss flow rule err %d\0A\00", align 1
@.str.34 = private unnamed_addr constant [37 x i8] c"E-Switch: ECPF vport doesn't exist!\0A\00", align 1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @mlx5_esw_vport_tbl_get(%struct.mlx5_eswitch* %esw) #0 !dbg !12337 {
entry:
  %retval = alloca i32, align 4
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  %attr = alloca %struct.mlx5_vport_tbl_attr, align 2
  %fdb = alloca %struct.mlx5_flow_table*, align 8
  %vport = alloca %struct.mlx5_vport*, align 8
  %i = alloca i32, align 4
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !12338, metadata !DIExpression()), !dbg !12339
  call void @llvm.dbg.declare(metadata %struct.mlx5_vport_tbl_attr* %attr, metadata !12340, metadata !DIExpression()), !dbg !12346
  call void @llvm.dbg.declare(metadata %struct.mlx5_flow_table** %fdb, metadata !12347, metadata !DIExpression()), !dbg !12348
  call void @llvm.dbg.declare(metadata %struct.mlx5_vport** %vport, metadata !12349, metadata !DIExpression()), !dbg !12350
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12351, metadata !DIExpression()), !dbg !12352
  %chain = getelementptr inbounds %struct.mlx5_vport_tbl_attr, %struct.mlx5_vport_tbl_attr* %attr, i32 0, i32 0, !dbg !12353
  store i16 0, i16* %chain, align 2, !dbg !12354
  %prio = getelementptr inbounds %struct.mlx5_vport_tbl_attr, %struct.mlx5_vport_tbl_attr* %attr, i32 0, i32 1, !dbg !12355
  store i16 1, i16* %prio, align 2, !dbg !12356
  store i32 0, i32* %i, align 4, !dbg !12357
  br label %for.cond, !dbg !12357

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !12359
  %vports = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %0, i32 0, i32 6, !dbg !12359
  %1 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vports, align 8, !dbg !12359
  %2 = load i32, i32* %i, align 4, !dbg !12359
  %idxprom = sext i32 %2 to i64, !dbg !12359
  %arrayidx = getelementptr %struct.mlx5_vport, %struct.mlx5_vport* %1, i64 %idxprom, !dbg !12359
  store %struct.mlx5_vport* %arrayidx, %struct.mlx5_vport** %vport, align 8, !dbg !12359
  %3 = load i32, i32* %i, align 4, !dbg !12359
  %4 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !12359
  %total_vports = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %4, i32 0, i32 8, !dbg !12359
  %5 = load i32, i32* %total_vports, align 4, !dbg !12359
  %cmp = icmp slt i32 %3, %5, !dbg !12359
  br i1 %cmp, label %for.body, label %for.end, !dbg !12357

for.body:                                         ; preds = %for.cond
  %6 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport, align 8, !dbg !12361
  %vport1 = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %6, i32 0, i32 1, !dbg !12363
  %7 = load i32, i32* %vport1, align 8, !dbg !12363
  %conv = trunc i32 %7 to i16, !dbg !12361
  %vport2 = getelementptr inbounds %struct.mlx5_vport_tbl_attr, %struct.mlx5_vport_tbl_attr* %attr, i32 0, i32 2, !dbg !12364
  store i16 %conv, i16* %vport2, align 2, !dbg !12365
  %8 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !12366
  %call = call %struct.mlx5_flow_table* @esw_vport_tbl_get(%struct.mlx5_eswitch* %8, %struct.mlx5_vport_tbl_attr* %attr) #8, !dbg !12367
  store %struct.mlx5_flow_table* %call, %struct.mlx5_flow_table** %fdb, align 8, !dbg !12368
  %9 = load %struct.mlx5_flow_table*, %struct.mlx5_flow_table** %fdb, align 8, !dbg !12369
  %10 = bitcast %struct.mlx5_flow_table* %9 to i8*, !dbg !12369
  %call3 = call zeroext i1 @IS_ERR(i8* %10) #8, !dbg !12371
  br i1 %call3, label %if.then, label %if.end, !dbg !12372

if.then:                                          ; preds = %for.body
  br label %out, !dbg !12373

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !12374

for.inc:                                          ; preds = %if.end
  %11 = load i32, i32* %i, align 4, !dbg !12359
  %inc = add i32 %11, 1, !dbg !12359
  store i32 %inc, i32* %i, align 4, !dbg !12359
  br label %for.cond, !dbg !12359, !llvm.loop !12375

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !12377
  br label %return, !dbg !12377

out:                                              ; preds = %if.then
  call void @llvm.dbg.label(metadata !12378), !dbg !12379
  %12 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !12380
  call void @mlx5_esw_vport_tbl_put(%struct.mlx5_eswitch* %12) #8, !dbg !12381
  %13 = load %struct.mlx5_flow_table*, %struct.mlx5_flow_table** %fdb, align 8, !dbg !12382
  %14 = bitcast %struct.mlx5_flow_table* %13 to i8*, !dbg !12382
  %call4 = call i64 @PTR_ERR(i8* %14) #8, !dbg !12383
  %conv5 = trunc i64 %call4 to i32, !dbg !12383
  store i32 %conv5, i32* %retval, align 4, !dbg !12384
  br label %return, !dbg !12384

return:                                           ; preds = %out, %for.end
  %15 = load i32, i32* %retval, align 4, !dbg !12385
  ret i32 %15, !dbg !12385
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.mlx5_flow_table* @esw_vport_tbl_get(%struct.mlx5_eswitch* %esw, %struct.mlx5_vport_tbl_attr* %attr) #0 !dbg !12386 {
entry:
  %retval = alloca %struct.mlx5_flow_table*, align 8
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  %attr.addr = alloca %struct.mlx5_vport_tbl_attr*, align 8
  %dev = alloca %struct.mlx5_core_dev*, align 8
  %ns = alloca %struct.mlx5_flow_namespace*, align 8
  %fdb = alloca %struct.mlx5_flow_table*, align 8
  %e = alloca %struct.mlx5_vport_table*, align 8
  %skey = alloca %struct.mlx5_vport_key, align 1
  %hkey = alloca i32, align 4
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !12390, metadata !DIExpression()), !dbg !12391
  store %struct.mlx5_vport_tbl_attr* %attr, %struct.mlx5_vport_tbl_attr** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_vport_tbl_attr** %attr.addr, metadata !12392, metadata !DIExpression()), !dbg !12393
  call void @llvm.dbg.declare(metadata %struct.mlx5_core_dev** %dev, metadata !12394, metadata !DIExpression()), !dbg !12395
  %0 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !12396
  %dev1 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %0, i32 0, i32 0, !dbg !12397
  %1 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev1, align 8, !dbg !12397
  store %struct.mlx5_core_dev* %1, %struct.mlx5_core_dev** %dev, align 8, !dbg !12395
  call void @llvm.dbg.declare(metadata %struct.mlx5_flow_namespace** %ns, metadata !12398, metadata !DIExpression()), !dbg !12399
  call void @llvm.dbg.declare(metadata %struct.mlx5_flow_table** %fdb, metadata !12400, metadata !DIExpression()), !dbg !12401
  call void @llvm.dbg.declare(metadata %struct.mlx5_vport_table** %e, metadata !12402, metadata !DIExpression()), !dbg !12403
  call void @llvm.dbg.declare(metadata %struct.mlx5_vport_key* %skey, metadata !12404, metadata !DIExpression()), !dbg !12405
  call void @llvm.dbg.declare(metadata i32* %hkey, metadata !12406, metadata !DIExpression()), !dbg !12407
  %2 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !12408
  %fdb_table = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %2, i32 0, i32 2, !dbg !12409
  %3 = getelementptr inbounds %struct.mlx5_eswitch_fdb, %struct.mlx5_eswitch_fdb* %fdb_table, i32 0, i32 0, !dbg !12410
  %offloads = bitcast %union.anon.154* %3 to %struct.offloads_fdb*, !dbg !12410
  %vports = getelementptr inbounds %struct.offloads_fdb, %struct.offloads_fdb* %offloads, i32 0, i32 10, !dbg !12411
  %lock = getelementptr inbounds %struct.anon.155, %struct.anon.155* %vports, i32 0, i32 1, !dbg !12412
  call void @mutex_lock(%struct.mutex* %lock) #8, !dbg !12413
  %4 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !12414
  %5 = load %struct.mlx5_vport_tbl_attr*, %struct.mlx5_vport_tbl_attr** %attr.addr, align 8, !dbg !12415
  %call = call i32 @flow_attr_to_vport_key(%struct.mlx5_eswitch* %4, %struct.mlx5_vport_tbl_attr* %5, %struct.mlx5_vport_key* %skey) #8, !dbg !12416
  store i32 %call, i32* %hkey, align 4, !dbg !12417
  %6 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !12418
  %7 = load i32, i32* %hkey, align 4, !dbg !12419
  %call2 = call %struct.mlx5_vport_table* @esw_vport_tbl_lookup(%struct.mlx5_eswitch* %6, %struct.mlx5_vport_key* %skey, i32 %7) #8, !dbg !12420
  store %struct.mlx5_vport_table* %call2, %struct.mlx5_vport_table** %e, align 8, !dbg !12421
  %8 = load %struct.mlx5_vport_table*, %struct.mlx5_vport_table** %e, align 8, !dbg !12422
  %tobool = icmp ne %struct.mlx5_vport_table* %8, null, !dbg !12422
  br i1 %tobool, label %if.then, label %if.end, !dbg !12424

if.then:                                          ; preds = %entry
  %9 = load %struct.mlx5_vport_table*, %struct.mlx5_vport_table** %e, align 8, !dbg !12425
  %num_rules = getelementptr inbounds %struct.mlx5_vport_table, %struct.mlx5_vport_table* %9, i32 0, i32 2, !dbg !12427
  %10 = load i32, i32* %num_rules, align 8, !dbg !12428
  %inc = add i32 %10, 1, !dbg !12428
  store i32 %inc, i32* %num_rules, align 8, !dbg !12428
  br label %out, !dbg !12429

if.end:                                           ; preds = %entry
  %call3 = call i8* @kzalloc(i64 40, i32 3264) #8, !dbg !12430
  %11 = bitcast i8* %call3 to %struct.mlx5_vport_table*, !dbg !12430
  store %struct.mlx5_vport_table* %11, %struct.mlx5_vport_table** %e, align 8, !dbg !12431
  %12 = load %struct.mlx5_vport_table*, %struct.mlx5_vport_table** %e, align 8, !dbg !12432
  %tobool4 = icmp ne %struct.mlx5_vport_table* %12, null, !dbg !12432
  br i1 %tobool4, label %if.end7, label %if.then5, !dbg !12434

if.then5:                                         ; preds = %if.end
  %call6 = call i8* @ERR_PTR(i64 -12) #8, !dbg !12435
  %13 = bitcast i8* %call6 to %struct.mlx5_flow_table*, !dbg !12435
  store %struct.mlx5_flow_table* %13, %struct.mlx5_flow_table** %fdb, align 8, !dbg !12437
  br label %err_alloc, !dbg !12438

if.end7:                                          ; preds = %if.end
  %14 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !12439
  %call8 = call %struct.mlx5_flow_namespace* @mlx5_get_flow_namespace(%struct.mlx5_core_dev* %14, i32 7) #8, !dbg !12440
  store %struct.mlx5_flow_namespace* %call8, %struct.mlx5_flow_namespace** %ns, align 8, !dbg !12441
  %15 = load %struct.mlx5_flow_namespace*, %struct.mlx5_flow_namespace** %ns, align 8, !dbg !12442
  %tobool9 = icmp ne %struct.mlx5_flow_namespace* %15, null, !dbg !12442
  br i1 %tobool9, label %if.end12, label %if.then10, !dbg !12444

if.then10:                                        ; preds = %if.end7
  %16 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !12445
  %device = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %16, i32 0, i32 0, !dbg !12445
  %17 = load %struct.device*, %struct.device** %device, align 8, !dbg !12445
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %17, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.8, i64 0, i64 0)) #9, !dbg !12445
  %call11 = call i8* @ERR_PTR(i64 -2) #8, !dbg !12447
  %18 = bitcast i8* %call11 to %struct.mlx5_flow_table*, !dbg !12447
  store %struct.mlx5_flow_table* %18, %struct.mlx5_flow_table** %fdb, align 8, !dbg !12448
  br label %err_ns, !dbg !12449

if.end12:                                         ; preds = %if.end7
  %19 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !12450
  %20 = load %struct.mlx5_flow_namespace*, %struct.mlx5_flow_namespace** %ns, align 8, !dbg !12451
  %call13 = call %struct.mlx5_flow_table* @esw_vport_tbl_create(%struct.mlx5_eswitch* %19, %struct.mlx5_flow_namespace* %20) #8, !dbg !12452
  store %struct.mlx5_flow_table* %call13, %struct.mlx5_flow_table** %fdb, align 8, !dbg !12453
  %21 = load %struct.mlx5_flow_table*, %struct.mlx5_flow_table** %fdb, align 8, !dbg !12454
  %22 = bitcast %struct.mlx5_flow_table* %21 to i8*, !dbg !12454
  %call14 = call zeroext i1 @IS_ERR(i8* %22) #8, !dbg !12456
  br i1 %call14, label %if.then15, label %if.end16, !dbg !12457

if.then15:                                        ; preds = %if.end12
  br label %err_ns, !dbg !12458

if.end16:                                         ; preds = %if.end12
  %23 = load %struct.mlx5_flow_table*, %struct.mlx5_flow_table** %fdb, align 8, !dbg !12459
  %24 = load %struct.mlx5_vport_table*, %struct.mlx5_vport_table** %e, align 8, !dbg !12460
  %fdb17 = getelementptr inbounds %struct.mlx5_vport_table, %struct.mlx5_vport_table* %24, i32 0, i32 1, !dbg !12461
  store %struct.mlx5_flow_table* %23, %struct.mlx5_flow_table** %fdb17, align 8, !dbg !12462
  %25 = load %struct.mlx5_vport_table*, %struct.mlx5_vport_table** %e, align 8, !dbg !12463
  %num_rules18 = getelementptr inbounds %struct.mlx5_vport_table, %struct.mlx5_vport_table* %25, i32 0, i32 2, !dbg !12464
  store i32 1, i32* %num_rules18, align 8, !dbg !12465
  %26 = load %struct.mlx5_vport_table*, %struct.mlx5_vport_table** %e, align 8, !dbg !12466
  %key = getelementptr inbounds %struct.mlx5_vport_table, %struct.mlx5_vport_table* %26, i32 0, i32 3, !dbg !12467
  %27 = bitcast %struct.mlx5_vport_key* %key to i8*, !dbg !12468
  %28 = bitcast %struct.mlx5_vport_key* %skey to i8*, !dbg !12468
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %27, i8* align 1 %28, i64 10, i1 false), !dbg !12468
  %29 = load %struct.mlx5_vport_table*, %struct.mlx5_vport_table** %e, align 8, !dbg !12469
  %hlist = getelementptr inbounds %struct.mlx5_vport_table, %struct.mlx5_vport_table* %29, i32 0, i32 0, !dbg !12469
  %30 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !12469
  %fdb_table19 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %30, i32 0, i32 2, !dbg !12469
  %31 = getelementptr inbounds %struct.mlx5_eswitch_fdb, %struct.mlx5_eswitch_fdb* %fdb_table19, i32 0, i32 0, !dbg !12469
  %offloads20 = bitcast %union.anon.154* %31 to %struct.offloads_fdb*, !dbg !12469
  %vports21 = getelementptr inbounds %struct.offloads_fdb, %struct.offloads_fdb* %offloads20, i32 0, i32 10, !dbg !12469
  %table = getelementptr inbounds %struct.anon.155, %struct.anon.155* %vports21, i32 0, i32 0, !dbg !12469
  %32 = load i32, i32* %hkey, align 4, !dbg !12469
  %call22 = call i32 @hash_32_generic(i32 %32, i32 8) #8, !dbg !12469
  %idxprom = zext i32 %call22 to i64, !dbg !12469
  %arrayidx = getelementptr [256 x %struct.hlist_head], [256 x %struct.hlist_head]* %table, i64 0, i64 %idxprom, !dbg !12469
  call void @hlist_add_head(%struct.hlist_node* %hlist, %struct.hlist_head* %arrayidx) #8, !dbg !12469
  br label %out, !dbg !12469

out:                                              ; preds = %if.end16, %if.then
  call void @llvm.dbg.label(metadata !12470), !dbg !12471
  %33 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !12472
  %fdb_table23 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %33, i32 0, i32 2, !dbg !12473
  %34 = getelementptr inbounds %struct.mlx5_eswitch_fdb, %struct.mlx5_eswitch_fdb* %fdb_table23, i32 0, i32 0, !dbg !12474
  %offloads24 = bitcast %union.anon.154* %34 to %struct.offloads_fdb*, !dbg !12474
  %vports25 = getelementptr inbounds %struct.offloads_fdb, %struct.offloads_fdb* %offloads24, i32 0, i32 10, !dbg !12475
  %lock26 = getelementptr inbounds %struct.anon.155, %struct.anon.155* %vports25, i32 0, i32 1, !dbg !12476
  call void @mutex_unlock(%struct.mutex* %lock26) #8, !dbg !12477
  %35 = load %struct.mlx5_vport_table*, %struct.mlx5_vport_table** %e, align 8, !dbg !12478
  %fdb27 = getelementptr inbounds %struct.mlx5_vport_table, %struct.mlx5_vport_table* %35, i32 0, i32 1, !dbg !12479
  %36 = load %struct.mlx5_flow_table*, %struct.mlx5_flow_table** %fdb27, align 8, !dbg !12479
  store %struct.mlx5_flow_table* %36, %struct.mlx5_flow_table** %retval, align 8, !dbg !12480
  br label %return, !dbg !12480

err_ns:                                           ; preds = %if.then15, %if.then10
  call void @llvm.dbg.label(metadata !12481), !dbg !12482
  %37 = load %struct.mlx5_vport_table*, %struct.mlx5_vport_table** %e, align 8, !dbg !12483
  %38 = bitcast %struct.mlx5_vport_table* %37 to i8*, !dbg !12483
  call void @kfree(i8* %38) #8, !dbg !12484
  br label %err_alloc, !dbg !12484

err_alloc:                                        ; preds = %err_ns, %if.then5
  call void @llvm.dbg.label(metadata !12485), !dbg !12486
  %39 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !12487
  %fdb_table28 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %39, i32 0, i32 2, !dbg !12488
  %40 = getelementptr inbounds %struct.mlx5_eswitch_fdb, %struct.mlx5_eswitch_fdb* %fdb_table28, i32 0, i32 0, !dbg !12489
  %offloads29 = bitcast %union.anon.154* %40 to %struct.offloads_fdb*, !dbg !12489
  %vports30 = getelementptr inbounds %struct.offloads_fdb, %struct.offloads_fdb* %offloads29, i32 0, i32 10, !dbg !12490
  %lock31 = getelementptr inbounds %struct.anon.155, %struct.anon.155* %vports30, i32 0, i32 1, !dbg !12491
  call void @mutex_unlock(%struct.mutex* %lock31) #8, !dbg !12492
  %41 = load %struct.mlx5_flow_table*, %struct.mlx5_flow_table** %fdb, align 8, !dbg !12493
  store %struct.mlx5_flow_table* %41, %struct.mlx5_flow_table** %retval, align 8, !dbg !12494
  br label %return, !dbg !12494

return:                                           ; preds = %err_alloc, %out
  %42 = load %struct.mlx5_flow_table*, %struct.mlx5_flow_table** %retval, align 8, !dbg !12495
  ret %struct.mlx5_flow_table* %42, !dbg !12495
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @IS_ERR(i8* %ptr) #0 !dbg !12496 {
entry:
  %ptr.addr = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !12500, metadata !DIExpression()), !dbg !12501
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !12502
  %1 = ptrtoint i8* %0 to i64, !dbg !12502
  %2 = inttoptr i64 %1 to i8*, !dbg !12502
  %3 = ptrtoint i8* %2 to i64, !dbg !12502
  %cmp = icmp uge i64 %3, -4095, !dbg !12502
  %lnot = xor i1 %cmp, true, !dbg !12502
  %lnot1 = xor i1 %lnot, true, !dbg !12502
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !12502
  %conv = sext i32 %lnot.ext to i64, !dbg !12502
  %tobool = icmp ne i64 %conv, 0, !dbg !12502
  ret i1 %tobool, !dbg !12503
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @mlx5_esw_vport_tbl_put(%struct.mlx5_eswitch* %esw) #0 !dbg !12504 {
entry:
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  %attr = alloca %struct.mlx5_vport_tbl_attr, align 2
  %vport = alloca %struct.mlx5_vport*, align 8
  %i = alloca i32, align 4
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !12505, metadata !DIExpression()), !dbg !12506
  call void @llvm.dbg.declare(metadata %struct.mlx5_vport_tbl_attr* %attr, metadata !12507, metadata !DIExpression()), !dbg !12508
  call void @llvm.dbg.declare(metadata %struct.mlx5_vport** %vport, metadata !12509, metadata !DIExpression()), !dbg !12510
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12511, metadata !DIExpression()), !dbg !12512
  %chain = getelementptr inbounds %struct.mlx5_vport_tbl_attr, %struct.mlx5_vport_tbl_attr* %attr, i32 0, i32 0, !dbg !12513
  store i16 0, i16* %chain, align 2, !dbg !12514
  %prio = getelementptr inbounds %struct.mlx5_vport_tbl_attr, %struct.mlx5_vport_tbl_attr* %attr, i32 0, i32 1, !dbg !12515
  store i16 1, i16* %prio, align 2, !dbg !12516
  store i32 0, i32* %i, align 4, !dbg !12517
  br label %for.cond, !dbg !12517

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !12519
  %vports = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %0, i32 0, i32 6, !dbg !12519
  %1 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vports, align 8, !dbg !12519
  %2 = load i32, i32* %i, align 4, !dbg !12519
  %idxprom = sext i32 %2 to i64, !dbg !12519
  %arrayidx = getelementptr %struct.mlx5_vport, %struct.mlx5_vport* %1, i64 %idxprom, !dbg !12519
  store %struct.mlx5_vport* %arrayidx, %struct.mlx5_vport** %vport, align 8, !dbg !12519
  %3 = load i32, i32* %i, align 4, !dbg !12519
  %4 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !12519
  %total_vports = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %4, i32 0, i32 8, !dbg !12519
  %5 = load i32, i32* %total_vports, align 4, !dbg !12519
  %cmp = icmp slt i32 %3, %5, !dbg !12519
  br i1 %cmp, label %for.body, label %for.end, !dbg !12517

for.body:                                         ; preds = %for.cond
  %6 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport, align 8, !dbg !12521
  %vport1 = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %6, i32 0, i32 1, !dbg !12523
  %7 = load i32, i32* %vport1, align 8, !dbg !12523
  %conv = trunc i32 %7 to i16, !dbg !12521
  %vport2 = getelementptr inbounds %struct.mlx5_vport_tbl_attr, %struct.mlx5_vport_tbl_attr* %attr, i32 0, i32 2, !dbg !12524
  store i16 %conv, i16* %vport2, align 2, !dbg !12525
  %8 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !12526
  call void @esw_vport_tbl_put(%struct.mlx5_eswitch* %8, %struct.mlx5_vport_tbl_attr* %attr) #8, !dbg !12527
  br label %for.inc, !dbg !12528

for.inc:                                          ; preds = %for.body
  %9 = load i32, i32* %i, align 4, !dbg !12519
  %inc = add i32 %9, 1, !dbg !12519
  store i32 %inc, i32* %i, align 4, !dbg !12519
  br label %for.cond, !dbg !12519, !llvm.loop !12529

for.end:                                          ; preds = %for.cond
  ret void, !dbg !12531
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @PTR_ERR(i8* %ptr) #0 !dbg !12532 {
entry:
  %ptr.addr = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !12535, metadata !DIExpression()), !dbg !12536
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !12537
  %1 = ptrtoint i8* %0 to i64, !dbg !12538
  ret i64 %1, !dbg !12539
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @esw_vport_tbl_put(%struct.mlx5_eswitch* %esw, %struct.mlx5_vport_tbl_attr* %attr) #0 !dbg !12540 {
entry:
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  %attr.addr = alloca %struct.mlx5_vport_tbl_attr*, align 8
  %e = alloca %struct.mlx5_vport_table*, align 8
  %key = alloca %struct.mlx5_vport_key, align 1
  %hkey = alloca i32, align 4
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !12543, metadata !DIExpression()), !dbg !12544
  store %struct.mlx5_vport_tbl_attr* %attr, %struct.mlx5_vport_tbl_attr** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_vport_tbl_attr** %attr.addr, metadata !12545, metadata !DIExpression()), !dbg !12546
  call void @llvm.dbg.declare(metadata %struct.mlx5_vport_table** %e, metadata !12547, metadata !DIExpression()), !dbg !12548
  call void @llvm.dbg.declare(metadata %struct.mlx5_vport_key* %key, metadata !12549, metadata !DIExpression()), !dbg !12550
  call void @llvm.dbg.declare(metadata i32* %hkey, metadata !12551, metadata !DIExpression()), !dbg !12552
  %0 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !12553
  %fdb_table = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %0, i32 0, i32 2, !dbg !12554
  %1 = getelementptr inbounds %struct.mlx5_eswitch_fdb, %struct.mlx5_eswitch_fdb* %fdb_table, i32 0, i32 0, !dbg !12555
  %offloads = bitcast %union.anon.154* %1 to %struct.offloads_fdb*, !dbg !12555
  %vports = getelementptr inbounds %struct.offloads_fdb, %struct.offloads_fdb* %offloads, i32 0, i32 10, !dbg !12556
  %lock = getelementptr inbounds %struct.anon.155, %struct.anon.155* %vports, i32 0, i32 1, !dbg !12557
  call void @mutex_lock(%struct.mutex* %lock) #8, !dbg !12558
  %2 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !12559
  %3 = load %struct.mlx5_vport_tbl_attr*, %struct.mlx5_vport_tbl_attr** %attr.addr, align 8, !dbg !12560
  %call = call i32 @flow_attr_to_vport_key(%struct.mlx5_eswitch* %2, %struct.mlx5_vport_tbl_attr* %3, %struct.mlx5_vport_key* %key) #8, !dbg !12561
  store i32 %call, i32* %hkey, align 4, !dbg !12562
  %4 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !12563
  %5 = load i32, i32* %hkey, align 4, !dbg !12564
  %call1 = call %struct.mlx5_vport_table* @esw_vport_tbl_lookup(%struct.mlx5_eswitch* %4, %struct.mlx5_vport_key* %key, i32 %5) #8, !dbg !12565
  store %struct.mlx5_vport_table* %call1, %struct.mlx5_vport_table** %e, align 8, !dbg !12566
  %6 = load %struct.mlx5_vport_table*, %struct.mlx5_vport_table** %e, align 8, !dbg !12567
  %tobool = icmp ne %struct.mlx5_vport_table* %6, null, !dbg !12567
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !12569

lor.lhs.false:                                    ; preds = %entry
  %7 = load %struct.mlx5_vport_table*, %struct.mlx5_vport_table** %e, align 8, !dbg !12570
  %num_rules = getelementptr inbounds %struct.mlx5_vport_table, %struct.mlx5_vport_table* %7, i32 0, i32 2, !dbg !12571
  %8 = load i32, i32* %num_rules, align 8, !dbg !12572
  %dec = add i32 %8, -1, !dbg !12572
  store i32 %dec, i32* %num_rules, align 8, !dbg !12572
  %tobool2 = icmp ne i32 %dec, 0, !dbg !12572
  br i1 %tobool2, label %if.then, label %if.end, !dbg !12573

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %out, !dbg !12574

if.end:                                           ; preds = %lor.lhs.false
  %9 = load %struct.mlx5_vport_table*, %struct.mlx5_vport_table** %e, align 8, !dbg !12575
  %hlist = getelementptr inbounds %struct.mlx5_vport_table, %struct.mlx5_vport_table* %9, i32 0, i32 0, !dbg !12576
  call void @hash_del(%struct.hlist_node* %hlist) #8, !dbg !12577
  %10 = load %struct.mlx5_vport_table*, %struct.mlx5_vport_table** %e, align 8, !dbg !12578
  %fdb = getelementptr inbounds %struct.mlx5_vport_table, %struct.mlx5_vport_table* %10, i32 0, i32 1, !dbg !12579
  %11 = load %struct.mlx5_flow_table*, %struct.mlx5_flow_table** %fdb, align 8, !dbg !12579
  %call3 = call i32 @mlx5_destroy_flow_table(%struct.mlx5_flow_table* %11) #8, !dbg !12580
  %12 = load %struct.mlx5_vport_table*, %struct.mlx5_vport_table** %e, align 8, !dbg !12581
  %13 = bitcast %struct.mlx5_vport_table* %12 to i8*, !dbg !12581
  call void @kfree(i8* %13) #8, !dbg !12582
  br label %out, !dbg !12582

out:                                              ; preds = %if.end, %if.then
  call void @llvm.dbg.label(metadata !12583), !dbg !12584
  %14 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !12585
  %fdb_table4 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %14, i32 0, i32 2, !dbg !12586
  %15 = getelementptr inbounds %struct.mlx5_eswitch_fdb, %struct.mlx5_eswitch_fdb* %fdb_table4, i32 0, i32 0, !dbg !12587
  %offloads5 = bitcast %union.anon.154* %15 to %struct.offloads_fdb*, !dbg !12587
  %vports6 = getelementptr inbounds %struct.offloads_fdb, %struct.offloads_fdb* %offloads5, i32 0, i32 10, !dbg !12588
  %lock7 = getelementptr inbounds %struct.anon.155, %struct.anon.155* %vports6, i32 0, i32 1, !dbg !12589
  call void @mutex_unlock(%struct.mutex* %lock7) #8, !dbg !12590
  ret void, !dbg !12591
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.mlx5_flow_handle* @mlx5_eswitch_add_offloaded_rule(%struct.mlx5_eswitch* %esw, %struct.mlx5_flow_spec* %spec, %struct.mlx5_flow_attr* %attr) #0 !dbg !12592 {
entry:
  %v.addr.i1.i = alloca %struct.atomic64_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic64_t** %v.addr.i1.i, metadata !12677, metadata !DIExpression()), !dbg !12683
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !12689, metadata !DIExpression()), !dbg !12697
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !12699, metadata !DIExpression()), !dbg !12700
  %v.addr.i = alloca %struct.atomic64_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic64_t** %v.addr.i, metadata !12701, metadata !DIExpression()), !dbg !12702
  %retval = alloca %struct.mlx5_flow_handle*, align 8
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  %spec.addr = alloca %struct.mlx5_flow_spec*, align 8
  %attr.addr = alloca %struct.mlx5_flow_attr*, align 8
  %dest = alloca [3 x %struct.mlx5_flow_destination], align 16
  %flow_act = alloca %struct.mlx5_flow_act, align 8
  %esw_attr = alloca %struct.mlx5_esw_flow_attr*, align 8
  %chains = alloca %struct.mlx5_fs_chains*, align 8
  %split = alloca i8, align 1
  %fwd_attr = alloca %struct.mlx5_vport_tbl_attr, align 2
  %rule = alloca %struct.mlx5_flow_handle*, align 8
  %fdb = alloca %struct.mlx5_flow_table*, align 8
  %j = alloca i32, align 4
  %i = alloca i32, align 4
  %ft = alloca %struct.mlx5_flow_table*, align 8
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !12703, metadata !DIExpression()), !dbg !12704
  store %struct.mlx5_flow_spec* %spec, %struct.mlx5_flow_spec** %spec.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_flow_spec** %spec.addr, metadata !12705, metadata !DIExpression()), !dbg !12706
  store %struct.mlx5_flow_attr* %attr, %struct.mlx5_flow_attr** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_flow_attr** %attr.addr, metadata !12707, metadata !DIExpression()), !dbg !12708
  call void @llvm.dbg.declare(metadata [3 x %struct.mlx5_flow_destination]* %dest, metadata !12709, metadata !DIExpression()), !dbg !12711
  %0 = bitcast [3 x %struct.mlx5_flow_destination]* %dest to i8*, !dbg !12711
  call void @llvm.memset.p0i8.i64(i8* align 16 %0, i8 0, i64 96, i1 false), !dbg !12711
  call void @llvm.dbg.declare(metadata %struct.mlx5_flow_act* %flow_act, metadata !12712, metadata !DIExpression()), !dbg !14296
  %1 = bitcast %struct.mlx5_flow_act* %flow_act to i8*, !dbg !14296
  call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 56, i1 false), !dbg !14296
  %2 = bitcast i8* %1 to %struct.mlx5_flow_act*, !dbg !14296
  %3 = getelementptr inbounds %struct.mlx5_flow_act, %struct.mlx5_flow_act* %2, i32 0, i32 4, !dbg !14296
  store i32 1, i32* %3, align 8, !dbg !14296
  call void @llvm.dbg.declare(metadata %struct.mlx5_esw_flow_attr** %esw_attr, metadata !14297, metadata !DIExpression()), !dbg !14299
  %4 = load %struct.mlx5_flow_attr*, %struct.mlx5_flow_attr** %attr.addr, align 8, !dbg !14300
  %5 = getelementptr inbounds %struct.mlx5_flow_attr, %struct.mlx5_flow_attr* %4, i32 0, i32 13, !dbg !14301
  %esw_attr1 = bitcast %union.anon.192* %5 to [0 x %struct.mlx5_esw_flow_attr]*, !dbg !14301
  %arraydecay = getelementptr inbounds [0 x %struct.mlx5_esw_flow_attr], [0 x %struct.mlx5_esw_flow_attr]* %esw_attr1, i64 0, i64 0, !dbg !14300
  store %struct.mlx5_esw_flow_attr* %arraydecay, %struct.mlx5_esw_flow_attr** %esw_attr, align 8, !dbg !14299
  call void @llvm.dbg.declare(metadata %struct.mlx5_fs_chains** %chains, metadata !14302, metadata !DIExpression()), !dbg !14303
  %6 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !14304
  %fdb_table = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %6, i32 0, i32 2, !dbg !14304
  %7 = getelementptr inbounds %struct.mlx5_eswitch_fdb, %struct.mlx5_eswitch_fdb* %fdb_table, i32 0, i32 0, !dbg !14304
  %offloads = bitcast %union.anon.154* %7 to %struct.offloads_fdb*, !dbg !14304
  %esw_chains_priv = getelementptr inbounds %struct.offloads_fdb, %struct.offloads_fdb* %offloads, i32 0, i32 9, !dbg !14304
  %8 = load %struct.mlx5_fs_chains*, %struct.mlx5_fs_chains** %esw_chains_priv, align 8, !dbg !14304
  store %struct.mlx5_fs_chains* %8, %struct.mlx5_fs_chains** %chains, align 8, !dbg !14303
  call void @llvm.dbg.declare(metadata i8* %split, metadata !14305, metadata !DIExpression()), !dbg !14306
  %9 = load %struct.mlx5_esw_flow_attr*, %struct.mlx5_esw_flow_attr** %esw_attr, align 8, !dbg !14307
  %split_count = getelementptr inbounds %struct.mlx5_esw_flow_attr, %struct.mlx5_esw_flow_attr* %9, i32 0, i32 3, !dbg !14308
  %10 = load i32, i32* %split_count, align 8, !dbg !14308
  %tobool = icmp ne i32 %10, 0, !dbg !14309
  %lnot = xor i1 %tobool, true, !dbg !14309
  %lnot2 = xor i1 %lnot, true, !dbg !14310
  %frombool = zext i1 %lnot2 to i8, !dbg !14306
  store i8 %frombool, i8* %split, align 1, !dbg !14306
  call void @llvm.dbg.declare(metadata %struct.mlx5_vport_tbl_attr* %fwd_attr, metadata !14311, metadata !DIExpression()), !dbg !14312
  call void @llvm.dbg.declare(metadata %struct.mlx5_flow_handle** %rule, metadata !14313, metadata !DIExpression()), !dbg !14314
  call void @llvm.dbg.declare(metadata %struct.mlx5_flow_table** %fdb, metadata !14315, metadata !DIExpression()), !dbg !14316
  call void @llvm.dbg.declare(metadata i32* %j, metadata !14317, metadata !DIExpression()), !dbg !14318
  call void @llvm.dbg.declare(metadata i32* %i, metadata !14319, metadata !DIExpression()), !dbg !14320
  store i32 0, i32* %i, align 4, !dbg !14320
  %11 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !14321
  %mode = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %11, i32 0, i32 14, !dbg !14323
  %12 = load i32, i32* %mode, align 8, !dbg !14323
  %cmp = icmp ne i32 %12, 2, !dbg !14324
  br i1 %cmp, label %if.then, label %if.end, !dbg !14325

if.then:                                          ; preds = %entry
  %call = call i8* @ERR_PTR(i64 -95) #8, !dbg !14326
  %13 = bitcast i8* %call to %struct.mlx5_flow_handle*, !dbg !14326
  store %struct.mlx5_flow_handle* %13, %struct.mlx5_flow_handle** %retval, align 8, !dbg !14327
  br label %return, !dbg !14327

if.end:                                           ; preds = %entry
  %14 = load %struct.mlx5_flow_attr*, %struct.mlx5_flow_attr** %attr.addr, align 8, !dbg !14328
  %action = getelementptr inbounds %struct.mlx5_flow_attr, %struct.mlx5_flow_attr* %14, i32 0, i32 0, !dbg !14329
  %15 = load i32, i32* %action, align 8, !dbg !14329
  %action3 = getelementptr inbounds %struct.mlx5_flow_act, %struct.mlx5_flow_act* %flow_act, i32 0, i32 0, !dbg !14330
  store i32 %15, i32* %action3, align 8, !dbg !14331
  %16 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !14332
  %dev = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %16, i32 0, i32 0, !dbg !14334
  %17 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !14334
  %call4 = call zeroext i1 @mlx5_eswitch_vlan_actions_supported(%struct.mlx5_core_dev* %17, i8 zeroext 1) #8, !dbg !14335
  br i1 %call4, label %if.else, label %if.then5, !dbg !14336

if.then5:                                         ; preds = %if.end
  %action6 = getelementptr inbounds %struct.mlx5_flow_act, %struct.mlx5_flow_act* %flow_act, i32 0, i32 0, !dbg !14337
  %18 = load i32, i32* %action6, align 8, !dbg !14338
  %and = and i32 %18, -385, !dbg !14338
  store i32 %and, i32* %action6, align 8, !dbg !14338
  br label %if.end75, !dbg !14339

if.else:                                          ; preds = %if.end
  %action7 = getelementptr inbounds %struct.mlx5_flow_act, %struct.mlx5_flow_act* %flow_act, i32 0, i32 0, !dbg !14340
  %19 = load i32, i32* %action7, align 8, !dbg !14340
  %and8 = and i32 %19, 256, !dbg !14342
  %tobool9 = icmp ne i32 %and8, 0, !dbg !14342
  br i1 %tobool9, label %if.then10, label %if.end74, !dbg !14343

if.then10:                                        ; preds = %if.else
  %20 = load %struct.mlx5_esw_flow_attr*, %struct.mlx5_esw_flow_attr** %esw_attr, align 8, !dbg !14344
  %vlan_proto = getelementptr inbounds %struct.mlx5_esw_flow_attr, %struct.mlx5_esw_flow_attr* %20, i32 0, i32 5, !dbg !14344
  %arrayidx = getelementptr [2 x i16], [2 x i16]* %vlan_proto, i64 0, i64 0, !dbg !14344
  %21 = load i16, i16* %arrayidx, align 8, !dbg !14344
  %22 = call i1 @llvm.is.constant.i16(i16 %21), !dbg !14344
  br i1 %22, label %cond.true, label %cond.false, !dbg !14344

cond.true:                                        ; preds = %if.then10
  %23 = load %struct.mlx5_esw_flow_attr*, %struct.mlx5_esw_flow_attr** %esw_attr, align 8, !dbg !14344
  %vlan_proto11 = getelementptr inbounds %struct.mlx5_esw_flow_attr, %struct.mlx5_esw_flow_attr* %23, i32 0, i32 5, !dbg !14344
  %arrayidx12 = getelementptr [2 x i16], [2 x i16]* %vlan_proto11, i64 0, i64 0, !dbg !14344
  %24 = load i16, i16* %arrayidx12, align 8, !dbg !14344
  %conv = zext i16 %24 to i32, !dbg !14344
  %and13 = and i32 %conv, 255, !dbg !14344
  %shl = shl i32 %and13, 8, !dbg !14344
  %25 = load %struct.mlx5_esw_flow_attr*, %struct.mlx5_esw_flow_attr** %esw_attr, align 8, !dbg !14344
  %vlan_proto14 = getelementptr inbounds %struct.mlx5_esw_flow_attr, %struct.mlx5_esw_flow_attr* %25, i32 0, i32 5, !dbg !14344
  %arrayidx15 = getelementptr [2 x i16], [2 x i16]* %vlan_proto14, i64 0, i64 0, !dbg !14344
  %26 = load i16, i16* %arrayidx15, align 8, !dbg !14344
  %conv16 = zext i16 %26 to i32, !dbg !14344
  %and17 = and i32 %conv16, 65280, !dbg !14344
  %shr = ashr i32 %and17, 8, !dbg !14344
  %or = or i32 %shl, %shr, !dbg !14344
  %conv18 = trunc i32 %or to i16, !dbg !14344
  %conv19 = zext i16 %conv18 to i32, !dbg !14344
  br label %cond.end, !dbg !14344

cond.false:                                       ; preds = %if.then10
  %27 = load %struct.mlx5_esw_flow_attr*, %struct.mlx5_esw_flow_attr** %esw_attr, align 8, !dbg !14344
  %vlan_proto20 = getelementptr inbounds %struct.mlx5_esw_flow_attr, %struct.mlx5_esw_flow_attr* %27, i32 0, i32 5, !dbg !14344
  %arrayidx21 = getelementptr [2 x i16], [2 x i16]* %vlan_proto20, i64 0, i64 0, !dbg !14344
  %28 = load i16, i16* %arrayidx21, align 8, !dbg !14344
  %call22 = call zeroext i16 @__fswab16(i16 zeroext %28) #10, !dbg !14344
  %conv23 = zext i16 %call22 to i32, !dbg !14344
  br label %cond.end, !dbg !14344

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv19, %cond.true ], [ %conv23, %cond.false ], !dbg !14344
  %conv24 = trunc i32 %cond to i16, !dbg !14344
  %vlan = getelementptr inbounds %struct.mlx5_flow_act, %struct.mlx5_flow_act* %flow_act, i32 0, i32 5, !dbg !14346
  %arrayidx25 = getelementptr [2 x %struct.mlx5_fs_vlan], [2 x %struct.mlx5_fs_vlan]* %vlan, i64 0, i64 0, !dbg !14347
  %ethtype = getelementptr inbounds %struct.mlx5_fs_vlan, %struct.mlx5_fs_vlan* %arrayidx25, i32 0, i32 0, !dbg !14348
  store i16 %conv24, i16* %ethtype, align 4, !dbg !14349
  %29 = load %struct.mlx5_esw_flow_attr*, %struct.mlx5_esw_flow_attr** %esw_attr, align 8, !dbg !14350
  %vlan_vid = getelementptr inbounds %struct.mlx5_esw_flow_attr, %struct.mlx5_esw_flow_attr* %29, i32 0, i32 6, !dbg !14351
  %arrayidx26 = getelementptr [2 x i16], [2 x i16]* %vlan_vid, i64 0, i64 0, !dbg !14350
  %30 = load i16, i16* %arrayidx26, align 4, !dbg !14350
  %vlan27 = getelementptr inbounds %struct.mlx5_flow_act, %struct.mlx5_flow_act* %flow_act, i32 0, i32 5, !dbg !14352
  %arrayidx28 = getelementptr [2 x %struct.mlx5_fs_vlan], [2 x %struct.mlx5_fs_vlan]* %vlan27, i64 0, i64 0, !dbg !14353
  %vid = getelementptr inbounds %struct.mlx5_fs_vlan, %struct.mlx5_fs_vlan* %arrayidx28, i32 0, i32 1, !dbg !14354
  store i16 %30, i16* %vid, align 2, !dbg !14355
  %31 = load %struct.mlx5_esw_flow_attr*, %struct.mlx5_esw_flow_attr** %esw_attr, align 8, !dbg !14356
  %vlan_prio = getelementptr inbounds %struct.mlx5_esw_flow_attr, %struct.mlx5_esw_flow_attr* %31, i32 0, i32 7, !dbg !14357
  %arrayidx29 = getelementptr [2 x i8], [2 x i8]* %vlan_prio, i64 0, i64 0, !dbg !14356
  %32 = load i8, i8* %arrayidx29, align 8, !dbg !14356
  %vlan30 = getelementptr inbounds %struct.mlx5_flow_act, %struct.mlx5_flow_act* %flow_act, i32 0, i32 5, !dbg !14358
  %arrayidx31 = getelementptr [2 x %struct.mlx5_fs_vlan], [2 x %struct.mlx5_fs_vlan]* %vlan30, i64 0, i64 0, !dbg !14359
  %prio = getelementptr inbounds %struct.mlx5_fs_vlan, %struct.mlx5_fs_vlan* %arrayidx31, i32 0, i32 2, !dbg !14360
  store i8 %32, i8* %prio, align 4, !dbg !14361
  %action32 = getelementptr inbounds %struct.mlx5_flow_act, %struct.mlx5_flow_act* %flow_act, i32 0, i32 0, !dbg !14362
  %33 = load i32, i32* %action32, align 8, !dbg !14362
  %and33 = and i32 %33, 2048, !dbg !14364
  %tobool34 = icmp ne i32 %and33, 0, !dbg !14364
  br i1 %tobool34, label %if.then35, label %if.end73, !dbg !14365

if.then35:                                        ; preds = %cond.end
  %34 = load %struct.mlx5_esw_flow_attr*, %struct.mlx5_esw_flow_attr** %esw_attr, align 8, !dbg !14366
  %vlan_proto36 = getelementptr inbounds %struct.mlx5_esw_flow_attr, %struct.mlx5_esw_flow_attr* %34, i32 0, i32 5, !dbg !14366
  %arrayidx37 = getelementptr [2 x i16], [2 x i16]* %vlan_proto36, i64 0, i64 1, !dbg !14366
  %35 = load i16, i16* %arrayidx37, align 2, !dbg !14366
  %36 = call i1 @llvm.is.constant.i16(i16 %35), !dbg !14366
  br i1 %36, label %cond.true38, label %cond.false52, !dbg !14366

cond.true38:                                      ; preds = %if.then35
  %37 = load %struct.mlx5_esw_flow_attr*, %struct.mlx5_esw_flow_attr** %esw_attr, align 8, !dbg !14366
  %vlan_proto39 = getelementptr inbounds %struct.mlx5_esw_flow_attr, %struct.mlx5_esw_flow_attr* %37, i32 0, i32 5, !dbg !14366
  %arrayidx40 = getelementptr [2 x i16], [2 x i16]* %vlan_proto39, i64 0, i64 1, !dbg !14366
  %38 = load i16, i16* %arrayidx40, align 2, !dbg !14366
  %conv41 = zext i16 %38 to i32, !dbg !14366
  %and42 = and i32 %conv41, 255, !dbg !14366
  %shl43 = shl i32 %and42, 8, !dbg !14366
  %39 = load %struct.mlx5_esw_flow_attr*, %struct.mlx5_esw_flow_attr** %esw_attr, align 8, !dbg !14366
  %vlan_proto44 = getelementptr inbounds %struct.mlx5_esw_flow_attr, %struct.mlx5_esw_flow_attr* %39, i32 0, i32 5, !dbg !14366
  %arrayidx45 = getelementptr [2 x i16], [2 x i16]* %vlan_proto44, i64 0, i64 1, !dbg !14366
  %40 = load i16, i16* %arrayidx45, align 2, !dbg !14366
  %conv46 = zext i16 %40 to i32, !dbg !14366
  %and47 = and i32 %conv46, 65280, !dbg !14366
  %shr48 = ashr i32 %and47, 8, !dbg !14366
  %or49 = or i32 %shl43, %shr48, !dbg !14366
  %conv50 = trunc i32 %or49 to i16, !dbg !14366
  %conv51 = zext i16 %conv50 to i32, !dbg !14366
  br label %cond.end57, !dbg !14366

cond.false52:                                     ; preds = %if.then35
  %41 = load %struct.mlx5_esw_flow_attr*, %struct.mlx5_esw_flow_attr** %esw_attr, align 8, !dbg !14366
  %vlan_proto53 = getelementptr inbounds %struct.mlx5_esw_flow_attr, %struct.mlx5_esw_flow_attr* %41, i32 0, i32 5, !dbg !14366
  %arrayidx54 = getelementptr [2 x i16], [2 x i16]* %vlan_proto53, i64 0, i64 1, !dbg !14366
  %42 = load i16, i16* %arrayidx54, align 2, !dbg !14366
  %call55 = call zeroext i16 @__fswab16(i16 zeroext %42) #10, !dbg !14366
  %conv56 = zext i16 %call55 to i32, !dbg !14366
  br label %cond.end57, !dbg !14366

cond.end57:                                       ; preds = %cond.false52, %cond.true38
  %cond58 = phi i32 [ %conv51, %cond.true38 ], [ %conv56, %cond.false52 ], !dbg !14366
  %conv59 = trunc i32 %cond58 to i16, !dbg !14366
  %vlan60 = getelementptr inbounds %struct.mlx5_flow_act, %struct.mlx5_flow_act* %flow_act, i32 0, i32 5, !dbg !14368
  %arrayidx61 = getelementptr [2 x %struct.mlx5_fs_vlan], [2 x %struct.mlx5_fs_vlan]* %vlan60, i64 0, i64 1, !dbg !14369
  %ethtype62 = getelementptr inbounds %struct.mlx5_fs_vlan, %struct.mlx5_fs_vlan* %arrayidx61, i32 0, i32 0, !dbg !14370
  store i16 %conv59, i16* %ethtype62, align 2, !dbg !14371
  %43 = load %struct.mlx5_esw_flow_attr*, %struct.mlx5_esw_flow_attr** %esw_attr, align 8, !dbg !14372
  %vlan_vid63 = getelementptr inbounds %struct.mlx5_esw_flow_attr, %struct.mlx5_esw_flow_attr* %43, i32 0, i32 6, !dbg !14373
  %arrayidx64 = getelementptr [2 x i16], [2 x i16]* %vlan_vid63, i64 0, i64 1, !dbg !14372
  %44 = load i16, i16* %arrayidx64, align 2, !dbg !14372
  %vlan65 = getelementptr inbounds %struct.mlx5_flow_act, %struct.mlx5_flow_act* %flow_act, i32 0, i32 5, !dbg !14374
  %arrayidx66 = getelementptr [2 x %struct.mlx5_fs_vlan], [2 x %struct.mlx5_fs_vlan]* %vlan65, i64 0, i64 1, !dbg !14375
  %vid67 = getelementptr inbounds %struct.mlx5_fs_vlan, %struct.mlx5_fs_vlan* %arrayidx66, i32 0, i32 1, !dbg !14376
  store i16 %44, i16* %vid67, align 2, !dbg !14377
  %45 = load %struct.mlx5_esw_flow_attr*, %struct.mlx5_esw_flow_attr** %esw_attr, align 8, !dbg !14378
  %vlan_prio68 = getelementptr inbounds %struct.mlx5_esw_flow_attr, %struct.mlx5_esw_flow_attr* %45, i32 0, i32 7, !dbg !14379
  %arrayidx69 = getelementptr [2 x i8], [2 x i8]* %vlan_prio68, i64 0, i64 1, !dbg !14378
  %46 = load i8, i8* %arrayidx69, align 1, !dbg !14378
  %vlan70 = getelementptr inbounds %struct.mlx5_flow_act, %struct.mlx5_flow_act* %flow_act, i32 0, i32 5, !dbg !14380
  %arrayidx71 = getelementptr [2 x %struct.mlx5_fs_vlan], [2 x %struct.mlx5_fs_vlan]* %vlan70, i64 0, i64 1, !dbg !14381
  %prio72 = getelementptr inbounds %struct.mlx5_fs_vlan, %struct.mlx5_fs_vlan* %arrayidx71, i32 0, i32 2, !dbg !14382
  store i8 %46, i8* %prio72, align 2, !dbg !14383
  br label %if.end73, !dbg !14384

if.end73:                                         ; preds = %cond.end57, %cond.end
  br label %if.end74, !dbg !14385

if.end74:                                         ; preds = %if.end73, %if.else
  br label %if.end75

if.end75:                                         ; preds = %if.end74, %if.then5
  %action76 = getelementptr inbounds %struct.mlx5_flow_act, %struct.mlx5_flow_act* %flow_act, i32 0, i32 0, !dbg !14386
  %47 = load i32, i32* %action76, align 8, !dbg !14386
  %and77 = and i32 %47, 4, !dbg !14388
  %tobool78 = icmp ne i32 %and77, 0, !dbg !14388
  br i1 %tobool78, label %if.then79, label %if.end303, !dbg !14389

if.then79:                                        ; preds = %if.end75
  call void @llvm.dbg.declare(metadata %struct.mlx5_flow_table** %ft, metadata !14390, metadata !DIExpression()), !dbg !14392
  %48 = load %struct.mlx5_flow_attr*, %struct.mlx5_flow_attr** %attr.addr, align 8, !dbg !14393
  %dest_ft = getelementptr inbounds %struct.mlx5_flow_attr, %struct.mlx5_flow_attr* %48, i32 0, i32 9, !dbg !14395
  %49 = load %struct.mlx5_flow_table*, %struct.mlx5_flow_table** %dest_ft, align 8, !dbg !14395
  %tobool80 = icmp ne %struct.mlx5_flow_table* %49, null, !dbg !14393
  br i1 %tobool80, label %if.then81, label %if.else88, !dbg !14396

if.then81:                                        ; preds = %if.then79
  %flags = getelementptr inbounds %struct.mlx5_flow_act, %struct.mlx5_flow_act* %flow_act, i32 0, i32 4, !dbg !14397
  %50 = load i32, i32* %flags, align 8, !dbg !14399
  %or82 = or i32 %50, 2, !dbg !14399
  store i32 %or82, i32* %flags, align 8, !dbg !14399
  %51 = load i32, i32* %i, align 4, !dbg !14400
  %idxprom = sext i32 %51 to i64, !dbg !14401
  %arrayidx83 = getelementptr [3 x %struct.mlx5_flow_destination], [3 x %struct.mlx5_flow_destination]* %dest, i64 0, i64 %idxprom, !dbg !14401
  %type = getelementptr inbounds %struct.mlx5_flow_destination, %struct.mlx5_flow_destination* %arrayidx83, i32 0, i32 0, !dbg !14402
  store i32 1, i32* %type, align 16, !dbg !14403
  %52 = load %struct.mlx5_flow_attr*, %struct.mlx5_flow_attr** %attr.addr, align 8, !dbg !14404
  %dest_ft84 = getelementptr inbounds %struct.mlx5_flow_attr, %struct.mlx5_flow_attr* %52, i32 0, i32 9, !dbg !14405
  %53 = load %struct.mlx5_flow_table*, %struct.mlx5_flow_table** %dest_ft84, align 8, !dbg !14405
  %54 = load i32, i32* %i, align 4, !dbg !14406
  %idxprom85 = sext i32 %54 to i64, !dbg !14407
  %arrayidx86 = getelementptr [3 x %struct.mlx5_flow_destination], [3 x %struct.mlx5_flow_destination]* %dest, i64 0, i64 %idxprom85, !dbg !14407
  %55 = getelementptr inbounds %struct.mlx5_flow_destination, %struct.mlx5_flow_destination* %arrayidx86, i32 0, i32 1, !dbg !14408
  %ft87 = bitcast %union.anon.146* %55 to %struct.mlx5_flow_table**, !dbg !14408
  store %struct.mlx5_flow_table* %53, %struct.mlx5_flow_table** %ft87, align 8, !dbg !14409
  %56 = load i32, i32* %i, align 4, !dbg !14410
  %inc = add i32 %56, 1, !dbg !14410
  store i32 %inc, i32* %i, align 4, !dbg !14410
  br label %if.end302, !dbg !14411

if.else88:                                        ; preds = %if.then79
  %57 = load %struct.mlx5_flow_attr*, %struct.mlx5_flow_attr** %attr.addr, align 8, !dbg !14412
  %flags89 = getelementptr inbounds %struct.mlx5_flow_attr, %struct.mlx5_flow_attr* %57, i32 0, i32 12, !dbg !14414
  %58 = load i32, i32* %flags89, align 4, !dbg !14414
  %and90 = and i32 %58, 2, !dbg !14415
  %tobool91 = icmp ne i32 %and90, 0, !dbg !14415
  br i1 %tobool91, label %if.then92, label %if.else103, !dbg !14416

if.then92:                                        ; preds = %if.else88
  %flags93 = getelementptr inbounds %struct.mlx5_flow_act, %struct.mlx5_flow_act* %flow_act, i32 0, i32 4, !dbg !14417
  %59 = load i32, i32* %flags93, align 8, !dbg !14419
  %or94 = or i32 %59, 2, !dbg !14419
  store i32 %or94, i32* %flags93, align 8, !dbg !14419
  %60 = load i32, i32* %i, align 4, !dbg !14420
  %idxprom95 = sext i32 %60 to i64, !dbg !14421
  %arrayidx96 = getelementptr [3 x %struct.mlx5_flow_destination], [3 x %struct.mlx5_flow_destination]* %dest, i64 0, i64 %idxprom95, !dbg !14421
  %type97 = getelementptr inbounds %struct.mlx5_flow_destination, %struct.mlx5_flow_destination* %arrayidx96, i32 0, i32 0, !dbg !14422
  store i32 1, i32* %type97, align 16, !dbg !14423
  %61 = load %struct.mlx5_fs_chains*, %struct.mlx5_fs_chains** %chains, align 8, !dbg !14424
  %call98 = call %struct.mlx5_flow_table* @mlx5_chains_get_tc_end_ft(%struct.mlx5_fs_chains* %61) #8, !dbg !14425
  %62 = load i32, i32* %i, align 4, !dbg !14426
  %idxprom99 = sext i32 %62 to i64, !dbg !14427
  %arrayidx100 = getelementptr [3 x %struct.mlx5_flow_destination], [3 x %struct.mlx5_flow_destination]* %dest, i64 0, i64 %idxprom99, !dbg !14427
  %63 = getelementptr inbounds %struct.mlx5_flow_destination, %struct.mlx5_flow_destination* %arrayidx100, i32 0, i32 1, !dbg !14428
  %ft101 = bitcast %union.anon.146* %63 to %struct.mlx5_flow_table**, !dbg !14428
  store %struct.mlx5_flow_table* %call98, %struct.mlx5_flow_table** %ft101, align 8, !dbg !14429
  %64 = load i32, i32* %i, align 4, !dbg !14430
  %inc102 = add i32 %64, 1, !dbg !14430
  store i32 %inc102, i32* %i, align 4, !dbg !14430
  br label %if.end301, !dbg !14431

if.else103:                                       ; preds = %if.else88
  %65 = load %struct.mlx5_flow_attr*, %struct.mlx5_flow_attr** %attr.addr, align 8, !dbg !14432
  %dest_chain = getelementptr inbounds %struct.mlx5_flow_attr, %struct.mlx5_flow_attr* %65, i32 0, i32 7, !dbg !14434
  %66 = load i32, i32* %dest_chain, align 8, !dbg !14434
  %tobool104 = icmp ne i32 %66, 0, !dbg !14432
  br i1 %tobool104, label %if.then105, label %if.else121, !dbg !14435

if.then105:                                       ; preds = %if.else103
  %flags106 = getelementptr inbounds %struct.mlx5_flow_act, %struct.mlx5_flow_act* %flow_act, i32 0, i32 4, !dbg !14436
  %67 = load i32, i32* %flags106, align 8, !dbg !14438
  %or107 = or i32 %67, 2, !dbg !14438
  store i32 %or107, i32* %flags106, align 8, !dbg !14438
  %68 = load %struct.mlx5_fs_chains*, %struct.mlx5_fs_chains** %chains, align 8, !dbg !14439
  %69 = load %struct.mlx5_flow_attr*, %struct.mlx5_flow_attr** %attr.addr, align 8, !dbg !14440
  %dest_chain108 = getelementptr inbounds %struct.mlx5_flow_attr, %struct.mlx5_flow_attr* %69, i32 0, i32 7, !dbg !14441
  %70 = load i32, i32* %dest_chain108, align 8, !dbg !14441
  %call109 = call %struct.mlx5_flow_table* @mlx5_chains_get_table(%struct.mlx5_fs_chains* %68, i32 %70, i32 1, i32 0) #8, !dbg !14442
  store %struct.mlx5_flow_table* %call109, %struct.mlx5_flow_table** %ft, align 8, !dbg !14443
  %71 = load %struct.mlx5_flow_table*, %struct.mlx5_flow_table** %ft, align 8, !dbg !14444
  %72 = bitcast %struct.mlx5_flow_table* %71 to i8*, !dbg !14444
  %call110 = call zeroext i1 @IS_ERR(i8* %72) #8, !dbg !14446
  br i1 %call110, label %if.then111, label %if.end113, !dbg !14447

if.then111:                                       ; preds = %if.then105
  %73 = load %struct.mlx5_flow_table*, %struct.mlx5_flow_table** %ft, align 8, !dbg !14448
  %74 = bitcast %struct.mlx5_flow_table* %73 to i8*, !dbg !14448
  %call112 = call i8* @ERR_CAST(i8* %74) #8, !dbg !14450
  %75 = bitcast i8* %call112 to %struct.mlx5_flow_handle*, !dbg !14450
  store %struct.mlx5_flow_handle* %75, %struct.mlx5_flow_handle** %rule, align 8, !dbg !14451
  br label %err_create_goto_table, !dbg !14452

if.end113:                                        ; preds = %if.then105
  %76 = load i32, i32* %i, align 4, !dbg !14453
  %idxprom114 = sext i32 %76 to i64, !dbg !14454
  %arrayidx115 = getelementptr [3 x %struct.mlx5_flow_destination], [3 x %struct.mlx5_flow_destination]* %dest, i64 0, i64 %idxprom114, !dbg !14454
  %type116 = getelementptr inbounds %struct.mlx5_flow_destination, %struct.mlx5_flow_destination* %arrayidx115, i32 0, i32 0, !dbg !14455
  store i32 1, i32* %type116, align 16, !dbg !14456
  %77 = load %struct.mlx5_flow_table*, %struct.mlx5_flow_table** %ft, align 8, !dbg !14457
  %78 = load i32, i32* %i, align 4, !dbg !14458
  %idxprom117 = sext i32 %78 to i64, !dbg !14459
  %arrayidx118 = getelementptr [3 x %struct.mlx5_flow_destination], [3 x %struct.mlx5_flow_destination]* %dest, i64 0, i64 %idxprom117, !dbg !14459
  %79 = getelementptr inbounds %struct.mlx5_flow_destination, %struct.mlx5_flow_destination* %arrayidx118, i32 0, i32 1, !dbg !14460
  %ft119 = bitcast %union.anon.146* %79 to %struct.mlx5_flow_table**, !dbg !14460
  store %struct.mlx5_flow_table* %77, %struct.mlx5_flow_table** %ft119, align 8, !dbg !14461
  %80 = load i32, i32* %i, align 4, !dbg !14462
  %inc120 = add i32 %80, 1, !dbg !14462
  store i32 %inc120, i32* %i, align 4, !dbg !14462
  br label %if.end300, !dbg !14463

if.else121:                                       ; preds = %if.else103
  %81 = load %struct.mlx5_esw_flow_attr*, %struct.mlx5_esw_flow_attr** %esw_attr, align 8, !dbg !14464
  %split_count122 = getelementptr inbounds %struct.mlx5_esw_flow_attr, %struct.mlx5_esw_flow_attr* %81, i32 0, i32 3, !dbg !14467
  %82 = load i32, i32* %split_count122, align 8, !dbg !14467
  store i32 %82, i32* %j, align 4, !dbg !14468
  br label %for.cond, !dbg !14469

for.cond:                                         ; preds = %for.inc, %if.else121
  %83 = load i32, i32* %j, align 4, !dbg !14470
  %84 = load %struct.mlx5_esw_flow_attr*, %struct.mlx5_esw_flow_attr** %esw_attr, align 8, !dbg !14472
  %out_count = getelementptr inbounds %struct.mlx5_esw_flow_attr, %struct.mlx5_esw_flow_attr* %84, i32 0, i32 4, !dbg !14473
  %85 = load i32, i32* %out_count, align 4, !dbg !14473
  %cmp123 = icmp slt i32 %83, %85, !dbg !14474
  br i1 %cmp123, label %for.body, label %for.end, !dbg !14475

for.body:                                         ; preds = %for.cond
  %86 = load i32, i32* %i, align 4, !dbg !14476
  %idxprom125 = sext i32 %86 to i64, !dbg !14478
  %arrayidx126 = getelementptr [3 x %struct.mlx5_flow_destination], [3 x %struct.mlx5_flow_destination]* %dest, i64 0, i64 %idxprom125, !dbg !14478
  %type127 = getelementptr inbounds %struct.mlx5_flow_destination, %struct.mlx5_flow_destination* %arrayidx126, i32 0, i32 0, !dbg !14479
  store i32 0, i32* %type127, align 16, !dbg !14480
  %87 = load %struct.mlx5_esw_flow_attr*, %struct.mlx5_esw_flow_attr** %esw_attr, align 8, !dbg !14481
  %dests = getelementptr inbounds %struct.mlx5_esw_flow_attr, %struct.mlx5_esw_flow_attr* %87, i32 0, i32 9, !dbg !14482
  %88 = load i32, i32* %j, align 4, !dbg !14483
  %idxprom128 = sext i32 %88 to i64, !dbg !14481
  %arrayidx129 = getelementptr [2 x %struct.anon.193], [2 x %struct.anon.193]* %dests, i64 0, i64 %idxprom128, !dbg !14481
  %rep = getelementptr inbounds %struct.anon.193, %struct.anon.193* %arrayidx129, i32 0, i32 1, !dbg !14484
  %89 = load %struct.mlx5_eswitch_rep*, %struct.mlx5_eswitch_rep** %rep, align 8, !dbg !14484
  %vport = getelementptr inbounds %struct.mlx5_eswitch_rep, %struct.mlx5_eswitch_rep* %89, i32 0, i32 1, !dbg !14485
  %90 = load i16, i16* %vport, align 8, !dbg !14485
  %91 = load i32, i32* %i, align 4, !dbg !14486
  %idxprom130 = sext i32 %91 to i64, !dbg !14487
  %arrayidx131 = getelementptr [3 x %struct.mlx5_flow_destination], [3 x %struct.mlx5_flow_destination]* %dest, i64 0, i64 %idxprom130, !dbg !14487
  %92 = getelementptr inbounds %struct.mlx5_flow_destination, %struct.mlx5_flow_destination* %arrayidx131, i32 0, i32 1, !dbg !14488
  %vport132 = bitcast %union.anon.146* %92 to %struct.anon.147*, !dbg !14488
  %num = getelementptr inbounds %struct.anon.147, %struct.anon.147* %vport132, i32 0, i32 0, !dbg !14489
  store i16 %90, i16* %num, align 8, !dbg !14490
  %93 = load %struct.mlx5_esw_flow_attr*, %struct.mlx5_esw_flow_attr** %esw_attr, align 8, !dbg !14491
  %dests133 = getelementptr inbounds %struct.mlx5_esw_flow_attr, %struct.mlx5_esw_flow_attr* %93, i32 0, i32 9, !dbg !14491
  %94 = load i32, i32* %j, align 4, !dbg !14491
  %idxprom134 = sext i32 %94 to i64, !dbg !14491
  %arrayidx135 = getelementptr [2 x %struct.anon.193], [2 x %struct.anon.193]* %dests133, i64 0, i64 %idxprom134, !dbg !14491
  %mdev = getelementptr inbounds %struct.anon.193, %struct.anon.193* %arrayidx135, i32 0, i32 3, !dbg !14491
  %95 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %mdev, align 8, !dbg !14491
  %caps = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %95, i32 0, i32 9, !dbg !14491
  %hca_cur = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps, i32 0, i32 0, !dbg !14491
  %arrayidx136 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur, i64 0, i64 0, !dbg !14491
  %arraydecay137 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx136, i64 0, i64 0, !dbg !14491
  %add.ptr = getelementptr i32, i32* %arraydecay137, i64 1, !dbg !14491
  %96 = load i32, i32* %add.ptr, align 4, !dbg !14491
  %97 = call i1 @llvm.is.constant.i32(i32 %96), !dbg !14491
  br i1 %97, label %cond.true138, label %cond.false186, !dbg !14491

cond.true138:                                     ; preds = %for.body
  %98 = load %struct.mlx5_esw_flow_attr*, %struct.mlx5_esw_flow_attr** %esw_attr, align 8, !dbg !14491
  %dests139 = getelementptr inbounds %struct.mlx5_esw_flow_attr, %struct.mlx5_esw_flow_attr* %98, i32 0, i32 9, !dbg !14491
  %99 = load i32, i32* %j, align 4, !dbg !14491
  %idxprom140 = sext i32 %99 to i64, !dbg !14491
  %arrayidx141 = getelementptr [2 x %struct.anon.193], [2 x %struct.anon.193]* %dests139, i64 0, i64 %idxprom140, !dbg !14491
  %mdev142 = getelementptr inbounds %struct.anon.193, %struct.anon.193* %arrayidx141, i32 0, i32 3, !dbg !14491
  %100 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %mdev142, align 8, !dbg !14491
  %caps143 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %100, i32 0, i32 9, !dbg !14491
  %hca_cur144 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps143, i32 0, i32 0, !dbg !14491
  %arrayidx145 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur144, i64 0, i64 0, !dbg !14491
  %arraydecay146 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx145, i64 0, i64 0, !dbg !14491
  %add.ptr147 = getelementptr i32, i32* %arraydecay146, i64 1, !dbg !14491
  %101 = load i32, i32* %add.ptr147, align 4, !dbg !14491
  %and148 = and i32 %101, 255, !dbg !14491
  %shl149 = shl i32 %and148, 24, !dbg !14491
  %102 = load %struct.mlx5_esw_flow_attr*, %struct.mlx5_esw_flow_attr** %esw_attr, align 8, !dbg !14491
  %dests150 = getelementptr inbounds %struct.mlx5_esw_flow_attr, %struct.mlx5_esw_flow_attr* %102, i32 0, i32 9, !dbg !14491
  %103 = load i32, i32* %j, align 4, !dbg !14491
  %idxprom151 = sext i32 %103 to i64, !dbg !14491
  %arrayidx152 = getelementptr [2 x %struct.anon.193], [2 x %struct.anon.193]* %dests150, i64 0, i64 %idxprom151, !dbg !14491
  %mdev153 = getelementptr inbounds %struct.anon.193, %struct.anon.193* %arrayidx152, i32 0, i32 3, !dbg !14491
  %104 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %mdev153, align 8, !dbg !14491
  %caps154 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %104, i32 0, i32 9, !dbg !14491
  %hca_cur155 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps154, i32 0, i32 0, !dbg !14491
  %arrayidx156 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur155, i64 0, i64 0, !dbg !14491
  %arraydecay157 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx156, i64 0, i64 0, !dbg !14491
  %add.ptr158 = getelementptr i32, i32* %arraydecay157, i64 1, !dbg !14491
  %105 = load i32, i32* %add.ptr158, align 4, !dbg !14491
  %and159 = and i32 %105, 65280, !dbg !14491
  %shl160 = shl i32 %and159, 8, !dbg !14491
  %or161 = or i32 %shl149, %shl160, !dbg !14491
  %106 = load %struct.mlx5_esw_flow_attr*, %struct.mlx5_esw_flow_attr** %esw_attr, align 8, !dbg !14491
  %dests162 = getelementptr inbounds %struct.mlx5_esw_flow_attr, %struct.mlx5_esw_flow_attr* %106, i32 0, i32 9, !dbg !14491
  %107 = load i32, i32* %j, align 4, !dbg !14491
  %idxprom163 = sext i32 %107 to i64, !dbg !14491
  %arrayidx164 = getelementptr [2 x %struct.anon.193], [2 x %struct.anon.193]* %dests162, i64 0, i64 %idxprom163, !dbg !14491
  %mdev165 = getelementptr inbounds %struct.anon.193, %struct.anon.193* %arrayidx164, i32 0, i32 3, !dbg !14491
  %108 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %mdev165, align 8, !dbg !14491
  %caps166 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %108, i32 0, i32 9, !dbg !14491
  %hca_cur167 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps166, i32 0, i32 0, !dbg !14491
  %arrayidx168 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur167, i64 0, i64 0, !dbg !14491
  %arraydecay169 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx168, i64 0, i64 0, !dbg !14491
  %add.ptr170 = getelementptr i32, i32* %arraydecay169, i64 1, !dbg !14491
  %109 = load i32, i32* %add.ptr170, align 4, !dbg !14491
  %and171 = and i32 %109, 16711680, !dbg !14491
  %shr172 = lshr i32 %and171, 8, !dbg !14491
  %or173 = or i32 %or161, %shr172, !dbg !14491
  %110 = load %struct.mlx5_esw_flow_attr*, %struct.mlx5_esw_flow_attr** %esw_attr, align 8, !dbg !14491
  %dests174 = getelementptr inbounds %struct.mlx5_esw_flow_attr, %struct.mlx5_esw_flow_attr* %110, i32 0, i32 9, !dbg !14491
  %111 = load i32, i32* %j, align 4, !dbg !14491
  %idxprom175 = sext i32 %111 to i64, !dbg !14491
  %arrayidx176 = getelementptr [2 x %struct.anon.193], [2 x %struct.anon.193]* %dests174, i64 0, i64 %idxprom175, !dbg !14491
  %mdev177 = getelementptr inbounds %struct.anon.193, %struct.anon.193* %arrayidx176, i32 0, i32 3, !dbg !14491
  %112 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %mdev177, align 8, !dbg !14491
  %caps178 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %112, i32 0, i32 9, !dbg !14491
  %hca_cur179 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps178, i32 0, i32 0, !dbg !14491
  %arrayidx180 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur179, i64 0, i64 0, !dbg !14491
  %arraydecay181 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx180, i64 0, i64 0, !dbg !14491
  %add.ptr182 = getelementptr i32, i32* %arraydecay181, i64 1, !dbg !14491
  %113 = load i32, i32* %add.ptr182, align 4, !dbg !14491
  %and183 = and i32 %113, -16777216, !dbg !14491
  %shr184 = lshr i32 %and183, 24, !dbg !14491
  %or185 = or i32 %or173, %shr184, !dbg !14491
  br label %cond.end197, !dbg !14491

cond.false186:                                    ; preds = %for.body
  %114 = load %struct.mlx5_esw_flow_attr*, %struct.mlx5_esw_flow_attr** %esw_attr, align 8, !dbg !14491
  %dests187 = getelementptr inbounds %struct.mlx5_esw_flow_attr, %struct.mlx5_esw_flow_attr* %114, i32 0, i32 9, !dbg !14491
  %115 = load i32, i32* %j, align 4, !dbg !14491
  %idxprom188 = sext i32 %115 to i64, !dbg !14491
  %arrayidx189 = getelementptr [2 x %struct.anon.193], [2 x %struct.anon.193]* %dests187, i64 0, i64 %idxprom188, !dbg !14491
  %mdev190 = getelementptr inbounds %struct.anon.193, %struct.anon.193* %arrayidx189, i32 0, i32 3, !dbg !14491
  %116 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %mdev190, align 8, !dbg !14491
  %caps191 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %116, i32 0, i32 9, !dbg !14491
  %hca_cur192 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps191, i32 0, i32 0, !dbg !14491
  %arrayidx193 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur192, i64 0, i64 0, !dbg !14491
  %arraydecay194 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx193, i64 0, i64 0, !dbg !14491
  %add.ptr195 = getelementptr i32, i32* %arraydecay194, i64 1, !dbg !14491
  %117 = load i32, i32* %add.ptr195, align 4, !dbg !14491
  %call196 = call i32 @__fswab32(i32 %117) #10, !dbg !14491
  br label %cond.end197, !dbg !14491

cond.end197:                                      ; preds = %cond.false186, %cond.true138
  %cond198 = phi i32 [ %or185, %cond.true138 ], [ %call196, %cond.false186 ], !dbg !14491
  %shr199 = lshr i32 %cond198, 0, !dbg !14491
  %and200 = and i32 %shr199, 65535, !dbg !14491
  %conv201 = trunc i32 %and200 to i16, !dbg !14491
  %118 = load i32, i32* %i, align 4, !dbg !14492
  %idxprom202 = sext i32 %118 to i64, !dbg !14493
  %arrayidx203 = getelementptr [3 x %struct.mlx5_flow_destination], [3 x %struct.mlx5_flow_destination]* %dest, i64 0, i64 %idxprom202, !dbg !14493
  %119 = getelementptr inbounds %struct.mlx5_flow_destination, %struct.mlx5_flow_destination* %arrayidx203, i32 0, i32 1, !dbg !14494
  %vport204 = bitcast %union.anon.146* %119 to %struct.anon.147*, !dbg !14494
  %vhca_id = getelementptr inbounds %struct.anon.147, %struct.anon.147* %vport204, i32 0, i32 1, !dbg !14495
  store i16 %conv201, i16* %vhca_id, align 2, !dbg !14496
  %120 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !14497
  %dev205 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %120, i32 0, i32 0, !dbg !14497
  %121 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev205, align 8, !dbg !14497
  %caps206 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %121, i32 0, i32 9, !dbg !14497
  %hca_cur207 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps206, i32 0, i32 0, !dbg !14497
  %arrayidx208 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur207, i64 0, i64 9, !dbg !14497
  %arraydecay209 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx208, i64 0, i64 0, !dbg !14497
  %add.ptr210 = getelementptr i32, i32* %arraydecay209, i64 0, !dbg !14497
  %122 = load i32, i32* %add.ptr210, align 4, !dbg !14497
  %123 = call i1 @llvm.is.constant.i32(i32 %122), !dbg !14497
  br i1 %123, label %cond.true211, label %cond.false247, !dbg !14497

cond.true211:                                     ; preds = %cond.end197
  %124 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !14497
  %dev212 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %124, i32 0, i32 0, !dbg !14497
  %125 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev212, align 8, !dbg !14497
  %caps213 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %125, i32 0, i32 9, !dbg !14497
  %hca_cur214 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps213, i32 0, i32 0, !dbg !14497
  %arrayidx215 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur214, i64 0, i64 9, !dbg !14497
  %arraydecay216 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx215, i64 0, i64 0, !dbg !14497
  %add.ptr217 = getelementptr i32, i32* %arraydecay216, i64 0, !dbg !14497
  %126 = load i32, i32* %add.ptr217, align 4, !dbg !14497
  %and218 = and i32 %126, 255, !dbg !14497
  %shl219 = shl i32 %and218, 24, !dbg !14497
  %127 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !14497
  %dev220 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %127, i32 0, i32 0, !dbg !14497
  %128 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev220, align 8, !dbg !14497
  %caps221 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %128, i32 0, i32 9, !dbg !14497
  %hca_cur222 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps221, i32 0, i32 0, !dbg !14497
  %arrayidx223 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur222, i64 0, i64 9, !dbg !14497
  %arraydecay224 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx223, i64 0, i64 0, !dbg !14497
  %add.ptr225 = getelementptr i32, i32* %arraydecay224, i64 0, !dbg !14497
  %129 = load i32, i32* %add.ptr225, align 4, !dbg !14497
  %and226 = and i32 %129, 65280, !dbg !14497
  %shl227 = shl i32 %and226, 8, !dbg !14497
  %or228 = or i32 %shl219, %shl227, !dbg !14497
  %130 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !14497
  %dev229 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %130, i32 0, i32 0, !dbg !14497
  %131 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev229, align 8, !dbg !14497
  %caps230 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %131, i32 0, i32 9, !dbg !14497
  %hca_cur231 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps230, i32 0, i32 0, !dbg !14497
  %arrayidx232 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur231, i64 0, i64 9, !dbg !14497
  %arraydecay233 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx232, i64 0, i64 0, !dbg !14497
  %add.ptr234 = getelementptr i32, i32* %arraydecay233, i64 0, !dbg !14497
  %132 = load i32, i32* %add.ptr234, align 4, !dbg !14497
  %and235 = and i32 %132, 16711680, !dbg !14497
  %shr236 = lshr i32 %and235, 8, !dbg !14497
  %or237 = or i32 %or228, %shr236, !dbg !14497
  %133 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !14497
  %dev238 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %133, i32 0, i32 0, !dbg !14497
  %134 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev238, align 8, !dbg !14497
  %caps239 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %134, i32 0, i32 9, !dbg !14497
  %hca_cur240 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps239, i32 0, i32 0, !dbg !14497
  %arrayidx241 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur240, i64 0, i64 9, !dbg !14497
  %arraydecay242 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx241, i64 0, i64 0, !dbg !14497
  %add.ptr243 = getelementptr i32, i32* %arraydecay242, i64 0, !dbg !14497
  %135 = load i32, i32* %add.ptr243, align 4, !dbg !14497
  %and244 = and i32 %135, -16777216, !dbg !14497
  %shr245 = lshr i32 %and244, 24, !dbg !14497
  %or246 = or i32 %or237, %shr245, !dbg !14497
  br label %cond.end255, !dbg !14497

cond.false247:                                    ; preds = %cond.end197
  %136 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !14497
  %dev248 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %136, i32 0, i32 0, !dbg !14497
  %137 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev248, align 8, !dbg !14497
  %caps249 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %137, i32 0, i32 9, !dbg !14497
  %hca_cur250 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps249, i32 0, i32 0, !dbg !14497
  %arrayidx251 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur250, i64 0, i64 9, !dbg !14497
  %arraydecay252 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx251, i64 0, i64 0, !dbg !14497
  %add.ptr253 = getelementptr i32, i32* %arraydecay252, i64 0, !dbg !14497
  %138 = load i32, i32* %add.ptr253, align 4, !dbg !14497
  %call254 = call i32 @__fswab32(i32 %138) #10, !dbg !14497
  br label %cond.end255, !dbg !14497

cond.end255:                                      ; preds = %cond.false247, %cond.true211
  %cond256 = phi i32 [ %or246, %cond.true211 ], [ %call254, %cond.false247 ], !dbg !14497
  %shr257 = lshr i32 %cond256, 2, !dbg !14497
  %and258 = and i32 %shr257, 1, !dbg !14497
  %tobool259 = icmp ne i32 %and258, 0, !dbg !14497
  br i1 %tobool259, label %if.then260, label %if.end268, !dbg !14499

if.then260:                                       ; preds = %cond.end255
  %139 = load i32, i32* %i, align 4, !dbg !14500
  %idxprom261 = sext i32 %139 to i64, !dbg !14501
  %arrayidx262 = getelementptr [3 x %struct.mlx5_flow_destination], [3 x %struct.mlx5_flow_destination]* %dest, i64 0, i64 %idxprom261, !dbg !14501
  %140 = getelementptr inbounds %struct.mlx5_flow_destination, %struct.mlx5_flow_destination* %arrayidx262, i32 0, i32 1, !dbg !14502
  %vport263 = bitcast %union.anon.146* %140 to %struct.anon.147*, !dbg !14502
  %flags264 = getelementptr inbounds %struct.anon.147, %struct.anon.147* %vport263, i32 0, i32 3, !dbg !14503
  %141 = load i8, i8* %flags264, align 8, !dbg !14504
  %conv265 = zext i8 %141 to i32, !dbg !14504
  %or266 = or i32 %conv265, 1, !dbg !14504
  %conv267 = trunc i32 %or266 to i8, !dbg !14504
  store i8 %conv267, i8* %flags264, align 8, !dbg !14504
  br label %if.end268, !dbg !14501

if.end268:                                        ; preds = %if.then260, %cond.end255
  %142 = load %struct.mlx5_esw_flow_attr*, %struct.mlx5_esw_flow_attr** %esw_attr, align 8, !dbg !14505
  %dests269 = getelementptr inbounds %struct.mlx5_esw_flow_attr, %struct.mlx5_esw_flow_attr* %142, i32 0, i32 9, !dbg !14507
  %143 = load i32, i32* %j, align 4, !dbg !14508
  %idxprom270 = sext i32 %143 to i64, !dbg !14505
  %arrayidx271 = getelementptr [2 x %struct.anon.193], [2 x %struct.anon.193]* %dests269, i64 0, i64 %idxprom270, !dbg !14505
  %flags272 = getelementptr inbounds %struct.anon.193, %struct.anon.193* %arrayidx271, i32 0, i32 0, !dbg !14509
  %144 = load i32, i32* %flags272, align 8, !dbg !14509
  %and273 = and i32 %144, 1, !dbg !14510
  %tobool274 = icmp ne i32 %and273, 0, !dbg !14510
  br i1 %tobool274, label %if.then275, label %if.end297, !dbg !14511

if.then275:                                       ; preds = %if.end268
  %action276 = getelementptr inbounds %struct.mlx5_flow_act, %struct.mlx5_flow_act* %flow_act, i32 0, i32 0, !dbg !14512
  %145 = load i32, i32* %action276, align 8, !dbg !14514
  %or277 = or i32 %145, 16, !dbg !14514
  store i32 %or277, i32* %action276, align 8, !dbg !14514
  %146 = load %struct.mlx5_esw_flow_attr*, %struct.mlx5_esw_flow_attr** %esw_attr, align 8, !dbg !14515
  %dests278 = getelementptr inbounds %struct.mlx5_esw_flow_attr, %struct.mlx5_esw_flow_attr* %146, i32 0, i32 9, !dbg !14516
  %147 = load i32, i32* %j, align 4, !dbg !14517
  %idxprom279 = sext i32 %147 to i64, !dbg !14515
  %arrayidx280 = getelementptr [2 x %struct.anon.193], [2 x %struct.anon.193]* %dests278, i64 0, i64 %idxprom279, !dbg !14515
  %pkt_reformat = getelementptr inbounds %struct.anon.193, %struct.anon.193* %arrayidx280, i32 0, i32 2, !dbg !14518
  %148 = load %struct.mlx5_pkt_reformat*, %struct.mlx5_pkt_reformat** %pkt_reformat, align 8, !dbg !14518
  %pkt_reformat281 = getelementptr inbounds %struct.mlx5_flow_act, %struct.mlx5_flow_act* %flow_act, i32 0, i32 2, !dbg !14519
  store %struct.mlx5_pkt_reformat* %148, %struct.mlx5_pkt_reformat** %pkt_reformat281, align 8, !dbg !14520
  %149 = load i32, i32* %i, align 4, !dbg !14521
  %idxprom282 = sext i32 %149 to i64, !dbg !14522
  %arrayidx283 = getelementptr [3 x %struct.mlx5_flow_destination], [3 x %struct.mlx5_flow_destination]* %dest, i64 0, i64 %idxprom282, !dbg !14522
  %150 = getelementptr inbounds %struct.mlx5_flow_destination, %struct.mlx5_flow_destination* %arrayidx283, i32 0, i32 1, !dbg !14523
  %vport284 = bitcast %union.anon.146* %150 to %struct.anon.147*, !dbg !14523
  %flags285 = getelementptr inbounds %struct.anon.147, %struct.anon.147* %vport284, i32 0, i32 3, !dbg !14524
  %151 = load i8, i8* %flags285, align 8, !dbg !14525
  %conv286 = zext i8 %151 to i32, !dbg !14525
  %or287 = or i32 %conv286, 2, !dbg !14525
  %conv288 = trunc i32 %or287 to i8, !dbg !14525
  store i8 %conv288, i8* %flags285, align 8, !dbg !14525
  %152 = load %struct.mlx5_esw_flow_attr*, %struct.mlx5_esw_flow_attr** %esw_attr, align 8, !dbg !14526
  %dests289 = getelementptr inbounds %struct.mlx5_esw_flow_attr, %struct.mlx5_esw_flow_attr* %152, i32 0, i32 9, !dbg !14527
  %153 = load i32, i32* %j, align 4, !dbg !14528
  %idxprom290 = sext i32 %153 to i64, !dbg !14526
  %arrayidx291 = getelementptr [2 x %struct.anon.193], [2 x %struct.anon.193]* %dests289, i64 0, i64 %idxprom290, !dbg !14526
  %pkt_reformat292 = getelementptr inbounds %struct.anon.193, %struct.anon.193* %arrayidx291, i32 0, i32 2, !dbg !14529
  %154 = load %struct.mlx5_pkt_reformat*, %struct.mlx5_pkt_reformat** %pkt_reformat292, align 8, !dbg !14529
  %155 = load i32, i32* %i, align 4, !dbg !14530
  %idxprom293 = sext i32 %155 to i64, !dbg !14531
  %arrayidx294 = getelementptr [3 x %struct.mlx5_flow_destination], [3 x %struct.mlx5_flow_destination]* %dest, i64 0, i64 %idxprom293, !dbg !14531
  %156 = getelementptr inbounds %struct.mlx5_flow_destination, %struct.mlx5_flow_destination* %arrayidx294, i32 0, i32 1, !dbg !14532
  %vport295 = bitcast %union.anon.146* %156 to %struct.anon.147*, !dbg !14532
  %pkt_reformat296 = getelementptr inbounds %struct.anon.147, %struct.anon.147* %vport295, i32 0, i32 2, !dbg !14533
  store %struct.mlx5_pkt_reformat* %154, %struct.mlx5_pkt_reformat** %pkt_reformat296, align 8, !dbg !14534
  br label %if.end297, !dbg !14535

if.end297:                                        ; preds = %if.then275, %if.end268
  %157 = load i32, i32* %i, align 4, !dbg !14536
  %inc298 = add i32 %157, 1, !dbg !14536
  store i32 %inc298, i32* %i, align 4, !dbg !14536
  br label %for.inc, !dbg !14537

for.inc:                                          ; preds = %if.end297
  %158 = load i32, i32* %j, align 4, !dbg !14538
  %inc299 = add i32 %158, 1, !dbg !14538
  store i32 %inc299, i32* %j, align 4, !dbg !14538
  br label %for.cond, !dbg !14539, !llvm.loop !14540

for.end:                                          ; preds = %for.cond
  br label %if.end300

if.end300:                                        ; preds = %for.end, %if.end113
  br label %if.end301

if.end301:                                        ; preds = %if.end300, %if.then92
  br label %if.end302

if.end302:                                        ; preds = %if.end301, %if.then81
  br label %if.end303, !dbg !14542

if.end303:                                        ; preds = %if.end302, %if.end75
  %159 = load %struct.mlx5_esw_flow_attr*, %struct.mlx5_esw_flow_attr** %esw_attr, align 8, !dbg !14543
  %decap_pkt_reformat = getelementptr inbounds %struct.mlx5_esw_flow_attr, %struct.mlx5_esw_flow_attr* %159, i32 0, i32 10, !dbg !14545
  %160 = load %struct.mlx5_pkt_reformat*, %struct.mlx5_pkt_reformat** %decap_pkt_reformat, align 8, !dbg !14545
  %tobool304 = icmp ne %struct.mlx5_pkt_reformat* %160, null, !dbg !14543
  br i1 %tobool304, label %if.then305, label %if.end308, !dbg !14546

if.then305:                                       ; preds = %if.end303
  %161 = load %struct.mlx5_esw_flow_attr*, %struct.mlx5_esw_flow_attr** %esw_attr, align 8, !dbg !14547
  %decap_pkt_reformat306 = getelementptr inbounds %struct.mlx5_esw_flow_attr, %struct.mlx5_esw_flow_attr* %161, i32 0, i32 10, !dbg !14548
  %162 = load %struct.mlx5_pkt_reformat*, %struct.mlx5_pkt_reformat** %decap_pkt_reformat306, align 8, !dbg !14548
  %pkt_reformat307 = getelementptr inbounds %struct.mlx5_flow_act, %struct.mlx5_flow_act* %flow_act, i32 0, i32 2, !dbg !14549
  store %struct.mlx5_pkt_reformat* %162, %struct.mlx5_pkt_reformat** %pkt_reformat307, align 8, !dbg !14550
  br label %if.end308, !dbg !14551

if.end308:                                        ; preds = %if.then305, %if.end303
  %action309 = getelementptr inbounds %struct.mlx5_flow_act, %struct.mlx5_flow_act* %flow_act, i32 0, i32 0, !dbg !14552
  %163 = load i32, i32* %action309, align 8, !dbg !14552
  %and310 = and i32 %163, 8, !dbg !14554
  %tobool311 = icmp ne i32 %and310, 0, !dbg !14554
  br i1 %tobool311, label %if.then312, label %if.end320, !dbg !14555

if.then312:                                       ; preds = %if.end308
  %164 = load i32, i32* %i, align 4, !dbg !14556
  %idxprom313 = sext i32 %164 to i64, !dbg !14558
  %arrayidx314 = getelementptr [3 x %struct.mlx5_flow_destination], [3 x %struct.mlx5_flow_destination]* %dest, i64 0, i64 %idxprom313, !dbg !14558
  %type315 = getelementptr inbounds %struct.mlx5_flow_destination, %struct.mlx5_flow_destination* %arrayidx314, i32 0, i32 0, !dbg !14559
  store i32 256, i32* %type315, align 16, !dbg !14560
  %165 = load %struct.mlx5_flow_attr*, %struct.mlx5_flow_attr** %attr.addr, align 8, !dbg !14561
  %counter = getelementptr inbounds %struct.mlx5_flow_attr, %struct.mlx5_flow_attr* %165, i32 0, i32 1, !dbg !14562
  %166 = load %struct.mlx5_fc*, %struct.mlx5_fc** %counter, align 8, !dbg !14562
  %call316 = call i32 @mlx5_fc_id(%struct.mlx5_fc* %166) #8, !dbg !14563
  %167 = load i32, i32* %i, align 4, !dbg !14564
  %idxprom317 = sext i32 %167 to i64, !dbg !14565
  %arrayidx318 = getelementptr [3 x %struct.mlx5_flow_destination], [3 x %struct.mlx5_flow_destination]* %dest, i64 0, i64 %idxprom317, !dbg !14565
  %168 = getelementptr inbounds %struct.mlx5_flow_destination, %struct.mlx5_flow_destination* %arrayidx318, i32 0, i32 1, !dbg !14566
  %counter_id = bitcast %union.anon.146* %168 to i32*, !dbg !14566
  store i32 %call316, i32* %counter_id, align 8, !dbg !14567
  %169 = load i32, i32* %i, align 4, !dbg !14568
  %inc319 = add i32 %169, 1, !dbg !14568
  store i32 %inc319, i32* %i, align 4, !dbg !14568
  br label %if.end320, !dbg !14569

if.end320:                                        ; preds = %if.then312, %if.end308
  %170 = load %struct.mlx5_flow_attr*, %struct.mlx5_flow_attr** %attr.addr, align 8, !dbg !14570
  %outer_match_level = getelementptr inbounds %struct.mlx5_flow_attr, %struct.mlx5_flow_attr* %170, i32 0, i32 11, !dbg !14572
  %171 = load i8, i8* %outer_match_level, align 1, !dbg !14572
  %conv321 = zext i8 %171 to i32, !dbg !14570
  %cmp322 = icmp ne i32 %conv321, 0, !dbg !14573
  br i1 %cmp322, label %if.then324, label %if.end328, !dbg !14574

if.then324:                                       ; preds = %if.end320
  %172 = load %struct.mlx5_flow_spec*, %struct.mlx5_flow_spec** %spec.addr, align 8, !dbg !14575
  %match_criteria_enable = getelementptr inbounds %struct.mlx5_flow_spec, %struct.mlx5_flow_spec* %172, i32 0, i32 0, !dbg !14576
  %173 = load i8, i8* %match_criteria_enable, align 4, !dbg !14577
  %conv325 = zext i8 %173 to i32, !dbg !14577
  %or326 = or i32 %conv325, 1, !dbg !14577
  %conv327 = trunc i32 %or326 to i8, !dbg !14577
  store i8 %conv327, i8* %match_criteria_enable, align 4, !dbg !14577
  br label %if.end328, !dbg !14575

if.end328:                                        ; preds = %if.then324, %if.end320
  %174 = load %struct.mlx5_flow_attr*, %struct.mlx5_flow_attr** %attr.addr, align 8, !dbg !14578
  %inner_match_level = getelementptr inbounds %struct.mlx5_flow_attr, %struct.mlx5_flow_attr* %174, i32 0, i32 10, !dbg !14580
  %175 = load i8, i8* %inner_match_level, align 8, !dbg !14580
  %conv329 = zext i8 %175 to i32, !dbg !14578
  %cmp330 = icmp ne i32 %conv329, 0, !dbg !14581
  br i1 %cmp330, label %if.then332, label %if.end337, !dbg !14582

if.then332:                                       ; preds = %if.end328
  %176 = load %struct.mlx5_flow_spec*, %struct.mlx5_flow_spec** %spec.addr, align 8, !dbg !14583
  %match_criteria_enable333 = getelementptr inbounds %struct.mlx5_flow_spec, %struct.mlx5_flow_spec* %176, i32 0, i32 0, !dbg !14584
  %177 = load i8, i8* %match_criteria_enable333, align 4, !dbg !14585
  %conv334 = zext i8 %177 to i32, !dbg !14585
  %or335 = or i32 %conv334, 4, !dbg !14585
  %conv336 = trunc i32 %or335 to i8, !dbg !14585
  store i8 %conv336, i8* %match_criteria_enable333, align 4, !dbg !14585
  br label %if.end337, !dbg !14583

if.end337:                                        ; preds = %if.then332, %if.end328
  %action338 = getelementptr inbounds %struct.mlx5_flow_act, %struct.mlx5_flow_act* %flow_act, i32 0, i32 0, !dbg !14586
  %178 = load i32, i32* %action338, align 8, !dbg !14586
  %and339 = and i32 %178, 64, !dbg !14588
  %tobool340 = icmp ne i32 %and339, 0, !dbg !14588
  br i1 %tobool340, label %if.then341, label %if.end343, !dbg !14589

if.then341:                                       ; preds = %if.end337
  %179 = load %struct.mlx5_flow_attr*, %struct.mlx5_flow_attr** %attr.addr, align 8, !dbg !14590
  %modify_hdr = getelementptr inbounds %struct.mlx5_flow_attr, %struct.mlx5_flow_attr* %179, i32 0, i32 2, !dbg !14591
  %180 = load %struct.mlx5_modify_hdr*, %struct.mlx5_modify_hdr** %modify_hdr, align 8, !dbg !14591
  %modify_hdr342 = getelementptr inbounds %struct.mlx5_flow_act, %struct.mlx5_flow_act* %flow_act, i32 0, i32 1, !dbg !14592
  store %struct.mlx5_modify_hdr* %180, %struct.mlx5_modify_hdr** %modify_hdr342, align 8, !dbg !14593
  br label %if.end343, !dbg !14594

if.end343:                                        ; preds = %if.then341, %if.end337
  %181 = load i8, i8* %split, align 1, !dbg !14595
  %tobool344 = trunc i8 %181 to i1, !dbg !14595
  br i1 %tobool344, label %if.then345, label %if.else353, !dbg !14597

if.then345:                                       ; preds = %if.end343
  %182 = load %struct.mlx5_flow_attr*, %struct.mlx5_flow_attr** %attr.addr, align 8, !dbg !14598
  %chain = getelementptr inbounds %struct.mlx5_flow_attr, %struct.mlx5_flow_attr* %182, i32 0, i32 5, !dbg !14600
  %183 = load i32, i32* %chain, align 8, !dbg !14600
  %conv346 = trunc i32 %183 to i16, !dbg !14598
  %chain347 = getelementptr inbounds %struct.mlx5_vport_tbl_attr, %struct.mlx5_vport_tbl_attr* %fwd_attr, i32 0, i32 0, !dbg !14601
  store i16 %conv346, i16* %chain347, align 2, !dbg !14602
  %184 = load %struct.mlx5_flow_attr*, %struct.mlx5_flow_attr** %attr.addr, align 8, !dbg !14603
  %prio348 = getelementptr inbounds %struct.mlx5_flow_attr, %struct.mlx5_flow_attr* %184, i32 0, i32 6, !dbg !14604
  %185 = load i16, i16* %prio348, align 4, !dbg !14604
  %prio349 = getelementptr inbounds %struct.mlx5_vport_tbl_attr, %struct.mlx5_vport_tbl_attr* %fwd_attr, i32 0, i32 1, !dbg !14605
  store i16 %185, i16* %prio349, align 2, !dbg !14606
  %186 = load %struct.mlx5_esw_flow_attr*, %struct.mlx5_esw_flow_attr** %esw_attr, align 8, !dbg !14607
  %in_rep = getelementptr inbounds %struct.mlx5_esw_flow_attr, %struct.mlx5_esw_flow_attr* %186, i32 0, i32 0, !dbg !14608
  %187 = load %struct.mlx5_eswitch_rep*, %struct.mlx5_eswitch_rep** %in_rep, align 8, !dbg !14608
  %vport350 = getelementptr inbounds %struct.mlx5_eswitch_rep, %struct.mlx5_eswitch_rep* %187, i32 0, i32 1, !dbg !14609
  %188 = load i16, i16* %vport350, align 8, !dbg !14609
  %vport351 = getelementptr inbounds %struct.mlx5_vport_tbl_attr, %struct.mlx5_vport_tbl_attr* %fwd_attr, i32 0, i32 2, !dbg !14610
  store i16 %188, i16* %vport351, align 2, !dbg !14611
  %189 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !14612
  %call352 = call %struct.mlx5_flow_table* @esw_vport_tbl_get(%struct.mlx5_eswitch* %189, %struct.mlx5_vport_tbl_attr* %fwd_attr) #8, !dbg !14613
  store %struct.mlx5_flow_table* %call352, %struct.mlx5_flow_table** %fdb, align 8, !dbg !14614
  br label %if.end372, !dbg !14615

if.else353:                                       ; preds = %if.end343
  %190 = load %struct.mlx5_flow_attr*, %struct.mlx5_flow_attr** %attr.addr, align 8, !dbg !14616
  %chain354 = getelementptr inbounds %struct.mlx5_flow_attr, %struct.mlx5_flow_attr* %190, i32 0, i32 5, !dbg !14619
  %191 = load i32, i32* %chain354, align 8, !dbg !14619
  %tobool355 = icmp ne i32 %191, 0, !dbg !14616
  br i1 %tobool355, label %if.then359, label %lor.lhs.false, !dbg !14620

lor.lhs.false:                                    ; preds = %if.else353
  %192 = load %struct.mlx5_flow_attr*, %struct.mlx5_flow_attr** %attr.addr, align 8, !dbg !14621
  %prio356 = getelementptr inbounds %struct.mlx5_flow_attr, %struct.mlx5_flow_attr* %192, i32 0, i32 6, !dbg !14622
  %193 = load i16, i16* %prio356, align 4, !dbg !14622
  %conv357 = zext i16 %193 to i32, !dbg !14621
  %tobool358 = icmp ne i32 %conv357, 0, !dbg !14621
  br i1 %tobool358, label %if.then359, label %if.else364, !dbg !14623

if.then359:                                       ; preds = %lor.lhs.false, %if.else353
  %194 = load %struct.mlx5_fs_chains*, %struct.mlx5_fs_chains** %chains, align 8, !dbg !14624
  %195 = load %struct.mlx5_flow_attr*, %struct.mlx5_flow_attr** %attr.addr, align 8, !dbg !14625
  %chain360 = getelementptr inbounds %struct.mlx5_flow_attr, %struct.mlx5_flow_attr* %195, i32 0, i32 5, !dbg !14626
  %196 = load i32, i32* %chain360, align 8, !dbg !14626
  %197 = load %struct.mlx5_flow_attr*, %struct.mlx5_flow_attr** %attr.addr, align 8, !dbg !14627
  %prio361 = getelementptr inbounds %struct.mlx5_flow_attr, %struct.mlx5_flow_attr* %197, i32 0, i32 6, !dbg !14628
  %198 = load i16, i16* %prio361, align 4, !dbg !14628
  %conv362 = zext i16 %198 to i32, !dbg !14627
  %call363 = call %struct.mlx5_flow_table* @mlx5_chains_get_table(%struct.mlx5_fs_chains* %194, i32 %196, i32 %conv362, i32 0) #8, !dbg !14629
  store %struct.mlx5_flow_table* %call363, %struct.mlx5_flow_table** %fdb, align 8, !dbg !14630
  br label %if.end366, !dbg !14631

if.else364:                                       ; preds = %lor.lhs.false
  %199 = load %struct.mlx5_flow_attr*, %struct.mlx5_flow_attr** %attr.addr, align 8, !dbg !14632
  %ft365 = getelementptr inbounds %struct.mlx5_flow_attr, %struct.mlx5_flow_attr* %199, i32 0, i32 8, !dbg !14633
  %200 = load %struct.mlx5_flow_table*, %struct.mlx5_flow_table** %ft365, align 8, !dbg !14633
  store %struct.mlx5_flow_table* %200, %struct.mlx5_flow_table** %fdb, align 8, !dbg !14634
  br label %if.end366

if.end366:                                        ; preds = %if.else364, %if.then359
  %201 = load %struct.mlx5_flow_attr*, %struct.mlx5_flow_attr** %attr.addr, align 8, !dbg !14635
  %flags367 = getelementptr inbounds %struct.mlx5_flow_attr, %struct.mlx5_flow_attr* %201, i32 0, i32 12, !dbg !14637
  %202 = load i32, i32* %flags367, align 4, !dbg !14637
  %and368 = and i32 %202, 4, !dbg !14638
  %tobool369 = icmp ne i32 %and368, 0, !dbg !14638
  br i1 %tobool369, label %if.end371, label %if.then370, !dbg !14639

if.then370:                                       ; preds = %if.end366
  %203 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !14640
  %204 = load %struct.mlx5_flow_spec*, %struct.mlx5_flow_spec** %spec.addr, align 8, !dbg !14641
  %205 = load %struct.mlx5_esw_flow_attr*, %struct.mlx5_esw_flow_attr** %esw_attr, align 8, !dbg !14642
  call void @mlx5_eswitch_set_rule_source_port(%struct.mlx5_eswitch* %203, %struct.mlx5_flow_spec* %204, %struct.mlx5_esw_flow_attr* %205) #8, !dbg !14643
  br label %if.end371, !dbg !14643

if.end371:                                        ; preds = %if.then370, %if.end366
  br label %if.end372

if.end372:                                        ; preds = %if.end371, %if.then345
  %206 = load %struct.mlx5_flow_table*, %struct.mlx5_flow_table** %fdb, align 8, !dbg !14644
  %207 = bitcast %struct.mlx5_flow_table* %206 to i8*, !dbg !14644
  %call373 = call zeroext i1 @IS_ERR(i8* %207) #8, !dbg !14646
  br i1 %call373, label %if.then374, label %if.end376, !dbg !14647

if.then374:                                       ; preds = %if.end372
  %208 = load %struct.mlx5_flow_table*, %struct.mlx5_flow_table** %fdb, align 8, !dbg !14648
  %209 = bitcast %struct.mlx5_flow_table* %208 to i8*, !dbg !14648
  %call375 = call i8* @ERR_CAST(i8* %209) #8, !dbg !14650
  %210 = bitcast i8* %call375 to %struct.mlx5_flow_handle*, !dbg !14650
  store %struct.mlx5_flow_handle* %210, %struct.mlx5_flow_handle** %rule, align 8, !dbg !14651
  br label %err_esw_get, !dbg !14652

if.end376:                                        ; preds = %if.end372
  %211 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !14653
  %212 = load %struct.mlx5_flow_spec*, %struct.mlx5_flow_spec** %spec.addr, align 8, !dbg !14654
  %213 = load %struct.mlx5_esw_flow_attr*, %struct.mlx5_esw_flow_attr** %esw_attr, align 8, !dbg !14655
  call void @mlx5_eswitch_set_rule_flow_source(%struct.mlx5_eswitch* %211, %struct.mlx5_flow_spec* %212, %struct.mlx5_esw_flow_attr* %213) #8, !dbg !14656
  %214 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !14657
  %215 = load %struct.mlx5_flow_attr*, %struct.mlx5_flow_attr** %attr.addr, align 8, !dbg !14659
  %216 = load %struct.mlx5_flow_spec*, %struct.mlx5_flow_spec** %spec.addr, align 8, !dbg !14660
  %call377 = call zeroext i1 @mlx5_eswitch_termtbl_required(%struct.mlx5_eswitch* %214, %struct.mlx5_flow_attr* %215, %struct.mlx5_flow_act* %flow_act, %struct.mlx5_flow_spec* %216) #8, !dbg !14661
  br i1 %call377, label %if.then378, label %if.else381, !dbg !14662

if.then378:                                       ; preds = %if.end376
  %217 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !14663
  %218 = load %struct.mlx5_flow_table*, %struct.mlx5_flow_table** %fdb, align 8, !dbg !14664
  %219 = load %struct.mlx5_flow_spec*, %struct.mlx5_flow_spec** %spec.addr, align 8, !dbg !14665
  %220 = load %struct.mlx5_esw_flow_attr*, %struct.mlx5_esw_flow_attr** %esw_attr, align 8, !dbg !14666
  %arraydecay379 = getelementptr inbounds [3 x %struct.mlx5_flow_destination], [3 x %struct.mlx5_flow_destination]* %dest, i64 0, i64 0, !dbg !14667
  %221 = load i32, i32* %i, align 4, !dbg !14668
  %call380 = call %struct.mlx5_flow_handle* @mlx5_eswitch_add_termtbl_rule(%struct.mlx5_eswitch* %217, %struct.mlx5_flow_table* %218, %struct.mlx5_flow_spec* %219, %struct.mlx5_esw_flow_attr* %220, %struct.mlx5_flow_act* %flow_act, %struct.mlx5_flow_destination* %arraydecay379, i32 %221) #8, !dbg !14669
  store %struct.mlx5_flow_handle* %call380, %struct.mlx5_flow_handle** %rule, align 8, !dbg !14670
  br label %if.end384, !dbg !14671

if.else381:                                       ; preds = %if.end376
  %222 = load %struct.mlx5_flow_table*, %struct.mlx5_flow_table** %fdb, align 8, !dbg !14672
  %223 = load %struct.mlx5_flow_spec*, %struct.mlx5_flow_spec** %spec.addr, align 8, !dbg !14673
  %arraydecay382 = getelementptr inbounds [3 x %struct.mlx5_flow_destination], [3 x %struct.mlx5_flow_destination]* %dest, i64 0, i64 0, !dbg !14674
  %224 = load i32, i32* %i, align 4, !dbg !14675
  %call383 = call %struct.mlx5_flow_handle* @mlx5_add_flow_rules(%struct.mlx5_flow_table* %222, %struct.mlx5_flow_spec* %223, %struct.mlx5_flow_act* %flow_act, %struct.mlx5_flow_destination* %arraydecay382, i32 %224) #8, !dbg !14676
  store %struct.mlx5_flow_handle* %call383, %struct.mlx5_flow_handle** %rule, align 8, !dbg !14677
  br label %if.end384

if.end384:                                        ; preds = %if.else381, %if.then378
  %225 = load %struct.mlx5_flow_handle*, %struct.mlx5_flow_handle** %rule, align 8, !dbg !14678
  %226 = bitcast %struct.mlx5_flow_handle* %225 to i8*, !dbg !14678
  %call385 = call zeroext i1 @IS_ERR(i8* %226) #8, !dbg !14679
  br i1 %call385, label %if.then386, label %if.else387, !dbg !14680

if.then386:                                       ; preds = %if.end384
  br label %err_add_rule, !dbg !14681

if.else387:                                       ; preds = %if.end384
  %227 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !14682
  %offloads388 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %227, i32 0, i32 13, !dbg !14683
  %num_flows = getelementptr inbounds %struct.mlx5_esw_offload, %struct.mlx5_esw_offload* %offloads388, i32 0, i32 17, !dbg !14684
  store %struct.atomic64_t* %num_flows, %struct.atomic64_t** %v.addr.i, align 8
  %228 = load %struct.atomic64_t*, %struct.atomic64_t** %v.addr.i, align 8, !dbg !14685
  %229 = bitcast %struct.atomic64_t* %228 to i8*, !dbg !14685
  store i8* %229, i8** %v.addr.i.i, align 8
  store i64 8, i64* %size.addr.i.i, align 8
  %230 = load i8*, i8** %v.addr.i.i, align 8, !dbg !14686
  %231 = load i64, i64* %size.addr.i.i, align 8, !dbg !14687
  %conv.i.i = trunc i64 %231 to i32, !dbg !14687
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %230, i32 %conv.i.i) #11, !dbg !14688
  %232 = load i8*, i8** %v.addr.i.i, align 8, !dbg !14689
  %233 = load i64, i64* %size.addr.i.i, align 8, !dbg !14689
  call void @kcsan_check_access(i8* %232, i64 %233, i32 7) #11, !dbg !14689
  %234 = load %struct.atomic64_t*, %struct.atomic64_t** %v.addr.i, align 8, !dbg !14690
  store %struct.atomic64_t* %234, %struct.atomic64_t** %v.addr.i1.i, align 8
  %235 = load %struct.atomic64_t*, %struct.atomic64_t** %v.addr.i1.i, align 8, !dbg !14691
  %counter.i.i = getelementptr inbounds %struct.atomic64_t, %struct.atomic64_t* %235, i32 0, i32 0, !dbg !14692
  %236 = load %struct.atomic64_t*, %struct.atomic64_t** %v.addr.i1.i, align 8, !dbg !14693
  %counter1.i.i = getelementptr inbounds %struct.atomic64_t, %struct.atomic64_t* %236, i32 0, i32 0, !dbg !14694
  call void asm sideeffect "incq $0", "=*m,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %counter.i.i, i64* %counter1.i.i) #12, !dbg !14695, !srcloc !14696
  br label %if.end389

if.end389:                                        ; preds = %if.else387
  %237 = load %struct.mlx5_flow_handle*, %struct.mlx5_flow_handle** %rule, align 8, !dbg !14697
  store %struct.mlx5_flow_handle* %237, %struct.mlx5_flow_handle** %retval, align 8, !dbg !14698
  br label %return, !dbg !14698

err_add_rule:                                     ; preds = %if.then386
  call void @llvm.dbg.label(metadata !14699), !dbg !14700
  %238 = load i8, i8* %split, align 1, !dbg !14701
  %tobool390 = trunc i8 %238 to i1, !dbg !14701
  br i1 %tobool390, label %if.then391, label %if.else392, !dbg !14703

if.then391:                                       ; preds = %err_add_rule
  %239 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !14704
  call void @esw_vport_tbl_put(%struct.mlx5_eswitch* %239, %struct.mlx5_vport_tbl_attr* %fwd_attr) #8, !dbg !14705
  br label %if.end404, !dbg !14705

if.else392:                                       ; preds = %err_add_rule
  %240 = load %struct.mlx5_flow_attr*, %struct.mlx5_flow_attr** %attr.addr, align 8, !dbg !14706
  %chain393 = getelementptr inbounds %struct.mlx5_flow_attr, %struct.mlx5_flow_attr* %240, i32 0, i32 5, !dbg !14708
  %241 = load i32, i32* %chain393, align 8, !dbg !14708
  %tobool394 = icmp ne i32 %241, 0, !dbg !14706
  br i1 %tobool394, label %if.then399, label %lor.lhs.false395, !dbg !14709

lor.lhs.false395:                                 ; preds = %if.else392
  %242 = load %struct.mlx5_flow_attr*, %struct.mlx5_flow_attr** %attr.addr, align 8, !dbg !14710
  %prio396 = getelementptr inbounds %struct.mlx5_flow_attr, %struct.mlx5_flow_attr* %242, i32 0, i32 6, !dbg !14711
  %243 = load i16, i16* %prio396, align 4, !dbg !14711
  %conv397 = zext i16 %243 to i32, !dbg !14710
  %tobool398 = icmp ne i32 %conv397, 0, !dbg !14710
  br i1 %tobool398, label %if.then399, label %if.end403, !dbg !14712

if.then399:                                       ; preds = %lor.lhs.false395, %if.else392
  %244 = load %struct.mlx5_fs_chains*, %struct.mlx5_fs_chains** %chains, align 8, !dbg !14713
  %245 = load %struct.mlx5_flow_attr*, %struct.mlx5_flow_attr** %attr.addr, align 8, !dbg !14714
  %chain400 = getelementptr inbounds %struct.mlx5_flow_attr, %struct.mlx5_flow_attr* %245, i32 0, i32 5, !dbg !14715
  %246 = load i32, i32* %chain400, align 8, !dbg !14715
  %247 = load %struct.mlx5_flow_attr*, %struct.mlx5_flow_attr** %attr.addr, align 8, !dbg !14716
  %prio401 = getelementptr inbounds %struct.mlx5_flow_attr, %struct.mlx5_flow_attr* %247, i32 0, i32 6, !dbg !14717
  %248 = load i16, i16* %prio401, align 4, !dbg !14717
  %conv402 = zext i16 %248 to i32, !dbg !14716
  call void @mlx5_chains_put_table(%struct.mlx5_fs_chains* %244, i32 %246, i32 %conv402, i32 0) #8, !dbg !14718
  br label %if.end403, !dbg !14718

if.end403:                                        ; preds = %if.then399, %lor.lhs.false395
  br label %if.end404

if.end404:                                        ; preds = %if.end403, %if.then391
  br label %err_esw_get, !dbg !14701

err_esw_get:                                      ; preds = %if.end404, %if.then374
  call void @llvm.dbg.label(metadata !14719), !dbg !14720
  %249 = load %struct.mlx5_flow_attr*, %struct.mlx5_flow_attr** %attr.addr, align 8, !dbg !14721
  %flags405 = getelementptr inbounds %struct.mlx5_flow_attr, %struct.mlx5_flow_attr* %249, i32 0, i32 12, !dbg !14723
  %250 = load i32, i32* %flags405, align 4, !dbg !14723
  %and406 = and i32 %250, 2, !dbg !14724
  %tobool407 = icmp ne i32 %and406, 0, !dbg !14724
  br i1 %tobool407, label %if.end412, label %land.lhs.true, !dbg !14725

land.lhs.true:                                    ; preds = %err_esw_get
  %251 = load %struct.mlx5_flow_attr*, %struct.mlx5_flow_attr** %attr.addr, align 8, !dbg !14726
  %dest_chain408 = getelementptr inbounds %struct.mlx5_flow_attr, %struct.mlx5_flow_attr* %251, i32 0, i32 7, !dbg !14727
  %252 = load i32, i32* %dest_chain408, align 8, !dbg !14727
  %tobool409 = icmp ne i32 %252, 0, !dbg !14726
  br i1 %tobool409, label %if.then410, label %if.end412, !dbg !14728

if.then410:                                       ; preds = %land.lhs.true
  %253 = load %struct.mlx5_fs_chains*, %struct.mlx5_fs_chains** %chains, align 8, !dbg !14729
  %254 = load %struct.mlx5_flow_attr*, %struct.mlx5_flow_attr** %attr.addr, align 8, !dbg !14730
  %dest_chain411 = getelementptr inbounds %struct.mlx5_flow_attr, %struct.mlx5_flow_attr* %254, i32 0, i32 7, !dbg !14731
  %255 = load i32, i32* %dest_chain411, align 8, !dbg !14731
  call void @mlx5_chains_put_table(%struct.mlx5_fs_chains* %253, i32 %255, i32 1, i32 0) #8, !dbg !14732
  br label %if.end412, !dbg !14732

if.end412:                                        ; preds = %if.then410, %land.lhs.true, %err_esw_get
  br label %err_create_goto_table, !dbg !14727

err_create_goto_table:                            ; preds = %if.end412, %if.then111
  call void @llvm.dbg.label(metadata !14733), !dbg !14734
  %256 = load %struct.mlx5_flow_handle*, %struct.mlx5_flow_handle** %rule, align 8, !dbg !14735
  store %struct.mlx5_flow_handle* %256, %struct.mlx5_flow_handle** %retval, align 8, !dbg !14736
  br label %return, !dbg !14736

return:                                           ; preds = %err_create_goto_table, %if.end389, %if.then
  %257 = load %struct.mlx5_flow_handle*, %struct.mlx5_flow_handle** %retval, align 8, !dbg !14737
  ret %struct.mlx5_flow_handle* %257, !dbg !14737
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @ERR_PTR(i64 %error) #0 !dbg !14738 {
entry:
  %error.addr = alloca i64, align 8
  store i64 %error, i64* %error.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %error.addr, metadata !14741, metadata !DIExpression()), !dbg !14742
  %0 = load i64, i64* %error.addr, align 8, !dbg !14743
  %1 = inttoptr i64 %0 to i8*, !dbg !14744
  ret i8* %1, !dbg !14745
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @mlx5_eswitch_vlan_actions_supported(%struct.mlx5_core_dev* %dev, i8 zeroext %vlan_depth) #0 !dbg !14746 {
entry:
  %retval = alloca i1, align 1
  %dev.addr = alloca %struct.mlx5_core_dev*, align 8
  %vlan_depth.addr = alloca i8, align 1
  %ret = alloca i8, align 1
  store %struct.mlx5_core_dev* %dev, %struct.mlx5_core_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_core_dev** %dev.addr, metadata !14749, metadata !DIExpression()), !dbg !14750
  store i8 %vlan_depth, i8* %vlan_depth.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %vlan_depth.addr, metadata !14751, metadata !DIExpression()), !dbg !14752
  call void @llvm.dbg.declare(metadata i8* %ret, metadata !14753, metadata !DIExpression()), !dbg !14754
  %0 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !14755
  %caps = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %0, i32 0, i32 9, !dbg !14755
  %hca_cur = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps, i32 0, i32 0, !dbg !14755
  %arrayidx = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur, i64 0, i64 8, !dbg !14755
  %arraydecay = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx, i64 0, i64 0, !dbg !14755
  %add.ptr = getelementptr i32, i32* %arraydecay, i64 16, !dbg !14755
  %1 = load i32, i32* %add.ptr, align 4, !dbg !14755
  %2 = call i1 @llvm.is.constant.i32(i32 %1), !dbg !14755
  br i1 %2, label %cond.true, label %cond.false, !dbg !14755

cond.true:                                        ; preds = %entry
  %3 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !14755
  %caps1 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %3, i32 0, i32 9, !dbg !14755
  %hca_cur2 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps1, i32 0, i32 0, !dbg !14755
  %arrayidx3 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur2, i64 0, i64 8, !dbg !14755
  %arraydecay4 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx3, i64 0, i64 0, !dbg !14755
  %add.ptr5 = getelementptr i32, i32* %arraydecay4, i64 16, !dbg !14755
  %4 = load i32, i32* %add.ptr5, align 4, !dbg !14755
  %and = and i32 %4, 255, !dbg !14755
  %shl = shl i32 %and, 24, !dbg !14755
  %5 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !14755
  %caps6 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %5, i32 0, i32 9, !dbg !14755
  %hca_cur7 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps6, i32 0, i32 0, !dbg !14755
  %arrayidx8 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur7, i64 0, i64 8, !dbg !14755
  %arraydecay9 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx8, i64 0, i64 0, !dbg !14755
  %add.ptr10 = getelementptr i32, i32* %arraydecay9, i64 16, !dbg !14755
  %6 = load i32, i32* %add.ptr10, align 4, !dbg !14755
  %and11 = and i32 %6, 65280, !dbg !14755
  %shl12 = shl i32 %and11, 8, !dbg !14755
  %or = or i32 %shl, %shl12, !dbg !14755
  %7 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !14755
  %caps13 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %7, i32 0, i32 9, !dbg !14755
  %hca_cur14 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps13, i32 0, i32 0, !dbg !14755
  %arrayidx15 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur14, i64 0, i64 8, !dbg !14755
  %arraydecay16 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx15, i64 0, i64 0, !dbg !14755
  %add.ptr17 = getelementptr i32, i32* %arraydecay16, i64 16, !dbg !14755
  %8 = load i32, i32* %add.ptr17, align 4, !dbg !14755
  %and18 = and i32 %8, 16711680, !dbg !14755
  %shr = lshr i32 %and18, 8, !dbg !14755
  %or19 = or i32 %or, %shr, !dbg !14755
  %9 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !14755
  %caps20 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %9, i32 0, i32 9, !dbg !14755
  %hca_cur21 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps20, i32 0, i32 0, !dbg !14755
  %arrayidx22 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur21, i64 0, i64 8, !dbg !14755
  %arraydecay23 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx22, i64 0, i64 0, !dbg !14755
  %add.ptr24 = getelementptr i32, i32* %arraydecay23, i64 16, !dbg !14755
  %10 = load i32, i32* %add.ptr24, align 4, !dbg !14755
  %and25 = and i32 %10, -16777216, !dbg !14755
  %shr26 = lshr i32 %and25, 24, !dbg !14755
  %or27 = or i32 %or19, %shr26, !dbg !14755
  br label %cond.end, !dbg !14755

cond.false:                                       ; preds = %entry
  %11 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !14755
  %caps28 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %11, i32 0, i32 9, !dbg !14755
  %hca_cur29 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps28, i32 0, i32 0, !dbg !14755
  %arrayidx30 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur29, i64 0, i64 8, !dbg !14755
  %arraydecay31 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx30, i64 0, i64 0, !dbg !14755
  %add.ptr32 = getelementptr i32, i32* %arraydecay31, i64 16, !dbg !14755
  %12 = load i32, i32* %add.ptr32, align 4, !dbg !14755
  %call = call i32 @__fswab32(i32 %12) #10, !dbg !14755
  br label %cond.end, !dbg !14755

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %or27, %cond.true ], [ %call, %cond.false ], !dbg !14755
  %shr33 = lshr i32 %cond, 21, !dbg !14755
  %and34 = and i32 %shr33, 1, !dbg !14755
  %tobool = icmp ne i32 %and34, 0, !dbg !14755
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !14756

land.rhs:                                         ; preds = %cond.end
  %13 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !14757
  %caps35 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %13, i32 0, i32 9, !dbg !14757
  %hca_cur36 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps35, i32 0, i32 0, !dbg !14757
  %arrayidx37 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur36, i64 0, i64 8, !dbg !14757
  %arraydecay38 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx37, i64 0, i64 0, !dbg !14757
  %add.ptr39 = getelementptr i32, i32* %arraydecay38, i64 16, !dbg !14757
  %14 = load i32, i32* %add.ptr39, align 4, !dbg !14757
  %15 = call i1 @llvm.is.constant.i32(i32 %14), !dbg !14757
  br i1 %15, label %cond.true40, label %cond.false72, !dbg !14757

cond.true40:                                      ; preds = %land.rhs
  %16 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !14757
  %caps41 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %16, i32 0, i32 9, !dbg !14757
  %hca_cur42 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps41, i32 0, i32 0, !dbg !14757
  %arrayidx43 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur42, i64 0, i64 8, !dbg !14757
  %arraydecay44 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx43, i64 0, i64 0, !dbg !14757
  %add.ptr45 = getelementptr i32, i32* %arraydecay44, i64 16, !dbg !14757
  %17 = load i32, i32* %add.ptr45, align 4, !dbg !14757
  %and46 = and i32 %17, 255, !dbg !14757
  %shl47 = shl i32 %and46, 24, !dbg !14757
  %18 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !14757
  %caps48 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %18, i32 0, i32 9, !dbg !14757
  %hca_cur49 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps48, i32 0, i32 0, !dbg !14757
  %arrayidx50 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur49, i64 0, i64 8, !dbg !14757
  %arraydecay51 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx50, i64 0, i64 0, !dbg !14757
  %add.ptr52 = getelementptr i32, i32* %arraydecay51, i64 16, !dbg !14757
  %19 = load i32, i32* %add.ptr52, align 4, !dbg !14757
  %and53 = and i32 %19, 65280, !dbg !14757
  %shl54 = shl i32 %and53, 8, !dbg !14757
  %or55 = or i32 %shl47, %shl54, !dbg !14757
  %20 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !14757
  %caps56 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %20, i32 0, i32 9, !dbg !14757
  %hca_cur57 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps56, i32 0, i32 0, !dbg !14757
  %arrayidx58 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur57, i64 0, i64 8, !dbg !14757
  %arraydecay59 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx58, i64 0, i64 0, !dbg !14757
  %add.ptr60 = getelementptr i32, i32* %arraydecay59, i64 16, !dbg !14757
  %21 = load i32, i32* %add.ptr60, align 4, !dbg !14757
  %and61 = and i32 %21, 16711680, !dbg !14757
  %shr62 = lshr i32 %and61, 8, !dbg !14757
  %or63 = or i32 %or55, %shr62, !dbg !14757
  %22 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !14757
  %caps64 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %22, i32 0, i32 9, !dbg !14757
  %hca_cur65 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps64, i32 0, i32 0, !dbg !14757
  %arrayidx66 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur65, i64 0, i64 8, !dbg !14757
  %arraydecay67 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx66, i64 0, i64 0, !dbg !14757
  %add.ptr68 = getelementptr i32, i32* %arraydecay67, i64 16, !dbg !14757
  %23 = load i32, i32* %add.ptr68, align 4, !dbg !14757
  %and69 = and i32 %23, -16777216, !dbg !14757
  %shr70 = lshr i32 %and69, 24, !dbg !14757
  %or71 = or i32 %or63, %shr70, !dbg !14757
  br label %cond.end79, !dbg !14757

cond.false72:                                     ; preds = %land.rhs
  %24 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !14757
  %caps73 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %24, i32 0, i32 9, !dbg !14757
  %hca_cur74 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps73, i32 0, i32 0, !dbg !14757
  %arrayidx75 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur74, i64 0, i64 8, !dbg !14757
  %arraydecay76 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx75, i64 0, i64 0, !dbg !14757
  %add.ptr77 = getelementptr i32, i32* %arraydecay76, i64 16, !dbg !14757
  %25 = load i32, i32* %add.ptr77, align 4, !dbg !14757
  %call78 = call i32 @__fswab32(i32 %25) #10, !dbg !14757
  br label %cond.end79, !dbg !14757

cond.end79:                                       ; preds = %cond.false72, %cond.true40
  %cond80 = phi i32 [ %or71, %cond.true40 ], [ %call78, %cond.false72 ], !dbg !14757
  %shr81 = lshr i32 %cond80, 20, !dbg !14757
  %and82 = and i32 %shr81, 1, !dbg !14757
  %tobool83 = icmp ne i32 %and82, 0, !dbg !14756
  br label %land.end

land.end:                                         ; preds = %cond.end79, %cond.end
  %26 = phi i1 [ false, %cond.end ], [ %tobool83, %cond.end79 ], !dbg !14758
  %frombool = zext i1 %26 to i8, !dbg !14754
  store i8 %frombool, i8* %ret, align 1, !dbg !14754
  %27 = load i8, i8* %vlan_depth.addr, align 1, !dbg !14759
  %conv = zext i8 %27 to i32, !dbg !14759
  %cmp = icmp eq i32 %conv, 1, !dbg !14761
  br i1 %cmp, label %if.then, label %if.end, !dbg !14762

if.then:                                          ; preds = %land.end
  %28 = load i8, i8* %ret, align 1, !dbg !14763
  %tobool85 = trunc i8 %28 to i1, !dbg !14763
  store i1 %tobool85, i1* %retval, align 1, !dbg !14764
  br label %return, !dbg !14764

if.end:                                           ; preds = %land.end
  %29 = load i8, i8* %ret, align 1, !dbg !14765
  %tobool86 = trunc i8 %29 to i1, !dbg !14765
  br i1 %tobool86, label %land.lhs.true, label %land.end187, !dbg !14766

land.lhs.true:                                    ; preds = %if.end
  %30 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !14767
  %caps88 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %30, i32 0, i32 9, !dbg !14767
  %hca_cur89 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps88, i32 0, i32 0, !dbg !14767
  %arrayidx90 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur89, i64 0, i64 8, !dbg !14767
  %arraydecay91 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx90, i64 0, i64 0, !dbg !14767
  %add.ptr92 = getelementptr i32, i32* %arraydecay91, i64 16, !dbg !14767
  %31 = load i32, i32* %add.ptr92, align 4, !dbg !14767
  %32 = call i1 @llvm.is.constant.i32(i32 %31), !dbg !14767
  br i1 %32, label %cond.true93, label %cond.false125, !dbg !14767

cond.true93:                                      ; preds = %land.lhs.true
  %33 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !14767
  %caps94 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %33, i32 0, i32 9, !dbg !14767
  %hca_cur95 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps94, i32 0, i32 0, !dbg !14767
  %arrayidx96 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur95, i64 0, i64 8, !dbg !14767
  %arraydecay97 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx96, i64 0, i64 0, !dbg !14767
  %add.ptr98 = getelementptr i32, i32* %arraydecay97, i64 16, !dbg !14767
  %34 = load i32, i32* %add.ptr98, align 4, !dbg !14767
  %and99 = and i32 %34, 255, !dbg !14767
  %shl100 = shl i32 %and99, 24, !dbg !14767
  %35 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !14767
  %caps101 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %35, i32 0, i32 9, !dbg !14767
  %hca_cur102 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps101, i32 0, i32 0, !dbg !14767
  %arrayidx103 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur102, i64 0, i64 8, !dbg !14767
  %arraydecay104 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx103, i64 0, i64 0, !dbg !14767
  %add.ptr105 = getelementptr i32, i32* %arraydecay104, i64 16, !dbg !14767
  %36 = load i32, i32* %add.ptr105, align 4, !dbg !14767
  %and106 = and i32 %36, 65280, !dbg !14767
  %shl107 = shl i32 %and106, 8, !dbg !14767
  %or108 = or i32 %shl100, %shl107, !dbg !14767
  %37 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !14767
  %caps109 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %37, i32 0, i32 9, !dbg !14767
  %hca_cur110 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps109, i32 0, i32 0, !dbg !14767
  %arrayidx111 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur110, i64 0, i64 8, !dbg !14767
  %arraydecay112 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx111, i64 0, i64 0, !dbg !14767
  %add.ptr113 = getelementptr i32, i32* %arraydecay112, i64 16, !dbg !14767
  %38 = load i32, i32* %add.ptr113, align 4, !dbg !14767
  %and114 = and i32 %38, 16711680, !dbg !14767
  %shr115 = lshr i32 %and114, 8, !dbg !14767
  %or116 = or i32 %or108, %shr115, !dbg !14767
  %39 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !14767
  %caps117 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %39, i32 0, i32 9, !dbg !14767
  %hca_cur118 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps117, i32 0, i32 0, !dbg !14767
  %arrayidx119 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur118, i64 0, i64 8, !dbg !14767
  %arraydecay120 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx119, i64 0, i64 0, !dbg !14767
  %add.ptr121 = getelementptr i32, i32* %arraydecay120, i64 16, !dbg !14767
  %40 = load i32, i32* %add.ptr121, align 4, !dbg !14767
  %and122 = and i32 %40, -16777216, !dbg !14767
  %shr123 = lshr i32 %and122, 24, !dbg !14767
  %or124 = or i32 %or116, %shr123, !dbg !14767
  br label %cond.end132, !dbg !14767

cond.false125:                                    ; preds = %land.lhs.true
  %41 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !14767
  %caps126 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %41, i32 0, i32 9, !dbg !14767
  %hca_cur127 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps126, i32 0, i32 0, !dbg !14767
  %arrayidx128 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur127, i64 0, i64 8, !dbg !14767
  %arraydecay129 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx128, i64 0, i64 0, !dbg !14767
  %add.ptr130 = getelementptr i32, i32* %arraydecay129, i64 16, !dbg !14767
  %42 = load i32, i32* %add.ptr130, align 4, !dbg !14767
  %call131 = call i32 @__fswab32(i32 %42) #10, !dbg !14767
  br label %cond.end132, !dbg !14767

cond.end132:                                      ; preds = %cond.false125, %cond.true93
  %cond133 = phi i32 [ %or124, %cond.true93 ], [ %call131, %cond.false125 ], !dbg !14767
  %shr134 = lshr i32 %cond133, 18, !dbg !14767
  %and135 = and i32 %shr134, 1, !dbg !14767
  %tobool136 = icmp ne i32 %and135, 0, !dbg !14767
  br i1 %tobool136, label %land.rhs137, label %land.end187, !dbg !14768

land.rhs137:                                      ; preds = %cond.end132
  %43 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !14769
  %caps138 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %43, i32 0, i32 9, !dbg !14769
  %hca_cur139 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps138, i32 0, i32 0, !dbg !14769
  %arrayidx140 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur139, i64 0, i64 8, !dbg !14769
  %arraydecay141 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx140, i64 0, i64 0, !dbg !14769
  %add.ptr142 = getelementptr i32, i32* %arraydecay141, i64 16, !dbg !14769
  %44 = load i32, i32* %add.ptr142, align 4, !dbg !14769
  %45 = call i1 @llvm.is.constant.i32(i32 %44), !dbg !14769
  br i1 %45, label %cond.true143, label %cond.false175, !dbg !14769

cond.true143:                                     ; preds = %land.rhs137
  %46 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !14769
  %caps144 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %46, i32 0, i32 9, !dbg !14769
  %hca_cur145 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps144, i32 0, i32 0, !dbg !14769
  %arrayidx146 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur145, i64 0, i64 8, !dbg !14769
  %arraydecay147 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx146, i64 0, i64 0, !dbg !14769
  %add.ptr148 = getelementptr i32, i32* %arraydecay147, i64 16, !dbg !14769
  %47 = load i32, i32* %add.ptr148, align 4, !dbg !14769
  %and149 = and i32 %47, 255, !dbg !14769
  %shl150 = shl i32 %and149, 24, !dbg !14769
  %48 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !14769
  %caps151 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %48, i32 0, i32 9, !dbg !14769
  %hca_cur152 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps151, i32 0, i32 0, !dbg !14769
  %arrayidx153 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur152, i64 0, i64 8, !dbg !14769
  %arraydecay154 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx153, i64 0, i64 0, !dbg !14769
  %add.ptr155 = getelementptr i32, i32* %arraydecay154, i64 16, !dbg !14769
  %49 = load i32, i32* %add.ptr155, align 4, !dbg !14769
  %and156 = and i32 %49, 65280, !dbg !14769
  %shl157 = shl i32 %and156, 8, !dbg !14769
  %or158 = or i32 %shl150, %shl157, !dbg !14769
  %50 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !14769
  %caps159 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %50, i32 0, i32 9, !dbg !14769
  %hca_cur160 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps159, i32 0, i32 0, !dbg !14769
  %arrayidx161 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur160, i64 0, i64 8, !dbg !14769
  %arraydecay162 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx161, i64 0, i64 0, !dbg !14769
  %add.ptr163 = getelementptr i32, i32* %arraydecay162, i64 16, !dbg !14769
  %51 = load i32, i32* %add.ptr163, align 4, !dbg !14769
  %and164 = and i32 %51, 16711680, !dbg !14769
  %shr165 = lshr i32 %and164, 8, !dbg !14769
  %or166 = or i32 %or158, %shr165, !dbg !14769
  %52 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !14769
  %caps167 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %52, i32 0, i32 9, !dbg !14769
  %hca_cur168 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps167, i32 0, i32 0, !dbg !14769
  %arrayidx169 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur168, i64 0, i64 8, !dbg !14769
  %arraydecay170 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx169, i64 0, i64 0, !dbg !14769
  %add.ptr171 = getelementptr i32, i32* %arraydecay170, i64 16, !dbg !14769
  %53 = load i32, i32* %add.ptr171, align 4, !dbg !14769
  %and172 = and i32 %53, -16777216, !dbg !14769
  %shr173 = lshr i32 %and172, 24, !dbg !14769
  %or174 = or i32 %or166, %shr173, !dbg !14769
  br label %cond.end182, !dbg !14769

cond.false175:                                    ; preds = %land.rhs137
  %54 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !14769
  %caps176 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %54, i32 0, i32 9, !dbg !14769
  %hca_cur177 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps176, i32 0, i32 0, !dbg !14769
  %arrayidx178 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur177, i64 0, i64 8, !dbg !14769
  %arraydecay179 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx178, i64 0, i64 0, !dbg !14769
  %add.ptr180 = getelementptr i32, i32* %arraydecay179, i64 16, !dbg !14769
  %55 = load i32, i32* %add.ptr180, align 4, !dbg !14769
  %call181 = call i32 @__fswab32(i32 %55) #10, !dbg !14769
  br label %cond.end182, !dbg !14769

cond.end182:                                      ; preds = %cond.false175, %cond.true143
  %cond183 = phi i32 [ %or174, %cond.true143 ], [ %call181, %cond.false175 ], !dbg !14769
  %shr184 = lshr i32 %cond183, 17, !dbg !14769
  %and185 = and i32 %shr184, 1, !dbg !14769
  %tobool186 = icmp ne i32 %and185, 0, !dbg !14768
  br label %land.end187

land.end187:                                      ; preds = %cond.end182, %cond.end132, %if.end
  %56 = phi i1 [ false, %cond.end132 ], [ false, %if.end ], [ %tobool186, %cond.end182 ], !dbg !14758
  store i1 %56, i1* %retval, align 1, !dbg !14770
  br label %return, !dbg !14770

return:                                           ; preds = %land.end187, %if.then
  %57 = load i1, i1* %retval, align 1, !dbg !14771
  ret i1 %57, !dbg !14771
}

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i16(i16) #3

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal zeroext i16 @__fswab16(i16 zeroext %val) #4 !dbg !14772 {
entry:
  %val.addr = alloca i16, align 2
  store i16 %val, i16* %val.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %val.addr, metadata !14776, metadata !DIExpression()), !dbg !14777
  %0 = load i16, i16* %val.addr, align 2, !dbg !14778
  %conv = zext i16 %0 to i32, !dbg !14778
  %and = and i32 %conv, 255, !dbg !14778
  %shl = shl i32 %and, 8, !dbg !14778
  %1 = load i16, i16* %val.addr, align 2, !dbg !14778
  %conv1 = zext i16 %1 to i32, !dbg !14778
  %and2 = and i32 %conv1, 65280, !dbg !14778
  %shr = ashr i32 %and2, 8, !dbg !14778
  %or = or i32 %shl, %shr, !dbg !14778
  %conv3 = trunc i32 %or to i16, !dbg !14778
  ret i16 %conv3, !dbg !14779
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.mlx5_flow_table* @mlx5_chains_get_tc_end_ft(%struct.mlx5_fs_chains* %chains) #0 !dbg !14780 {
entry:
  %chains.addr = alloca %struct.mlx5_fs_chains*, align 8
  store %struct.mlx5_fs_chains* %chains, %struct.mlx5_fs_chains** %chains.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_fs_chains** %chains.addr, metadata !14783, metadata !DIExpression()), !dbg !14784
  %call = call i8* @ERR_PTR(i64 -95) #8, !dbg !14785
  %0 = bitcast i8* %call to %struct.mlx5_flow_table*, !dbg !14785
  ret %struct.mlx5_flow_table* %0, !dbg !14786
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.mlx5_flow_table* @mlx5_chains_get_table(%struct.mlx5_fs_chains* %chains, i32 %chain, i32 %prio, i32 %level) #0 !dbg !14787 {
entry:
  %chains.addr = alloca %struct.mlx5_fs_chains*, align 8
  %chain.addr = alloca i32, align 4
  %prio.addr = alloca i32, align 4
  %level.addr = alloca i32, align 4
  store %struct.mlx5_fs_chains* %chains, %struct.mlx5_fs_chains** %chains.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_fs_chains** %chains.addr, metadata !14790, metadata !DIExpression()), !dbg !14791
  store i32 %chain, i32* %chain.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %chain.addr, metadata !14792, metadata !DIExpression()), !dbg !14793
  store i32 %prio, i32* %prio.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %prio.addr, metadata !14794, metadata !DIExpression()), !dbg !14795
  store i32 %level, i32* %level.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %level.addr, metadata !14796, metadata !DIExpression()), !dbg !14797
  %call = call i8* @ERR_PTR(i64 -95) #8, !dbg !14798
  %0 = bitcast i8* %call to %struct.mlx5_flow_table*, !dbg !14798
  ret %struct.mlx5_flow_table* %0, !dbg !14799
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @ERR_CAST(i8* %ptr) #0 !dbg !14800 {
entry:
  %ptr.addr = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !14803, metadata !DIExpression()), !dbg !14804
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !14805
  ret i8* %0, !dbg !14806
}

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i32(i32) #3

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @__fswab32(i32 %val) #4 !dbg !14807 {
entry:
  %val.addr = alloca i32, align 4
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !14810, metadata !DIExpression()), !dbg !14811
  %0 = load i32, i32* %val.addr, align 4, !dbg !14812
  %call = call i32 @__arch_swab32(i32 %0) #10, !dbg !14813
  ret i32 %call, !dbg !14814
}

; Function Attrs: noredzone
declare dso_local i32 @mlx5_fc_id(%struct.mlx5_fc*) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlx5_eswitch_set_rule_source_port(%struct.mlx5_eswitch* %esw, %struct.mlx5_flow_spec* %spec, %struct.mlx5_esw_flow_attr* %attr) #0 !dbg !14815 {
entry:
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  %spec.addr = alloca %struct.mlx5_flow_spec*, align 8
  %attr.addr = alloca %struct.mlx5_esw_flow_attr*, align 8
  %misc2 = alloca i8*, align 8
  %misc = alloca i8*, align 8
  %_v = alloca i32, align 4
  %_v166 = alloca i32, align 4
  %_v344 = alloca i32, align 4
  %_v576 = alloca i32, align 4
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !14818, metadata !DIExpression()), !dbg !14819
  store %struct.mlx5_flow_spec* %spec, %struct.mlx5_flow_spec** %spec.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_flow_spec** %spec.addr, metadata !14820, metadata !DIExpression()), !dbg !14821
  store %struct.mlx5_esw_flow_attr* %attr, %struct.mlx5_esw_flow_attr** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_esw_flow_attr** %attr.addr, metadata !14822, metadata !DIExpression()), !dbg !14823
  call void @llvm.dbg.declare(metadata i8** %misc2, metadata !14824, metadata !DIExpression()), !dbg !14825
  call void @llvm.dbg.declare(metadata i8** %misc, metadata !14826, metadata !DIExpression()), !dbg !14827
  %0 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !14828
  %call = call zeroext i1 @mlx5_eswitch_vport_match_metadata_enabled(%struct.mlx5_eswitch* %0) #8, !dbg !14830
  br i1 %call, label %if.then, label %if.else, !dbg !14831

if.then:                                          ; preds = %entry
  %1 = load %struct.mlx5_flow_spec*, %struct.mlx5_flow_spec** %spec.addr, align 8, !dbg !14832
  %match_value = getelementptr inbounds %struct.mlx5_flow_spec, %struct.mlx5_flow_spec* %1, i32 0, i32 2, !dbg !14832
  %arraydecay = getelementptr inbounds [128 x i32], [128 x i32]* %match_value, i64 0, i64 0, !dbg !14832
  %2 = bitcast i32* %arraydecay to i8*, !dbg !14832
  %add.ptr = getelementptr i8, i8* %2, i64 192, !dbg !14832
  store i8* %add.ptr, i8** %misc2, align 8, !dbg !14834
  br label %do.body, !dbg !14835

do.body:                                          ; preds = %if.then
  call void @llvm.dbg.declare(metadata i32* %_v, metadata !14836, metadata !DIExpression()), !dbg !14838
  %3 = load %struct.mlx5_esw_flow_attr*, %struct.mlx5_esw_flow_attr** %attr.addr, align 8, !dbg !14838
  %in_mdev = getelementptr inbounds %struct.mlx5_esw_flow_attr, %struct.mlx5_esw_flow_attr* %3, i32 0, i32 1, !dbg !14838
  %4 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %in_mdev, align 8, !dbg !14838
  %priv = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %4, i32 0, i32 17, !dbg !14838
  %eswitch = getelementptr inbounds %struct.mlx5_priv, %struct.mlx5_priv* %priv, i32 0, i32 26, !dbg !14838
  %5 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %eswitch, align 8, !dbg !14838
  %6 = load %struct.mlx5_esw_flow_attr*, %struct.mlx5_esw_flow_attr** %attr.addr, align 8, !dbg !14838
  %in_rep = getelementptr inbounds %struct.mlx5_esw_flow_attr, %struct.mlx5_esw_flow_attr* %6, i32 0, i32 0, !dbg !14838
  %7 = load %struct.mlx5_eswitch_rep*, %struct.mlx5_eswitch_rep** %in_rep, align 8, !dbg !14838
  %vport = getelementptr inbounds %struct.mlx5_eswitch_rep, %struct.mlx5_eswitch_rep* %7, i32 0, i32 1, !dbg !14838
  %8 = load i16, i16* %vport, align 8, !dbg !14838
  %call1 = call i32 @mlx5_eswitch_get_vport_metadata_for_match(%struct.mlx5_eswitch* %5, i16 zeroext %8) #8, !dbg !14838
  store i32 %call1, i32* %_v, align 4, !dbg !14838
  br label %do.body2, !dbg !14838

do.body2:                                         ; preds = %do.body
  br label %do.end, !dbg !14839

do.end:                                           ; preds = %do.body2
  %9 = load i8*, i8** %misc2, align 8, !dbg !14838
  %10 = bitcast i8* %9 to i32*, !dbg !14838
  %add.ptr3 = getelementptr i32, i32* %10, i64 11, !dbg !14838
  %11 = load i32, i32* %add.ptr3, align 4, !dbg !14838
  %12 = call i1 @llvm.is.constant.i32(i32 %11), !dbg !14838
  br i1 %12, label %cond.true, label %cond.false, !dbg !14838

cond.true:                                        ; preds = %do.end
  %13 = load i8*, i8** %misc2, align 8, !dbg !14838
  %14 = bitcast i8* %13 to i32*, !dbg !14838
  %add.ptr4 = getelementptr i32, i32* %14, i64 11, !dbg !14838
  %15 = load i32, i32* %add.ptr4, align 4, !dbg !14838
  %and = and i32 %15, 255, !dbg !14838
  %shl = shl i32 %and, 24, !dbg !14838
  %16 = load i8*, i8** %misc2, align 8, !dbg !14838
  %17 = bitcast i8* %16 to i32*, !dbg !14838
  %add.ptr5 = getelementptr i32, i32* %17, i64 11, !dbg !14838
  %18 = load i32, i32* %add.ptr5, align 4, !dbg !14838
  %and6 = and i32 %18, 65280, !dbg !14838
  %shl7 = shl i32 %and6, 8, !dbg !14838
  %or = or i32 %shl, %shl7, !dbg !14838
  %19 = load i8*, i8** %misc2, align 8, !dbg !14838
  %20 = bitcast i8* %19 to i32*, !dbg !14838
  %add.ptr8 = getelementptr i32, i32* %20, i64 11, !dbg !14838
  %21 = load i32, i32* %add.ptr8, align 4, !dbg !14838
  %and9 = and i32 %21, 16711680, !dbg !14838
  %shr = lshr i32 %and9, 8, !dbg !14838
  %or10 = or i32 %or, %shr, !dbg !14838
  %22 = load i8*, i8** %misc2, align 8, !dbg !14838
  %23 = bitcast i8* %22 to i32*, !dbg !14838
  %add.ptr11 = getelementptr i32, i32* %23, i64 11, !dbg !14838
  %24 = load i32, i32* %add.ptr11, align 4, !dbg !14838
  %and12 = and i32 %24, -16777216, !dbg !14838
  %shr13 = lshr i32 %and12, 24, !dbg !14838
  %or14 = or i32 %or10, %shr13, !dbg !14838
  br label %cond.end, !dbg !14838

cond.false:                                       ; preds = %do.end
  %25 = load i8*, i8** %misc2, align 8, !dbg !14838
  %26 = bitcast i8* %25 to i32*, !dbg !14838
  %add.ptr15 = getelementptr i32, i32* %26, i64 11, !dbg !14838
  %27 = load i32, i32* %add.ptr15, align 4, !dbg !14838
  %call16 = call i32 @__fswab32(i32 %27) #10, !dbg !14838
  br label %cond.end, !dbg !14838

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %or14, %cond.true ], [ %call16, %cond.false ], !dbg !14838
  %and17 = and i32 %cond, 0, !dbg !14838
  %28 = load i32, i32* %_v, align 4, !dbg !14838
  %shl18 = shl i32 %28, 0, !dbg !14838
  %or19 = or i32 %and17, %shl18, !dbg !14838
  %29 = call i1 @llvm.is.constant.i32(i32 %or19), !dbg !14838
  br i1 %29, label %cond.true20, label %cond.false132, !dbg !14838

cond.true20:                                      ; preds = %cond.end
  %30 = load i8*, i8** %misc2, align 8, !dbg !14838
  %31 = bitcast i8* %30 to i32*, !dbg !14838
  %add.ptr21 = getelementptr i32, i32* %31, i64 11, !dbg !14838
  %32 = load i32, i32* %add.ptr21, align 4, !dbg !14838
  %33 = call i1 @llvm.is.constant.i32(i32 %32), !dbg !14838
  br i1 %33, label %cond.true22, label %cond.false38, !dbg !14838

cond.true22:                                      ; preds = %cond.true20
  %34 = load i8*, i8** %misc2, align 8, !dbg !14838
  %35 = bitcast i8* %34 to i32*, !dbg !14838
  %add.ptr23 = getelementptr i32, i32* %35, i64 11, !dbg !14838
  %36 = load i32, i32* %add.ptr23, align 4, !dbg !14838
  %and24 = and i32 %36, 255, !dbg !14838
  %shl25 = shl i32 %and24, 24, !dbg !14838
  %37 = load i8*, i8** %misc2, align 8, !dbg !14838
  %38 = bitcast i8* %37 to i32*, !dbg !14838
  %add.ptr26 = getelementptr i32, i32* %38, i64 11, !dbg !14838
  %39 = load i32, i32* %add.ptr26, align 4, !dbg !14838
  %and27 = and i32 %39, 65280, !dbg !14838
  %shl28 = shl i32 %and27, 8, !dbg !14838
  %or29 = or i32 %shl25, %shl28, !dbg !14838
  %40 = load i8*, i8** %misc2, align 8, !dbg !14838
  %41 = bitcast i8* %40 to i32*, !dbg !14838
  %add.ptr30 = getelementptr i32, i32* %41, i64 11, !dbg !14838
  %42 = load i32, i32* %add.ptr30, align 4, !dbg !14838
  %and31 = and i32 %42, 16711680, !dbg !14838
  %shr32 = lshr i32 %and31, 8, !dbg !14838
  %or33 = or i32 %or29, %shr32, !dbg !14838
  %43 = load i8*, i8** %misc2, align 8, !dbg !14838
  %44 = bitcast i8* %43 to i32*, !dbg !14838
  %add.ptr34 = getelementptr i32, i32* %44, i64 11, !dbg !14838
  %45 = load i32, i32* %add.ptr34, align 4, !dbg !14838
  %and35 = and i32 %45, -16777216, !dbg !14838
  %shr36 = lshr i32 %and35, 24, !dbg !14838
  %or37 = or i32 %or33, %shr36, !dbg !14838
  br label %cond.end41, !dbg !14838

cond.false38:                                     ; preds = %cond.true20
  %46 = load i8*, i8** %misc2, align 8, !dbg !14838
  %47 = bitcast i8* %46 to i32*, !dbg !14838
  %add.ptr39 = getelementptr i32, i32* %47, i64 11, !dbg !14838
  %48 = load i32, i32* %add.ptr39, align 4, !dbg !14838
  %call40 = call i32 @__fswab32(i32 %48) #10, !dbg !14838
  br label %cond.end41, !dbg !14838

cond.end41:                                       ; preds = %cond.false38, %cond.true22
  %cond42 = phi i32 [ %or37, %cond.true22 ], [ %call40, %cond.false38 ], !dbg !14838
  %and43 = and i32 %cond42, 0, !dbg !14838
  %49 = load i32, i32* %_v, align 4, !dbg !14838
  %shl44 = shl i32 %49, 0, !dbg !14838
  %or45 = or i32 %and43, %shl44, !dbg !14838
  %and46 = and i32 %or45, 255, !dbg !14838
  %shl47 = shl i32 %and46, 24, !dbg !14838
  %50 = load i8*, i8** %misc2, align 8, !dbg !14838
  %51 = bitcast i8* %50 to i32*, !dbg !14838
  %add.ptr48 = getelementptr i32, i32* %51, i64 11, !dbg !14838
  %52 = load i32, i32* %add.ptr48, align 4, !dbg !14838
  %53 = call i1 @llvm.is.constant.i32(i32 %52), !dbg !14838
  br i1 %53, label %cond.true49, label %cond.false65, !dbg !14838

cond.true49:                                      ; preds = %cond.end41
  %54 = load i8*, i8** %misc2, align 8, !dbg !14838
  %55 = bitcast i8* %54 to i32*, !dbg !14838
  %add.ptr50 = getelementptr i32, i32* %55, i64 11, !dbg !14838
  %56 = load i32, i32* %add.ptr50, align 4, !dbg !14838
  %and51 = and i32 %56, 255, !dbg !14838
  %shl52 = shl i32 %and51, 24, !dbg !14838
  %57 = load i8*, i8** %misc2, align 8, !dbg !14838
  %58 = bitcast i8* %57 to i32*, !dbg !14838
  %add.ptr53 = getelementptr i32, i32* %58, i64 11, !dbg !14838
  %59 = load i32, i32* %add.ptr53, align 4, !dbg !14838
  %and54 = and i32 %59, 65280, !dbg !14838
  %shl55 = shl i32 %and54, 8, !dbg !14838
  %or56 = or i32 %shl52, %shl55, !dbg !14838
  %60 = load i8*, i8** %misc2, align 8, !dbg !14838
  %61 = bitcast i8* %60 to i32*, !dbg !14838
  %add.ptr57 = getelementptr i32, i32* %61, i64 11, !dbg !14838
  %62 = load i32, i32* %add.ptr57, align 4, !dbg !14838
  %and58 = and i32 %62, 16711680, !dbg !14838
  %shr59 = lshr i32 %and58, 8, !dbg !14838
  %or60 = or i32 %or56, %shr59, !dbg !14838
  %63 = load i8*, i8** %misc2, align 8, !dbg !14838
  %64 = bitcast i8* %63 to i32*, !dbg !14838
  %add.ptr61 = getelementptr i32, i32* %64, i64 11, !dbg !14838
  %65 = load i32, i32* %add.ptr61, align 4, !dbg !14838
  %and62 = and i32 %65, -16777216, !dbg !14838
  %shr63 = lshr i32 %and62, 24, !dbg !14838
  %or64 = or i32 %or60, %shr63, !dbg !14838
  br label %cond.end68, !dbg !14838

cond.false65:                                     ; preds = %cond.end41
  %66 = load i8*, i8** %misc2, align 8, !dbg !14838
  %67 = bitcast i8* %66 to i32*, !dbg !14838
  %add.ptr66 = getelementptr i32, i32* %67, i64 11, !dbg !14838
  %68 = load i32, i32* %add.ptr66, align 4, !dbg !14838
  %call67 = call i32 @__fswab32(i32 %68) #10, !dbg !14838
  br label %cond.end68, !dbg !14838

cond.end68:                                       ; preds = %cond.false65, %cond.true49
  %cond69 = phi i32 [ %or64, %cond.true49 ], [ %call67, %cond.false65 ], !dbg !14838
  %and70 = and i32 %cond69, 0, !dbg !14838
  %69 = load i32, i32* %_v, align 4, !dbg !14838
  %shl71 = shl i32 %69, 0, !dbg !14838
  %or72 = or i32 %and70, %shl71, !dbg !14838
  %and73 = and i32 %or72, 65280, !dbg !14838
  %shl74 = shl i32 %and73, 8, !dbg !14838
  %or75 = or i32 %shl47, %shl74, !dbg !14838
  %70 = load i8*, i8** %misc2, align 8, !dbg !14838
  %71 = bitcast i8* %70 to i32*, !dbg !14838
  %add.ptr76 = getelementptr i32, i32* %71, i64 11, !dbg !14838
  %72 = load i32, i32* %add.ptr76, align 4, !dbg !14838
  %73 = call i1 @llvm.is.constant.i32(i32 %72), !dbg !14838
  br i1 %73, label %cond.true77, label %cond.false93, !dbg !14838

cond.true77:                                      ; preds = %cond.end68
  %74 = load i8*, i8** %misc2, align 8, !dbg !14838
  %75 = bitcast i8* %74 to i32*, !dbg !14838
  %add.ptr78 = getelementptr i32, i32* %75, i64 11, !dbg !14838
  %76 = load i32, i32* %add.ptr78, align 4, !dbg !14838
  %and79 = and i32 %76, 255, !dbg !14838
  %shl80 = shl i32 %and79, 24, !dbg !14838
  %77 = load i8*, i8** %misc2, align 8, !dbg !14838
  %78 = bitcast i8* %77 to i32*, !dbg !14838
  %add.ptr81 = getelementptr i32, i32* %78, i64 11, !dbg !14838
  %79 = load i32, i32* %add.ptr81, align 4, !dbg !14838
  %and82 = and i32 %79, 65280, !dbg !14838
  %shl83 = shl i32 %and82, 8, !dbg !14838
  %or84 = or i32 %shl80, %shl83, !dbg !14838
  %80 = load i8*, i8** %misc2, align 8, !dbg !14838
  %81 = bitcast i8* %80 to i32*, !dbg !14838
  %add.ptr85 = getelementptr i32, i32* %81, i64 11, !dbg !14838
  %82 = load i32, i32* %add.ptr85, align 4, !dbg !14838
  %and86 = and i32 %82, 16711680, !dbg !14838
  %shr87 = lshr i32 %and86, 8, !dbg !14838
  %or88 = or i32 %or84, %shr87, !dbg !14838
  %83 = load i8*, i8** %misc2, align 8, !dbg !14838
  %84 = bitcast i8* %83 to i32*, !dbg !14838
  %add.ptr89 = getelementptr i32, i32* %84, i64 11, !dbg !14838
  %85 = load i32, i32* %add.ptr89, align 4, !dbg !14838
  %and90 = and i32 %85, -16777216, !dbg !14838
  %shr91 = lshr i32 %and90, 24, !dbg !14838
  %or92 = or i32 %or88, %shr91, !dbg !14838
  br label %cond.end96, !dbg !14838

cond.false93:                                     ; preds = %cond.end68
  %86 = load i8*, i8** %misc2, align 8, !dbg !14838
  %87 = bitcast i8* %86 to i32*, !dbg !14838
  %add.ptr94 = getelementptr i32, i32* %87, i64 11, !dbg !14838
  %88 = load i32, i32* %add.ptr94, align 4, !dbg !14838
  %call95 = call i32 @__fswab32(i32 %88) #10, !dbg !14838
  br label %cond.end96, !dbg !14838

cond.end96:                                       ; preds = %cond.false93, %cond.true77
  %cond97 = phi i32 [ %or92, %cond.true77 ], [ %call95, %cond.false93 ], !dbg !14838
  %and98 = and i32 %cond97, 0, !dbg !14838
  %89 = load i32, i32* %_v, align 4, !dbg !14838
  %shl99 = shl i32 %89, 0, !dbg !14838
  %or100 = or i32 %and98, %shl99, !dbg !14838
  %and101 = and i32 %or100, 16711680, !dbg !14838
  %shr102 = lshr i32 %and101, 8, !dbg !14838
  %or103 = or i32 %or75, %shr102, !dbg !14838
  %90 = load i8*, i8** %misc2, align 8, !dbg !14838
  %91 = bitcast i8* %90 to i32*, !dbg !14838
  %add.ptr104 = getelementptr i32, i32* %91, i64 11, !dbg !14838
  %92 = load i32, i32* %add.ptr104, align 4, !dbg !14838
  %93 = call i1 @llvm.is.constant.i32(i32 %92), !dbg !14838
  br i1 %93, label %cond.true105, label %cond.false121, !dbg !14838

cond.true105:                                     ; preds = %cond.end96
  %94 = load i8*, i8** %misc2, align 8, !dbg !14838
  %95 = bitcast i8* %94 to i32*, !dbg !14838
  %add.ptr106 = getelementptr i32, i32* %95, i64 11, !dbg !14838
  %96 = load i32, i32* %add.ptr106, align 4, !dbg !14838
  %and107 = and i32 %96, 255, !dbg !14838
  %shl108 = shl i32 %and107, 24, !dbg !14838
  %97 = load i8*, i8** %misc2, align 8, !dbg !14838
  %98 = bitcast i8* %97 to i32*, !dbg !14838
  %add.ptr109 = getelementptr i32, i32* %98, i64 11, !dbg !14838
  %99 = load i32, i32* %add.ptr109, align 4, !dbg !14838
  %and110 = and i32 %99, 65280, !dbg !14838
  %shl111 = shl i32 %and110, 8, !dbg !14838
  %or112 = or i32 %shl108, %shl111, !dbg !14838
  %100 = load i8*, i8** %misc2, align 8, !dbg !14838
  %101 = bitcast i8* %100 to i32*, !dbg !14838
  %add.ptr113 = getelementptr i32, i32* %101, i64 11, !dbg !14838
  %102 = load i32, i32* %add.ptr113, align 4, !dbg !14838
  %and114 = and i32 %102, 16711680, !dbg !14838
  %shr115 = lshr i32 %and114, 8, !dbg !14838
  %or116 = or i32 %or112, %shr115, !dbg !14838
  %103 = load i8*, i8** %misc2, align 8, !dbg !14838
  %104 = bitcast i8* %103 to i32*, !dbg !14838
  %add.ptr117 = getelementptr i32, i32* %104, i64 11, !dbg !14838
  %105 = load i32, i32* %add.ptr117, align 4, !dbg !14838
  %and118 = and i32 %105, -16777216, !dbg !14838
  %shr119 = lshr i32 %and118, 24, !dbg !14838
  %or120 = or i32 %or116, %shr119, !dbg !14838
  br label %cond.end124, !dbg !14838

cond.false121:                                    ; preds = %cond.end96
  %106 = load i8*, i8** %misc2, align 8, !dbg !14838
  %107 = bitcast i8* %106 to i32*, !dbg !14838
  %add.ptr122 = getelementptr i32, i32* %107, i64 11, !dbg !14838
  %108 = load i32, i32* %add.ptr122, align 4, !dbg !14838
  %call123 = call i32 @__fswab32(i32 %108) #10, !dbg !14838
  br label %cond.end124, !dbg !14838

cond.end124:                                      ; preds = %cond.false121, %cond.true105
  %cond125 = phi i32 [ %or120, %cond.true105 ], [ %call123, %cond.false121 ], !dbg !14838
  %and126 = and i32 %cond125, 0, !dbg !14838
  %109 = load i32, i32* %_v, align 4, !dbg !14838
  %shl127 = shl i32 %109, 0, !dbg !14838
  %or128 = or i32 %and126, %shl127, !dbg !14838
  %and129 = and i32 %or128, -16777216, !dbg !14838
  %shr130 = lshr i32 %and129, 24, !dbg !14838
  %or131 = or i32 %or103, %shr130, !dbg !14838
  br label %cond.end159, !dbg !14838

cond.false132:                                    ; preds = %cond.end
  %110 = load i8*, i8** %misc2, align 8, !dbg !14838
  %111 = bitcast i8* %110 to i32*, !dbg !14838
  %add.ptr133 = getelementptr i32, i32* %111, i64 11, !dbg !14838
  %112 = load i32, i32* %add.ptr133, align 4, !dbg !14838
  %113 = call i1 @llvm.is.constant.i32(i32 %112), !dbg !14838
  br i1 %113, label %cond.true134, label %cond.false150, !dbg !14838

cond.true134:                                     ; preds = %cond.false132
  %114 = load i8*, i8** %misc2, align 8, !dbg !14838
  %115 = bitcast i8* %114 to i32*, !dbg !14838
  %add.ptr135 = getelementptr i32, i32* %115, i64 11, !dbg !14838
  %116 = load i32, i32* %add.ptr135, align 4, !dbg !14838
  %and136 = and i32 %116, 255, !dbg !14838
  %shl137 = shl i32 %and136, 24, !dbg !14838
  %117 = load i8*, i8** %misc2, align 8, !dbg !14838
  %118 = bitcast i8* %117 to i32*, !dbg !14838
  %add.ptr138 = getelementptr i32, i32* %118, i64 11, !dbg !14838
  %119 = load i32, i32* %add.ptr138, align 4, !dbg !14838
  %and139 = and i32 %119, 65280, !dbg !14838
  %shl140 = shl i32 %and139, 8, !dbg !14838
  %or141 = or i32 %shl137, %shl140, !dbg !14838
  %120 = load i8*, i8** %misc2, align 8, !dbg !14838
  %121 = bitcast i8* %120 to i32*, !dbg !14838
  %add.ptr142 = getelementptr i32, i32* %121, i64 11, !dbg !14838
  %122 = load i32, i32* %add.ptr142, align 4, !dbg !14838
  %and143 = and i32 %122, 16711680, !dbg !14838
  %shr144 = lshr i32 %and143, 8, !dbg !14838
  %or145 = or i32 %or141, %shr144, !dbg !14838
  %123 = load i8*, i8** %misc2, align 8, !dbg !14838
  %124 = bitcast i8* %123 to i32*, !dbg !14838
  %add.ptr146 = getelementptr i32, i32* %124, i64 11, !dbg !14838
  %125 = load i32, i32* %add.ptr146, align 4, !dbg !14838
  %and147 = and i32 %125, -16777216, !dbg !14838
  %shr148 = lshr i32 %and147, 24, !dbg !14838
  %or149 = or i32 %or145, %shr148, !dbg !14838
  br label %cond.end153, !dbg !14838

cond.false150:                                    ; preds = %cond.false132
  %126 = load i8*, i8** %misc2, align 8, !dbg !14838
  %127 = bitcast i8* %126 to i32*, !dbg !14838
  %add.ptr151 = getelementptr i32, i32* %127, i64 11, !dbg !14838
  %128 = load i32, i32* %add.ptr151, align 4, !dbg !14838
  %call152 = call i32 @__fswab32(i32 %128) #10, !dbg !14838
  br label %cond.end153, !dbg !14838

cond.end153:                                      ; preds = %cond.false150, %cond.true134
  %cond154 = phi i32 [ %or149, %cond.true134 ], [ %call152, %cond.false150 ], !dbg !14838
  %and155 = and i32 %cond154, 0, !dbg !14838
  %129 = load i32, i32* %_v, align 4, !dbg !14838
  %shl156 = shl i32 %129, 0, !dbg !14838
  %or157 = or i32 %and155, %shl156, !dbg !14838
  %call158 = call i32 @__fswab32(i32 %or157) #10, !dbg !14838
  br label %cond.end159, !dbg !14838

cond.end159:                                      ; preds = %cond.end153, %cond.end124
  %cond160 = phi i32 [ %or131, %cond.end124 ], [ %call158, %cond.end153 ], !dbg !14838
  %130 = load i8*, i8** %misc2, align 8, !dbg !14838
  %131 = bitcast i8* %130 to i32*, !dbg !14838
  %add.ptr161 = getelementptr i32, i32* %131, i64 11, !dbg !14838
  store i32 %cond160, i32* %add.ptr161, align 4, !dbg !14838
  br label %do.end162, !dbg !14838

do.end162:                                        ; preds = %cond.end159
  %132 = load %struct.mlx5_flow_spec*, %struct.mlx5_flow_spec** %spec.addr, align 8, !dbg !14841
  %match_criteria = getelementptr inbounds %struct.mlx5_flow_spec, %struct.mlx5_flow_spec* %132, i32 0, i32 1, !dbg !14841
  %arraydecay163 = getelementptr inbounds [128 x i32], [128 x i32]* %match_criteria, i64 0, i64 0, !dbg !14841
  %133 = bitcast i32* %arraydecay163 to i8*, !dbg !14841
  %add.ptr164 = getelementptr i8, i8* %133, i64 192, !dbg !14841
  store i8* %add.ptr164, i8** %misc2, align 8, !dbg !14842
  br label %do.body165, !dbg !14843

do.body165:                                       ; preds = %do.end162
  call void @llvm.dbg.declare(metadata i32* %_v166, metadata !14844, metadata !DIExpression()), !dbg !14846
  %call167 = call i32 @mlx5_eswitch_get_vport_metadata_mask() #8, !dbg !14846
  store i32 %call167, i32* %_v166, align 4, !dbg !14846
  br label %do.body168, !dbg !14846

do.body168:                                       ; preds = %do.body165
  br label %do.end169, !dbg !14847

do.end169:                                        ; preds = %do.body168
  %134 = load i8*, i8** %misc2, align 8, !dbg !14846
  %135 = bitcast i8* %134 to i32*, !dbg !14846
  %add.ptr170 = getelementptr i32, i32* %135, i64 11, !dbg !14846
  %136 = load i32, i32* %add.ptr170, align 4, !dbg !14846
  %137 = call i1 @llvm.is.constant.i32(i32 %136), !dbg !14846
  br i1 %137, label %cond.true171, label %cond.false187, !dbg !14846

cond.true171:                                     ; preds = %do.end169
  %138 = load i8*, i8** %misc2, align 8, !dbg !14846
  %139 = bitcast i8* %138 to i32*, !dbg !14846
  %add.ptr172 = getelementptr i32, i32* %139, i64 11, !dbg !14846
  %140 = load i32, i32* %add.ptr172, align 4, !dbg !14846
  %and173 = and i32 %140, 255, !dbg !14846
  %shl174 = shl i32 %and173, 24, !dbg !14846
  %141 = load i8*, i8** %misc2, align 8, !dbg !14846
  %142 = bitcast i8* %141 to i32*, !dbg !14846
  %add.ptr175 = getelementptr i32, i32* %142, i64 11, !dbg !14846
  %143 = load i32, i32* %add.ptr175, align 4, !dbg !14846
  %and176 = and i32 %143, 65280, !dbg !14846
  %shl177 = shl i32 %and176, 8, !dbg !14846
  %or178 = or i32 %shl174, %shl177, !dbg !14846
  %144 = load i8*, i8** %misc2, align 8, !dbg !14846
  %145 = bitcast i8* %144 to i32*, !dbg !14846
  %add.ptr179 = getelementptr i32, i32* %145, i64 11, !dbg !14846
  %146 = load i32, i32* %add.ptr179, align 4, !dbg !14846
  %and180 = and i32 %146, 16711680, !dbg !14846
  %shr181 = lshr i32 %and180, 8, !dbg !14846
  %or182 = or i32 %or178, %shr181, !dbg !14846
  %147 = load i8*, i8** %misc2, align 8, !dbg !14846
  %148 = bitcast i8* %147 to i32*, !dbg !14846
  %add.ptr183 = getelementptr i32, i32* %148, i64 11, !dbg !14846
  %149 = load i32, i32* %add.ptr183, align 4, !dbg !14846
  %and184 = and i32 %149, -16777216, !dbg !14846
  %shr185 = lshr i32 %and184, 24, !dbg !14846
  %or186 = or i32 %or182, %shr185, !dbg !14846
  br label %cond.end190, !dbg !14846

cond.false187:                                    ; preds = %do.end169
  %150 = load i8*, i8** %misc2, align 8, !dbg !14846
  %151 = bitcast i8* %150 to i32*, !dbg !14846
  %add.ptr188 = getelementptr i32, i32* %151, i64 11, !dbg !14846
  %152 = load i32, i32* %add.ptr188, align 4, !dbg !14846
  %call189 = call i32 @__fswab32(i32 %152) #10, !dbg !14846
  br label %cond.end190, !dbg !14846

cond.end190:                                      ; preds = %cond.false187, %cond.true171
  %cond191 = phi i32 [ %or186, %cond.true171 ], [ %call189, %cond.false187 ], !dbg !14846
  %and192 = and i32 %cond191, 0, !dbg !14846
  %153 = load i32, i32* %_v166, align 4, !dbg !14846
  %shl193 = shl i32 %153, 0, !dbg !14846
  %or194 = or i32 %and192, %shl193, !dbg !14846
  %154 = call i1 @llvm.is.constant.i32(i32 %or194), !dbg !14846
  br i1 %154, label %cond.true195, label %cond.false307, !dbg !14846

cond.true195:                                     ; preds = %cond.end190
  %155 = load i8*, i8** %misc2, align 8, !dbg !14846
  %156 = bitcast i8* %155 to i32*, !dbg !14846
  %add.ptr196 = getelementptr i32, i32* %156, i64 11, !dbg !14846
  %157 = load i32, i32* %add.ptr196, align 4, !dbg !14846
  %158 = call i1 @llvm.is.constant.i32(i32 %157), !dbg !14846
  br i1 %158, label %cond.true197, label %cond.false213, !dbg !14846

cond.true197:                                     ; preds = %cond.true195
  %159 = load i8*, i8** %misc2, align 8, !dbg !14846
  %160 = bitcast i8* %159 to i32*, !dbg !14846
  %add.ptr198 = getelementptr i32, i32* %160, i64 11, !dbg !14846
  %161 = load i32, i32* %add.ptr198, align 4, !dbg !14846
  %and199 = and i32 %161, 255, !dbg !14846
  %shl200 = shl i32 %and199, 24, !dbg !14846
  %162 = load i8*, i8** %misc2, align 8, !dbg !14846
  %163 = bitcast i8* %162 to i32*, !dbg !14846
  %add.ptr201 = getelementptr i32, i32* %163, i64 11, !dbg !14846
  %164 = load i32, i32* %add.ptr201, align 4, !dbg !14846
  %and202 = and i32 %164, 65280, !dbg !14846
  %shl203 = shl i32 %and202, 8, !dbg !14846
  %or204 = or i32 %shl200, %shl203, !dbg !14846
  %165 = load i8*, i8** %misc2, align 8, !dbg !14846
  %166 = bitcast i8* %165 to i32*, !dbg !14846
  %add.ptr205 = getelementptr i32, i32* %166, i64 11, !dbg !14846
  %167 = load i32, i32* %add.ptr205, align 4, !dbg !14846
  %and206 = and i32 %167, 16711680, !dbg !14846
  %shr207 = lshr i32 %and206, 8, !dbg !14846
  %or208 = or i32 %or204, %shr207, !dbg !14846
  %168 = load i8*, i8** %misc2, align 8, !dbg !14846
  %169 = bitcast i8* %168 to i32*, !dbg !14846
  %add.ptr209 = getelementptr i32, i32* %169, i64 11, !dbg !14846
  %170 = load i32, i32* %add.ptr209, align 4, !dbg !14846
  %and210 = and i32 %170, -16777216, !dbg !14846
  %shr211 = lshr i32 %and210, 24, !dbg !14846
  %or212 = or i32 %or208, %shr211, !dbg !14846
  br label %cond.end216, !dbg !14846

cond.false213:                                    ; preds = %cond.true195
  %171 = load i8*, i8** %misc2, align 8, !dbg !14846
  %172 = bitcast i8* %171 to i32*, !dbg !14846
  %add.ptr214 = getelementptr i32, i32* %172, i64 11, !dbg !14846
  %173 = load i32, i32* %add.ptr214, align 4, !dbg !14846
  %call215 = call i32 @__fswab32(i32 %173) #10, !dbg !14846
  br label %cond.end216, !dbg !14846

cond.end216:                                      ; preds = %cond.false213, %cond.true197
  %cond217 = phi i32 [ %or212, %cond.true197 ], [ %call215, %cond.false213 ], !dbg !14846
  %and218 = and i32 %cond217, 0, !dbg !14846
  %174 = load i32, i32* %_v166, align 4, !dbg !14846
  %shl219 = shl i32 %174, 0, !dbg !14846
  %or220 = or i32 %and218, %shl219, !dbg !14846
  %and221 = and i32 %or220, 255, !dbg !14846
  %shl222 = shl i32 %and221, 24, !dbg !14846
  %175 = load i8*, i8** %misc2, align 8, !dbg !14846
  %176 = bitcast i8* %175 to i32*, !dbg !14846
  %add.ptr223 = getelementptr i32, i32* %176, i64 11, !dbg !14846
  %177 = load i32, i32* %add.ptr223, align 4, !dbg !14846
  %178 = call i1 @llvm.is.constant.i32(i32 %177), !dbg !14846
  br i1 %178, label %cond.true224, label %cond.false240, !dbg !14846

cond.true224:                                     ; preds = %cond.end216
  %179 = load i8*, i8** %misc2, align 8, !dbg !14846
  %180 = bitcast i8* %179 to i32*, !dbg !14846
  %add.ptr225 = getelementptr i32, i32* %180, i64 11, !dbg !14846
  %181 = load i32, i32* %add.ptr225, align 4, !dbg !14846
  %and226 = and i32 %181, 255, !dbg !14846
  %shl227 = shl i32 %and226, 24, !dbg !14846
  %182 = load i8*, i8** %misc2, align 8, !dbg !14846
  %183 = bitcast i8* %182 to i32*, !dbg !14846
  %add.ptr228 = getelementptr i32, i32* %183, i64 11, !dbg !14846
  %184 = load i32, i32* %add.ptr228, align 4, !dbg !14846
  %and229 = and i32 %184, 65280, !dbg !14846
  %shl230 = shl i32 %and229, 8, !dbg !14846
  %or231 = or i32 %shl227, %shl230, !dbg !14846
  %185 = load i8*, i8** %misc2, align 8, !dbg !14846
  %186 = bitcast i8* %185 to i32*, !dbg !14846
  %add.ptr232 = getelementptr i32, i32* %186, i64 11, !dbg !14846
  %187 = load i32, i32* %add.ptr232, align 4, !dbg !14846
  %and233 = and i32 %187, 16711680, !dbg !14846
  %shr234 = lshr i32 %and233, 8, !dbg !14846
  %or235 = or i32 %or231, %shr234, !dbg !14846
  %188 = load i8*, i8** %misc2, align 8, !dbg !14846
  %189 = bitcast i8* %188 to i32*, !dbg !14846
  %add.ptr236 = getelementptr i32, i32* %189, i64 11, !dbg !14846
  %190 = load i32, i32* %add.ptr236, align 4, !dbg !14846
  %and237 = and i32 %190, -16777216, !dbg !14846
  %shr238 = lshr i32 %and237, 24, !dbg !14846
  %or239 = or i32 %or235, %shr238, !dbg !14846
  br label %cond.end243, !dbg !14846

cond.false240:                                    ; preds = %cond.end216
  %191 = load i8*, i8** %misc2, align 8, !dbg !14846
  %192 = bitcast i8* %191 to i32*, !dbg !14846
  %add.ptr241 = getelementptr i32, i32* %192, i64 11, !dbg !14846
  %193 = load i32, i32* %add.ptr241, align 4, !dbg !14846
  %call242 = call i32 @__fswab32(i32 %193) #10, !dbg !14846
  br label %cond.end243, !dbg !14846

cond.end243:                                      ; preds = %cond.false240, %cond.true224
  %cond244 = phi i32 [ %or239, %cond.true224 ], [ %call242, %cond.false240 ], !dbg !14846
  %and245 = and i32 %cond244, 0, !dbg !14846
  %194 = load i32, i32* %_v166, align 4, !dbg !14846
  %shl246 = shl i32 %194, 0, !dbg !14846
  %or247 = or i32 %and245, %shl246, !dbg !14846
  %and248 = and i32 %or247, 65280, !dbg !14846
  %shl249 = shl i32 %and248, 8, !dbg !14846
  %or250 = or i32 %shl222, %shl249, !dbg !14846
  %195 = load i8*, i8** %misc2, align 8, !dbg !14846
  %196 = bitcast i8* %195 to i32*, !dbg !14846
  %add.ptr251 = getelementptr i32, i32* %196, i64 11, !dbg !14846
  %197 = load i32, i32* %add.ptr251, align 4, !dbg !14846
  %198 = call i1 @llvm.is.constant.i32(i32 %197), !dbg !14846
  br i1 %198, label %cond.true252, label %cond.false268, !dbg !14846

cond.true252:                                     ; preds = %cond.end243
  %199 = load i8*, i8** %misc2, align 8, !dbg !14846
  %200 = bitcast i8* %199 to i32*, !dbg !14846
  %add.ptr253 = getelementptr i32, i32* %200, i64 11, !dbg !14846
  %201 = load i32, i32* %add.ptr253, align 4, !dbg !14846
  %and254 = and i32 %201, 255, !dbg !14846
  %shl255 = shl i32 %and254, 24, !dbg !14846
  %202 = load i8*, i8** %misc2, align 8, !dbg !14846
  %203 = bitcast i8* %202 to i32*, !dbg !14846
  %add.ptr256 = getelementptr i32, i32* %203, i64 11, !dbg !14846
  %204 = load i32, i32* %add.ptr256, align 4, !dbg !14846
  %and257 = and i32 %204, 65280, !dbg !14846
  %shl258 = shl i32 %and257, 8, !dbg !14846
  %or259 = or i32 %shl255, %shl258, !dbg !14846
  %205 = load i8*, i8** %misc2, align 8, !dbg !14846
  %206 = bitcast i8* %205 to i32*, !dbg !14846
  %add.ptr260 = getelementptr i32, i32* %206, i64 11, !dbg !14846
  %207 = load i32, i32* %add.ptr260, align 4, !dbg !14846
  %and261 = and i32 %207, 16711680, !dbg !14846
  %shr262 = lshr i32 %and261, 8, !dbg !14846
  %or263 = or i32 %or259, %shr262, !dbg !14846
  %208 = load i8*, i8** %misc2, align 8, !dbg !14846
  %209 = bitcast i8* %208 to i32*, !dbg !14846
  %add.ptr264 = getelementptr i32, i32* %209, i64 11, !dbg !14846
  %210 = load i32, i32* %add.ptr264, align 4, !dbg !14846
  %and265 = and i32 %210, -16777216, !dbg !14846
  %shr266 = lshr i32 %and265, 24, !dbg !14846
  %or267 = or i32 %or263, %shr266, !dbg !14846
  br label %cond.end271, !dbg !14846

cond.false268:                                    ; preds = %cond.end243
  %211 = load i8*, i8** %misc2, align 8, !dbg !14846
  %212 = bitcast i8* %211 to i32*, !dbg !14846
  %add.ptr269 = getelementptr i32, i32* %212, i64 11, !dbg !14846
  %213 = load i32, i32* %add.ptr269, align 4, !dbg !14846
  %call270 = call i32 @__fswab32(i32 %213) #10, !dbg !14846
  br label %cond.end271, !dbg !14846

cond.end271:                                      ; preds = %cond.false268, %cond.true252
  %cond272 = phi i32 [ %or267, %cond.true252 ], [ %call270, %cond.false268 ], !dbg !14846
  %and273 = and i32 %cond272, 0, !dbg !14846
  %214 = load i32, i32* %_v166, align 4, !dbg !14846
  %shl274 = shl i32 %214, 0, !dbg !14846
  %or275 = or i32 %and273, %shl274, !dbg !14846
  %and276 = and i32 %or275, 16711680, !dbg !14846
  %shr277 = lshr i32 %and276, 8, !dbg !14846
  %or278 = or i32 %or250, %shr277, !dbg !14846
  %215 = load i8*, i8** %misc2, align 8, !dbg !14846
  %216 = bitcast i8* %215 to i32*, !dbg !14846
  %add.ptr279 = getelementptr i32, i32* %216, i64 11, !dbg !14846
  %217 = load i32, i32* %add.ptr279, align 4, !dbg !14846
  %218 = call i1 @llvm.is.constant.i32(i32 %217), !dbg !14846
  br i1 %218, label %cond.true280, label %cond.false296, !dbg !14846

cond.true280:                                     ; preds = %cond.end271
  %219 = load i8*, i8** %misc2, align 8, !dbg !14846
  %220 = bitcast i8* %219 to i32*, !dbg !14846
  %add.ptr281 = getelementptr i32, i32* %220, i64 11, !dbg !14846
  %221 = load i32, i32* %add.ptr281, align 4, !dbg !14846
  %and282 = and i32 %221, 255, !dbg !14846
  %shl283 = shl i32 %and282, 24, !dbg !14846
  %222 = load i8*, i8** %misc2, align 8, !dbg !14846
  %223 = bitcast i8* %222 to i32*, !dbg !14846
  %add.ptr284 = getelementptr i32, i32* %223, i64 11, !dbg !14846
  %224 = load i32, i32* %add.ptr284, align 4, !dbg !14846
  %and285 = and i32 %224, 65280, !dbg !14846
  %shl286 = shl i32 %and285, 8, !dbg !14846
  %or287 = or i32 %shl283, %shl286, !dbg !14846
  %225 = load i8*, i8** %misc2, align 8, !dbg !14846
  %226 = bitcast i8* %225 to i32*, !dbg !14846
  %add.ptr288 = getelementptr i32, i32* %226, i64 11, !dbg !14846
  %227 = load i32, i32* %add.ptr288, align 4, !dbg !14846
  %and289 = and i32 %227, 16711680, !dbg !14846
  %shr290 = lshr i32 %and289, 8, !dbg !14846
  %or291 = or i32 %or287, %shr290, !dbg !14846
  %228 = load i8*, i8** %misc2, align 8, !dbg !14846
  %229 = bitcast i8* %228 to i32*, !dbg !14846
  %add.ptr292 = getelementptr i32, i32* %229, i64 11, !dbg !14846
  %230 = load i32, i32* %add.ptr292, align 4, !dbg !14846
  %and293 = and i32 %230, -16777216, !dbg !14846
  %shr294 = lshr i32 %and293, 24, !dbg !14846
  %or295 = or i32 %or291, %shr294, !dbg !14846
  br label %cond.end299, !dbg !14846

cond.false296:                                    ; preds = %cond.end271
  %231 = load i8*, i8** %misc2, align 8, !dbg !14846
  %232 = bitcast i8* %231 to i32*, !dbg !14846
  %add.ptr297 = getelementptr i32, i32* %232, i64 11, !dbg !14846
  %233 = load i32, i32* %add.ptr297, align 4, !dbg !14846
  %call298 = call i32 @__fswab32(i32 %233) #10, !dbg !14846
  br label %cond.end299, !dbg !14846

cond.end299:                                      ; preds = %cond.false296, %cond.true280
  %cond300 = phi i32 [ %or295, %cond.true280 ], [ %call298, %cond.false296 ], !dbg !14846
  %and301 = and i32 %cond300, 0, !dbg !14846
  %234 = load i32, i32* %_v166, align 4, !dbg !14846
  %shl302 = shl i32 %234, 0, !dbg !14846
  %or303 = or i32 %and301, %shl302, !dbg !14846
  %and304 = and i32 %or303, -16777216, !dbg !14846
  %shr305 = lshr i32 %and304, 24, !dbg !14846
  %or306 = or i32 %or278, %shr305, !dbg !14846
  br label %cond.end334, !dbg !14846

cond.false307:                                    ; preds = %cond.end190
  %235 = load i8*, i8** %misc2, align 8, !dbg !14846
  %236 = bitcast i8* %235 to i32*, !dbg !14846
  %add.ptr308 = getelementptr i32, i32* %236, i64 11, !dbg !14846
  %237 = load i32, i32* %add.ptr308, align 4, !dbg !14846
  %238 = call i1 @llvm.is.constant.i32(i32 %237), !dbg !14846
  br i1 %238, label %cond.true309, label %cond.false325, !dbg !14846

cond.true309:                                     ; preds = %cond.false307
  %239 = load i8*, i8** %misc2, align 8, !dbg !14846
  %240 = bitcast i8* %239 to i32*, !dbg !14846
  %add.ptr310 = getelementptr i32, i32* %240, i64 11, !dbg !14846
  %241 = load i32, i32* %add.ptr310, align 4, !dbg !14846
  %and311 = and i32 %241, 255, !dbg !14846
  %shl312 = shl i32 %and311, 24, !dbg !14846
  %242 = load i8*, i8** %misc2, align 8, !dbg !14846
  %243 = bitcast i8* %242 to i32*, !dbg !14846
  %add.ptr313 = getelementptr i32, i32* %243, i64 11, !dbg !14846
  %244 = load i32, i32* %add.ptr313, align 4, !dbg !14846
  %and314 = and i32 %244, 65280, !dbg !14846
  %shl315 = shl i32 %and314, 8, !dbg !14846
  %or316 = or i32 %shl312, %shl315, !dbg !14846
  %245 = load i8*, i8** %misc2, align 8, !dbg !14846
  %246 = bitcast i8* %245 to i32*, !dbg !14846
  %add.ptr317 = getelementptr i32, i32* %246, i64 11, !dbg !14846
  %247 = load i32, i32* %add.ptr317, align 4, !dbg !14846
  %and318 = and i32 %247, 16711680, !dbg !14846
  %shr319 = lshr i32 %and318, 8, !dbg !14846
  %or320 = or i32 %or316, %shr319, !dbg !14846
  %248 = load i8*, i8** %misc2, align 8, !dbg !14846
  %249 = bitcast i8* %248 to i32*, !dbg !14846
  %add.ptr321 = getelementptr i32, i32* %249, i64 11, !dbg !14846
  %250 = load i32, i32* %add.ptr321, align 4, !dbg !14846
  %and322 = and i32 %250, -16777216, !dbg !14846
  %shr323 = lshr i32 %and322, 24, !dbg !14846
  %or324 = or i32 %or320, %shr323, !dbg !14846
  br label %cond.end328, !dbg !14846

cond.false325:                                    ; preds = %cond.false307
  %251 = load i8*, i8** %misc2, align 8, !dbg !14846
  %252 = bitcast i8* %251 to i32*, !dbg !14846
  %add.ptr326 = getelementptr i32, i32* %252, i64 11, !dbg !14846
  %253 = load i32, i32* %add.ptr326, align 4, !dbg !14846
  %call327 = call i32 @__fswab32(i32 %253) #10, !dbg !14846
  br label %cond.end328, !dbg !14846

cond.end328:                                      ; preds = %cond.false325, %cond.true309
  %cond329 = phi i32 [ %or324, %cond.true309 ], [ %call327, %cond.false325 ], !dbg !14846
  %and330 = and i32 %cond329, 0, !dbg !14846
  %254 = load i32, i32* %_v166, align 4, !dbg !14846
  %shl331 = shl i32 %254, 0, !dbg !14846
  %or332 = or i32 %and330, %shl331, !dbg !14846
  %call333 = call i32 @__fswab32(i32 %or332) #10, !dbg !14846
  br label %cond.end334, !dbg !14846

cond.end334:                                      ; preds = %cond.end328, %cond.end299
  %cond335 = phi i32 [ %or306, %cond.end299 ], [ %call333, %cond.end328 ], !dbg !14846
  %255 = load i8*, i8** %misc2, align 8, !dbg !14846
  %256 = bitcast i8* %255 to i32*, !dbg !14846
  %add.ptr336 = getelementptr i32, i32* %256, i64 11, !dbg !14846
  store i32 %cond335, i32* %add.ptr336, align 4, !dbg !14846
  br label %do.end337, !dbg !14846

do.end337:                                        ; preds = %cond.end334
  %257 = load %struct.mlx5_flow_spec*, %struct.mlx5_flow_spec** %spec.addr, align 8, !dbg !14849
  %match_criteria_enable = getelementptr inbounds %struct.mlx5_flow_spec, %struct.mlx5_flow_spec* %257, i32 0, i32 0, !dbg !14850
  %258 = load i8, i8* %match_criteria_enable, align 4, !dbg !14851
  %conv = zext i8 %258 to i32, !dbg !14851
  %or338 = or i32 %conv, 8, !dbg !14851
  %conv339 = trunc i32 %or338 to i8, !dbg !14851
  store i8 %conv339, i8* %match_criteria_enable, align 4, !dbg !14851
  br label %if.end1201, !dbg !14852

if.else:                                          ; preds = %entry
  %259 = load %struct.mlx5_flow_spec*, %struct.mlx5_flow_spec** %spec.addr, align 8, !dbg !14853
  %match_value340 = getelementptr inbounds %struct.mlx5_flow_spec, %struct.mlx5_flow_spec* %259, i32 0, i32 2, !dbg !14853
  %arraydecay341 = getelementptr inbounds [128 x i32], [128 x i32]* %match_value340, i64 0, i64 0, !dbg !14853
  %260 = bitcast i32* %arraydecay341 to i8*, !dbg !14853
  %add.ptr342 = getelementptr i8, i8* %260, i64 64, !dbg !14853
  store i8* %add.ptr342, i8** %misc, align 8, !dbg !14855
  br label %do.body343, !dbg !14856

do.body343:                                       ; preds = %if.else
  call void @llvm.dbg.declare(metadata i32* %_v344, metadata !14857, metadata !DIExpression()), !dbg !14859
  %261 = load %struct.mlx5_esw_flow_attr*, %struct.mlx5_esw_flow_attr** %attr.addr, align 8, !dbg !14859
  %in_rep345 = getelementptr inbounds %struct.mlx5_esw_flow_attr, %struct.mlx5_esw_flow_attr* %261, i32 0, i32 0, !dbg !14859
  %262 = load %struct.mlx5_eswitch_rep*, %struct.mlx5_eswitch_rep** %in_rep345, align 8, !dbg !14859
  %vport346 = getelementptr inbounds %struct.mlx5_eswitch_rep, %struct.mlx5_eswitch_rep* %262, i32 0, i32 1, !dbg !14859
  %263 = load i16, i16* %vport346, align 8, !dbg !14859
  %conv347 = zext i16 %263 to i32, !dbg !14859
  store i32 %conv347, i32* %_v344, align 4, !dbg !14859
  br label %do.body348, !dbg !14859

do.body348:                                       ; preds = %do.body343
  br label %do.end349, !dbg !14860

do.end349:                                        ; preds = %do.body348
  %264 = load i8*, i8** %misc, align 8, !dbg !14859
  %265 = bitcast i8* %264 to i32*, !dbg !14859
  %add.ptr350 = getelementptr i32, i32* %265, i64 1, !dbg !14859
  %266 = load i32, i32* %add.ptr350, align 4, !dbg !14859
  %267 = call i1 @llvm.is.constant.i32(i32 %266), !dbg !14859
  br i1 %267, label %cond.true351, label %cond.false367, !dbg !14859

cond.true351:                                     ; preds = %do.end349
  %268 = load i8*, i8** %misc, align 8, !dbg !14859
  %269 = bitcast i8* %268 to i32*, !dbg !14859
  %add.ptr352 = getelementptr i32, i32* %269, i64 1, !dbg !14859
  %270 = load i32, i32* %add.ptr352, align 4, !dbg !14859
  %and353 = and i32 %270, 255, !dbg !14859
  %shl354 = shl i32 %and353, 24, !dbg !14859
  %271 = load i8*, i8** %misc, align 8, !dbg !14859
  %272 = bitcast i8* %271 to i32*, !dbg !14859
  %add.ptr355 = getelementptr i32, i32* %272, i64 1, !dbg !14859
  %273 = load i32, i32* %add.ptr355, align 4, !dbg !14859
  %and356 = and i32 %273, 65280, !dbg !14859
  %shl357 = shl i32 %and356, 8, !dbg !14859
  %or358 = or i32 %shl354, %shl357, !dbg !14859
  %274 = load i8*, i8** %misc, align 8, !dbg !14859
  %275 = bitcast i8* %274 to i32*, !dbg !14859
  %add.ptr359 = getelementptr i32, i32* %275, i64 1, !dbg !14859
  %276 = load i32, i32* %add.ptr359, align 4, !dbg !14859
  %and360 = and i32 %276, 16711680, !dbg !14859
  %shr361 = lshr i32 %and360, 8, !dbg !14859
  %or362 = or i32 %or358, %shr361, !dbg !14859
  %277 = load i8*, i8** %misc, align 8, !dbg !14859
  %278 = bitcast i8* %277 to i32*, !dbg !14859
  %add.ptr363 = getelementptr i32, i32* %278, i64 1, !dbg !14859
  %279 = load i32, i32* %add.ptr363, align 4, !dbg !14859
  %and364 = and i32 %279, -16777216, !dbg !14859
  %shr365 = lshr i32 %and364, 24, !dbg !14859
  %or366 = or i32 %or362, %shr365, !dbg !14859
  br label %cond.end370, !dbg !14859

cond.false367:                                    ; preds = %do.end349
  %280 = load i8*, i8** %misc, align 8, !dbg !14859
  %281 = bitcast i8* %280 to i32*, !dbg !14859
  %add.ptr368 = getelementptr i32, i32* %281, i64 1, !dbg !14859
  %282 = load i32, i32* %add.ptr368, align 4, !dbg !14859
  %call369 = call i32 @__fswab32(i32 %282) #10, !dbg !14859
  br label %cond.end370, !dbg !14859

cond.end370:                                      ; preds = %cond.false367, %cond.true351
  %cond371 = phi i32 [ %or366, %cond.true351 ], [ %call369, %cond.false367 ], !dbg !14859
  %and372 = and i32 %cond371, -65536, !dbg !14859
  %283 = load i32, i32* %_v344, align 4, !dbg !14859
  %and373 = and i32 %283, 65535, !dbg !14859
  %shl374 = shl i32 %and373, 0, !dbg !14859
  %or375 = or i32 %and372, %shl374, !dbg !14859
  %284 = call i1 @llvm.is.constant.i32(i32 %or375), !dbg !14859
  br i1 %284, label %cond.true376, label %cond.false492, !dbg !14859

cond.true376:                                     ; preds = %cond.end370
  %285 = load i8*, i8** %misc, align 8, !dbg !14859
  %286 = bitcast i8* %285 to i32*, !dbg !14859
  %add.ptr377 = getelementptr i32, i32* %286, i64 1, !dbg !14859
  %287 = load i32, i32* %add.ptr377, align 4, !dbg !14859
  %288 = call i1 @llvm.is.constant.i32(i32 %287), !dbg !14859
  br i1 %288, label %cond.true378, label %cond.false394, !dbg !14859

cond.true378:                                     ; preds = %cond.true376
  %289 = load i8*, i8** %misc, align 8, !dbg !14859
  %290 = bitcast i8* %289 to i32*, !dbg !14859
  %add.ptr379 = getelementptr i32, i32* %290, i64 1, !dbg !14859
  %291 = load i32, i32* %add.ptr379, align 4, !dbg !14859
  %and380 = and i32 %291, 255, !dbg !14859
  %shl381 = shl i32 %and380, 24, !dbg !14859
  %292 = load i8*, i8** %misc, align 8, !dbg !14859
  %293 = bitcast i8* %292 to i32*, !dbg !14859
  %add.ptr382 = getelementptr i32, i32* %293, i64 1, !dbg !14859
  %294 = load i32, i32* %add.ptr382, align 4, !dbg !14859
  %and383 = and i32 %294, 65280, !dbg !14859
  %shl384 = shl i32 %and383, 8, !dbg !14859
  %or385 = or i32 %shl381, %shl384, !dbg !14859
  %295 = load i8*, i8** %misc, align 8, !dbg !14859
  %296 = bitcast i8* %295 to i32*, !dbg !14859
  %add.ptr386 = getelementptr i32, i32* %296, i64 1, !dbg !14859
  %297 = load i32, i32* %add.ptr386, align 4, !dbg !14859
  %and387 = and i32 %297, 16711680, !dbg !14859
  %shr388 = lshr i32 %and387, 8, !dbg !14859
  %or389 = or i32 %or385, %shr388, !dbg !14859
  %298 = load i8*, i8** %misc, align 8, !dbg !14859
  %299 = bitcast i8* %298 to i32*, !dbg !14859
  %add.ptr390 = getelementptr i32, i32* %299, i64 1, !dbg !14859
  %300 = load i32, i32* %add.ptr390, align 4, !dbg !14859
  %and391 = and i32 %300, -16777216, !dbg !14859
  %shr392 = lshr i32 %and391, 24, !dbg !14859
  %or393 = or i32 %or389, %shr392, !dbg !14859
  br label %cond.end397, !dbg !14859

cond.false394:                                    ; preds = %cond.true376
  %301 = load i8*, i8** %misc, align 8, !dbg !14859
  %302 = bitcast i8* %301 to i32*, !dbg !14859
  %add.ptr395 = getelementptr i32, i32* %302, i64 1, !dbg !14859
  %303 = load i32, i32* %add.ptr395, align 4, !dbg !14859
  %call396 = call i32 @__fswab32(i32 %303) #10, !dbg !14859
  br label %cond.end397, !dbg !14859

cond.end397:                                      ; preds = %cond.false394, %cond.true378
  %cond398 = phi i32 [ %or393, %cond.true378 ], [ %call396, %cond.false394 ], !dbg !14859
  %and399 = and i32 %cond398, -65536, !dbg !14859
  %304 = load i32, i32* %_v344, align 4, !dbg !14859
  %and400 = and i32 %304, 65535, !dbg !14859
  %shl401 = shl i32 %and400, 0, !dbg !14859
  %or402 = or i32 %and399, %shl401, !dbg !14859
  %and403 = and i32 %or402, 255, !dbg !14859
  %shl404 = shl i32 %and403, 24, !dbg !14859
  %305 = load i8*, i8** %misc, align 8, !dbg !14859
  %306 = bitcast i8* %305 to i32*, !dbg !14859
  %add.ptr405 = getelementptr i32, i32* %306, i64 1, !dbg !14859
  %307 = load i32, i32* %add.ptr405, align 4, !dbg !14859
  %308 = call i1 @llvm.is.constant.i32(i32 %307), !dbg !14859
  br i1 %308, label %cond.true406, label %cond.false422, !dbg !14859

cond.true406:                                     ; preds = %cond.end397
  %309 = load i8*, i8** %misc, align 8, !dbg !14859
  %310 = bitcast i8* %309 to i32*, !dbg !14859
  %add.ptr407 = getelementptr i32, i32* %310, i64 1, !dbg !14859
  %311 = load i32, i32* %add.ptr407, align 4, !dbg !14859
  %and408 = and i32 %311, 255, !dbg !14859
  %shl409 = shl i32 %and408, 24, !dbg !14859
  %312 = load i8*, i8** %misc, align 8, !dbg !14859
  %313 = bitcast i8* %312 to i32*, !dbg !14859
  %add.ptr410 = getelementptr i32, i32* %313, i64 1, !dbg !14859
  %314 = load i32, i32* %add.ptr410, align 4, !dbg !14859
  %and411 = and i32 %314, 65280, !dbg !14859
  %shl412 = shl i32 %and411, 8, !dbg !14859
  %or413 = or i32 %shl409, %shl412, !dbg !14859
  %315 = load i8*, i8** %misc, align 8, !dbg !14859
  %316 = bitcast i8* %315 to i32*, !dbg !14859
  %add.ptr414 = getelementptr i32, i32* %316, i64 1, !dbg !14859
  %317 = load i32, i32* %add.ptr414, align 4, !dbg !14859
  %and415 = and i32 %317, 16711680, !dbg !14859
  %shr416 = lshr i32 %and415, 8, !dbg !14859
  %or417 = or i32 %or413, %shr416, !dbg !14859
  %318 = load i8*, i8** %misc, align 8, !dbg !14859
  %319 = bitcast i8* %318 to i32*, !dbg !14859
  %add.ptr418 = getelementptr i32, i32* %319, i64 1, !dbg !14859
  %320 = load i32, i32* %add.ptr418, align 4, !dbg !14859
  %and419 = and i32 %320, -16777216, !dbg !14859
  %shr420 = lshr i32 %and419, 24, !dbg !14859
  %or421 = or i32 %or417, %shr420, !dbg !14859
  br label %cond.end425, !dbg !14859

cond.false422:                                    ; preds = %cond.end397
  %321 = load i8*, i8** %misc, align 8, !dbg !14859
  %322 = bitcast i8* %321 to i32*, !dbg !14859
  %add.ptr423 = getelementptr i32, i32* %322, i64 1, !dbg !14859
  %323 = load i32, i32* %add.ptr423, align 4, !dbg !14859
  %call424 = call i32 @__fswab32(i32 %323) #10, !dbg !14859
  br label %cond.end425, !dbg !14859

cond.end425:                                      ; preds = %cond.false422, %cond.true406
  %cond426 = phi i32 [ %or421, %cond.true406 ], [ %call424, %cond.false422 ], !dbg !14859
  %and427 = and i32 %cond426, -65536, !dbg !14859
  %324 = load i32, i32* %_v344, align 4, !dbg !14859
  %and428 = and i32 %324, 65535, !dbg !14859
  %shl429 = shl i32 %and428, 0, !dbg !14859
  %or430 = or i32 %and427, %shl429, !dbg !14859
  %and431 = and i32 %or430, 65280, !dbg !14859
  %shl432 = shl i32 %and431, 8, !dbg !14859
  %or433 = or i32 %shl404, %shl432, !dbg !14859
  %325 = load i8*, i8** %misc, align 8, !dbg !14859
  %326 = bitcast i8* %325 to i32*, !dbg !14859
  %add.ptr434 = getelementptr i32, i32* %326, i64 1, !dbg !14859
  %327 = load i32, i32* %add.ptr434, align 4, !dbg !14859
  %328 = call i1 @llvm.is.constant.i32(i32 %327), !dbg !14859
  br i1 %328, label %cond.true435, label %cond.false451, !dbg !14859

cond.true435:                                     ; preds = %cond.end425
  %329 = load i8*, i8** %misc, align 8, !dbg !14859
  %330 = bitcast i8* %329 to i32*, !dbg !14859
  %add.ptr436 = getelementptr i32, i32* %330, i64 1, !dbg !14859
  %331 = load i32, i32* %add.ptr436, align 4, !dbg !14859
  %and437 = and i32 %331, 255, !dbg !14859
  %shl438 = shl i32 %and437, 24, !dbg !14859
  %332 = load i8*, i8** %misc, align 8, !dbg !14859
  %333 = bitcast i8* %332 to i32*, !dbg !14859
  %add.ptr439 = getelementptr i32, i32* %333, i64 1, !dbg !14859
  %334 = load i32, i32* %add.ptr439, align 4, !dbg !14859
  %and440 = and i32 %334, 65280, !dbg !14859
  %shl441 = shl i32 %and440, 8, !dbg !14859
  %or442 = or i32 %shl438, %shl441, !dbg !14859
  %335 = load i8*, i8** %misc, align 8, !dbg !14859
  %336 = bitcast i8* %335 to i32*, !dbg !14859
  %add.ptr443 = getelementptr i32, i32* %336, i64 1, !dbg !14859
  %337 = load i32, i32* %add.ptr443, align 4, !dbg !14859
  %and444 = and i32 %337, 16711680, !dbg !14859
  %shr445 = lshr i32 %and444, 8, !dbg !14859
  %or446 = or i32 %or442, %shr445, !dbg !14859
  %338 = load i8*, i8** %misc, align 8, !dbg !14859
  %339 = bitcast i8* %338 to i32*, !dbg !14859
  %add.ptr447 = getelementptr i32, i32* %339, i64 1, !dbg !14859
  %340 = load i32, i32* %add.ptr447, align 4, !dbg !14859
  %and448 = and i32 %340, -16777216, !dbg !14859
  %shr449 = lshr i32 %and448, 24, !dbg !14859
  %or450 = or i32 %or446, %shr449, !dbg !14859
  br label %cond.end454, !dbg !14859

cond.false451:                                    ; preds = %cond.end425
  %341 = load i8*, i8** %misc, align 8, !dbg !14859
  %342 = bitcast i8* %341 to i32*, !dbg !14859
  %add.ptr452 = getelementptr i32, i32* %342, i64 1, !dbg !14859
  %343 = load i32, i32* %add.ptr452, align 4, !dbg !14859
  %call453 = call i32 @__fswab32(i32 %343) #10, !dbg !14859
  br label %cond.end454, !dbg !14859

cond.end454:                                      ; preds = %cond.false451, %cond.true435
  %cond455 = phi i32 [ %or450, %cond.true435 ], [ %call453, %cond.false451 ], !dbg !14859
  %and456 = and i32 %cond455, -65536, !dbg !14859
  %344 = load i32, i32* %_v344, align 4, !dbg !14859
  %and457 = and i32 %344, 65535, !dbg !14859
  %shl458 = shl i32 %and457, 0, !dbg !14859
  %or459 = or i32 %and456, %shl458, !dbg !14859
  %and460 = and i32 %or459, 16711680, !dbg !14859
  %shr461 = lshr i32 %and460, 8, !dbg !14859
  %or462 = or i32 %or433, %shr461, !dbg !14859
  %345 = load i8*, i8** %misc, align 8, !dbg !14859
  %346 = bitcast i8* %345 to i32*, !dbg !14859
  %add.ptr463 = getelementptr i32, i32* %346, i64 1, !dbg !14859
  %347 = load i32, i32* %add.ptr463, align 4, !dbg !14859
  %348 = call i1 @llvm.is.constant.i32(i32 %347), !dbg !14859
  br i1 %348, label %cond.true464, label %cond.false480, !dbg !14859

cond.true464:                                     ; preds = %cond.end454
  %349 = load i8*, i8** %misc, align 8, !dbg !14859
  %350 = bitcast i8* %349 to i32*, !dbg !14859
  %add.ptr465 = getelementptr i32, i32* %350, i64 1, !dbg !14859
  %351 = load i32, i32* %add.ptr465, align 4, !dbg !14859
  %and466 = and i32 %351, 255, !dbg !14859
  %shl467 = shl i32 %and466, 24, !dbg !14859
  %352 = load i8*, i8** %misc, align 8, !dbg !14859
  %353 = bitcast i8* %352 to i32*, !dbg !14859
  %add.ptr468 = getelementptr i32, i32* %353, i64 1, !dbg !14859
  %354 = load i32, i32* %add.ptr468, align 4, !dbg !14859
  %and469 = and i32 %354, 65280, !dbg !14859
  %shl470 = shl i32 %and469, 8, !dbg !14859
  %or471 = or i32 %shl467, %shl470, !dbg !14859
  %355 = load i8*, i8** %misc, align 8, !dbg !14859
  %356 = bitcast i8* %355 to i32*, !dbg !14859
  %add.ptr472 = getelementptr i32, i32* %356, i64 1, !dbg !14859
  %357 = load i32, i32* %add.ptr472, align 4, !dbg !14859
  %and473 = and i32 %357, 16711680, !dbg !14859
  %shr474 = lshr i32 %and473, 8, !dbg !14859
  %or475 = or i32 %or471, %shr474, !dbg !14859
  %358 = load i8*, i8** %misc, align 8, !dbg !14859
  %359 = bitcast i8* %358 to i32*, !dbg !14859
  %add.ptr476 = getelementptr i32, i32* %359, i64 1, !dbg !14859
  %360 = load i32, i32* %add.ptr476, align 4, !dbg !14859
  %and477 = and i32 %360, -16777216, !dbg !14859
  %shr478 = lshr i32 %and477, 24, !dbg !14859
  %or479 = or i32 %or475, %shr478, !dbg !14859
  br label %cond.end483, !dbg !14859

cond.false480:                                    ; preds = %cond.end454
  %361 = load i8*, i8** %misc, align 8, !dbg !14859
  %362 = bitcast i8* %361 to i32*, !dbg !14859
  %add.ptr481 = getelementptr i32, i32* %362, i64 1, !dbg !14859
  %363 = load i32, i32* %add.ptr481, align 4, !dbg !14859
  %call482 = call i32 @__fswab32(i32 %363) #10, !dbg !14859
  br label %cond.end483, !dbg !14859

cond.end483:                                      ; preds = %cond.false480, %cond.true464
  %cond484 = phi i32 [ %or479, %cond.true464 ], [ %call482, %cond.false480 ], !dbg !14859
  %and485 = and i32 %cond484, -65536, !dbg !14859
  %364 = load i32, i32* %_v344, align 4, !dbg !14859
  %and486 = and i32 %364, 65535, !dbg !14859
  %shl487 = shl i32 %and486, 0, !dbg !14859
  %or488 = or i32 %and485, %shl487, !dbg !14859
  %and489 = and i32 %or488, -16777216, !dbg !14859
  %shr490 = lshr i32 %and489, 24, !dbg !14859
  %or491 = or i32 %or462, %shr490, !dbg !14859
  br label %cond.end520, !dbg !14859

cond.false492:                                    ; preds = %cond.end370
  %365 = load i8*, i8** %misc, align 8, !dbg !14859
  %366 = bitcast i8* %365 to i32*, !dbg !14859
  %add.ptr493 = getelementptr i32, i32* %366, i64 1, !dbg !14859
  %367 = load i32, i32* %add.ptr493, align 4, !dbg !14859
  %368 = call i1 @llvm.is.constant.i32(i32 %367), !dbg !14859
  br i1 %368, label %cond.true494, label %cond.false510, !dbg !14859

cond.true494:                                     ; preds = %cond.false492
  %369 = load i8*, i8** %misc, align 8, !dbg !14859
  %370 = bitcast i8* %369 to i32*, !dbg !14859
  %add.ptr495 = getelementptr i32, i32* %370, i64 1, !dbg !14859
  %371 = load i32, i32* %add.ptr495, align 4, !dbg !14859
  %and496 = and i32 %371, 255, !dbg !14859
  %shl497 = shl i32 %and496, 24, !dbg !14859
  %372 = load i8*, i8** %misc, align 8, !dbg !14859
  %373 = bitcast i8* %372 to i32*, !dbg !14859
  %add.ptr498 = getelementptr i32, i32* %373, i64 1, !dbg !14859
  %374 = load i32, i32* %add.ptr498, align 4, !dbg !14859
  %and499 = and i32 %374, 65280, !dbg !14859
  %shl500 = shl i32 %and499, 8, !dbg !14859
  %or501 = or i32 %shl497, %shl500, !dbg !14859
  %375 = load i8*, i8** %misc, align 8, !dbg !14859
  %376 = bitcast i8* %375 to i32*, !dbg !14859
  %add.ptr502 = getelementptr i32, i32* %376, i64 1, !dbg !14859
  %377 = load i32, i32* %add.ptr502, align 4, !dbg !14859
  %and503 = and i32 %377, 16711680, !dbg !14859
  %shr504 = lshr i32 %and503, 8, !dbg !14859
  %or505 = or i32 %or501, %shr504, !dbg !14859
  %378 = load i8*, i8** %misc, align 8, !dbg !14859
  %379 = bitcast i8* %378 to i32*, !dbg !14859
  %add.ptr506 = getelementptr i32, i32* %379, i64 1, !dbg !14859
  %380 = load i32, i32* %add.ptr506, align 4, !dbg !14859
  %and507 = and i32 %380, -16777216, !dbg !14859
  %shr508 = lshr i32 %and507, 24, !dbg !14859
  %or509 = or i32 %or505, %shr508, !dbg !14859
  br label %cond.end513, !dbg !14859

cond.false510:                                    ; preds = %cond.false492
  %381 = load i8*, i8** %misc, align 8, !dbg !14859
  %382 = bitcast i8* %381 to i32*, !dbg !14859
  %add.ptr511 = getelementptr i32, i32* %382, i64 1, !dbg !14859
  %383 = load i32, i32* %add.ptr511, align 4, !dbg !14859
  %call512 = call i32 @__fswab32(i32 %383) #10, !dbg !14859
  br label %cond.end513, !dbg !14859

cond.end513:                                      ; preds = %cond.false510, %cond.true494
  %cond514 = phi i32 [ %or509, %cond.true494 ], [ %call512, %cond.false510 ], !dbg !14859
  %and515 = and i32 %cond514, -65536, !dbg !14859
  %384 = load i32, i32* %_v344, align 4, !dbg !14859
  %and516 = and i32 %384, 65535, !dbg !14859
  %shl517 = shl i32 %and516, 0, !dbg !14859
  %or518 = or i32 %and515, %shl517, !dbg !14859
  %call519 = call i32 @__fswab32(i32 %or518) #10, !dbg !14859
  br label %cond.end520, !dbg !14859

cond.end520:                                      ; preds = %cond.end513, %cond.end483
  %cond521 = phi i32 [ %or491, %cond.end483 ], [ %call519, %cond.end513 ], !dbg !14859
  %385 = load i8*, i8** %misc, align 8, !dbg !14859
  %386 = bitcast i8* %385 to i32*, !dbg !14859
  %add.ptr522 = getelementptr i32, i32* %386, i64 1, !dbg !14859
  store i32 %cond521, i32* %add.ptr522, align 4, !dbg !14859
  br label %do.end523, !dbg !14859

do.end523:                                        ; preds = %cond.end520
  %387 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !14862
  %dev = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %387, i32 0, i32 0, !dbg !14862
  %388 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !14862
  %caps = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %388, i32 0, i32 9, !dbg !14862
  %hca_cur = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps, i32 0, i32 0, !dbg !14862
  %arrayidx = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur, i64 0, i64 9, !dbg !14862
  %arraydecay524 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx, i64 0, i64 0, !dbg !14862
  %add.ptr525 = getelementptr i32, i32* %arraydecay524, i64 0, !dbg !14862
  %389 = load i32, i32* %add.ptr525, align 4, !dbg !14862
  %390 = call i1 @llvm.is.constant.i32(i32 %389), !dbg !14862
  br i1 %390, label %cond.true526, label %cond.false562, !dbg !14862

cond.true526:                                     ; preds = %do.end523
  %391 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !14862
  %dev527 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %391, i32 0, i32 0, !dbg !14862
  %392 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev527, align 8, !dbg !14862
  %caps528 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %392, i32 0, i32 9, !dbg !14862
  %hca_cur529 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps528, i32 0, i32 0, !dbg !14862
  %arrayidx530 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur529, i64 0, i64 9, !dbg !14862
  %arraydecay531 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx530, i64 0, i64 0, !dbg !14862
  %add.ptr532 = getelementptr i32, i32* %arraydecay531, i64 0, !dbg !14862
  %393 = load i32, i32* %add.ptr532, align 4, !dbg !14862
  %and533 = and i32 %393, 255, !dbg !14862
  %shl534 = shl i32 %and533, 24, !dbg !14862
  %394 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !14862
  %dev535 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %394, i32 0, i32 0, !dbg !14862
  %395 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev535, align 8, !dbg !14862
  %caps536 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %395, i32 0, i32 9, !dbg !14862
  %hca_cur537 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps536, i32 0, i32 0, !dbg !14862
  %arrayidx538 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur537, i64 0, i64 9, !dbg !14862
  %arraydecay539 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx538, i64 0, i64 0, !dbg !14862
  %add.ptr540 = getelementptr i32, i32* %arraydecay539, i64 0, !dbg !14862
  %396 = load i32, i32* %add.ptr540, align 4, !dbg !14862
  %and541 = and i32 %396, 65280, !dbg !14862
  %shl542 = shl i32 %and541, 8, !dbg !14862
  %or543 = or i32 %shl534, %shl542, !dbg !14862
  %397 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !14862
  %dev544 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %397, i32 0, i32 0, !dbg !14862
  %398 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev544, align 8, !dbg !14862
  %caps545 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %398, i32 0, i32 9, !dbg !14862
  %hca_cur546 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps545, i32 0, i32 0, !dbg !14862
  %arrayidx547 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur546, i64 0, i64 9, !dbg !14862
  %arraydecay548 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx547, i64 0, i64 0, !dbg !14862
  %add.ptr549 = getelementptr i32, i32* %arraydecay548, i64 0, !dbg !14862
  %399 = load i32, i32* %add.ptr549, align 4, !dbg !14862
  %and550 = and i32 %399, 16711680, !dbg !14862
  %shr551 = lshr i32 %and550, 8, !dbg !14862
  %or552 = or i32 %or543, %shr551, !dbg !14862
  %400 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !14862
  %dev553 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %400, i32 0, i32 0, !dbg !14862
  %401 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev553, align 8, !dbg !14862
  %caps554 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %401, i32 0, i32 9, !dbg !14862
  %hca_cur555 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps554, i32 0, i32 0, !dbg !14862
  %arrayidx556 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur555, i64 0, i64 9, !dbg !14862
  %arraydecay557 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx556, i64 0, i64 0, !dbg !14862
  %add.ptr558 = getelementptr i32, i32* %arraydecay557, i64 0, !dbg !14862
  %402 = load i32, i32* %add.ptr558, align 4, !dbg !14862
  %and559 = and i32 %402, -16777216, !dbg !14862
  %shr560 = lshr i32 %and559, 24, !dbg !14862
  %or561 = or i32 %or552, %shr560, !dbg !14862
  br label %cond.end570, !dbg !14862

cond.false562:                                    ; preds = %do.end523
  %403 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !14862
  %dev563 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %403, i32 0, i32 0, !dbg !14862
  %404 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev563, align 8, !dbg !14862
  %caps564 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %404, i32 0, i32 9, !dbg !14862
  %hca_cur565 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps564, i32 0, i32 0, !dbg !14862
  %arrayidx566 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur565, i64 0, i64 9, !dbg !14862
  %arraydecay567 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx566, i64 0, i64 0, !dbg !14862
  %add.ptr568 = getelementptr i32, i32* %arraydecay567, i64 0, !dbg !14862
  %405 = load i32, i32* %add.ptr568, align 4, !dbg !14862
  %call569 = call i32 @__fswab32(i32 %405) #10, !dbg !14862
  br label %cond.end570, !dbg !14862

cond.end570:                                      ; preds = %cond.false562, %cond.true526
  %cond571 = phi i32 [ %or561, %cond.true526 ], [ %call569, %cond.false562 ], !dbg !14862
  %shr572 = lshr i32 %cond571, 2, !dbg !14862
  %and573 = and i32 %shr572, 1, !dbg !14862
  %tobool = icmp ne i32 %and573, 0, !dbg !14862
  br i1 %tobool, label %if.then574, label %if.end, !dbg !14864

if.then574:                                       ; preds = %cond.end570
  br label %do.body575, !dbg !14865

do.body575:                                       ; preds = %if.then574
  call void @llvm.dbg.declare(metadata i32* %_v576, metadata !14866, metadata !DIExpression()), !dbg !14868
  %406 = load %struct.mlx5_esw_flow_attr*, %struct.mlx5_esw_flow_attr** %attr.addr, align 8, !dbg !14868
  %in_mdev577 = getelementptr inbounds %struct.mlx5_esw_flow_attr, %struct.mlx5_esw_flow_attr* %406, i32 0, i32 1, !dbg !14868
  %407 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %in_mdev577, align 8, !dbg !14868
  %caps578 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %407, i32 0, i32 9, !dbg !14868
  %hca_cur579 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps578, i32 0, i32 0, !dbg !14868
  %arrayidx580 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur579, i64 0, i64 0, !dbg !14868
  %arraydecay581 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx580, i64 0, i64 0, !dbg !14868
  %add.ptr582 = getelementptr i32, i32* %arraydecay581, i64 1, !dbg !14868
  %408 = load i32, i32* %add.ptr582, align 4, !dbg !14868
  %409 = call i1 @llvm.is.constant.i32(i32 %408), !dbg !14868
  br i1 %409, label %cond.true583, label %cond.false619, !dbg !14868

cond.true583:                                     ; preds = %do.body575
  %410 = load %struct.mlx5_esw_flow_attr*, %struct.mlx5_esw_flow_attr** %attr.addr, align 8, !dbg !14868
  %in_mdev584 = getelementptr inbounds %struct.mlx5_esw_flow_attr, %struct.mlx5_esw_flow_attr* %410, i32 0, i32 1, !dbg !14868
  %411 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %in_mdev584, align 8, !dbg !14868
  %caps585 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %411, i32 0, i32 9, !dbg !14868
  %hca_cur586 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps585, i32 0, i32 0, !dbg !14868
  %arrayidx587 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur586, i64 0, i64 0, !dbg !14868
  %arraydecay588 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx587, i64 0, i64 0, !dbg !14868
  %add.ptr589 = getelementptr i32, i32* %arraydecay588, i64 1, !dbg !14868
  %412 = load i32, i32* %add.ptr589, align 4, !dbg !14868
  %and590 = and i32 %412, 255, !dbg !14868
  %shl591 = shl i32 %and590, 24, !dbg !14868
  %413 = load %struct.mlx5_esw_flow_attr*, %struct.mlx5_esw_flow_attr** %attr.addr, align 8, !dbg !14868
  %in_mdev592 = getelementptr inbounds %struct.mlx5_esw_flow_attr, %struct.mlx5_esw_flow_attr* %413, i32 0, i32 1, !dbg !14868
  %414 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %in_mdev592, align 8, !dbg !14868
  %caps593 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %414, i32 0, i32 9, !dbg !14868
  %hca_cur594 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps593, i32 0, i32 0, !dbg !14868
  %arrayidx595 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur594, i64 0, i64 0, !dbg !14868
  %arraydecay596 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx595, i64 0, i64 0, !dbg !14868
  %add.ptr597 = getelementptr i32, i32* %arraydecay596, i64 1, !dbg !14868
  %415 = load i32, i32* %add.ptr597, align 4, !dbg !14868
  %and598 = and i32 %415, 65280, !dbg !14868
  %shl599 = shl i32 %and598, 8, !dbg !14868
  %or600 = or i32 %shl591, %shl599, !dbg !14868
  %416 = load %struct.mlx5_esw_flow_attr*, %struct.mlx5_esw_flow_attr** %attr.addr, align 8, !dbg !14868
  %in_mdev601 = getelementptr inbounds %struct.mlx5_esw_flow_attr, %struct.mlx5_esw_flow_attr* %416, i32 0, i32 1, !dbg !14868
  %417 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %in_mdev601, align 8, !dbg !14868
  %caps602 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %417, i32 0, i32 9, !dbg !14868
  %hca_cur603 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps602, i32 0, i32 0, !dbg !14868
  %arrayidx604 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur603, i64 0, i64 0, !dbg !14868
  %arraydecay605 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx604, i64 0, i64 0, !dbg !14868
  %add.ptr606 = getelementptr i32, i32* %arraydecay605, i64 1, !dbg !14868
  %418 = load i32, i32* %add.ptr606, align 4, !dbg !14868
  %and607 = and i32 %418, 16711680, !dbg !14868
  %shr608 = lshr i32 %and607, 8, !dbg !14868
  %or609 = or i32 %or600, %shr608, !dbg !14868
  %419 = load %struct.mlx5_esw_flow_attr*, %struct.mlx5_esw_flow_attr** %attr.addr, align 8, !dbg !14868
  %in_mdev610 = getelementptr inbounds %struct.mlx5_esw_flow_attr, %struct.mlx5_esw_flow_attr* %419, i32 0, i32 1, !dbg !14868
  %420 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %in_mdev610, align 8, !dbg !14868
  %caps611 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %420, i32 0, i32 9, !dbg !14868
  %hca_cur612 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps611, i32 0, i32 0, !dbg !14868
  %arrayidx613 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur612, i64 0, i64 0, !dbg !14868
  %arraydecay614 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx613, i64 0, i64 0, !dbg !14868
  %add.ptr615 = getelementptr i32, i32* %arraydecay614, i64 1, !dbg !14868
  %421 = load i32, i32* %add.ptr615, align 4, !dbg !14868
  %and616 = and i32 %421, -16777216, !dbg !14868
  %shr617 = lshr i32 %and616, 24, !dbg !14868
  %or618 = or i32 %or609, %shr617, !dbg !14868
  br label %cond.end627, !dbg !14868

cond.false619:                                    ; preds = %do.body575
  %422 = load %struct.mlx5_esw_flow_attr*, %struct.mlx5_esw_flow_attr** %attr.addr, align 8, !dbg !14868
  %in_mdev620 = getelementptr inbounds %struct.mlx5_esw_flow_attr, %struct.mlx5_esw_flow_attr* %422, i32 0, i32 1, !dbg !14868
  %423 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %in_mdev620, align 8, !dbg !14868
  %caps621 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %423, i32 0, i32 9, !dbg !14868
  %hca_cur622 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps621, i32 0, i32 0, !dbg !14868
  %arrayidx623 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur622, i64 0, i64 0, !dbg !14868
  %arraydecay624 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx623, i64 0, i64 0, !dbg !14868
  %add.ptr625 = getelementptr i32, i32* %arraydecay624, i64 1, !dbg !14868
  %424 = load i32, i32* %add.ptr625, align 4, !dbg !14868
  %call626 = call i32 @__fswab32(i32 %424) #10, !dbg !14868
  br label %cond.end627, !dbg !14868

cond.end627:                                      ; preds = %cond.false619, %cond.true583
  %cond628 = phi i32 [ %or618, %cond.true583 ], [ %call626, %cond.false619 ], !dbg !14868
  %shr629 = lshr i32 %cond628, 0, !dbg !14868
  %and630 = and i32 %shr629, 65535, !dbg !14868
  store i32 %and630, i32* %_v576, align 4, !dbg !14868
  br label %do.body631, !dbg !14868

do.body631:                                       ; preds = %cond.end627
  br label %do.end632, !dbg !14869

do.end632:                                        ; preds = %do.body631
  %425 = load i8*, i8** %misc, align 8, !dbg !14868
  %426 = bitcast i8* %425 to i32*, !dbg !14868
  %add.ptr633 = getelementptr i32, i32* %426, i64 1, !dbg !14868
  %427 = load i32, i32* %add.ptr633, align 4, !dbg !14868
  %428 = call i1 @llvm.is.constant.i32(i32 %427), !dbg !14868
  br i1 %428, label %cond.true634, label %cond.false650, !dbg !14868

cond.true634:                                     ; preds = %do.end632
  %429 = load i8*, i8** %misc, align 8, !dbg !14868
  %430 = bitcast i8* %429 to i32*, !dbg !14868
  %add.ptr635 = getelementptr i32, i32* %430, i64 1, !dbg !14868
  %431 = load i32, i32* %add.ptr635, align 4, !dbg !14868
  %and636 = and i32 %431, 255, !dbg !14868
  %shl637 = shl i32 %and636, 24, !dbg !14868
  %432 = load i8*, i8** %misc, align 8, !dbg !14868
  %433 = bitcast i8* %432 to i32*, !dbg !14868
  %add.ptr638 = getelementptr i32, i32* %433, i64 1, !dbg !14868
  %434 = load i32, i32* %add.ptr638, align 4, !dbg !14868
  %and639 = and i32 %434, 65280, !dbg !14868
  %shl640 = shl i32 %and639, 8, !dbg !14868
  %or641 = or i32 %shl637, %shl640, !dbg !14868
  %435 = load i8*, i8** %misc, align 8, !dbg !14868
  %436 = bitcast i8* %435 to i32*, !dbg !14868
  %add.ptr642 = getelementptr i32, i32* %436, i64 1, !dbg !14868
  %437 = load i32, i32* %add.ptr642, align 4, !dbg !14868
  %and643 = and i32 %437, 16711680, !dbg !14868
  %shr644 = lshr i32 %and643, 8, !dbg !14868
  %or645 = or i32 %or641, %shr644, !dbg !14868
  %438 = load i8*, i8** %misc, align 8, !dbg !14868
  %439 = bitcast i8* %438 to i32*, !dbg !14868
  %add.ptr646 = getelementptr i32, i32* %439, i64 1, !dbg !14868
  %440 = load i32, i32* %add.ptr646, align 4, !dbg !14868
  %and647 = and i32 %440, -16777216, !dbg !14868
  %shr648 = lshr i32 %and647, 24, !dbg !14868
  %or649 = or i32 %or645, %shr648, !dbg !14868
  br label %cond.end653, !dbg !14868

cond.false650:                                    ; preds = %do.end632
  %441 = load i8*, i8** %misc, align 8, !dbg !14868
  %442 = bitcast i8* %441 to i32*, !dbg !14868
  %add.ptr651 = getelementptr i32, i32* %442, i64 1, !dbg !14868
  %443 = load i32, i32* %add.ptr651, align 4, !dbg !14868
  %call652 = call i32 @__fswab32(i32 %443) #10, !dbg !14868
  br label %cond.end653, !dbg !14868

cond.end653:                                      ; preds = %cond.false650, %cond.true634
  %cond654 = phi i32 [ %or649, %cond.true634 ], [ %call652, %cond.false650 ], !dbg !14868
  %and655 = and i32 %cond654, 65535, !dbg !14868
  %444 = load i32, i32* %_v576, align 4, !dbg !14868
  %and656 = and i32 %444, 65535, !dbg !14868
  %shl657 = shl i32 %and656, 16, !dbg !14868
  %or658 = or i32 %and655, %shl657, !dbg !14868
  %445 = call i1 @llvm.is.constant.i32(i32 %or658), !dbg !14868
  br i1 %445, label %cond.true659, label %cond.false775, !dbg !14868

cond.true659:                                     ; preds = %cond.end653
  %446 = load i8*, i8** %misc, align 8, !dbg !14868
  %447 = bitcast i8* %446 to i32*, !dbg !14868
  %add.ptr660 = getelementptr i32, i32* %447, i64 1, !dbg !14868
  %448 = load i32, i32* %add.ptr660, align 4, !dbg !14868
  %449 = call i1 @llvm.is.constant.i32(i32 %448), !dbg !14868
  br i1 %449, label %cond.true661, label %cond.false677, !dbg !14868

cond.true661:                                     ; preds = %cond.true659
  %450 = load i8*, i8** %misc, align 8, !dbg !14868
  %451 = bitcast i8* %450 to i32*, !dbg !14868
  %add.ptr662 = getelementptr i32, i32* %451, i64 1, !dbg !14868
  %452 = load i32, i32* %add.ptr662, align 4, !dbg !14868
  %and663 = and i32 %452, 255, !dbg !14868
  %shl664 = shl i32 %and663, 24, !dbg !14868
  %453 = load i8*, i8** %misc, align 8, !dbg !14868
  %454 = bitcast i8* %453 to i32*, !dbg !14868
  %add.ptr665 = getelementptr i32, i32* %454, i64 1, !dbg !14868
  %455 = load i32, i32* %add.ptr665, align 4, !dbg !14868
  %and666 = and i32 %455, 65280, !dbg !14868
  %shl667 = shl i32 %and666, 8, !dbg !14868
  %or668 = or i32 %shl664, %shl667, !dbg !14868
  %456 = load i8*, i8** %misc, align 8, !dbg !14868
  %457 = bitcast i8* %456 to i32*, !dbg !14868
  %add.ptr669 = getelementptr i32, i32* %457, i64 1, !dbg !14868
  %458 = load i32, i32* %add.ptr669, align 4, !dbg !14868
  %and670 = and i32 %458, 16711680, !dbg !14868
  %shr671 = lshr i32 %and670, 8, !dbg !14868
  %or672 = or i32 %or668, %shr671, !dbg !14868
  %459 = load i8*, i8** %misc, align 8, !dbg !14868
  %460 = bitcast i8* %459 to i32*, !dbg !14868
  %add.ptr673 = getelementptr i32, i32* %460, i64 1, !dbg !14868
  %461 = load i32, i32* %add.ptr673, align 4, !dbg !14868
  %and674 = and i32 %461, -16777216, !dbg !14868
  %shr675 = lshr i32 %and674, 24, !dbg !14868
  %or676 = or i32 %or672, %shr675, !dbg !14868
  br label %cond.end680, !dbg !14868

cond.false677:                                    ; preds = %cond.true659
  %462 = load i8*, i8** %misc, align 8, !dbg !14868
  %463 = bitcast i8* %462 to i32*, !dbg !14868
  %add.ptr678 = getelementptr i32, i32* %463, i64 1, !dbg !14868
  %464 = load i32, i32* %add.ptr678, align 4, !dbg !14868
  %call679 = call i32 @__fswab32(i32 %464) #10, !dbg !14868
  br label %cond.end680, !dbg !14868

cond.end680:                                      ; preds = %cond.false677, %cond.true661
  %cond681 = phi i32 [ %or676, %cond.true661 ], [ %call679, %cond.false677 ], !dbg !14868
  %and682 = and i32 %cond681, 65535, !dbg !14868
  %465 = load i32, i32* %_v576, align 4, !dbg !14868
  %and683 = and i32 %465, 65535, !dbg !14868
  %shl684 = shl i32 %and683, 16, !dbg !14868
  %or685 = or i32 %and682, %shl684, !dbg !14868
  %and686 = and i32 %or685, 255, !dbg !14868
  %shl687 = shl i32 %and686, 24, !dbg !14868
  %466 = load i8*, i8** %misc, align 8, !dbg !14868
  %467 = bitcast i8* %466 to i32*, !dbg !14868
  %add.ptr688 = getelementptr i32, i32* %467, i64 1, !dbg !14868
  %468 = load i32, i32* %add.ptr688, align 4, !dbg !14868
  %469 = call i1 @llvm.is.constant.i32(i32 %468), !dbg !14868
  br i1 %469, label %cond.true689, label %cond.false705, !dbg !14868

cond.true689:                                     ; preds = %cond.end680
  %470 = load i8*, i8** %misc, align 8, !dbg !14868
  %471 = bitcast i8* %470 to i32*, !dbg !14868
  %add.ptr690 = getelementptr i32, i32* %471, i64 1, !dbg !14868
  %472 = load i32, i32* %add.ptr690, align 4, !dbg !14868
  %and691 = and i32 %472, 255, !dbg !14868
  %shl692 = shl i32 %and691, 24, !dbg !14868
  %473 = load i8*, i8** %misc, align 8, !dbg !14868
  %474 = bitcast i8* %473 to i32*, !dbg !14868
  %add.ptr693 = getelementptr i32, i32* %474, i64 1, !dbg !14868
  %475 = load i32, i32* %add.ptr693, align 4, !dbg !14868
  %and694 = and i32 %475, 65280, !dbg !14868
  %shl695 = shl i32 %and694, 8, !dbg !14868
  %or696 = or i32 %shl692, %shl695, !dbg !14868
  %476 = load i8*, i8** %misc, align 8, !dbg !14868
  %477 = bitcast i8* %476 to i32*, !dbg !14868
  %add.ptr697 = getelementptr i32, i32* %477, i64 1, !dbg !14868
  %478 = load i32, i32* %add.ptr697, align 4, !dbg !14868
  %and698 = and i32 %478, 16711680, !dbg !14868
  %shr699 = lshr i32 %and698, 8, !dbg !14868
  %or700 = or i32 %or696, %shr699, !dbg !14868
  %479 = load i8*, i8** %misc, align 8, !dbg !14868
  %480 = bitcast i8* %479 to i32*, !dbg !14868
  %add.ptr701 = getelementptr i32, i32* %480, i64 1, !dbg !14868
  %481 = load i32, i32* %add.ptr701, align 4, !dbg !14868
  %and702 = and i32 %481, -16777216, !dbg !14868
  %shr703 = lshr i32 %and702, 24, !dbg !14868
  %or704 = or i32 %or700, %shr703, !dbg !14868
  br label %cond.end708, !dbg !14868

cond.false705:                                    ; preds = %cond.end680
  %482 = load i8*, i8** %misc, align 8, !dbg !14868
  %483 = bitcast i8* %482 to i32*, !dbg !14868
  %add.ptr706 = getelementptr i32, i32* %483, i64 1, !dbg !14868
  %484 = load i32, i32* %add.ptr706, align 4, !dbg !14868
  %call707 = call i32 @__fswab32(i32 %484) #10, !dbg !14868
  br label %cond.end708, !dbg !14868

cond.end708:                                      ; preds = %cond.false705, %cond.true689
  %cond709 = phi i32 [ %or704, %cond.true689 ], [ %call707, %cond.false705 ], !dbg !14868
  %and710 = and i32 %cond709, 65535, !dbg !14868
  %485 = load i32, i32* %_v576, align 4, !dbg !14868
  %and711 = and i32 %485, 65535, !dbg !14868
  %shl712 = shl i32 %and711, 16, !dbg !14868
  %or713 = or i32 %and710, %shl712, !dbg !14868
  %and714 = and i32 %or713, 65280, !dbg !14868
  %shl715 = shl i32 %and714, 8, !dbg !14868
  %or716 = or i32 %shl687, %shl715, !dbg !14868
  %486 = load i8*, i8** %misc, align 8, !dbg !14868
  %487 = bitcast i8* %486 to i32*, !dbg !14868
  %add.ptr717 = getelementptr i32, i32* %487, i64 1, !dbg !14868
  %488 = load i32, i32* %add.ptr717, align 4, !dbg !14868
  %489 = call i1 @llvm.is.constant.i32(i32 %488), !dbg !14868
  br i1 %489, label %cond.true718, label %cond.false734, !dbg !14868

cond.true718:                                     ; preds = %cond.end708
  %490 = load i8*, i8** %misc, align 8, !dbg !14868
  %491 = bitcast i8* %490 to i32*, !dbg !14868
  %add.ptr719 = getelementptr i32, i32* %491, i64 1, !dbg !14868
  %492 = load i32, i32* %add.ptr719, align 4, !dbg !14868
  %and720 = and i32 %492, 255, !dbg !14868
  %shl721 = shl i32 %and720, 24, !dbg !14868
  %493 = load i8*, i8** %misc, align 8, !dbg !14868
  %494 = bitcast i8* %493 to i32*, !dbg !14868
  %add.ptr722 = getelementptr i32, i32* %494, i64 1, !dbg !14868
  %495 = load i32, i32* %add.ptr722, align 4, !dbg !14868
  %and723 = and i32 %495, 65280, !dbg !14868
  %shl724 = shl i32 %and723, 8, !dbg !14868
  %or725 = or i32 %shl721, %shl724, !dbg !14868
  %496 = load i8*, i8** %misc, align 8, !dbg !14868
  %497 = bitcast i8* %496 to i32*, !dbg !14868
  %add.ptr726 = getelementptr i32, i32* %497, i64 1, !dbg !14868
  %498 = load i32, i32* %add.ptr726, align 4, !dbg !14868
  %and727 = and i32 %498, 16711680, !dbg !14868
  %shr728 = lshr i32 %and727, 8, !dbg !14868
  %or729 = or i32 %or725, %shr728, !dbg !14868
  %499 = load i8*, i8** %misc, align 8, !dbg !14868
  %500 = bitcast i8* %499 to i32*, !dbg !14868
  %add.ptr730 = getelementptr i32, i32* %500, i64 1, !dbg !14868
  %501 = load i32, i32* %add.ptr730, align 4, !dbg !14868
  %and731 = and i32 %501, -16777216, !dbg !14868
  %shr732 = lshr i32 %and731, 24, !dbg !14868
  %or733 = or i32 %or729, %shr732, !dbg !14868
  br label %cond.end737, !dbg !14868

cond.false734:                                    ; preds = %cond.end708
  %502 = load i8*, i8** %misc, align 8, !dbg !14868
  %503 = bitcast i8* %502 to i32*, !dbg !14868
  %add.ptr735 = getelementptr i32, i32* %503, i64 1, !dbg !14868
  %504 = load i32, i32* %add.ptr735, align 4, !dbg !14868
  %call736 = call i32 @__fswab32(i32 %504) #10, !dbg !14868
  br label %cond.end737, !dbg !14868

cond.end737:                                      ; preds = %cond.false734, %cond.true718
  %cond738 = phi i32 [ %or733, %cond.true718 ], [ %call736, %cond.false734 ], !dbg !14868
  %and739 = and i32 %cond738, 65535, !dbg !14868
  %505 = load i32, i32* %_v576, align 4, !dbg !14868
  %and740 = and i32 %505, 65535, !dbg !14868
  %shl741 = shl i32 %and740, 16, !dbg !14868
  %or742 = or i32 %and739, %shl741, !dbg !14868
  %and743 = and i32 %or742, 16711680, !dbg !14868
  %shr744 = lshr i32 %and743, 8, !dbg !14868
  %or745 = or i32 %or716, %shr744, !dbg !14868
  %506 = load i8*, i8** %misc, align 8, !dbg !14868
  %507 = bitcast i8* %506 to i32*, !dbg !14868
  %add.ptr746 = getelementptr i32, i32* %507, i64 1, !dbg !14868
  %508 = load i32, i32* %add.ptr746, align 4, !dbg !14868
  %509 = call i1 @llvm.is.constant.i32(i32 %508), !dbg !14868
  br i1 %509, label %cond.true747, label %cond.false763, !dbg !14868

cond.true747:                                     ; preds = %cond.end737
  %510 = load i8*, i8** %misc, align 8, !dbg !14868
  %511 = bitcast i8* %510 to i32*, !dbg !14868
  %add.ptr748 = getelementptr i32, i32* %511, i64 1, !dbg !14868
  %512 = load i32, i32* %add.ptr748, align 4, !dbg !14868
  %and749 = and i32 %512, 255, !dbg !14868
  %shl750 = shl i32 %and749, 24, !dbg !14868
  %513 = load i8*, i8** %misc, align 8, !dbg !14868
  %514 = bitcast i8* %513 to i32*, !dbg !14868
  %add.ptr751 = getelementptr i32, i32* %514, i64 1, !dbg !14868
  %515 = load i32, i32* %add.ptr751, align 4, !dbg !14868
  %and752 = and i32 %515, 65280, !dbg !14868
  %shl753 = shl i32 %and752, 8, !dbg !14868
  %or754 = or i32 %shl750, %shl753, !dbg !14868
  %516 = load i8*, i8** %misc, align 8, !dbg !14868
  %517 = bitcast i8* %516 to i32*, !dbg !14868
  %add.ptr755 = getelementptr i32, i32* %517, i64 1, !dbg !14868
  %518 = load i32, i32* %add.ptr755, align 4, !dbg !14868
  %and756 = and i32 %518, 16711680, !dbg !14868
  %shr757 = lshr i32 %and756, 8, !dbg !14868
  %or758 = or i32 %or754, %shr757, !dbg !14868
  %519 = load i8*, i8** %misc, align 8, !dbg !14868
  %520 = bitcast i8* %519 to i32*, !dbg !14868
  %add.ptr759 = getelementptr i32, i32* %520, i64 1, !dbg !14868
  %521 = load i32, i32* %add.ptr759, align 4, !dbg !14868
  %and760 = and i32 %521, -16777216, !dbg !14868
  %shr761 = lshr i32 %and760, 24, !dbg !14868
  %or762 = or i32 %or758, %shr761, !dbg !14868
  br label %cond.end766, !dbg !14868

cond.false763:                                    ; preds = %cond.end737
  %522 = load i8*, i8** %misc, align 8, !dbg !14868
  %523 = bitcast i8* %522 to i32*, !dbg !14868
  %add.ptr764 = getelementptr i32, i32* %523, i64 1, !dbg !14868
  %524 = load i32, i32* %add.ptr764, align 4, !dbg !14868
  %call765 = call i32 @__fswab32(i32 %524) #10, !dbg !14868
  br label %cond.end766, !dbg !14868

cond.end766:                                      ; preds = %cond.false763, %cond.true747
  %cond767 = phi i32 [ %or762, %cond.true747 ], [ %call765, %cond.false763 ], !dbg !14868
  %and768 = and i32 %cond767, 65535, !dbg !14868
  %525 = load i32, i32* %_v576, align 4, !dbg !14868
  %and769 = and i32 %525, 65535, !dbg !14868
  %shl770 = shl i32 %and769, 16, !dbg !14868
  %or771 = or i32 %and768, %shl770, !dbg !14868
  %and772 = and i32 %or771, -16777216, !dbg !14868
  %shr773 = lshr i32 %and772, 24, !dbg !14868
  %or774 = or i32 %or745, %shr773, !dbg !14868
  br label %cond.end803, !dbg !14868

cond.false775:                                    ; preds = %cond.end653
  %526 = load i8*, i8** %misc, align 8, !dbg !14868
  %527 = bitcast i8* %526 to i32*, !dbg !14868
  %add.ptr776 = getelementptr i32, i32* %527, i64 1, !dbg !14868
  %528 = load i32, i32* %add.ptr776, align 4, !dbg !14868
  %529 = call i1 @llvm.is.constant.i32(i32 %528), !dbg !14868
  br i1 %529, label %cond.true777, label %cond.false793, !dbg !14868

cond.true777:                                     ; preds = %cond.false775
  %530 = load i8*, i8** %misc, align 8, !dbg !14868
  %531 = bitcast i8* %530 to i32*, !dbg !14868
  %add.ptr778 = getelementptr i32, i32* %531, i64 1, !dbg !14868
  %532 = load i32, i32* %add.ptr778, align 4, !dbg !14868
  %and779 = and i32 %532, 255, !dbg !14868
  %shl780 = shl i32 %and779, 24, !dbg !14868
  %533 = load i8*, i8** %misc, align 8, !dbg !14868
  %534 = bitcast i8* %533 to i32*, !dbg !14868
  %add.ptr781 = getelementptr i32, i32* %534, i64 1, !dbg !14868
  %535 = load i32, i32* %add.ptr781, align 4, !dbg !14868
  %and782 = and i32 %535, 65280, !dbg !14868
  %shl783 = shl i32 %and782, 8, !dbg !14868
  %or784 = or i32 %shl780, %shl783, !dbg !14868
  %536 = load i8*, i8** %misc, align 8, !dbg !14868
  %537 = bitcast i8* %536 to i32*, !dbg !14868
  %add.ptr785 = getelementptr i32, i32* %537, i64 1, !dbg !14868
  %538 = load i32, i32* %add.ptr785, align 4, !dbg !14868
  %and786 = and i32 %538, 16711680, !dbg !14868
  %shr787 = lshr i32 %and786, 8, !dbg !14868
  %or788 = or i32 %or784, %shr787, !dbg !14868
  %539 = load i8*, i8** %misc, align 8, !dbg !14868
  %540 = bitcast i8* %539 to i32*, !dbg !14868
  %add.ptr789 = getelementptr i32, i32* %540, i64 1, !dbg !14868
  %541 = load i32, i32* %add.ptr789, align 4, !dbg !14868
  %and790 = and i32 %541, -16777216, !dbg !14868
  %shr791 = lshr i32 %and790, 24, !dbg !14868
  %or792 = or i32 %or788, %shr791, !dbg !14868
  br label %cond.end796, !dbg !14868

cond.false793:                                    ; preds = %cond.false775
  %542 = load i8*, i8** %misc, align 8, !dbg !14868
  %543 = bitcast i8* %542 to i32*, !dbg !14868
  %add.ptr794 = getelementptr i32, i32* %543, i64 1, !dbg !14868
  %544 = load i32, i32* %add.ptr794, align 4, !dbg !14868
  %call795 = call i32 @__fswab32(i32 %544) #10, !dbg !14868
  br label %cond.end796, !dbg !14868

cond.end796:                                      ; preds = %cond.false793, %cond.true777
  %cond797 = phi i32 [ %or792, %cond.true777 ], [ %call795, %cond.false793 ], !dbg !14868
  %and798 = and i32 %cond797, 65535, !dbg !14868
  %545 = load i32, i32* %_v576, align 4, !dbg !14868
  %and799 = and i32 %545, 65535, !dbg !14868
  %shl800 = shl i32 %and799, 16, !dbg !14868
  %or801 = or i32 %and798, %shl800, !dbg !14868
  %call802 = call i32 @__fswab32(i32 %or801) #10, !dbg !14868
  br label %cond.end803, !dbg !14868

cond.end803:                                      ; preds = %cond.end796, %cond.end766
  %cond804 = phi i32 [ %or774, %cond.end766 ], [ %call802, %cond.end796 ], !dbg !14868
  %546 = load i8*, i8** %misc, align 8, !dbg !14868
  %547 = bitcast i8* %546 to i32*, !dbg !14868
  %add.ptr805 = getelementptr i32, i32* %547, i64 1, !dbg !14868
  store i32 %cond804, i32* %add.ptr805, align 4, !dbg !14868
  br label %do.end806, !dbg !14868

do.end806:                                        ; preds = %cond.end803
  br label %if.end, !dbg !14868

if.end:                                           ; preds = %do.end806, %cond.end570
  %548 = load %struct.mlx5_flow_spec*, %struct.mlx5_flow_spec** %spec.addr, align 8, !dbg !14871
  %match_criteria807 = getelementptr inbounds %struct.mlx5_flow_spec, %struct.mlx5_flow_spec* %548, i32 0, i32 1, !dbg !14871
  %arraydecay808 = getelementptr inbounds [128 x i32], [128 x i32]* %match_criteria807, i64 0, i64 0, !dbg !14871
  %549 = bitcast i32* %arraydecay808 to i8*, !dbg !14871
  %add.ptr809 = getelementptr i8, i8* %549, i64 64, !dbg !14871
  store i8* %add.ptr809, i8** %misc, align 8, !dbg !14872
  br label %do.body810, !dbg !14873

do.body810:                                       ; preds = %if.end
  br label %do.body811, !dbg !14874

do.body811:                                       ; preds = %do.body810
  br label %do.end812, !dbg !14876

do.end812:                                        ; preds = %do.body811
  %550 = load i8*, i8** %misc, align 8, !dbg !14874
  %551 = bitcast i8* %550 to i32*, !dbg !14874
  %add.ptr813 = getelementptr i32, i32* %551, i64 1, !dbg !14874
  %552 = load i32, i32* %add.ptr813, align 4, !dbg !14874
  %553 = call i1 @llvm.is.constant.i32(i32 %552), !dbg !14874
  br i1 %553, label %cond.true814, label %cond.false830, !dbg !14874

cond.true814:                                     ; preds = %do.end812
  %554 = load i8*, i8** %misc, align 8, !dbg !14874
  %555 = bitcast i8* %554 to i32*, !dbg !14874
  %add.ptr815 = getelementptr i32, i32* %555, i64 1, !dbg !14874
  %556 = load i32, i32* %add.ptr815, align 4, !dbg !14874
  %and816 = and i32 %556, 255, !dbg !14874
  %shl817 = shl i32 %and816, 24, !dbg !14874
  %557 = load i8*, i8** %misc, align 8, !dbg !14874
  %558 = bitcast i8* %557 to i32*, !dbg !14874
  %add.ptr818 = getelementptr i32, i32* %558, i64 1, !dbg !14874
  %559 = load i32, i32* %add.ptr818, align 4, !dbg !14874
  %and819 = and i32 %559, 65280, !dbg !14874
  %shl820 = shl i32 %and819, 8, !dbg !14874
  %or821 = or i32 %shl817, %shl820, !dbg !14874
  %560 = load i8*, i8** %misc, align 8, !dbg !14874
  %561 = bitcast i8* %560 to i32*, !dbg !14874
  %add.ptr822 = getelementptr i32, i32* %561, i64 1, !dbg !14874
  %562 = load i32, i32* %add.ptr822, align 4, !dbg !14874
  %and823 = and i32 %562, 16711680, !dbg !14874
  %shr824 = lshr i32 %and823, 8, !dbg !14874
  %or825 = or i32 %or821, %shr824, !dbg !14874
  %563 = load i8*, i8** %misc, align 8, !dbg !14874
  %564 = bitcast i8* %563 to i32*, !dbg !14874
  %add.ptr826 = getelementptr i32, i32* %564, i64 1, !dbg !14874
  %565 = load i32, i32* %add.ptr826, align 4, !dbg !14874
  %and827 = and i32 %565, -16777216, !dbg !14874
  %shr828 = lshr i32 %and827, 24, !dbg !14874
  %or829 = or i32 %or825, %shr828, !dbg !14874
  br label %cond.end833, !dbg !14874

cond.false830:                                    ; preds = %do.end812
  %566 = load i8*, i8** %misc, align 8, !dbg !14874
  %567 = bitcast i8* %566 to i32*, !dbg !14874
  %add.ptr831 = getelementptr i32, i32* %567, i64 1, !dbg !14874
  %568 = load i32, i32* %add.ptr831, align 4, !dbg !14874
  %call832 = call i32 @__fswab32(i32 %568) #10, !dbg !14874
  br label %cond.end833, !dbg !14874

cond.end833:                                      ; preds = %cond.false830, %cond.true814
  %cond834 = phi i32 [ %or829, %cond.true814 ], [ %call832, %cond.false830 ], !dbg !14874
  %and835 = and i32 %cond834, -65536, !dbg !14874
  %or836 = or i32 %and835, 65535, !dbg !14874
  %569 = call i1 @llvm.is.constant.i32(i32 %or836), !dbg !14874
  br i1 %569, label %cond.true837, label %cond.false945, !dbg !14874

cond.true837:                                     ; preds = %cond.end833
  %570 = load i8*, i8** %misc, align 8, !dbg !14874
  %571 = bitcast i8* %570 to i32*, !dbg !14874
  %add.ptr838 = getelementptr i32, i32* %571, i64 1, !dbg !14874
  %572 = load i32, i32* %add.ptr838, align 4, !dbg !14874
  %573 = call i1 @llvm.is.constant.i32(i32 %572), !dbg !14874
  br i1 %573, label %cond.true839, label %cond.false855, !dbg !14874

cond.true839:                                     ; preds = %cond.true837
  %574 = load i8*, i8** %misc, align 8, !dbg !14874
  %575 = bitcast i8* %574 to i32*, !dbg !14874
  %add.ptr840 = getelementptr i32, i32* %575, i64 1, !dbg !14874
  %576 = load i32, i32* %add.ptr840, align 4, !dbg !14874
  %and841 = and i32 %576, 255, !dbg !14874
  %shl842 = shl i32 %and841, 24, !dbg !14874
  %577 = load i8*, i8** %misc, align 8, !dbg !14874
  %578 = bitcast i8* %577 to i32*, !dbg !14874
  %add.ptr843 = getelementptr i32, i32* %578, i64 1, !dbg !14874
  %579 = load i32, i32* %add.ptr843, align 4, !dbg !14874
  %and844 = and i32 %579, 65280, !dbg !14874
  %shl845 = shl i32 %and844, 8, !dbg !14874
  %or846 = or i32 %shl842, %shl845, !dbg !14874
  %580 = load i8*, i8** %misc, align 8, !dbg !14874
  %581 = bitcast i8* %580 to i32*, !dbg !14874
  %add.ptr847 = getelementptr i32, i32* %581, i64 1, !dbg !14874
  %582 = load i32, i32* %add.ptr847, align 4, !dbg !14874
  %and848 = and i32 %582, 16711680, !dbg !14874
  %shr849 = lshr i32 %and848, 8, !dbg !14874
  %or850 = or i32 %or846, %shr849, !dbg !14874
  %583 = load i8*, i8** %misc, align 8, !dbg !14874
  %584 = bitcast i8* %583 to i32*, !dbg !14874
  %add.ptr851 = getelementptr i32, i32* %584, i64 1, !dbg !14874
  %585 = load i32, i32* %add.ptr851, align 4, !dbg !14874
  %and852 = and i32 %585, -16777216, !dbg !14874
  %shr853 = lshr i32 %and852, 24, !dbg !14874
  %or854 = or i32 %or850, %shr853, !dbg !14874
  br label %cond.end858, !dbg !14874

cond.false855:                                    ; preds = %cond.true837
  %586 = load i8*, i8** %misc, align 8, !dbg !14874
  %587 = bitcast i8* %586 to i32*, !dbg !14874
  %add.ptr856 = getelementptr i32, i32* %587, i64 1, !dbg !14874
  %588 = load i32, i32* %add.ptr856, align 4, !dbg !14874
  %call857 = call i32 @__fswab32(i32 %588) #10, !dbg !14874
  br label %cond.end858, !dbg !14874

cond.end858:                                      ; preds = %cond.false855, %cond.true839
  %cond859 = phi i32 [ %or854, %cond.true839 ], [ %call857, %cond.false855 ], !dbg !14874
  %and860 = and i32 %cond859, -65536, !dbg !14874
  %or861 = or i32 %and860, 65535, !dbg !14874
  %and862 = and i32 %or861, 255, !dbg !14874
  %shl863 = shl i32 %and862, 24, !dbg !14874
  %589 = load i8*, i8** %misc, align 8, !dbg !14874
  %590 = bitcast i8* %589 to i32*, !dbg !14874
  %add.ptr864 = getelementptr i32, i32* %590, i64 1, !dbg !14874
  %591 = load i32, i32* %add.ptr864, align 4, !dbg !14874
  %592 = call i1 @llvm.is.constant.i32(i32 %591), !dbg !14874
  br i1 %592, label %cond.true865, label %cond.false881, !dbg !14874

cond.true865:                                     ; preds = %cond.end858
  %593 = load i8*, i8** %misc, align 8, !dbg !14874
  %594 = bitcast i8* %593 to i32*, !dbg !14874
  %add.ptr866 = getelementptr i32, i32* %594, i64 1, !dbg !14874
  %595 = load i32, i32* %add.ptr866, align 4, !dbg !14874
  %and867 = and i32 %595, 255, !dbg !14874
  %shl868 = shl i32 %and867, 24, !dbg !14874
  %596 = load i8*, i8** %misc, align 8, !dbg !14874
  %597 = bitcast i8* %596 to i32*, !dbg !14874
  %add.ptr869 = getelementptr i32, i32* %597, i64 1, !dbg !14874
  %598 = load i32, i32* %add.ptr869, align 4, !dbg !14874
  %and870 = and i32 %598, 65280, !dbg !14874
  %shl871 = shl i32 %and870, 8, !dbg !14874
  %or872 = or i32 %shl868, %shl871, !dbg !14874
  %599 = load i8*, i8** %misc, align 8, !dbg !14874
  %600 = bitcast i8* %599 to i32*, !dbg !14874
  %add.ptr873 = getelementptr i32, i32* %600, i64 1, !dbg !14874
  %601 = load i32, i32* %add.ptr873, align 4, !dbg !14874
  %and874 = and i32 %601, 16711680, !dbg !14874
  %shr875 = lshr i32 %and874, 8, !dbg !14874
  %or876 = or i32 %or872, %shr875, !dbg !14874
  %602 = load i8*, i8** %misc, align 8, !dbg !14874
  %603 = bitcast i8* %602 to i32*, !dbg !14874
  %add.ptr877 = getelementptr i32, i32* %603, i64 1, !dbg !14874
  %604 = load i32, i32* %add.ptr877, align 4, !dbg !14874
  %and878 = and i32 %604, -16777216, !dbg !14874
  %shr879 = lshr i32 %and878, 24, !dbg !14874
  %or880 = or i32 %or876, %shr879, !dbg !14874
  br label %cond.end884, !dbg !14874

cond.false881:                                    ; preds = %cond.end858
  %605 = load i8*, i8** %misc, align 8, !dbg !14874
  %606 = bitcast i8* %605 to i32*, !dbg !14874
  %add.ptr882 = getelementptr i32, i32* %606, i64 1, !dbg !14874
  %607 = load i32, i32* %add.ptr882, align 4, !dbg !14874
  %call883 = call i32 @__fswab32(i32 %607) #10, !dbg !14874
  br label %cond.end884, !dbg !14874

cond.end884:                                      ; preds = %cond.false881, %cond.true865
  %cond885 = phi i32 [ %or880, %cond.true865 ], [ %call883, %cond.false881 ], !dbg !14874
  %and886 = and i32 %cond885, -65536, !dbg !14874
  %or887 = or i32 %and886, 65535, !dbg !14874
  %and888 = and i32 %or887, 65280, !dbg !14874
  %shl889 = shl i32 %and888, 8, !dbg !14874
  %or890 = or i32 %shl863, %shl889, !dbg !14874
  %608 = load i8*, i8** %misc, align 8, !dbg !14874
  %609 = bitcast i8* %608 to i32*, !dbg !14874
  %add.ptr891 = getelementptr i32, i32* %609, i64 1, !dbg !14874
  %610 = load i32, i32* %add.ptr891, align 4, !dbg !14874
  %611 = call i1 @llvm.is.constant.i32(i32 %610), !dbg !14874
  br i1 %611, label %cond.true892, label %cond.false908, !dbg !14874

cond.true892:                                     ; preds = %cond.end884
  %612 = load i8*, i8** %misc, align 8, !dbg !14874
  %613 = bitcast i8* %612 to i32*, !dbg !14874
  %add.ptr893 = getelementptr i32, i32* %613, i64 1, !dbg !14874
  %614 = load i32, i32* %add.ptr893, align 4, !dbg !14874
  %and894 = and i32 %614, 255, !dbg !14874
  %shl895 = shl i32 %and894, 24, !dbg !14874
  %615 = load i8*, i8** %misc, align 8, !dbg !14874
  %616 = bitcast i8* %615 to i32*, !dbg !14874
  %add.ptr896 = getelementptr i32, i32* %616, i64 1, !dbg !14874
  %617 = load i32, i32* %add.ptr896, align 4, !dbg !14874
  %and897 = and i32 %617, 65280, !dbg !14874
  %shl898 = shl i32 %and897, 8, !dbg !14874
  %or899 = or i32 %shl895, %shl898, !dbg !14874
  %618 = load i8*, i8** %misc, align 8, !dbg !14874
  %619 = bitcast i8* %618 to i32*, !dbg !14874
  %add.ptr900 = getelementptr i32, i32* %619, i64 1, !dbg !14874
  %620 = load i32, i32* %add.ptr900, align 4, !dbg !14874
  %and901 = and i32 %620, 16711680, !dbg !14874
  %shr902 = lshr i32 %and901, 8, !dbg !14874
  %or903 = or i32 %or899, %shr902, !dbg !14874
  %621 = load i8*, i8** %misc, align 8, !dbg !14874
  %622 = bitcast i8* %621 to i32*, !dbg !14874
  %add.ptr904 = getelementptr i32, i32* %622, i64 1, !dbg !14874
  %623 = load i32, i32* %add.ptr904, align 4, !dbg !14874
  %and905 = and i32 %623, -16777216, !dbg !14874
  %shr906 = lshr i32 %and905, 24, !dbg !14874
  %or907 = or i32 %or903, %shr906, !dbg !14874
  br label %cond.end911, !dbg !14874

cond.false908:                                    ; preds = %cond.end884
  %624 = load i8*, i8** %misc, align 8, !dbg !14874
  %625 = bitcast i8* %624 to i32*, !dbg !14874
  %add.ptr909 = getelementptr i32, i32* %625, i64 1, !dbg !14874
  %626 = load i32, i32* %add.ptr909, align 4, !dbg !14874
  %call910 = call i32 @__fswab32(i32 %626) #10, !dbg !14874
  br label %cond.end911, !dbg !14874

cond.end911:                                      ; preds = %cond.false908, %cond.true892
  %cond912 = phi i32 [ %or907, %cond.true892 ], [ %call910, %cond.false908 ], !dbg !14874
  %and913 = and i32 %cond912, -65536, !dbg !14874
  %or914 = or i32 %and913, 65535, !dbg !14874
  %and915 = and i32 %or914, 16711680, !dbg !14874
  %shr916 = lshr i32 %and915, 8, !dbg !14874
  %or917 = or i32 %or890, %shr916, !dbg !14874
  %627 = load i8*, i8** %misc, align 8, !dbg !14874
  %628 = bitcast i8* %627 to i32*, !dbg !14874
  %add.ptr918 = getelementptr i32, i32* %628, i64 1, !dbg !14874
  %629 = load i32, i32* %add.ptr918, align 4, !dbg !14874
  %630 = call i1 @llvm.is.constant.i32(i32 %629), !dbg !14874
  br i1 %630, label %cond.true919, label %cond.false935, !dbg !14874

cond.true919:                                     ; preds = %cond.end911
  %631 = load i8*, i8** %misc, align 8, !dbg !14874
  %632 = bitcast i8* %631 to i32*, !dbg !14874
  %add.ptr920 = getelementptr i32, i32* %632, i64 1, !dbg !14874
  %633 = load i32, i32* %add.ptr920, align 4, !dbg !14874
  %and921 = and i32 %633, 255, !dbg !14874
  %shl922 = shl i32 %and921, 24, !dbg !14874
  %634 = load i8*, i8** %misc, align 8, !dbg !14874
  %635 = bitcast i8* %634 to i32*, !dbg !14874
  %add.ptr923 = getelementptr i32, i32* %635, i64 1, !dbg !14874
  %636 = load i32, i32* %add.ptr923, align 4, !dbg !14874
  %and924 = and i32 %636, 65280, !dbg !14874
  %shl925 = shl i32 %and924, 8, !dbg !14874
  %or926 = or i32 %shl922, %shl925, !dbg !14874
  %637 = load i8*, i8** %misc, align 8, !dbg !14874
  %638 = bitcast i8* %637 to i32*, !dbg !14874
  %add.ptr927 = getelementptr i32, i32* %638, i64 1, !dbg !14874
  %639 = load i32, i32* %add.ptr927, align 4, !dbg !14874
  %and928 = and i32 %639, 16711680, !dbg !14874
  %shr929 = lshr i32 %and928, 8, !dbg !14874
  %or930 = or i32 %or926, %shr929, !dbg !14874
  %640 = load i8*, i8** %misc, align 8, !dbg !14874
  %641 = bitcast i8* %640 to i32*, !dbg !14874
  %add.ptr931 = getelementptr i32, i32* %641, i64 1, !dbg !14874
  %642 = load i32, i32* %add.ptr931, align 4, !dbg !14874
  %and932 = and i32 %642, -16777216, !dbg !14874
  %shr933 = lshr i32 %and932, 24, !dbg !14874
  %or934 = or i32 %or930, %shr933, !dbg !14874
  br label %cond.end938, !dbg !14874

cond.false935:                                    ; preds = %cond.end911
  %643 = load i8*, i8** %misc, align 8, !dbg !14874
  %644 = bitcast i8* %643 to i32*, !dbg !14874
  %add.ptr936 = getelementptr i32, i32* %644, i64 1, !dbg !14874
  %645 = load i32, i32* %add.ptr936, align 4, !dbg !14874
  %call937 = call i32 @__fswab32(i32 %645) #10, !dbg !14874
  br label %cond.end938, !dbg !14874

cond.end938:                                      ; preds = %cond.false935, %cond.true919
  %cond939 = phi i32 [ %or934, %cond.true919 ], [ %call937, %cond.false935 ], !dbg !14874
  %and940 = and i32 %cond939, -65536, !dbg !14874
  %or941 = or i32 %and940, 65535, !dbg !14874
  %and942 = and i32 %or941, -16777216, !dbg !14874
  %shr943 = lshr i32 %and942, 24, !dbg !14874
  %or944 = or i32 %or917, %shr943, !dbg !14874
  br label %cond.end971, !dbg !14874

cond.false945:                                    ; preds = %cond.end833
  %646 = load i8*, i8** %misc, align 8, !dbg !14874
  %647 = bitcast i8* %646 to i32*, !dbg !14874
  %add.ptr946 = getelementptr i32, i32* %647, i64 1, !dbg !14874
  %648 = load i32, i32* %add.ptr946, align 4, !dbg !14874
  %649 = call i1 @llvm.is.constant.i32(i32 %648), !dbg !14874
  br i1 %649, label %cond.true947, label %cond.false963, !dbg !14874

cond.true947:                                     ; preds = %cond.false945
  %650 = load i8*, i8** %misc, align 8, !dbg !14874
  %651 = bitcast i8* %650 to i32*, !dbg !14874
  %add.ptr948 = getelementptr i32, i32* %651, i64 1, !dbg !14874
  %652 = load i32, i32* %add.ptr948, align 4, !dbg !14874
  %and949 = and i32 %652, 255, !dbg !14874
  %shl950 = shl i32 %and949, 24, !dbg !14874
  %653 = load i8*, i8** %misc, align 8, !dbg !14874
  %654 = bitcast i8* %653 to i32*, !dbg !14874
  %add.ptr951 = getelementptr i32, i32* %654, i64 1, !dbg !14874
  %655 = load i32, i32* %add.ptr951, align 4, !dbg !14874
  %and952 = and i32 %655, 65280, !dbg !14874
  %shl953 = shl i32 %and952, 8, !dbg !14874
  %or954 = or i32 %shl950, %shl953, !dbg !14874
  %656 = load i8*, i8** %misc, align 8, !dbg !14874
  %657 = bitcast i8* %656 to i32*, !dbg !14874
  %add.ptr955 = getelementptr i32, i32* %657, i64 1, !dbg !14874
  %658 = load i32, i32* %add.ptr955, align 4, !dbg !14874
  %and956 = and i32 %658, 16711680, !dbg !14874
  %shr957 = lshr i32 %and956, 8, !dbg !14874
  %or958 = or i32 %or954, %shr957, !dbg !14874
  %659 = load i8*, i8** %misc, align 8, !dbg !14874
  %660 = bitcast i8* %659 to i32*, !dbg !14874
  %add.ptr959 = getelementptr i32, i32* %660, i64 1, !dbg !14874
  %661 = load i32, i32* %add.ptr959, align 4, !dbg !14874
  %and960 = and i32 %661, -16777216, !dbg !14874
  %shr961 = lshr i32 %and960, 24, !dbg !14874
  %or962 = or i32 %or958, %shr961, !dbg !14874
  br label %cond.end966, !dbg !14874

cond.false963:                                    ; preds = %cond.false945
  %662 = load i8*, i8** %misc, align 8, !dbg !14874
  %663 = bitcast i8* %662 to i32*, !dbg !14874
  %add.ptr964 = getelementptr i32, i32* %663, i64 1, !dbg !14874
  %664 = load i32, i32* %add.ptr964, align 4, !dbg !14874
  %call965 = call i32 @__fswab32(i32 %664) #10, !dbg !14874
  br label %cond.end966, !dbg !14874

cond.end966:                                      ; preds = %cond.false963, %cond.true947
  %cond967 = phi i32 [ %or962, %cond.true947 ], [ %call965, %cond.false963 ], !dbg !14874
  %and968 = and i32 %cond967, -65536, !dbg !14874
  %or969 = or i32 %and968, 65535, !dbg !14874
  %call970 = call i32 @__fswab32(i32 %or969) #10, !dbg !14874
  br label %cond.end971, !dbg !14874

cond.end971:                                      ; preds = %cond.end966, %cond.end938
  %cond972 = phi i32 [ %or944, %cond.end938 ], [ %call970, %cond.end966 ], !dbg !14874
  %665 = load i8*, i8** %misc, align 8, !dbg !14874
  %666 = bitcast i8* %665 to i32*, !dbg !14874
  %add.ptr973 = getelementptr i32, i32* %666, i64 1, !dbg !14874
  store i32 %cond972, i32* %add.ptr973, align 4, !dbg !14874
  br label %do.end974, !dbg !14874

do.end974:                                        ; preds = %cond.end971
  %667 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !14878
  %dev975 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %667, i32 0, i32 0, !dbg !14878
  %668 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev975, align 8, !dbg !14878
  %caps976 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %668, i32 0, i32 9, !dbg !14878
  %hca_cur977 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps976, i32 0, i32 0, !dbg !14878
  %arrayidx978 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur977, i64 0, i64 9, !dbg !14878
  %arraydecay979 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx978, i64 0, i64 0, !dbg !14878
  %add.ptr980 = getelementptr i32, i32* %arraydecay979, i64 0, !dbg !14878
  %669 = load i32, i32* %add.ptr980, align 4, !dbg !14878
  %670 = call i1 @llvm.is.constant.i32(i32 %669), !dbg !14878
  br i1 %670, label %cond.true981, label %cond.false1017, !dbg !14878

cond.true981:                                     ; preds = %do.end974
  %671 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !14878
  %dev982 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %671, i32 0, i32 0, !dbg !14878
  %672 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev982, align 8, !dbg !14878
  %caps983 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %672, i32 0, i32 9, !dbg !14878
  %hca_cur984 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps983, i32 0, i32 0, !dbg !14878
  %arrayidx985 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur984, i64 0, i64 9, !dbg !14878
  %arraydecay986 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx985, i64 0, i64 0, !dbg !14878
  %add.ptr987 = getelementptr i32, i32* %arraydecay986, i64 0, !dbg !14878
  %673 = load i32, i32* %add.ptr987, align 4, !dbg !14878
  %and988 = and i32 %673, 255, !dbg !14878
  %shl989 = shl i32 %and988, 24, !dbg !14878
  %674 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !14878
  %dev990 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %674, i32 0, i32 0, !dbg !14878
  %675 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev990, align 8, !dbg !14878
  %caps991 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %675, i32 0, i32 9, !dbg !14878
  %hca_cur992 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps991, i32 0, i32 0, !dbg !14878
  %arrayidx993 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur992, i64 0, i64 9, !dbg !14878
  %arraydecay994 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx993, i64 0, i64 0, !dbg !14878
  %add.ptr995 = getelementptr i32, i32* %arraydecay994, i64 0, !dbg !14878
  %676 = load i32, i32* %add.ptr995, align 4, !dbg !14878
  %and996 = and i32 %676, 65280, !dbg !14878
  %shl997 = shl i32 %and996, 8, !dbg !14878
  %or998 = or i32 %shl989, %shl997, !dbg !14878
  %677 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !14878
  %dev999 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %677, i32 0, i32 0, !dbg !14878
  %678 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev999, align 8, !dbg !14878
  %caps1000 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %678, i32 0, i32 9, !dbg !14878
  %hca_cur1001 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps1000, i32 0, i32 0, !dbg !14878
  %arrayidx1002 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur1001, i64 0, i64 9, !dbg !14878
  %arraydecay1003 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx1002, i64 0, i64 0, !dbg !14878
  %add.ptr1004 = getelementptr i32, i32* %arraydecay1003, i64 0, !dbg !14878
  %679 = load i32, i32* %add.ptr1004, align 4, !dbg !14878
  %and1005 = and i32 %679, 16711680, !dbg !14878
  %shr1006 = lshr i32 %and1005, 8, !dbg !14878
  %or1007 = or i32 %or998, %shr1006, !dbg !14878
  %680 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !14878
  %dev1008 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %680, i32 0, i32 0, !dbg !14878
  %681 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev1008, align 8, !dbg !14878
  %caps1009 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %681, i32 0, i32 9, !dbg !14878
  %hca_cur1010 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps1009, i32 0, i32 0, !dbg !14878
  %arrayidx1011 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur1010, i64 0, i64 9, !dbg !14878
  %arraydecay1012 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx1011, i64 0, i64 0, !dbg !14878
  %add.ptr1013 = getelementptr i32, i32* %arraydecay1012, i64 0, !dbg !14878
  %682 = load i32, i32* %add.ptr1013, align 4, !dbg !14878
  %and1014 = and i32 %682, -16777216, !dbg !14878
  %shr1015 = lshr i32 %and1014, 24, !dbg !14878
  %or1016 = or i32 %or1007, %shr1015, !dbg !14878
  br label %cond.end1025, !dbg !14878

cond.false1017:                                   ; preds = %do.end974
  %683 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !14878
  %dev1018 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %683, i32 0, i32 0, !dbg !14878
  %684 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev1018, align 8, !dbg !14878
  %caps1019 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %684, i32 0, i32 9, !dbg !14878
  %hca_cur1020 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps1019, i32 0, i32 0, !dbg !14878
  %arrayidx1021 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur1020, i64 0, i64 9, !dbg !14878
  %arraydecay1022 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx1021, i64 0, i64 0, !dbg !14878
  %add.ptr1023 = getelementptr i32, i32* %arraydecay1022, i64 0, !dbg !14878
  %685 = load i32, i32* %add.ptr1023, align 4, !dbg !14878
  %call1024 = call i32 @__fswab32(i32 %685) #10, !dbg !14878
  br label %cond.end1025, !dbg !14878

cond.end1025:                                     ; preds = %cond.false1017, %cond.true981
  %cond1026 = phi i32 [ %or1016, %cond.true981 ], [ %call1024, %cond.false1017 ], !dbg !14878
  %shr1027 = lshr i32 %cond1026, 2, !dbg !14878
  %and1028 = and i32 %shr1027, 1, !dbg !14878
  %tobool1029 = icmp ne i32 %and1028, 0, !dbg !14878
  br i1 %tobool1029, label %if.then1030, label %if.end1196, !dbg !14880

if.then1030:                                      ; preds = %cond.end1025
  br label %do.body1031, !dbg !14881

do.body1031:                                      ; preds = %if.then1030
  br label %do.body1032, !dbg !14882

do.body1032:                                      ; preds = %do.body1031
  br label %do.end1033, !dbg !14884

do.end1033:                                       ; preds = %do.body1032
  %686 = load i8*, i8** %misc, align 8, !dbg !14882
  %687 = bitcast i8* %686 to i32*, !dbg !14882
  %add.ptr1034 = getelementptr i32, i32* %687, i64 1, !dbg !14882
  %688 = load i32, i32* %add.ptr1034, align 4, !dbg !14882
  %689 = call i1 @llvm.is.constant.i32(i32 %688), !dbg !14882
  br i1 %689, label %cond.true1035, label %cond.false1051, !dbg !14882

cond.true1035:                                    ; preds = %do.end1033
  %690 = load i8*, i8** %misc, align 8, !dbg !14882
  %691 = bitcast i8* %690 to i32*, !dbg !14882
  %add.ptr1036 = getelementptr i32, i32* %691, i64 1, !dbg !14882
  %692 = load i32, i32* %add.ptr1036, align 4, !dbg !14882
  %and1037 = and i32 %692, 255, !dbg !14882
  %shl1038 = shl i32 %and1037, 24, !dbg !14882
  %693 = load i8*, i8** %misc, align 8, !dbg !14882
  %694 = bitcast i8* %693 to i32*, !dbg !14882
  %add.ptr1039 = getelementptr i32, i32* %694, i64 1, !dbg !14882
  %695 = load i32, i32* %add.ptr1039, align 4, !dbg !14882
  %and1040 = and i32 %695, 65280, !dbg !14882
  %shl1041 = shl i32 %and1040, 8, !dbg !14882
  %or1042 = or i32 %shl1038, %shl1041, !dbg !14882
  %696 = load i8*, i8** %misc, align 8, !dbg !14882
  %697 = bitcast i8* %696 to i32*, !dbg !14882
  %add.ptr1043 = getelementptr i32, i32* %697, i64 1, !dbg !14882
  %698 = load i32, i32* %add.ptr1043, align 4, !dbg !14882
  %and1044 = and i32 %698, 16711680, !dbg !14882
  %shr1045 = lshr i32 %and1044, 8, !dbg !14882
  %or1046 = or i32 %or1042, %shr1045, !dbg !14882
  %699 = load i8*, i8** %misc, align 8, !dbg !14882
  %700 = bitcast i8* %699 to i32*, !dbg !14882
  %add.ptr1047 = getelementptr i32, i32* %700, i64 1, !dbg !14882
  %701 = load i32, i32* %add.ptr1047, align 4, !dbg !14882
  %and1048 = and i32 %701, -16777216, !dbg !14882
  %shr1049 = lshr i32 %and1048, 24, !dbg !14882
  %or1050 = or i32 %or1046, %shr1049, !dbg !14882
  br label %cond.end1054, !dbg !14882

cond.false1051:                                   ; preds = %do.end1033
  %702 = load i8*, i8** %misc, align 8, !dbg !14882
  %703 = bitcast i8* %702 to i32*, !dbg !14882
  %add.ptr1052 = getelementptr i32, i32* %703, i64 1, !dbg !14882
  %704 = load i32, i32* %add.ptr1052, align 4, !dbg !14882
  %call1053 = call i32 @__fswab32(i32 %704) #10, !dbg !14882
  br label %cond.end1054, !dbg !14882

cond.end1054:                                     ; preds = %cond.false1051, %cond.true1035
  %cond1055 = phi i32 [ %or1050, %cond.true1035 ], [ %call1053, %cond.false1051 ], !dbg !14882
  %and1056 = and i32 %cond1055, 65535, !dbg !14882
  %or1057 = or i32 %and1056, -65536, !dbg !14882
  %705 = call i1 @llvm.is.constant.i32(i32 %or1057), !dbg !14882
  br i1 %705, label %cond.true1058, label %cond.false1166, !dbg !14882

cond.true1058:                                    ; preds = %cond.end1054
  %706 = load i8*, i8** %misc, align 8, !dbg !14882
  %707 = bitcast i8* %706 to i32*, !dbg !14882
  %add.ptr1059 = getelementptr i32, i32* %707, i64 1, !dbg !14882
  %708 = load i32, i32* %add.ptr1059, align 4, !dbg !14882
  %709 = call i1 @llvm.is.constant.i32(i32 %708), !dbg !14882
  br i1 %709, label %cond.true1060, label %cond.false1076, !dbg !14882

cond.true1060:                                    ; preds = %cond.true1058
  %710 = load i8*, i8** %misc, align 8, !dbg !14882
  %711 = bitcast i8* %710 to i32*, !dbg !14882
  %add.ptr1061 = getelementptr i32, i32* %711, i64 1, !dbg !14882
  %712 = load i32, i32* %add.ptr1061, align 4, !dbg !14882
  %and1062 = and i32 %712, 255, !dbg !14882
  %shl1063 = shl i32 %and1062, 24, !dbg !14882
  %713 = load i8*, i8** %misc, align 8, !dbg !14882
  %714 = bitcast i8* %713 to i32*, !dbg !14882
  %add.ptr1064 = getelementptr i32, i32* %714, i64 1, !dbg !14882
  %715 = load i32, i32* %add.ptr1064, align 4, !dbg !14882
  %and1065 = and i32 %715, 65280, !dbg !14882
  %shl1066 = shl i32 %and1065, 8, !dbg !14882
  %or1067 = or i32 %shl1063, %shl1066, !dbg !14882
  %716 = load i8*, i8** %misc, align 8, !dbg !14882
  %717 = bitcast i8* %716 to i32*, !dbg !14882
  %add.ptr1068 = getelementptr i32, i32* %717, i64 1, !dbg !14882
  %718 = load i32, i32* %add.ptr1068, align 4, !dbg !14882
  %and1069 = and i32 %718, 16711680, !dbg !14882
  %shr1070 = lshr i32 %and1069, 8, !dbg !14882
  %or1071 = or i32 %or1067, %shr1070, !dbg !14882
  %719 = load i8*, i8** %misc, align 8, !dbg !14882
  %720 = bitcast i8* %719 to i32*, !dbg !14882
  %add.ptr1072 = getelementptr i32, i32* %720, i64 1, !dbg !14882
  %721 = load i32, i32* %add.ptr1072, align 4, !dbg !14882
  %and1073 = and i32 %721, -16777216, !dbg !14882
  %shr1074 = lshr i32 %and1073, 24, !dbg !14882
  %or1075 = or i32 %or1071, %shr1074, !dbg !14882
  br label %cond.end1079, !dbg !14882

cond.false1076:                                   ; preds = %cond.true1058
  %722 = load i8*, i8** %misc, align 8, !dbg !14882
  %723 = bitcast i8* %722 to i32*, !dbg !14882
  %add.ptr1077 = getelementptr i32, i32* %723, i64 1, !dbg !14882
  %724 = load i32, i32* %add.ptr1077, align 4, !dbg !14882
  %call1078 = call i32 @__fswab32(i32 %724) #10, !dbg !14882
  br label %cond.end1079, !dbg !14882

cond.end1079:                                     ; preds = %cond.false1076, %cond.true1060
  %cond1080 = phi i32 [ %or1075, %cond.true1060 ], [ %call1078, %cond.false1076 ], !dbg !14882
  %and1081 = and i32 %cond1080, 65535, !dbg !14882
  %or1082 = or i32 %and1081, -65536, !dbg !14882
  %and1083 = and i32 %or1082, 255, !dbg !14882
  %shl1084 = shl i32 %and1083, 24, !dbg !14882
  %725 = load i8*, i8** %misc, align 8, !dbg !14882
  %726 = bitcast i8* %725 to i32*, !dbg !14882
  %add.ptr1085 = getelementptr i32, i32* %726, i64 1, !dbg !14882
  %727 = load i32, i32* %add.ptr1085, align 4, !dbg !14882
  %728 = call i1 @llvm.is.constant.i32(i32 %727), !dbg !14882
  br i1 %728, label %cond.true1086, label %cond.false1102, !dbg !14882

cond.true1086:                                    ; preds = %cond.end1079
  %729 = load i8*, i8** %misc, align 8, !dbg !14882
  %730 = bitcast i8* %729 to i32*, !dbg !14882
  %add.ptr1087 = getelementptr i32, i32* %730, i64 1, !dbg !14882
  %731 = load i32, i32* %add.ptr1087, align 4, !dbg !14882
  %and1088 = and i32 %731, 255, !dbg !14882
  %shl1089 = shl i32 %and1088, 24, !dbg !14882
  %732 = load i8*, i8** %misc, align 8, !dbg !14882
  %733 = bitcast i8* %732 to i32*, !dbg !14882
  %add.ptr1090 = getelementptr i32, i32* %733, i64 1, !dbg !14882
  %734 = load i32, i32* %add.ptr1090, align 4, !dbg !14882
  %and1091 = and i32 %734, 65280, !dbg !14882
  %shl1092 = shl i32 %and1091, 8, !dbg !14882
  %or1093 = or i32 %shl1089, %shl1092, !dbg !14882
  %735 = load i8*, i8** %misc, align 8, !dbg !14882
  %736 = bitcast i8* %735 to i32*, !dbg !14882
  %add.ptr1094 = getelementptr i32, i32* %736, i64 1, !dbg !14882
  %737 = load i32, i32* %add.ptr1094, align 4, !dbg !14882
  %and1095 = and i32 %737, 16711680, !dbg !14882
  %shr1096 = lshr i32 %and1095, 8, !dbg !14882
  %or1097 = or i32 %or1093, %shr1096, !dbg !14882
  %738 = load i8*, i8** %misc, align 8, !dbg !14882
  %739 = bitcast i8* %738 to i32*, !dbg !14882
  %add.ptr1098 = getelementptr i32, i32* %739, i64 1, !dbg !14882
  %740 = load i32, i32* %add.ptr1098, align 4, !dbg !14882
  %and1099 = and i32 %740, -16777216, !dbg !14882
  %shr1100 = lshr i32 %and1099, 24, !dbg !14882
  %or1101 = or i32 %or1097, %shr1100, !dbg !14882
  br label %cond.end1105, !dbg !14882

cond.false1102:                                   ; preds = %cond.end1079
  %741 = load i8*, i8** %misc, align 8, !dbg !14882
  %742 = bitcast i8* %741 to i32*, !dbg !14882
  %add.ptr1103 = getelementptr i32, i32* %742, i64 1, !dbg !14882
  %743 = load i32, i32* %add.ptr1103, align 4, !dbg !14882
  %call1104 = call i32 @__fswab32(i32 %743) #10, !dbg !14882
  br label %cond.end1105, !dbg !14882

cond.end1105:                                     ; preds = %cond.false1102, %cond.true1086
  %cond1106 = phi i32 [ %or1101, %cond.true1086 ], [ %call1104, %cond.false1102 ], !dbg !14882
  %and1107 = and i32 %cond1106, 65535, !dbg !14882
  %or1108 = or i32 %and1107, -65536, !dbg !14882
  %and1109 = and i32 %or1108, 65280, !dbg !14882
  %shl1110 = shl i32 %and1109, 8, !dbg !14882
  %or1111 = or i32 %shl1084, %shl1110, !dbg !14882
  %744 = load i8*, i8** %misc, align 8, !dbg !14882
  %745 = bitcast i8* %744 to i32*, !dbg !14882
  %add.ptr1112 = getelementptr i32, i32* %745, i64 1, !dbg !14882
  %746 = load i32, i32* %add.ptr1112, align 4, !dbg !14882
  %747 = call i1 @llvm.is.constant.i32(i32 %746), !dbg !14882
  br i1 %747, label %cond.true1113, label %cond.false1129, !dbg !14882

cond.true1113:                                    ; preds = %cond.end1105
  %748 = load i8*, i8** %misc, align 8, !dbg !14882
  %749 = bitcast i8* %748 to i32*, !dbg !14882
  %add.ptr1114 = getelementptr i32, i32* %749, i64 1, !dbg !14882
  %750 = load i32, i32* %add.ptr1114, align 4, !dbg !14882
  %and1115 = and i32 %750, 255, !dbg !14882
  %shl1116 = shl i32 %and1115, 24, !dbg !14882
  %751 = load i8*, i8** %misc, align 8, !dbg !14882
  %752 = bitcast i8* %751 to i32*, !dbg !14882
  %add.ptr1117 = getelementptr i32, i32* %752, i64 1, !dbg !14882
  %753 = load i32, i32* %add.ptr1117, align 4, !dbg !14882
  %and1118 = and i32 %753, 65280, !dbg !14882
  %shl1119 = shl i32 %and1118, 8, !dbg !14882
  %or1120 = or i32 %shl1116, %shl1119, !dbg !14882
  %754 = load i8*, i8** %misc, align 8, !dbg !14882
  %755 = bitcast i8* %754 to i32*, !dbg !14882
  %add.ptr1121 = getelementptr i32, i32* %755, i64 1, !dbg !14882
  %756 = load i32, i32* %add.ptr1121, align 4, !dbg !14882
  %and1122 = and i32 %756, 16711680, !dbg !14882
  %shr1123 = lshr i32 %and1122, 8, !dbg !14882
  %or1124 = or i32 %or1120, %shr1123, !dbg !14882
  %757 = load i8*, i8** %misc, align 8, !dbg !14882
  %758 = bitcast i8* %757 to i32*, !dbg !14882
  %add.ptr1125 = getelementptr i32, i32* %758, i64 1, !dbg !14882
  %759 = load i32, i32* %add.ptr1125, align 4, !dbg !14882
  %and1126 = and i32 %759, -16777216, !dbg !14882
  %shr1127 = lshr i32 %and1126, 24, !dbg !14882
  %or1128 = or i32 %or1124, %shr1127, !dbg !14882
  br label %cond.end1132, !dbg !14882

cond.false1129:                                   ; preds = %cond.end1105
  %760 = load i8*, i8** %misc, align 8, !dbg !14882
  %761 = bitcast i8* %760 to i32*, !dbg !14882
  %add.ptr1130 = getelementptr i32, i32* %761, i64 1, !dbg !14882
  %762 = load i32, i32* %add.ptr1130, align 4, !dbg !14882
  %call1131 = call i32 @__fswab32(i32 %762) #10, !dbg !14882
  br label %cond.end1132, !dbg !14882

cond.end1132:                                     ; preds = %cond.false1129, %cond.true1113
  %cond1133 = phi i32 [ %or1128, %cond.true1113 ], [ %call1131, %cond.false1129 ], !dbg !14882
  %and1134 = and i32 %cond1133, 65535, !dbg !14882
  %or1135 = or i32 %and1134, -65536, !dbg !14882
  %and1136 = and i32 %or1135, 16711680, !dbg !14882
  %shr1137 = lshr i32 %and1136, 8, !dbg !14882
  %or1138 = or i32 %or1111, %shr1137, !dbg !14882
  %763 = load i8*, i8** %misc, align 8, !dbg !14882
  %764 = bitcast i8* %763 to i32*, !dbg !14882
  %add.ptr1139 = getelementptr i32, i32* %764, i64 1, !dbg !14882
  %765 = load i32, i32* %add.ptr1139, align 4, !dbg !14882
  %766 = call i1 @llvm.is.constant.i32(i32 %765), !dbg !14882
  br i1 %766, label %cond.true1140, label %cond.false1156, !dbg !14882

cond.true1140:                                    ; preds = %cond.end1132
  %767 = load i8*, i8** %misc, align 8, !dbg !14882
  %768 = bitcast i8* %767 to i32*, !dbg !14882
  %add.ptr1141 = getelementptr i32, i32* %768, i64 1, !dbg !14882
  %769 = load i32, i32* %add.ptr1141, align 4, !dbg !14882
  %and1142 = and i32 %769, 255, !dbg !14882
  %shl1143 = shl i32 %and1142, 24, !dbg !14882
  %770 = load i8*, i8** %misc, align 8, !dbg !14882
  %771 = bitcast i8* %770 to i32*, !dbg !14882
  %add.ptr1144 = getelementptr i32, i32* %771, i64 1, !dbg !14882
  %772 = load i32, i32* %add.ptr1144, align 4, !dbg !14882
  %and1145 = and i32 %772, 65280, !dbg !14882
  %shl1146 = shl i32 %and1145, 8, !dbg !14882
  %or1147 = or i32 %shl1143, %shl1146, !dbg !14882
  %773 = load i8*, i8** %misc, align 8, !dbg !14882
  %774 = bitcast i8* %773 to i32*, !dbg !14882
  %add.ptr1148 = getelementptr i32, i32* %774, i64 1, !dbg !14882
  %775 = load i32, i32* %add.ptr1148, align 4, !dbg !14882
  %and1149 = and i32 %775, 16711680, !dbg !14882
  %shr1150 = lshr i32 %and1149, 8, !dbg !14882
  %or1151 = or i32 %or1147, %shr1150, !dbg !14882
  %776 = load i8*, i8** %misc, align 8, !dbg !14882
  %777 = bitcast i8* %776 to i32*, !dbg !14882
  %add.ptr1152 = getelementptr i32, i32* %777, i64 1, !dbg !14882
  %778 = load i32, i32* %add.ptr1152, align 4, !dbg !14882
  %and1153 = and i32 %778, -16777216, !dbg !14882
  %shr1154 = lshr i32 %and1153, 24, !dbg !14882
  %or1155 = or i32 %or1151, %shr1154, !dbg !14882
  br label %cond.end1159, !dbg !14882

cond.false1156:                                   ; preds = %cond.end1132
  %779 = load i8*, i8** %misc, align 8, !dbg !14882
  %780 = bitcast i8* %779 to i32*, !dbg !14882
  %add.ptr1157 = getelementptr i32, i32* %780, i64 1, !dbg !14882
  %781 = load i32, i32* %add.ptr1157, align 4, !dbg !14882
  %call1158 = call i32 @__fswab32(i32 %781) #10, !dbg !14882
  br label %cond.end1159, !dbg !14882

cond.end1159:                                     ; preds = %cond.false1156, %cond.true1140
  %cond1160 = phi i32 [ %or1155, %cond.true1140 ], [ %call1158, %cond.false1156 ], !dbg !14882
  %and1161 = and i32 %cond1160, 65535, !dbg !14882
  %or1162 = or i32 %and1161, -65536, !dbg !14882
  %and1163 = and i32 %or1162, -16777216, !dbg !14882
  %shr1164 = lshr i32 %and1163, 24, !dbg !14882
  %or1165 = or i32 %or1138, %shr1164, !dbg !14882
  br label %cond.end1192, !dbg !14882

cond.false1166:                                   ; preds = %cond.end1054
  %782 = load i8*, i8** %misc, align 8, !dbg !14882
  %783 = bitcast i8* %782 to i32*, !dbg !14882
  %add.ptr1167 = getelementptr i32, i32* %783, i64 1, !dbg !14882
  %784 = load i32, i32* %add.ptr1167, align 4, !dbg !14882
  %785 = call i1 @llvm.is.constant.i32(i32 %784), !dbg !14882
  br i1 %785, label %cond.true1168, label %cond.false1184, !dbg !14882

cond.true1168:                                    ; preds = %cond.false1166
  %786 = load i8*, i8** %misc, align 8, !dbg !14882
  %787 = bitcast i8* %786 to i32*, !dbg !14882
  %add.ptr1169 = getelementptr i32, i32* %787, i64 1, !dbg !14882
  %788 = load i32, i32* %add.ptr1169, align 4, !dbg !14882
  %and1170 = and i32 %788, 255, !dbg !14882
  %shl1171 = shl i32 %and1170, 24, !dbg !14882
  %789 = load i8*, i8** %misc, align 8, !dbg !14882
  %790 = bitcast i8* %789 to i32*, !dbg !14882
  %add.ptr1172 = getelementptr i32, i32* %790, i64 1, !dbg !14882
  %791 = load i32, i32* %add.ptr1172, align 4, !dbg !14882
  %and1173 = and i32 %791, 65280, !dbg !14882
  %shl1174 = shl i32 %and1173, 8, !dbg !14882
  %or1175 = or i32 %shl1171, %shl1174, !dbg !14882
  %792 = load i8*, i8** %misc, align 8, !dbg !14882
  %793 = bitcast i8* %792 to i32*, !dbg !14882
  %add.ptr1176 = getelementptr i32, i32* %793, i64 1, !dbg !14882
  %794 = load i32, i32* %add.ptr1176, align 4, !dbg !14882
  %and1177 = and i32 %794, 16711680, !dbg !14882
  %shr1178 = lshr i32 %and1177, 8, !dbg !14882
  %or1179 = or i32 %or1175, %shr1178, !dbg !14882
  %795 = load i8*, i8** %misc, align 8, !dbg !14882
  %796 = bitcast i8* %795 to i32*, !dbg !14882
  %add.ptr1180 = getelementptr i32, i32* %796, i64 1, !dbg !14882
  %797 = load i32, i32* %add.ptr1180, align 4, !dbg !14882
  %and1181 = and i32 %797, -16777216, !dbg !14882
  %shr1182 = lshr i32 %and1181, 24, !dbg !14882
  %or1183 = or i32 %or1179, %shr1182, !dbg !14882
  br label %cond.end1187, !dbg !14882

cond.false1184:                                   ; preds = %cond.false1166
  %798 = load i8*, i8** %misc, align 8, !dbg !14882
  %799 = bitcast i8* %798 to i32*, !dbg !14882
  %add.ptr1185 = getelementptr i32, i32* %799, i64 1, !dbg !14882
  %800 = load i32, i32* %add.ptr1185, align 4, !dbg !14882
  %call1186 = call i32 @__fswab32(i32 %800) #10, !dbg !14882
  br label %cond.end1187, !dbg !14882

cond.end1187:                                     ; preds = %cond.false1184, %cond.true1168
  %cond1188 = phi i32 [ %or1183, %cond.true1168 ], [ %call1186, %cond.false1184 ], !dbg !14882
  %and1189 = and i32 %cond1188, 65535, !dbg !14882
  %or1190 = or i32 %and1189, -65536, !dbg !14882
  %call1191 = call i32 @__fswab32(i32 %or1190) #10, !dbg !14882
  br label %cond.end1192, !dbg !14882

cond.end1192:                                     ; preds = %cond.end1187, %cond.end1159
  %cond1193 = phi i32 [ %or1165, %cond.end1159 ], [ %call1191, %cond.end1187 ], !dbg !14882
  %801 = load i8*, i8** %misc, align 8, !dbg !14882
  %802 = bitcast i8* %801 to i32*, !dbg !14882
  %add.ptr1194 = getelementptr i32, i32* %802, i64 1, !dbg !14882
  store i32 %cond1193, i32* %add.ptr1194, align 4, !dbg !14882
  br label %do.end1195, !dbg !14882

do.end1195:                                       ; preds = %cond.end1192
  br label %if.end1196, !dbg !14882

if.end1196:                                       ; preds = %do.end1195, %cond.end1025
  %803 = load %struct.mlx5_flow_spec*, %struct.mlx5_flow_spec** %spec.addr, align 8, !dbg !14886
  %match_criteria_enable1197 = getelementptr inbounds %struct.mlx5_flow_spec, %struct.mlx5_flow_spec* %803, i32 0, i32 0, !dbg !14887
  %804 = load i8, i8* %match_criteria_enable1197, align 4, !dbg !14888
  %conv1198 = zext i8 %804 to i32, !dbg !14888
  %or1199 = or i32 %conv1198, 2, !dbg !14888
  %conv1200 = trunc i32 %or1199 to i8, !dbg !14888
  store i8 %conv1200, i8* %match_criteria_enable1197, align 4, !dbg !14888
  br label %if.end1201

if.end1201:                                       ; preds = %if.end1196, %do.end337
  ret void, !dbg !14889
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlx5_eswitch_set_rule_flow_source(%struct.mlx5_eswitch* %esw, %struct.mlx5_flow_spec* %spec, %struct.mlx5_esw_flow_attr* %attr) #0 !dbg !14890 {
entry:
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  %spec.addr = alloca %struct.mlx5_flow_spec*, align 8
  %attr.addr = alloca %struct.mlx5_esw_flow_attr*, align 8
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !14891, metadata !DIExpression()), !dbg !14892
  store %struct.mlx5_flow_spec* %spec, %struct.mlx5_flow_spec** %spec.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_flow_spec** %spec.addr, metadata !14893, metadata !DIExpression()), !dbg !14894
  store %struct.mlx5_esw_flow_attr* %attr, %struct.mlx5_esw_flow_attr** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_esw_flow_attr** %attr.addr, metadata !14895, metadata !DIExpression()), !dbg !14896
  %0 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !14897
  %dev = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %0, i32 0, i32 0, !dbg !14897
  %1 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !14897
  %caps = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %1, i32 0, i32 9, !dbg !14897
  %hca_cur = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps, i32 0, i32 0, !dbg !14897
  %arrayidx = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur, i64 0, i64 8, !dbg !14897
  %arraydecay = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx, i64 0, i64 0, !dbg !14897
  %add.ptr = getelementptr i32, i32* %arraydecay, i64 0, !dbg !14897
  %2 = load i32, i32* %add.ptr, align 4, !dbg !14897
  %3 = call i1 @llvm.is.constant.i32(i32 %2), !dbg !14897
  br i1 %3, label %cond.true, label %cond.false, !dbg !14897

cond.true:                                        ; preds = %entry
  %4 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !14897
  %dev1 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %4, i32 0, i32 0, !dbg !14897
  %5 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev1, align 8, !dbg !14897
  %caps2 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %5, i32 0, i32 9, !dbg !14897
  %hca_cur3 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps2, i32 0, i32 0, !dbg !14897
  %arrayidx4 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur3, i64 0, i64 8, !dbg !14897
  %arraydecay5 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx4, i64 0, i64 0, !dbg !14897
  %add.ptr6 = getelementptr i32, i32* %arraydecay5, i64 0, !dbg !14897
  %6 = load i32, i32* %add.ptr6, align 4, !dbg !14897
  %and = and i32 %6, 255, !dbg !14897
  %shl = shl i32 %and, 24, !dbg !14897
  %7 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !14897
  %dev7 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %7, i32 0, i32 0, !dbg !14897
  %8 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev7, align 8, !dbg !14897
  %caps8 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %8, i32 0, i32 9, !dbg !14897
  %hca_cur9 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps8, i32 0, i32 0, !dbg !14897
  %arrayidx10 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur9, i64 0, i64 8, !dbg !14897
  %arraydecay11 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx10, i64 0, i64 0, !dbg !14897
  %add.ptr12 = getelementptr i32, i32* %arraydecay11, i64 0, !dbg !14897
  %9 = load i32, i32* %add.ptr12, align 4, !dbg !14897
  %and13 = and i32 %9, 65280, !dbg !14897
  %shl14 = shl i32 %and13, 8, !dbg !14897
  %or = or i32 %shl, %shl14, !dbg !14897
  %10 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !14897
  %dev15 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %10, i32 0, i32 0, !dbg !14897
  %11 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev15, align 8, !dbg !14897
  %caps16 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %11, i32 0, i32 9, !dbg !14897
  %hca_cur17 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps16, i32 0, i32 0, !dbg !14897
  %arrayidx18 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur17, i64 0, i64 8, !dbg !14897
  %arraydecay19 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx18, i64 0, i64 0, !dbg !14897
  %add.ptr20 = getelementptr i32, i32* %arraydecay19, i64 0, !dbg !14897
  %12 = load i32, i32* %add.ptr20, align 4, !dbg !14897
  %and21 = and i32 %12, 16711680, !dbg !14897
  %shr = lshr i32 %and21, 8, !dbg !14897
  %or22 = or i32 %or, %shr, !dbg !14897
  %13 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !14897
  %dev23 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %13, i32 0, i32 0, !dbg !14897
  %14 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev23, align 8, !dbg !14897
  %caps24 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %14, i32 0, i32 9, !dbg !14897
  %hca_cur25 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps24, i32 0, i32 0, !dbg !14897
  %arrayidx26 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur25, i64 0, i64 8, !dbg !14897
  %arraydecay27 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx26, i64 0, i64 0, !dbg !14897
  %add.ptr28 = getelementptr i32, i32* %arraydecay27, i64 0, !dbg !14897
  %15 = load i32, i32* %add.ptr28, align 4, !dbg !14897
  %and29 = and i32 %15, -16777216, !dbg !14897
  %shr30 = lshr i32 %and29, 24, !dbg !14897
  %or31 = or i32 %or22, %shr30, !dbg !14897
  br label %cond.end, !dbg !14897

cond.false:                                       ; preds = %entry
  %16 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !14897
  %dev32 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %16, i32 0, i32 0, !dbg !14897
  %17 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev32, align 8, !dbg !14897
  %caps33 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %17, i32 0, i32 9, !dbg !14897
  %hca_cur34 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps33, i32 0, i32 0, !dbg !14897
  %arrayidx35 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur34, i64 0, i64 8, !dbg !14897
  %arraydecay36 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx35, i64 0, i64 0, !dbg !14897
  %add.ptr37 = getelementptr i32, i32* %arraydecay36, i64 0, !dbg !14897
  %18 = load i32, i32* %add.ptr37, align 4, !dbg !14897
  %call = call i32 @__fswab32(i32 %18) #10, !dbg !14897
  br label %cond.end, !dbg !14897

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %or31, %cond.true ], [ %call, %cond.false ], !dbg !14897
  %shr38 = lshr i32 %cond, 8, !dbg !14897
  %and39 = and i32 %shr38, 1, !dbg !14897
  %tobool = icmp ne i32 %and39, 0, !dbg !14897
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !14899

land.lhs.true:                                    ; preds = %cond.end
  %19 = load %struct.mlx5_esw_flow_attr*, %struct.mlx5_esw_flow_attr** %attr.addr, align 8, !dbg !14900
  %tobool40 = icmp ne %struct.mlx5_esw_flow_attr* %19, null, !dbg !14900
  br i1 %tobool40, label %land.lhs.true41, label %if.end, !dbg !14901

land.lhs.true41:                                  ; preds = %land.lhs.true
  %20 = load %struct.mlx5_esw_flow_attr*, %struct.mlx5_esw_flow_attr** %attr.addr, align 8, !dbg !14902
  %in_rep = getelementptr inbounds %struct.mlx5_esw_flow_attr, %struct.mlx5_esw_flow_attr* %20, i32 0, i32 0, !dbg !14903
  %21 = load %struct.mlx5_eswitch_rep*, %struct.mlx5_eswitch_rep** %in_rep, align 8, !dbg !14903
  %tobool42 = icmp ne %struct.mlx5_eswitch_rep* %21, null, !dbg !14902
  br i1 %tobool42, label %if.then, label %if.end, !dbg !14904

if.then:                                          ; preds = %land.lhs.true41
  %22 = load %struct.mlx5_esw_flow_attr*, %struct.mlx5_esw_flow_attr** %attr.addr, align 8, !dbg !14905
  %in_rep43 = getelementptr inbounds %struct.mlx5_esw_flow_attr, %struct.mlx5_esw_flow_attr* %22, i32 0, i32 0, !dbg !14906
  %23 = load %struct.mlx5_eswitch_rep*, %struct.mlx5_eswitch_rep** %in_rep43, align 8, !dbg !14906
  %vport = getelementptr inbounds %struct.mlx5_eswitch_rep, %struct.mlx5_eswitch_rep* %23, i32 0, i32 1, !dbg !14907
  %24 = load i16, i16* %vport, align 8, !dbg !14907
  %conv = zext i16 %24 to i32, !dbg !14905
  %cmp = icmp eq i32 %conv, 65535, !dbg !14908
  %25 = zext i1 %cmp to i64, !dbg !14905
  %cond45 = select i1 %cmp, i32 1, i32 2, !dbg !14905
  %26 = load %struct.mlx5_flow_spec*, %struct.mlx5_flow_spec** %spec.addr, align 8, !dbg !14909
  %flow_context = getelementptr inbounds %struct.mlx5_flow_spec, %struct.mlx5_flow_spec* %26, i32 0, i32 3, !dbg !14910
  %flow_source = getelementptr inbounds %struct.mlx5_flow_context, %struct.mlx5_flow_context* %flow_context, i32 0, i32 2, !dbg !14911
  store i32 %cond45, i32* %flow_source, align 4, !dbg !14912
  br label %if.end, !dbg !14909

if.end:                                           ; preds = %if.then, %land.lhs.true41, %land.lhs.true, %cond.end
  ret void, !dbg !14913
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @mlx5_eswitch_termtbl_required(%struct.mlx5_eswitch*, %struct.mlx5_flow_attr*, %struct.mlx5_flow_act*, %struct.mlx5_flow_spec*) #5

; Function Attrs: noredzone
declare dso_local %struct.mlx5_flow_handle* @mlx5_eswitch_add_termtbl_rule(%struct.mlx5_eswitch*, %struct.mlx5_flow_table*, %struct.mlx5_flow_spec*, %struct.mlx5_esw_flow_attr*, %struct.mlx5_flow_act*, %struct.mlx5_flow_destination*, i32) #5

; Function Attrs: noredzone
declare dso_local %struct.mlx5_flow_handle* @mlx5_add_flow_rules(%struct.mlx5_flow_table*, %struct.mlx5_flow_spec*, %struct.mlx5_flow_act*, %struct.mlx5_flow_destination*, i32) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlx5_chains_put_table(%struct.mlx5_fs_chains* %chains, i32 %chain, i32 %prio, i32 %level) #0 !dbg !14914 {
entry:
  %chains.addr = alloca %struct.mlx5_fs_chains*, align 8
  %chain.addr = alloca i32, align 4
  %prio.addr = alloca i32, align 4
  %level.addr = alloca i32, align 4
  store %struct.mlx5_fs_chains* %chains, %struct.mlx5_fs_chains** %chains.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_fs_chains** %chains.addr, metadata !14917, metadata !DIExpression()), !dbg !14918
  store i32 %chain, i32* %chain.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %chain.addr, metadata !14919, metadata !DIExpression()), !dbg !14920
  store i32 %prio, i32* %prio.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %prio.addr, metadata !14921, metadata !DIExpression()), !dbg !14922
  store i32 %level, i32* %level.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %level.addr, metadata !14923, metadata !DIExpression()), !dbg !14924
  ret void, !dbg !14925
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.mlx5_flow_handle* @mlx5_eswitch_add_fwd_rule(%struct.mlx5_eswitch* %esw, %struct.mlx5_flow_spec* %spec, %struct.mlx5_flow_attr* %attr) #0 !dbg !14926 {
entry:
  %v.addr.i1.i = alloca %struct.atomic64_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic64_t** %v.addr.i1.i, metadata !12677, metadata !DIExpression()), !dbg !14927
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !12689, metadata !DIExpression()), !dbg !14930
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !12699, metadata !DIExpression()), !dbg !14932
  %v.addr.i = alloca %struct.atomic64_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic64_t** %v.addr.i, metadata !12701, metadata !DIExpression()), !dbg !14933
  %retval = alloca %struct.mlx5_flow_handle*, align 8
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  %spec.addr = alloca %struct.mlx5_flow_spec*, align 8
  %attr.addr = alloca %struct.mlx5_flow_attr*, align 8
  %dest = alloca [3 x %struct.mlx5_flow_destination], align 16
  %flow_act = alloca %struct.mlx5_flow_act, align 8
  %esw_attr = alloca %struct.mlx5_esw_flow_attr*, align 8
  %chains = alloca %struct.mlx5_fs_chains*, align 8
  %fwd_attr = alloca %struct.mlx5_vport_tbl_attr, align 2
  %fast_fdb = alloca %struct.mlx5_flow_table*, align 8
  %fwd_fdb = alloca %struct.mlx5_flow_table*, align 8
  %rule = alloca %struct.mlx5_flow_handle*, align 8
  %i = alloca i32, align 4
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !14934, metadata !DIExpression()), !dbg !14935
  store %struct.mlx5_flow_spec* %spec, %struct.mlx5_flow_spec** %spec.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_flow_spec** %spec.addr, metadata !14936, metadata !DIExpression()), !dbg !14937
  store %struct.mlx5_flow_attr* %attr, %struct.mlx5_flow_attr** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_flow_attr** %attr.addr, metadata !14938, metadata !DIExpression()), !dbg !14939
  call void @llvm.dbg.declare(metadata [3 x %struct.mlx5_flow_destination]* %dest, metadata !14940, metadata !DIExpression()), !dbg !14941
  %0 = bitcast [3 x %struct.mlx5_flow_destination]* %dest to i8*, !dbg !14941
  call void @llvm.memset.p0i8.i64(i8* align 16 %0, i8 0, i64 96, i1 false), !dbg !14941
  call void @llvm.dbg.declare(metadata %struct.mlx5_flow_act* %flow_act, metadata !14942, metadata !DIExpression()), !dbg !14943
  %1 = bitcast %struct.mlx5_flow_act* %flow_act to i8*, !dbg !14943
  call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 56, i1 false), !dbg !14943
  %2 = bitcast i8* %1 to %struct.mlx5_flow_act*, !dbg !14943
  %3 = getelementptr inbounds %struct.mlx5_flow_act, %struct.mlx5_flow_act* %2, i32 0, i32 4, !dbg !14943
  store i32 1, i32* %3, align 8, !dbg !14943
  call void @llvm.dbg.declare(metadata %struct.mlx5_esw_flow_attr** %esw_attr, metadata !14944, metadata !DIExpression()), !dbg !14945
  %4 = load %struct.mlx5_flow_attr*, %struct.mlx5_flow_attr** %attr.addr, align 8, !dbg !14946
  %5 = getelementptr inbounds %struct.mlx5_flow_attr, %struct.mlx5_flow_attr* %4, i32 0, i32 13, !dbg !14947
  %esw_attr1 = bitcast %union.anon.192* %5 to [0 x %struct.mlx5_esw_flow_attr]*, !dbg !14947
  %arraydecay = getelementptr inbounds [0 x %struct.mlx5_esw_flow_attr], [0 x %struct.mlx5_esw_flow_attr]* %esw_attr1, i64 0, i64 0, !dbg !14946
  store %struct.mlx5_esw_flow_attr* %arraydecay, %struct.mlx5_esw_flow_attr** %esw_attr, align 8, !dbg !14945
  call void @llvm.dbg.declare(metadata %struct.mlx5_fs_chains** %chains, metadata !14948, metadata !DIExpression()), !dbg !14949
  %6 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !14950
  %fdb_table = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %6, i32 0, i32 2, !dbg !14950
  %7 = getelementptr inbounds %struct.mlx5_eswitch_fdb, %struct.mlx5_eswitch_fdb* %fdb_table, i32 0, i32 0, !dbg !14950
  %offloads = bitcast %union.anon.154* %7 to %struct.offloads_fdb*, !dbg !14950
  %esw_chains_priv = getelementptr inbounds %struct.offloads_fdb, %struct.offloads_fdb* %offloads, i32 0, i32 9, !dbg !14950
  %8 = load %struct.mlx5_fs_chains*, %struct.mlx5_fs_chains** %esw_chains_priv, align 8, !dbg !14950
  store %struct.mlx5_fs_chains* %8, %struct.mlx5_fs_chains** %chains, align 8, !dbg !14949
  call void @llvm.dbg.declare(metadata %struct.mlx5_vport_tbl_attr* %fwd_attr, metadata !14951, metadata !DIExpression()), !dbg !14952
  call void @llvm.dbg.declare(metadata %struct.mlx5_flow_table** %fast_fdb, metadata !14953, metadata !DIExpression()), !dbg !14954
  call void @llvm.dbg.declare(metadata %struct.mlx5_flow_table** %fwd_fdb, metadata !14955, metadata !DIExpression()), !dbg !14956
  call void @llvm.dbg.declare(metadata %struct.mlx5_flow_handle** %rule, metadata !14957, metadata !DIExpression()), !dbg !14958
  call void @llvm.dbg.declare(metadata i32* %i, metadata !14959, metadata !DIExpression()), !dbg !14960
  %9 = load %struct.mlx5_fs_chains*, %struct.mlx5_fs_chains** %chains, align 8, !dbg !14961
  %10 = load %struct.mlx5_flow_attr*, %struct.mlx5_flow_attr** %attr.addr, align 8, !dbg !14962
  %chain = getelementptr inbounds %struct.mlx5_flow_attr, %struct.mlx5_flow_attr* %10, i32 0, i32 5, !dbg !14963
  %11 = load i32, i32* %chain, align 8, !dbg !14963
  %12 = load %struct.mlx5_flow_attr*, %struct.mlx5_flow_attr** %attr.addr, align 8, !dbg !14964
  %prio = getelementptr inbounds %struct.mlx5_flow_attr, %struct.mlx5_flow_attr* %12, i32 0, i32 6, !dbg !14965
  %13 = load i16, i16* %prio, align 4, !dbg !14965
  %conv = zext i16 %13 to i32, !dbg !14964
  %call = call %struct.mlx5_flow_table* @mlx5_chains_get_table(%struct.mlx5_fs_chains* %9, i32 %11, i32 %conv, i32 0) #8, !dbg !14966
  store %struct.mlx5_flow_table* %call, %struct.mlx5_flow_table** %fast_fdb, align 8, !dbg !14967
  %14 = load %struct.mlx5_flow_table*, %struct.mlx5_flow_table** %fast_fdb, align 8, !dbg !14968
  %15 = bitcast %struct.mlx5_flow_table* %14 to i8*, !dbg !14968
  %call2 = call zeroext i1 @IS_ERR(i8* %15) #8, !dbg !14970
  br i1 %call2, label %if.then, label %if.end, !dbg !14971

if.then:                                          ; preds = %entry
  %16 = load %struct.mlx5_flow_table*, %struct.mlx5_flow_table** %fast_fdb, align 8, !dbg !14972
  %17 = bitcast %struct.mlx5_flow_table* %16 to i8*, !dbg !14972
  %call3 = call i8* @ERR_CAST(i8* %17) #8, !dbg !14974
  %18 = bitcast i8* %call3 to %struct.mlx5_flow_handle*, !dbg !14974
  store %struct.mlx5_flow_handle* %18, %struct.mlx5_flow_handle** %rule, align 8, !dbg !14975
  br label %err_get_fast, !dbg !14976

if.end:                                           ; preds = %entry
  %19 = load %struct.mlx5_flow_attr*, %struct.mlx5_flow_attr** %attr.addr, align 8, !dbg !14977
  %chain4 = getelementptr inbounds %struct.mlx5_flow_attr, %struct.mlx5_flow_attr* %19, i32 0, i32 5, !dbg !14978
  %20 = load i32, i32* %chain4, align 8, !dbg !14978
  %conv5 = trunc i32 %20 to i16, !dbg !14977
  %chain6 = getelementptr inbounds %struct.mlx5_vport_tbl_attr, %struct.mlx5_vport_tbl_attr* %fwd_attr, i32 0, i32 0, !dbg !14979
  store i16 %conv5, i16* %chain6, align 2, !dbg !14980
  %21 = load %struct.mlx5_flow_attr*, %struct.mlx5_flow_attr** %attr.addr, align 8, !dbg !14981
  %prio7 = getelementptr inbounds %struct.mlx5_flow_attr, %struct.mlx5_flow_attr* %21, i32 0, i32 6, !dbg !14982
  %22 = load i16, i16* %prio7, align 4, !dbg !14982
  %prio8 = getelementptr inbounds %struct.mlx5_vport_tbl_attr, %struct.mlx5_vport_tbl_attr* %fwd_attr, i32 0, i32 1, !dbg !14983
  store i16 %22, i16* %prio8, align 2, !dbg !14984
  %23 = load %struct.mlx5_esw_flow_attr*, %struct.mlx5_esw_flow_attr** %esw_attr, align 8, !dbg !14985
  %in_rep = getelementptr inbounds %struct.mlx5_esw_flow_attr, %struct.mlx5_esw_flow_attr* %23, i32 0, i32 0, !dbg !14986
  %24 = load %struct.mlx5_eswitch_rep*, %struct.mlx5_eswitch_rep** %in_rep, align 8, !dbg !14986
  %vport = getelementptr inbounds %struct.mlx5_eswitch_rep, %struct.mlx5_eswitch_rep* %24, i32 0, i32 1, !dbg !14987
  %25 = load i16, i16* %vport, align 8, !dbg !14987
  %vport9 = getelementptr inbounds %struct.mlx5_vport_tbl_attr, %struct.mlx5_vport_tbl_attr* %fwd_attr, i32 0, i32 2, !dbg !14988
  store i16 %25, i16* %vport9, align 2, !dbg !14989
  %26 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !14990
  %call10 = call %struct.mlx5_flow_table* @esw_vport_tbl_get(%struct.mlx5_eswitch* %26, %struct.mlx5_vport_tbl_attr* %fwd_attr) #8, !dbg !14991
  store %struct.mlx5_flow_table* %call10, %struct.mlx5_flow_table** %fwd_fdb, align 8, !dbg !14992
  %27 = load %struct.mlx5_flow_table*, %struct.mlx5_flow_table** %fwd_fdb, align 8, !dbg !14993
  %28 = bitcast %struct.mlx5_flow_table* %27 to i8*, !dbg !14993
  %call11 = call zeroext i1 @IS_ERR(i8* %28) #8, !dbg !14995
  br i1 %call11, label %if.then12, label %if.end14, !dbg !14996

if.then12:                                        ; preds = %if.end
  %29 = load %struct.mlx5_flow_table*, %struct.mlx5_flow_table** %fwd_fdb, align 8, !dbg !14997
  %30 = bitcast %struct.mlx5_flow_table* %29 to i8*, !dbg !14997
  %call13 = call i8* @ERR_CAST(i8* %30) #8, !dbg !14999
  %31 = bitcast i8* %call13 to %struct.mlx5_flow_handle*, !dbg !14999
  store %struct.mlx5_flow_handle* %31, %struct.mlx5_flow_handle** %rule, align 8, !dbg !15000
  br label %err_get_fwd, !dbg !15001

if.end14:                                         ; preds = %if.end
  %action = getelementptr inbounds %struct.mlx5_flow_act, %struct.mlx5_flow_act* %flow_act, i32 0, i32 0, !dbg !15002
  store i32 4, i32* %action, align 8, !dbg !15003
  store i32 0, i32* %i, align 4, !dbg !15004
  br label %for.cond, !dbg !15006

for.cond:                                         ; preds = %for.inc, %if.end14
  %32 = load i32, i32* %i, align 4, !dbg !15007
  %33 = load %struct.mlx5_esw_flow_attr*, %struct.mlx5_esw_flow_attr** %esw_attr, align 8, !dbg !15009
  %split_count = getelementptr inbounds %struct.mlx5_esw_flow_attr, %struct.mlx5_esw_flow_attr* %33, i32 0, i32 3, !dbg !15010
  %34 = load i32, i32* %split_count, align 8, !dbg !15010
  %cmp = icmp slt i32 %32, %34, !dbg !15011
  br i1 %cmp, label %for.body, label %for.end, !dbg !15012

for.body:                                         ; preds = %for.cond
  %35 = load i32, i32* %i, align 4, !dbg !15013
  %idxprom = sext i32 %35 to i64, !dbg !15015
  %arrayidx = getelementptr [3 x %struct.mlx5_flow_destination], [3 x %struct.mlx5_flow_destination]* %dest, i64 0, i64 %idxprom, !dbg !15015
  %type = getelementptr inbounds %struct.mlx5_flow_destination, %struct.mlx5_flow_destination* %arrayidx, i32 0, i32 0, !dbg !15016
  store i32 0, i32* %type, align 16, !dbg !15017
  %36 = load %struct.mlx5_esw_flow_attr*, %struct.mlx5_esw_flow_attr** %esw_attr, align 8, !dbg !15018
  %dests = getelementptr inbounds %struct.mlx5_esw_flow_attr, %struct.mlx5_esw_flow_attr* %36, i32 0, i32 9, !dbg !15019
  %37 = load i32, i32* %i, align 4, !dbg !15020
  %idxprom16 = sext i32 %37 to i64, !dbg !15018
  %arrayidx17 = getelementptr [2 x %struct.anon.193], [2 x %struct.anon.193]* %dests, i64 0, i64 %idxprom16, !dbg !15018
  %rep = getelementptr inbounds %struct.anon.193, %struct.anon.193* %arrayidx17, i32 0, i32 1, !dbg !15021
  %38 = load %struct.mlx5_eswitch_rep*, %struct.mlx5_eswitch_rep** %rep, align 8, !dbg !15021
  %vport18 = getelementptr inbounds %struct.mlx5_eswitch_rep, %struct.mlx5_eswitch_rep* %38, i32 0, i32 1, !dbg !15022
  %39 = load i16, i16* %vport18, align 8, !dbg !15022
  %40 = load i32, i32* %i, align 4, !dbg !15023
  %idxprom19 = sext i32 %40 to i64, !dbg !15024
  %arrayidx20 = getelementptr [3 x %struct.mlx5_flow_destination], [3 x %struct.mlx5_flow_destination]* %dest, i64 0, i64 %idxprom19, !dbg !15024
  %41 = getelementptr inbounds %struct.mlx5_flow_destination, %struct.mlx5_flow_destination* %arrayidx20, i32 0, i32 1, !dbg !15025
  %vport21 = bitcast %union.anon.146* %41 to %struct.anon.147*, !dbg !15025
  %num = getelementptr inbounds %struct.anon.147, %struct.anon.147* %vport21, i32 0, i32 0, !dbg !15026
  store i16 %39, i16* %num, align 8, !dbg !15027
  %42 = load %struct.mlx5_esw_flow_attr*, %struct.mlx5_esw_flow_attr** %esw_attr, align 8, !dbg !15028
  %dests22 = getelementptr inbounds %struct.mlx5_esw_flow_attr, %struct.mlx5_esw_flow_attr* %42, i32 0, i32 9, !dbg !15028
  %43 = load i32, i32* %i, align 4, !dbg !15028
  %idxprom23 = sext i32 %43 to i64, !dbg !15028
  %arrayidx24 = getelementptr [2 x %struct.anon.193], [2 x %struct.anon.193]* %dests22, i64 0, i64 %idxprom23, !dbg !15028
  %mdev = getelementptr inbounds %struct.anon.193, %struct.anon.193* %arrayidx24, i32 0, i32 3, !dbg !15028
  %44 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %mdev, align 8, !dbg !15028
  %caps = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %44, i32 0, i32 9, !dbg !15028
  %hca_cur = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps, i32 0, i32 0, !dbg !15028
  %arrayidx25 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur, i64 0, i64 0, !dbg !15028
  %arraydecay26 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx25, i64 0, i64 0, !dbg !15028
  %add.ptr = getelementptr i32, i32* %arraydecay26, i64 1, !dbg !15028
  %45 = load i32, i32* %add.ptr, align 4, !dbg !15028
  %46 = call i1 @llvm.is.constant.i32(i32 %45), !dbg !15028
  br i1 %46, label %cond.true, label %cond.false, !dbg !15028

cond.true:                                        ; preds = %for.body
  %47 = load %struct.mlx5_esw_flow_attr*, %struct.mlx5_esw_flow_attr** %esw_attr, align 8, !dbg !15028
  %dests27 = getelementptr inbounds %struct.mlx5_esw_flow_attr, %struct.mlx5_esw_flow_attr* %47, i32 0, i32 9, !dbg !15028
  %48 = load i32, i32* %i, align 4, !dbg !15028
  %idxprom28 = sext i32 %48 to i64, !dbg !15028
  %arrayidx29 = getelementptr [2 x %struct.anon.193], [2 x %struct.anon.193]* %dests27, i64 0, i64 %idxprom28, !dbg !15028
  %mdev30 = getelementptr inbounds %struct.anon.193, %struct.anon.193* %arrayidx29, i32 0, i32 3, !dbg !15028
  %49 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %mdev30, align 8, !dbg !15028
  %caps31 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %49, i32 0, i32 9, !dbg !15028
  %hca_cur32 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps31, i32 0, i32 0, !dbg !15028
  %arrayidx33 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur32, i64 0, i64 0, !dbg !15028
  %arraydecay34 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx33, i64 0, i64 0, !dbg !15028
  %add.ptr35 = getelementptr i32, i32* %arraydecay34, i64 1, !dbg !15028
  %50 = load i32, i32* %add.ptr35, align 4, !dbg !15028
  %and = and i32 %50, 255, !dbg !15028
  %shl = shl i32 %and, 24, !dbg !15028
  %51 = load %struct.mlx5_esw_flow_attr*, %struct.mlx5_esw_flow_attr** %esw_attr, align 8, !dbg !15028
  %dests36 = getelementptr inbounds %struct.mlx5_esw_flow_attr, %struct.mlx5_esw_flow_attr* %51, i32 0, i32 9, !dbg !15028
  %52 = load i32, i32* %i, align 4, !dbg !15028
  %idxprom37 = sext i32 %52 to i64, !dbg !15028
  %arrayidx38 = getelementptr [2 x %struct.anon.193], [2 x %struct.anon.193]* %dests36, i64 0, i64 %idxprom37, !dbg !15028
  %mdev39 = getelementptr inbounds %struct.anon.193, %struct.anon.193* %arrayidx38, i32 0, i32 3, !dbg !15028
  %53 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %mdev39, align 8, !dbg !15028
  %caps40 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %53, i32 0, i32 9, !dbg !15028
  %hca_cur41 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps40, i32 0, i32 0, !dbg !15028
  %arrayidx42 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur41, i64 0, i64 0, !dbg !15028
  %arraydecay43 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx42, i64 0, i64 0, !dbg !15028
  %add.ptr44 = getelementptr i32, i32* %arraydecay43, i64 1, !dbg !15028
  %54 = load i32, i32* %add.ptr44, align 4, !dbg !15028
  %and45 = and i32 %54, 65280, !dbg !15028
  %shl46 = shl i32 %and45, 8, !dbg !15028
  %or = or i32 %shl, %shl46, !dbg !15028
  %55 = load %struct.mlx5_esw_flow_attr*, %struct.mlx5_esw_flow_attr** %esw_attr, align 8, !dbg !15028
  %dests47 = getelementptr inbounds %struct.mlx5_esw_flow_attr, %struct.mlx5_esw_flow_attr* %55, i32 0, i32 9, !dbg !15028
  %56 = load i32, i32* %i, align 4, !dbg !15028
  %idxprom48 = sext i32 %56 to i64, !dbg !15028
  %arrayidx49 = getelementptr [2 x %struct.anon.193], [2 x %struct.anon.193]* %dests47, i64 0, i64 %idxprom48, !dbg !15028
  %mdev50 = getelementptr inbounds %struct.anon.193, %struct.anon.193* %arrayidx49, i32 0, i32 3, !dbg !15028
  %57 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %mdev50, align 8, !dbg !15028
  %caps51 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %57, i32 0, i32 9, !dbg !15028
  %hca_cur52 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps51, i32 0, i32 0, !dbg !15028
  %arrayidx53 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur52, i64 0, i64 0, !dbg !15028
  %arraydecay54 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx53, i64 0, i64 0, !dbg !15028
  %add.ptr55 = getelementptr i32, i32* %arraydecay54, i64 1, !dbg !15028
  %58 = load i32, i32* %add.ptr55, align 4, !dbg !15028
  %and56 = and i32 %58, 16711680, !dbg !15028
  %shr = lshr i32 %and56, 8, !dbg !15028
  %or57 = or i32 %or, %shr, !dbg !15028
  %59 = load %struct.mlx5_esw_flow_attr*, %struct.mlx5_esw_flow_attr** %esw_attr, align 8, !dbg !15028
  %dests58 = getelementptr inbounds %struct.mlx5_esw_flow_attr, %struct.mlx5_esw_flow_attr* %59, i32 0, i32 9, !dbg !15028
  %60 = load i32, i32* %i, align 4, !dbg !15028
  %idxprom59 = sext i32 %60 to i64, !dbg !15028
  %arrayidx60 = getelementptr [2 x %struct.anon.193], [2 x %struct.anon.193]* %dests58, i64 0, i64 %idxprom59, !dbg !15028
  %mdev61 = getelementptr inbounds %struct.anon.193, %struct.anon.193* %arrayidx60, i32 0, i32 3, !dbg !15028
  %61 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %mdev61, align 8, !dbg !15028
  %caps62 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %61, i32 0, i32 9, !dbg !15028
  %hca_cur63 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps62, i32 0, i32 0, !dbg !15028
  %arrayidx64 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur63, i64 0, i64 0, !dbg !15028
  %arraydecay65 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx64, i64 0, i64 0, !dbg !15028
  %add.ptr66 = getelementptr i32, i32* %arraydecay65, i64 1, !dbg !15028
  %62 = load i32, i32* %add.ptr66, align 4, !dbg !15028
  %and67 = and i32 %62, -16777216, !dbg !15028
  %shr68 = lshr i32 %and67, 24, !dbg !15028
  %or69 = or i32 %or57, %shr68, !dbg !15028
  br label %cond.end, !dbg !15028

cond.false:                                       ; preds = %for.body
  %63 = load %struct.mlx5_esw_flow_attr*, %struct.mlx5_esw_flow_attr** %esw_attr, align 8, !dbg !15028
  %dests70 = getelementptr inbounds %struct.mlx5_esw_flow_attr, %struct.mlx5_esw_flow_attr* %63, i32 0, i32 9, !dbg !15028
  %64 = load i32, i32* %i, align 4, !dbg !15028
  %idxprom71 = sext i32 %64 to i64, !dbg !15028
  %arrayidx72 = getelementptr [2 x %struct.anon.193], [2 x %struct.anon.193]* %dests70, i64 0, i64 %idxprom71, !dbg !15028
  %mdev73 = getelementptr inbounds %struct.anon.193, %struct.anon.193* %arrayidx72, i32 0, i32 3, !dbg !15028
  %65 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %mdev73, align 8, !dbg !15028
  %caps74 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %65, i32 0, i32 9, !dbg !15028
  %hca_cur75 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps74, i32 0, i32 0, !dbg !15028
  %arrayidx76 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur75, i64 0, i64 0, !dbg !15028
  %arraydecay77 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx76, i64 0, i64 0, !dbg !15028
  %add.ptr78 = getelementptr i32, i32* %arraydecay77, i64 1, !dbg !15028
  %66 = load i32, i32* %add.ptr78, align 4, !dbg !15028
  %call79 = call i32 @__fswab32(i32 %66) #10, !dbg !15028
  br label %cond.end, !dbg !15028

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %or69, %cond.true ], [ %call79, %cond.false ], !dbg !15028
  %shr80 = lshr i32 %cond, 0, !dbg !15028
  %and81 = and i32 %shr80, 65535, !dbg !15028
  %conv82 = trunc i32 %and81 to i16, !dbg !15028
  %67 = load i32, i32* %i, align 4, !dbg !15029
  %idxprom83 = sext i32 %67 to i64, !dbg !15030
  %arrayidx84 = getelementptr [3 x %struct.mlx5_flow_destination], [3 x %struct.mlx5_flow_destination]* %dest, i64 0, i64 %idxprom83, !dbg !15030
  %68 = getelementptr inbounds %struct.mlx5_flow_destination, %struct.mlx5_flow_destination* %arrayidx84, i32 0, i32 1, !dbg !15031
  %vport85 = bitcast %union.anon.146* %68 to %struct.anon.147*, !dbg !15031
  %vhca_id = getelementptr inbounds %struct.anon.147, %struct.anon.147* %vport85, i32 0, i32 1, !dbg !15032
  store i16 %conv82, i16* %vhca_id, align 2, !dbg !15033
  %69 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !15034
  %dev = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %69, i32 0, i32 0, !dbg !15034
  %70 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !15034
  %caps86 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %70, i32 0, i32 9, !dbg !15034
  %hca_cur87 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps86, i32 0, i32 0, !dbg !15034
  %arrayidx88 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur87, i64 0, i64 9, !dbg !15034
  %arraydecay89 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx88, i64 0, i64 0, !dbg !15034
  %add.ptr90 = getelementptr i32, i32* %arraydecay89, i64 0, !dbg !15034
  %71 = load i32, i32* %add.ptr90, align 4, !dbg !15034
  %72 = call i1 @llvm.is.constant.i32(i32 %71), !dbg !15034
  br i1 %72, label %cond.true91, label %cond.false127, !dbg !15034

cond.true91:                                      ; preds = %cond.end
  %73 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !15034
  %dev92 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %73, i32 0, i32 0, !dbg !15034
  %74 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev92, align 8, !dbg !15034
  %caps93 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %74, i32 0, i32 9, !dbg !15034
  %hca_cur94 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps93, i32 0, i32 0, !dbg !15034
  %arrayidx95 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur94, i64 0, i64 9, !dbg !15034
  %arraydecay96 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx95, i64 0, i64 0, !dbg !15034
  %add.ptr97 = getelementptr i32, i32* %arraydecay96, i64 0, !dbg !15034
  %75 = load i32, i32* %add.ptr97, align 4, !dbg !15034
  %and98 = and i32 %75, 255, !dbg !15034
  %shl99 = shl i32 %and98, 24, !dbg !15034
  %76 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !15034
  %dev100 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %76, i32 0, i32 0, !dbg !15034
  %77 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev100, align 8, !dbg !15034
  %caps101 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %77, i32 0, i32 9, !dbg !15034
  %hca_cur102 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps101, i32 0, i32 0, !dbg !15034
  %arrayidx103 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur102, i64 0, i64 9, !dbg !15034
  %arraydecay104 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx103, i64 0, i64 0, !dbg !15034
  %add.ptr105 = getelementptr i32, i32* %arraydecay104, i64 0, !dbg !15034
  %78 = load i32, i32* %add.ptr105, align 4, !dbg !15034
  %and106 = and i32 %78, 65280, !dbg !15034
  %shl107 = shl i32 %and106, 8, !dbg !15034
  %or108 = or i32 %shl99, %shl107, !dbg !15034
  %79 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !15034
  %dev109 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %79, i32 0, i32 0, !dbg !15034
  %80 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev109, align 8, !dbg !15034
  %caps110 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %80, i32 0, i32 9, !dbg !15034
  %hca_cur111 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps110, i32 0, i32 0, !dbg !15034
  %arrayidx112 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur111, i64 0, i64 9, !dbg !15034
  %arraydecay113 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx112, i64 0, i64 0, !dbg !15034
  %add.ptr114 = getelementptr i32, i32* %arraydecay113, i64 0, !dbg !15034
  %81 = load i32, i32* %add.ptr114, align 4, !dbg !15034
  %and115 = and i32 %81, 16711680, !dbg !15034
  %shr116 = lshr i32 %and115, 8, !dbg !15034
  %or117 = or i32 %or108, %shr116, !dbg !15034
  %82 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !15034
  %dev118 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %82, i32 0, i32 0, !dbg !15034
  %83 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev118, align 8, !dbg !15034
  %caps119 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %83, i32 0, i32 9, !dbg !15034
  %hca_cur120 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps119, i32 0, i32 0, !dbg !15034
  %arrayidx121 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur120, i64 0, i64 9, !dbg !15034
  %arraydecay122 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx121, i64 0, i64 0, !dbg !15034
  %add.ptr123 = getelementptr i32, i32* %arraydecay122, i64 0, !dbg !15034
  %84 = load i32, i32* %add.ptr123, align 4, !dbg !15034
  %and124 = and i32 %84, -16777216, !dbg !15034
  %shr125 = lshr i32 %and124, 24, !dbg !15034
  %or126 = or i32 %or117, %shr125, !dbg !15034
  br label %cond.end135, !dbg !15034

cond.false127:                                    ; preds = %cond.end
  %85 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !15034
  %dev128 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %85, i32 0, i32 0, !dbg !15034
  %86 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev128, align 8, !dbg !15034
  %caps129 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %86, i32 0, i32 9, !dbg !15034
  %hca_cur130 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps129, i32 0, i32 0, !dbg !15034
  %arrayidx131 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur130, i64 0, i64 9, !dbg !15034
  %arraydecay132 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx131, i64 0, i64 0, !dbg !15034
  %add.ptr133 = getelementptr i32, i32* %arraydecay132, i64 0, !dbg !15034
  %87 = load i32, i32* %add.ptr133, align 4, !dbg !15034
  %call134 = call i32 @__fswab32(i32 %87) #10, !dbg !15034
  br label %cond.end135, !dbg !15034

cond.end135:                                      ; preds = %cond.false127, %cond.true91
  %cond136 = phi i32 [ %or126, %cond.true91 ], [ %call134, %cond.false127 ], !dbg !15034
  %shr137 = lshr i32 %cond136, 2, !dbg !15034
  %and138 = and i32 %shr137, 1, !dbg !15034
  %tobool = icmp ne i32 %and138, 0, !dbg !15034
  br i1 %tobool, label %if.then139, label %if.end146, !dbg !15036

if.then139:                                       ; preds = %cond.end135
  %88 = load i32, i32* %i, align 4, !dbg !15037
  %idxprom140 = sext i32 %88 to i64, !dbg !15038
  %arrayidx141 = getelementptr [3 x %struct.mlx5_flow_destination], [3 x %struct.mlx5_flow_destination]* %dest, i64 0, i64 %idxprom140, !dbg !15038
  %89 = getelementptr inbounds %struct.mlx5_flow_destination, %struct.mlx5_flow_destination* %arrayidx141, i32 0, i32 1, !dbg !15039
  %vport142 = bitcast %union.anon.146* %89 to %struct.anon.147*, !dbg !15039
  %flags = getelementptr inbounds %struct.anon.147, %struct.anon.147* %vport142, i32 0, i32 3, !dbg !15040
  %90 = load i8, i8* %flags, align 8, !dbg !15041
  %conv143 = zext i8 %90 to i32, !dbg !15041
  %or144 = or i32 %conv143, 1, !dbg !15041
  %conv145 = trunc i32 %or144 to i8, !dbg !15041
  store i8 %conv145, i8* %flags, align 8, !dbg !15041
  br label %if.end146, !dbg !15038

if.end146:                                        ; preds = %if.then139, %cond.end135
  %91 = load %struct.mlx5_esw_flow_attr*, %struct.mlx5_esw_flow_attr** %esw_attr, align 8, !dbg !15042
  %dests147 = getelementptr inbounds %struct.mlx5_esw_flow_attr, %struct.mlx5_esw_flow_attr* %91, i32 0, i32 9, !dbg !15044
  %92 = load i32, i32* %i, align 4, !dbg !15045
  %idxprom148 = sext i32 %92 to i64, !dbg !15042
  %arrayidx149 = getelementptr [2 x %struct.anon.193], [2 x %struct.anon.193]* %dests147, i64 0, i64 %idxprom148, !dbg !15042
  %flags150 = getelementptr inbounds %struct.anon.193, %struct.anon.193* %arrayidx149, i32 0, i32 0, !dbg !15046
  %93 = load i32, i32* %flags150, align 8, !dbg !15046
  %and151 = and i32 %93, 1, !dbg !15047
  %tobool152 = icmp ne i32 %and151, 0, !dbg !15047
  br i1 %tobool152, label %if.then153, label %if.end168, !dbg !15048

if.then153:                                       ; preds = %if.end146
  %94 = load i32, i32* %i, align 4, !dbg !15049
  %idxprom154 = sext i32 %94 to i64, !dbg !15051
  %arrayidx155 = getelementptr [3 x %struct.mlx5_flow_destination], [3 x %struct.mlx5_flow_destination]* %dest, i64 0, i64 %idxprom154, !dbg !15051
  %95 = getelementptr inbounds %struct.mlx5_flow_destination, %struct.mlx5_flow_destination* %arrayidx155, i32 0, i32 1, !dbg !15052
  %vport156 = bitcast %union.anon.146* %95 to %struct.anon.147*, !dbg !15052
  %flags157 = getelementptr inbounds %struct.anon.147, %struct.anon.147* %vport156, i32 0, i32 3, !dbg !15053
  %96 = load i8, i8* %flags157, align 8, !dbg !15054
  %conv158 = zext i8 %96 to i32, !dbg !15054
  %or159 = or i32 %conv158, 2, !dbg !15054
  %conv160 = trunc i32 %or159 to i8, !dbg !15054
  store i8 %conv160, i8* %flags157, align 8, !dbg !15054
  %97 = load %struct.mlx5_esw_flow_attr*, %struct.mlx5_esw_flow_attr** %esw_attr, align 8, !dbg !15055
  %dests161 = getelementptr inbounds %struct.mlx5_esw_flow_attr, %struct.mlx5_esw_flow_attr* %97, i32 0, i32 9, !dbg !15056
  %98 = load i32, i32* %i, align 4, !dbg !15057
  %idxprom162 = sext i32 %98 to i64, !dbg !15055
  %arrayidx163 = getelementptr [2 x %struct.anon.193], [2 x %struct.anon.193]* %dests161, i64 0, i64 %idxprom162, !dbg !15055
  %pkt_reformat = getelementptr inbounds %struct.anon.193, %struct.anon.193* %arrayidx163, i32 0, i32 2, !dbg !15058
  %99 = load %struct.mlx5_pkt_reformat*, %struct.mlx5_pkt_reformat** %pkt_reformat, align 8, !dbg !15058
  %100 = load i32, i32* %i, align 4, !dbg !15059
  %idxprom164 = sext i32 %100 to i64, !dbg !15060
  %arrayidx165 = getelementptr [3 x %struct.mlx5_flow_destination], [3 x %struct.mlx5_flow_destination]* %dest, i64 0, i64 %idxprom164, !dbg !15060
  %101 = getelementptr inbounds %struct.mlx5_flow_destination, %struct.mlx5_flow_destination* %arrayidx165, i32 0, i32 1, !dbg !15061
  %vport166 = bitcast %union.anon.146* %101 to %struct.anon.147*, !dbg !15061
  %pkt_reformat167 = getelementptr inbounds %struct.anon.147, %struct.anon.147* %vport166, i32 0, i32 2, !dbg !15062
  store %struct.mlx5_pkt_reformat* %99, %struct.mlx5_pkt_reformat** %pkt_reformat167, align 8, !dbg !15063
  br label %if.end168, !dbg !15064

if.end168:                                        ; preds = %if.then153, %if.end146
  br label %for.inc, !dbg !15065

for.inc:                                          ; preds = %if.end168
  %102 = load i32, i32* %i, align 4, !dbg !15066
  %inc = add i32 %102, 1, !dbg !15066
  store i32 %inc, i32* %i, align 4, !dbg !15066
  br label %for.cond, !dbg !15067, !llvm.loop !15068

for.end:                                          ; preds = %for.cond
  %103 = load i32, i32* %i, align 4, !dbg !15070
  %idxprom169 = sext i32 %103 to i64, !dbg !15071
  %arrayidx170 = getelementptr [3 x %struct.mlx5_flow_destination], [3 x %struct.mlx5_flow_destination]* %dest, i64 0, i64 %idxprom169, !dbg !15071
  %type171 = getelementptr inbounds %struct.mlx5_flow_destination, %struct.mlx5_flow_destination* %arrayidx170, i32 0, i32 0, !dbg !15072
  store i32 1, i32* %type171, align 16, !dbg !15073
  %104 = load %struct.mlx5_flow_table*, %struct.mlx5_flow_table** %fwd_fdb, align 8, !dbg !15074
  %105 = load i32, i32* %i, align 4, !dbg !15075
  %idxprom172 = sext i32 %105 to i64, !dbg !15076
  %arrayidx173 = getelementptr [3 x %struct.mlx5_flow_destination], [3 x %struct.mlx5_flow_destination]* %dest, i64 0, i64 %idxprom172, !dbg !15076
  %106 = getelementptr inbounds %struct.mlx5_flow_destination, %struct.mlx5_flow_destination* %arrayidx173, i32 0, i32 1, !dbg !15077
  %ft = bitcast %union.anon.146* %106 to %struct.mlx5_flow_table**, !dbg !15077
  store %struct.mlx5_flow_table* %104, %struct.mlx5_flow_table** %ft, align 8, !dbg !15078
  %107 = load i32, i32* %i, align 4, !dbg !15079
  %inc174 = add i32 %107, 1, !dbg !15079
  store i32 %inc174, i32* %i, align 4, !dbg !15079
  %108 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !15080
  %109 = load %struct.mlx5_flow_spec*, %struct.mlx5_flow_spec** %spec.addr, align 8, !dbg !15081
  %110 = load %struct.mlx5_esw_flow_attr*, %struct.mlx5_esw_flow_attr** %esw_attr, align 8, !dbg !15082
  call void @mlx5_eswitch_set_rule_source_port(%struct.mlx5_eswitch* %108, %struct.mlx5_flow_spec* %109, %struct.mlx5_esw_flow_attr* %110) #8, !dbg !15083
  %111 = load %struct.mlx5_flow_attr*, %struct.mlx5_flow_attr** %attr.addr, align 8, !dbg !15084
  %outer_match_level = getelementptr inbounds %struct.mlx5_flow_attr, %struct.mlx5_flow_attr* %111, i32 0, i32 11, !dbg !15086
  %112 = load i8, i8* %outer_match_level, align 1, !dbg !15086
  %conv175 = zext i8 %112 to i32, !dbg !15084
  %cmp176 = icmp ne i32 %conv175, 0, !dbg !15087
  br i1 %cmp176, label %if.then178, label %if.end182, !dbg !15088

if.then178:                                       ; preds = %for.end
  %113 = load %struct.mlx5_flow_spec*, %struct.mlx5_flow_spec** %spec.addr, align 8, !dbg !15089
  %match_criteria_enable = getelementptr inbounds %struct.mlx5_flow_spec, %struct.mlx5_flow_spec* %113, i32 0, i32 0, !dbg !15090
  %114 = load i8, i8* %match_criteria_enable, align 4, !dbg !15091
  %conv179 = zext i8 %114 to i32, !dbg !15091
  %or180 = or i32 %conv179, 1, !dbg !15091
  %conv181 = trunc i32 %or180 to i8, !dbg !15091
  store i8 %conv181, i8* %match_criteria_enable, align 4, !dbg !15091
  br label %if.end182, !dbg !15089

if.end182:                                        ; preds = %if.then178, %for.end
  %flags183 = getelementptr inbounds %struct.mlx5_flow_act, %struct.mlx5_flow_act* %flow_act, i32 0, i32 4, !dbg !15092
  %115 = load i32, i32* %flags183, align 8, !dbg !15093
  %or184 = or i32 %115, 2, !dbg !15093
  store i32 %or184, i32* %flags183, align 8, !dbg !15093
  %116 = load %struct.mlx5_flow_table*, %struct.mlx5_flow_table** %fast_fdb, align 8, !dbg !15094
  %117 = load %struct.mlx5_flow_spec*, %struct.mlx5_flow_spec** %spec.addr, align 8, !dbg !15095
  %arraydecay185 = getelementptr inbounds [3 x %struct.mlx5_flow_destination], [3 x %struct.mlx5_flow_destination]* %dest, i64 0, i64 0, !dbg !15096
  %118 = load i32, i32* %i, align 4, !dbg !15097
  %call186 = call %struct.mlx5_flow_handle* @mlx5_add_flow_rules(%struct.mlx5_flow_table* %116, %struct.mlx5_flow_spec* %117, %struct.mlx5_flow_act* %flow_act, %struct.mlx5_flow_destination* %arraydecay185, i32 %118) #8, !dbg !15098
  store %struct.mlx5_flow_handle* %call186, %struct.mlx5_flow_handle** %rule, align 8, !dbg !15099
  %119 = load %struct.mlx5_flow_handle*, %struct.mlx5_flow_handle** %rule, align 8, !dbg !15100
  %120 = bitcast %struct.mlx5_flow_handle* %119 to i8*, !dbg !15100
  %call187 = call zeroext i1 @IS_ERR(i8* %120) #8, !dbg !15102
  br i1 %call187, label %if.then188, label %if.end189, !dbg !15103

if.then188:                                       ; preds = %if.end182
  br label %add_err, !dbg !15104

if.end189:                                        ; preds = %if.end182
  %121 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !15105
  %offloads190 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %121, i32 0, i32 13, !dbg !15106
  %num_flows = getelementptr inbounds %struct.mlx5_esw_offload, %struct.mlx5_esw_offload* %offloads190, i32 0, i32 17, !dbg !15107
  store %struct.atomic64_t* %num_flows, %struct.atomic64_t** %v.addr.i, align 8
  %122 = load %struct.atomic64_t*, %struct.atomic64_t** %v.addr.i, align 8, !dbg !15108
  %123 = bitcast %struct.atomic64_t* %122 to i8*, !dbg !15108
  store i8* %123, i8** %v.addr.i.i, align 8
  store i64 8, i64* %size.addr.i.i, align 8
  %124 = load i8*, i8** %v.addr.i.i, align 8, !dbg !15109
  %125 = load i64, i64* %size.addr.i.i, align 8, !dbg !15110
  %conv.i.i = trunc i64 %125 to i32, !dbg !15110
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %124, i32 %conv.i.i) #11, !dbg !15111
  %126 = load i8*, i8** %v.addr.i.i, align 8, !dbg !15112
  %127 = load i64, i64* %size.addr.i.i, align 8, !dbg !15112
  call void @kcsan_check_access(i8* %126, i64 %127, i32 7) #11, !dbg !15112
  %128 = load %struct.atomic64_t*, %struct.atomic64_t** %v.addr.i, align 8, !dbg !15113
  store %struct.atomic64_t* %128, %struct.atomic64_t** %v.addr.i1.i, align 8
  %129 = load %struct.atomic64_t*, %struct.atomic64_t** %v.addr.i1.i, align 8, !dbg !15114
  %counter.i.i = getelementptr inbounds %struct.atomic64_t, %struct.atomic64_t* %129, i32 0, i32 0, !dbg !15115
  %130 = load %struct.atomic64_t*, %struct.atomic64_t** %v.addr.i1.i, align 8, !dbg !15116
  %counter1.i.i = getelementptr inbounds %struct.atomic64_t, %struct.atomic64_t* %130, i32 0, i32 0, !dbg !15117
  call void asm sideeffect "incq $0", "=*m,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %counter.i.i, i64* %counter1.i.i) #12, !dbg !15118, !srcloc !14696
  %131 = load %struct.mlx5_flow_handle*, %struct.mlx5_flow_handle** %rule, align 8, !dbg !15119
  store %struct.mlx5_flow_handle* %131, %struct.mlx5_flow_handle** %retval, align 8, !dbg !15120
  br label %return, !dbg !15120

add_err:                                          ; preds = %if.then188
  call void @llvm.dbg.label(metadata !15121), !dbg !15122
  %132 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !15123
  call void @esw_vport_tbl_put(%struct.mlx5_eswitch* %132, %struct.mlx5_vport_tbl_attr* %fwd_attr) #8, !dbg !15124
  br label %err_get_fwd, !dbg !15124

err_get_fwd:                                      ; preds = %add_err, %if.then12
  call void @llvm.dbg.label(metadata !15125), !dbg !15126
  %133 = load %struct.mlx5_fs_chains*, %struct.mlx5_fs_chains** %chains, align 8, !dbg !15127
  %134 = load %struct.mlx5_flow_attr*, %struct.mlx5_flow_attr** %attr.addr, align 8, !dbg !15128
  %chain191 = getelementptr inbounds %struct.mlx5_flow_attr, %struct.mlx5_flow_attr* %134, i32 0, i32 5, !dbg !15129
  %135 = load i32, i32* %chain191, align 8, !dbg !15129
  %136 = load %struct.mlx5_flow_attr*, %struct.mlx5_flow_attr** %attr.addr, align 8, !dbg !15130
  %prio192 = getelementptr inbounds %struct.mlx5_flow_attr, %struct.mlx5_flow_attr* %136, i32 0, i32 6, !dbg !15131
  %137 = load i16, i16* %prio192, align 4, !dbg !15131
  %conv193 = zext i16 %137 to i32, !dbg !15130
  call void @mlx5_chains_put_table(%struct.mlx5_fs_chains* %133, i32 %135, i32 %conv193, i32 0) #8, !dbg !15132
  br label %err_get_fast, !dbg !15132

err_get_fast:                                     ; preds = %err_get_fwd, %if.then
  call void @llvm.dbg.label(metadata !15133), !dbg !15134
  %138 = load %struct.mlx5_flow_handle*, %struct.mlx5_flow_handle** %rule, align 8, !dbg !15135
  store %struct.mlx5_flow_handle* %138, %struct.mlx5_flow_handle** %retval, align 8, !dbg !15136
  br label %return, !dbg !15136

return:                                           ; preds = %err_get_fast, %if.end189
  %139 = load %struct.mlx5_flow_handle*, %struct.mlx5_flow_handle** %retval, align 8, !dbg !15137
  ret %struct.mlx5_flow_handle* %139, !dbg !15137
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @mlx5_eswitch_del_offloaded_rule(%struct.mlx5_eswitch* %esw, %struct.mlx5_flow_handle* %rule, %struct.mlx5_flow_attr* %attr) #0 !dbg !15138 {
entry:
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  %rule.addr = alloca %struct.mlx5_flow_handle*, align 8
  %attr.addr = alloca %struct.mlx5_flow_attr*, align 8
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !15141, metadata !DIExpression()), !dbg !15142
  store %struct.mlx5_flow_handle* %rule, %struct.mlx5_flow_handle** %rule.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_flow_handle** %rule.addr, metadata !15143, metadata !DIExpression()), !dbg !15144
  store %struct.mlx5_flow_attr* %attr, %struct.mlx5_flow_attr** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_flow_attr** %attr.addr, metadata !15145, metadata !DIExpression()), !dbg !15146
  %0 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !15147
  %1 = load %struct.mlx5_flow_handle*, %struct.mlx5_flow_handle** %rule.addr, align 8, !dbg !15148
  %2 = load %struct.mlx5_flow_attr*, %struct.mlx5_flow_attr** %attr.addr, align 8, !dbg !15149
  call void @__mlx5_eswitch_del_rule(%struct.mlx5_eswitch* %0, %struct.mlx5_flow_handle* %1, %struct.mlx5_flow_attr* %2, i1 zeroext false) #8, !dbg !15150
  ret void, !dbg !15151
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__mlx5_eswitch_del_rule(%struct.mlx5_eswitch* %esw, %struct.mlx5_flow_handle* %rule, %struct.mlx5_flow_attr* %attr, i1 zeroext %fwd_rule) #0 !dbg !15152 {
entry:
  %v.addr.i1.i = alloca %struct.atomic64_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic64_t** %v.addr.i1.i, metadata !15155, metadata !DIExpression()), !dbg !15157
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !12689, metadata !DIExpression()), !dbg !15161
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !12699, metadata !DIExpression()), !dbg !15163
  %v.addr.i = alloca %struct.atomic64_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic64_t** %v.addr.i, metadata !15164, metadata !DIExpression()), !dbg !15165
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  %rule.addr = alloca %struct.mlx5_flow_handle*, align 8
  %attr.addr = alloca %struct.mlx5_flow_attr*, align 8
  %fwd_rule.addr = alloca i8, align 1
  %esw_attr = alloca %struct.mlx5_esw_flow_attr*, align 8
  %chains = alloca %struct.mlx5_fs_chains*, align 8
  %split = alloca i8, align 1
  %fwd_attr = alloca %struct.mlx5_vport_tbl_attr, align 2
  %i = alloca i32, align 4
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !15166, metadata !DIExpression()), !dbg !15167
  store %struct.mlx5_flow_handle* %rule, %struct.mlx5_flow_handle** %rule.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_flow_handle** %rule.addr, metadata !15168, metadata !DIExpression()), !dbg !15169
  store %struct.mlx5_flow_attr* %attr, %struct.mlx5_flow_attr** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_flow_attr** %attr.addr, metadata !15170, metadata !DIExpression()), !dbg !15171
  %frombool = zext i1 %fwd_rule to i8
  store i8 %frombool, i8* %fwd_rule.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %fwd_rule.addr, metadata !15172, metadata !DIExpression()), !dbg !15173
  call void @llvm.dbg.declare(metadata %struct.mlx5_esw_flow_attr** %esw_attr, metadata !15174, metadata !DIExpression()), !dbg !15175
  %0 = load %struct.mlx5_flow_attr*, %struct.mlx5_flow_attr** %attr.addr, align 8, !dbg !15176
  %1 = getelementptr inbounds %struct.mlx5_flow_attr, %struct.mlx5_flow_attr* %0, i32 0, i32 13, !dbg !15177
  %esw_attr1 = bitcast %union.anon.192* %1 to [0 x %struct.mlx5_esw_flow_attr]*, !dbg !15177
  %arraydecay = getelementptr inbounds [0 x %struct.mlx5_esw_flow_attr], [0 x %struct.mlx5_esw_flow_attr]* %esw_attr1, i64 0, i64 0, !dbg !15176
  store %struct.mlx5_esw_flow_attr* %arraydecay, %struct.mlx5_esw_flow_attr** %esw_attr, align 8, !dbg !15175
  call void @llvm.dbg.declare(metadata %struct.mlx5_fs_chains** %chains, metadata !15178, metadata !DIExpression()), !dbg !15179
  %2 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !15180
  %fdb_table = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %2, i32 0, i32 2, !dbg !15180
  %3 = getelementptr inbounds %struct.mlx5_eswitch_fdb, %struct.mlx5_eswitch_fdb* %fdb_table, i32 0, i32 0, !dbg !15180
  %offloads = bitcast %union.anon.154* %3 to %struct.offloads_fdb*, !dbg !15180
  %esw_chains_priv = getelementptr inbounds %struct.offloads_fdb, %struct.offloads_fdb* %offloads, i32 0, i32 9, !dbg !15180
  %4 = load %struct.mlx5_fs_chains*, %struct.mlx5_fs_chains** %esw_chains_priv, align 8, !dbg !15180
  store %struct.mlx5_fs_chains* %4, %struct.mlx5_fs_chains** %chains, align 8, !dbg !15179
  call void @llvm.dbg.declare(metadata i8* %split, metadata !15181, metadata !DIExpression()), !dbg !15182
  %5 = load %struct.mlx5_esw_flow_attr*, %struct.mlx5_esw_flow_attr** %esw_attr, align 8, !dbg !15183
  %split_count = getelementptr inbounds %struct.mlx5_esw_flow_attr, %struct.mlx5_esw_flow_attr* %5, i32 0, i32 3, !dbg !15184
  %6 = load i32, i32* %split_count, align 8, !dbg !15184
  %cmp = icmp sgt i32 %6, 0, !dbg !15185
  %frombool2 = zext i1 %cmp to i8, !dbg !15182
  store i8 %frombool2, i8* %split, align 1, !dbg !15182
  call void @llvm.dbg.declare(metadata %struct.mlx5_vport_tbl_attr* %fwd_attr, metadata !15186, metadata !DIExpression()), !dbg !15187
  call void @llvm.dbg.declare(metadata i32* %i, metadata !15188, metadata !DIExpression()), !dbg !15189
  %7 = load %struct.mlx5_flow_handle*, %struct.mlx5_flow_handle** %rule.addr, align 8, !dbg !15190
  call void @mlx5_del_flow_rules(%struct.mlx5_flow_handle* %7) #8, !dbg !15191
  %8 = load %struct.mlx5_flow_attr*, %struct.mlx5_flow_attr** %attr.addr, align 8, !dbg !15192
  %flags = getelementptr inbounds %struct.mlx5_flow_attr, %struct.mlx5_flow_attr* %8, i32 0, i32 12, !dbg !15194
  %9 = load i32, i32* %flags, align 4, !dbg !15194
  %and = and i32 %9, 2, !dbg !15195
  %tobool = icmp ne i32 %and, 0, !dbg !15195
  br i1 %tobool, label %if.end10, label %if.then, !dbg !15196

if.then:                                          ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !15197
  br label %for.cond, !dbg !15200

for.cond:                                         ; preds = %for.inc, %if.then
  %10 = load i32, i32* %i, align 4, !dbg !15201
  %cmp3 = icmp slt i32 %10, 2, !dbg !15203
  br i1 %cmp3, label %for.body, label %for.end, !dbg !15204

for.body:                                         ; preds = %for.cond
  %11 = load %struct.mlx5_esw_flow_attr*, %struct.mlx5_esw_flow_attr** %esw_attr, align 8, !dbg !15205
  %dests = getelementptr inbounds %struct.mlx5_esw_flow_attr, %struct.mlx5_esw_flow_attr* %11, i32 0, i32 9, !dbg !15208
  %12 = load i32, i32* %i, align 4, !dbg !15209
  %idxprom = sext i32 %12 to i64, !dbg !15205
  %arrayidx = getelementptr [2 x %struct.anon.193], [2 x %struct.anon.193]* %dests, i64 0, i64 %idxprom, !dbg !15205
  %termtbl = getelementptr inbounds %struct.anon.193, %struct.anon.193* %arrayidx, i32 0, i32 4, !dbg !15210
  %13 = load %struct.mlx5_termtbl_handle*, %struct.mlx5_termtbl_handle** %termtbl, align 8, !dbg !15210
  %tobool4 = icmp ne %struct.mlx5_termtbl_handle* %13, null, !dbg !15205
  br i1 %tobool4, label %if.then5, label %if.end, !dbg !15211

if.then5:                                         ; preds = %for.body
  %14 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !15212
  %15 = load %struct.mlx5_esw_flow_attr*, %struct.mlx5_esw_flow_attr** %esw_attr, align 8, !dbg !15213
  %dests6 = getelementptr inbounds %struct.mlx5_esw_flow_attr, %struct.mlx5_esw_flow_attr* %15, i32 0, i32 9, !dbg !15214
  %16 = load i32, i32* %i, align 4, !dbg !15215
  %idxprom7 = sext i32 %16 to i64, !dbg !15213
  %arrayidx8 = getelementptr [2 x %struct.anon.193], [2 x %struct.anon.193]* %dests6, i64 0, i64 %idxprom7, !dbg !15213
  %termtbl9 = getelementptr inbounds %struct.anon.193, %struct.anon.193* %arrayidx8, i32 0, i32 4, !dbg !15216
  %17 = load %struct.mlx5_termtbl_handle*, %struct.mlx5_termtbl_handle** %termtbl9, align 8, !dbg !15216
  call void @mlx5_eswitch_termtbl_put(%struct.mlx5_eswitch* %14, %struct.mlx5_termtbl_handle* %17) #8, !dbg !15217
  br label %if.end, !dbg !15217

if.end:                                           ; preds = %if.then5, %for.body
  br label %for.inc, !dbg !15218

for.inc:                                          ; preds = %if.end
  %18 = load i32, i32* %i, align 4, !dbg !15219
  %inc = add i32 %18, 1, !dbg !15219
  store i32 %inc, i32* %i, align 4, !dbg !15219
  br label %for.cond, !dbg !15220, !llvm.loop !15221

for.end:                                          ; preds = %for.cond
  br label %if.end10, !dbg !15223

if.end10:                                         ; preds = %for.end, %entry
  %19 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !15224
  %offloads11 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %19, i32 0, i32 13, !dbg !15225
  %num_flows = getelementptr inbounds %struct.mlx5_esw_offload, %struct.mlx5_esw_offload* %offloads11, i32 0, i32 17, !dbg !15226
  store %struct.atomic64_t* %num_flows, %struct.atomic64_t** %v.addr.i, align 8
  %20 = load %struct.atomic64_t*, %struct.atomic64_t** %v.addr.i, align 8, !dbg !15227
  %21 = bitcast %struct.atomic64_t* %20 to i8*, !dbg !15227
  store i8* %21, i8** %v.addr.i.i, align 8
  store i64 8, i64* %size.addr.i.i, align 8
  %22 = load i8*, i8** %v.addr.i.i, align 8, !dbg !15228
  %23 = load i64, i64* %size.addr.i.i, align 8, !dbg !15229
  %conv.i.i = trunc i64 %23 to i32, !dbg !15229
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %22, i32 %conv.i.i) #11, !dbg !15230
  %24 = load i8*, i8** %v.addr.i.i, align 8, !dbg !15231
  %25 = load i64, i64* %size.addr.i.i, align 8, !dbg !15231
  call void @kcsan_check_access(i8* %24, i64 %25, i32 7) #11, !dbg !15231
  %26 = load %struct.atomic64_t*, %struct.atomic64_t** %v.addr.i, align 8, !dbg !15232
  store %struct.atomic64_t* %26, %struct.atomic64_t** %v.addr.i1.i, align 8
  %27 = load %struct.atomic64_t*, %struct.atomic64_t** %v.addr.i1.i, align 8, !dbg !15233
  %counter.i.i = getelementptr inbounds %struct.atomic64_t, %struct.atomic64_t* %27, i32 0, i32 0, !dbg !15234
  %28 = load %struct.atomic64_t*, %struct.atomic64_t** %v.addr.i1.i, align 8, !dbg !15235
  %counter1.i.i = getelementptr inbounds %struct.atomic64_t, %struct.atomic64_t* %28, i32 0, i32 0, !dbg !15236
  call void asm sideeffect "decq $0", "=*m,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %counter.i.i, i64* %counter1.i.i) #12, !dbg !15237, !srcloc !15238
  %29 = load i8, i8* %fwd_rule.addr, align 1, !dbg !15239
  %tobool12 = trunc i8 %29 to i1, !dbg !15239
  br i1 %tobool12, label %if.then14, label %lor.lhs.false, !dbg !15241

lor.lhs.false:                                    ; preds = %if.end10
  %30 = load i8, i8* %split, align 1, !dbg !15242
  %tobool13 = trunc i8 %30 to i1, !dbg !15242
  br i1 %tobool13, label %if.then14, label %if.end18, !dbg !15243

if.then14:                                        ; preds = %lor.lhs.false, %if.end10
  %31 = load %struct.mlx5_flow_attr*, %struct.mlx5_flow_attr** %attr.addr, align 8, !dbg !15244
  %chain = getelementptr inbounds %struct.mlx5_flow_attr, %struct.mlx5_flow_attr* %31, i32 0, i32 5, !dbg !15246
  %32 = load i32, i32* %chain, align 8, !dbg !15246
  %conv = trunc i32 %32 to i16, !dbg !15244
  %chain15 = getelementptr inbounds %struct.mlx5_vport_tbl_attr, %struct.mlx5_vport_tbl_attr* %fwd_attr, i32 0, i32 0, !dbg !15247
  store i16 %conv, i16* %chain15, align 2, !dbg !15248
  %33 = load %struct.mlx5_flow_attr*, %struct.mlx5_flow_attr** %attr.addr, align 8, !dbg !15249
  %prio = getelementptr inbounds %struct.mlx5_flow_attr, %struct.mlx5_flow_attr* %33, i32 0, i32 6, !dbg !15250
  %34 = load i16, i16* %prio, align 4, !dbg !15250
  %prio16 = getelementptr inbounds %struct.mlx5_vport_tbl_attr, %struct.mlx5_vport_tbl_attr* %fwd_attr, i32 0, i32 1, !dbg !15251
  store i16 %34, i16* %prio16, align 2, !dbg !15252
  %35 = load %struct.mlx5_esw_flow_attr*, %struct.mlx5_esw_flow_attr** %esw_attr, align 8, !dbg !15253
  %in_rep = getelementptr inbounds %struct.mlx5_esw_flow_attr, %struct.mlx5_esw_flow_attr* %35, i32 0, i32 0, !dbg !15254
  %36 = load %struct.mlx5_eswitch_rep*, %struct.mlx5_eswitch_rep** %in_rep, align 8, !dbg !15254
  %vport = getelementptr inbounds %struct.mlx5_eswitch_rep, %struct.mlx5_eswitch_rep* %36, i32 0, i32 1, !dbg !15255
  %37 = load i16, i16* %vport, align 8, !dbg !15255
  %vport17 = getelementptr inbounds %struct.mlx5_vport_tbl_attr, %struct.mlx5_vport_tbl_attr* %fwd_attr, i32 0, i32 2, !dbg !15256
  store i16 %37, i16* %vport17, align 2, !dbg !15257
  br label %if.end18, !dbg !15258

if.end18:                                         ; preds = %if.then14, %lor.lhs.false
  %38 = load i8, i8* %fwd_rule.addr, align 1, !dbg !15259
  %tobool19 = trunc i8 %38 to i1, !dbg !15259
  br i1 %tobool19, label %if.then20, label %if.else, !dbg !15261

if.then20:                                        ; preds = %if.end18
  %39 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !15262
  call void @esw_vport_tbl_put(%struct.mlx5_eswitch* %39, %struct.mlx5_vport_tbl_attr* %fwd_attr) #8, !dbg !15264
  %40 = load %struct.mlx5_fs_chains*, %struct.mlx5_fs_chains** %chains, align 8, !dbg !15265
  %41 = load %struct.mlx5_flow_attr*, %struct.mlx5_flow_attr** %attr.addr, align 8, !dbg !15266
  %chain21 = getelementptr inbounds %struct.mlx5_flow_attr, %struct.mlx5_flow_attr* %41, i32 0, i32 5, !dbg !15267
  %42 = load i32, i32* %chain21, align 8, !dbg !15267
  %43 = load %struct.mlx5_flow_attr*, %struct.mlx5_flow_attr** %attr.addr, align 8, !dbg !15268
  %prio22 = getelementptr inbounds %struct.mlx5_flow_attr, %struct.mlx5_flow_attr* %43, i32 0, i32 6, !dbg !15269
  %44 = load i16, i16* %prio22, align 4, !dbg !15269
  %conv23 = zext i16 %44 to i32, !dbg !15268
  call void @mlx5_chains_put_table(%struct.mlx5_fs_chains* %40, i32 %42, i32 %conv23, i32 0) #8, !dbg !15270
  br label %if.end43, !dbg !15271

if.else:                                          ; preds = %if.end18
  %45 = load i8, i8* %split, align 1, !dbg !15272
  %tobool24 = trunc i8 %45 to i1, !dbg !15272
  br i1 %tobool24, label %if.then25, label %if.else26, !dbg !15275

if.then25:                                        ; preds = %if.else
  %46 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !15276
  call void @esw_vport_tbl_put(%struct.mlx5_eswitch* %46, %struct.mlx5_vport_tbl_attr* %fwd_attr) #8, !dbg !15277
  br label %if.end38, !dbg !15277

if.else26:                                        ; preds = %if.else
  %47 = load %struct.mlx5_flow_attr*, %struct.mlx5_flow_attr** %attr.addr, align 8, !dbg !15278
  %chain27 = getelementptr inbounds %struct.mlx5_flow_attr, %struct.mlx5_flow_attr* %47, i32 0, i32 5, !dbg !15280
  %48 = load i32, i32* %chain27, align 8, !dbg !15280
  %tobool28 = icmp ne i32 %48, 0, !dbg !15278
  br i1 %tobool28, label %if.then33, label %lor.lhs.false29, !dbg !15281

lor.lhs.false29:                                  ; preds = %if.else26
  %49 = load %struct.mlx5_flow_attr*, %struct.mlx5_flow_attr** %attr.addr, align 8, !dbg !15282
  %prio30 = getelementptr inbounds %struct.mlx5_flow_attr, %struct.mlx5_flow_attr* %49, i32 0, i32 6, !dbg !15283
  %50 = load i16, i16* %prio30, align 4, !dbg !15283
  %conv31 = zext i16 %50 to i32, !dbg !15282
  %tobool32 = icmp ne i32 %conv31, 0, !dbg !15282
  br i1 %tobool32, label %if.then33, label %if.end37, !dbg !15284

if.then33:                                        ; preds = %lor.lhs.false29, %if.else26
  %51 = load %struct.mlx5_fs_chains*, %struct.mlx5_fs_chains** %chains, align 8, !dbg !15285
  %52 = load %struct.mlx5_flow_attr*, %struct.mlx5_flow_attr** %attr.addr, align 8, !dbg !15286
  %chain34 = getelementptr inbounds %struct.mlx5_flow_attr, %struct.mlx5_flow_attr* %52, i32 0, i32 5, !dbg !15287
  %53 = load i32, i32* %chain34, align 8, !dbg !15287
  %54 = load %struct.mlx5_flow_attr*, %struct.mlx5_flow_attr** %attr.addr, align 8, !dbg !15288
  %prio35 = getelementptr inbounds %struct.mlx5_flow_attr, %struct.mlx5_flow_attr* %54, i32 0, i32 6, !dbg !15289
  %55 = load i16, i16* %prio35, align 4, !dbg !15289
  %conv36 = zext i16 %55 to i32, !dbg !15288
  call void @mlx5_chains_put_table(%struct.mlx5_fs_chains* %51, i32 %53, i32 %conv36, i32 0) #8, !dbg !15290
  br label %if.end37, !dbg !15290

if.end37:                                         ; preds = %if.then33, %lor.lhs.false29
  br label %if.end38

if.end38:                                         ; preds = %if.end37, %if.then25
  %56 = load %struct.mlx5_flow_attr*, %struct.mlx5_flow_attr** %attr.addr, align 8, !dbg !15291
  %dest_chain = getelementptr inbounds %struct.mlx5_flow_attr, %struct.mlx5_flow_attr* %56, i32 0, i32 7, !dbg !15293
  %57 = load i32, i32* %dest_chain, align 8, !dbg !15293
  %tobool39 = icmp ne i32 %57, 0, !dbg !15291
  br i1 %tobool39, label %if.then40, label %if.end42, !dbg !15294

if.then40:                                        ; preds = %if.end38
  %58 = load %struct.mlx5_fs_chains*, %struct.mlx5_fs_chains** %chains, align 8, !dbg !15295
  %59 = load %struct.mlx5_flow_attr*, %struct.mlx5_flow_attr** %attr.addr, align 8, !dbg !15296
  %dest_chain41 = getelementptr inbounds %struct.mlx5_flow_attr, %struct.mlx5_flow_attr* %59, i32 0, i32 7, !dbg !15297
  %60 = load i32, i32* %dest_chain41, align 8, !dbg !15297
  call void @mlx5_chains_put_table(%struct.mlx5_fs_chains* %58, i32 %60, i32 1, i32 0) #8, !dbg !15298
  br label %if.end42, !dbg !15298

if.end42:                                         ; preds = %if.then40, %if.end38
  br label %if.end43

if.end43:                                         ; preds = %if.end42, %if.then20
  ret void, !dbg !15299
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @mlx5_eswitch_del_fwd_rule(%struct.mlx5_eswitch* %esw, %struct.mlx5_flow_handle* %rule, %struct.mlx5_flow_attr* %attr) #0 !dbg !15300 {
entry:
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  %rule.addr = alloca %struct.mlx5_flow_handle*, align 8
  %attr.addr = alloca %struct.mlx5_flow_attr*, align 8
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !15301, metadata !DIExpression()), !dbg !15302
  store %struct.mlx5_flow_handle* %rule, %struct.mlx5_flow_handle** %rule.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_flow_handle** %rule.addr, metadata !15303, metadata !DIExpression()), !dbg !15304
  store %struct.mlx5_flow_attr* %attr, %struct.mlx5_flow_attr** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_flow_attr** %attr.addr, metadata !15305, metadata !DIExpression()), !dbg !15306
  %0 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !15307
  %1 = load %struct.mlx5_flow_handle*, %struct.mlx5_flow_handle** %rule.addr, align 8, !dbg !15308
  %2 = load %struct.mlx5_flow_attr*, %struct.mlx5_flow_attr** %attr.addr, align 8, !dbg !15309
  call void @__mlx5_eswitch_del_rule(%struct.mlx5_eswitch* %0, %struct.mlx5_flow_handle* %1, %struct.mlx5_flow_attr* %2, i1 zeroext true) #8, !dbg !15310
  ret void, !dbg !15311
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @mlx5_eswitch_add_vlan_action(%struct.mlx5_eswitch* %esw, %struct.mlx5_flow_attr* %attr) #0 !dbg !15312 {
entry:
  %retval = alloca i32, align 4
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  %attr.addr = alloca %struct.mlx5_flow_attr*, align 8
  %offloads = alloca %struct.offloads_fdb*, align 8
  %esw_attr = alloca %struct.mlx5_esw_flow_attr*, align 8
  %vport = alloca %struct.mlx5_eswitch_rep*, align 8
  %push = alloca i8, align 1
  %pop = alloca i8, align 1
  %fwd = alloca i8, align 1
  %err = alloca i32, align 4
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !15315, metadata !DIExpression()), !dbg !15316
  store %struct.mlx5_flow_attr* %attr, %struct.mlx5_flow_attr** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_flow_attr** %attr.addr, metadata !15317, metadata !DIExpression()), !dbg !15318
  call void @llvm.dbg.declare(metadata %struct.offloads_fdb** %offloads, metadata !15319, metadata !DIExpression()), !dbg !15321
  %0 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !15322
  %fdb_table = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %0, i32 0, i32 2, !dbg !15323
  %1 = getelementptr inbounds %struct.mlx5_eswitch_fdb, %struct.mlx5_eswitch_fdb* %fdb_table, i32 0, i32 0, !dbg !15324
  %offloads1 = bitcast %union.anon.154* %1 to %struct.offloads_fdb*, !dbg !15324
  store %struct.offloads_fdb* %offloads1, %struct.offloads_fdb** %offloads, align 8, !dbg !15321
  call void @llvm.dbg.declare(metadata %struct.mlx5_esw_flow_attr** %esw_attr, metadata !15325, metadata !DIExpression()), !dbg !15326
  %2 = load %struct.mlx5_flow_attr*, %struct.mlx5_flow_attr** %attr.addr, align 8, !dbg !15327
  %3 = getelementptr inbounds %struct.mlx5_flow_attr, %struct.mlx5_flow_attr* %2, i32 0, i32 13, !dbg !15328
  %esw_attr2 = bitcast %union.anon.192* %3 to [0 x %struct.mlx5_esw_flow_attr]*, !dbg !15328
  %arraydecay = getelementptr inbounds [0 x %struct.mlx5_esw_flow_attr], [0 x %struct.mlx5_esw_flow_attr]* %esw_attr2, i64 0, i64 0, !dbg !15327
  store %struct.mlx5_esw_flow_attr* %arraydecay, %struct.mlx5_esw_flow_attr** %esw_attr, align 8, !dbg !15326
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch_rep** %vport, metadata !15329, metadata !DIExpression()), !dbg !15330
  store %struct.mlx5_eswitch_rep* null, %struct.mlx5_eswitch_rep** %vport, align 8, !dbg !15330
  call void @llvm.dbg.declare(metadata i8* %push, metadata !15331, metadata !DIExpression()), !dbg !15332
  call void @llvm.dbg.declare(metadata i8* %pop, metadata !15333, metadata !DIExpression()), !dbg !15334
  call void @llvm.dbg.declare(metadata i8* %fwd, metadata !15335, metadata !DIExpression()), !dbg !15336
  call void @llvm.dbg.declare(metadata i32* %err, metadata !15337, metadata !DIExpression()), !dbg !15338
  store i32 0, i32* %err, align 4, !dbg !15338
  %4 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !15339
  %dev = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %4, i32 0, i32 0, !dbg !15341
  %5 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !15341
  %call = call zeroext i1 @mlx5_eswitch_vlan_actions_supported(%struct.mlx5_core_dev* %5, i8 zeroext 1) #8, !dbg !15342
  br i1 %call, label %if.then, label %if.end, !dbg !15343

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !15344
  br label %return, !dbg !15344

if.end:                                           ; preds = %entry
  %6 = load %struct.mlx5_flow_attr*, %struct.mlx5_flow_attr** %attr.addr, align 8, !dbg !15345
  %action = getelementptr inbounds %struct.mlx5_flow_attr, %struct.mlx5_flow_attr* %6, i32 0, i32 0, !dbg !15346
  %7 = load i32, i32* %action, align 8, !dbg !15346
  %and = and i32 %7, 256, !dbg !15347
  %tobool = icmp ne i32 %and, 0, !dbg !15348
  %lnot = xor i1 %tobool, true, !dbg !15348
  %lnot3 = xor i1 %lnot, true, !dbg !15349
  %frombool = zext i1 %lnot3 to i8, !dbg !15350
  store i8 %frombool, i8* %push, align 1, !dbg !15350
  %8 = load %struct.mlx5_flow_attr*, %struct.mlx5_flow_attr** %attr.addr, align 8, !dbg !15351
  %action4 = getelementptr inbounds %struct.mlx5_flow_attr, %struct.mlx5_flow_attr* %8, i32 0, i32 0, !dbg !15352
  %9 = load i32, i32* %action4, align 8, !dbg !15352
  %and5 = and i32 %9, 128, !dbg !15353
  %tobool6 = icmp ne i32 %and5, 0, !dbg !15354
  %lnot7 = xor i1 %tobool6, true, !dbg !15354
  %lnot8 = xor i1 %lnot7, true, !dbg !15355
  %frombool9 = zext i1 %lnot8 to i8, !dbg !15356
  store i8 %frombool9, i8* %pop, align 1, !dbg !15356
  %10 = load %struct.mlx5_flow_attr*, %struct.mlx5_flow_attr** %attr.addr, align 8, !dbg !15357
  %action10 = getelementptr inbounds %struct.mlx5_flow_attr, %struct.mlx5_flow_attr* %10, i32 0, i32 0, !dbg !15358
  %11 = load i32, i32* %action10, align 8, !dbg !15358
  %and11 = and i32 %11, 4, !dbg !15359
  %tobool12 = icmp ne i32 %and11, 0, !dbg !15359
  br i1 %tobool12, label %land.rhs, label %land.end, !dbg !15360

land.rhs:                                         ; preds = %if.end
  %12 = load %struct.mlx5_flow_attr*, %struct.mlx5_flow_attr** %attr.addr, align 8, !dbg !15361
  %dest_chain = getelementptr inbounds %struct.mlx5_flow_attr, %struct.mlx5_flow_attr* %12, i32 0, i32 7, !dbg !15362
  %13 = load i32, i32* %dest_chain, align 8, !dbg !15362
  %tobool13 = icmp ne i32 %13, 0, !dbg !15363
  %lnot14 = xor i1 %tobool13, true, !dbg !15363
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end
  %14 = phi i1 [ false, %if.end ], [ %lnot14, %land.rhs ], !dbg !15364
  %lnot15 = xor i1 %14, true, !dbg !15365
  %lnot16 = xor i1 %lnot15, true, !dbg !15366
  %frombool17 = zext i1 %lnot16 to i8, !dbg !15367
  store i8 %frombool17, i8* %fwd, align 1, !dbg !15367
  %15 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !15368
  %state_lock = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %15, i32 0, i32 10, !dbg !15369
  call void @mutex_lock(%struct.mutex* %state_lock) #8, !dbg !15370
  %16 = load %struct.mlx5_esw_flow_attr*, %struct.mlx5_esw_flow_attr** %esw_attr, align 8, !dbg !15371
  %17 = load i8, i8* %push, align 1, !dbg !15372
  %tobool18 = trunc i8 %17 to i1, !dbg !15372
  %18 = load i8, i8* %pop, align 1, !dbg !15373
  %tobool19 = trunc i8 %18 to i1, !dbg !15373
  %19 = load i8, i8* %fwd, align 1, !dbg !15374
  %tobool20 = trunc i8 %19 to i1, !dbg !15374
  %call21 = call i32 @esw_add_vlan_action_check(%struct.mlx5_esw_flow_attr* %16, i1 zeroext %tobool18, i1 zeroext %tobool19, i1 zeroext %tobool20) #8, !dbg !15375
  store i32 %call21, i32* %err, align 4, !dbg !15376
  %20 = load i32, i32* %err, align 4, !dbg !15377
  %tobool22 = icmp ne i32 %20, 0, !dbg !15377
  br i1 %tobool22, label %if.then23, label %if.end24, !dbg !15379

if.then23:                                        ; preds = %land.end
  br label %unlock, !dbg !15380

if.end24:                                         ; preds = %land.end
  %21 = load %struct.mlx5_flow_attr*, %struct.mlx5_flow_attr** %attr.addr, align 8, !dbg !15381
  %flags = getelementptr inbounds %struct.mlx5_flow_attr, %struct.mlx5_flow_attr* %21, i32 0, i32 12, !dbg !15382
  %22 = load i32, i32* %flags, align 4, !dbg !15383
  %and25 = and i32 %22, -2, !dbg !15383
  store i32 %and25, i32* %flags, align 4, !dbg !15383
  %23 = load %struct.mlx5_esw_flow_attr*, %struct.mlx5_esw_flow_attr** %esw_attr, align 8, !dbg !15384
  %24 = load i8, i8* %push, align 1, !dbg !15385
  %tobool26 = trunc i8 %24 to i1, !dbg !15385
  %25 = load i8, i8* %pop, align 1, !dbg !15386
  %tobool27 = trunc i8 %25 to i1, !dbg !15386
  %call28 = call %struct.mlx5_eswitch_rep* @esw_vlan_action_get_vport(%struct.mlx5_esw_flow_attr* %23, i1 zeroext %tobool26, i1 zeroext %tobool27) #8, !dbg !15387
  store %struct.mlx5_eswitch_rep* %call28, %struct.mlx5_eswitch_rep** %vport, align 8, !dbg !15388
  %26 = load i8, i8* %push, align 1, !dbg !15389
  %tobool29 = trunc i8 %26 to i1, !dbg !15389
  br i1 %tobool29, label %if.end39, label %land.lhs.true, !dbg !15391

land.lhs.true:                                    ; preds = %if.end24
  %27 = load i8, i8* %pop, align 1, !dbg !15392
  %tobool30 = trunc i8 %27 to i1, !dbg !15392
  br i1 %tobool30, label %if.end39, label %land.lhs.true31, !dbg !15393

land.lhs.true31:                                  ; preds = %land.lhs.true
  %28 = load i8, i8* %fwd, align 1, !dbg !15394
  %tobool32 = trunc i8 %28 to i1, !dbg !15394
  br i1 %tobool32, label %if.then33, label %if.end39, !dbg !15395

if.then33:                                        ; preds = %land.lhs.true31
  %29 = load %struct.mlx5_esw_flow_attr*, %struct.mlx5_esw_flow_attr** %esw_attr, align 8, !dbg !15396
  %dests = getelementptr inbounds %struct.mlx5_esw_flow_attr, %struct.mlx5_esw_flow_attr* %29, i32 0, i32 9, !dbg !15399
  %arrayidx = getelementptr [2 x %struct.anon.193], [2 x %struct.anon.193]* %dests, i64 0, i64 0, !dbg !15396
  %rep = getelementptr inbounds %struct.anon.193, %struct.anon.193* %arrayidx, i32 0, i32 1, !dbg !15400
  %30 = load %struct.mlx5_eswitch_rep*, %struct.mlx5_eswitch_rep** %rep, align 8, !dbg !15400
  %vport34 = getelementptr inbounds %struct.mlx5_eswitch_rep, %struct.mlx5_eswitch_rep* %30, i32 0, i32 1, !dbg !15401
  %31 = load i16, i16* %vport34, align 8, !dbg !15401
  %conv = zext i16 %31 to i32, !dbg !15396
  %cmp = icmp eq i32 %conv, 65535, !dbg !15402
  br i1 %cmp, label %if.then36, label %if.end38, !dbg !15403

if.then36:                                        ; preds = %if.then33
  %32 = load %struct.mlx5_eswitch_rep*, %struct.mlx5_eswitch_rep** %vport, align 8, !dbg !15404
  %vlan_refcount = getelementptr inbounds %struct.mlx5_eswitch_rep, %struct.mlx5_eswitch_rep* %32, i32 0, i32 4, !dbg !15406
  %33 = load i32, i32* %vlan_refcount, align 8, !dbg !15407
  %inc = add i32 %33, 1, !dbg !15407
  store i32 %inc, i32* %vlan_refcount, align 8, !dbg !15407
  %34 = load %struct.mlx5_flow_attr*, %struct.mlx5_flow_attr** %attr.addr, align 8, !dbg !15408
  %flags37 = getelementptr inbounds %struct.mlx5_flow_attr, %struct.mlx5_flow_attr* %34, i32 0, i32 12, !dbg !15409
  %35 = load i32, i32* %flags37, align 4, !dbg !15410
  %or = or i32 %35, 1, !dbg !15410
  store i32 %or, i32* %flags37, align 4, !dbg !15410
  br label %if.end38, !dbg !15411

if.end38:                                         ; preds = %if.then36, %if.then33
  br label %unlock, !dbg !15412

if.end39:                                         ; preds = %land.lhs.true31, %land.lhs.true, %if.end24
  %36 = load i8, i8* %push, align 1, !dbg !15413
  %tobool40 = trunc i8 %36 to i1, !dbg !15413
  br i1 %tobool40, label %if.end44, label %land.lhs.true41, !dbg !15415

land.lhs.true41:                                  ; preds = %if.end39
  %37 = load i8, i8* %pop, align 1, !dbg !15416
  %tobool42 = trunc i8 %37 to i1, !dbg !15416
  br i1 %tobool42, label %if.end44, label %if.then43, !dbg !15417

if.then43:                                        ; preds = %land.lhs.true41
  br label %unlock, !dbg !15418

if.end44:                                         ; preds = %land.lhs.true41, %if.end39
  %38 = load %struct.offloads_fdb*, %struct.offloads_fdb** %offloads, align 8, !dbg !15419
  %vlan_push_pop_refcount = getelementptr inbounds %struct.offloads_fdb, %struct.offloads_fdb* %38, i32 0, i32 8, !dbg !15421
  %39 = load i32, i32* %vlan_push_pop_refcount, align 8, !dbg !15421
  %tobool45 = icmp ne i32 %39, 0, !dbg !15422
  br i1 %tobool45, label %if.end51, label %if.then46, !dbg !15423

if.then46:                                        ; preds = %if.end44
  %40 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !15424
  %call47 = call i32 @esw_set_global_vlan_pop(%struct.mlx5_eswitch* %40, i8 zeroext 1) #8, !dbg !15426
  store i32 %call47, i32* %err, align 4, !dbg !15427
  %41 = load i32, i32* %err, align 4, !dbg !15428
  %tobool48 = icmp ne i32 %41, 0, !dbg !15428
  br i1 %tobool48, label %if.then49, label %if.end50, !dbg !15430

if.then49:                                        ; preds = %if.then46
  br label %out, !dbg !15431

if.end50:                                         ; preds = %if.then46
  br label %if.end51, !dbg !15432

if.end51:                                         ; preds = %if.end50, %if.end44
  %42 = load %struct.offloads_fdb*, %struct.offloads_fdb** %offloads, align 8, !dbg !15433
  %vlan_push_pop_refcount52 = getelementptr inbounds %struct.offloads_fdb, %struct.offloads_fdb* %42, i32 0, i32 8, !dbg !15434
  %43 = load i32, i32* %vlan_push_pop_refcount52, align 8, !dbg !15435
  %inc53 = add i32 %43, 1, !dbg !15435
  store i32 %inc53, i32* %vlan_push_pop_refcount52, align 8, !dbg !15435
  %44 = load i8, i8* %push, align 1, !dbg !15436
  %tobool54 = trunc i8 %44 to i1, !dbg !15436
  br i1 %tobool54, label %if.then55, label %if.end70, !dbg !15438

if.then55:                                        ; preds = %if.end51
  %45 = load %struct.mlx5_eswitch_rep*, %struct.mlx5_eswitch_rep** %vport, align 8, !dbg !15439
  %vlan_refcount56 = getelementptr inbounds %struct.mlx5_eswitch_rep, %struct.mlx5_eswitch_rep* %45, i32 0, i32 4, !dbg !15442
  %46 = load i32, i32* %vlan_refcount56, align 8, !dbg !15442
  %tobool57 = icmp ne i32 %46, 0, !dbg !15439
  br i1 %tobool57, label %if.then58, label %if.end59, !dbg !15443

if.then58:                                        ; preds = %if.then55
  br label %skip_set_push, !dbg !15444

if.end59:                                         ; preds = %if.then55
  %47 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !15445
  %48 = load %struct.mlx5_eswitch_rep*, %struct.mlx5_eswitch_rep** %vport, align 8, !dbg !15446
  %vport60 = getelementptr inbounds %struct.mlx5_eswitch_rep, %struct.mlx5_eswitch_rep* %48, i32 0, i32 1, !dbg !15447
  %49 = load i16, i16* %vport60, align 8, !dbg !15447
  %50 = load %struct.mlx5_esw_flow_attr*, %struct.mlx5_esw_flow_attr** %esw_attr, align 8, !dbg !15448
  %vlan_vid = getelementptr inbounds %struct.mlx5_esw_flow_attr, %struct.mlx5_esw_flow_attr* %50, i32 0, i32 6, !dbg !15449
  %arrayidx61 = getelementptr [2 x i16], [2 x i16]* %vlan_vid, i64 0, i64 0, !dbg !15448
  %51 = load i16, i16* %arrayidx61, align 4, !dbg !15448
  %call62 = call i32 @__mlx5_eswitch_set_vport_vlan(%struct.mlx5_eswitch* %47, i16 zeroext %49, i16 zeroext %51, i8 zeroext 0, i8 zeroext 3) #8, !dbg !15450
  store i32 %call62, i32* %err, align 4, !dbg !15451
  %52 = load i32, i32* %err, align 4, !dbg !15452
  %tobool63 = icmp ne i32 %52, 0, !dbg !15452
  br i1 %tobool63, label %if.then64, label %if.end65, !dbg !15454

if.then64:                                        ; preds = %if.end59
  br label %out, !dbg !15455

if.end65:                                         ; preds = %if.end59
  %53 = load %struct.mlx5_esw_flow_attr*, %struct.mlx5_esw_flow_attr** %esw_attr, align 8, !dbg !15456
  %vlan_vid66 = getelementptr inbounds %struct.mlx5_esw_flow_attr, %struct.mlx5_esw_flow_attr* %53, i32 0, i32 6, !dbg !15457
  %arrayidx67 = getelementptr [2 x i16], [2 x i16]* %vlan_vid66, i64 0, i64 0, !dbg !15456
  %54 = load i16, i16* %arrayidx67, align 4, !dbg !15456
  %55 = load %struct.mlx5_eswitch_rep*, %struct.mlx5_eswitch_rep** %vport, align 8, !dbg !15458
  %vlan = getelementptr inbounds %struct.mlx5_eswitch_rep, %struct.mlx5_eswitch_rep* %55, i32 0, i32 2, !dbg !15459
  store i16 %54, i16* %vlan, align 2, !dbg !15460
  br label %skip_set_push, !dbg !15458

skip_set_push:                                    ; preds = %if.end65, %if.then58
  call void @llvm.dbg.label(metadata !15461), !dbg !15462
  %56 = load %struct.mlx5_eswitch_rep*, %struct.mlx5_eswitch_rep** %vport, align 8, !dbg !15463
  %vlan_refcount68 = getelementptr inbounds %struct.mlx5_eswitch_rep, %struct.mlx5_eswitch_rep* %56, i32 0, i32 4, !dbg !15464
  %57 = load i32, i32* %vlan_refcount68, align 8, !dbg !15465
  %inc69 = add i32 %57, 1, !dbg !15465
  store i32 %inc69, i32* %vlan_refcount68, align 8, !dbg !15465
  br label %if.end70, !dbg !15466

if.end70:                                         ; preds = %skip_set_push, %if.end51
  br label %out, !dbg !15436

out:                                              ; preds = %if.end70, %if.then64, %if.then49
  call void @llvm.dbg.label(metadata !15467), !dbg !15468
  %58 = load i32, i32* %err, align 4, !dbg !15469
  %tobool71 = icmp ne i32 %58, 0, !dbg !15469
  br i1 %tobool71, label %if.end75, label %if.then72, !dbg !15471

if.then72:                                        ; preds = %out
  %59 = load %struct.mlx5_flow_attr*, %struct.mlx5_flow_attr** %attr.addr, align 8, !dbg !15472
  %flags73 = getelementptr inbounds %struct.mlx5_flow_attr, %struct.mlx5_flow_attr* %59, i32 0, i32 12, !dbg !15473
  %60 = load i32, i32* %flags73, align 4, !dbg !15474
  %or74 = or i32 %60, 1, !dbg !15474
  store i32 %or74, i32* %flags73, align 4, !dbg !15474
  br label %if.end75, !dbg !15472

if.end75:                                         ; preds = %if.then72, %out
  br label %unlock, !dbg !15469

unlock:                                           ; preds = %if.end75, %if.then43, %if.end38, %if.then23
  call void @llvm.dbg.label(metadata !15475), !dbg !15476
  %61 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !15477
  %state_lock76 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %61, i32 0, i32 10, !dbg !15478
  call void @mutex_unlock(%struct.mutex* %state_lock76) #8, !dbg !15479
  %62 = load i32, i32* %err, align 4, !dbg !15480
  store i32 %62, i32* %retval, align 4, !dbg !15481
  br label %return, !dbg !15481

return:                                           ; preds = %unlock, %if.then
  %63 = load i32, i32* %retval, align 4, !dbg !15482
  ret i32 %63, !dbg !15482
}

; Function Attrs: noredzone
declare dso_local void @mutex_lock(%struct.mutex*) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @esw_add_vlan_action_check(%struct.mlx5_esw_flow_attr* %attr, i1 zeroext %push, i1 zeroext %pop, i1 zeroext %fwd) #0 !dbg !15483 {
entry:
  %retval = alloca i32, align 4
  %attr.addr = alloca %struct.mlx5_esw_flow_attr*, align 8
  %push.addr = alloca i8, align 1
  %pop.addr = alloca i8, align 1
  %fwd.addr = alloca i8, align 1
  %in_rep = alloca %struct.mlx5_eswitch_rep*, align 8
  %out_rep = alloca %struct.mlx5_eswitch_rep*, align 8
  store %struct.mlx5_esw_flow_attr* %attr, %struct.mlx5_esw_flow_attr** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_esw_flow_attr** %attr.addr, metadata !15486, metadata !DIExpression()), !dbg !15487
  %frombool = zext i1 %push to i8
  store i8 %frombool, i8* %push.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %push.addr, metadata !15488, metadata !DIExpression()), !dbg !15489
  %frombool1 = zext i1 %pop to i8
  store i8 %frombool1, i8* %pop.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %pop.addr, metadata !15490, metadata !DIExpression()), !dbg !15491
  %frombool2 = zext i1 %fwd to i8
  store i8 %frombool2, i8* %fwd.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %fwd.addr, metadata !15492, metadata !DIExpression()), !dbg !15493
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch_rep** %in_rep, metadata !15494, metadata !DIExpression()), !dbg !15495
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch_rep** %out_rep, metadata !15496, metadata !DIExpression()), !dbg !15497
  %0 = load i8, i8* %push.addr, align 1, !dbg !15498
  %tobool = trunc i8 %0 to i1, !dbg !15498
  br i1 %tobool, label %land.lhs.true, label %lor.lhs.false, !dbg !15500

lor.lhs.false:                                    ; preds = %entry
  %1 = load i8, i8* %pop.addr, align 1, !dbg !15501
  %tobool3 = trunc i8 %1 to i1, !dbg !15501
  br i1 %tobool3, label %land.lhs.true, label %if.end, !dbg !15502

land.lhs.true:                                    ; preds = %lor.lhs.false, %entry
  %2 = load i8, i8* %fwd.addr, align 1, !dbg !15503
  %tobool4 = trunc i8 %2 to i1, !dbg !15503
  br i1 %tobool4, label %if.end, label %if.then, !dbg !15504

if.then:                                          ; preds = %land.lhs.true
  br label %out_notsupp, !dbg !15505

if.end:                                           ; preds = %land.lhs.true, %lor.lhs.false
  %3 = load %struct.mlx5_esw_flow_attr*, %struct.mlx5_esw_flow_attr** %attr.addr, align 8, !dbg !15506
  %in_rep5 = getelementptr inbounds %struct.mlx5_esw_flow_attr, %struct.mlx5_esw_flow_attr* %3, i32 0, i32 0, !dbg !15507
  %4 = load %struct.mlx5_eswitch_rep*, %struct.mlx5_eswitch_rep** %in_rep5, align 8, !dbg !15507
  store %struct.mlx5_eswitch_rep* %4, %struct.mlx5_eswitch_rep** %in_rep, align 8, !dbg !15508
  %5 = load %struct.mlx5_esw_flow_attr*, %struct.mlx5_esw_flow_attr** %attr.addr, align 8, !dbg !15509
  %dests = getelementptr inbounds %struct.mlx5_esw_flow_attr, %struct.mlx5_esw_flow_attr* %5, i32 0, i32 9, !dbg !15510
  %arrayidx = getelementptr [2 x %struct.anon.193], [2 x %struct.anon.193]* %dests, i64 0, i64 0, !dbg !15509
  %rep = getelementptr inbounds %struct.anon.193, %struct.anon.193* %arrayidx, i32 0, i32 1, !dbg !15511
  %6 = load %struct.mlx5_eswitch_rep*, %struct.mlx5_eswitch_rep** %rep, align 8, !dbg !15511
  store %struct.mlx5_eswitch_rep* %6, %struct.mlx5_eswitch_rep** %out_rep, align 8, !dbg !15512
  %7 = load i8, i8* %push.addr, align 1, !dbg !15513
  %tobool6 = trunc i8 %7 to i1, !dbg !15513
  br i1 %tobool6, label %land.lhs.true7, label %if.end10, !dbg !15515

land.lhs.true7:                                   ; preds = %if.end
  %8 = load %struct.mlx5_eswitch_rep*, %struct.mlx5_eswitch_rep** %in_rep, align 8, !dbg !15516
  %vport = getelementptr inbounds %struct.mlx5_eswitch_rep, %struct.mlx5_eswitch_rep* %8, i32 0, i32 1, !dbg !15517
  %9 = load i16, i16* %vport, align 8, !dbg !15517
  %conv = zext i16 %9 to i32, !dbg !15516
  %cmp = icmp eq i32 %conv, 65535, !dbg !15518
  br i1 %cmp, label %if.then9, label %if.end10, !dbg !15519

if.then9:                                         ; preds = %land.lhs.true7
  br label %out_notsupp, !dbg !15520

if.end10:                                         ; preds = %land.lhs.true7, %if.end
  %10 = load i8, i8* %pop.addr, align 1, !dbg !15521
  %tobool11 = trunc i8 %10 to i1, !dbg !15521
  br i1 %tobool11, label %land.lhs.true13, label %if.end19, !dbg !15523

land.lhs.true13:                                  ; preds = %if.end10
  %11 = load %struct.mlx5_eswitch_rep*, %struct.mlx5_eswitch_rep** %out_rep, align 8, !dbg !15524
  %vport14 = getelementptr inbounds %struct.mlx5_eswitch_rep, %struct.mlx5_eswitch_rep* %11, i32 0, i32 1, !dbg !15525
  %12 = load i16, i16* %vport14, align 8, !dbg !15525
  %conv15 = zext i16 %12 to i32, !dbg !15524
  %cmp16 = icmp eq i32 %conv15, 65535, !dbg !15526
  br i1 %cmp16, label %if.then18, label %if.end19, !dbg !15527

if.then18:                                        ; preds = %land.lhs.true13
  br label %out_notsupp, !dbg !15528

if.end19:                                         ; preds = %land.lhs.true13, %if.end10
  %13 = load i8, i8* %push.addr, align 1, !dbg !15529
  %tobool20 = trunc i8 %13 to i1, !dbg !15529
  br i1 %tobool20, label %if.end36, label %land.lhs.true21, !dbg !15531

land.lhs.true21:                                  ; preds = %if.end19
  %14 = load i8, i8* %pop.addr, align 1, !dbg !15532
  %tobool22 = trunc i8 %14 to i1, !dbg !15532
  br i1 %tobool22, label %if.end36, label %land.lhs.true23, !dbg !15533

land.lhs.true23:                                  ; preds = %land.lhs.true21
  %15 = load i8, i8* %fwd.addr, align 1, !dbg !15534
  %tobool24 = trunc i8 %15 to i1, !dbg !15534
  br i1 %tobool24, label %if.then26, label %if.end36, !dbg !15535

if.then26:                                        ; preds = %land.lhs.true23
  %16 = load %struct.mlx5_eswitch_rep*, %struct.mlx5_eswitch_rep** %in_rep, align 8, !dbg !15536
  %vlan = getelementptr inbounds %struct.mlx5_eswitch_rep, %struct.mlx5_eswitch_rep* %16, i32 0, i32 2, !dbg !15538
  %17 = load i16, i16* %vlan, align 2, !dbg !15538
  %conv27 = zext i16 %17 to i32, !dbg !15536
  %tobool28 = icmp ne i32 %conv27, 0, !dbg !15536
  br i1 %tobool28, label %land.lhs.true29, label %if.end35, !dbg !15539

land.lhs.true29:                                  ; preds = %if.then26
  %18 = load %struct.mlx5_eswitch_rep*, %struct.mlx5_eswitch_rep** %out_rep, align 8, !dbg !15540
  %vport30 = getelementptr inbounds %struct.mlx5_eswitch_rep, %struct.mlx5_eswitch_rep* %18, i32 0, i32 1, !dbg !15541
  %19 = load i16, i16* %vport30, align 8, !dbg !15541
  %conv31 = zext i16 %19 to i32, !dbg !15540
  %cmp32 = icmp eq i32 %conv31, 65535, !dbg !15542
  br i1 %cmp32, label %if.then34, label %if.end35, !dbg !15543

if.then34:                                        ; preds = %land.lhs.true29
  br label %out_notsupp, !dbg !15544

if.end35:                                         ; preds = %land.lhs.true29, %if.then26
  br label %if.end36, !dbg !15545

if.end36:                                         ; preds = %if.end35, %land.lhs.true23, %land.lhs.true21, %if.end19
  %20 = load i8, i8* %push.addr, align 1, !dbg !15546
  %tobool37 = trunc i8 %20 to i1, !dbg !15546
  br i1 %tobool37, label %land.lhs.true39, label %if.end49, !dbg !15548

land.lhs.true39:                                  ; preds = %if.end36
  %21 = load %struct.mlx5_eswitch_rep*, %struct.mlx5_eswitch_rep** %in_rep, align 8, !dbg !15549
  %vlan_refcount = getelementptr inbounds %struct.mlx5_eswitch_rep, %struct.mlx5_eswitch_rep* %21, i32 0, i32 4, !dbg !15550
  %22 = load i32, i32* %vlan_refcount, align 8, !dbg !15550
  %tobool40 = icmp ne i32 %22, 0, !dbg !15549
  br i1 %tobool40, label %land.lhs.true41, label %if.end49, !dbg !15551

land.lhs.true41:                                  ; preds = %land.lhs.true39
  %23 = load %struct.mlx5_eswitch_rep*, %struct.mlx5_eswitch_rep** %in_rep, align 8, !dbg !15552
  %vlan42 = getelementptr inbounds %struct.mlx5_eswitch_rep, %struct.mlx5_eswitch_rep* %23, i32 0, i32 2, !dbg !15553
  %24 = load i16, i16* %vlan42, align 2, !dbg !15553
  %conv43 = zext i16 %24 to i32, !dbg !15552
  %25 = load %struct.mlx5_esw_flow_attr*, %struct.mlx5_esw_flow_attr** %attr.addr, align 8, !dbg !15554
  %vlan_vid = getelementptr inbounds %struct.mlx5_esw_flow_attr, %struct.mlx5_esw_flow_attr* %25, i32 0, i32 6, !dbg !15555
  %arrayidx44 = getelementptr [2 x i16], [2 x i16]* %vlan_vid, i64 0, i64 0, !dbg !15554
  %26 = load i16, i16* %arrayidx44, align 4, !dbg !15554
  %conv45 = zext i16 %26 to i32, !dbg !15554
  %cmp46 = icmp ne i32 %conv43, %conv45, !dbg !15556
  br i1 %cmp46, label %if.then48, label %if.end49, !dbg !15557

if.then48:                                        ; preds = %land.lhs.true41
  br label %out_notsupp, !dbg !15558

if.end49:                                         ; preds = %land.lhs.true41, %land.lhs.true39, %if.end36
  store i32 0, i32* %retval, align 4, !dbg !15559
  br label %return, !dbg !15559

out_notsupp:                                      ; preds = %if.then48, %if.then34, %if.then18, %if.then9, %if.then
  call void @llvm.dbg.label(metadata !15560), !dbg !15561
  store i32 -95, i32* %retval, align 4, !dbg !15562
  br label %return, !dbg !15562

return:                                           ; preds = %out_notsupp, %if.end49
  %27 = load i32, i32* %retval, align 4, !dbg !15563
  ret i32 %27, !dbg !15563
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.mlx5_eswitch_rep* @esw_vlan_action_get_vport(%struct.mlx5_esw_flow_attr* %attr, i1 zeroext %push, i1 zeroext %pop) #0 !dbg !15564 {
entry:
  %attr.addr = alloca %struct.mlx5_esw_flow_attr*, align 8
  %push.addr = alloca i8, align 1
  %pop.addr = alloca i8, align 1
  %in_rep = alloca %struct.mlx5_eswitch_rep*, align 8
  %out_rep = alloca %struct.mlx5_eswitch_rep*, align 8
  %vport = alloca %struct.mlx5_eswitch_rep*, align 8
  store %struct.mlx5_esw_flow_attr* %attr, %struct.mlx5_esw_flow_attr** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_esw_flow_attr** %attr.addr, metadata !15567, metadata !DIExpression()), !dbg !15568
  %frombool = zext i1 %push to i8
  store i8 %frombool, i8* %push.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %push.addr, metadata !15569, metadata !DIExpression()), !dbg !15570
  %frombool1 = zext i1 %pop to i8
  store i8 %frombool1, i8* %pop.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %pop.addr, metadata !15571, metadata !DIExpression()), !dbg !15572
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch_rep** %in_rep, metadata !15573, metadata !DIExpression()), !dbg !15574
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch_rep** %out_rep, metadata !15575, metadata !DIExpression()), !dbg !15576
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch_rep** %vport, metadata !15577, metadata !DIExpression()), !dbg !15578
  store %struct.mlx5_eswitch_rep* null, %struct.mlx5_eswitch_rep** %vport, align 8, !dbg !15578
  %0 = load %struct.mlx5_esw_flow_attr*, %struct.mlx5_esw_flow_attr** %attr.addr, align 8, !dbg !15579
  %in_rep2 = getelementptr inbounds %struct.mlx5_esw_flow_attr, %struct.mlx5_esw_flow_attr* %0, i32 0, i32 0, !dbg !15580
  %1 = load %struct.mlx5_eswitch_rep*, %struct.mlx5_eswitch_rep** %in_rep2, align 8, !dbg !15580
  store %struct.mlx5_eswitch_rep* %1, %struct.mlx5_eswitch_rep** %in_rep, align 8, !dbg !15581
  %2 = load %struct.mlx5_esw_flow_attr*, %struct.mlx5_esw_flow_attr** %attr.addr, align 8, !dbg !15582
  %dests = getelementptr inbounds %struct.mlx5_esw_flow_attr, %struct.mlx5_esw_flow_attr* %2, i32 0, i32 9, !dbg !15583
  %arrayidx = getelementptr [2 x %struct.anon.193], [2 x %struct.anon.193]* %dests, i64 0, i64 0, !dbg !15582
  %rep = getelementptr inbounds %struct.anon.193, %struct.anon.193* %arrayidx, i32 0, i32 1, !dbg !15584
  %3 = load %struct.mlx5_eswitch_rep*, %struct.mlx5_eswitch_rep** %rep, align 8, !dbg !15584
  store %struct.mlx5_eswitch_rep* %3, %struct.mlx5_eswitch_rep** %out_rep, align 8, !dbg !15585
  %4 = load i8, i8* %push.addr, align 1, !dbg !15586
  %tobool = trunc i8 %4 to i1, !dbg !15586
  br i1 %tobool, label %if.then, label %if.else, !dbg !15588

if.then:                                          ; preds = %entry
  %5 = load %struct.mlx5_eswitch_rep*, %struct.mlx5_eswitch_rep** %in_rep, align 8, !dbg !15589
  store %struct.mlx5_eswitch_rep* %5, %struct.mlx5_eswitch_rep** %vport, align 8, !dbg !15590
  br label %if.end6, !dbg !15591

if.else:                                          ; preds = %entry
  %6 = load i8, i8* %pop.addr, align 1, !dbg !15592
  %tobool3 = trunc i8 %6 to i1, !dbg !15592
  br i1 %tobool3, label %if.then4, label %if.else5, !dbg !15594

if.then4:                                         ; preds = %if.else
  %7 = load %struct.mlx5_eswitch_rep*, %struct.mlx5_eswitch_rep** %out_rep, align 8, !dbg !15595
  store %struct.mlx5_eswitch_rep* %7, %struct.mlx5_eswitch_rep** %vport, align 8, !dbg !15596
  br label %if.end, !dbg !15597

if.else5:                                         ; preds = %if.else
  %8 = load %struct.mlx5_eswitch_rep*, %struct.mlx5_eswitch_rep** %in_rep, align 8, !dbg !15598
  store %struct.mlx5_eswitch_rep* %8, %struct.mlx5_eswitch_rep** %vport, align 8, !dbg !15599
  br label %if.end

if.end:                                           ; preds = %if.else5, %if.then4
  br label %if.end6

if.end6:                                          ; preds = %if.end, %if.then
  %9 = load %struct.mlx5_eswitch_rep*, %struct.mlx5_eswitch_rep** %vport, align 8, !dbg !15600
  ret %struct.mlx5_eswitch_rep* %9, !dbg !15601
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @esw_set_global_vlan_pop(%struct.mlx5_eswitch* %esw, i8 zeroext %val) #0 !dbg !15602 {
entry:
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !15605, metadata !DIExpression()), !dbg !15612
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !15620, metadata !DIExpression()), !dbg !15622
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !15624, metadata !DIExpression()), !dbg !15625
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !15626, metadata !DIExpression()), !dbg !15627
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  %val.addr = alloca i8, align 1
  %rep = alloca %struct.mlx5_eswitch_rep*, align 8
  %i = alloca i32, align 4
  %err = alloca i32, align 4
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !15628, metadata !DIExpression()), !dbg !15629
  store i8 %val, i8* %val.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %val.addr, metadata !15630, metadata !DIExpression()), !dbg !15631
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch_rep** %rep, metadata !15632, metadata !DIExpression()), !dbg !15633
  call void @llvm.dbg.declare(metadata i32* %i, metadata !15634, metadata !DIExpression()), !dbg !15635
  call void @llvm.dbg.declare(metadata i32* %err, metadata !15636, metadata !DIExpression()), !dbg !15637
  store i32 0, i32* %err, align 4, !dbg !15637
  br label %do.body, !dbg !15638

do.body:                                          ; preds = %entry
  %0 = load i32, i32* @mlx5_core_debug_mask, align 4, !dbg !15639
  %conv = zext i32 %0 to i64, !dbg !15639
  %and = and i64 8, %conv, !dbg !15639
  %tobool = icmp ne i64 %and, 0, !dbg !15639
  br i1 %tobool, label %if.then, label %if.end, !dbg !15642

if.then:                                          ; preds = %do.body
  br label %if.end, !dbg !15639

if.end:                                           ; preds = %if.then, %do.body
  br label %do.end, !dbg !15642

do.end:                                           ; preds = %if.end
  %1 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !15643
  %first_host_vport = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %1, i32 0, i32 16, !dbg !15643
  %2 = load i16, i16* %first_host_vport, align 2, !dbg !15643
  %conv1 = zext i16 %2 to i32, !dbg !15643
  store i32 %conv1, i32* %i, align 4, !dbg !15643
  br label %for.cond, !dbg !15643

for.cond:                                         ; preds = %for.inc, %do.end
  %3 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !15644
  %offloads = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %3, i32 0, i32 13, !dbg !15644
  %vport_reps = getelementptr inbounds %struct.mlx5_esw_offload, %struct.mlx5_esw_offload* %offloads, i32 0, i32 5, !dbg !15644
  %4 = load %struct.mlx5_eswitch_rep*, %struct.mlx5_eswitch_rep** %vport_reps, align 8, !dbg !15644
  %5 = load i32, i32* %i, align 4, !dbg !15644
  %idxprom = sext i32 %5 to i64, !dbg !15644
  %arrayidx = getelementptr %struct.mlx5_eswitch_rep, %struct.mlx5_eswitch_rep* %4, i64 %idxprom, !dbg !15644
  store %struct.mlx5_eswitch_rep* %arrayidx, %struct.mlx5_eswitch_rep** %rep, align 8, !dbg !15644
  %6 = load i32, i32* %i, align 4, !dbg !15644
  %7 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !15644
  %esw_funcs = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %7, i32 0, i32 17, !dbg !15644
  %num_vfs = getelementptr inbounds %struct.mlx5_esw_functions, %struct.mlx5_esw_functions* %esw_funcs, i32 0, i32 1, !dbg !15644
  %8 = load i16, i16* %num_vfs, align 8, !dbg !15644
  %conv2 = zext i16 %8 to i32, !dbg !15644
  %cmp = icmp sle i32 %6, %conv2, !dbg !15644
  br i1 %cmp, label %for.body, label %for.end, !dbg !15643

for.body:                                         ; preds = %for.cond
  %9 = load %struct.mlx5_eswitch_rep*, %struct.mlx5_eswitch_rep** %rep, align 8, !dbg !15645
  %rep_data = getelementptr inbounds %struct.mlx5_eswitch_rep, %struct.mlx5_eswitch_rep* %9, i32 0, i32 0, !dbg !15646
  %arrayidx4 = getelementptr [2 x %struct.mlx5_eswitch_rep_data], [2 x %struct.mlx5_eswitch_rep_data]* %rep_data, i64 0, i64 0, !dbg !15645
  %state = getelementptr inbounds %struct.mlx5_eswitch_rep_data, %struct.mlx5_eswitch_rep_data* %arrayidx4, i32 0, i32 1, !dbg !15647
  store %struct.atomic_t* %state, %struct.atomic_t** %v.addr.i, align 8
  %10 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !15648
  %11 = bitcast %struct.atomic_t* %10 to i8*, !dbg !15648
  store i8* %11, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %12 = load i8*, i8** %v.addr.i.i, align 8, !dbg !15649
  %13 = load i64, i64* %size.addr.i.i, align 8, !dbg !15650
  %conv.i.i = trunc i64 %13 to i32, !dbg !15650
  %call.i.i = call zeroext i1 @kasan_check_read(i8* %12, i32 %conv.i.i) #11, !dbg !15651
  %14 = load i8*, i8** %v.addr.i.i, align 8, !dbg !15652
  %15 = load i64, i64* %size.addr.i.i, align 8, !dbg !15652
  call void @kcsan_check_access(i8* %14, i64 %15, i32 4) #11, !dbg !15652
  %16 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !15653
  store %struct.atomic_t* %16, %struct.atomic_t** %v.addr.i1.i, align 8
  %17 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !15654
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %17, i32 0, i32 0, !dbg !15654
  %18 = load volatile i32, i32* %counter.i.i, align 4, !dbg !15654
  %cmp5 = icmp ne i32 %18, 2, !dbg !15655
  br i1 %cmp5, label %if.then7, label %if.end8, !dbg !15656

if.then7:                                         ; preds = %for.body
  br label %for.inc, !dbg !15657

if.end8:                                          ; preds = %for.body
  %19 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !15658
  %20 = load %struct.mlx5_eswitch_rep*, %struct.mlx5_eswitch_rep** %rep, align 8, !dbg !15659
  %vport = getelementptr inbounds %struct.mlx5_eswitch_rep, %struct.mlx5_eswitch_rep* %20, i32 0, i32 1, !dbg !15660
  %21 = load i16, i16* %vport, align 8, !dbg !15660
  %22 = load i8, i8* %val.addr, align 1, !dbg !15661
  %call9 = call i32 @__mlx5_eswitch_set_vport_vlan(%struct.mlx5_eswitch* %19, i16 zeroext %21, i16 zeroext 0, i8 zeroext 0, i8 zeroext %22) #8, !dbg !15662
  store i32 %call9, i32* %err, align 4, !dbg !15663
  %23 = load i32, i32* %err, align 4, !dbg !15664
  %tobool10 = icmp ne i32 %23, 0, !dbg !15664
  br i1 %tobool10, label %if.then11, label %if.end12, !dbg !15666

if.then11:                                        ; preds = %if.end8
  br label %out, !dbg !15667

if.end12:                                         ; preds = %if.end8
  br label %for.inc, !dbg !15668

for.inc:                                          ; preds = %if.end12, %if.then7
  %24 = load i32, i32* %i, align 4, !dbg !15644
  %inc = add i32 %24, 1, !dbg !15644
  store i32 %inc, i32* %i, align 4, !dbg !15644
  br label %for.cond, !dbg !15644, !llvm.loop !15669

for.end:                                          ; preds = %for.cond
  br label %out, !dbg !15670

out:                                              ; preds = %for.end, %if.then11
  call void @llvm.dbg.label(metadata !15671), !dbg !15672
  %25 = load i32, i32* %err, align 4, !dbg !15673
  ret i32 %25, !dbg !15674
}

; Function Attrs: noredzone
declare dso_local i32 @__mlx5_eswitch_set_vport_vlan(%struct.mlx5_eswitch*, i16 zeroext, i16 zeroext, i8 zeroext, i8 zeroext) #5

; Function Attrs: noredzone
declare dso_local void @mutex_unlock(%struct.mutex*) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @mlx5_eswitch_del_vlan_action(%struct.mlx5_eswitch* %esw, %struct.mlx5_flow_attr* %attr) #0 !dbg !15675 {
entry:
  %retval = alloca i32, align 4
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  %attr.addr = alloca %struct.mlx5_flow_attr*, align 8
  %offloads = alloca %struct.offloads_fdb*, align 8
  %esw_attr = alloca %struct.mlx5_esw_flow_attr*, align 8
  %vport = alloca %struct.mlx5_eswitch_rep*, align 8
  %push = alloca i8, align 1
  %pop = alloca i8, align 1
  %fwd = alloca i8, align 1
  %err = alloca i32, align 4
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !15676, metadata !DIExpression()), !dbg !15677
  store %struct.mlx5_flow_attr* %attr, %struct.mlx5_flow_attr** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_flow_attr** %attr.addr, metadata !15678, metadata !DIExpression()), !dbg !15679
  call void @llvm.dbg.declare(metadata %struct.offloads_fdb** %offloads, metadata !15680, metadata !DIExpression()), !dbg !15681
  %0 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !15682
  %fdb_table = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %0, i32 0, i32 2, !dbg !15683
  %1 = getelementptr inbounds %struct.mlx5_eswitch_fdb, %struct.mlx5_eswitch_fdb* %fdb_table, i32 0, i32 0, !dbg !15684
  %offloads1 = bitcast %union.anon.154* %1 to %struct.offloads_fdb*, !dbg !15684
  store %struct.offloads_fdb* %offloads1, %struct.offloads_fdb** %offloads, align 8, !dbg !15681
  call void @llvm.dbg.declare(metadata %struct.mlx5_esw_flow_attr** %esw_attr, metadata !15685, metadata !DIExpression()), !dbg !15686
  %2 = load %struct.mlx5_flow_attr*, %struct.mlx5_flow_attr** %attr.addr, align 8, !dbg !15687
  %3 = getelementptr inbounds %struct.mlx5_flow_attr, %struct.mlx5_flow_attr* %2, i32 0, i32 13, !dbg !15688
  %esw_attr2 = bitcast %union.anon.192* %3 to [0 x %struct.mlx5_esw_flow_attr]*, !dbg !15688
  %arraydecay = getelementptr inbounds [0 x %struct.mlx5_esw_flow_attr], [0 x %struct.mlx5_esw_flow_attr]* %esw_attr2, i64 0, i64 0, !dbg !15687
  store %struct.mlx5_esw_flow_attr* %arraydecay, %struct.mlx5_esw_flow_attr** %esw_attr, align 8, !dbg !15686
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch_rep** %vport, metadata !15689, metadata !DIExpression()), !dbg !15690
  store %struct.mlx5_eswitch_rep* null, %struct.mlx5_eswitch_rep** %vport, align 8, !dbg !15690
  call void @llvm.dbg.declare(metadata i8* %push, metadata !15691, metadata !DIExpression()), !dbg !15692
  call void @llvm.dbg.declare(metadata i8* %pop, metadata !15693, metadata !DIExpression()), !dbg !15694
  call void @llvm.dbg.declare(metadata i8* %fwd, metadata !15695, metadata !DIExpression()), !dbg !15696
  call void @llvm.dbg.declare(metadata i32* %err, metadata !15697, metadata !DIExpression()), !dbg !15698
  store i32 0, i32* %err, align 4, !dbg !15698
  %4 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !15699
  %dev = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %4, i32 0, i32 0, !dbg !15701
  %5 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !15701
  %call = call zeroext i1 @mlx5_eswitch_vlan_actions_supported(%struct.mlx5_core_dev* %5, i8 zeroext 1) #8, !dbg !15702
  br i1 %call, label %if.then, label %if.end, !dbg !15703

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !15704
  br label %return, !dbg !15704

if.end:                                           ; preds = %entry
  %6 = load %struct.mlx5_flow_attr*, %struct.mlx5_flow_attr** %attr.addr, align 8, !dbg !15705
  %flags = getelementptr inbounds %struct.mlx5_flow_attr, %struct.mlx5_flow_attr* %6, i32 0, i32 12, !dbg !15707
  %7 = load i32, i32* %flags, align 4, !dbg !15707
  %and = and i32 %7, 1, !dbg !15708
  %tobool = icmp ne i32 %and, 0, !dbg !15708
  br i1 %tobool, label %if.end4, label %if.then3, !dbg !15709

if.then3:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !15710
  br label %return, !dbg !15710

if.end4:                                          ; preds = %if.end
  %8 = load %struct.mlx5_flow_attr*, %struct.mlx5_flow_attr** %attr.addr, align 8, !dbg !15711
  %action = getelementptr inbounds %struct.mlx5_flow_attr, %struct.mlx5_flow_attr* %8, i32 0, i32 0, !dbg !15712
  %9 = load i32, i32* %action, align 8, !dbg !15712
  %and5 = and i32 %9, 256, !dbg !15713
  %tobool6 = icmp ne i32 %and5, 0, !dbg !15714
  %lnot = xor i1 %tobool6, true, !dbg !15714
  %lnot7 = xor i1 %lnot, true, !dbg !15715
  %frombool = zext i1 %lnot7 to i8, !dbg !15716
  store i8 %frombool, i8* %push, align 1, !dbg !15716
  %10 = load %struct.mlx5_flow_attr*, %struct.mlx5_flow_attr** %attr.addr, align 8, !dbg !15717
  %action8 = getelementptr inbounds %struct.mlx5_flow_attr, %struct.mlx5_flow_attr* %10, i32 0, i32 0, !dbg !15718
  %11 = load i32, i32* %action8, align 8, !dbg !15718
  %and9 = and i32 %11, 128, !dbg !15719
  %tobool10 = icmp ne i32 %and9, 0, !dbg !15720
  %lnot11 = xor i1 %tobool10, true, !dbg !15720
  %lnot12 = xor i1 %lnot11, true, !dbg !15721
  %frombool13 = zext i1 %lnot12 to i8, !dbg !15722
  store i8 %frombool13, i8* %pop, align 1, !dbg !15722
  %12 = load %struct.mlx5_flow_attr*, %struct.mlx5_flow_attr** %attr.addr, align 8, !dbg !15723
  %action14 = getelementptr inbounds %struct.mlx5_flow_attr, %struct.mlx5_flow_attr* %12, i32 0, i32 0, !dbg !15724
  %13 = load i32, i32* %action14, align 8, !dbg !15724
  %and15 = and i32 %13, 4, !dbg !15725
  %tobool16 = icmp ne i32 %and15, 0, !dbg !15726
  %lnot17 = xor i1 %tobool16, true, !dbg !15726
  %lnot18 = xor i1 %lnot17, true, !dbg !15727
  %frombool19 = zext i1 %lnot18 to i8, !dbg !15728
  store i8 %frombool19, i8* %fwd, align 1, !dbg !15728
  %14 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !15729
  %state_lock = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %14, i32 0, i32 10, !dbg !15730
  call void @mutex_lock(%struct.mutex* %state_lock) #8, !dbg !15731
  %15 = load %struct.mlx5_esw_flow_attr*, %struct.mlx5_esw_flow_attr** %esw_attr, align 8, !dbg !15732
  %16 = load i8, i8* %push, align 1, !dbg !15733
  %tobool20 = trunc i8 %16 to i1, !dbg !15733
  %17 = load i8, i8* %pop, align 1, !dbg !15734
  %tobool21 = trunc i8 %17 to i1, !dbg !15734
  %call22 = call %struct.mlx5_eswitch_rep* @esw_vlan_action_get_vport(%struct.mlx5_esw_flow_attr* %15, i1 zeroext %tobool20, i1 zeroext %tobool21) #8, !dbg !15735
  store %struct.mlx5_eswitch_rep* %call22, %struct.mlx5_eswitch_rep** %vport, align 8, !dbg !15736
  %18 = load i8, i8* %push, align 1, !dbg !15737
  %tobool23 = trunc i8 %18 to i1, !dbg !15737
  br i1 %tobool23, label %if.end32, label %land.lhs.true, !dbg !15739

land.lhs.true:                                    ; preds = %if.end4
  %19 = load i8, i8* %pop, align 1, !dbg !15740
  %tobool24 = trunc i8 %19 to i1, !dbg !15740
  br i1 %tobool24, label %if.end32, label %land.lhs.true25, !dbg !15741

land.lhs.true25:                                  ; preds = %land.lhs.true
  %20 = load i8, i8* %fwd, align 1, !dbg !15742
  %tobool26 = trunc i8 %20 to i1, !dbg !15742
  br i1 %tobool26, label %if.then27, label %if.end32, !dbg !15743

if.then27:                                        ; preds = %land.lhs.true25
  %21 = load %struct.mlx5_esw_flow_attr*, %struct.mlx5_esw_flow_attr** %esw_attr, align 8, !dbg !15744
  %dests = getelementptr inbounds %struct.mlx5_esw_flow_attr, %struct.mlx5_esw_flow_attr* %21, i32 0, i32 9, !dbg !15747
  %arrayidx = getelementptr [2 x %struct.anon.193], [2 x %struct.anon.193]* %dests, i64 0, i64 0, !dbg !15744
  %rep = getelementptr inbounds %struct.anon.193, %struct.anon.193* %arrayidx, i32 0, i32 1, !dbg !15748
  %22 = load %struct.mlx5_eswitch_rep*, %struct.mlx5_eswitch_rep** %rep, align 8, !dbg !15748
  %vport28 = getelementptr inbounds %struct.mlx5_eswitch_rep, %struct.mlx5_eswitch_rep* %22, i32 0, i32 1, !dbg !15749
  %23 = load i16, i16* %vport28, align 8, !dbg !15749
  %conv = zext i16 %23 to i32, !dbg !15744
  %cmp = icmp eq i32 %conv, 65535, !dbg !15750
  br i1 %cmp, label %if.then30, label %if.end31, !dbg !15751

if.then30:                                        ; preds = %if.then27
  %24 = load %struct.mlx5_eswitch_rep*, %struct.mlx5_eswitch_rep** %vport, align 8, !dbg !15752
  %vlan_refcount = getelementptr inbounds %struct.mlx5_eswitch_rep, %struct.mlx5_eswitch_rep* %24, i32 0, i32 4, !dbg !15753
  %25 = load i32, i32* %vlan_refcount, align 8, !dbg !15754
  %dec = add i32 %25, -1, !dbg !15754
  store i32 %dec, i32* %vlan_refcount, align 8, !dbg !15754
  br label %if.end31, !dbg !15752

if.end31:                                         ; preds = %if.then30, %if.then27
  br label %out, !dbg !15755

if.end32:                                         ; preds = %land.lhs.true25, %land.lhs.true, %if.end4
  %26 = load i8, i8* %push, align 1, !dbg !15756
  %tobool33 = trunc i8 %26 to i1, !dbg !15756
  br i1 %tobool33, label %if.then34, label %if.end46, !dbg !15758

if.then34:                                        ; preds = %if.end32
  %27 = load %struct.mlx5_eswitch_rep*, %struct.mlx5_eswitch_rep** %vport, align 8, !dbg !15759
  %vlan_refcount35 = getelementptr inbounds %struct.mlx5_eswitch_rep, %struct.mlx5_eswitch_rep* %27, i32 0, i32 4, !dbg !15761
  %28 = load i32, i32* %vlan_refcount35, align 8, !dbg !15762
  %dec36 = add i32 %28, -1, !dbg !15762
  store i32 %dec36, i32* %vlan_refcount35, align 8, !dbg !15762
  %29 = load %struct.mlx5_eswitch_rep*, %struct.mlx5_eswitch_rep** %vport, align 8, !dbg !15763
  %vlan_refcount37 = getelementptr inbounds %struct.mlx5_eswitch_rep, %struct.mlx5_eswitch_rep* %29, i32 0, i32 4, !dbg !15765
  %30 = load i32, i32* %vlan_refcount37, align 8, !dbg !15765
  %tobool38 = icmp ne i32 %30, 0, !dbg !15763
  br i1 %tobool38, label %if.then39, label %if.end40, !dbg !15766

if.then39:                                        ; preds = %if.then34
  br label %skip_unset_push, !dbg !15767

if.end40:                                         ; preds = %if.then34
  %31 = load %struct.mlx5_eswitch_rep*, %struct.mlx5_eswitch_rep** %vport, align 8, !dbg !15768
  %vlan = getelementptr inbounds %struct.mlx5_eswitch_rep, %struct.mlx5_eswitch_rep* %31, i32 0, i32 2, !dbg !15769
  store i16 0, i16* %vlan, align 2, !dbg !15770
  %32 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !15771
  %33 = load %struct.mlx5_eswitch_rep*, %struct.mlx5_eswitch_rep** %vport, align 8, !dbg !15772
  %vport41 = getelementptr inbounds %struct.mlx5_eswitch_rep, %struct.mlx5_eswitch_rep* %33, i32 0, i32 1, !dbg !15773
  %34 = load i16, i16* %vport41, align 8, !dbg !15773
  %call42 = call i32 @__mlx5_eswitch_set_vport_vlan(%struct.mlx5_eswitch* %32, i16 zeroext %34, i16 zeroext 0, i8 zeroext 0, i8 zeroext 1) #8, !dbg !15774
  store i32 %call42, i32* %err, align 4, !dbg !15775
  %35 = load i32, i32* %err, align 4, !dbg !15776
  %tobool43 = icmp ne i32 %35, 0, !dbg !15776
  br i1 %tobool43, label %if.then44, label %if.end45, !dbg !15778

if.then44:                                        ; preds = %if.end40
  br label %out, !dbg !15779

if.end45:                                         ; preds = %if.end40
  br label %if.end46, !dbg !15780

if.end46:                                         ; preds = %if.end45, %if.end32
  br label %skip_unset_push, !dbg !15756

skip_unset_push:                                  ; preds = %if.end46, %if.then39
  call void @llvm.dbg.label(metadata !15781), !dbg !15782
  %36 = load %struct.offloads_fdb*, %struct.offloads_fdb** %offloads, align 8, !dbg !15783
  %vlan_push_pop_refcount = getelementptr inbounds %struct.offloads_fdb, %struct.offloads_fdb* %36, i32 0, i32 8, !dbg !15784
  %37 = load i32, i32* %vlan_push_pop_refcount, align 8, !dbg !15785
  %dec47 = add i32 %37, -1, !dbg !15785
  store i32 %dec47, i32* %vlan_push_pop_refcount, align 8, !dbg !15785
  %38 = load %struct.offloads_fdb*, %struct.offloads_fdb** %offloads, align 8, !dbg !15786
  %vlan_push_pop_refcount48 = getelementptr inbounds %struct.offloads_fdb, %struct.offloads_fdb* %38, i32 0, i32 8, !dbg !15788
  %39 = load i32, i32* %vlan_push_pop_refcount48, align 8, !dbg !15788
  %tobool49 = icmp ne i32 %39, 0, !dbg !15786
  br i1 %tobool49, label %if.then50, label %if.end51, !dbg !15789

if.then50:                                        ; preds = %skip_unset_push
  br label %out, !dbg !15790

if.end51:                                         ; preds = %skip_unset_push
  %40 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !15791
  %call52 = call i32 @esw_set_global_vlan_pop(%struct.mlx5_eswitch* %40, i8 zeroext 0) #8, !dbg !15792
  store i32 %call52, i32* %err, align 4, !dbg !15793
  br label %out, !dbg !15794

out:                                              ; preds = %if.end51, %if.then50, %if.then44, %if.end31
  call void @llvm.dbg.label(metadata !15795), !dbg !15796
  %41 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !15797
  %state_lock53 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %41, i32 0, i32 10, !dbg !15798
  call void @mutex_unlock(%struct.mutex* %state_lock53) #8, !dbg !15799
  %42 = load i32, i32* %err, align 4, !dbg !15800
  store i32 %42, i32* %retval, align 4, !dbg !15801
  br label %return, !dbg !15801

return:                                           ; preds = %out, %if.then3, %if.then
  %43 = load i32, i32* %retval, align 4, !dbg !15802
  ret i32 %43, !dbg !15802
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.mlx5_flow_handle* @mlx5_eswitch_add_send_to_vport_rule(%struct.mlx5_eswitch* %esw, i16 zeroext %vport, i32 %sqn) #0 !dbg !15803 {
entry:
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  %vport.addr = alloca i16, align 2
  %sqn.addr = alloca i32, align 4
  %flow_act = alloca %struct.mlx5_flow_act, align 8
  %dest = alloca %struct.mlx5_flow_destination, align 8
  %flow_rule = alloca %struct.mlx5_flow_handle*, align 8
  %spec = alloca %struct.mlx5_flow_spec*, align 8
  %misc = alloca i8*, align 8
  %_v = alloca i32, align 4
  %_v170 = alloca i32, align 4
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !15806, metadata !DIExpression()), !dbg !15807
  store i16 %vport, i16* %vport.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %vport.addr, metadata !15808, metadata !DIExpression()), !dbg !15809
  store i32 %sqn, i32* %sqn.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sqn.addr, metadata !15810, metadata !DIExpression()), !dbg !15811
  call void @llvm.dbg.declare(metadata %struct.mlx5_flow_act* %flow_act, metadata !15812, metadata !DIExpression()), !dbg !15813
  %0 = bitcast %struct.mlx5_flow_act* %flow_act to i8*, !dbg !15813
  call void @llvm.memset.p0i8.i64(i8* align 8 %0, i8 0, i64 56, i1 false), !dbg !15813
  call void @llvm.dbg.declare(metadata %struct.mlx5_flow_destination* %dest, metadata !15814, metadata !DIExpression()), !dbg !15815
  %1 = bitcast %struct.mlx5_flow_destination* %dest to i8*, !dbg !15815
  call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 32, i1 false), !dbg !15815
  call void @llvm.dbg.declare(metadata %struct.mlx5_flow_handle** %flow_rule, metadata !15816, metadata !DIExpression()), !dbg !15817
  call void @llvm.dbg.declare(metadata %struct.mlx5_flow_spec** %spec, metadata !15818, metadata !DIExpression()), !dbg !15819
  call void @llvm.dbg.declare(metadata i8** %misc, metadata !15820, metadata !DIExpression()), !dbg !15821
  %call = call i8* @kvzalloc(i64 1040, i32 3264) #8, !dbg !15822
  %2 = bitcast i8* %call to %struct.mlx5_flow_spec*, !dbg !15822
  store %struct.mlx5_flow_spec* %2, %struct.mlx5_flow_spec** %spec, align 8, !dbg !15823
  %3 = load %struct.mlx5_flow_spec*, %struct.mlx5_flow_spec** %spec, align 8, !dbg !15824
  %tobool = icmp ne %struct.mlx5_flow_spec* %3, null, !dbg !15824
  br i1 %tobool, label %if.end, label %if.then, !dbg !15826

if.then:                                          ; preds = %entry
  %call1 = call i8* @ERR_PTR(i64 -12) #8, !dbg !15827
  %4 = bitcast i8* %call1 to %struct.mlx5_flow_handle*, !dbg !15827
  store %struct.mlx5_flow_handle* %4, %struct.mlx5_flow_handle** %flow_rule, align 8, !dbg !15829
  br label %out, !dbg !15830

if.end:                                           ; preds = %entry
  %5 = load %struct.mlx5_flow_spec*, %struct.mlx5_flow_spec** %spec, align 8, !dbg !15831
  %match_value = getelementptr inbounds %struct.mlx5_flow_spec, %struct.mlx5_flow_spec* %5, i32 0, i32 2, !dbg !15831
  %arraydecay = getelementptr inbounds [128 x i32], [128 x i32]* %match_value, i64 0, i64 0, !dbg !15831
  %6 = bitcast i32* %arraydecay to i8*, !dbg !15831
  %add.ptr = getelementptr i8, i8* %6, i64 64, !dbg !15831
  store i8* %add.ptr, i8** %misc, align 8, !dbg !15832
  br label %do.body, !dbg !15833

do.body:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %_v, metadata !15834, metadata !DIExpression()), !dbg !15836
  %7 = load i32, i32* %sqn.addr, align 4, !dbg !15836
  store i32 %7, i32* %_v, align 4, !dbg !15836
  br label %do.body2, !dbg !15836

do.body2:                                         ; preds = %do.body
  br label %do.end, !dbg !15837

do.end:                                           ; preds = %do.body2
  %8 = load i8*, i8** %misc, align 8, !dbg !15836
  %9 = bitcast i8* %8 to i32*, !dbg !15836
  %add.ptr3 = getelementptr i32, i32* %9, i64 0, !dbg !15836
  %10 = load i32, i32* %add.ptr3, align 4, !dbg !15836
  %11 = call i1 @llvm.is.constant.i32(i32 %10), !dbg !15836
  br i1 %11, label %cond.true, label %cond.false, !dbg !15836

cond.true:                                        ; preds = %do.end
  %12 = load i8*, i8** %misc, align 8, !dbg !15836
  %13 = bitcast i8* %12 to i32*, !dbg !15836
  %add.ptr4 = getelementptr i32, i32* %13, i64 0, !dbg !15836
  %14 = load i32, i32* %add.ptr4, align 4, !dbg !15836
  %and = and i32 %14, 255, !dbg !15836
  %shl = shl i32 %and, 24, !dbg !15836
  %15 = load i8*, i8** %misc, align 8, !dbg !15836
  %16 = bitcast i8* %15 to i32*, !dbg !15836
  %add.ptr5 = getelementptr i32, i32* %16, i64 0, !dbg !15836
  %17 = load i32, i32* %add.ptr5, align 4, !dbg !15836
  %and6 = and i32 %17, 65280, !dbg !15836
  %shl7 = shl i32 %and6, 8, !dbg !15836
  %or = or i32 %shl, %shl7, !dbg !15836
  %18 = load i8*, i8** %misc, align 8, !dbg !15836
  %19 = bitcast i8* %18 to i32*, !dbg !15836
  %add.ptr8 = getelementptr i32, i32* %19, i64 0, !dbg !15836
  %20 = load i32, i32* %add.ptr8, align 4, !dbg !15836
  %and9 = and i32 %20, 16711680, !dbg !15836
  %shr = lshr i32 %and9, 8, !dbg !15836
  %or10 = or i32 %or, %shr, !dbg !15836
  %21 = load i8*, i8** %misc, align 8, !dbg !15836
  %22 = bitcast i8* %21 to i32*, !dbg !15836
  %add.ptr11 = getelementptr i32, i32* %22, i64 0, !dbg !15836
  %23 = load i32, i32* %add.ptr11, align 4, !dbg !15836
  %and12 = and i32 %23, -16777216, !dbg !15836
  %shr13 = lshr i32 %and12, 24, !dbg !15836
  %or14 = or i32 %or10, %shr13, !dbg !15836
  br label %cond.end, !dbg !15836

cond.false:                                       ; preds = %do.end
  %24 = load i8*, i8** %misc, align 8, !dbg !15836
  %25 = bitcast i8* %24 to i32*, !dbg !15836
  %add.ptr15 = getelementptr i32, i32* %25, i64 0, !dbg !15836
  %26 = load i32, i32* %add.ptr15, align 4, !dbg !15836
  %call16 = call i32 @__fswab32(i32 %26) #10, !dbg !15836
  br label %cond.end, !dbg !15836

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %or14, %cond.true ], [ %call16, %cond.false ], !dbg !15836
  %and17 = and i32 %cond, -16777216, !dbg !15836
  %27 = load i32, i32* %_v, align 4, !dbg !15836
  %and18 = and i32 %27, 16777215, !dbg !15836
  %shl19 = shl i32 %and18, 0, !dbg !15836
  %or20 = or i32 %and17, %shl19, !dbg !15836
  %28 = call i1 @llvm.is.constant.i32(i32 %or20), !dbg !15836
  br i1 %28, label %cond.true21, label %cond.false137, !dbg !15836

cond.true21:                                      ; preds = %cond.end
  %29 = load i8*, i8** %misc, align 8, !dbg !15836
  %30 = bitcast i8* %29 to i32*, !dbg !15836
  %add.ptr22 = getelementptr i32, i32* %30, i64 0, !dbg !15836
  %31 = load i32, i32* %add.ptr22, align 4, !dbg !15836
  %32 = call i1 @llvm.is.constant.i32(i32 %31), !dbg !15836
  br i1 %32, label %cond.true23, label %cond.false39, !dbg !15836

cond.true23:                                      ; preds = %cond.true21
  %33 = load i8*, i8** %misc, align 8, !dbg !15836
  %34 = bitcast i8* %33 to i32*, !dbg !15836
  %add.ptr24 = getelementptr i32, i32* %34, i64 0, !dbg !15836
  %35 = load i32, i32* %add.ptr24, align 4, !dbg !15836
  %and25 = and i32 %35, 255, !dbg !15836
  %shl26 = shl i32 %and25, 24, !dbg !15836
  %36 = load i8*, i8** %misc, align 8, !dbg !15836
  %37 = bitcast i8* %36 to i32*, !dbg !15836
  %add.ptr27 = getelementptr i32, i32* %37, i64 0, !dbg !15836
  %38 = load i32, i32* %add.ptr27, align 4, !dbg !15836
  %and28 = and i32 %38, 65280, !dbg !15836
  %shl29 = shl i32 %and28, 8, !dbg !15836
  %or30 = or i32 %shl26, %shl29, !dbg !15836
  %39 = load i8*, i8** %misc, align 8, !dbg !15836
  %40 = bitcast i8* %39 to i32*, !dbg !15836
  %add.ptr31 = getelementptr i32, i32* %40, i64 0, !dbg !15836
  %41 = load i32, i32* %add.ptr31, align 4, !dbg !15836
  %and32 = and i32 %41, 16711680, !dbg !15836
  %shr33 = lshr i32 %and32, 8, !dbg !15836
  %or34 = or i32 %or30, %shr33, !dbg !15836
  %42 = load i8*, i8** %misc, align 8, !dbg !15836
  %43 = bitcast i8* %42 to i32*, !dbg !15836
  %add.ptr35 = getelementptr i32, i32* %43, i64 0, !dbg !15836
  %44 = load i32, i32* %add.ptr35, align 4, !dbg !15836
  %and36 = and i32 %44, -16777216, !dbg !15836
  %shr37 = lshr i32 %and36, 24, !dbg !15836
  %or38 = or i32 %or34, %shr37, !dbg !15836
  br label %cond.end42, !dbg !15836

cond.false39:                                     ; preds = %cond.true21
  %45 = load i8*, i8** %misc, align 8, !dbg !15836
  %46 = bitcast i8* %45 to i32*, !dbg !15836
  %add.ptr40 = getelementptr i32, i32* %46, i64 0, !dbg !15836
  %47 = load i32, i32* %add.ptr40, align 4, !dbg !15836
  %call41 = call i32 @__fswab32(i32 %47) #10, !dbg !15836
  br label %cond.end42, !dbg !15836

cond.end42:                                       ; preds = %cond.false39, %cond.true23
  %cond43 = phi i32 [ %or38, %cond.true23 ], [ %call41, %cond.false39 ], !dbg !15836
  %and44 = and i32 %cond43, -16777216, !dbg !15836
  %48 = load i32, i32* %_v, align 4, !dbg !15836
  %and45 = and i32 %48, 16777215, !dbg !15836
  %shl46 = shl i32 %and45, 0, !dbg !15836
  %or47 = or i32 %and44, %shl46, !dbg !15836
  %and48 = and i32 %or47, 255, !dbg !15836
  %shl49 = shl i32 %and48, 24, !dbg !15836
  %49 = load i8*, i8** %misc, align 8, !dbg !15836
  %50 = bitcast i8* %49 to i32*, !dbg !15836
  %add.ptr50 = getelementptr i32, i32* %50, i64 0, !dbg !15836
  %51 = load i32, i32* %add.ptr50, align 4, !dbg !15836
  %52 = call i1 @llvm.is.constant.i32(i32 %51), !dbg !15836
  br i1 %52, label %cond.true51, label %cond.false67, !dbg !15836

cond.true51:                                      ; preds = %cond.end42
  %53 = load i8*, i8** %misc, align 8, !dbg !15836
  %54 = bitcast i8* %53 to i32*, !dbg !15836
  %add.ptr52 = getelementptr i32, i32* %54, i64 0, !dbg !15836
  %55 = load i32, i32* %add.ptr52, align 4, !dbg !15836
  %and53 = and i32 %55, 255, !dbg !15836
  %shl54 = shl i32 %and53, 24, !dbg !15836
  %56 = load i8*, i8** %misc, align 8, !dbg !15836
  %57 = bitcast i8* %56 to i32*, !dbg !15836
  %add.ptr55 = getelementptr i32, i32* %57, i64 0, !dbg !15836
  %58 = load i32, i32* %add.ptr55, align 4, !dbg !15836
  %and56 = and i32 %58, 65280, !dbg !15836
  %shl57 = shl i32 %and56, 8, !dbg !15836
  %or58 = or i32 %shl54, %shl57, !dbg !15836
  %59 = load i8*, i8** %misc, align 8, !dbg !15836
  %60 = bitcast i8* %59 to i32*, !dbg !15836
  %add.ptr59 = getelementptr i32, i32* %60, i64 0, !dbg !15836
  %61 = load i32, i32* %add.ptr59, align 4, !dbg !15836
  %and60 = and i32 %61, 16711680, !dbg !15836
  %shr61 = lshr i32 %and60, 8, !dbg !15836
  %or62 = or i32 %or58, %shr61, !dbg !15836
  %62 = load i8*, i8** %misc, align 8, !dbg !15836
  %63 = bitcast i8* %62 to i32*, !dbg !15836
  %add.ptr63 = getelementptr i32, i32* %63, i64 0, !dbg !15836
  %64 = load i32, i32* %add.ptr63, align 4, !dbg !15836
  %and64 = and i32 %64, -16777216, !dbg !15836
  %shr65 = lshr i32 %and64, 24, !dbg !15836
  %or66 = or i32 %or62, %shr65, !dbg !15836
  br label %cond.end70, !dbg !15836

cond.false67:                                     ; preds = %cond.end42
  %65 = load i8*, i8** %misc, align 8, !dbg !15836
  %66 = bitcast i8* %65 to i32*, !dbg !15836
  %add.ptr68 = getelementptr i32, i32* %66, i64 0, !dbg !15836
  %67 = load i32, i32* %add.ptr68, align 4, !dbg !15836
  %call69 = call i32 @__fswab32(i32 %67) #10, !dbg !15836
  br label %cond.end70, !dbg !15836

cond.end70:                                       ; preds = %cond.false67, %cond.true51
  %cond71 = phi i32 [ %or66, %cond.true51 ], [ %call69, %cond.false67 ], !dbg !15836
  %and72 = and i32 %cond71, -16777216, !dbg !15836
  %68 = load i32, i32* %_v, align 4, !dbg !15836
  %and73 = and i32 %68, 16777215, !dbg !15836
  %shl74 = shl i32 %and73, 0, !dbg !15836
  %or75 = or i32 %and72, %shl74, !dbg !15836
  %and76 = and i32 %or75, 65280, !dbg !15836
  %shl77 = shl i32 %and76, 8, !dbg !15836
  %or78 = or i32 %shl49, %shl77, !dbg !15836
  %69 = load i8*, i8** %misc, align 8, !dbg !15836
  %70 = bitcast i8* %69 to i32*, !dbg !15836
  %add.ptr79 = getelementptr i32, i32* %70, i64 0, !dbg !15836
  %71 = load i32, i32* %add.ptr79, align 4, !dbg !15836
  %72 = call i1 @llvm.is.constant.i32(i32 %71), !dbg !15836
  br i1 %72, label %cond.true80, label %cond.false96, !dbg !15836

cond.true80:                                      ; preds = %cond.end70
  %73 = load i8*, i8** %misc, align 8, !dbg !15836
  %74 = bitcast i8* %73 to i32*, !dbg !15836
  %add.ptr81 = getelementptr i32, i32* %74, i64 0, !dbg !15836
  %75 = load i32, i32* %add.ptr81, align 4, !dbg !15836
  %and82 = and i32 %75, 255, !dbg !15836
  %shl83 = shl i32 %and82, 24, !dbg !15836
  %76 = load i8*, i8** %misc, align 8, !dbg !15836
  %77 = bitcast i8* %76 to i32*, !dbg !15836
  %add.ptr84 = getelementptr i32, i32* %77, i64 0, !dbg !15836
  %78 = load i32, i32* %add.ptr84, align 4, !dbg !15836
  %and85 = and i32 %78, 65280, !dbg !15836
  %shl86 = shl i32 %and85, 8, !dbg !15836
  %or87 = or i32 %shl83, %shl86, !dbg !15836
  %79 = load i8*, i8** %misc, align 8, !dbg !15836
  %80 = bitcast i8* %79 to i32*, !dbg !15836
  %add.ptr88 = getelementptr i32, i32* %80, i64 0, !dbg !15836
  %81 = load i32, i32* %add.ptr88, align 4, !dbg !15836
  %and89 = and i32 %81, 16711680, !dbg !15836
  %shr90 = lshr i32 %and89, 8, !dbg !15836
  %or91 = or i32 %or87, %shr90, !dbg !15836
  %82 = load i8*, i8** %misc, align 8, !dbg !15836
  %83 = bitcast i8* %82 to i32*, !dbg !15836
  %add.ptr92 = getelementptr i32, i32* %83, i64 0, !dbg !15836
  %84 = load i32, i32* %add.ptr92, align 4, !dbg !15836
  %and93 = and i32 %84, -16777216, !dbg !15836
  %shr94 = lshr i32 %and93, 24, !dbg !15836
  %or95 = or i32 %or91, %shr94, !dbg !15836
  br label %cond.end99, !dbg !15836

cond.false96:                                     ; preds = %cond.end70
  %85 = load i8*, i8** %misc, align 8, !dbg !15836
  %86 = bitcast i8* %85 to i32*, !dbg !15836
  %add.ptr97 = getelementptr i32, i32* %86, i64 0, !dbg !15836
  %87 = load i32, i32* %add.ptr97, align 4, !dbg !15836
  %call98 = call i32 @__fswab32(i32 %87) #10, !dbg !15836
  br label %cond.end99, !dbg !15836

cond.end99:                                       ; preds = %cond.false96, %cond.true80
  %cond100 = phi i32 [ %or95, %cond.true80 ], [ %call98, %cond.false96 ], !dbg !15836
  %and101 = and i32 %cond100, -16777216, !dbg !15836
  %88 = load i32, i32* %_v, align 4, !dbg !15836
  %and102 = and i32 %88, 16777215, !dbg !15836
  %shl103 = shl i32 %and102, 0, !dbg !15836
  %or104 = or i32 %and101, %shl103, !dbg !15836
  %and105 = and i32 %or104, 16711680, !dbg !15836
  %shr106 = lshr i32 %and105, 8, !dbg !15836
  %or107 = or i32 %or78, %shr106, !dbg !15836
  %89 = load i8*, i8** %misc, align 8, !dbg !15836
  %90 = bitcast i8* %89 to i32*, !dbg !15836
  %add.ptr108 = getelementptr i32, i32* %90, i64 0, !dbg !15836
  %91 = load i32, i32* %add.ptr108, align 4, !dbg !15836
  %92 = call i1 @llvm.is.constant.i32(i32 %91), !dbg !15836
  br i1 %92, label %cond.true109, label %cond.false125, !dbg !15836

cond.true109:                                     ; preds = %cond.end99
  %93 = load i8*, i8** %misc, align 8, !dbg !15836
  %94 = bitcast i8* %93 to i32*, !dbg !15836
  %add.ptr110 = getelementptr i32, i32* %94, i64 0, !dbg !15836
  %95 = load i32, i32* %add.ptr110, align 4, !dbg !15836
  %and111 = and i32 %95, 255, !dbg !15836
  %shl112 = shl i32 %and111, 24, !dbg !15836
  %96 = load i8*, i8** %misc, align 8, !dbg !15836
  %97 = bitcast i8* %96 to i32*, !dbg !15836
  %add.ptr113 = getelementptr i32, i32* %97, i64 0, !dbg !15836
  %98 = load i32, i32* %add.ptr113, align 4, !dbg !15836
  %and114 = and i32 %98, 65280, !dbg !15836
  %shl115 = shl i32 %and114, 8, !dbg !15836
  %or116 = or i32 %shl112, %shl115, !dbg !15836
  %99 = load i8*, i8** %misc, align 8, !dbg !15836
  %100 = bitcast i8* %99 to i32*, !dbg !15836
  %add.ptr117 = getelementptr i32, i32* %100, i64 0, !dbg !15836
  %101 = load i32, i32* %add.ptr117, align 4, !dbg !15836
  %and118 = and i32 %101, 16711680, !dbg !15836
  %shr119 = lshr i32 %and118, 8, !dbg !15836
  %or120 = or i32 %or116, %shr119, !dbg !15836
  %102 = load i8*, i8** %misc, align 8, !dbg !15836
  %103 = bitcast i8* %102 to i32*, !dbg !15836
  %add.ptr121 = getelementptr i32, i32* %103, i64 0, !dbg !15836
  %104 = load i32, i32* %add.ptr121, align 4, !dbg !15836
  %and122 = and i32 %104, -16777216, !dbg !15836
  %shr123 = lshr i32 %and122, 24, !dbg !15836
  %or124 = or i32 %or120, %shr123, !dbg !15836
  br label %cond.end128, !dbg !15836

cond.false125:                                    ; preds = %cond.end99
  %105 = load i8*, i8** %misc, align 8, !dbg !15836
  %106 = bitcast i8* %105 to i32*, !dbg !15836
  %add.ptr126 = getelementptr i32, i32* %106, i64 0, !dbg !15836
  %107 = load i32, i32* %add.ptr126, align 4, !dbg !15836
  %call127 = call i32 @__fswab32(i32 %107) #10, !dbg !15836
  br label %cond.end128, !dbg !15836

cond.end128:                                      ; preds = %cond.false125, %cond.true109
  %cond129 = phi i32 [ %or124, %cond.true109 ], [ %call127, %cond.false125 ], !dbg !15836
  %and130 = and i32 %cond129, -16777216, !dbg !15836
  %108 = load i32, i32* %_v, align 4, !dbg !15836
  %and131 = and i32 %108, 16777215, !dbg !15836
  %shl132 = shl i32 %and131, 0, !dbg !15836
  %or133 = or i32 %and130, %shl132, !dbg !15836
  %and134 = and i32 %or133, -16777216, !dbg !15836
  %shr135 = lshr i32 %and134, 24, !dbg !15836
  %or136 = or i32 %or107, %shr135, !dbg !15836
  br label %cond.end165, !dbg !15836

cond.false137:                                    ; preds = %cond.end
  %109 = load i8*, i8** %misc, align 8, !dbg !15836
  %110 = bitcast i8* %109 to i32*, !dbg !15836
  %add.ptr138 = getelementptr i32, i32* %110, i64 0, !dbg !15836
  %111 = load i32, i32* %add.ptr138, align 4, !dbg !15836
  %112 = call i1 @llvm.is.constant.i32(i32 %111), !dbg !15836
  br i1 %112, label %cond.true139, label %cond.false155, !dbg !15836

cond.true139:                                     ; preds = %cond.false137
  %113 = load i8*, i8** %misc, align 8, !dbg !15836
  %114 = bitcast i8* %113 to i32*, !dbg !15836
  %add.ptr140 = getelementptr i32, i32* %114, i64 0, !dbg !15836
  %115 = load i32, i32* %add.ptr140, align 4, !dbg !15836
  %and141 = and i32 %115, 255, !dbg !15836
  %shl142 = shl i32 %and141, 24, !dbg !15836
  %116 = load i8*, i8** %misc, align 8, !dbg !15836
  %117 = bitcast i8* %116 to i32*, !dbg !15836
  %add.ptr143 = getelementptr i32, i32* %117, i64 0, !dbg !15836
  %118 = load i32, i32* %add.ptr143, align 4, !dbg !15836
  %and144 = and i32 %118, 65280, !dbg !15836
  %shl145 = shl i32 %and144, 8, !dbg !15836
  %or146 = or i32 %shl142, %shl145, !dbg !15836
  %119 = load i8*, i8** %misc, align 8, !dbg !15836
  %120 = bitcast i8* %119 to i32*, !dbg !15836
  %add.ptr147 = getelementptr i32, i32* %120, i64 0, !dbg !15836
  %121 = load i32, i32* %add.ptr147, align 4, !dbg !15836
  %and148 = and i32 %121, 16711680, !dbg !15836
  %shr149 = lshr i32 %and148, 8, !dbg !15836
  %or150 = or i32 %or146, %shr149, !dbg !15836
  %122 = load i8*, i8** %misc, align 8, !dbg !15836
  %123 = bitcast i8* %122 to i32*, !dbg !15836
  %add.ptr151 = getelementptr i32, i32* %123, i64 0, !dbg !15836
  %124 = load i32, i32* %add.ptr151, align 4, !dbg !15836
  %and152 = and i32 %124, -16777216, !dbg !15836
  %shr153 = lshr i32 %and152, 24, !dbg !15836
  %or154 = or i32 %or150, %shr153, !dbg !15836
  br label %cond.end158, !dbg !15836

cond.false155:                                    ; preds = %cond.false137
  %125 = load i8*, i8** %misc, align 8, !dbg !15836
  %126 = bitcast i8* %125 to i32*, !dbg !15836
  %add.ptr156 = getelementptr i32, i32* %126, i64 0, !dbg !15836
  %127 = load i32, i32* %add.ptr156, align 4, !dbg !15836
  %call157 = call i32 @__fswab32(i32 %127) #10, !dbg !15836
  br label %cond.end158, !dbg !15836

cond.end158:                                      ; preds = %cond.false155, %cond.true139
  %cond159 = phi i32 [ %or154, %cond.true139 ], [ %call157, %cond.false155 ], !dbg !15836
  %and160 = and i32 %cond159, -16777216, !dbg !15836
  %128 = load i32, i32* %_v, align 4, !dbg !15836
  %and161 = and i32 %128, 16777215, !dbg !15836
  %shl162 = shl i32 %and161, 0, !dbg !15836
  %or163 = or i32 %and160, %shl162, !dbg !15836
  %call164 = call i32 @__fswab32(i32 %or163) #10, !dbg !15836
  br label %cond.end165, !dbg !15836

cond.end165:                                      ; preds = %cond.end158, %cond.end128
  %cond166 = phi i32 [ %or136, %cond.end128 ], [ %call164, %cond.end158 ], !dbg !15836
  %129 = load i8*, i8** %misc, align 8, !dbg !15836
  %130 = bitcast i8* %129 to i32*, !dbg !15836
  %add.ptr167 = getelementptr i32, i32* %130, i64 0, !dbg !15836
  store i32 %cond166, i32* %add.ptr167, align 4, !dbg !15836
  br label %do.end168, !dbg !15836

do.end168:                                        ; preds = %cond.end165
  br label %do.body169, !dbg !15839

do.body169:                                       ; preds = %do.end168
  call void @llvm.dbg.declare(metadata i32* %_v170, metadata !15840, metadata !DIExpression()), !dbg !15842
  %131 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !15842
  %manager_vport = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %131, i32 0, i32 15, !dbg !15842
  %132 = load i16, i16* %manager_vport, align 4, !dbg !15842
  %conv = zext i16 %132 to i32, !dbg !15842
  store i32 %conv, i32* %_v170, align 4, !dbg !15842
  br label %do.body171, !dbg !15842

do.body171:                                       ; preds = %do.body169
  br label %do.end172, !dbg !15843

do.end172:                                        ; preds = %do.body171
  %133 = load i8*, i8** %misc, align 8, !dbg !15842
  %134 = bitcast i8* %133 to i32*, !dbg !15842
  %add.ptr173 = getelementptr i32, i32* %134, i64 1, !dbg !15842
  %135 = load i32, i32* %add.ptr173, align 4, !dbg !15842
  %136 = call i1 @llvm.is.constant.i32(i32 %135), !dbg !15842
  br i1 %136, label %cond.true174, label %cond.false190, !dbg !15842

cond.true174:                                     ; preds = %do.end172
  %137 = load i8*, i8** %misc, align 8, !dbg !15842
  %138 = bitcast i8* %137 to i32*, !dbg !15842
  %add.ptr175 = getelementptr i32, i32* %138, i64 1, !dbg !15842
  %139 = load i32, i32* %add.ptr175, align 4, !dbg !15842
  %and176 = and i32 %139, 255, !dbg !15842
  %shl177 = shl i32 %and176, 24, !dbg !15842
  %140 = load i8*, i8** %misc, align 8, !dbg !15842
  %141 = bitcast i8* %140 to i32*, !dbg !15842
  %add.ptr178 = getelementptr i32, i32* %141, i64 1, !dbg !15842
  %142 = load i32, i32* %add.ptr178, align 4, !dbg !15842
  %and179 = and i32 %142, 65280, !dbg !15842
  %shl180 = shl i32 %and179, 8, !dbg !15842
  %or181 = or i32 %shl177, %shl180, !dbg !15842
  %143 = load i8*, i8** %misc, align 8, !dbg !15842
  %144 = bitcast i8* %143 to i32*, !dbg !15842
  %add.ptr182 = getelementptr i32, i32* %144, i64 1, !dbg !15842
  %145 = load i32, i32* %add.ptr182, align 4, !dbg !15842
  %and183 = and i32 %145, 16711680, !dbg !15842
  %shr184 = lshr i32 %and183, 8, !dbg !15842
  %or185 = or i32 %or181, %shr184, !dbg !15842
  %146 = load i8*, i8** %misc, align 8, !dbg !15842
  %147 = bitcast i8* %146 to i32*, !dbg !15842
  %add.ptr186 = getelementptr i32, i32* %147, i64 1, !dbg !15842
  %148 = load i32, i32* %add.ptr186, align 4, !dbg !15842
  %and187 = and i32 %148, -16777216, !dbg !15842
  %shr188 = lshr i32 %and187, 24, !dbg !15842
  %or189 = or i32 %or185, %shr188, !dbg !15842
  br label %cond.end193, !dbg !15842

cond.false190:                                    ; preds = %do.end172
  %149 = load i8*, i8** %misc, align 8, !dbg !15842
  %150 = bitcast i8* %149 to i32*, !dbg !15842
  %add.ptr191 = getelementptr i32, i32* %150, i64 1, !dbg !15842
  %151 = load i32, i32* %add.ptr191, align 4, !dbg !15842
  %call192 = call i32 @__fswab32(i32 %151) #10, !dbg !15842
  br label %cond.end193, !dbg !15842

cond.end193:                                      ; preds = %cond.false190, %cond.true174
  %cond194 = phi i32 [ %or189, %cond.true174 ], [ %call192, %cond.false190 ], !dbg !15842
  %and195 = and i32 %cond194, -65536, !dbg !15842
  %152 = load i32, i32* %_v170, align 4, !dbg !15842
  %and196 = and i32 %152, 65535, !dbg !15842
  %shl197 = shl i32 %and196, 0, !dbg !15842
  %or198 = or i32 %and195, %shl197, !dbg !15842
  %153 = call i1 @llvm.is.constant.i32(i32 %or198), !dbg !15842
  br i1 %153, label %cond.true199, label %cond.false315, !dbg !15842

cond.true199:                                     ; preds = %cond.end193
  %154 = load i8*, i8** %misc, align 8, !dbg !15842
  %155 = bitcast i8* %154 to i32*, !dbg !15842
  %add.ptr200 = getelementptr i32, i32* %155, i64 1, !dbg !15842
  %156 = load i32, i32* %add.ptr200, align 4, !dbg !15842
  %157 = call i1 @llvm.is.constant.i32(i32 %156), !dbg !15842
  br i1 %157, label %cond.true201, label %cond.false217, !dbg !15842

cond.true201:                                     ; preds = %cond.true199
  %158 = load i8*, i8** %misc, align 8, !dbg !15842
  %159 = bitcast i8* %158 to i32*, !dbg !15842
  %add.ptr202 = getelementptr i32, i32* %159, i64 1, !dbg !15842
  %160 = load i32, i32* %add.ptr202, align 4, !dbg !15842
  %and203 = and i32 %160, 255, !dbg !15842
  %shl204 = shl i32 %and203, 24, !dbg !15842
  %161 = load i8*, i8** %misc, align 8, !dbg !15842
  %162 = bitcast i8* %161 to i32*, !dbg !15842
  %add.ptr205 = getelementptr i32, i32* %162, i64 1, !dbg !15842
  %163 = load i32, i32* %add.ptr205, align 4, !dbg !15842
  %and206 = and i32 %163, 65280, !dbg !15842
  %shl207 = shl i32 %and206, 8, !dbg !15842
  %or208 = or i32 %shl204, %shl207, !dbg !15842
  %164 = load i8*, i8** %misc, align 8, !dbg !15842
  %165 = bitcast i8* %164 to i32*, !dbg !15842
  %add.ptr209 = getelementptr i32, i32* %165, i64 1, !dbg !15842
  %166 = load i32, i32* %add.ptr209, align 4, !dbg !15842
  %and210 = and i32 %166, 16711680, !dbg !15842
  %shr211 = lshr i32 %and210, 8, !dbg !15842
  %or212 = or i32 %or208, %shr211, !dbg !15842
  %167 = load i8*, i8** %misc, align 8, !dbg !15842
  %168 = bitcast i8* %167 to i32*, !dbg !15842
  %add.ptr213 = getelementptr i32, i32* %168, i64 1, !dbg !15842
  %169 = load i32, i32* %add.ptr213, align 4, !dbg !15842
  %and214 = and i32 %169, -16777216, !dbg !15842
  %shr215 = lshr i32 %and214, 24, !dbg !15842
  %or216 = or i32 %or212, %shr215, !dbg !15842
  br label %cond.end220, !dbg !15842

cond.false217:                                    ; preds = %cond.true199
  %170 = load i8*, i8** %misc, align 8, !dbg !15842
  %171 = bitcast i8* %170 to i32*, !dbg !15842
  %add.ptr218 = getelementptr i32, i32* %171, i64 1, !dbg !15842
  %172 = load i32, i32* %add.ptr218, align 4, !dbg !15842
  %call219 = call i32 @__fswab32(i32 %172) #10, !dbg !15842
  br label %cond.end220, !dbg !15842

cond.end220:                                      ; preds = %cond.false217, %cond.true201
  %cond221 = phi i32 [ %or216, %cond.true201 ], [ %call219, %cond.false217 ], !dbg !15842
  %and222 = and i32 %cond221, -65536, !dbg !15842
  %173 = load i32, i32* %_v170, align 4, !dbg !15842
  %and223 = and i32 %173, 65535, !dbg !15842
  %shl224 = shl i32 %and223, 0, !dbg !15842
  %or225 = or i32 %and222, %shl224, !dbg !15842
  %and226 = and i32 %or225, 255, !dbg !15842
  %shl227 = shl i32 %and226, 24, !dbg !15842
  %174 = load i8*, i8** %misc, align 8, !dbg !15842
  %175 = bitcast i8* %174 to i32*, !dbg !15842
  %add.ptr228 = getelementptr i32, i32* %175, i64 1, !dbg !15842
  %176 = load i32, i32* %add.ptr228, align 4, !dbg !15842
  %177 = call i1 @llvm.is.constant.i32(i32 %176), !dbg !15842
  br i1 %177, label %cond.true229, label %cond.false245, !dbg !15842

cond.true229:                                     ; preds = %cond.end220
  %178 = load i8*, i8** %misc, align 8, !dbg !15842
  %179 = bitcast i8* %178 to i32*, !dbg !15842
  %add.ptr230 = getelementptr i32, i32* %179, i64 1, !dbg !15842
  %180 = load i32, i32* %add.ptr230, align 4, !dbg !15842
  %and231 = and i32 %180, 255, !dbg !15842
  %shl232 = shl i32 %and231, 24, !dbg !15842
  %181 = load i8*, i8** %misc, align 8, !dbg !15842
  %182 = bitcast i8* %181 to i32*, !dbg !15842
  %add.ptr233 = getelementptr i32, i32* %182, i64 1, !dbg !15842
  %183 = load i32, i32* %add.ptr233, align 4, !dbg !15842
  %and234 = and i32 %183, 65280, !dbg !15842
  %shl235 = shl i32 %and234, 8, !dbg !15842
  %or236 = or i32 %shl232, %shl235, !dbg !15842
  %184 = load i8*, i8** %misc, align 8, !dbg !15842
  %185 = bitcast i8* %184 to i32*, !dbg !15842
  %add.ptr237 = getelementptr i32, i32* %185, i64 1, !dbg !15842
  %186 = load i32, i32* %add.ptr237, align 4, !dbg !15842
  %and238 = and i32 %186, 16711680, !dbg !15842
  %shr239 = lshr i32 %and238, 8, !dbg !15842
  %or240 = or i32 %or236, %shr239, !dbg !15842
  %187 = load i8*, i8** %misc, align 8, !dbg !15842
  %188 = bitcast i8* %187 to i32*, !dbg !15842
  %add.ptr241 = getelementptr i32, i32* %188, i64 1, !dbg !15842
  %189 = load i32, i32* %add.ptr241, align 4, !dbg !15842
  %and242 = and i32 %189, -16777216, !dbg !15842
  %shr243 = lshr i32 %and242, 24, !dbg !15842
  %or244 = or i32 %or240, %shr243, !dbg !15842
  br label %cond.end248, !dbg !15842

cond.false245:                                    ; preds = %cond.end220
  %190 = load i8*, i8** %misc, align 8, !dbg !15842
  %191 = bitcast i8* %190 to i32*, !dbg !15842
  %add.ptr246 = getelementptr i32, i32* %191, i64 1, !dbg !15842
  %192 = load i32, i32* %add.ptr246, align 4, !dbg !15842
  %call247 = call i32 @__fswab32(i32 %192) #10, !dbg !15842
  br label %cond.end248, !dbg !15842

cond.end248:                                      ; preds = %cond.false245, %cond.true229
  %cond249 = phi i32 [ %or244, %cond.true229 ], [ %call247, %cond.false245 ], !dbg !15842
  %and250 = and i32 %cond249, -65536, !dbg !15842
  %193 = load i32, i32* %_v170, align 4, !dbg !15842
  %and251 = and i32 %193, 65535, !dbg !15842
  %shl252 = shl i32 %and251, 0, !dbg !15842
  %or253 = or i32 %and250, %shl252, !dbg !15842
  %and254 = and i32 %or253, 65280, !dbg !15842
  %shl255 = shl i32 %and254, 8, !dbg !15842
  %or256 = or i32 %shl227, %shl255, !dbg !15842
  %194 = load i8*, i8** %misc, align 8, !dbg !15842
  %195 = bitcast i8* %194 to i32*, !dbg !15842
  %add.ptr257 = getelementptr i32, i32* %195, i64 1, !dbg !15842
  %196 = load i32, i32* %add.ptr257, align 4, !dbg !15842
  %197 = call i1 @llvm.is.constant.i32(i32 %196), !dbg !15842
  br i1 %197, label %cond.true258, label %cond.false274, !dbg !15842

cond.true258:                                     ; preds = %cond.end248
  %198 = load i8*, i8** %misc, align 8, !dbg !15842
  %199 = bitcast i8* %198 to i32*, !dbg !15842
  %add.ptr259 = getelementptr i32, i32* %199, i64 1, !dbg !15842
  %200 = load i32, i32* %add.ptr259, align 4, !dbg !15842
  %and260 = and i32 %200, 255, !dbg !15842
  %shl261 = shl i32 %and260, 24, !dbg !15842
  %201 = load i8*, i8** %misc, align 8, !dbg !15842
  %202 = bitcast i8* %201 to i32*, !dbg !15842
  %add.ptr262 = getelementptr i32, i32* %202, i64 1, !dbg !15842
  %203 = load i32, i32* %add.ptr262, align 4, !dbg !15842
  %and263 = and i32 %203, 65280, !dbg !15842
  %shl264 = shl i32 %and263, 8, !dbg !15842
  %or265 = or i32 %shl261, %shl264, !dbg !15842
  %204 = load i8*, i8** %misc, align 8, !dbg !15842
  %205 = bitcast i8* %204 to i32*, !dbg !15842
  %add.ptr266 = getelementptr i32, i32* %205, i64 1, !dbg !15842
  %206 = load i32, i32* %add.ptr266, align 4, !dbg !15842
  %and267 = and i32 %206, 16711680, !dbg !15842
  %shr268 = lshr i32 %and267, 8, !dbg !15842
  %or269 = or i32 %or265, %shr268, !dbg !15842
  %207 = load i8*, i8** %misc, align 8, !dbg !15842
  %208 = bitcast i8* %207 to i32*, !dbg !15842
  %add.ptr270 = getelementptr i32, i32* %208, i64 1, !dbg !15842
  %209 = load i32, i32* %add.ptr270, align 4, !dbg !15842
  %and271 = and i32 %209, -16777216, !dbg !15842
  %shr272 = lshr i32 %and271, 24, !dbg !15842
  %or273 = or i32 %or269, %shr272, !dbg !15842
  br label %cond.end277, !dbg !15842

cond.false274:                                    ; preds = %cond.end248
  %210 = load i8*, i8** %misc, align 8, !dbg !15842
  %211 = bitcast i8* %210 to i32*, !dbg !15842
  %add.ptr275 = getelementptr i32, i32* %211, i64 1, !dbg !15842
  %212 = load i32, i32* %add.ptr275, align 4, !dbg !15842
  %call276 = call i32 @__fswab32(i32 %212) #10, !dbg !15842
  br label %cond.end277, !dbg !15842

cond.end277:                                      ; preds = %cond.false274, %cond.true258
  %cond278 = phi i32 [ %or273, %cond.true258 ], [ %call276, %cond.false274 ], !dbg !15842
  %and279 = and i32 %cond278, -65536, !dbg !15842
  %213 = load i32, i32* %_v170, align 4, !dbg !15842
  %and280 = and i32 %213, 65535, !dbg !15842
  %shl281 = shl i32 %and280, 0, !dbg !15842
  %or282 = or i32 %and279, %shl281, !dbg !15842
  %and283 = and i32 %or282, 16711680, !dbg !15842
  %shr284 = lshr i32 %and283, 8, !dbg !15842
  %or285 = or i32 %or256, %shr284, !dbg !15842
  %214 = load i8*, i8** %misc, align 8, !dbg !15842
  %215 = bitcast i8* %214 to i32*, !dbg !15842
  %add.ptr286 = getelementptr i32, i32* %215, i64 1, !dbg !15842
  %216 = load i32, i32* %add.ptr286, align 4, !dbg !15842
  %217 = call i1 @llvm.is.constant.i32(i32 %216), !dbg !15842
  br i1 %217, label %cond.true287, label %cond.false303, !dbg !15842

cond.true287:                                     ; preds = %cond.end277
  %218 = load i8*, i8** %misc, align 8, !dbg !15842
  %219 = bitcast i8* %218 to i32*, !dbg !15842
  %add.ptr288 = getelementptr i32, i32* %219, i64 1, !dbg !15842
  %220 = load i32, i32* %add.ptr288, align 4, !dbg !15842
  %and289 = and i32 %220, 255, !dbg !15842
  %shl290 = shl i32 %and289, 24, !dbg !15842
  %221 = load i8*, i8** %misc, align 8, !dbg !15842
  %222 = bitcast i8* %221 to i32*, !dbg !15842
  %add.ptr291 = getelementptr i32, i32* %222, i64 1, !dbg !15842
  %223 = load i32, i32* %add.ptr291, align 4, !dbg !15842
  %and292 = and i32 %223, 65280, !dbg !15842
  %shl293 = shl i32 %and292, 8, !dbg !15842
  %or294 = or i32 %shl290, %shl293, !dbg !15842
  %224 = load i8*, i8** %misc, align 8, !dbg !15842
  %225 = bitcast i8* %224 to i32*, !dbg !15842
  %add.ptr295 = getelementptr i32, i32* %225, i64 1, !dbg !15842
  %226 = load i32, i32* %add.ptr295, align 4, !dbg !15842
  %and296 = and i32 %226, 16711680, !dbg !15842
  %shr297 = lshr i32 %and296, 8, !dbg !15842
  %or298 = or i32 %or294, %shr297, !dbg !15842
  %227 = load i8*, i8** %misc, align 8, !dbg !15842
  %228 = bitcast i8* %227 to i32*, !dbg !15842
  %add.ptr299 = getelementptr i32, i32* %228, i64 1, !dbg !15842
  %229 = load i32, i32* %add.ptr299, align 4, !dbg !15842
  %and300 = and i32 %229, -16777216, !dbg !15842
  %shr301 = lshr i32 %and300, 24, !dbg !15842
  %or302 = or i32 %or298, %shr301, !dbg !15842
  br label %cond.end306, !dbg !15842

cond.false303:                                    ; preds = %cond.end277
  %230 = load i8*, i8** %misc, align 8, !dbg !15842
  %231 = bitcast i8* %230 to i32*, !dbg !15842
  %add.ptr304 = getelementptr i32, i32* %231, i64 1, !dbg !15842
  %232 = load i32, i32* %add.ptr304, align 4, !dbg !15842
  %call305 = call i32 @__fswab32(i32 %232) #10, !dbg !15842
  br label %cond.end306, !dbg !15842

cond.end306:                                      ; preds = %cond.false303, %cond.true287
  %cond307 = phi i32 [ %or302, %cond.true287 ], [ %call305, %cond.false303 ], !dbg !15842
  %and308 = and i32 %cond307, -65536, !dbg !15842
  %233 = load i32, i32* %_v170, align 4, !dbg !15842
  %and309 = and i32 %233, 65535, !dbg !15842
  %shl310 = shl i32 %and309, 0, !dbg !15842
  %or311 = or i32 %and308, %shl310, !dbg !15842
  %and312 = and i32 %or311, -16777216, !dbg !15842
  %shr313 = lshr i32 %and312, 24, !dbg !15842
  %or314 = or i32 %or285, %shr313, !dbg !15842
  br label %cond.end343, !dbg !15842

cond.false315:                                    ; preds = %cond.end193
  %234 = load i8*, i8** %misc, align 8, !dbg !15842
  %235 = bitcast i8* %234 to i32*, !dbg !15842
  %add.ptr316 = getelementptr i32, i32* %235, i64 1, !dbg !15842
  %236 = load i32, i32* %add.ptr316, align 4, !dbg !15842
  %237 = call i1 @llvm.is.constant.i32(i32 %236), !dbg !15842
  br i1 %237, label %cond.true317, label %cond.false333, !dbg !15842

cond.true317:                                     ; preds = %cond.false315
  %238 = load i8*, i8** %misc, align 8, !dbg !15842
  %239 = bitcast i8* %238 to i32*, !dbg !15842
  %add.ptr318 = getelementptr i32, i32* %239, i64 1, !dbg !15842
  %240 = load i32, i32* %add.ptr318, align 4, !dbg !15842
  %and319 = and i32 %240, 255, !dbg !15842
  %shl320 = shl i32 %and319, 24, !dbg !15842
  %241 = load i8*, i8** %misc, align 8, !dbg !15842
  %242 = bitcast i8* %241 to i32*, !dbg !15842
  %add.ptr321 = getelementptr i32, i32* %242, i64 1, !dbg !15842
  %243 = load i32, i32* %add.ptr321, align 4, !dbg !15842
  %and322 = and i32 %243, 65280, !dbg !15842
  %shl323 = shl i32 %and322, 8, !dbg !15842
  %or324 = or i32 %shl320, %shl323, !dbg !15842
  %244 = load i8*, i8** %misc, align 8, !dbg !15842
  %245 = bitcast i8* %244 to i32*, !dbg !15842
  %add.ptr325 = getelementptr i32, i32* %245, i64 1, !dbg !15842
  %246 = load i32, i32* %add.ptr325, align 4, !dbg !15842
  %and326 = and i32 %246, 16711680, !dbg !15842
  %shr327 = lshr i32 %and326, 8, !dbg !15842
  %or328 = or i32 %or324, %shr327, !dbg !15842
  %247 = load i8*, i8** %misc, align 8, !dbg !15842
  %248 = bitcast i8* %247 to i32*, !dbg !15842
  %add.ptr329 = getelementptr i32, i32* %248, i64 1, !dbg !15842
  %249 = load i32, i32* %add.ptr329, align 4, !dbg !15842
  %and330 = and i32 %249, -16777216, !dbg !15842
  %shr331 = lshr i32 %and330, 24, !dbg !15842
  %or332 = or i32 %or328, %shr331, !dbg !15842
  br label %cond.end336, !dbg !15842

cond.false333:                                    ; preds = %cond.false315
  %250 = load i8*, i8** %misc, align 8, !dbg !15842
  %251 = bitcast i8* %250 to i32*, !dbg !15842
  %add.ptr334 = getelementptr i32, i32* %251, i64 1, !dbg !15842
  %252 = load i32, i32* %add.ptr334, align 4, !dbg !15842
  %call335 = call i32 @__fswab32(i32 %252) #10, !dbg !15842
  br label %cond.end336, !dbg !15842

cond.end336:                                      ; preds = %cond.false333, %cond.true317
  %cond337 = phi i32 [ %or332, %cond.true317 ], [ %call335, %cond.false333 ], !dbg !15842
  %and338 = and i32 %cond337, -65536, !dbg !15842
  %253 = load i32, i32* %_v170, align 4, !dbg !15842
  %and339 = and i32 %253, 65535, !dbg !15842
  %shl340 = shl i32 %and339, 0, !dbg !15842
  %or341 = or i32 %and338, %shl340, !dbg !15842
  %call342 = call i32 @__fswab32(i32 %or341) #10, !dbg !15842
  br label %cond.end343, !dbg !15842

cond.end343:                                      ; preds = %cond.end336, %cond.end306
  %cond344 = phi i32 [ %or314, %cond.end306 ], [ %call342, %cond.end336 ], !dbg !15842
  %254 = load i8*, i8** %misc, align 8, !dbg !15842
  %255 = bitcast i8* %254 to i32*, !dbg !15842
  %add.ptr345 = getelementptr i32, i32* %255, i64 1, !dbg !15842
  store i32 %cond344, i32* %add.ptr345, align 4, !dbg !15842
  br label %do.end346, !dbg !15842

do.end346:                                        ; preds = %cond.end343
  %256 = load %struct.mlx5_flow_spec*, %struct.mlx5_flow_spec** %spec, align 8, !dbg !15845
  %match_criteria = getelementptr inbounds %struct.mlx5_flow_spec, %struct.mlx5_flow_spec* %256, i32 0, i32 1, !dbg !15845
  %arraydecay347 = getelementptr inbounds [128 x i32], [128 x i32]* %match_criteria, i64 0, i64 0, !dbg !15845
  %257 = bitcast i32* %arraydecay347 to i8*, !dbg !15845
  %add.ptr348 = getelementptr i8, i8* %257, i64 64, !dbg !15845
  store i8* %add.ptr348, i8** %misc, align 8, !dbg !15846
  br label %do.body349, !dbg !15847

do.body349:                                       ; preds = %do.end346
  br label %do.body350, !dbg !15848

do.body350:                                       ; preds = %do.body349
  br label %do.end351, !dbg !15850

do.end351:                                        ; preds = %do.body350
  %258 = load i8*, i8** %misc, align 8, !dbg !15848
  %259 = bitcast i8* %258 to i32*, !dbg !15848
  %add.ptr352 = getelementptr i32, i32* %259, i64 0, !dbg !15848
  %260 = load i32, i32* %add.ptr352, align 4, !dbg !15848
  %261 = call i1 @llvm.is.constant.i32(i32 %260), !dbg !15848
  br i1 %261, label %cond.true353, label %cond.false369, !dbg !15848

cond.true353:                                     ; preds = %do.end351
  %262 = load i8*, i8** %misc, align 8, !dbg !15848
  %263 = bitcast i8* %262 to i32*, !dbg !15848
  %add.ptr354 = getelementptr i32, i32* %263, i64 0, !dbg !15848
  %264 = load i32, i32* %add.ptr354, align 4, !dbg !15848
  %and355 = and i32 %264, 255, !dbg !15848
  %shl356 = shl i32 %and355, 24, !dbg !15848
  %265 = load i8*, i8** %misc, align 8, !dbg !15848
  %266 = bitcast i8* %265 to i32*, !dbg !15848
  %add.ptr357 = getelementptr i32, i32* %266, i64 0, !dbg !15848
  %267 = load i32, i32* %add.ptr357, align 4, !dbg !15848
  %and358 = and i32 %267, 65280, !dbg !15848
  %shl359 = shl i32 %and358, 8, !dbg !15848
  %or360 = or i32 %shl356, %shl359, !dbg !15848
  %268 = load i8*, i8** %misc, align 8, !dbg !15848
  %269 = bitcast i8* %268 to i32*, !dbg !15848
  %add.ptr361 = getelementptr i32, i32* %269, i64 0, !dbg !15848
  %270 = load i32, i32* %add.ptr361, align 4, !dbg !15848
  %and362 = and i32 %270, 16711680, !dbg !15848
  %shr363 = lshr i32 %and362, 8, !dbg !15848
  %or364 = or i32 %or360, %shr363, !dbg !15848
  %271 = load i8*, i8** %misc, align 8, !dbg !15848
  %272 = bitcast i8* %271 to i32*, !dbg !15848
  %add.ptr365 = getelementptr i32, i32* %272, i64 0, !dbg !15848
  %273 = load i32, i32* %add.ptr365, align 4, !dbg !15848
  %and366 = and i32 %273, -16777216, !dbg !15848
  %shr367 = lshr i32 %and366, 24, !dbg !15848
  %or368 = or i32 %or364, %shr367, !dbg !15848
  br label %cond.end372, !dbg !15848

cond.false369:                                    ; preds = %do.end351
  %274 = load i8*, i8** %misc, align 8, !dbg !15848
  %275 = bitcast i8* %274 to i32*, !dbg !15848
  %add.ptr370 = getelementptr i32, i32* %275, i64 0, !dbg !15848
  %276 = load i32, i32* %add.ptr370, align 4, !dbg !15848
  %call371 = call i32 @__fswab32(i32 %276) #10, !dbg !15848
  br label %cond.end372, !dbg !15848

cond.end372:                                      ; preds = %cond.false369, %cond.true353
  %cond373 = phi i32 [ %or368, %cond.true353 ], [ %call371, %cond.false369 ], !dbg !15848
  %and374 = and i32 %cond373, -16777216, !dbg !15848
  %or375 = or i32 %and374, 16777215, !dbg !15848
  %277 = call i1 @llvm.is.constant.i32(i32 %or375), !dbg !15848
  br i1 %277, label %cond.true376, label %cond.false484, !dbg !15848

cond.true376:                                     ; preds = %cond.end372
  %278 = load i8*, i8** %misc, align 8, !dbg !15848
  %279 = bitcast i8* %278 to i32*, !dbg !15848
  %add.ptr377 = getelementptr i32, i32* %279, i64 0, !dbg !15848
  %280 = load i32, i32* %add.ptr377, align 4, !dbg !15848
  %281 = call i1 @llvm.is.constant.i32(i32 %280), !dbg !15848
  br i1 %281, label %cond.true378, label %cond.false394, !dbg !15848

cond.true378:                                     ; preds = %cond.true376
  %282 = load i8*, i8** %misc, align 8, !dbg !15848
  %283 = bitcast i8* %282 to i32*, !dbg !15848
  %add.ptr379 = getelementptr i32, i32* %283, i64 0, !dbg !15848
  %284 = load i32, i32* %add.ptr379, align 4, !dbg !15848
  %and380 = and i32 %284, 255, !dbg !15848
  %shl381 = shl i32 %and380, 24, !dbg !15848
  %285 = load i8*, i8** %misc, align 8, !dbg !15848
  %286 = bitcast i8* %285 to i32*, !dbg !15848
  %add.ptr382 = getelementptr i32, i32* %286, i64 0, !dbg !15848
  %287 = load i32, i32* %add.ptr382, align 4, !dbg !15848
  %and383 = and i32 %287, 65280, !dbg !15848
  %shl384 = shl i32 %and383, 8, !dbg !15848
  %or385 = or i32 %shl381, %shl384, !dbg !15848
  %288 = load i8*, i8** %misc, align 8, !dbg !15848
  %289 = bitcast i8* %288 to i32*, !dbg !15848
  %add.ptr386 = getelementptr i32, i32* %289, i64 0, !dbg !15848
  %290 = load i32, i32* %add.ptr386, align 4, !dbg !15848
  %and387 = and i32 %290, 16711680, !dbg !15848
  %shr388 = lshr i32 %and387, 8, !dbg !15848
  %or389 = or i32 %or385, %shr388, !dbg !15848
  %291 = load i8*, i8** %misc, align 8, !dbg !15848
  %292 = bitcast i8* %291 to i32*, !dbg !15848
  %add.ptr390 = getelementptr i32, i32* %292, i64 0, !dbg !15848
  %293 = load i32, i32* %add.ptr390, align 4, !dbg !15848
  %and391 = and i32 %293, -16777216, !dbg !15848
  %shr392 = lshr i32 %and391, 24, !dbg !15848
  %or393 = or i32 %or389, %shr392, !dbg !15848
  br label %cond.end397, !dbg !15848

cond.false394:                                    ; preds = %cond.true376
  %294 = load i8*, i8** %misc, align 8, !dbg !15848
  %295 = bitcast i8* %294 to i32*, !dbg !15848
  %add.ptr395 = getelementptr i32, i32* %295, i64 0, !dbg !15848
  %296 = load i32, i32* %add.ptr395, align 4, !dbg !15848
  %call396 = call i32 @__fswab32(i32 %296) #10, !dbg !15848
  br label %cond.end397, !dbg !15848

cond.end397:                                      ; preds = %cond.false394, %cond.true378
  %cond398 = phi i32 [ %or393, %cond.true378 ], [ %call396, %cond.false394 ], !dbg !15848
  %and399 = and i32 %cond398, -16777216, !dbg !15848
  %or400 = or i32 %and399, 16777215, !dbg !15848
  %and401 = and i32 %or400, 255, !dbg !15848
  %shl402 = shl i32 %and401, 24, !dbg !15848
  %297 = load i8*, i8** %misc, align 8, !dbg !15848
  %298 = bitcast i8* %297 to i32*, !dbg !15848
  %add.ptr403 = getelementptr i32, i32* %298, i64 0, !dbg !15848
  %299 = load i32, i32* %add.ptr403, align 4, !dbg !15848
  %300 = call i1 @llvm.is.constant.i32(i32 %299), !dbg !15848
  br i1 %300, label %cond.true404, label %cond.false420, !dbg !15848

cond.true404:                                     ; preds = %cond.end397
  %301 = load i8*, i8** %misc, align 8, !dbg !15848
  %302 = bitcast i8* %301 to i32*, !dbg !15848
  %add.ptr405 = getelementptr i32, i32* %302, i64 0, !dbg !15848
  %303 = load i32, i32* %add.ptr405, align 4, !dbg !15848
  %and406 = and i32 %303, 255, !dbg !15848
  %shl407 = shl i32 %and406, 24, !dbg !15848
  %304 = load i8*, i8** %misc, align 8, !dbg !15848
  %305 = bitcast i8* %304 to i32*, !dbg !15848
  %add.ptr408 = getelementptr i32, i32* %305, i64 0, !dbg !15848
  %306 = load i32, i32* %add.ptr408, align 4, !dbg !15848
  %and409 = and i32 %306, 65280, !dbg !15848
  %shl410 = shl i32 %and409, 8, !dbg !15848
  %or411 = or i32 %shl407, %shl410, !dbg !15848
  %307 = load i8*, i8** %misc, align 8, !dbg !15848
  %308 = bitcast i8* %307 to i32*, !dbg !15848
  %add.ptr412 = getelementptr i32, i32* %308, i64 0, !dbg !15848
  %309 = load i32, i32* %add.ptr412, align 4, !dbg !15848
  %and413 = and i32 %309, 16711680, !dbg !15848
  %shr414 = lshr i32 %and413, 8, !dbg !15848
  %or415 = or i32 %or411, %shr414, !dbg !15848
  %310 = load i8*, i8** %misc, align 8, !dbg !15848
  %311 = bitcast i8* %310 to i32*, !dbg !15848
  %add.ptr416 = getelementptr i32, i32* %311, i64 0, !dbg !15848
  %312 = load i32, i32* %add.ptr416, align 4, !dbg !15848
  %and417 = and i32 %312, -16777216, !dbg !15848
  %shr418 = lshr i32 %and417, 24, !dbg !15848
  %or419 = or i32 %or415, %shr418, !dbg !15848
  br label %cond.end423, !dbg !15848

cond.false420:                                    ; preds = %cond.end397
  %313 = load i8*, i8** %misc, align 8, !dbg !15848
  %314 = bitcast i8* %313 to i32*, !dbg !15848
  %add.ptr421 = getelementptr i32, i32* %314, i64 0, !dbg !15848
  %315 = load i32, i32* %add.ptr421, align 4, !dbg !15848
  %call422 = call i32 @__fswab32(i32 %315) #10, !dbg !15848
  br label %cond.end423, !dbg !15848

cond.end423:                                      ; preds = %cond.false420, %cond.true404
  %cond424 = phi i32 [ %or419, %cond.true404 ], [ %call422, %cond.false420 ], !dbg !15848
  %and425 = and i32 %cond424, -16777216, !dbg !15848
  %or426 = or i32 %and425, 16777215, !dbg !15848
  %and427 = and i32 %or426, 65280, !dbg !15848
  %shl428 = shl i32 %and427, 8, !dbg !15848
  %or429 = or i32 %shl402, %shl428, !dbg !15848
  %316 = load i8*, i8** %misc, align 8, !dbg !15848
  %317 = bitcast i8* %316 to i32*, !dbg !15848
  %add.ptr430 = getelementptr i32, i32* %317, i64 0, !dbg !15848
  %318 = load i32, i32* %add.ptr430, align 4, !dbg !15848
  %319 = call i1 @llvm.is.constant.i32(i32 %318), !dbg !15848
  br i1 %319, label %cond.true431, label %cond.false447, !dbg !15848

cond.true431:                                     ; preds = %cond.end423
  %320 = load i8*, i8** %misc, align 8, !dbg !15848
  %321 = bitcast i8* %320 to i32*, !dbg !15848
  %add.ptr432 = getelementptr i32, i32* %321, i64 0, !dbg !15848
  %322 = load i32, i32* %add.ptr432, align 4, !dbg !15848
  %and433 = and i32 %322, 255, !dbg !15848
  %shl434 = shl i32 %and433, 24, !dbg !15848
  %323 = load i8*, i8** %misc, align 8, !dbg !15848
  %324 = bitcast i8* %323 to i32*, !dbg !15848
  %add.ptr435 = getelementptr i32, i32* %324, i64 0, !dbg !15848
  %325 = load i32, i32* %add.ptr435, align 4, !dbg !15848
  %and436 = and i32 %325, 65280, !dbg !15848
  %shl437 = shl i32 %and436, 8, !dbg !15848
  %or438 = or i32 %shl434, %shl437, !dbg !15848
  %326 = load i8*, i8** %misc, align 8, !dbg !15848
  %327 = bitcast i8* %326 to i32*, !dbg !15848
  %add.ptr439 = getelementptr i32, i32* %327, i64 0, !dbg !15848
  %328 = load i32, i32* %add.ptr439, align 4, !dbg !15848
  %and440 = and i32 %328, 16711680, !dbg !15848
  %shr441 = lshr i32 %and440, 8, !dbg !15848
  %or442 = or i32 %or438, %shr441, !dbg !15848
  %329 = load i8*, i8** %misc, align 8, !dbg !15848
  %330 = bitcast i8* %329 to i32*, !dbg !15848
  %add.ptr443 = getelementptr i32, i32* %330, i64 0, !dbg !15848
  %331 = load i32, i32* %add.ptr443, align 4, !dbg !15848
  %and444 = and i32 %331, -16777216, !dbg !15848
  %shr445 = lshr i32 %and444, 24, !dbg !15848
  %or446 = or i32 %or442, %shr445, !dbg !15848
  br label %cond.end450, !dbg !15848

cond.false447:                                    ; preds = %cond.end423
  %332 = load i8*, i8** %misc, align 8, !dbg !15848
  %333 = bitcast i8* %332 to i32*, !dbg !15848
  %add.ptr448 = getelementptr i32, i32* %333, i64 0, !dbg !15848
  %334 = load i32, i32* %add.ptr448, align 4, !dbg !15848
  %call449 = call i32 @__fswab32(i32 %334) #10, !dbg !15848
  br label %cond.end450, !dbg !15848

cond.end450:                                      ; preds = %cond.false447, %cond.true431
  %cond451 = phi i32 [ %or446, %cond.true431 ], [ %call449, %cond.false447 ], !dbg !15848
  %and452 = and i32 %cond451, -16777216, !dbg !15848
  %or453 = or i32 %and452, 16777215, !dbg !15848
  %and454 = and i32 %or453, 16711680, !dbg !15848
  %shr455 = lshr i32 %and454, 8, !dbg !15848
  %or456 = or i32 %or429, %shr455, !dbg !15848
  %335 = load i8*, i8** %misc, align 8, !dbg !15848
  %336 = bitcast i8* %335 to i32*, !dbg !15848
  %add.ptr457 = getelementptr i32, i32* %336, i64 0, !dbg !15848
  %337 = load i32, i32* %add.ptr457, align 4, !dbg !15848
  %338 = call i1 @llvm.is.constant.i32(i32 %337), !dbg !15848
  br i1 %338, label %cond.true458, label %cond.false474, !dbg !15848

cond.true458:                                     ; preds = %cond.end450
  %339 = load i8*, i8** %misc, align 8, !dbg !15848
  %340 = bitcast i8* %339 to i32*, !dbg !15848
  %add.ptr459 = getelementptr i32, i32* %340, i64 0, !dbg !15848
  %341 = load i32, i32* %add.ptr459, align 4, !dbg !15848
  %and460 = and i32 %341, 255, !dbg !15848
  %shl461 = shl i32 %and460, 24, !dbg !15848
  %342 = load i8*, i8** %misc, align 8, !dbg !15848
  %343 = bitcast i8* %342 to i32*, !dbg !15848
  %add.ptr462 = getelementptr i32, i32* %343, i64 0, !dbg !15848
  %344 = load i32, i32* %add.ptr462, align 4, !dbg !15848
  %and463 = and i32 %344, 65280, !dbg !15848
  %shl464 = shl i32 %and463, 8, !dbg !15848
  %or465 = or i32 %shl461, %shl464, !dbg !15848
  %345 = load i8*, i8** %misc, align 8, !dbg !15848
  %346 = bitcast i8* %345 to i32*, !dbg !15848
  %add.ptr466 = getelementptr i32, i32* %346, i64 0, !dbg !15848
  %347 = load i32, i32* %add.ptr466, align 4, !dbg !15848
  %and467 = and i32 %347, 16711680, !dbg !15848
  %shr468 = lshr i32 %and467, 8, !dbg !15848
  %or469 = or i32 %or465, %shr468, !dbg !15848
  %348 = load i8*, i8** %misc, align 8, !dbg !15848
  %349 = bitcast i8* %348 to i32*, !dbg !15848
  %add.ptr470 = getelementptr i32, i32* %349, i64 0, !dbg !15848
  %350 = load i32, i32* %add.ptr470, align 4, !dbg !15848
  %and471 = and i32 %350, -16777216, !dbg !15848
  %shr472 = lshr i32 %and471, 24, !dbg !15848
  %or473 = or i32 %or469, %shr472, !dbg !15848
  br label %cond.end477, !dbg !15848

cond.false474:                                    ; preds = %cond.end450
  %351 = load i8*, i8** %misc, align 8, !dbg !15848
  %352 = bitcast i8* %351 to i32*, !dbg !15848
  %add.ptr475 = getelementptr i32, i32* %352, i64 0, !dbg !15848
  %353 = load i32, i32* %add.ptr475, align 4, !dbg !15848
  %call476 = call i32 @__fswab32(i32 %353) #10, !dbg !15848
  br label %cond.end477, !dbg !15848

cond.end477:                                      ; preds = %cond.false474, %cond.true458
  %cond478 = phi i32 [ %or473, %cond.true458 ], [ %call476, %cond.false474 ], !dbg !15848
  %and479 = and i32 %cond478, -16777216, !dbg !15848
  %or480 = or i32 %and479, 16777215, !dbg !15848
  %and481 = and i32 %or480, -16777216, !dbg !15848
  %shr482 = lshr i32 %and481, 24, !dbg !15848
  %or483 = or i32 %or456, %shr482, !dbg !15848
  br label %cond.end510, !dbg !15848

cond.false484:                                    ; preds = %cond.end372
  %354 = load i8*, i8** %misc, align 8, !dbg !15848
  %355 = bitcast i8* %354 to i32*, !dbg !15848
  %add.ptr485 = getelementptr i32, i32* %355, i64 0, !dbg !15848
  %356 = load i32, i32* %add.ptr485, align 4, !dbg !15848
  %357 = call i1 @llvm.is.constant.i32(i32 %356), !dbg !15848
  br i1 %357, label %cond.true486, label %cond.false502, !dbg !15848

cond.true486:                                     ; preds = %cond.false484
  %358 = load i8*, i8** %misc, align 8, !dbg !15848
  %359 = bitcast i8* %358 to i32*, !dbg !15848
  %add.ptr487 = getelementptr i32, i32* %359, i64 0, !dbg !15848
  %360 = load i32, i32* %add.ptr487, align 4, !dbg !15848
  %and488 = and i32 %360, 255, !dbg !15848
  %shl489 = shl i32 %and488, 24, !dbg !15848
  %361 = load i8*, i8** %misc, align 8, !dbg !15848
  %362 = bitcast i8* %361 to i32*, !dbg !15848
  %add.ptr490 = getelementptr i32, i32* %362, i64 0, !dbg !15848
  %363 = load i32, i32* %add.ptr490, align 4, !dbg !15848
  %and491 = and i32 %363, 65280, !dbg !15848
  %shl492 = shl i32 %and491, 8, !dbg !15848
  %or493 = or i32 %shl489, %shl492, !dbg !15848
  %364 = load i8*, i8** %misc, align 8, !dbg !15848
  %365 = bitcast i8* %364 to i32*, !dbg !15848
  %add.ptr494 = getelementptr i32, i32* %365, i64 0, !dbg !15848
  %366 = load i32, i32* %add.ptr494, align 4, !dbg !15848
  %and495 = and i32 %366, 16711680, !dbg !15848
  %shr496 = lshr i32 %and495, 8, !dbg !15848
  %or497 = or i32 %or493, %shr496, !dbg !15848
  %367 = load i8*, i8** %misc, align 8, !dbg !15848
  %368 = bitcast i8* %367 to i32*, !dbg !15848
  %add.ptr498 = getelementptr i32, i32* %368, i64 0, !dbg !15848
  %369 = load i32, i32* %add.ptr498, align 4, !dbg !15848
  %and499 = and i32 %369, -16777216, !dbg !15848
  %shr500 = lshr i32 %and499, 24, !dbg !15848
  %or501 = or i32 %or497, %shr500, !dbg !15848
  br label %cond.end505, !dbg !15848

cond.false502:                                    ; preds = %cond.false484
  %370 = load i8*, i8** %misc, align 8, !dbg !15848
  %371 = bitcast i8* %370 to i32*, !dbg !15848
  %add.ptr503 = getelementptr i32, i32* %371, i64 0, !dbg !15848
  %372 = load i32, i32* %add.ptr503, align 4, !dbg !15848
  %call504 = call i32 @__fswab32(i32 %372) #10, !dbg !15848
  br label %cond.end505, !dbg !15848

cond.end505:                                      ; preds = %cond.false502, %cond.true486
  %cond506 = phi i32 [ %or501, %cond.true486 ], [ %call504, %cond.false502 ], !dbg !15848
  %and507 = and i32 %cond506, -16777216, !dbg !15848
  %or508 = or i32 %and507, 16777215, !dbg !15848
  %call509 = call i32 @__fswab32(i32 %or508) #10, !dbg !15848
  br label %cond.end510, !dbg !15848

cond.end510:                                      ; preds = %cond.end505, %cond.end477
  %cond511 = phi i32 [ %or483, %cond.end477 ], [ %call509, %cond.end505 ], !dbg !15848
  %373 = load i8*, i8** %misc, align 8, !dbg !15848
  %374 = bitcast i8* %373 to i32*, !dbg !15848
  %add.ptr512 = getelementptr i32, i32* %374, i64 0, !dbg !15848
  store i32 %cond511, i32* %add.ptr512, align 4, !dbg !15848
  br label %do.end513, !dbg !15848

do.end513:                                        ; preds = %cond.end510
  br label %do.body514, !dbg !15852

do.body514:                                       ; preds = %do.end513
  br label %do.body515, !dbg !15853

do.body515:                                       ; preds = %do.body514
  br label %do.end516, !dbg !15855

do.end516:                                        ; preds = %do.body515
  %375 = load i8*, i8** %misc, align 8, !dbg !15853
  %376 = bitcast i8* %375 to i32*, !dbg !15853
  %add.ptr517 = getelementptr i32, i32* %376, i64 1, !dbg !15853
  %377 = load i32, i32* %add.ptr517, align 4, !dbg !15853
  %378 = call i1 @llvm.is.constant.i32(i32 %377), !dbg !15853
  br i1 %378, label %cond.true518, label %cond.false534, !dbg !15853

cond.true518:                                     ; preds = %do.end516
  %379 = load i8*, i8** %misc, align 8, !dbg !15853
  %380 = bitcast i8* %379 to i32*, !dbg !15853
  %add.ptr519 = getelementptr i32, i32* %380, i64 1, !dbg !15853
  %381 = load i32, i32* %add.ptr519, align 4, !dbg !15853
  %and520 = and i32 %381, 255, !dbg !15853
  %shl521 = shl i32 %and520, 24, !dbg !15853
  %382 = load i8*, i8** %misc, align 8, !dbg !15853
  %383 = bitcast i8* %382 to i32*, !dbg !15853
  %add.ptr522 = getelementptr i32, i32* %383, i64 1, !dbg !15853
  %384 = load i32, i32* %add.ptr522, align 4, !dbg !15853
  %and523 = and i32 %384, 65280, !dbg !15853
  %shl524 = shl i32 %and523, 8, !dbg !15853
  %or525 = or i32 %shl521, %shl524, !dbg !15853
  %385 = load i8*, i8** %misc, align 8, !dbg !15853
  %386 = bitcast i8* %385 to i32*, !dbg !15853
  %add.ptr526 = getelementptr i32, i32* %386, i64 1, !dbg !15853
  %387 = load i32, i32* %add.ptr526, align 4, !dbg !15853
  %and527 = and i32 %387, 16711680, !dbg !15853
  %shr528 = lshr i32 %and527, 8, !dbg !15853
  %or529 = or i32 %or525, %shr528, !dbg !15853
  %388 = load i8*, i8** %misc, align 8, !dbg !15853
  %389 = bitcast i8* %388 to i32*, !dbg !15853
  %add.ptr530 = getelementptr i32, i32* %389, i64 1, !dbg !15853
  %390 = load i32, i32* %add.ptr530, align 4, !dbg !15853
  %and531 = and i32 %390, -16777216, !dbg !15853
  %shr532 = lshr i32 %and531, 24, !dbg !15853
  %or533 = or i32 %or529, %shr532, !dbg !15853
  br label %cond.end537, !dbg !15853

cond.false534:                                    ; preds = %do.end516
  %391 = load i8*, i8** %misc, align 8, !dbg !15853
  %392 = bitcast i8* %391 to i32*, !dbg !15853
  %add.ptr535 = getelementptr i32, i32* %392, i64 1, !dbg !15853
  %393 = load i32, i32* %add.ptr535, align 4, !dbg !15853
  %call536 = call i32 @__fswab32(i32 %393) #10, !dbg !15853
  br label %cond.end537, !dbg !15853

cond.end537:                                      ; preds = %cond.false534, %cond.true518
  %cond538 = phi i32 [ %or533, %cond.true518 ], [ %call536, %cond.false534 ], !dbg !15853
  %and539 = and i32 %cond538, -65536, !dbg !15853
  %or540 = or i32 %and539, 65535, !dbg !15853
  %394 = call i1 @llvm.is.constant.i32(i32 %or540), !dbg !15853
  br i1 %394, label %cond.true541, label %cond.false649, !dbg !15853

cond.true541:                                     ; preds = %cond.end537
  %395 = load i8*, i8** %misc, align 8, !dbg !15853
  %396 = bitcast i8* %395 to i32*, !dbg !15853
  %add.ptr542 = getelementptr i32, i32* %396, i64 1, !dbg !15853
  %397 = load i32, i32* %add.ptr542, align 4, !dbg !15853
  %398 = call i1 @llvm.is.constant.i32(i32 %397), !dbg !15853
  br i1 %398, label %cond.true543, label %cond.false559, !dbg !15853

cond.true543:                                     ; preds = %cond.true541
  %399 = load i8*, i8** %misc, align 8, !dbg !15853
  %400 = bitcast i8* %399 to i32*, !dbg !15853
  %add.ptr544 = getelementptr i32, i32* %400, i64 1, !dbg !15853
  %401 = load i32, i32* %add.ptr544, align 4, !dbg !15853
  %and545 = and i32 %401, 255, !dbg !15853
  %shl546 = shl i32 %and545, 24, !dbg !15853
  %402 = load i8*, i8** %misc, align 8, !dbg !15853
  %403 = bitcast i8* %402 to i32*, !dbg !15853
  %add.ptr547 = getelementptr i32, i32* %403, i64 1, !dbg !15853
  %404 = load i32, i32* %add.ptr547, align 4, !dbg !15853
  %and548 = and i32 %404, 65280, !dbg !15853
  %shl549 = shl i32 %and548, 8, !dbg !15853
  %or550 = or i32 %shl546, %shl549, !dbg !15853
  %405 = load i8*, i8** %misc, align 8, !dbg !15853
  %406 = bitcast i8* %405 to i32*, !dbg !15853
  %add.ptr551 = getelementptr i32, i32* %406, i64 1, !dbg !15853
  %407 = load i32, i32* %add.ptr551, align 4, !dbg !15853
  %and552 = and i32 %407, 16711680, !dbg !15853
  %shr553 = lshr i32 %and552, 8, !dbg !15853
  %or554 = or i32 %or550, %shr553, !dbg !15853
  %408 = load i8*, i8** %misc, align 8, !dbg !15853
  %409 = bitcast i8* %408 to i32*, !dbg !15853
  %add.ptr555 = getelementptr i32, i32* %409, i64 1, !dbg !15853
  %410 = load i32, i32* %add.ptr555, align 4, !dbg !15853
  %and556 = and i32 %410, -16777216, !dbg !15853
  %shr557 = lshr i32 %and556, 24, !dbg !15853
  %or558 = or i32 %or554, %shr557, !dbg !15853
  br label %cond.end562, !dbg !15853

cond.false559:                                    ; preds = %cond.true541
  %411 = load i8*, i8** %misc, align 8, !dbg !15853
  %412 = bitcast i8* %411 to i32*, !dbg !15853
  %add.ptr560 = getelementptr i32, i32* %412, i64 1, !dbg !15853
  %413 = load i32, i32* %add.ptr560, align 4, !dbg !15853
  %call561 = call i32 @__fswab32(i32 %413) #10, !dbg !15853
  br label %cond.end562, !dbg !15853

cond.end562:                                      ; preds = %cond.false559, %cond.true543
  %cond563 = phi i32 [ %or558, %cond.true543 ], [ %call561, %cond.false559 ], !dbg !15853
  %and564 = and i32 %cond563, -65536, !dbg !15853
  %or565 = or i32 %and564, 65535, !dbg !15853
  %and566 = and i32 %or565, 255, !dbg !15853
  %shl567 = shl i32 %and566, 24, !dbg !15853
  %414 = load i8*, i8** %misc, align 8, !dbg !15853
  %415 = bitcast i8* %414 to i32*, !dbg !15853
  %add.ptr568 = getelementptr i32, i32* %415, i64 1, !dbg !15853
  %416 = load i32, i32* %add.ptr568, align 4, !dbg !15853
  %417 = call i1 @llvm.is.constant.i32(i32 %416), !dbg !15853
  br i1 %417, label %cond.true569, label %cond.false585, !dbg !15853

cond.true569:                                     ; preds = %cond.end562
  %418 = load i8*, i8** %misc, align 8, !dbg !15853
  %419 = bitcast i8* %418 to i32*, !dbg !15853
  %add.ptr570 = getelementptr i32, i32* %419, i64 1, !dbg !15853
  %420 = load i32, i32* %add.ptr570, align 4, !dbg !15853
  %and571 = and i32 %420, 255, !dbg !15853
  %shl572 = shl i32 %and571, 24, !dbg !15853
  %421 = load i8*, i8** %misc, align 8, !dbg !15853
  %422 = bitcast i8* %421 to i32*, !dbg !15853
  %add.ptr573 = getelementptr i32, i32* %422, i64 1, !dbg !15853
  %423 = load i32, i32* %add.ptr573, align 4, !dbg !15853
  %and574 = and i32 %423, 65280, !dbg !15853
  %shl575 = shl i32 %and574, 8, !dbg !15853
  %or576 = or i32 %shl572, %shl575, !dbg !15853
  %424 = load i8*, i8** %misc, align 8, !dbg !15853
  %425 = bitcast i8* %424 to i32*, !dbg !15853
  %add.ptr577 = getelementptr i32, i32* %425, i64 1, !dbg !15853
  %426 = load i32, i32* %add.ptr577, align 4, !dbg !15853
  %and578 = and i32 %426, 16711680, !dbg !15853
  %shr579 = lshr i32 %and578, 8, !dbg !15853
  %or580 = or i32 %or576, %shr579, !dbg !15853
  %427 = load i8*, i8** %misc, align 8, !dbg !15853
  %428 = bitcast i8* %427 to i32*, !dbg !15853
  %add.ptr581 = getelementptr i32, i32* %428, i64 1, !dbg !15853
  %429 = load i32, i32* %add.ptr581, align 4, !dbg !15853
  %and582 = and i32 %429, -16777216, !dbg !15853
  %shr583 = lshr i32 %and582, 24, !dbg !15853
  %or584 = or i32 %or580, %shr583, !dbg !15853
  br label %cond.end588, !dbg !15853

cond.false585:                                    ; preds = %cond.end562
  %430 = load i8*, i8** %misc, align 8, !dbg !15853
  %431 = bitcast i8* %430 to i32*, !dbg !15853
  %add.ptr586 = getelementptr i32, i32* %431, i64 1, !dbg !15853
  %432 = load i32, i32* %add.ptr586, align 4, !dbg !15853
  %call587 = call i32 @__fswab32(i32 %432) #10, !dbg !15853
  br label %cond.end588, !dbg !15853

cond.end588:                                      ; preds = %cond.false585, %cond.true569
  %cond589 = phi i32 [ %or584, %cond.true569 ], [ %call587, %cond.false585 ], !dbg !15853
  %and590 = and i32 %cond589, -65536, !dbg !15853
  %or591 = or i32 %and590, 65535, !dbg !15853
  %and592 = and i32 %or591, 65280, !dbg !15853
  %shl593 = shl i32 %and592, 8, !dbg !15853
  %or594 = or i32 %shl567, %shl593, !dbg !15853
  %433 = load i8*, i8** %misc, align 8, !dbg !15853
  %434 = bitcast i8* %433 to i32*, !dbg !15853
  %add.ptr595 = getelementptr i32, i32* %434, i64 1, !dbg !15853
  %435 = load i32, i32* %add.ptr595, align 4, !dbg !15853
  %436 = call i1 @llvm.is.constant.i32(i32 %435), !dbg !15853
  br i1 %436, label %cond.true596, label %cond.false612, !dbg !15853

cond.true596:                                     ; preds = %cond.end588
  %437 = load i8*, i8** %misc, align 8, !dbg !15853
  %438 = bitcast i8* %437 to i32*, !dbg !15853
  %add.ptr597 = getelementptr i32, i32* %438, i64 1, !dbg !15853
  %439 = load i32, i32* %add.ptr597, align 4, !dbg !15853
  %and598 = and i32 %439, 255, !dbg !15853
  %shl599 = shl i32 %and598, 24, !dbg !15853
  %440 = load i8*, i8** %misc, align 8, !dbg !15853
  %441 = bitcast i8* %440 to i32*, !dbg !15853
  %add.ptr600 = getelementptr i32, i32* %441, i64 1, !dbg !15853
  %442 = load i32, i32* %add.ptr600, align 4, !dbg !15853
  %and601 = and i32 %442, 65280, !dbg !15853
  %shl602 = shl i32 %and601, 8, !dbg !15853
  %or603 = or i32 %shl599, %shl602, !dbg !15853
  %443 = load i8*, i8** %misc, align 8, !dbg !15853
  %444 = bitcast i8* %443 to i32*, !dbg !15853
  %add.ptr604 = getelementptr i32, i32* %444, i64 1, !dbg !15853
  %445 = load i32, i32* %add.ptr604, align 4, !dbg !15853
  %and605 = and i32 %445, 16711680, !dbg !15853
  %shr606 = lshr i32 %and605, 8, !dbg !15853
  %or607 = or i32 %or603, %shr606, !dbg !15853
  %446 = load i8*, i8** %misc, align 8, !dbg !15853
  %447 = bitcast i8* %446 to i32*, !dbg !15853
  %add.ptr608 = getelementptr i32, i32* %447, i64 1, !dbg !15853
  %448 = load i32, i32* %add.ptr608, align 4, !dbg !15853
  %and609 = and i32 %448, -16777216, !dbg !15853
  %shr610 = lshr i32 %and609, 24, !dbg !15853
  %or611 = or i32 %or607, %shr610, !dbg !15853
  br label %cond.end615, !dbg !15853

cond.false612:                                    ; preds = %cond.end588
  %449 = load i8*, i8** %misc, align 8, !dbg !15853
  %450 = bitcast i8* %449 to i32*, !dbg !15853
  %add.ptr613 = getelementptr i32, i32* %450, i64 1, !dbg !15853
  %451 = load i32, i32* %add.ptr613, align 4, !dbg !15853
  %call614 = call i32 @__fswab32(i32 %451) #10, !dbg !15853
  br label %cond.end615, !dbg !15853

cond.end615:                                      ; preds = %cond.false612, %cond.true596
  %cond616 = phi i32 [ %or611, %cond.true596 ], [ %call614, %cond.false612 ], !dbg !15853
  %and617 = and i32 %cond616, -65536, !dbg !15853
  %or618 = or i32 %and617, 65535, !dbg !15853
  %and619 = and i32 %or618, 16711680, !dbg !15853
  %shr620 = lshr i32 %and619, 8, !dbg !15853
  %or621 = or i32 %or594, %shr620, !dbg !15853
  %452 = load i8*, i8** %misc, align 8, !dbg !15853
  %453 = bitcast i8* %452 to i32*, !dbg !15853
  %add.ptr622 = getelementptr i32, i32* %453, i64 1, !dbg !15853
  %454 = load i32, i32* %add.ptr622, align 4, !dbg !15853
  %455 = call i1 @llvm.is.constant.i32(i32 %454), !dbg !15853
  br i1 %455, label %cond.true623, label %cond.false639, !dbg !15853

cond.true623:                                     ; preds = %cond.end615
  %456 = load i8*, i8** %misc, align 8, !dbg !15853
  %457 = bitcast i8* %456 to i32*, !dbg !15853
  %add.ptr624 = getelementptr i32, i32* %457, i64 1, !dbg !15853
  %458 = load i32, i32* %add.ptr624, align 4, !dbg !15853
  %and625 = and i32 %458, 255, !dbg !15853
  %shl626 = shl i32 %and625, 24, !dbg !15853
  %459 = load i8*, i8** %misc, align 8, !dbg !15853
  %460 = bitcast i8* %459 to i32*, !dbg !15853
  %add.ptr627 = getelementptr i32, i32* %460, i64 1, !dbg !15853
  %461 = load i32, i32* %add.ptr627, align 4, !dbg !15853
  %and628 = and i32 %461, 65280, !dbg !15853
  %shl629 = shl i32 %and628, 8, !dbg !15853
  %or630 = or i32 %shl626, %shl629, !dbg !15853
  %462 = load i8*, i8** %misc, align 8, !dbg !15853
  %463 = bitcast i8* %462 to i32*, !dbg !15853
  %add.ptr631 = getelementptr i32, i32* %463, i64 1, !dbg !15853
  %464 = load i32, i32* %add.ptr631, align 4, !dbg !15853
  %and632 = and i32 %464, 16711680, !dbg !15853
  %shr633 = lshr i32 %and632, 8, !dbg !15853
  %or634 = or i32 %or630, %shr633, !dbg !15853
  %465 = load i8*, i8** %misc, align 8, !dbg !15853
  %466 = bitcast i8* %465 to i32*, !dbg !15853
  %add.ptr635 = getelementptr i32, i32* %466, i64 1, !dbg !15853
  %467 = load i32, i32* %add.ptr635, align 4, !dbg !15853
  %and636 = and i32 %467, -16777216, !dbg !15853
  %shr637 = lshr i32 %and636, 24, !dbg !15853
  %or638 = or i32 %or634, %shr637, !dbg !15853
  br label %cond.end642, !dbg !15853

cond.false639:                                    ; preds = %cond.end615
  %468 = load i8*, i8** %misc, align 8, !dbg !15853
  %469 = bitcast i8* %468 to i32*, !dbg !15853
  %add.ptr640 = getelementptr i32, i32* %469, i64 1, !dbg !15853
  %470 = load i32, i32* %add.ptr640, align 4, !dbg !15853
  %call641 = call i32 @__fswab32(i32 %470) #10, !dbg !15853
  br label %cond.end642, !dbg !15853

cond.end642:                                      ; preds = %cond.false639, %cond.true623
  %cond643 = phi i32 [ %or638, %cond.true623 ], [ %call641, %cond.false639 ], !dbg !15853
  %and644 = and i32 %cond643, -65536, !dbg !15853
  %or645 = or i32 %and644, 65535, !dbg !15853
  %and646 = and i32 %or645, -16777216, !dbg !15853
  %shr647 = lshr i32 %and646, 24, !dbg !15853
  %or648 = or i32 %or621, %shr647, !dbg !15853
  br label %cond.end675, !dbg !15853

cond.false649:                                    ; preds = %cond.end537
  %471 = load i8*, i8** %misc, align 8, !dbg !15853
  %472 = bitcast i8* %471 to i32*, !dbg !15853
  %add.ptr650 = getelementptr i32, i32* %472, i64 1, !dbg !15853
  %473 = load i32, i32* %add.ptr650, align 4, !dbg !15853
  %474 = call i1 @llvm.is.constant.i32(i32 %473), !dbg !15853
  br i1 %474, label %cond.true651, label %cond.false667, !dbg !15853

cond.true651:                                     ; preds = %cond.false649
  %475 = load i8*, i8** %misc, align 8, !dbg !15853
  %476 = bitcast i8* %475 to i32*, !dbg !15853
  %add.ptr652 = getelementptr i32, i32* %476, i64 1, !dbg !15853
  %477 = load i32, i32* %add.ptr652, align 4, !dbg !15853
  %and653 = and i32 %477, 255, !dbg !15853
  %shl654 = shl i32 %and653, 24, !dbg !15853
  %478 = load i8*, i8** %misc, align 8, !dbg !15853
  %479 = bitcast i8* %478 to i32*, !dbg !15853
  %add.ptr655 = getelementptr i32, i32* %479, i64 1, !dbg !15853
  %480 = load i32, i32* %add.ptr655, align 4, !dbg !15853
  %and656 = and i32 %480, 65280, !dbg !15853
  %shl657 = shl i32 %and656, 8, !dbg !15853
  %or658 = or i32 %shl654, %shl657, !dbg !15853
  %481 = load i8*, i8** %misc, align 8, !dbg !15853
  %482 = bitcast i8* %481 to i32*, !dbg !15853
  %add.ptr659 = getelementptr i32, i32* %482, i64 1, !dbg !15853
  %483 = load i32, i32* %add.ptr659, align 4, !dbg !15853
  %and660 = and i32 %483, 16711680, !dbg !15853
  %shr661 = lshr i32 %and660, 8, !dbg !15853
  %or662 = or i32 %or658, %shr661, !dbg !15853
  %484 = load i8*, i8** %misc, align 8, !dbg !15853
  %485 = bitcast i8* %484 to i32*, !dbg !15853
  %add.ptr663 = getelementptr i32, i32* %485, i64 1, !dbg !15853
  %486 = load i32, i32* %add.ptr663, align 4, !dbg !15853
  %and664 = and i32 %486, -16777216, !dbg !15853
  %shr665 = lshr i32 %and664, 24, !dbg !15853
  %or666 = or i32 %or662, %shr665, !dbg !15853
  br label %cond.end670, !dbg !15853

cond.false667:                                    ; preds = %cond.false649
  %487 = load i8*, i8** %misc, align 8, !dbg !15853
  %488 = bitcast i8* %487 to i32*, !dbg !15853
  %add.ptr668 = getelementptr i32, i32* %488, i64 1, !dbg !15853
  %489 = load i32, i32* %add.ptr668, align 4, !dbg !15853
  %call669 = call i32 @__fswab32(i32 %489) #10, !dbg !15853
  br label %cond.end670, !dbg !15853

cond.end670:                                      ; preds = %cond.false667, %cond.true651
  %cond671 = phi i32 [ %or666, %cond.true651 ], [ %call669, %cond.false667 ], !dbg !15853
  %and672 = and i32 %cond671, -65536, !dbg !15853
  %or673 = or i32 %and672, 65535, !dbg !15853
  %call674 = call i32 @__fswab32(i32 %or673) #10, !dbg !15853
  br label %cond.end675, !dbg !15853

cond.end675:                                      ; preds = %cond.end670, %cond.end642
  %cond676 = phi i32 [ %or648, %cond.end642 ], [ %call674, %cond.end670 ], !dbg !15853
  %490 = load i8*, i8** %misc, align 8, !dbg !15853
  %491 = bitcast i8* %490 to i32*, !dbg !15853
  %add.ptr677 = getelementptr i32, i32* %491, i64 1, !dbg !15853
  store i32 %cond676, i32* %add.ptr677, align 4, !dbg !15853
  br label %do.end678, !dbg !15853

do.end678:                                        ; preds = %cond.end675
  %492 = load %struct.mlx5_flow_spec*, %struct.mlx5_flow_spec** %spec, align 8, !dbg !15857
  %match_criteria_enable = getelementptr inbounds %struct.mlx5_flow_spec, %struct.mlx5_flow_spec* %492, i32 0, i32 0, !dbg !15858
  store i8 2, i8* %match_criteria_enable, align 4, !dbg !15859
  %type = getelementptr inbounds %struct.mlx5_flow_destination, %struct.mlx5_flow_destination* %dest, i32 0, i32 0, !dbg !15860
  store i32 0, i32* %type, align 8, !dbg !15861
  %493 = load i16, i16* %vport.addr, align 2, !dbg !15862
  %494 = getelementptr inbounds %struct.mlx5_flow_destination, %struct.mlx5_flow_destination* %dest, i32 0, i32 1, !dbg !15863
  %vport679 = bitcast %union.anon.146* %494 to %struct.anon.147*, !dbg !15863
  %num = getelementptr inbounds %struct.anon.147, %struct.anon.147* %vport679, i32 0, i32 0, !dbg !15864
  store i16 %493, i16* %num, align 8, !dbg !15865
  %action = getelementptr inbounds %struct.mlx5_flow_act, %struct.mlx5_flow_act* %flow_act, i32 0, i32 0, !dbg !15866
  store i32 4, i32* %action, align 8, !dbg !15867
  %495 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !15868
  %fdb_table = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %495, i32 0, i32 2, !dbg !15869
  %496 = getelementptr inbounds %struct.mlx5_eswitch_fdb, %struct.mlx5_eswitch_fdb* %fdb_table, i32 0, i32 0, !dbg !15870
  %offloads = bitcast %union.anon.154* %496 to %struct.offloads_fdb*, !dbg !15870
  %slow_fdb = getelementptr inbounds %struct.offloads_fdb, %struct.offloads_fdb* %offloads, i32 0, i32 1, !dbg !15871
  %497 = load %struct.mlx5_flow_table*, %struct.mlx5_flow_table** %slow_fdb, align 8, !dbg !15871
  %498 = load %struct.mlx5_flow_spec*, %struct.mlx5_flow_spec** %spec, align 8, !dbg !15872
  %call680 = call %struct.mlx5_flow_handle* @mlx5_add_flow_rules(%struct.mlx5_flow_table* %497, %struct.mlx5_flow_spec* %498, %struct.mlx5_flow_act* %flow_act, %struct.mlx5_flow_destination* %dest, i32 1) #8, !dbg !15873
  store %struct.mlx5_flow_handle* %call680, %struct.mlx5_flow_handle** %flow_rule, align 8, !dbg !15874
  %499 = load %struct.mlx5_flow_handle*, %struct.mlx5_flow_handle** %flow_rule, align 8, !dbg !15875
  %500 = bitcast %struct.mlx5_flow_handle* %499 to i8*, !dbg !15875
  %call681 = call zeroext i1 @IS_ERR(i8* %500) #8, !dbg !15877
  br i1 %call681, label %if.then682, label %if.end684, !dbg !15878

if.then682:                                       ; preds = %do.end678
  %501 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !15879
  %dev = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %501, i32 0, i32 0, !dbg !15879
  %502 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !15879
  %device = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %502, i32 0, i32 0, !dbg !15879
  %503 = load %struct.device*, %struct.device** %device, align 8, !dbg !15879
  %504 = load %struct.mlx5_flow_handle*, %struct.mlx5_flow_handle** %flow_rule, align 8, !dbg !15879
  %505 = bitcast %struct.mlx5_flow_handle* %504 to i8*, !dbg !15879
  %call683 = call i64 @PTR_ERR(i8* %505) #8, !dbg !15879
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %503, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str, i64 0, i64 0), i64 %call683) #9, !dbg !15879
  br label %if.end684, !dbg !15879

if.end684:                                        ; preds = %if.then682, %do.end678
  br label %out, !dbg !15880

out:                                              ; preds = %if.end684, %if.then
  call void @llvm.dbg.label(metadata !15881), !dbg !15882
  %506 = load %struct.mlx5_flow_spec*, %struct.mlx5_flow_spec** %spec, align 8, !dbg !15883
  %507 = bitcast %struct.mlx5_flow_spec* %506 to i8*, !dbg !15883
  call void @kvfree(i8* %507) #8, !dbg !15884
  %508 = load %struct.mlx5_flow_handle*, %struct.mlx5_flow_handle** %flow_rule, align 8, !dbg !15885
  ret %struct.mlx5_flow_handle* %508, !dbg !15886
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kvzalloc(i64 %size, i32 %flags) #0 !dbg !15887 {
entry:
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !15890, metadata !DIExpression()), !dbg !15891
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !15892, metadata !DIExpression()), !dbg !15893
  %0 = load i64, i64* %size.addr, align 8, !dbg !15894
  %1 = load i32, i32* %flags.addr, align 4, !dbg !15895
  %or = or i32 %1, 256, !dbg !15896
  %call = call i8* @kvmalloc(i64 %0, i32 %or) #8, !dbg !15897
  ret i8* %call, !dbg !15898
}

; Function Attrs: cold noredzone
declare dso_local void @_dev_warn(%struct.device*, i8*, ...) #6

; Function Attrs: noredzone
declare dso_local void @kvfree(i8*) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @mlx5_eswitch_del_send_to_vport_rule(%struct.mlx5_flow_handle* %rule) #0 !dbg !15899 {
entry:
  %rule.addr = alloca %struct.mlx5_flow_handle*, align 8
  store %struct.mlx5_flow_handle* %rule, %struct.mlx5_flow_handle** %rule.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_flow_handle** %rule.addr, metadata !15902, metadata !DIExpression()), !dbg !15903
  %0 = load %struct.mlx5_flow_handle*, %struct.mlx5_flow_handle** %rule.addr, align 8, !dbg !15904
  call void @mlx5_del_flow_rules(%struct.mlx5_flow_handle* %0) #8, !dbg !15905
  ret void, !dbg !15906
}

; Function Attrs: noredzone
declare dso_local void @mlx5_del_flow_rules(%struct.mlx5_flow_handle*) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.mlx5_flow_handle* @esw_add_restore_rule(%struct.mlx5_eswitch* %esw, i32 %tag) #0 !dbg !15907 {
entry:
  %retval = alloca %struct.mlx5_flow_handle*, align 8
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  %tag.addr = alloca i32, align 4
  %flow_act = alloca %struct.mlx5_flow_act, align 8
  %ft = alloca %struct.mlx5_flow_table*, align 8
  %flow_context = alloca %struct.mlx5_flow_context*, align 8
  %flow_rule = alloca %struct.mlx5_flow_handle*, align 8
  %dest = alloca %struct.mlx5_flow_destination, align 8
  %spec = alloca %struct.mlx5_flow_spec*, align 8
  %misc = alloca i8*, align 8
  %_v = alloca i32, align 4
  %_v170 = alloca i32, align 4
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !15910, metadata !DIExpression()), !dbg !15911
  store i32 %tag, i32* %tag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %tag.addr, metadata !15912, metadata !DIExpression()), !dbg !15913
  call void @llvm.dbg.declare(metadata %struct.mlx5_flow_act* %flow_act, metadata !15914, metadata !DIExpression()), !dbg !15915
  %0 = bitcast %struct.mlx5_flow_act* %flow_act to i8*, !dbg !15915
  call void @llvm.memset.p0i8.i64(i8* align 8 %0, i8 0, i64 56, i1 false), !dbg !15915
  %1 = bitcast i8* %0 to %struct.mlx5_flow_act*, !dbg !15915
  %2 = getelementptr inbounds %struct.mlx5_flow_act, %struct.mlx5_flow_act* %1, i32 0, i32 4, !dbg !15915
  store i32 1, i32* %2, align 8, !dbg !15915
  call void @llvm.dbg.declare(metadata %struct.mlx5_flow_table** %ft, metadata !15916, metadata !DIExpression()), !dbg !15917
  %3 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !15918
  %offloads = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %3, i32 0, i32 13, !dbg !15919
  %ft_offloads_restore = getelementptr inbounds %struct.mlx5_esw_offload, %struct.mlx5_esw_offload* %offloads, i32 0, i32 0, !dbg !15920
  %4 = load %struct.mlx5_flow_table*, %struct.mlx5_flow_table** %ft_offloads_restore, align 8, !dbg !15920
  store %struct.mlx5_flow_table* %4, %struct.mlx5_flow_table** %ft, align 8, !dbg !15917
  call void @llvm.dbg.declare(metadata %struct.mlx5_flow_context** %flow_context, metadata !15921, metadata !DIExpression()), !dbg !15923
  call void @llvm.dbg.declare(metadata %struct.mlx5_flow_handle** %flow_rule, metadata !15924, metadata !DIExpression()), !dbg !15925
  call void @llvm.dbg.declare(metadata %struct.mlx5_flow_destination* %dest, metadata !15926, metadata !DIExpression()), !dbg !15927
  call void @llvm.dbg.declare(metadata %struct.mlx5_flow_spec** %spec, metadata !15928, metadata !DIExpression()), !dbg !15929
  call void @llvm.dbg.declare(metadata i8** %misc, metadata !15930, metadata !DIExpression()), !dbg !15931
  %5 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !15932
  %call = call zeroext i1 @mlx5_eswitch_reg_c1_loopback_supported(%struct.mlx5_eswitch* %5) #8, !dbg !15934
  br i1 %call, label %if.end, label %if.then, !dbg !15935

if.then:                                          ; preds = %entry
  %call1 = call i8* @ERR_PTR(i64 -95) #8, !dbg !15936
  %6 = bitcast i8* %call1 to %struct.mlx5_flow_handle*, !dbg !15936
  store %struct.mlx5_flow_handle* %6, %struct.mlx5_flow_handle** %retval, align 8, !dbg !15937
  br label %return, !dbg !15937

if.end:                                           ; preds = %entry
  %call2 = call i8* @kzalloc(i64 1040, i32 3264) #8, !dbg !15938
  %7 = bitcast i8* %call2 to %struct.mlx5_flow_spec*, !dbg !15938
  store %struct.mlx5_flow_spec* %7, %struct.mlx5_flow_spec** %spec, align 8, !dbg !15939
  %8 = load %struct.mlx5_flow_spec*, %struct.mlx5_flow_spec** %spec, align 8, !dbg !15940
  %tobool = icmp ne %struct.mlx5_flow_spec* %8, null, !dbg !15940
  br i1 %tobool, label %if.end5, label %if.then3, !dbg !15942

if.then3:                                         ; preds = %if.end
  %call4 = call i8* @ERR_PTR(i64 -12) #8, !dbg !15943
  %9 = bitcast i8* %call4 to %struct.mlx5_flow_handle*, !dbg !15943
  store %struct.mlx5_flow_handle* %9, %struct.mlx5_flow_handle** %retval, align 8, !dbg !15944
  br label %return, !dbg !15944

if.end5:                                          ; preds = %if.end
  %10 = load %struct.mlx5_flow_spec*, %struct.mlx5_flow_spec** %spec, align 8, !dbg !15945
  %match_criteria = getelementptr inbounds %struct.mlx5_flow_spec, %struct.mlx5_flow_spec* %10, i32 0, i32 1, !dbg !15945
  %arraydecay = getelementptr inbounds [128 x i32], [128 x i32]* %match_criteria, i64 0, i64 0, !dbg !15945
  %11 = bitcast i32* %arraydecay to i8*, !dbg !15945
  %add.ptr = getelementptr i8, i8* %11, i64 192, !dbg !15945
  store i8* %add.ptr, i8** %misc, align 8, !dbg !15946
  br label %do.body, !dbg !15947

do.body:                                          ; preds = %if.end5
  call void @llvm.dbg.declare(metadata i32* %_v, metadata !15948, metadata !DIExpression()), !dbg !15950
  store i32 65535, i32* %_v, align 4, !dbg !15950
  br label %do.body6, !dbg !15950

do.body6:                                         ; preds = %do.body
  br label %do.end, !dbg !15951

do.end:                                           ; preds = %do.body6
  %12 = load i8*, i8** %misc, align 8, !dbg !15950
  %13 = bitcast i8* %12 to i32*, !dbg !15950
  %add.ptr7 = getelementptr i32, i32* %13, i64 11, !dbg !15950
  %14 = load i32, i32* %add.ptr7, align 4, !dbg !15950
  %15 = call i1 @llvm.is.constant.i32(i32 %14), !dbg !15950
  br i1 %15, label %cond.true, label %cond.false, !dbg !15950

cond.true:                                        ; preds = %do.end
  %16 = load i8*, i8** %misc, align 8, !dbg !15950
  %17 = bitcast i8* %16 to i32*, !dbg !15950
  %add.ptr8 = getelementptr i32, i32* %17, i64 11, !dbg !15950
  %18 = load i32, i32* %add.ptr8, align 4, !dbg !15950
  %and = and i32 %18, 255, !dbg !15950
  %shl = shl i32 %and, 24, !dbg !15950
  %19 = load i8*, i8** %misc, align 8, !dbg !15950
  %20 = bitcast i8* %19 to i32*, !dbg !15950
  %add.ptr9 = getelementptr i32, i32* %20, i64 11, !dbg !15950
  %21 = load i32, i32* %add.ptr9, align 4, !dbg !15950
  %and10 = and i32 %21, 65280, !dbg !15950
  %shl11 = shl i32 %and10, 8, !dbg !15950
  %or = or i32 %shl, %shl11, !dbg !15950
  %22 = load i8*, i8** %misc, align 8, !dbg !15950
  %23 = bitcast i8* %22 to i32*, !dbg !15950
  %add.ptr12 = getelementptr i32, i32* %23, i64 11, !dbg !15950
  %24 = load i32, i32* %add.ptr12, align 4, !dbg !15950
  %and13 = and i32 %24, 16711680, !dbg !15950
  %shr = lshr i32 %and13, 8, !dbg !15950
  %or14 = or i32 %or, %shr, !dbg !15950
  %25 = load i8*, i8** %misc, align 8, !dbg !15950
  %26 = bitcast i8* %25 to i32*, !dbg !15950
  %add.ptr15 = getelementptr i32, i32* %26, i64 11, !dbg !15950
  %27 = load i32, i32* %add.ptr15, align 4, !dbg !15950
  %and16 = and i32 %27, -16777216, !dbg !15950
  %shr17 = lshr i32 %and16, 24, !dbg !15950
  %or18 = or i32 %or14, %shr17, !dbg !15950
  br label %cond.end, !dbg !15950

cond.false:                                       ; preds = %do.end
  %28 = load i8*, i8** %misc, align 8, !dbg !15950
  %29 = bitcast i8* %28 to i32*, !dbg !15950
  %add.ptr19 = getelementptr i32, i32* %29, i64 11, !dbg !15950
  %30 = load i32, i32* %add.ptr19, align 4, !dbg !15950
  %call20 = call i32 @__fswab32(i32 %30) #10, !dbg !15950
  br label %cond.end, !dbg !15950

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %or18, %cond.true ], [ %call20, %cond.false ], !dbg !15950
  %and21 = and i32 %cond, 0, !dbg !15950
  %31 = load i32, i32* %_v, align 4, !dbg !15950
  %shl22 = shl i32 %31, 0, !dbg !15950
  %or23 = or i32 %and21, %shl22, !dbg !15950
  %32 = call i1 @llvm.is.constant.i32(i32 %or23), !dbg !15950
  br i1 %32, label %cond.true24, label %cond.false136, !dbg !15950

cond.true24:                                      ; preds = %cond.end
  %33 = load i8*, i8** %misc, align 8, !dbg !15950
  %34 = bitcast i8* %33 to i32*, !dbg !15950
  %add.ptr25 = getelementptr i32, i32* %34, i64 11, !dbg !15950
  %35 = load i32, i32* %add.ptr25, align 4, !dbg !15950
  %36 = call i1 @llvm.is.constant.i32(i32 %35), !dbg !15950
  br i1 %36, label %cond.true26, label %cond.false42, !dbg !15950

cond.true26:                                      ; preds = %cond.true24
  %37 = load i8*, i8** %misc, align 8, !dbg !15950
  %38 = bitcast i8* %37 to i32*, !dbg !15950
  %add.ptr27 = getelementptr i32, i32* %38, i64 11, !dbg !15950
  %39 = load i32, i32* %add.ptr27, align 4, !dbg !15950
  %and28 = and i32 %39, 255, !dbg !15950
  %shl29 = shl i32 %and28, 24, !dbg !15950
  %40 = load i8*, i8** %misc, align 8, !dbg !15950
  %41 = bitcast i8* %40 to i32*, !dbg !15950
  %add.ptr30 = getelementptr i32, i32* %41, i64 11, !dbg !15950
  %42 = load i32, i32* %add.ptr30, align 4, !dbg !15950
  %and31 = and i32 %42, 65280, !dbg !15950
  %shl32 = shl i32 %and31, 8, !dbg !15950
  %or33 = or i32 %shl29, %shl32, !dbg !15950
  %43 = load i8*, i8** %misc, align 8, !dbg !15950
  %44 = bitcast i8* %43 to i32*, !dbg !15950
  %add.ptr34 = getelementptr i32, i32* %44, i64 11, !dbg !15950
  %45 = load i32, i32* %add.ptr34, align 4, !dbg !15950
  %and35 = and i32 %45, 16711680, !dbg !15950
  %shr36 = lshr i32 %and35, 8, !dbg !15950
  %or37 = or i32 %or33, %shr36, !dbg !15950
  %46 = load i8*, i8** %misc, align 8, !dbg !15950
  %47 = bitcast i8* %46 to i32*, !dbg !15950
  %add.ptr38 = getelementptr i32, i32* %47, i64 11, !dbg !15950
  %48 = load i32, i32* %add.ptr38, align 4, !dbg !15950
  %and39 = and i32 %48, -16777216, !dbg !15950
  %shr40 = lshr i32 %and39, 24, !dbg !15950
  %or41 = or i32 %or37, %shr40, !dbg !15950
  br label %cond.end45, !dbg !15950

cond.false42:                                     ; preds = %cond.true24
  %49 = load i8*, i8** %misc, align 8, !dbg !15950
  %50 = bitcast i8* %49 to i32*, !dbg !15950
  %add.ptr43 = getelementptr i32, i32* %50, i64 11, !dbg !15950
  %51 = load i32, i32* %add.ptr43, align 4, !dbg !15950
  %call44 = call i32 @__fswab32(i32 %51) #10, !dbg !15950
  br label %cond.end45, !dbg !15950

cond.end45:                                       ; preds = %cond.false42, %cond.true26
  %cond46 = phi i32 [ %or41, %cond.true26 ], [ %call44, %cond.false42 ], !dbg !15950
  %and47 = and i32 %cond46, 0, !dbg !15950
  %52 = load i32, i32* %_v, align 4, !dbg !15950
  %shl48 = shl i32 %52, 0, !dbg !15950
  %or49 = or i32 %and47, %shl48, !dbg !15950
  %and50 = and i32 %or49, 255, !dbg !15950
  %shl51 = shl i32 %and50, 24, !dbg !15950
  %53 = load i8*, i8** %misc, align 8, !dbg !15950
  %54 = bitcast i8* %53 to i32*, !dbg !15950
  %add.ptr52 = getelementptr i32, i32* %54, i64 11, !dbg !15950
  %55 = load i32, i32* %add.ptr52, align 4, !dbg !15950
  %56 = call i1 @llvm.is.constant.i32(i32 %55), !dbg !15950
  br i1 %56, label %cond.true53, label %cond.false69, !dbg !15950

cond.true53:                                      ; preds = %cond.end45
  %57 = load i8*, i8** %misc, align 8, !dbg !15950
  %58 = bitcast i8* %57 to i32*, !dbg !15950
  %add.ptr54 = getelementptr i32, i32* %58, i64 11, !dbg !15950
  %59 = load i32, i32* %add.ptr54, align 4, !dbg !15950
  %and55 = and i32 %59, 255, !dbg !15950
  %shl56 = shl i32 %and55, 24, !dbg !15950
  %60 = load i8*, i8** %misc, align 8, !dbg !15950
  %61 = bitcast i8* %60 to i32*, !dbg !15950
  %add.ptr57 = getelementptr i32, i32* %61, i64 11, !dbg !15950
  %62 = load i32, i32* %add.ptr57, align 4, !dbg !15950
  %and58 = and i32 %62, 65280, !dbg !15950
  %shl59 = shl i32 %and58, 8, !dbg !15950
  %or60 = or i32 %shl56, %shl59, !dbg !15950
  %63 = load i8*, i8** %misc, align 8, !dbg !15950
  %64 = bitcast i8* %63 to i32*, !dbg !15950
  %add.ptr61 = getelementptr i32, i32* %64, i64 11, !dbg !15950
  %65 = load i32, i32* %add.ptr61, align 4, !dbg !15950
  %and62 = and i32 %65, 16711680, !dbg !15950
  %shr63 = lshr i32 %and62, 8, !dbg !15950
  %or64 = or i32 %or60, %shr63, !dbg !15950
  %66 = load i8*, i8** %misc, align 8, !dbg !15950
  %67 = bitcast i8* %66 to i32*, !dbg !15950
  %add.ptr65 = getelementptr i32, i32* %67, i64 11, !dbg !15950
  %68 = load i32, i32* %add.ptr65, align 4, !dbg !15950
  %and66 = and i32 %68, -16777216, !dbg !15950
  %shr67 = lshr i32 %and66, 24, !dbg !15950
  %or68 = or i32 %or64, %shr67, !dbg !15950
  br label %cond.end72, !dbg !15950

cond.false69:                                     ; preds = %cond.end45
  %69 = load i8*, i8** %misc, align 8, !dbg !15950
  %70 = bitcast i8* %69 to i32*, !dbg !15950
  %add.ptr70 = getelementptr i32, i32* %70, i64 11, !dbg !15950
  %71 = load i32, i32* %add.ptr70, align 4, !dbg !15950
  %call71 = call i32 @__fswab32(i32 %71) #10, !dbg !15950
  br label %cond.end72, !dbg !15950

cond.end72:                                       ; preds = %cond.false69, %cond.true53
  %cond73 = phi i32 [ %or68, %cond.true53 ], [ %call71, %cond.false69 ], !dbg !15950
  %and74 = and i32 %cond73, 0, !dbg !15950
  %72 = load i32, i32* %_v, align 4, !dbg !15950
  %shl75 = shl i32 %72, 0, !dbg !15950
  %or76 = or i32 %and74, %shl75, !dbg !15950
  %and77 = and i32 %or76, 65280, !dbg !15950
  %shl78 = shl i32 %and77, 8, !dbg !15950
  %or79 = or i32 %shl51, %shl78, !dbg !15950
  %73 = load i8*, i8** %misc, align 8, !dbg !15950
  %74 = bitcast i8* %73 to i32*, !dbg !15950
  %add.ptr80 = getelementptr i32, i32* %74, i64 11, !dbg !15950
  %75 = load i32, i32* %add.ptr80, align 4, !dbg !15950
  %76 = call i1 @llvm.is.constant.i32(i32 %75), !dbg !15950
  br i1 %76, label %cond.true81, label %cond.false97, !dbg !15950

cond.true81:                                      ; preds = %cond.end72
  %77 = load i8*, i8** %misc, align 8, !dbg !15950
  %78 = bitcast i8* %77 to i32*, !dbg !15950
  %add.ptr82 = getelementptr i32, i32* %78, i64 11, !dbg !15950
  %79 = load i32, i32* %add.ptr82, align 4, !dbg !15950
  %and83 = and i32 %79, 255, !dbg !15950
  %shl84 = shl i32 %and83, 24, !dbg !15950
  %80 = load i8*, i8** %misc, align 8, !dbg !15950
  %81 = bitcast i8* %80 to i32*, !dbg !15950
  %add.ptr85 = getelementptr i32, i32* %81, i64 11, !dbg !15950
  %82 = load i32, i32* %add.ptr85, align 4, !dbg !15950
  %and86 = and i32 %82, 65280, !dbg !15950
  %shl87 = shl i32 %and86, 8, !dbg !15950
  %or88 = or i32 %shl84, %shl87, !dbg !15950
  %83 = load i8*, i8** %misc, align 8, !dbg !15950
  %84 = bitcast i8* %83 to i32*, !dbg !15950
  %add.ptr89 = getelementptr i32, i32* %84, i64 11, !dbg !15950
  %85 = load i32, i32* %add.ptr89, align 4, !dbg !15950
  %and90 = and i32 %85, 16711680, !dbg !15950
  %shr91 = lshr i32 %and90, 8, !dbg !15950
  %or92 = or i32 %or88, %shr91, !dbg !15950
  %86 = load i8*, i8** %misc, align 8, !dbg !15950
  %87 = bitcast i8* %86 to i32*, !dbg !15950
  %add.ptr93 = getelementptr i32, i32* %87, i64 11, !dbg !15950
  %88 = load i32, i32* %add.ptr93, align 4, !dbg !15950
  %and94 = and i32 %88, -16777216, !dbg !15950
  %shr95 = lshr i32 %and94, 24, !dbg !15950
  %or96 = or i32 %or92, %shr95, !dbg !15950
  br label %cond.end100, !dbg !15950

cond.false97:                                     ; preds = %cond.end72
  %89 = load i8*, i8** %misc, align 8, !dbg !15950
  %90 = bitcast i8* %89 to i32*, !dbg !15950
  %add.ptr98 = getelementptr i32, i32* %90, i64 11, !dbg !15950
  %91 = load i32, i32* %add.ptr98, align 4, !dbg !15950
  %call99 = call i32 @__fswab32(i32 %91) #10, !dbg !15950
  br label %cond.end100, !dbg !15950

cond.end100:                                      ; preds = %cond.false97, %cond.true81
  %cond101 = phi i32 [ %or96, %cond.true81 ], [ %call99, %cond.false97 ], !dbg !15950
  %and102 = and i32 %cond101, 0, !dbg !15950
  %92 = load i32, i32* %_v, align 4, !dbg !15950
  %shl103 = shl i32 %92, 0, !dbg !15950
  %or104 = or i32 %and102, %shl103, !dbg !15950
  %and105 = and i32 %or104, 16711680, !dbg !15950
  %shr106 = lshr i32 %and105, 8, !dbg !15950
  %or107 = or i32 %or79, %shr106, !dbg !15950
  %93 = load i8*, i8** %misc, align 8, !dbg !15950
  %94 = bitcast i8* %93 to i32*, !dbg !15950
  %add.ptr108 = getelementptr i32, i32* %94, i64 11, !dbg !15950
  %95 = load i32, i32* %add.ptr108, align 4, !dbg !15950
  %96 = call i1 @llvm.is.constant.i32(i32 %95), !dbg !15950
  br i1 %96, label %cond.true109, label %cond.false125, !dbg !15950

cond.true109:                                     ; preds = %cond.end100
  %97 = load i8*, i8** %misc, align 8, !dbg !15950
  %98 = bitcast i8* %97 to i32*, !dbg !15950
  %add.ptr110 = getelementptr i32, i32* %98, i64 11, !dbg !15950
  %99 = load i32, i32* %add.ptr110, align 4, !dbg !15950
  %and111 = and i32 %99, 255, !dbg !15950
  %shl112 = shl i32 %and111, 24, !dbg !15950
  %100 = load i8*, i8** %misc, align 8, !dbg !15950
  %101 = bitcast i8* %100 to i32*, !dbg !15950
  %add.ptr113 = getelementptr i32, i32* %101, i64 11, !dbg !15950
  %102 = load i32, i32* %add.ptr113, align 4, !dbg !15950
  %and114 = and i32 %102, 65280, !dbg !15950
  %shl115 = shl i32 %and114, 8, !dbg !15950
  %or116 = or i32 %shl112, %shl115, !dbg !15950
  %103 = load i8*, i8** %misc, align 8, !dbg !15950
  %104 = bitcast i8* %103 to i32*, !dbg !15950
  %add.ptr117 = getelementptr i32, i32* %104, i64 11, !dbg !15950
  %105 = load i32, i32* %add.ptr117, align 4, !dbg !15950
  %and118 = and i32 %105, 16711680, !dbg !15950
  %shr119 = lshr i32 %and118, 8, !dbg !15950
  %or120 = or i32 %or116, %shr119, !dbg !15950
  %106 = load i8*, i8** %misc, align 8, !dbg !15950
  %107 = bitcast i8* %106 to i32*, !dbg !15950
  %add.ptr121 = getelementptr i32, i32* %107, i64 11, !dbg !15950
  %108 = load i32, i32* %add.ptr121, align 4, !dbg !15950
  %and122 = and i32 %108, -16777216, !dbg !15950
  %shr123 = lshr i32 %and122, 24, !dbg !15950
  %or124 = or i32 %or120, %shr123, !dbg !15950
  br label %cond.end128, !dbg !15950

cond.false125:                                    ; preds = %cond.end100
  %109 = load i8*, i8** %misc, align 8, !dbg !15950
  %110 = bitcast i8* %109 to i32*, !dbg !15950
  %add.ptr126 = getelementptr i32, i32* %110, i64 11, !dbg !15950
  %111 = load i32, i32* %add.ptr126, align 4, !dbg !15950
  %call127 = call i32 @__fswab32(i32 %111) #10, !dbg !15950
  br label %cond.end128, !dbg !15950

cond.end128:                                      ; preds = %cond.false125, %cond.true109
  %cond129 = phi i32 [ %or124, %cond.true109 ], [ %call127, %cond.false125 ], !dbg !15950
  %and130 = and i32 %cond129, 0, !dbg !15950
  %112 = load i32, i32* %_v, align 4, !dbg !15950
  %shl131 = shl i32 %112, 0, !dbg !15950
  %or132 = or i32 %and130, %shl131, !dbg !15950
  %and133 = and i32 %or132, -16777216, !dbg !15950
  %shr134 = lshr i32 %and133, 24, !dbg !15950
  %or135 = or i32 %or107, %shr134, !dbg !15950
  br label %cond.end163, !dbg !15950

cond.false136:                                    ; preds = %cond.end
  %113 = load i8*, i8** %misc, align 8, !dbg !15950
  %114 = bitcast i8* %113 to i32*, !dbg !15950
  %add.ptr137 = getelementptr i32, i32* %114, i64 11, !dbg !15950
  %115 = load i32, i32* %add.ptr137, align 4, !dbg !15950
  %116 = call i1 @llvm.is.constant.i32(i32 %115), !dbg !15950
  br i1 %116, label %cond.true138, label %cond.false154, !dbg !15950

cond.true138:                                     ; preds = %cond.false136
  %117 = load i8*, i8** %misc, align 8, !dbg !15950
  %118 = bitcast i8* %117 to i32*, !dbg !15950
  %add.ptr139 = getelementptr i32, i32* %118, i64 11, !dbg !15950
  %119 = load i32, i32* %add.ptr139, align 4, !dbg !15950
  %and140 = and i32 %119, 255, !dbg !15950
  %shl141 = shl i32 %and140, 24, !dbg !15950
  %120 = load i8*, i8** %misc, align 8, !dbg !15950
  %121 = bitcast i8* %120 to i32*, !dbg !15950
  %add.ptr142 = getelementptr i32, i32* %121, i64 11, !dbg !15950
  %122 = load i32, i32* %add.ptr142, align 4, !dbg !15950
  %and143 = and i32 %122, 65280, !dbg !15950
  %shl144 = shl i32 %and143, 8, !dbg !15950
  %or145 = or i32 %shl141, %shl144, !dbg !15950
  %123 = load i8*, i8** %misc, align 8, !dbg !15950
  %124 = bitcast i8* %123 to i32*, !dbg !15950
  %add.ptr146 = getelementptr i32, i32* %124, i64 11, !dbg !15950
  %125 = load i32, i32* %add.ptr146, align 4, !dbg !15950
  %and147 = and i32 %125, 16711680, !dbg !15950
  %shr148 = lshr i32 %and147, 8, !dbg !15950
  %or149 = or i32 %or145, %shr148, !dbg !15950
  %126 = load i8*, i8** %misc, align 8, !dbg !15950
  %127 = bitcast i8* %126 to i32*, !dbg !15950
  %add.ptr150 = getelementptr i32, i32* %127, i64 11, !dbg !15950
  %128 = load i32, i32* %add.ptr150, align 4, !dbg !15950
  %and151 = and i32 %128, -16777216, !dbg !15950
  %shr152 = lshr i32 %and151, 24, !dbg !15950
  %or153 = or i32 %or149, %shr152, !dbg !15950
  br label %cond.end157, !dbg !15950

cond.false154:                                    ; preds = %cond.false136
  %129 = load i8*, i8** %misc, align 8, !dbg !15950
  %130 = bitcast i8* %129 to i32*, !dbg !15950
  %add.ptr155 = getelementptr i32, i32* %130, i64 11, !dbg !15950
  %131 = load i32, i32* %add.ptr155, align 4, !dbg !15950
  %call156 = call i32 @__fswab32(i32 %131) #10, !dbg !15950
  br label %cond.end157, !dbg !15950

cond.end157:                                      ; preds = %cond.false154, %cond.true138
  %cond158 = phi i32 [ %or153, %cond.true138 ], [ %call156, %cond.false154 ], !dbg !15950
  %and159 = and i32 %cond158, 0, !dbg !15950
  %132 = load i32, i32* %_v, align 4, !dbg !15950
  %shl160 = shl i32 %132, 0, !dbg !15950
  %or161 = or i32 %and159, %shl160, !dbg !15950
  %call162 = call i32 @__fswab32(i32 %or161) #10, !dbg !15950
  br label %cond.end163, !dbg !15950

cond.end163:                                      ; preds = %cond.end157, %cond.end128
  %cond164 = phi i32 [ %or135, %cond.end128 ], [ %call162, %cond.end157 ], !dbg !15950
  %133 = load i8*, i8** %misc, align 8, !dbg !15950
  %134 = bitcast i8* %133 to i32*, !dbg !15950
  %add.ptr165 = getelementptr i32, i32* %134, i64 11, !dbg !15950
  store i32 %cond164, i32* %add.ptr165, align 4, !dbg !15950
  br label %do.end166, !dbg !15950

do.end166:                                        ; preds = %cond.end163
  %135 = load %struct.mlx5_flow_spec*, %struct.mlx5_flow_spec** %spec, align 8, !dbg !15953
  %match_value = getelementptr inbounds %struct.mlx5_flow_spec, %struct.mlx5_flow_spec* %135, i32 0, i32 2, !dbg !15953
  %arraydecay167 = getelementptr inbounds [128 x i32], [128 x i32]* %match_value, i64 0, i64 0, !dbg !15953
  %136 = bitcast i32* %arraydecay167 to i8*, !dbg !15953
  %add.ptr168 = getelementptr i8, i8* %136, i64 192, !dbg !15953
  store i8* %add.ptr168, i8** %misc, align 8, !dbg !15954
  br label %do.body169, !dbg !15955

do.body169:                                       ; preds = %do.end166
  call void @llvm.dbg.declare(metadata i32* %_v170, metadata !15956, metadata !DIExpression()), !dbg !15958
  %137 = load i32, i32* %tag.addr, align 4, !dbg !15958
  store i32 %137, i32* %_v170, align 4, !dbg !15958
  br label %do.body171, !dbg !15958

do.body171:                                       ; preds = %do.body169
  br label %do.end172, !dbg !15959

do.end172:                                        ; preds = %do.body171
  %138 = load i8*, i8** %misc, align 8, !dbg !15958
  %139 = bitcast i8* %138 to i32*, !dbg !15958
  %add.ptr173 = getelementptr i32, i32* %139, i64 11, !dbg !15958
  %140 = load i32, i32* %add.ptr173, align 4, !dbg !15958
  %141 = call i1 @llvm.is.constant.i32(i32 %140), !dbg !15958
  br i1 %141, label %cond.true174, label %cond.false190, !dbg !15958

cond.true174:                                     ; preds = %do.end172
  %142 = load i8*, i8** %misc, align 8, !dbg !15958
  %143 = bitcast i8* %142 to i32*, !dbg !15958
  %add.ptr175 = getelementptr i32, i32* %143, i64 11, !dbg !15958
  %144 = load i32, i32* %add.ptr175, align 4, !dbg !15958
  %and176 = and i32 %144, 255, !dbg !15958
  %shl177 = shl i32 %and176, 24, !dbg !15958
  %145 = load i8*, i8** %misc, align 8, !dbg !15958
  %146 = bitcast i8* %145 to i32*, !dbg !15958
  %add.ptr178 = getelementptr i32, i32* %146, i64 11, !dbg !15958
  %147 = load i32, i32* %add.ptr178, align 4, !dbg !15958
  %and179 = and i32 %147, 65280, !dbg !15958
  %shl180 = shl i32 %and179, 8, !dbg !15958
  %or181 = or i32 %shl177, %shl180, !dbg !15958
  %148 = load i8*, i8** %misc, align 8, !dbg !15958
  %149 = bitcast i8* %148 to i32*, !dbg !15958
  %add.ptr182 = getelementptr i32, i32* %149, i64 11, !dbg !15958
  %150 = load i32, i32* %add.ptr182, align 4, !dbg !15958
  %and183 = and i32 %150, 16711680, !dbg !15958
  %shr184 = lshr i32 %and183, 8, !dbg !15958
  %or185 = or i32 %or181, %shr184, !dbg !15958
  %151 = load i8*, i8** %misc, align 8, !dbg !15958
  %152 = bitcast i8* %151 to i32*, !dbg !15958
  %add.ptr186 = getelementptr i32, i32* %152, i64 11, !dbg !15958
  %153 = load i32, i32* %add.ptr186, align 4, !dbg !15958
  %and187 = and i32 %153, -16777216, !dbg !15958
  %shr188 = lshr i32 %and187, 24, !dbg !15958
  %or189 = or i32 %or185, %shr188, !dbg !15958
  br label %cond.end193, !dbg !15958

cond.false190:                                    ; preds = %do.end172
  %154 = load i8*, i8** %misc, align 8, !dbg !15958
  %155 = bitcast i8* %154 to i32*, !dbg !15958
  %add.ptr191 = getelementptr i32, i32* %155, i64 11, !dbg !15958
  %156 = load i32, i32* %add.ptr191, align 4, !dbg !15958
  %call192 = call i32 @__fswab32(i32 %156) #10, !dbg !15958
  br label %cond.end193, !dbg !15958

cond.end193:                                      ; preds = %cond.false190, %cond.true174
  %cond194 = phi i32 [ %or189, %cond.true174 ], [ %call192, %cond.false190 ], !dbg !15958
  %and195 = and i32 %cond194, 0, !dbg !15958
  %157 = load i32, i32* %_v170, align 4, !dbg !15958
  %shl196 = shl i32 %157, 0, !dbg !15958
  %or197 = or i32 %and195, %shl196, !dbg !15958
  %158 = call i1 @llvm.is.constant.i32(i32 %or197), !dbg !15958
  br i1 %158, label %cond.true198, label %cond.false310, !dbg !15958

cond.true198:                                     ; preds = %cond.end193
  %159 = load i8*, i8** %misc, align 8, !dbg !15958
  %160 = bitcast i8* %159 to i32*, !dbg !15958
  %add.ptr199 = getelementptr i32, i32* %160, i64 11, !dbg !15958
  %161 = load i32, i32* %add.ptr199, align 4, !dbg !15958
  %162 = call i1 @llvm.is.constant.i32(i32 %161), !dbg !15958
  br i1 %162, label %cond.true200, label %cond.false216, !dbg !15958

cond.true200:                                     ; preds = %cond.true198
  %163 = load i8*, i8** %misc, align 8, !dbg !15958
  %164 = bitcast i8* %163 to i32*, !dbg !15958
  %add.ptr201 = getelementptr i32, i32* %164, i64 11, !dbg !15958
  %165 = load i32, i32* %add.ptr201, align 4, !dbg !15958
  %and202 = and i32 %165, 255, !dbg !15958
  %shl203 = shl i32 %and202, 24, !dbg !15958
  %166 = load i8*, i8** %misc, align 8, !dbg !15958
  %167 = bitcast i8* %166 to i32*, !dbg !15958
  %add.ptr204 = getelementptr i32, i32* %167, i64 11, !dbg !15958
  %168 = load i32, i32* %add.ptr204, align 4, !dbg !15958
  %and205 = and i32 %168, 65280, !dbg !15958
  %shl206 = shl i32 %and205, 8, !dbg !15958
  %or207 = or i32 %shl203, %shl206, !dbg !15958
  %169 = load i8*, i8** %misc, align 8, !dbg !15958
  %170 = bitcast i8* %169 to i32*, !dbg !15958
  %add.ptr208 = getelementptr i32, i32* %170, i64 11, !dbg !15958
  %171 = load i32, i32* %add.ptr208, align 4, !dbg !15958
  %and209 = and i32 %171, 16711680, !dbg !15958
  %shr210 = lshr i32 %and209, 8, !dbg !15958
  %or211 = or i32 %or207, %shr210, !dbg !15958
  %172 = load i8*, i8** %misc, align 8, !dbg !15958
  %173 = bitcast i8* %172 to i32*, !dbg !15958
  %add.ptr212 = getelementptr i32, i32* %173, i64 11, !dbg !15958
  %174 = load i32, i32* %add.ptr212, align 4, !dbg !15958
  %and213 = and i32 %174, -16777216, !dbg !15958
  %shr214 = lshr i32 %and213, 24, !dbg !15958
  %or215 = or i32 %or211, %shr214, !dbg !15958
  br label %cond.end219, !dbg !15958

cond.false216:                                    ; preds = %cond.true198
  %175 = load i8*, i8** %misc, align 8, !dbg !15958
  %176 = bitcast i8* %175 to i32*, !dbg !15958
  %add.ptr217 = getelementptr i32, i32* %176, i64 11, !dbg !15958
  %177 = load i32, i32* %add.ptr217, align 4, !dbg !15958
  %call218 = call i32 @__fswab32(i32 %177) #10, !dbg !15958
  br label %cond.end219, !dbg !15958

cond.end219:                                      ; preds = %cond.false216, %cond.true200
  %cond220 = phi i32 [ %or215, %cond.true200 ], [ %call218, %cond.false216 ], !dbg !15958
  %and221 = and i32 %cond220, 0, !dbg !15958
  %178 = load i32, i32* %_v170, align 4, !dbg !15958
  %shl222 = shl i32 %178, 0, !dbg !15958
  %or223 = or i32 %and221, %shl222, !dbg !15958
  %and224 = and i32 %or223, 255, !dbg !15958
  %shl225 = shl i32 %and224, 24, !dbg !15958
  %179 = load i8*, i8** %misc, align 8, !dbg !15958
  %180 = bitcast i8* %179 to i32*, !dbg !15958
  %add.ptr226 = getelementptr i32, i32* %180, i64 11, !dbg !15958
  %181 = load i32, i32* %add.ptr226, align 4, !dbg !15958
  %182 = call i1 @llvm.is.constant.i32(i32 %181), !dbg !15958
  br i1 %182, label %cond.true227, label %cond.false243, !dbg !15958

cond.true227:                                     ; preds = %cond.end219
  %183 = load i8*, i8** %misc, align 8, !dbg !15958
  %184 = bitcast i8* %183 to i32*, !dbg !15958
  %add.ptr228 = getelementptr i32, i32* %184, i64 11, !dbg !15958
  %185 = load i32, i32* %add.ptr228, align 4, !dbg !15958
  %and229 = and i32 %185, 255, !dbg !15958
  %shl230 = shl i32 %and229, 24, !dbg !15958
  %186 = load i8*, i8** %misc, align 8, !dbg !15958
  %187 = bitcast i8* %186 to i32*, !dbg !15958
  %add.ptr231 = getelementptr i32, i32* %187, i64 11, !dbg !15958
  %188 = load i32, i32* %add.ptr231, align 4, !dbg !15958
  %and232 = and i32 %188, 65280, !dbg !15958
  %shl233 = shl i32 %and232, 8, !dbg !15958
  %or234 = or i32 %shl230, %shl233, !dbg !15958
  %189 = load i8*, i8** %misc, align 8, !dbg !15958
  %190 = bitcast i8* %189 to i32*, !dbg !15958
  %add.ptr235 = getelementptr i32, i32* %190, i64 11, !dbg !15958
  %191 = load i32, i32* %add.ptr235, align 4, !dbg !15958
  %and236 = and i32 %191, 16711680, !dbg !15958
  %shr237 = lshr i32 %and236, 8, !dbg !15958
  %or238 = or i32 %or234, %shr237, !dbg !15958
  %192 = load i8*, i8** %misc, align 8, !dbg !15958
  %193 = bitcast i8* %192 to i32*, !dbg !15958
  %add.ptr239 = getelementptr i32, i32* %193, i64 11, !dbg !15958
  %194 = load i32, i32* %add.ptr239, align 4, !dbg !15958
  %and240 = and i32 %194, -16777216, !dbg !15958
  %shr241 = lshr i32 %and240, 24, !dbg !15958
  %or242 = or i32 %or238, %shr241, !dbg !15958
  br label %cond.end246, !dbg !15958

cond.false243:                                    ; preds = %cond.end219
  %195 = load i8*, i8** %misc, align 8, !dbg !15958
  %196 = bitcast i8* %195 to i32*, !dbg !15958
  %add.ptr244 = getelementptr i32, i32* %196, i64 11, !dbg !15958
  %197 = load i32, i32* %add.ptr244, align 4, !dbg !15958
  %call245 = call i32 @__fswab32(i32 %197) #10, !dbg !15958
  br label %cond.end246, !dbg !15958

cond.end246:                                      ; preds = %cond.false243, %cond.true227
  %cond247 = phi i32 [ %or242, %cond.true227 ], [ %call245, %cond.false243 ], !dbg !15958
  %and248 = and i32 %cond247, 0, !dbg !15958
  %198 = load i32, i32* %_v170, align 4, !dbg !15958
  %shl249 = shl i32 %198, 0, !dbg !15958
  %or250 = or i32 %and248, %shl249, !dbg !15958
  %and251 = and i32 %or250, 65280, !dbg !15958
  %shl252 = shl i32 %and251, 8, !dbg !15958
  %or253 = or i32 %shl225, %shl252, !dbg !15958
  %199 = load i8*, i8** %misc, align 8, !dbg !15958
  %200 = bitcast i8* %199 to i32*, !dbg !15958
  %add.ptr254 = getelementptr i32, i32* %200, i64 11, !dbg !15958
  %201 = load i32, i32* %add.ptr254, align 4, !dbg !15958
  %202 = call i1 @llvm.is.constant.i32(i32 %201), !dbg !15958
  br i1 %202, label %cond.true255, label %cond.false271, !dbg !15958

cond.true255:                                     ; preds = %cond.end246
  %203 = load i8*, i8** %misc, align 8, !dbg !15958
  %204 = bitcast i8* %203 to i32*, !dbg !15958
  %add.ptr256 = getelementptr i32, i32* %204, i64 11, !dbg !15958
  %205 = load i32, i32* %add.ptr256, align 4, !dbg !15958
  %and257 = and i32 %205, 255, !dbg !15958
  %shl258 = shl i32 %and257, 24, !dbg !15958
  %206 = load i8*, i8** %misc, align 8, !dbg !15958
  %207 = bitcast i8* %206 to i32*, !dbg !15958
  %add.ptr259 = getelementptr i32, i32* %207, i64 11, !dbg !15958
  %208 = load i32, i32* %add.ptr259, align 4, !dbg !15958
  %and260 = and i32 %208, 65280, !dbg !15958
  %shl261 = shl i32 %and260, 8, !dbg !15958
  %or262 = or i32 %shl258, %shl261, !dbg !15958
  %209 = load i8*, i8** %misc, align 8, !dbg !15958
  %210 = bitcast i8* %209 to i32*, !dbg !15958
  %add.ptr263 = getelementptr i32, i32* %210, i64 11, !dbg !15958
  %211 = load i32, i32* %add.ptr263, align 4, !dbg !15958
  %and264 = and i32 %211, 16711680, !dbg !15958
  %shr265 = lshr i32 %and264, 8, !dbg !15958
  %or266 = or i32 %or262, %shr265, !dbg !15958
  %212 = load i8*, i8** %misc, align 8, !dbg !15958
  %213 = bitcast i8* %212 to i32*, !dbg !15958
  %add.ptr267 = getelementptr i32, i32* %213, i64 11, !dbg !15958
  %214 = load i32, i32* %add.ptr267, align 4, !dbg !15958
  %and268 = and i32 %214, -16777216, !dbg !15958
  %shr269 = lshr i32 %and268, 24, !dbg !15958
  %or270 = or i32 %or266, %shr269, !dbg !15958
  br label %cond.end274, !dbg !15958

cond.false271:                                    ; preds = %cond.end246
  %215 = load i8*, i8** %misc, align 8, !dbg !15958
  %216 = bitcast i8* %215 to i32*, !dbg !15958
  %add.ptr272 = getelementptr i32, i32* %216, i64 11, !dbg !15958
  %217 = load i32, i32* %add.ptr272, align 4, !dbg !15958
  %call273 = call i32 @__fswab32(i32 %217) #10, !dbg !15958
  br label %cond.end274, !dbg !15958

cond.end274:                                      ; preds = %cond.false271, %cond.true255
  %cond275 = phi i32 [ %or270, %cond.true255 ], [ %call273, %cond.false271 ], !dbg !15958
  %and276 = and i32 %cond275, 0, !dbg !15958
  %218 = load i32, i32* %_v170, align 4, !dbg !15958
  %shl277 = shl i32 %218, 0, !dbg !15958
  %or278 = or i32 %and276, %shl277, !dbg !15958
  %and279 = and i32 %or278, 16711680, !dbg !15958
  %shr280 = lshr i32 %and279, 8, !dbg !15958
  %or281 = or i32 %or253, %shr280, !dbg !15958
  %219 = load i8*, i8** %misc, align 8, !dbg !15958
  %220 = bitcast i8* %219 to i32*, !dbg !15958
  %add.ptr282 = getelementptr i32, i32* %220, i64 11, !dbg !15958
  %221 = load i32, i32* %add.ptr282, align 4, !dbg !15958
  %222 = call i1 @llvm.is.constant.i32(i32 %221), !dbg !15958
  br i1 %222, label %cond.true283, label %cond.false299, !dbg !15958

cond.true283:                                     ; preds = %cond.end274
  %223 = load i8*, i8** %misc, align 8, !dbg !15958
  %224 = bitcast i8* %223 to i32*, !dbg !15958
  %add.ptr284 = getelementptr i32, i32* %224, i64 11, !dbg !15958
  %225 = load i32, i32* %add.ptr284, align 4, !dbg !15958
  %and285 = and i32 %225, 255, !dbg !15958
  %shl286 = shl i32 %and285, 24, !dbg !15958
  %226 = load i8*, i8** %misc, align 8, !dbg !15958
  %227 = bitcast i8* %226 to i32*, !dbg !15958
  %add.ptr287 = getelementptr i32, i32* %227, i64 11, !dbg !15958
  %228 = load i32, i32* %add.ptr287, align 4, !dbg !15958
  %and288 = and i32 %228, 65280, !dbg !15958
  %shl289 = shl i32 %and288, 8, !dbg !15958
  %or290 = or i32 %shl286, %shl289, !dbg !15958
  %229 = load i8*, i8** %misc, align 8, !dbg !15958
  %230 = bitcast i8* %229 to i32*, !dbg !15958
  %add.ptr291 = getelementptr i32, i32* %230, i64 11, !dbg !15958
  %231 = load i32, i32* %add.ptr291, align 4, !dbg !15958
  %and292 = and i32 %231, 16711680, !dbg !15958
  %shr293 = lshr i32 %and292, 8, !dbg !15958
  %or294 = or i32 %or290, %shr293, !dbg !15958
  %232 = load i8*, i8** %misc, align 8, !dbg !15958
  %233 = bitcast i8* %232 to i32*, !dbg !15958
  %add.ptr295 = getelementptr i32, i32* %233, i64 11, !dbg !15958
  %234 = load i32, i32* %add.ptr295, align 4, !dbg !15958
  %and296 = and i32 %234, -16777216, !dbg !15958
  %shr297 = lshr i32 %and296, 24, !dbg !15958
  %or298 = or i32 %or294, %shr297, !dbg !15958
  br label %cond.end302, !dbg !15958

cond.false299:                                    ; preds = %cond.end274
  %235 = load i8*, i8** %misc, align 8, !dbg !15958
  %236 = bitcast i8* %235 to i32*, !dbg !15958
  %add.ptr300 = getelementptr i32, i32* %236, i64 11, !dbg !15958
  %237 = load i32, i32* %add.ptr300, align 4, !dbg !15958
  %call301 = call i32 @__fswab32(i32 %237) #10, !dbg !15958
  br label %cond.end302, !dbg !15958

cond.end302:                                      ; preds = %cond.false299, %cond.true283
  %cond303 = phi i32 [ %or298, %cond.true283 ], [ %call301, %cond.false299 ], !dbg !15958
  %and304 = and i32 %cond303, 0, !dbg !15958
  %238 = load i32, i32* %_v170, align 4, !dbg !15958
  %shl305 = shl i32 %238, 0, !dbg !15958
  %or306 = or i32 %and304, %shl305, !dbg !15958
  %and307 = and i32 %or306, -16777216, !dbg !15958
  %shr308 = lshr i32 %and307, 24, !dbg !15958
  %or309 = or i32 %or281, %shr308, !dbg !15958
  br label %cond.end337, !dbg !15958

cond.false310:                                    ; preds = %cond.end193
  %239 = load i8*, i8** %misc, align 8, !dbg !15958
  %240 = bitcast i8* %239 to i32*, !dbg !15958
  %add.ptr311 = getelementptr i32, i32* %240, i64 11, !dbg !15958
  %241 = load i32, i32* %add.ptr311, align 4, !dbg !15958
  %242 = call i1 @llvm.is.constant.i32(i32 %241), !dbg !15958
  br i1 %242, label %cond.true312, label %cond.false328, !dbg !15958

cond.true312:                                     ; preds = %cond.false310
  %243 = load i8*, i8** %misc, align 8, !dbg !15958
  %244 = bitcast i8* %243 to i32*, !dbg !15958
  %add.ptr313 = getelementptr i32, i32* %244, i64 11, !dbg !15958
  %245 = load i32, i32* %add.ptr313, align 4, !dbg !15958
  %and314 = and i32 %245, 255, !dbg !15958
  %shl315 = shl i32 %and314, 24, !dbg !15958
  %246 = load i8*, i8** %misc, align 8, !dbg !15958
  %247 = bitcast i8* %246 to i32*, !dbg !15958
  %add.ptr316 = getelementptr i32, i32* %247, i64 11, !dbg !15958
  %248 = load i32, i32* %add.ptr316, align 4, !dbg !15958
  %and317 = and i32 %248, 65280, !dbg !15958
  %shl318 = shl i32 %and317, 8, !dbg !15958
  %or319 = or i32 %shl315, %shl318, !dbg !15958
  %249 = load i8*, i8** %misc, align 8, !dbg !15958
  %250 = bitcast i8* %249 to i32*, !dbg !15958
  %add.ptr320 = getelementptr i32, i32* %250, i64 11, !dbg !15958
  %251 = load i32, i32* %add.ptr320, align 4, !dbg !15958
  %and321 = and i32 %251, 16711680, !dbg !15958
  %shr322 = lshr i32 %and321, 8, !dbg !15958
  %or323 = or i32 %or319, %shr322, !dbg !15958
  %252 = load i8*, i8** %misc, align 8, !dbg !15958
  %253 = bitcast i8* %252 to i32*, !dbg !15958
  %add.ptr324 = getelementptr i32, i32* %253, i64 11, !dbg !15958
  %254 = load i32, i32* %add.ptr324, align 4, !dbg !15958
  %and325 = and i32 %254, -16777216, !dbg !15958
  %shr326 = lshr i32 %and325, 24, !dbg !15958
  %or327 = or i32 %or323, %shr326, !dbg !15958
  br label %cond.end331, !dbg !15958

cond.false328:                                    ; preds = %cond.false310
  %255 = load i8*, i8** %misc, align 8, !dbg !15958
  %256 = bitcast i8* %255 to i32*, !dbg !15958
  %add.ptr329 = getelementptr i32, i32* %256, i64 11, !dbg !15958
  %257 = load i32, i32* %add.ptr329, align 4, !dbg !15958
  %call330 = call i32 @__fswab32(i32 %257) #10, !dbg !15958
  br label %cond.end331, !dbg !15958

cond.end331:                                      ; preds = %cond.false328, %cond.true312
  %cond332 = phi i32 [ %or327, %cond.true312 ], [ %call330, %cond.false328 ], !dbg !15958
  %and333 = and i32 %cond332, 0, !dbg !15958
  %258 = load i32, i32* %_v170, align 4, !dbg !15958
  %shl334 = shl i32 %258, 0, !dbg !15958
  %or335 = or i32 %and333, %shl334, !dbg !15958
  %call336 = call i32 @__fswab32(i32 %or335) #10, !dbg !15958
  br label %cond.end337, !dbg !15958

cond.end337:                                      ; preds = %cond.end331, %cond.end302
  %cond338 = phi i32 [ %or309, %cond.end302 ], [ %call336, %cond.end331 ], !dbg !15958
  %259 = load i8*, i8** %misc, align 8, !dbg !15958
  %260 = bitcast i8* %259 to i32*, !dbg !15958
  %add.ptr339 = getelementptr i32, i32* %260, i64 11, !dbg !15958
  store i32 %cond338, i32* %add.ptr339, align 4, !dbg !15958
  br label %do.end340, !dbg !15958

do.end340:                                        ; preds = %cond.end337
  %261 = load %struct.mlx5_flow_spec*, %struct.mlx5_flow_spec** %spec, align 8, !dbg !15961
  %match_criteria_enable = getelementptr inbounds %struct.mlx5_flow_spec, %struct.mlx5_flow_spec* %261, i32 0, i32 0, !dbg !15962
  store i8 8, i8* %match_criteria_enable, align 4, !dbg !15963
  %action = getelementptr inbounds %struct.mlx5_flow_act, %struct.mlx5_flow_act* %flow_act, i32 0, i32 0, !dbg !15964
  store i32 68, i32* %action, align 8, !dbg !15965
  %262 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !15966
  %offloads341 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %262, i32 0, i32 13, !dbg !15967
  %restore_copy_hdr_id = getelementptr inbounds %struct.mlx5_esw_offload, %struct.mlx5_esw_offload* %offloads341, i32 0, i32 2, !dbg !15968
  %263 = load %struct.mlx5_modify_hdr*, %struct.mlx5_modify_hdr** %restore_copy_hdr_id, align 8, !dbg !15968
  %modify_hdr = getelementptr inbounds %struct.mlx5_flow_act, %struct.mlx5_flow_act* %flow_act, i32 0, i32 1, !dbg !15969
  store %struct.mlx5_modify_hdr* %263, %struct.mlx5_modify_hdr** %modify_hdr, align 8, !dbg !15970
  %264 = load %struct.mlx5_flow_spec*, %struct.mlx5_flow_spec** %spec, align 8, !dbg !15971
  %flow_context342 = getelementptr inbounds %struct.mlx5_flow_spec, %struct.mlx5_flow_spec* %264, i32 0, i32 3, !dbg !15972
  store %struct.mlx5_flow_context* %flow_context342, %struct.mlx5_flow_context** %flow_context, align 8, !dbg !15973
  %265 = load %struct.mlx5_flow_context*, %struct.mlx5_flow_context** %flow_context, align 8, !dbg !15974
  %flags = getelementptr inbounds %struct.mlx5_flow_context, %struct.mlx5_flow_context* %265, i32 0, i32 0, !dbg !15975
  %266 = load i32, i32* %flags, align 4, !dbg !15976
  %or343 = or i32 %266, 1, !dbg !15976
  store i32 %or343, i32* %flags, align 4, !dbg !15976
  %267 = load i32, i32* %tag.addr, align 4, !dbg !15977
  %268 = load %struct.mlx5_flow_context*, %struct.mlx5_flow_context** %flow_context, align 8, !dbg !15978
  %flow_tag = getelementptr inbounds %struct.mlx5_flow_context, %struct.mlx5_flow_context* %268, i32 0, i32 1, !dbg !15979
  store i32 %267, i32* %flow_tag, align 4, !dbg !15980
  %type = getelementptr inbounds %struct.mlx5_flow_destination, %struct.mlx5_flow_destination* %dest, i32 0, i32 0, !dbg !15981
  store i32 1, i32* %type, align 8, !dbg !15982
  %269 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !15983
  %offloads344 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %269, i32 0, i32 13, !dbg !15984
  %ft_offloads = getelementptr inbounds %struct.mlx5_esw_offload, %struct.mlx5_esw_offload* %offloads344, i32 0, i32 3, !dbg !15985
  %270 = load %struct.mlx5_flow_table*, %struct.mlx5_flow_table** %ft_offloads, align 8, !dbg !15985
  %271 = getelementptr inbounds %struct.mlx5_flow_destination, %struct.mlx5_flow_destination* %dest, i32 0, i32 1, !dbg !15986
  %ft345 = bitcast %union.anon.146* %271 to %struct.mlx5_flow_table**, !dbg !15986
  store %struct.mlx5_flow_table* %270, %struct.mlx5_flow_table** %ft345, align 8, !dbg !15987
  %272 = load %struct.mlx5_flow_table*, %struct.mlx5_flow_table** %ft, align 8, !dbg !15988
  %273 = load %struct.mlx5_flow_spec*, %struct.mlx5_flow_spec** %spec, align 8, !dbg !15989
  %call346 = call %struct.mlx5_flow_handle* @mlx5_add_flow_rules(%struct.mlx5_flow_table* %272, %struct.mlx5_flow_spec* %273, %struct.mlx5_flow_act* %flow_act, %struct.mlx5_flow_destination* %dest, i32 1) #8, !dbg !15990
  store %struct.mlx5_flow_handle* %call346, %struct.mlx5_flow_handle** %flow_rule, align 8, !dbg !15991
  %274 = load %struct.mlx5_flow_spec*, %struct.mlx5_flow_spec** %spec, align 8, !dbg !15992
  %275 = bitcast %struct.mlx5_flow_spec* %274 to i8*, !dbg !15992
  call void @kfree(i8* %275) #8, !dbg !15993
  %276 = load %struct.mlx5_flow_handle*, %struct.mlx5_flow_handle** %flow_rule, align 8, !dbg !15994
  %277 = bitcast %struct.mlx5_flow_handle* %276 to i8*, !dbg !15994
  %call347 = call zeroext i1 @IS_ERR(i8* %277) #8, !dbg !15996
  br i1 %call347, label %if.then348, label %if.end350, !dbg !15997

if.then348:                                       ; preds = %do.end340
  %278 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !15998
  %dev = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %278, i32 0, i32 0, !dbg !15998
  %279 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !15998
  %device = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %279, i32 0, i32 0, !dbg !15998
  %280 = load %struct.device*, %struct.device** %device, align 8, !dbg !15998
  %281 = load i32, i32* %tag.addr, align 4, !dbg !15998
  %282 = load %struct.mlx5_flow_handle*, %struct.mlx5_flow_handle** %flow_rule, align 8, !dbg !15998
  %283 = bitcast %struct.mlx5_flow_handle* %282 to i8*, !dbg !15998
  %call349 = call i64 @PTR_ERR(i8* %283) #8, !dbg !15998
  %conv = trunc i64 %call349 to i32, !dbg !15998
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %280, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.1, i64 0, i64 0), i32 %281, i32 %conv) #9, !dbg !15998
  br label %if.end350, !dbg !15998

if.end350:                                        ; preds = %if.then348, %do.end340
  %284 = load %struct.mlx5_flow_handle*, %struct.mlx5_flow_handle** %flow_rule, align 8, !dbg !15999
  store %struct.mlx5_flow_handle* %284, %struct.mlx5_flow_handle** %retval, align 8, !dbg !16000
  br label %return, !dbg !16000

return:                                           ; preds = %if.end350, %if.then3, %if.then
  %285 = load %struct.mlx5_flow_handle*, %struct.mlx5_flow_handle** %retval, align 8, !dbg !16001
  ret %struct.mlx5_flow_handle* %285, !dbg !16001
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @mlx5_eswitch_reg_c1_loopback_supported(%struct.mlx5_eswitch* %esw) #0 !dbg !16002 {
entry:
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !16005, metadata !DIExpression()), !dbg !16006
  %0 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !16007
  %dev = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %0, i32 0, i32 0, !dbg !16007
  %1 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !16007
  %caps = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %1, i32 0, i32 9, !dbg !16007
  %hca_cur = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps, i32 0, i32 0, !dbg !16007
  %arrayidx = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur, i64 0, i64 8, !dbg !16007
  %arraydecay = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx, i64 0, i64 0, !dbg !16007
  %add.ptr = getelementptr i32, i32* %arraydecay, i64 0, !dbg !16007
  %2 = load i32, i32* %add.ptr, align 4, !dbg !16007
  %3 = call i1 @llvm.is.constant.i32(i32 %2), !dbg !16007
  br i1 %3, label %cond.true, label %cond.false, !dbg !16007

cond.true:                                        ; preds = %entry
  %4 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !16007
  %dev1 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %4, i32 0, i32 0, !dbg !16007
  %5 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev1, align 8, !dbg !16007
  %caps2 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %5, i32 0, i32 9, !dbg !16007
  %hca_cur3 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps2, i32 0, i32 0, !dbg !16007
  %arrayidx4 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur3, i64 0, i64 8, !dbg !16007
  %arraydecay5 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx4, i64 0, i64 0, !dbg !16007
  %add.ptr6 = getelementptr i32, i32* %arraydecay5, i64 0, !dbg !16007
  %6 = load i32, i32* %add.ptr6, align 4, !dbg !16007
  %and = and i32 %6, 255, !dbg !16007
  %shl = shl i32 %and, 24, !dbg !16007
  %7 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !16007
  %dev7 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %7, i32 0, i32 0, !dbg !16007
  %8 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev7, align 8, !dbg !16007
  %caps8 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %8, i32 0, i32 9, !dbg !16007
  %hca_cur9 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps8, i32 0, i32 0, !dbg !16007
  %arrayidx10 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur9, i64 0, i64 8, !dbg !16007
  %arraydecay11 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx10, i64 0, i64 0, !dbg !16007
  %add.ptr12 = getelementptr i32, i32* %arraydecay11, i64 0, !dbg !16007
  %9 = load i32, i32* %add.ptr12, align 4, !dbg !16007
  %and13 = and i32 %9, 65280, !dbg !16007
  %shl14 = shl i32 %and13, 8, !dbg !16007
  %or = or i32 %shl, %shl14, !dbg !16007
  %10 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !16007
  %dev15 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %10, i32 0, i32 0, !dbg !16007
  %11 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev15, align 8, !dbg !16007
  %caps16 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %11, i32 0, i32 9, !dbg !16007
  %hca_cur17 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps16, i32 0, i32 0, !dbg !16007
  %arrayidx18 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur17, i64 0, i64 8, !dbg !16007
  %arraydecay19 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx18, i64 0, i64 0, !dbg !16007
  %add.ptr20 = getelementptr i32, i32* %arraydecay19, i64 0, !dbg !16007
  %12 = load i32, i32* %add.ptr20, align 4, !dbg !16007
  %and21 = and i32 %12, 16711680, !dbg !16007
  %shr = lshr i32 %and21, 8, !dbg !16007
  %or22 = or i32 %or, %shr, !dbg !16007
  %13 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !16007
  %dev23 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %13, i32 0, i32 0, !dbg !16007
  %14 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev23, align 8, !dbg !16007
  %caps24 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %14, i32 0, i32 9, !dbg !16007
  %hca_cur25 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps24, i32 0, i32 0, !dbg !16007
  %arrayidx26 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur25, i64 0, i64 8, !dbg !16007
  %arraydecay27 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx26, i64 0, i64 0, !dbg !16007
  %add.ptr28 = getelementptr i32, i32* %arraydecay27, i64 0, !dbg !16007
  %15 = load i32, i32* %add.ptr28, align 4, !dbg !16007
  %and29 = and i32 %15, -16777216, !dbg !16007
  %shr30 = lshr i32 %and29, 24, !dbg !16007
  %or31 = or i32 %or22, %shr30, !dbg !16007
  br label %cond.end, !dbg !16007

cond.false:                                       ; preds = %entry
  %16 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !16007
  %dev32 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %16, i32 0, i32 0, !dbg !16007
  %17 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev32, align 8, !dbg !16007
  %caps33 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %17, i32 0, i32 9, !dbg !16007
  %hca_cur34 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps33, i32 0, i32 0, !dbg !16007
  %arrayidx35 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur34, i64 0, i64 8, !dbg !16007
  %arraydecay36 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx35, i64 0, i64 0, !dbg !16007
  %add.ptr37 = getelementptr i32, i32* %arraydecay36, i64 0, !dbg !16007
  %18 = load i32, i32* %add.ptr37, align 4, !dbg !16007
  %call = call i32 @__fswab32(i32 %18) #10, !dbg !16007
  br label %cond.end, !dbg !16007

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %or31, %cond.true ], [ %call, %cond.false ], !dbg !16007
  %shr38 = lshr i32 %cond, 24, !dbg !16007
  %and39 = and i32 %shr38, 255, !dbg !16007
  %and40 = and i32 %and39, 2, !dbg !16008
  %tobool = icmp ne i32 %and40, 0, !dbg !16007
  ret i1 %tobool, !dbg !16009
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kzalloc(i64 %size, i32 %flags) #0 !dbg !16010 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !16011, metadata !DIExpression()), !dbg !16015
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !16021, metadata !DIExpression()), !dbg !16022
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !16023, metadata !DIExpression()), !dbg !16024
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !16025, metadata !DIExpression()), !dbg !16026
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !16027, metadata !DIExpression()), !dbg !16031
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !16033, metadata !DIExpression()), !dbg !16037
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !16039, metadata !DIExpression()), !dbg !16043
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !16048, metadata !DIExpression()), !dbg !16049
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !16050, metadata !DIExpression()), !dbg !16051
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !16052, metadata !DIExpression()), !dbg !16053
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !16054, metadata !DIExpression()), !dbg !16055
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !16056, metadata !DIExpression()), !dbg !16057
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !16058, metadata !DIExpression()), !dbg !16059
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !16060, metadata !DIExpression()), !dbg !16061
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !16062, metadata !DIExpression()), !dbg !16063
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !16064, metadata !DIExpression()), !dbg !16065
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !16066, metadata !DIExpression()), !dbg !16067
  %0 = load i64, i64* %size.addr, align 8, !dbg !16068
  %1 = load i32, i32* %flags.addr, align 4, !dbg !16069
  %or = or i32 %1, 256, !dbg !16070
  store i64 %0, i64* %size.addr.i, align 8
  store i32 %or, i32* %flags.addr.i, align 4
  %2 = load i64, i64* %size.addr.i, align 8, !dbg !16071
  %3 = call i1 @llvm.is.constant.i64(i64 %2) #12, !dbg !16072
  br i1 %3, label %if.then.i, label %if.end9.i, !dbg !16073

if.then.i:                                        ; preds = %entry
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !16074
  %cmp.i = icmp ugt i64 %4, 8192, !dbg !16075
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !16076

if.then1.i:                                       ; preds = %if.then.i
  %5 = load i64, i64* %size.addr.i, align 8, !dbg !16077
  %6 = load i32, i32* %flags.addr.i, align 4, !dbg !16078
  store i64 %5, i64* %size.addr.i.i, align 8
  store i32 %6, i32* %flags.addr.i.i, align 4
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !16079
  %call.i.i = call i32 @get_order(i64 %7) #10, !dbg !16080
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !16057
  %8 = load i64, i64* %size.addr.i.i, align 8, !dbg !16081
  %9 = load i32, i32* %flags.addr.i.i, align 4, !dbg !16082
  %10 = load i32, i32* %order.i.i, align 4, !dbg !16083
  store i64 %8, i64* %size.addr.i.i.i, align 8
  store i32 %9, i32* %flags.addr.i.i.i, align 4
  store i32 %10, i32* %order.addr.i.i.i, align 4
  %11 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !16084
  %12 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !16085
  %13 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !16086
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %11, i32 %12, i32 %13) #11, !dbg !16087
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !16087
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !16087
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !16087
  call void @llvm.assume(i1 %maskcond.i.i.i) #12, !dbg !16087
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !16088
  br label %kmalloc.exit, !dbg !16088

if.end.i:                                         ; preds = %if.then.i
  %14 = load i64, i64* %size.addr.i, align 8, !dbg !16089
  store i64 %14, i64* %size.addr.i11.i, align 8
  %15 = load i64, i64* %size.addr.i11.i, align 8, !dbg !16090
  %tobool.i.i = icmp ne i64 %15, 0, !dbg !16090
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !16092

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !16093
  br label %kmalloc_index.exit.i, !dbg !16093

if.end.i.i:                                       ; preds = %if.end.i
  %16 = load i64, i64* %size.addr.i11.i, align 8, !dbg !16094
  %cmp.i.i = icmp ule i64 %16, 8, !dbg !16096
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !16097

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !16098
  br label %kmalloc_index.exit.i, !dbg !16098

if.end2.i.i:                                      ; preds = %if.end.i.i
  %17 = load i64, i64* %size.addr.i11.i, align 8, !dbg !16099
  %cmp3.i.i = icmp ugt i64 %17, 64, !dbg !16101
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !16102

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %18 = load i64, i64* %size.addr.i11.i, align 8, !dbg !16103
  %cmp4.i.i = icmp ule i64 %18, 96, !dbg !16104
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !16105

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !16106
  br label %kmalloc_index.exit.i, !dbg !16106

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %19 = load i64, i64* %size.addr.i11.i, align 8, !dbg !16107
  %cmp7.i.i = icmp ugt i64 %19, 128, !dbg !16109
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !16110

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %20 = load i64, i64* %size.addr.i11.i, align 8, !dbg !16111
  %cmp9.i.i = icmp ule i64 %20, 192, !dbg !16112
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !16113

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !16114
  br label %kmalloc_index.exit.i, !dbg !16114

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %21 = load i64, i64* %size.addr.i11.i, align 8, !dbg !16115
  %cmp12.i.i = icmp ule i64 %21, 8, !dbg !16117
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !16118

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !16119
  br label %kmalloc_index.exit.i, !dbg !16119

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %22 = load i64, i64* %size.addr.i11.i, align 8, !dbg !16120
  %cmp15.i.i = icmp ule i64 %22, 16, !dbg !16122
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !16123

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !16124
  br label %kmalloc_index.exit.i, !dbg !16124

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %23 = load i64, i64* %size.addr.i11.i, align 8, !dbg !16125
  %cmp18.i.i = icmp ule i64 %23, 32, !dbg !16127
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !16128

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !16129
  br label %kmalloc_index.exit.i, !dbg !16129

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %24 = load i64, i64* %size.addr.i11.i, align 8, !dbg !16130
  %cmp21.i.i = icmp ule i64 %24, 64, !dbg !16132
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !16133

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !16134
  br label %kmalloc_index.exit.i, !dbg !16134

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %25 = load i64, i64* %size.addr.i11.i, align 8, !dbg !16135
  %cmp24.i.i = icmp ule i64 %25, 128, !dbg !16137
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !16138

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !16139
  br label %kmalloc_index.exit.i, !dbg !16139

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %26 = load i64, i64* %size.addr.i11.i, align 8, !dbg !16140
  %cmp27.i.i = icmp ule i64 %26, 256, !dbg !16142
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !16143

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !16144
  br label %kmalloc_index.exit.i, !dbg !16144

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %27 = load i64, i64* %size.addr.i11.i, align 8, !dbg !16145
  %cmp30.i.i = icmp ule i64 %27, 512, !dbg !16147
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !16148

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !16149
  br label %kmalloc_index.exit.i, !dbg !16149

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %28 = load i64, i64* %size.addr.i11.i, align 8, !dbg !16150
  %cmp33.i.i = icmp ule i64 %28, 1024, !dbg !16152
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !16153

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !16154
  br label %kmalloc_index.exit.i, !dbg !16154

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !16155
  %cmp36.i.i = icmp ule i64 %29, 2048, !dbg !16157
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !16158

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !16159
  br label %kmalloc_index.exit.i, !dbg !16159

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !16160
  %cmp39.i.i = icmp ule i64 %30, 4096, !dbg !16162
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !16163

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !16164
  br label %kmalloc_index.exit.i, !dbg !16164

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !16165
  %cmp42.i.i = icmp ule i64 %31, 8192, !dbg !16167
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !16168

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !16169
  br label %kmalloc_index.exit.i, !dbg !16169

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !16170
  %cmp45.i.i = icmp ule i64 %32, 16384, !dbg !16172
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !16173

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !16174
  br label %kmalloc_index.exit.i, !dbg !16174

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !16175
  %cmp48.i.i = icmp ule i64 %33, 32768, !dbg !16177
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !16178

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !16179
  br label %kmalloc_index.exit.i, !dbg !16179

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !16180
  %cmp51.i.i = icmp ule i64 %34, 65536, !dbg !16182
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !16183

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !16184
  br label %kmalloc_index.exit.i, !dbg !16184

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !16185
  %cmp54.i.i = icmp ule i64 %35, 131072, !dbg !16187
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !16188

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !16189
  br label %kmalloc_index.exit.i, !dbg !16189

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !16190
  %cmp57.i.i = icmp ule i64 %36, 262144, !dbg !16192
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !16193

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !16194
  br label %kmalloc_index.exit.i, !dbg !16194

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !16195
  %cmp60.i.i = icmp ule i64 %37, 524288, !dbg !16197
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !16198

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !16199
  br label %kmalloc_index.exit.i, !dbg !16199

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !16200
  %cmp63.i.i = icmp ule i64 %38, 1048576, !dbg !16202
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !16203

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !16204
  br label %kmalloc_index.exit.i, !dbg !16204

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !16205
  %cmp66.i.i = icmp ule i64 %39, 2097152, !dbg !16207
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !16208

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !16209
  br label %kmalloc_index.exit.i, !dbg !16209

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !16210
  %cmp69.i.i = icmp ule i64 %40, 4194304, !dbg !16212
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !16213

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !16214
  br label %kmalloc_index.exit.i, !dbg !16214

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !16215
  %cmp72.i.i = icmp ule i64 %41, 8388608, !dbg !16217
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !16218

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !16219
  br label %kmalloc_index.exit.i, !dbg !16219

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !16220
  %cmp75.i.i = icmp ule i64 %42, 16777216, !dbg !16222
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !16223

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !16224
  br label %kmalloc_index.exit.i, !dbg !16224

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !16225
  %cmp78.i.i = icmp ule i64 %43, 33554432, !dbg !16227
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !16228

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !16229
  br label %kmalloc_index.exit.i, !dbg !16229

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !16230
  %cmp81.i.i = icmp ule i64 %44, 67108864, !dbg !16232
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !16233

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !16234
  br label %kmalloc_index.exit.i, !dbg !16234

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.10, i64 0, i64 0), i32 382, i32 0, i64 12) #12, !dbg !16235, !srcloc !16238
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 221) #12, !dbg !16239, !srcloc !16242
  unreachable, !dbg !16243

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %45 = load i32, i32* %retval.i.i, align 4, !dbg !16244
  store i32 %45, i32* %index.i, align 4, !dbg !16245
  %46 = load i32, i32* %index.i, align 4, !dbg !16246
  %tobool.i = icmp ne i32 %46, 0, !dbg !16246
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !16248

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !16249
  br label %kmalloc.exit, !dbg !16249

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %47 = load i32, i32* %flags.addr.i, align 4, !dbg !16250
  store i32 %47, i32* %flags.addr.i13.i, align 4
  %48 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !16251
  %and.i.i = and i32 %48, 17, !dbg !16251
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !16251
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !16251
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !16251
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !16251
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !16253

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !16254
  br label %kmalloc_type.exit.i, !dbg !16254

if.end.i16.i:                                     ; preds = %if.end4.i
  %49 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !16255
  %and2.i.i = and i32 %49, 1, !dbg !16256
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !16255
  %50 = zext i1 %tobool3.i.i to i64, !dbg !16255
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !16255
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !16257
  br label %kmalloc_type.exit.i, !dbg !16257

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %51 = load i32, i32* %retval.i12.i, align 4, !dbg !16258
  %idxprom.i = zext i32 %51 to i64, !dbg !16259
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !16259
  %52 = load i32, i32* %index.i, align 4, !dbg !16260
  %idxprom6.i = zext i32 %52 to i64, !dbg !16259
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !16259
  %53 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !16259
  %54 = load i32, i32* %flags.addr.i, align 4, !dbg !16261
  %55 = load i64, i64* %size.addr.i, align 8, !dbg !16262
  store %struct.kmem_cache* %53, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %54, i32* %flags.addr.i17.i, align 4
  store i64 %55, i64* %size.addr.i18.i, align 8
  %56 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !16263
  %57 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !16264
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %56, i32 %57) #11, !dbg !16265
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !16265
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !16265
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !16265
  call void @llvm.assume(i1 %maskcond.i.i) #12, !dbg !16265
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !16026
  %58 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !16266
  %59 = load i8*, i8** %ret.i.i, align 8, !dbg !16267
  %60 = load i64, i64* %size.addr.i18.i, align 8, !dbg !16268
  %61 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !16269
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %58, i8* %59, i64 %60, i32 %61) #11, !dbg !16270
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !16271
  %62 = load i8*, i8** %ret.i.i, align 8, !dbg !16272
  store i8* %62, i8** %retval.i, align 8, !dbg !16273
  br label %kmalloc.exit, !dbg !16273

if.end9.i:                                        ; preds = %entry
  %63 = load i64, i64* %size.addr.i, align 8, !dbg !16274
  %64 = load i32, i32* %flags.addr.i, align 4, !dbg !16275
  %call10.i = call noalias i8* @__kmalloc(i64 %63, i32 %64) #11, !dbg !16276
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !16276
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !16276
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !16276
  call void @llvm.assume(i1 %maskcond.i) #12, !dbg !16276
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !16277
  br label %kmalloc.exit, !dbg !16277

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %65 = load i8*, i8** %retval.i, align 8, !dbg !16278
  ret i8* %65, !dbg !16279
}

; Function Attrs: noredzone
declare dso_local void @kfree(i8*) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @esw_get_max_restore_tag(%struct.mlx5_eswitch* %esw) #0 !dbg !16280 {
entry:
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !16283, metadata !DIExpression()), !dbg !16284
  ret i32 65535, !dbg !16285
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.mlx5_flow_handle* @mlx5_eswitch_create_vport_rx_rule(%struct.mlx5_eswitch* %esw, i16 zeroext %vport, %struct.mlx5_flow_destination* %dest) #0 !dbg !16286 {
entry:
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  %vport.addr = alloca i16, align 2
  %dest.addr = alloca %struct.mlx5_flow_destination*, align 8
  %flow_act = alloca %struct.mlx5_flow_act, align 8
  %flow_rule = alloca %struct.mlx5_flow_handle*, align 8
  %spec = alloca %struct.mlx5_flow_spec*, align 8
  %misc = alloca i8*, align 8
  %_v = alloca i32, align 4
  %_v169 = alloca i32, align 4
  %_v345 = alloca i32, align 4
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !16290, metadata !DIExpression()), !dbg !16291
  store i16 %vport, i16* %vport.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %vport.addr, metadata !16292, metadata !DIExpression()), !dbg !16293
  store %struct.mlx5_flow_destination* %dest, %struct.mlx5_flow_destination** %dest.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_flow_destination** %dest.addr, metadata !16294, metadata !DIExpression()), !dbg !16295
  call void @llvm.dbg.declare(metadata %struct.mlx5_flow_act* %flow_act, metadata !16296, metadata !DIExpression()), !dbg !16297
  %0 = bitcast %struct.mlx5_flow_act* %flow_act to i8*, !dbg !16297
  call void @llvm.memset.p0i8.i64(i8* align 8 %0, i8 0, i64 56, i1 false), !dbg !16297
  call void @llvm.dbg.declare(metadata %struct.mlx5_flow_handle** %flow_rule, metadata !16298, metadata !DIExpression()), !dbg !16299
  call void @llvm.dbg.declare(metadata %struct.mlx5_flow_spec** %spec, metadata !16300, metadata !DIExpression()), !dbg !16301
  call void @llvm.dbg.declare(metadata i8** %misc, metadata !16302, metadata !DIExpression()), !dbg !16303
  %call = call i8* @kvzalloc(i64 1040, i32 3264) #8, !dbg !16304
  %1 = bitcast i8* %call to %struct.mlx5_flow_spec*, !dbg !16304
  store %struct.mlx5_flow_spec* %1, %struct.mlx5_flow_spec** %spec, align 8, !dbg !16305
  %2 = load %struct.mlx5_flow_spec*, %struct.mlx5_flow_spec** %spec, align 8, !dbg !16306
  %tobool = icmp ne %struct.mlx5_flow_spec* %2, null, !dbg !16306
  br i1 %tobool, label %if.end, label %if.then, !dbg !16308

if.then:                                          ; preds = %entry
  %call1 = call i8* @ERR_PTR(i64 -12) #8, !dbg !16309
  %3 = bitcast i8* %call1 to %struct.mlx5_flow_handle*, !dbg !16309
  store %struct.mlx5_flow_handle* %3, %struct.mlx5_flow_handle** %flow_rule, align 8, !dbg !16311
  br label %out, !dbg !16312

if.end:                                           ; preds = %entry
  %4 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !16313
  %call2 = call zeroext i1 @mlx5_eswitch_vport_match_metadata_enabled(%struct.mlx5_eswitch* %4) #8, !dbg !16315
  br i1 %call2, label %if.then3, label %if.else, !dbg !16316

if.then3:                                         ; preds = %if.end
  %5 = load %struct.mlx5_flow_spec*, %struct.mlx5_flow_spec** %spec, align 8, !dbg !16317
  %match_value = getelementptr inbounds %struct.mlx5_flow_spec, %struct.mlx5_flow_spec* %5, i32 0, i32 2, !dbg !16317
  %arraydecay = getelementptr inbounds [128 x i32], [128 x i32]* %match_value, i64 0, i64 0, !dbg !16317
  %6 = bitcast i32* %arraydecay to i8*, !dbg !16317
  %add.ptr = getelementptr i8, i8* %6, i64 192, !dbg !16317
  store i8* %add.ptr, i8** %misc, align 8, !dbg !16319
  br label %do.body, !dbg !16320

do.body:                                          ; preds = %if.then3
  call void @llvm.dbg.declare(metadata i32* %_v, metadata !16321, metadata !DIExpression()), !dbg !16323
  %7 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !16323
  %8 = load i16, i16* %vport.addr, align 2, !dbg !16323
  %call4 = call i32 @mlx5_eswitch_get_vport_metadata_for_match(%struct.mlx5_eswitch* %7, i16 zeroext %8) #8, !dbg !16323
  store i32 %call4, i32* %_v, align 4, !dbg !16323
  br label %do.body5, !dbg !16323

do.body5:                                         ; preds = %do.body
  br label %do.end, !dbg !16324

do.end:                                           ; preds = %do.body5
  %9 = load i8*, i8** %misc, align 8, !dbg !16323
  %10 = bitcast i8* %9 to i32*, !dbg !16323
  %add.ptr6 = getelementptr i32, i32* %10, i64 11, !dbg !16323
  %11 = load i32, i32* %add.ptr6, align 4, !dbg !16323
  %12 = call i1 @llvm.is.constant.i32(i32 %11), !dbg !16323
  br i1 %12, label %cond.true, label %cond.false, !dbg !16323

cond.true:                                        ; preds = %do.end
  %13 = load i8*, i8** %misc, align 8, !dbg !16323
  %14 = bitcast i8* %13 to i32*, !dbg !16323
  %add.ptr7 = getelementptr i32, i32* %14, i64 11, !dbg !16323
  %15 = load i32, i32* %add.ptr7, align 4, !dbg !16323
  %and = and i32 %15, 255, !dbg !16323
  %shl = shl i32 %and, 24, !dbg !16323
  %16 = load i8*, i8** %misc, align 8, !dbg !16323
  %17 = bitcast i8* %16 to i32*, !dbg !16323
  %add.ptr8 = getelementptr i32, i32* %17, i64 11, !dbg !16323
  %18 = load i32, i32* %add.ptr8, align 4, !dbg !16323
  %and9 = and i32 %18, 65280, !dbg !16323
  %shl10 = shl i32 %and9, 8, !dbg !16323
  %or = or i32 %shl, %shl10, !dbg !16323
  %19 = load i8*, i8** %misc, align 8, !dbg !16323
  %20 = bitcast i8* %19 to i32*, !dbg !16323
  %add.ptr11 = getelementptr i32, i32* %20, i64 11, !dbg !16323
  %21 = load i32, i32* %add.ptr11, align 4, !dbg !16323
  %and12 = and i32 %21, 16711680, !dbg !16323
  %shr = lshr i32 %and12, 8, !dbg !16323
  %or13 = or i32 %or, %shr, !dbg !16323
  %22 = load i8*, i8** %misc, align 8, !dbg !16323
  %23 = bitcast i8* %22 to i32*, !dbg !16323
  %add.ptr14 = getelementptr i32, i32* %23, i64 11, !dbg !16323
  %24 = load i32, i32* %add.ptr14, align 4, !dbg !16323
  %and15 = and i32 %24, -16777216, !dbg !16323
  %shr16 = lshr i32 %and15, 24, !dbg !16323
  %or17 = or i32 %or13, %shr16, !dbg !16323
  br label %cond.end, !dbg !16323

cond.false:                                       ; preds = %do.end
  %25 = load i8*, i8** %misc, align 8, !dbg !16323
  %26 = bitcast i8* %25 to i32*, !dbg !16323
  %add.ptr18 = getelementptr i32, i32* %26, i64 11, !dbg !16323
  %27 = load i32, i32* %add.ptr18, align 4, !dbg !16323
  %call19 = call i32 @__fswab32(i32 %27) #10, !dbg !16323
  br label %cond.end, !dbg !16323

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %or17, %cond.true ], [ %call19, %cond.false ], !dbg !16323
  %and20 = and i32 %cond, 0, !dbg !16323
  %28 = load i32, i32* %_v, align 4, !dbg !16323
  %shl21 = shl i32 %28, 0, !dbg !16323
  %or22 = or i32 %and20, %shl21, !dbg !16323
  %29 = call i1 @llvm.is.constant.i32(i32 %or22), !dbg !16323
  br i1 %29, label %cond.true23, label %cond.false135, !dbg !16323

cond.true23:                                      ; preds = %cond.end
  %30 = load i8*, i8** %misc, align 8, !dbg !16323
  %31 = bitcast i8* %30 to i32*, !dbg !16323
  %add.ptr24 = getelementptr i32, i32* %31, i64 11, !dbg !16323
  %32 = load i32, i32* %add.ptr24, align 4, !dbg !16323
  %33 = call i1 @llvm.is.constant.i32(i32 %32), !dbg !16323
  br i1 %33, label %cond.true25, label %cond.false41, !dbg !16323

cond.true25:                                      ; preds = %cond.true23
  %34 = load i8*, i8** %misc, align 8, !dbg !16323
  %35 = bitcast i8* %34 to i32*, !dbg !16323
  %add.ptr26 = getelementptr i32, i32* %35, i64 11, !dbg !16323
  %36 = load i32, i32* %add.ptr26, align 4, !dbg !16323
  %and27 = and i32 %36, 255, !dbg !16323
  %shl28 = shl i32 %and27, 24, !dbg !16323
  %37 = load i8*, i8** %misc, align 8, !dbg !16323
  %38 = bitcast i8* %37 to i32*, !dbg !16323
  %add.ptr29 = getelementptr i32, i32* %38, i64 11, !dbg !16323
  %39 = load i32, i32* %add.ptr29, align 4, !dbg !16323
  %and30 = and i32 %39, 65280, !dbg !16323
  %shl31 = shl i32 %and30, 8, !dbg !16323
  %or32 = or i32 %shl28, %shl31, !dbg !16323
  %40 = load i8*, i8** %misc, align 8, !dbg !16323
  %41 = bitcast i8* %40 to i32*, !dbg !16323
  %add.ptr33 = getelementptr i32, i32* %41, i64 11, !dbg !16323
  %42 = load i32, i32* %add.ptr33, align 4, !dbg !16323
  %and34 = and i32 %42, 16711680, !dbg !16323
  %shr35 = lshr i32 %and34, 8, !dbg !16323
  %or36 = or i32 %or32, %shr35, !dbg !16323
  %43 = load i8*, i8** %misc, align 8, !dbg !16323
  %44 = bitcast i8* %43 to i32*, !dbg !16323
  %add.ptr37 = getelementptr i32, i32* %44, i64 11, !dbg !16323
  %45 = load i32, i32* %add.ptr37, align 4, !dbg !16323
  %and38 = and i32 %45, -16777216, !dbg !16323
  %shr39 = lshr i32 %and38, 24, !dbg !16323
  %or40 = or i32 %or36, %shr39, !dbg !16323
  br label %cond.end44, !dbg !16323

cond.false41:                                     ; preds = %cond.true23
  %46 = load i8*, i8** %misc, align 8, !dbg !16323
  %47 = bitcast i8* %46 to i32*, !dbg !16323
  %add.ptr42 = getelementptr i32, i32* %47, i64 11, !dbg !16323
  %48 = load i32, i32* %add.ptr42, align 4, !dbg !16323
  %call43 = call i32 @__fswab32(i32 %48) #10, !dbg !16323
  br label %cond.end44, !dbg !16323

cond.end44:                                       ; preds = %cond.false41, %cond.true25
  %cond45 = phi i32 [ %or40, %cond.true25 ], [ %call43, %cond.false41 ], !dbg !16323
  %and46 = and i32 %cond45, 0, !dbg !16323
  %49 = load i32, i32* %_v, align 4, !dbg !16323
  %shl47 = shl i32 %49, 0, !dbg !16323
  %or48 = or i32 %and46, %shl47, !dbg !16323
  %and49 = and i32 %or48, 255, !dbg !16323
  %shl50 = shl i32 %and49, 24, !dbg !16323
  %50 = load i8*, i8** %misc, align 8, !dbg !16323
  %51 = bitcast i8* %50 to i32*, !dbg !16323
  %add.ptr51 = getelementptr i32, i32* %51, i64 11, !dbg !16323
  %52 = load i32, i32* %add.ptr51, align 4, !dbg !16323
  %53 = call i1 @llvm.is.constant.i32(i32 %52), !dbg !16323
  br i1 %53, label %cond.true52, label %cond.false68, !dbg !16323

cond.true52:                                      ; preds = %cond.end44
  %54 = load i8*, i8** %misc, align 8, !dbg !16323
  %55 = bitcast i8* %54 to i32*, !dbg !16323
  %add.ptr53 = getelementptr i32, i32* %55, i64 11, !dbg !16323
  %56 = load i32, i32* %add.ptr53, align 4, !dbg !16323
  %and54 = and i32 %56, 255, !dbg !16323
  %shl55 = shl i32 %and54, 24, !dbg !16323
  %57 = load i8*, i8** %misc, align 8, !dbg !16323
  %58 = bitcast i8* %57 to i32*, !dbg !16323
  %add.ptr56 = getelementptr i32, i32* %58, i64 11, !dbg !16323
  %59 = load i32, i32* %add.ptr56, align 4, !dbg !16323
  %and57 = and i32 %59, 65280, !dbg !16323
  %shl58 = shl i32 %and57, 8, !dbg !16323
  %or59 = or i32 %shl55, %shl58, !dbg !16323
  %60 = load i8*, i8** %misc, align 8, !dbg !16323
  %61 = bitcast i8* %60 to i32*, !dbg !16323
  %add.ptr60 = getelementptr i32, i32* %61, i64 11, !dbg !16323
  %62 = load i32, i32* %add.ptr60, align 4, !dbg !16323
  %and61 = and i32 %62, 16711680, !dbg !16323
  %shr62 = lshr i32 %and61, 8, !dbg !16323
  %or63 = or i32 %or59, %shr62, !dbg !16323
  %63 = load i8*, i8** %misc, align 8, !dbg !16323
  %64 = bitcast i8* %63 to i32*, !dbg !16323
  %add.ptr64 = getelementptr i32, i32* %64, i64 11, !dbg !16323
  %65 = load i32, i32* %add.ptr64, align 4, !dbg !16323
  %and65 = and i32 %65, -16777216, !dbg !16323
  %shr66 = lshr i32 %and65, 24, !dbg !16323
  %or67 = or i32 %or63, %shr66, !dbg !16323
  br label %cond.end71, !dbg !16323

cond.false68:                                     ; preds = %cond.end44
  %66 = load i8*, i8** %misc, align 8, !dbg !16323
  %67 = bitcast i8* %66 to i32*, !dbg !16323
  %add.ptr69 = getelementptr i32, i32* %67, i64 11, !dbg !16323
  %68 = load i32, i32* %add.ptr69, align 4, !dbg !16323
  %call70 = call i32 @__fswab32(i32 %68) #10, !dbg !16323
  br label %cond.end71, !dbg !16323

cond.end71:                                       ; preds = %cond.false68, %cond.true52
  %cond72 = phi i32 [ %or67, %cond.true52 ], [ %call70, %cond.false68 ], !dbg !16323
  %and73 = and i32 %cond72, 0, !dbg !16323
  %69 = load i32, i32* %_v, align 4, !dbg !16323
  %shl74 = shl i32 %69, 0, !dbg !16323
  %or75 = or i32 %and73, %shl74, !dbg !16323
  %and76 = and i32 %or75, 65280, !dbg !16323
  %shl77 = shl i32 %and76, 8, !dbg !16323
  %or78 = or i32 %shl50, %shl77, !dbg !16323
  %70 = load i8*, i8** %misc, align 8, !dbg !16323
  %71 = bitcast i8* %70 to i32*, !dbg !16323
  %add.ptr79 = getelementptr i32, i32* %71, i64 11, !dbg !16323
  %72 = load i32, i32* %add.ptr79, align 4, !dbg !16323
  %73 = call i1 @llvm.is.constant.i32(i32 %72), !dbg !16323
  br i1 %73, label %cond.true80, label %cond.false96, !dbg !16323

cond.true80:                                      ; preds = %cond.end71
  %74 = load i8*, i8** %misc, align 8, !dbg !16323
  %75 = bitcast i8* %74 to i32*, !dbg !16323
  %add.ptr81 = getelementptr i32, i32* %75, i64 11, !dbg !16323
  %76 = load i32, i32* %add.ptr81, align 4, !dbg !16323
  %and82 = and i32 %76, 255, !dbg !16323
  %shl83 = shl i32 %and82, 24, !dbg !16323
  %77 = load i8*, i8** %misc, align 8, !dbg !16323
  %78 = bitcast i8* %77 to i32*, !dbg !16323
  %add.ptr84 = getelementptr i32, i32* %78, i64 11, !dbg !16323
  %79 = load i32, i32* %add.ptr84, align 4, !dbg !16323
  %and85 = and i32 %79, 65280, !dbg !16323
  %shl86 = shl i32 %and85, 8, !dbg !16323
  %or87 = or i32 %shl83, %shl86, !dbg !16323
  %80 = load i8*, i8** %misc, align 8, !dbg !16323
  %81 = bitcast i8* %80 to i32*, !dbg !16323
  %add.ptr88 = getelementptr i32, i32* %81, i64 11, !dbg !16323
  %82 = load i32, i32* %add.ptr88, align 4, !dbg !16323
  %and89 = and i32 %82, 16711680, !dbg !16323
  %shr90 = lshr i32 %and89, 8, !dbg !16323
  %or91 = or i32 %or87, %shr90, !dbg !16323
  %83 = load i8*, i8** %misc, align 8, !dbg !16323
  %84 = bitcast i8* %83 to i32*, !dbg !16323
  %add.ptr92 = getelementptr i32, i32* %84, i64 11, !dbg !16323
  %85 = load i32, i32* %add.ptr92, align 4, !dbg !16323
  %and93 = and i32 %85, -16777216, !dbg !16323
  %shr94 = lshr i32 %and93, 24, !dbg !16323
  %or95 = or i32 %or91, %shr94, !dbg !16323
  br label %cond.end99, !dbg !16323

cond.false96:                                     ; preds = %cond.end71
  %86 = load i8*, i8** %misc, align 8, !dbg !16323
  %87 = bitcast i8* %86 to i32*, !dbg !16323
  %add.ptr97 = getelementptr i32, i32* %87, i64 11, !dbg !16323
  %88 = load i32, i32* %add.ptr97, align 4, !dbg !16323
  %call98 = call i32 @__fswab32(i32 %88) #10, !dbg !16323
  br label %cond.end99, !dbg !16323

cond.end99:                                       ; preds = %cond.false96, %cond.true80
  %cond100 = phi i32 [ %or95, %cond.true80 ], [ %call98, %cond.false96 ], !dbg !16323
  %and101 = and i32 %cond100, 0, !dbg !16323
  %89 = load i32, i32* %_v, align 4, !dbg !16323
  %shl102 = shl i32 %89, 0, !dbg !16323
  %or103 = or i32 %and101, %shl102, !dbg !16323
  %and104 = and i32 %or103, 16711680, !dbg !16323
  %shr105 = lshr i32 %and104, 8, !dbg !16323
  %or106 = or i32 %or78, %shr105, !dbg !16323
  %90 = load i8*, i8** %misc, align 8, !dbg !16323
  %91 = bitcast i8* %90 to i32*, !dbg !16323
  %add.ptr107 = getelementptr i32, i32* %91, i64 11, !dbg !16323
  %92 = load i32, i32* %add.ptr107, align 4, !dbg !16323
  %93 = call i1 @llvm.is.constant.i32(i32 %92), !dbg !16323
  br i1 %93, label %cond.true108, label %cond.false124, !dbg !16323

cond.true108:                                     ; preds = %cond.end99
  %94 = load i8*, i8** %misc, align 8, !dbg !16323
  %95 = bitcast i8* %94 to i32*, !dbg !16323
  %add.ptr109 = getelementptr i32, i32* %95, i64 11, !dbg !16323
  %96 = load i32, i32* %add.ptr109, align 4, !dbg !16323
  %and110 = and i32 %96, 255, !dbg !16323
  %shl111 = shl i32 %and110, 24, !dbg !16323
  %97 = load i8*, i8** %misc, align 8, !dbg !16323
  %98 = bitcast i8* %97 to i32*, !dbg !16323
  %add.ptr112 = getelementptr i32, i32* %98, i64 11, !dbg !16323
  %99 = load i32, i32* %add.ptr112, align 4, !dbg !16323
  %and113 = and i32 %99, 65280, !dbg !16323
  %shl114 = shl i32 %and113, 8, !dbg !16323
  %or115 = or i32 %shl111, %shl114, !dbg !16323
  %100 = load i8*, i8** %misc, align 8, !dbg !16323
  %101 = bitcast i8* %100 to i32*, !dbg !16323
  %add.ptr116 = getelementptr i32, i32* %101, i64 11, !dbg !16323
  %102 = load i32, i32* %add.ptr116, align 4, !dbg !16323
  %and117 = and i32 %102, 16711680, !dbg !16323
  %shr118 = lshr i32 %and117, 8, !dbg !16323
  %or119 = or i32 %or115, %shr118, !dbg !16323
  %103 = load i8*, i8** %misc, align 8, !dbg !16323
  %104 = bitcast i8* %103 to i32*, !dbg !16323
  %add.ptr120 = getelementptr i32, i32* %104, i64 11, !dbg !16323
  %105 = load i32, i32* %add.ptr120, align 4, !dbg !16323
  %and121 = and i32 %105, -16777216, !dbg !16323
  %shr122 = lshr i32 %and121, 24, !dbg !16323
  %or123 = or i32 %or119, %shr122, !dbg !16323
  br label %cond.end127, !dbg !16323

cond.false124:                                    ; preds = %cond.end99
  %106 = load i8*, i8** %misc, align 8, !dbg !16323
  %107 = bitcast i8* %106 to i32*, !dbg !16323
  %add.ptr125 = getelementptr i32, i32* %107, i64 11, !dbg !16323
  %108 = load i32, i32* %add.ptr125, align 4, !dbg !16323
  %call126 = call i32 @__fswab32(i32 %108) #10, !dbg !16323
  br label %cond.end127, !dbg !16323

cond.end127:                                      ; preds = %cond.false124, %cond.true108
  %cond128 = phi i32 [ %or123, %cond.true108 ], [ %call126, %cond.false124 ], !dbg !16323
  %and129 = and i32 %cond128, 0, !dbg !16323
  %109 = load i32, i32* %_v, align 4, !dbg !16323
  %shl130 = shl i32 %109, 0, !dbg !16323
  %or131 = or i32 %and129, %shl130, !dbg !16323
  %and132 = and i32 %or131, -16777216, !dbg !16323
  %shr133 = lshr i32 %and132, 24, !dbg !16323
  %or134 = or i32 %or106, %shr133, !dbg !16323
  br label %cond.end162, !dbg !16323

cond.false135:                                    ; preds = %cond.end
  %110 = load i8*, i8** %misc, align 8, !dbg !16323
  %111 = bitcast i8* %110 to i32*, !dbg !16323
  %add.ptr136 = getelementptr i32, i32* %111, i64 11, !dbg !16323
  %112 = load i32, i32* %add.ptr136, align 4, !dbg !16323
  %113 = call i1 @llvm.is.constant.i32(i32 %112), !dbg !16323
  br i1 %113, label %cond.true137, label %cond.false153, !dbg !16323

cond.true137:                                     ; preds = %cond.false135
  %114 = load i8*, i8** %misc, align 8, !dbg !16323
  %115 = bitcast i8* %114 to i32*, !dbg !16323
  %add.ptr138 = getelementptr i32, i32* %115, i64 11, !dbg !16323
  %116 = load i32, i32* %add.ptr138, align 4, !dbg !16323
  %and139 = and i32 %116, 255, !dbg !16323
  %shl140 = shl i32 %and139, 24, !dbg !16323
  %117 = load i8*, i8** %misc, align 8, !dbg !16323
  %118 = bitcast i8* %117 to i32*, !dbg !16323
  %add.ptr141 = getelementptr i32, i32* %118, i64 11, !dbg !16323
  %119 = load i32, i32* %add.ptr141, align 4, !dbg !16323
  %and142 = and i32 %119, 65280, !dbg !16323
  %shl143 = shl i32 %and142, 8, !dbg !16323
  %or144 = or i32 %shl140, %shl143, !dbg !16323
  %120 = load i8*, i8** %misc, align 8, !dbg !16323
  %121 = bitcast i8* %120 to i32*, !dbg !16323
  %add.ptr145 = getelementptr i32, i32* %121, i64 11, !dbg !16323
  %122 = load i32, i32* %add.ptr145, align 4, !dbg !16323
  %and146 = and i32 %122, 16711680, !dbg !16323
  %shr147 = lshr i32 %and146, 8, !dbg !16323
  %or148 = or i32 %or144, %shr147, !dbg !16323
  %123 = load i8*, i8** %misc, align 8, !dbg !16323
  %124 = bitcast i8* %123 to i32*, !dbg !16323
  %add.ptr149 = getelementptr i32, i32* %124, i64 11, !dbg !16323
  %125 = load i32, i32* %add.ptr149, align 4, !dbg !16323
  %and150 = and i32 %125, -16777216, !dbg !16323
  %shr151 = lshr i32 %and150, 24, !dbg !16323
  %or152 = or i32 %or148, %shr151, !dbg !16323
  br label %cond.end156, !dbg !16323

cond.false153:                                    ; preds = %cond.false135
  %126 = load i8*, i8** %misc, align 8, !dbg !16323
  %127 = bitcast i8* %126 to i32*, !dbg !16323
  %add.ptr154 = getelementptr i32, i32* %127, i64 11, !dbg !16323
  %128 = load i32, i32* %add.ptr154, align 4, !dbg !16323
  %call155 = call i32 @__fswab32(i32 %128) #10, !dbg !16323
  br label %cond.end156, !dbg !16323

cond.end156:                                      ; preds = %cond.false153, %cond.true137
  %cond157 = phi i32 [ %or152, %cond.true137 ], [ %call155, %cond.false153 ], !dbg !16323
  %and158 = and i32 %cond157, 0, !dbg !16323
  %129 = load i32, i32* %_v, align 4, !dbg !16323
  %shl159 = shl i32 %129, 0, !dbg !16323
  %or160 = or i32 %and158, %shl159, !dbg !16323
  %call161 = call i32 @__fswab32(i32 %or160) #10, !dbg !16323
  br label %cond.end162, !dbg !16323

cond.end162:                                      ; preds = %cond.end156, %cond.end127
  %cond163 = phi i32 [ %or134, %cond.end127 ], [ %call161, %cond.end156 ], !dbg !16323
  %130 = load i8*, i8** %misc, align 8, !dbg !16323
  %131 = bitcast i8* %130 to i32*, !dbg !16323
  %add.ptr164 = getelementptr i32, i32* %131, i64 11, !dbg !16323
  store i32 %cond163, i32* %add.ptr164, align 4, !dbg !16323
  br label %do.end165, !dbg !16323

do.end165:                                        ; preds = %cond.end162
  %132 = load %struct.mlx5_flow_spec*, %struct.mlx5_flow_spec** %spec, align 8, !dbg !16326
  %match_criteria = getelementptr inbounds %struct.mlx5_flow_spec, %struct.mlx5_flow_spec* %132, i32 0, i32 1, !dbg !16326
  %arraydecay166 = getelementptr inbounds [128 x i32], [128 x i32]* %match_criteria, i64 0, i64 0, !dbg !16326
  %133 = bitcast i32* %arraydecay166 to i8*, !dbg !16326
  %add.ptr167 = getelementptr i8, i8* %133, i64 192, !dbg !16326
  store i8* %add.ptr167, i8** %misc, align 8, !dbg !16327
  br label %do.body168, !dbg !16328

do.body168:                                       ; preds = %do.end165
  call void @llvm.dbg.declare(metadata i32* %_v169, metadata !16329, metadata !DIExpression()), !dbg !16331
  %call170 = call i32 @mlx5_eswitch_get_vport_metadata_mask() #8, !dbg !16331
  store i32 %call170, i32* %_v169, align 4, !dbg !16331
  br label %do.body171, !dbg !16331

do.body171:                                       ; preds = %do.body168
  br label %do.end172, !dbg !16332

do.end172:                                        ; preds = %do.body171
  %134 = load i8*, i8** %misc, align 8, !dbg !16331
  %135 = bitcast i8* %134 to i32*, !dbg !16331
  %add.ptr173 = getelementptr i32, i32* %135, i64 11, !dbg !16331
  %136 = load i32, i32* %add.ptr173, align 4, !dbg !16331
  %137 = call i1 @llvm.is.constant.i32(i32 %136), !dbg !16331
  br i1 %137, label %cond.true174, label %cond.false190, !dbg !16331

cond.true174:                                     ; preds = %do.end172
  %138 = load i8*, i8** %misc, align 8, !dbg !16331
  %139 = bitcast i8* %138 to i32*, !dbg !16331
  %add.ptr175 = getelementptr i32, i32* %139, i64 11, !dbg !16331
  %140 = load i32, i32* %add.ptr175, align 4, !dbg !16331
  %and176 = and i32 %140, 255, !dbg !16331
  %shl177 = shl i32 %and176, 24, !dbg !16331
  %141 = load i8*, i8** %misc, align 8, !dbg !16331
  %142 = bitcast i8* %141 to i32*, !dbg !16331
  %add.ptr178 = getelementptr i32, i32* %142, i64 11, !dbg !16331
  %143 = load i32, i32* %add.ptr178, align 4, !dbg !16331
  %and179 = and i32 %143, 65280, !dbg !16331
  %shl180 = shl i32 %and179, 8, !dbg !16331
  %or181 = or i32 %shl177, %shl180, !dbg !16331
  %144 = load i8*, i8** %misc, align 8, !dbg !16331
  %145 = bitcast i8* %144 to i32*, !dbg !16331
  %add.ptr182 = getelementptr i32, i32* %145, i64 11, !dbg !16331
  %146 = load i32, i32* %add.ptr182, align 4, !dbg !16331
  %and183 = and i32 %146, 16711680, !dbg !16331
  %shr184 = lshr i32 %and183, 8, !dbg !16331
  %or185 = or i32 %or181, %shr184, !dbg !16331
  %147 = load i8*, i8** %misc, align 8, !dbg !16331
  %148 = bitcast i8* %147 to i32*, !dbg !16331
  %add.ptr186 = getelementptr i32, i32* %148, i64 11, !dbg !16331
  %149 = load i32, i32* %add.ptr186, align 4, !dbg !16331
  %and187 = and i32 %149, -16777216, !dbg !16331
  %shr188 = lshr i32 %and187, 24, !dbg !16331
  %or189 = or i32 %or185, %shr188, !dbg !16331
  br label %cond.end193, !dbg !16331

cond.false190:                                    ; preds = %do.end172
  %150 = load i8*, i8** %misc, align 8, !dbg !16331
  %151 = bitcast i8* %150 to i32*, !dbg !16331
  %add.ptr191 = getelementptr i32, i32* %151, i64 11, !dbg !16331
  %152 = load i32, i32* %add.ptr191, align 4, !dbg !16331
  %call192 = call i32 @__fswab32(i32 %152) #10, !dbg !16331
  br label %cond.end193, !dbg !16331

cond.end193:                                      ; preds = %cond.false190, %cond.true174
  %cond194 = phi i32 [ %or189, %cond.true174 ], [ %call192, %cond.false190 ], !dbg !16331
  %and195 = and i32 %cond194, 0, !dbg !16331
  %153 = load i32, i32* %_v169, align 4, !dbg !16331
  %shl196 = shl i32 %153, 0, !dbg !16331
  %or197 = or i32 %and195, %shl196, !dbg !16331
  %154 = call i1 @llvm.is.constant.i32(i32 %or197), !dbg !16331
  br i1 %154, label %cond.true198, label %cond.false310, !dbg !16331

cond.true198:                                     ; preds = %cond.end193
  %155 = load i8*, i8** %misc, align 8, !dbg !16331
  %156 = bitcast i8* %155 to i32*, !dbg !16331
  %add.ptr199 = getelementptr i32, i32* %156, i64 11, !dbg !16331
  %157 = load i32, i32* %add.ptr199, align 4, !dbg !16331
  %158 = call i1 @llvm.is.constant.i32(i32 %157), !dbg !16331
  br i1 %158, label %cond.true200, label %cond.false216, !dbg !16331

cond.true200:                                     ; preds = %cond.true198
  %159 = load i8*, i8** %misc, align 8, !dbg !16331
  %160 = bitcast i8* %159 to i32*, !dbg !16331
  %add.ptr201 = getelementptr i32, i32* %160, i64 11, !dbg !16331
  %161 = load i32, i32* %add.ptr201, align 4, !dbg !16331
  %and202 = and i32 %161, 255, !dbg !16331
  %shl203 = shl i32 %and202, 24, !dbg !16331
  %162 = load i8*, i8** %misc, align 8, !dbg !16331
  %163 = bitcast i8* %162 to i32*, !dbg !16331
  %add.ptr204 = getelementptr i32, i32* %163, i64 11, !dbg !16331
  %164 = load i32, i32* %add.ptr204, align 4, !dbg !16331
  %and205 = and i32 %164, 65280, !dbg !16331
  %shl206 = shl i32 %and205, 8, !dbg !16331
  %or207 = or i32 %shl203, %shl206, !dbg !16331
  %165 = load i8*, i8** %misc, align 8, !dbg !16331
  %166 = bitcast i8* %165 to i32*, !dbg !16331
  %add.ptr208 = getelementptr i32, i32* %166, i64 11, !dbg !16331
  %167 = load i32, i32* %add.ptr208, align 4, !dbg !16331
  %and209 = and i32 %167, 16711680, !dbg !16331
  %shr210 = lshr i32 %and209, 8, !dbg !16331
  %or211 = or i32 %or207, %shr210, !dbg !16331
  %168 = load i8*, i8** %misc, align 8, !dbg !16331
  %169 = bitcast i8* %168 to i32*, !dbg !16331
  %add.ptr212 = getelementptr i32, i32* %169, i64 11, !dbg !16331
  %170 = load i32, i32* %add.ptr212, align 4, !dbg !16331
  %and213 = and i32 %170, -16777216, !dbg !16331
  %shr214 = lshr i32 %and213, 24, !dbg !16331
  %or215 = or i32 %or211, %shr214, !dbg !16331
  br label %cond.end219, !dbg !16331

cond.false216:                                    ; preds = %cond.true198
  %171 = load i8*, i8** %misc, align 8, !dbg !16331
  %172 = bitcast i8* %171 to i32*, !dbg !16331
  %add.ptr217 = getelementptr i32, i32* %172, i64 11, !dbg !16331
  %173 = load i32, i32* %add.ptr217, align 4, !dbg !16331
  %call218 = call i32 @__fswab32(i32 %173) #10, !dbg !16331
  br label %cond.end219, !dbg !16331

cond.end219:                                      ; preds = %cond.false216, %cond.true200
  %cond220 = phi i32 [ %or215, %cond.true200 ], [ %call218, %cond.false216 ], !dbg !16331
  %and221 = and i32 %cond220, 0, !dbg !16331
  %174 = load i32, i32* %_v169, align 4, !dbg !16331
  %shl222 = shl i32 %174, 0, !dbg !16331
  %or223 = or i32 %and221, %shl222, !dbg !16331
  %and224 = and i32 %or223, 255, !dbg !16331
  %shl225 = shl i32 %and224, 24, !dbg !16331
  %175 = load i8*, i8** %misc, align 8, !dbg !16331
  %176 = bitcast i8* %175 to i32*, !dbg !16331
  %add.ptr226 = getelementptr i32, i32* %176, i64 11, !dbg !16331
  %177 = load i32, i32* %add.ptr226, align 4, !dbg !16331
  %178 = call i1 @llvm.is.constant.i32(i32 %177), !dbg !16331
  br i1 %178, label %cond.true227, label %cond.false243, !dbg !16331

cond.true227:                                     ; preds = %cond.end219
  %179 = load i8*, i8** %misc, align 8, !dbg !16331
  %180 = bitcast i8* %179 to i32*, !dbg !16331
  %add.ptr228 = getelementptr i32, i32* %180, i64 11, !dbg !16331
  %181 = load i32, i32* %add.ptr228, align 4, !dbg !16331
  %and229 = and i32 %181, 255, !dbg !16331
  %shl230 = shl i32 %and229, 24, !dbg !16331
  %182 = load i8*, i8** %misc, align 8, !dbg !16331
  %183 = bitcast i8* %182 to i32*, !dbg !16331
  %add.ptr231 = getelementptr i32, i32* %183, i64 11, !dbg !16331
  %184 = load i32, i32* %add.ptr231, align 4, !dbg !16331
  %and232 = and i32 %184, 65280, !dbg !16331
  %shl233 = shl i32 %and232, 8, !dbg !16331
  %or234 = or i32 %shl230, %shl233, !dbg !16331
  %185 = load i8*, i8** %misc, align 8, !dbg !16331
  %186 = bitcast i8* %185 to i32*, !dbg !16331
  %add.ptr235 = getelementptr i32, i32* %186, i64 11, !dbg !16331
  %187 = load i32, i32* %add.ptr235, align 4, !dbg !16331
  %and236 = and i32 %187, 16711680, !dbg !16331
  %shr237 = lshr i32 %and236, 8, !dbg !16331
  %or238 = or i32 %or234, %shr237, !dbg !16331
  %188 = load i8*, i8** %misc, align 8, !dbg !16331
  %189 = bitcast i8* %188 to i32*, !dbg !16331
  %add.ptr239 = getelementptr i32, i32* %189, i64 11, !dbg !16331
  %190 = load i32, i32* %add.ptr239, align 4, !dbg !16331
  %and240 = and i32 %190, -16777216, !dbg !16331
  %shr241 = lshr i32 %and240, 24, !dbg !16331
  %or242 = or i32 %or238, %shr241, !dbg !16331
  br label %cond.end246, !dbg !16331

cond.false243:                                    ; preds = %cond.end219
  %191 = load i8*, i8** %misc, align 8, !dbg !16331
  %192 = bitcast i8* %191 to i32*, !dbg !16331
  %add.ptr244 = getelementptr i32, i32* %192, i64 11, !dbg !16331
  %193 = load i32, i32* %add.ptr244, align 4, !dbg !16331
  %call245 = call i32 @__fswab32(i32 %193) #10, !dbg !16331
  br label %cond.end246, !dbg !16331

cond.end246:                                      ; preds = %cond.false243, %cond.true227
  %cond247 = phi i32 [ %or242, %cond.true227 ], [ %call245, %cond.false243 ], !dbg !16331
  %and248 = and i32 %cond247, 0, !dbg !16331
  %194 = load i32, i32* %_v169, align 4, !dbg !16331
  %shl249 = shl i32 %194, 0, !dbg !16331
  %or250 = or i32 %and248, %shl249, !dbg !16331
  %and251 = and i32 %or250, 65280, !dbg !16331
  %shl252 = shl i32 %and251, 8, !dbg !16331
  %or253 = or i32 %shl225, %shl252, !dbg !16331
  %195 = load i8*, i8** %misc, align 8, !dbg !16331
  %196 = bitcast i8* %195 to i32*, !dbg !16331
  %add.ptr254 = getelementptr i32, i32* %196, i64 11, !dbg !16331
  %197 = load i32, i32* %add.ptr254, align 4, !dbg !16331
  %198 = call i1 @llvm.is.constant.i32(i32 %197), !dbg !16331
  br i1 %198, label %cond.true255, label %cond.false271, !dbg !16331

cond.true255:                                     ; preds = %cond.end246
  %199 = load i8*, i8** %misc, align 8, !dbg !16331
  %200 = bitcast i8* %199 to i32*, !dbg !16331
  %add.ptr256 = getelementptr i32, i32* %200, i64 11, !dbg !16331
  %201 = load i32, i32* %add.ptr256, align 4, !dbg !16331
  %and257 = and i32 %201, 255, !dbg !16331
  %shl258 = shl i32 %and257, 24, !dbg !16331
  %202 = load i8*, i8** %misc, align 8, !dbg !16331
  %203 = bitcast i8* %202 to i32*, !dbg !16331
  %add.ptr259 = getelementptr i32, i32* %203, i64 11, !dbg !16331
  %204 = load i32, i32* %add.ptr259, align 4, !dbg !16331
  %and260 = and i32 %204, 65280, !dbg !16331
  %shl261 = shl i32 %and260, 8, !dbg !16331
  %or262 = or i32 %shl258, %shl261, !dbg !16331
  %205 = load i8*, i8** %misc, align 8, !dbg !16331
  %206 = bitcast i8* %205 to i32*, !dbg !16331
  %add.ptr263 = getelementptr i32, i32* %206, i64 11, !dbg !16331
  %207 = load i32, i32* %add.ptr263, align 4, !dbg !16331
  %and264 = and i32 %207, 16711680, !dbg !16331
  %shr265 = lshr i32 %and264, 8, !dbg !16331
  %or266 = or i32 %or262, %shr265, !dbg !16331
  %208 = load i8*, i8** %misc, align 8, !dbg !16331
  %209 = bitcast i8* %208 to i32*, !dbg !16331
  %add.ptr267 = getelementptr i32, i32* %209, i64 11, !dbg !16331
  %210 = load i32, i32* %add.ptr267, align 4, !dbg !16331
  %and268 = and i32 %210, -16777216, !dbg !16331
  %shr269 = lshr i32 %and268, 24, !dbg !16331
  %or270 = or i32 %or266, %shr269, !dbg !16331
  br label %cond.end274, !dbg !16331

cond.false271:                                    ; preds = %cond.end246
  %211 = load i8*, i8** %misc, align 8, !dbg !16331
  %212 = bitcast i8* %211 to i32*, !dbg !16331
  %add.ptr272 = getelementptr i32, i32* %212, i64 11, !dbg !16331
  %213 = load i32, i32* %add.ptr272, align 4, !dbg !16331
  %call273 = call i32 @__fswab32(i32 %213) #10, !dbg !16331
  br label %cond.end274, !dbg !16331

cond.end274:                                      ; preds = %cond.false271, %cond.true255
  %cond275 = phi i32 [ %or270, %cond.true255 ], [ %call273, %cond.false271 ], !dbg !16331
  %and276 = and i32 %cond275, 0, !dbg !16331
  %214 = load i32, i32* %_v169, align 4, !dbg !16331
  %shl277 = shl i32 %214, 0, !dbg !16331
  %or278 = or i32 %and276, %shl277, !dbg !16331
  %and279 = and i32 %or278, 16711680, !dbg !16331
  %shr280 = lshr i32 %and279, 8, !dbg !16331
  %or281 = or i32 %or253, %shr280, !dbg !16331
  %215 = load i8*, i8** %misc, align 8, !dbg !16331
  %216 = bitcast i8* %215 to i32*, !dbg !16331
  %add.ptr282 = getelementptr i32, i32* %216, i64 11, !dbg !16331
  %217 = load i32, i32* %add.ptr282, align 4, !dbg !16331
  %218 = call i1 @llvm.is.constant.i32(i32 %217), !dbg !16331
  br i1 %218, label %cond.true283, label %cond.false299, !dbg !16331

cond.true283:                                     ; preds = %cond.end274
  %219 = load i8*, i8** %misc, align 8, !dbg !16331
  %220 = bitcast i8* %219 to i32*, !dbg !16331
  %add.ptr284 = getelementptr i32, i32* %220, i64 11, !dbg !16331
  %221 = load i32, i32* %add.ptr284, align 4, !dbg !16331
  %and285 = and i32 %221, 255, !dbg !16331
  %shl286 = shl i32 %and285, 24, !dbg !16331
  %222 = load i8*, i8** %misc, align 8, !dbg !16331
  %223 = bitcast i8* %222 to i32*, !dbg !16331
  %add.ptr287 = getelementptr i32, i32* %223, i64 11, !dbg !16331
  %224 = load i32, i32* %add.ptr287, align 4, !dbg !16331
  %and288 = and i32 %224, 65280, !dbg !16331
  %shl289 = shl i32 %and288, 8, !dbg !16331
  %or290 = or i32 %shl286, %shl289, !dbg !16331
  %225 = load i8*, i8** %misc, align 8, !dbg !16331
  %226 = bitcast i8* %225 to i32*, !dbg !16331
  %add.ptr291 = getelementptr i32, i32* %226, i64 11, !dbg !16331
  %227 = load i32, i32* %add.ptr291, align 4, !dbg !16331
  %and292 = and i32 %227, 16711680, !dbg !16331
  %shr293 = lshr i32 %and292, 8, !dbg !16331
  %or294 = or i32 %or290, %shr293, !dbg !16331
  %228 = load i8*, i8** %misc, align 8, !dbg !16331
  %229 = bitcast i8* %228 to i32*, !dbg !16331
  %add.ptr295 = getelementptr i32, i32* %229, i64 11, !dbg !16331
  %230 = load i32, i32* %add.ptr295, align 4, !dbg !16331
  %and296 = and i32 %230, -16777216, !dbg !16331
  %shr297 = lshr i32 %and296, 24, !dbg !16331
  %or298 = or i32 %or294, %shr297, !dbg !16331
  br label %cond.end302, !dbg !16331

cond.false299:                                    ; preds = %cond.end274
  %231 = load i8*, i8** %misc, align 8, !dbg !16331
  %232 = bitcast i8* %231 to i32*, !dbg !16331
  %add.ptr300 = getelementptr i32, i32* %232, i64 11, !dbg !16331
  %233 = load i32, i32* %add.ptr300, align 4, !dbg !16331
  %call301 = call i32 @__fswab32(i32 %233) #10, !dbg !16331
  br label %cond.end302, !dbg !16331

cond.end302:                                      ; preds = %cond.false299, %cond.true283
  %cond303 = phi i32 [ %or298, %cond.true283 ], [ %call301, %cond.false299 ], !dbg !16331
  %and304 = and i32 %cond303, 0, !dbg !16331
  %234 = load i32, i32* %_v169, align 4, !dbg !16331
  %shl305 = shl i32 %234, 0, !dbg !16331
  %or306 = or i32 %and304, %shl305, !dbg !16331
  %and307 = and i32 %or306, -16777216, !dbg !16331
  %shr308 = lshr i32 %and307, 24, !dbg !16331
  %or309 = or i32 %or281, %shr308, !dbg !16331
  br label %cond.end337, !dbg !16331

cond.false310:                                    ; preds = %cond.end193
  %235 = load i8*, i8** %misc, align 8, !dbg !16331
  %236 = bitcast i8* %235 to i32*, !dbg !16331
  %add.ptr311 = getelementptr i32, i32* %236, i64 11, !dbg !16331
  %237 = load i32, i32* %add.ptr311, align 4, !dbg !16331
  %238 = call i1 @llvm.is.constant.i32(i32 %237), !dbg !16331
  br i1 %238, label %cond.true312, label %cond.false328, !dbg !16331

cond.true312:                                     ; preds = %cond.false310
  %239 = load i8*, i8** %misc, align 8, !dbg !16331
  %240 = bitcast i8* %239 to i32*, !dbg !16331
  %add.ptr313 = getelementptr i32, i32* %240, i64 11, !dbg !16331
  %241 = load i32, i32* %add.ptr313, align 4, !dbg !16331
  %and314 = and i32 %241, 255, !dbg !16331
  %shl315 = shl i32 %and314, 24, !dbg !16331
  %242 = load i8*, i8** %misc, align 8, !dbg !16331
  %243 = bitcast i8* %242 to i32*, !dbg !16331
  %add.ptr316 = getelementptr i32, i32* %243, i64 11, !dbg !16331
  %244 = load i32, i32* %add.ptr316, align 4, !dbg !16331
  %and317 = and i32 %244, 65280, !dbg !16331
  %shl318 = shl i32 %and317, 8, !dbg !16331
  %or319 = or i32 %shl315, %shl318, !dbg !16331
  %245 = load i8*, i8** %misc, align 8, !dbg !16331
  %246 = bitcast i8* %245 to i32*, !dbg !16331
  %add.ptr320 = getelementptr i32, i32* %246, i64 11, !dbg !16331
  %247 = load i32, i32* %add.ptr320, align 4, !dbg !16331
  %and321 = and i32 %247, 16711680, !dbg !16331
  %shr322 = lshr i32 %and321, 8, !dbg !16331
  %or323 = or i32 %or319, %shr322, !dbg !16331
  %248 = load i8*, i8** %misc, align 8, !dbg !16331
  %249 = bitcast i8* %248 to i32*, !dbg !16331
  %add.ptr324 = getelementptr i32, i32* %249, i64 11, !dbg !16331
  %250 = load i32, i32* %add.ptr324, align 4, !dbg !16331
  %and325 = and i32 %250, -16777216, !dbg !16331
  %shr326 = lshr i32 %and325, 24, !dbg !16331
  %or327 = or i32 %or323, %shr326, !dbg !16331
  br label %cond.end331, !dbg !16331

cond.false328:                                    ; preds = %cond.false310
  %251 = load i8*, i8** %misc, align 8, !dbg !16331
  %252 = bitcast i8* %251 to i32*, !dbg !16331
  %add.ptr329 = getelementptr i32, i32* %252, i64 11, !dbg !16331
  %253 = load i32, i32* %add.ptr329, align 4, !dbg !16331
  %call330 = call i32 @__fswab32(i32 %253) #10, !dbg !16331
  br label %cond.end331, !dbg !16331

cond.end331:                                      ; preds = %cond.false328, %cond.true312
  %cond332 = phi i32 [ %or327, %cond.true312 ], [ %call330, %cond.false328 ], !dbg !16331
  %and333 = and i32 %cond332, 0, !dbg !16331
  %254 = load i32, i32* %_v169, align 4, !dbg !16331
  %shl334 = shl i32 %254, 0, !dbg !16331
  %or335 = or i32 %and333, %shl334, !dbg !16331
  %call336 = call i32 @__fswab32(i32 %or335) #10, !dbg !16331
  br label %cond.end337, !dbg !16331

cond.end337:                                      ; preds = %cond.end331, %cond.end302
  %cond338 = phi i32 [ %or309, %cond.end302 ], [ %call336, %cond.end331 ], !dbg !16331
  %255 = load i8*, i8** %misc, align 8, !dbg !16331
  %256 = bitcast i8* %255 to i32*, !dbg !16331
  %add.ptr339 = getelementptr i32, i32* %256, i64 11, !dbg !16331
  store i32 %cond338, i32* %add.ptr339, align 4, !dbg !16331
  br label %do.end340, !dbg !16331

do.end340:                                        ; preds = %cond.end337
  %257 = load %struct.mlx5_flow_spec*, %struct.mlx5_flow_spec** %spec, align 8, !dbg !16334
  %match_criteria_enable = getelementptr inbounds %struct.mlx5_flow_spec, %struct.mlx5_flow_spec* %257, i32 0, i32 0, !dbg !16335
  store i8 8, i8* %match_criteria_enable, align 4, !dbg !16336
  br label %if.end691, !dbg !16337

if.else:                                          ; preds = %if.end
  %258 = load %struct.mlx5_flow_spec*, %struct.mlx5_flow_spec** %spec, align 8, !dbg !16338
  %match_value341 = getelementptr inbounds %struct.mlx5_flow_spec, %struct.mlx5_flow_spec* %258, i32 0, i32 2, !dbg !16338
  %arraydecay342 = getelementptr inbounds [128 x i32], [128 x i32]* %match_value341, i64 0, i64 0, !dbg !16338
  %259 = bitcast i32* %arraydecay342 to i8*, !dbg !16338
  %add.ptr343 = getelementptr i8, i8* %259, i64 64, !dbg !16338
  store i8* %add.ptr343, i8** %misc, align 8, !dbg !16340
  br label %do.body344, !dbg !16341

do.body344:                                       ; preds = %if.else
  call void @llvm.dbg.declare(metadata i32* %_v345, metadata !16342, metadata !DIExpression()), !dbg !16344
  %260 = load i16, i16* %vport.addr, align 2, !dbg !16344
  %conv = zext i16 %260 to i32, !dbg !16344
  store i32 %conv, i32* %_v345, align 4, !dbg !16344
  br label %do.body346, !dbg !16344

do.body346:                                       ; preds = %do.body344
  br label %do.end347, !dbg !16345

do.end347:                                        ; preds = %do.body346
  %261 = load i8*, i8** %misc, align 8, !dbg !16344
  %262 = bitcast i8* %261 to i32*, !dbg !16344
  %add.ptr348 = getelementptr i32, i32* %262, i64 1, !dbg !16344
  %263 = load i32, i32* %add.ptr348, align 4, !dbg !16344
  %264 = call i1 @llvm.is.constant.i32(i32 %263), !dbg !16344
  br i1 %264, label %cond.true349, label %cond.false365, !dbg !16344

cond.true349:                                     ; preds = %do.end347
  %265 = load i8*, i8** %misc, align 8, !dbg !16344
  %266 = bitcast i8* %265 to i32*, !dbg !16344
  %add.ptr350 = getelementptr i32, i32* %266, i64 1, !dbg !16344
  %267 = load i32, i32* %add.ptr350, align 4, !dbg !16344
  %and351 = and i32 %267, 255, !dbg !16344
  %shl352 = shl i32 %and351, 24, !dbg !16344
  %268 = load i8*, i8** %misc, align 8, !dbg !16344
  %269 = bitcast i8* %268 to i32*, !dbg !16344
  %add.ptr353 = getelementptr i32, i32* %269, i64 1, !dbg !16344
  %270 = load i32, i32* %add.ptr353, align 4, !dbg !16344
  %and354 = and i32 %270, 65280, !dbg !16344
  %shl355 = shl i32 %and354, 8, !dbg !16344
  %or356 = or i32 %shl352, %shl355, !dbg !16344
  %271 = load i8*, i8** %misc, align 8, !dbg !16344
  %272 = bitcast i8* %271 to i32*, !dbg !16344
  %add.ptr357 = getelementptr i32, i32* %272, i64 1, !dbg !16344
  %273 = load i32, i32* %add.ptr357, align 4, !dbg !16344
  %and358 = and i32 %273, 16711680, !dbg !16344
  %shr359 = lshr i32 %and358, 8, !dbg !16344
  %or360 = or i32 %or356, %shr359, !dbg !16344
  %274 = load i8*, i8** %misc, align 8, !dbg !16344
  %275 = bitcast i8* %274 to i32*, !dbg !16344
  %add.ptr361 = getelementptr i32, i32* %275, i64 1, !dbg !16344
  %276 = load i32, i32* %add.ptr361, align 4, !dbg !16344
  %and362 = and i32 %276, -16777216, !dbg !16344
  %shr363 = lshr i32 %and362, 24, !dbg !16344
  %or364 = or i32 %or360, %shr363, !dbg !16344
  br label %cond.end368, !dbg !16344

cond.false365:                                    ; preds = %do.end347
  %277 = load i8*, i8** %misc, align 8, !dbg !16344
  %278 = bitcast i8* %277 to i32*, !dbg !16344
  %add.ptr366 = getelementptr i32, i32* %278, i64 1, !dbg !16344
  %279 = load i32, i32* %add.ptr366, align 4, !dbg !16344
  %call367 = call i32 @__fswab32(i32 %279) #10, !dbg !16344
  br label %cond.end368, !dbg !16344

cond.end368:                                      ; preds = %cond.false365, %cond.true349
  %cond369 = phi i32 [ %or364, %cond.true349 ], [ %call367, %cond.false365 ], !dbg !16344
  %and370 = and i32 %cond369, -65536, !dbg !16344
  %280 = load i32, i32* %_v345, align 4, !dbg !16344
  %and371 = and i32 %280, 65535, !dbg !16344
  %shl372 = shl i32 %and371, 0, !dbg !16344
  %or373 = or i32 %and370, %shl372, !dbg !16344
  %281 = call i1 @llvm.is.constant.i32(i32 %or373), !dbg !16344
  br i1 %281, label %cond.true374, label %cond.false490, !dbg !16344

cond.true374:                                     ; preds = %cond.end368
  %282 = load i8*, i8** %misc, align 8, !dbg !16344
  %283 = bitcast i8* %282 to i32*, !dbg !16344
  %add.ptr375 = getelementptr i32, i32* %283, i64 1, !dbg !16344
  %284 = load i32, i32* %add.ptr375, align 4, !dbg !16344
  %285 = call i1 @llvm.is.constant.i32(i32 %284), !dbg !16344
  br i1 %285, label %cond.true376, label %cond.false392, !dbg !16344

cond.true376:                                     ; preds = %cond.true374
  %286 = load i8*, i8** %misc, align 8, !dbg !16344
  %287 = bitcast i8* %286 to i32*, !dbg !16344
  %add.ptr377 = getelementptr i32, i32* %287, i64 1, !dbg !16344
  %288 = load i32, i32* %add.ptr377, align 4, !dbg !16344
  %and378 = and i32 %288, 255, !dbg !16344
  %shl379 = shl i32 %and378, 24, !dbg !16344
  %289 = load i8*, i8** %misc, align 8, !dbg !16344
  %290 = bitcast i8* %289 to i32*, !dbg !16344
  %add.ptr380 = getelementptr i32, i32* %290, i64 1, !dbg !16344
  %291 = load i32, i32* %add.ptr380, align 4, !dbg !16344
  %and381 = and i32 %291, 65280, !dbg !16344
  %shl382 = shl i32 %and381, 8, !dbg !16344
  %or383 = or i32 %shl379, %shl382, !dbg !16344
  %292 = load i8*, i8** %misc, align 8, !dbg !16344
  %293 = bitcast i8* %292 to i32*, !dbg !16344
  %add.ptr384 = getelementptr i32, i32* %293, i64 1, !dbg !16344
  %294 = load i32, i32* %add.ptr384, align 4, !dbg !16344
  %and385 = and i32 %294, 16711680, !dbg !16344
  %shr386 = lshr i32 %and385, 8, !dbg !16344
  %or387 = or i32 %or383, %shr386, !dbg !16344
  %295 = load i8*, i8** %misc, align 8, !dbg !16344
  %296 = bitcast i8* %295 to i32*, !dbg !16344
  %add.ptr388 = getelementptr i32, i32* %296, i64 1, !dbg !16344
  %297 = load i32, i32* %add.ptr388, align 4, !dbg !16344
  %and389 = and i32 %297, -16777216, !dbg !16344
  %shr390 = lshr i32 %and389, 24, !dbg !16344
  %or391 = or i32 %or387, %shr390, !dbg !16344
  br label %cond.end395, !dbg !16344

cond.false392:                                    ; preds = %cond.true374
  %298 = load i8*, i8** %misc, align 8, !dbg !16344
  %299 = bitcast i8* %298 to i32*, !dbg !16344
  %add.ptr393 = getelementptr i32, i32* %299, i64 1, !dbg !16344
  %300 = load i32, i32* %add.ptr393, align 4, !dbg !16344
  %call394 = call i32 @__fswab32(i32 %300) #10, !dbg !16344
  br label %cond.end395, !dbg !16344

cond.end395:                                      ; preds = %cond.false392, %cond.true376
  %cond396 = phi i32 [ %or391, %cond.true376 ], [ %call394, %cond.false392 ], !dbg !16344
  %and397 = and i32 %cond396, -65536, !dbg !16344
  %301 = load i32, i32* %_v345, align 4, !dbg !16344
  %and398 = and i32 %301, 65535, !dbg !16344
  %shl399 = shl i32 %and398, 0, !dbg !16344
  %or400 = or i32 %and397, %shl399, !dbg !16344
  %and401 = and i32 %or400, 255, !dbg !16344
  %shl402 = shl i32 %and401, 24, !dbg !16344
  %302 = load i8*, i8** %misc, align 8, !dbg !16344
  %303 = bitcast i8* %302 to i32*, !dbg !16344
  %add.ptr403 = getelementptr i32, i32* %303, i64 1, !dbg !16344
  %304 = load i32, i32* %add.ptr403, align 4, !dbg !16344
  %305 = call i1 @llvm.is.constant.i32(i32 %304), !dbg !16344
  br i1 %305, label %cond.true404, label %cond.false420, !dbg !16344

cond.true404:                                     ; preds = %cond.end395
  %306 = load i8*, i8** %misc, align 8, !dbg !16344
  %307 = bitcast i8* %306 to i32*, !dbg !16344
  %add.ptr405 = getelementptr i32, i32* %307, i64 1, !dbg !16344
  %308 = load i32, i32* %add.ptr405, align 4, !dbg !16344
  %and406 = and i32 %308, 255, !dbg !16344
  %shl407 = shl i32 %and406, 24, !dbg !16344
  %309 = load i8*, i8** %misc, align 8, !dbg !16344
  %310 = bitcast i8* %309 to i32*, !dbg !16344
  %add.ptr408 = getelementptr i32, i32* %310, i64 1, !dbg !16344
  %311 = load i32, i32* %add.ptr408, align 4, !dbg !16344
  %and409 = and i32 %311, 65280, !dbg !16344
  %shl410 = shl i32 %and409, 8, !dbg !16344
  %or411 = or i32 %shl407, %shl410, !dbg !16344
  %312 = load i8*, i8** %misc, align 8, !dbg !16344
  %313 = bitcast i8* %312 to i32*, !dbg !16344
  %add.ptr412 = getelementptr i32, i32* %313, i64 1, !dbg !16344
  %314 = load i32, i32* %add.ptr412, align 4, !dbg !16344
  %and413 = and i32 %314, 16711680, !dbg !16344
  %shr414 = lshr i32 %and413, 8, !dbg !16344
  %or415 = or i32 %or411, %shr414, !dbg !16344
  %315 = load i8*, i8** %misc, align 8, !dbg !16344
  %316 = bitcast i8* %315 to i32*, !dbg !16344
  %add.ptr416 = getelementptr i32, i32* %316, i64 1, !dbg !16344
  %317 = load i32, i32* %add.ptr416, align 4, !dbg !16344
  %and417 = and i32 %317, -16777216, !dbg !16344
  %shr418 = lshr i32 %and417, 24, !dbg !16344
  %or419 = or i32 %or415, %shr418, !dbg !16344
  br label %cond.end423, !dbg !16344

cond.false420:                                    ; preds = %cond.end395
  %318 = load i8*, i8** %misc, align 8, !dbg !16344
  %319 = bitcast i8* %318 to i32*, !dbg !16344
  %add.ptr421 = getelementptr i32, i32* %319, i64 1, !dbg !16344
  %320 = load i32, i32* %add.ptr421, align 4, !dbg !16344
  %call422 = call i32 @__fswab32(i32 %320) #10, !dbg !16344
  br label %cond.end423, !dbg !16344

cond.end423:                                      ; preds = %cond.false420, %cond.true404
  %cond424 = phi i32 [ %or419, %cond.true404 ], [ %call422, %cond.false420 ], !dbg !16344
  %and425 = and i32 %cond424, -65536, !dbg !16344
  %321 = load i32, i32* %_v345, align 4, !dbg !16344
  %and426 = and i32 %321, 65535, !dbg !16344
  %shl427 = shl i32 %and426, 0, !dbg !16344
  %or428 = or i32 %and425, %shl427, !dbg !16344
  %and429 = and i32 %or428, 65280, !dbg !16344
  %shl430 = shl i32 %and429, 8, !dbg !16344
  %or431 = or i32 %shl402, %shl430, !dbg !16344
  %322 = load i8*, i8** %misc, align 8, !dbg !16344
  %323 = bitcast i8* %322 to i32*, !dbg !16344
  %add.ptr432 = getelementptr i32, i32* %323, i64 1, !dbg !16344
  %324 = load i32, i32* %add.ptr432, align 4, !dbg !16344
  %325 = call i1 @llvm.is.constant.i32(i32 %324), !dbg !16344
  br i1 %325, label %cond.true433, label %cond.false449, !dbg !16344

cond.true433:                                     ; preds = %cond.end423
  %326 = load i8*, i8** %misc, align 8, !dbg !16344
  %327 = bitcast i8* %326 to i32*, !dbg !16344
  %add.ptr434 = getelementptr i32, i32* %327, i64 1, !dbg !16344
  %328 = load i32, i32* %add.ptr434, align 4, !dbg !16344
  %and435 = and i32 %328, 255, !dbg !16344
  %shl436 = shl i32 %and435, 24, !dbg !16344
  %329 = load i8*, i8** %misc, align 8, !dbg !16344
  %330 = bitcast i8* %329 to i32*, !dbg !16344
  %add.ptr437 = getelementptr i32, i32* %330, i64 1, !dbg !16344
  %331 = load i32, i32* %add.ptr437, align 4, !dbg !16344
  %and438 = and i32 %331, 65280, !dbg !16344
  %shl439 = shl i32 %and438, 8, !dbg !16344
  %or440 = or i32 %shl436, %shl439, !dbg !16344
  %332 = load i8*, i8** %misc, align 8, !dbg !16344
  %333 = bitcast i8* %332 to i32*, !dbg !16344
  %add.ptr441 = getelementptr i32, i32* %333, i64 1, !dbg !16344
  %334 = load i32, i32* %add.ptr441, align 4, !dbg !16344
  %and442 = and i32 %334, 16711680, !dbg !16344
  %shr443 = lshr i32 %and442, 8, !dbg !16344
  %or444 = or i32 %or440, %shr443, !dbg !16344
  %335 = load i8*, i8** %misc, align 8, !dbg !16344
  %336 = bitcast i8* %335 to i32*, !dbg !16344
  %add.ptr445 = getelementptr i32, i32* %336, i64 1, !dbg !16344
  %337 = load i32, i32* %add.ptr445, align 4, !dbg !16344
  %and446 = and i32 %337, -16777216, !dbg !16344
  %shr447 = lshr i32 %and446, 24, !dbg !16344
  %or448 = or i32 %or444, %shr447, !dbg !16344
  br label %cond.end452, !dbg !16344

cond.false449:                                    ; preds = %cond.end423
  %338 = load i8*, i8** %misc, align 8, !dbg !16344
  %339 = bitcast i8* %338 to i32*, !dbg !16344
  %add.ptr450 = getelementptr i32, i32* %339, i64 1, !dbg !16344
  %340 = load i32, i32* %add.ptr450, align 4, !dbg !16344
  %call451 = call i32 @__fswab32(i32 %340) #10, !dbg !16344
  br label %cond.end452, !dbg !16344

cond.end452:                                      ; preds = %cond.false449, %cond.true433
  %cond453 = phi i32 [ %or448, %cond.true433 ], [ %call451, %cond.false449 ], !dbg !16344
  %and454 = and i32 %cond453, -65536, !dbg !16344
  %341 = load i32, i32* %_v345, align 4, !dbg !16344
  %and455 = and i32 %341, 65535, !dbg !16344
  %shl456 = shl i32 %and455, 0, !dbg !16344
  %or457 = or i32 %and454, %shl456, !dbg !16344
  %and458 = and i32 %or457, 16711680, !dbg !16344
  %shr459 = lshr i32 %and458, 8, !dbg !16344
  %or460 = or i32 %or431, %shr459, !dbg !16344
  %342 = load i8*, i8** %misc, align 8, !dbg !16344
  %343 = bitcast i8* %342 to i32*, !dbg !16344
  %add.ptr461 = getelementptr i32, i32* %343, i64 1, !dbg !16344
  %344 = load i32, i32* %add.ptr461, align 4, !dbg !16344
  %345 = call i1 @llvm.is.constant.i32(i32 %344), !dbg !16344
  br i1 %345, label %cond.true462, label %cond.false478, !dbg !16344

cond.true462:                                     ; preds = %cond.end452
  %346 = load i8*, i8** %misc, align 8, !dbg !16344
  %347 = bitcast i8* %346 to i32*, !dbg !16344
  %add.ptr463 = getelementptr i32, i32* %347, i64 1, !dbg !16344
  %348 = load i32, i32* %add.ptr463, align 4, !dbg !16344
  %and464 = and i32 %348, 255, !dbg !16344
  %shl465 = shl i32 %and464, 24, !dbg !16344
  %349 = load i8*, i8** %misc, align 8, !dbg !16344
  %350 = bitcast i8* %349 to i32*, !dbg !16344
  %add.ptr466 = getelementptr i32, i32* %350, i64 1, !dbg !16344
  %351 = load i32, i32* %add.ptr466, align 4, !dbg !16344
  %and467 = and i32 %351, 65280, !dbg !16344
  %shl468 = shl i32 %and467, 8, !dbg !16344
  %or469 = or i32 %shl465, %shl468, !dbg !16344
  %352 = load i8*, i8** %misc, align 8, !dbg !16344
  %353 = bitcast i8* %352 to i32*, !dbg !16344
  %add.ptr470 = getelementptr i32, i32* %353, i64 1, !dbg !16344
  %354 = load i32, i32* %add.ptr470, align 4, !dbg !16344
  %and471 = and i32 %354, 16711680, !dbg !16344
  %shr472 = lshr i32 %and471, 8, !dbg !16344
  %or473 = or i32 %or469, %shr472, !dbg !16344
  %355 = load i8*, i8** %misc, align 8, !dbg !16344
  %356 = bitcast i8* %355 to i32*, !dbg !16344
  %add.ptr474 = getelementptr i32, i32* %356, i64 1, !dbg !16344
  %357 = load i32, i32* %add.ptr474, align 4, !dbg !16344
  %and475 = and i32 %357, -16777216, !dbg !16344
  %shr476 = lshr i32 %and475, 24, !dbg !16344
  %or477 = or i32 %or473, %shr476, !dbg !16344
  br label %cond.end481, !dbg !16344

cond.false478:                                    ; preds = %cond.end452
  %358 = load i8*, i8** %misc, align 8, !dbg !16344
  %359 = bitcast i8* %358 to i32*, !dbg !16344
  %add.ptr479 = getelementptr i32, i32* %359, i64 1, !dbg !16344
  %360 = load i32, i32* %add.ptr479, align 4, !dbg !16344
  %call480 = call i32 @__fswab32(i32 %360) #10, !dbg !16344
  br label %cond.end481, !dbg !16344

cond.end481:                                      ; preds = %cond.false478, %cond.true462
  %cond482 = phi i32 [ %or477, %cond.true462 ], [ %call480, %cond.false478 ], !dbg !16344
  %and483 = and i32 %cond482, -65536, !dbg !16344
  %361 = load i32, i32* %_v345, align 4, !dbg !16344
  %and484 = and i32 %361, 65535, !dbg !16344
  %shl485 = shl i32 %and484, 0, !dbg !16344
  %or486 = or i32 %and483, %shl485, !dbg !16344
  %and487 = and i32 %or486, -16777216, !dbg !16344
  %shr488 = lshr i32 %and487, 24, !dbg !16344
  %or489 = or i32 %or460, %shr488, !dbg !16344
  br label %cond.end518, !dbg !16344

cond.false490:                                    ; preds = %cond.end368
  %362 = load i8*, i8** %misc, align 8, !dbg !16344
  %363 = bitcast i8* %362 to i32*, !dbg !16344
  %add.ptr491 = getelementptr i32, i32* %363, i64 1, !dbg !16344
  %364 = load i32, i32* %add.ptr491, align 4, !dbg !16344
  %365 = call i1 @llvm.is.constant.i32(i32 %364), !dbg !16344
  br i1 %365, label %cond.true492, label %cond.false508, !dbg !16344

cond.true492:                                     ; preds = %cond.false490
  %366 = load i8*, i8** %misc, align 8, !dbg !16344
  %367 = bitcast i8* %366 to i32*, !dbg !16344
  %add.ptr493 = getelementptr i32, i32* %367, i64 1, !dbg !16344
  %368 = load i32, i32* %add.ptr493, align 4, !dbg !16344
  %and494 = and i32 %368, 255, !dbg !16344
  %shl495 = shl i32 %and494, 24, !dbg !16344
  %369 = load i8*, i8** %misc, align 8, !dbg !16344
  %370 = bitcast i8* %369 to i32*, !dbg !16344
  %add.ptr496 = getelementptr i32, i32* %370, i64 1, !dbg !16344
  %371 = load i32, i32* %add.ptr496, align 4, !dbg !16344
  %and497 = and i32 %371, 65280, !dbg !16344
  %shl498 = shl i32 %and497, 8, !dbg !16344
  %or499 = or i32 %shl495, %shl498, !dbg !16344
  %372 = load i8*, i8** %misc, align 8, !dbg !16344
  %373 = bitcast i8* %372 to i32*, !dbg !16344
  %add.ptr500 = getelementptr i32, i32* %373, i64 1, !dbg !16344
  %374 = load i32, i32* %add.ptr500, align 4, !dbg !16344
  %and501 = and i32 %374, 16711680, !dbg !16344
  %shr502 = lshr i32 %and501, 8, !dbg !16344
  %or503 = or i32 %or499, %shr502, !dbg !16344
  %375 = load i8*, i8** %misc, align 8, !dbg !16344
  %376 = bitcast i8* %375 to i32*, !dbg !16344
  %add.ptr504 = getelementptr i32, i32* %376, i64 1, !dbg !16344
  %377 = load i32, i32* %add.ptr504, align 4, !dbg !16344
  %and505 = and i32 %377, -16777216, !dbg !16344
  %shr506 = lshr i32 %and505, 24, !dbg !16344
  %or507 = or i32 %or503, %shr506, !dbg !16344
  br label %cond.end511, !dbg !16344

cond.false508:                                    ; preds = %cond.false490
  %378 = load i8*, i8** %misc, align 8, !dbg !16344
  %379 = bitcast i8* %378 to i32*, !dbg !16344
  %add.ptr509 = getelementptr i32, i32* %379, i64 1, !dbg !16344
  %380 = load i32, i32* %add.ptr509, align 4, !dbg !16344
  %call510 = call i32 @__fswab32(i32 %380) #10, !dbg !16344
  br label %cond.end511, !dbg !16344

cond.end511:                                      ; preds = %cond.false508, %cond.true492
  %cond512 = phi i32 [ %or507, %cond.true492 ], [ %call510, %cond.false508 ], !dbg !16344
  %and513 = and i32 %cond512, -65536, !dbg !16344
  %381 = load i32, i32* %_v345, align 4, !dbg !16344
  %and514 = and i32 %381, 65535, !dbg !16344
  %shl515 = shl i32 %and514, 0, !dbg !16344
  %or516 = or i32 %and513, %shl515, !dbg !16344
  %call517 = call i32 @__fswab32(i32 %or516) #10, !dbg !16344
  br label %cond.end518, !dbg !16344

cond.end518:                                      ; preds = %cond.end511, %cond.end481
  %cond519 = phi i32 [ %or489, %cond.end481 ], [ %call517, %cond.end511 ], !dbg !16344
  %382 = load i8*, i8** %misc, align 8, !dbg !16344
  %383 = bitcast i8* %382 to i32*, !dbg !16344
  %add.ptr520 = getelementptr i32, i32* %383, i64 1, !dbg !16344
  store i32 %cond519, i32* %add.ptr520, align 4, !dbg !16344
  br label %do.end521, !dbg !16344

do.end521:                                        ; preds = %cond.end518
  %384 = load %struct.mlx5_flow_spec*, %struct.mlx5_flow_spec** %spec, align 8, !dbg !16347
  %match_criteria522 = getelementptr inbounds %struct.mlx5_flow_spec, %struct.mlx5_flow_spec* %384, i32 0, i32 1, !dbg !16347
  %arraydecay523 = getelementptr inbounds [128 x i32], [128 x i32]* %match_criteria522, i64 0, i64 0, !dbg !16347
  %385 = bitcast i32* %arraydecay523 to i8*, !dbg !16347
  %add.ptr524 = getelementptr i8, i8* %385, i64 64, !dbg !16347
  store i8* %add.ptr524, i8** %misc, align 8, !dbg !16348
  br label %do.body525, !dbg !16349

do.body525:                                       ; preds = %do.end521
  br label %do.body526, !dbg !16350

do.body526:                                       ; preds = %do.body525
  br label %do.end527, !dbg !16352

do.end527:                                        ; preds = %do.body526
  %386 = load i8*, i8** %misc, align 8, !dbg !16350
  %387 = bitcast i8* %386 to i32*, !dbg !16350
  %add.ptr528 = getelementptr i32, i32* %387, i64 1, !dbg !16350
  %388 = load i32, i32* %add.ptr528, align 4, !dbg !16350
  %389 = call i1 @llvm.is.constant.i32(i32 %388), !dbg !16350
  br i1 %389, label %cond.true529, label %cond.false545, !dbg !16350

cond.true529:                                     ; preds = %do.end527
  %390 = load i8*, i8** %misc, align 8, !dbg !16350
  %391 = bitcast i8* %390 to i32*, !dbg !16350
  %add.ptr530 = getelementptr i32, i32* %391, i64 1, !dbg !16350
  %392 = load i32, i32* %add.ptr530, align 4, !dbg !16350
  %and531 = and i32 %392, 255, !dbg !16350
  %shl532 = shl i32 %and531, 24, !dbg !16350
  %393 = load i8*, i8** %misc, align 8, !dbg !16350
  %394 = bitcast i8* %393 to i32*, !dbg !16350
  %add.ptr533 = getelementptr i32, i32* %394, i64 1, !dbg !16350
  %395 = load i32, i32* %add.ptr533, align 4, !dbg !16350
  %and534 = and i32 %395, 65280, !dbg !16350
  %shl535 = shl i32 %and534, 8, !dbg !16350
  %or536 = or i32 %shl532, %shl535, !dbg !16350
  %396 = load i8*, i8** %misc, align 8, !dbg !16350
  %397 = bitcast i8* %396 to i32*, !dbg !16350
  %add.ptr537 = getelementptr i32, i32* %397, i64 1, !dbg !16350
  %398 = load i32, i32* %add.ptr537, align 4, !dbg !16350
  %and538 = and i32 %398, 16711680, !dbg !16350
  %shr539 = lshr i32 %and538, 8, !dbg !16350
  %or540 = or i32 %or536, %shr539, !dbg !16350
  %399 = load i8*, i8** %misc, align 8, !dbg !16350
  %400 = bitcast i8* %399 to i32*, !dbg !16350
  %add.ptr541 = getelementptr i32, i32* %400, i64 1, !dbg !16350
  %401 = load i32, i32* %add.ptr541, align 4, !dbg !16350
  %and542 = and i32 %401, -16777216, !dbg !16350
  %shr543 = lshr i32 %and542, 24, !dbg !16350
  %or544 = or i32 %or540, %shr543, !dbg !16350
  br label %cond.end548, !dbg !16350

cond.false545:                                    ; preds = %do.end527
  %402 = load i8*, i8** %misc, align 8, !dbg !16350
  %403 = bitcast i8* %402 to i32*, !dbg !16350
  %add.ptr546 = getelementptr i32, i32* %403, i64 1, !dbg !16350
  %404 = load i32, i32* %add.ptr546, align 4, !dbg !16350
  %call547 = call i32 @__fswab32(i32 %404) #10, !dbg !16350
  br label %cond.end548, !dbg !16350

cond.end548:                                      ; preds = %cond.false545, %cond.true529
  %cond549 = phi i32 [ %or544, %cond.true529 ], [ %call547, %cond.false545 ], !dbg !16350
  %and550 = and i32 %cond549, -65536, !dbg !16350
  %or551 = or i32 %and550, 65535, !dbg !16350
  %405 = call i1 @llvm.is.constant.i32(i32 %or551), !dbg !16350
  br i1 %405, label %cond.true552, label %cond.false660, !dbg !16350

cond.true552:                                     ; preds = %cond.end548
  %406 = load i8*, i8** %misc, align 8, !dbg !16350
  %407 = bitcast i8* %406 to i32*, !dbg !16350
  %add.ptr553 = getelementptr i32, i32* %407, i64 1, !dbg !16350
  %408 = load i32, i32* %add.ptr553, align 4, !dbg !16350
  %409 = call i1 @llvm.is.constant.i32(i32 %408), !dbg !16350
  br i1 %409, label %cond.true554, label %cond.false570, !dbg !16350

cond.true554:                                     ; preds = %cond.true552
  %410 = load i8*, i8** %misc, align 8, !dbg !16350
  %411 = bitcast i8* %410 to i32*, !dbg !16350
  %add.ptr555 = getelementptr i32, i32* %411, i64 1, !dbg !16350
  %412 = load i32, i32* %add.ptr555, align 4, !dbg !16350
  %and556 = and i32 %412, 255, !dbg !16350
  %shl557 = shl i32 %and556, 24, !dbg !16350
  %413 = load i8*, i8** %misc, align 8, !dbg !16350
  %414 = bitcast i8* %413 to i32*, !dbg !16350
  %add.ptr558 = getelementptr i32, i32* %414, i64 1, !dbg !16350
  %415 = load i32, i32* %add.ptr558, align 4, !dbg !16350
  %and559 = and i32 %415, 65280, !dbg !16350
  %shl560 = shl i32 %and559, 8, !dbg !16350
  %or561 = or i32 %shl557, %shl560, !dbg !16350
  %416 = load i8*, i8** %misc, align 8, !dbg !16350
  %417 = bitcast i8* %416 to i32*, !dbg !16350
  %add.ptr562 = getelementptr i32, i32* %417, i64 1, !dbg !16350
  %418 = load i32, i32* %add.ptr562, align 4, !dbg !16350
  %and563 = and i32 %418, 16711680, !dbg !16350
  %shr564 = lshr i32 %and563, 8, !dbg !16350
  %or565 = or i32 %or561, %shr564, !dbg !16350
  %419 = load i8*, i8** %misc, align 8, !dbg !16350
  %420 = bitcast i8* %419 to i32*, !dbg !16350
  %add.ptr566 = getelementptr i32, i32* %420, i64 1, !dbg !16350
  %421 = load i32, i32* %add.ptr566, align 4, !dbg !16350
  %and567 = and i32 %421, -16777216, !dbg !16350
  %shr568 = lshr i32 %and567, 24, !dbg !16350
  %or569 = or i32 %or565, %shr568, !dbg !16350
  br label %cond.end573, !dbg !16350

cond.false570:                                    ; preds = %cond.true552
  %422 = load i8*, i8** %misc, align 8, !dbg !16350
  %423 = bitcast i8* %422 to i32*, !dbg !16350
  %add.ptr571 = getelementptr i32, i32* %423, i64 1, !dbg !16350
  %424 = load i32, i32* %add.ptr571, align 4, !dbg !16350
  %call572 = call i32 @__fswab32(i32 %424) #10, !dbg !16350
  br label %cond.end573, !dbg !16350

cond.end573:                                      ; preds = %cond.false570, %cond.true554
  %cond574 = phi i32 [ %or569, %cond.true554 ], [ %call572, %cond.false570 ], !dbg !16350
  %and575 = and i32 %cond574, -65536, !dbg !16350
  %or576 = or i32 %and575, 65535, !dbg !16350
  %and577 = and i32 %or576, 255, !dbg !16350
  %shl578 = shl i32 %and577, 24, !dbg !16350
  %425 = load i8*, i8** %misc, align 8, !dbg !16350
  %426 = bitcast i8* %425 to i32*, !dbg !16350
  %add.ptr579 = getelementptr i32, i32* %426, i64 1, !dbg !16350
  %427 = load i32, i32* %add.ptr579, align 4, !dbg !16350
  %428 = call i1 @llvm.is.constant.i32(i32 %427), !dbg !16350
  br i1 %428, label %cond.true580, label %cond.false596, !dbg !16350

cond.true580:                                     ; preds = %cond.end573
  %429 = load i8*, i8** %misc, align 8, !dbg !16350
  %430 = bitcast i8* %429 to i32*, !dbg !16350
  %add.ptr581 = getelementptr i32, i32* %430, i64 1, !dbg !16350
  %431 = load i32, i32* %add.ptr581, align 4, !dbg !16350
  %and582 = and i32 %431, 255, !dbg !16350
  %shl583 = shl i32 %and582, 24, !dbg !16350
  %432 = load i8*, i8** %misc, align 8, !dbg !16350
  %433 = bitcast i8* %432 to i32*, !dbg !16350
  %add.ptr584 = getelementptr i32, i32* %433, i64 1, !dbg !16350
  %434 = load i32, i32* %add.ptr584, align 4, !dbg !16350
  %and585 = and i32 %434, 65280, !dbg !16350
  %shl586 = shl i32 %and585, 8, !dbg !16350
  %or587 = or i32 %shl583, %shl586, !dbg !16350
  %435 = load i8*, i8** %misc, align 8, !dbg !16350
  %436 = bitcast i8* %435 to i32*, !dbg !16350
  %add.ptr588 = getelementptr i32, i32* %436, i64 1, !dbg !16350
  %437 = load i32, i32* %add.ptr588, align 4, !dbg !16350
  %and589 = and i32 %437, 16711680, !dbg !16350
  %shr590 = lshr i32 %and589, 8, !dbg !16350
  %or591 = or i32 %or587, %shr590, !dbg !16350
  %438 = load i8*, i8** %misc, align 8, !dbg !16350
  %439 = bitcast i8* %438 to i32*, !dbg !16350
  %add.ptr592 = getelementptr i32, i32* %439, i64 1, !dbg !16350
  %440 = load i32, i32* %add.ptr592, align 4, !dbg !16350
  %and593 = and i32 %440, -16777216, !dbg !16350
  %shr594 = lshr i32 %and593, 24, !dbg !16350
  %or595 = or i32 %or591, %shr594, !dbg !16350
  br label %cond.end599, !dbg !16350

cond.false596:                                    ; preds = %cond.end573
  %441 = load i8*, i8** %misc, align 8, !dbg !16350
  %442 = bitcast i8* %441 to i32*, !dbg !16350
  %add.ptr597 = getelementptr i32, i32* %442, i64 1, !dbg !16350
  %443 = load i32, i32* %add.ptr597, align 4, !dbg !16350
  %call598 = call i32 @__fswab32(i32 %443) #10, !dbg !16350
  br label %cond.end599, !dbg !16350

cond.end599:                                      ; preds = %cond.false596, %cond.true580
  %cond600 = phi i32 [ %or595, %cond.true580 ], [ %call598, %cond.false596 ], !dbg !16350
  %and601 = and i32 %cond600, -65536, !dbg !16350
  %or602 = or i32 %and601, 65535, !dbg !16350
  %and603 = and i32 %or602, 65280, !dbg !16350
  %shl604 = shl i32 %and603, 8, !dbg !16350
  %or605 = or i32 %shl578, %shl604, !dbg !16350
  %444 = load i8*, i8** %misc, align 8, !dbg !16350
  %445 = bitcast i8* %444 to i32*, !dbg !16350
  %add.ptr606 = getelementptr i32, i32* %445, i64 1, !dbg !16350
  %446 = load i32, i32* %add.ptr606, align 4, !dbg !16350
  %447 = call i1 @llvm.is.constant.i32(i32 %446), !dbg !16350
  br i1 %447, label %cond.true607, label %cond.false623, !dbg !16350

cond.true607:                                     ; preds = %cond.end599
  %448 = load i8*, i8** %misc, align 8, !dbg !16350
  %449 = bitcast i8* %448 to i32*, !dbg !16350
  %add.ptr608 = getelementptr i32, i32* %449, i64 1, !dbg !16350
  %450 = load i32, i32* %add.ptr608, align 4, !dbg !16350
  %and609 = and i32 %450, 255, !dbg !16350
  %shl610 = shl i32 %and609, 24, !dbg !16350
  %451 = load i8*, i8** %misc, align 8, !dbg !16350
  %452 = bitcast i8* %451 to i32*, !dbg !16350
  %add.ptr611 = getelementptr i32, i32* %452, i64 1, !dbg !16350
  %453 = load i32, i32* %add.ptr611, align 4, !dbg !16350
  %and612 = and i32 %453, 65280, !dbg !16350
  %shl613 = shl i32 %and612, 8, !dbg !16350
  %or614 = or i32 %shl610, %shl613, !dbg !16350
  %454 = load i8*, i8** %misc, align 8, !dbg !16350
  %455 = bitcast i8* %454 to i32*, !dbg !16350
  %add.ptr615 = getelementptr i32, i32* %455, i64 1, !dbg !16350
  %456 = load i32, i32* %add.ptr615, align 4, !dbg !16350
  %and616 = and i32 %456, 16711680, !dbg !16350
  %shr617 = lshr i32 %and616, 8, !dbg !16350
  %or618 = or i32 %or614, %shr617, !dbg !16350
  %457 = load i8*, i8** %misc, align 8, !dbg !16350
  %458 = bitcast i8* %457 to i32*, !dbg !16350
  %add.ptr619 = getelementptr i32, i32* %458, i64 1, !dbg !16350
  %459 = load i32, i32* %add.ptr619, align 4, !dbg !16350
  %and620 = and i32 %459, -16777216, !dbg !16350
  %shr621 = lshr i32 %and620, 24, !dbg !16350
  %or622 = or i32 %or618, %shr621, !dbg !16350
  br label %cond.end626, !dbg !16350

cond.false623:                                    ; preds = %cond.end599
  %460 = load i8*, i8** %misc, align 8, !dbg !16350
  %461 = bitcast i8* %460 to i32*, !dbg !16350
  %add.ptr624 = getelementptr i32, i32* %461, i64 1, !dbg !16350
  %462 = load i32, i32* %add.ptr624, align 4, !dbg !16350
  %call625 = call i32 @__fswab32(i32 %462) #10, !dbg !16350
  br label %cond.end626, !dbg !16350

cond.end626:                                      ; preds = %cond.false623, %cond.true607
  %cond627 = phi i32 [ %or622, %cond.true607 ], [ %call625, %cond.false623 ], !dbg !16350
  %and628 = and i32 %cond627, -65536, !dbg !16350
  %or629 = or i32 %and628, 65535, !dbg !16350
  %and630 = and i32 %or629, 16711680, !dbg !16350
  %shr631 = lshr i32 %and630, 8, !dbg !16350
  %or632 = or i32 %or605, %shr631, !dbg !16350
  %463 = load i8*, i8** %misc, align 8, !dbg !16350
  %464 = bitcast i8* %463 to i32*, !dbg !16350
  %add.ptr633 = getelementptr i32, i32* %464, i64 1, !dbg !16350
  %465 = load i32, i32* %add.ptr633, align 4, !dbg !16350
  %466 = call i1 @llvm.is.constant.i32(i32 %465), !dbg !16350
  br i1 %466, label %cond.true634, label %cond.false650, !dbg !16350

cond.true634:                                     ; preds = %cond.end626
  %467 = load i8*, i8** %misc, align 8, !dbg !16350
  %468 = bitcast i8* %467 to i32*, !dbg !16350
  %add.ptr635 = getelementptr i32, i32* %468, i64 1, !dbg !16350
  %469 = load i32, i32* %add.ptr635, align 4, !dbg !16350
  %and636 = and i32 %469, 255, !dbg !16350
  %shl637 = shl i32 %and636, 24, !dbg !16350
  %470 = load i8*, i8** %misc, align 8, !dbg !16350
  %471 = bitcast i8* %470 to i32*, !dbg !16350
  %add.ptr638 = getelementptr i32, i32* %471, i64 1, !dbg !16350
  %472 = load i32, i32* %add.ptr638, align 4, !dbg !16350
  %and639 = and i32 %472, 65280, !dbg !16350
  %shl640 = shl i32 %and639, 8, !dbg !16350
  %or641 = or i32 %shl637, %shl640, !dbg !16350
  %473 = load i8*, i8** %misc, align 8, !dbg !16350
  %474 = bitcast i8* %473 to i32*, !dbg !16350
  %add.ptr642 = getelementptr i32, i32* %474, i64 1, !dbg !16350
  %475 = load i32, i32* %add.ptr642, align 4, !dbg !16350
  %and643 = and i32 %475, 16711680, !dbg !16350
  %shr644 = lshr i32 %and643, 8, !dbg !16350
  %or645 = or i32 %or641, %shr644, !dbg !16350
  %476 = load i8*, i8** %misc, align 8, !dbg !16350
  %477 = bitcast i8* %476 to i32*, !dbg !16350
  %add.ptr646 = getelementptr i32, i32* %477, i64 1, !dbg !16350
  %478 = load i32, i32* %add.ptr646, align 4, !dbg !16350
  %and647 = and i32 %478, -16777216, !dbg !16350
  %shr648 = lshr i32 %and647, 24, !dbg !16350
  %or649 = or i32 %or645, %shr648, !dbg !16350
  br label %cond.end653, !dbg !16350

cond.false650:                                    ; preds = %cond.end626
  %479 = load i8*, i8** %misc, align 8, !dbg !16350
  %480 = bitcast i8* %479 to i32*, !dbg !16350
  %add.ptr651 = getelementptr i32, i32* %480, i64 1, !dbg !16350
  %481 = load i32, i32* %add.ptr651, align 4, !dbg !16350
  %call652 = call i32 @__fswab32(i32 %481) #10, !dbg !16350
  br label %cond.end653, !dbg !16350

cond.end653:                                      ; preds = %cond.false650, %cond.true634
  %cond654 = phi i32 [ %or649, %cond.true634 ], [ %call652, %cond.false650 ], !dbg !16350
  %and655 = and i32 %cond654, -65536, !dbg !16350
  %or656 = or i32 %and655, 65535, !dbg !16350
  %and657 = and i32 %or656, -16777216, !dbg !16350
  %shr658 = lshr i32 %and657, 24, !dbg !16350
  %or659 = or i32 %or632, %shr658, !dbg !16350
  br label %cond.end686, !dbg !16350

cond.false660:                                    ; preds = %cond.end548
  %482 = load i8*, i8** %misc, align 8, !dbg !16350
  %483 = bitcast i8* %482 to i32*, !dbg !16350
  %add.ptr661 = getelementptr i32, i32* %483, i64 1, !dbg !16350
  %484 = load i32, i32* %add.ptr661, align 4, !dbg !16350
  %485 = call i1 @llvm.is.constant.i32(i32 %484), !dbg !16350
  br i1 %485, label %cond.true662, label %cond.false678, !dbg !16350

cond.true662:                                     ; preds = %cond.false660
  %486 = load i8*, i8** %misc, align 8, !dbg !16350
  %487 = bitcast i8* %486 to i32*, !dbg !16350
  %add.ptr663 = getelementptr i32, i32* %487, i64 1, !dbg !16350
  %488 = load i32, i32* %add.ptr663, align 4, !dbg !16350
  %and664 = and i32 %488, 255, !dbg !16350
  %shl665 = shl i32 %and664, 24, !dbg !16350
  %489 = load i8*, i8** %misc, align 8, !dbg !16350
  %490 = bitcast i8* %489 to i32*, !dbg !16350
  %add.ptr666 = getelementptr i32, i32* %490, i64 1, !dbg !16350
  %491 = load i32, i32* %add.ptr666, align 4, !dbg !16350
  %and667 = and i32 %491, 65280, !dbg !16350
  %shl668 = shl i32 %and667, 8, !dbg !16350
  %or669 = or i32 %shl665, %shl668, !dbg !16350
  %492 = load i8*, i8** %misc, align 8, !dbg !16350
  %493 = bitcast i8* %492 to i32*, !dbg !16350
  %add.ptr670 = getelementptr i32, i32* %493, i64 1, !dbg !16350
  %494 = load i32, i32* %add.ptr670, align 4, !dbg !16350
  %and671 = and i32 %494, 16711680, !dbg !16350
  %shr672 = lshr i32 %and671, 8, !dbg !16350
  %or673 = or i32 %or669, %shr672, !dbg !16350
  %495 = load i8*, i8** %misc, align 8, !dbg !16350
  %496 = bitcast i8* %495 to i32*, !dbg !16350
  %add.ptr674 = getelementptr i32, i32* %496, i64 1, !dbg !16350
  %497 = load i32, i32* %add.ptr674, align 4, !dbg !16350
  %and675 = and i32 %497, -16777216, !dbg !16350
  %shr676 = lshr i32 %and675, 24, !dbg !16350
  %or677 = or i32 %or673, %shr676, !dbg !16350
  br label %cond.end681, !dbg !16350

cond.false678:                                    ; preds = %cond.false660
  %498 = load i8*, i8** %misc, align 8, !dbg !16350
  %499 = bitcast i8* %498 to i32*, !dbg !16350
  %add.ptr679 = getelementptr i32, i32* %499, i64 1, !dbg !16350
  %500 = load i32, i32* %add.ptr679, align 4, !dbg !16350
  %call680 = call i32 @__fswab32(i32 %500) #10, !dbg !16350
  br label %cond.end681, !dbg !16350

cond.end681:                                      ; preds = %cond.false678, %cond.true662
  %cond682 = phi i32 [ %or677, %cond.true662 ], [ %call680, %cond.false678 ], !dbg !16350
  %and683 = and i32 %cond682, -65536, !dbg !16350
  %or684 = or i32 %and683, 65535, !dbg !16350
  %call685 = call i32 @__fswab32(i32 %or684) #10, !dbg !16350
  br label %cond.end686, !dbg !16350

cond.end686:                                      ; preds = %cond.end681, %cond.end653
  %cond687 = phi i32 [ %or659, %cond.end653 ], [ %call685, %cond.end681 ], !dbg !16350
  %501 = load i8*, i8** %misc, align 8, !dbg !16350
  %502 = bitcast i8* %501 to i32*, !dbg !16350
  %add.ptr688 = getelementptr i32, i32* %502, i64 1, !dbg !16350
  store i32 %cond687, i32* %add.ptr688, align 4, !dbg !16350
  br label %do.end689, !dbg !16350

do.end689:                                        ; preds = %cond.end686
  %503 = load %struct.mlx5_flow_spec*, %struct.mlx5_flow_spec** %spec, align 8, !dbg !16354
  %match_criteria_enable690 = getelementptr inbounds %struct.mlx5_flow_spec, %struct.mlx5_flow_spec* %503, i32 0, i32 0, !dbg !16355
  store i8 2, i8* %match_criteria_enable690, align 4, !dbg !16356
  br label %if.end691

if.end691:                                        ; preds = %do.end689, %do.end340
  %action = getelementptr inbounds %struct.mlx5_flow_act, %struct.mlx5_flow_act* %flow_act, i32 0, i32 0, !dbg !16357
  store i32 4, i32* %action, align 8, !dbg !16358
  %504 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !16359
  %offloads = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %504, i32 0, i32 13, !dbg !16360
  %ft_offloads = getelementptr inbounds %struct.mlx5_esw_offload, %struct.mlx5_esw_offload* %offloads, i32 0, i32 3, !dbg !16361
  %505 = load %struct.mlx5_flow_table*, %struct.mlx5_flow_table** %ft_offloads, align 8, !dbg !16361
  %506 = load %struct.mlx5_flow_spec*, %struct.mlx5_flow_spec** %spec, align 8, !dbg !16362
  %507 = load %struct.mlx5_flow_destination*, %struct.mlx5_flow_destination** %dest.addr, align 8, !dbg !16363
  %call692 = call %struct.mlx5_flow_handle* @mlx5_add_flow_rules(%struct.mlx5_flow_table* %505, %struct.mlx5_flow_spec* %506, %struct.mlx5_flow_act* %flow_act, %struct.mlx5_flow_destination* %507, i32 1) #8, !dbg !16364
  store %struct.mlx5_flow_handle* %call692, %struct.mlx5_flow_handle** %flow_rule, align 8, !dbg !16365
  %508 = load %struct.mlx5_flow_handle*, %struct.mlx5_flow_handle** %flow_rule, align 8, !dbg !16366
  %509 = bitcast %struct.mlx5_flow_handle* %508 to i8*, !dbg !16366
  %call693 = call zeroext i1 @IS_ERR(i8* %509) #8, !dbg !16368
  br i1 %call693, label %if.then694, label %if.end696, !dbg !16369

if.then694:                                       ; preds = %if.end691
  %510 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !16370
  %dev = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %510, i32 0, i32 0, !dbg !16370
  %511 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !16370
  %device = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %511, i32 0, i32 0, !dbg !16370
  %512 = load %struct.device*, %struct.device** %device, align 8, !dbg !16370
  %513 = load %struct.mlx5_flow_handle*, %struct.mlx5_flow_handle** %flow_rule, align 8, !dbg !16370
  %514 = bitcast %struct.mlx5_flow_handle* %513 to i8*, !dbg !16370
  %call695 = call i64 @PTR_ERR(i8* %514) #8, !dbg !16370
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %512, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.2, i64 0, i64 0), i64 %call695) #9, !dbg !16370
  br label %out, !dbg !16372

if.end696:                                        ; preds = %if.end691
  br label %out, !dbg !16373

out:                                              ; preds = %if.end696, %if.then694, %if.then
  call void @llvm.dbg.label(metadata !16374), !dbg !16375
  %515 = load %struct.mlx5_flow_spec*, %struct.mlx5_flow_spec** %spec, align 8, !dbg !16376
  %516 = bitcast %struct.mlx5_flow_spec* %515 to i8*, !dbg !16376
  call void @kvfree(i8* %516) #8, !dbg !16377
  %517 = load %struct.mlx5_flow_handle*, %struct.mlx5_flow_handle** %flow_rule, align 8, !dbg !16378
  ret %struct.mlx5_flow_handle* %517, !dbg !16379
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local zeroext i1 @mlx5_eswitch_vport_match_metadata_enabled(%struct.mlx5_eswitch* %esw) #0 !dbg !16380 {
entry:
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !16385, metadata !DIExpression()), !dbg !16386
  %0 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !16387
  %flags = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %0, i32 0, i32 7, !dbg !16388
  %1 = load i32, i32* %flags, align 8, !dbg !16388
  %and = and i32 %1, 1, !dbg !16389
  %tobool = icmp ne i32 %and, 0, !dbg !16390
  %lnot = xor i1 %tobool, true, !dbg !16390
  %lnot1 = xor i1 %lnot, true, !dbg !16391
  ret i1 %lnot1, !dbg !16392
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @mlx5_eswitch_get_vport_metadata_for_match(%struct.mlx5_eswitch* %esw, i16 zeroext %vport_num) #0 !dbg !16393 {
entry:
  %retval = alloca i32, align 4
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  %vport_num.addr = alloca i16, align 2
  %vport = alloca %struct.mlx5_vport*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !16396, metadata !DIExpression()), !dbg !16397
  store i16 %vport_num, i16* %vport_num.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %vport_num.addr, metadata !16398, metadata !DIExpression()), !dbg !16399
  call void @llvm.dbg.declare(metadata %struct.mlx5_vport** %vport, metadata !16400, metadata !DIExpression()), !dbg !16401
  %0 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !16402
  %1 = load i16, i16* %vport_num.addr, align 2, !dbg !16403
  %call = call %struct.mlx5_vport* @mlx5_eswitch_get_vport(%struct.mlx5_eswitch* %0, i16 zeroext %1) #8, !dbg !16404
  store %struct.mlx5_vport* %call, %struct.mlx5_vport** %vport, align 8, !dbg !16401
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !16405, metadata !DIExpression()), !dbg !16408
  %2 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport, align 8, !dbg !16408
  %3 = bitcast %struct.mlx5_vport* %2 to i8*, !dbg !16408
  %call1 = call zeroext i1 @IS_ERR(i8* %3) #8, !dbg !16408
  %lnot = xor i1 %call1, true, !dbg !16408
  %lnot2 = xor i1 %lnot, true, !dbg !16408
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !16408
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !16408
  %4 = load i32, i32* %__ret_warn_on, align 4, !dbg !16409
  %tobool = icmp ne i32 %4, 0, !dbg !16409
  %lnot3 = xor i1 %tobool, true, !dbg !16409
  %lnot5 = xor i1 %lnot3, true, !dbg !16409
  %lnot.ext6 = zext i1 %lnot5 to i32, !dbg !16409
  %conv = sext i32 %lnot.ext6 to i64, !dbg !16409
  %tobool7 = icmp ne i64 %conv, 0, !dbg !16409
  br i1 %tobool7, label %if.then, label %if.end, !dbg !16408

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !16409

do.body:                                          ; preds = %if.then
  br label %do.body8, !dbg !16411

do.body8:                                         ; preds = %do.body
  br label %do.end, !dbg !16413

do.end:                                           ; preds = %do.body8
  br label %do.body9, !dbg !16411

do.body9:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.7, i64 0, i64 0), i32 2822, i32 2307, i64 12) #12, !dbg !16415, !srcloc !16417
  br label %do.end10, !dbg !16415

do.end10:                                         ; preds = %do.body9
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 725) #12, !dbg !16418, !srcloc !16420
  br label %do.body11, !dbg !16411

do.body11:                                        ; preds = %do.end10
  br label %do.end12, !dbg !16421

do.end12:                                         ; preds = %do.body11
  br label %do.end13, !dbg !16411

do.end13:                                         ; preds = %do.end12
  br label %if.end, !dbg !16411

if.end:                                           ; preds = %do.end13, %entry
  %5 = load i32, i32* %__ret_warn_on, align 4, !dbg !16408
  %tobool14 = icmp ne i32 %5, 0, !dbg !16408
  %lnot15 = xor i1 %tobool14, true, !dbg !16408
  %lnot17 = xor i1 %lnot15, true, !dbg !16408
  %lnot.ext18 = zext i1 %lnot17 to i32, !dbg !16408
  %conv19 = sext i32 %lnot.ext18 to i64, !dbg !16408
  store i64 %conv19, i64* %tmp, align 8, !dbg !16409
  %6 = load i64, i64* %tmp, align 8, !dbg !16408
  %tobool20 = icmp ne i64 %6, 0, !dbg !16423
  br i1 %tobool20, label %if.then21, label %if.end22, !dbg !16424

if.then21:                                        ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !16425
  br label %return, !dbg !16425

if.end22:                                         ; preds = %if.end
  %7 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport, align 8, !dbg !16426
  %metadata = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %7, i32 0, i32 10, !dbg !16427
  %8 = load i32, i32* %metadata, align 4, !dbg !16427
  %shl = shl i32 %8, 16, !dbg !16428
  store i32 %shl, i32* %retval, align 4, !dbg !16429
  br label %return, !dbg !16429

return:                                           ; preds = %if.end22, %if.then21
  %9 = load i32, i32* %retval, align 4, !dbg !16430
  ret i32 %9, !dbg !16430
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlx5_eswitch_get_vport_metadata_mask() #0 !dbg !16431 {
entry:
  ret i32 -65536, !dbg !16434
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @esw_offloads_cleanup_reps(%struct.mlx5_eswitch* %esw) #0 !dbg !16435 {
entry:
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !16436, metadata !DIExpression()), !dbg !16437
  %0 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !16438
  %offloads = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %0, i32 0, i32 13, !dbg !16439
  %vport_reps = getelementptr inbounds %struct.mlx5_esw_offload, %struct.mlx5_esw_offload* %offloads, i32 0, i32 5, !dbg !16440
  %1 = load %struct.mlx5_eswitch_rep*, %struct.mlx5_eswitch_rep** %vport_reps, align 8, !dbg !16440
  %2 = bitcast %struct.mlx5_eswitch_rep* %1 to i8*, !dbg !16438
  call void @kfree(i8* %2) #8, !dbg !16441
  ret void, !dbg !16442
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @esw_offloads_init_reps(%struct.mlx5_eswitch* %esw) #0 !dbg !16443 {
entry:
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !16444, metadata !DIExpression()), !dbg !16449
  %i.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i.i, metadata !16458, metadata !DIExpression()), !dbg !16459
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !16460, metadata !DIExpression()), !dbg !16462
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !16464, metadata !DIExpression()), !dbg !16465
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !16466, metadata !DIExpression()), !dbg !16467
  %i.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i, metadata !16468, metadata !DIExpression()), !dbg !16469
  %retval = alloca i32, align 4
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  %total_vports = alloca i32, align 4
  %rep = alloca %struct.mlx5_eswitch_rep*, align 8
  %vport_index = alloca i32, align 4
  %rep_type = alloca i8, align 1
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !16470, metadata !DIExpression()), !dbg !16471
  call void @llvm.dbg.declare(metadata i32* %total_vports, metadata !16472, metadata !DIExpression()), !dbg !16473
  %0 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !16474
  %total_vports1 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %0, i32 0, i32 8, !dbg !16475
  %1 = load i32, i32* %total_vports1, align 4, !dbg !16475
  store i32 %1, i32* %total_vports, align 4, !dbg !16473
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch_rep** %rep, metadata !16476, metadata !DIExpression()), !dbg !16477
  call void @llvm.dbg.declare(metadata i32* %vport_index, metadata !16478, metadata !DIExpression()), !dbg !16479
  call void @llvm.dbg.declare(metadata i8* %rep_type, metadata !16480, metadata !DIExpression()), !dbg !16481
  %2 = load i32, i32* %total_vports, align 4, !dbg !16482
  %conv = sext i32 %2 to i64, !dbg !16482
  %call = call i8* @kcalloc(i64 %conv, i64 48, i32 3264) #8, !dbg !16483
  %3 = bitcast i8* %call to %struct.mlx5_eswitch_rep*, !dbg !16483
  %4 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !16484
  %offloads = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %4, i32 0, i32 13, !dbg !16485
  %vport_reps = getelementptr inbounds %struct.mlx5_esw_offload, %struct.mlx5_esw_offload* %offloads, i32 0, i32 5, !dbg !16486
  store %struct.mlx5_eswitch_rep* %3, %struct.mlx5_eswitch_rep** %vport_reps, align 8, !dbg !16487
  %5 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !16488
  %offloads2 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %5, i32 0, i32 13, !dbg !16490
  %vport_reps3 = getelementptr inbounds %struct.mlx5_esw_offload, %struct.mlx5_esw_offload* %offloads2, i32 0, i32 5, !dbg !16491
  %6 = load %struct.mlx5_eswitch_rep*, %struct.mlx5_eswitch_rep** %vport_reps3, align 8, !dbg !16491
  %tobool = icmp ne %struct.mlx5_eswitch_rep* %6, null, !dbg !16488
  br i1 %tobool, label %if.end, label %if.then, !dbg !16492

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !16493
  br label %return, !dbg !16493

if.end:                                           ; preds = %entry
  store i32 0, i32* %vport_index, align 4, !dbg !16494
  br label %for.cond, !dbg !16494

for.cond:                                         ; preds = %for.inc18, %if.end
  %7 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !16495
  %offloads4 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %7, i32 0, i32 13, !dbg !16495
  %vport_reps5 = getelementptr inbounds %struct.mlx5_esw_offload, %struct.mlx5_esw_offload* %offloads4, i32 0, i32 5, !dbg !16495
  %8 = load %struct.mlx5_eswitch_rep*, %struct.mlx5_eswitch_rep** %vport_reps5, align 8, !dbg !16495
  %9 = load i32, i32* %vport_index, align 4, !dbg !16495
  %idxprom = sext i32 %9 to i64, !dbg !16495
  %arrayidx = getelementptr %struct.mlx5_eswitch_rep, %struct.mlx5_eswitch_rep* %8, i64 %idxprom, !dbg !16495
  store %struct.mlx5_eswitch_rep* %arrayidx, %struct.mlx5_eswitch_rep** %rep, align 8, !dbg !16495
  %10 = load i32, i32* %vport_index, align 4, !dbg !16495
  %11 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !16495
  %total_vports6 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %11, i32 0, i32 8, !dbg !16495
  %12 = load i32, i32* %total_vports6, align 4, !dbg !16495
  %cmp = icmp slt i32 %10, %12, !dbg !16495
  br i1 %cmp, label %for.body, label %for.end20, !dbg !16494

for.body:                                         ; preds = %for.cond
  %13 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !16496
  %14 = load i32, i32* %vport_index, align 4, !dbg !16497
  %call8 = call zeroext i16 @mlx5_eswitch_index_to_vport_num(%struct.mlx5_eswitch* %13, i32 %14) #8, !dbg !16498
  %15 = load %struct.mlx5_eswitch_rep*, %struct.mlx5_eswitch_rep** %rep, align 8, !dbg !16499
  %vport = getelementptr inbounds %struct.mlx5_eswitch_rep, %struct.mlx5_eswitch_rep* %15, i32 0, i32 1, !dbg !16500
  store i16 %call8, i16* %vport, align 8, !dbg !16501
  %16 = load i32, i32* %vport_index, align 4, !dbg !16502
  %conv9 = trunc i32 %16 to i16, !dbg !16502
  %17 = load %struct.mlx5_eswitch_rep*, %struct.mlx5_eswitch_rep** %rep, align 8, !dbg !16503
  %vport_index10 = getelementptr inbounds %struct.mlx5_eswitch_rep, %struct.mlx5_eswitch_rep* %17, i32 0, i32 3, !dbg !16504
  store i16 %conv9, i16* %vport_index10, align 4, !dbg !16505
  store i8 0, i8* %rep_type, align 1, !dbg !16506
  br label %for.cond11, !dbg !16507

for.cond11:                                       ; preds = %for.inc, %for.body
  %18 = load i8, i8* %rep_type, align 1, !dbg !16508
  %conv12 = zext i8 %18 to i32, !dbg !16508
  %cmp13 = icmp slt i32 %conv12, 2, !dbg !16509
  br i1 %cmp13, label %for.body15, label %for.end, !dbg !16510

for.body15:                                       ; preds = %for.cond11
  %19 = load %struct.mlx5_eswitch_rep*, %struct.mlx5_eswitch_rep** %rep, align 8, !dbg !16511
  %rep_data = getelementptr inbounds %struct.mlx5_eswitch_rep, %struct.mlx5_eswitch_rep* %19, i32 0, i32 0, !dbg !16512
  %20 = load i8, i8* %rep_type, align 1, !dbg !16513
  %idxprom16 = zext i8 %20 to i64, !dbg !16511
  %arrayidx17 = getelementptr [2 x %struct.mlx5_eswitch_rep_data], [2 x %struct.mlx5_eswitch_rep_data]* %rep_data, i64 0, i64 %idxprom16, !dbg !16511
  %state = getelementptr inbounds %struct.mlx5_eswitch_rep_data, %struct.mlx5_eswitch_rep_data* %arrayidx17, i32 0, i32 1, !dbg !16514
  store %struct.atomic_t* %state, %struct.atomic_t** %v.addr.i, align 8
  store i32 0, i32* %i.addr.i, align 4
  %21 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !16515
  %22 = bitcast %struct.atomic_t* %21 to i8*, !dbg !16515
  store i8* %22, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %23 = load i8*, i8** %v.addr.i.i, align 8, !dbg !16516
  %24 = load i64, i64* %size.addr.i.i, align 8, !dbg !16517
  %conv.i.i = trunc i64 %24 to i32, !dbg !16517
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %23, i32 %conv.i.i) #11, !dbg !16518
  %25 = load i8*, i8** %v.addr.i.i, align 8, !dbg !16519
  %26 = load i64, i64* %size.addr.i.i, align 8, !dbg !16519
  call void @kcsan_check_access(i8* %25, i64 %26, i32 5) #11, !dbg !16519
  %27 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !16520
  %28 = load i32, i32* %i.addr.i, align 4, !dbg !16521
  store %struct.atomic_t* %27, %struct.atomic_t** %v.addr.i1.i, align 8
  store i32 %28, i32* %i.addr.i.i, align 4
  %29 = load i32, i32* %i.addr.i.i, align 4, !dbg !16522
  %30 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !16522
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %30, i32 0, i32 0, !dbg !16522
  store volatile i32 %29, i32* %counter.i.i, align 4, !dbg !16522
  br label %for.inc, !dbg !16524

for.inc:                                          ; preds = %for.body15
  %31 = load i8, i8* %rep_type, align 1, !dbg !16525
  %inc = add i8 %31, 1, !dbg !16525
  store i8 %inc, i8* %rep_type, align 1, !dbg !16525
  br label %for.cond11, !dbg !16526, !llvm.loop !16527

for.end:                                          ; preds = %for.cond11
  br label %for.inc18, !dbg !16529

for.inc18:                                        ; preds = %for.end
  %32 = load i32, i32* %vport_index, align 4, !dbg !16495
  %inc19 = add i32 %32, 1, !dbg !16495
  store i32 %inc19, i32* %vport_index, align 4, !dbg !16495
  br label %for.cond, !dbg !16495, !llvm.loop !16530

for.end20:                                        ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !16532
  br label %return, !dbg !16532

return:                                           ; preds = %for.end20, %if.then
  %33 = load i32, i32* %retval, align 4, !dbg !16533
  ret i32 %33, !dbg !16533
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kcalloc(i64 %n, i64 %size, i32 %flags) #0 !dbg !16534 {
entry:
  %n.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !16537, metadata !DIExpression()), !dbg !16538
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !16539, metadata !DIExpression()), !dbg !16540
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !16541, metadata !DIExpression()), !dbg !16542
  %0 = load i64, i64* %n.addr, align 8, !dbg !16543
  %1 = load i64, i64* %size.addr, align 8, !dbg !16544
  %2 = load i32, i32* %flags.addr, align 4, !dbg !16545
  %or = or i32 %2, 256, !dbg !16546
  %call = call i8* @kmalloc_array(i64 %0, i64 %1, i32 %or) #8, !dbg !16547
  ret i8* %call, !dbg !16548
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @mlx5_eswitch_index_to_vport_num(%struct.mlx5_eswitch* %esw, i32 %index) #0 !dbg !16549 {
entry:
  %retval = alloca i16, align 2
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  %index.addr = alloca i32, align 4
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !16552, metadata !DIExpression()), !dbg !16553
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !16554, metadata !DIExpression()), !dbg !16555
  %0 = load i32, i32* %index.addr, align 4, !dbg !16556
  %1 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !16558
  %call = call i32 @mlx5_eswitch_ecpf_idx(%struct.mlx5_eswitch* %1) #8, !dbg !16559
  %cmp = icmp eq i32 %0, %call, !dbg !16560
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !16561

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !16562
  %dev = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %2, i32 0, i32 0, !dbg !16563
  %3 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !16563
  %call1 = call zeroext i1 @mlx5_ecpf_vport_exists(%struct.mlx5_core_dev* %3) #8, !dbg !16564
  br i1 %call1, label %if.then, label %if.end, !dbg !16565

if.then:                                          ; preds = %land.lhs.true
  store i16 -2, i16* %retval, align 2, !dbg !16566
  br label %return, !dbg !16566

if.end:                                           ; preds = %land.lhs.true, %entry
  %4 = load i32, i32* %index.addr, align 4, !dbg !16567
  %5 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !16569
  %call2 = call i32 @mlx5_eswitch_uplink_idx(%struct.mlx5_eswitch* %5) #8, !dbg !16570
  %cmp3 = icmp eq i32 %4, %call2, !dbg !16571
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !16572

if.then4:                                         ; preds = %if.end
  store i16 -1, i16* %retval, align 2, !dbg !16573
  br label %return, !dbg !16573

if.end5:                                          ; preds = %if.end
  %6 = load i32, i32* %index.addr, align 4, !dbg !16574
  %conv = trunc i32 %6 to i16, !dbg !16574
  store i16 %conv, i16* %retval, align 2, !dbg !16575
  br label %return, !dbg !16575

return:                                           ; preds = %if.end5, %if.then4, %if.then
  %7 = load i16, i16* %retval, align 2, !dbg !16576
  ret i16 %7, !dbg !16576
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @esw_offloads_load_rep(%struct.mlx5_eswitch* %esw, i16 zeroext %vport_num) #0 !dbg !16577 {
entry:
  %retval = alloca i32, align 4
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  %vport_num.addr = alloca i16, align 2
  %err = alloca i32, align 4
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !16580, metadata !DIExpression()), !dbg !16581
  store i16 %vport_num, i16* %vport_num.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %vport_num.addr, metadata !16582, metadata !DIExpression()), !dbg !16583
  call void @llvm.dbg.declare(metadata i32* %err, metadata !16584, metadata !DIExpression()), !dbg !16585
  %0 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !16586
  %mode = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %0, i32 0, i32 14, !dbg !16588
  %1 = load i32, i32* %mode, align 8, !dbg !16588
  %cmp = icmp ne i32 %1, 2, !dbg !16589
  br i1 %cmp, label %if.then, label %if.end, !dbg !16590

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !16591
  br label %return, !dbg !16591

if.end:                                           ; preds = %entry
  %2 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !16592
  %3 = load i16, i16* %vport_num.addr, align 2, !dbg !16593
  %call = call i32 @mlx5_esw_offloads_devlink_port_register(%struct.mlx5_eswitch* %2, i16 zeroext %3) #8, !dbg !16594
  store i32 %call, i32* %err, align 4, !dbg !16595
  %4 = load i32, i32* %err, align 4, !dbg !16596
  %tobool = icmp ne i32 %4, 0, !dbg !16596
  br i1 %tobool, label %if.then1, label %if.end2, !dbg !16598

if.then1:                                         ; preds = %if.end
  %5 = load i32, i32* %err, align 4, !dbg !16599
  store i32 %5, i32* %retval, align 4, !dbg !16600
  br label %return, !dbg !16600

if.end2:                                          ; preds = %if.end
  %6 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !16601
  %7 = load i16, i16* %vport_num.addr, align 2, !dbg !16602
  %call3 = call i32 @mlx5_esw_offloads_rep_load(%struct.mlx5_eswitch* %6, i16 zeroext %7) #8, !dbg !16603
  store i32 %call3, i32* %err, align 4, !dbg !16604
  %8 = load i32, i32* %err, align 4, !dbg !16605
  %tobool4 = icmp ne i32 %8, 0, !dbg !16605
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !16607

if.then5:                                         ; preds = %if.end2
  br label %load_err, !dbg !16608

if.end6:                                          ; preds = %if.end2
  %9 = load i32, i32* %err, align 4, !dbg !16609
  store i32 %9, i32* %retval, align 4, !dbg !16610
  br label %return, !dbg !16610

load_err:                                         ; preds = %if.then5
  call void @llvm.dbg.label(metadata !16611), !dbg !16612
  %10 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !16613
  %11 = load i16, i16* %vport_num.addr, align 2, !dbg !16614
  call void @mlx5_esw_offloads_devlink_port_unregister(%struct.mlx5_eswitch* %10, i16 zeroext %11) #8, !dbg !16615
  %12 = load i32, i32* %err, align 4, !dbg !16616
  store i32 %12, i32* %retval, align 4, !dbg !16617
  br label %return, !dbg !16617

return:                                           ; preds = %load_err, %if.end6, %if.then1, %if.then
  %13 = load i32, i32* %retval, align 4, !dbg !16618
  ret i32 %13, !dbg !16618
}

; Function Attrs: noredzone
declare dso_local i32 @mlx5_esw_offloads_devlink_port_register(%struct.mlx5_eswitch*, i16 zeroext) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlx5_esw_offloads_rep_load(%struct.mlx5_eswitch* %esw, i16 zeroext %vport_num) #0 !dbg !16619 {
entry:
  %v.addr.i1.i18 = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i18, metadata !16444, metadata !DIExpression()), !dbg !16620
  %i.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i.i, metadata !16458, metadata !DIExpression()), !dbg !16623
  %v.addr.i.i19 = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i19, metadata !16460, metadata !DIExpression()), !dbg !16624
  %size.addr.i.i20 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i20, metadata !16464, metadata !DIExpression()), !dbg !16626
  %v.addr.i21 = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i21, metadata !16466, metadata !DIExpression()), !dbg !16627
  %i.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i, metadata !16468, metadata !DIExpression()), !dbg !16628
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !16629, metadata !DIExpression()), !dbg !16633
  %old.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %old.addr.i.i, metadata !16640, metadata !DIExpression()), !dbg !16641
  %new.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %new.addr.i.i, metadata !16642, metadata !DIExpression()), !dbg !16643
  %__ret.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret.i.i, metadata !16644, metadata !DIExpression()), !dbg !16646
  %__old.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__old.i.i, metadata !16647, metadata !DIExpression()), !dbg !16646
  %__new.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__new.i.i, metadata !16648, metadata !DIExpression()), !dbg !16646
  %__ptr.i.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %__ptr.i.i, metadata !16649, metadata !DIExpression()), !dbg !16646
  %tmp.i.i = alloca i32, align 4
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !12689, metadata !DIExpression()), !dbg !16650
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !12699, metadata !DIExpression()), !dbg !16652
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !16653, metadata !DIExpression()), !dbg !16654
  %old.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %old.addr.i, metadata !16655, metadata !DIExpression()), !dbg !16656
  %new.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %new.addr.i, metadata !16657, metadata !DIExpression()), !dbg !16658
  %retval = alloca i32, align 4
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  %vport_num.addr = alloca i16, align 2
  %rep = alloca %struct.mlx5_eswitch_rep*, align 8
  %rep_type = alloca i32, align 4
  %err = alloca i32, align 4
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !16659, metadata !DIExpression()), !dbg !16660
  store i16 %vport_num, i16* %vport_num.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %vport_num.addr, metadata !16661, metadata !DIExpression()), !dbg !16662
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch_rep** %rep, metadata !16663, metadata !DIExpression()), !dbg !16664
  call void @llvm.dbg.declare(metadata i32* %rep_type, metadata !16665, metadata !DIExpression()), !dbg !16666
  call void @llvm.dbg.declare(metadata i32* %err, metadata !16667, metadata !DIExpression()), !dbg !16668
  %0 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !16669
  %1 = load i16, i16* %vport_num.addr, align 2, !dbg !16670
  %call = call %struct.mlx5_eswitch_rep* @mlx5_eswitch_get_rep(%struct.mlx5_eswitch* %0, i16 zeroext %1) #8, !dbg !16671
  store %struct.mlx5_eswitch_rep* %call, %struct.mlx5_eswitch_rep** %rep, align 8, !dbg !16672
  store i32 0, i32* %rep_type, align 4, !dbg !16673
  br label %for.cond, !dbg !16674

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %rep_type, align 4, !dbg !16675
  %cmp = icmp slt i32 %2, 2, !dbg !16676
  br i1 %cmp, label %for.body, label %for.end, !dbg !16677

for.body:                                         ; preds = %for.cond
  %3 = load %struct.mlx5_eswitch_rep*, %struct.mlx5_eswitch_rep** %rep, align 8, !dbg !16678
  %rep_data = getelementptr inbounds %struct.mlx5_eswitch_rep, %struct.mlx5_eswitch_rep* %3, i32 0, i32 0, !dbg !16679
  %4 = load i32, i32* %rep_type, align 4, !dbg !16680
  %idxprom = sext i32 %4 to i64, !dbg !16678
  %arrayidx = getelementptr [2 x %struct.mlx5_eswitch_rep_data], [2 x %struct.mlx5_eswitch_rep_data]* %rep_data, i64 0, i64 %idxprom, !dbg !16678
  %state = getelementptr inbounds %struct.mlx5_eswitch_rep_data, %struct.mlx5_eswitch_rep_data* %arrayidx, i32 0, i32 1, !dbg !16681
  store %struct.atomic_t* %state, %struct.atomic_t** %v.addr.i, align 8
  store i32 1, i32* %old.addr.i, align 4
  store i32 2, i32* %new.addr.i, align 4
  %5 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !16682
  %6 = bitcast %struct.atomic_t* %5 to i8*, !dbg !16682
  store i8* %6, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %7 = load i8*, i8** %v.addr.i.i, align 8, !dbg !16683
  %8 = load i64, i64* %size.addr.i.i, align 8, !dbg !16684
  %conv.i.i = trunc i64 %8 to i32, !dbg !16684
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %7, i32 %conv.i.i) #11, !dbg !16685
  %9 = load i8*, i8** %v.addr.i.i, align 8, !dbg !16686
  %10 = load i64, i64* %size.addr.i.i, align 8, !dbg !16686
  call void @kcsan_check_access(i8* %9, i64 %10, i32 7) #11, !dbg !16686
  %11 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !16687
  %12 = load i32, i32* %old.addr.i, align 4, !dbg !16688
  %13 = load i32, i32* %new.addr.i, align 4, !dbg !16689
  store %struct.atomic_t* %11, %struct.atomic_t** %v.addr.i1.i, align 8
  store i32 %12, i32* %old.addr.i.i, align 4
  store i32 %13, i32* %new.addr.i.i, align 4
  %14 = load i32, i32* %old.addr.i.i, align 4, !dbg !16646
  store i32 %14, i32* %__old.i.i, align 4, !dbg !16646
  %15 = load i32, i32* %new.addr.i.i, align 4, !dbg !16646
  store i32 %15, i32* %__new.i.i, align 4, !dbg !16646
  %16 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !16646
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %16, i32 0, i32 0, !dbg !16646
  store i32* %counter.i.i, i32** %__ptr.i.i, align 8, !dbg !16646
  %17 = load i32*, i32** %__ptr.i.i, align 8, !dbg !16646
  %18 = load i32, i32* %__new.i.i, align 4, !dbg !16646
  %19 = load i32, i32* %__old.i.i, align 4, !dbg !16646
  %20 = call i32 asm sideeffect "cmpxchgl $2,$1", "={ax},=*m,r,0,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32* %17, i32 %18, i32 %19, i32* %17) #12, !dbg !16646, !srcloc !16690
  store i32 %20, i32* %__ret.i.i, align 4, !dbg !16646
  %21 = load i32, i32* %__ret.i.i, align 4, !dbg !16646
  store i32 %21, i32* %tmp.i.i, align 4, !dbg !16646
  %22 = load i32, i32* %tmp.i.i, align 4, !dbg !16646
  %cmp2 = icmp eq i32 %22, 1, !dbg !16691
  br i1 %cmp2, label %if.then, label %if.end7, !dbg !16692

if.then:                                          ; preds = %for.body
  %23 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !16693
  %offloads = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %23, i32 0, i32 13, !dbg !16695
  %rep_ops = getelementptr inbounds %struct.mlx5_esw_offload, %struct.mlx5_esw_offload* %offloads, i32 0, i32 15, !dbg !16696
  %24 = load i32, i32* %rep_type, align 4, !dbg !16697
  %idxprom3 = sext i32 %24 to i64, !dbg !16693
  %arrayidx4 = getelementptr [2 x %struct.mlx5_eswitch_rep_ops*], [2 x %struct.mlx5_eswitch_rep_ops*]* %rep_ops, i64 0, i64 %idxprom3, !dbg !16693
  %25 = load %struct.mlx5_eswitch_rep_ops*, %struct.mlx5_eswitch_rep_ops** %arrayidx4, align 8, !dbg !16693
  %load = getelementptr inbounds %struct.mlx5_eswitch_rep_ops, %struct.mlx5_eswitch_rep_ops* %25, i32 0, i32 0, !dbg !16698
  %26 = load i32 (%struct.mlx5_core_dev*, %struct.mlx5_eswitch_rep*)*, i32 (%struct.mlx5_core_dev*, %struct.mlx5_eswitch_rep*)** %load, align 8, !dbg !16698
  %27 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !16699
  %dev = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %27, i32 0, i32 0, !dbg !16700
  %28 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !16700
  %29 = load %struct.mlx5_eswitch_rep*, %struct.mlx5_eswitch_rep** %rep, align 8, !dbg !16701
  %call5 = call i32 %26(%struct.mlx5_core_dev* %28, %struct.mlx5_eswitch_rep* %29) #8, !dbg !16693
  store i32 %call5, i32* %err, align 4, !dbg !16702
  %30 = load i32, i32* %err, align 4, !dbg !16703
  %tobool = icmp ne i32 %30, 0, !dbg !16703
  br i1 %tobool, label %if.then6, label %if.end, !dbg !16705

if.then6:                                         ; preds = %if.then
  br label %err_reps, !dbg !16706

if.end:                                           ; preds = %if.then
  br label %if.end7, !dbg !16707

if.end7:                                          ; preds = %if.end, %for.body
  br label %for.inc, !dbg !16708

for.inc:                                          ; preds = %if.end7
  %31 = load i32, i32* %rep_type, align 4, !dbg !16709
  %inc = add i32 %31, 1, !dbg !16709
  store i32 %inc, i32* %rep_type, align 4, !dbg !16709
  br label %for.cond, !dbg !16710, !llvm.loop !16711

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !16713
  br label %return, !dbg !16713

err_reps:                                         ; preds = %if.then6
  call void @llvm.dbg.label(metadata !16714), !dbg !16715
  %32 = load %struct.mlx5_eswitch_rep*, %struct.mlx5_eswitch_rep** %rep, align 8, !dbg !16716
  %rep_data8 = getelementptr inbounds %struct.mlx5_eswitch_rep, %struct.mlx5_eswitch_rep* %32, i32 0, i32 0, !dbg !16717
  %33 = load i32, i32* %rep_type, align 4, !dbg !16718
  %idxprom9 = sext i32 %33 to i64, !dbg !16716
  %arrayidx10 = getelementptr [2 x %struct.mlx5_eswitch_rep_data], [2 x %struct.mlx5_eswitch_rep_data]* %rep_data8, i64 0, i64 %idxprom9, !dbg !16716
  %state11 = getelementptr inbounds %struct.mlx5_eswitch_rep_data, %struct.mlx5_eswitch_rep_data* %arrayidx10, i32 0, i32 1, !dbg !16719
  store %struct.atomic_t* %state11, %struct.atomic_t** %v.addr.i21, align 8
  store i32 1, i32* %i.addr.i, align 4
  %34 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i21, align 8, !dbg !16720
  %35 = bitcast %struct.atomic_t* %34 to i8*, !dbg !16720
  store i8* %35, i8** %v.addr.i.i19, align 8
  store i64 4, i64* %size.addr.i.i20, align 8
  %36 = load i8*, i8** %v.addr.i.i19, align 8, !dbg !16721
  %37 = load i64, i64* %size.addr.i.i20, align 8, !dbg !16722
  %conv.i.i22 = trunc i64 %37 to i32, !dbg !16722
  %call.i.i23 = call zeroext i1 @kasan_check_write(i8* %36, i32 %conv.i.i22) #11, !dbg !16723
  %38 = load i8*, i8** %v.addr.i.i19, align 8, !dbg !16724
  %39 = load i64, i64* %size.addr.i.i20, align 8, !dbg !16724
  call void @kcsan_check_access(i8* %38, i64 %39, i32 5) #11, !dbg !16724
  %40 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i21, align 8, !dbg !16725
  %41 = load i32, i32* %i.addr.i, align 4, !dbg !16726
  store %struct.atomic_t* %40, %struct.atomic_t** %v.addr.i1.i18, align 8
  store i32 %41, i32* %i.addr.i.i, align 4
  %42 = load i32, i32* %i.addr.i.i, align 4, !dbg !16727
  %43 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i18, align 8, !dbg !16727
  %counter.i.i24 = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %43, i32 0, i32 0, !dbg !16727
  store volatile i32 %42, i32* %counter.i.i24, align 4, !dbg !16727
  %44 = load i32, i32* %rep_type, align 4, !dbg !16728
  %dec = add i32 %44, -1, !dbg !16728
  store i32 %dec, i32* %rep_type, align 4, !dbg !16728
  br label %for.cond12, !dbg !16728

for.cond12:                                       ; preds = %for.inc15, %err_reps
  %45 = load i32, i32* %rep_type, align 4, !dbg !16730
  %cmp13 = icmp sge i32 %45, 0, !dbg !16732
  br i1 %cmp13, label %for.body14, label %for.end17, !dbg !16733

for.body14:                                       ; preds = %for.cond12
  %46 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !16734
  %47 = load %struct.mlx5_eswitch_rep*, %struct.mlx5_eswitch_rep** %rep, align 8, !dbg !16735
  %48 = load i32, i32* %rep_type, align 4, !dbg !16736
  %conv = trunc i32 %48 to i8, !dbg !16736
  call void @__esw_offloads_unload_rep(%struct.mlx5_eswitch* %46, %struct.mlx5_eswitch_rep* %47, i8 zeroext %conv) #8, !dbg !16737
  br label %for.inc15, !dbg !16737

for.inc15:                                        ; preds = %for.body14
  %49 = load i32, i32* %rep_type, align 4, !dbg !16738
  %dec16 = add i32 %49, -1, !dbg !16738
  store i32 %dec16, i32* %rep_type, align 4, !dbg !16738
  br label %for.cond12, !dbg !16739, !llvm.loop !16740

for.end17:                                        ; preds = %for.cond12
  %50 = load i32, i32* %err, align 4, !dbg !16742
  store i32 %50, i32* %retval, align 4, !dbg !16743
  br label %return, !dbg !16743

return:                                           ; preds = %for.end17, %for.end
  %51 = load i32, i32* %retval, align 4, !dbg !16744
  ret i32 %51, !dbg !16744
}

; Function Attrs: noredzone
declare dso_local void @mlx5_esw_offloads_devlink_port_unregister(%struct.mlx5_eswitch*, i16 zeroext) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @esw_offloads_unload_rep(%struct.mlx5_eswitch* %esw, i16 zeroext %vport_num) #0 !dbg !16745 {
entry:
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  %vport_num.addr = alloca i16, align 2
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !16748, metadata !DIExpression()), !dbg !16749
  store i16 %vport_num, i16* %vport_num.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %vport_num.addr, metadata !16750, metadata !DIExpression()), !dbg !16751
  %0 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !16752
  %mode = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %0, i32 0, i32 14, !dbg !16754
  %1 = load i32, i32* %mode, align 8, !dbg !16754
  %cmp = icmp ne i32 %1, 2, !dbg !16755
  br i1 %cmp, label %if.then, label %if.end, !dbg !16756

if.then:                                          ; preds = %entry
  br label %return, !dbg !16757

if.end:                                           ; preds = %entry
  %2 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !16758
  %3 = load i16, i16* %vport_num.addr, align 2, !dbg !16759
  call void @mlx5_esw_offloads_rep_unload(%struct.mlx5_eswitch* %2, i16 zeroext %3) #8, !dbg !16760
  %4 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !16761
  %5 = load i16, i16* %vport_num.addr, align 2, !dbg !16762
  call void @mlx5_esw_offloads_devlink_port_unregister(%struct.mlx5_eswitch* %4, i16 zeroext %5) #8, !dbg !16763
  br label %return, !dbg !16764

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !16764
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlx5_esw_offloads_rep_unload(%struct.mlx5_eswitch* %esw, i16 zeroext %vport_num) #0 !dbg !16765 {
entry:
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  %vport_num.addr = alloca i16, align 2
  %rep = alloca %struct.mlx5_eswitch_rep*, align 8
  %rep_type = alloca i32, align 4
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !16766, metadata !DIExpression()), !dbg !16767
  store i16 %vport_num, i16* %vport_num.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %vport_num.addr, metadata !16768, metadata !DIExpression()), !dbg !16769
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch_rep** %rep, metadata !16770, metadata !DIExpression()), !dbg !16771
  call void @llvm.dbg.declare(metadata i32* %rep_type, metadata !16772, metadata !DIExpression()), !dbg !16773
  %0 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !16774
  %1 = load i16, i16* %vport_num.addr, align 2, !dbg !16775
  %call = call %struct.mlx5_eswitch_rep* @mlx5_eswitch_get_rep(%struct.mlx5_eswitch* %0, i16 zeroext %1) #8, !dbg !16776
  store %struct.mlx5_eswitch_rep* %call, %struct.mlx5_eswitch_rep** %rep, align 8, !dbg !16777
  store i32 1, i32* %rep_type, align 4, !dbg !16778
  br label %for.cond, !dbg !16780

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %rep_type, align 4, !dbg !16781
  %cmp = icmp sge i32 %2, 0, !dbg !16783
  br i1 %cmp, label %for.body, label %for.end, !dbg !16784

for.body:                                         ; preds = %for.cond
  %3 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !16785
  %4 = load %struct.mlx5_eswitch_rep*, %struct.mlx5_eswitch_rep** %rep, align 8, !dbg !16786
  %5 = load i32, i32* %rep_type, align 4, !dbg !16787
  %conv = trunc i32 %5 to i8, !dbg !16787
  call void @__esw_offloads_unload_rep(%struct.mlx5_eswitch* %3, %struct.mlx5_eswitch_rep* %4, i8 zeroext %conv) #8, !dbg !16788
  br label %for.inc, !dbg !16788

for.inc:                                          ; preds = %for.body
  %6 = load i32, i32* %rep_type, align 4, !dbg !16789
  %dec = add i32 %6, -1, !dbg !16789
  store i32 %dec, i32* %rep_type, align 4, !dbg !16789
  br label %for.cond, !dbg !16790, !llvm.loop !16791

for.end:                                          ; preds = %for.cond
  ret void, !dbg !16793
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @mlx5_esw_match_metadata_alloc(%struct.mlx5_eswitch* %esw) #0 !dbg !16794 {
entry:
  %retval = alloca i32, align 4
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  %vport_end_ida = alloca i32, align 4
  %max_pf_num = alloca i32, align 4
  %pf_num = alloca i32, align 4
  %id = alloca i32, align 4
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !16795, metadata !DIExpression()), !dbg !16796
  call void @llvm.dbg.declare(metadata i32* %vport_end_ida, metadata !16797, metadata !DIExpression()), !dbg !16798
  store i32 4095, i32* %vport_end_ida, align 4, !dbg !16798
  call void @llvm.dbg.declare(metadata i32* %max_pf_num, metadata !16799, metadata !DIExpression()), !dbg !16800
  store i32 15, i32* %max_pf_num, align 4, !dbg !16800
  call void @llvm.dbg.declare(metadata i32* %pf_num, metadata !16801, metadata !DIExpression()), !dbg !16802
  call void @llvm.dbg.declare(metadata i32* %id, metadata !16803, metadata !DIExpression()), !dbg !16804
  %0 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !16805
  %dev = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %0, i32 0, i32 0, !dbg !16805
  %1 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !16805
  %pdev = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %1, i32 0, i32 2, !dbg !16805
  %2 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !dbg !16805
  %devfn = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 6, !dbg !16805
  %3 = load i32, i32* %devfn, align 8, !dbg !16805
  %and = and i32 %3, 7, !dbg !16805
  store i32 %and, i32* %pf_num, align 4, !dbg !16806
  %4 = load i32, i32* %pf_num, align 4, !dbg !16807
  %5 = load i32, i32* %max_pf_num, align 4, !dbg !16809
  %cmp = icmp ugt i32 %4, %5, !dbg !16810
  br i1 %cmp, label %if.then, label %if.end, !dbg !16811

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !16812
  br label %return, !dbg !16812

if.end:                                           ; preds = %entry
  %6 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !16813
  %offloads = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %6, i32 0, i32 13, !dbg !16814
  %vport_metadata_ida = getelementptr inbounds %struct.mlx5_esw_offload, %struct.mlx5_esw_offload* %offloads, i32 0, i32 19, !dbg !16815
  %7 = load i32, i32* %vport_end_ida, align 4, !dbg !16816
  %call = call i32 @ida_alloc_range(%struct.ida* %vport_metadata_ida, i32 1, i32 %7, i32 3264) #8, !dbg !16817
  store i32 %call, i32* %id, align 4, !dbg !16818
  %8 = load i32, i32* %id, align 4, !dbg !16819
  %cmp1 = icmp slt i32 %8, 0, !dbg !16821
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !16822

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !16823
  br label %return, !dbg !16823

if.end3:                                          ; preds = %if.end
  %9 = load i32, i32* %pf_num, align 4, !dbg !16824
  %shl = shl i32 %9, 12, !dbg !16825
  %10 = load i32, i32* %id, align 4, !dbg !16826
  %or = or i32 %shl, %10, !dbg !16827
  store i32 %or, i32* %id, align 4, !dbg !16828
  %11 = load i32, i32* %id, align 4, !dbg !16829
  store i32 %11, i32* %retval, align 4, !dbg !16830
  br label %return, !dbg !16830

return:                                           ; preds = %if.end3, %if.then2, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !16831
  ret i32 %12, !dbg !16831
}

; Function Attrs: noredzone
declare dso_local i32 @ida_alloc_range(%struct.ida*, i32, i32, i32) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @mlx5_esw_match_metadata_free(%struct.mlx5_eswitch* %esw, i32 %metadata) #0 !dbg !16832 {
entry:
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  %metadata.addr = alloca i32, align 4
  %vport_bit_mask = alloca i32, align 4
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !16835, metadata !DIExpression()), !dbg !16836
  store i32 %metadata, i32* %metadata.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %metadata.addr, metadata !16837, metadata !DIExpression()), !dbg !16838
  call void @llvm.dbg.declare(metadata i32* %vport_bit_mask, metadata !16839, metadata !DIExpression()), !dbg !16840
  store i32 4095, i32* %vport_bit_mask, align 4, !dbg !16840
  %0 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !16841
  %offloads = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %0, i32 0, i32 13, !dbg !16842
  %vport_metadata_ida = getelementptr inbounds %struct.mlx5_esw_offload, %struct.mlx5_esw_offload* %offloads, i32 0, i32 19, !dbg !16843
  %1 = load i32, i32* %metadata.addr, align 4, !dbg !16844
  %2 = load i32, i32* %vport_bit_mask, align 4, !dbg !16845
  %and = and i32 %1, %2, !dbg !16846
  call void @ida_free(%struct.ida* %vport_metadata_ida, i32 %and) #8, !dbg !16847
  ret void, !dbg !16848
}

; Function Attrs: noredzone
declare dso_local void @ida_free(%struct.ida*, i32) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @esw_vport_create_offloads_acl_tables(%struct.mlx5_eswitch* %esw, %struct.mlx5_vport* %vport) #0 !dbg !16849 {
entry:
  %retval = alloca i32, align 4
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  %vport.addr = alloca %struct.mlx5_vport*, align 8
  %err = alloca i32, align 4
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !16852, metadata !DIExpression()), !dbg !16853
  store %struct.mlx5_vport* %vport, %struct.mlx5_vport** %vport.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_vport** %vport.addr, metadata !16854, metadata !DIExpression()), !dbg !16855
  call void @llvm.dbg.declare(metadata i32* %err, metadata !16856, metadata !DIExpression()), !dbg !16857
  %0 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !16858
  %1 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport.addr, align 8, !dbg !16859
  %call = call i32 @esw_acl_ingress_ofld_setup(%struct.mlx5_eswitch* %0, %struct.mlx5_vport* %1) #8, !dbg !16860
  store i32 %call, i32* %err, align 4, !dbg !16861
  %2 = load i32, i32* %err, align 4, !dbg !16862
  %tobool = icmp ne i32 %2, 0, !dbg !16862
  br i1 %tobool, label %if.then, label %if.end, !dbg !16864

if.then:                                          ; preds = %entry
  %3 = load i32, i32* %err, align 4, !dbg !16865
  store i32 %3, i32* %retval, align 4, !dbg !16866
  br label %return, !dbg !16866

if.end:                                           ; preds = %entry
  %4 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !16867
  %5 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport.addr, align 8, !dbg !16868
  %call1 = call i32 @esw_acl_egress_ofld_setup(%struct.mlx5_eswitch* %4, %struct.mlx5_vport* %5) #8, !dbg !16869
  store i32 %call1, i32* %err, align 4, !dbg !16870
  %6 = load i32, i32* %err, align 4, !dbg !16871
  %tobool2 = icmp ne i32 %6, 0, !dbg !16871
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !16873

if.then3:                                         ; preds = %if.end
  br label %egress_err, !dbg !16874

if.end4:                                          ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !16875
  br label %return, !dbg !16875

egress_err:                                       ; preds = %if.then3
  call void @llvm.dbg.label(metadata !16876), !dbg !16877
  %7 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !16878
  %8 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport.addr, align 8, !dbg !16879
  call void @esw_acl_ingress_ofld_cleanup(%struct.mlx5_eswitch* %7, %struct.mlx5_vport* %8) #8, !dbg !16880
  %9 = load i32, i32* %err, align 4, !dbg !16881
  store i32 %9, i32* %retval, align 4, !dbg !16882
  br label %return, !dbg !16882

return:                                           ; preds = %egress_err, %if.end4, %if.then
  %10 = load i32, i32* %retval, align 4, !dbg !16883
  ret i32 %10, !dbg !16883
}

; Function Attrs: noredzone
declare dso_local i32 @esw_acl_ingress_ofld_setup(%struct.mlx5_eswitch*, %struct.mlx5_vport*) #5

; Function Attrs: noredzone
declare dso_local i32 @esw_acl_egress_ofld_setup(%struct.mlx5_eswitch*, %struct.mlx5_vport*) #5

; Function Attrs: noredzone
declare dso_local void @esw_acl_ingress_ofld_cleanup(%struct.mlx5_eswitch*, %struct.mlx5_vport*) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @esw_vport_destroy_offloads_acl_tables(%struct.mlx5_eswitch* %esw, %struct.mlx5_vport* %vport) #0 !dbg !16884 {
entry:
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  %vport.addr = alloca %struct.mlx5_vport*, align 8
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !16887, metadata !DIExpression()), !dbg !16888
  store %struct.mlx5_vport* %vport, %struct.mlx5_vport** %vport.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_vport** %vport.addr, metadata !16889, metadata !DIExpression()), !dbg !16890
  %0 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport.addr, align 8, !dbg !16891
  call void @esw_acl_egress_ofld_cleanup(%struct.mlx5_vport* %0) #8, !dbg !16892
  %1 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !16893
  %2 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport.addr, align 8, !dbg !16894
  call void @esw_acl_ingress_ofld_cleanup(%struct.mlx5_eswitch* %1, %struct.mlx5_vport* %2) #8, !dbg !16895
  ret void, !dbg !16896
}

; Function Attrs: noredzone
declare dso_local void @esw_acl_egress_ofld_cleanup(%struct.mlx5_vport*) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @mlx5_esw_funcs_changed_handler(%struct.notifier_block* %nb, i64 %type, i8* %data) #0 !dbg !16897 {
entry:
  %retval = alloca i32, align 4
  %nb.addr = alloca %struct.notifier_block*, align 8
  %type.addr = alloca i64, align 8
  %data.addr = alloca i8*, align 8
  %esw_funcs = alloca %struct.mlx5_esw_functions*, align 8
  %host_work = alloca %struct.mlx5_host_work*, align 8
  %esw = alloca %struct.mlx5_eswitch*, align 8
  %__mptr = alloca i8*, align 8
  %__mptr1 = alloca i8*, align 8
  %tmp = alloca %struct.mlx5_nb*, align 8
  %tmp4 = alloca %struct.mlx5_esw_functions*, align 8
  %__mptr6 = alloca i8*, align 8
  %tmp9 = alloca %struct.mlx5_eswitch*, align 8
  %.compoundliteral = alloca %struct.atomic64_t, align 8
  store %struct.notifier_block* %nb, %struct.notifier_block** %nb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.notifier_block** %nb.addr, metadata !16898, metadata !DIExpression()), !dbg !16899
  store i64 %type, i64* %type.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %type.addr, metadata !16900, metadata !DIExpression()), !dbg !16901
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !16902, metadata !DIExpression()), !dbg !16903
  call void @llvm.dbg.declare(metadata %struct.mlx5_esw_functions** %esw_funcs, metadata !16904, metadata !DIExpression()), !dbg !16905
  call void @llvm.dbg.declare(metadata %struct.mlx5_host_work** %host_work, metadata !16906, metadata !DIExpression()), !dbg !16907
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw, metadata !16908, metadata !DIExpression()), !dbg !16909
  %call = call i8* @kzalloc(i64 40, i32 2592) #8, !dbg !16910
  %0 = bitcast i8* %call to %struct.mlx5_host_work*, !dbg !16910
  store %struct.mlx5_host_work* %0, %struct.mlx5_host_work** %host_work, align 8, !dbg !16911
  %1 = load %struct.mlx5_host_work*, %struct.mlx5_host_work** %host_work, align 8, !dbg !16912
  %tobool = icmp ne %struct.mlx5_host_work* %1, null, !dbg !16912
  br i1 %tobool, label %if.end, label %if.then, !dbg !16914

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !16915
  br label %return, !dbg !16915

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !16916, metadata !DIExpression()), !dbg !16918
  call void @llvm.dbg.declare(metadata i8** %__mptr1, metadata !16919, metadata !DIExpression()), !dbg !16921
  %2 = load %struct.notifier_block*, %struct.notifier_block** %nb.addr, align 8, !dbg !16921
  %3 = bitcast %struct.notifier_block* %2 to i8*, !dbg !16921
  store i8* %3, i8** %__mptr1, align 8, !dbg !16921
  br label %do.body, !dbg !16921

do.body:                                          ; preds = %if.end
  br label %do.end, !dbg !16922

do.end:                                           ; preds = %do.body
  %4 = load i8*, i8** %__mptr1, align 8, !dbg !16921
  %add.ptr = getelementptr i8, i8* %4, i64 0, !dbg !16921
  %5 = bitcast i8* %add.ptr to %struct.mlx5_nb*, !dbg !16921
  store %struct.mlx5_nb* %5, %struct.mlx5_nb** %tmp, align 8, !dbg !16922
  %6 = load %struct.mlx5_nb*, %struct.mlx5_nb** %tmp, align 8, !dbg !16921
  %7 = bitcast %struct.mlx5_nb* %6 to i8*, !dbg !16918
  store i8* %7, i8** %__mptr, align 8, !dbg !16918
  br label %do.body2, !dbg !16918

do.body2:                                         ; preds = %do.end
  br label %do.end3, !dbg !16924

do.end3:                                          ; preds = %do.body2
  %8 = load i8*, i8** %__mptr, align 8, !dbg !16918
  %add.ptr5 = getelementptr i8, i8* %8, i64 0, !dbg !16918
  %9 = bitcast i8* %add.ptr5 to %struct.mlx5_esw_functions*, !dbg !16918
  store %struct.mlx5_esw_functions* %9, %struct.mlx5_esw_functions** %tmp4, align 8, !dbg !16924
  %10 = load %struct.mlx5_esw_functions*, %struct.mlx5_esw_functions** %tmp4, align 8, !dbg !16918
  store %struct.mlx5_esw_functions* %10, %struct.mlx5_esw_functions** %esw_funcs, align 8, !dbg !16926
  call void @llvm.dbg.declare(metadata i8** %__mptr6, metadata !16927, metadata !DIExpression()), !dbg !16929
  %11 = load %struct.mlx5_esw_functions*, %struct.mlx5_esw_functions** %esw_funcs, align 8, !dbg !16929
  %12 = bitcast %struct.mlx5_esw_functions* %11 to i8*, !dbg !16929
  store i8* %12, i8** %__mptr6, align 8, !dbg !16929
  br label %do.body7, !dbg !16929

do.body7:                                         ; preds = %do.end3
  br label %do.end8, !dbg !16930

do.end8:                                          ; preds = %do.body7
  %13 = load i8*, i8** %__mptr6, align 8, !dbg !16929
  %add.ptr10 = getelementptr i8, i8* %13, i64 -12824, !dbg !16929
  %14 = bitcast i8* %add.ptr10 to %struct.mlx5_eswitch*, !dbg !16929
  store %struct.mlx5_eswitch* %14, %struct.mlx5_eswitch** %tmp9, align 8, !dbg !16930
  %15 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %tmp9, align 8, !dbg !16929
  store %struct.mlx5_eswitch* %15, %struct.mlx5_eswitch** %esw, align 8, !dbg !16932
  %16 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw, align 8, !dbg !16933
  %17 = load %struct.mlx5_host_work*, %struct.mlx5_host_work** %host_work, align 8, !dbg !16934
  %esw11 = getelementptr inbounds %struct.mlx5_host_work, %struct.mlx5_host_work* %17, i32 0, i32 1, !dbg !16935
  store %struct.mlx5_eswitch* %16, %struct.mlx5_eswitch** %esw11, align 8, !dbg !16936
  br label %do.body12, !dbg !16937

do.body12:                                        ; preds = %do.end8
  %18 = load %struct.mlx5_host_work*, %struct.mlx5_host_work** %host_work, align 8, !dbg !16938
  %work = getelementptr inbounds %struct.mlx5_host_work, %struct.mlx5_host_work* %18, i32 0, i32 0, !dbg !16938
  call void @__init_work(%struct.work_struct* %work, i32 0) #8, !dbg !16938
  %19 = load %struct.mlx5_host_work*, %struct.mlx5_host_work** %host_work, align 8, !dbg !16938
  %work13 = getelementptr inbounds %struct.mlx5_host_work, %struct.mlx5_host_work* %19, i32 0, i32 0, !dbg !16938
  %data14 = getelementptr inbounds %struct.work_struct, %struct.work_struct* %work13, i32 0, i32 0, !dbg !16938
  %counter = getelementptr inbounds %struct.atomic64_t, %struct.atomic64_t* %.compoundliteral, i32 0, i32 0, !dbg !16938
  store i64 68719476704, i64* %counter, align 8, !dbg !16938
  %20 = bitcast %struct.atomic64_t* %data14 to i8*, !dbg !16938
  %21 = bitcast %struct.atomic64_t* %.compoundliteral to i8*, !dbg !16938
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %20, i8* align 8 %21, i64 8, i1 false), !dbg !16938
  %22 = load %struct.mlx5_host_work*, %struct.mlx5_host_work** %host_work, align 8, !dbg !16938
  %work15 = getelementptr inbounds %struct.mlx5_host_work, %struct.mlx5_host_work* %22, i32 0, i32 0, !dbg !16938
  %entry16 = getelementptr inbounds %struct.work_struct, %struct.work_struct* %work15, i32 0, i32 1, !dbg !16938
  call void @INIT_LIST_HEAD(%struct.list_head* %entry16) #8, !dbg !16938
  %23 = load %struct.mlx5_host_work*, %struct.mlx5_host_work** %host_work, align 8, !dbg !16938
  %work17 = getelementptr inbounds %struct.mlx5_host_work, %struct.mlx5_host_work* %23, i32 0, i32 0, !dbg !16938
  %func = getelementptr inbounds %struct.work_struct, %struct.work_struct* %work17, i32 0, i32 2, !dbg !16938
  store void (%struct.work_struct*)* @esw_functions_changed_event_handler, void (%struct.work_struct*)** %func, align 8, !dbg !16938
  br label %do.end18, !dbg !16938

do.end18:                                         ; preds = %do.body12
  %24 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw, align 8, !dbg !16940
  %work_queue = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %24, i32 0, i32 5, !dbg !16941
  %25 = load %struct.workqueue_struct*, %struct.workqueue_struct** %work_queue, align 8, !dbg !16941
  %26 = load %struct.mlx5_host_work*, %struct.mlx5_host_work** %host_work, align 8, !dbg !16942
  %work19 = getelementptr inbounds %struct.mlx5_host_work, %struct.mlx5_host_work* %26, i32 0, i32 0, !dbg !16943
  %call20 = call zeroext i1 @queue_work(%struct.workqueue_struct* %25, %struct.work_struct* %work19) #8, !dbg !16944
  store i32 1, i32* %retval, align 4, !dbg !16945
  br label %return, !dbg !16945

return:                                           ; preds = %do.end18, %if.then
  %27 = load i32, i32* %retval, align 4, !dbg !16946
  ret i32 %27, !dbg !16946
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__init_work(%struct.work_struct* %work, i32 %onstack) #0 !dbg !16947 {
entry:
  %work.addr = alloca %struct.work_struct*, align 8
  %onstack.addr = alloca i32, align 4
  store %struct.work_struct* %work, %struct.work_struct** %work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.work_struct** %work.addr, metadata !16950, metadata !DIExpression()), !dbg !16951
  store i32 %onstack, i32* %onstack.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %onstack.addr, metadata !16952, metadata !DIExpression()), !dbg !16953
  ret void, !dbg !16954
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @INIT_LIST_HEAD(%struct.list_head* %list) #0 !dbg !16955 {
entry:
  %list.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %list, %struct.list_head** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %list.addr, metadata !16959, metadata !DIExpression()), !dbg !16960
  br label %do.body, !dbg !16961

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !16962

do.body1:                                         ; preds = %do.body
  br label %do.end, !dbg !16964

do.end:                                           ; preds = %do.body1
  br label %do.body2, !dbg !16962

do.body2:                                         ; preds = %do.end
  %0 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !16966
  %1 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !16966
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 0, !dbg !16966
  store volatile %struct.list_head* %0, %struct.list_head** %next, align 8, !dbg !16966
  br label %do.end3, !dbg !16966

do.end3:                                          ; preds = %do.body2
  br label %do.end4, !dbg !16962

do.end4:                                          ; preds = %do.end3
  %2 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !16968
  %3 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !16969
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 1, !dbg !16970
  store %struct.list_head* %2, %struct.list_head** %prev, align 8, !dbg !16971
  ret void, !dbg !16972
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @esw_functions_changed_event_handler(%struct.work_struct* %work) #0 !dbg !16973 {
entry:
  %work.addr = alloca %struct.work_struct*, align 8
  %host_work = alloca %struct.mlx5_host_work*, align 8
  %esw = alloca %struct.mlx5_eswitch*, align 8
  %out = alloca i32*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.mlx5_host_work*, align 8
  store %struct.work_struct* %work, %struct.work_struct** %work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.work_struct** %work.addr, metadata !16974, metadata !DIExpression()), !dbg !16975
  call void @llvm.dbg.declare(metadata %struct.mlx5_host_work** %host_work, metadata !16976, metadata !DIExpression()), !dbg !16977
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw, metadata !16978, metadata !DIExpression()), !dbg !16979
  call void @llvm.dbg.declare(metadata i32** %out, metadata !16980, metadata !DIExpression()), !dbg !16981
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !16982, metadata !DIExpression()), !dbg !16984
  %0 = load %struct.work_struct*, %struct.work_struct** %work.addr, align 8, !dbg !16984
  %1 = bitcast %struct.work_struct* %0 to i8*, !dbg !16984
  store i8* %1, i8** %__mptr, align 8, !dbg !16984
  br label %do.body, !dbg !16984

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !16985

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !16984
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !16984
  %3 = bitcast i8* %add.ptr to %struct.mlx5_host_work*, !dbg !16984
  store %struct.mlx5_host_work* %3, %struct.mlx5_host_work** %tmp, align 8, !dbg !16985
  %4 = load %struct.mlx5_host_work*, %struct.mlx5_host_work** %tmp, align 8, !dbg !16984
  store %struct.mlx5_host_work* %4, %struct.mlx5_host_work** %host_work, align 8, !dbg !16987
  %5 = load %struct.mlx5_host_work*, %struct.mlx5_host_work** %host_work, align 8, !dbg !16988
  %esw1 = getelementptr inbounds %struct.mlx5_host_work, %struct.mlx5_host_work* %5, i32 0, i32 1, !dbg !16989
  %6 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw1, align 8, !dbg !16989
  store %struct.mlx5_eswitch* %6, %struct.mlx5_eswitch** %esw, align 8, !dbg !16990
  %7 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw, align 8, !dbg !16991
  %dev = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %7, i32 0, i32 0, !dbg !16992
  %8 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !16992
  %call = call i32* @mlx5_esw_query_functions(%struct.mlx5_core_dev* %8) #8, !dbg !16993
  store i32* %call, i32** %out, align 8, !dbg !16994
  %9 = load i32*, i32** %out, align 8, !dbg !16995
  %10 = bitcast i32* %9 to i8*, !dbg !16995
  %call2 = call zeroext i1 @IS_ERR(i8* %10) #8, !dbg !16997
  br i1 %call2, label %if.then, label %if.end, !dbg !16998

if.then:                                          ; preds = %do.end
  br label %out3, !dbg !16999

if.end:                                           ; preds = %do.end
  %11 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw, align 8, !dbg !17000
  %12 = load i32*, i32** %out, align 8, !dbg !17001
  call void @esw_vfs_changed_event_handler(%struct.mlx5_eswitch* %11, i32* %12) #8, !dbg !17002
  %13 = load i32*, i32** %out, align 8, !dbg !17003
  %14 = bitcast i32* %13 to i8*, !dbg !17003
  call void @kvfree(i8* %14) #8, !dbg !17004
  br label %out3, !dbg !17004

out3:                                             ; preds = %if.end, %if.then
  call void @llvm.dbg.label(metadata !17005), !dbg !17006
  %15 = load %struct.mlx5_host_work*, %struct.mlx5_host_work** %host_work, align 8, !dbg !17007
  %16 = bitcast %struct.mlx5_host_work* %15 to i8*, !dbg !17007
  call void @kfree(i8* %16) #8, !dbg !17008
  ret void, !dbg !17009
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @queue_work(%struct.workqueue_struct* %wq, %struct.work_struct* %work) #0 !dbg !17010 {
entry:
  %wq.addr = alloca %struct.workqueue_struct*, align 8
  %work.addr = alloca %struct.work_struct*, align 8
  store %struct.workqueue_struct* %wq, %struct.workqueue_struct** %wq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.workqueue_struct** %wq.addr, metadata !17013, metadata !DIExpression()), !dbg !17014
  store %struct.work_struct* %work, %struct.work_struct** %work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.work_struct** %work.addr, metadata !17015, metadata !DIExpression()), !dbg !17016
  %0 = load %struct.workqueue_struct*, %struct.workqueue_struct** %wq.addr, align 8, !dbg !17017
  %1 = load %struct.work_struct*, %struct.work_struct** %work.addr, align 8, !dbg !17018
  %call = call zeroext i1 @queue_work_on(i32 1, %struct.workqueue_struct* %0, %struct.work_struct* %1) #8, !dbg !17019
  ret i1 %call, !dbg !17020
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @esw_offloads_enable(%struct.mlx5_eswitch* %esw) #0 !dbg !2 {
entry:
  %retval = alloca i32, align 4
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  %vport = alloca %struct.mlx5_vport*, align 8
  %err = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !17021, metadata !DIExpression()), !dbg !17022
  call void @llvm.dbg.declare(metadata %struct.mlx5_vport** %vport, metadata !17023, metadata !DIExpression()), !dbg !17024
  call void @llvm.dbg.declare(metadata i32* %err, metadata !17025, metadata !DIExpression()), !dbg !17026
  call void @llvm.dbg.declare(metadata i32* %i, metadata !17027, metadata !DIExpression()), !dbg !17028
  %0 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17029
  %dev = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %0, i32 0, i32 0, !dbg !17029
  %1 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !17029
  %caps = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %1, i32 0, i32 9, !dbg !17029
  %hca_cur = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps, i32 0, i32 0, !dbg !17029
  %arrayidx = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur, i64 0, i64 8, !dbg !17029
  %arraydecay = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx, i64 0, i64 0, !dbg !17029
  %add.ptr = getelementptr i32, i32* %arraydecay, i64 16, !dbg !17029
  %2 = load i32, i32* %add.ptr, align 4, !dbg !17029
  %3 = call i1 @llvm.is.constant.i32(i32 %2), !dbg !17029
  br i1 %3, label %cond.true, label %cond.false, !dbg !17029

cond.true:                                        ; preds = %entry
  %4 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17029
  %dev1 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %4, i32 0, i32 0, !dbg !17029
  %5 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev1, align 8, !dbg !17029
  %caps2 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %5, i32 0, i32 9, !dbg !17029
  %hca_cur3 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps2, i32 0, i32 0, !dbg !17029
  %arrayidx4 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur3, i64 0, i64 8, !dbg !17029
  %arraydecay5 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx4, i64 0, i64 0, !dbg !17029
  %add.ptr6 = getelementptr i32, i32* %arraydecay5, i64 16, !dbg !17029
  %6 = load i32, i32* %add.ptr6, align 4, !dbg !17029
  %and = and i32 %6, 255, !dbg !17029
  %shl = shl i32 %and, 24, !dbg !17029
  %7 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17029
  %dev7 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %7, i32 0, i32 0, !dbg !17029
  %8 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev7, align 8, !dbg !17029
  %caps8 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %8, i32 0, i32 9, !dbg !17029
  %hca_cur9 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps8, i32 0, i32 0, !dbg !17029
  %arrayidx10 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur9, i64 0, i64 8, !dbg !17029
  %arraydecay11 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx10, i64 0, i64 0, !dbg !17029
  %add.ptr12 = getelementptr i32, i32* %arraydecay11, i64 16, !dbg !17029
  %9 = load i32, i32* %add.ptr12, align 4, !dbg !17029
  %and13 = and i32 %9, 65280, !dbg !17029
  %shl14 = shl i32 %and13, 8, !dbg !17029
  %or = or i32 %shl, %shl14, !dbg !17029
  %10 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17029
  %dev15 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %10, i32 0, i32 0, !dbg !17029
  %11 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev15, align 8, !dbg !17029
  %caps16 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %11, i32 0, i32 9, !dbg !17029
  %hca_cur17 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps16, i32 0, i32 0, !dbg !17029
  %arrayidx18 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur17, i64 0, i64 8, !dbg !17029
  %arraydecay19 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx18, i64 0, i64 0, !dbg !17029
  %add.ptr20 = getelementptr i32, i32* %arraydecay19, i64 16, !dbg !17029
  %12 = load i32, i32* %add.ptr20, align 4, !dbg !17029
  %and21 = and i32 %12, 16711680, !dbg !17029
  %shr = lshr i32 %and21, 8, !dbg !17029
  %or22 = or i32 %or, %shr, !dbg !17029
  %13 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17029
  %dev23 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %13, i32 0, i32 0, !dbg !17029
  %14 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev23, align 8, !dbg !17029
  %caps24 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %14, i32 0, i32 9, !dbg !17029
  %hca_cur25 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps24, i32 0, i32 0, !dbg !17029
  %arrayidx26 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur25, i64 0, i64 8, !dbg !17029
  %arraydecay27 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx26, i64 0, i64 0, !dbg !17029
  %add.ptr28 = getelementptr i32, i32* %arraydecay27, i64 16, !dbg !17029
  %15 = load i32, i32* %add.ptr28, align 4, !dbg !17029
  %and29 = and i32 %15, -16777216, !dbg !17029
  %shr30 = lshr i32 %and29, 24, !dbg !17029
  %or31 = or i32 %or22, %shr30, !dbg !17029
  br label %cond.end, !dbg !17029

cond.false:                                       ; preds = %entry
  %16 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17029
  %dev32 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %16, i32 0, i32 0, !dbg !17029
  %17 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev32, align 8, !dbg !17029
  %caps33 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %17, i32 0, i32 9, !dbg !17029
  %hca_cur34 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps33, i32 0, i32 0, !dbg !17029
  %arrayidx35 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur34, i64 0, i64 8, !dbg !17029
  %arraydecay36 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx35, i64 0, i64 0, !dbg !17029
  %add.ptr37 = getelementptr i32, i32* %arraydecay36, i64 16, !dbg !17029
  %18 = load i32, i32* %add.ptr37, align 4, !dbg !17029
  %call = call i32 @__fswab32(i32 %18) #10, !dbg !17029
  br label %cond.end, !dbg !17029

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %or31, %cond.true ], [ %call, %cond.false ], !dbg !17029
  %shr38 = lshr i32 %cond, 24, !dbg !17029
  %and39 = and i32 %shr38, 1, !dbg !17029
  %tobool = icmp ne i32 %and39, 0, !dbg !17029
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !17031

land.lhs.true:                                    ; preds = %cond.end
  %19 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17032
  %dev40 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %19, i32 0, i32 0, !dbg !17032
  %20 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev40, align 8, !dbg !17032
  %caps41 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %20, i32 0, i32 9, !dbg !17032
  %hca_cur42 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps41, i32 0, i32 0, !dbg !17032
  %arrayidx43 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur42, i64 0, i64 8, !dbg !17032
  %arraydecay44 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx43, i64 0, i64 0, !dbg !17032
  %add.ptr45 = getelementptr i32, i32* %arraydecay44, i64 16, !dbg !17032
  %21 = load i32, i32* %add.ptr45, align 4, !dbg !17032
  %22 = call i1 @llvm.is.constant.i32(i32 %21), !dbg !17032
  br i1 %22, label %cond.true46, label %cond.false82, !dbg !17032

cond.true46:                                      ; preds = %land.lhs.true
  %23 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17032
  %dev47 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %23, i32 0, i32 0, !dbg !17032
  %24 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev47, align 8, !dbg !17032
  %caps48 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %24, i32 0, i32 9, !dbg !17032
  %hca_cur49 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps48, i32 0, i32 0, !dbg !17032
  %arrayidx50 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur49, i64 0, i64 8, !dbg !17032
  %arraydecay51 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx50, i64 0, i64 0, !dbg !17032
  %add.ptr52 = getelementptr i32, i32* %arraydecay51, i64 16, !dbg !17032
  %25 = load i32, i32* %add.ptr52, align 4, !dbg !17032
  %and53 = and i32 %25, 255, !dbg !17032
  %shl54 = shl i32 %and53, 24, !dbg !17032
  %26 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17032
  %dev55 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %26, i32 0, i32 0, !dbg !17032
  %27 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev55, align 8, !dbg !17032
  %caps56 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %27, i32 0, i32 9, !dbg !17032
  %hca_cur57 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps56, i32 0, i32 0, !dbg !17032
  %arrayidx58 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur57, i64 0, i64 8, !dbg !17032
  %arraydecay59 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx58, i64 0, i64 0, !dbg !17032
  %add.ptr60 = getelementptr i32, i32* %arraydecay59, i64 16, !dbg !17032
  %28 = load i32, i32* %add.ptr60, align 4, !dbg !17032
  %and61 = and i32 %28, 65280, !dbg !17032
  %shl62 = shl i32 %and61, 8, !dbg !17032
  %or63 = or i32 %shl54, %shl62, !dbg !17032
  %29 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17032
  %dev64 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %29, i32 0, i32 0, !dbg !17032
  %30 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev64, align 8, !dbg !17032
  %caps65 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %30, i32 0, i32 9, !dbg !17032
  %hca_cur66 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps65, i32 0, i32 0, !dbg !17032
  %arrayidx67 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur66, i64 0, i64 8, !dbg !17032
  %arraydecay68 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx67, i64 0, i64 0, !dbg !17032
  %add.ptr69 = getelementptr i32, i32* %arraydecay68, i64 16, !dbg !17032
  %31 = load i32, i32* %add.ptr69, align 4, !dbg !17032
  %and70 = and i32 %31, 16711680, !dbg !17032
  %shr71 = lshr i32 %and70, 8, !dbg !17032
  %or72 = or i32 %or63, %shr71, !dbg !17032
  %32 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17032
  %dev73 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %32, i32 0, i32 0, !dbg !17032
  %33 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev73, align 8, !dbg !17032
  %caps74 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %33, i32 0, i32 9, !dbg !17032
  %hca_cur75 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps74, i32 0, i32 0, !dbg !17032
  %arrayidx76 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur75, i64 0, i64 8, !dbg !17032
  %arraydecay77 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx76, i64 0, i64 0, !dbg !17032
  %add.ptr78 = getelementptr i32, i32* %arraydecay77, i64 16, !dbg !17032
  %34 = load i32, i32* %add.ptr78, align 4, !dbg !17032
  %and79 = and i32 %34, -16777216, !dbg !17032
  %shr80 = lshr i32 %and79, 24, !dbg !17032
  %or81 = or i32 %or72, %shr80, !dbg !17032
  br label %cond.end90, !dbg !17032

cond.false82:                                     ; preds = %land.lhs.true
  %35 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17032
  %dev83 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %35, i32 0, i32 0, !dbg !17032
  %36 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev83, align 8, !dbg !17032
  %caps84 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %36, i32 0, i32 9, !dbg !17032
  %hca_cur85 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps84, i32 0, i32 0, !dbg !17032
  %arrayidx86 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur85, i64 0, i64 8, !dbg !17032
  %arraydecay87 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx86, i64 0, i64 0, !dbg !17032
  %add.ptr88 = getelementptr i32, i32* %arraydecay87, i64 16, !dbg !17032
  %37 = load i32, i32* %add.ptr88, align 4, !dbg !17032
  %call89 = call i32 @__fswab32(i32 %37) #10, !dbg !17032
  br label %cond.end90, !dbg !17032

cond.end90:                                       ; preds = %cond.false82, %cond.true46
  %cond91 = phi i32 [ %or81, %cond.true46 ], [ %call89, %cond.false82 ], !dbg !17032
  %shr92 = lshr i32 %cond91, 23, !dbg !17032
  %and93 = and i32 %shr92, 1, !dbg !17032
  %tobool94 = icmp ne i32 %and93, 0, !dbg !17032
  br i1 %tobool94, label %if.then, label %if.else, !dbg !17033

if.then:                                          ; preds = %cond.end90
  %38 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17034
  %offloads = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %38, i32 0, i32 13, !dbg !17035
  %encap = getelementptr inbounds %struct.mlx5_esw_offload, %struct.mlx5_esw_offload* %offloads, i32 0, i32 18, !dbg !17036
  store i32 1, i32* %encap, align 8, !dbg !17037
  br label %if.end, !dbg !17034

if.else:                                          ; preds = %cond.end90, %cond.end
  %39 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17038
  %offloads95 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %39, i32 0, i32 13, !dbg !17039
  %encap96 = getelementptr inbounds %struct.mlx5_esw_offload, %struct.mlx5_esw_offload* %offloads95, i32 0, i32 18, !dbg !17040
  store i32 0, i32* %encap96, align 8, !dbg !17041
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %do.body, !dbg !17042

do.body:                                          ; preds = %if.end
  %40 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17043
  %offloads97 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %40, i32 0, i32 13, !dbg !17043
  %termtbl_mutex = getelementptr inbounds %struct.mlx5_esw_offload, %struct.mlx5_esw_offload* %offloads97, i32 0, i32 14, !dbg !17043
  call void @__mutex_init(%struct.mutex* %termtbl_mutex, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3, i64 0, i64 0), %struct.lock_class_key* @esw_offloads_enable.__key) #8, !dbg !17043
  br label %do.end, !dbg !17043

do.end:                                           ; preds = %do.body
  %41 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17045
  %dev98 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %41, i32 0, i32 0, !dbg !17046
  %42 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev98, align 8, !dbg !17046
  call void @mlx5_rdma_enable_roce(%struct.mlx5_core_dev* %42) #8, !dbg !17047
  %43 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17048
  %call99 = call i32 @mlx5_esw_host_number_init(%struct.mlx5_eswitch* %43) #8, !dbg !17049
  store i32 %call99, i32* %err, align 4, !dbg !17050
  %44 = load i32, i32* %err, align 4, !dbg !17051
  %tobool100 = icmp ne i32 %44, 0, !dbg !17051
  br i1 %tobool100, label %if.then101, label %if.end102, !dbg !17053

if.then101:                                       ; preds = %do.end
  br label %err_metadata, !dbg !17054

if.end102:                                        ; preds = %do.end
  %45 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17055
  %call103 = call zeroext i1 @esw_check_vport_match_metadata_supported(%struct.mlx5_eswitch* %45) #8, !dbg !17057
  br i1 %call103, label %if.then104, label %if.end106, !dbg !17058

if.then104:                                       ; preds = %if.end102
  %46 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17059
  %flags = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %46, i32 0, i32 7, !dbg !17060
  %47 = load i32, i32* %flags, align 8, !dbg !17061
  %or105 = or i32 %47, 1, !dbg !17061
  store i32 %or105, i32* %flags, align 8, !dbg !17061
  br label %if.end106, !dbg !17059

if.end106:                                        ; preds = %if.then104, %if.end102
  %48 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17062
  %call107 = call i32 @esw_offloads_metadata_init(%struct.mlx5_eswitch* %48) #8, !dbg !17063
  store i32 %call107, i32* %err, align 4, !dbg !17064
  %49 = load i32, i32* %err, align 4, !dbg !17065
  %tobool108 = icmp ne i32 %49, 0, !dbg !17065
  br i1 %tobool108, label %if.then109, label %if.end110, !dbg !17067

if.then109:                                       ; preds = %if.end106
  br label %err_metadata, !dbg !17068

if.end110:                                        ; preds = %if.end106
  %50 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17069
  %call111 = call i32 @esw_set_passing_vport_metadata(%struct.mlx5_eswitch* %50, i1 zeroext true) #8, !dbg !17070
  store i32 %call111, i32* %err, align 4, !dbg !17071
  %51 = load i32, i32* %err, align 4, !dbg !17072
  %tobool112 = icmp ne i32 %51, 0, !dbg !17072
  br i1 %tobool112, label %if.then113, label %if.end114, !dbg !17074

if.then113:                                       ; preds = %if.end110
  br label %err_vport_metadata, !dbg !17075

if.end114:                                        ; preds = %if.end110
  %52 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17076
  %call115 = call i32 @esw_offloads_steering_init(%struct.mlx5_eswitch* %52) #8, !dbg !17077
  store i32 %call115, i32* %err, align 4, !dbg !17078
  %53 = load i32, i32* %err, align 4, !dbg !17079
  %tobool116 = icmp ne i32 %53, 0, !dbg !17079
  br i1 %tobool116, label %if.then117, label %if.end118, !dbg !17081

if.then117:                                       ; preds = %if.end114
  br label %err_steering_init, !dbg !17082

if.end118:                                        ; preds = %if.end114
  store i32 1, i32* %i, align 4, !dbg !17083
  br label %for.cond, !dbg !17083

for.cond:                                         ; preds = %for.inc, %if.end118
  %54 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17085
  %vports = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %54, i32 0, i32 6, !dbg !17085
  %55 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vports, align 8, !dbg !17085
  %56 = load i32, i32* %i, align 4, !dbg !17085
  %idxprom = sext i32 %56 to i64, !dbg !17085
  %arrayidx119 = getelementptr %struct.mlx5_vport, %struct.mlx5_vport* %55, i64 %idxprom, !dbg !17085
  store %struct.mlx5_vport* %arrayidx119, %struct.mlx5_vport** %vport, align 8, !dbg !17085
  %57 = load i32, i32* %i, align 4, !dbg !17085
  %58 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17085
  %esw_funcs = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %58, i32 0, i32 17, !dbg !17085
  %num_vfs = getelementptr inbounds %struct.mlx5_esw_functions, %struct.mlx5_esw_functions* %esw_funcs, i32 0, i32 1, !dbg !17085
  %59 = load i16, i16* %num_vfs, align 8, !dbg !17085
  %conv = zext i16 %59 to i32, !dbg !17085
  %cmp = icmp sle i32 %57, %conv, !dbg !17085
  br i1 %cmp, label %for.body, label %for.end, !dbg !17083

for.body:                                         ; preds = %for.cond
  %60 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport, align 8, !dbg !17087
  %info = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %60, i32 0, i32 11, !dbg !17088
  %link_state = getelementptr inbounds %struct.mlx5_vport_info, %struct.mlx5_vport_info* %info, i32 0, i32 4, !dbg !17089
  store i32 0, i32* %link_state, align 8, !dbg !17090
  br label %for.inc, !dbg !17087

for.inc:                                          ; preds = %for.body
  %61 = load i32, i32* %i, align 4, !dbg !17085
  %inc = add i32 %61, 1, !dbg !17085
  store i32 %inc, i32* %i, align 4, !dbg !17085
  br label %for.cond, !dbg !17085, !llvm.loop !17091

for.end:                                          ; preds = %for.cond
  %62 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17093
  %call121 = call i32 @esw_offloads_load_rep(%struct.mlx5_eswitch* %62, i16 zeroext -1) #8, !dbg !17094
  store i32 %call121, i32* %err, align 4, !dbg !17095
  %63 = load i32, i32* %err, align 4, !dbg !17096
  %tobool122 = icmp ne i32 %63, 0, !dbg !17096
  br i1 %tobool122, label %if.then123, label %if.end124, !dbg !17098

if.then123:                                       ; preds = %for.end
  br label %err_uplink, !dbg !17099

if.end124:                                        ; preds = %for.end
  %64 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17100
  %call125 = call i32 @mlx5_eswitch_enable_pf_vf_vports(%struct.mlx5_eswitch* %64, i32 1) #8, !dbg !17101
  store i32 %call125, i32* %err, align 4, !dbg !17102
  %65 = load i32, i32* %err, align 4, !dbg !17103
  %tobool126 = icmp ne i32 %65, 0, !dbg !17103
  br i1 %tobool126, label %if.then127, label %if.end128, !dbg !17105

if.then127:                                       ; preds = %if.end124
  br label %err_vports, !dbg !17106

if.end128:                                        ; preds = %if.end124
  %66 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17107
  call void @esw_offloads_devcom_init(%struct.mlx5_eswitch* %66) #8, !dbg !17108
  store i32 0, i32* %retval, align 4, !dbg !17109
  br label %return, !dbg !17109

err_vports:                                       ; preds = %if.then127
  call void @llvm.dbg.label(metadata !17110), !dbg !17111
  %67 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17112
  call void @esw_offloads_unload_rep(%struct.mlx5_eswitch* %67, i16 zeroext -1) #8, !dbg !17113
  br label %err_uplink, !dbg !17113

err_uplink:                                       ; preds = %err_vports, %if.then123
  call void @llvm.dbg.label(metadata !17114), !dbg !17115
  %68 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17116
  call void @esw_offloads_steering_cleanup(%struct.mlx5_eswitch* %68) #8, !dbg !17117
  br label %err_steering_init, !dbg !17117

err_steering_init:                                ; preds = %err_uplink, %if.then117
  call void @llvm.dbg.label(metadata !17118), !dbg !17119
  %69 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17120
  %call129 = call i32 @esw_set_passing_vport_metadata(%struct.mlx5_eswitch* %69, i1 zeroext false) #8, !dbg !17121
  br label %err_vport_metadata, !dbg !17121

err_vport_metadata:                               ; preds = %err_steering_init, %if.then113
  call void @llvm.dbg.label(metadata !17122), !dbg !17123
  %70 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17124
  call void @esw_offloads_metadata_uninit(%struct.mlx5_eswitch* %70) #8, !dbg !17125
  br label %err_metadata, !dbg !17125

err_metadata:                                     ; preds = %err_vport_metadata, %if.then109, %if.then101
  call void @llvm.dbg.label(metadata !17126), !dbg !17127
  %71 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17128
  %flags130 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %71, i32 0, i32 7, !dbg !17129
  %72 = load i32, i32* %flags130, align 8, !dbg !17130
  %and131 = and i32 %72, -2, !dbg !17130
  store i32 %and131, i32* %flags130, align 8, !dbg !17130
  %73 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17131
  %dev132 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %73, i32 0, i32 0, !dbg !17132
  %74 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev132, align 8, !dbg !17132
  call void @mlx5_rdma_disable_roce(%struct.mlx5_core_dev* %74) #8, !dbg !17133
  %75 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17134
  %offloads133 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %75, i32 0, i32 13, !dbg !17135
  %termtbl_mutex134 = getelementptr inbounds %struct.mlx5_esw_offload, %struct.mlx5_esw_offload* %offloads133, i32 0, i32 14, !dbg !17136
  call void @mutex_destroy(%struct.mutex* %termtbl_mutex134) #8, !dbg !17137
  %76 = load i32, i32* %err, align 4, !dbg !17138
  store i32 %76, i32* %retval, align 4, !dbg !17139
  br label %return, !dbg !17139

return:                                           ; preds = %err_metadata, %if.end128
  %77 = load i32, i32* %retval, align 4, !dbg !17140
  ret i32 %77, !dbg !17140
}

; Function Attrs: noredzone
declare dso_local void @__mutex_init(%struct.mutex*, i8*, %struct.lock_class_key*) #5

; Function Attrs: noredzone
declare dso_local void @mlx5_rdma_enable_roce(%struct.mlx5_core_dev*) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlx5_esw_host_number_init(%struct.mlx5_eswitch* %esw) #0 !dbg !17141 {
entry:
  %retval = alloca i32, align 4
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  %query_host_out = alloca i32*, align 8
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !17142, metadata !DIExpression()), !dbg !17143
  call void @llvm.dbg.declare(metadata i32** %query_host_out, metadata !17144, metadata !DIExpression()), !dbg !17145
  %0 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17146
  %dev = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %0, i32 0, i32 0, !dbg !17148
  %1 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !17148
  %call = call zeroext i1 @mlx5_core_is_ecpf_esw_manager(%struct.mlx5_core_dev* %1) #8, !dbg !17149
  br i1 %call, label %if.end, label %if.then, !dbg !17150

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !17151
  br label %return, !dbg !17151

if.end:                                           ; preds = %entry
  %2 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17152
  %dev1 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %2, i32 0, i32 0, !dbg !17153
  %3 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev1, align 8, !dbg !17153
  %call2 = call i32* @mlx5_esw_query_functions(%struct.mlx5_core_dev* %3) #8, !dbg !17154
  store i32* %call2, i32** %query_host_out, align 8, !dbg !17155
  %4 = load i32*, i32** %query_host_out, align 8, !dbg !17156
  %5 = bitcast i32* %4 to i8*, !dbg !17156
  %call3 = call zeroext i1 @IS_ERR(i8* %5) #8, !dbg !17158
  br i1 %call3, label %if.then4, label %if.end6, !dbg !17159

if.then4:                                         ; preds = %if.end
  %6 = load i32*, i32** %query_host_out, align 8, !dbg !17160
  %7 = bitcast i32* %6 to i8*, !dbg !17160
  %call5 = call i64 @PTR_ERR(i8* %7) #8, !dbg !17161
  %conv = trunc i64 %call5 to i32, !dbg !17161
  store i32 %conv, i32* %retval, align 4, !dbg !17162
  br label %return, !dbg !17162

if.end6:                                          ; preds = %if.end
  %8 = load i32*, i32** %query_host_out, align 8, !dbg !17163
  %add.ptr = getelementptr i32, i32* %8, i64 4, !dbg !17163
  %9 = load i32, i32* %add.ptr, align 4, !dbg !17163
  %10 = call i1 @llvm.is.constant.i32(i32 %9), !dbg !17163
  br i1 %10, label %cond.true, label %cond.false, !dbg !17163

cond.true:                                        ; preds = %if.end6
  %11 = load i32*, i32** %query_host_out, align 8, !dbg !17163
  %add.ptr7 = getelementptr i32, i32* %11, i64 4, !dbg !17163
  %12 = load i32, i32* %add.ptr7, align 4, !dbg !17163
  %and = and i32 %12, 255, !dbg !17163
  %shl = shl i32 %and, 24, !dbg !17163
  %13 = load i32*, i32** %query_host_out, align 8, !dbg !17163
  %add.ptr8 = getelementptr i32, i32* %13, i64 4, !dbg !17163
  %14 = load i32, i32* %add.ptr8, align 4, !dbg !17163
  %and9 = and i32 %14, 65280, !dbg !17163
  %shl10 = shl i32 %and9, 8, !dbg !17163
  %or = or i32 %shl, %shl10, !dbg !17163
  %15 = load i32*, i32** %query_host_out, align 8, !dbg !17163
  %add.ptr11 = getelementptr i32, i32* %15, i64 4, !dbg !17163
  %16 = load i32, i32* %add.ptr11, align 4, !dbg !17163
  %and12 = and i32 %16, 16711680, !dbg !17163
  %shr = lshr i32 %and12, 8, !dbg !17163
  %or13 = or i32 %or, %shr, !dbg !17163
  %17 = load i32*, i32** %query_host_out, align 8, !dbg !17163
  %add.ptr14 = getelementptr i32, i32* %17, i64 4, !dbg !17163
  %18 = load i32, i32* %add.ptr14, align 4, !dbg !17163
  %and15 = and i32 %18, -16777216, !dbg !17163
  %shr16 = lshr i32 %and15, 24, !dbg !17163
  %or17 = or i32 %or13, %shr16, !dbg !17163
  br label %cond.end, !dbg !17163

cond.false:                                       ; preds = %if.end6
  %19 = load i32*, i32** %query_host_out, align 8, !dbg !17163
  %add.ptr18 = getelementptr i32, i32* %19, i64 4, !dbg !17163
  %20 = load i32, i32* %add.ptr18, align 4, !dbg !17163
  %call19 = call i32 @__fswab32(i32 %20) #10, !dbg !17163
  br label %cond.end, !dbg !17163

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %or17, %cond.true ], [ %call19, %cond.false ], !dbg !17163
  %shr20 = lshr i32 %cond, 24, !dbg !17163
  %and21 = and i32 %shr20, 255, !dbg !17163
  %21 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17164
  %offloads = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %21, i32 0, i32 13, !dbg !17165
  %host_number = getelementptr inbounds %struct.mlx5_esw_offload, %struct.mlx5_esw_offload* %offloads, i32 0, i32 20, !dbg !17166
  store i32 %and21, i32* %host_number, align 8, !dbg !17167
  %22 = load i32*, i32** %query_host_out, align 8, !dbg !17168
  %23 = bitcast i32* %22 to i8*, !dbg !17168
  call void @kvfree(i8* %23) #8, !dbg !17169
  store i32 0, i32* %retval, align 4, !dbg !17170
  br label %return, !dbg !17170

return:                                           ; preds = %cond.end, %if.then4, %if.then
  %24 = load i32, i32* %retval, align 4, !dbg !17171
  ret i32 %24, !dbg !17171
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @esw_check_vport_match_metadata_supported(%struct.mlx5_eswitch* %esw) #0 !dbg !17172 {
entry:
  %retval = alloca i1, align 1
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !17173, metadata !DIExpression()), !dbg !17174
  %0 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17175
  %dev = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %0, i32 0, i32 0, !dbg !17175
  %1 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !17175
  %caps = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %1, i32 0, i32 9, !dbg !17175
  %hca_cur = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps, i32 0, i32 0, !dbg !17175
  %arrayidx = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur, i64 0, i64 9, !dbg !17175
  %arraydecay = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx, i64 0, i64 0, !dbg !17175
  %add.ptr = getelementptr i32, i32* %arraydecay, i64 0, !dbg !17175
  %2 = load i32, i32* %add.ptr, align 4, !dbg !17175
  %3 = call i1 @llvm.is.constant.i32(i32 %2), !dbg !17175
  br i1 %3, label %cond.true, label %cond.false, !dbg !17175

cond.true:                                        ; preds = %entry
  %4 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17175
  %dev1 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %4, i32 0, i32 0, !dbg !17175
  %5 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev1, align 8, !dbg !17175
  %caps2 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %5, i32 0, i32 9, !dbg !17175
  %hca_cur3 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps2, i32 0, i32 0, !dbg !17175
  %arrayidx4 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur3, i64 0, i64 9, !dbg !17175
  %arraydecay5 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx4, i64 0, i64 0, !dbg !17175
  %add.ptr6 = getelementptr i32, i32* %arraydecay5, i64 0, !dbg !17175
  %6 = load i32, i32* %add.ptr6, align 4, !dbg !17175
  %and = and i32 %6, 255, !dbg !17175
  %shl = shl i32 %and, 24, !dbg !17175
  %7 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17175
  %dev7 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %7, i32 0, i32 0, !dbg !17175
  %8 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev7, align 8, !dbg !17175
  %caps8 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %8, i32 0, i32 9, !dbg !17175
  %hca_cur9 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps8, i32 0, i32 0, !dbg !17175
  %arrayidx10 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur9, i64 0, i64 9, !dbg !17175
  %arraydecay11 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx10, i64 0, i64 0, !dbg !17175
  %add.ptr12 = getelementptr i32, i32* %arraydecay11, i64 0, !dbg !17175
  %9 = load i32, i32* %add.ptr12, align 4, !dbg !17175
  %and13 = and i32 %9, 65280, !dbg !17175
  %shl14 = shl i32 %and13, 8, !dbg !17175
  %or = or i32 %shl, %shl14, !dbg !17175
  %10 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17175
  %dev15 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %10, i32 0, i32 0, !dbg !17175
  %11 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev15, align 8, !dbg !17175
  %caps16 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %11, i32 0, i32 9, !dbg !17175
  %hca_cur17 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps16, i32 0, i32 0, !dbg !17175
  %arrayidx18 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur17, i64 0, i64 9, !dbg !17175
  %arraydecay19 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx18, i64 0, i64 0, !dbg !17175
  %add.ptr20 = getelementptr i32, i32* %arraydecay19, i64 0, !dbg !17175
  %12 = load i32, i32* %add.ptr20, align 4, !dbg !17175
  %and21 = and i32 %12, 16711680, !dbg !17175
  %shr = lshr i32 %and21, 8, !dbg !17175
  %or22 = or i32 %or, %shr, !dbg !17175
  %13 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17175
  %dev23 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %13, i32 0, i32 0, !dbg !17175
  %14 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev23, align 8, !dbg !17175
  %caps24 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %14, i32 0, i32 9, !dbg !17175
  %hca_cur25 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps24, i32 0, i32 0, !dbg !17175
  %arrayidx26 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur25, i64 0, i64 9, !dbg !17175
  %arraydecay27 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx26, i64 0, i64 0, !dbg !17175
  %add.ptr28 = getelementptr i32, i32* %arraydecay27, i64 0, !dbg !17175
  %15 = load i32, i32* %add.ptr28, align 4, !dbg !17175
  %and29 = and i32 %15, -16777216, !dbg !17175
  %shr30 = lshr i32 %and29, 24, !dbg !17175
  %or31 = or i32 %or22, %shr30, !dbg !17175
  br label %cond.end, !dbg !17175

cond.false:                                       ; preds = %entry
  %16 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17175
  %dev32 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %16, i32 0, i32 0, !dbg !17175
  %17 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev32, align 8, !dbg !17175
  %caps33 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %17, i32 0, i32 9, !dbg !17175
  %hca_cur34 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps33, i32 0, i32 0, !dbg !17175
  %arrayidx35 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur34, i64 0, i64 9, !dbg !17175
  %arraydecay36 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx35, i64 0, i64 0, !dbg !17175
  %add.ptr37 = getelementptr i32, i32* %arraydecay36, i64 0, !dbg !17175
  %18 = load i32, i32* %add.ptr37, align 4, !dbg !17175
  %call = call i32 @__fswab32(i32 %18) #10, !dbg !17175
  br label %cond.end, !dbg !17175

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %or31, %cond.true ], [ %call, %cond.false ], !dbg !17175
  %shr38 = lshr i32 %cond, 23, !dbg !17175
  %and39 = and i32 %shr38, 1, !dbg !17175
  %tobool = icmp ne i32 %and39, 0, !dbg !17175
  br i1 %tobool, label %if.end, label %if.then, !dbg !17177

if.then:                                          ; preds = %cond.end
  store i1 false, i1* %retval, align 1, !dbg !17178
  br label %return, !dbg !17178

if.end:                                           ; preds = %cond.end
  %19 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17179
  %dev40 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %19, i32 0, i32 0, !dbg !17179
  %20 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev40, align 8, !dbg !17179
  %caps41 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %20, i32 0, i32 9, !dbg !17179
  %hca_cur42 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps41, i32 0, i32 0, !dbg !17179
  %arrayidx43 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur42, i64 0, i64 8, !dbg !17179
  %arraydecay44 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx43, i64 0, i64 0, !dbg !17179
  %add.ptr45 = getelementptr i32, i32* %arraydecay44, i64 0, !dbg !17179
  %21 = load i32, i32* %add.ptr45, align 4, !dbg !17179
  %22 = call i1 @llvm.is.constant.i32(i32 %21), !dbg !17179
  br i1 %22, label %cond.true46, label %cond.false82, !dbg !17179

cond.true46:                                      ; preds = %if.end
  %23 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17179
  %dev47 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %23, i32 0, i32 0, !dbg !17179
  %24 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev47, align 8, !dbg !17179
  %caps48 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %24, i32 0, i32 9, !dbg !17179
  %hca_cur49 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps48, i32 0, i32 0, !dbg !17179
  %arrayidx50 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur49, i64 0, i64 8, !dbg !17179
  %arraydecay51 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx50, i64 0, i64 0, !dbg !17179
  %add.ptr52 = getelementptr i32, i32* %arraydecay51, i64 0, !dbg !17179
  %25 = load i32, i32* %add.ptr52, align 4, !dbg !17179
  %and53 = and i32 %25, 255, !dbg !17179
  %shl54 = shl i32 %and53, 24, !dbg !17179
  %26 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17179
  %dev55 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %26, i32 0, i32 0, !dbg !17179
  %27 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev55, align 8, !dbg !17179
  %caps56 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %27, i32 0, i32 9, !dbg !17179
  %hca_cur57 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps56, i32 0, i32 0, !dbg !17179
  %arrayidx58 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur57, i64 0, i64 8, !dbg !17179
  %arraydecay59 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx58, i64 0, i64 0, !dbg !17179
  %add.ptr60 = getelementptr i32, i32* %arraydecay59, i64 0, !dbg !17179
  %28 = load i32, i32* %add.ptr60, align 4, !dbg !17179
  %and61 = and i32 %28, 65280, !dbg !17179
  %shl62 = shl i32 %and61, 8, !dbg !17179
  %or63 = or i32 %shl54, %shl62, !dbg !17179
  %29 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17179
  %dev64 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %29, i32 0, i32 0, !dbg !17179
  %30 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev64, align 8, !dbg !17179
  %caps65 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %30, i32 0, i32 9, !dbg !17179
  %hca_cur66 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps65, i32 0, i32 0, !dbg !17179
  %arrayidx67 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur66, i64 0, i64 8, !dbg !17179
  %arraydecay68 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx67, i64 0, i64 0, !dbg !17179
  %add.ptr69 = getelementptr i32, i32* %arraydecay68, i64 0, !dbg !17179
  %31 = load i32, i32* %add.ptr69, align 4, !dbg !17179
  %and70 = and i32 %31, 16711680, !dbg !17179
  %shr71 = lshr i32 %and70, 8, !dbg !17179
  %or72 = or i32 %or63, %shr71, !dbg !17179
  %32 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17179
  %dev73 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %32, i32 0, i32 0, !dbg !17179
  %33 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev73, align 8, !dbg !17179
  %caps74 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %33, i32 0, i32 9, !dbg !17179
  %hca_cur75 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps74, i32 0, i32 0, !dbg !17179
  %arrayidx76 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur75, i64 0, i64 8, !dbg !17179
  %arraydecay77 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx76, i64 0, i64 0, !dbg !17179
  %add.ptr78 = getelementptr i32, i32* %arraydecay77, i64 0, !dbg !17179
  %34 = load i32, i32* %add.ptr78, align 4, !dbg !17179
  %and79 = and i32 %34, -16777216, !dbg !17179
  %shr80 = lshr i32 %and79, 24, !dbg !17179
  %or81 = or i32 %or72, %shr80, !dbg !17179
  br label %cond.end90, !dbg !17179

cond.false82:                                     ; preds = %if.end
  %35 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17179
  %dev83 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %35, i32 0, i32 0, !dbg !17179
  %36 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev83, align 8, !dbg !17179
  %caps84 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %36, i32 0, i32 9, !dbg !17179
  %hca_cur85 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps84, i32 0, i32 0, !dbg !17179
  %arrayidx86 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur85, i64 0, i64 8, !dbg !17179
  %arraydecay87 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx86, i64 0, i64 0, !dbg !17179
  %add.ptr88 = getelementptr i32, i32* %arraydecay87, i64 0, !dbg !17179
  %37 = load i32, i32* %add.ptr88, align 4, !dbg !17179
  %call89 = call i32 @__fswab32(i32 %37) #10, !dbg !17179
  br label %cond.end90, !dbg !17179

cond.end90:                                       ; preds = %cond.false82, %cond.true46
  %cond91 = phi i32 [ %or81, %cond.true46 ], [ %call89, %cond.false82 ], !dbg !17179
  %shr92 = lshr i32 %cond91, 24, !dbg !17179
  %and93 = and i32 %shr92, 255, !dbg !17179
  %and94 = and i32 %and93, 1, !dbg !17181
  %tobool95 = icmp ne i32 %and94, 0, !dbg !17181
  br i1 %tobool95, label %if.end97, label %if.then96, !dbg !17182

if.then96:                                        ; preds = %cond.end90
  store i1 false, i1* %retval, align 1, !dbg !17183
  br label %return, !dbg !17183

if.end97:                                         ; preds = %cond.end90
  %38 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17184
  %dev98 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %38, i32 0, i32 0, !dbg !17184
  %39 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev98, align 8, !dbg !17184
  %caps99 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %39, i32 0, i32 9, !dbg !17184
  %hca_cur100 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps99, i32 0, i32 0, !dbg !17184
  %arrayidx101 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur100, i64 0, i64 8, !dbg !17184
  %arraydecay102 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx101, i64 0, i64 0, !dbg !17184
  %add.ptr103 = getelementptr i32, i32* %arraydecay102, i64 0, !dbg !17184
  %40 = load i32, i32* %add.ptr103, align 4, !dbg !17184
  %41 = call i1 @llvm.is.constant.i32(i32 %40), !dbg !17184
  br i1 %41, label %cond.true104, label %cond.false140, !dbg !17184

cond.true104:                                     ; preds = %if.end97
  %42 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17184
  %dev105 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %42, i32 0, i32 0, !dbg !17184
  %43 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev105, align 8, !dbg !17184
  %caps106 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %43, i32 0, i32 9, !dbg !17184
  %hca_cur107 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps106, i32 0, i32 0, !dbg !17184
  %arrayidx108 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur107, i64 0, i64 8, !dbg !17184
  %arraydecay109 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx108, i64 0, i64 0, !dbg !17184
  %add.ptr110 = getelementptr i32, i32* %arraydecay109, i64 0, !dbg !17184
  %44 = load i32, i32* %add.ptr110, align 4, !dbg !17184
  %and111 = and i32 %44, 255, !dbg !17184
  %shl112 = shl i32 %and111, 24, !dbg !17184
  %45 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17184
  %dev113 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %45, i32 0, i32 0, !dbg !17184
  %46 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev113, align 8, !dbg !17184
  %caps114 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %46, i32 0, i32 9, !dbg !17184
  %hca_cur115 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps114, i32 0, i32 0, !dbg !17184
  %arrayidx116 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur115, i64 0, i64 8, !dbg !17184
  %arraydecay117 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx116, i64 0, i64 0, !dbg !17184
  %add.ptr118 = getelementptr i32, i32* %arraydecay117, i64 0, !dbg !17184
  %47 = load i32, i32* %add.ptr118, align 4, !dbg !17184
  %and119 = and i32 %47, 65280, !dbg !17184
  %shl120 = shl i32 %and119, 8, !dbg !17184
  %or121 = or i32 %shl112, %shl120, !dbg !17184
  %48 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17184
  %dev122 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %48, i32 0, i32 0, !dbg !17184
  %49 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev122, align 8, !dbg !17184
  %caps123 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %49, i32 0, i32 9, !dbg !17184
  %hca_cur124 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps123, i32 0, i32 0, !dbg !17184
  %arrayidx125 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur124, i64 0, i64 8, !dbg !17184
  %arraydecay126 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx125, i64 0, i64 0, !dbg !17184
  %add.ptr127 = getelementptr i32, i32* %arraydecay126, i64 0, !dbg !17184
  %50 = load i32, i32* %add.ptr127, align 4, !dbg !17184
  %and128 = and i32 %50, 16711680, !dbg !17184
  %shr129 = lshr i32 %and128, 8, !dbg !17184
  %or130 = or i32 %or121, %shr129, !dbg !17184
  %51 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17184
  %dev131 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %51, i32 0, i32 0, !dbg !17184
  %52 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev131, align 8, !dbg !17184
  %caps132 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %52, i32 0, i32 9, !dbg !17184
  %hca_cur133 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps132, i32 0, i32 0, !dbg !17184
  %arrayidx134 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur133, i64 0, i64 8, !dbg !17184
  %arraydecay135 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx134, i64 0, i64 0, !dbg !17184
  %add.ptr136 = getelementptr i32, i32* %arraydecay135, i64 0, !dbg !17184
  %53 = load i32, i32* %add.ptr136, align 4, !dbg !17184
  %and137 = and i32 %53, -16777216, !dbg !17184
  %shr138 = lshr i32 %and137, 24, !dbg !17184
  %or139 = or i32 %or130, %shr138, !dbg !17184
  br label %cond.end148, !dbg !17184

cond.false140:                                    ; preds = %if.end97
  %54 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17184
  %dev141 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %54, i32 0, i32 0, !dbg !17184
  %55 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev141, align 8, !dbg !17184
  %caps142 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %55, i32 0, i32 9, !dbg !17184
  %hca_cur143 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps142, i32 0, i32 0, !dbg !17184
  %arrayidx144 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur143, i64 0, i64 8, !dbg !17184
  %arraydecay145 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx144, i64 0, i64 0, !dbg !17184
  %add.ptr146 = getelementptr i32, i32* %arraydecay145, i64 0, !dbg !17184
  %56 = load i32, i32* %add.ptr146, align 4, !dbg !17184
  %call147 = call i32 @__fswab32(i32 %56) #10, !dbg !17184
  br label %cond.end148, !dbg !17184

cond.end148:                                      ; preds = %cond.false140, %cond.true104
  %cond149 = phi i32 [ %or139, %cond.true104 ], [ %call147, %cond.false140 ], !dbg !17184
  %shr150 = lshr i32 %cond149, 8, !dbg !17184
  %and151 = and i32 %shr150, 1, !dbg !17184
  %tobool152 = icmp ne i32 %and151, 0, !dbg !17184
  br i1 %tobool152, label %if.end154, label %if.then153, !dbg !17186

if.then153:                                       ; preds = %cond.end148
  store i1 false, i1* %retval, align 1, !dbg !17187
  br label %return, !dbg !17187

if.end154:                                        ; preds = %cond.end148
  %57 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17188
  %dev155 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %57, i32 0, i32 0, !dbg !17190
  %58 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev155, align 8, !dbg !17190
  %call156 = call zeroext i1 @mlx5_core_is_ecpf_esw_manager(%struct.mlx5_core_dev* %58) #8, !dbg !17191
  br i1 %call156, label %if.then159, label %lor.lhs.false, !dbg !17192

lor.lhs.false:                                    ; preds = %if.end154
  %59 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17193
  %dev157 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %59, i32 0, i32 0, !dbg !17194
  %60 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev157, align 8, !dbg !17194
  %call158 = call zeroext i1 @mlx5_ecpf_vport_exists(%struct.mlx5_core_dev* %60) #8, !dbg !17195
  br i1 %call158, label %if.then159, label %if.end160, !dbg !17196

if.then159:                                       ; preds = %lor.lhs.false, %if.end154
  store i1 false, i1* %retval, align 1, !dbg !17197
  br label %return, !dbg !17197

if.end160:                                        ; preds = %lor.lhs.false
  store i1 true, i1* %retval, align 1, !dbg !17198
  br label %return, !dbg !17198

return:                                           ; preds = %if.end160, %if.then159, %if.then153, %if.then96, %if.then
  %61 = load i1, i1* %retval, align 1, !dbg !17199
  ret i1 %61, !dbg !17199
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @esw_offloads_metadata_init(%struct.mlx5_eswitch* %esw) #0 !dbg !17200 {
entry:
  %retval = alloca i32, align 4
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  %vport = alloca %struct.mlx5_vport*, align 8
  %err = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !17201, metadata !DIExpression()), !dbg !17202
  call void @llvm.dbg.declare(metadata %struct.mlx5_vport** %vport, metadata !17203, metadata !DIExpression()), !dbg !17204
  call void @llvm.dbg.declare(metadata i32* %err, metadata !17205, metadata !DIExpression()), !dbg !17206
  call void @llvm.dbg.declare(metadata i32* %i, metadata !17207, metadata !DIExpression()), !dbg !17208
  %0 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17209
  %call = call zeroext i1 @mlx5_eswitch_vport_match_metadata_enabled(%struct.mlx5_eswitch* %0) #8, !dbg !17211
  br i1 %call, label %if.end, label %if.then, !dbg !17212

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !17213
  br label %return, !dbg !17213

if.end:                                           ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !17214
  br label %for.cond, !dbg !17214

for.cond:                                         ; preds = %for.inc, %if.end
  %1 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17216
  %vports = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %1, i32 0, i32 6, !dbg !17216
  %2 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vports, align 8, !dbg !17216
  %3 = load i32, i32* %i, align 4, !dbg !17216
  %idxprom = sext i32 %3 to i64, !dbg !17216
  %arrayidx = getelementptr %struct.mlx5_vport, %struct.mlx5_vport* %2, i64 %idxprom, !dbg !17216
  store %struct.mlx5_vport* %arrayidx, %struct.mlx5_vport** %vport, align 8, !dbg !17216
  %4 = load i32, i32* %i, align 4, !dbg !17216
  %5 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17216
  %total_vports = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %5, i32 0, i32 8, !dbg !17216
  %6 = load i32, i32* %total_vports, align 4, !dbg !17216
  %cmp = icmp slt i32 %4, %6, !dbg !17216
  br i1 %cmp, label %for.body, label %for.end, !dbg !17214

for.body:                                         ; preds = %for.cond
  %7 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17218
  %8 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport, align 8, !dbg !17220
  %call1 = call i32 @esw_offloads_vport_metadata_setup(%struct.mlx5_eswitch* %7, %struct.mlx5_vport* %8) #8, !dbg !17221
  store i32 %call1, i32* %err, align 4, !dbg !17222
  %9 = load i32, i32* %err, align 4, !dbg !17223
  %tobool = icmp ne i32 %9, 0, !dbg !17223
  br i1 %tobool, label %if.then2, label %if.end3, !dbg !17225

if.then2:                                         ; preds = %for.body
  br label %metadata_err, !dbg !17226

if.end3:                                          ; preds = %for.body
  br label %for.inc, !dbg !17227

for.inc:                                          ; preds = %if.end3
  %10 = load i32, i32* %i, align 4, !dbg !17216
  %inc = add i32 %10, 1, !dbg !17216
  store i32 %inc, i32* %i, align 4, !dbg !17216
  br label %for.cond, !dbg !17216, !llvm.loop !17228

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !17230
  br label %return, !dbg !17230

metadata_err:                                     ; preds = %if.then2
  call void @llvm.dbg.label(metadata !17231), !dbg !17232
  %11 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17233
  call void @esw_offloads_metadata_uninit(%struct.mlx5_eswitch* %11) #8, !dbg !17234
  %12 = load i32, i32* %err, align 4, !dbg !17235
  store i32 %12, i32* %retval, align 4, !dbg !17236
  br label %return, !dbg !17236

return:                                           ; preds = %metadata_err, %for.end, %if.then
  %13 = load i32, i32* %retval, align 4, !dbg !17237
  ret i32 %13, !dbg !17237
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @esw_set_passing_vport_metadata(%struct.mlx5_eswitch* %esw, i1 zeroext %enable) #0 !dbg !17238 {
entry:
  %retval = alloca i32, align 4
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  %enable.addr = alloca i8, align 1
  %out = alloca [68 x i32], align 16
  %min = alloca [68 x i32], align 16
  %in = alloca [4 x i32], align 16
  %curr = alloca i8, align 1
  %wanted = alloca i8, align 1
  %err = alloca i32, align 4
  %_v = alloca i32, align 4
  %tmp = alloca i32, align 4
  %_v257 = alloca i32, align 4
  %_v473 = alloca i32, align 4
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !17241, metadata !DIExpression()), !dbg !17242
  %frombool = zext i1 %enable to i8
  store i8 %frombool, i8* %enable.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %enable.addr, metadata !17243, metadata !DIExpression()), !dbg !17244
  call void @llvm.dbg.declare(metadata [68 x i32]* %out, metadata !17245, metadata !DIExpression()), !dbg !17249
  %0 = bitcast [68 x i32]* %out to i8*, !dbg !17249
  call void @llvm.memset.p0i8.i64(i8* align 16 %0, i8 0, i64 272, i1 false), !dbg !17249
  call void @llvm.dbg.declare(metadata [68 x i32]* %min, metadata !17250, metadata !DIExpression()), !dbg !17251
  %1 = bitcast [68 x i32]* %min to i8*, !dbg !17251
  call void @llvm.memset.p0i8.i64(i8* align 16 %1, i8 0, i64 272, i1 false), !dbg !17251
  call void @llvm.dbg.declare(metadata [4 x i32]* %in, metadata !17252, metadata !DIExpression()), !dbg !17254
  %2 = bitcast [4 x i32]* %in to i8*, !dbg !17254
  call void @llvm.memset.p0i8.i64(i8* align 16 %2, i8 0, i64 16, i1 false), !dbg !17254
  call void @llvm.dbg.declare(metadata i8* %curr, metadata !17255, metadata !DIExpression()), !dbg !17256
  call void @llvm.dbg.declare(metadata i8* %wanted, metadata !17257, metadata !DIExpression()), !dbg !17258
  call void @llvm.dbg.declare(metadata i32* %err, metadata !17259, metadata !DIExpression()), !dbg !17260
  %3 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17261
  %call = call zeroext i1 @mlx5_eswitch_reg_c1_loopback_supported(%struct.mlx5_eswitch* %3) #8, !dbg !17263
  br i1 %call, label %if.end, label %land.lhs.true, !dbg !17264

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17265
  %call1 = call zeroext i1 @mlx5_eswitch_vport_match_metadata_enabled(%struct.mlx5_eswitch* %4) #8, !dbg !17266
  br i1 %call1, label %if.end, label %if.then, !dbg !17267

if.then:                                          ; preds = %land.lhs.true
  store i32 0, i32* %retval, align 4, !dbg !17268
  br label %return, !dbg !17268

if.end:                                           ; preds = %land.lhs.true, %entry
  br label %do.body, !dbg !17269

do.body:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %_v, metadata !17270, metadata !DIExpression()), !dbg !17272
  store i32 1874, i32* %_v, align 4, !dbg !17272
  br label %do.body2, !dbg !17272

do.body2:                                         ; preds = %do.body
  br label %do.end, !dbg !17273

do.end:                                           ; preds = %do.body2
  %arraydecay = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !17272
  %add.ptr = getelementptr i32, i32* %arraydecay, i64 0, !dbg !17272
  %5 = load i32, i32* %add.ptr, align 4, !dbg !17272
  %6 = call i1 @llvm.is.constant.i32(i32 %5), !dbg !17272
  br i1 %6, label %cond.true, label %cond.false, !dbg !17272

cond.true:                                        ; preds = %do.end
  %arraydecay3 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !17272
  %add.ptr4 = getelementptr i32, i32* %arraydecay3, i64 0, !dbg !17272
  %7 = load i32, i32* %add.ptr4, align 4, !dbg !17272
  %and = and i32 %7, 255, !dbg !17272
  %shl = shl i32 %and, 24, !dbg !17272
  %arraydecay5 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !17272
  %add.ptr6 = getelementptr i32, i32* %arraydecay5, i64 0, !dbg !17272
  %8 = load i32, i32* %add.ptr6, align 4, !dbg !17272
  %and7 = and i32 %8, 65280, !dbg !17272
  %shl8 = shl i32 %and7, 8, !dbg !17272
  %or = or i32 %shl, %shl8, !dbg !17272
  %arraydecay9 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !17272
  %add.ptr10 = getelementptr i32, i32* %arraydecay9, i64 0, !dbg !17272
  %9 = load i32, i32* %add.ptr10, align 4, !dbg !17272
  %and11 = and i32 %9, 16711680, !dbg !17272
  %shr = lshr i32 %and11, 8, !dbg !17272
  %or12 = or i32 %or, %shr, !dbg !17272
  %arraydecay13 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !17272
  %add.ptr14 = getelementptr i32, i32* %arraydecay13, i64 0, !dbg !17272
  %10 = load i32, i32* %add.ptr14, align 4, !dbg !17272
  %and15 = and i32 %10, -16777216, !dbg !17272
  %shr16 = lshr i32 %and15, 24, !dbg !17272
  %or17 = or i32 %or12, %shr16, !dbg !17272
  br label %cond.end, !dbg !17272

cond.false:                                       ; preds = %do.end
  %arraydecay18 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !17272
  %add.ptr19 = getelementptr i32, i32* %arraydecay18, i64 0, !dbg !17272
  %11 = load i32, i32* %add.ptr19, align 4, !dbg !17272
  %call20 = call i32 @__fswab32(i32 %11) #10, !dbg !17272
  br label %cond.end, !dbg !17272

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %or17, %cond.true ], [ %call20, %cond.false ], !dbg !17272
  %and21 = and i32 %cond, 65535, !dbg !17272
  %12 = load i32, i32* %_v, align 4, !dbg !17272
  %and22 = and i32 %12, 65535, !dbg !17272
  %shl23 = shl i32 %and22, 16, !dbg !17272
  %or24 = or i32 %and21, %shl23, !dbg !17272
  %13 = call i1 @llvm.is.constant.i32(i32 %or24), !dbg !17272
  br i1 %13, label %cond.true25, label %cond.false165, !dbg !17272

cond.true25:                                      ; preds = %cond.end
  %arraydecay26 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !17272
  %add.ptr27 = getelementptr i32, i32* %arraydecay26, i64 0, !dbg !17272
  %14 = load i32, i32* %add.ptr27, align 4, !dbg !17272
  %15 = call i1 @llvm.is.constant.i32(i32 %14), !dbg !17272
  br i1 %15, label %cond.true28, label %cond.false48, !dbg !17272

cond.true28:                                      ; preds = %cond.true25
  %arraydecay29 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !17272
  %add.ptr30 = getelementptr i32, i32* %arraydecay29, i64 0, !dbg !17272
  %16 = load i32, i32* %add.ptr30, align 4, !dbg !17272
  %and31 = and i32 %16, 255, !dbg !17272
  %shl32 = shl i32 %and31, 24, !dbg !17272
  %arraydecay33 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !17272
  %add.ptr34 = getelementptr i32, i32* %arraydecay33, i64 0, !dbg !17272
  %17 = load i32, i32* %add.ptr34, align 4, !dbg !17272
  %and35 = and i32 %17, 65280, !dbg !17272
  %shl36 = shl i32 %and35, 8, !dbg !17272
  %or37 = or i32 %shl32, %shl36, !dbg !17272
  %arraydecay38 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !17272
  %add.ptr39 = getelementptr i32, i32* %arraydecay38, i64 0, !dbg !17272
  %18 = load i32, i32* %add.ptr39, align 4, !dbg !17272
  %and40 = and i32 %18, 16711680, !dbg !17272
  %shr41 = lshr i32 %and40, 8, !dbg !17272
  %or42 = or i32 %or37, %shr41, !dbg !17272
  %arraydecay43 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !17272
  %add.ptr44 = getelementptr i32, i32* %arraydecay43, i64 0, !dbg !17272
  %19 = load i32, i32* %add.ptr44, align 4, !dbg !17272
  %and45 = and i32 %19, -16777216, !dbg !17272
  %shr46 = lshr i32 %and45, 24, !dbg !17272
  %or47 = or i32 %or42, %shr46, !dbg !17272
  br label %cond.end52, !dbg !17272

cond.false48:                                     ; preds = %cond.true25
  %arraydecay49 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !17272
  %add.ptr50 = getelementptr i32, i32* %arraydecay49, i64 0, !dbg !17272
  %20 = load i32, i32* %add.ptr50, align 4, !dbg !17272
  %call51 = call i32 @__fswab32(i32 %20) #10, !dbg !17272
  br label %cond.end52, !dbg !17272

cond.end52:                                       ; preds = %cond.false48, %cond.true28
  %cond53 = phi i32 [ %or47, %cond.true28 ], [ %call51, %cond.false48 ], !dbg !17272
  %and54 = and i32 %cond53, 65535, !dbg !17272
  %21 = load i32, i32* %_v, align 4, !dbg !17272
  %and55 = and i32 %21, 65535, !dbg !17272
  %shl56 = shl i32 %and55, 16, !dbg !17272
  %or57 = or i32 %and54, %shl56, !dbg !17272
  %and58 = and i32 %or57, 255, !dbg !17272
  %shl59 = shl i32 %and58, 24, !dbg !17272
  %arraydecay60 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !17272
  %add.ptr61 = getelementptr i32, i32* %arraydecay60, i64 0, !dbg !17272
  %22 = load i32, i32* %add.ptr61, align 4, !dbg !17272
  %23 = call i1 @llvm.is.constant.i32(i32 %22), !dbg !17272
  br i1 %23, label %cond.true62, label %cond.false82, !dbg !17272

cond.true62:                                      ; preds = %cond.end52
  %arraydecay63 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !17272
  %add.ptr64 = getelementptr i32, i32* %arraydecay63, i64 0, !dbg !17272
  %24 = load i32, i32* %add.ptr64, align 4, !dbg !17272
  %and65 = and i32 %24, 255, !dbg !17272
  %shl66 = shl i32 %and65, 24, !dbg !17272
  %arraydecay67 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !17272
  %add.ptr68 = getelementptr i32, i32* %arraydecay67, i64 0, !dbg !17272
  %25 = load i32, i32* %add.ptr68, align 4, !dbg !17272
  %and69 = and i32 %25, 65280, !dbg !17272
  %shl70 = shl i32 %and69, 8, !dbg !17272
  %or71 = or i32 %shl66, %shl70, !dbg !17272
  %arraydecay72 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !17272
  %add.ptr73 = getelementptr i32, i32* %arraydecay72, i64 0, !dbg !17272
  %26 = load i32, i32* %add.ptr73, align 4, !dbg !17272
  %and74 = and i32 %26, 16711680, !dbg !17272
  %shr75 = lshr i32 %and74, 8, !dbg !17272
  %or76 = or i32 %or71, %shr75, !dbg !17272
  %arraydecay77 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !17272
  %add.ptr78 = getelementptr i32, i32* %arraydecay77, i64 0, !dbg !17272
  %27 = load i32, i32* %add.ptr78, align 4, !dbg !17272
  %and79 = and i32 %27, -16777216, !dbg !17272
  %shr80 = lshr i32 %and79, 24, !dbg !17272
  %or81 = or i32 %or76, %shr80, !dbg !17272
  br label %cond.end86, !dbg !17272

cond.false82:                                     ; preds = %cond.end52
  %arraydecay83 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !17272
  %add.ptr84 = getelementptr i32, i32* %arraydecay83, i64 0, !dbg !17272
  %28 = load i32, i32* %add.ptr84, align 4, !dbg !17272
  %call85 = call i32 @__fswab32(i32 %28) #10, !dbg !17272
  br label %cond.end86, !dbg !17272

cond.end86:                                       ; preds = %cond.false82, %cond.true62
  %cond87 = phi i32 [ %or81, %cond.true62 ], [ %call85, %cond.false82 ], !dbg !17272
  %and88 = and i32 %cond87, 65535, !dbg !17272
  %29 = load i32, i32* %_v, align 4, !dbg !17272
  %and89 = and i32 %29, 65535, !dbg !17272
  %shl90 = shl i32 %and89, 16, !dbg !17272
  %or91 = or i32 %and88, %shl90, !dbg !17272
  %and92 = and i32 %or91, 65280, !dbg !17272
  %shl93 = shl i32 %and92, 8, !dbg !17272
  %or94 = or i32 %shl59, %shl93, !dbg !17272
  %arraydecay95 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !17272
  %add.ptr96 = getelementptr i32, i32* %arraydecay95, i64 0, !dbg !17272
  %30 = load i32, i32* %add.ptr96, align 4, !dbg !17272
  %31 = call i1 @llvm.is.constant.i32(i32 %30), !dbg !17272
  br i1 %31, label %cond.true97, label %cond.false117, !dbg !17272

cond.true97:                                      ; preds = %cond.end86
  %arraydecay98 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !17272
  %add.ptr99 = getelementptr i32, i32* %arraydecay98, i64 0, !dbg !17272
  %32 = load i32, i32* %add.ptr99, align 4, !dbg !17272
  %and100 = and i32 %32, 255, !dbg !17272
  %shl101 = shl i32 %and100, 24, !dbg !17272
  %arraydecay102 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !17272
  %add.ptr103 = getelementptr i32, i32* %arraydecay102, i64 0, !dbg !17272
  %33 = load i32, i32* %add.ptr103, align 4, !dbg !17272
  %and104 = and i32 %33, 65280, !dbg !17272
  %shl105 = shl i32 %and104, 8, !dbg !17272
  %or106 = or i32 %shl101, %shl105, !dbg !17272
  %arraydecay107 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !17272
  %add.ptr108 = getelementptr i32, i32* %arraydecay107, i64 0, !dbg !17272
  %34 = load i32, i32* %add.ptr108, align 4, !dbg !17272
  %and109 = and i32 %34, 16711680, !dbg !17272
  %shr110 = lshr i32 %and109, 8, !dbg !17272
  %or111 = or i32 %or106, %shr110, !dbg !17272
  %arraydecay112 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !17272
  %add.ptr113 = getelementptr i32, i32* %arraydecay112, i64 0, !dbg !17272
  %35 = load i32, i32* %add.ptr113, align 4, !dbg !17272
  %and114 = and i32 %35, -16777216, !dbg !17272
  %shr115 = lshr i32 %and114, 24, !dbg !17272
  %or116 = or i32 %or111, %shr115, !dbg !17272
  br label %cond.end121, !dbg !17272

cond.false117:                                    ; preds = %cond.end86
  %arraydecay118 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !17272
  %add.ptr119 = getelementptr i32, i32* %arraydecay118, i64 0, !dbg !17272
  %36 = load i32, i32* %add.ptr119, align 4, !dbg !17272
  %call120 = call i32 @__fswab32(i32 %36) #10, !dbg !17272
  br label %cond.end121, !dbg !17272

cond.end121:                                      ; preds = %cond.false117, %cond.true97
  %cond122 = phi i32 [ %or116, %cond.true97 ], [ %call120, %cond.false117 ], !dbg !17272
  %and123 = and i32 %cond122, 65535, !dbg !17272
  %37 = load i32, i32* %_v, align 4, !dbg !17272
  %and124 = and i32 %37, 65535, !dbg !17272
  %shl125 = shl i32 %and124, 16, !dbg !17272
  %or126 = or i32 %and123, %shl125, !dbg !17272
  %and127 = and i32 %or126, 16711680, !dbg !17272
  %shr128 = lshr i32 %and127, 8, !dbg !17272
  %or129 = or i32 %or94, %shr128, !dbg !17272
  %arraydecay130 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !17272
  %add.ptr131 = getelementptr i32, i32* %arraydecay130, i64 0, !dbg !17272
  %38 = load i32, i32* %add.ptr131, align 4, !dbg !17272
  %39 = call i1 @llvm.is.constant.i32(i32 %38), !dbg !17272
  br i1 %39, label %cond.true132, label %cond.false152, !dbg !17272

cond.true132:                                     ; preds = %cond.end121
  %arraydecay133 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !17272
  %add.ptr134 = getelementptr i32, i32* %arraydecay133, i64 0, !dbg !17272
  %40 = load i32, i32* %add.ptr134, align 4, !dbg !17272
  %and135 = and i32 %40, 255, !dbg !17272
  %shl136 = shl i32 %and135, 24, !dbg !17272
  %arraydecay137 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !17272
  %add.ptr138 = getelementptr i32, i32* %arraydecay137, i64 0, !dbg !17272
  %41 = load i32, i32* %add.ptr138, align 4, !dbg !17272
  %and139 = and i32 %41, 65280, !dbg !17272
  %shl140 = shl i32 %and139, 8, !dbg !17272
  %or141 = or i32 %shl136, %shl140, !dbg !17272
  %arraydecay142 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !17272
  %add.ptr143 = getelementptr i32, i32* %arraydecay142, i64 0, !dbg !17272
  %42 = load i32, i32* %add.ptr143, align 4, !dbg !17272
  %and144 = and i32 %42, 16711680, !dbg !17272
  %shr145 = lshr i32 %and144, 8, !dbg !17272
  %or146 = or i32 %or141, %shr145, !dbg !17272
  %arraydecay147 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !17272
  %add.ptr148 = getelementptr i32, i32* %arraydecay147, i64 0, !dbg !17272
  %43 = load i32, i32* %add.ptr148, align 4, !dbg !17272
  %and149 = and i32 %43, -16777216, !dbg !17272
  %shr150 = lshr i32 %and149, 24, !dbg !17272
  %or151 = or i32 %or146, %shr150, !dbg !17272
  br label %cond.end156, !dbg !17272

cond.false152:                                    ; preds = %cond.end121
  %arraydecay153 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !17272
  %add.ptr154 = getelementptr i32, i32* %arraydecay153, i64 0, !dbg !17272
  %44 = load i32, i32* %add.ptr154, align 4, !dbg !17272
  %call155 = call i32 @__fswab32(i32 %44) #10, !dbg !17272
  br label %cond.end156, !dbg !17272

cond.end156:                                      ; preds = %cond.false152, %cond.true132
  %cond157 = phi i32 [ %or151, %cond.true132 ], [ %call155, %cond.false152 ], !dbg !17272
  %and158 = and i32 %cond157, 65535, !dbg !17272
  %45 = load i32, i32* %_v, align 4, !dbg !17272
  %and159 = and i32 %45, 65535, !dbg !17272
  %shl160 = shl i32 %and159, 16, !dbg !17272
  %or161 = or i32 %and158, %shl160, !dbg !17272
  %and162 = and i32 %or161, -16777216, !dbg !17272
  %shr163 = lshr i32 %and162, 24, !dbg !17272
  %or164 = or i32 %or129, %shr163, !dbg !17272
  br label %cond.end199, !dbg !17272

cond.false165:                                    ; preds = %cond.end
  %arraydecay166 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !17272
  %add.ptr167 = getelementptr i32, i32* %arraydecay166, i64 0, !dbg !17272
  %46 = load i32, i32* %add.ptr167, align 4, !dbg !17272
  %47 = call i1 @llvm.is.constant.i32(i32 %46), !dbg !17272
  br i1 %47, label %cond.true168, label %cond.false188, !dbg !17272

cond.true168:                                     ; preds = %cond.false165
  %arraydecay169 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !17272
  %add.ptr170 = getelementptr i32, i32* %arraydecay169, i64 0, !dbg !17272
  %48 = load i32, i32* %add.ptr170, align 4, !dbg !17272
  %and171 = and i32 %48, 255, !dbg !17272
  %shl172 = shl i32 %and171, 24, !dbg !17272
  %arraydecay173 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !17272
  %add.ptr174 = getelementptr i32, i32* %arraydecay173, i64 0, !dbg !17272
  %49 = load i32, i32* %add.ptr174, align 4, !dbg !17272
  %and175 = and i32 %49, 65280, !dbg !17272
  %shl176 = shl i32 %and175, 8, !dbg !17272
  %or177 = or i32 %shl172, %shl176, !dbg !17272
  %arraydecay178 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !17272
  %add.ptr179 = getelementptr i32, i32* %arraydecay178, i64 0, !dbg !17272
  %50 = load i32, i32* %add.ptr179, align 4, !dbg !17272
  %and180 = and i32 %50, 16711680, !dbg !17272
  %shr181 = lshr i32 %and180, 8, !dbg !17272
  %or182 = or i32 %or177, %shr181, !dbg !17272
  %arraydecay183 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !17272
  %add.ptr184 = getelementptr i32, i32* %arraydecay183, i64 0, !dbg !17272
  %51 = load i32, i32* %add.ptr184, align 4, !dbg !17272
  %and185 = and i32 %51, -16777216, !dbg !17272
  %shr186 = lshr i32 %and185, 24, !dbg !17272
  %or187 = or i32 %or182, %shr186, !dbg !17272
  br label %cond.end192, !dbg !17272

cond.false188:                                    ; preds = %cond.false165
  %arraydecay189 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !17272
  %add.ptr190 = getelementptr i32, i32* %arraydecay189, i64 0, !dbg !17272
  %52 = load i32, i32* %add.ptr190, align 4, !dbg !17272
  %call191 = call i32 @__fswab32(i32 %52) #10, !dbg !17272
  br label %cond.end192, !dbg !17272

cond.end192:                                      ; preds = %cond.false188, %cond.true168
  %cond193 = phi i32 [ %or187, %cond.true168 ], [ %call191, %cond.false188 ], !dbg !17272
  %and194 = and i32 %cond193, 65535, !dbg !17272
  %53 = load i32, i32* %_v, align 4, !dbg !17272
  %and195 = and i32 %53, 65535, !dbg !17272
  %shl196 = shl i32 %and195, 16, !dbg !17272
  %or197 = or i32 %and194, %shl196, !dbg !17272
  %call198 = call i32 @__fswab32(i32 %or197) #10, !dbg !17272
  br label %cond.end199, !dbg !17272

cond.end199:                                      ; preds = %cond.end192, %cond.end156
  %cond200 = phi i32 [ %or164, %cond.end156 ], [ %call198, %cond.end192 ], !dbg !17272
  %arraydecay201 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !17272
  %add.ptr202 = getelementptr i32, i32* %arraydecay201, i64 0, !dbg !17272
  store i32 %cond200, i32* %add.ptr202, align 4, !dbg !17272
  br label %do.end203, !dbg !17272

do.end203:                                        ; preds = %cond.end199
  %54 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17275
  %dev = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %54, i32 0, i32 0, !dbg !17275
  %55 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !17275
  %arraydecay204 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !17275
  %56 = bitcast i32* %arraydecay204 to i8*, !dbg !17275
  %arraydecay205 = getelementptr inbounds [68 x i32], [68 x i32]* %out, i64 0, i64 0, !dbg !17275
  %57 = bitcast i32* %arraydecay205 to i8*, !dbg !17275
  %call206 = call i32 @mlx5_cmd_exec(%struct.mlx5_core_dev* %55, i8* %56, i32 16, i8* %57, i32 272) #8, !dbg !17275
  store i32 %call206, i32* %tmp, align 4, !dbg !17277
  %58 = load i32, i32* %tmp, align 4, !dbg !17275
  store i32 %58, i32* %err, align 4, !dbg !17278
  %59 = load i32, i32* %err, align 4, !dbg !17279
  %tobool = icmp ne i32 %59, 0, !dbg !17279
  br i1 %tobool, label %if.then207, label %if.end208, !dbg !17281

if.then207:                                       ; preds = %do.end203
  %60 = load i32, i32* %err, align 4, !dbg !17282
  store i32 %60, i32* %retval, align 4, !dbg !17283
  br label %return, !dbg !17283

if.end208:                                        ; preds = %do.end203
  %arraydecay209 = getelementptr inbounds [68 x i32], [68 x i32]* %out, i64 0, i64 0, !dbg !17284
  %add.ptr210 = getelementptr i32, i32* %arraydecay209, i64 4, !dbg !17284
  %61 = load i32, i32* %add.ptr210, align 4, !dbg !17284
  %62 = call i1 @llvm.is.constant.i32(i32 %61), !dbg !17284
  br i1 %62, label %cond.true211, label %cond.false231, !dbg !17284

cond.true211:                                     ; preds = %if.end208
  %arraydecay212 = getelementptr inbounds [68 x i32], [68 x i32]* %out, i64 0, i64 0, !dbg !17284
  %add.ptr213 = getelementptr i32, i32* %arraydecay212, i64 4, !dbg !17284
  %63 = load i32, i32* %add.ptr213, align 4, !dbg !17284
  %and214 = and i32 %63, 255, !dbg !17284
  %shl215 = shl i32 %and214, 24, !dbg !17284
  %arraydecay216 = getelementptr inbounds [68 x i32], [68 x i32]* %out, i64 0, i64 0, !dbg !17284
  %add.ptr217 = getelementptr i32, i32* %arraydecay216, i64 4, !dbg !17284
  %64 = load i32, i32* %add.ptr217, align 4, !dbg !17284
  %and218 = and i32 %64, 65280, !dbg !17284
  %shl219 = shl i32 %and218, 8, !dbg !17284
  %or220 = or i32 %shl215, %shl219, !dbg !17284
  %arraydecay221 = getelementptr inbounds [68 x i32], [68 x i32]* %out, i64 0, i64 0, !dbg !17284
  %add.ptr222 = getelementptr i32, i32* %arraydecay221, i64 4, !dbg !17284
  %65 = load i32, i32* %add.ptr222, align 4, !dbg !17284
  %and223 = and i32 %65, 16711680, !dbg !17284
  %shr224 = lshr i32 %and223, 8, !dbg !17284
  %or225 = or i32 %or220, %shr224, !dbg !17284
  %arraydecay226 = getelementptr inbounds [68 x i32], [68 x i32]* %out, i64 0, i64 0, !dbg !17284
  %add.ptr227 = getelementptr i32, i32* %arraydecay226, i64 4, !dbg !17284
  %66 = load i32, i32* %add.ptr227, align 4, !dbg !17284
  %and228 = and i32 %66, -16777216, !dbg !17284
  %shr229 = lshr i32 %and228, 24, !dbg !17284
  %or230 = or i32 %or225, %shr229, !dbg !17284
  br label %cond.end235, !dbg !17284

cond.false231:                                    ; preds = %if.end208
  %arraydecay232 = getelementptr inbounds [68 x i32], [68 x i32]* %out, i64 0, i64 0, !dbg !17284
  %add.ptr233 = getelementptr i32, i32* %arraydecay232, i64 4, !dbg !17284
  %67 = load i32, i32* %add.ptr233, align 4, !dbg !17284
  %call234 = call i32 @__fswab32(i32 %67) #10, !dbg !17284
  br label %cond.end235, !dbg !17284

cond.end235:                                      ; preds = %cond.false231, %cond.true211
  %cond236 = phi i32 [ %or230, %cond.true211 ], [ %call234, %cond.false231 ], !dbg !17284
  %shr237 = lshr i32 %cond236, 16, !dbg !17284
  %and238 = and i32 %shr237, 255, !dbg !17284
  %conv = trunc i32 %and238 to i8, !dbg !17284
  store i8 %conv, i8* %curr, align 1, !dbg !17285
  store i8 1, i8* %wanted, align 1, !dbg !17286
  %68 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17287
  %call239 = call zeroext i1 @mlx5_eswitch_reg_c1_loopback_supported(%struct.mlx5_eswitch* %68) #8, !dbg !17289
  br i1 %call239, label %if.then240, label %if.end244, !dbg !17290

if.then240:                                       ; preds = %cond.end235
  %69 = load i8, i8* %wanted, align 1, !dbg !17291
  %conv241 = zext i8 %69 to i32, !dbg !17291
  %or242 = or i32 %conv241, 2, !dbg !17291
  %conv243 = trunc i32 %or242 to i8, !dbg !17291
  store i8 %conv243, i8* %wanted, align 1, !dbg !17291
  br label %if.end244, !dbg !17292

if.end244:                                        ; preds = %if.then240, %cond.end235
  %70 = load i8, i8* %enable.addr, align 1, !dbg !17293
  %tobool245 = trunc i8 %70 to i1, !dbg !17293
  br i1 %tobool245, label %if.then246, label %if.else, !dbg !17295

if.then246:                                       ; preds = %if.end244
  %71 = load i8, i8* %wanted, align 1, !dbg !17296
  %conv247 = zext i8 %71 to i32, !dbg !17296
  %72 = load i8, i8* %curr, align 1, !dbg !17297
  %conv248 = zext i8 %72 to i32, !dbg !17297
  %or249 = or i32 %conv248, %conv247, !dbg !17297
  %conv250 = trunc i32 %or249 to i8, !dbg !17297
  store i8 %conv250, i8* %curr, align 1, !dbg !17297
  br label %if.end255, !dbg !17298

if.else:                                          ; preds = %if.end244
  %73 = load i8, i8* %wanted, align 1, !dbg !17299
  %conv251 = zext i8 %73 to i32, !dbg !17299
  %neg = xor i32 %conv251, -1, !dbg !17300
  %74 = load i8, i8* %curr, align 1, !dbg !17301
  %conv252 = zext i8 %74 to i32, !dbg !17301
  %and253 = and i32 %conv252, %neg, !dbg !17301
  %conv254 = trunc i32 %and253 to i8, !dbg !17301
  store i8 %conv254, i8* %curr, align 1, !dbg !17301
  br label %if.end255

if.end255:                                        ; preds = %if.else, %if.then246
  br label %do.body256, !dbg !17302

do.body256:                                       ; preds = %if.end255
  call void @llvm.dbg.declare(metadata i32* %_v257, metadata !17303, metadata !DIExpression()), !dbg !17305
  %75 = load i8, i8* %curr, align 1, !dbg !17305
  %conv258 = zext i8 %75 to i32, !dbg !17305
  store i32 %conv258, i32* %_v257, align 4, !dbg !17305
  br label %do.body259, !dbg !17305

do.body259:                                       ; preds = %do.body256
  br label %do.end260, !dbg !17306

do.end260:                                        ; preds = %do.body259
  %arraydecay261 = getelementptr inbounds [68 x i32], [68 x i32]* %min, i64 0, i64 0, !dbg !17305
  %add.ptr262 = getelementptr i32, i32* %arraydecay261, i64 4, !dbg !17305
  %76 = load i32, i32* %add.ptr262, align 4, !dbg !17305
  %77 = call i1 @llvm.is.constant.i32(i32 %76), !dbg !17305
  br i1 %77, label %cond.true263, label %cond.false283, !dbg !17305

cond.true263:                                     ; preds = %do.end260
  %arraydecay264 = getelementptr inbounds [68 x i32], [68 x i32]* %min, i64 0, i64 0, !dbg !17305
  %add.ptr265 = getelementptr i32, i32* %arraydecay264, i64 4, !dbg !17305
  %78 = load i32, i32* %add.ptr265, align 4, !dbg !17305
  %and266 = and i32 %78, 255, !dbg !17305
  %shl267 = shl i32 %and266, 24, !dbg !17305
  %arraydecay268 = getelementptr inbounds [68 x i32], [68 x i32]* %min, i64 0, i64 0, !dbg !17305
  %add.ptr269 = getelementptr i32, i32* %arraydecay268, i64 4, !dbg !17305
  %79 = load i32, i32* %add.ptr269, align 4, !dbg !17305
  %and270 = and i32 %79, 65280, !dbg !17305
  %shl271 = shl i32 %and270, 8, !dbg !17305
  %or272 = or i32 %shl267, %shl271, !dbg !17305
  %arraydecay273 = getelementptr inbounds [68 x i32], [68 x i32]* %min, i64 0, i64 0, !dbg !17305
  %add.ptr274 = getelementptr i32, i32* %arraydecay273, i64 4, !dbg !17305
  %80 = load i32, i32* %add.ptr274, align 4, !dbg !17305
  %and275 = and i32 %80, 16711680, !dbg !17305
  %shr276 = lshr i32 %and275, 8, !dbg !17305
  %or277 = or i32 %or272, %shr276, !dbg !17305
  %arraydecay278 = getelementptr inbounds [68 x i32], [68 x i32]* %min, i64 0, i64 0, !dbg !17305
  %add.ptr279 = getelementptr i32, i32* %arraydecay278, i64 4, !dbg !17305
  %81 = load i32, i32* %add.ptr279, align 4, !dbg !17305
  %and280 = and i32 %81, -16777216, !dbg !17305
  %shr281 = lshr i32 %and280, 24, !dbg !17305
  %or282 = or i32 %or277, %shr281, !dbg !17305
  br label %cond.end287, !dbg !17305

cond.false283:                                    ; preds = %do.end260
  %arraydecay284 = getelementptr inbounds [68 x i32], [68 x i32]* %min, i64 0, i64 0, !dbg !17305
  %add.ptr285 = getelementptr i32, i32* %arraydecay284, i64 4, !dbg !17305
  %82 = load i32, i32* %add.ptr285, align 4, !dbg !17305
  %call286 = call i32 @__fswab32(i32 %82) #10, !dbg !17305
  br label %cond.end287, !dbg !17305

cond.end287:                                      ; preds = %cond.false283, %cond.true263
  %cond288 = phi i32 [ %or282, %cond.true263 ], [ %call286, %cond.false283 ], !dbg !17305
  %and289 = and i32 %cond288, -16711681, !dbg !17305
  %83 = load i32, i32* %_v257, align 4, !dbg !17305
  %and290 = and i32 %83, 255, !dbg !17305
  %shl291 = shl i32 %and290, 16, !dbg !17305
  %or292 = or i32 %and289, %shl291, !dbg !17305
  %84 = call i1 @llvm.is.constant.i32(i32 %or292), !dbg !17305
  br i1 %84, label %cond.true293, label %cond.false433, !dbg !17305

cond.true293:                                     ; preds = %cond.end287
  %arraydecay294 = getelementptr inbounds [68 x i32], [68 x i32]* %min, i64 0, i64 0, !dbg !17305
  %add.ptr295 = getelementptr i32, i32* %arraydecay294, i64 4, !dbg !17305
  %85 = load i32, i32* %add.ptr295, align 4, !dbg !17305
  %86 = call i1 @llvm.is.constant.i32(i32 %85), !dbg !17305
  br i1 %86, label %cond.true296, label %cond.false316, !dbg !17305

cond.true296:                                     ; preds = %cond.true293
  %arraydecay297 = getelementptr inbounds [68 x i32], [68 x i32]* %min, i64 0, i64 0, !dbg !17305
  %add.ptr298 = getelementptr i32, i32* %arraydecay297, i64 4, !dbg !17305
  %87 = load i32, i32* %add.ptr298, align 4, !dbg !17305
  %and299 = and i32 %87, 255, !dbg !17305
  %shl300 = shl i32 %and299, 24, !dbg !17305
  %arraydecay301 = getelementptr inbounds [68 x i32], [68 x i32]* %min, i64 0, i64 0, !dbg !17305
  %add.ptr302 = getelementptr i32, i32* %arraydecay301, i64 4, !dbg !17305
  %88 = load i32, i32* %add.ptr302, align 4, !dbg !17305
  %and303 = and i32 %88, 65280, !dbg !17305
  %shl304 = shl i32 %and303, 8, !dbg !17305
  %or305 = or i32 %shl300, %shl304, !dbg !17305
  %arraydecay306 = getelementptr inbounds [68 x i32], [68 x i32]* %min, i64 0, i64 0, !dbg !17305
  %add.ptr307 = getelementptr i32, i32* %arraydecay306, i64 4, !dbg !17305
  %89 = load i32, i32* %add.ptr307, align 4, !dbg !17305
  %and308 = and i32 %89, 16711680, !dbg !17305
  %shr309 = lshr i32 %and308, 8, !dbg !17305
  %or310 = or i32 %or305, %shr309, !dbg !17305
  %arraydecay311 = getelementptr inbounds [68 x i32], [68 x i32]* %min, i64 0, i64 0, !dbg !17305
  %add.ptr312 = getelementptr i32, i32* %arraydecay311, i64 4, !dbg !17305
  %90 = load i32, i32* %add.ptr312, align 4, !dbg !17305
  %and313 = and i32 %90, -16777216, !dbg !17305
  %shr314 = lshr i32 %and313, 24, !dbg !17305
  %or315 = or i32 %or310, %shr314, !dbg !17305
  br label %cond.end320, !dbg !17305

cond.false316:                                    ; preds = %cond.true293
  %arraydecay317 = getelementptr inbounds [68 x i32], [68 x i32]* %min, i64 0, i64 0, !dbg !17305
  %add.ptr318 = getelementptr i32, i32* %arraydecay317, i64 4, !dbg !17305
  %91 = load i32, i32* %add.ptr318, align 4, !dbg !17305
  %call319 = call i32 @__fswab32(i32 %91) #10, !dbg !17305
  br label %cond.end320, !dbg !17305

cond.end320:                                      ; preds = %cond.false316, %cond.true296
  %cond321 = phi i32 [ %or315, %cond.true296 ], [ %call319, %cond.false316 ], !dbg !17305
  %and322 = and i32 %cond321, -16711681, !dbg !17305
  %92 = load i32, i32* %_v257, align 4, !dbg !17305
  %and323 = and i32 %92, 255, !dbg !17305
  %shl324 = shl i32 %and323, 16, !dbg !17305
  %or325 = or i32 %and322, %shl324, !dbg !17305
  %and326 = and i32 %or325, 255, !dbg !17305
  %shl327 = shl i32 %and326, 24, !dbg !17305
  %arraydecay328 = getelementptr inbounds [68 x i32], [68 x i32]* %min, i64 0, i64 0, !dbg !17305
  %add.ptr329 = getelementptr i32, i32* %arraydecay328, i64 4, !dbg !17305
  %93 = load i32, i32* %add.ptr329, align 4, !dbg !17305
  %94 = call i1 @llvm.is.constant.i32(i32 %93), !dbg !17305
  br i1 %94, label %cond.true330, label %cond.false350, !dbg !17305

cond.true330:                                     ; preds = %cond.end320
  %arraydecay331 = getelementptr inbounds [68 x i32], [68 x i32]* %min, i64 0, i64 0, !dbg !17305
  %add.ptr332 = getelementptr i32, i32* %arraydecay331, i64 4, !dbg !17305
  %95 = load i32, i32* %add.ptr332, align 4, !dbg !17305
  %and333 = and i32 %95, 255, !dbg !17305
  %shl334 = shl i32 %and333, 24, !dbg !17305
  %arraydecay335 = getelementptr inbounds [68 x i32], [68 x i32]* %min, i64 0, i64 0, !dbg !17305
  %add.ptr336 = getelementptr i32, i32* %arraydecay335, i64 4, !dbg !17305
  %96 = load i32, i32* %add.ptr336, align 4, !dbg !17305
  %and337 = and i32 %96, 65280, !dbg !17305
  %shl338 = shl i32 %and337, 8, !dbg !17305
  %or339 = or i32 %shl334, %shl338, !dbg !17305
  %arraydecay340 = getelementptr inbounds [68 x i32], [68 x i32]* %min, i64 0, i64 0, !dbg !17305
  %add.ptr341 = getelementptr i32, i32* %arraydecay340, i64 4, !dbg !17305
  %97 = load i32, i32* %add.ptr341, align 4, !dbg !17305
  %and342 = and i32 %97, 16711680, !dbg !17305
  %shr343 = lshr i32 %and342, 8, !dbg !17305
  %or344 = or i32 %or339, %shr343, !dbg !17305
  %arraydecay345 = getelementptr inbounds [68 x i32], [68 x i32]* %min, i64 0, i64 0, !dbg !17305
  %add.ptr346 = getelementptr i32, i32* %arraydecay345, i64 4, !dbg !17305
  %98 = load i32, i32* %add.ptr346, align 4, !dbg !17305
  %and347 = and i32 %98, -16777216, !dbg !17305
  %shr348 = lshr i32 %and347, 24, !dbg !17305
  %or349 = or i32 %or344, %shr348, !dbg !17305
  br label %cond.end354, !dbg !17305

cond.false350:                                    ; preds = %cond.end320
  %arraydecay351 = getelementptr inbounds [68 x i32], [68 x i32]* %min, i64 0, i64 0, !dbg !17305
  %add.ptr352 = getelementptr i32, i32* %arraydecay351, i64 4, !dbg !17305
  %99 = load i32, i32* %add.ptr352, align 4, !dbg !17305
  %call353 = call i32 @__fswab32(i32 %99) #10, !dbg !17305
  br label %cond.end354, !dbg !17305

cond.end354:                                      ; preds = %cond.false350, %cond.true330
  %cond355 = phi i32 [ %or349, %cond.true330 ], [ %call353, %cond.false350 ], !dbg !17305
  %and356 = and i32 %cond355, -16711681, !dbg !17305
  %100 = load i32, i32* %_v257, align 4, !dbg !17305
  %and357 = and i32 %100, 255, !dbg !17305
  %shl358 = shl i32 %and357, 16, !dbg !17305
  %or359 = or i32 %and356, %shl358, !dbg !17305
  %and360 = and i32 %or359, 65280, !dbg !17305
  %shl361 = shl i32 %and360, 8, !dbg !17305
  %or362 = or i32 %shl327, %shl361, !dbg !17305
  %arraydecay363 = getelementptr inbounds [68 x i32], [68 x i32]* %min, i64 0, i64 0, !dbg !17305
  %add.ptr364 = getelementptr i32, i32* %arraydecay363, i64 4, !dbg !17305
  %101 = load i32, i32* %add.ptr364, align 4, !dbg !17305
  %102 = call i1 @llvm.is.constant.i32(i32 %101), !dbg !17305
  br i1 %102, label %cond.true365, label %cond.false385, !dbg !17305

cond.true365:                                     ; preds = %cond.end354
  %arraydecay366 = getelementptr inbounds [68 x i32], [68 x i32]* %min, i64 0, i64 0, !dbg !17305
  %add.ptr367 = getelementptr i32, i32* %arraydecay366, i64 4, !dbg !17305
  %103 = load i32, i32* %add.ptr367, align 4, !dbg !17305
  %and368 = and i32 %103, 255, !dbg !17305
  %shl369 = shl i32 %and368, 24, !dbg !17305
  %arraydecay370 = getelementptr inbounds [68 x i32], [68 x i32]* %min, i64 0, i64 0, !dbg !17305
  %add.ptr371 = getelementptr i32, i32* %arraydecay370, i64 4, !dbg !17305
  %104 = load i32, i32* %add.ptr371, align 4, !dbg !17305
  %and372 = and i32 %104, 65280, !dbg !17305
  %shl373 = shl i32 %and372, 8, !dbg !17305
  %or374 = or i32 %shl369, %shl373, !dbg !17305
  %arraydecay375 = getelementptr inbounds [68 x i32], [68 x i32]* %min, i64 0, i64 0, !dbg !17305
  %add.ptr376 = getelementptr i32, i32* %arraydecay375, i64 4, !dbg !17305
  %105 = load i32, i32* %add.ptr376, align 4, !dbg !17305
  %and377 = and i32 %105, 16711680, !dbg !17305
  %shr378 = lshr i32 %and377, 8, !dbg !17305
  %or379 = or i32 %or374, %shr378, !dbg !17305
  %arraydecay380 = getelementptr inbounds [68 x i32], [68 x i32]* %min, i64 0, i64 0, !dbg !17305
  %add.ptr381 = getelementptr i32, i32* %arraydecay380, i64 4, !dbg !17305
  %106 = load i32, i32* %add.ptr381, align 4, !dbg !17305
  %and382 = and i32 %106, -16777216, !dbg !17305
  %shr383 = lshr i32 %and382, 24, !dbg !17305
  %or384 = or i32 %or379, %shr383, !dbg !17305
  br label %cond.end389, !dbg !17305

cond.false385:                                    ; preds = %cond.end354
  %arraydecay386 = getelementptr inbounds [68 x i32], [68 x i32]* %min, i64 0, i64 0, !dbg !17305
  %add.ptr387 = getelementptr i32, i32* %arraydecay386, i64 4, !dbg !17305
  %107 = load i32, i32* %add.ptr387, align 4, !dbg !17305
  %call388 = call i32 @__fswab32(i32 %107) #10, !dbg !17305
  br label %cond.end389, !dbg !17305

cond.end389:                                      ; preds = %cond.false385, %cond.true365
  %cond390 = phi i32 [ %or384, %cond.true365 ], [ %call388, %cond.false385 ], !dbg !17305
  %and391 = and i32 %cond390, -16711681, !dbg !17305
  %108 = load i32, i32* %_v257, align 4, !dbg !17305
  %and392 = and i32 %108, 255, !dbg !17305
  %shl393 = shl i32 %and392, 16, !dbg !17305
  %or394 = or i32 %and391, %shl393, !dbg !17305
  %and395 = and i32 %or394, 16711680, !dbg !17305
  %shr396 = lshr i32 %and395, 8, !dbg !17305
  %or397 = or i32 %or362, %shr396, !dbg !17305
  %arraydecay398 = getelementptr inbounds [68 x i32], [68 x i32]* %min, i64 0, i64 0, !dbg !17305
  %add.ptr399 = getelementptr i32, i32* %arraydecay398, i64 4, !dbg !17305
  %109 = load i32, i32* %add.ptr399, align 4, !dbg !17305
  %110 = call i1 @llvm.is.constant.i32(i32 %109), !dbg !17305
  br i1 %110, label %cond.true400, label %cond.false420, !dbg !17305

cond.true400:                                     ; preds = %cond.end389
  %arraydecay401 = getelementptr inbounds [68 x i32], [68 x i32]* %min, i64 0, i64 0, !dbg !17305
  %add.ptr402 = getelementptr i32, i32* %arraydecay401, i64 4, !dbg !17305
  %111 = load i32, i32* %add.ptr402, align 4, !dbg !17305
  %and403 = and i32 %111, 255, !dbg !17305
  %shl404 = shl i32 %and403, 24, !dbg !17305
  %arraydecay405 = getelementptr inbounds [68 x i32], [68 x i32]* %min, i64 0, i64 0, !dbg !17305
  %add.ptr406 = getelementptr i32, i32* %arraydecay405, i64 4, !dbg !17305
  %112 = load i32, i32* %add.ptr406, align 4, !dbg !17305
  %and407 = and i32 %112, 65280, !dbg !17305
  %shl408 = shl i32 %and407, 8, !dbg !17305
  %or409 = or i32 %shl404, %shl408, !dbg !17305
  %arraydecay410 = getelementptr inbounds [68 x i32], [68 x i32]* %min, i64 0, i64 0, !dbg !17305
  %add.ptr411 = getelementptr i32, i32* %arraydecay410, i64 4, !dbg !17305
  %113 = load i32, i32* %add.ptr411, align 4, !dbg !17305
  %and412 = and i32 %113, 16711680, !dbg !17305
  %shr413 = lshr i32 %and412, 8, !dbg !17305
  %or414 = or i32 %or409, %shr413, !dbg !17305
  %arraydecay415 = getelementptr inbounds [68 x i32], [68 x i32]* %min, i64 0, i64 0, !dbg !17305
  %add.ptr416 = getelementptr i32, i32* %arraydecay415, i64 4, !dbg !17305
  %114 = load i32, i32* %add.ptr416, align 4, !dbg !17305
  %and417 = and i32 %114, -16777216, !dbg !17305
  %shr418 = lshr i32 %and417, 24, !dbg !17305
  %or419 = or i32 %or414, %shr418, !dbg !17305
  br label %cond.end424, !dbg !17305

cond.false420:                                    ; preds = %cond.end389
  %arraydecay421 = getelementptr inbounds [68 x i32], [68 x i32]* %min, i64 0, i64 0, !dbg !17305
  %add.ptr422 = getelementptr i32, i32* %arraydecay421, i64 4, !dbg !17305
  %115 = load i32, i32* %add.ptr422, align 4, !dbg !17305
  %call423 = call i32 @__fswab32(i32 %115) #10, !dbg !17305
  br label %cond.end424, !dbg !17305

cond.end424:                                      ; preds = %cond.false420, %cond.true400
  %cond425 = phi i32 [ %or419, %cond.true400 ], [ %call423, %cond.false420 ], !dbg !17305
  %and426 = and i32 %cond425, -16711681, !dbg !17305
  %116 = load i32, i32* %_v257, align 4, !dbg !17305
  %and427 = and i32 %116, 255, !dbg !17305
  %shl428 = shl i32 %and427, 16, !dbg !17305
  %or429 = or i32 %and426, %shl428, !dbg !17305
  %and430 = and i32 %or429, -16777216, !dbg !17305
  %shr431 = lshr i32 %and430, 24, !dbg !17305
  %or432 = or i32 %or397, %shr431, !dbg !17305
  br label %cond.end467, !dbg !17305

cond.false433:                                    ; preds = %cond.end287
  %arraydecay434 = getelementptr inbounds [68 x i32], [68 x i32]* %min, i64 0, i64 0, !dbg !17305
  %add.ptr435 = getelementptr i32, i32* %arraydecay434, i64 4, !dbg !17305
  %117 = load i32, i32* %add.ptr435, align 4, !dbg !17305
  %118 = call i1 @llvm.is.constant.i32(i32 %117), !dbg !17305
  br i1 %118, label %cond.true436, label %cond.false456, !dbg !17305

cond.true436:                                     ; preds = %cond.false433
  %arraydecay437 = getelementptr inbounds [68 x i32], [68 x i32]* %min, i64 0, i64 0, !dbg !17305
  %add.ptr438 = getelementptr i32, i32* %arraydecay437, i64 4, !dbg !17305
  %119 = load i32, i32* %add.ptr438, align 4, !dbg !17305
  %and439 = and i32 %119, 255, !dbg !17305
  %shl440 = shl i32 %and439, 24, !dbg !17305
  %arraydecay441 = getelementptr inbounds [68 x i32], [68 x i32]* %min, i64 0, i64 0, !dbg !17305
  %add.ptr442 = getelementptr i32, i32* %arraydecay441, i64 4, !dbg !17305
  %120 = load i32, i32* %add.ptr442, align 4, !dbg !17305
  %and443 = and i32 %120, 65280, !dbg !17305
  %shl444 = shl i32 %and443, 8, !dbg !17305
  %or445 = or i32 %shl440, %shl444, !dbg !17305
  %arraydecay446 = getelementptr inbounds [68 x i32], [68 x i32]* %min, i64 0, i64 0, !dbg !17305
  %add.ptr447 = getelementptr i32, i32* %arraydecay446, i64 4, !dbg !17305
  %121 = load i32, i32* %add.ptr447, align 4, !dbg !17305
  %and448 = and i32 %121, 16711680, !dbg !17305
  %shr449 = lshr i32 %and448, 8, !dbg !17305
  %or450 = or i32 %or445, %shr449, !dbg !17305
  %arraydecay451 = getelementptr inbounds [68 x i32], [68 x i32]* %min, i64 0, i64 0, !dbg !17305
  %add.ptr452 = getelementptr i32, i32* %arraydecay451, i64 4, !dbg !17305
  %122 = load i32, i32* %add.ptr452, align 4, !dbg !17305
  %and453 = and i32 %122, -16777216, !dbg !17305
  %shr454 = lshr i32 %and453, 24, !dbg !17305
  %or455 = or i32 %or450, %shr454, !dbg !17305
  br label %cond.end460, !dbg !17305

cond.false456:                                    ; preds = %cond.false433
  %arraydecay457 = getelementptr inbounds [68 x i32], [68 x i32]* %min, i64 0, i64 0, !dbg !17305
  %add.ptr458 = getelementptr i32, i32* %arraydecay457, i64 4, !dbg !17305
  %123 = load i32, i32* %add.ptr458, align 4, !dbg !17305
  %call459 = call i32 @__fswab32(i32 %123) #10, !dbg !17305
  br label %cond.end460, !dbg !17305

cond.end460:                                      ; preds = %cond.false456, %cond.true436
  %cond461 = phi i32 [ %or455, %cond.true436 ], [ %call459, %cond.false456 ], !dbg !17305
  %and462 = and i32 %cond461, -16711681, !dbg !17305
  %124 = load i32, i32* %_v257, align 4, !dbg !17305
  %and463 = and i32 %124, 255, !dbg !17305
  %shl464 = shl i32 %and463, 16, !dbg !17305
  %or465 = or i32 %and462, %shl464, !dbg !17305
  %call466 = call i32 @__fswab32(i32 %or465) #10, !dbg !17305
  br label %cond.end467, !dbg !17305

cond.end467:                                      ; preds = %cond.end460, %cond.end424
  %cond468 = phi i32 [ %or432, %cond.end424 ], [ %call466, %cond.end460 ], !dbg !17305
  %arraydecay469 = getelementptr inbounds [68 x i32], [68 x i32]* %min, i64 0, i64 0, !dbg !17305
  %add.ptr470 = getelementptr i32, i32* %arraydecay469, i64 4, !dbg !17305
  store i32 %cond468, i32* %add.ptr470, align 4, !dbg !17305
  br label %do.end471, !dbg !17305

do.end471:                                        ; preds = %cond.end467
  br label %do.body472, !dbg !17308

do.body472:                                       ; preds = %do.end471
  call void @llvm.dbg.declare(metadata i32* %_v473, metadata !17309, metadata !DIExpression()), !dbg !17311
  store i32 1, i32* %_v473, align 4, !dbg !17311
  br label %do.body474, !dbg !17311

do.body474:                                       ; preds = %do.body472
  br label %do.end475, !dbg !17312

do.end475:                                        ; preds = %do.body474
  %arraydecay476 = getelementptr inbounds [68 x i32], [68 x i32]* %min, i64 0, i64 0, !dbg !17311
  %add.ptr477 = getelementptr i32, i32* %arraydecay476, i64 3, !dbg !17311
  %125 = load i32, i32* %add.ptr477, align 4, !dbg !17311
  %126 = call i1 @llvm.is.constant.i32(i32 %125), !dbg !17311
  br i1 %126, label %cond.true478, label %cond.false498, !dbg !17311

cond.true478:                                     ; preds = %do.end475
  %arraydecay479 = getelementptr inbounds [68 x i32], [68 x i32]* %min, i64 0, i64 0, !dbg !17311
  %add.ptr480 = getelementptr i32, i32* %arraydecay479, i64 3, !dbg !17311
  %127 = load i32, i32* %add.ptr480, align 4, !dbg !17311
  %and481 = and i32 %127, 255, !dbg !17311
  %shl482 = shl i32 %and481, 24, !dbg !17311
  %arraydecay483 = getelementptr inbounds [68 x i32], [68 x i32]* %min, i64 0, i64 0, !dbg !17311
  %add.ptr484 = getelementptr i32, i32* %arraydecay483, i64 3, !dbg !17311
  %128 = load i32, i32* %add.ptr484, align 4, !dbg !17311
  %and485 = and i32 %128, 65280, !dbg !17311
  %shl486 = shl i32 %and485, 8, !dbg !17311
  %or487 = or i32 %shl482, %shl486, !dbg !17311
  %arraydecay488 = getelementptr inbounds [68 x i32], [68 x i32]* %min, i64 0, i64 0, !dbg !17311
  %add.ptr489 = getelementptr i32, i32* %arraydecay488, i64 3, !dbg !17311
  %129 = load i32, i32* %add.ptr489, align 4, !dbg !17311
  %and490 = and i32 %129, 16711680, !dbg !17311
  %shr491 = lshr i32 %and490, 8, !dbg !17311
  %or492 = or i32 %or487, %shr491, !dbg !17311
  %arraydecay493 = getelementptr inbounds [68 x i32], [68 x i32]* %min, i64 0, i64 0, !dbg !17311
  %add.ptr494 = getelementptr i32, i32* %arraydecay493, i64 3, !dbg !17311
  %130 = load i32, i32* %add.ptr494, align 4, !dbg !17311
  %and495 = and i32 %130, -16777216, !dbg !17311
  %shr496 = lshr i32 %and495, 24, !dbg !17311
  %or497 = or i32 %or492, %shr496, !dbg !17311
  br label %cond.end502, !dbg !17311

cond.false498:                                    ; preds = %do.end475
  %arraydecay499 = getelementptr inbounds [68 x i32], [68 x i32]* %min, i64 0, i64 0, !dbg !17311
  %add.ptr500 = getelementptr i32, i32* %arraydecay499, i64 3, !dbg !17311
  %131 = load i32, i32* %add.ptr500, align 4, !dbg !17311
  %call501 = call i32 @__fswab32(i32 %131) #10, !dbg !17311
  br label %cond.end502, !dbg !17311

cond.end502:                                      ; preds = %cond.false498, %cond.true478
  %cond503 = phi i32 [ %or497, %cond.true478 ], [ %call501, %cond.false498 ], !dbg !17311
  %and504 = and i32 %cond503, -17, !dbg !17311
  %132 = load i32, i32* %_v473, align 4, !dbg !17311
  %and505 = and i32 %132, 1, !dbg !17311
  %shl506 = shl i32 %and505, 4, !dbg !17311
  %or507 = or i32 %and504, %shl506, !dbg !17311
  %133 = call i1 @llvm.is.constant.i32(i32 %or507), !dbg !17311
  br i1 %133, label %cond.true508, label %cond.false648, !dbg !17311

cond.true508:                                     ; preds = %cond.end502
  %arraydecay509 = getelementptr inbounds [68 x i32], [68 x i32]* %min, i64 0, i64 0, !dbg !17311
  %add.ptr510 = getelementptr i32, i32* %arraydecay509, i64 3, !dbg !17311
  %134 = load i32, i32* %add.ptr510, align 4, !dbg !17311
  %135 = call i1 @llvm.is.constant.i32(i32 %134), !dbg !17311
  br i1 %135, label %cond.true511, label %cond.false531, !dbg !17311

cond.true511:                                     ; preds = %cond.true508
  %arraydecay512 = getelementptr inbounds [68 x i32], [68 x i32]* %min, i64 0, i64 0, !dbg !17311
  %add.ptr513 = getelementptr i32, i32* %arraydecay512, i64 3, !dbg !17311
  %136 = load i32, i32* %add.ptr513, align 4, !dbg !17311
  %and514 = and i32 %136, 255, !dbg !17311
  %shl515 = shl i32 %and514, 24, !dbg !17311
  %arraydecay516 = getelementptr inbounds [68 x i32], [68 x i32]* %min, i64 0, i64 0, !dbg !17311
  %add.ptr517 = getelementptr i32, i32* %arraydecay516, i64 3, !dbg !17311
  %137 = load i32, i32* %add.ptr517, align 4, !dbg !17311
  %and518 = and i32 %137, 65280, !dbg !17311
  %shl519 = shl i32 %and518, 8, !dbg !17311
  %or520 = or i32 %shl515, %shl519, !dbg !17311
  %arraydecay521 = getelementptr inbounds [68 x i32], [68 x i32]* %min, i64 0, i64 0, !dbg !17311
  %add.ptr522 = getelementptr i32, i32* %arraydecay521, i64 3, !dbg !17311
  %138 = load i32, i32* %add.ptr522, align 4, !dbg !17311
  %and523 = and i32 %138, 16711680, !dbg !17311
  %shr524 = lshr i32 %and523, 8, !dbg !17311
  %or525 = or i32 %or520, %shr524, !dbg !17311
  %arraydecay526 = getelementptr inbounds [68 x i32], [68 x i32]* %min, i64 0, i64 0, !dbg !17311
  %add.ptr527 = getelementptr i32, i32* %arraydecay526, i64 3, !dbg !17311
  %139 = load i32, i32* %add.ptr527, align 4, !dbg !17311
  %and528 = and i32 %139, -16777216, !dbg !17311
  %shr529 = lshr i32 %and528, 24, !dbg !17311
  %or530 = or i32 %or525, %shr529, !dbg !17311
  br label %cond.end535, !dbg !17311

cond.false531:                                    ; preds = %cond.true508
  %arraydecay532 = getelementptr inbounds [68 x i32], [68 x i32]* %min, i64 0, i64 0, !dbg !17311
  %add.ptr533 = getelementptr i32, i32* %arraydecay532, i64 3, !dbg !17311
  %140 = load i32, i32* %add.ptr533, align 4, !dbg !17311
  %call534 = call i32 @__fswab32(i32 %140) #10, !dbg !17311
  br label %cond.end535, !dbg !17311

cond.end535:                                      ; preds = %cond.false531, %cond.true511
  %cond536 = phi i32 [ %or530, %cond.true511 ], [ %call534, %cond.false531 ], !dbg !17311
  %and537 = and i32 %cond536, -17, !dbg !17311
  %141 = load i32, i32* %_v473, align 4, !dbg !17311
  %and538 = and i32 %141, 1, !dbg !17311
  %shl539 = shl i32 %and538, 4, !dbg !17311
  %or540 = or i32 %and537, %shl539, !dbg !17311
  %and541 = and i32 %or540, 255, !dbg !17311
  %shl542 = shl i32 %and541, 24, !dbg !17311
  %arraydecay543 = getelementptr inbounds [68 x i32], [68 x i32]* %min, i64 0, i64 0, !dbg !17311
  %add.ptr544 = getelementptr i32, i32* %arraydecay543, i64 3, !dbg !17311
  %142 = load i32, i32* %add.ptr544, align 4, !dbg !17311
  %143 = call i1 @llvm.is.constant.i32(i32 %142), !dbg !17311
  br i1 %143, label %cond.true545, label %cond.false565, !dbg !17311

cond.true545:                                     ; preds = %cond.end535
  %arraydecay546 = getelementptr inbounds [68 x i32], [68 x i32]* %min, i64 0, i64 0, !dbg !17311
  %add.ptr547 = getelementptr i32, i32* %arraydecay546, i64 3, !dbg !17311
  %144 = load i32, i32* %add.ptr547, align 4, !dbg !17311
  %and548 = and i32 %144, 255, !dbg !17311
  %shl549 = shl i32 %and548, 24, !dbg !17311
  %arraydecay550 = getelementptr inbounds [68 x i32], [68 x i32]* %min, i64 0, i64 0, !dbg !17311
  %add.ptr551 = getelementptr i32, i32* %arraydecay550, i64 3, !dbg !17311
  %145 = load i32, i32* %add.ptr551, align 4, !dbg !17311
  %and552 = and i32 %145, 65280, !dbg !17311
  %shl553 = shl i32 %and552, 8, !dbg !17311
  %or554 = or i32 %shl549, %shl553, !dbg !17311
  %arraydecay555 = getelementptr inbounds [68 x i32], [68 x i32]* %min, i64 0, i64 0, !dbg !17311
  %add.ptr556 = getelementptr i32, i32* %arraydecay555, i64 3, !dbg !17311
  %146 = load i32, i32* %add.ptr556, align 4, !dbg !17311
  %and557 = and i32 %146, 16711680, !dbg !17311
  %shr558 = lshr i32 %and557, 8, !dbg !17311
  %or559 = or i32 %or554, %shr558, !dbg !17311
  %arraydecay560 = getelementptr inbounds [68 x i32], [68 x i32]* %min, i64 0, i64 0, !dbg !17311
  %add.ptr561 = getelementptr i32, i32* %arraydecay560, i64 3, !dbg !17311
  %147 = load i32, i32* %add.ptr561, align 4, !dbg !17311
  %and562 = and i32 %147, -16777216, !dbg !17311
  %shr563 = lshr i32 %and562, 24, !dbg !17311
  %or564 = or i32 %or559, %shr563, !dbg !17311
  br label %cond.end569, !dbg !17311

cond.false565:                                    ; preds = %cond.end535
  %arraydecay566 = getelementptr inbounds [68 x i32], [68 x i32]* %min, i64 0, i64 0, !dbg !17311
  %add.ptr567 = getelementptr i32, i32* %arraydecay566, i64 3, !dbg !17311
  %148 = load i32, i32* %add.ptr567, align 4, !dbg !17311
  %call568 = call i32 @__fswab32(i32 %148) #10, !dbg !17311
  br label %cond.end569, !dbg !17311

cond.end569:                                      ; preds = %cond.false565, %cond.true545
  %cond570 = phi i32 [ %or564, %cond.true545 ], [ %call568, %cond.false565 ], !dbg !17311
  %and571 = and i32 %cond570, -17, !dbg !17311
  %149 = load i32, i32* %_v473, align 4, !dbg !17311
  %and572 = and i32 %149, 1, !dbg !17311
  %shl573 = shl i32 %and572, 4, !dbg !17311
  %or574 = or i32 %and571, %shl573, !dbg !17311
  %and575 = and i32 %or574, 65280, !dbg !17311
  %shl576 = shl i32 %and575, 8, !dbg !17311
  %or577 = or i32 %shl542, %shl576, !dbg !17311
  %arraydecay578 = getelementptr inbounds [68 x i32], [68 x i32]* %min, i64 0, i64 0, !dbg !17311
  %add.ptr579 = getelementptr i32, i32* %arraydecay578, i64 3, !dbg !17311
  %150 = load i32, i32* %add.ptr579, align 4, !dbg !17311
  %151 = call i1 @llvm.is.constant.i32(i32 %150), !dbg !17311
  br i1 %151, label %cond.true580, label %cond.false600, !dbg !17311

cond.true580:                                     ; preds = %cond.end569
  %arraydecay581 = getelementptr inbounds [68 x i32], [68 x i32]* %min, i64 0, i64 0, !dbg !17311
  %add.ptr582 = getelementptr i32, i32* %arraydecay581, i64 3, !dbg !17311
  %152 = load i32, i32* %add.ptr582, align 4, !dbg !17311
  %and583 = and i32 %152, 255, !dbg !17311
  %shl584 = shl i32 %and583, 24, !dbg !17311
  %arraydecay585 = getelementptr inbounds [68 x i32], [68 x i32]* %min, i64 0, i64 0, !dbg !17311
  %add.ptr586 = getelementptr i32, i32* %arraydecay585, i64 3, !dbg !17311
  %153 = load i32, i32* %add.ptr586, align 4, !dbg !17311
  %and587 = and i32 %153, 65280, !dbg !17311
  %shl588 = shl i32 %and587, 8, !dbg !17311
  %or589 = or i32 %shl584, %shl588, !dbg !17311
  %arraydecay590 = getelementptr inbounds [68 x i32], [68 x i32]* %min, i64 0, i64 0, !dbg !17311
  %add.ptr591 = getelementptr i32, i32* %arraydecay590, i64 3, !dbg !17311
  %154 = load i32, i32* %add.ptr591, align 4, !dbg !17311
  %and592 = and i32 %154, 16711680, !dbg !17311
  %shr593 = lshr i32 %and592, 8, !dbg !17311
  %or594 = or i32 %or589, %shr593, !dbg !17311
  %arraydecay595 = getelementptr inbounds [68 x i32], [68 x i32]* %min, i64 0, i64 0, !dbg !17311
  %add.ptr596 = getelementptr i32, i32* %arraydecay595, i64 3, !dbg !17311
  %155 = load i32, i32* %add.ptr596, align 4, !dbg !17311
  %and597 = and i32 %155, -16777216, !dbg !17311
  %shr598 = lshr i32 %and597, 24, !dbg !17311
  %or599 = or i32 %or594, %shr598, !dbg !17311
  br label %cond.end604, !dbg !17311

cond.false600:                                    ; preds = %cond.end569
  %arraydecay601 = getelementptr inbounds [68 x i32], [68 x i32]* %min, i64 0, i64 0, !dbg !17311
  %add.ptr602 = getelementptr i32, i32* %arraydecay601, i64 3, !dbg !17311
  %156 = load i32, i32* %add.ptr602, align 4, !dbg !17311
  %call603 = call i32 @__fswab32(i32 %156) #10, !dbg !17311
  br label %cond.end604, !dbg !17311

cond.end604:                                      ; preds = %cond.false600, %cond.true580
  %cond605 = phi i32 [ %or599, %cond.true580 ], [ %call603, %cond.false600 ], !dbg !17311
  %and606 = and i32 %cond605, -17, !dbg !17311
  %157 = load i32, i32* %_v473, align 4, !dbg !17311
  %and607 = and i32 %157, 1, !dbg !17311
  %shl608 = shl i32 %and607, 4, !dbg !17311
  %or609 = or i32 %and606, %shl608, !dbg !17311
  %and610 = and i32 %or609, 16711680, !dbg !17311
  %shr611 = lshr i32 %and610, 8, !dbg !17311
  %or612 = or i32 %or577, %shr611, !dbg !17311
  %arraydecay613 = getelementptr inbounds [68 x i32], [68 x i32]* %min, i64 0, i64 0, !dbg !17311
  %add.ptr614 = getelementptr i32, i32* %arraydecay613, i64 3, !dbg !17311
  %158 = load i32, i32* %add.ptr614, align 4, !dbg !17311
  %159 = call i1 @llvm.is.constant.i32(i32 %158), !dbg !17311
  br i1 %159, label %cond.true615, label %cond.false635, !dbg !17311

cond.true615:                                     ; preds = %cond.end604
  %arraydecay616 = getelementptr inbounds [68 x i32], [68 x i32]* %min, i64 0, i64 0, !dbg !17311
  %add.ptr617 = getelementptr i32, i32* %arraydecay616, i64 3, !dbg !17311
  %160 = load i32, i32* %add.ptr617, align 4, !dbg !17311
  %and618 = and i32 %160, 255, !dbg !17311
  %shl619 = shl i32 %and618, 24, !dbg !17311
  %arraydecay620 = getelementptr inbounds [68 x i32], [68 x i32]* %min, i64 0, i64 0, !dbg !17311
  %add.ptr621 = getelementptr i32, i32* %arraydecay620, i64 3, !dbg !17311
  %161 = load i32, i32* %add.ptr621, align 4, !dbg !17311
  %and622 = and i32 %161, 65280, !dbg !17311
  %shl623 = shl i32 %and622, 8, !dbg !17311
  %or624 = or i32 %shl619, %shl623, !dbg !17311
  %arraydecay625 = getelementptr inbounds [68 x i32], [68 x i32]* %min, i64 0, i64 0, !dbg !17311
  %add.ptr626 = getelementptr i32, i32* %arraydecay625, i64 3, !dbg !17311
  %162 = load i32, i32* %add.ptr626, align 4, !dbg !17311
  %and627 = and i32 %162, 16711680, !dbg !17311
  %shr628 = lshr i32 %and627, 8, !dbg !17311
  %or629 = or i32 %or624, %shr628, !dbg !17311
  %arraydecay630 = getelementptr inbounds [68 x i32], [68 x i32]* %min, i64 0, i64 0, !dbg !17311
  %add.ptr631 = getelementptr i32, i32* %arraydecay630, i64 3, !dbg !17311
  %163 = load i32, i32* %add.ptr631, align 4, !dbg !17311
  %and632 = and i32 %163, -16777216, !dbg !17311
  %shr633 = lshr i32 %and632, 24, !dbg !17311
  %or634 = or i32 %or629, %shr633, !dbg !17311
  br label %cond.end639, !dbg !17311

cond.false635:                                    ; preds = %cond.end604
  %arraydecay636 = getelementptr inbounds [68 x i32], [68 x i32]* %min, i64 0, i64 0, !dbg !17311
  %add.ptr637 = getelementptr i32, i32* %arraydecay636, i64 3, !dbg !17311
  %164 = load i32, i32* %add.ptr637, align 4, !dbg !17311
  %call638 = call i32 @__fswab32(i32 %164) #10, !dbg !17311
  br label %cond.end639, !dbg !17311

cond.end639:                                      ; preds = %cond.false635, %cond.true615
  %cond640 = phi i32 [ %or634, %cond.true615 ], [ %call638, %cond.false635 ], !dbg !17311
  %and641 = and i32 %cond640, -17, !dbg !17311
  %165 = load i32, i32* %_v473, align 4, !dbg !17311
  %and642 = and i32 %165, 1, !dbg !17311
  %shl643 = shl i32 %and642, 4, !dbg !17311
  %or644 = or i32 %and641, %shl643, !dbg !17311
  %and645 = and i32 %or644, -16777216, !dbg !17311
  %shr646 = lshr i32 %and645, 24, !dbg !17311
  %or647 = or i32 %or612, %shr646, !dbg !17311
  br label %cond.end682, !dbg !17311

cond.false648:                                    ; preds = %cond.end502
  %arraydecay649 = getelementptr inbounds [68 x i32], [68 x i32]* %min, i64 0, i64 0, !dbg !17311
  %add.ptr650 = getelementptr i32, i32* %arraydecay649, i64 3, !dbg !17311
  %166 = load i32, i32* %add.ptr650, align 4, !dbg !17311
  %167 = call i1 @llvm.is.constant.i32(i32 %166), !dbg !17311
  br i1 %167, label %cond.true651, label %cond.false671, !dbg !17311

cond.true651:                                     ; preds = %cond.false648
  %arraydecay652 = getelementptr inbounds [68 x i32], [68 x i32]* %min, i64 0, i64 0, !dbg !17311
  %add.ptr653 = getelementptr i32, i32* %arraydecay652, i64 3, !dbg !17311
  %168 = load i32, i32* %add.ptr653, align 4, !dbg !17311
  %and654 = and i32 %168, 255, !dbg !17311
  %shl655 = shl i32 %and654, 24, !dbg !17311
  %arraydecay656 = getelementptr inbounds [68 x i32], [68 x i32]* %min, i64 0, i64 0, !dbg !17311
  %add.ptr657 = getelementptr i32, i32* %arraydecay656, i64 3, !dbg !17311
  %169 = load i32, i32* %add.ptr657, align 4, !dbg !17311
  %and658 = and i32 %169, 65280, !dbg !17311
  %shl659 = shl i32 %and658, 8, !dbg !17311
  %or660 = or i32 %shl655, %shl659, !dbg !17311
  %arraydecay661 = getelementptr inbounds [68 x i32], [68 x i32]* %min, i64 0, i64 0, !dbg !17311
  %add.ptr662 = getelementptr i32, i32* %arraydecay661, i64 3, !dbg !17311
  %170 = load i32, i32* %add.ptr662, align 4, !dbg !17311
  %and663 = and i32 %170, 16711680, !dbg !17311
  %shr664 = lshr i32 %and663, 8, !dbg !17311
  %or665 = or i32 %or660, %shr664, !dbg !17311
  %arraydecay666 = getelementptr inbounds [68 x i32], [68 x i32]* %min, i64 0, i64 0, !dbg !17311
  %add.ptr667 = getelementptr i32, i32* %arraydecay666, i64 3, !dbg !17311
  %171 = load i32, i32* %add.ptr667, align 4, !dbg !17311
  %and668 = and i32 %171, -16777216, !dbg !17311
  %shr669 = lshr i32 %and668, 24, !dbg !17311
  %or670 = or i32 %or665, %shr669, !dbg !17311
  br label %cond.end675, !dbg !17311

cond.false671:                                    ; preds = %cond.false648
  %arraydecay672 = getelementptr inbounds [68 x i32], [68 x i32]* %min, i64 0, i64 0, !dbg !17311
  %add.ptr673 = getelementptr i32, i32* %arraydecay672, i64 3, !dbg !17311
  %172 = load i32, i32* %add.ptr673, align 4, !dbg !17311
  %call674 = call i32 @__fswab32(i32 %172) #10, !dbg !17311
  br label %cond.end675, !dbg !17311

cond.end675:                                      ; preds = %cond.false671, %cond.true651
  %cond676 = phi i32 [ %or670, %cond.true651 ], [ %call674, %cond.false671 ], !dbg !17311
  %and677 = and i32 %cond676, -17, !dbg !17311
  %173 = load i32, i32* %_v473, align 4, !dbg !17311
  %and678 = and i32 %173, 1, !dbg !17311
  %shl679 = shl i32 %and678, 4, !dbg !17311
  %or680 = or i32 %and677, %shl679, !dbg !17311
  %call681 = call i32 @__fswab32(i32 %or680) #10, !dbg !17311
  br label %cond.end682, !dbg !17311

cond.end682:                                      ; preds = %cond.end675, %cond.end639
  %cond683 = phi i32 [ %or647, %cond.end639 ], [ %call681, %cond.end675 ], !dbg !17311
  %arraydecay684 = getelementptr inbounds [68 x i32], [68 x i32]* %min, i64 0, i64 0, !dbg !17311
  %add.ptr685 = getelementptr i32, i32* %arraydecay684, i64 3, !dbg !17311
  store i32 %cond683, i32* %add.ptr685, align 4, !dbg !17311
  br label %do.end686, !dbg !17311

do.end686:                                        ; preds = %cond.end682
  %174 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17314
  %dev687 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %174, i32 0, i32 0, !dbg !17315
  %175 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev687, align 8, !dbg !17315
  %arraydecay688 = getelementptr inbounds [68 x i32], [68 x i32]* %min, i64 0, i64 0, !dbg !17316
  %176 = bitcast i32* %arraydecay688 to i8*, !dbg !17316
  %call689 = call i32 @mlx5_eswitch_modify_esw_vport_context(%struct.mlx5_core_dev* %175, i16 zeroext 0, i1 zeroext false, i8* %176) #8, !dbg !17317
  store i32 %call689, i32* %err, align 4, !dbg !17318
  %177 = load i32, i32* %err, align 4, !dbg !17319
  %tobool690 = icmp ne i32 %177, 0, !dbg !17319
  br i1 %tobool690, label %if.end704, label %if.then691, !dbg !17321

if.then691:                                       ; preds = %do.end686
  %178 = load i8, i8* %enable.addr, align 1, !dbg !17322
  %tobool692 = trunc i8 %178 to i1, !dbg !17322
  br i1 %tobool692, label %land.lhs.true694, label %if.else700, !dbg !17325

land.lhs.true694:                                 ; preds = %if.then691
  %179 = load i8, i8* %curr, align 1, !dbg !17326
  %conv695 = zext i8 %179 to i32, !dbg !17326
  %and696 = and i32 %conv695, 2, !dbg !17327
  %tobool697 = icmp ne i32 %and696, 0, !dbg !17327
  br i1 %tobool697, label %if.then698, label %if.else700, !dbg !17328

if.then698:                                       ; preds = %land.lhs.true694
  %180 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17329
  %flags = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %180, i32 0, i32 7, !dbg !17330
  %181 = load i32, i32* %flags, align 8, !dbg !17331
  %or699 = or i32 %181, 2, !dbg !17331
  store i32 %or699, i32* %flags, align 8, !dbg !17331
  br label %if.end703, !dbg !17329

if.else700:                                       ; preds = %land.lhs.true694, %if.then691
  %182 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17332
  %flags701 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %182, i32 0, i32 7, !dbg !17333
  %183 = load i32, i32* %flags701, align 8, !dbg !17334
  %and702 = and i32 %183, -3, !dbg !17334
  store i32 %and702, i32* %flags701, align 8, !dbg !17334
  br label %if.end703

if.end703:                                        ; preds = %if.else700, %if.then698
  br label %if.end704, !dbg !17335

if.end704:                                        ; preds = %if.end703, %do.end686
  %184 = load i32, i32* %err, align 4, !dbg !17336
  store i32 %184, i32* %retval, align 4, !dbg !17337
  br label %return, !dbg !17337

return:                                           ; preds = %if.end704, %if.then207, %if.then
  %185 = load i32, i32* %retval, align 4, !dbg !17338
  ret i32 %185, !dbg !17338
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @esw_offloads_steering_init(%struct.mlx5_eswitch* %esw) #0 !dbg !12302 {
entry:
  %retval = alloca i32, align 4
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  %err = alloca i32, align 4
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !17339, metadata !DIExpression()), !dbg !17340
  call void @llvm.dbg.declare(metadata i32* %err, metadata !17341, metadata !DIExpression()), !dbg !17342
  %0 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17343
  %fdb_table = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %0, i32 0, i32 2, !dbg !17344
  %1 = getelementptr inbounds %struct.mlx5_eswitch_fdb, %struct.mlx5_eswitch_fdb* %fdb_table, i32 0, i32 0, !dbg !17345
  %offloads = bitcast %union.anon.154* %1 to %struct.offloads_fdb*, !dbg !17345
  %2 = bitcast %struct.offloads_fdb* %offloads to i8*, !dbg !17346
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 2152, i1 false), !dbg !17346
  br label %do.body, !dbg !17347

do.body:                                          ; preds = %entry
  %3 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17348
  %fdb_table1 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %3, i32 0, i32 2, !dbg !17348
  %4 = getelementptr inbounds %struct.mlx5_eswitch_fdb, %struct.mlx5_eswitch_fdb* %fdb_table1, i32 0, i32 0, !dbg !17348
  %offloads2 = bitcast %union.anon.154* %4 to %struct.offloads_fdb*, !dbg !17348
  %vports = getelementptr inbounds %struct.offloads_fdb, %struct.offloads_fdb* %offloads2, i32 0, i32 10, !dbg !17348
  %lock = getelementptr inbounds %struct.anon.155, %struct.anon.155* %vports, i32 0, i32 1, !dbg !17348
  call void @__mutex_init(%struct.mutex* %lock, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.11, i64 0, i64 0), %struct.lock_class_key* @esw_offloads_steering_init.__key) #8, !dbg !17348
  br label %do.end, !dbg !17348

do.end:                                           ; preds = %do.body
  %5 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17350
  %fdb_table3 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %5, i32 0, i32 2, !dbg !17350
  %6 = getelementptr inbounds %struct.mlx5_eswitch_fdb, %struct.mlx5_eswitch_fdb* %fdb_table3, i32 0, i32 0, !dbg !17350
  %offloads4 = bitcast %union.anon.154* %6 to %struct.offloads_fdb*, !dbg !17350
  %vports5 = getelementptr inbounds %struct.offloads_fdb, %struct.offloads_fdb* %offloads4, i32 0, i32 10, !dbg !17350
  %table = getelementptr inbounds %struct.anon.155, %struct.anon.155* %vports5, i32 0, i32 0, !dbg !17350
  %arraydecay = getelementptr inbounds [256 x %struct.hlist_head], [256 x %struct.hlist_head]* %table, i64 0, i64 0, !dbg !17350
  call void @__hash_init(%struct.hlist_head* %arraydecay, i32 256) #8, !dbg !17350
  %7 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17351
  %call = call i32 @esw_create_uplink_offloads_acl_tables(%struct.mlx5_eswitch* %7) #8, !dbg !17352
  store i32 %call, i32* %err, align 4, !dbg !17353
  %8 = load i32, i32* %err, align 4, !dbg !17354
  %tobool = icmp ne i32 %8, 0, !dbg !17354
  br i1 %tobool, label %if.then, label %if.end, !dbg !17356

if.then:                                          ; preds = %do.end
  br label %create_acl_err, !dbg !17357

if.end:                                           ; preds = %do.end
  %9 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17358
  %call6 = call i32 @esw_create_offloads_table(%struct.mlx5_eswitch* %9) #8, !dbg !17359
  store i32 %call6, i32* %err, align 4, !dbg !17360
  %10 = load i32, i32* %err, align 4, !dbg !17361
  %tobool7 = icmp ne i32 %10, 0, !dbg !17361
  br i1 %tobool7, label %if.then8, label %if.end9, !dbg !17363

if.then8:                                         ; preds = %if.end
  br label %create_offloads_err, !dbg !17364

if.end9:                                          ; preds = %if.end
  %11 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17365
  %call10 = call i32 @esw_create_restore_table(%struct.mlx5_eswitch* %11) #8, !dbg !17366
  store i32 %call10, i32* %err, align 4, !dbg !17367
  %12 = load i32, i32* %err, align 4, !dbg !17368
  %tobool11 = icmp ne i32 %12, 0, !dbg !17368
  br i1 %tobool11, label %if.then12, label %if.end13, !dbg !17370

if.then12:                                        ; preds = %if.end9
  br label %create_restore_err, !dbg !17371

if.end13:                                         ; preds = %if.end9
  %13 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17372
  %call14 = call i32 @esw_create_offloads_fdb_tables(%struct.mlx5_eswitch* %13) #8, !dbg !17373
  store i32 %call14, i32* %err, align 4, !dbg !17374
  %14 = load i32, i32* %err, align 4, !dbg !17375
  %tobool15 = icmp ne i32 %14, 0, !dbg !17375
  br i1 %tobool15, label %if.then16, label %if.end17, !dbg !17377

if.then16:                                        ; preds = %if.end13
  br label %create_fdb_err, !dbg !17378

if.end17:                                         ; preds = %if.end13
  %15 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17379
  %call18 = call i32 @esw_create_vport_rx_group(%struct.mlx5_eswitch* %15) #8, !dbg !17380
  store i32 %call18, i32* %err, align 4, !dbg !17381
  %16 = load i32, i32* %err, align 4, !dbg !17382
  %tobool19 = icmp ne i32 %16, 0, !dbg !17382
  br i1 %tobool19, label %if.then20, label %if.end21, !dbg !17384

if.then20:                                        ; preds = %if.end17
  br label %create_fg_err, !dbg !17385

if.end21:                                         ; preds = %if.end17
  store i32 0, i32* %retval, align 4, !dbg !17386
  br label %return, !dbg !17386

create_fg_err:                                    ; preds = %if.then20
  call void @llvm.dbg.label(metadata !17387), !dbg !17388
  %17 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17389
  call void @esw_destroy_offloads_fdb_tables(%struct.mlx5_eswitch* %17) #8, !dbg !17390
  br label %create_fdb_err, !dbg !17390

create_fdb_err:                                   ; preds = %create_fg_err, %if.then16
  call void @llvm.dbg.label(metadata !17391), !dbg !17392
  %18 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17393
  call void @esw_destroy_restore_table(%struct.mlx5_eswitch* %18) #8, !dbg !17394
  br label %create_restore_err, !dbg !17394

create_restore_err:                               ; preds = %create_fdb_err, %if.then12
  call void @llvm.dbg.label(metadata !17395), !dbg !17396
  %19 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17397
  call void @esw_destroy_offloads_table(%struct.mlx5_eswitch* %19) #8, !dbg !17398
  br label %create_offloads_err, !dbg !17398

create_offloads_err:                              ; preds = %create_restore_err, %if.then8
  call void @llvm.dbg.label(metadata !17399), !dbg !17400
  %20 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17401
  call void @esw_destroy_uplink_offloads_acl_tables(%struct.mlx5_eswitch* %20) #8, !dbg !17402
  br label %create_acl_err, !dbg !17402

create_acl_err:                                   ; preds = %create_offloads_err, %if.then
  call void @llvm.dbg.label(metadata !17403), !dbg !17404
  %21 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17405
  %fdb_table22 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %21, i32 0, i32 2, !dbg !17406
  %22 = getelementptr inbounds %struct.mlx5_eswitch_fdb, %struct.mlx5_eswitch_fdb* %fdb_table22, i32 0, i32 0, !dbg !17407
  %offloads23 = bitcast %union.anon.154* %22 to %struct.offloads_fdb*, !dbg !17407
  %vports24 = getelementptr inbounds %struct.offloads_fdb, %struct.offloads_fdb* %offloads23, i32 0, i32 10, !dbg !17408
  %lock25 = getelementptr inbounds %struct.anon.155, %struct.anon.155* %vports24, i32 0, i32 1, !dbg !17409
  call void @mutex_destroy(%struct.mutex* %lock25) #8, !dbg !17410
  %23 = load i32, i32* %err, align 4, !dbg !17411
  store i32 %23, i32* %retval, align 4, !dbg !17412
  br label %return, !dbg !17412

return:                                           ; preds = %create_acl_err, %if.end21
  %24 = load i32, i32* %retval, align 4, !dbg !17413
  ret i32 %24, !dbg !17413
}

; Function Attrs: noredzone
declare dso_local i32 @mlx5_eswitch_enable_pf_vf_vports(%struct.mlx5_eswitch*, i32) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @esw_offloads_devcom_init(%struct.mlx5_eswitch* %esw) #0 !dbg !12305 {
entry:
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  %devcom = alloca %struct.mlx5_devcom*, align 8
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !17414, metadata !DIExpression()), !dbg !17415
  call void @llvm.dbg.declare(metadata %struct.mlx5_devcom** %devcom, metadata !17416, metadata !DIExpression()), !dbg !17417
  %0 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17418
  %dev = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %0, i32 0, i32 0, !dbg !17419
  %1 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !17419
  %priv = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %1, i32 0, i32 17, !dbg !17420
  %devcom1 = getelementptr inbounds %struct.mlx5_priv, %struct.mlx5_priv* %priv, i32 0, i32 29, !dbg !17421
  %2 = load %struct.mlx5_devcom*, %struct.mlx5_devcom** %devcom1, align 8, !dbg !17421
  store %struct.mlx5_devcom* %2, %struct.mlx5_devcom** %devcom, align 8, !dbg !17417
  %3 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17422
  %offloads = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %3, i32 0, i32 13, !dbg !17423
  %peer_flows = getelementptr inbounds %struct.mlx5_esw_offload, %struct.mlx5_esw_offload* %offloads, i32 0, i32 6, !dbg !17424
  call void @INIT_LIST_HEAD(%struct.list_head* %peer_flows) #8, !dbg !17425
  br label %do.body, !dbg !17426

do.body:                                          ; preds = %entry
  %4 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17427
  %offloads2 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %4, i32 0, i32 13, !dbg !17427
  %peer_mutex = getelementptr inbounds %struct.mlx5_esw_offload, %struct.mlx5_esw_offload* %offloads2, i32 0, i32 7, !dbg !17427
  call void @__mutex_init(%struct.mutex* %peer_mutex, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.18, i64 0, i64 0), %struct.lock_class_key* @esw_offloads_devcom_init.__key) #8, !dbg !17427
  br label %do.end, !dbg !17427

do.end:                                           ; preds = %do.body
  %5 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17429
  %dev3 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %5, i32 0, i32 0, !dbg !17429
  %6 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev3, align 8, !dbg !17429
  %caps = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %6, i32 0, i32 9, !dbg !17429
  %hca_cur = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps, i32 0, i32 0, !dbg !17429
  %arrayidx = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur, i64 0, i64 9, !dbg !17429
  %arraydecay = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx, i64 0, i64 0, !dbg !17429
  %add.ptr = getelementptr i32, i32* %arraydecay, i64 0, !dbg !17429
  %7 = load i32, i32* %add.ptr, align 4, !dbg !17429
  %8 = call i1 @llvm.is.constant.i32(i32 %7), !dbg !17429
  br i1 %8, label %cond.true, label %cond.false, !dbg !17429

cond.true:                                        ; preds = %do.end
  %9 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17429
  %dev4 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %9, i32 0, i32 0, !dbg !17429
  %10 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev4, align 8, !dbg !17429
  %caps5 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %10, i32 0, i32 9, !dbg !17429
  %hca_cur6 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps5, i32 0, i32 0, !dbg !17429
  %arrayidx7 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur6, i64 0, i64 9, !dbg !17429
  %arraydecay8 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx7, i64 0, i64 0, !dbg !17429
  %add.ptr9 = getelementptr i32, i32* %arraydecay8, i64 0, !dbg !17429
  %11 = load i32, i32* %add.ptr9, align 4, !dbg !17429
  %and = and i32 %11, 255, !dbg !17429
  %shl = shl i32 %and, 24, !dbg !17429
  %12 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17429
  %dev10 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %12, i32 0, i32 0, !dbg !17429
  %13 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev10, align 8, !dbg !17429
  %caps11 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %13, i32 0, i32 9, !dbg !17429
  %hca_cur12 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps11, i32 0, i32 0, !dbg !17429
  %arrayidx13 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur12, i64 0, i64 9, !dbg !17429
  %arraydecay14 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx13, i64 0, i64 0, !dbg !17429
  %add.ptr15 = getelementptr i32, i32* %arraydecay14, i64 0, !dbg !17429
  %14 = load i32, i32* %add.ptr15, align 4, !dbg !17429
  %and16 = and i32 %14, 65280, !dbg !17429
  %shl17 = shl i32 %and16, 8, !dbg !17429
  %or = or i32 %shl, %shl17, !dbg !17429
  %15 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17429
  %dev18 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %15, i32 0, i32 0, !dbg !17429
  %16 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev18, align 8, !dbg !17429
  %caps19 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %16, i32 0, i32 9, !dbg !17429
  %hca_cur20 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps19, i32 0, i32 0, !dbg !17429
  %arrayidx21 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur20, i64 0, i64 9, !dbg !17429
  %arraydecay22 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx21, i64 0, i64 0, !dbg !17429
  %add.ptr23 = getelementptr i32, i32* %arraydecay22, i64 0, !dbg !17429
  %17 = load i32, i32* %add.ptr23, align 4, !dbg !17429
  %and24 = and i32 %17, 16711680, !dbg !17429
  %shr = lshr i32 %and24, 8, !dbg !17429
  %or25 = or i32 %or, %shr, !dbg !17429
  %18 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17429
  %dev26 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %18, i32 0, i32 0, !dbg !17429
  %19 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev26, align 8, !dbg !17429
  %caps27 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %19, i32 0, i32 9, !dbg !17429
  %hca_cur28 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps27, i32 0, i32 0, !dbg !17429
  %arrayidx29 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur28, i64 0, i64 9, !dbg !17429
  %arraydecay30 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx29, i64 0, i64 0, !dbg !17429
  %add.ptr31 = getelementptr i32, i32* %arraydecay30, i64 0, !dbg !17429
  %20 = load i32, i32* %add.ptr31, align 4, !dbg !17429
  %and32 = and i32 %20, -16777216, !dbg !17429
  %shr33 = lshr i32 %and32, 24, !dbg !17429
  %or34 = or i32 %or25, %shr33, !dbg !17429
  br label %cond.end, !dbg !17429

cond.false:                                       ; preds = %do.end
  %21 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17429
  %dev35 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %21, i32 0, i32 0, !dbg !17429
  %22 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev35, align 8, !dbg !17429
  %caps36 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %22, i32 0, i32 9, !dbg !17429
  %hca_cur37 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps36, i32 0, i32 0, !dbg !17429
  %arrayidx38 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur37, i64 0, i64 9, !dbg !17429
  %arraydecay39 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx38, i64 0, i64 0, !dbg !17429
  %add.ptr40 = getelementptr i32, i32* %arraydecay39, i64 0, !dbg !17429
  %23 = load i32, i32* %add.ptr40, align 4, !dbg !17429
  %call = call i32 @__fswab32(i32 %23) #10, !dbg !17429
  br label %cond.end, !dbg !17429

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %or34, %cond.true ], [ %call, %cond.false ], !dbg !17429
  %shr41 = lshr i32 %cond, 2, !dbg !17429
  %and42 = and i32 %shr41, 1, !dbg !17429
  %tobool = icmp ne i32 %and42, 0, !dbg !17429
  br i1 %tobool, label %if.end, label %if.then, !dbg !17431

if.then:                                          ; preds = %cond.end
  br label %return, !dbg !17432

if.end:                                           ; preds = %cond.end
  %24 = load %struct.mlx5_devcom*, %struct.mlx5_devcom** %devcom, align 8, !dbg !17433
  %25 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17434
  %26 = bitcast %struct.mlx5_eswitch* %25 to i8*, !dbg !17434
  call void @mlx5_devcom_register_component(%struct.mlx5_devcom* %24, i32 0, i32 (i32, i8*, i8*)* @mlx5_esw_offloads_devcom_event, i8* %26) #8, !dbg !17435
  %27 = load %struct.mlx5_devcom*, %struct.mlx5_devcom** %devcom, align 8, !dbg !17436
  %28 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17437
  %29 = bitcast %struct.mlx5_eswitch* %28 to i8*, !dbg !17437
  %call43 = call i32 @mlx5_devcom_send_event(%struct.mlx5_devcom* %27, i32 0, i32 0, i8* %29) #8, !dbg !17438
  br label %return, !dbg !17439

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !17439
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @esw_offloads_steering_cleanup(%struct.mlx5_eswitch* %esw) #0 !dbg !17440 {
entry:
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !17441, metadata !DIExpression()), !dbg !17442
  %0 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17443
  call void @esw_destroy_vport_rx_group(%struct.mlx5_eswitch* %0) #8, !dbg !17444
  %1 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17445
  call void @esw_destroy_offloads_fdb_tables(%struct.mlx5_eswitch* %1) #8, !dbg !17446
  %2 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17447
  call void @esw_destroy_restore_table(%struct.mlx5_eswitch* %2) #8, !dbg !17448
  %3 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17449
  call void @esw_destroy_offloads_table(%struct.mlx5_eswitch* %3) #8, !dbg !17450
  %4 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17451
  call void @esw_destroy_uplink_offloads_acl_tables(%struct.mlx5_eswitch* %4) #8, !dbg !17452
  %5 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17453
  %fdb_table = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %5, i32 0, i32 2, !dbg !17454
  %6 = getelementptr inbounds %struct.mlx5_eswitch_fdb, %struct.mlx5_eswitch_fdb* %fdb_table, i32 0, i32 0, !dbg !17455
  %offloads = bitcast %union.anon.154* %6 to %struct.offloads_fdb*, !dbg !17455
  %vports = getelementptr inbounds %struct.offloads_fdb, %struct.offloads_fdb* %offloads, i32 0, i32 10, !dbg !17456
  %lock = getelementptr inbounds %struct.anon.155, %struct.anon.155* %vports, i32 0, i32 1, !dbg !17457
  call void @mutex_destroy(%struct.mutex* %lock) #8, !dbg !17458
  ret void, !dbg !17459
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @esw_offloads_metadata_uninit(%struct.mlx5_eswitch* %esw) #0 !dbg !17460 {
entry:
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  %vport = alloca %struct.mlx5_vport*, align 8
  %i = alloca i32, align 4
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !17461, metadata !DIExpression()), !dbg !17462
  call void @llvm.dbg.declare(metadata %struct.mlx5_vport** %vport, metadata !17463, metadata !DIExpression()), !dbg !17464
  call void @llvm.dbg.declare(metadata i32* %i, metadata !17465, metadata !DIExpression()), !dbg !17466
  %0 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17467
  %call = call zeroext i1 @mlx5_eswitch_vport_match_metadata_enabled(%struct.mlx5_eswitch* %0) #8, !dbg !17469
  br i1 %call, label %if.end, label %if.then, !dbg !17470

if.then:                                          ; preds = %entry
  br label %for.end, !dbg !17471

if.end:                                           ; preds = %entry
  %1 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17472
  %total_vports = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %1, i32 0, i32 8, !dbg !17472
  %2 = load i32, i32* %total_vports, align 4, !dbg !17472
  %sub = sub i32 %2, 1, !dbg !17472
  store i32 %sub, i32* %i, align 4, !dbg !17472
  br label %for.cond, !dbg !17472

for.cond:                                         ; preds = %for.inc, %if.end
  %3 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17474
  %vports = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %3, i32 0, i32 6, !dbg !17474
  %4 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vports, align 8, !dbg !17474
  %5 = load i32, i32* %i, align 4, !dbg !17474
  %idxprom = sext i32 %5 to i64, !dbg !17474
  %arrayidx = getelementptr %struct.mlx5_vport, %struct.mlx5_vport* %4, i64 %idxprom, !dbg !17474
  store %struct.mlx5_vport* %arrayidx, %struct.mlx5_vport** %vport, align 8, !dbg !17474
  %6 = load i32, i32* %i, align 4, !dbg !17474
  %cmp = icmp sge i32 %6, 0, !dbg !17474
  br i1 %cmp, label %for.body, label %for.end, !dbg !17472

for.body:                                         ; preds = %for.cond
  %7 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17476
  %8 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport, align 8, !dbg !17477
  call void @esw_offloads_vport_metadata_cleanup(%struct.mlx5_eswitch* %7, %struct.mlx5_vport* %8) #8, !dbg !17478
  br label %for.inc, !dbg !17478

for.inc:                                          ; preds = %for.body
  %9 = load i32, i32* %i, align 4, !dbg !17474
  %dec = add i32 %9, -1, !dbg !17474
  store i32 %dec, i32* %i, align 4, !dbg !17474
  br label %for.cond, !dbg !17474, !llvm.loop !17479

for.end:                                          ; preds = %if.then, %for.cond
  ret void, !dbg !17481
}

; Function Attrs: noredzone
declare dso_local void @mlx5_rdma_disable_roce(%struct.mlx5_core_dev*) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mutex_destroy(%struct.mutex* %lock) #0 !dbg !17482 {
entry:
  %lock.addr = alloca %struct.mutex*, align 8
  store %struct.mutex* %lock, %struct.mutex** %lock.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mutex** %lock.addr, metadata !17486, metadata !DIExpression()), !dbg !17487
  ret void, !dbg !17488
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @esw_offloads_disable(%struct.mlx5_eswitch* %esw) #0 !dbg !17489 {
entry:
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !17490, metadata !DIExpression()), !dbg !17491
  %0 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17492
  call void @esw_offloads_devcom_cleanup(%struct.mlx5_eswitch* %0) #8, !dbg !17493
  %1 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17494
  call void @mlx5_eswitch_disable_pf_vf_vports(%struct.mlx5_eswitch* %1) #8, !dbg !17495
  %2 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17496
  call void @esw_offloads_unload_rep(%struct.mlx5_eswitch* %2, i16 zeroext -1) #8, !dbg !17497
  %3 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17498
  %call = call i32 @esw_set_passing_vport_metadata(%struct.mlx5_eswitch* %3, i1 zeroext false) #8, !dbg !17499
  %4 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17500
  call void @esw_offloads_steering_cleanup(%struct.mlx5_eswitch* %4) #8, !dbg !17501
  %5 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17502
  call void @esw_offloads_metadata_uninit(%struct.mlx5_eswitch* %5) #8, !dbg !17503
  %6 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17504
  %flags = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %6, i32 0, i32 7, !dbg !17505
  %7 = load i32, i32* %flags, align 8, !dbg !17506
  %and = and i32 %7, -2, !dbg !17506
  store i32 %and, i32* %flags, align 8, !dbg !17506
  %8 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17507
  %dev = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %8, i32 0, i32 0, !dbg !17508
  %9 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !17508
  call void @mlx5_rdma_disable_roce(%struct.mlx5_core_dev* %9) #8, !dbg !17509
  %10 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17510
  %offloads = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %10, i32 0, i32 13, !dbg !17511
  %termtbl_mutex = getelementptr inbounds %struct.mlx5_esw_offload, %struct.mlx5_esw_offload* %offloads, i32 0, i32 14, !dbg !17512
  call void @mutex_destroy(%struct.mutex* %termtbl_mutex) #8, !dbg !17513
  %11 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17514
  %offloads1 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %11, i32 0, i32 13, !dbg !17515
  %encap = getelementptr inbounds %struct.mlx5_esw_offload, %struct.mlx5_esw_offload* %offloads1, i32 0, i32 18, !dbg !17516
  store i32 0, i32* %encap, align 8, !dbg !17517
  ret void, !dbg !17518
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @esw_offloads_devcom_cleanup(%struct.mlx5_eswitch* %esw) #0 !dbg !17519 {
entry:
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  %devcom = alloca %struct.mlx5_devcom*, align 8
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !17520, metadata !DIExpression()), !dbg !17521
  call void @llvm.dbg.declare(metadata %struct.mlx5_devcom** %devcom, metadata !17522, metadata !DIExpression()), !dbg !17523
  %0 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17524
  %dev = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %0, i32 0, i32 0, !dbg !17525
  %1 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !17525
  %priv = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %1, i32 0, i32 17, !dbg !17526
  %devcom1 = getelementptr inbounds %struct.mlx5_priv, %struct.mlx5_priv* %priv, i32 0, i32 29, !dbg !17527
  %2 = load %struct.mlx5_devcom*, %struct.mlx5_devcom** %devcom1, align 8, !dbg !17527
  store %struct.mlx5_devcom* %2, %struct.mlx5_devcom** %devcom, align 8, !dbg !17523
  %3 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17528
  %dev2 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %3, i32 0, i32 0, !dbg !17528
  %4 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev2, align 8, !dbg !17528
  %caps = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %4, i32 0, i32 9, !dbg !17528
  %hca_cur = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps, i32 0, i32 0, !dbg !17528
  %arrayidx = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur, i64 0, i64 9, !dbg !17528
  %arraydecay = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx, i64 0, i64 0, !dbg !17528
  %add.ptr = getelementptr i32, i32* %arraydecay, i64 0, !dbg !17528
  %5 = load i32, i32* %add.ptr, align 4, !dbg !17528
  %6 = call i1 @llvm.is.constant.i32(i32 %5), !dbg !17528
  br i1 %6, label %cond.true, label %cond.false, !dbg !17528

cond.true:                                        ; preds = %entry
  %7 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17528
  %dev3 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %7, i32 0, i32 0, !dbg !17528
  %8 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev3, align 8, !dbg !17528
  %caps4 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %8, i32 0, i32 9, !dbg !17528
  %hca_cur5 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps4, i32 0, i32 0, !dbg !17528
  %arrayidx6 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur5, i64 0, i64 9, !dbg !17528
  %arraydecay7 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx6, i64 0, i64 0, !dbg !17528
  %add.ptr8 = getelementptr i32, i32* %arraydecay7, i64 0, !dbg !17528
  %9 = load i32, i32* %add.ptr8, align 4, !dbg !17528
  %and = and i32 %9, 255, !dbg !17528
  %shl = shl i32 %and, 24, !dbg !17528
  %10 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17528
  %dev9 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %10, i32 0, i32 0, !dbg !17528
  %11 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev9, align 8, !dbg !17528
  %caps10 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %11, i32 0, i32 9, !dbg !17528
  %hca_cur11 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps10, i32 0, i32 0, !dbg !17528
  %arrayidx12 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur11, i64 0, i64 9, !dbg !17528
  %arraydecay13 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx12, i64 0, i64 0, !dbg !17528
  %add.ptr14 = getelementptr i32, i32* %arraydecay13, i64 0, !dbg !17528
  %12 = load i32, i32* %add.ptr14, align 4, !dbg !17528
  %and15 = and i32 %12, 65280, !dbg !17528
  %shl16 = shl i32 %and15, 8, !dbg !17528
  %or = or i32 %shl, %shl16, !dbg !17528
  %13 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17528
  %dev17 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %13, i32 0, i32 0, !dbg !17528
  %14 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev17, align 8, !dbg !17528
  %caps18 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %14, i32 0, i32 9, !dbg !17528
  %hca_cur19 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps18, i32 0, i32 0, !dbg !17528
  %arrayidx20 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur19, i64 0, i64 9, !dbg !17528
  %arraydecay21 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx20, i64 0, i64 0, !dbg !17528
  %add.ptr22 = getelementptr i32, i32* %arraydecay21, i64 0, !dbg !17528
  %15 = load i32, i32* %add.ptr22, align 4, !dbg !17528
  %and23 = and i32 %15, 16711680, !dbg !17528
  %shr = lshr i32 %and23, 8, !dbg !17528
  %or24 = or i32 %or, %shr, !dbg !17528
  %16 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17528
  %dev25 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %16, i32 0, i32 0, !dbg !17528
  %17 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev25, align 8, !dbg !17528
  %caps26 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %17, i32 0, i32 9, !dbg !17528
  %hca_cur27 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps26, i32 0, i32 0, !dbg !17528
  %arrayidx28 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur27, i64 0, i64 9, !dbg !17528
  %arraydecay29 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx28, i64 0, i64 0, !dbg !17528
  %add.ptr30 = getelementptr i32, i32* %arraydecay29, i64 0, !dbg !17528
  %18 = load i32, i32* %add.ptr30, align 4, !dbg !17528
  %and31 = and i32 %18, -16777216, !dbg !17528
  %shr32 = lshr i32 %and31, 24, !dbg !17528
  %or33 = or i32 %or24, %shr32, !dbg !17528
  br label %cond.end, !dbg !17528

cond.false:                                       ; preds = %entry
  %19 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17528
  %dev34 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %19, i32 0, i32 0, !dbg !17528
  %20 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev34, align 8, !dbg !17528
  %caps35 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %20, i32 0, i32 9, !dbg !17528
  %hca_cur36 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps35, i32 0, i32 0, !dbg !17528
  %arrayidx37 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur36, i64 0, i64 9, !dbg !17528
  %arraydecay38 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx37, i64 0, i64 0, !dbg !17528
  %add.ptr39 = getelementptr i32, i32* %arraydecay38, i64 0, !dbg !17528
  %21 = load i32, i32* %add.ptr39, align 4, !dbg !17528
  %call = call i32 @__fswab32(i32 %21) #10, !dbg !17528
  br label %cond.end, !dbg !17528

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %or33, %cond.true ], [ %call, %cond.false ], !dbg !17528
  %shr40 = lshr i32 %cond, 2, !dbg !17528
  %and41 = and i32 %shr40, 1, !dbg !17528
  %tobool = icmp ne i32 %and41, 0, !dbg !17528
  br i1 %tobool, label %if.end, label %if.then, !dbg !17530

if.then:                                          ; preds = %cond.end
  br label %return, !dbg !17531

if.end:                                           ; preds = %cond.end
  %22 = load %struct.mlx5_devcom*, %struct.mlx5_devcom** %devcom, align 8, !dbg !17532
  %23 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17533
  %24 = bitcast %struct.mlx5_eswitch* %23 to i8*, !dbg !17533
  %call42 = call i32 @mlx5_devcom_send_event(%struct.mlx5_devcom* %22, i32 0, i32 1, i8* %24) #8, !dbg !17534
  %25 = load %struct.mlx5_devcom*, %struct.mlx5_devcom** %devcom, align 8, !dbg !17535
  call void @mlx5_devcom_unregister_component(%struct.mlx5_devcom* %25, i32 0) #8, !dbg !17536
  br label %return, !dbg !17537

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !17537
}

; Function Attrs: noredzone
declare dso_local void @mlx5_eswitch_disable_pf_vf_vports(%struct.mlx5_eswitch*) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @mlx5_devlink_eswitch_mode_set(%struct.devlink* %devlink, i16 zeroext %mode, %struct.netlink_ext_ack* %extack) #0 !dbg !17538 {
entry:
  %retval = alloca i32, align 4
  %devlink.addr = alloca %struct.devlink*, align 8
  %mode.addr = alloca i16, align 2
  %extack.addr = alloca %struct.netlink_ext_ack*, align 8
  %cur_mlx5_mode = alloca i16, align 2
  %mlx5_mode = alloca i16, align 2
  %esw = alloca %struct.mlx5_eswitch*, align 8
  %err = alloca i32, align 4
  store %struct.devlink* %devlink, %struct.devlink** %devlink.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.devlink** %devlink.addr, metadata !17539, metadata !DIExpression()), !dbg !17540
  store i16 %mode, i16* %mode.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %mode.addr, metadata !17541, metadata !DIExpression()), !dbg !17542
  store %struct.netlink_ext_ack* %extack, %struct.netlink_ext_ack** %extack.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.netlink_ext_ack** %extack.addr, metadata !17543, metadata !DIExpression()), !dbg !17544
  call void @llvm.dbg.declare(metadata i16* %cur_mlx5_mode, metadata !17545, metadata !DIExpression()), !dbg !17546
  call void @llvm.dbg.declare(metadata i16* %mlx5_mode, metadata !17547, metadata !DIExpression()), !dbg !17548
  store i16 0, i16* %mlx5_mode, align 2, !dbg !17548
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw, metadata !17549, metadata !DIExpression()), !dbg !17550
  call void @llvm.dbg.declare(metadata i32* %err, metadata !17551, metadata !DIExpression()), !dbg !17552
  store i32 0, i32* %err, align 4, !dbg !17552
  %0 = load %struct.devlink*, %struct.devlink** %devlink.addr, align 8, !dbg !17553
  %call = call %struct.mlx5_eswitch* @mlx5_devlink_eswitch_get(%struct.devlink* %0) #8, !dbg !17554
  store %struct.mlx5_eswitch* %call, %struct.mlx5_eswitch** %esw, align 8, !dbg !17555
  %1 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw, align 8, !dbg !17556
  %2 = bitcast %struct.mlx5_eswitch* %1 to i8*, !dbg !17556
  %call1 = call zeroext i1 @IS_ERR(i8* %2) #8, !dbg !17558
  br i1 %call1, label %if.then, label %if.end, !dbg !17559

if.then:                                          ; preds = %entry
  %3 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw, align 8, !dbg !17560
  %4 = bitcast %struct.mlx5_eswitch* %3 to i8*, !dbg !17560
  %call2 = call i64 @PTR_ERR(i8* %4) #8, !dbg !17561
  %conv = trunc i64 %call2 to i32, !dbg !17561
  store i32 %conv, i32* %retval, align 4, !dbg !17562
  br label %return, !dbg !17562

if.end:                                           ; preds = %entry
  %5 = load i16, i16* %mode.addr, align 2, !dbg !17563
  %call3 = call i32 @esw_mode_from_devlink(i16 zeroext %5, i16* %mlx5_mode) #8, !dbg !17565
  %tobool = icmp ne i32 %call3, 0, !dbg !17565
  br i1 %tobool, label %if.then4, label %if.end5, !dbg !17566

if.then4:                                         ; preds = %if.end
  store i32 -22, i32* %retval, align 4, !dbg !17567
  br label %return, !dbg !17567

if.end5:                                          ; preds = %if.end
  %6 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw, align 8, !dbg !17568
  %mode_lock = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %6, i32 0, i32 11, !dbg !17569
  call void @mutex_lock(%struct.mutex* %mode_lock) #8, !dbg !17570
  %7 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw, align 8, !dbg !17571
  %mode6 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %7, i32 0, i32 14, !dbg !17572
  %8 = load i32, i32* %mode6, align 8, !dbg !17572
  %conv7 = trunc i32 %8 to i16, !dbg !17571
  store i16 %conv7, i16* %cur_mlx5_mode, align 2, !dbg !17573
  %9 = load i16, i16* %cur_mlx5_mode, align 2, !dbg !17574
  %conv8 = zext i16 %9 to i32, !dbg !17574
  %10 = load i16, i16* %mlx5_mode, align 2, !dbg !17576
  %conv9 = zext i16 %10 to i32, !dbg !17576
  %cmp = icmp eq i32 %conv8, %conv9, !dbg !17577
  br i1 %cmp, label %if.then11, label %if.end12, !dbg !17578

if.then11:                                        ; preds = %if.end5
  br label %unlock, !dbg !17579

if.end12:                                         ; preds = %if.end5
  %11 = load i16, i16* %mode.addr, align 2, !dbg !17580
  %conv13 = zext i16 %11 to i32, !dbg !17580
  %cmp14 = icmp eq i32 %conv13, 1, !dbg !17582
  br i1 %cmp14, label %if.then16, label %if.else, !dbg !17583

if.then16:                                        ; preds = %if.end12
  %12 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw, align 8, !dbg !17584
  %13 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %extack.addr, align 8, !dbg !17585
  %call17 = call i32 @esw_offloads_start(%struct.mlx5_eswitch* %12, %struct.netlink_ext_ack* %13) #8, !dbg !17586
  store i32 %call17, i32* %err, align 4, !dbg !17587
  br label %if.end25, !dbg !17588

if.else:                                          ; preds = %if.end12
  %14 = load i16, i16* %mode.addr, align 2, !dbg !17589
  %conv18 = zext i16 %14 to i32, !dbg !17589
  %cmp19 = icmp eq i32 %conv18, 0, !dbg !17591
  br i1 %cmp19, label %if.then21, label %if.else23, !dbg !17592

if.then21:                                        ; preds = %if.else
  %15 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw, align 8, !dbg !17593
  %16 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %extack.addr, align 8, !dbg !17594
  %call22 = call i32 @esw_offloads_stop(%struct.mlx5_eswitch* %15, %struct.netlink_ext_ack* %16) #8, !dbg !17595
  store i32 %call22, i32* %err, align 4, !dbg !17596
  br label %if.end24, !dbg !17597

if.else23:                                        ; preds = %if.else
  store i32 -22, i32* %err, align 4, !dbg !17598
  br label %if.end24

if.end24:                                         ; preds = %if.else23, %if.then21
  br label %if.end25

if.end25:                                         ; preds = %if.end24, %if.then16
  br label %unlock, !dbg !17599

unlock:                                           ; preds = %if.end25, %if.then11
  call void @llvm.dbg.label(metadata !17600), !dbg !17601
  %17 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw, align 8, !dbg !17602
  %mode_lock26 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %17, i32 0, i32 11, !dbg !17603
  call void @mutex_unlock(%struct.mutex* %mode_lock26) #8, !dbg !17604
  %18 = load i32, i32* %err, align 4, !dbg !17605
  store i32 %18, i32* %retval, align 4, !dbg !17606
  br label %return, !dbg !17606

return:                                           ; preds = %unlock, %if.then4, %if.then
  %19 = load i32, i32* %retval, align 4, !dbg !17607
  ret i32 %19, !dbg !17607
}

; Function Attrs: noredzone
declare dso_local %struct.mlx5_eswitch* @mlx5_devlink_eswitch_get(%struct.devlink*) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @esw_mode_from_devlink(i16 zeroext %mode, i16* %mlx5_mode) #0 !dbg !17608 {
entry:
  %retval = alloca i32, align 4
  %mode.addr = alloca i16, align 2
  %mlx5_mode.addr = alloca i16*, align 8
  store i16 %mode, i16* %mode.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %mode.addr, metadata !17611, metadata !DIExpression()), !dbg !17612
  store i16* %mlx5_mode, i16** %mlx5_mode.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %mlx5_mode.addr, metadata !17613, metadata !DIExpression()), !dbg !17614
  %0 = load i16, i16* %mode.addr, align 2, !dbg !17615
  %conv = zext i16 %0 to i32, !dbg !17615
  switch i32 %conv, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb1
  ], !dbg !17616

sw.bb:                                            ; preds = %entry
  %1 = load i16*, i16** %mlx5_mode.addr, align 8, !dbg !17617
  store i16 1, i16* %1, align 2, !dbg !17619
  br label %sw.epilog, !dbg !17620

sw.bb1:                                           ; preds = %entry
  %2 = load i16*, i16** %mlx5_mode.addr, align 8, !dbg !17621
  store i16 2, i16* %2, align 2, !dbg !17622
  br label %sw.epilog, !dbg !17623

sw.default:                                       ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !17624
  br label %return, !dbg !17624

sw.epilog:                                        ; preds = %sw.bb1, %sw.bb
  store i32 0, i32* %retval, align 4, !dbg !17625
  br label %return, !dbg !17625

return:                                           ; preds = %sw.epilog, %sw.default
  %3 = load i32, i32* %retval, align 4, !dbg !17626
  ret i32 %3, !dbg !17626
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @esw_offloads_start(%struct.mlx5_eswitch* %esw, %struct.netlink_ext_ack* %extack) #0 !dbg !12310 {
entry:
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  %extack.addr = alloca %struct.netlink_ext_ack*, align 8
  %err = alloca i32, align 4
  %err1 = alloca i32, align 4
  %__extack = alloca %struct.netlink_ext_ack*, align 8
  %__extack7 = alloca %struct.netlink_ext_ack*, align 8
  %__extack25 = alloca %struct.netlink_ext_ack*, align 8
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !17627, metadata !DIExpression()), !dbg !17628
  store %struct.netlink_ext_ack* %extack, %struct.netlink_ext_ack** %extack.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.netlink_ext_ack** %extack.addr, metadata !17629, metadata !DIExpression()), !dbg !17630
  call void @llvm.dbg.declare(metadata i32* %err, metadata !17631, metadata !DIExpression()), !dbg !17632
  call void @llvm.dbg.declare(metadata i32* %err1, metadata !17633, metadata !DIExpression()), !dbg !17634
  %0 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17635
  call void @mlx5_eswitch_disable_locked(%struct.mlx5_eswitch* %0, i1 zeroext false) #8, !dbg !17636
  %1 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17637
  %2 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17638
  %dev = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %2, i32 0, i32 0, !dbg !17639
  %3 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !17639
  %priv = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %3, i32 0, i32 17, !dbg !17640
  %sriov = getelementptr inbounds %struct.mlx5_priv, %struct.mlx5_priv* %priv, i32 0, i32 27, !dbg !17641
  %num_vfs = getelementptr inbounds %struct.mlx5_core_sriov, %struct.mlx5_core_sriov* %sriov, i32 0, i32 1, !dbg !17642
  %4 = load i32, i32* %num_vfs, align 8, !dbg !17642
  %call = call i32 @mlx5_eswitch_enable_locked(%struct.mlx5_eswitch* %1, i32 2, i32 %4) #8, !dbg !17643
  store i32 %call, i32* %err, align 4, !dbg !17644
  %5 = load i32, i32* %err, align 4, !dbg !17645
  %tobool = icmp ne i32 %5, 0, !dbg !17645
  br i1 %tobool, label %if.then, label %if.end14, !dbg !17647

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !17648

do.body:                                          ; preds = %if.then
  call void @llvm.dbg.declare(metadata %struct.netlink_ext_ack** %__extack, metadata !17650, metadata !DIExpression()), !dbg !17652
  %6 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %extack.addr, align 8, !dbg !17652
  store %struct.netlink_ext_ack* %6, %struct.netlink_ext_ack** %__extack, align 8, !dbg !17652
  %7 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %__extack, align 8, !dbg !17653
  %tobool1 = icmp ne %struct.netlink_ext_ack* %7, null, !dbg !17653
  br i1 %tobool1, label %if.then2, label %if.end, !dbg !17652

if.then2:                                         ; preds = %do.body
  %8 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %__extack, align 8, !dbg !17653
  %_msg = getelementptr inbounds %struct.netlink_ext_ack, %struct.netlink_ext_ack* %8, i32 0, i32 0, !dbg !17653
  store i8* getelementptr inbounds ([46 x i8], [46 x i8]* @esw_offloads_start.__msg, i64 0, i64 0), i8** %_msg, align 8, !dbg !17653
  br label %if.end, !dbg !17653

if.end:                                           ; preds = %if.then2, %do.body
  br label %do.end, !dbg !17652

do.end:                                           ; preds = %if.end
  %9 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17655
  %call3 = call i32 @mlx5_eswitch_enable_locked(%struct.mlx5_eswitch* %9, i32 1, i32 -1) #8, !dbg !17656
  store i32 %call3, i32* %err1, align 4, !dbg !17657
  %10 = load i32, i32* %err1, align 4, !dbg !17658
  %tobool4 = icmp ne i32 %10, 0, !dbg !17658
  br i1 %tobool4, label %if.then5, label %if.end13, !dbg !17660

if.then5:                                         ; preds = %do.end
  br label %do.body6, !dbg !17661

do.body6:                                         ; preds = %if.then5
  call void @llvm.dbg.declare(metadata %struct.netlink_ext_ack** %__extack7, metadata !17663, metadata !DIExpression()), !dbg !17665
  %11 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %extack.addr, align 8, !dbg !17665
  store %struct.netlink_ext_ack* %11, %struct.netlink_ext_ack** %__extack7, align 8, !dbg !17665
  %12 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %__extack7, align 8, !dbg !17666
  %tobool8 = icmp ne %struct.netlink_ext_ack* %12, null, !dbg !17666
  br i1 %tobool8, label %if.then9, label %if.end11, !dbg !17665

if.then9:                                         ; preds = %do.body6
  %13 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %__extack7, align 8, !dbg !17666
  %_msg10 = getelementptr inbounds %struct.netlink_ext_ack, %struct.netlink_ext_ack* %13, i32 0, i32 0, !dbg !17666
  store i8* getelementptr inbounds ([49 x i8], [49 x i8]* @esw_offloads_start.__msg.21, i64 0, i64 0), i8** %_msg10, align 8, !dbg !17666
  br label %if.end11, !dbg !17666

if.end11:                                         ; preds = %if.then9, %do.body6
  br label %do.end12, !dbg !17665

do.end12:                                         ; preds = %if.end11
  br label %if.end13, !dbg !17668

if.end13:                                         ; preds = %do.end12, %do.end
  br label %if.end14, !dbg !17669

if.end14:                                         ; preds = %if.end13, %entry
  %14 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17670
  %offloads = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %14, i32 0, i32 13, !dbg !17672
  %inline_mode = getelementptr inbounds %struct.mlx5_esw_offload, %struct.mlx5_esw_offload* %offloads, i32 0, i32 16, !dbg !17673
  %15 = load i8, i8* %inline_mode, align 8, !dbg !17673
  %conv = zext i8 %15 to i32, !dbg !17670
  %cmp = icmp eq i32 %conv, 0, !dbg !17674
  br i1 %cmp, label %if.then16, label %if.end32, !dbg !17675

if.then16:                                        ; preds = %if.end14
  %16 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17676
  %17 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17679
  %offloads17 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %17, i32 0, i32 13, !dbg !17680
  %inline_mode18 = getelementptr inbounds %struct.mlx5_esw_offload, %struct.mlx5_esw_offload* %offloads17, i32 0, i32 16, !dbg !17681
  %call19 = call i32 @mlx5_eswitch_inline_mode_get(%struct.mlx5_eswitch* %16, i8* %inline_mode18) #8, !dbg !17682
  %tobool20 = icmp ne i32 %call19, 0, !dbg !17682
  br i1 %tobool20, label %if.then21, label %if.end31, !dbg !17683

if.then21:                                        ; preds = %if.then16
  %18 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17684
  %offloads22 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %18, i32 0, i32 13, !dbg !17686
  %inline_mode23 = getelementptr inbounds %struct.mlx5_esw_offload, %struct.mlx5_esw_offload* %offloads22, i32 0, i32 16, !dbg !17687
  store i8 1, i8* %inline_mode23, align 8, !dbg !17688
  br label %do.body24, !dbg !17689

do.body24:                                        ; preds = %if.then21
  call void @llvm.dbg.declare(metadata %struct.netlink_ext_ack** %__extack25, metadata !17690, metadata !DIExpression()), !dbg !17692
  %19 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %extack.addr, align 8, !dbg !17692
  store %struct.netlink_ext_ack* %19, %struct.netlink_ext_ack** %__extack25, align 8, !dbg !17692
  %20 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %__extack25, align 8, !dbg !17693
  %tobool26 = icmp ne %struct.netlink_ext_ack* %20, null, !dbg !17693
  br i1 %tobool26, label %if.then27, label %if.end29, !dbg !17692

if.then27:                                        ; preds = %do.body24
  %21 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %__extack25, align 8, !dbg !17693
  %_msg28 = getelementptr inbounds %struct.netlink_ext_ack, %struct.netlink_ext_ack* %21, i32 0, i32 0, !dbg !17693
  store i8* getelementptr inbounds ([51 x i8], [51 x i8]* @esw_offloads_start.__msg.22, i64 0, i64 0), i8** %_msg28, align 8, !dbg !17693
  br label %if.end29, !dbg !17693

if.end29:                                         ; preds = %if.then27, %do.body24
  br label %do.end30, !dbg !17692

do.end30:                                         ; preds = %if.end29
  br label %if.end31, !dbg !17695

if.end31:                                         ; preds = %do.end30, %if.then16
  br label %if.end32, !dbg !17696

if.end32:                                         ; preds = %if.end31, %if.end14
  %22 = load i32, i32* %err, align 4, !dbg !17697
  ret i32 %22, !dbg !17698
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @esw_offloads_stop(%struct.mlx5_eswitch* %esw, %struct.netlink_ext_ack* %extack) #0 !dbg !12328 {
entry:
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  %extack.addr = alloca %struct.netlink_ext_ack*, align 8
  %err = alloca i32, align 4
  %err1 = alloca i32, align 4
  %__extack = alloca %struct.netlink_ext_ack*, align 8
  %__extack7 = alloca %struct.netlink_ext_ack*, align 8
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !17699, metadata !DIExpression()), !dbg !17700
  store %struct.netlink_ext_ack* %extack, %struct.netlink_ext_ack** %extack.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.netlink_ext_ack** %extack.addr, metadata !17701, metadata !DIExpression()), !dbg !17702
  call void @llvm.dbg.declare(metadata i32* %err, metadata !17703, metadata !DIExpression()), !dbg !17704
  call void @llvm.dbg.declare(metadata i32* %err1, metadata !17705, metadata !DIExpression()), !dbg !17706
  %0 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17707
  call void @mlx5_eswitch_disable_locked(%struct.mlx5_eswitch* %0, i1 zeroext false) #8, !dbg !17708
  %1 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17709
  %call = call i32 @mlx5_eswitch_enable_locked(%struct.mlx5_eswitch* %1, i32 1, i32 -1) #8, !dbg !17710
  store i32 %call, i32* %err, align 4, !dbg !17711
  %2 = load i32, i32* %err, align 4, !dbg !17712
  %tobool = icmp ne i32 %2, 0, !dbg !17712
  br i1 %tobool, label %if.then, label %if.end14, !dbg !17714

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !17715

do.body:                                          ; preds = %if.then
  call void @llvm.dbg.declare(metadata %struct.netlink_ext_ack** %__extack, metadata !17717, metadata !DIExpression()), !dbg !17719
  %3 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %extack.addr, align 8, !dbg !17719
  store %struct.netlink_ext_ack* %3, %struct.netlink_ext_ack** %__extack, align 8, !dbg !17719
  %4 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %__extack, align 8, !dbg !17720
  %tobool1 = icmp ne %struct.netlink_ext_ack* %4, null, !dbg !17720
  br i1 %tobool1, label %if.then2, label %if.end, !dbg !17719

if.then2:                                         ; preds = %do.body
  %5 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %__extack, align 8, !dbg !17720
  %_msg = getelementptr inbounds %struct.netlink_ext_ack, %struct.netlink_ext_ack* %5, i32 0, i32 0, !dbg !17720
  store i8* getelementptr inbounds ([44 x i8], [44 x i8]* @esw_offloads_stop.__msg, i64 0, i64 0), i8** %_msg, align 8, !dbg !17720
  br label %if.end, !dbg !17720

if.end:                                           ; preds = %if.then2, %do.body
  br label %do.end, !dbg !17719

do.end:                                           ; preds = %if.end
  %6 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17722
  %call3 = call i32 @mlx5_eswitch_enable_locked(%struct.mlx5_eswitch* %6, i32 2, i32 -1) #8, !dbg !17723
  store i32 %call3, i32* %err1, align 4, !dbg !17724
  %7 = load i32, i32* %err1, align 4, !dbg !17725
  %tobool4 = icmp ne i32 %7, 0, !dbg !17725
  br i1 %tobool4, label %if.then5, label %if.end13, !dbg !17727

if.then5:                                         ; preds = %do.end
  br label %do.body6, !dbg !17728

do.body6:                                         ; preds = %if.then5
  call void @llvm.dbg.declare(metadata %struct.netlink_ext_ack** %__extack7, metadata !17730, metadata !DIExpression()), !dbg !17732
  %8 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %extack.addr, align 8, !dbg !17732
  store %struct.netlink_ext_ack* %8, %struct.netlink_ext_ack** %__extack7, align 8, !dbg !17732
  %9 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %__extack7, align 8, !dbg !17733
  %tobool8 = icmp ne %struct.netlink_ext_ack* %9, null, !dbg !17733
  br i1 %tobool8, label %if.then9, label %if.end11, !dbg !17732

if.then9:                                         ; preds = %do.body6
  %10 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %__extack7, align 8, !dbg !17733
  %_msg10 = getelementptr inbounds %struct.netlink_ext_ack, %struct.netlink_ext_ack* %10, i32 0, i32 0, !dbg !17733
  store i8* getelementptr inbounds ([51 x i8], [51 x i8]* @esw_offloads_stop.__msg.23, i64 0, i64 0), i8** %_msg10, align 8, !dbg !17733
  br label %if.end11, !dbg !17733

if.end11:                                         ; preds = %if.then9, %do.body6
  br label %do.end12, !dbg !17732

do.end12:                                         ; preds = %if.end11
  br label %if.end13, !dbg !17735

if.end13:                                         ; preds = %do.end12, %do.end
  br label %if.end14, !dbg !17736

if.end14:                                         ; preds = %if.end13, %entry
  %11 = load i32, i32* %err, align 4, !dbg !17737
  ret i32 %11, !dbg !17738
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @mlx5_devlink_eswitch_mode_get(%struct.devlink* %devlink, i16* %mode) #0 !dbg !17739 {
entry:
  %retval = alloca i32, align 4
  %devlink.addr = alloca %struct.devlink*, align 8
  %mode.addr = alloca i16*, align 8
  %esw = alloca %struct.mlx5_eswitch*, align 8
  %err = alloca i32, align 4
  store %struct.devlink* %devlink, %struct.devlink** %devlink.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.devlink** %devlink.addr, metadata !17740, metadata !DIExpression()), !dbg !17741
  store i16* %mode, i16** %mode.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %mode.addr, metadata !17742, metadata !DIExpression()), !dbg !17743
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw, metadata !17744, metadata !DIExpression()), !dbg !17745
  call void @llvm.dbg.declare(metadata i32* %err, metadata !17746, metadata !DIExpression()), !dbg !17747
  %0 = load %struct.devlink*, %struct.devlink** %devlink.addr, align 8, !dbg !17748
  %call = call %struct.mlx5_eswitch* @mlx5_devlink_eswitch_get(%struct.devlink* %0) #8, !dbg !17749
  store %struct.mlx5_eswitch* %call, %struct.mlx5_eswitch** %esw, align 8, !dbg !17750
  %1 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw, align 8, !dbg !17751
  %2 = bitcast %struct.mlx5_eswitch* %1 to i8*, !dbg !17751
  %call1 = call zeroext i1 @IS_ERR(i8* %2) #8, !dbg !17753
  br i1 %call1, label %if.then, label %if.end, !dbg !17754

if.then:                                          ; preds = %entry
  %3 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw, align 8, !dbg !17755
  %4 = bitcast %struct.mlx5_eswitch* %3 to i8*, !dbg !17755
  %call2 = call i64 @PTR_ERR(i8* %4) #8, !dbg !17756
  %conv = trunc i64 %call2 to i32, !dbg !17756
  store i32 %conv, i32* %retval, align 4, !dbg !17757
  br label %return, !dbg !17757

if.end:                                           ; preds = %entry
  %5 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw, align 8, !dbg !17758
  %mode_lock = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %5, i32 0, i32 11, !dbg !17759
  call void @mutex_lock(%struct.mutex* %mode_lock) #8, !dbg !17760
  %6 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw, align 8, !dbg !17761
  %call3 = call i32 @eswitch_devlink_esw_mode_check(%struct.mlx5_eswitch* %6) #8, !dbg !17762
  store i32 %call3, i32* %err, align 4, !dbg !17763
  %7 = load i32, i32* %err, align 4, !dbg !17764
  %tobool = icmp ne i32 %7, 0, !dbg !17764
  br i1 %tobool, label %if.then4, label %if.end5, !dbg !17766

if.then4:                                         ; preds = %if.end
  br label %unlock, !dbg !17767

if.end5:                                          ; preds = %if.end
  %8 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw, align 8, !dbg !17768
  %mode6 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %8, i32 0, i32 14, !dbg !17769
  %9 = load i32, i32* %mode6, align 8, !dbg !17769
  %conv7 = trunc i32 %9 to i16, !dbg !17768
  %10 = load i16*, i16** %mode.addr, align 8, !dbg !17770
  %call8 = call i32 @esw_mode_to_devlink(i16 zeroext %conv7, i16* %10) #8, !dbg !17771
  store i32 %call8, i32* %err, align 4, !dbg !17772
  br label %unlock, !dbg !17773

unlock:                                           ; preds = %if.end5, %if.then4
  call void @llvm.dbg.label(metadata !17774), !dbg !17775
  %11 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw, align 8, !dbg !17776
  %mode_lock9 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %11, i32 0, i32 11, !dbg !17777
  call void @mutex_unlock(%struct.mutex* %mode_lock9) #8, !dbg !17778
  %12 = load i32, i32* %err, align 4, !dbg !17779
  store i32 %12, i32* %retval, align 4, !dbg !17780
  br label %return, !dbg !17780

return:                                           ; preds = %unlock, %if.then
  %13 = load i32, i32* %retval, align 4, !dbg !17781
  ret i32 %13, !dbg !17781
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @eswitch_devlink_esw_mode_check(%struct.mlx5_eswitch* %esw) #0 !dbg !17782 {
entry:
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !17785, metadata !DIExpression()), !dbg !17786
  %0 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17787
  %mode = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %0, i32 0, i32 14, !dbg !17788
  %1 = load i32, i32* %mode, align 8, !dbg !17788
  %cmp = icmp eq i32 %1, 0, !dbg !17789
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !17790

land.rhs:                                         ; preds = %entry
  %2 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !17791
  %dev = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %2, i32 0, i32 0, !dbg !17792
  %3 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !17792
  %call = call zeroext i1 @mlx5_core_is_ecpf_esw_manager(%struct.mlx5_core_dev* %3) #8, !dbg !17793
  %lnot = xor i1 %call, true, !dbg !17794
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %4 = phi i1 [ false, %entry ], [ %lnot, %land.rhs ], !dbg !17795
  %5 = zext i1 %4 to i64, !dbg !17796
  %cond = select i1 %4, i32 -95, i32 0, !dbg !17796
  ret i32 %cond, !dbg !17797
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @esw_mode_to_devlink(i16 zeroext %mlx5_mode, i16* %mode) #0 !dbg !17798 {
entry:
  %retval = alloca i32, align 4
  %mlx5_mode.addr = alloca i16, align 2
  %mode.addr = alloca i16*, align 8
  store i16 %mlx5_mode, i16* %mlx5_mode.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %mlx5_mode.addr, metadata !17799, metadata !DIExpression()), !dbg !17800
  store i16* %mode, i16** %mode.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %mode.addr, metadata !17801, metadata !DIExpression()), !dbg !17802
  %0 = load i16, i16* %mlx5_mode.addr, align 2, !dbg !17803
  %conv = zext i16 %0 to i32, !dbg !17803
  switch i32 %conv, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb1
  ], !dbg !17804

sw.bb:                                            ; preds = %entry
  %1 = load i16*, i16** %mode.addr, align 8, !dbg !17805
  store i16 0, i16* %1, align 2, !dbg !17807
  br label %sw.epilog, !dbg !17808

sw.bb1:                                           ; preds = %entry
  %2 = load i16*, i16** %mode.addr, align 8, !dbg !17809
  store i16 1, i16* %2, align 2, !dbg !17810
  br label %sw.epilog, !dbg !17811

sw.default:                                       ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !17812
  br label %return, !dbg !17812

sw.epilog:                                        ; preds = %sw.bb1, %sw.bb
  store i32 0, i32* %retval, align 4, !dbg !17813
  br label %return, !dbg !17813

return:                                           ; preds = %sw.epilog, %sw.default
  %3 = load i32, i32* %retval, align 4, !dbg !17814
  ret i32 %3, !dbg !17814
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @mlx5_devlink_eswitch_inline_mode_set(%struct.devlink* %devlink, i8 zeroext %mode, %struct.netlink_ext_ack* %extack) #0 !dbg !12278 {
entry:
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !15620, metadata !DIExpression()), !dbg !17815
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !15624, metadata !DIExpression()), !dbg !17824
  %v.addr.i = alloca %struct.atomic64_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic64_t** %v.addr.i, metadata !17825, metadata !DIExpression()), !dbg !17826
  %retval = alloca i32, align 4
  %devlink.addr = alloca %struct.devlink*, align 8
  %mode.addr = alloca i8, align 1
  %extack.addr = alloca %struct.netlink_ext_ack*, align 8
  %dev = alloca %struct.mlx5_core_dev*, align 8
  %err = alloca i32, align 4
  %vport = alloca i32, align 4
  %num_vport = alloca i32, align 4
  %esw = alloca %struct.mlx5_eswitch*, align 8
  %mlx5_mode = alloca i8, align 1
  %__extack = alloca %struct.netlink_ext_ack*, align 8
  %__extack56 = alloca %struct.netlink_ext_ack*, align 8
  %__extack76 = alloca %struct.netlink_ext_ack*, align 8
  store %struct.devlink* %devlink, %struct.devlink** %devlink.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.devlink** %devlink.addr, metadata !17827, metadata !DIExpression()), !dbg !17828
  store i8 %mode, i8* %mode.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %mode.addr, metadata !17829, metadata !DIExpression()), !dbg !17830
  store %struct.netlink_ext_ack* %extack, %struct.netlink_ext_ack** %extack.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.netlink_ext_ack** %extack.addr, metadata !17831, metadata !DIExpression()), !dbg !17832
  call void @llvm.dbg.declare(metadata %struct.mlx5_core_dev** %dev, metadata !17833, metadata !DIExpression()), !dbg !17834
  %0 = load %struct.devlink*, %struct.devlink** %devlink.addr, align 8, !dbg !17835
  %call = call i8* @devlink_priv(%struct.devlink* %0) #8, !dbg !17836
  %1 = bitcast i8* %call to %struct.mlx5_core_dev*, !dbg !17836
  store %struct.mlx5_core_dev* %1, %struct.mlx5_core_dev** %dev, align 8, !dbg !17834
  call void @llvm.dbg.declare(metadata i32* %err, metadata !17837, metadata !DIExpression()), !dbg !17838
  call void @llvm.dbg.declare(metadata i32* %vport, metadata !17839, metadata !DIExpression()), !dbg !17840
  call void @llvm.dbg.declare(metadata i32* %num_vport, metadata !17841, metadata !DIExpression()), !dbg !17842
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw, metadata !17843, metadata !DIExpression()), !dbg !17844
  call void @llvm.dbg.declare(metadata i8* %mlx5_mode, metadata !17845, metadata !DIExpression()), !dbg !17846
  %2 = load %struct.devlink*, %struct.devlink** %devlink.addr, align 8, !dbg !17847
  %call1 = call %struct.mlx5_eswitch* @mlx5_devlink_eswitch_get(%struct.devlink* %2) #8, !dbg !17848
  store %struct.mlx5_eswitch* %call1, %struct.mlx5_eswitch** %esw, align 8, !dbg !17849
  %3 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw, align 8, !dbg !17850
  %4 = bitcast %struct.mlx5_eswitch* %3 to i8*, !dbg !17850
  %call2 = call zeroext i1 @IS_ERR(i8* %4) #8, !dbg !17852
  br i1 %call2, label %if.then, label %if.end, !dbg !17853

if.then:                                          ; preds = %entry
  %5 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw, align 8, !dbg !17854
  %6 = bitcast %struct.mlx5_eswitch* %5 to i8*, !dbg !17854
  %call3 = call i64 @PTR_ERR(i8* %6) #8, !dbg !17855
  %conv = trunc i64 %call3 to i32, !dbg !17855
  store i32 %conv, i32* %retval, align 4, !dbg !17856
  br label %return, !dbg !17856

if.end:                                           ; preds = %entry
  %7 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw, align 8, !dbg !17857
  %mode_lock = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %7, i32 0, i32 11, !dbg !17858
  call void @mutex_lock(%struct.mutex* %mode_lock) #8, !dbg !17859
  %8 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw, align 8, !dbg !17860
  %call4 = call i32 @eswitch_devlink_esw_mode_check(%struct.mlx5_eswitch* %8) #8, !dbg !17861
  store i32 %call4, i32* %err, align 4, !dbg !17862
  %9 = load i32, i32* %err, align 4, !dbg !17863
  %tobool = icmp ne i32 %9, 0, !dbg !17863
  br i1 %tobool, label %if.then5, label %if.end6, !dbg !17865

if.then5:                                         ; preds = %if.end
  br label %out, !dbg !17866

if.end6:                                          ; preds = %if.end
  %10 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !17867
  %caps = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %10, i32 0, i32 9, !dbg !17867
  %hca_cur = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps, i32 0, i32 0, !dbg !17867
  %arrayidx = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur, i64 0, i64 1, !dbg !17867
  %arraydecay = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx, i64 0, i64 0, !dbg !17867
  %add.ptr = getelementptr i32, i32* %arraydecay, i64 0, !dbg !17867
  %11 = load i32, i32* %add.ptr, align 4, !dbg !17867
  %12 = call i1 @llvm.is.constant.i32(i32 %11), !dbg !17867
  br i1 %12, label %cond.true, label %cond.false, !dbg !17867

cond.true:                                        ; preds = %if.end6
  %13 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !17867
  %caps7 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %13, i32 0, i32 9, !dbg !17867
  %hca_cur8 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps7, i32 0, i32 0, !dbg !17867
  %arrayidx9 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur8, i64 0, i64 1, !dbg !17867
  %arraydecay10 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx9, i64 0, i64 0, !dbg !17867
  %add.ptr11 = getelementptr i32, i32* %arraydecay10, i64 0, !dbg !17867
  %14 = load i32, i32* %add.ptr11, align 4, !dbg !17867
  %and = and i32 %14, 255, !dbg !17867
  %shl = shl i32 %and, 24, !dbg !17867
  %15 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !17867
  %caps12 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %15, i32 0, i32 9, !dbg !17867
  %hca_cur13 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps12, i32 0, i32 0, !dbg !17867
  %arrayidx14 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur13, i64 0, i64 1, !dbg !17867
  %arraydecay15 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx14, i64 0, i64 0, !dbg !17867
  %add.ptr16 = getelementptr i32, i32* %arraydecay15, i64 0, !dbg !17867
  %16 = load i32, i32* %add.ptr16, align 4, !dbg !17867
  %and17 = and i32 %16, 65280, !dbg !17867
  %shl18 = shl i32 %and17, 8, !dbg !17867
  %or = or i32 %shl, %shl18, !dbg !17867
  %17 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !17867
  %caps19 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %17, i32 0, i32 9, !dbg !17867
  %hca_cur20 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps19, i32 0, i32 0, !dbg !17867
  %arrayidx21 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur20, i64 0, i64 1, !dbg !17867
  %arraydecay22 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx21, i64 0, i64 0, !dbg !17867
  %add.ptr23 = getelementptr i32, i32* %arraydecay22, i64 0, !dbg !17867
  %18 = load i32, i32* %add.ptr23, align 4, !dbg !17867
  %and24 = and i32 %18, 16711680, !dbg !17867
  %shr = lshr i32 %and24, 8, !dbg !17867
  %or25 = or i32 %or, %shr, !dbg !17867
  %19 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !17867
  %caps26 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %19, i32 0, i32 9, !dbg !17867
  %hca_cur27 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps26, i32 0, i32 0, !dbg !17867
  %arrayidx28 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur27, i64 0, i64 1, !dbg !17867
  %arraydecay29 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx28, i64 0, i64 0, !dbg !17867
  %add.ptr30 = getelementptr i32, i32* %arraydecay29, i64 0, !dbg !17867
  %20 = load i32, i32* %add.ptr30, align 4, !dbg !17867
  %and31 = and i32 %20, -16777216, !dbg !17867
  %shr32 = lshr i32 %and31, 24, !dbg !17867
  %or33 = or i32 %or25, %shr32, !dbg !17867
  br label %cond.end, !dbg !17867

cond.false:                                       ; preds = %if.end6
  %21 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !17867
  %caps34 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %21, i32 0, i32 9, !dbg !17867
  %hca_cur35 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps34, i32 0, i32 0, !dbg !17867
  %arrayidx36 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur35, i64 0, i64 1, !dbg !17867
  %arraydecay37 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx36, i64 0, i64 0, !dbg !17867
  %add.ptr38 = getelementptr i32, i32* %arraydecay37, i64 0, !dbg !17867
  %22 = load i32, i32* %add.ptr38, align 4, !dbg !17867
  %call39 = call i32 @__fswab32(i32 %22) #10, !dbg !17867
  br label %cond.end, !dbg !17867

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %or33, %cond.true ], [ %call39, %cond.false ], !dbg !17867
  %shr40 = lshr i32 %cond, 12, !dbg !17867
  %and41 = and i32 %shr40, 3, !dbg !17867
  switch i32 %and41, label %sw.epilog [
    i32 2, label %sw.bb
    i32 0, label %sw.bb46
    i32 1, label %sw.bb50
  ], !dbg !17868

sw.bb:                                            ; preds = %cond.end
  %23 = load i8, i8* %mode.addr, align 1, !dbg !17869
  %conv42 = zext i8 %23 to i32, !dbg !17869
  %cmp = icmp eq i32 %conv42, 0, !dbg !17872
  br i1 %cmp, label %if.then44, label %if.end45, !dbg !17873

if.then44:                                        ; preds = %sw.bb
  br label %out, !dbg !17874

if.end45:                                         ; preds = %sw.bb
  br label %sw.bb46, !dbg !17875

sw.bb46:                                          ; preds = %cond.end, %if.end45
  br label %do.body, !dbg !17876

do.body:                                          ; preds = %sw.bb46
  call void @llvm.dbg.declare(metadata %struct.netlink_ext_ack** %__extack, metadata !17877, metadata !DIExpression()), !dbg !17879
  %24 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %extack.addr, align 8, !dbg !17879
  store %struct.netlink_ext_ack* %24, %struct.netlink_ext_ack** %__extack, align 8, !dbg !17879
  %25 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %__extack, align 8, !dbg !17880
  %tobool47 = icmp ne %struct.netlink_ext_ack* %25, null, !dbg !17880
  br i1 %tobool47, label %if.then48, label %if.end49, !dbg !17879

if.then48:                                        ; preds = %do.body
  %26 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %__extack, align 8, !dbg !17880
  %_msg = getelementptr inbounds %struct.netlink_ext_ack, %struct.netlink_ext_ack* %26, i32 0, i32 0, !dbg !17880
  store i8* getelementptr inbounds ([36 x i8], [36 x i8]* @mlx5_devlink_eswitch_inline_mode_set.__msg, i64 0, i64 0), i8** %_msg, align 8, !dbg !17880
  br label %if.end49, !dbg !17880

if.end49:                                         ; preds = %if.then48, %do.body
  br label %do.end, !dbg !17879

do.end:                                           ; preds = %if.end49
  store i32 -95, i32* %err, align 4, !dbg !17882
  br label %out, !dbg !17883

sw.bb50:                                          ; preds = %cond.end
  br label %sw.epilog, !dbg !17884

sw.epilog:                                        ; preds = %cond.end, %sw.bb50
  %27 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw, align 8, !dbg !17885
  %offloads = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %27, i32 0, i32 13, !dbg !17886
  %num_flows = getelementptr inbounds %struct.mlx5_esw_offload, %struct.mlx5_esw_offload* %offloads, i32 0, i32 17, !dbg !17887
  store %struct.atomic64_t* %num_flows, %struct.atomic64_t** %v.addr.i, align 8
  %28 = load %struct.atomic64_t*, %struct.atomic64_t** %v.addr.i, align 8, !dbg !17888
  %29 = bitcast %struct.atomic64_t* %28 to i8*, !dbg !17888
  store i8* %29, i8** %v.addr.i.i, align 8
  store i64 8, i64* %size.addr.i.i, align 8
  %30 = load i8*, i8** %v.addr.i.i, align 8, !dbg !17889
  %31 = load i64, i64* %size.addr.i.i, align 8, !dbg !17890
  %conv.i.i = trunc i64 %31 to i32, !dbg !17890
  %call.i.i = call zeroext i1 @kasan_check_read(i8* %30, i32 %conv.i.i) #11, !dbg !17891
  %32 = load i8*, i8** %v.addr.i.i, align 8, !dbg !17892
  %33 = load i64, i64* %size.addr.i.i, align 8, !dbg !17892
  call void @kcsan_check_access(i8* %32, i64 %33, i32 4) #11, !dbg !17892
  %34 = load %struct.atomic64_t*, %struct.atomic64_t** %v.addr.i, align 8, !dbg !17893
  %call.i = call i64 @arch_atomic64_read(%struct.atomic64_t* %34) #11, !dbg !17894
  %cmp52 = icmp sgt i64 %call.i, 0, !dbg !17895
  br i1 %cmp52, label %if.then54, label %if.end62, !dbg !17896

if.then54:                                        ; preds = %sw.epilog
  br label %do.body55, !dbg !17897

do.body55:                                        ; preds = %if.then54
  call void @llvm.dbg.declare(metadata %struct.netlink_ext_ack** %__extack56, metadata !17899, metadata !DIExpression()), !dbg !17901
  %35 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %extack.addr, align 8, !dbg !17901
  store %struct.netlink_ext_ack* %35, %struct.netlink_ext_ack** %__extack56, align 8, !dbg !17901
  %36 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %__extack56, align 8, !dbg !17902
  %tobool57 = icmp ne %struct.netlink_ext_ack* %36, null, !dbg !17902
  br i1 %tobool57, label %if.then58, label %if.end60, !dbg !17901

if.then58:                                        ; preds = %do.body55
  %37 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %__extack56, align 8, !dbg !17902
  %_msg59 = getelementptr inbounds %struct.netlink_ext_ack, %struct.netlink_ext_ack* %37, i32 0, i32 0, !dbg !17902
  store i8* getelementptr inbounds ([59 x i8], [59 x i8]* @mlx5_devlink_eswitch_inline_mode_set.__msg.4, i64 0, i64 0), i8** %_msg59, align 8, !dbg !17902
  br label %if.end60, !dbg !17902

if.end60:                                         ; preds = %if.then58, %do.body55
  br label %do.end61, !dbg !17901

do.end61:                                         ; preds = %if.end60
  store i32 -95, i32* %err, align 4, !dbg !17904
  br label %out, !dbg !17905

if.end62:                                         ; preds = %sw.epilog
  %38 = load i8, i8* %mode.addr, align 1, !dbg !17906
  %call63 = call i32 @esw_inline_mode_from_devlink(i8 zeroext %38, i8* %mlx5_mode) #8, !dbg !17907
  store i32 %call63, i32* %err, align 4, !dbg !17908
  %39 = load i32, i32* %err, align 4, !dbg !17909
  %tobool64 = icmp ne i32 %39, 0, !dbg !17909
  br i1 %tobool64, label %if.then65, label %if.end66, !dbg !17911

if.then65:                                        ; preds = %if.end62
  br label %out, !dbg !17912

if.end66:                                         ; preds = %if.end62
  %40 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw, align 8, !dbg !17913
  %first_host_vport = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %40, i32 0, i32 16, !dbg !17913
  %41 = load i16, i16* %first_host_vport, align 2, !dbg !17913
  %conv67 = zext i16 %41 to i32, !dbg !17913
  store i32 %conv67, i32* %vport, align 4, !dbg !17913
  br label %for.cond, !dbg !17913

for.cond:                                         ; preds = %for.inc, %if.end66
  %42 = load i32, i32* %vport, align 4, !dbg !17915
  %43 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw, align 8, !dbg !17915
  %esw_funcs = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %43, i32 0, i32 17, !dbg !17915
  %num_vfs = getelementptr inbounds %struct.mlx5_esw_functions, %struct.mlx5_esw_functions* %esw_funcs, i32 0, i32 1, !dbg !17915
  %44 = load i16, i16* %num_vfs, align 8, !dbg !17915
  %conv68 = zext i16 %44 to i32, !dbg !17915
  %cmp69 = icmp sle i32 %42, %conv68, !dbg !17915
  br i1 %cmp69, label %for.body, label %for.end, !dbg !17913

for.body:                                         ; preds = %for.cond
  %45 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !17917
  %46 = load i32, i32* %vport, align 4, !dbg !17919
  %conv71 = trunc i32 %46 to i16, !dbg !17919
  %47 = load i8, i8* %mlx5_mode, align 1, !dbg !17920
  %call72 = call i32 @mlx5_modify_nic_vport_min_inline(%struct.mlx5_core_dev* %45, i16 zeroext %conv71, i8 zeroext %47) #8, !dbg !17921
  store i32 %call72, i32* %err, align 4, !dbg !17922
  %48 = load i32, i32* %err, align 4, !dbg !17923
  %tobool73 = icmp ne i32 %48, 0, !dbg !17923
  br i1 %tobool73, label %if.then74, label %if.end82, !dbg !17925

if.then74:                                        ; preds = %for.body
  br label %do.body75, !dbg !17926

do.body75:                                        ; preds = %if.then74
  call void @llvm.dbg.declare(metadata %struct.netlink_ext_ack** %__extack76, metadata !17928, metadata !DIExpression()), !dbg !17930
  %49 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %extack.addr, align 8, !dbg !17930
  store %struct.netlink_ext_ack* %49, %struct.netlink_ext_ack** %__extack76, align 8, !dbg !17930
  %50 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %__extack76, align 8, !dbg !17931
  %tobool77 = icmp ne %struct.netlink_ext_ack* %50, null, !dbg !17931
  br i1 %tobool77, label %if.then78, label %if.end80, !dbg !17930

if.then78:                                        ; preds = %do.body75
  %51 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %__extack76, align 8, !dbg !17931
  %_msg79 = getelementptr inbounds %struct.netlink_ext_ack, %struct.netlink_ext_ack* %51, i32 0, i32 0, !dbg !17931
  store i8* getelementptr inbounds ([45 x i8], [45 x i8]* @mlx5_devlink_eswitch_inline_mode_set.__msg.5, i64 0, i64 0), i8** %_msg79, align 8, !dbg !17931
  br label %if.end80, !dbg !17931

if.end80:                                         ; preds = %if.then78, %do.body75
  br label %do.end81, !dbg !17930

do.end81:                                         ; preds = %if.end80
  br label %revert_inline_mode, !dbg !17933

if.end82:                                         ; preds = %for.body
  br label %for.inc, !dbg !17934

for.inc:                                          ; preds = %if.end82
  %52 = load i32, i32* %vport, align 4, !dbg !17915
  %inc = add i32 %52, 1, !dbg !17915
  store i32 %inc, i32* %vport, align 4, !dbg !17915
  br label %for.cond, !dbg !17915, !llvm.loop !17935

for.end:                                          ; preds = %for.cond
  %53 = load i8, i8* %mlx5_mode, align 1, !dbg !17937
  %54 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw, align 8, !dbg !17938
  %offloads83 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %54, i32 0, i32 13, !dbg !17939
  %inline_mode = getelementptr inbounds %struct.mlx5_esw_offload, %struct.mlx5_esw_offload* %offloads83, i32 0, i32 16, !dbg !17940
  store i8 %53, i8* %inline_mode, align 8, !dbg !17941
  %55 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw, align 8, !dbg !17942
  %mode_lock84 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %55, i32 0, i32 11, !dbg !17943
  call void @mutex_unlock(%struct.mutex* %mode_lock84) #8, !dbg !17944
  store i32 0, i32* %retval, align 4, !dbg !17945
  br label %return, !dbg !17945

revert_inline_mode:                               ; preds = %do.end81
  call void @llvm.dbg.label(metadata !17946), !dbg !17947
  %56 = load i32, i32* %vport, align 4, !dbg !17948
  %dec = add i32 %56, -1, !dbg !17948
  store i32 %dec, i32* %vport, align 4, !dbg !17948
  store i32 %dec, i32* %num_vport, align 4, !dbg !17949
  %57 = load i32, i32* %num_vport, align 4, !dbg !17950
  store i32 %57, i32* %vport, align 4, !dbg !17950
  br label %for.cond85, !dbg !17950

for.cond85:                                       ; preds = %for.inc95, %revert_inline_mode
  %58 = load i32, i32* %vport, align 4, !dbg !17952
  %59 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw, align 8, !dbg !17952
  %first_host_vport86 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %59, i32 0, i32 16, !dbg !17952
  %60 = load i16, i16* %first_host_vport86, align 2, !dbg !17952
  %conv87 = zext i16 %60 to i32, !dbg !17952
  %cmp88 = icmp sge i32 %58, %conv87, !dbg !17952
  br i1 %cmp88, label %for.body90, label %for.end97, !dbg !17950

for.body90:                                       ; preds = %for.cond85
  %61 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !17954
  %62 = load i32, i32* %vport, align 4, !dbg !17955
  %conv91 = trunc i32 %62 to i16, !dbg !17955
  %63 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw, align 8, !dbg !17956
  %offloads92 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %63, i32 0, i32 13, !dbg !17957
  %inline_mode93 = getelementptr inbounds %struct.mlx5_esw_offload, %struct.mlx5_esw_offload* %offloads92, i32 0, i32 16, !dbg !17958
  %64 = load i8, i8* %inline_mode93, align 8, !dbg !17958
  %call94 = call i32 @mlx5_modify_nic_vport_min_inline(%struct.mlx5_core_dev* %61, i16 zeroext %conv91, i8 zeroext %64) #8, !dbg !17959
  br label %for.inc95, !dbg !17959

for.inc95:                                        ; preds = %for.body90
  %65 = load i32, i32* %vport, align 4, !dbg !17952
  %dec96 = add i32 %65, -1, !dbg !17952
  store i32 %dec96, i32* %vport, align 4, !dbg !17952
  br label %for.cond85, !dbg !17952, !llvm.loop !17960

for.end97:                                        ; preds = %for.cond85
  br label %out, !dbg !17961

out:                                              ; preds = %for.end97, %if.then65, %do.end61, %do.end, %if.then44, %if.then5
  call void @llvm.dbg.label(metadata !17962), !dbg !17963
  %66 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw, align 8, !dbg !17964
  %mode_lock98 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %66, i32 0, i32 11, !dbg !17965
  call void @mutex_unlock(%struct.mutex* %mode_lock98) #8, !dbg !17966
  %67 = load i32, i32* %err, align 4, !dbg !17967
  store i32 %67, i32* %retval, align 4, !dbg !17968
  br label %return, !dbg !17968

return:                                           ; preds = %out, %for.end, %if.then
  %68 = load i32, i32* %retval, align 4, !dbg !17969
  ret i32 %68, !dbg !17969
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @devlink_priv(%struct.devlink* %devlink) #0 !dbg !17970 {
entry:
  %devlink.addr = alloca %struct.devlink*, align 8
  store %struct.devlink* %devlink, %struct.devlink** %devlink.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.devlink** %devlink.addr, metadata !17973, metadata !DIExpression()), !dbg !17974
  br label %do.body, !dbg !17975

do.body:                                          ; preds = %entry
  %0 = load %struct.devlink*, %struct.devlink** %devlink.addr, align 8, !dbg !17976
  %tobool = icmp ne %struct.devlink* %0, null, !dbg !17976
  %lnot = xor i1 %tobool, true, !dbg !17976
  %lnot1 = xor i1 %lnot, true, !dbg !17976
  %lnot2 = xor i1 %lnot1, true, !dbg !17976
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !17976
  %conv = sext i32 %lnot.ext to i64, !dbg !17976
  %tobool3 = icmp ne i64 %conv, 0, !dbg !17976
  br i1 %tobool3, label %if.then, label %if.end, !dbg !17979

if.then:                                          ; preds = %do.body
  br label %do.body4, !dbg !17976

do.body4:                                         ; preds = %if.then
  br label %do.body5, !dbg !17980

do.body5:                                         ; preds = %do.body4
  br label %do.end, !dbg !17982

do.end:                                           ; preds = %do.body5
  br label %do.body6, !dbg !17980

do.body6:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.24, i64 0, i64 0), i32 1352, i32 0, i64 12) #12, !dbg !17984, !srcloc !17986
  br label %do.end7, !dbg !17984

do.end7:                                          ; preds = %do.body6
  br label %do.body8, !dbg !17980

do.body8:                                         ; preds = %do.end7
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 560) #12, !dbg !17987, !srcloc !17990
  unreachable, !dbg !17991

do.end9:                                          ; No predecessors!
  br label %do.end10, !dbg !17980

do.end10:                                         ; preds = %do.end9
  br label %if.end, !dbg !17980

if.end:                                           ; preds = %do.end10, %do.body
  br label %do.end11, !dbg !17979

do.end11:                                         ; preds = %if.end
  %1 = load %struct.devlink*, %struct.devlink** %devlink.addr, align 8, !dbg !17992
  %priv = getelementptr inbounds %struct.devlink, %struct.devlink* %1, i32 0, i32 21, !dbg !17993
  %2 = bitcast [0 x i8]* %priv to i8*, !dbg !17994
  ret i8* %2, !dbg !17995
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @esw_inline_mode_from_devlink(i8 zeroext %mode, i8* %mlx5_mode) #0 !dbg !17996 {
entry:
  %retval = alloca i32, align 4
  %mode.addr = alloca i8, align 1
  %mlx5_mode.addr = alloca i8*, align 8
  store i8 %mode, i8* %mode.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %mode.addr, metadata !17999, metadata !DIExpression()), !dbg !18000
  store i8* %mlx5_mode, i8** %mlx5_mode.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %mlx5_mode.addr, metadata !18001, metadata !DIExpression()), !dbg !18002
  %0 = load i8, i8* %mode.addr, align 1, !dbg !18003
  %conv = zext i8 %0 to i32, !dbg !18003
  switch i32 %conv, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb1
    i32 2, label %sw.bb2
    i32 3, label %sw.bb3
  ], !dbg !18004

sw.bb:                                            ; preds = %entry
  %1 = load i8*, i8** %mlx5_mode.addr, align 8, !dbg !18005
  store i8 0, i8* %1, align 1, !dbg !18007
  br label %sw.epilog, !dbg !18008

sw.bb1:                                           ; preds = %entry
  %2 = load i8*, i8** %mlx5_mode.addr, align 8, !dbg !18009
  store i8 1, i8* %2, align 1, !dbg !18010
  br label %sw.epilog, !dbg !18011

sw.bb2:                                           ; preds = %entry
  %3 = load i8*, i8** %mlx5_mode.addr, align 8, !dbg !18012
  store i8 2, i8* %3, align 1, !dbg !18013
  br label %sw.epilog, !dbg !18014

sw.bb3:                                           ; preds = %entry
  %4 = load i8*, i8** %mlx5_mode.addr, align 8, !dbg !18015
  store i8 3, i8* %4, align 1, !dbg !18016
  br label %sw.epilog, !dbg !18017

sw.default:                                       ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !18018
  br label %return, !dbg !18018

sw.epilog:                                        ; preds = %sw.bb3, %sw.bb2, %sw.bb1, %sw.bb
  store i32 0, i32* %retval, align 4, !dbg !18019
  br label %return, !dbg !18019

return:                                           ; preds = %sw.epilog, %sw.default
  %5 = load i32, i32* %retval, align 4, !dbg !18020
  ret i32 %5, !dbg !18020
}

; Function Attrs: noredzone
declare dso_local i32 @mlx5_modify_nic_vport_min_inline(%struct.mlx5_core_dev*, i16 zeroext, i8 zeroext) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @mlx5_devlink_eswitch_inline_mode_get(%struct.devlink* %devlink, i8* %mode) #0 !dbg !18021 {
entry:
  %retval = alloca i32, align 4
  %devlink.addr = alloca %struct.devlink*, align 8
  %mode.addr = alloca i8*, align 8
  %esw = alloca %struct.mlx5_eswitch*, align 8
  %err = alloca i32, align 4
  store %struct.devlink* %devlink, %struct.devlink** %devlink.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.devlink** %devlink.addr, metadata !18022, metadata !DIExpression()), !dbg !18023
  store i8* %mode, i8** %mode.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %mode.addr, metadata !18024, metadata !DIExpression()), !dbg !18025
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw, metadata !18026, metadata !DIExpression()), !dbg !18027
  call void @llvm.dbg.declare(metadata i32* %err, metadata !18028, metadata !DIExpression()), !dbg !18029
  %0 = load %struct.devlink*, %struct.devlink** %devlink.addr, align 8, !dbg !18030
  %call = call %struct.mlx5_eswitch* @mlx5_devlink_eswitch_get(%struct.devlink* %0) #8, !dbg !18031
  store %struct.mlx5_eswitch* %call, %struct.mlx5_eswitch** %esw, align 8, !dbg !18032
  %1 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw, align 8, !dbg !18033
  %2 = bitcast %struct.mlx5_eswitch* %1 to i8*, !dbg !18033
  %call1 = call zeroext i1 @IS_ERR(i8* %2) #8, !dbg !18035
  br i1 %call1, label %if.then, label %if.end, !dbg !18036

if.then:                                          ; preds = %entry
  %3 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw, align 8, !dbg !18037
  %4 = bitcast %struct.mlx5_eswitch* %3 to i8*, !dbg !18037
  %call2 = call i64 @PTR_ERR(i8* %4) #8, !dbg !18038
  %conv = trunc i64 %call2 to i32, !dbg !18038
  store i32 %conv, i32* %retval, align 4, !dbg !18039
  br label %return, !dbg !18039

if.end:                                           ; preds = %entry
  %5 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw, align 8, !dbg !18040
  %mode_lock = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %5, i32 0, i32 11, !dbg !18041
  call void @mutex_lock(%struct.mutex* %mode_lock) #8, !dbg !18042
  %6 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw, align 8, !dbg !18043
  %call3 = call i32 @eswitch_devlink_esw_mode_check(%struct.mlx5_eswitch* %6) #8, !dbg !18044
  store i32 %call3, i32* %err, align 4, !dbg !18045
  %7 = load i32, i32* %err, align 4, !dbg !18046
  %tobool = icmp ne i32 %7, 0, !dbg !18046
  br i1 %tobool, label %if.then4, label %if.end5, !dbg !18048

if.then4:                                         ; preds = %if.end
  br label %unlock, !dbg !18049

if.end5:                                          ; preds = %if.end
  %8 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw, align 8, !dbg !18050
  %offloads = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %8, i32 0, i32 13, !dbg !18051
  %inline_mode = getelementptr inbounds %struct.mlx5_esw_offload, %struct.mlx5_esw_offload* %offloads, i32 0, i32 16, !dbg !18052
  %9 = load i8, i8* %inline_mode, align 8, !dbg !18052
  %10 = load i8*, i8** %mode.addr, align 8, !dbg !18053
  %call6 = call i32 @esw_inline_mode_to_devlink(i8 zeroext %9, i8* %10) #8, !dbg !18054
  store i32 %call6, i32* %err, align 4, !dbg !18055
  br label %unlock, !dbg !18056

unlock:                                           ; preds = %if.end5, %if.then4
  call void @llvm.dbg.label(metadata !18057), !dbg !18058
  %11 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw, align 8, !dbg !18059
  %mode_lock7 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %11, i32 0, i32 11, !dbg !18060
  call void @mutex_unlock(%struct.mutex* %mode_lock7) #8, !dbg !18061
  %12 = load i32, i32* %err, align 4, !dbg !18062
  store i32 %12, i32* %retval, align 4, !dbg !18063
  br label %return, !dbg !18063

return:                                           ; preds = %unlock, %if.then
  %13 = load i32, i32* %retval, align 4, !dbg !18064
  ret i32 %13, !dbg !18064
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @esw_inline_mode_to_devlink(i8 zeroext %mlx5_mode, i8* %mode) #0 !dbg !18065 {
entry:
  %retval = alloca i32, align 4
  %mlx5_mode.addr = alloca i8, align 1
  %mode.addr = alloca i8*, align 8
  store i8 %mlx5_mode, i8* %mlx5_mode.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %mlx5_mode.addr, metadata !18066, metadata !DIExpression()), !dbg !18067
  store i8* %mode, i8** %mode.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %mode.addr, metadata !18068, metadata !DIExpression()), !dbg !18069
  %0 = load i8, i8* %mlx5_mode.addr, align 1, !dbg !18070
  %conv = zext i8 %0 to i32, !dbg !18070
  switch i32 %conv, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb1
    i32 2, label %sw.bb2
    i32 3, label %sw.bb3
  ], !dbg !18071

sw.bb:                                            ; preds = %entry
  %1 = load i8*, i8** %mode.addr, align 8, !dbg !18072
  store i8 0, i8* %1, align 1, !dbg !18074
  br label %sw.epilog, !dbg !18075

sw.bb1:                                           ; preds = %entry
  %2 = load i8*, i8** %mode.addr, align 8, !dbg !18076
  store i8 1, i8* %2, align 1, !dbg !18077
  br label %sw.epilog, !dbg !18078

sw.bb2:                                           ; preds = %entry
  %3 = load i8*, i8** %mode.addr, align 8, !dbg !18079
  store i8 2, i8* %3, align 1, !dbg !18080
  br label %sw.epilog, !dbg !18081

sw.bb3:                                           ; preds = %entry
  %4 = load i8*, i8** %mode.addr, align 8, !dbg !18082
  store i8 3, i8* %4, align 1, !dbg !18083
  br label %sw.epilog, !dbg !18084

sw.default:                                       ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !18085
  br label %return, !dbg !18085

sw.epilog:                                        ; preds = %sw.bb3, %sw.bb2, %sw.bb1, %sw.bb
  store i32 0, i32* %retval, align 4, !dbg !18086
  br label %return, !dbg !18086

return:                                           ; preds = %sw.epilog, %sw.default
  %5 = load i32, i32* %retval, align 4, !dbg !18087
  ret i32 %5, !dbg !18087
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @mlx5_devlink_eswitch_encap_mode_set(%struct.devlink* %devlink, i32 %encap, %struct.netlink_ext_ack* %extack) #0 !dbg !12294 {
entry:
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !15620, metadata !DIExpression()), !dbg !18088
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !15624, metadata !DIExpression()), !dbg !18092
  %v.addr.i = alloca %struct.atomic64_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic64_t** %v.addr.i, metadata !17825, metadata !DIExpression()), !dbg !18093
  %retval = alloca i32, align 4
  %devlink.addr = alloca %struct.devlink*, align 8
  %encap.addr = alloca i32, align 4
  %extack.addr = alloca %struct.netlink_ext_ack*, align 8
  %dev = alloca %struct.mlx5_core_dev*, align 8
  %esw = alloca %struct.mlx5_eswitch*, align 8
  %err = alloca i32, align 4
  %__extack = alloca %struct.netlink_ext_ack*, align 8
  %__extack127 = alloca %struct.netlink_ext_ack*, align 8
  store %struct.devlink* %devlink, %struct.devlink** %devlink.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.devlink** %devlink.addr, metadata !18094, metadata !DIExpression()), !dbg !18095
  store i32 %encap, i32* %encap.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %encap.addr, metadata !18096, metadata !DIExpression()), !dbg !18097
  store %struct.netlink_ext_ack* %extack, %struct.netlink_ext_ack** %extack.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.netlink_ext_ack** %extack.addr, metadata !18098, metadata !DIExpression()), !dbg !18099
  call void @llvm.dbg.declare(metadata %struct.mlx5_core_dev** %dev, metadata !18100, metadata !DIExpression()), !dbg !18101
  %0 = load %struct.devlink*, %struct.devlink** %devlink.addr, align 8, !dbg !18102
  %call = call i8* @devlink_priv(%struct.devlink* %0) #8, !dbg !18103
  %1 = bitcast i8* %call to %struct.mlx5_core_dev*, !dbg !18103
  store %struct.mlx5_core_dev* %1, %struct.mlx5_core_dev** %dev, align 8, !dbg !18101
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw, metadata !18104, metadata !DIExpression()), !dbg !18105
  call void @llvm.dbg.declare(metadata i32* %err, metadata !18106, metadata !DIExpression()), !dbg !18107
  %2 = load %struct.devlink*, %struct.devlink** %devlink.addr, align 8, !dbg !18108
  %call1 = call %struct.mlx5_eswitch* @mlx5_devlink_eswitch_get(%struct.devlink* %2) #8, !dbg !18109
  store %struct.mlx5_eswitch* %call1, %struct.mlx5_eswitch** %esw, align 8, !dbg !18110
  %3 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw, align 8, !dbg !18111
  %4 = bitcast %struct.mlx5_eswitch* %3 to i8*, !dbg !18111
  %call2 = call zeroext i1 @IS_ERR(i8* %4) #8, !dbg !18113
  br i1 %call2, label %if.then, label %if.end, !dbg !18114

if.then:                                          ; preds = %entry
  %5 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw, align 8, !dbg !18115
  %6 = bitcast %struct.mlx5_eswitch* %5 to i8*, !dbg !18115
  %call3 = call i64 @PTR_ERR(i8* %6) #8, !dbg !18116
  %conv = trunc i64 %call3 to i32, !dbg !18116
  store i32 %conv, i32* %retval, align 4, !dbg !18117
  br label %return, !dbg !18117

if.end:                                           ; preds = %entry
  %7 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw, align 8, !dbg !18118
  %mode_lock = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %7, i32 0, i32 11, !dbg !18119
  call void @mutex_lock(%struct.mutex* %mode_lock) #8, !dbg !18120
  %8 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw, align 8, !dbg !18121
  %call4 = call i32 @eswitch_devlink_esw_mode_check(%struct.mlx5_eswitch* %8) #8, !dbg !18122
  store i32 %call4, i32* %err, align 4, !dbg !18123
  %9 = load i32, i32* %err, align 4, !dbg !18124
  %tobool = icmp ne i32 %9, 0, !dbg !18124
  br i1 %tobool, label %if.then5, label %if.end6, !dbg !18126

if.then5:                                         ; preds = %if.end
  br label %unlock, !dbg !18127

if.end6:                                          ; preds = %if.end
  %10 = load i32, i32* %encap.addr, align 4, !dbg !18128
  %cmp = icmp ne i32 %10, 0, !dbg !18130
  br i1 %cmp, label %land.lhs.true, label %if.end94, !dbg !18131

land.lhs.true:                                    ; preds = %if.end6
  %11 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !18132
  %caps = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %11, i32 0, i32 9, !dbg !18132
  %hca_cur = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps, i32 0, i32 0, !dbg !18132
  %arrayidx = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur, i64 0, i64 8, !dbg !18132
  %arraydecay = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx, i64 0, i64 0, !dbg !18132
  %add.ptr = getelementptr i32, i32* %arraydecay, i64 16, !dbg !18132
  %12 = load i32, i32* %add.ptr, align 4, !dbg !18132
  %13 = call i1 @llvm.is.constant.i32(i32 %12), !dbg !18132
  br i1 %13, label %cond.true, label %cond.false, !dbg !18132

cond.true:                                        ; preds = %land.lhs.true
  %14 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !18132
  %caps8 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %14, i32 0, i32 9, !dbg !18132
  %hca_cur9 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps8, i32 0, i32 0, !dbg !18132
  %arrayidx10 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur9, i64 0, i64 8, !dbg !18132
  %arraydecay11 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx10, i64 0, i64 0, !dbg !18132
  %add.ptr12 = getelementptr i32, i32* %arraydecay11, i64 16, !dbg !18132
  %15 = load i32, i32* %add.ptr12, align 4, !dbg !18132
  %and = and i32 %15, 255, !dbg !18132
  %shl = shl i32 %and, 24, !dbg !18132
  %16 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !18132
  %caps13 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %16, i32 0, i32 9, !dbg !18132
  %hca_cur14 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps13, i32 0, i32 0, !dbg !18132
  %arrayidx15 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur14, i64 0, i64 8, !dbg !18132
  %arraydecay16 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx15, i64 0, i64 0, !dbg !18132
  %add.ptr17 = getelementptr i32, i32* %arraydecay16, i64 16, !dbg !18132
  %17 = load i32, i32* %add.ptr17, align 4, !dbg !18132
  %and18 = and i32 %17, 65280, !dbg !18132
  %shl19 = shl i32 %and18, 8, !dbg !18132
  %or = or i32 %shl, %shl19, !dbg !18132
  %18 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !18132
  %caps20 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %18, i32 0, i32 9, !dbg !18132
  %hca_cur21 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps20, i32 0, i32 0, !dbg !18132
  %arrayidx22 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur21, i64 0, i64 8, !dbg !18132
  %arraydecay23 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx22, i64 0, i64 0, !dbg !18132
  %add.ptr24 = getelementptr i32, i32* %arraydecay23, i64 16, !dbg !18132
  %19 = load i32, i32* %add.ptr24, align 4, !dbg !18132
  %and25 = and i32 %19, 16711680, !dbg !18132
  %shr = lshr i32 %and25, 8, !dbg !18132
  %or26 = or i32 %or, %shr, !dbg !18132
  %20 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !18132
  %caps27 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %20, i32 0, i32 9, !dbg !18132
  %hca_cur28 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps27, i32 0, i32 0, !dbg !18132
  %arrayidx29 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur28, i64 0, i64 8, !dbg !18132
  %arraydecay30 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx29, i64 0, i64 0, !dbg !18132
  %add.ptr31 = getelementptr i32, i32* %arraydecay30, i64 16, !dbg !18132
  %21 = load i32, i32* %add.ptr31, align 4, !dbg !18132
  %and32 = and i32 %21, -16777216, !dbg !18132
  %shr33 = lshr i32 %and32, 24, !dbg !18132
  %or34 = or i32 %or26, %shr33, !dbg !18132
  br label %cond.end, !dbg !18132

cond.false:                                       ; preds = %land.lhs.true
  %22 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !18132
  %caps35 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %22, i32 0, i32 9, !dbg !18132
  %hca_cur36 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps35, i32 0, i32 0, !dbg !18132
  %arrayidx37 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur36, i64 0, i64 8, !dbg !18132
  %arraydecay38 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx37, i64 0, i64 0, !dbg !18132
  %add.ptr39 = getelementptr i32, i32* %arraydecay38, i64 16, !dbg !18132
  %23 = load i32, i32* %add.ptr39, align 4, !dbg !18132
  %call40 = call i32 @__fswab32(i32 %23) #10, !dbg !18132
  br label %cond.end, !dbg !18132

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %or34, %cond.true ], [ %call40, %cond.false ], !dbg !18132
  %shr41 = lshr i32 %cond, 24, !dbg !18132
  %and42 = and i32 %shr41, 1, !dbg !18132
  %tobool43 = icmp ne i32 %and42, 0, !dbg !18132
  br i1 %tobool43, label %lor.lhs.false, label %if.then93, !dbg !18133

lor.lhs.false:                                    ; preds = %cond.end
  %24 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !18134
  %caps44 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %24, i32 0, i32 9, !dbg !18134
  %hca_cur45 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps44, i32 0, i32 0, !dbg !18134
  %arrayidx46 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur45, i64 0, i64 8, !dbg !18134
  %arraydecay47 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx46, i64 0, i64 0, !dbg !18134
  %add.ptr48 = getelementptr i32, i32* %arraydecay47, i64 16, !dbg !18134
  %25 = load i32, i32* %add.ptr48, align 4, !dbg !18134
  %26 = call i1 @llvm.is.constant.i32(i32 %25), !dbg !18134
  br i1 %26, label %cond.true49, label %cond.false81, !dbg !18134

cond.true49:                                      ; preds = %lor.lhs.false
  %27 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !18134
  %caps50 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %27, i32 0, i32 9, !dbg !18134
  %hca_cur51 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps50, i32 0, i32 0, !dbg !18134
  %arrayidx52 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur51, i64 0, i64 8, !dbg !18134
  %arraydecay53 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx52, i64 0, i64 0, !dbg !18134
  %add.ptr54 = getelementptr i32, i32* %arraydecay53, i64 16, !dbg !18134
  %28 = load i32, i32* %add.ptr54, align 4, !dbg !18134
  %and55 = and i32 %28, 255, !dbg !18134
  %shl56 = shl i32 %and55, 24, !dbg !18134
  %29 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !18134
  %caps57 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %29, i32 0, i32 9, !dbg !18134
  %hca_cur58 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps57, i32 0, i32 0, !dbg !18134
  %arrayidx59 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur58, i64 0, i64 8, !dbg !18134
  %arraydecay60 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx59, i64 0, i64 0, !dbg !18134
  %add.ptr61 = getelementptr i32, i32* %arraydecay60, i64 16, !dbg !18134
  %30 = load i32, i32* %add.ptr61, align 4, !dbg !18134
  %and62 = and i32 %30, 65280, !dbg !18134
  %shl63 = shl i32 %and62, 8, !dbg !18134
  %or64 = or i32 %shl56, %shl63, !dbg !18134
  %31 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !18134
  %caps65 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %31, i32 0, i32 9, !dbg !18134
  %hca_cur66 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps65, i32 0, i32 0, !dbg !18134
  %arrayidx67 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur66, i64 0, i64 8, !dbg !18134
  %arraydecay68 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx67, i64 0, i64 0, !dbg !18134
  %add.ptr69 = getelementptr i32, i32* %arraydecay68, i64 16, !dbg !18134
  %32 = load i32, i32* %add.ptr69, align 4, !dbg !18134
  %and70 = and i32 %32, 16711680, !dbg !18134
  %shr71 = lshr i32 %and70, 8, !dbg !18134
  %or72 = or i32 %or64, %shr71, !dbg !18134
  %33 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !18134
  %caps73 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %33, i32 0, i32 9, !dbg !18134
  %hca_cur74 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps73, i32 0, i32 0, !dbg !18134
  %arrayidx75 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur74, i64 0, i64 8, !dbg !18134
  %arraydecay76 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx75, i64 0, i64 0, !dbg !18134
  %add.ptr77 = getelementptr i32, i32* %arraydecay76, i64 16, !dbg !18134
  %34 = load i32, i32* %add.ptr77, align 4, !dbg !18134
  %and78 = and i32 %34, -16777216, !dbg !18134
  %shr79 = lshr i32 %and78, 24, !dbg !18134
  %or80 = or i32 %or72, %shr79, !dbg !18134
  br label %cond.end88, !dbg !18134

cond.false81:                                     ; preds = %lor.lhs.false
  %35 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !18134
  %caps82 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %35, i32 0, i32 9, !dbg !18134
  %hca_cur83 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps82, i32 0, i32 0, !dbg !18134
  %arrayidx84 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur83, i64 0, i64 8, !dbg !18134
  %arraydecay85 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx84, i64 0, i64 0, !dbg !18134
  %add.ptr86 = getelementptr i32, i32* %arraydecay85, i64 16, !dbg !18134
  %36 = load i32, i32* %add.ptr86, align 4, !dbg !18134
  %call87 = call i32 @__fswab32(i32 %36) #10, !dbg !18134
  br label %cond.end88, !dbg !18134

cond.end88:                                       ; preds = %cond.false81, %cond.true49
  %cond89 = phi i32 [ %or80, %cond.true49 ], [ %call87, %cond.false81 ], !dbg !18134
  %shr90 = lshr i32 %cond89, 23, !dbg !18134
  %and91 = and i32 %shr90, 1, !dbg !18134
  %tobool92 = icmp ne i32 %and91, 0, !dbg !18134
  br i1 %tobool92, label %if.end94, label %if.then93, !dbg !18135

if.then93:                                        ; preds = %cond.end88, %cond.end
  store i32 -95, i32* %err, align 4, !dbg !18136
  br label %unlock, !dbg !18138

if.end94:                                         ; preds = %cond.end88, %if.end6
  %37 = load i32, i32* %encap.addr, align 4, !dbg !18139
  %tobool95 = icmp ne i32 %37, 0, !dbg !18139
  br i1 %tobool95, label %land.lhs.true96, label %if.end100, !dbg !18141

land.lhs.true96:                                  ; preds = %if.end94
  %38 = load i32, i32* %encap.addr, align 4, !dbg !18142
  %cmp97 = icmp ne i32 %38, 1, !dbg !18143
  br i1 %cmp97, label %if.then99, label %if.end100, !dbg !18144

if.then99:                                        ; preds = %land.lhs.true96
  store i32 -95, i32* %err, align 4, !dbg !18145
  br label %unlock, !dbg !18147

if.end100:                                        ; preds = %land.lhs.true96, %if.end94
  %39 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw, align 8, !dbg !18148
  %mode = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %39, i32 0, i32 14, !dbg !18150
  %40 = load i32, i32* %mode, align 8, !dbg !18150
  %cmp101 = icmp eq i32 %40, 1, !dbg !18151
  br i1 %cmp101, label %if.then103, label %if.end105, !dbg !18152

if.then103:                                       ; preds = %if.end100
  %41 = load i32, i32* %encap.addr, align 4, !dbg !18153
  %42 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw, align 8, !dbg !18155
  %offloads = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %42, i32 0, i32 13, !dbg !18156
  %encap104 = getelementptr inbounds %struct.mlx5_esw_offload, %struct.mlx5_esw_offload* %offloads, i32 0, i32 18, !dbg !18157
  store i32 %41, i32* %encap104, align 8, !dbg !18158
  br label %unlock, !dbg !18159

if.end105:                                        ; preds = %if.end100
  %43 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw, align 8, !dbg !18160
  %offloads106 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %43, i32 0, i32 13, !dbg !18162
  %encap107 = getelementptr inbounds %struct.mlx5_esw_offload, %struct.mlx5_esw_offload* %offloads106, i32 0, i32 18, !dbg !18163
  %44 = load i32, i32* %encap107, align 8, !dbg !18163
  %45 = load i32, i32* %encap.addr, align 4, !dbg !18164
  %cmp108 = icmp eq i32 %44, %45, !dbg !18165
  br i1 %cmp108, label %if.then110, label %if.end111, !dbg !18166

if.then110:                                       ; preds = %if.end105
  br label %unlock, !dbg !18167

if.end111:                                        ; preds = %if.end105
  %46 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw, align 8, !dbg !18168
  %offloads112 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %46, i32 0, i32 13, !dbg !18169
  %num_flows = getelementptr inbounds %struct.mlx5_esw_offload, %struct.mlx5_esw_offload* %offloads112, i32 0, i32 17, !dbg !18170
  store %struct.atomic64_t* %num_flows, %struct.atomic64_t** %v.addr.i, align 8
  %47 = load %struct.atomic64_t*, %struct.atomic64_t** %v.addr.i, align 8, !dbg !18171
  %48 = bitcast %struct.atomic64_t* %47 to i8*, !dbg !18171
  store i8* %48, i8** %v.addr.i.i, align 8
  store i64 8, i64* %size.addr.i.i, align 8
  %49 = load i8*, i8** %v.addr.i.i, align 8, !dbg !18172
  %50 = load i64, i64* %size.addr.i.i, align 8, !dbg !18173
  %conv.i.i = trunc i64 %50 to i32, !dbg !18173
  %call.i.i = call zeroext i1 @kasan_check_read(i8* %49, i32 %conv.i.i) #11, !dbg !18174
  %51 = load i8*, i8** %v.addr.i.i, align 8, !dbg !18175
  %52 = load i64, i64* %size.addr.i.i, align 8, !dbg !18175
  call void @kcsan_check_access(i8* %51, i64 %52, i32 4) #11, !dbg !18175
  %53 = load %struct.atomic64_t*, %struct.atomic64_t** %v.addr.i, align 8, !dbg !18176
  %call.i = call i64 @arch_atomic64_read(%struct.atomic64_t* %53) #11, !dbg !18177
  %cmp114 = icmp sgt i64 %call.i, 0, !dbg !18178
  br i1 %cmp114, label %if.then116, label %if.end120, !dbg !18179

if.then116:                                       ; preds = %if.end111
  br label %do.body, !dbg !18180

do.body:                                          ; preds = %if.then116
  call void @llvm.dbg.declare(metadata %struct.netlink_ext_ack** %__extack, metadata !18182, metadata !DIExpression()), !dbg !18184
  %54 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %extack.addr, align 8, !dbg !18184
  store %struct.netlink_ext_ack* %54, %struct.netlink_ext_ack** %__extack, align 8, !dbg !18184
  %55 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %__extack, align 8, !dbg !18185
  %tobool117 = icmp ne %struct.netlink_ext_ack* %55, null, !dbg !18185
  br i1 %tobool117, label %if.then118, label %if.end119, !dbg !18184

if.then118:                                       ; preds = %do.body
  %56 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %__extack, align 8, !dbg !18185
  %_msg = getelementptr inbounds %struct.netlink_ext_ack, %struct.netlink_ext_ack* %56, i32 0, i32 0, !dbg !18185
  store i8* getelementptr inbounds ([61 x i8], [61 x i8]* @mlx5_devlink_eswitch_encap_mode_set.__msg, i64 0, i64 0), i8** %_msg, align 8, !dbg !18185
  br label %if.end119, !dbg !18185

if.end119:                                        ; preds = %if.then118, %do.body
  br label %do.end, !dbg !18184

do.end:                                           ; preds = %if.end119
  store i32 -95, i32* %err, align 4, !dbg !18187
  br label %unlock, !dbg !18188

if.end120:                                        ; preds = %if.end111
  %57 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw, align 8, !dbg !18189
  call void @esw_destroy_offloads_fdb_tables(%struct.mlx5_eswitch* %57) #8, !dbg !18190
  %58 = load i32, i32* %encap.addr, align 4, !dbg !18191
  %59 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw, align 8, !dbg !18192
  %offloads121 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %59, i32 0, i32 13, !dbg !18193
  %encap122 = getelementptr inbounds %struct.mlx5_esw_offload, %struct.mlx5_esw_offload* %offloads121, i32 0, i32 18, !dbg !18194
  store i32 %58, i32* %encap122, align 8, !dbg !18195
  %60 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw, align 8, !dbg !18196
  %call123 = call i32 @esw_create_offloads_fdb_tables(%struct.mlx5_eswitch* %60) #8, !dbg !18197
  store i32 %call123, i32* %err, align 4, !dbg !18198
  %61 = load i32, i32* %err, align 4, !dbg !18199
  %tobool124 = icmp ne i32 %61, 0, !dbg !18199
  br i1 %tobool124, label %if.then125, label %if.end137, !dbg !18201

if.then125:                                       ; preds = %if.end120
  br label %do.body126, !dbg !18202

do.body126:                                       ; preds = %if.then125
  call void @llvm.dbg.declare(metadata %struct.netlink_ext_ack** %__extack127, metadata !18204, metadata !DIExpression()), !dbg !18206
  %62 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %extack.addr, align 8, !dbg !18206
  store %struct.netlink_ext_ack* %62, %struct.netlink_ext_ack** %__extack127, align 8, !dbg !18206
  %63 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %__extack127, align 8, !dbg !18207
  %tobool128 = icmp ne %struct.netlink_ext_ack* %63, null, !dbg !18207
  br i1 %tobool128, label %if.then129, label %if.end131, !dbg !18206

if.then129:                                       ; preds = %do.body126
  %64 = load %struct.netlink_ext_ack*, %struct.netlink_ext_ack** %__extack127, align 8, !dbg !18207
  %_msg130 = getelementptr inbounds %struct.netlink_ext_ack, %struct.netlink_ext_ack* %64, i32 0, i32 0, !dbg !18207
  store i8* getelementptr inbounds ([45 x i8], [45 x i8]* @mlx5_devlink_eswitch_encap_mode_set.__msg.6, i64 0, i64 0), i8** %_msg130, align 8, !dbg !18207
  br label %if.end131, !dbg !18207

if.end131:                                        ; preds = %if.then129, %do.body126
  br label %do.end132, !dbg !18206

do.end132:                                        ; preds = %if.end131
  %65 = load i32, i32* %encap.addr, align 4, !dbg !18209
  %tobool133 = icmp ne i32 %65, 0, !dbg !18210
  %lnot = xor i1 %tobool133, true, !dbg !18210
  %lnot.ext = zext i1 %lnot to i32, !dbg !18210
  %66 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw, align 8, !dbg !18211
  %offloads134 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %66, i32 0, i32 13, !dbg !18212
  %encap135 = getelementptr inbounds %struct.mlx5_esw_offload, %struct.mlx5_esw_offload* %offloads134, i32 0, i32 18, !dbg !18213
  store i32 %lnot.ext, i32* %encap135, align 8, !dbg !18214
  %67 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw, align 8, !dbg !18215
  %call136 = call i32 @esw_create_offloads_fdb_tables(%struct.mlx5_eswitch* %67) #8, !dbg !18216
  br label %if.end137, !dbg !18217

if.end137:                                        ; preds = %do.end132, %if.end120
  br label %unlock, !dbg !18199

unlock:                                           ; preds = %if.end137, %do.end, %if.then110, %if.then103, %if.then99, %if.then93, %if.then5
  call void @llvm.dbg.label(metadata !18218), !dbg !18219
  %68 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw, align 8, !dbg !18220
  %mode_lock138 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %68, i32 0, i32 11, !dbg !18221
  call void @mutex_unlock(%struct.mutex* %mode_lock138) #8, !dbg !18222
  %69 = load i32, i32* %err, align 4, !dbg !18223
  store i32 %69, i32* %retval, align 4, !dbg !18224
  br label %return, !dbg !18224

return:                                           ; preds = %unlock, %if.then
  %70 = load i32, i32* %retval, align 4, !dbg !18225
  ret i32 %70, !dbg !18225
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @esw_destroy_offloads_fdb_tables(%struct.mlx5_eswitch* %esw) #0 !dbg !18226 {
entry:
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !18227, metadata !DIExpression()), !dbg !18228
  %0 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !18229
  %fdb_table = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %0, i32 0, i32 2, !dbg !18231
  %1 = getelementptr inbounds %struct.mlx5_eswitch_fdb, %struct.mlx5_eswitch_fdb* %fdb_table, i32 0, i32 0, !dbg !18232
  %offloads = bitcast %union.anon.154* %1 to %struct.offloads_fdb*, !dbg !18232
  %slow_fdb = getelementptr inbounds %struct.offloads_fdb, %struct.offloads_fdb* %offloads, i32 0, i32 1, !dbg !18233
  %2 = load %struct.mlx5_flow_table*, %struct.mlx5_flow_table** %slow_fdb, align 8, !dbg !18233
  %tobool = icmp ne %struct.mlx5_flow_table* %2, null, !dbg !18229
  br i1 %tobool, label %if.end, label %if.then, !dbg !18234

if.then:                                          ; preds = %entry
  br label %return, !dbg !18235

if.end:                                           ; preds = %entry
  br label %do.body, !dbg !18236

do.body:                                          ; preds = %if.end
  %3 = load i32, i32* @mlx5_core_debug_mask, align 4, !dbg !18237
  %conv = zext i32 %3 to i64, !dbg !18237
  %and = and i64 8, %conv, !dbg !18237
  %tobool1 = icmp ne i64 %and, 0, !dbg !18237
  br i1 %tobool1, label %if.then2, label %if.end3, !dbg !18240

if.then2:                                         ; preds = %do.body
  br label %if.end3, !dbg !18237

if.end3:                                          ; preds = %if.then2, %do.body
  br label %do.end, !dbg !18240

do.end:                                           ; preds = %if.end3
  %4 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !18241
  %fdb_table4 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %4, i32 0, i32 2, !dbg !18242
  %5 = getelementptr inbounds %struct.mlx5_eswitch_fdb, %struct.mlx5_eswitch_fdb* %fdb_table4, i32 0, i32 0, !dbg !18243
  %offloads5 = bitcast %union.anon.154* %5 to %struct.offloads_fdb*, !dbg !18243
  %miss_rule_multi = getelementptr inbounds %struct.offloads_fdb, %struct.offloads_fdb* %offloads5, i32 0, i32 7, !dbg !18244
  %6 = load %struct.mlx5_flow_handle*, %struct.mlx5_flow_handle** %miss_rule_multi, align 8, !dbg !18244
  call void @mlx5_del_flow_rules(%struct.mlx5_flow_handle* %6) #8, !dbg !18245
  %7 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !18246
  %fdb_table6 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %7, i32 0, i32 2, !dbg !18247
  %8 = getelementptr inbounds %struct.mlx5_eswitch_fdb, %struct.mlx5_eswitch_fdb* %fdb_table6, i32 0, i32 0, !dbg !18248
  %offloads7 = bitcast %union.anon.154* %8 to %struct.offloads_fdb*, !dbg !18248
  %miss_rule_uni = getelementptr inbounds %struct.offloads_fdb, %struct.offloads_fdb* %offloads7, i32 0, i32 6, !dbg !18249
  %9 = load %struct.mlx5_flow_handle*, %struct.mlx5_flow_handle** %miss_rule_uni, align 8, !dbg !18249
  call void @mlx5_del_flow_rules(%struct.mlx5_flow_handle* %9) #8, !dbg !18250
  %10 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !18251
  %fdb_table8 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %10, i32 0, i32 2, !dbg !18252
  %11 = getelementptr inbounds %struct.mlx5_eswitch_fdb, %struct.mlx5_eswitch_fdb* %fdb_table8, i32 0, i32 0, !dbg !18253
  %offloads9 = bitcast %union.anon.154* %11 to %struct.offloads_fdb*, !dbg !18253
  %send_to_vport_grp = getelementptr inbounds %struct.offloads_fdb, %struct.offloads_fdb* %offloads9, i32 0, i32 2, !dbg !18254
  %12 = load %struct.mlx5_flow_group*, %struct.mlx5_flow_group** %send_to_vport_grp, align 8, !dbg !18254
  call void @mlx5_destroy_flow_group(%struct.mlx5_flow_group* %12) #8, !dbg !18255
  %13 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !18256
  %dev = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %13, i32 0, i32 0, !dbg !18256
  %14 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !18256
  %caps = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %14, i32 0, i32 9, !dbg !18256
  %hca_cur = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps, i32 0, i32 0, !dbg !18256
  %arrayidx = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur, i64 0, i64 9, !dbg !18256
  %arraydecay = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx, i64 0, i64 0, !dbg !18256
  %add.ptr = getelementptr i32, i32* %arraydecay, i64 0, !dbg !18256
  %15 = load i32, i32* %add.ptr, align 4, !dbg !18256
  %16 = call i1 @llvm.is.constant.i32(i32 %15), !dbg !18256
  br i1 %16, label %cond.true, label %cond.false, !dbg !18256

cond.true:                                        ; preds = %do.end
  %17 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !18256
  %dev10 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %17, i32 0, i32 0, !dbg !18256
  %18 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev10, align 8, !dbg !18256
  %caps11 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %18, i32 0, i32 9, !dbg !18256
  %hca_cur12 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps11, i32 0, i32 0, !dbg !18256
  %arrayidx13 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur12, i64 0, i64 9, !dbg !18256
  %arraydecay14 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx13, i64 0, i64 0, !dbg !18256
  %add.ptr15 = getelementptr i32, i32* %arraydecay14, i64 0, !dbg !18256
  %19 = load i32, i32* %add.ptr15, align 4, !dbg !18256
  %and16 = and i32 %19, 255, !dbg !18256
  %shl = shl i32 %and16, 24, !dbg !18256
  %20 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !18256
  %dev17 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %20, i32 0, i32 0, !dbg !18256
  %21 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev17, align 8, !dbg !18256
  %caps18 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %21, i32 0, i32 9, !dbg !18256
  %hca_cur19 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps18, i32 0, i32 0, !dbg !18256
  %arrayidx20 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur19, i64 0, i64 9, !dbg !18256
  %arraydecay21 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx20, i64 0, i64 0, !dbg !18256
  %add.ptr22 = getelementptr i32, i32* %arraydecay21, i64 0, !dbg !18256
  %22 = load i32, i32* %add.ptr22, align 4, !dbg !18256
  %and23 = and i32 %22, 65280, !dbg !18256
  %shl24 = shl i32 %and23, 8, !dbg !18256
  %or = or i32 %shl, %shl24, !dbg !18256
  %23 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !18256
  %dev25 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %23, i32 0, i32 0, !dbg !18256
  %24 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev25, align 8, !dbg !18256
  %caps26 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %24, i32 0, i32 9, !dbg !18256
  %hca_cur27 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps26, i32 0, i32 0, !dbg !18256
  %arrayidx28 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur27, i64 0, i64 9, !dbg !18256
  %arraydecay29 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx28, i64 0, i64 0, !dbg !18256
  %add.ptr30 = getelementptr i32, i32* %arraydecay29, i64 0, !dbg !18256
  %25 = load i32, i32* %add.ptr30, align 4, !dbg !18256
  %and31 = and i32 %25, 16711680, !dbg !18256
  %shr = lshr i32 %and31, 8, !dbg !18256
  %or32 = or i32 %or, %shr, !dbg !18256
  %26 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !18256
  %dev33 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %26, i32 0, i32 0, !dbg !18256
  %27 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev33, align 8, !dbg !18256
  %caps34 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %27, i32 0, i32 9, !dbg !18256
  %hca_cur35 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps34, i32 0, i32 0, !dbg !18256
  %arrayidx36 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur35, i64 0, i64 9, !dbg !18256
  %arraydecay37 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx36, i64 0, i64 0, !dbg !18256
  %add.ptr38 = getelementptr i32, i32* %arraydecay37, i64 0, !dbg !18256
  %28 = load i32, i32* %add.ptr38, align 4, !dbg !18256
  %and39 = and i32 %28, -16777216, !dbg !18256
  %shr40 = lshr i32 %and39, 24, !dbg !18256
  %or41 = or i32 %or32, %shr40, !dbg !18256
  br label %cond.end, !dbg !18256

cond.false:                                       ; preds = %do.end
  %29 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !18256
  %dev42 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %29, i32 0, i32 0, !dbg !18256
  %30 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev42, align 8, !dbg !18256
  %caps43 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %30, i32 0, i32 9, !dbg !18256
  %hca_cur44 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps43, i32 0, i32 0, !dbg !18256
  %arrayidx45 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur44, i64 0, i64 9, !dbg !18256
  %arraydecay46 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx45, i64 0, i64 0, !dbg !18256
  %add.ptr47 = getelementptr i32, i32* %arraydecay46, i64 0, !dbg !18256
  %31 = load i32, i32* %add.ptr47, align 4, !dbg !18256
  %call = call i32 @__fswab32(i32 %31) #10, !dbg !18256
  br label %cond.end, !dbg !18256

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %or41, %cond.true ], [ %call, %cond.false ], !dbg !18256
  %shr48 = lshr i32 %cond, 2, !dbg !18256
  %and49 = and i32 %shr48, 1, !dbg !18256
  %tobool50 = icmp ne i32 %and49, 0, !dbg !18256
  br i1 %tobool50, label %if.then51, label %if.end54, !dbg !18258

if.then51:                                        ; preds = %cond.end
  %32 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !18259
  %fdb_table52 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %32, i32 0, i32 2, !dbg !18260
  %33 = getelementptr inbounds %struct.mlx5_eswitch_fdb, %struct.mlx5_eswitch_fdb* %fdb_table52, i32 0, i32 0, !dbg !18261
  %offloads53 = bitcast %union.anon.154* %33 to %struct.offloads_fdb*, !dbg !18261
  %peer_miss_grp = getelementptr inbounds %struct.offloads_fdb, %struct.offloads_fdb* %offloads53, i32 0, i32 3, !dbg !18262
  %34 = load %struct.mlx5_flow_group*, %struct.mlx5_flow_group** %peer_miss_grp, align 8, !dbg !18262
  call void @mlx5_destroy_flow_group(%struct.mlx5_flow_group* %34) #8, !dbg !18263
  br label %if.end54, !dbg !18263

if.end54:                                         ; preds = %if.then51, %cond.end
  %35 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !18264
  %fdb_table55 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %35, i32 0, i32 2, !dbg !18265
  %36 = getelementptr inbounds %struct.mlx5_eswitch_fdb, %struct.mlx5_eswitch_fdb* %fdb_table55, i32 0, i32 0, !dbg !18266
  %offloads56 = bitcast %union.anon.154* %36 to %struct.offloads_fdb*, !dbg !18266
  %miss_grp = getelementptr inbounds %struct.offloads_fdb, %struct.offloads_fdb* %offloads56, i32 0, i32 5, !dbg !18267
  %37 = load %struct.mlx5_flow_group*, %struct.mlx5_flow_group** %miss_grp, align 8, !dbg !18267
  call void @mlx5_destroy_flow_group(%struct.mlx5_flow_group* %37) #8, !dbg !18268
  %38 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !18269
  %39 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !18270
  %fdb_table57 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %39, i32 0, i32 2, !dbg !18270
  %40 = getelementptr inbounds %struct.mlx5_eswitch_fdb, %struct.mlx5_eswitch_fdb* %fdb_table57, i32 0, i32 0, !dbg !18270
  %offloads58 = bitcast %union.anon.154* %40 to %struct.offloads_fdb*, !dbg !18270
  %esw_chains_priv = getelementptr inbounds %struct.offloads_fdb, %struct.offloads_fdb* %offloads58, i32 0, i32 9, !dbg !18270
  %41 = load %struct.mlx5_fs_chains*, %struct.mlx5_fs_chains** %esw_chains_priv, align 8, !dbg !18270
  call void @esw_chains_destroy(%struct.mlx5_eswitch* %38, %struct.mlx5_fs_chains* %41) #8, !dbg !18271
  %42 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !18272
  %fdb_table59 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %42, i32 0, i32 2, !dbg !18273
  %43 = getelementptr inbounds %struct.mlx5_eswitch_fdb, %struct.mlx5_eswitch_fdb* %fdb_table59, i32 0, i32 0, !dbg !18274
  %offloads60 = bitcast %union.anon.154* %43 to %struct.offloads_fdb*, !dbg !18274
  %slow_fdb61 = getelementptr inbounds %struct.offloads_fdb, %struct.offloads_fdb* %offloads60, i32 0, i32 1, !dbg !18275
  %44 = load %struct.mlx5_flow_table*, %struct.mlx5_flow_table** %slow_fdb61, align 8, !dbg !18275
  %call62 = call i32 @mlx5_destroy_flow_table(%struct.mlx5_flow_table* %44) #8, !dbg !18276
  %45 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !18277
  %fdb_table63 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %45, i32 0, i32 2, !dbg !18278
  %46 = getelementptr inbounds %struct.mlx5_eswitch_fdb, %struct.mlx5_eswitch_fdb* %fdb_table63, i32 0, i32 0, !dbg !18279
  %offloads64 = bitcast %union.anon.154* %46 to %struct.offloads_fdb*, !dbg !18279
  %ns = getelementptr inbounds %struct.offloads_fdb, %struct.offloads_fdb* %offloads64, i32 0, i32 0, !dbg !18280
  %47 = load %struct.mlx5_flow_namespace*, %struct.mlx5_flow_namespace** %ns, align 8, !dbg !18280
  %call65 = call i32 @mlx5_flow_namespace_set_mode(%struct.mlx5_flow_namespace* %47, i32 0) #8, !dbg !18281
  br label %return, !dbg !18282

return:                                           ; preds = %if.end54, %if.then
  ret void, !dbg !18282
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @esw_create_offloads_fdb_tables(%struct.mlx5_eswitch* %esw) #0 !dbg !18283 {
entry:
  %retval = alloca i32, align 4
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  %inlen = alloca i32, align 4
  %ft_attr = alloca %struct.mlx5_flow_table_attr, align 8
  %dev = alloca %struct.mlx5_core_dev*, align 8
  %root_ns = alloca %struct.mlx5_flow_namespace*, align 8
  %fdb = alloca %struct.mlx5_flow_table*, align 8
  %flags = alloca i32, align 4
  %flow_group_in = alloca i32*, align 8
  %table_size = alloca i32, align 4
  %ix = alloca i32, align 4
  %err = alloca i32, align 4
  %g = alloca %struct.mlx5_flow_group*, align 8
  %match_criteria = alloca i8*, align 8
  %dmac = alloca i8*, align 8
  %_v = alloca i32, align 4
  %_v543 = alloca i32, align 4
  %_v715 = alloca i32, align 4
  %_v1117 = alloca i32, align 4
  %_v1296 = alloca i32, align 4
  %_v1468 = alloca i32, align 4
  %_v1656 = alloca i32, align 4
  %_v1837 = alloca i32, align 4
  %_v2009 = alloca i32, align 4
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !18284, metadata !DIExpression()), !dbg !18285
  call void @llvm.dbg.declare(metadata i32* %inlen, metadata !18286, metadata !DIExpression()), !dbg !18287
  store i32 1024, i32* %inlen, align 4, !dbg !18287
  call void @llvm.dbg.declare(metadata %struct.mlx5_flow_table_attr* %ft_attr, metadata !18288, metadata !DIExpression()), !dbg !18301
  %0 = bitcast %struct.mlx5_flow_table_attr* %ft_attr to i8*, !dbg !18301
  call void @llvm.memset.p0i8.i64(i8* align 8 %0, i8 0, i64 32, i1 false), !dbg !18301
  call void @llvm.dbg.declare(metadata %struct.mlx5_core_dev** %dev, metadata !18302, metadata !DIExpression()), !dbg !18303
  %1 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !18304
  %dev1 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %1, i32 0, i32 0, !dbg !18305
  %2 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev1, align 8, !dbg !18305
  store %struct.mlx5_core_dev* %2, %struct.mlx5_core_dev** %dev, align 8, !dbg !18303
  call void @llvm.dbg.declare(metadata %struct.mlx5_flow_namespace** %root_ns, metadata !18306, metadata !DIExpression()), !dbg !18307
  call void @llvm.dbg.declare(metadata %struct.mlx5_flow_table** %fdb, metadata !18308, metadata !DIExpression()), !dbg !18309
  store %struct.mlx5_flow_table* null, %struct.mlx5_flow_table** %fdb, align 8, !dbg !18309
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !18310, metadata !DIExpression()), !dbg !18311
  store i32 0, i32* %flags, align 4, !dbg !18311
  call void @llvm.dbg.declare(metadata i32** %flow_group_in, metadata !18312, metadata !DIExpression()), !dbg !18313
  call void @llvm.dbg.declare(metadata i32* %table_size, metadata !18314, metadata !DIExpression()), !dbg !18315
  call void @llvm.dbg.declare(metadata i32* %ix, metadata !18316, metadata !DIExpression()), !dbg !18317
  call void @llvm.dbg.declare(metadata i32* %err, metadata !18318, metadata !DIExpression()), !dbg !18319
  store i32 0, i32* %err, align 4, !dbg !18319
  call void @llvm.dbg.declare(metadata %struct.mlx5_flow_group** %g, metadata !18320, metadata !DIExpression()), !dbg !18321
  call void @llvm.dbg.declare(metadata i8** %match_criteria, metadata !18322, metadata !DIExpression()), !dbg !18323
  call void @llvm.dbg.declare(metadata i8** %dmac, metadata !18324, metadata !DIExpression()), !dbg !18325
  br label %do.body, !dbg !18326

do.body:                                          ; preds = %entry
  %3 = load i32, i32* @mlx5_core_debug_mask, align 4, !dbg !18327
  %conv = zext i32 %3 to i64, !dbg !18327
  %and = and i64 8, %conv, !dbg !18327
  %tobool = icmp ne i64 %and, 0, !dbg !18327
  br i1 %tobool, label %if.then, label %if.end, !dbg !18330

if.then:                                          ; preds = %do.body
  br label %if.end, !dbg !18327

if.end:                                           ; preds = %if.then, %do.body
  br label %do.end, !dbg !18330

do.end:                                           ; preds = %if.end
  %4 = load i32, i32* %inlen, align 4, !dbg !18331
  %conv2 = sext i32 %4 to i64, !dbg !18331
  %call = call i8* @kvzalloc(i64 %conv2, i32 3264) #8, !dbg !18332
  %5 = bitcast i8* %call to i32*, !dbg !18332
  store i32* %5, i32** %flow_group_in, align 8, !dbg !18333
  %6 = load i32*, i32** %flow_group_in, align 8, !dbg !18334
  %tobool3 = icmp ne i32* %6, null, !dbg !18334
  br i1 %tobool3, label %if.end5, label %if.then4, !dbg !18336

if.then4:                                         ; preds = %do.end
  store i32 -12, i32* %retval, align 4, !dbg !18337
  br label %return, !dbg !18337

if.end5:                                          ; preds = %do.end
  %7 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !18338
  %call6 = call %struct.mlx5_flow_namespace* @mlx5_get_flow_namespace(%struct.mlx5_core_dev* %7, i32 7) #8, !dbg !18339
  store %struct.mlx5_flow_namespace* %call6, %struct.mlx5_flow_namespace** %root_ns, align 8, !dbg !18340
  %8 = load %struct.mlx5_flow_namespace*, %struct.mlx5_flow_namespace** %root_ns, align 8, !dbg !18341
  %tobool7 = icmp ne %struct.mlx5_flow_namespace* %8, null, !dbg !18341
  br i1 %tobool7, label %if.end9, label %if.then8, !dbg !18343

if.then8:                                         ; preds = %if.end5
  %9 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !18344
  %device = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %9, i32 0, i32 0, !dbg !18344
  %10 = load %struct.device*, %struct.device** %device, align 8, !dbg !18344
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %10, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.25, i64 0, i64 0)) #9, !dbg !18344
  store i32 -95, i32* %err, align 4, !dbg !18346
  br label %ns_err, !dbg !18347

if.end9:                                          ; preds = %if.end5
  %11 = load %struct.mlx5_flow_namespace*, %struct.mlx5_flow_namespace** %root_ns, align 8, !dbg !18348
  %12 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !18349
  %fdb_table = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %12, i32 0, i32 2, !dbg !18350
  %13 = getelementptr inbounds %struct.mlx5_eswitch_fdb, %struct.mlx5_eswitch_fdb* %fdb_table, i32 0, i32 0, !dbg !18351
  %offloads = bitcast %union.anon.154* %13 to %struct.offloads_fdb*, !dbg !18351
  %ns = getelementptr inbounds %struct.offloads_fdb, %struct.offloads_fdb* %offloads, i32 0, i32 0, !dbg !18352
  store %struct.mlx5_flow_namespace* %11, %struct.mlx5_flow_namespace** %ns, align 8, !dbg !18353
  %14 = load %struct.mlx5_flow_namespace*, %struct.mlx5_flow_namespace** %root_ns, align 8, !dbg !18354
  %15 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !18355
  %dev10 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %15, i32 0, i32 0, !dbg !18356
  %16 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev10, align 8, !dbg !18356
  %priv = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %16, i32 0, i32 17, !dbg !18357
  %steering = getelementptr inbounds %struct.mlx5_priv, %struct.mlx5_priv* %priv, i32 0, i32 24, !dbg !18358
  %17 = load %struct.mlx5_flow_steering*, %struct.mlx5_flow_steering** %steering, align 8, !dbg !18358
  %mode = getelementptr inbounds %struct.mlx5_flow_steering, %struct.mlx5_flow_steering* %17, i32 0, i32 1, !dbg !18359
  %18 = load i32, i32* %mode, align 8, !dbg !18359
  %call11 = call i32 @mlx5_flow_namespace_set_mode(%struct.mlx5_flow_namespace* %14, i32 %18) #8, !dbg !18360
  store i32 %call11, i32* %err, align 4, !dbg !18361
  %19 = load i32, i32* %err, align 4, !dbg !18362
  %tobool12 = icmp ne i32 %19, 0, !dbg !18362
  br i1 %tobool12, label %if.then13, label %if.end15, !dbg !18364

if.then13:                                        ; preds = %if.end9
  %20 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !18365
  %device14 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %20, i32 0, i32 0, !dbg !18365
  %21 = load %struct.device*, %struct.device** %device14, align 8, !dbg !18365
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %21, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.26, i64 0, i64 0)) #9, !dbg !18365
  br label %ns_err, !dbg !18367

if.end15:                                         ; preds = %if.end9
  %22 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !18368
  %total_vports = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %22, i32 0, i32 8, !dbg !18369
  %23 = load i32, i32* %total_vports, align 4, !dbg !18369
  %mul = mul i32 %23, 32, !dbg !18370
  %add = add i32 %mul, 256, !dbg !18371
  %add16 = add i32 %add, 2, !dbg !18372
  %24 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !18373
  %total_vports17 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %24, i32 0, i32 8, !dbg !18374
  %25 = load i32, i32* %total_vports17, align 4, !dbg !18374
  %add18 = add i32 %add16, %25, !dbg !18375
  store i32 %add18, i32* %table_size, align 4, !dbg !18376
  %26 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !18377
  %offloads19 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %26, i32 0, i32 13, !dbg !18379
  %encap = getelementptr inbounds %struct.mlx5_esw_offload, %struct.mlx5_esw_offload* %offloads19, i32 0, i32 18, !dbg !18380
  %27 = load i32, i32* %encap, align 8, !dbg !18380
  %cmp = icmp ne i32 %27, 0, !dbg !18381
  br i1 %cmp, label %if.then21, label %if.end22, !dbg !18382

if.then21:                                        ; preds = %if.end15
  %28 = load i32, i32* %flags, align 4, !dbg !18383
  %or = or i32 %28, 3, !dbg !18383
  store i32 %or, i32* %flags, align 4, !dbg !18383
  br label %if.end22, !dbg !18384

if.end22:                                         ; preds = %if.then21, %if.end15
  %29 = load i32, i32* %flags, align 4, !dbg !18385
  %flags23 = getelementptr inbounds %struct.mlx5_flow_table_attr, %struct.mlx5_flow_table_attr* %ft_attr, i32 0, i32 3, !dbg !18386
  store i32 %29, i32* %flags23, align 4, !dbg !18387
  %30 = load i32, i32* %table_size, align 4, !dbg !18388
  %max_fte = getelementptr inbounds %struct.mlx5_flow_table_attr, %struct.mlx5_flow_table_attr* %ft_attr, i32 0, i32 1, !dbg !18389
  store i32 %30, i32* %max_fte, align 4, !dbg !18390
  %prio = getelementptr inbounds %struct.mlx5_flow_table_attr, %struct.mlx5_flow_table_attr* %ft_attr, i32 0, i32 0, !dbg !18391
  store i32 3, i32* %prio, align 8, !dbg !18392
  %31 = load %struct.mlx5_flow_namespace*, %struct.mlx5_flow_namespace** %root_ns, align 8, !dbg !18393
  %call24 = call %struct.mlx5_flow_table* @mlx5_create_flow_table(%struct.mlx5_flow_namespace* %31, %struct.mlx5_flow_table_attr* %ft_attr) #8, !dbg !18394
  store %struct.mlx5_flow_table* %call24, %struct.mlx5_flow_table** %fdb, align 8, !dbg !18395
  %32 = load %struct.mlx5_flow_table*, %struct.mlx5_flow_table** %fdb, align 8, !dbg !18396
  %33 = bitcast %struct.mlx5_flow_table* %32 to i8*, !dbg !18396
  %call25 = call zeroext i1 @IS_ERR(i8* %33) #8, !dbg !18398
  br i1 %call25, label %if.then26, label %if.end30, !dbg !18399

if.then26:                                        ; preds = %if.end22
  %34 = load %struct.mlx5_flow_table*, %struct.mlx5_flow_table** %fdb, align 8, !dbg !18400
  %35 = bitcast %struct.mlx5_flow_table* %34 to i8*, !dbg !18400
  %call27 = call i64 @PTR_ERR(i8* %35) #8, !dbg !18402
  %conv28 = trunc i64 %call27 to i32, !dbg !18402
  store i32 %conv28, i32* %err, align 4, !dbg !18403
  %36 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !18404
  %device29 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %36, i32 0, i32 0, !dbg !18404
  %37 = load %struct.device*, %struct.device** %device29, align 8, !dbg !18404
  %38 = load i32, i32* %err, align 4, !dbg !18404
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %37, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.27, i64 0, i64 0), i32 %38) #9, !dbg !18404
  br label %slow_fdb_err, !dbg !18405

if.end30:                                         ; preds = %if.end22
  %39 = load %struct.mlx5_flow_table*, %struct.mlx5_flow_table** %fdb, align 8, !dbg !18406
  %40 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !18407
  %fdb_table31 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %40, i32 0, i32 2, !dbg !18408
  %41 = getelementptr inbounds %struct.mlx5_eswitch_fdb, %struct.mlx5_eswitch_fdb* %fdb_table31, i32 0, i32 0, !dbg !18409
  %offloads32 = bitcast %union.anon.154* %41 to %struct.offloads_fdb*, !dbg !18409
  %slow_fdb = getelementptr inbounds %struct.offloads_fdb, %struct.offloads_fdb* %offloads32, i32 0, i32 1, !dbg !18410
  store %struct.mlx5_flow_table* %39, %struct.mlx5_flow_table** %slow_fdb, align 8, !dbg !18411
  %42 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !18412
  %43 = load %struct.mlx5_flow_table*, %struct.mlx5_flow_table** %fdb, align 8, !dbg !18413
  %call33 = call i32 @esw_chains_create(%struct.mlx5_eswitch* %42, %struct.mlx5_flow_table* %43) #8, !dbg !18414
  store i32 %call33, i32* %err, align 4, !dbg !18415
  %44 = load i32, i32* %err, align 4, !dbg !18416
  %tobool34 = icmp ne i32 %44, 0, !dbg !18416
  br i1 %tobool34, label %if.then35, label %if.end37, !dbg !18418

if.then35:                                        ; preds = %if.end30
  %45 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !18419
  %device36 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %45, i32 0, i32 0, !dbg !18419
  %46 = load %struct.device*, %struct.device** %device36, align 8, !dbg !18419
  %47 = load i32, i32* %err, align 4, !dbg !18419
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %46, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.28, i64 0, i64 0), i32 %47) #9, !dbg !18419
  br label %fdb_chains_err, !dbg !18421

if.end37:                                         ; preds = %if.end30
  br label %do.body38, !dbg !18422

do.body38:                                        ; preds = %if.end37
  call void @llvm.dbg.declare(metadata i32* %_v, metadata !18423, metadata !DIExpression()), !dbg !18425
  store i32 2, i32* %_v, align 4, !dbg !18425
  br label %do.body39, !dbg !18425

do.body39:                                        ; preds = %do.body38
  br label %do.end40, !dbg !18426

do.end40:                                         ; preds = %do.body39
  %48 = load i32*, i32** %flow_group_in, align 8, !dbg !18425
  %add.ptr = getelementptr i32, i32* %48, i64 15, !dbg !18425
  %49 = load i32, i32* %add.ptr, align 4, !dbg !18425
  %50 = call i1 @llvm.is.constant.i32(i32 %49), !dbg !18425
  br i1 %50, label %cond.true, label %cond.false, !dbg !18425

cond.true:                                        ; preds = %do.end40
  %51 = load i32*, i32** %flow_group_in, align 8, !dbg !18425
  %add.ptr41 = getelementptr i32, i32* %51, i64 15, !dbg !18425
  %52 = load i32, i32* %add.ptr41, align 4, !dbg !18425
  %and42 = and i32 %52, 255, !dbg !18425
  %shl = shl i32 %and42, 24, !dbg !18425
  %53 = load i32*, i32** %flow_group_in, align 8, !dbg !18425
  %add.ptr43 = getelementptr i32, i32* %53, i64 15, !dbg !18425
  %54 = load i32, i32* %add.ptr43, align 4, !dbg !18425
  %and44 = and i32 %54, 65280, !dbg !18425
  %shl45 = shl i32 %and44, 8, !dbg !18425
  %or46 = or i32 %shl, %shl45, !dbg !18425
  %55 = load i32*, i32** %flow_group_in, align 8, !dbg !18425
  %add.ptr47 = getelementptr i32, i32* %55, i64 15, !dbg !18425
  %56 = load i32, i32* %add.ptr47, align 4, !dbg !18425
  %and48 = and i32 %56, 16711680, !dbg !18425
  %shr = lshr i32 %and48, 8, !dbg !18425
  %or49 = or i32 %or46, %shr, !dbg !18425
  %57 = load i32*, i32** %flow_group_in, align 8, !dbg !18425
  %add.ptr50 = getelementptr i32, i32* %57, i64 15, !dbg !18425
  %58 = load i32, i32* %add.ptr50, align 4, !dbg !18425
  %and51 = and i32 %58, -16777216, !dbg !18425
  %shr52 = lshr i32 %and51, 24, !dbg !18425
  %or53 = or i32 %or49, %shr52, !dbg !18425
  br label %cond.end, !dbg !18425

cond.false:                                       ; preds = %do.end40
  %59 = load i32*, i32** %flow_group_in, align 8, !dbg !18425
  %add.ptr54 = getelementptr i32, i32* %59, i64 15, !dbg !18425
  %60 = load i32, i32* %add.ptr54, align 4, !dbg !18425
  %call55 = call i32 @__fswab32(i32 %60) #10, !dbg !18425
  br label %cond.end, !dbg !18425

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %or53, %cond.true ], [ %call55, %cond.false ], !dbg !18425
  %and56 = and i32 %cond, -256, !dbg !18425
  %61 = load i32, i32* %_v, align 4, !dbg !18425
  %and57 = and i32 %61, 255, !dbg !18425
  %shl58 = shl i32 %and57, 0, !dbg !18425
  %or59 = or i32 %and56, %shl58, !dbg !18425
  %62 = call i1 @llvm.is.constant.i32(i32 %or59), !dbg !18425
  br i1 %62, label %cond.true60, label %cond.false176, !dbg !18425

cond.true60:                                      ; preds = %cond.end
  %63 = load i32*, i32** %flow_group_in, align 8, !dbg !18425
  %add.ptr61 = getelementptr i32, i32* %63, i64 15, !dbg !18425
  %64 = load i32, i32* %add.ptr61, align 4, !dbg !18425
  %65 = call i1 @llvm.is.constant.i32(i32 %64), !dbg !18425
  br i1 %65, label %cond.true62, label %cond.false78, !dbg !18425

cond.true62:                                      ; preds = %cond.true60
  %66 = load i32*, i32** %flow_group_in, align 8, !dbg !18425
  %add.ptr63 = getelementptr i32, i32* %66, i64 15, !dbg !18425
  %67 = load i32, i32* %add.ptr63, align 4, !dbg !18425
  %and64 = and i32 %67, 255, !dbg !18425
  %shl65 = shl i32 %and64, 24, !dbg !18425
  %68 = load i32*, i32** %flow_group_in, align 8, !dbg !18425
  %add.ptr66 = getelementptr i32, i32* %68, i64 15, !dbg !18425
  %69 = load i32, i32* %add.ptr66, align 4, !dbg !18425
  %and67 = and i32 %69, 65280, !dbg !18425
  %shl68 = shl i32 %and67, 8, !dbg !18425
  %or69 = or i32 %shl65, %shl68, !dbg !18425
  %70 = load i32*, i32** %flow_group_in, align 8, !dbg !18425
  %add.ptr70 = getelementptr i32, i32* %70, i64 15, !dbg !18425
  %71 = load i32, i32* %add.ptr70, align 4, !dbg !18425
  %and71 = and i32 %71, 16711680, !dbg !18425
  %shr72 = lshr i32 %and71, 8, !dbg !18425
  %or73 = or i32 %or69, %shr72, !dbg !18425
  %72 = load i32*, i32** %flow_group_in, align 8, !dbg !18425
  %add.ptr74 = getelementptr i32, i32* %72, i64 15, !dbg !18425
  %73 = load i32, i32* %add.ptr74, align 4, !dbg !18425
  %and75 = and i32 %73, -16777216, !dbg !18425
  %shr76 = lshr i32 %and75, 24, !dbg !18425
  %or77 = or i32 %or73, %shr76, !dbg !18425
  br label %cond.end81, !dbg !18425

cond.false78:                                     ; preds = %cond.true60
  %74 = load i32*, i32** %flow_group_in, align 8, !dbg !18425
  %add.ptr79 = getelementptr i32, i32* %74, i64 15, !dbg !18425
  %75 = load i32, i32* %add.ptr79, align 4, !dbg !18425
  %call80 = call i32 @__fswab32(i32 %75) #10, !dbg !18425
  br label %cond.end81, !dbg !18425

cond.end81:                                       ; preds = %cond.false78, %cond.true62
  %cond82 = phi i32 [ %or77, %cond.true62 ], [ %call80, %cond.false78 ], !dbg !18425
  %and83 = and i32 %cond82, -256, !dbg !18425
  %76 = load i32, i32* %_v, align 4, !dbg !18425
  %and84 = and i32 %76, 255, !dbg !18425
  %shl85 = shl i32 %and84, 0, !dbg !18425
  %or86 = or i32 %and83, %shl85, !dbg !18425
  %and87 = and i32 %or86, 255, !dbg !18425
  %shl88 = shl i32 %and87, 24, !dbg !18425
  %77 = load i32*, i32** %flow_group_in, align 8, !dbg !18425
  %add.ptr89 = getelementptr i32, i32* %77, i64 15, !dbg !18425
  %78 = load i32, i32* %add.ptr89, align 4, !dbg !18425
  %79 = call i1 @llvm.is.constant.i32(i32 %78), !dbg !18425
  br i1 %79, label %cond.true90, label %cond.false106, !dbg !18425

cond.true90:                                      ; preds = %cond.end81
  %80 = load i32*, i32** %flow_group_in, align 8, !dbg !18425
  %add.ptr91 = getelementptr i32, i32* %80, i64 15, !dbg !18425
  %81 = load i32, i32* %add.ptr91, align 4, !dbg !18425
  %and92 = and i32 %81, 255, !dbg !18425
  %shl93 = shl i32 %and92, 24, !dbg !18425
  %82 = load i32*, i32** %flow_group_in, align 8, !dbg !18425
  %add.ptr94 = getelementptr i32, i32* %82, i64 15, !dbg !18425
  %83 = load i32, i32* %add.ptr94, align 4, !dbg !18425
  %and95 = and i32 %83, 65280, !dbg !18425
  %shl96 = shl i32 %and95, 8, !dbg !18425
  %or97 = or i32 %shl93, %shl96, !dbg !18425
  %84 = load i32*, i32** %flow_group_in, align 8, !dbg !18425
  %add.ptr98 = getelementptr i32, i32* %84, i64 15, !dbg !18425
  %85 = load i32, i32* %add.ptr98, align 4, !dbg !18425
  %and99 = and i32 %85, 16711680, !dbg !18425
  %shr100 = lshr i32 %and99, 8, !dbg !18425
  %or101 = or i32 %or97, %shr100, !dbg !18425
  %86 = load i32*, i32** %flow_group_in, align 8, !dbg !18425
  %add.ptr102 = getelementptr i32, i32* %86, i64 15, !dbg !18425
  %87 = load i32, i32* %add.ptr102, align 4, !dbg !18425
  %and103 = and i32 %87, -16777216, !dbg !18425
  %shr104 = lshr i32 %and103, 24, !dbg !18425
  %or105 = or i32 %or101, %shr104, !dbg !18425
  br label %cond.end109, !dbg !18425

cond.false106:                                    ; preds = %cond.end81
  %88 = load i32*, i32** %flow_group_in, align 8, !dbg !18425
  %add.ptr107 = getelementptr i32, i32* %88, i64 15, !dbg !18425
  %89 = load i32, i32* %add.ptr107, align 4, !dbg !18425
  %call108 = call i32 @__fswab32(i32 %89) #10, !dbg !18425
  br label %cond.end109, !dbg !18425

cond.end109:                                      ; preds = %cond.false106, %cond.true90
  %cond110 = phi i32 [ %or105, %cond.true90 ], [ %call108, %cond.false106 ], !dbg !18425
  %and111 = and i32 %cond110, -256, !dbg !18425
  %90 = load i32, i32* %_v, align 4, !dbg !18425
  %and112 = and i32 %90, 255, !dbg !18425
  %shl113 = shl i32 %and112, 0, !dbg !18425
  %or114 = or i32 %and111, %shl113, !dbg !18425
  %and115 = and i32 %or114, 65280, !dbg !18425
  %shl116 = shl i32 %and115, 8, !dbg !18425
  %or117 = or i32 %shl88, %shl116, !dbg !18425
  %91 = load i32*, i32** %flow_group_in, align 8, !dbg !18425
  %add.ptr118 = getelementptr i32, i32* %91, i64 15, !dbg !18425
  %92 = load i32, i32* %add.ptr118, align 4, !dbg !18425
  %93 = call i1 @llvm.is.constant.i32(i32 %92), !dbg !18425
  br i1 %93, label %cond.true119, label %cond.false135, !dbg !18425

cond.true119:                                     ; preds = %cond.end109
  %94 = load i32*, i32** %flow_group_in, align 8, !dbg !18425
  %add.ptr120 = getelementptr i32, i32* %94, i64 15, !dbg !18425
  %95 = load i32, i32* %add.ptr120, align 4, !dbg !18425
  %and121 = and i32 %95, 255, !dbg !18425
  %shl122 = shl i32 %and121, 24, !dbg !18425
  %96 = load i32*, i32** %flow_group_in, align 8, !dbg !18425
  %add.ptr123 = getelementptr i32, i32* %96, i64 15, !dbg !18425
  %97 = load i32, i32* %add.ptr123, align 4, !dbg !18425
  %and124 = and i32 %97, 65280, !dbg !18425
  %shl125 = shl i32 %and124, 8, !dbg !18425
  %or126 = or i32 %shl122, %shl125, !dbg !18425
  %98 = load i32*, i32** %flow_group_in, align 8, !dbg !18425
  %add.ptr127 = getelementptr i32, i32* %98, i64 15, !dbg !18425
  %99 = load i32, i32* %add.ptr127, align 4, !dbg !18425
  %and128 = and i32 %99, 16711680, !dbg !18425
  %shr129 = lshr i32 %and128, 8, !dbg !18425
  %or130 = or i32 %or126, %shr129, !dbg !18425
  %100 = load i32*, i32** %flow_group_in, align 8, !dbg !18425
  %add.ptr131 = getelementptr i32, i32* %100, i64 15, !dbg !18425
  %101 = load i32, i32* %add.ptr131, align 4, !dbg !18425
  %and132 = and i32 %101, -16777216, !dbg !18425
  %shr133 = lshr i32 %and132, 24, !dbg !18425
  %or134 = or i32 %or130, %shr133, !dbg !18425
  br label %cond.end138, !dbg !18425

cond.false135:                                    ; preds = %cond.end109
  %102 = load i32*, i32** %flow_group_in, align 8, !dbg !18425
  %add.ptr136 = getelementptr i32, i32* %102, i64 15, !dbg !18425
  %103 = load i32, i32* %add.ptr136, align 4, !dbg !18425
  %call137 = call i32 @__fswab32(i32 %103) #10, !dbg !18425
  br label %cond.end138, !dbg !18425

cond.end138:                                      ; preds = %cond.false135, %cond.true119
  %cond139 = phi i32 [ %or134, %cond.true119 ], [ %call137, %cond.false135 ], !dbg !18425
  %and140 = and i32 %cond139, -256, !dbg !18425
  %104 = load i32, i32* %_v, align 4, !dbg !18425
  %and141 = and i32 %104, 255, !dbg !18425
  %shl142 = shl i32 %and141, 0, !dbg !18425
  %or143 = or i32 %and140, %shl142, !dbg !18425
  %and144 = and i32 %or143, 16711680, !dbg !18425
  %shr145 = lshr i32 %and144, 8, !dbg !18425
  %or146 = or i32 %or117, %shr145, !dbg !18425
  %105 = load i32*, i32** %flow_group_in, align 8, !dbg !18425
  %add.ptr147 = getelementptr i32, i32* %105, i64 15, !dbg !18425
  %106 = load i32, i32* %add.ptr147, align 4, !dbg !18425
  %107 = call i1 @llvm.is.constant.i32(i32 %106), !dbg !18425
  br i1 %107, label %cond.true148, label %cond.false164, !dbg !18425

cond.true148:                                     ; preds = %cond.end138
  %108 = load i32*, i32** %flow_group_in, align 8, !dbg !18425
  %add.ptr149 = getelementptr i32, i32* %108, i64 15, !dbg !18425
  %109 = load i32, i32* %add.ptr149, align 4, !dbg !18425
  %and150 = and i32 %109, 255, !dbg !18425
  %shl151 = shl i32 %and150, 24, !dbg !18425
  %110 = load i32*, i32** %flow_group_in, align 8, !dbg !18425
  %add.ptr152 = getelementptr i32, i32* %110, i64 15, !dbg !18425
  %111 = load i32, i32* %add.ptr152, align 4, !dbg !18425
  %and153 = and i32 %111, 65280, !dbg !18425
  %shl154 = shl i32 %and153, 8, !dbg !18425
  %or155 = or i32 %shl151, %shl154, !dbg !18425
  %112 = load i32*, i32** %flow_group_in, align 8, !dbg !18425
  %add.ptr156 = getelementptr i32, i32* %112, i64 15, !dbg !18425
  %113 = load i32, i32* %add.ptr156, align 4, !dbg !18425
  %and157 = and i32 %113, 16711680, !dbg !18425
  %shr158 = lshr i32 %and157, 8, !dbg !18425
  %or159 = or i32 %or155, %shr158, !dbg !18425
  %114 = load i32*, i32** %flow_group_in, align 8, !dbg !18425
  %add.ptr160 = getelementptr i32, i32* %114, i64 15, !dbg !18425
  %115 = load i32, i32* %add.ptr160, align 4, !dbg !18425
  %and161 = and i32 %115, -16777216, !dbg !18425
  %shr162 = lshr i32 %and161, 24, !dbg !18425
  %or163 = or i32 %or159, %shr162, !dbg !18425
  br label %cond.end167, !dbg !18425

cond.false164:                                    ; preds = %cond.end138
  %116 = load i32*, i32** %flow_group_in, align 8, !dbg !18425
  %add.ptr165 = getelementptr i32, i32* %116, i64 15, !dbg !18425
  %117 = load i32, i32* %add.ptr165, align 4, !dbg !18425
  %call166 = call i32 @__fswab32(i32 %117) #10, !dbg !18425
  br label %cond.end167, !dbg !18425

cond.end167:                                      ; preds = %cond.false164, %cond.true148
  %cond168 = phi i32 [ %or163, %cond.true148 ], [ %call166, %cond.false164 ], !dbg !18425
  %and169 = and i32 %cond168, -256, !dbg !18425
  %118 = load i32, i32* %_v, align 4, !dbg !18425
  %and170 = and i32 %118, 255, !dbg !18425
  %shl171 = shl i32 %and170, 0, !dbg !18425
  %or172 = or i32 %and169, %shl171, !dbg !18425
  %and173 = and i32 %or172, -16777216, !dbg !18425
  %shr174 = lshr i32 %and173, 24, !dbg !18425
  %or175 = or i32 %or146, %shr174, !dbg !18425
  br label %cond.end204, !dbg !18425

cond.false176:                                    ; preds = %cond.end
  %119 = load i32*, i32** %flow_group_in, align 8, !dbg !18425
  %add.ptr177 = getelementptr i32, i32* %119, i64 15, !dbg !18425
  %120 = load i32, i32* %add.ptr177, align 4, !dbg !18425
  %121 = call i1 @llvm.is.constant.i32(i32 %120), !dbg !18425
  br i1 %121, label %cond.true178, label %cond.false194, !dbg !18425

cond.true178:                                     ; preds = %cond.false176
  %122 = load i32*, i32** %flow_group_in, align 8, !dbg !18425
  %add.ptr179 = getelementptr i32, i32* %122, i64 15, !dbg !18425
  %123 = load i32, i32* %add.ptr179, align 4, !dbg !18425
  %and180 = and i32 %123, 255, !dbg !18425
  %shl181 = shl i32 %and180, 24, !dbg !18425
  %124 = load i32*, i32** %flow_group_in, align 8, !dbg !18425
  %add.ptr182 = getelementptr i32, i32* %124, i64 15, !dbg !18425
  %125 = load i32, i32* %add.ptr182, align 4, !dbg !18425
  %and183 = and i32 %125, 65280, !dbg !18425
  %shl184 = shl i32 %and183, 8, !dbg !18425
  %or185 = or i32 %shl181, %shl184, !dbg !18425
  %126 = load i32*, i32** %flow_group_in, align 8, !dbg !18425
  %add.ptr186 = getelementptr i32, i32* %126, i64 15, !dbg !18425
  %127 = load i32, i32* %add.ptr186, align 4, !dbg !18425
  %and187 = and i32 %127, 16711680, !dbg !18425
  %shr188 = lshr i32 %and187, 8, !dbg !18425
  %or189 = or i32 %or185, %shr188, !dbg !18425
  %128 = load i32*, i32** %flow_group_in, align 8, !dbg !18425
  %add.ptr190 = getelementptr i32, i32* %128, i64 15, !dbg !18425
  %129 = load i32, i32* %add.ptr190, align 4, !dbg !18425
  %and191 = and i32 %129, -16777216, !dbg !18425
  %shr192 = lshr i32 %and191, 24, !dbg !18425
  %or193 = or i32 %or189, %shr192, !dbg !18425
  br label %cond.end197, !dbg !18425

cond.false194:                                    ; preds = %cond.false176
  %130 = load i32*, i32** %flow_group_in, align 8, !dbg !18425
  %add.ptr195 = getelementptr i32, i32* %130, i64 15, !dbg !18425
  %131 = load i32, i32* %add.ptr195, align 4, !dbg !18425
  %call196 = call i32 @__fswab32(i32 %131) #10, !dbg !18425
  br label %cond.end197, !dbg !18425

cond.end197:                                      ; preds = %cond.false194, %cond.true178
  %cond198 = phi i32 [ %or193, %cond.true178 ], [ %call196, %cond.false194 ], !dbg !18425
  %and199 = and i32 %cond198, -256, !dbg !18425
  %132 = load i32, i32* %_v, align 4, !dbg !18425
  %and200 = and i32 %132, 255, !dbg !18425
  %shl201 = shl i32 %and200, 0, !dbg !18425
  %or202 = or i32 %and199, %shl201, !dbg !18425
  %call203 = call i32 @__fswab32(i32 %or202) #10, !dbg !18425
  br label %cond.end204, !dbg !18425

cond.end204:                                      ; preds = %cond.end197, %cond.end167
  %cond205 = phi i32 [ %or175, %cond.end167 ], [ %call203, %cond.end197 ], !dbg !18425
  %133 = load i32*, i32** %flow_group_in, align 8, !dbg !18425
  %add.ptr206 = getelementptr i32, i32* %133, i64 15, !dbg !18425
  store i32 %cond205, i32* %add.ptr206, align 4, !dbg !18425
  br label %do.end207, !dbg !18425

do.end207:                                        ; preds = %cond.end204
  %134 = load i32*, i32** %flow_group_in, align 8, !dbg !18428
  %135 = bitcast i32* %134 to i8*, !dbg !18428
  %add.ptr208 = getelementptr i8, i8* %135, i64 64, !dbg !18428
  store i8* %add.ptr208, i8** %match_criteria, align 8, !dbg !18429
  br label %do.body209, !dbg !18430

do.body209:                                       ; preds = %do.end207
  br label %do.body210, !dbg !18431

do.body210:                                       ; preds = %do.body209
  br label %do.end211, !dbg !18433

do.end211:                                        ; preds = %do.body210
  %136 = load i8*, i8** %match_criteria, align 8, !dbg !18431
  %137 = bitcast i8* %136 to i32*, !dbg !18431
  %add.ptr212 = getelementptr i32, i32* %137, i64 16, !dbg !18431
  %138 = load i32, i32* %add.ptr212, align 4, !dbg !18431
  %139 = call i1 @llvm.is.constant.i32(i32 %138), !dbg !18431
  br i1 %139, label %cond.true213, label %cond.false229, !dbg !18431

cond.true213:                                     ; preds = %do.end211
  %140 = load i8*, i8** %match_criteria, align 8, !dbg !18431
  %141 = bitcast i8* %140 to i32*, !dbg !18431
  %add.ptr214 = getelementptr i32, i32* %141, i64 16, !dbg !18431
  %142 = load i32, i32* %add.ptr214, align 4, !dbg !18431
  %and215 = and i32 %142, 255, !dbg !18431
  %shl216 = shl i32 %and215, 24, !dbg !18431
  %143 = load i8*, i8** %match_criteria, align 8, !dbg !18431
  %144 = bitcast i8* %143 to i32*, !dbg !18431
  %add.ptr217 = getelementptr i32, i32* %144, i64 16, !dbg !18431
  %145 = load i32, i32* %add.ptr217, align 4, !dbg !18431
  %and218 = and i32 %145, 65280, !dbg !18431
  %shl219 = shl i32 %and218, 8, !dbg !18431
  %or220 = or i32 %shl216, %shl219, !dbg !18431
  %146 = load i8*, i8** %match_criteria, align 8, !dbg !18431
  %147 = bitcast i8* %146 to i32*, !dbg !18431
  %add.ptr221 = getelementptr i32, i32* %147, i64 16, !dbg !18431
  %148 = load i32, i32* %add.ptr221, align 4, !dbg !18431
  %and222 = and i32 %148, 16711680, !dbg !18431
  %shr223 = lshr i32 %and222, 8, !dbg !18431
  %or224 = or i32 %or220, %shr223, !dbg !18431
  %149 = load i8*, i8** %match_criteria, align 8, !dbg !18431
  %150 = bitcast i8* %149 to i32*, !dbg !18431
  %add.ptr225 = getelementptr i32, i32* %150, i64 16, !dbg !18431
  %151 = load i32, i32* %add.ptr225, align 4, !dbg !18431
  %and226 = and i32 %151, -16777216, !dbg !18431
  %shr227 = lshr i32 %and226, 24, !dbg !18431
  %or228 = or i32 %or224, %shr227, !dbg !18431
  br label %cond.end232, !dbg !18431

cond.false229:                                    ; preds = %do.end211
  %152 = load i8*, i8** %match_criteria, align 8, !dbg !18431
  %153 = bitcast i8* %152 to i32*, !dbg !18431
  %add.ptr230 = getelementptr i32, i32* %153, i64 16, !dbg !18431
  %154 = load i32, i32* %add.ptr230, align 4, !dbg !18431
  %call231 = call i32 @__fswab32(i32 %154) #10, !dbg !18431
  br label %cond.end232, !dbg !18431

cond.end232:                                      ; preds = %cond.false229, %cond.true213
  %cond233 = phi i32 [ %or228, %cond.true213 ], [ %call231, %cond.false229 ], !dbg !18431
  %and234 = and i32 %cond233, -16777216, !dbg !18431
  %or235 = or i32 %and234, 16777215, !dbg !18431
  %155 = call i1 @llvm.is.constant.i32(i32 %or235), !dbg !18431
  br i1 %155, label %cond.true236, label %cond.false344, !dbg !18431

cond.true236:                                     ; preds = %cond.end232
  %156 = load i8*, i8** %match_criteria, align 8, !dbg !18431
  %157 = bitcast i8* %156 to i32*, !dbg !18431
  %add.ptr237 = getelementptr i32, i32* %157, i64 16, !dbg !18431
  %158 = load i32, i32* %add.ptr237, align 4, !dbg !18431
  %159 = call i1 @llvm.is.constant.i32(i32 %158), !dbg !18431
  br i1 %159, label %cond.true238, label %cond.false254, !dbg !18431

cond.true238:                                     ; preds = %cond.true236
  %160 = load i8*, i8** %match_criteria, align 8, !dbg !18431
  %161 = bitcast i8* %160 to i32*, !dbg !18431
  %add.ptr239 = getelementptr i32, i32* %161, i64 16, !dbg !18431
  %162 = load i32, i32* %add.ptr239, align 4, !dbg !18431
  %and240 = and i32 %162, 255, !dbg !18431
  %shl241 = shl i32 %and240, 24, !dbg !18431
  %163 = load i8*, i8** %match_criteria, align 8, !dbg !18431
  %164 = bitcast i8* %163 to i32*, !dbg !18431
  %add.ptr242 = getelementptr i32, i32* %164, i64 16, !dbg !18431
  %165 = load i32, i32* %add.ptr242, align 4, !dbg !18431
  %and243 = and i32 %165, 65280, !dbg !18431
  %shl244 = shl i32 %and243, 8, !dbg !18431
  %or245 = or i32 %shl241, %shl244, !dbg !18431
  %166 = load i8*, i8** %match_criteria, align 8, !dbg !18431
  %167 = bitcast i8* %166 to i32*, !dbg !18431
  %add.ptr246 = getelementptr i32, i32* %167, i64 16, !dbg !18431
  %168 = load i32, i32* %add.ptr246, align 4, !dbg !18431
  %and247 = and i32 %168, 16711680, !dbg !18431
  %shr248 = lshr i32 %and247, 8, !dbg !18431
  %or249 = or i32 %or245, %shr248, !dbg !18431
  %169 = load i8*, i8** %match_criteria, align 8, !dbg !18431
  %170 = bitcast i8* %169 to i32*, !dbg !18431
  %add.ptr250 = getelementptr i32, i32* %170, i64 16, !dbg !18431
  %171 = load i32, i32* %add.ptr250, align 4, !dbg !18431
  %and251 = and i32 %171, -16777216, !dbg !18431
  %shr252 = lshr i32 %and251, 24, !dbg !18431
  %or253 = or i32 %or249, %shr252, !dbg !18431
  br label %cond.end257, !dbg !18431

cond.false254:                                    ; preds = %cond.true236
  %172 = load i8*, i8** %match_criteria, align 8, !dbg !18431
  %173 = bitcast i8* %172 to i32*, !dbg !18431
  %add.ptr255 = getelementptr i32, i32* %173, i64 16, !dbg !18431
  %174 = load i32, i32* %add.ptr255, align 4, !dbg !18431
  %call256 = call i32 @__fswab32(i32 %174) #10, !dbg !18431
  br label %cond.end257, !dbg !18431

cond.end257:                                      ; preds = %cond.false254, %cond.true238
  %cond258 = phi i32 [ %or253, %cond.true238 ], [ %call256, %cond.false254 ], !dbg !18431
  %and259 = and i32 %cond258, -16777216, !dbg !18431
  %or260 = or i32 %and259, 16777215, !dbg !18431
  %and261 = and i32 %or260, 255, !dbg !18431
  %shl262 = shl i32 %and261, 24, !dbg !18431
  %175 = load i8*, i8** %match_criteria, align 8, !dbg !18431
  %176 = bitcast i8* %175 to i32*, !dbg !18431
  %add.ptr263 = getelementptr i32, i32* %176, i64 16, !dbg !18431
  %177 = load i32, i32* %add.ptr263, align 4, !dbg !18431
  %178 = call i1 @llvm.is.constant.i32(i32 %177), !dbg !18431
  br i1 %178, label %cond.true264, label %cond.false280, !dbg !18431

cond.true264:                                     ; preds = %cond.end257
  %179 = load i8*, i8** %match_criteria, align 8, !dbg !18431
  %180 = bitcast i8* %179 to i32*, !dbg !18431
  %add.ptr265 = getelementptr i32, i32* %180, i64 16, !dbg !18431
  %181 = load i32, i32* %add.ptr265, align 4, !dbg !18431
  %and266 = and i32 %181, 255, !dbg !18431
  %shl267 = shl i32 %and266, 24, !dbg !18431
  %182 = load i8*, i8** %match_criteria, align 8, !dbg !18431
  %183 = bitcast i8* %182 to i32*, !dbg !18431
  %add.ptr268 = getelementptr i32, i32* %183, i64 16, !dbg !18431
  %184 = load i32, i32* %add.ptr268, align 4, !dbg !18431
  %and269 = and i32 %184, 65280, !dbg !18431
  %shl270 = shl i32 %and269, 8, !dbg !18431
  %or271 = or i32 %shl267, %shl270, !dbg !18431
  %185 = load i8*, i8** %match_criteria, align 8, !dbg !18431
  %186 = bitcast i8* %185 to i32*, !dbg !18431
  %add.ptr272 = getelementptr i32, i32* %186, i64 16, !dbg !18431
  %187 = load i32, i32* %add.ptr272, align 4, !dbg !18431
  %and273 = and i32 %187, 16711680, !dbg !18431
  %shr274 = lshr i32 %and273, 8, !dbg !18431
  %or275 = or i32 %or271, %shr274, !dbg !18431
  %188 = load i8*, i8** %match_criteria, align 8, !dbg !18431
  %189 = bitcast i8* %188 to i32*, !dbg !18431
  %add.ptr276 = getelementptr i32, i32* %189, i64 16, !dbg !18431
  %190 = load i32, i32* %add.ptr276, align 4, !dbg !18431
  %and277 = and i32 %190, -16777216, !dbg !18431
  %shr278 = lshr i32 %and277, 24, !dbg !18431
  %or279 = or i32 %or275, %shr278, !dbg !18431
  br label %cond.end283, !dbg !18431

cond.false280:                                    ; preds = %cond.end257
  %191 = load i8*, i8** %match_criteria, align 8, !dbg !18431
  %192 = bitcast i8* %191 to i32*, !dbg !18431
  %add.ptr281 = getelementptr i32, i32* %192, i64 16, !dbg !18431
  %193 = load i32, i32* %add.ptr281, align 4, !dbg !18431
  %call282 = call i32 @__fswab32(i32 %193) #10, !dbg !18431
  br label %cond.end283, !dbg !18431

cond.end283:                                      ; preds = %cond.false280, %cond.true264
  %cond284 = phi i32 [ %or279, %cond.true264 ], [ %call282, %cond.false280 ], !dbg !18431
  %and285 = and i32 %cond284, -16777216, !dbg !18431
  %or286 = or i32 %and285, 16777215, !dbg !18431
  %and287 = and i32 %or286, 65280, !dbg !18431
  %shl288 = shl i32 %and287, 8, !dbg !18431
  %or289 = or i32 %shl262, %shl288, !dbg !18431
  %194 = load i8*, i8** %match_criteria, align 8, !dbg !18431
  %195 = bitcast i8* %194 to i32*, !dbg !18431
  %add.ptr290 = getelementptr i32, i32* %195, i64 16, !dbg !18431
  %196 = load i32, i32* %add.ptr290, align 4, !dbg !18431
  %197 = call i1 @llvm.is.constant.i32(i32 %196), !dbg !18431
  br i1 %197, label %cond.true291, label %cond.false307, !dbg !18431

cond.true291:                                     ; preds = %cond.end283
  %198 = load i8*, i8** %match_criteria, align 8, !dbg !18431
  %199 = bitcast i8* %198 to i32*, !dbg !18431
  %add.ptr292 = getelementptr i32, i32* %199, i64 16, !dbg !18431
  %200 = load i32, i32* %add.ptr292, align 4, !dbg !18431
  %and293 = and i32 %200, 255, !dbg !18431
  %shl294 = shl i32 %and293, 24, !dbg !18431
  %201 = load i8*, i8** %match_criteria, align 8, !dbg !18431
  %202 = bitcast i8* %201 to i32*, !dbg !18431
  %add.ptr295 = getelementptr i32, i32* %202, i64 16, !dbg !18431
  %203 = load i32, i32* %add.ptr295, align 4, !dbg !18431
  %and296 = and i32 %203, 65280, !dbg !18431
  %shl297 = shl i32 %and296, 8, !dbg !18431
  %or298 = or i32 %shl294, %shl297, !dbg !18431
  %204 = load i8*, i8** %match_criteria, align 8, !dbg !18431
  %205 = bitcast i8* %204 to i32*, !dbg !18431
  %add.ptr299 = getelementptr i32, i32* %205, i64 16, !dbg !18431
  %206 = load i32, i32* %add.ptr299, align 4, !dbg !18431
  %and300 = and i32 %206, 16711680, !dbg !18431
  %shr301 = lshr i32 %and300, 8, !dbg !18431
  %or302 = or i32 %or298, %shr301, !dbg !18431
  %207 = load i8*, i8** %match_criteria, align 8, !dbg !18431
  %208 = bitcast i8* %207 to i32*, !dbg !18431
  %add.ptr303 = getelementptr i32, i32* %208, i64 16, !dbg !18431
  %209 = load i32, i32* %add.ptr303, align 4, !dbg !18431
  %and304 = and i32 %209, -16777216, !dbg !18431
  %shr305 = lshr i32 %and304, 24, !dbg !18431
  %or306 = or i32 %or302, %shr305, !dbg !18431
  br label %cond.end310, !dbg !18431

cond.false307:                                    ; preds = %cond.end283
  %210 = load i8*, i8** %match_criteria, align 8, !dbg !18431
  %211 = bitcast i8* %210 to i32*, !dbg !18431
  %add.ptr308 = getelementptr i32, i32* %211, i64 16, !dbg !18431
  %212 = load i32, i32* %add.ptr308, align 4, !dbg !18431
  %call309 = call i32 @__fswab32(i32 %212) #10, !dbg !18431
  br label %cond.end310, !dbg !18431

cond.end310:                                      ; preds = %cond.false307, %cond.true291
  %cond311 = phi i32 [ %or306, %cond.true291 ], [ %call309, %cond.false307 ], !dbg !18431
  %and312 = and i32 %cond311, -16777216, !dbg !18431
  %or313 = or i32 %and312, 16777215, !dbg !18431
  %and314 = and i32 %or313, 16711680, !dbg !18431
  %shr315 = lshr i32 %and314, 8, !dbg !18431
  %or316 = or i32 %or289, %shr315, !dbg !18431
  %213 = load i8*, i8** %match_criteria, align 8, !dbg !18431
  %214 = bitcast i8* %213 to i32*, !dbg !18431
  %add.ptr317 = getelementptr i32, i32* %214, i64 16, !dbg !18431
  %215 = load i32, i32* %add.ptr317, align 4, !dbg !18431
  %216 = call i1 @llvm.is.constant.i32(i32 %215), !dbg !18431
  br i1 %216, label %cond.true318, label %cond.false334, !dbg !18431

cond.true318:                                     ; preds = %cond.end310
  %217 = load i8*, i8** %match_criteria, align 8, !dbg !18431
  %218 = bitcast i8* %217 to i32*, !dbg !18431
  %add.ptr319 = getelementptr i32, i32* %218, i64 16, !dbg !18431
  %219 = load i32, i32* %add.ptr319, align 4, !dbg !18431
  %and320 = and i32 %219, 255, !dbg !18431
  %shl321 = shl i32 %and320, 24, !dbg !18431
  %220 = load i8*, i8** %match_criteria, align 8, !dbg !18431
  %221 = bitcast i8* %220 to i32*, !dbg !18431
  %add.ptr322 = getelementptr i32, i32* %221, i64 16, !dbg !18431
  %222 = load i32, i32* %add.ptr322, align 4, !dbg !18431
  %and323 = and i32 %222, 65280, !dbg !18431
  %shl324 = shl i32 %and323, 8, !dbg !18431
  %or325 = or i32 %shl321, %shl324, !dbg !18431
  %223 = load i8*, i8** %match_criteria, align 8, !dbg !18431
  %224 = bitcast i8* %223 to i32*, !dbg !18431
  %add.ptr326 = getelementptr i32, i32* %224, i64 16, !dbg !18431
  %225 = load i32, i32* %add.ptr326, align 4, !dbg !18431
  %and327 = and i32 %225, 16711680, !dbg !18431
  %shr328 = lshr i32 %and327, 8, !dbg !18431
  %or329 = or i32 %or325, %shr328, !dbg !18431
  %226 = load i8*, i8** %match_criteria, align 8, !dbg !18431
  %227 = bitcast i8* %226 to i32*, !dbg !18431
  %add.ptr330 = getelementptr i32, i32* %227, i64 16, !dbg !18431
  %228 = load i32, i32* %add.ptr330, align 4, !dbg !18431
  %and331 = and i32 %228, -16777216, !dbg !18431
  %shr332 = lshr i32 %and331, 24, !dbg !18431
  %or333 = or i32 %or329, %shr332, !dbg !18431
  br label %cond.end337, !dbg !18431

cond.false334:                                    ; preds = %cond.end310
  %229 = load i8*, i8** %match_criteria, align 8, !dbg !18431
  %230 = bitcast i8* %229 to i32*, !dbg !18431
  %add.ptr335 = getelementptr i32, i32* %230, i64 16, !dbg !18431
  %231 = load i32, i32* %add.ptr335, align 4, !dbg !18431
  %call336 = call i32 @__fswab32(i32 %231) #10, !dbg !18431
  br label %cond.end337, !dbg !18431

cond.end337:                                      ; preds = %cond.false334, %cond.true318
  %cond338 = phi i32 [ %or333, %cond.true318 ], [ %call336, %cond.false334 ], !dbg !18431
  %and339 = and i32 %cond338, -16777216, !dbg !18431
  %or340 = or i32 %and339, 16777215, !dbg !18431
  %and341 = and i32 %or340, -16777216, !dbg !18431
  %shr342 = lshr i32 %and341, 24, !dbg !18431
  %or343 = or i32 %or316, %shr342, !dbg !18431
  br label %cond.end370, !dbg !18431

cond.false344:                                    ; preds = %cond.end232
  %232 = load i8*, i8** %match_criteria, align 8, !dbg !18431
  %233 = bitcast i8* %232 to i32*, !dbg !18431
  %add.ptr345 = getelementptr i32, i32* %233, i64 16, !dbg !18431
  %234 = load i32, i32* %add.ptr345, align 4, !dbg !18431
  %235 = call i1 @llvm.is.constant.i32(i32 %234), !dbg !18431
  br i1 %235, label %cond.true346, label %cond.false362, !dbg !18431

cond.true346:                                     ; preds = %cond.false344
  %236 = load i8*, i8** %match_criteria, align 8, !dbg !18431
  %237 = bitcast i8* %236 to i32*, !dbg !18431
  %add.ptr347 = getelementptr i32, i32* %237, i64 16, !dbg !18431
  %238 = load i32, i32* %add.ptr347, align 4, !dbg !18431
  %and348 = and i32 %238, 255, !dbg !18431
  %shl349 = shl i32 %and348, 24, !dbg !18431
  %239 = load i8*, i8** %match_criteria, align 8, !dbg !18431
  %240 = bitcast i8* %239 to i32*, !dbg !18431
  %add.ptr350 = getelementptr i32, i32* %240, i64 16, !dbg !18431
  %241 = load i32, i32* %add.ptr350, align 4, !dbg !18431
  %and351 = and i32 %241, 65280, !dbg !18431
  %shl352 = shl i32 %and351, 8, !dbg !18431
  %or353 = or i32 %shl349, %shl352, !dbg !18431
  %242 = load i8*, i8** %match_criteria, align 8, !dbg !18431
  %243 = bitcast i8* %242 to i32*, !dbg !18431
  %add.ptr354 = getelementptr i32, i32* %243, i64 16, !dbg !18431
  %244 = load i32, i32* %add.ptr354, align 4, !dbg !18431
  %and355 = and i32 %244, 16711680, !dbg !18431
  %shr356 = lshr i32 %and355, 8, !dbg !18431
  %or357 = or i32 %or353, %shr356, !dbg !18431
  %245 = load i8*, i8** %match_criteria, align 8, !dbg !18431
  %246 = bitcast i8* %245 to i32*, !dbg !18431
  %add.ptr358 = getelementptr i32, i32* %246, i64 16, !dbg !18431
  %247 = load i32, i32* %add.ptr358, align 4, !dbg !18431
  %and359 = and i32 %247, -16777216, !dbg !18431
  %shr360 = lshr i32 %and359, 24, !dbg !18431
  %or361 = or i32 %or357, %shr360, !dbg !18431
  br label %cond.end365, !dbg !18431

cond.false362:                                    ; preds = %cond.false344
  %248 = load i8*, i8** %match_criteria, align 8, !dbg !18431
  %249 = bitcast i8* %248 to i32*, !dbg !18431
  %add.ptr363 = getelementptr i32, i32* %249, i64 16, !dbg !18431
  %250 = load i32, i32* %add.ptr363, align 4, !dbg !18431
  %call364 = call i32 @__fswab32(i32 %250) #10, !dbg !18431
  br label %cond.end365, !dbg !18431

cond.end365:                                      ; preds = %cond.false362, %cond.true346
  %cond366 = phi i32 [ %or361, %cond.true346 ], [ %call364, %cond.false362 ], !dbg !18431
  %and367 = and i32 %cond366, -16777216, !dbg !18431
  %or368 = or i32 %and367, 16777215, !dbg !18431
  %call369 = call i32 @__fswab32(i32 %or368) #10, !dbg !18431
  br label %cond.end370, !dbg !18431

cond.end370:                                      ; preds = %cond.end365, %cond.end337
  %cond371 = phi i32 [ %or343, %cond.end337 ], [ %call369, %cond.end365 ], !dbg !18431
  %251 = load i8*, i8** %match_criteria, align 8, !dbg !18431
  %252 = bitcast i8* %251 to i32*, !dbg !18431
  %add.ptr372 = getelementptr i32, i32* %252, i64 16, !dbg !18431
  store i32 %cond371, i32* %add.ptr372, align 4, !dbg !18431
  br label %do.end373, !dbg !18431

do.end373:                                        ; preds = %cond.end370
  br label %do.body374, !dbg !18435

do.body374:                                       ; preds = %do.end373
  br label %do.body375, !dbg !18436

do.body375:                                       ; preds = %do.body374
  br label %do.end376, !dbg !18438

do.end376:                                        ; preds = %do.body375
  %253 = load i8*, i8** %match_criteria, align 8, !dbg !18436
  %254 = bitcast i8* %253 to i32*, !dbg !18436
  %add.ptr377 = getelementptr i32, i32* %254, i64 17, !dbg !18436
  %255 = load i32, i32* %add.ptr377, align 4, !dbg !18436
  %256 = call i1 @llvm.is.constant.i32(i32 %255), !dbg !18436
  br i1 %256, label %cond.true378, label %cond.false394, !dbg !18436

cond.true378:                                     ; preds = %do.end376
  %257 = load i8*, i8** %match_criteria, align 8, !dbg !18436
  %258 = bitcast i8* %257 to i32*, !dbg !18436
  %add.ptr379 = getelementptr i32, i32* %258, i64 17, !dbg !18436
  %259 = load i32, i32* %add.ptr379, align 4, !dbg !18436
  %and380 = and i32 %259, 255, !dbg !18436
  %shl381 = shl i32 %and380, 24, !dbg !18436
  %260 = load i8*, i8** %match_criteria, align 8, !dbg !18436
  %261 = bitcast i8* %260 to i32*, !dbg !18436
  %add.ptr382 = getelementptr i32, i32* %261, i64 17, !dbg !18436
  %262 = load i32, i32* %add.ptr382, align 4, !dbg !18436
  %and383 = and i32 %262, 65280, !dbg !18436
  %shl384 = shl i32 %and383, 8, !dbg !18436
  %or385 = or i32 %shl381, %shl384, !dbg !18436
  %263 = load i8*, i8** %match_criteria, align 8, !dbg !18436
  %264 = bitcast i8* %263 to i32*, !dbg !18436
  %add.ptr386 = getelementptr i32, i32* %264, i64 17, !dbg !18436
  %265 = load i32, i32* %add.ptr386, align 4, !dbg !18436
  %and387 = and i32 %265, 16711680, !dbg !18436
  %shr388 = lshr i32 %and387, 8, !dbg !18436
  %or389 = or i32 %or385, %shr388, !dbg !18436
  %266 = load i8*, i8** %match_criteria, align 8, !dbg !18436
  %267 = bitcast i8* %266 to i32*, !dbg !18436
  %add.ptr390 = getelementptr i32, i32* %267, i64 17, !dbg !18436
  %268 = load i32, i32* %add.ptr390, align 4, !dbg !18436
  %and391 = and i32 %268, -16777216, !dbg !18436
  %shr392 = lshr i32 %and391, 24, !dbg !18436
  %or393 = or i32 %or389, %shr392, !dbg !18436
  br label %cond.end397, !dbg !18436

cond.false394:                                    ; preds = %do.end376
  %269 = load i8*, i8** %match_criteria, align 8, !dbg !18436
  %270 = bitcast i8* %269 to i32*, !dbg !18436
  %add.ptr395 = getelementptr i32, i32* %270, i64 17, !dbg !18436
  %271 = load i32, i32* %add.ptr395, align 4, !dbg !18436
  %call396 = call i32 @__fswab32(i32 %271) #10, !dbg !18436
  br label %cond.end397, !dbg !18436

cond.end397:                                      ; preds = %cond.false394, %cond.true378
  %cond398 = phi i32 [ %or393, %cond.true378 ], [ %call396, %cond.false394 ], !dbg !18436
  %and399 = and i32 %cond398, -65536, !dbg !18436
  %or400 = or i32 %and399, 65535, !dbg !18436
  %272 = call i1 @llvm.is.constant.i32(i32 %or400), !dbg !18436
  br i1 %272, label %cond.true401, label %cond.false509, !dbg !18436

cond.true401:                                     ; preds = %cond.end397
  %273 = load i8*, i8** %match_criteria, align 8, !dbg !18436
  %274 = bitcast i8* %273 to i32*, !dbg !18436
  %add.ptr402 = getelementptr i32, i32* %274, i64 17, !dbg !18436
  %275 = load i32, i32* %add.ptr402, align 4, !dbg !18436
  %276 = call i1 @llvm.is.constant.i32(i32 %275), !dbg !18436
  br i1 %276, label %cond.true403, label %cond.false419, !dbg !18436

cond.true403:                                     ; preds = %cond.true401
  %277 = load i8*, i8** %match_criteria, align 8, !dbg !18436
  %278 = bitcast i8* %277 to i32*, !dbg !18436
  %add.ptr404 = getelementptr i32, i32* %278, i64 17, !dbg !18436
  %279 = load i32, i32* %add.ptr404, align 4, !dbg !18436
  %and405 = and i32 %279, 255, !dbg !18436
  %shl406 = shl i32 %and405, 24, !dbg !18436
  %280 = load i8*, i8** %match_criteria, align 8, !dbg !18436
  %281 = bitcast i8* %280 to i32*, !dbg !18436
  %add.ptr407 = getelementptr i32, i32* %281, i64 17, !dbg !18436
  %282 = load i32, i32* %add.ptr407, align 4, !dbg !18436
  %and408 = and i32 %282, 65280, !dbg !18436
  %shl409 = shl i32 %and408, 8, !dbg !18436
  %or410 = or i32 %shl406, %shl409, !dbg !18436
  %283 = load i8*, i8** %match_criteria, align 8, !dbg !18436
  %284 = bitcast i8* %283 to i32*, !dbg !18436
  %add.ptr411 = getelementptr i32, i32* %284, i64 17, !dbg !18436
  %285 = load i32, i32* %add.ptr411, align 4, !dbg !18436
  %and412 = and i32 %285, 16711680, !dbg !18436
  %shr413 = lshr i32 %and412, 8, !dbg !18436
  %or414 = or i32 %or410, %shr413, !dbg !18436
  %286 = load i8*, i8** %match_criteria, align 8, !dbg !18436
  %287 = bitcast i8* %286 to i32*, !dbg !18436
  %add.ptr415 = getelementptr i32, i32* %287, i64 17, !dbg !18436
  %288 = load i32, i32* %add.ptr415, align 4, !dbg !18436
  %and416 = and i32 %288, -16777216, !dbg !18436
  %shr417 = lshr i32 %and416, 24, !dbg !18436
  %or418 = or i32 %or414, %shr417, !dbg !18436
  br label %cond.end422, !dbg !18436

cond.false419:                                    ; preds = %cond.true401
  %289 = load i8*, i8** %match_criteria, align 8, !dbg !18436
  %290 = bitcast i8* %289 to i32*, !dbg !18436
  %add.ptr420 = getelementptr i32, i32* %290, i64 17, !dbg !18436
  %291 = load i32, i32* %add.ptr420, align 4, !dbg !18436
  %call421 = call i32 @__fswab32(i32 %291) #10, !dbg !18436
  br label %cond.end422, !dbg !18436

cond.end422:                                      ; preds = %cond.false419, %cond.true403
  %cond423 = phi i32 [ %or418, %cond.true403 ], [ %call421, %cond.false419 ], !dbg !18436
  %and424 = and i32 %cond423, -65536, !dbg !18436
  %or425 = or i32 %and424, 65535, !dbg !18436
  %and426 = and i32 %or425, 255, !dbg !18436
  %shl427 = shl i32 %and426, 24, !dbg !18436
  %292 = load i8*, i8** %match_criteria, align 8, !dbg !18436
  %293 = bitcast i8* %292 to i32*, !dbg !18436
  %add.ptr428 = getelementptr i32, i32* %293, i64 17, !dbg !18436
  %294 = load i32, i32* %add.ptr428, align 4, !dbg !18436
  %295 = call i1 @llvm.is.constant.i32(i32 %294), !dbg !18436
  br i1 %295, label %cond.true429, label %cond.false445, !dbg !18436

cond.true429:                                     ; preds = %cond.end422
  %296 = load i8*, i8** %match_criteria, align 8, !dbg !18436
  %297 = bitcast i8* %296 to i32*, !dbg !18436
  %add.ptr430 = getelementptr i32, i32* %297, i64 17, !dbg !18436
  %298 = load i32, i32* %add.ptr430, align 4, !dbg !18436
  %and431 = and i32 %298, 255, !dbg !18436
  %shl432 = shl i32 %and431, 24, !dbg !18436
  %299 = load i8*, i8** %match_criteria, align 8, !dbg !18436
  %300 = bitcast i8* %299 to i32*, !dbg !18436
  %add.ptr433 = getelementptr i32, i32* %300, i64 17, !dbg !18436
  %301 = load i32, i32* %add.ptr433, align 4, !dbg !18436
  %and434 = and i32 %301, 65280, !dbg !18436
  %shl435 = shl i32 %and434, 8, !dbg !18436
  %or436 = or i32 %shl432, %shl435, !dbg !18436
  %302 = load i8*, i8** %match_criteria, align 8, !dbg !18436
  %303 = bitcast i8* %302 to i32*, !dbg !18436
  %add.ptr437 = getelementptr i32, i32* %303, i64 17, !dbg !18436
  %304 = load i32, i32* %add.ptr437, align 4, !dbg !18436
  %and438 = and i32 %304, 16711680, !dbg !18436
  %shr439 = lshr i32 %and438, 8, !dbg !18436
  %or440 = or i32 %or436, %shr439, !dbg !18436
  %305 = load i8*, i8** %match_criteria, align 8, !dbg !18436
  %306 = bitcast i8* %305 to i32*, !dbg !18436
  %add.ptr441 = getelementptr i32, i32* %306, i64 17, !dbg !18436
  %307 = load i32, i32* %add.ptr441, align 4, !dbg !18436
  %and442 = and i32 %307, -16777216, !dbg !18436
  %shr443 = lshr i32 %and442, 24, !dbg !18436
  %or444 = or i32 %or440, %shr443, !dbg !18436
  br label %cond.end448, !dbg !18436

cond.false445:                                    ; preds = %cond.end422
  %308 = load i8*, i8** %match_criteria, align 8, !dbg !18436
  %309 = bitcast i8* %308 to i32*, !dbg !18436
  %add.ptr446 = getelementptr i32, i32* %309, i64 17, !dbg !18436
  %310 = load i32, i32* %add.ptr446, align 4, !dbg !18436
  %call447 = call i32 @__fswab32(i32 %310) #10, !dbg !18436
  br label %cond.end448, !dbg !18436

cond.end448:                                      ; preds = %cond.false445, %cond.true429
  %cond449 = phi i32 [ %or444, %cond.true429 ], [ %call447, %cond.false445 ], !dbg !18436
  %and450 = and i32 %cond449, -65536, !dbg !18436
  %or451 = or i32 %and450, 65535, !dbg !18436
  %and452 = and i32 %or451, 65280, !dbg !18436
  %shl453 = shl i32 %and452, 8, !dbg !18436
  %or454 = or i32 %shl427, %shl453, !dbg !18436
  %311 = load i8*, i8** %match_criteria, align 8, !dbg !18436
  %312 = bitcast i8* %311 to i32*, !dbg !18436
  %add.ptr455 = getelementptr i32, i32* %312, i64 17, !dbg !18436
  %313 = load i32, i32* %add.ptr455, align 4, !dbg !18436
  %314 = call i1 @llvm.is.constant.i32(i32 %313), !dbg !18436
  br i1 %314, label %cond.true456, label %cond.false472, !dbg !18436

cond.true456:                                     ; preds = %cond.end448
  %315 = load i8*, i8** %match_criteria, align 8, !dbg !18436
  %316 = bitcast i8* %315 to i32*, !dbg !18436
  %add.ptr457 = getelementptr i32, i32* %316, i64 17, !dbg !18436
  %317 = load i32, i32* %add.ptr457, align 4, !dbg !18436
  %and458 = and i32 %317, 255, !dbg !18436
  %shl459 = shl i32 %and458, 24, !dbg !18436
  %318 = load i8*, i8** %match_criteria, align 8, !dbg !18436
  %319 = bitcast i8* %318 to i32*, !dbg !18436
  %add.ptr460 = getelementptr i32, i32* %319, i64 17, !dbg !18436
  %320 = load i32, i32* %add.ptr460, align 4, !dbg !18436
  %and461 = and i32 %320, 65280, !dbg !18436
  %shl462 = shl i32 %and461, 8, !dbg !18436
  %or463 = or i32 %shl459, %shl462, !dbg !18436
  %321 = load i8*, i8** %match_criteria, align 8, !dbg !18436
  %322 = bitcast i8* %321 to i32*, !dbg !18436
  %add.ptr464 = getelementptr i32, i32* %322, i64 17, !dbg !18436
  %323 = load i32, i32* %add.ptr464, align 4, !dbg !18436
  %and465 = and i32 %323, 16711680, !dbg !18436
  %shr466 = lshr i32 %and465, 8, !dbg !18436
  %or467 = or i32 %or463, %shr466, !dbg !18436
  %324 = load i8*, i8** %match_criteria, align 8, !dbg !18436
  %325 = bitcast i8* %324 to i32*, !dbg !18436
  %add.ptr468 = getelementptr i32, i32* %325, i64 17, !dbg !18436
  %326 = load i32, i32* %add.ptr468, align 4, !dbg !18436
  %and469 = and i32 %326, -16777216, !dbg !18436
  %shr470 = lshr i32 %and469, 24, !dbg !18436
  %or471 = or i32 %or467, %shr470, !dbg !18436
  br label %cond.end475, !dbg !18436

cond.false472:                                    ; preds = %cond.end448
  %327 = load i8*, i8** %match_criteria, align 8, !dbg !18436
  %328 = bitcast i8* %327 to i32*, !dbg !18436
  %add.ptr473 = getelementptr i32, i32* %328, i64 17, !dbg !18436
  %329 = load i32, i32* %add.ptr473, align 4, !dbg !18436
  %call474 = call i32 @__fswab32(i32 %329) #10, !dbg !18436
  br label %cond.end475, !dbg !18436

cond.end475:                                      ; preds = %cond.false472, %cond.true456
  %cond476 = phi i32 [ %or471, %cond.true456 ], [ %call474, %cond.false472 ], !dbg !18436
  %and477 = and i32 %cond476, -65536, !dbg !18436
  %or478 = or i32 %and477, 65535, !dbg !18436
  %and479 = and i32 %or478, 16711680, !dbg !18436
  %shr480 = lshr i32 %and479, 8, !dbg !18436
  %or481 = or i32 %or454, %shr480, !dbg !18436
  %330 = load i8*, i8** %match_criteria, align 8, !dbg !18436
  %331 = bitcast i8* %330 to i32*, !dbg !18436
  %add.ptr482 = getelementptr i32, i32* %331, i64 17, !dbg !18436
  %332 = load i32, i32* %add.ptr482, align 4, !dbg !18436
  %333 = call i1 @llvm.is.constant.i32(i32 %332), !dbg !18436
  br i1 %333, label %cond.true483, label %cond.false499, !dbg !18436

cond.true483:                                     ; preds = %cond.end475
  %334 = load i8*, i8** %match_criteria, align 8, !dbg !18436
  %335 = bitcast i8* %334 to i32*, !dbg !18436
  %add.ptr484 = getelementptr i32, i32* %335, i64 17, !dbg !18436
  %336 = load i32, i32* %add.ptr484, align 4, !dbg !18436
  %and485 = and i32 %336, 255, !dbg !18436
  %shl486 = shl i32 %and485, 24, !dbg !18436
  %337 = load i8*, i8** %match_criteria, align 8, !dbg !18436
  %338 = bitcast i8* %337 to i32*, !dbg !18436
  %add.ptr487 = getelementptr i32, i32* %338, i64 17, !dbg !18436
  %339 = load i32, i32* %add.ptr487, align 4, !dbg !18436
  %and488 = and i32 %339, 65280, !dbg !18436
  %shl489 = shl i32 %and488, 8, !dbg !18436
  %or490 = or i32 %shl486, %shl489, !dbg !18436
  %340 = load i8*, i8** %match_criteria, align 8, !dbg !18436
  %341 = bitcast i8* %340 to i32*, !dbg !18436
  %add.ptr491 = getelementptr i32, i32* %341, i64 17, !dbg !18436
  %342 = load i32, i32* %add.ptr491, align 4, !dbg !18436
  %and492 = and i32 %342, 16711680, !dbg !18436
  %shr493 = lshr i32 %and492, 8, !dbg !18436
  %or494 = or i32 %or490, %shr493, !dbg !18436
  %343 = load i8*, i8** %match_criteria, align 8, !dbg !18436
  %344 = bitcast i8* %343 to i32*, !dbg !18436
  %add.ptr495 = getelementptr i32, i32* %344, i64 17, !dbg !18436
  %345 = load i32, i32* %add.ptr495, align 4, !dbg !18436
  %and496 = and i32 %345, -16777216, !dbg !18436
  %shr497 = lshr i32 %and496, 24, !dbg !18436
  %or498 = or i32 %or494, %shr497, !dbg !18436
  br label %cond.end502, !dbg !18436

cond.false499:                                    ; preds = %cond.end475
  %346 = load i8*, i8** %match_criteria, align 8, !dbg !18436
  %347 = bitcast i8* %346 to i32*, !dbg !18436
  %add.ptr500 = getelementptr i32, i32* %347, i64 17, !dbg !18436
  %348 = load i32, i32* %add.ptr500, align 4, !dbg !18436
  %call501 = call i32 @__fswab32(i32 %348) #10, !dbg !18436
  br label %cond.end502, !dbg !18436

cond.end502:                                      ; preds = %cond.false499, %cond.true483
  %cond503 = phi i32 [ %or498, %cond.true483 ], [ %call501, %cond.false499 ], !dbg !18436
  %and504 = and i32 %cond503, -65536, !dbg !18436
  %or505 = or i32 %and504, 65535, !dbg !18436
  %and506 = and i32 %or505, -16777216, !dbg !18436
  %shr507 = lshr i32 %and506, 24, !dbg !18436
  %or508 = or i32 %or481, %shr507, !dbg !18436
  br label %cond.end535, !dbg !18436

cond.false509:                                    ; preds = %cond.end397
  %349 = load i8*, i8** %match_criteria, align 8, !dbg !18436
  %350 = bitcast i8* %349 to i32*, !dbg !18436
  %add.ptr510 = getelementptr i32, i32* %350, i64 17, !dbg !18436
  %351 = load i32, i32* %add.ptr510, align 4, !dbg !18436
  %352 = call i1 @llvm.is.constant.i32(i32 %351), !dbg !18436
  br i1 %352, label %cond.true511, label %cond.false527, !dbg !18436

cond.true511:                                     ; preds = %cond.false509
  %353 = load i8*, i8** %match_criteria, align 8, !dbg !18436
  %354 = bitcast i8* %353 to i32*, !dbg !18436
  %add.ptr512 = getelementptr i32, i32* %354, i64 17, !dbg !18436
  %355 = load i32, i32* %add.ptr512, align 4, !dbg !18436
  %and513 = and i32 %355, 255, !dbg !18436
  %shl514 = shl i32 %and513, 24, !dbg !18436
  %356 = load i8*, i8** %match_criteria, align 8, !dbg !18436
  %357 = bitcast i8* %356 to i32*, !dbg !18436
  %add.ptr515 = getelementptr i32, i32* %357, i64 17, !dbg !18436
  %358 = load i32, i32* %add.ptr515, align 4, !dbg !18436
  %and516 = and i32 %358, 65280, !dbg !18436
  %shl517 = shl i32 %and516, 8, !dbg !18436
  %or518 = or i32 %shl514, %shl517, !dbg !18436
  %359 = load i8*, i8** %match_criteria, align 8, !dbg !18436
  %360 = bitcast i8* %359 to i32*, !dbg !18436
  %add.ptr519 = getelementptr i32, i32* %360, i64 17, !dbg !18436
  %361 = load i32, i32* %add.ptr519, align 4, !dbg !18436
  %and520 = and i32 %361, 16711680, !dbg !18436
  %shr521 = lshr i32 %and520, 8, !dbg !18436
  %or522 = or i32 %or518, %shr521, !dbg !18436
  %362 = load i8*, i8** %match_criteria, align 8, !dbg !18436
  %363 = bitcast i8* %362 to i32*, !dbg !18436
  %add.ptr523 = getelementptr i32, i32* %363, i64 17, !dbg !18436
  %364 = load i32, i32* %add.ptr523, align 4, !dbg !18436
  %and524 = and i32 %364, -16777216, !dbg !18436
  %shr525 = lshr i32 %and524, 24, !dbg !18436
  %or526 = or i32 %or522, %shr525, !dbg !18436
  br label %cond.end530, !dbg !18436

cond.false527:                                    ; preds = %cond.false509
  %365 = load i8*, i8** %match_criteria, align 8, !dbg !18436
  %366 = bitcast i8* %365 to i32*, !dbg !18436
  %add.ptr528 = getelementptr i32, i32* %366, i64 17, !dbg !18436
  %367 = load i32, i32* %add.ptr528, align 4, !dbg !18436
  %call529 = call i32 @__fswab32(i32 %367) #10, !dbg !18436
  br label %cond.end530, !dbg !18436

cond.end530:                                      ; preds = %cond.false527, %cond.true511
  %cond531 = phi i32 [ %or526, %cond.true511 ], [ %call529, %cond.false527 ], !dbg !18436
  %and532 = and i32 %cond531, -65536, !dbg !18436
  %or533 = or i32 %and532, 65535, !dbg !18436
  %call534 = call i32 @__fswab32(i32 %or533) #10, !dbg !18436
  br label %cond.end535, !dbg !18436

cond.end535:                                      ; preds = %cond.end530, %cond.end502
  %cond536 = phi i32 [ %or508, %cond.end502 ], [ %call534, %cond.end530 ], !dbg !18436
  %368 = load i8*, i8** %match_criteria, align 8, !dbg !18436
  %369 = bitcast i8* %368 to i32*, !dbg !18436
  %add.ptr537 = getelementptr i32, i32* %369, i64 17, !dbg !18436
  store i32 %cond536, i32* %add.ptr537, align 4, !dbg !18436
  br label %do.end538, !dbg !18436

do.end538:                                        ; preds = %cond.end535
  %370 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !18440
  %total_vports539 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %370, i32 0, i32 8, !dbg !18441
  %371 = load i32, i32* %total_vports539, align 4, !dbg !18441
  %mul540 = mul i32 %371, 32, !dbg !18442
  %add541 = add i32 %mul540, 256, !dbg !18443
  store i32 %add541, i32* %ix, align 4, !dbg !18444
  br label %do.body542, !dbg !18445

do.body542:                                       ; preds = %do.end538
  call void @llvm.dbg.declare(metadata i32* %_v543, metadata !18446, metadata !DIExpression()), !dbg !18448
  store i32 0, i32* %_v543, align 4, !dbg !18448
  br label %do.body544, !dbg !18448

do.body544:                                       ; preds = %do.body542
  br label %do.end545, !dbg !18449

do.end545:                                        ; preds = %do.body544
  %372 = load i32*, i32** %flow_group_in, align 8, !dbg !18448
  %add.ptr546 = getelementptr i32, i32* %372, i64 7, !dbg !18448
  %373 = load i32, i32* %add.ptr546, align 4, !dbg !18448
  %374 = call i1 @llvm.is.constant.i32(i32 %373), !dbg !18448
  br i1 %374, label %cond.true547, label %cond.false563, !dbg !18448

cond.true547:                                     ; preds = %do.end545
  %375 = load i32*, i32** %flow_group_in, align 8, !dbg !18448
  %add.ptr548 = getelementptr i32, i32* %375, i64 7, !dbg !18448
  %376 = load i32, i32* %add.ptr548, align 4, !dbg !18448
  %and549 = and i32 %376, 255, !dbg !18448
  %shl550 = shl i32 %and549, 24, !dbg !18448
  %377 = load i32*, i32** %flow_group_in, align 8, !dbg !18448
  %add.ptr551 = getelementptr i32, i32* %377, i64 7, !dbg !18448
  %378 = load i32, i32* %add.ptr551, align 4, !dbg !18448
  %and552 = and i32 %378, 65280, !dbg !18448
  %shl553 = shl i32 %and552, 8, !dbg !18448
  %or554 = or i32 %shl550, %shl553, !dbg !18448
  %379 = load i32*, i32** %flow_group_in, align 8, !dbg !18448
  %add.ptr555 = getelementptr i32, i32* %379, i64 7, !dbg !18448
  %380 = load i32, i32* %add.ptr555, align 4, !dbg !18448
  %and556 = and i32 %380, 16711680, !dbg !18448
  %shr557 = lshr i32 %and556, 8, !dbg !18448
  %or558 = or i32 %or554, %shr557, !dbg !18448
  %381 = load i32*, i32** %flow_group_in, align 8, !dbg !18448
  %add.ptr559 = getelementptr i32, i32* %381, i64 7, !dbg !18448
  %382 = load i32, i32* %add.ptr559, align 4, !dbg !18448
  %and560 = and i32 %382, -16777216, !dbg !18448
  %shr561 = lshr i32 %and560, 24, !dbg !18448
  %or562 = or i32 %or558, %shr561, !dbg !18448
  br label %cond.end566, !dbg !18448

cond.false563:                                    ; preds = %do.end545
  %383 = load i32*, i32** %flow_group_in, align 8, !dbg !18448
  %add.ptr564 = getelementptr i32, i32* %383, i64 7, !dbg !18448
  %384 = load i32, i32* %add.ptr564, align 4, !dbg !18448
  %call565 = call i32 @__fswab32(i32 %384) #10, !dbg !18448
  br label %cond.end566, !dbg !18448

cond.end566:                                      ; preds = %cond.false563, %cond.true547
  %cond567 = phi i32 [ %or562, %cond.true547 ], [ %call565, %cond.false563 ], !dbg !18448
  %and568 = and i32 %cond567, 0, !dbg !18448
  %385 = load i32, i32* %_v543, align 4, !dbg !18448
  %shl569 = shl i32 %385, 0, !dbg !18448
  %or570 = or i32 %and568, %shl569, !dbg !18448
  %386 = call i1 @llvm.is.constant.i32(i32 %or570), !dbg !18448
  br i1 %386, label %cond.true571, label %cond.false683, !dbg !18448

cond.true571:                                     ; preds = %cond.end566
  %387 = load i32*, i32** %flow_group_in, align 8, !dbg !18448
  %add.ptr572 = getelementptr i32, i32* %387, i64 7, !dbg !18448
  %388 = load i32, i32* %add.ptr572, align 4, !dbg !18448
  %389 = call i1 @llvm.is.constant.i32(i32 %388), !dbg !18448
  br i1 %389, label %cond.true573, label %cond.false589, !dbg !18448

cond.true573:                                     ; preds = %cond.true571
  %390 = load i32*, i32** %flow_group_in, align 8, !dbg !18448
  %add.ptr574 = getelementptr i32, i32* %390, i64 7, !dbg !18448
  %391 = load i32, i32* %add.ptr574, align 4, !dbg !18448
  %and575 = and i32 %391, 255, !dbg !18448
  %shl576 = shl i32 %and575, 24, !dbg !18448
  %392 = load i32*, i32** %flow_group_in, align 8, !dbg !18448
  %add.ptr577 = getelementptr i32, i32* %392, i64 7, !dbg !18448
  %393 = load i32, i32* %add.ptr577, align 4, !dbg !18448
  %and578 = and i32 %393, 65280, !dbg !18448
  %shl579 = shl i32 %and578, 8, !dbg !18448
  %or580 = or i32 %shl576, %shl579, !dbg !18448
  %394 = load i32*, i32** %flow_group_in, align 8, !dbg !18448
  %add.ptr581 = getelementptr i32, i32* %394, i64 7, !dbg !18448
  %395 = load i32, i32* %add.ptr581, align 4, !dbg !18448
  %and582 = and i32 %395, 16711680, !dbg !18448
  %shr583 = lshr i32 %and582, 8, !dbg !18448
  %or584 = or i32 %or580, %shr583, !dbg !18448
  %396 = load i32*, i32** %flow_group_in, align 8, !dbg !18448
  %add.ptr585 = getelementptr i32, i32* %396, i64 7, !dbg !18448
  %397 = load i32, i32* %add.ptr585, align 4, !dbg !18448
  %and586 = and i32 %397, -16777216, !dbg !18448
  %shr587 = lshr i32 %and586, 24, !dbg !18448
  %or588 = or i32 %or584, %shr587, !dbg !18448
  br label %cond.end592, !dbg !18448

cond.false589:                                    ; preds = %cond.true571
  %398 = load i32*, i32** %flow_group_in, align 8, !dbg !18448
  %add.ptr590 = getelementptr i32, i32* %398, i64 7, !dbg !18448
  %399 = load i32, i32* %add.ptr590, align 4, !dbg !18448
  %call591 = call i32 @__fswab32(i32 %399) #10, !dbg !18448
  br label %cond.end592, !dbg !18448

cond.end592:                                      ; preds = %cond.false589, %cond.true573
  %cond593 = phi i32 [ %or588, %cond.true573 ], [ %call591, %cond.false589 ], !dbg !18448
  %and594 = and i32 %cond593, 0, !dbg !18448
  %400 = load i32, i32* %_v543, align 4, !dbg !18448
  %shl595 = shl i32 %400, 0, !dbg !18448
  %or596 = or i32 %and594, %shl595, !dbg !18448
  %and597 = and i32 %or596, 255, !dbg !18448
  %shl598 = shl i32 %and597, 24, !dbg !18448
  %401 = load i32*, i32** %flow_group_in, align 8, !dbg !18448
  %add.ptr599 = getelementptr i32, i32* %401, i64 7, !dbg !18448
  %402 = load i32, i32* %add.ptr599, align 4, !dbg !18448
  %403 = call i1 @llvm.is.constant.i32(i32 %402), !dbg !18448
  br i1 %403, label %cond.true600, label %cond.false616, !dbg !18448

cond.true600:                                     ; preds = %cond.end592
  %404 = load i32*, i32** %flow_group_in, align 8, !dbg !18448
  %add.ptr601 = getelementptr i32, i32* %404, i64 7, !dbg !18448
  %405 = load i32, i32* %add.ptr601, align 4, !dbg !18448
  %and602 = and i32 %405, 255, !dbg !18448
  %shl603 = shl i32 %and602, 24, !dbg !18448
  %406 = load i32*, i32** %flow_group_in, align 8, !dbg !18448
  %add.ptr604 = getelementptr i32, i32* %406, i64 7, !dbg !18448
  %407 = load i32, i32* %add.ptr604, align 4, !dbg !18448
  %and605 = and i32 %407, 65280, !dbg !18448
  %shl606 = shl i32 %and605, 8, !dbg !18448
  %or607 = or i32 %shl603, %shl606, !dbg !18448
  %408 = load i32*, i32** %flow_group_in, align 8, !dbg !18448
  %add.ptr608 = getelementptr i32, i32* %408, i64 7, !dbg !18448
  %409 = load i32, i32* %add.ptr608, align 4, !dbg !18448
  %and609 = and i32 %409, 16711680, !dbg !18448
  %shr610 = lshr i32 %and609, 8, !dbg !18448
  %or611 = or i32 %or607, %shr610, !dbg !18448
  %410 = load i32*, i32** %flow_group_in, align 8, !dbg !18448
  %add.ptr612 = getelementptr i32, i32* %410, i64 7, !dbg !18448
  %411 = load i32, i32* %add.ptr612, align 4, !dbg !18448
  %and613 = and i32 %411, -16777216, !dbg !18448
  %shr614 = lshr i32 %and613, 24, !dbg !18448
  %or615 = or i32 %or611, %shr614, !dbg !18448
  br label %cond.end619, !dbg !18448

cond.false616:                                    ; preds = %cond.end592
  %412 = load i32*, i32** %flow_group_in, align 8, !dbg !18448
  %add.ptr617 = getelementptr i32, i32* %412, i64 7, !dbg !18448
  %413 = load i32, i32* %add.ptr617, align 4, !dbg !18448
  %call618 = call i32 @__fswab32(i32 %413) #10, !dbg !18448
  br label %cond.end619, !dbg !18448

cond.end619:                                      ; preds = %cond.false616, %cond.true600
  %cond620 = phi i32 [ %or615, %cond.true600 ], [ %call618, %cond.false616 ], !dbg !18448
  %and621 = and i32 %cond620, 0, !dbg !18448
  %414 = load i32, i32* %_v543, align 4, !dbg !18448
  %shl622 = shl i32 %414, 0, !dbg !18448
  %or623 = or i32 %and621, %shl622, !dbg !18448
  %and624 = and i32 %or623, 65280, !dbg !18448
  %shl625 = shl i32 %and624, 8, !dbg !18448
  %or626 = or i32 %shl598, %shl625, !dbg !18448
  %415 = load i32*, i32** %flow_group_in, align 8, !dbg !18448
  %add.ptr627 = getelementptr i32, i32* %415, i64 7, !dbg !18448
  %416 = load i32, i32* %add.ptr627, align 4, !dbg !18448
  %417 = call i1 @llvm.is.constant.i32(i32 %416), !dbg !18448
  br i1 %417, label %cond.true628, label %cond.false644, !dbg !18448

cond.true628:                                     ; preds = %cond.end619
  %418 = load i32*, i32** %flow_group_in, align 8, !dbg !18448
  %add.ptr629 = getelementptr i32, i32* %418, i64 7, !dbg !18448
  %419 = load i32, i32* %add.ptr629, align 4, !dbg !18448
  %and630 = and i32 %419, 255, !dbg !18448
  %shl631 = shl i32 %and630, 24, !dbg !18448
  %420 = load i32*, i32** %flow_group_in, align 8, !dbg !18448
  %add.ptr632 = getelementptr i32, i32* %420, i64 7, !dbg !18448
  %421 = load i32, i32* %add.ptr632, align 4, !dbg !18448
  %and633 = and i32 %421, 65280, !dbg !18448
  %shl634 = shl i32 %and633, 8, !dbg !18448
  %or635 = or i32 %shl631, %shl634, !dbg !18448
  %422 = load i32*, i32** %flow_group_in, align 8, !dbg !18448
  %add.ptr636 = getelementptr i32, i32* %422, i64 7, !dbg !18448
  %423 = load i32, i32* %add.ptr636, align 4, !dbg !18448
  %and637 = and i32 %423, 16711680, !dbg !18448
  %shr638 = lshr i32 %and637, 8, !dbg !18448
  %or639 = or i32 %or635, %shr638, !dbg !18448
  %424 = load i32*, i32** %flow_group_in, align 8, !dbg !18448
  %add.ptr640 = getelementptr i32, i32* %424, i64 7, !dbg !18448
  %425 = load i32, i32* %add.ptr640, align 4, !dbg !18448
  %and641 = and i32 %425, -16777216, !dbg !18448
  %shr642 = lshr i32 %and641, 24, !dbg !18448
  %or643 = or i32 %or639, %shr642, !dbg !18448
  br label %cond.end647, !dbg !18448

cond.false644:                                    ; preds = %cond.end619
  %426 = load i32*, i32** %flow_group_in, align 8, !dbg !18448
  %add.ptr645 = getelementptr i32, i32* %426, i64 7, !dbg !18448
  %427 = load i32, i32* %add.ptr645, align 4, !dbg !18448
  %call646 = call i32 @__fswab32(i32 %427) #10, !dbg !18448
  br label %cond.end647, !dbg !18448

cond.end647:                                      ; preds = %cond.false644, %cond.true628
  %cond648 = phi i32 [ %or643, %cond.true628 ], [ %call646, %cond.false644 ], !dbg !18448
  %and649 = and i32 %cond648, 0, !dbg !18448
  %428 = load i32, i32* %_v543, align 4, !dbg !18448
  %shl650 = shl i32 %428, 0, !dbg !18448
  %or651 = or i32 %and649, %shl650, !dbg !18448
  %and652 = and i32 %or651, 16711680, !dbg !18448
  %shr653 = lshr i32 %and652, 8, !dbg !18448
  %or654 = or i32 %or626, %shr653, !dbg !18448
  %429 = load i32*, i32** %flow_group_in, align 8, !dbg !18448
  %add.ptr655 = getelementptr i32, i32* %429, i64 7, !dbg !18448
  %430 = load i32, i32* %add.ptr655, align 4, !dbg !18448
  %431 = call i1 @llvm.is.constant.i32(i32 %430), !dbg !18448
  br i1 %431, label %cond.true656, label %cond.false672, !dbg !18448

cond.true656:                                     ; preds = %cond.end647
  %432 = load i32*, i32** %flow_group_in, align 8, !dbg !18448
  %add.ptr657 = getelementptr i32, i32* %432, i64 7, !dbg !18448
  %433 = load i32, i32* %add.ptr657, align 4, !dbg !18448
  %and658 = and i32 %433, 255, !dbg !18448
  %shl659 = shl i32 %and658, 24, !dbg !18448
  %434 = load i32*, i32** %flow_group_in, align 8, !dbg !18448
  %add.ptr660 = getelementptr i32, i32* %434, i64 7, !dbg !18448
  %435 = load i32, i32* %add.ptr660, align 4, !dbg !18448
  %and661 = and i32 %435, 65280, !dbg !18448
  %shl662 = shl i32 %and661, 8, !dbg !18448
  %or663 = or i32 %shl659, %shl662, !dbg !18448
  %436 = load i32*, i32** %flow_group_in, align 8, !dbg !18448
  %add.ptr664 = getelementptr i32, i32* %436, i64 7, !dbg !18448
  %437 = load i32, i32* %add.ptr664, align 4, !dbg !18448
  %and665 = and i32 %437, 16711680, !dbg !18448
  %shr666 = lshr i32 %and665, 8, !dbg !18448
  %or667 = or i32 %or663, %shr666, !dbg !18448
  %438 = load i32*, i32** %flow_group_in, align 8, !dbg !18448
  %add.ptr668 = getelementptr i32, i32* %438, i64 7, !dbg !18448
  %439 = load i32, i32* %add.ptr668, align 4, !dbg !18448
  %and669 = and i32 %439, -16777216, !dbg !18448
  %shr670 = lshr i32 %and669, 24, !dbg !18448
  %or671 = or i32 %or667, %shr670, !dbg !18448
  br label %cond.end675, !dbg !18448

cond.false672:                                    ; preds = %cond.end647
  %440 = load i32*, i32** %flow_group_in, align 8, !dbg !18448
  %add.ptr673 = getelementptr i32, i32* %440, i64 7, !dbg !18448
  %441 = load i32, i32* %add.ptr673, align 4, !dbg !18448
  %call674 = call i32 @__fswab32(i32 %441) #10, !dbg !18448
  br label %cond.end675, !dbg !18448

cond.end675:                                      ; preds = %cond.false672, %cond.true656
  %cond676 = phi i32 [ %or671, %cond.true656 ], [ %call674, %cond.false672 ], !dbg !18448
  %and677 = and i32 %cond676, 0, !dbg !18448
  %442 = load i32, i32* %_v543, align 4, !dbg !18448
  %shl678 = shl i32 %442, 0, !dbg !18448
  %or679 = or i32 %and677, %shl678, !dbg !18448
  %and680 = and i32 %or679, -16777216, !dbg !18448
  %shr681 = lshr i32 %and680, 24, !dbg !18448
  %or682 = or i32 %or654, %shr681, !dbg !18448
  br label %cond.end710, !dbg !18448

cond.false683:                                    ; preds = %cond.end566
  %443 = load i32*, i32** %flow_group_in, align 8, !dbg !18448
  %add.ptr684 = getelementptr i32, i32* %443, i64 7, !dbg !18448
  %444 = load i32, i32* %add.ptr684, align 4, !dbg !18448
  %445 = call i1 @llvm.is.constant.i32(i32 %444), !dbg !18448
  br i1 %445, label %cond.true685, label %cond.false701, !dbg !18448

cond.true685:                                     ; preds = %cond.false683
  %446 = load i32*, i32** %flow_group_in, align 8, !dbg !18448
  %add.ptr686 = getelementptr i32, i32* %446, i64 7, !dbg !18448
  %447 = load i32, i32* %add.ptr686, align 4, !dbg !18448
  %and687 = and i32 %447, 255, !dbg !18448
  %shl688 = shl i32 %and687, 24, !dbg !18448
  %448 = load i32*, i32** %flow_group_in, align 8, !dbg !18448
  %add.ptr689 = getelementptr i32, i32* %448, i64 7, !dbg !18448
  %449 = load i32, i32* %add.ptr689, align 4, !dbg !18448
  %and690 = and i32 %449, 65280, !dbg !18448
  %shl691 = shl i32 %and690, 8, !dbg !18448
  %or692 = or i32 %shl688, %shl691, !dbg !18448
  %450 = load i32*, i32** %flow_group_in, align 8, !dbg !18448
  %add.ptr693 = getelementptr i32, i32* %450, i64 7, !dbg !18448
  %451 = load i32, i32* %add.ptr693, align 4, !dbg !18448
  %and694 = and i32 %451, 16711680, !dbg !18448
  %shr695 = lshr i32 %and694, 8, !dbg !18448
  %or696 = or i32 %or692, %shr695, !dbg !18448
  %452 = load i32*, i32** %flow_group_in, align 8, !dbg !18448
  %add.ptr697 = getelementptr i32, i32* %452, i64 7, !dbg !18448
  %453 = load i32, i32* %add.ptr697, align 4, !dbg !18448
  %and698 = and i32 %453, -16777216, !dbg !18448
  %shr699 = lshr i32 %and698, 24, !dbg !18448
  %or700 = or i32 %or696, %shr699, !dbg !18448
  br label %cond.end704, !dbg !18448

cond.false701:                                    ; preds = %cond.false683
  %454 = load i32*, i32** %flow_group_in, align 8, !dbg !18448
  %add.ptr702 = getelementptr i32, i32* %454, i64 7, !dbg !18448
  %455 = load i32, i32* %add.ptr702, align 4, !dbg !18448
  %call703 = call i32 @__fswab32(i32 %455) #10, !dbg !18448
  br label %cond.end704, !dbg !18448

cond.end704:                                      ; preds = %cond.false701, %cond.true685
  %cond705 = phi i32 [ %or700, %cond.true685 ], [ %call703, %cond.false701 ], !dbg !18448
  %and706 = and i32 %cond705, 0, !dbg !18448
  %456 = load i32, i32* %_v543, align 4, !dbg !18448
  %shl707 = shl i32 %456, 0, !dbg !18448
  %or708 = or i32 %and706, %shl707, !dbg !18448
  %call709 = call i32 @__fswab32(i32 %or708) #10, !dbg !18448
  br label %cond.end710, !dbg !18448

cond.end710:                                      ; preds = %cond.end704, %cond.end675
  %cond711 = phi i32 [ %or682, %cond.end675 ], [ %call709, %cond.end704 ], !dbg !18448
  %457 = load i32*, i32** %flow_group_in, align 8, !dbg !18448
  %add.ptr712 = getelementptr i32, i32* %457, i64 7, !dbg !18448
  store i32 %cond711, i32* %add.ptr712, align 4, !dbg !18448
  br label %do.end713, !dbg !18448

do.end713:                                        ; preds = %cond.end710
  br label %do.body714, !dbg !18451

do.body714:                                       ; preds = %do.end713
  call void @llvm.dbg.declare(metadata i32* %_v715, metadata !18452, metadata !DIExpression()), !dbg !18454
  %458 = load i32, i32* %ix, align 4, !dbg !18454
  %sub = sub i32 %458, 1, !dbg !18454
  store i32 %sub, i32* %_v715, align 4, !dbg !18454
  br label %do.body716, !dbg !18454

do.body716:                                       ; preds = %do.body714
  br label %do.end717, !dbg !18455

do.end717:                                        ; preds = %do.body716
  %459 = load i32*, i32** %flow_group_in, align 8, !dbg !18454
  %add.ptr718 = getelementptr i32, i32* %459, i64 9, !dbg !18454
  %460 = load i32, i32* %add.ptr718, align 4, !dbg !18454
  %461 = call i1 @llvm.is.constant.i32(i32 %460), !dbg !18454
  br i1 %461, label %cond.true719, label %cond.false735, !dbg !18454

cond.true719:                                     ; preds = %do.end717
  %462 = load i32*, i32** %flow_group_in, align 8, !dbg !18454
  %add.ptr720 = getelementptr i32, i32* %462, i64 9, !dbg !18454
  %463 = load i32, i32* %add.ptr720, align 4, !dbg !18454
  %and721 = and i32 %463, 255, !dbg !18454
  %shl722 = shl i32 %and721, 24, !dbg !18454
  %464 = load i32*, i32** %flow_group_in, align 8, !dbg !18454
  %add.ptr723 = getelementptr i32, i32* %464, i64 9, !dbg !18454
  %465 = load i32, i32* %add.ptr723, align 4, !dbg !18454
  %and724 = and i32 %465, 65280, !dbg !18454
  %shl725 = shl i32 %and724, 8, !dbg !18454
  %or726 = or i32 %shl722, %shl725, !dbg !18454
  %466 = load i32*, i32** %flow_group_in, align 8, !dbg !18454
  %add.ptr727 = getelementptr i32, i32* %466, i64 9, !dbg !18454
  %467 = load i32, i32* %add.ptr727, align 4, !dbg !18454
  %and728 = and i32 %467, 16711680, !dbg !18454
  %shr729 = lshr i32 %and728, 8, !dbg !18454
  %or730 = or i32 %or726, %shr729, !dbg !18454
  %468 = load i32*, i32** %flow_group_in, align 8, !dbg !18454
  %add.ptr731 = getelementptr i32, i32* %468, i64 9, !dbg !18454
  %469 = load i32, i32* %add.ptr731, align 4, !dbg !18454
  %and732 = and i32 %469, -16777216, !dbg !18454
  %shr733 = lshr i32 %and732, 24, !dbg !18454
  %or734 = or i32 %or730, %shr733, !dbg !18454
  br label %cond.end738, !dbg !18454

cond.false735:                                    ; preds = %do.end717
  %470 = load i32*, i32** %flow_group_in, align 8, !dbg !18454
  %add.ptr736 = getelementptr i32, i32* %470, i64 9, !dbg !18454
  %471 = load i32, i32* %add.ptr736, align 4, !dbg !18454
  %call737 = call i32 @__fswab32(i32 %471) #10, !dbg !18454
  br label %cond.end738, !dbg !18454

cond.end738:                                      ; preds = %cond.false735, %cond.true719
  %cond739 = phi i32 [ %or734, %cond.true719 ], [ %call737, %cond.false735 ], !dbg !18454
  %and740 = and i32 %cond739, 0, !dbg !18454
  %472 = load i32, i32* %_v715, align 4, !dbg !18454
  %shl741 = shl i32 %472, 0, !dbg !18454
  %or742 = or i32 %and740, %shl741, !dbg !18454
  %473 = call i1 @llvm.is.constant.i32(i32 %or742), !dbg !18454
  br i1 %473, label %cond.true743, label %cond.false855, !dbg !18454

cond.true743:                                     ; preds = %cond.end738
  %474 = load i32*, i32** %flow_group_in, align 8, !dbg !18454
  %add.ptr744 = getelementptr i32, i32* %474, i64 9, !dbg !18454
  %475 = load i32, i32* %add.ptr744, align 4, !dbg !18454
  %476 = call i1 @llvm.is.constant.i32(i32 %475), !dbg !18454
  br i1 %476, label %cond.true745, label %cond.false761, !dbg !18454

cond.true745:                                     ; preds = %cond.true743
  %477 = load i32*, i32** %flow_group_in, align 8, !dbg !18454
  %add.ptr746 = getelementptr i32, i32* %477, i64 9, !dbg !18454
  %478 = load i32, i32* %add.ptr746, align 4, !dbg !18454
  %and747 = and i32 %478, 255, !dbg !18454
  %shl748 = shl i32 %and747, 24, !dbg !18454
  %479 = load i32*, i32** %flow_group_in, align 8, !dbg !18454
  %add.ptr749 = getelementptr i32, i32* %479, i64 9, !dbg !18454
  %480 = load i32, i32* %add.ptr749, align 4, !dbg !18454
  %and750 = and i32 %480, 65280, !dbg !18454
  %shl751 = shl i32 %and750, 8, !dbg !18454
  %or752 = or i32 %shl748, %shl751, !dbg !18454
  %481 = load i32*, i32** %flow_group_in, align 8, !dbg !18454
  %add.ptr753 = getelementptr i32, i32* %481, i64 9, !dbg !18454
  %482 = load i32, i32* %add.ptr753, align 4, !dbg !18454
  %and754 = and i32 %482, 16711680, !dbg !18454
  %shr755 = lshr i32 %and754, 8, !dbg !18454
  %or756 = or i32 %or752, %shr755, !dbg !18454
  %483 = load i32*, i32** %flow_group_in, align 8, !dbg !18454
  %add.ptr757 = getelementptr i32, i32* %483, i64 9, !dbg !18454
  %484 = load i32, i32* %add.ptr757, align 4, !dbg !18454
  %and758 = and i32 %484, -16777216, !dbg !18454
  %shr759 = lshr i32 %and758, 24, !dbg !18454
  %or760 = or i32 %or756, %shr759, !dbg !18454
  br label %cond.end764, !dbg !18454

cond.false761:                                    ; preds = %cond.true743
  %485 = load i32*, i32** %flow_group_in, align 8, !dbg !18454
  %add.ptr762 = getelementptr i32, i32* %485, i64 9, !dbg !18454
  %486 = load i32, i32* %add.ptr762, align 4, !dbg !18454
  %call763 = call i32 @__fswab32(i32 %486) #10, !dbg !18454
  br label %cond.end764, !dbg !18454

cond.end764:                                      ; preds = %cond.false761, %cond.true745
  %cond765 = phi i32 [ %or760, %cond.true745 ], [ %call763, %cond.false761 ], !dbg !18454
  %and766 = and i32 %cond765, 0, !dbg !18454
  %487 = load i32, i32* %_v715, align 4, !dbg !18454
  %shl767 = shl i32 %487, 0, !dbg !18454
  %or768 = or i32 %and766, %shl767, !dbg !18454
  %and769 = and i32 %or768, 255, !dbg !18454
  %shl770 = shl i32 %and769, 24, !dbg !18454
  %488 = load i32*, i32** %flow_group_in, align 8, !dbg !18454
  %add.ptr771 = getelementptr i32, i32* %488, i64 9, !dbg !18454
  %489 = load i32, i32* %add.ptr771, align 4, !dbg !18454
  %490 = call i1 @llvm.is.constant.i32(i32 %489), !dbg !18454
  br i1 %490, label %cond.true772, label %cond.false788, !dbg !18454

cond.true772:                                     ; preds = %cond.end764
  %491 = load i32*, i32** %flow_group_in, align 8, !dbg !18454
  %add.ptr773 = getelementptr i32, i32* %491, i64 9, !dbg !18454
  %492 = load i32, i32* %add.ptr773, align 4, !dbg !18454
  %and774 = and i32 %492, 255, !dbg !18454
  %shl775 = shl i32 %and774, 24, !dbg !18454
  %493 = load i32*, i32** %flow_group_in, align 8, !dbg !18454
  %add.ptr776 = getelementptr i32, i32* %493, i64 9, !dbg !18454
  %494 = load i32, i32* %add.ptr776, align 4, !dbg !18454
  %and777 = and i32 %494, 65280, !dbg !18454
  %shl778 = shl i32 %and777, 8, !dbg !18454
  %or779 = or i32 %shl775, %shl778, !dbg !18454
  %495 = load i32*, i32** %flow_group_in, align 8, !dbg !18454
  %add.ptr780 = getelementptr i32, i32* %495, i64 9, !dbg !18454
  %496 = load i32, i32* %add.ptr780, align 4, !dbg !18454
  %and781 = and i32 %496, 16711680, !dbg !18454
  %shr782 = lshr i32 %and781, 8, !dbg !18454
  %or783 = or i32 %or779, %shr782, !dbg !18454
  %497 = load i32*, i32** %flow_group_in, align 8, !dbg !18454
  %add.ptr784 = getelementptr i32, i32* %497, i64 9, !dbg !18454
  %498 = load i32, i32* %add.ptr784, align 4, !dbg !18454
  %and785 = and i32 %498, -16777216, !dbg !18454
  %shr786 = lshr i32 %and785, 24, !dbg !18454
  %or787 = or i32 %or783, %shr786, !dbg !18454
  br label %cond.end791, !dbg !18454

cond.false788:                                    ; preds = %cond.end764
  %499 = load i32*, i32** %flow_group_in, align 8, !dbg !18454
  %add.ptr789 = getelementptr i32, i32* %499, i64 9, !dbg !18454
  %500 = load i32, i32* %add.ptr789, align 4, !dbg !18454
  %call790 = call i32 @__fswab32(i32 %500) #10, !dbg !18454
  br label %cond.end791, !dbg !18454

cond.end791:                                      ; preds = %cond.false788, %cond.true772
  %cond792 = phi i32 [ %or787, %cond.true772 ], [ %call790, %cond.false788 ], !dbg !18454
  %and793 = and i32 %cond792, 0, !dbg !18454
  %501 = load i32, i32* %_v715, align 4, !dbg !18454
  %shl794 = shl i32 %501, 0, !dbg !18454
  %or795 = or i32 %and793, %shl794, !dbg !18454
  %and796 = and i32 %or795, 65280, !dbg !18454
  %shl797 = shl i32 %and796, 8, !dbg !18454
  %or798 = or i32 %shl770, %shl797, !dbg !18454
  %502 = load i32*, i32** %flow_group_in, align 8, !dbg !18454
  %add.ptr799 = getelementptr i32, i32* %502, i64 9, !dbg !18454
  %503 = load i32, i32* %add.ptr799, align 4, !dbg !18454
  %504 = call i1 @llvm.is.constant.i32(i32 %503), !dbg !18454
  br i1 %504, label %cond.true800, label %cond.false816, !dbg !18454

cond.true800:                                     ; preds = %cond.end791
  %505 = load i32*, i32** %flow_group_in, align 8, !dbg !18454
  %add.ptr801 = getelementptr i32, i32* %505, i64 9, !dbg !18454
  %506 = load i32, i32* %add.ptr801, align 4, !dbg !18454
  %and802 = and i32 %506, 255, !dbg !18454
  %shl803 = shl i32 %and802, 24, !dbg !18454
  %507 = load i32*, i32** %flow_group_in, align 8, !dbg !18454
  %add.ptr804 = getelementptr i32, i32* %507, i64 9, !dbg !18454
  %508 = load i32, i32* %add.ptr804, align 4, !dbg !18454
  %and805 = and i32 %508, 65280, !dbg !18454
  %shl806 = shl i32 %and805, 8, !dbg !18454
  %or807 = or i32 %shl803, %shl806, !dbg !18454
  %509 = load i32*, i32** %flow_group_in, align 8, !dbg !18454
  %add.ptr808 = getelementptr i32, i32* %509, i64 9, !dbg !18454
  %510 = load i32, i32* %add.ptr808, align 4, !dbg !18454
  %and809 = and i32 %510, 16711680, !dbg !18454
  %shr810 = lshr i32 %and809, 8, !dbg !18454
  %or811 = or i32 %or807, %shr810, !dbg !18454
  %511 = load i32*, i32** %flow_group_in, align 8, !dbg !18454
  %add.ptr812 = getelementptr i32, i32* %511, i64 9, !dbg !18454
  %512 = load i32, i32* %add.ptr812, align 4, !dbg !18454
  %and813 = and i32 %512, -16777216, !dbg !18454
  %shr814 = lshr i32 %and813, 24, !dbg !18454
  %or815 = or i32 %or811, %shr814, !dbg !18454
  br label %cond.end819, !dbg !18454

cond.false816:                                    ; preds = %cond.end791
  %513 = load i32*, i32** %flow_group_in, align 8, !dbg !18454
  %add.ptr817 = getelementptr i32, i32* %513, i64 9, !dbg !18454
  %514 = load i32, i32* %add.ptr817, align 4, !dbg !18454
  %call818 = call i32 @__fswab32(i32 %514) #10, !dbg !18454
  br label %cond.end819, !dbg !18454

cond.end819:                                      ; preds = %cond.false816, %cond.true800
  %cond820 = phi i32 [ %or815, %cond.true800 ], [ %call818, %cond.false816 ], !dbg !18454
  %and821 = and i32 %cond820, 0, !dbg !18454
  %515 = load i32, i32* %_v715, align 4, !dbg !18454
  %shl822 = shl i32 %515, 0, !dbg !18454
  %or823 = or i32 %and821, %shl822, !dbg !18454
  %and824 = and i32 %or823, 16711680, !dbg !18454
  %shr825 = lshr i32 %and824, 8, !dbg !18454
  %or826 = or i32 %or798, %shr825, !dbg !18454
  %516 = load i32*, i32** %flow_group_in, align 8, !dbg !18454
  %add.ptr827 = getelementptr i32, i32* %516, i64 9, !dbg !18454
  %517 = load i32, i32* %add.ptr827, align 4, !dbg !18454
  %518 = call i1 @llvm.is.constant.i32(i32 %517), !dbg !18454
  br i1 %518, label %cond.true828, label %cond.false844, !dbg !18454

cond.true828:                                     ; preds = %cond.end819
  %519 = load i32*, i32** %flow_group_in, align 8, !dbg !18454
  %add.ptr829 = getelementptr i32, i32* %519, i64 9, !dbg !18454
  %520 = load i32, i32* %add.ptr829, align 4, !dbg !18454
  %and830 = and i32 %520, 255, !dbg !18454
  %shl831 = shl i32 %and830, 24, !dbg !18454
  %521 = load i32*, i32** %flow_group_in, align 8, !dbg !18454
  %add.ptr832 = getelementptr i32, i32* %521, i64 9, !dbg !18454
  %522 = load i32, i32* %add.ptr832, align 4, !dbg !18454
  %and833 = and i32 %522, 65280, !dbg !18454
  %shl834 = shl i32 %and833, 8, !dbg !18454
  %or835 = or i32 %shl831, %shl834, !dbg !18454
  %523 = load i32*, i32** %flow_group_in, align 8, !dbg !18454
  %add.ptr836 = getelementptr i32, i32* %523, i64 9, !dbg !18454
  %524 = load i32, i32* %add.ptr836, align 4, !dbg !18454
  %and837 = and i32 %524, 16711680, !dbg !18454
  %shr838 = lshr i32 %and837, 8, !dbg !18454
  %or839 = or i32 %or835, %shr838, !dbg !18454
  %525 = load i32*, i32** %flow_group_in, align 8, !dbg !18454
  %add.ptr840 = getelementptr i32, i32* %525, i64 9, !dbg !18454
  %526 = load i32, i32* %add.ptr840, align 4, !dbg !18454
  %and841 = and i32 %526, -16777216, !dbg !18454
  %shr842 = lshr i32 %and841, 24, !dbg !18454
  %or843 = or i32 %or839, %shr842, !dbg !18454
  br label %cond.end847, !dbg !18454

cond.false844:                                    ; preds = %cond.end819
  %527 = load i32*, i32** %flow_group_in, align 8, !dbg !18454
  %add.ptr845 = getelementptr i32, i32* %527, i64 9, !dbg !18454
  %528 = load i32, i32* %add.ptr845, align 4, !dbg !18454
  %call846 = call i32 @__fswab32(i32 %528) #10, !dbg !18454
  br label %cond.end847, !dbg !18454

cond.end847:                                      ; preds = %cond.false844, %cond.true828
  %cond848 = phi i32 [ %or843, %cond.true828 ], [ %call846, %cond.false844 ], !dbg !18454
  %and849 = and i32 %cond848, 0, !dbg !18454
  %529 = load i32, i32* %_v715, align 4, !dbg !18454
  %shl850 = shl i32 %529, 0, !dbg !18454
  %or851 = or i32 %and849, %shl850, !dbg !18454
  %and852 = and i32 %or851, -16777216, !dbg !18454
  %shr853 = lshr i32 %and852, 24, !dbg !18454
  %or854 = or i32 %or826, %shr853, !dbg !18454
  br label %cond.end882, !dbg !18454

cond.false855:                                    ; preds = %cond.end738
  %530 = load i32*, i32** %flow_group_in, align 8, !dbg !18454
  %add.ptr856 = getelementptr i32, i32* %530, i64 9, !dbg !18454
  %531 = load i32, i32* %add.ptr856, align 4, !dbg !18454
  %532 = call i1 @llvm.is.constant.i32(i32 %531), !dbg !18454
  br i1 %532, label %cond.true857, label %cond.false873, !dbg !18454

cond.true857:                                     ; preds = %cond.false855
  %533 = load i32*, i32** %flow_group_in, align 8, !dbg !18454
  %add.ptr858 = getelementptr i32, i32* %533, i64 9, !dbg !18454
  %534 = load i32, i32* %add.ptr858, align 4, !dbg !18454
  %and859 = and i32 %534, 255, !dbg !18454
  %shl860 = shl i32 %and859, 24, !dbg !18454
  %535 = load i32*, i32** %flow_group_in, align 8, !dbg !18454
  %add.ptr861 = getelementptr i32, i32* %535, i64 9, !dbg !18454
  %536 = load i32, i32* %add.ptr861, align 4, !dbg !18454
  %and862 = and i32 %536, 65280, !dbg !18454
  %shl863 = shl i32 %and862, 8, !dbg !18454
  %or864 = or i32 %shl860, %shl863, !dbg !18454
  %537 = load i32*, i32** %flow_group_in, align 8, !dbg !18454
  %add.ptr865 = getelementptr i32, i32* %537, i64 9, !dbg !18454
  %538 = load i32, i32* %add.ptr865, align 4, !dbg !18454
  %and866 = and i32 %538, 16711680, !dbg !18454
  %shr867 = lshr i32 %and866, 8, !dbg !18454
  %or868 = or i32 %or864, %shr867, !dbg !18454
  %539 = load i32*, i32** %flow_group_in, align 8, !dbg !18454
  %add.ptr869 = getelementptr i32, i32* %539, i64 9, !dbg !18454
  %540 = load i32, i32* %add.ptr869, align 4, !dbg !18454
  %and870 = and i32 %540, -16777216, !dbg !18454
  %shr871 = lshr i32 %and870, 24, !dbg !18454
  %or872 = or i32 %or868, %shr871, !dbg !18454
  br label %cond.end876, !dbg !18454

cond.false873:                                    ; preds = %cond.false855
  %541 = load i32*, i32** %flow_group_in, align 8, !dbg !18454
  %add.ptr874 = getelementptr i32, i32* %541, i64 9, !dbg !18454
  %542 = load i32, i32* %add.ptr874, align 4, !dbg !18454
  %call875 = call i32 @__fswab32(i32 %542) #10, !dbg !18454
  br label %cond.end876, !dbg !18454

cond.end876:                                      ; preds = %cond.false873, %cond.true857
  %cond877 = phi i32 [ %or872, %cond.true857 ], [ %call875, %cond.false873 ], !dbg !18454
  %and878 = and i32 %cond877, 0, !dbg !18454
  %543 = load i32, i32* %_v715, align 4, !dbg !18454
  %shl879 = shl i32 %543, 0, !dbg !18454
  %or880 = or i32 %and878, %shl879, !dbg !18454
  %call881 = call i32 @__fswab32(i32 %or880) #10, !dbg !18454
  br label %cond.end882, !dbg !18454

cond.end882:                                      ; preds = %cond.end876, %cond.end847
  %cond883 = phi i32 [ %or854, %cond.end847 ], [ %call881, %cond.end876 ], !dbg !18454
  %544 = load i32*, i32** %flow_group_in, align 8, !dbg !18454
  %add.ptr884 = getelementptr i32, i32* %544, i64 9, !dbg !18454
  store i32 %cond883, i32* %add.ptr884, align 4, !dbg !18454
  br label %do.end885, !dbg !18454

do.end885:                                        ; preds = %cond.end882
  %545 = load %struct.mlx5_flow_table*, %struct.mlx5_flow_table** %fdb, align 8, !dbg !18457
  %546 = load i32*, i32** %flow_group_in, align 8, !dbg !18458
  %call886 = call %struct.mlx5_flow_group* @mlx5_create_flow_group(%struct.mlx5_flow_table* %545, i32* %546) #8, !dbg !18459
  store %struct.mlx5_flow_group* %call886, %struct.mlx5_flow_group** %g, align 8, !dbg !18460
  %547 = load %struct.mlx5_flow_group*, %struct.mlx5_flow_group** %g, align 8, !dbg !18461
  %548 = bitcast %struct.mlx5_flow_group* %547 to i8*, !dbg !18461
  %call887 = call zeroext i1 @IS_ERR(i8* %548) #8, !dbg !18463
  br i1 %call887, label %if.then888, label %if.end892, !dbg !18464

if.then888:                                       ; preds = %do.end885
  %549 = load %struct.mlx5_flow_group*, %struct.mlx5_flow_group** %g, align 8, !dbg !18465
  %550 = bitcast %struct.mlx5_flow_group* %549 to i8*, !dbg !18465
  %call889 = call i64 @PTR_ERR(i8* %550) #8, !dbg !18467
  %conv890 = trunc i64 %call889 to i32, !dbg !18467
  store i32 %conv890, i32* %err, align 4, !dbg !18468
  %551 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !18469
  %device891 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %551, i32 0, i32 0, !dbg !18469
  %552 = load %struct.device*, %struct.device** %device891, align 8, !dbg !18469
  %553 = load i32, i32* %err, align 4, !dbg !18469
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %552, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.29, i64 0, i64 0), i32 %553) #9, !dbg !18469
  br label %send_vport_err, !dbg !18470

if.end892:                                        ; preds = %do.end885
  %554 = load %struct.mlx5_flow_group*, %struct.mlx5_flow_group** %g, align 8, !dbg !18471
  %555 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !18472
  %fdb_table893 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %555, i32 0, i32 2, !dbg !18473
  %556 = getelementptr inbounds %struct.mlx5_eswitch_fdb, %struct.mlx5_eswitch_fdb* %fdb_table893, i32 0, i32 0, !dbg !18474
  %offloads894 = bitcast %union.anon.154* %556 to %struct.offloads_fdb*, !dbg !18474
  %send_to_vport_grp = getelementptr inbounds %struct.offloads_fdb, %struct.offloads_fdb* %offloads894, i32 0, i32 2, !dbg !18475
  store %struct.mlx5_flow_group* %554, %struct.mlx5_flow_group** %send_to_vport_grp, align 8, !dbg !18476
  %557 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !18477
  %dev895 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %557, i32 0, i32 0, !dbg !18477
  %558 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev895, align 8, !dbg !18477
  %caps = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %558, i32 0, i32 9, !dbg !18477
  %hca_cur = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps, i32 0, i32 0, !dbg !18477
  %arrayidx = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur, i64 0, i64 9, !dbg !18477
  %arraydecay = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx, i64 0, i64 0, !dbg !18477
  %add.ptr896 = getelementptr i32, i32* %arraydecay, i64 0, !dbg !18477
  %559 = load i32, i32* %add.ptr896, align 4, !dbg !18477
  %560 = call i1 @llvm.is.constant.i32(i32 %559), !dbg !18477
  br i1 %560, label %cond.true897, label %cond.false933, !dbg !18477

cond.true897:                                     ; preds = %if.end892
  %561 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !18477
  %dev898 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %561, i32 0, i32 0, !dbg !18477
  %562 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev898, align 8, !dbg !18477
  %caps899 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %562, i32 0, i32 9, !dbg !18477
  %hca_cur900 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps899, i32 0, i32 0, !dbg !18477
  %arrayidx901 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur900, i64 0, i64 9, !dbg !18477
  %arraydecay902 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx901, i64 0, i64 0, !dbg !18477
  %add.ptr903 = getelementptr i32, i32* %arraydecay902, i64 0, !dbg !18477
  %563 = load i32, i32* %add.ptr903, align 4, !dbg !18477
  %and904 = and i32 %563, 255, !dbg !18477
  %shl905 = shl i32 %and904, 24, !dbg !18477
  %564 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !18477
  %dev906 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %564, i32 0, i32 0, !dbg !18477
  %565 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev906, align 8, !dbg !18477
  %caps907 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %565, i32 0, i32 9, !dbg !18477
  %hca_cur908 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps907, i32 0, i32 0, !dbg !18477
  %arrayidx909 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur908, i64 0, i64 9, !dbg !18477
  %arraydecay910 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx909, i64 0, i64 0, !dbg !18477
  %add.ptr911 = getelementptr i32, i32* %arraydecay910, i64 0, !dbg !18477
  %566 = load i32, i32* %add.ptr911, align 4, !dbg !18477
  %and912 = and i32 %566, 65280, !dbg !18477
  %shl913 = shl i32 %and912, 8, !dbg !18477
  %or914 = or i32 %shl905, %shl913, !dbg !18477
  %567 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !18477
  %dev915 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %567, i32 0, i32 0, !dbg !18477
  %568 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev915, align 8, !dbg !18477
  %caps916 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %568, i32 0, i32 9, !dbg !18477
  %hca_cur917 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps916, i32 0, i32 0, !dbg !18477
  %arrayidx918 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur917, i64 0, i64 9, !dbg !18477
  %arraydecay919 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx918, i64 0, i64 0, !dbg !18477
  %add.ptr920 = getelementptr i32, i32* %arraydecay919, i64 0, !dbg !18477
  %569 = load i32, i32* %add.ptr920, align 4, !dbg !18477
  %and921 = and i32 %569, 16711680, !dbg !18477
  %shr922 = lshr i32 %and921, 8, !dbg !18477
  %or923 = or i32 %or914, %shr922, !dbg !18477
  %570 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !18477
  %dev924 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %570, i32 0, i32 0, !dbg !18477
  %571 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev924, align 8, !dbg !18477
  %caps925 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %571, i32 0, i32 9, !dbg !18477
  %hca_cur926 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps925, i32 0, i32 0, !dbg !18477
  %arrayidx927 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur926, i64 0, i64 9, !dbg !18477
  %arraydecay928 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx927, i64 0, i64 0, !dbg !18477
  %add.ptr929 = getelementptr i32, i32* %arraydecay928, i64 0, !dbg !18477
  %572 = load i32, i32* %add.ptr929, align 4, !dbg !18477
  %and930 = and i32 %572, -16777216, !dbg !18477
  %shr931 = lshr i32 %and930, 24, !dbg !18477
  %or932 = or i32 %or923, %shr931, !dbg !18477
  br label %cond.end941, !dbg !18477

cond.false933:                                    ; preds = %if.end892
  %573 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !18477
  %dev934 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %573, i32 0, i32 0, !dbg !18477
  %574 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev934, align 8, !dbg !18477
  %caps935 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %574, i32 0, i32 9, !dbg !18477
  %hca_cur936 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps935, i32 0, i32 0, !dbg !18477
  %arrayidx937 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur936, i64 0, i64 9, !dbg !18477
  %arraydecay938 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx937, i64 0, i64 0, !dbg !18477
  %add.ptr939 = getelementptr i32, i32* %arraydecay938, i64 0, !dbg !18477
  %575 = load i32, i32* %add.ptr939, align 4, !dbg !18477
  %call940 = call i32 @__fswab32(i32 %575) #10, !dbg !18477
  br label %cond.end941, !dbg !18477

cond.end941:                                      ; preds = %cond.false933, %cond.true897
  %cond942 = phi i32 [ %or932, %cond.true897 ], [ %call940, %cond.false933 ], !dbg !18477
  %shr943 = lshr i32 %cond942, 2, !dbg !18477
  %and944 = and i32 %shr943, 1, !dbg !18477
  %tobool945 = icmp ne i32 %and944, 0, !dbg !18477
  br i1 %tobool945, label %if.then946, label %if.end1653, !dbg !18479

if.then946:                                       ; preds = %cond.end941
  %576 = load i32*, i32** %flow_group_in, align 8, !dbg !18480
  %577 = bitcast i32* %576 to i8*, !dbg !18482
  %578 = load i32, i32* %inlen, align 4, !dbg !18483
  %conv947 = sext i32 %578 to i64, !dbg !18483
  call void @llvm.memset.p0i8.i64(i8* align 4 %577, i8 0, i64 %conv947, i1 false), !dbg !18482
  %579 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !18484
  %580 = load i32*, i32** %flow_group_in, align 8, !dbg !18485
  call void @esw_set_flow_group_source_port(%struct.mlx5_eswitch* %579, i32* %580) #8, !dbg !18486
  %581 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !18487
  %call948 = call zeroext i1 @mlx5_eswitch_vport_match_metadata_enabled(%struct.mlx5_eswitch* %581) #8, !dbg !18489
  br i1 %call948, label %if.end1294, label %if.then949, !dbg !18490

if.then949:                                       ; preds = %if.then946
  %582 = load i32*, i32** %flow_group_in, align 8, !dbg !18491
  %583 = bitcast i32* %582 to i8*, !dbg !18491
  %add.ptr950 = getelementptr i8, i8* %583, i64 64, !dbg !18491
  store i8* %add.ptr950, i8** %match_criteria, align 8, !dbg !18493
  br label %do.body951, !dbg !18494

do.body951:                                       ; preds = %if.then949
  br label %do.body952, !dbg !18495

do.body952:                                       ; preds = %do.body951
  br label %do.end953, !dbg !18497

do.end953:                                        ; preds = %do.body952
  %584 = load i8*, i8** %match_criteria, align 8, !dbg !18495
  %585 = bitcast i8* %584 to i32*, !dbg !18495
  %add.ptr954 = getelementptr i32, i32* %585, i64 17, !dbg !18495
  %586 = load i32, i32* %add.ptr954, align 4, !dbg !18495
  %587 = call i1 @llvm.is.constant.i32(i32 %586), !dbg !18495
  br i1 %587, label %cond.true955, label %cond.false971, !dbg !18495

cond.true955:                                     ; preds = %do.end953
  %588 = load i8*, i8** %match_criteria, align 8, !dbg !18495
  %589 = bitcast i8* %588 to i32*, !dbg !18495
  %add.ptr956 = getelementptr i32, i32* %589, i64 17, !dbg !18495
  %590 = load i32, i32* %add.ptr956, align 4, !dbg !18495
  %and957 = and i32 %590, 255, !dbg !18495
  %shl958 = shl i32 %and957, 24, !dbg !18495
  %591 = load i8*, i8** %match_criteria, align 8, !dbg !18495
  %592 = bitcast i8* %591 to i32*, !dbg !18495
  %add.ptr959 = getelementptr i32, i32* %592, i64 17, !dbg !18495
  %593 = load i32, i32* %add.ptr959, align 4, !dbg !18495
  %and960 = and i32 %593, 65280, !dbg !18495
  %shl961 = shl i32 %and960, 8, !dbg !18495
  %or962 = or i32 %shl958, %shl961, !dbg !18495
  %594 = load i8*, i8** %match_criteria, align 8, !dbg !18495
  %595 = bitcast i8* %594 to i32*, !dbg !18495
  %add.ptr963 = getelementptr i32, i32* %595, i64 17, !dbg !18495
  %596 = load i32, i32* %add.ptr963, align 4, !dbg !18495
  %and964 = and i32 %596, 16711680, !dbg !18495
  %shr965 = lshr i32 %and964, 8, !dbg !18495
  %or966 = or i32 %or962, %shr965, !dbg !18495
  %597 = load i8*, i8** %match_criteria, align 8, !dbg !18495
  %598 = bitcast i8* %597 to i32*, !dbg !18495
  %add.ptr967 = getelementptr i32, i32* %598, i64 17, !dbg !18495
  %599 = load i32, i32* %add.ptr967, align 4, !dbg !18495
  %and968 = and i32 %599, -16777216, !dbg !18495
  %shr969 = lshr i32 %and968, 24, !dbg !18495
  %or970 = or i32 %or966, %shr969, !dbg !18495
  br label %cond.end974, !dbg !18495

cond.false971:                                    ; preds = %do.end953
  %600 = load i8*, i8** %match_criteria, align 8, !dbg !18495
  %601 = bitcast i8* %600 to i32*, !dbg !18495
  %add.ptr972 = getelementptr i32, i32* %601, i64 17, !dbg !18495
  %602 = load i32, i32* %add.ptr972, align 4, !dbg !18495
  %call973 = call i32 @__fswab32(i32 %602) #10, !dbg !18495
  br label %cond.end974, !dbg !18495

cond.end974:                                      ; preds = %cond.false971, %cond.true955
  %cond975 = phi i32 [ %or970, %cond.true955 ], [ %call973, %cond.false971 ], !dbg !18495
  %and976 = and i32 %cond975, 65535, !dbg !18495
  %or977 = or i32 %and976, -65536, !dbg !18495
  %603 = call i1 @llvm.is.constant.i32(i32 %or977), !dbg !18495
  br i1 %603, label %cond.true978, label %cond.false1086, !dbg !18495

cond.true978:                                     ; preds = %cond.end974
  %604 = load i8*, i8** %match_criteria, align 8, !dbg !18495
  %605 = bitcast i8* %604 to i32*, !dbg !18495
  %add.ptr979 = getelementptr i32, i32* %605, i64 17, !dbg !18495
  %606 = load i32, i32* %add.ptr979, align 4, !dbg !18495
  %607 = call i1 @llvm.is.constant.i32(i32 %606), !dbg !18495
  br i1 %607, label %cond.true980, label %cond.false996, !dbg !18495

cond.true980:                                     ; preds = %cond.true978
  %608 = load i8*, i8** %match_criteria, align 8, !dbg !18495
  %609 = bitcast i8* %608 to i32*, !dbg !18495
  %add.ptr981 = getelementptr i32, i32* %609, i64 17, !dbg !18495
  %610 = load i32, i32* %add.ptr981, align 4, !dbg !18495
  %and982 = and i32 %610, 255, !dbg !18495
  %shl983 = shl i32 %and982, 24, !dbg !18495
  %611 = load i8*, i8** %match_criteria, align 8, !dbg !18495
  %612 = bitcast i8* %611 to i32*, !dbg !18495
  %add.ptr984 = getelementptr i32, i32* %612, i64 17, !dbg !18495
  %613 = load i32, i32* %add.ptr984, align 4, !dbg !18495
  %and985 = and i32 %613, 65280, !dbg !18495
  %shl986 = shl i32 %and985, 8, !dbg !18495
  %or987 = or i32 %shl983, %shl986, !dbg !18495
  %614 = load i8*, i8** %match_criteria, align 8, !dbg !18495
  %615 = bitcast i8* %614 to i32*, !dbg !18495
  %add.ptr988 = getelementptr i32, i32* %615, i64 17, !dbg !18495
  %616 = load i32, i32* %add.ptr988, align 4, !dbg !18495
  %and989 = and i32 %616, 16711680, !dbg !18495
  %shr990 = lshr i32 %and989, 8, !dbg !18495
  %or991 = or i32 %or987, %shr990, !dbg !18495
  %617 = load i8*, i8** %match_criteria, align 8, !dbg !18495
  %618 = bitcast i8* %617 to i32*, !dbg !18495
  %add.ptr992 = getelementptr i32, i32* %618, i64 17, !dbg !18495
  %619 = load i32, i32* %add.ptr992, align 4, !dbg !18495
  %and993 = and i32 %619, -16777216, !dbg !18495
  %shr994 = lshr i32 %and993, 24, !dbg !18495
  %or995 = or i32 %or991, %shr994, !dbg !18495
  br label %cond.end999, !dbg !18495

cond.false996:                                    ; preds = %cond.true978
  %620 = load i8*, i8** %match_criteria, align 8, !dbg !18495
  %621 = bitcast i8* %620 to i32*, !dbg !18495
  %add.ptr997 = getelementptr i32, i32* %621, i64 17, !dbg !18495
  %622 = load i32, i32* %add.ptr997, align 4, !dbg !18495
  %call998 = call i32 @__fswab32(i32 %622) #10, !dbg !18495
  br label %cond.end999, !dbg !18495

cond.end999:                                      ; preds = %cond.false996, %cond.true980
  %cond1000 = phi i32 [ %or995, %cond.true980 ], [ %call998, %cond.false996 ], !dbg !18495
  %and1001 = and i32 %cond1000, 65535, !dbg !18495
  %or1002 = or i32 %and1001, -65536, !dbg !18495
  %and1003 = and i32 %or1002, 255, !dbg !18495
  %shl1004 = shl i32 %and1003, 24, !dbg !18495
  %623 = load i8*, i8** %match_criteria, align 8, !dbg !18495
  %624 = bitcast i8* %623 to i32*, !dbg !18495
  %add.ptr1005 = getelementptr i32, i32* %624, i64 17, !dbg !18495
  %625 = load i32, i32* %add.ptr1005, align 4, !dbg !18495
  %626 = call i1 @llvm.is.constant.i32(i32 %625), !dbg !18495
  br i1 %626, label %cond.true1006, label %cond.false1022, !dbg !18495

cond.true1006:                                    ; preds = %cond.end999
  %627 = load i8*, i8** %match_criteria, align 8, !dbg !18495
  %628 = bitcast i8* %627 to i32*, !dbg !18495
  %add.ptr1007 = getelementptr i32, i32* %628, i64 17, !dbg !18495
  %629 = load i32, i32* %add.ptr1007, align 4, !dbg !18495
  %and1008 = and i32 %629, 255, !dbg !18495
  %shl1009 = shl i32 %and1008, 24, !dbg !18495
  %630 = load i8*, i8** %match_criteria, align 8, !dbg !18495
  %631 = bitcast i8* %630 to i32*, !dbg !18495
  %add.ptr1010 = getelementptr i32, i32* %631, i64 17, !dbg !18495
  %632 = load i32, i32* %add.ptr1010, align 4, !dbg !18495
  %and1011 = and i32 %632, 65280, !dbg !18495
  %shl1012 = shl i32 %and1011, 8, !dbg !18495
  %or1013 = or i32 %shl1009, %shl1012, !dbg !18495
  %633 = load i8*, i8** %match_criteria, align 8, !dbg !18495
  %634 = bitcast i8* %633 to i32*, !dbg !18495
  %add.ptr1014 = getelementptr i32, i32* %634, i64 17, !dbg !18495
  %635 = load i32, i32* %add.ptr1014, align 4, !dbg !18495
  %and1015 = and i32 %635, 16711680, !dbg !18495
  %shr1016 = lshr i32 %and1015, 8, !dbg !18495
  %or1017 = or i32 %or1013, %shr1016, !dbg !18495
  %636 = load i8*, i8** %match_criteria, align 8, !dbg !18495
  %637 = bitcast i8* %636 to i32*, !dbg !18495
  %add.ptr1018 = getelementptr i32, i32* %637, i64 17, !dbg !18495
  %638 = load i32, i32* %add.ptr1018, align 4, !dbg !18495
  %and1019 = and i32 %638, -16777216, !dbg !18495
  %shr1020 = lshr i32 %and1019, 24, !dbg !18495
  %or1021 = or i32 %or1017, %shr1020, !dbg !18495
  br label %cond.end1025, !dbg !18495

cond.false1022:                                   ; preds = %cond.end999
  %639 = load i8*, i8** %match_criteria, align 8, !dbg !18495
  %640 = bitcast i8* %639 to i32*, !dbg !18495
  %add.ptr1023 = getelementptr i32, i32* %640, i64 17, !dbg !18495
  %641 = load i32, i32* %add.ptr1023, align 4, !dbg !18495
  %call1024 = call i32 @__fswab32(i32 %641) #10, !dbg !18495
  br label %cond.end1025, !dbg !18495

cond.end1025:                                     ; preds = %cond.false1022, %cond.true1006
  %cond1026 = phi i32 [ %or1021, %cond.true1006 ], [ %call1024, %cond.false1022 ], !dbg !18495
  %and1027 = and i32 %cond1026, 65535, !dbg !18495
  %or1028 = or i32 %and1027, -65536, !dbg !18495
  %and1029 = and i32 %or1028, 65280, !dbg !18495
  %shl1030 = shl i32 %and1029, 8, !dbg !18495
  %or1031 = or i32 %shl1004, %shl1030, !dbg !18495
  %642 = load i8*, i8** %match_criteria, align 8, !dbg !18495
  %643 = bitcast i8* %642 to i32*, !dbg !18495
  %add.ptr1032 = getelementptr i32, i32* %643, i64 17, !dbg !18495
  %644 = load i32, i32* %add.ptr1032, align 4, !dbg !18495
  %645 = call i1 @llvm.is.constant.i32(i32 %644), !dbg !18495
  br i1 %645, label %cond.true1033, label %cond.false1049, !dbg !18495

cond.true1033:                                    ; preds = %cond.end1025
  %646 = load i8*, i8** %match_criteria, align 8, !dbg !18495
  %647 = bitcast i8* %646 to i32*, !dbg !18495
  %add.ptr1034 = getelementptr i32, i32* %647, i64 17, !dbg !18495
  %648 = load i32, i32* %add.ptr1034, align 4, !dbg !18495
  %and1035 = and i32 %648, 255, !dbg !18495
  %shl1036 = shl i32 %and1035, 24, !dbg !18495
  %649 = load i8*, i8** %match_criteria, align 8, !dbg !18495
  %650 = bitcast i8* %649 to i32*, !dbg !18495
  %add.ptr1037 = getelementptr i32, i32* %650, i64 17, !dbg !18495
  %651 = load i32, i32* %add.ptr1037, align 4, !dbg !18495
  %and1038 = and i32 %651, 65280, !dbg !18495
  %shl1039 = shl i32 %and1038, 8, !dbg !18495
  %or1040 = or i32 %shl1036, %shl1039, !dbg !18495
  %652 = load i8*, i8** %match_criteria, align 8, !dbg !18495
  %653 = bitcast i8* %652 to i32*, !dbg !18495
  %add.ptr1041 = getelementptr i32, i32* %653, i64 17, !dbg !18495
  %654 = load i32, i32* %add.ptr1041, align 4, !dbg !18495
  %and1042 = and i32 %654, 16711680, !dbg !18495
  %shr1043 = lshr i32 %and1042, 8, !dbg !18495
  %or1044 = or i32 %or1040, %shr1043, !dbg !18495
  %655 = load i8*, i8** %match_criteria, align 8, !dbg !18495
  %656 = bitcast i8* %655 to i32*, !dbg !18495
  %add.ptr1045 = getelementptr i32, i32* %656, i64 17, !dbg !18495
  %657 = load i32, i32* %add.ptr1045, align 4, !dbg !18495
  %and1046 = and i32 %657, -16777216, !dbg !18495
  %shr1047 = lshr i32 %and1046, 24, !dbg !18495
  %or1048 = or i32 %or1044, %shr1047, !dbg !18495
  br label %cond.end1052, !dbg !18495

cond.false1049:                                   ; preds = %cond.end1025
  %658 = load i8*, i8** %match_criteria, align 8, !dbg !18495
  %659 = bitcast i8* %658 to i32*, !dbg !18495
  %add.ptr1050 = getelementptr i32, i32* %659, i64 17, !dbg !18495
  %660 = load i32, i32* %add.ptr1050, align 4, !dbg !18495
  %call1051 = call i32 @__fswab32(i32 %660) #10, !dbg !18495
  br label %cond.end1052, !dbg !18495

cond.end1052:                                     ; preds = %cond.false1049, %cond.true1033
  %cond1053 = phi i32 [ %or1048, %cond.true1033 ], [ %call1051, %cond.false1049 ], !dbg !18495
  %and1054 = and i32 %cond1053, 65535, !dbg !18495
  %or1055 = or i32 %and1054, -65536, !dbg !18495
  %and1056 = and i32 %or1055, 16711680, !dbg !18495
  %shr1057 = lshr i32 %and1056, 8, !dbg !18495
  %or1058 = or i32 %or1031, %shr1057, !dbg !18495
  %661 = load i8*, i8** %match_criteria, align 8, !dbg !18495
  %662 = bitcast i8* %661 to i32*, !dbg !18495
  %add.ptr1059 = getelementptr i32, i32* %662, i64 17, !dbg !18495
  %663 = load i32, i32* %add.ptr1059, align 4, !dbg !18495
  %664 = call i1 @llvm.is.constant.i32(i32 %663), !dbg !18495
  br i1 %664, label %cond.true1060, label %cond.false1076, !dbg !18495

cond.true1060:                                    ; preds = %cond.end1052
  %665 = load i8*, i8** %match_criteria, align 8, !dbg !18495
  %666 = bitcast i8* %665 to i32*, !dbg !18495
  %add.ptr1061 = getelementptr i32, i32* %666, i64 17, !dbg !18495
  %667 = load i32, i32* %add.ptr1061, align 4, !dbg !18495
  %and1062 = and i32 %667, 255, !dbg !18495
  %shl1063 = shl i32 %and1062, 24, !dbg !18495
  %668 = load i8*, i8** %match_criteria, align 8, !dbg !18495
  %669 = bitcast i8* %668 to i32*, !dbg !18495
  %add.ptr1064 = getelementptr i32, i32* %669, i64 17, !dbg !18495
  %670 = load i32, i32* %add.ptr1064, align 4, !dbg !18495
  %and1065 = and i32 %670, 65280, !dbg !18495
  %shl1066 = shl i32 %and1065, 8, !dbg !18495
  %or1067 = or i32 %shl1063, %shl1066, !dbg !18495
  %671 = load i8*, i8** %match_criteria, align 8, !dbg !18495
  %672 = bitcast i8* %671 to i32*, !dbg !18495
  %add.ptr1068 = getelementptr i32, i32* %672, i64 17, !dbg !18495
  %673 = load i32, i32* %add.ptr1068, align 4, !dbg !18495
  %and1069 = and i32 %673, 16711680, !dbg !18495
  %shr1070 = lshr i32 %and1069, 8, !dbg !18495
  %or1071 = or i32 %or1067, %shr1070, !dbg !18495
  %674 = load i8*, i8** %match_criteria, align 8, !dbg !18495
  %675 = bitcast i8* %674 to i32*, !dbg !18495
  %add.ptr1072 = getelementptr i32, i32* %675, i64 17, !dbg !18495
  %676 = load i32, i32* %add.ptr1072, align 4, !dbg !18495
  %and1073 = and i32 %676, -16777216, !dbg !18495
  %shr1074 = lshr i32 %and1073, 24, !dbg !18495
  %or1075 = or i32 %or1071, %shr1074, !dbg !18495
  br label %cond.end1079, !dbg !18495

cond.false1076:                                   ; preds = %cond.end1052
  %677 = load i8*, i8** %match_criteria, align 8, !dbg !18495
  %678 = bitcast i8* %677 to i32*, !dbg !18495
  %add.ptr1077 = getelementptr i32, i32* %678, i64 17, !dbg !18495
  %679 = load i32, i32* %add.ptr1077, align 4, !dbg !18495
  %call1078 = call i32 @__fswab32(i32 %679) #10, !dbg !18495
  br label %cond.end1079, !dbg !18495

cond.end1079:                                     ; preds = %cond.false1076, %cond.true1060
  %cond1080 = phi i32 [ %or1075, %cond.true1060 ], [ %call1078, %cond.false1076 ], !dbg !18495
  %and1081 = and i32 %cond1080, 65535, !dbg !18495
  %or1082 = or i32 %and1081, -65536, !dbg !18495
  %and1083 = and i32 %or1082, -16777216, !dbg !18495
  %shr1084 = lshr i32 %and1083, 24, !dbg !18495
  %or1085 = or i32 %or1058, %shr1084, !dbg !18495
  br label %cond.end1112, !dbg !18495

cond.false1086:                                   ; preds = %cond.end974
  %680 = load i8*, i8** %match_criteria, align 8, !dbg !18495
  %681 = bitcast i8* %680 to i32*, !dbg !18495
  %add.ptr1087 = getelementptr i32, i32* %681, i64 17, !dbg !18495
  %682 = load i32, i32* %add.ptr1087, align 4, !dbg !18495
  %683 = call i1 @llvm.is.constant.i32(i32 %682), !dbg !18495
  br i1 %683, label %cond.true1088, label %cond.false1104, !dbg !18495

cond.true1088:                                    ; preds = %cond.false1086
  %684 = load i8*, i8** %match_criteria, align 8, !dbg !18495
  %685 = bitcast i8* %684 to i32*, !dbg !18495
  %add.ptr1089 = getelementptr i32, i32* %685, i64 17, !dbg !18495
  %686 = load i32, i32* %add.ptr1089, align 4, !dbg !18495
  %and1090 = and i32 %686, 255, !dbg !18495
  %shl1091 = shl i32 %and1090, 24, !dbg !18495
  %687 = load i8*, i8** %match_criteria, align 8, !dbg !18495
  %688 = bitcast i8* %687 to i32*, !dbg !18495
  %add.ptr1092 = getelementptr i32, i32* %688, i64 17, !dbg !18495
  %689 = load i32, i32* %add.ptr1092, align 4, !dbg !18495
  %and1093 = and i32 %689, 65280, !dbg !18495
  %shl1094 = shl i32 %and1093, 8, !dbg !18495
  %or1095 = or i32 %shl1091, %shl1094, !dbg !18495
  %690 = load i8*, i8** %match_criteria, align 8, !dbg !18495
  %691 = bitcast i8* %690 to i32*, !dbg !18495
  %add.ptr1096 = getelementptr i32, i32* %691, i64 17, !dbg !18495
  %692 = load i32, i32* %add.ptr1096, align 4, !dbg !18495
  %and1097 = and i32 %692, 16711680, !dbg !18495
  %shr1098 = lshr i32 %and1097, 8, !dbg !18495
  %or1099 = or i32 %or1095, %shr1098, !dbg !18495
  %693 = load i8*, i8** %match_criteria, align 8, !dbg !18495
  %694 = bitcast i8* %693 to i32*, !dbg !18495
  %add.ptr1100 = getelementptr i32, i32* %694, i64 17, !dbg !18495
  %695 = load i32, i32* %add.ptr1100, align 4, !dbg !18495
  %and1101 = and i32 %695, -16777216, !dbg !18495
  %shr1102 = lshr i32 %and1101, 24, !dbg !18495
  %or1103 = or i32 %or1099, %shr1102, !dbg !18495
  br label %cond.end1107, !dbg !18495

cond.false1104:                                   ; preds = %cond.false1086
  %696 = load i8*, i8** %match_criteria, align 8, !dbg !18495
  %697 = bitcast i8* %696 to i32*, !dbg !18495
  %add.ptr1105 = getelementptr i32, i32* %697, i64 17, !dbg !18495
  %698 = load i32, i32* %add.ptr1105, align 4, !dbg !18495
  %call1106 = call i32 @__fswab32(i32 %698) #10, !dbg !18495
  br label %cond.end1107, !dbg !18495

cond.end1107:                                     ; preds = %cond.false1104, %cond.true1088
  %cond1108 = phi i32 [ %or1103, %cond.true1088 ], [ %call1106, %cond.false1104 ], !dbg !18495
  %and1109 = and i32 %cond1108, 65535, !dbg !18495
  %or1110 = or i32 %and1109, -65536, !dbg !18495
  %call1111 = call i32 @__fswab32(i32 %or1110) #10, !dbg !18495
  br label %cond.end1112, !dbg !18495

cond.end1112:                                     ; preds = %cond.end1107, %cond.end1079
  %cond1113 = phi i32 [ %or1085, %cond.end1079 ], [ %call1111, %cond.end1107 ], !dbg !18495
  %699 = load i8*, i8** %match_criteria, align 8, !dbg !18495
  %700 = bitcast i8* %699 to i32*, !dbg !18495
  %add.ptr1114 = getelementptr i32, i32* %700, i64 17, !dbg !18495
  store i32 %cond1113, i32* %add.ptr1114, align 4, !dbg !18495
  br label %do.end1115, !dbg !18495

do.end1115:                                       ; preds = %cond.end1112
  br label %do.body1116, !dbg !18499

do.body1116:                                      ; preds = %do.end1115
  call void @llvm.dbg.declare(metadata i32* %_v1117, metadata !18500, metadata !DIExpression()), !dbg !18502
  store i32 1, i32* %_v1117, align 4, !dbg !18502
  br label %do.body1118, !dbg !18502

do.body1118:                                      ; preds = %do.body1116
  br label %do.end1119, !dbg !18503

do.end1119:                                       ; preds = %do.body1118
  %701 = load i32*, i32** %flow_group_in, align 8, !dbg !18502
  %add.ptr1120 = getelementptr i32, i32* %701, i64 6, !dbg !18502
  %702 = load i32, i32* %add.ptr1120, align 4, !dbg !18502
  %703 = call i1 @llvm.is.constant.i32(i32 %702), !dbg !18502
  br i1 %703, label %cond.true1121, label %cond.false1137, !dbg !18502

cond.true1121:                                    ; preds = %do.end1119
  %704 = load i32*, i32** %flow_group_in, align 8, !dbg !18502
  %add.ptr1122 = getelementptr i32, i32* %704, i64 6, !dbg !18502
  %705 = load i32, i32* %add.ptr1122, align 4, !dbg !18502
  %and1123 = and i32 %705, 255, !dbg !18502
  %shl1124 = shl i32 %and1123, 24, !dbg !18502
  %706 = load i32*, i32** %flow_group_in, align 8, !dbg !18502
  %add.ptr1125 = getelementptr i32, i32* %706, i64 6, !dbg !18502
  %707 = load i32, i32* %add.ptr1125, align 4, !dbg !18502
  %and1126 = and i32 %707, 65280, !dbg !18502
  %shl1127 = shl i32 %and1126, 8, !dbg !18502
  %or1128 = or i32 %shl1124, %shl1127, !dbg !18502
  %708 = load i32*, i32** %flow_group_in, align 8, !dbg !18502
  %add.ptr1129 = getelementptr i32, i32* %708, i64 6, !dbg !18502
  %709 = load i32, i32* %add.ptr1129, align 4, !dbg !18502
  %and1130 = and i32 %709, 16711680, !dbg !18502
  %shr1131 = lshr i32 %and1130, 8, !dbg !18502
  %or1132 = or i32 %or1128, %shr1131, !dbg !18502
  %710 = load i32*, i32** %flow_group_in, align 8, !dbg !18502
  %add.ptr1133 = getelementptr i32, i32* %710, i64 6, !dbg !18502
  %711 = load i32, i32* %add.ptr1133, align 4, !dbg !18502
  %and1134 = and i32 %711, -16777216, !dbg !18502
  %shr1135 = lshr i32 %and1134, 24, !dbg !18502
  %or1136 = or i32 %or1132, %shr1135, !dbg !18502
  br label %cond.end1140, !dbg !18502

cond.false1137:                                   ; preds = %do.end1119
  %712 = load i32*, i32** %flow_group_in, align 8, !dbg !18502
  %add.ptr1138 = getelementptr i32, i32* %712, i64 6, !dbg !18502
  %713 = load i32, i32* %add.ptr1138, align 4, !dbg !18502
  %call1139 = call i32 @__fswab32(i32 %713) #10, !dbg !18502
  br label %cond.end1140, !dbg !18502

cond.end1140:                                     ; preds = %cond.false1137, %cond.true1121
  %cond1141 = phi i32 [ %or1136, %cond.true1121 ], [ %call1139, %cond.false1137 ], !dbg !18502
  %and1142 = and i32 %cond1141, 2147483647, !dbg !18502
  %714 = load i32, i32* %_v1117, align 4, !dbg !18502
  %and1143 = and i32 %714, 1, !dbg !18502
  %shl1144 = shl i32 %and1143, 31, !dbg !18502
  %or1145 = or i32 %and1142, %shl1144, !dbg !18502
  %715 = call i1 @llvm.is.constant.i32(i32 %or1145), !dbg !18502
  br i1 %715, label %cond.true1146, label %cond.false1262, !dbg !18502

cond.true1146:                                    ; preds = %cond.end1140
  %716 = load i32*, i32** %flow_group_in, align 8, !dbg !18502
  %add.ptr1147 = getelementptr i32, i32* %716, i64 6, !dbg !18502
  %717 = load i32, i32* %add.ptr1147, align 4, !dbg !18502
  %718 = call i1 @llvm.is.constant.i32(i32 %717), !dbg !18502
  br i1 %718, label %cond.true1148, label %cond.false1164, !dbg !18502

cond.true1148:                                    ; preds = %cond.true1146
  %719 = load i32*, i32** %flow_group_in, align 8, !dbg !18502
  %add.ptr1149 = getelementptr i32, i32* %719, i64 6, !dbg !18502
  %720 = load i32, i32* %add.ptr1149, align 4, !dbg !18502
  %and1150 = and i32 %720, 255, !dbg !18502
  %shl1151 = shl i32 %and1150, 24, !dbg !18502
  %721 = load i32*, i32** %flow_group_in, align 8, !dbg !18502
  %add.ptr1152 = getelementptr i32, i32* %721, i64 6, !dbg !18502
  %722 = load i32, i32* %add.ptr1152, align 4, !dbg !18502
  %and1153 = and i32 %722, 65280, !dbg !18502
  %shl1154 = shl i32 %and1153, 8, !dbg !18502
  %or1155 = or i32 %shl1151, %shl1154, !dbg !18502
  %723 = load i32*, i32** %flow_group_in, align 8, !dbg !18502
  %add.ptr1156 = getelementptr i32, i32* %723, i64 6, !dbg !18502
  %724 = load i32, i32* %add.ptr1156, align 4, !dbg !18502
  %and1157 = and i32 %724, 16711680, !dbg !18502
  %shr1158 = lshr i32 %and1157, 8, !dbg !18502
  %or1159 = or i32 %or1155, %shr1158, !dbg !18502
  %725 = load i32*, i32** %flow_group_in, align 8, !dbg !18502
  %add.ptr1160 = getelementptr i32, i32* %725, i64 6, !dbg !18502
  %726 = load i32, i32* %add.ptr1160, align 4, !dbg !18502
  %and1161 = and i32 %726, -16777216, !dbg !18502
  %shr1162 = lshr i32 %and1161, 24, !dbg !18502
  %or1163 = or i32 %or1159, %shr1162, !dbg !18502
  br label %cond.end1167, !dbg !18502

cond.false1164:                                   ; preds = %cond.true1146
  %727 = load i32*, i32** %flow_group_in, align 8, !dbg !18502
  %add.ptr1165 = getelementptr i32, i32* %727, i64 6, !dbg !18502
  %728 = load i32, i32* %add.ptr1165, align 4, !dbg !18502
  %call1166 = call i32 @__fswab32(i32 %728) #10, !dbg !18502
  br label %cond.end1167, !dbg !18502

cond.end1167:                                     ; preds = %cond.false1164, %cond.true1148
  %cond1168 = phi i32 [ %or1163, %cond.true1148 ], [ %call1166, %cond.false1164 ], !dbg !18502
  %and1169 = and i32 %cond1168, 2147483647, !dbg !18502
  %729 = load i32, i32* %_v1117, align 4, !dbg !18502
  %and1170 = and i32 %729, 1, !dbg !18502
  %shl1171 = shl i32 %and1170, 31, !dbg !18502
  %or1172 = or i32 %and1169, %shl1171, !dbg !18502
  %and1173 = and i32 %or1172, 255, !dbg !18502
  %shl1174 = shl i32 %and1173, 24, !dbg !18502
  %730 = load i32*, i32** %flow_group_in, align 8, !dbg !18502
  %add.ptr1175 = getelementptr i32, i32* %730, i64 6, !dbg !18502
  %731 = load i32, i32* %add.ptr1175, align 4, !dbg !18502
  %732 = call i1 @llvm.is.constant.i32(i32 %731), !dbg !18502
  br i1 %732, label %cond.true1176, label %cond.false1192, !dbg !18502

cond.true1176:                                    ; preds = %cond.end1167
  %733 = load i32*, i32** %flow_group_in, align 8, !dbg !18502
  %add.ptr1177 = getelementptr i32, i32* %733, i64 6, !dbg !18502
  %734 = load i32, i32* %add.ptr1177, align 4, !dbg !18502
  %and1178 = and i32 %734, 255, !dbg !18502
  %shl1179 = shl i32 %and1178, 24, !dbg !18502
  %735 = load i32*, i32** %flow_group_in, align 8, !dbg !18502
  %add.ptr1180 = getelementptr i32, i32* %735, i64 6, !dbg !18502
  %736 = load i32, i32* %add.ptr1180, align 4, !dbg !18502
  %and1181 = and i32 %736, 65280, !dbg !18502
  %shl1182 = shl i32 %and1181, 8, !dbg !18502
  %or1183 = or i32 %shl1179, %shl1182, !dbg !18502
  %737 = load i32*, i32** %flow_group_in, align 8, !dbg !18502
  %add.ptr1184 = getelementptr i32, i32* %737, i64 6, !dbg !18502
  %738 = load i32, i32* %add.ptr1184, align 4, !dbg !18502
  %and1185 = and i32 %738, 16711680, !dbg !18502
  %shr1186 = lshr i32 %and1185, 8, !dbg !18502
  %or1187 = or i32 %or1183, %shr1186, !dbg !18502
  %739 = load i32*, i32** %flow_group_in, align 8, !dbg !18502
  %add.ptr1188 = getelementptr i32, i32* %739, i64 6, !dbg !18502
  %740 = load i32, i32* %add.ptr1188, align 4, !dbg !18502
  %and1189 = and i32 %740, -16777216, !dbg !18502
  %shr1190 = lshr i32 %and1189, 24, !dbg !18502
  %or1191 = or i32 %or1187, %shr1190, !dbg !18502
  br label %cond.end1195, !dbg !18502

cond.false1192:                                   ; preds = %cond.end1167
  %741 = load i32*, i32** %flow_group_in, align 8, !dbg !18502
  %add.ptr1193 = getelementptr i32, i32* %741, i64 6, !dbg !18502
  %742 = load i32, i32* %add.ptr1193, align 4, !dbg !18502
  %call1194 = call i32 @__fswab32(i32 %742) #10, !dbg !18502
  br label %cond.end1195, !dbg !18502

cond.end1195:                                     ; preds = %cond.false1192, %cond.true1176
  %cond1196 = phi i32 [ %or1191, %cond.true1176 ], [ %call1194, %cond.false1192 ], !dbg !18502
  %and1197 = and i32 %cond1196, 2147483647, !dbg !18502
  %743 = load i32, i32* %_v1117, align 4, !dbg !18502
  %and1198 = and i32 %743, 1, !dbg !18502
  %shl1199 = shl i32 %and1198, 31, !dbg !18502
  %or1200 = or i32 %and1197, %shl1199, !dbg !18502
  %and1201 = and i32 %or1200, 65280, !dbg !18502
  %shl1202 = shl i32 %and1201, 8, !dbg !18502
  %or1203 = or i32 %shl1174, %shl1202, !dbg !18502
  %744 = load i32*, i32** %flow_group_in, align 8, !dbg !18502
  %add.ptr1204 = getelementptr i32, i32* %744, i64 6, !dbg !18502
  %745 = load i32, i32* %add.ptr1204, align 4, !dbg !18502
  %746 = call i1 @llvm.is.constant.i32(i32 %745), !dbg !18502
  br i1 %746, label %cond.true1205, label %cond.false1221, !dbg !18502

cond.true1205:                                    ; preds = %cond.end1195
  %747 = load i32*, i32** %flow_group_in, align 8, !dbg !18502
  %add.ptr1206 = getelementptr i32, i32* %747, i64 6, !dbg !18502
  %748 = load i32, i32* %add.ptr1206, align 4, !dbg !18502
  %and1207 = and i32 %748, 255, !dbg !18502
  %shl1208 = shl i32 %and1207, 24, !dbg !18502
  %749 = load i32*, i32** %flow_group_in, align 8, !dbg !18502
  %add.ptr1209 = getelementptr i32, i32* %749, i64 6, !dbg !18502
  %750 = load i32, i32* %add.ptr1209, align 4, !dbg !18502
  %and1210 = and i32 %750, 65280, !dbg !18502
  %shl1211 = shl i32 %and1210, 8, !dbg !18502
  %or1212 = or i32 %shl1208, %shl1211, !dbg !18502
  %751 = load i32*, i32** %flow_group_in, align 8, !dbg !18502
  %add.ptr1213 = getelementptr i32, i32* %751, i64 6, !dbg !18502
  %752 = load i32, i32* %add.ptr1213, align 4, !dbg !18502
  %and1214 = and i32 %752, 16711680, !dbg !18502
  %shr1215 = lshr i32 %and1214, 8, !dbg !18502
  %or1216 = or i32 %or1212, %shr1215, !dbg !18502
  %753 = load i32*, i32** %flow_group_in, align 8, !dbg !18502
  %add.ptr1217 = getelementptr i32, i32* %753, i64 6, !dbg !18502
  %754 = load i32, i32* %add.ptr1217, align 4, !dbg !18502
  %and1218 = and i32 %754, -16777216, !dbg !18502
  %shr1219 = lshr i32 %and1218, 24, !dbg !18502
  %or1220 = or i32 %or1216, %shr1219, !dbg !18502
  br label %cond.end1224, !dbg !18502

cond.false1221:                                   ; preds = %cond.end1195
  %755 = load i32*, i32** %flow_group_in, align 8, !dbg !18502
  %add.ptr1222 = getelementptr i32, i32* %755, i64 6, !dbg !18502
  %756 = load i32, i32* %add.ptr1222, align 4, !dbg !18502
  %call1223 = call i32 @__fswab32(i32 %756) #10, !dbg !18502
  br label %cond.end1224, !dbg !18502

cond.end1224:                                     ; preds = %cond.false1221, %cond.true1205
  %cond1225 = phi i32 [ %or1220, %cond.true1205 ], [ %call1223, %cond.false1221 ], !dbg !18502
  %and1226 = and i32 %cond1225, 2147483647, !dbg !18502
  %757 = load i32, i32* %_v1117, align 4, !dbg !18502
  %and1227 = and i32 %757, 1, !dbg !18502
  %shl1228 = shl i32 %and1227, 31, !dbg !18502
  %or1229 = or i32 %and1226, %shl1228, !dbg !18502
  %and1230 = and i32 %or1229, 16711680, !dbg !18502
  %shr1231 = lshr i32 %and1230, 8, !dbg !18502
  %or1232 = or i32 %or1203, %shr1231, !dbg !18502
  %758 = load i32*, i32** %flow_group_in, align 8, !dbg !18502
  %add.ptr1233 = getelementptr i32, i32* %758, i64 6, !dbg !18502
  %759 = load i32, i32* %add.ptr1233, align 4, !dbg !18502
  %760 = call i1 @llvm.is.constant.i32(i32 %759), !dbg !18502
  br i1 %760, label %cond.true1234, label %cond.false1250, !dbg !18502

cond.true1234:                                    ; preds = %cond.end1224
  %761 = load i32*, i32** %flow_group_in, align 8, !dbg !18502
  %add.ptr1235 = getelementptr i32, i32* %761, i64 6, !dbg !18502
  %762 = load i32, i32* %add.ptr1235, align 4, !dbg !18502
  %and1236 = and i32 %762, 255, !dbg !18502
  %shl1237 = shl i32 %and1236, 24, !dbg !18502
  %763 = load i32*, i32** %flow_group_in, align 8, !dbg !18502
  %add.ptr1238 = getelementptr i32, i32* %763, i64 6, !dbg !18502
  %764 = load i32, i32* %add.ptr1238, align 4, !dbg !18502
  %and1239 = and i32 %764, 65280, !dbg !18502
  %shl1240 = shl i32 %and1239, 8, !dbg !18502
  %or1241 = or i32 %shl1237, %shl1240, !dbg !18502
  %765 = load i32*, i32** %flow_group_in, align 8, !dbg !18502
  %add.ptr1242 = getelementptr i32, i32* %765, i64 6, !dbg !18502
  %766 = load i32, i32* %add.ptr1242, align 4, !dbg !18502
  %and1243 = and i32 %766, 16711680, !dbg !18502
  %shr1244 = lshr i32 %and1243, 8, !dbg !18502
  %or1245 = or i32 %or1241, %shr1244, !dbg !18502
  %767 = load i32*, i32** %flow_group_in, align 8, !dbg !18502
  %add.ptr1246 = getelementptr i32, i32* %767, i64 6, !dbg !18502
  %768 = load i32, i32* %add.ptr1246, align 4, !dbg !18502
  %and1247 = and i32 %768, -16777216, !dbg !18502
  %shr1248 = lshr i32 %and1247, 24, !dbg !18502
  %or1249 = or i32 %or1245, %shr1248, !dbg !18502
  br label %cond.end1253, !dbg !18502

cond.false1250:                                   ; preds = %cond.end1224
  %769 = load i32*, i32** %flow_group_in, align 8, !dbg !18502
  %add.ptr1251 = getelementptr i32, i32* %769, i64 6, !dbg !18502
  %770 = load i32, i32* %add.ptr1251, align 4, !dbg !18502
  %call1252 = call i32 @__fswab32(i32 %770) #10, !dbg !18502
  br label %cond.end1253, !dbg !18502

cond.end1253:                                     ; preds = %cond.false1250, %cond.true1234
  %cond1254 = phi i32 [ %or1249, %cond.true1234 ], [ %call1252, %cond.false1250 ], !dbg !18502
  %and1255 = and i32 %cond1254, 2147483647, !dbg !18502
  %771 = load i32, i32* %_v1117, align 4, !dbg !18502
  %and1256 = and i32 %771, 1, !dbg !18502
  %shl1257 = shl i32 %and1256, 31, !dbg !18502
  %or1258 = or i32 %and1255, %shl1257, !dbg !18502
  %and1259 = and i32 %or1258, -16777216, !dbg !18502
  %shr1260 = lshr i32 %and1259, 24, !dbg !18502
  %or1261 = or i32 %or1232, %shr1260, !dbg !18502
  br label %cond.end1290, !dbg !18502

cond.false1262:                                   ; preds = %cond.end1140
  %772 = load i32*, i32** %flow_group_in, align 8, !dbg !18502
  %add.ptr1263 = getelementptr i32, i32* %772, i64 6, !dbg !18502
  %773 = load i32, i32* %add.ptr1263, align 4, !dbg !18502
  %774 = call i1 @llvm.is.constant.i32(i32 %773), !dbg !18502
  br i1 %774, label %cond.true1264, label %cond.false1280, !dbg !18502

cond.true1264:                                    ; preds = %cond.false1262
  %775 = load i32*, i32** %flow_group_in, align 8, !dbg !18502
  %add.ptr1265 = getelementptr i32, i32* %775, i64 6, !dbg !18502
  %776 = load i32, i32* %add.ptr1265, align 4, !dbg !18502
  %and1266 = and i32 %776, 255, !dbg !18502
  %shl1267 = shl i32 %and1266, 24, !dbg !18502
  %777 = load i32*, i32** %flow_group_in, align 8, !dbg !18502
  %add.ptr1268 = getelementptr i32, i32* %777, i64 6, !dbg !18502
  %778 = load i32, i32* %add.ptr1268, align 4, !dbg !18502
  %and1269 = and i32 %778, 65280, !dbg !18502
  %shl1270 = shl i32 %and1269, 8, !dbg !18502
  %or1271 = or i32 %shl1267, %shl1270, !dbg !18502
  %779 = load i32*, i32** %flow_group_in, align 8, !dbg !18502
  %add.ptr1272 = getelementptr i32, i32* %779, i64 6, !dbg !18502
  %780 = load i32, i32* %add.ptr1272, align 4, !dbg !18502
  %and1273 = and i32 %780, 16711680, !dbg !18502
  %shr1274 = lshr i32 %and1273, 8, !dbg !18502
  %or1275 = or i32 %or1271, %shr1274, !dbg !18502
  %781 = load i32*, i32** %flow_group_in, align 8, !dbg !18502
  %add.ptr1276 = getelementptr i32, i32* %781, i64 6, !dbg !18502
  %782 = load i32, i32* %add.ptr1276, align 4, !dbg !18502
  %and1277 = and i32 %782, -16777216, !dbg !18502
  %shr1278 = lshr i32 %and1277, 24, !dbg !18502
  %or1279 = or i32 %or1275, %shr1278, !dbg !18502
  br label %cond.end1283, !dbg !18502

cond.false1280:                                   ; preds = %cond.false1262
  %783 = load i32*, i32** %flow_group_in, align 8, !dbg !18502
  %add.ptr1281 = getelementptr i32, i32* %783, i64 6, !dbg !18502
  %784 = load i32, i32* %add.ptr1281, align 4, !dbg !18502
  %call1282 = call i32 @__fswab32(i32 %784) #10, !dbg !18502
  br label %cond.end1283, !dbg !18502

cond.end1283:                                     ; preds = %cond.false1280, %cond.true1264
  %cond1284 = phi i32 [ %or1279, %cond.true1264 ], [ %call1282, %cond.false1280 ], !dbg !18502
  %and1285 = and i32 %cond1284, 2147483647, !dbg !18502
  %785 = load i32, i32* %_v1117, align 4, !dbg !18502
  %and1286 = and i32 %785, 1, !dbg !18502
  %shl1287 = shl i32 %and1286, 31, !dbg !18502
  %or1288 = or i32 %and1285, %shl1287, !dbg !18502
  %call1289 = call i32 @__fswab32(i32 %or1288) #10, !dbg !18502
  br label %cond.end1290, !dbg !18502

cond.end1290:                                     ; preds = %cond.end1283, %cond.end1253
  %cond1291 = phi i32 [ %or1261, %cond.end1253 ], [ %call1289, %cond.end1283 ], !dbg !18502
  %786 = load i32*, i32** %flow_group_in, align 8, !dbg !18502
  %add.ptr1292 = getelementptr i32, i32* %786, i64 6, !dbg !18502
  store i32 %cond1291, i32* %add.ptr1292, align 4, !dbg !18502
  br label %do.end1293, !dbg !18502

do.end1293:                                       ; preds = %cond.end1290
  br label %if.end1294, !dbg !18505

if.end1294:                                       ; preds = %do.end1293, %if.then946
  br label %do.body1295, !dbg !18506

do.body1295:                                      ; preds = %if.end1294
  call void @llvm.dbg.declare(metadata i32* %_v1296, metadata !18507, metadata !DIExpression()), !dbg !18509
  %787 = load i32, i32* %ix, align 4, !dbg !18509
  store i32 %787, i32* %_v1296, align 4, !dbg !18509
  br label %do.body1297, !dbg !18509

do.body1297:                                      ; preds = %do.body1295
  br label %do.end1298, !dbg !18510

do.end1298:                                       ; preds = %do.body1297
  %788 = load i32*, i32** %flow_group_in, align 8, !dbg !18509
  %add.ptr1299 = getelementptr i32, i32* %788, i64 7, !dbg !18509
  %789 = load i32, i32* %add.ptr1299, align 4, !dbg !18509
  %790 = call i1 @llvm.is.constant.i32(i32 %789), !dbg !18509
  br i1 %790, label %cond.true1300, label %cond.false1316, !dbg !18509

cond.true1300:                                    ; preds = %do.end1298
  %791 = load i32*, i32** %flow_group_in, align 8, !dbg !18509
  %add.ptr1301 = getelementptr i32, i32* %791, i64 7, !dbg !18509
  %792 = load i32, i32* %add.ptr1301, align 4, !dbg !18509
  %and1302 = and i32 %792, 255, !dbg !18509
  %shl1303 = shl i32 %and1302, 24, !dbg !18509
  %793 = load i32*, i32** %flow_group_in, align 8, !dbg !18509
  %add.ptr1304 = getelementptr i32, i32* %793, i64 7, !dbg !18509
  %794 = load i32, i32* %add.ptr1304, align 4, !dbg !18509
  %and1305 = and i32 %794, 65280, !dbg !18509
  %shl1306 = shl i32 %and1305, 8, !dbg !18509
  %or1307 = or i32 %shl1303, %shl1306, !dbg !18509
  %795 = load i32*, i32** %flow_group_in, align 8, !dbg !18509
  %add.ptr1308 = getelementptr i32, i32* %795, i64 7, !dbg !18509
  %796 = load i32, i32* %add.ptr1308, align 4, !dbg !18509
  %and1309 = and i32 %796, 16711680, !dbg !18509
  %shr1310 = lshr i32 %and1309, 8, !dbg !18509
  %or1311 = or i32 %or1307, %shr1310, !dbg !18509
  %797 = load i32*, i32** %flow_group_in, align 8, !dbg !18509
  %add.ptr1312 = getelementptr i32, i32* %797, i64 7, !dbg !18509
  %798 = load i32, i32* %add.ptr1312, align 4, !dbg !18509
  %and1313 = and i32 %798, -16777216, !dbg !18509
  %shr1314 = lshr i32 %and1313, 24, !dbg !18509
  %or1315 = or i32 %or1311, %shr1314, !dbg !18509
  br label %cond.end1319, !dbg !18509

cond.false1316:                                   ; preds = %do.end1298
  %799 = load i32*, i32** %flow_group_in, align 8, !dbg !18509
  %add.ptr1317 = getelementptr i32, i32* %799, i64 7, !dbg !18509
  %800 = load i32, i32* %add.ptr1317, align 4, !dbg !18509
  %call1318 = call i32 @__fswab32(i32 %800) #10, !dbg !18509
  br label %cond.end1319, !dbg !18509

cond.end1319:                                     ; preds = %cond.false1316, %cond.true1300
  %cond1320 = phi i32 [ %or1315, %cond.true1300 ], [ %call1318, %cond.false1316 ], !dbg !18509
  %and1321 = and i32 %cond1320, 0, !dbg !18509
  %801 = load i32, i32* %_v1296, align 4, !dbg !18509
  %shl1322 = shl i32 %801, 0, !dbg !18509
  %or1323 = or i32 %and1321, %shl1322, !dbg !18509
  %802 = call i1 @llvm.is.constant.i32(i32 %or1323), !dbg !18509
  br i1 %802, label %cond.true1324, label %cond.false1436, !dbg !18509

cond.true1324:                                    ; preds = %cond.end1319
  %803 = load i32*, i32** %flow_group_in, align 8, !dbg !18509
  %add.ptr1325 = getelementptr i32, i32* %803, i64 7, !dbg !18509
  %804 = load i32, i32* %add.ptr1325, align 4, !dbg !18509
  %805 = call i1 @llvm.is.constant.i32(i32 %804), !dbg !18509
  br i1 %805, label %cond.true1326, label %cond.false1342, !dbg !18509

cond.true1326:                                    ; preds = %cond.true1324
  %806 = load i32*, i32** %flow_group_in, align 8, !dbg !18509
  %add.ptr1327 = getelementptr i32, i32* %806, i64 7, !dbg !18509
  %807 = load i32, i32* %add.ptr1327, align 4, !dbg !18509
  %and1328 = and i32 %807, 255, !dbg !18509
  %shl1329 = shl i32 %and1328, 24, !dbg !18509
  %808 = load i32*, i32** %flow_group_in, align 8, !dbg !18509
  %add.ptr1330 = getelementptr i32, i32* %808, i64 7, !dbg !18509
  %809 = load i32, i32* %add.ptr1330, align 4, !dbg !18509
  %and1331 = and i32 %809, 65280, !dbg !18509
  %shl1332 = shl i32 %and1331, 8, !dbg !18509
  %or1333 = or i32 %shl1329, %shl1332, !dbg !18509
  %810 = load i32*, i32** %flow_group_in, align 8, !dbg !18509
  %add.ptr1334 = getelementptr i32, i32* %810, i64 7, !dbg !18509
  %811 = load i32, i32* %add.ptr1334, align 4, !dbg !18509
  %and1335 = and i32 %811, 16711680, !dbg !18509
  %shr1336 = lshr i32 %and1335, 8, !dbg !18509
  %or1337 = or i32 %or1333, %shr1336, !dbg !18509
  %812 = load i32*, i32** %flow_group_in, align 8, !dbg !18509
  %add.ptr1338 = getelementptr i32, i32* %812, i64 7, !dbg !18509
  %813 = load i32, i32* %add.ptr1338, align 4, !dbg !18509
  %and1339 = and i32 %813, -16777216, !dbg !18509
  %shr1340 = lshr i32 %and1339, 24, !dbg !18509
  %or1341 = or i32 %or1337, %shr1340, !dbg !18509
  br label %cond.end1345, !dbg !18509

cond.false1342:                                   ; preds = %cond.true1324
  %814 = load i32*, i32** %flow_group_in, align 8, !dbg !18509
  %add.ptr1343 = getelementptr i32, i32* %814, i64 7, !dbg !18509
  %815 = load i32, i32* %add.ptr1343, align 4, !dbg !18509
  %call1344 = call i32 @__fswab32(i32 %815) #10, !dbg !18509
  br label %cond.end1345, !dbg !18509

cond.end1345:                                     ; preds = %cond.false1342, %cond.true1326
  %cond1346 = phi i32 [ %or1341, %cond.true1326 ], [ %call1344, %cond.false1342 ], !dbg !18509
  %and1347 = and i32 %cond1346, 0, !dbg !18509
  %816 = load i32, i32* %_v1296, align 4, !dbg !18509
  %shl1348 = shl i32 %816, 0, !dbg !18509
  %or1349 = or i32 %and1347, %shl1348, !dbg !18509
  %and1350 = and i32 %or1349, 255, !dbg !18509
  %shl1351 = shl i32 %and1350, 24, !dbg !18509
  %817 = load i32*, i32** %flow_group_in, align 8, !dbg !18509
  %add.ptr1352 = getelementptr i32, i32* %817, i64 7, !dbg !18509
  %818 = load i32, i32* %add.ptr1352, align 4, !dbg !18509
  %819 = call i1 @llvm.is.constant.i32(i32 %818), !dbg !18509
  br i1 %819, label %cond.true1353, label %cond.false1369, !dbg !18509

cond.true1353:                                    ; preds = %cond.end1345
  %820 = load i32*, i32** %flow_group_in, align 8, !dbg !18509
  %add.ptr1354 = getelementptr i32, i32* %820, i64 7, !dbg !18509
  %821 = load i32, i32* %add.ptr1354, align 4, !dbg !18509
  %and1355 = and i32 %821, 255, !dbg !18509
  %shl1356 = shl i32 %and1355, 24, !dbg !18509
  %822 = load i32*, i32** %flow_group_in, align 8, !dbg !18509
  %add.ptr1357 = getelementptr i32, i32* %822, i64 7, !dbg !18509
  %823 = load i32, i32* %add.ptr1357, align 4, !dbg !18509
  %and1358 = and i32 %823, 65280, !dbg !18509
  %shl1359 = shl i32 %and1358, 8, !dbg !18509
  %or1360 = or i32 %shl1356, %shl1359, !dbg !18509
  %824 = load i32*, i32** %flow_group_in, align 8, !dbg !18509
  %add.ptr1361 = getelementptr i32, i32* %824, i64 7, !dbg !18509
  %825 = load i32, i32* %add.ptr1361, align 4, !dbg !18509
  %and1362 = and i32 %825, 16711680, !dbg !18509
  %shr1363 = lshr i32 %and1362, 8, !dbg !18509
  %or1364 = or i32 %or1360, %shr1363, !dbg !18509
  %826 = load i32*, i32** %flow_group_in, align 8, !dbg !18509
  %add.ptr1365 = getelementptr i32, i32* %826, i64 7, !dbg !18509
  %827 = load i32, i32* %add.ptr1365, align 4, !dbg !18509
  %and1366 = and i32 %827, -16777216, !dbg !18509
  %shr1367 = lshr i32 %and1366, 24, !dbg !18509
  %or1368 = or i32 %or1364, %shr1367, !dbg !18509
  br label %cond.end1372, !dbg !18509

cond.false1369:                                   ; preds = %cond.end1345
  %828 = load i32*, i32** %flow_group_in, align 8, !dbg !18509
  %add.ptr1370 = getelementptr i32, i32* %828, i64 7, !dbg !18509
  %829 = load i32, i32* %add.ptr1370, align 4, !dbg !18509
  %call1371 = call i32 @__fswab32(i32 %829) #10, !dbg !18509
  br label %cond.end1372, !dbg !18509

cond.end1372:                                     ; preds = %cond.false1369, %cond.true1353
  %cond1373 = phi i32 [ %or1368, %cond.true1353 ], [ %call1371, %cond.false1369 ], !dbg !18509
  %and1374 = and i32 %cond1373, 0, !dbg !18509
  %830 = load i32, i32* %_v1296, align 4, !dbg !18509
  %shl1375 = shl i32 %830, 0, !dbg !18509
  %or1376 = or i32 %and1374, %shl1375, !dbg !18509
  %and1377 = and i32 %or1376, 65280, !dbg !18509
  %shl1378 = shl i32 %and1377, 8, !dbg !18509
  %or1379 = or i32 %shl1351, %shl1378, !dbg !18509
  %831 = load i32*, i32** %flow_group_in, align 8, !dbg !18509
  %add.ptr1380 = getelementptr i32, i32* %831, i64 7, !dbg !18509
  %832 = load i32, i32* %add.ptr1380, align 4, !dbg !18509
  %833 = call i1 @llvm.is.constant.i32(i32 %832), !dbg !18509
  br i1 %833, label %cond.true1381, label %cond.false1397, !dbg !18509

cond.true1381:                                    ; preds = %cond.end1372
  %834 = load i32*, i32** %flow_group_in, align 8, !dbg !18509
  %add.ptr1382 = getelementptr i32, i32* %834, i64 7, !dbg !18509
  %835 = load i32, i32* %add.ptr1382, align 4, !dbg !18509
  %and1383 = and i32 %835, 255, !dbg !18509
  %shl1384 = shl i32 %and1383, 24, !dbg !18509
  %836 = load i32*, i32** %flow_group_in, align 8, !dbg !18509
  %add.ptr1385 = getelementptr i32, i32* %836, i64 7, !dbg !18509
  %837 = load i32, i32* %add.ptr1385, align 4, !dbg !18509
  %and1386 = and i32 %837, 65280, !dbg !18509
  %shl1387 = shl i32 %and1386, 8, !dbg !18509
  %or1388 = or i32 %shl1384, %shl1387, !dbg !18509
  %838 = load i32*, i32** %flow_group_in, align 8, !dbg !18509
  %add.ptr1389 = getelementptr i32, i32* %838, i64 7, !dbg !18509
  %839 = load i32, i32* %add.ptr1389, align 4, !dbg !18509
  %and1390 = and i32 %839, 16711680, !dbg !18509
  %shr1391 = lshr i32 %and1390, 8, !dbg !18509
  %or1392 = or i32 %or1388, %shr1391, !dbg !18509
  %840 = load i32*, i32** %flow_group_in, align 8, !dbg !18509
  %add.ptr1393 = getelementptr i32, i32* %840, i64 7, !dbg !18509
  %841 = load i32, i32* %add.ptr1393, align 4, !dbg !18509
  %and1394 = and i32 %841, -16777216, !dbg !18509
  %shr1395 = lshr i32 %and1394, 24, !dbg !18509
  %or1396 = or i32 %or1392, %shr1395, !dbg !18509
  br label %cond.end1400, !dbg !18509

cond.false1397:                                   ; preds = %cond.end1372
  %842 = load i32*, i32** %flow_group_in, align 8, !dbg !18509
  %add.ptr1398 = getelementptr i32, i32* %842, i64 7, !dbg !18509
  %843 = load i32, i32* %add.ptr1398, align 4, !dbg !18509
  %call1399 = call i32 @__fswab32(i32 %843) #10, !dbg !18509
  br label %cond.end1400, !dbg !18509

cond.end1400:                                     ; preds = %cond.false1397, %cond.true1381
  %cond1401 = phi i32 [ %or1396, %cond.true1381 ], [ %call1399, %cond.false1397 ], !dbg !18509
  %and1402 = and i32 %cond1401, 0, !dbg !18509
  %844 = load i32, i32* %_v1296, align 4, !dbg !18509
  %shl1403 = shl i32 %844, 0, !dbg !18509
  %or1404 = or i32 %and1402, %shl1403, !dbg !18509
  %and1405 = and i32 %or1404, 16711680, !dbg !18509
  %shr1406 = lshr i32 %and1405, 8, !dbg !18509
  %or1407 = or i32 %or1379, %shr1406, !dbg !18509
  %845 = load i32*, i32** %flow_group_in, align 8, !dbg !18509
  %add.ptr1408 = getelementptr i32, i32* %845, i64 7, !dbg !18509
  %846 = load i32, i32* %add.ptr1408, align 4, !dbg !18509
  %847 = call i1 @llvm.is.constant.i32(i32 %846), !dbg !18509
  br i1 %847, label %cond.true1409, label %cond.false1425, !dbg !18509

cond.true1409:                                    ; preds = %cond.end1400
  %848 = load i32*, i32** %flow_group_in, align 8, !dbg !18509
  %add.ptr1410 = getelementptr i32, i32* %848, i64 7, !dbg !18509
  %849 = load i32, i32* %add.ptr1410, align 4, !dbg !18509
  %and1411 = and i32 %849, 255, !dbg !18509
  %shl1412 = shl i32 %and1411, 24, !dbg !18509
  %850 = load i32*, i32** %flow_group_in, align 8, !dbg !18509
  %add.ptr1413 = getelementptr i32, i32* %850, i64 7, !dbg !18509
  %851 = load i32, i32* %add.ptr1413, align 4, !dbg !18509
  %and1414 = and i32 %851, 65280, !dbg !18509
  %shl1415 = shl i32 %and1414, 8, !dbg !18509
  %or1416 = or i32 %shl1412, %shl1415, !dbg !18509
  %852 = load i32*, i32** %flow_group_in, align 8, !dbg !18509
  %add.ptr1417 = getelementptr i32, i32* %852, i64 7, !dbg !18509
  %853 = load i32, i32* %add.ptr1417, align 4, !dbg !18509
  %and1418 = and i32 %853, 16711680, !dbg !18509
  %shr1419 = lshr i32 %and1418, 8, !dbg !18509
  %or1420 = or i32 %or1416, %shr1419, !dbg !18509
  %854 = load i32*, i32** %flow_group_in, align 8, !dbg !18509
  %add.ptr1421 = getelementptr i32, i32* %854, i64 7, !dbg !18509
  %855 = load i32, i32* %add.ptr1421, align 4, !dbg !18509
  %and1422 = and i32 %855, -16777216, !dbg !18509
  %shr1423 = lshr i32 %and1422, 24, !dbg !18509
  %or1424 = or i32 %or1420, %shr1423, !dbg !18509
  br label %cond.end1428, !dbg !18509

cond.false1425:                                   ; preds = %cond.end1400
  %856 = load i32*, i32** %flow_group_in, align 8, !dbg !18509
  %add.ptr1426 = getelementptr i32, i32* %856, i64 7, !dbg !18509
  %857 = load i32, i32* %add.ptr1426, align 4, !dbg !18509
  %call1427 = call i32 @__fswab32(i32 %857) #10, !dbg !18509
  br label %cond.end1428, !dbg !18509

cond.end1428:                                     ; preds = %cond.false1425, %cond.true1409
  %cond1429 = phi i32 [ %or1424, %cond.true1409 ], [ %call1427, %cond.false1425 ], !dbg !18509
  %and1430 = and i32 %cond1429, 0, !dbg !18509
  %858 = load i32, i32* %_v1296, align 4, !dbg !18509
  %shl1431 = shl i32 %858, 0, !dbg !18509
  %or1432 = or i32 %and1430, %shl1431, !dbg !18509
  %and1433 = and i32 %or1432, -16777216, !dbg !18509
  %shr1434 = lshr i32 %and1433, 24, !dbg !18509
  %or1435 = or i32 %or1407, %shr1434, !dbg !18509
  br label %cond.end1463, !dbg !18509

cond.false1436:                                   ; preds = %cond.end1319
  %859 = load i32*, i32** %flow_group_in, align 8, !dbg !18509
  %add.ptr1437 = getelementptr i32, i32* %859, i64 7, !dbg !18509
  %860 = load i32, i32* %add.ptr1437, align 4, !dbg !18509
  %861 = call i1 @llvm.is.constant.i32(i32 %860), !dbg !18509
  br i1 %861, label %cond.true1438, label %cond.false1454, !dbg !18509

cond.true1438:                                    ; preds = %cond.false1436
  %862 = load i32*, i32** %flow_group_in, align 8, !dbg !18509
  %add.ptr1439 = getelementptr i32, i32* %862, i64 7, !dbg !18509
  %863 = load i32, i32* %add.ptr1439, align 4, !dbg !18509
  %and1440 = and i32 %863, 255, !dbg !18509
  %shl1441 = shl i32 %and1440, 24, !dbg !18509
  %864 = load i32*, i32** %flow_group_in, align 8, !dbg !18509
  %add.ptr1442 = getelementptr i32, i32* %864, i64 7, !dbg !18509
  %865 = load i32, i32* %add.ptr1442, align 4, !dbg !18509
  %and1443 = and i32 %865, 65280, !dbg !18509
  %shl1444 = shl i32 %and1443, 8, !dbg !18509
  %or1445 = or i32 %shl1441, %shl1444, !dbg !18509
  %866 = load i32*, i32** %flow_group_in, align 8, !dbg !18509
  %add.ptr1446 = getelementptr i32, i32* %866, i64 7, !dbg !18509
  %867 = load i32, i32* %add.ptr1446, align 4, !dbg !18509
  %and1447 = and i32 %867, 16711680, !dbg !18509
  %shr1448 = lshr i32 %and1447, 8, !dbg !18509
  %or1449 = or i32 %or1445, %shr1448, !dbg !18509
  %868 = load i32*, i32** %flow_group_in, align 8, !dbg !18509
  %add.ptr1450 = getelementptr i32, i32* %868, i64 7, !dbg !18509
  %869 = load i32, i32* %add.ptr1450, align 4, !dbg !18509
  %and1451 = and i32 %869, -16777216, !dbg !18509
  %shr1452 = lshr i32 %and1451, 24, !dbg !18509
  %or1453 = or i32 %or1449, %shr1452, !dbg !18509
  br label %cond.end1457, !dbg !18509

cond.false1454:                                   ; preds = %cond.false1436
  %870 = load i32*, i32** %flow_group_in, align 8, !dbg !18509
  %add.ptr1455 = getelementptr i32, i32* %870, i64 7, !dbg !18509
  %871 = load i32, i32* %add.ptr1455, align 4, !dbg !18509
  %call1456 = call i32 @__fswab32(i32 %871) #10, !dbg !18509
  br label %cond.end1457, !dbg !18509

cond.end1457:                                     ; preds = %cond.false1454, %cond.true1438
  %cond1458 = phi i32 [ %or1453, %cond.true1438 ], [ %call1456, %cond.false1454 ], !dbg !18509
  %and1459 = and i32 %cond1458, 0, !dbg !18509
  %872 = load i32, i32* %_v1296, align 4, !dbg !18509
  %shl1460 = shl i32 %872, 0, !dbg !18509
  %or1461 = or i32 %and1459, %shl1460, !dbg !18509
  %call1462 = call i32 @__fswab32(i32 %or1461) #10, !dbg !18509
  br label %cond.end1463, !dbg !18509

cond.end1463:                                     ; preds = %cond.end1457, %cond.end1428
  %cond1464 = phi i32 [ %or1435, %cond.end1428 ], [ %call1462, %cond.end1457 ], !dbg !18509
  %873 = load i32*, i32** %flow_group_in, align 8, !dbg !18509
  %add.ptr1465 = getelementptr i32, i32* %873, i64 7, !dbg !18509
  store i32 %cond1464, i32* %add.ptr1465, align 4, !dbg !18509
  br label %do.end1466, !dbg !18509

do.end1466:                                       ; preds = %cond.end1463
  br label %do.body1467, !dbg !18512

do.body1467:                                      ; preds = %do.end1466
  call void @llvm.dbg.declare(metadata i32* %_v1468, metadata !18513, metadata !DIExpression()), !dbg !18515
  %874 = load i32, i32* %ix, align 4, !dbg !18515
  %875 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !18515
  %total_vports1469 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %875, i32 0, i32 8, !dbg !18515
  %876 = load i32, i32* %total_vports1469, align 4, !dbg !18515
  %add1470 = add i32 %874, %876, !dbg !18515
  %sub1471 = sub i32 %add1470, 1, !dbg !18515
  store i32 %sub1471, i32* %_v1468, align 4, !dbg !18515
  br label %do.body1472, !dbg !18515

do.body1472:                                      ; preds = %do.body1467
  br label %do.end1473, !dbg !18516

do.end1473:                                       ; preds = %do.body1472
  %877 = load i32*, i32** %flow_group_in, align 8, !dbg !18515
  %add.ptr1474 = getelementptr i32, i32* %877, i64 9, !dbg !18515
  %878 = load i32, i32* %add.ptr1474, align 4, !dbg !18515
  %879 = call i1 @llvm.is.constant.i32(i32 %878), !dbg !18515
  br i1 %879, label %cond.true1475, label %cond.false1491, !dbg !18515

cond.true1475:                                    ; preds = %do.end1473
  %880 = load i32*, i32** %flow_group_in, align 8, !dbg !18515
  %add.ptr1476 = getelementptr i32, i32* %880, i64 9, !dbg !18515
  %881 = load i32, i32* %add.ptr1476, align 4, !dbg !18515
  %and1477 = and i32 %881, 255, !dbg !18515
  %shl1478 = shl i32 %and1477, 24, !dbg !18515
  %882 = load i32*, i32** %flow_group_in, align 8, !dbg !18515
  %add.ptr1479 = getelementptr i32, i32* %882, i64 9, !dbg !18515
  %883 = load i32, i32* %add.ptr1479, align 4, !dbg !18515
  %and1480 = and i32 %883, 65280, !dbg !18515
  %shl1481 = shl i32 %and1480, 8, !dbg !18515
  %or1482 = or i32 %shl1478, %shl1481, !dbg !18515
  %884 = load i32*, i32** %flow_group_in, align 8, !dbg !18515
  %add.ptr1483 = getelementptr i32, i32* %884, i64 9, !dbg !18515
  %885 = load i32, i32* %add.ptr1483, align 4, !dbg !18515
  %and1484 = and i32 %885, 16711680, !dbg !18515
  %shr1485 = lshr i32 %and1484, 8, !dbg !18515
  %or1486 = or i32 %or1482, %shr1485, !dbg !18515
  %886 = load i32*, i32** %flow_group_in, align 8, !dbg !18515
  %add.ptr1487 = getelementptr i32, i32* %886, i64 9, !dbg !18515
  %887 = load i32, i32* %add.ptr1487, align 4, !dbg !18515
  %and1488 = and i32 %887, -16777216, !dbg !18515
  %shr1489 = lshr i32 %and1488, 24, !dbg !18515
  %or1490 = or i32 %or1486, %shr1489, !dbg !18515
  br label %cond.end1494, !dbg !18515

cond.false1491:                                   ; preds = %do.end1473
  %888 = load i32*, i32** %flow_group_in, align 8, !dbg !18515
  %add.ptr1492 = getelementptr i32, i32* %888, i64 9, !dbg !18515
  %889 = load i32, i32* %add.ptr1492, align 4, !dbg !18515
  %call1493 = call i32 @__fswab32(i32 %889) #10, !dbg !18515
  br label %cond.end1494, !dbg !18515

cond.end1494:                                     ; preds = %cond.false1491, %cond.true1475
  %cond1495 = phi i32 [ %or1490, %cond.true1475 ], [ %call1493, %cond.false1491 ], !dbg !18515
  %and1496 = and i32 %cond1495, 0, !dbg !18515
  %890 = load i32, i32* %_v1468, align 4, !dbg !18515
  %shl1497 = shl i32 %890, 0, !dbg !18515
  %or1498 = or i32 %and1496, %shl1497, !dbg !18515
  %891 = call i1 @llvm.is.constant.i32(i32 %or1498), !dbg !18515
  br i1 %891, label %cond.true1499, label %cond.false1611, !dbg !18515

cond.true1499:                                    ; preds = %cond.end1494
  %892 = load i32*, i32** %flow_group_in, align 8, !dbg !18515
  %add.ptr1500 = getelementptr i32, i32* %892, i64 9, !dbg !18515
  %893 = load i32, i32* %add.ptr1500, align 4, !dbg !18515
  %894 = call i1 @llvm.is.constant.i32(i32 %893), !dbg !18515
  br i1 %894, label %cond.true1501, label %cond.false1517, !dbg !18515

cond.true1501:                                    ; preds = %cond.true1499
  %895 = load i32*, i32** %flow_group_in, align 8, !dbg !18515
  %add.ptr1502 = getelementptr i32, i32* %895, i64 9, !dbg !18515
  %896 = load i32, i32* %add.ptr1502, align 4, !dbg !18515
  %and1503 = and i32 %896, 255, !dbg !18515
  %shl1504 = shl i32 %and1503, 24, !dbg !18515
  %897 = load i32*, i32** %flow_group_in, align 8, !dbg !18515
  %add.ptr1505 = getelementptr i32, i32* %897, i64 9, !dbg !18515
  %898 = load i32, i32* %add.ptr1505, align 4, !dbg !18515
  %and1506 = and i32 %898, 65280, !dbg !18515
  %shl1507 = shl i32 %and1506, 8, !dbg !18515
  %or1508 = or i32 %shl1504, %shl1507, !dbg !18515
  %899 = load i32*, i32** %flow_group_in, align 8, !dbg !18515
  %add.ptr1509 = getelementptr i32, i32* %899, i64 9, !dbg !18515
  %900 = load i32, i32* %add.ptr1509, align 4, !dbg !18515
  %and1510 = and i32 %900, 16711680, !dbg !18515
  %shr1511 = lshr i32 %and1510, 8, !dbg !18515
  %or1512 = or i32 %or1508, %shr1511, !dbg !18515
  %901 = load i32*, i32** %flow_group_in, align 8, !dbg !18515
  %add.ptr1513 = getelementptr i32, i32* %901, i64 9, !dbg !18515
  %902 = load i32, i32* %add.ptr1513, align 4, !dbg !18515
  %and1514 = and i32 %902, -16777216, !dbg !18515
  %shr1515 = lshr i32 %and1514, 24, !dbg !18515
  %or1516 = or i32 %or1512, %shr1515, !dbg !18515
  br label %cond.end1520, !dbg !18515

cond.false1517:                                   ; preds = %cond.true1499
  %903 = load i32*, i32** %flow_group_in, align 8, !dbg !18515
  %add.ptr1518 = getelementptr i32, i32* %903, i64 9, !dbg !18515
  %904 = load i32, i32* %add.ptr1518, align 4, !dbg !18515
  %call1519 = call i32 @__fswab32(i32 %904) #10, !dbg !18515
  br label %cond.end1520, !dbg !18515

cond.end1520:                                     ; preds = %cond.false1517, %cond.true1501
  %cond1521 = phi i32 [ %or1516, %cond.true1501 ], [ %call1519, %cond.false1517 ], !dbg !18515
  %and1522 = and i32 %cond1521, 0, !dbg !18515
  %905 = load i32, i32* %_v1468, align 4, !dbg !18515
  %shl1523 = shl i32 %905, 0, !dbg !18515
  %or1524 = or i32 %and1522, %shl1523, !dbg !18515
  %and1525 = and i32 %or1524, 255, !dbg !18515
  %shl1526 = shl i32 %and1525, 24, !dbg !18515
  %906 = load i32*, i32** %flow_group_in, align 8, !dbg !18515
  %add.ptr1527 = getelementptr i32, i32* %906, i64 9, !dbg !18515
  %907 = load i32, i32* %add.ptr1527, align 4, !dbg !18515
  %908 = call i1 @llvm.is.constant.i32(i32 %907), !dbg !18515
  br i1 %908, label %cond.true1528, label %cond.false1544, !dbg !18515

cond.true1528:                                    ; preds = %cond.end1520
  %909 = load i32*, i32** %flow_group_in, align 8, !dbg !18515
  %add.ptr1529 = getelementptr i32, i32* %909, i64 9, !dbg !18515
  %910 = load i32, i32* %add.ptr1529, align 4, !dbg !18515
  %and1530 = and i32 %910, 255, !dbg !18515
  %shl1531 = shl i32 %and1530, 24, !dbg !18515
  %911 = load i32*, i32** %flow_group_in, align 8, !dbg !18515
  %add.ptr1532 = getelementptr i32, i32* %911, i64 9, !dbg !18515
  %912 = load i32, i32* %add.ptr1532, align 4, !dbg !18515
  %and1533 = and i32 %912, 65280, !dbg !18515
  %shl1534 = shl i32 %and1533, 8, !dbg !18515
  %or1535 = or i32 %shl1531, %shl1534, !dbg !18515
  %913 = load i32*, i32** %flow_group_in, align 8, !dbg !18515
  %add.ptr1536 = getelementptr i32, i32* %913, i64 9, !dbg !18515
  %914 = load i32, i32* %add.ptr1536, align 4, !dbg !18515
  %and1537 = and i32 %914, 16711680, !dbg !18515
  %shr1538 = lshr i32 %and1537, 8, !dbg !18515
  %or1539 = or i32 %or1535, %shr1538, !dbg !18515
  %915 = load i32*, i32** %flow_group_in, align 8, !dbg !18515
  %add.ptr1540 = getelementptr i32, i32* %915, i64 9, !dbg !18515
  %916 = load i32, i32* %add.ptr1540, align 4, !dbg !18515
  %and1541 = and i32 %916, -16777216, !dbg !18515
  %shr1542 = lshr i32 %and1541, 24, !dbg !18515
  %or1543 = or i32 %or1539, %shr1542, !dbg !18515
  br label %cond.end1547, !dbg !18515

cond.false1544:                                   ; preds = %cond.end1520
  %917 = load i32*, i32** %flow_group_in, align 8, !dbg !18515
  %add.ptr1545 = getelementptr i32, i32* %917, i64 9, !dbg !18515
  %918 = load i32, i32* %add.ptr1545, align 4, !dbg !18515
  %call1546 = call i32 @__fswab32(i32 %918) #10, !dbg !18515
  br label %cond.end1547, !dbg !18515

cond.end1547:                                     ; preds = %cond.false1544, %cond.true1528
  %cond1548 = phi i32 [ %or1543, %cond.true1528 ], [ %call1546, %cond.false1544 ], !dbg !18515
  %and1549 = and i32 %cond1548, 0, !dbg !18515
  %919 = load i32, i32* %_v1468, align 4, !dbg !18515
  %shl1550 = shl i32 %919, 0, !dbg !18515
  %or1551 = or i32 %and1549, %shl1550, !dbg !18515
  %and1552 = and i32 %or1551, 65280, !dbg !18515
  %shl1553 = shl i32 %and1552, 8, !dbg !18515
  %or1554 = or i32 %shl1526, %shl1553, !dbg !18515
  %920 = load i32*, i32** %flow_group_in, align 8, !dbg !18515
  %add.ptr1555 = getelementptr i32, i32* %920, i64 9, !dbg !18515
  %921 = load i32, i32* %add.ptr1555, align 4, !dbg !18515
  %922 = call i1 @llvm.is.constant.i32(i32 %921), !dbg !18515
  br i1 %922, label %cond.true1556, label %cond.false1572, !dbg !18515

cond.true1556:                                    ; preds = %cond.end1547
  %923 = load i32*, i32** %flow_group_in, align 8, !dbg !18515
  %add.ptr1557 = getelementptr i32, i32* %923, i64 9, !dbg !18515
  %924 = load i32, i32* %add.ptr1557, align 4, !dbg !18515
  %and1558 = and i32 %924, 255, !dbg !18515
  %shl1559 = shl i32 %and1558, 24, !dbg !18515
  %925 = load i32*, i32** %flow_group_in, align 8, !dbg !18515
  %add.ptr1560 = getelementptr i32, i32* %925, i64 9, !dbg !18515
  %926 = load i32, i32* %add.ptr1560, align 4, !dbg !18515
  %and1561 = and i32 %926, 65280, !dbg !18515
  %shl1562 = shl i32 %and1561, 8, !dbg !18515
  %or1563 = or i32 %shl1559, %shl1562, !dbg !18515
  %927 = load i32*, i32** %flow_group_in, align 8, !dbg !18515
  %add.ptr1564 = getelementptr i32, i32* %927, i64 9, !dbg !18515
  %928 = load i32, i32* %add.ptr1564, align 4, !dbg !18515
  %and1565 = and i32 %928, 16711680, !dbg !18515
  %shr1566 = lshr i32 %and1565, 8, !dbg !18515
  %or1567 = or i32 %or1563, %shr1566, !dbg !18515
  %929 = load i32*, i32** %flow_group_in, align 8, !dbg !18515
  %add.ptr1568 = getelementptr i32, i32* %929, i64 9, !dbg !18515
  %930 = load i32, i32* %add.ptr1568, align 4, !dbg !18515
  %and1569 = and i32 %930, -16777216, !dbg !18515
  %shr1570 = lshr i32 %and1569, 24, !dbg !18515
  %or1571 = or i32 %or1567, %shr1570, !dbg !18515
  br label %cond.end1575, !dbg !18515

cond.false1572:                                   ; preds = %cond.end1547
  %931 = load i32*, i32** %flow_group_in, align 8, !dbg !18515
  %add.ptr1573 = getelementptr i32, i32* %931, i64 9, !dbg !18515
  %932 = load i32, i32* %add.ptr1573, align 4, !dbg !18515
  %call1574 = call i32 @__fswab32(i32 %932) #10, !dbg !18515
  br label %cond.end1575, !dbg !18515

cond.end1575:                                     ; preds = %cond.false1572, %cond.true1556
  %cond1576 = phi i32 [ %or1571, %cond.true1556 ], [ %call1574, %cond.false1572 ], !dbg !18515
  %and1577 = and i32 %cond1576, 0, !dbg !18515
  %933 = load i32, i32* %_v1468, align 4, !dbg !18515
  %shl1578 = shl i32 %933, 0, !dbg !18515
  %or1579 = or i32 %and1577, %shl1578, !dbg !18515
  %and1580 = and i32 %or1579, 16711680, !dbg !18515
  %shr1581 = lshr i32 %and1580, 8, !dbg !18515
  %or1582 = or i32 %or1554, %shr1581, !dbg !18515
  %934 = load i32*, i32** %flow_group_in, align 8, !dbg !18515
  %add.ptr1583 = getelementptr i32, i32* %934, i64 9, !dbg !18515
  %935 = load i32, i32* %add.ptr1583, align 4, !dbg !18515
  %936 = call i1 @llvm.is.constant.i32(i32 %935), !dbg !18515
  br i1 %936, label %cond.true1584, label %cond.false1600, !dbg !18515

cond.true1584:                                    ; preds = %cond.end1575
  %937 = load i32*, i32** %flow_group_in, align 8, !dbg !18515
  %add.ptr1585 = getelementptr i32, i32* %937, i64 9, !dbg !18515
  %938 = load i32, i32* %add.ptr1585, align 4, !dbg !18515
  %and1586 = and i32 %938, 255, !dbg !18515
  %shl1587 = shl i32 %and1586, 24, !dbg !18515
  %939 = load i32*, i32** %flow_group_in, align 8, !dbg !18515
  %add.ptr1588 = getelementptr i32, i32* %939, i64 9, !dbg !18515
  %940 = load i32, i32* %add.ptr1588, align 4, !dbg !18515
  %and1589 = and i32 %940, 65280, !dbg !18515
  %shl1590 = shl i32 %and1589, 8, !dbg !18515
  %or1591 = or i32 %shl1587, %shl1590, !dbg !18515
  %941 = load i32*, i32** %flow_group_in, align 8, !dbg !18515
  %add.ptr1592 = getelementptr i32, i32* %941, i64 9, !dbg !18515
  %942 = load i32, i32* %add.ptr1592, align 4, !dbg !18515
  %and1593 = and i32 %942, 16711680, !dbg !18515
  %shr1594 = lshr i32 %and1593, 8, !dbg !18515
  %or1595 = or i32 %or1591, %shr1594, !dbg !18515
  %943 = load i32*, i32** %flow_group_in, align 8, !dbg !18515
  %add.ptr1596 = getelementptr i32, i32* %943, i64 9, !dbg !18515
  %944 = load i32, i32* %add.ptr1596, align 4, !dbg !18515
  %and1597 = and i32 %944, -16777216, !dbg !18515
  %shr1598 = lshr i32 %and1597, 24, !dbg !18515
  %or1599 = or i32 %or1595, %shr1598, !dbg !18515
  br label %cond.end1603, !dbg !18515

cond.false1600:                                   ; preds = %cond.end1575
  %945 = load i32*, i32** %flow_group_in, align 8, !dbg !18515
  %add.ptr1601 = getelementptr i32, i32* %945, i64 9, !dbg !18515
  %946 = load i32, i32* %add.ptr1601, align 4, !dbg !18515
  %call1602 = call i32 @__fswab32(i32 %946) #10, !dbg !18515
  br label %cond.end1603, !dbg !18515

cond.end1603:                                     ; preds = %cond.false1600, %cond.true1584
  %cond1604 = phi i32 [ %or1599, %cond.true1584 ], [ %call1602, %cond.false1600 ], !dbg !18515
  %and1605 = and i32 %cond1604, 0, !dbg !18515
  %947 = load i32, i32* %_v1468, align 4, !dbg !18515
  %shl1606 = shl i32 %947, 0, !dbg !18515
  %or1607 = or i32 %and1605, %shl1606, !dbg !18515
  %and1608 = and i32 %or1607, -16777216, !dbg !18515
  %shr1609 = lshr i32 %and1608, 24, !dbg !18515
  %or1610 = or i32 %or1582, %shr1609, !dbg !18515
  br label %cond.end1638, !dbg !18515

cond.false1611:                                   ; preds = %cond.end1494
  %948 = load i32*, i32** %flow_group_in, align 8, !dbg !18515
  %add.ptr1612 = getelementptr i32, i32* %948, i64 9, !dbg !18515
  %949 = load i32, i32* %add.ptr1612, align 4, !dbg !18515
  %950 = call i1 @llvm.is.constant.i32(i32 %949), !dbg !18515
  br i1 %950, label %cond.true1613, label %cond.false1629, !dbg !18515

cond.true1613:                                    ; preds = %cond.false1611
  %951 = load i32*, i32** %flow_group_in, align 8, !dbg !18515
  %add.ptr1614 = getelementptr i32, i32* %951, i64 9, !dbg !18515
  %952 = load i32, i32* %add.ptr1614, align 4, !dbg !18515
  %and1615 = and i32 %952, 255, !dbg !18515
  %shl1616 = shl i32 %and1615, 24, !dbg !18515
  %953 = load i32*, i32** %flow_group_in, align 8, !dbg !18515
  %add.ptr1617 = getelementptr i32, i32* %953, i64 9, !dbg !18515
  %954 = load i32, i32* %add.ptr1617, align 4, !dbg !18515
  %and1618 = and i32 %954, 65280, !dbg !18515
  %shl1619 = shl i32 %and1618, 8, !dbg !18515
  %or1620 = or i32 %shl1616, %shl1619, !dbg !18515
  %955 = load i32*, i32** %flow_group_in, align 8, !dbg !18515
  %add.ptr1621 = getelementptr i32, i32* %955, i64 9, !dbg !18515
  %956 = load i32, i32* %add.ptr1621, align 4, !dbg !18515
  %and1622 = and i32 %956, 16711680, !dbg !18515
  %shr1623 = lshr i32 %and1622, 8, !dbg !18515
  %or1624 = or i32 %or1620, %shr1623, !dbg !18515
  %957 = load i32*, i32** %flow_group_in, align 8, !dbg !18515
  %add.ptr1625 = getelementptr i32, i32* %957, i64 9, !dbg !18515
  %958 = load i32, i32* %add.ptr1625, align 4, !dbg !18515
  %and1626 = and i32 %958, -16777216, !dbg !18515
  %shr1627 = lshr i32 %and1626, 24, !dbg !18515
  %or1628 = or i32 %or1624, %shr1627, !dbg !18515
  br label %cond.end1632, !dbg !18515

cond.false1629:                                   ; preds = %cond.false1611
  %959 = load i32*, i32** %flow_group_in, align 8, !dbg !18515
  %add.ptr1630 = getelementptr i32, i32* %959, i64 9, !dbg !18515
  %960 = load i32, i32* %add.ptr1630, align 4, !dbg !18515
  %call1631 = call i32 @__fswab32(i32 %960) #10, !dbg !18515
  br label %cond.end1632, !dbg !18515

cond.end1632:                                     ; preds = %cond.false1629, %cond.true1613
  %cond1633 = phi i32 [ %or1628, %cond.true1613 ], [ %call1631, %cond.false1629 ], !dbg !18515
  %and1634 = and i32 %cond1633, 0, !dbg !18515
  %961 = load i32, i32* %_v1468, align 4, !dbg !18515
  %shl1635 = shl i32 %961, 0, !dbg !18515
  %or1636 = or i32 %and1634, %shl1635, !dbg !18515
  %call1637 = call i32 @__fswab32(i32 %or1636) #10, !dbg !18515
  br label %cond.end1638, !dbg !18515

cond.end1638:                                     ; preds = %cond.end1632, %cond.end1603
  %cond1639 = phi i32 [ %or1610, %cond.end1603 ], [ %call1637, %cond.end1632 ], !dbg !18515
  %962 = load i32*, i32** %flow_group_in, align 8, !dbg !18515
  %add.ptr1640 = getelementptr i32, i32* %962, i64 9, !dbg !18515
  store i32 %cond1639, i32* %add.ptr1640, align 4, !dbg !18515
  br label %do.end1641, !dbg !18515

do.end1641:                                       ; preds = %cond.end1638
  %963 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !18518
  %total_vports1642 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %963, i32 0, i32 8, !dbg !18519
  %964 = load i32, i32* %total_vports1642, align 4, !dbg !18519
  %965 = load i32, i32* %ix, align 4, !dbg !18520
  %add1643 = add i32 %965, %964, !dbg !18520
  store i32 %add1643, i32* %ix, align 4, !dbg !18520
  %966 = load %struct.mlx5_flow_table*, %struct.mlx5_flow_table** %fdb, align 8, !dbg !18521
  %967 = load i32*, i32** %flow_group_in, align 8, !dbg !18522
  %call1644 = call %struct.mlx5_flow_group* @mlx5_create_flow_group(%struct.mlx5_flow_table* %966, i32* %967) #8, !dbg !18523
  store %struct.mlx5_flow_group* %call1644, %struct.mlx5_flow_group** %g, align 8, !dbg !18524
  %968 = load %struct.mlx5_flow_group*, %struct.mlx5_flow_group** %g, align 8, !dbg !18525
  %969 = bitcast %struct.mlx5_flow_group* %968 to i8*, !dbg !18525
  %call1645 = call zeroext i1 @IS_ERR(i8* %969) #8, !dbg !18527
  br i1 %call1645, label %if.then1646, label %if.end1650, !dbg !18528

if.then1646:                                      ; preds = %do.end1641
  %970 = load %struct.mlx5_flow_group*, %struct.mlx5_flow_group** %g, align 8, !dbg !18529
  %971 = bitcast %struct.mlx5_flow_group* %970 to i8*, !dbg !18529
  %call1647 = call i64 @PTR_ERR(i8* %971) #8, !dbg !18531
  %conv1648 = trunc i64 %call1647 to i32, !dbg !18531
  store i32 %conv1648, i32* %err, align 4, !dbg !18532
  %972 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !18533
  %device1649 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %972, i32 0, i32 0, !dbg !18533
  %973 = load %struct.device*, %struct.device** %device1649, align 8, !dbg !18533
  %974 = load i32, i32* %err, align 4, !dbg !18533
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %973, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.30, i64 0, i64 0), i32 %974) #9, !dbg !18533
  br label %peer_miss_err, !dbg !18534

if.end1650:                                       ; preds = %do.end1641
  %975 = load %struct.mlx5_flow_group*, %struct.mlx5_flow_group** %g, align 8, !dbg !18535
  %976 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !18536
  %fdb_table1651 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %976, i32 0, i32 2, !dbg !18537
  %977 = getelementptr inbounds %struct.mlx5_eswitch_fdb, %struct.mlx5_eswitch_fdb* %fdb_table1651, i32 0, i32 0, !dbg !18538
  %offloads1652 = bitcast %union.anon.154* %977 to %struct.offloads_fdb*, !dbg !18538
  %peer_miss_grp = getelementptr inbounds %struct.offloads_fdb, %struct.offloads_fdb* %offloads1652, i32 0, i32 3, !dbg !18539
  store %struct.mlx5_flow_group* %975, %struct.mlx5_flow_group** %peer_miss_grp, align 8, !dbg !18540
  br label %if.end1653, !dbg !18541

if.end1653:                                       ; preds = %if.end1650, %cond.end941
  %978 = load i32*, i32** %flow_group_in, align 8, !dbg !18542
  %979 = bitcast i32* %978 to i8*, !dbg !18543
  %980 = load i32, i32* %inlen, align 4, !dbg !18544
  %conv1654 = sext i32 %980 to i64, !dbg !18544
  call void @llvm.memset.p0i8.i64(i8* align 4 %979, i8 0, i64 %conv1654, i1 false), !dbg !18543
  br label %do.body1655, !dbg !18545

do.body1655:                                      ; preds = %if.end1653
  call void @llvm.dbg.declare(metadata i32* %_v1656, metadata !18546, metadata !DIExpression()), !dbg !18548
  store i32 1, i32* %_v1656, align 4, !dbg !18548
  br label %do.body1657, !dbg !18548

do.body1657:                                      ; preds = %do.body1655
  br label %do.end1658, !dbg !18549

do.end1658:                                       ; preds = %do.body1657
  %981 = load i32*, i32** %flow_group_in, align 8, !dbg !18548
  %add.ptr1659 = getelementptr i32, i32* %981, i64 15, !dbg !18548
  %982 = load i32, i32* %add.ptr1659, align 4, !dbg !18548
  %983 = call i1 @llvm.is.constant.i32(i32 %982), !dbg !18548
  br i1 %983, label %cond.true1660, label %cond.false1676, !dbg !18548

cond.true1660:                                    ; preds = %do.end1658
  %984 = load i32*, i32** %flow_group_in, align 8, !dbg !18548
  %add.ptr1661 = getelementptr i32, i32* %984, i64 15, !dbg !18548
  %985 = load i32, i32* %add.ptr1661, align 4, !dbg !18548
  %and1662 = and i32 %985, 255, !dbg !18548
  %shl1663 = shl i32 %and1662, 24, !dbg !18548
  %986 = load i32*, i32** %flow_group_in, align 8, !dbg !18548
  %add.ptr1664 = getelementptr i32, i32* %986, i64 15, !dbg !18548
  %987 = load i32, i32* %add.ptr1664, align 4, !dbg !18548
  %and1665 = and i32 %987, 65280, !dbg !18548
  %shl1666 = shl i32 %and1665, 8, !dbg !18548
  %or1667 = or i32 %shl1663, %shl1666, !dbg !18548
  %988 = load i32*, i32** %flow_group_in, align 8, !dbg !18548
  %add.ptr1668 = getelementptr i32, i32* %988, i64 15, !dbg !18548
  %989 = load i32, i32* %add.ptr1668, align 4, !dbg !18548
  %and1669 = and i32 %989, 16711680, !dbg !18548
  %shr1670 = lshr i32 %and1669, 8, !dbg !18548
  %or1671 = or i32 %or1667, %shr1670, !dbg !18548
  %990 = load i32*, i32** %flow_group_in, align 8, !dbg !18548
  %add.ptr1672 = getelementptr i32, i32* %990, i64 15, !dbg !18548
  %991 = load i32, i32* %add.ptr1672, align 4, !dbg !18548
  %and1673 = and i32 %991, -16777216, !dbg !18548
  %shr1674 = lshr i32 %and1673, 24, !dbg !18548
  %or1675 = or i32 %or1671, %shr1674, !dbg !18548
  br label %cond.end1679, !dbg !18548

cond.false1676:                                   ; preds = %do.end1658
  %992 = load i32*, i32** %flow_group_in, align 8, !dbg !18548
  %add.ptr1677 = getelementptr i32, i32* %992, i64 15, !dbg !18548
  %993 = load i32, i32* %add.ptr1677, align 4, !dbg !18548
  %call1678 = call i32 @__fswab32(i32 %993) #10, !dbg !18548
  br label %cond.end1679, !dbg !18548

cond.end1679:                                     ; preds = %cond.false1676, %cond.true1660
  %cond1680 = phi i32 [ %or1675, %cond.true1660 ], [ %call1678, %cond.false1676 ], !dbg !18548
  %and1681 = and i32 %cond1680, -256, !dbg !18548
  %994 = load i32, i32* %_v1656, align 4, !dbg !18548
  %and1682 = and i32 %994, 255, !dbg !18548
  %shl1683 = shl i32 %and1682, 0, !dbg !18548
  %or1684 = or i32 %and1681, %shl1683, !dbg !18548
  %995 = call i1 @llvm.is.constant.i32(i32 %or1684), !dbg !18548
  br i1 %995, label %cond.true1685, label %cond.false1801, !dbg !18548

cond.true1685:                                    ; preds = %cond.end1679
  %996 = load i32*, i32** %flow_group_in, align 8, !dbg !18548
  %add.ptr1686 = getelementptr i32, i32* %996, i64 15, !dbg !18548
  %997 = load i32, i32* %add.ptr1686, align 4, !dbg !18548
  %998 = call i1 @llvm.is.constant.i32(i32 %997), !dbg !18548
  br i1 %998, label %cond.true1687, label %cond.false1703, !dbg !18548

cond.true1687:                                    ; preds = %cond.true1685
  %999 = load i32*, i32** %flow_group_in, align 8, !dbg !18548
  %add.ptr1688 = getelementptr i32, i32* %999, i64 15, !dbg !18548
  %1000 = load i32, i32* %add.ptr1688, align 4, !dbg !18548
  %and1689 = and i32 %1000, 255, !dbg !18548
  %shl1690 = shl i32 %and1689, 24, !dbg !18548
  %1001 = load i32*, i32** %flow_group_in, align 8, !dbg !18548
  %add.ptr1691 = getelementptr i32, i32* %1001, i64 15, !dbg !18548
  %1002 = load i32, i32* %add.ptr1691, align 4, !dbg !18548
  %and1692 = and i32 %1002, 65280, !dbg !18548
  %shl1693 = shl i32 %and1692, 8, !dbg !18548
  %or1694 = or i32 %shl1690, %shl1693, !dbg !18548
  %1003 = load i32*, i32** %flow_group_in, align 8, !dbg !18548
  %add.ptr1695 = getelementptr i32, i32* %1003, i64 15, !dbg !18548
  %1004 = load i32, i32* %add.ptr1695, align 4, !dbg !18548
  %and1696 = and i32 %1004, 16711680, !dbg !18548
  %shr1697 = lshr i32 %and1696, 8, !dbg !18548
  %or1698 = or i32 %or1694, %shr1697, !dbg !18548
  %1005 = load i32*, i32** %flow_group_in, align 8, !dbg !18548
  %add.ptr1699 = getelementptr i32, i32* %1005, i64 15, !dbg !18548
  %1006 = load i32, i32* %add.ptr1699, align 4, !dbg !18548
  %and1700 = and i32 %1006, -16777216, !dbg !18548
  %shr1701 = lshr i32 %and1700, 24, !dbg !18548
  %or1702 = or i32 %or1698, %shr1701, !dbg !18548
  br label %cond.end1706, !dbg !18548

cond.false1703:                                   ; preds = %cond.true1685
  %1007 = load i32*, i32** %flow_group_in, align 8, !dbg !18548
  %add.ptr1704 = getelementptr i32, i32* %1007, i64 15, !dbg !18548
  %1008 = load i32, i32* %add.ptr1704, align 4, !dbg !18548
  %call1705 = call i32 @__fswab32(i32 %1008) #10, !dbg !18548
  br label %cond.end1706, !dbg !18548

cond.end1706:                                     ; preds = %cond.false1703, %cond.true1687
  %cond1707 = phi i32 [ %or1702, %cond.true1687 ], [ %call1705, %cond.false1703 ], !dbg !18548
  %and1708 = and i32 %cond1707, -256, !dbg !18548
  %1009 = load i32, i32* %_v1656, align 4, !dbg !18548
  %and1709 = and i32 %1009, 255, !dbg !18548
  %shl1710 = shl i32 %and1709, 0, !dbg !18548
  %or1711 = or i32 %and1708, %shl1710, !dbg !18548
  %and1712 = and i32 %or1711, 255, !dbg !18548
  %shl1713 = shl i32 %and1712, 24, !dbg !18548
  %1010 = load i32*, i32** %flow_group_in, align 8, !dbg !18548
  %add.ptr1714 = getelementptr i32, i32* %1010, i64 15, !dbg !18548
  %1011 = load i32, i32* %add.ptr1714, align 4, !dbg !18548
  %1012 = call i1 @llvm.is.constant.i32(i32 %1011), !dbg !18548
  br i1 %1012, label %cond.true1715, label %cond.false1731, !dbg !18548

cond.true1715:                                    ; preds = %cond.end1706
  %1013 = load i32*, i32** %flow_group_in, align 8, !dbg !18548
  %add.ptr1716 = getelementptr i32, i32* %1013, i64 15, !dbg !18548
  %1014 = load i32, i32* %add.ptr1716, align 4, !dbg !18548
  %and1717 = and i32 %1014, 255, !dbg !18548
  %shl1718 = shl i32 %and1717, 24, !dbg !18548
  %1015 = load i32*, i32** %flow_group_in, align 8, !dbg !18548
  %add.ptr1719 = getelementptr i32, i32* %1015, i64 15, !dbg !18548
  %1016 = load i32, i32* %add.ptr1719, align 4, !dbg !18548
  %and1720 = and i32 %1016, 65280, !dbg !18548
  %shl1721 = shl i32 %and1720, 8, !dbg !18548
  %or1722 = or i32 %shl1718, %shl1721, !dbg !18548
  %1017 = load i32*, i32** %flow_group_in, align 8, !dbg !18548
  %add.ptr1723 = getelementptr i32, i32* %1017, i64 15, !dbg !18548
  %1018 = load i32, i32* %add.ptr1723, align 4, !dbg !18548
  %and1724 = and i32 %1018, 16711680, !dbg !18548
  %shr1725 = lshr i32 %and1724, 8, !dbg !18548
  %or1726 = or i32 %or1722, %shr1725, !dbg !18548
  %1019 = load i32*, i32** %flow_group_in, align 8, !dbg !18548
  %add.ptr1727 = getelementptr i32, i32* %1019, i64 15, !dbg !18548
  %1020 = load i32, i32* %add.ptr1727, align 4, !dbg !18548
  %and1728 = and i32 %1020, -16777216, !dbg !18548
  %shr1729 = lshr i32 %and1728, 24, !dbg !18548
  %or1730 = or i32 %or1726, %shr1729, !dbg !18548
  br label %cond.end1734, !dbg !18548

cond.false1731:                                   ; preds = %cond.end1706
  %1021 = load i32*, i32** %flow_group_in, align 8, !dbg !18548
  %add.ptr1732 = getelementptr i32, i32* %1021, i64 15, !dbg !18548
  %1022 = load i32, i32* %add.ptr1732, align 4, !dbg !18548
  %call1733 = call i32 @__fswab32(i32 %1022) #10, !dbg !18548
  br label %cond.end1734, !dbg !18548

cond.end1734:                                     ; preds = %cond.false1731, %cond.true1715
  %cond1735 = phi i32 [ %or1730, %cond.true1715 ], [ %call1733, %cond.false1731 ], !dbg !18548
  %and1736 = and i32 %cond1735, -256, !dbg !18548
  %1023 = load i32, i32* %_v1656, align 4, !dbg !18548
  %and1737 = and i32 %1023, 255, !dbg !18548
  %shl1738 = shl i32 %and1737, 0, !dbg !18548
  %or1739 = or i32 %and1736, %shl1738, !dbg !18548
  %and1740 = and i32 %or1739, 65280, !dbg !18548
  %shl1741 = shl i32 %and1740, 8, !dbg !18548
  %or1742 = or i32 %shl1713, %shl1741, !dbg !18548
  %1024 = load i32*, i32** %flow_group_in, align 8, !dbg !18548
  %add.ptr1743 = getelementptr i32, i32* %1024, i64 15, !dbg !18548
  %1025 = load i32, i32* %add.ptr1743, align 4, !dbg !18548
  %1026 = call i1 @llvm.is.constant.i32(i32 %1025), !dbg !18548
  br i1 %1026, label %cond.true1744, label %cond.false1760, !dbg !18548

cond.true1744:                                    ; preds = %cond.end1734
  %1027 = load i32*, i32** %flow_group_in, align 8, !dbg !18548
  %add.ptr1745 = getelementptr i32, i32* %1027, i64 15, !dbg !18548
  %1028 = load i32, i32* %add.ptr1745, align 4, !dbg !18548
  %and1746 = and i32 %1028, 255, !dbg !18548
  %shl1747 = shl i32 %and1746, 24, !dbg !18548
  %1029 = load i32*, i32** %flow_group_in, align 8, !dbg !18548
  %add.ptr1748 = getelementptr i32, i32* %1029, i64 15, !dbg !18548
  %1030 = load i32, i32* %add.ptr1748, align 4, !dbg !18548
  %and1749 = and i32 %1030, 65280, !dbg !18548
  %shl1750 = shl i32 %and1749, 8, !dbg !18548
  %or1751 = or i32 %shl1747, %shl1750, !dbg !18548
  %1031 = load i32*, i32** %flow_group_in, align 8, !dbg !18548
  %add.ptr1752 = getelementptr i32, i32* %1031, i64 15, !dbg !18548
  %1032 = load i32, i32* %add.ptr1752, align 4, !dbg !18548
  %and1753 = and i32 %1032, 16711680, !dbg !18548
  %shr1754 = lshr i32 %and1753, 8, !dbg !18548
  %or1755 = or i32 %or1751, %shr1754, !dbg !18548
  %1033 = load i32*, i32** %flow_group_in, align 8, !dbg !18548
  %add.ptr1756 = getelementptr i32, i32* %1033, i64 15, !dbg !18548
  %1034 = load i32, i32* %add.ptr1756, align 4, !dbg !18548
  %and1757 = and i32 %1034, -16777216, !dbg !18548
  %shr1758 = lshr i32 %and1757, 24, !dbg !18548
  %or1759 = or i32 %or1755, %shr1758, !dbg !18548
  br label %cond.end1763, !dbg !18548

cond.false1760:                                   ; preds = %cond.end1734
  %1035 = load i32*, i32** %flow_group_in, align 8, !dbg !18548
  %add.ptr1761 = getelementptr i32, i32* %1035, i64 15, !dbg !18548
  %1036 = load i32, i32* %add.ptr1761, align 4, !dbg !18548
  %call1762 = call i32 @__fswab32(i32 %1036) #10, !dbg !18548
  br label %cond.end1763, !dbg !18548

cond.end1763:                                     ; preds = %cond.false1760, %cond.true1744
  %cond1764 = phi i32 [ %or1759, %cond.true1744 ], [ %call1762, %cond.false1760 ], !dbg !18548
  %and1765 = and i32 %cond1764, -256, !dbg !18548
  %1037 = load i32, i32* %_v1656, align 4, !dbg !18548
  %and1766 = and i32 %1037, 255, !dbg !18548
  %shl1767 = shl i32 %and1766, 0, !dbg !18548
  %or1768 = or i32 %and1765, %shl1767, !dbg !18548
  %and1769 = and i32 %or1768, 16711680, !dbg !18548
  %shr1770 = lshr i32 %and1769, 8, !dbg !18548
  %or1771 = or i32 %or1742, %shr1770, !dbg !18548
  %1038 = load i32*, i32** %flow_group_in, align 8, !dbg !18548
  %add.ptr1772 = getelementptr i32, i32* %1038, i64 15, !dbg !18548
  %1039 = load i32, i32* %add.ptr1772, align 4, !dbg !18548
  %1040 = call i1 @llvm.is.constant.i32(i32 %1039), !dbg !18548
  br i1 %1040, label %cond.true1773, label %cond.false1789, !dbg !18548

cond.true1773:                                    ; preds = %cond.end1763
  %1041 = load i32*, i32** %flow_group_in, align 8, !dbg !18548
  %add.ptr1774 = getelementptr i32, i32* %1041, i64 15, !dbg !18548
  %1042 = load i32, i32* %add.ptr1774, align 4, !dbg !18548
  %and1775 = and i32 %1042, 255, !dbg !18548
  %shl1776 = shl i32 %and1775, 24, !dbg !18548
  %1043 = load i32*, i32** %flow_group_in, align 8, !dbg !18548
  %add.ptr1777 = getelementptr i32, i32* %1043, i64 15, !dbg !18548
  %1044 = load i32, i32* %add.ptr1777, align 4, !dbg !18548
  %and1778 = and i32 %1044, 65280, !dbg !18548
  %shl1779 = shl i32 %and1778, 8, !dbg !18548
  %or1780 = or i32 %shl1776, %shl1779, !dbg !18548
  %1045 = load i32*, i32** %flow_group_in, align 8, !dbg !18548
  %add.ptr1781 = getelementptr i32, i32* %1045, i64 15, !dbg !18548
  %1046 = load i32, i32* %add.ptr1781, align 4, !dbg !18548
  %and1782 = and i32 %1046, 16711680, !dbg !18548
  %shr1783 = lshr i32 %and1782, 8, !dbg !18548
  %or1784 = or i32 %or1780, %shr1783, !dbg !18548
  %1047 = load i32*, i32** %flow_group_in, align 8, !dbg !18548
  %add.ptr1785 = getelementptr i32, i32* %1047, i64 15, !dbg !18548
  %1048 = load i32, i32* %add.ptr1785, align 4, !dbg !18548
  %and1786 = and i32 %1048, -16777216, !dbg !18548
  %shr1787 = lshr i32 %and1786, 24, !dbg !18548
  %or1788 = or i32 %or1784, %shr1787, !dbg !18548
  br label %cond.end1792, !dbg !18548

cond.false1789:                                   ; preds = %cond.end1763
  %1049 = load i32*, i32** %flow_group_in, align 8, !dbg !18548
  %add.ptr1790 = getelementptr i32, i32* %1049, i64 15, !dbg !18548
  %1050 = load i32, i32* %add.ptr1790, align 4, !dbg !18548
  %call1791 = call i32 @__fswab32(i32 %1050) #10, !dbg !18548
  br label %cond.end1792, !dbg !18548

cond.end1792:                                     ; preds = %cond.false1789, %cond.true1773
  %cond1793 = phi i32 [ %or1788, %cond.true1773 ], [ %call1791, %cond.false1789 ], !dbg !18548
  %and1794 = and i32 %cond1793, -256, !dbg !18548
  %1051 = load i32, i32* %_v1656, align 4, !dbg !18548
  %and1795 = and i32 %1051, 255, !dbg !18548
  %shl1796 = shl i32 %and1795, 0, !dbg !18548
  %or1797 = or i32 %and1794, %shl1796, !dbg !18548
  %and1798 = and i32 %or1797, -16777216, !dbg !18548
  %shr1799 = lshr i32 %and1798, 24, !dbg !18548
  %or1800 = or i32 %or1771, %shr1799, !dbg !18548
  br label %cond.end1829, !dbg !18548

cond.false1801:                                   ; preds = %cond.end1679
  %1052 = load i32*, i32** %flow_group_in, align 8, !dbg !18548
  %add.ptr1802 = getelementptr i32, i32* %1052, i64 15, !dbg !18548
  %1053 = load i32, i32* %add.ptr1802, align 4, !dbg !18548
  %1054 = call i1 @llvm.is.constant.i32(i32 %1053), !dbg !18548
  br i1 %1054, label %cond.true1803, label %cond.false1819, !dbg !18548

cond.true1803:                                    ; preds = %cond.false1801
  %1055 = load i32*, i32** %flow_group_in, align 8, !dbg !18548
  %add.ptr1804 = getelementptr i32, i32* %1055, i64 15, !dbg !18548
  %1056 = load i32, i32* %add.ptr1804, align 4, !dbg !18548
  %and1805 = and i32 %1056, 255, !dbg !18548
  %shl1806 = shl i32 %and1805, 24, !dbg !18548
  %1057 = load i32*, i32** %flow_group_in, align 8, !dbg !18548
  %add.ptr1807 = getelementptr i32, i32* %1057, i64 15, !dbg !18548
  %1058 = load i32, i32* %add.ptr1807, align 4, !dbg !18548
  %and1808 = and i32 %1058, 65280, !dbg !18548
  %shl1809 = shl i32 %and1808, 8, !dbg !18548
  %or1810 = or i32 %shl1806, %shl1809, !dbg !18548
  %1059 = load i32*, i32** %flow_group_in, align 8, !dbg !18548
  %add.ptr1811 = getelementptr i32, i32* %1059, i64 15, !dbg !18548
  %1060 = load i32, i32* %add.ptr1811, align 4, !dbg !18548
  %and1812 = and i32 %1060, 16711680, !dbg !18548
  %shr1813 = lshr i32 %and1812, 8, !dbg !18548
  %or1814 = or i32 %or1810, %shr1813, !dbg !18548
  %1061 = load i32*, i32** %flow_group_in, align 8, !dbg !18548
  %add.ptr1815 = getelementptr i32, i32* %1061, i64 15, !dbg !18548
  %1062 = load i32, i32* %add.ptr1815, align 4, !dbg !18548
  %and1816 = and i32 %1062, -16777216, !dbg !18548
  %shr1817 = lshr i32 %and1816, 24, !dbg !18548
  %or1818 = or i32 %or1814, %shr1817, !dbg !18548
  br label %cond.end1822, !dbg !18548

cond.false1819:                                   ; preds = %cond.false1801
  %1063 = load i32*, i32** %flow_group_in, align 8, !dbg !18548
  %add.ptr1820 = getelementptr i32, i32* %1063, i64 15, !dbg !18548
  %1064 = load i32, i32* %add.ptr1820, align 4, !dbg !18548
  %call1821 = call i32 @__fswab32(i32 %1064) #10, !dbg !18548
  br label %cond.end1822, !dbg !18548

cond.end1822:                                     ; preds = %cond.false1819, %cond.true1803
  %cond1823 = phi i32 [ %or1818, %cond.true1803 ], [ %call1821, %cond.false1819 ], !dbg !18548
  %and1824 = and i32 %cond1823, -256, !dbg !18548
  %1065 = load i32, i32* %_v1656, align 4, !dbg !18548
  %and1825 = and i32 %1065, 255, !dbg !18548
  %shl1826 = shl i32 %and1825, 0, !dbg !18548
  %or1827 = or i32 %and1824, %shl1826, !dbg !18548
  %call1828 = call i32 @__fswab32(i32 %or1827) #10, !dbg !18548
  br label %cond.end1829, !dbg !18548

cond.end1829:                                     ; preds = %cond.end1822, %cond.end1792
  %cond1830 = phi i32 [ %or1800, %cond.end1792 ], [ %call1828, %cond.end1822 ], !dbg !18548
  %1066 = load i32*, i32** %flow_group_in, align 8, !dbg !18548
  %add.ptr1831 = getelementptr i32, i32* %1066, i64 15, !dbg !18548
  store i32 %cond1830, i32* %add.ptr1831, align 4, !dbg !18548
  br label %do.end1832, !dbg !18548

do.end1832:                                       ; preds = %cond.end1829
  %1067 = load i32*, i32** %flow_group_in, align 8, !dbg !18551
  %1068 = bitcast i32* %1067 to i8*, !dbg !18551
  %add.ptr1833 = getelementptr i8, i8* %1068, i64 64, !dbg !18551
  store i8* %add.ptr1833, i8** %match_criteria, align 8, !dbg !18552
  %1069 = load i8*, i8** %match_criteria, align 8, !dbg !18553
  %add.ptr1834 = getelementptr i8, i8* %1069, i64 8, !dbg !18553
  store i8* %add.ptr1834, i8** %dmac, align 8, !dbg !18554
  %1070 = load i8*, i8** %dmac, align 8, !dbg !18555
  %arrayidx1835 = getelementptr i8, i8* %1070, i64 0, !dbg !18555
  store i8 1, i8* %arrayidx1835, align 1, !dbg !18556
  br label %do.body1836, !dbg !18557

do.body1836:                                      ; preds = %do.end1832
  call void @llvm.dbg.declare(metadata i32* %_v1837, metadata !18558, metadata !DIExpression()), !dbg !18560
  %1071 = load i32, i32* %ix, align 4, !dbg !18560
  store i32 %1071, i32* %_v1837, align 4, !dbg !18560
  br label %do.body1838, !dbg !18560

do.body1838:                                      ; preds = %do.body1836
  br label %do.end1839, !dbg !18561

do.end1839:                                       ; preds = %do.body1838
  %1072 = load i32*, i32** %flow_group_in, align 8, !dbg !18560
  %add.ptr1840 = getelementptr i32, i32* %1072, i64 7, !dbg !18560
  %1073 = load i32, i32* %add.ptr1840, align 4, !dbg !18560
  %1074 = call i1 @llvm.is.constant.i32(i32 %1073), !dbg !18560
  br i1 %1074, label %cond.true1841, label %cond.false1857, !dbg !18560

cond.true1841:                                    ; preds = %do.end1839
  %1075 = load i32*, i32** %flow_group_in, align 8, !dbg !18560
  %add.ptr1842 = getelementptr i32, i32* %1075, i64 7, !dbg !18560
  %1076 = load i32, i32* %add.ptr1842, align 4, !dbg !18560
  %and1843 = and i32 %1076, 255, !dbg !18560
  %shl1844 = shl i32 %and1843, 24, !dbg !18560
  %1077 = load i32*, i32** %flow_group_in, align 8, !dbg !18560
  %add.ptr1845 = getelementptr i32, i32* %1077, i64 7, !dbg !18560
  %1078 = load i32, i32* %add.ptr1845, align 4, !dbg !18560
  %and1846 = and i32 %1078, 65280, !dbg !18560
  %shl1847 = shl i32 %and1846, 8, !dbg !18560
  %or1848 = or i32 %shl1844, %shl1847, !dbg !18560
  %1079 = load i32*, i32** %flow_group_in, align 8, !dbg !18560
  %add.ptr1849 = getelementptr i32, i32* %1079, i64 7, !dbg !18560
  %1080 = load i32, i32* %add.ptr1849, align 4, !dbg !18560
  %and1850 = and i32 %1080, 16711680, !dbg !18560
  %shr1851 = lshr i32 %and1850, 8, !dbg !18560
  %or1852 = or i32 %or1848, %shr1851, !dbg !18560
  %1081 = load i32*, i32** %flow_group_in, align 8, !dbg !18560
  %add.ptr1853 = getelementptr i32, i32* %1081, i64 7, !dbg !18560
  %1082 = load i32, i32* %add.ptr1853, align 4, !dbg !18560
  %and1854 = and i32 %1082, -16777216, !dbg !18560
  %shr1855 = lshr i32 %and1854, 24, !dbg !18560
  %or1856 = or i32 %or1852, %shr1855, !dbg !18560
  br label %cond.end1860, !dbg !18560

cond.false1857:                                   ; preds = %do.end1839
  %1083 = load i32*, i32** %flow_group_in, align 8, !dbg !18560
  %add.ptr1858 = getelementptr i32, i32* %1083, i64 7, !dbg !18560
  %1084 = load i32, i32* %add.ptr1858, align 4, !dbg !18560
  %call1859 = call i32 @__fswab32(i32 %1084) #10, !dbg !18560
  br label %cond.end1860, !dbg !18560

cond.end1860:                                     ; preds = %cond.false1857, %cond.true1841
  %cond1861 = phi i32 [ %or1856, %cond.true1841 ], [ %call1859, %cond.false1857 ], !dbg !18560
  %and1862 = and i32 %cond1861, 0, !dbg !18560
  %1085 = load i32, i32* %_v1837, align 4, !dbg !18560
  %shl1863 = shl i32 %1085, 0, !dbg !18560
  %or1864 = or i32 %and1862, %shl1863, !dbg !18560
  %1086 = call i1 @llvm.is.constant.i32(i32 %or1864), !dbg !18560
  br i1 %1086, label %cond.true1865, label %cond.false1977, !dbg !18560

cond.true1865:                                    ; preds = %cond.end1860
  %1087 = load i32*, i32** %flow_group_in, align 8, !dbg !18560
  %add.ptr1866 = getelementptr i32, i32* %1087, i64 7, !dbg !18560
  %1088 = load i32, i32* %add.ptr1866, align 4, !dbg !18560
  %1089 = call i1 @llvm.is.constant.i32(i32 %1088), !dbg !18560
  br i1 %1089, label %cond.true1867, label %cond.false1883, !dbg !18560

cond.true1867:                                    ; preds = %cond.true1865
  %1090 = load i32*, i32** %flow_group_in, align 8, !dbg !18560
  %add.ptr1868 = getelementptr i32, i32* %1090, i64 7, !dbg !18560
  %1091 = load i32, i32* %add.ptr1868, align 4, !dbg !18560
  %and1869 = and i32 %1091, 255, !dbg !18560
  %shl1870 = shl i32 %and1869, 24, !dbg !18560
  %1092 = load i32*, i32** %flow_group_in, align 8, !dbg !18560
  %add.ptr1871 = getelementptr i32, i32* %1092, i64 7, !dbg !18560
  %1093 = load i32, i32* %add.ptr1871, align 4, !dbg !18560
  %and1872 = and i32 %1093, 65280, !dbg !18560
  %shl1873 = shl i32 %and1872, 8, !dbg !18560
  %or1874 = or i32 %shl1870, %shl1873, !dbg !18560
  %1094 = load i32*, i32** %flow_group_in, align 8, !dbg !18560
  %add.ptr1875 = getelementptr i32, i32* %1094, i64 7, !dbg !18560
  %1095 = load i32, i32* %add.ptr1875, align 4, !dbg !18560
  %and1876 = and i32 %1095, 16711680, !dbg !18560
  %shr1877 = lshr i32 %and1876, 8, !dbg !18560
  %or1878 = or i32 %or1874, %shr1877, !dbg !18560
  %1096 = load i32*, i32** %flow_group_in, align 8, !dbg !18560
  %add.ptr1879 = getelementptr i32, i32* %1096, i64 7, !dbg !18560
  %1097 = load i32, i32* %add.ptr1879, align 4, !dbg !18560
  %and1880 = and i32 %1097, -16777216, !dbg !18560
  %shr1881 = lshr i32 %and1880, 24, !dbg !18560
  %or1882 = or i32 %or1878, %shr1881, !dbg !18560
  br label %cond.end1886, !dbg !18560

cond.false1883:                                   ; preds = %cond.true1865
  %1098 = load i32*, i32** %flow_group_in, align 8, !dbg !18560
  %add.ptr1884 = getelementptr i32, i32* %1098, i64 7, !dbg !18560
  %1099 = load i32, i32* %add.ptr1884, align 4, !dbg !18560
  %call1885 = call i32 @__fswab32(i32 %1099) #10, !dbg !18560
  br label %cond.end1886, !dbg !18560

cond.end1886:                                     ; preds = %cond.false1883, %cond.true1867
  %cond1887 = phi i32 [ %or1882, %cond.true1867 ], [ %call1885, %cond.false1883 ], !dbg !18560
  %and1888 = and i32 %cond1887, 0, !dbg !18560
  %1100 = load i32, i32* %_v1837, align 4, !dbg !18560
  %shl1889 = shl i32 %1100, 0, !dbg !18560
  %or1890 = or i32 %and1888, %shl1889, !dbg !18560
  %and1891 = and i32 %or1890, 255, !dbg !18560
  %shl1892 = shl i32 %and1891, 24, !dbg !18560
  %1101 = load i32*, i32** %flow_group_in, align 8, !dbg !18560
  %add.ptr1893 = getelementptr i32, i32* %1101, i64 7, !dbg !18560
  %1102 = load i32, i32* %add.ptr1893, align 4, !dbg !18560
  %1103 = call i1 @llvm.is.constant.i32(i32 %1102), !dbg !18560
  br i1 %1103, label %cond.true1894, label %cond.false1910, !dbg !18560

cond.true1894:                                    ; preds = %cond.end1886
  %1104 = load i32*, i32** %flow_group_in, align 8, !dbg !18560
  %add.ptr1895 = getelementptr i32, i32* %1104, i64 7, !dbg !18560
  %1105 = load i32, i32* %add.ptr1895, align 4, !dbg !18560
  %and1896 = and i32 %1105, 255, !dbg !18560
  %shl1897 = shl i32 %and1896, 24, !dbg !18560
  %1106 = load i32*, i32** %flow_group_in, align 8, !dbg !18560
  %add.ptr1898 = getelementptr i32, i32* %1106, i64 7, !dbg !18560
  %1107 = load i32, i32* %add.ptr1898, align 4, !dbg !18560
  %and1899 = and i32 %1107, 65280, !dbg !18560
  %shl1900 = shl i32 %and1899, 8, !dbg !18560
  %or1901 = or i32 %shl1897, %shl1900, !dbg !18560
  %1108 = load i32*, i32** %flow_group_in, align 8, !dbg !18560
  %add.ptr1902 = getelementptr i32, i32* %1108, i64 7, !dbg !18560
  %1109 = load i32, i32* %add.ptr1902, align 4, !dbg !18560
  %and1903 = and i32 %1109, 16711680, !dbg !18560
  %shr1904 = lshr i32 %and1903, 8, !dbg !18560
  %or1905 = or i32 %or1901, %shr1904, !dbg !18560
  %1110 = load i32*, i32** %flow_group_in, align 8, !dbg !18560
  %add.ptr1906 = getelementptr i32, i32* %1110, i64 7, !dbg !18560
  %1111 = load i32, i32* %add.ptr1906, align 4, !dbg !18560
  %and1907 = and i32 %1111, -16777216, !dbg !18560
  %shr1908 = lshr i32 %and1907, 24, !dbg !18560
  %or1909 = or i32 %or1905, %shr1908, !dbg !18560
  br label %cond.end1913, !dbg !18560

cond.false1910:                                   ; preds = %cond.end1886
  %1112 = load i32*, i32** %flow_group_in, align 8, !dbg !18560
  %add.ptr1911 = getelementptr i32, i32* %1112, i64 7, !dbg !18560
  %1113 = load i32, i32* %add.ptr1911, align 4, !dbg !18560
  %call1912 = call i32 @__fswab32(i32 %1113) #10, !dbg !18560
  br label %cond.end1913, !dbg !18560

cond.end1913:                                     ; preds = %cond.false1910, %cond.true1894
  %cond1914 = phi i32 [ %or1909, %cond.true1894 ], [ %call1912, %cond.false1910 ], !dbg !18560
  %and1915 = and i32 %cond1914, 0, !dbg !18560
  %1114 = load i32, i32* %_v1837, align 4, !dbg !18560
  %shl1916 = shl i32 %1114, 0, !dbg !18560
  %or1917 = or i32 %and1915, %shl1916, !dbg !18560
  %and1918 = and i32 %or1917, 65280, !dbg !18560
  %shl1919 = shl i32 %and1918, 8, !dbg !18560
  %or1920 = or i32 %shl1892, %shl1919, !dbg !18560
  %1115 = load i32*, i32** %flow_group_in, align 8, !dbg !18560
  %add.ptr1921 = getelementptr i32, i32* %1115, i64 7, !dbg !18560
  %1116 = load i32, i32* %add.ptr1921, align 4, !dbg !18560
  %1117 = call i1 @llvm.is.constant.i32(i32 %1116), !dbg !18560
  br i1 %1117, label %cond.true1922, label %cond.false1938, !dbg !18560

cond.true1922:                                    ; preds = %cond.end1913
  %1118 = load i32*, i32** %flow_group_in, align 8, !dbg !18560
  %add.ptr1923 = getelementptr i32, i32* %1118, i64 7, !dbg !18560
  %1119 = load i32, i32* %add.ptr1923, align 4, !dbg !18560
  %and1924 = and i32 %1119, 255, !dbg !18560
  %shl1925 = shl i32 %and1924, 24, !dbg !18560
  %1120 = load i32*, i32** %flow_group_in, align 8, !dbg !18560
  %add.ptr1926 = getelementptr i32, i32* %1120, i64 7, !dbg !18560
  %1121 = load i32, i32* %add.ptr1926, align 4, !dbg !18560
  %and1927 = and i32 %1121, 65280, !dbg !18560
  %shl1928 = shl i32 %and1927, 8, !dbg !18560
  %or1929 = or i32 %shl1925, %shl1928, !dbg !18560
  %1122 = load i32*, i32** %flow_group_in, align 8, !dbg !18560
  %add.ptr1930 = getelementptr i32, i32* %1122, i64 7, !dbg !18560
  %1123 = load i32, i32* %add.ptr1930, align 4, !dbg !18560
  %and1931 = and i32 %1123, 16711680, !dbg !18560
  %shr1932 = lshr i32 %and1931, 8, !dbg !18560
  %or1933 = or i32 %or1929, %shr1932, !dbg !18560
  %1124 = load i32*, i32** %flow_group_in, align 8, !dbg !18560
  %add.ptr1934 = getelementptr i32, i32* %1124, i64 7, !dbg !18560
  %1125 = load i32, i32* %add.ptr1934, align 4, !dbg !18560
  %and1935 = and i32 %1125, -16777216, !dbg !18560
  %shr1936 = lshr i32 %and1935, 24, !dbg !18560
  %or1937 = or i32 %or1933, %shr1936, !dbg !18560
  br label %cond.end1941, !dbg !18560

cond.false1938:                                   ; preds = %cond.end1913
  %1126 = load i32*, i32** %flow_group_in, align 8, !dbg !18560
  %add.ptr1939 = getelementptr i32, i32* %1126, i64 7, !dbg !18560
  %1127 = load i32, i32* %add.ptr1939, align 4, !dbg !18560
  %call1940 = call i32 @__fswab32(i32 %1127) #10, !dbg !18560
  br label %cond.end1941, !dbg !18560

cond.end1941:                                     ; preds = %cond.false1938, %cond.true1922
  %cond1942 = phi i32 [ %or1937, %cond.true1922 ], [ %call1940, %cond.false1938 ], !dbg !18560
  %and1943 = and i32 %cond1942, 0, !dbg !18560
  %1128 = load i32, i32* %_v1837, align 4, !dbg !18560
  %shl1944 = shl i32 %1128, 0, !dbg !18560
  %or1945 = or i32 %and1943, %shl1944, !dbg !18560
  %and1946 = and i32 %or1945, 16711680, !dbg !18560
  %shr1947 = lshr i32 %and1946, 8, !dbg !18560
  %or1948 = or i32 %or1920, %shr1947, !dbg !18560
  %1129 = load i32*, i32** %flow_group_in, align 8, !dbg !18560
  %add.ptr1949 = getelementptr i32, i32* %1129, i64 7, !dbg !18560
  %1130 = load i32, i32* %add.ptr1949, align 4, !dbg !18560
  %1131 = call i1 @llvm.is.constant.i32(i32 %1130), !dbg !18560
  br i1 %1131, label %cond.true1950, label %cond.false1966, !dbg !18560

cond.true1950:                                    ; preds = %cond.end1941
  %1132 = load i32*, i32** %flow_group_in, align 8, !dbg !18560
  %add.ptr1951 = getelementptr i32, i32* %1132, i64 7, !dbg !18560
  %1133 = load i32, i32* %add.ptr1951, align 4, !dbg !18560
  %and1952 = and i32 %1133, 255, !dbg !18560
  %shl1953 = shl i32 %and1952, 24, !dbg !18560
  %1134 = load i32*, i32** %flow_group_in, align 8, !dbg !18560
  %add.ptr1954 = getelementptr i32, i32* %1134, i64 7, !dbg !18560
  %1135 = load i32, i32* %add.ptr1954, align 4, !dbg !18560
  %and1955 = and i32 %1135, 65280, !dbg !18560
  %shl1956 = shl i32 %and1955, 8, !dbg !18560
  %or1957 = or i32 %shl1953, %shl1956, !dbg !18560
  %1136 = load i32*, i32** %flow_group_in, align 8, !dbg !18560
  %add.ptr1958 = getelementptr i32, i32* %1136, i64 7, !dbg !18560
  %1137 = load i32, i32* %add.ptr1958, align 4, !dbg !18560
  %and1959 = and i32 %1137, 16711680, !dbg !18560
  %shr1960 = lshr i32 %and1959, 8, !dbg !18560
  %or1961 = or i32 %or1957, %shr1960, !dbg !18560
  %1138 = load i32*, i32** %flow_group_in, align 8, !dbg !18560
  %add.ptr1962 = getelementptr i32, i32* %1138, i64 7, !dbg !18560
  %1139 = load i32, i32* %add.ptr1962, align 4, !dbg !18560
  %and1963 = and i32 %1139, -16777216, !dbg !18560
  %shr1964 = lshr i32 %and1963, 24, !dbg !18560
  %or1965 = or i32 %or1961, %shr1964, !dbg !18560
  br label %cond.end1969, !dbg !18560

cond.false1966:                                   ; preds = %cond.end1941
  %1140 = load i32*, i32** %flow_group_in, align 8, !dbg !18560
  %add.ptr1967 = getelementptr i32, i32* %1140, i64 7, !dbg !18560
  %1141 = load i32, i32* %add.ptr1967, align 4, !dbg !18560
  %call1968 = call i32 @__fswab32(i32 %1141) #10, !dbg !18560
  br label %cond.end1969, !dbg !18560

cond.end1969:                                     ; preds = %cond.false1966, %cond.true1950
  %cond1970 = phi i32 [ %or1965, %cond.true1950 ], [ %call1968, %cond.false1966 ], !dbg !18560
  %and1971 = and i32 %cond1970, 0, !dbg !18560
  %1142 = load i32, i32* %_v1837, align 4, !dbg !18560
  %shl1972 = shl i32 %1142, 0, !dbg !18560
  %or1973 = or i32 %and1971, %shl1972, !dbg !18560
  %and1974 = and i32 %or1973, -16777216, !dbg !18560
  %shr1975 = lshr i32 %and1974, 24, !dbg !18560
  %or1976 = or i32 %or1948, %shr1975, !dbg !18560
  br label %cond.end2004, !dbg !18560

cond.false1977:                                   ; preds = %cond.end1860
  %1143 = load i32*, i32** %flow_group_in, align 8, !dbg !18560
  %add.ptr1978 = getelementptr i32, i32* %1143, i64 7, !dbg !18560
  %1144 = load i32, i32* %add.ptr1978, align 4, !dbg !18560
  %1145 = call i1 @llvm.is.constant.i32(i32 %1144), !dbg !18560
  br i1 %1145, label %cond.true1979, label %cond.false1995, !dbg !18560

cond.true1979:                                    ; preds = %cond.false1977
  %1146 = load i32*, i32** %flow_group_in, align 8, !dbg !18560
  %add.ptr1980 = getelementptr i32, i32* %1146, i64 7, !dbg !18560
  %1147 = load i32, i32* %add.ptr1980, align 4, !dbg !18560
  %and1981 = and i32 %1147, 255, !dbg !18560
  %shl1982 = shl i32 %and1981, 24, !dbg !18560
  %1148 = load i32*, i32** %flow_group_in, align 8, !dbg !18560
  %add.ptr1983 = getelementptr i32, i32* %1148, i64 7, !dbg !18560
  %1149 = load i32, i32* %add.ptr1983, align 4, !dbg !18560
  %and1984 = and i32 %1149, 65280, !dbg !18560
  %shl1985 = shl i32 %and1984, 8, !dbg !18560
  %or1986 = or i32 %shl1982, %shl1985, !dbg !18560
  %1150 = load i32*, i32** %flow_group_in, align 8, !dbg !18560
  %add.ptr1987 = getelementptr i32, i32* %1150, i64 7, !dbg !18560
  %1151 = load i32, i32* %add.ptr1987, align 4, !dbg !18560
  %and1988 = and i32 %1151, 16711680, !dbg !18560
  %shr1989 = lshr i32 %and1988, 8, !dbg !18560
  %or1990 = or i32 %or1986, %shr1989, !dbg !18560
  %1152 = load i32*, i32** %flow_group_in, align 8, !dbg !18560
  %add.ptr1991 = getelementptr i32, i32* %1152, i64 7, !dbg !18560
  %1153 = load i32, i32* %add.ptr1991, align 4, !dbg !18560
  %and1992 = and i32 %1153, -16777216, !dbg !18560
  %shr1993 = lshr i32 %and1992, 24, !dbg !18560
  %or1994 = or i32 %or1990, %shr1993, !dbg !18560
  br label %cond.end1998, !dbg !18560

cond.false1995:                                   ; preds = %cond.false1977
  %1154 = load i32*, i32** %flow_group_in, align 8, !dbg !18560
  %add.ptr1996 = getelementptr i32, i32* %1154, i64 7, !dbg !18560
  %1155 = load i32, i32* %add.ptr1996, align 4, !dbg !18560
  %call1997 = call i32 @__fswab32(i32 %1155) #10, !dbg !18560
  br label %cond.end1998, !dbg !18560

cond.end1998:                                     ; preds = %cond.false1995, %cond.true1979
  %cond1999 = phi i32 [ %or1994, %cond.true1979 ], [ %call1997, %cond.false1995 ], !dbg !18560
  %and2000 = and i32 %cond1999, 0, !dbg !18560
  %1156 = load i32, i32* %_v1837, align 4, !dbg !18560
  %shl2001 = shl i32 %1156, 0, !dbg !18560
  %or2002 = or i32 %and2000, %shl2001, !dbg !18560
  %call2003 = call i32 @__fswab32(i32 %or2002) #10, !dbg !18560
  br label %cond.end2004, !dbg !18560

cond.end2004:                                     ; preds = %cond.end1998, %cond.end1969
  %cond2005 = phi i32 [ %or1976, %cond.end1969 ], [ %call2003, %cond.end1998 ], !dbg !18560
  %1157 = load i32*, i32** %flow_group_in, align 8, !dbg !18560
  %add.ptr2006 = getelementptr i32, i32* %1157, i64 7, !dbg !18560
  store i32 %cond2005, i32* %add.ptr2006, align 4, !dbg !18560
  br label %do.end2007, !dbg !18560

do.end2007:                                       ; preds = %cond.end2004
  br label %do.body2008, !dbg !18563

do.body2008:                                      ; preds = %do.end2007
  call void @llvm.dbg.declare(metadata i32* %_v2009, metadata !18564, metadata !DIExpression()), !dbg !18566
  %1158 = load i32, i32* %ix, align 4, !dbg !18566
  %add2010 = add i32 %1158, 2, !dbg !18566
  store i32 %add2010, i32* %_v2009, align 4, !dbg !18566
  br label %do.body2011, !dbg !18566

do.body2011:                                      ; preds = %do.body2008
  br label %do.end2012, !dbg !18567

do.end2012:                                       ; preds = %do.body2011
  %1159 = load i32*, i32** %flow_group_in, align 8, !dbg !18566
  %add.ptr2013 = getelementptr i32, i32* %1159, i64 9, !dbg !18566
  %1160 = load i32, i32* %add.ptr2013, align 4, !dbg !18566
  %1161 = call i1 @llvm.is.constant.i32(i32 %1160), !dbg !18566
  br i1 %1161, label %cond.true2014, label %cond.false2030, !dbg !18566

cond.true2014:                                    ; preds = %do.end2012
  %1162 = load i32*, i32** %flow_group_in, align 8, !dbg !18566
  %add.ptr2015 = getelementptr i32, i32* %1162, i64 9, !dbg !18566
  %1163 = load i32, i32* %add.ptr2015, align 4, !dbg !18566
  %and2016 = and i32 %1163, 255, !dbg !18566
  %shl2017 = shl i32 %and2016, 24, !dbg !18566
  %1164 = load i32*, i32** %flow_group_in, align 8, !dbg !18566
  %add.ptr2018 = getelementptr i32, i32* %1164, i64 9, !dbg !18566
  %1165 = load i32, i32* %add.ptr2018, align 4, !dbg !18566
  %and2019 = and i32 %1165, 65280, !dbg !18566
  %shl2020 = shl i32 %and2019, 8, !dbg !18566
  %or2021 = or i32 %shl2017, %shl2020, !dbg !18566
  %1166 = load i32*, i32** %flow_group_in, align 8, !dbg !18566
  %add.ptr2022 = getelementptr i32, i32* %1166, i64 9, !dbg !18566
  %1167 = load i32, i32* %add.ptr2022, align 4, !dbg !18566
  %and2023 = and i32 %1167, 16711680, !dbg !18566
  %shr2024 = lshr i32 %and2023, 8, !dbg !18566
  %or2025 = or i32 %or2021, %shr2024, !dbg !18566
  %1168 = load i32*, i32** %flow_group_in, align 8, !dbg !18566
  %add.ptr2026 = getelementptr i32, i32* %1168, i64 9, !dbg !18566
  %1169 = load i32, i32* %add.ptr2026, align 4, !dbg !18566
  %and2027 = and i32 %1169, -16777216, !dbg !18566
  %shr2028 = lshr i32 %and2027, 24, !dbg !18566
  %or2029 = or i32 %or2025, %shr2028, !dbg !18566
  br label %cond.end2033, !dbg !18566

cond.false2030:                                   ; preds = %do.end2012
  %1170 = load i32*, i32** %flow_group_in, align 8, !dbg !18566
  %add.ptr2031 = getelementptr i32, i32* %1170, i64 9, !dbg !18566
  %1171 = load i32, i32* %add.ptr2031, align 4, !dbg !18566
  %call2032 = call i32 @__fswab32(i32 %1171) #10, !dbg !18566
  br label %cond.end2033, !dbg !18566

cond.end2033:                                     ; preds = %cond.false2030, %cond.true2014
  %cond2034 = phi i32 [ %or2029, %cond.true2014 ], [ %call2032, %cond.false2030 ], !dbg !18566
  %and2035 = and i32 %cond2034, 0, !dbg !18566
  %1172 = load i32, i32* %_v2009, align 4, !dbg !18566
  %shl2036 = shl i32 %1172, 0, !dbg !18566
  %or2037 = or i32 %and2035, %shl2036, !dbg !18566
  %1173 = call i1 @llvm.is.constant.i32(i32 %or2037), !dbg !18566
  br i1 %1173, label %cond.true2038, label %cond.false2150, !dbg !18566

cond.true2038:                                    ; preds = %cond.end2033
  %1174 = load i32*, i32** %flow_group_in, align 8, !dbg !18566
  %add.ptr2039 = getelementptr i32, i32* %1174, i64 9, !dbg !18566
  %1175 = load i32, i32* %add.ptr2039, align 4, !dbg !18566
  %1176 = call i1 @llvm.is.constant.i32(i32 %1175), !dbg !18566
  br i1 %1176, label %cond.true2040, label %cond.false2056, !dbg !18566

cond.true2040:                                    ; preds = %cond.true2038
  %1177 = load i32*, i32** %flow_group_in, align 8, !dbg !18566
  %add.ptr2041 = getelementptr i32, i32* %1177, i64 9, !dbg !18566
  %1178 = load i32, i32* %add.ptr2041, align 4, !dbg !18566
  %and2042 = and i32 %1178, 255, !dbg !18566
  %shl2043 = shl i32 %and2042, 24, !dbg !18566
  %1179 = load i32*, i32** %flow_group_in, align 8, !dbg !18566
  %add.ptr2044 = getelementptr i32, i32* %1179, i64 9, !dbg !18566
  %1180 = load i32, i32* %add.ptr2044, align 4, !dbg !18566
  %and2045 = and i32 %1180, 65280, !dbg !18566
  %shl2046 = shl i32 %and2045, 8, !dbg !18566
  %or2047 = or i32 %shl2043, %shl2046, !dbg !18566
  %1181 = load i32*, i32** %flow_group_in, align 8, !dbg !18566
  %add.ptr2048 = getelementptr i32, i32* %1181, i64 9, !dbg !18566
  %1182 = load i32, i32* %add.ptr2048, align 4, !dbg !18566
  %and2049 = and i32 %1182, 16711680, !dbg !18566
  %shr2050 = lshr i32 %and2049, 8, !dbg !18566
  %or2051 = or i32 %or2047, %shr2050, !dbg !18566
  %1183 = load i32*, i32** %flow_group_in, align 8, !dbg !18566
  %add.ptr2052 = getelementptr i32, i32* %1183, i64 9, !dbg !18566
  %1184 = load i32, i32* %add.ptr2052, align 4, !dbg !18566
  %and2053 = and i32 %1184, -16777216, !dbg !18566
  %shr2054 = lshr i32 %and2053, 24, !dbg !18566
  %or2055 = or i32 %or2051, %shr2054, !dbg !18566
  br label %cond.end2059, !dbg !18566

cond.false2056:                                   ; preds = %cond.true2038
  %1185 = load i32*, i32** %flow_group_in, align 8, !dbg !18566
  %add.ptr2057 = getelementptr i32, i32* %1185, i64 9, !dbg !18566
  %1186 = load i32, i32* %add.ptr2057, align 4, !dbg !18566
  %call2058 = call i32 @__fswab32(i32 %1186) #10, !dbg !18566
  br label %cond.end2059, !dbg !18566

cond.end2059:                                     ; preds = %cond.false2056, %cond.true2040
  %cond2060 = phi i32 [ %or2055, %cond.true2040 ], [ %call2058, %cond.false2056 ], !dbg !18566
  %and2061 = and i32 %cond2060, 0, !dbg !18566
  %1187 = load i32, i32* %_v2009, align 4, !dbg !18566
  %shl2062 = shl i32 %1187, 0, !dbg !18566
  %or2063 = or i32 %and2061, %shl2062, !dbg !18566
  %and2064 = and i32 %or2063, 255, !dbg !18566
  %shl2065 = shl i32 %and2064, 24, !dbg !18566
  %1188 = load i32*, i32** %flow_group_in, align 8, !dbg !18566
  %add.ptr2066 = getelementptr i32, i32* %1188, i64 9, !dbg !18566
  %1189 = load i32, i32* %add.ptr2066, align 4, !dbg !18566
  %1190 = call i1 @llvm.is.constant.i32(i32 %1189), !dbg !18566
  br i1 %1190, label %cond.true2067, label %cond.false2083, !dbg !18566

cond.true2067:                                    ; preds = %cond.end2059
  %1191 = load i32*, i32** %flow_group_in, align 8, !dbg !18566
  %add.ptr2068 = getelementptr i32, i32* %1191, i64 9, !dbg !18566
  %1192 = load i32, i32* %add.ptr2068, align 4, !dbg !18566
  %and2069 = and i32 %1192, 255, !dbg !18566
  %shl2070 = shl i32 %and2069, 24, !dbg !18566
  %1193 = load i32*, i32** %flow_group_in, align 8, !dbg !18566
  %add.ptr2071 = getelementptr i32, i32* %1193, i64 9, !dbg !18566
  %1194 = load i32, i32* %add.ptr2071, align 4, !dbg !18566
  %and2072 = and i32 %1194, 65280, !dbg !18566
  %shl2073 = shl i32 %and2072, 8, !dbg !18566
  %or2074 = or i32 %shl2070, %shl2073, !dbg !18566
  %1195 = load i32*, i32** %flow_group_in, align 8, !dbg !18566
  %add.ptr2075 = getelementptr i32, i32* %1195, i64 9, !dbg !18566
  %1196 = load i32, i32* %add.ptr2075, align 4, !dbg !18566
  %and2076 = and i32 %1196, 16711680, !dbg !18566
  %shr2077 = lshr i32 %and2076, 8, !dbg !18566
  %or2078 = or i32 %or2074, %shr2077, !dbg !18566
  %1197 = load i32*, i32** %flow_group_in, align 8, !dbg !18566
  %add.ptr2079 = getelementptr i32, i32* %1197, i64 9, !dbg !18566
  %1198 = load i32, i32* %add.ptr2079, align 4, !dbg !18566
  %and2080 = and i32 %1198, -16777216, !dbg !18566
  %shr2081 = lshr i32 %and2080, 24, !dbg !18566
  %or2082 = or i32 %or2078, %shr2081, !dbg !18566
  br label %cond.end2086, !dbg !18566

cond.false2083:                                   ; preds = %cond.end2059
  %1199 = load i32*, i32** %flow_group_in, align 8, !dbg !18566
  %add.ptr2084 = getelementptr i32, i32* %1199, i64 9, !dbg !18566
  %1200 = load i32, i32* %add.ptr2084, align 4, !dbg !18566
  %call2085 = call i32 @__fswab32(i32 %1200) #10, !dbg !18566
  br label %cond.end2086, !dbg !18566

cond.end2086:                                     ; preds = %cond.false2083, %cond.true2067
  %cond2087 = phi i32 [ %or2082, %cond.true2067 ], [ %call2085, %cond.false2083 ], !dbg !18566
  %and2088 = and i32 %cond2087, 0, !dbg !18566
  %1201 = load i32, i32* %_v2009, align 4, !dbg !18566
  %shl2089 = shl i32 %1201, 0, !dbg !18566
  %or2090 = or i32 %and2088, %shl2089, !dbg !18566
  %and2091 = and i32 %or2090, 65280, !dbg !18566
  %shl2092 = shl i32 %and2091, 8, !dbg !18566
  %or2093 = or i32 %shl2065, %shl2092, !dbg !18566
  %1202 = load i32*, i32** %flow_group_in, align 8, !dbg !18566
  %add.ptr2094 = getelementptr i32, i32* %1202, i64 9, !dbg !18566
  %1203 = load i32, i32* %add.ptr2094, align 4, !dbg !18566
  %1204 = call i1 @llvm.is.constant.i32(i32 %1203), !dbg !18566
  br i1 %1204, label %cond.true2095, label %cond.false2111, !dbg !18566

cond.true2095:                                    ; preds = %cond.end2086
  %1205 = load i32*, i32** %flow_group_in, align 8, !dbg !18566
  %add.ptr2096 = getelementptr i32, i32* %1205, i64 9, !dbg !18566
  %1206 = load i32, i32* %add.ptr2096, align 4, !dbg !18566
  %and2097 = and i32 %1206, 255, !dbg !18566
  %shl2098 = shl i32 %and2097, 24, !dbg !18566
  %1207 = load i32*, i32** %flow_group_in, align 8, !dbg !18566
  %add.ptr2099 = getelementptr i32, i32* %1207, i64 9, !dbg !18566
  %1208 = load i32, i32* %add.ptr2099, align 4, !dbg !18566
  %and2100 = and i32 %1208, 65280, !dbg !18566
  %shl2101 = shl i32 %and2100, 8, !dbg !18566
  %or2102 = or i32 %shl2098, %shl2101, !dbg !18566
  %1209 = load i32*, i32** %flow_group_in, align 8, !dbg !18566
  %add.ptr2103 = getelementptr i32, i32* %1209, i64 9, !dbg !18566
  %1210 = load i32, i32* %add.ptr2103, align 4, !dbg !18566
  %and2104 = and i32 %1210, 16711680, !dbg !18566
  %shr2105 = lshr i32 %and2104, 8, !dbg !18566
  %or2106 = or i32 %or2102, %shr2105, !dbg !18566
  %1211 = load i32*, i32** %flow_group_in, align 8, !dbg !18566
  %add.ptr2107 = getelementptr i32, i32* %1211, i64 9, !dbg !18566
  %1212 = load i32, i32* %add.ptr2107, align 4, !dbg !18566
  %and2108 = and i32 %1212, -16777216, !dbg !18566
  %shr2109 = lshr i32 %and2108, 24, !dbg !18566
  %or2110 = or i32 %or2106, %shr2109, !dbg !18566
  br label %cond.end2114, !dbg !18566

cond.false2111:                                   ; preds = %cond.end2086
  %1213 = load i32*, i32** %flow_group_in, align 8, !dbg !18566
  %add.ptr2112 = getelementptr i32, i32* %1213, i64 9, !dbg !18566
  %1214 = load i32, i32* %add.ptr2112, align 4, !dbg !18566
  %call2113 = call i32 @__fswab32(i32 %1214) #10, !dbg !18566
  br label %cond.end2114, !dbg !18566

cond.end2114:                                     ; preds = %cond.false2111, %cond.true2095
  %cond2115 = phi i32 [ %or2110, %cond.true2095 ], [ %call2113, %cond.false2111 ], !dbg !18566
  %and2116 = and i32 %cond2115, 0, !dbg !18566
  %1215 = load i32, i32* %_v2009, align 4, !dbg !18566
  %shl2117 = shl i32 %1215, 0, !dbg !18566
  %or2118 = or i32 %and2116, %shl2117, !dbg !18566
  %and2119 = and i32 %or2118, 16711680, !dbg !18566
  %shr2120 = lshr i32 %and2119, 8, !dbg !18566
  %or2121 = or i32 %or2093, %shr2120, !dbg !18566
  %1216 = load i32*, i32** %flow_group_in, align 8, !dbg !18566
  %add.ptr2122 = getelementptr i32, i32* %1216, i64 9, !dbg !18566
  %1217 = load i32, i32* %add.ptr2122, align 4, !dbg !18566
  %1218 = call i1 @llvm.is.constant.i32(i32 %1217), !dbg !18566
  br i1 %1218, label %cond.true2123, label %cond.false2139, !dbg !18566

cond.true2123:                                    ; preds = %cond.end2114
  %1219 = load i32*, i32** %flow_group_in, align 8, !dbg !18566
  %add.ptr2124 = getelementptr i32, i32* %1219, i64 9, !dbg !18566
  %1220 = load i32, i32* %add.ptr2124, align 4, !dbg !18566
  %and2125 = and i32 %1220, 255, !dbg !18566
  %shl2126 = shl i32 %and2125, 24, !dbg !18566
  %1221 = load i32*, i32** %flow_group_in, align 8, !dbg !18566
  %add.ptr2127 = getelementptr i32, i32* %1221, i64 9, !dbg !18566
  %1222 = load i32, i32* %add.ptr2127, align 4, !dbg !18566
  %and2128 = and i32 %1222, 65280, !dbg !18566
  %shl2129 = shl i32 %and2128, 8, !dbg !18566
  %or2130 = or i32 %shl2126, %shl2129, !dbg !18566
  %1223 = load i32*, i32** %flow_group_in, align 8, !dbg !18566
  %add.ptr2131 = getelementptr i32, i32* %1223, i64 9, !dbg !18566
  %1224 = load i32, i32* %add.ptr2131, align 4, !dbg !18566
  %and2132 = and i32 %1224, 16711680, !dbg !18566
  %shr2133 = lshr i32 %and2132, 8, !dbg !18566
  %or2134 = or i32 %or2130, %shr2133, !dbg !18566
  %1225 = load i32*, i32** %flow_group_in, align 8, !dbg !18566
  %add.ptr2135 = getelementptr i32, i32* %1225, i64 9, !dbg !18566
  %1226 = load i32, i32* %add.ptr2135, align 4, !dbg !18566
  %and2136 = and i32 %1226, -16777216, !dbg !18566
  %shr2137 = lshr i32 %and2136, 24, !dbg !18566
  %or2138 = or i32 %or2134, %shr2137, !dbg !18566
  br label %cond.end2142, !dbg !18566

cond.false2139:                                   ; preds = %cond.end2114
  %1227 = load i32*, i32** %flow_group_in, align 8, !dbg !18566
  %add.ptr2140 = getelementptr i32, i32* %1227, i64 9, !dbg !18566
  %1228 = load i32, i32* %add.ptr2140, align 4, !dbg !18566
  %call2141 = call i32 @__fswab32(i32 %1228) #10, !dbg !18566
  br label %cond.end2142, !dbg !18566

cond.end2142:                                     ; preds = %cond.false2139, %cond.true2123
  %cond2143 = phi i32 [ %or2138, %cond.true2123 ], [ %call2141, %cond.false2139 ], !dbg !18566
  %and2144 = and i32 %cond2143, 0, !dbg !18566
  %1229 = load i32, i32* %_v2009, align 4, !dbg !18566
  %shl2145 = shl i32 %1229, 0, !dbg !18566
  %or2146 = or i32 %and2144, %shl2145, !dbg !18566
  %and2147 = and i32 %or2146, -16777216, !dbg !18566
  %shr2148 = lshr i32 %and2147, 24, !dbg !18566
  %or2149 = or i32 %or2121, %shr2148, !dbg !18566
  br label %cond.end2177, !dbg !18566

cond.false2150:                                   ; preds = %cond.end2033
  %1230 = load i32*, i32** %flow_group_in, align 8, !dbg !18566
  %add.ptr2151 = getelementptr i32, i32* %1230, i64 9, !dbg !18566
  %1231 = load i32, i32* %add.ptr2151, align 4, !dbg !18566
  %1232 = call i1 @llvm.is.constant.i32(i32 %1231), !dbg !18566
  br i1 %1232, label %cond.true2152, label %cond.false2168, !dbg !18566

cond.true2152:                                    ; preds = %cond.false2150
  %1233 = load i32*, i32** %flow_group_in, align 8, !dbg !18566
  %add.ptr2153 = getelementptr i32, i32* %1233, i64 9, !dbg !18566
  %1234 = load i32, i32* %add.ptr2153, align 4, !dbg !18566
  %and2154 = and i32 %1234, 255, !dbg !18566
  %shl2155 = shl i32 %and2154, 24, !dbg !18566
  %1235 = load i32*, i32** %flow_group_in, align 8, !dbg !18566
  %add.ptr2156 = getelementptr i32, i32* %1235, i64 9, !dbg !18566
  %1236 = load i32, i32* %add.ptr2156, align 4, !dbg !18566
  %and2157 = and i32 %1236, 65280, !dbg !18566
  %shl2158 = shl i32 %and2157, 8, !dbg !18566
  %or2159 = or i32 %shl2155, %shl2158, !dbg !18566
  %1237 = load i32*, i32** %flow_group_in, align 8, !dbg !18566
  %add.ptr2160 = getelementptr i32, i32* %1237, i64 9, !dbg !18566
  %1238 = load i32, i32* %add.ptr2160, align 4, !dbg !18566
  %and2161 = and i32 %1238, 16711680, !dbg !18566
  %shr2162 = lshr i32 %and2161, 8, !dbg !18566
  %or2163 = or i32 %or2159, %shr2162, !dbg !18566
  %1239 = load i32*, i32** %flow_group_in, align 8, !dbg !18566
  %add.ptr2164 = getelementptr i32, i32* %1239, i64 9, !dbg !18566
  %1240 = load i32, i32* %add.ptr2164, align 4, !dbg !18566
  %and2165 = and i32 %1240, -16777216, !dbg !18566
  %shr2166 = lshr i32 %and2165, 24, !dbg !18566
  %or2167 = or i32 %or2163, %shr2166, !dbg !18566
  br label %cond.end2171, !dbg !18566

cond.false2168:                                   ; preds = %cond.false2150
  %1241 = load i32*, i32** %flow_group_in, align 8, !dbg !18566
  %add.ptr2169 = getelementptr i32, i32* %1241, i64 9, !dbg !18566
  %1242 = load i32, i32* %add.ptr2169, align 4, !dbg !18566
  %call2170 = call i32 @__fswab32(i32 %1242) #10, !dbg !18566
  br label %cond.end2171, !dbg !18566

cond.end2171:                                     ; preds = %cond.false2168, %cond.true2152
  %cond2172 = phi i32 [ %or2167, %cond.true2152 ], [ %call2170, %cond.false2168 ], !dbg !18566
  %and2173 = and i32 %cond2172, 0, !dbg !18566
  %1243 = load i32, i32* %_v2009, align 4, !dbg !18566
  %shl2174 = shl i32 %1243, 0, !dbg !18566
  %or2175 = or i32 %and2173, %shl2174, !dbg !18566
  %call2176 = call i32 @__fswab32(i32 %or2175) #10, !dbg !18566
  br label %cond.end2177, !dbg !18566

cond.end2177:                                     ; preds = %cond.end2171, %cond.end2142
  %cond2178 = phi i32 [ %or2149, %cond.end2142 ], [ %call2176, %cond.end2171 ], !dbg !18566
  %1244 = load i32*, i32** %flow_group_in, align 8, !dbg !18566
  %add.ptr2179 = getelementptr i32, i32* %1244, i64 9, !dbg !18566
  store i32 %cond2178, i32* %add.ptr2179, align 4, !dbg !18566
  br label %do.end2180, !dbg !18566

do.end2180:                                       ; preds = %cond.end2177
  %1245 = load %struct.mlx5_flow_table*, %struct.mlx5_flow_table** %fdb, align 8, !dbg !18569
  %1246 = load i32*, i32** %flow_group_in, align 8, !dbg !18570
  %call2181 = call %struct.mlx5_flow_group* @mlx5_create_flow_group(%struct.mlx5_flow_table* %1245, i32* %1246) #8, !dbg !18571
  store %struct.mlx5_flow_group* %call2181, %struct.mlx5_flow_group** %g, align 8, !dbg !18572
  %1247 = load %struct.mlx5_flow_group*, %struct.mlx5_flow_group** %g, align 8, !dbg !18573
  %1248 = bitcast %struct.mlx5_flow_group* %1247 to i8*, !dbg !18573
  %call2182 = call zeroext i1 @IS_ERR(i8* %1248) #8, !dbg !18575
  br i1 %call2182, label %if.then2183, label %if.end2187, !dbg !18576

if.then2183:                                      ; preds = %do.end2180
  %1249 = load %struct.mlx5_flow_group*, %struct.mlx5_flow_group** %g, align 8, !dbg !18577
  %1250 = bitcast %struct.mlx5_flow_group* %1249 to i8*, !dbg !18577
  %call2184 = call i64 @PTR_ERR(i8* %1250) #8, !dbg !18579
  %conv2185 = trunc i64 %call2184 to i32, !dbg !18579
  store i32 %conv2185, i32* %err, align 4, !dbg !18580
  %1251 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !18581
  %device2186 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %1251, i32 0, i32 0, !dbg !18581
  %1252 = load %struct.device*, %struct.device** %device2186, align 8, !dbg !18581
  %1253 = load i32, i32* %err, align 4, !dbg !18581
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %1252, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.31, i64 0, i64 0), i32 %1253) #9, !dbg !18581
  br label %miss_err, !dbg !18582

if.end2187:                                       ; preds = %do.end2180
  %1254 = load %struct.mlx5_flow_group*, %struct.mlx5_flow_group** %g, align 8, !dbg !18583
  %1255 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !18584
  %fdb_table2188 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %1255, i32 0, i32 2, !dbg !18585
  %1256 = getelementptr inbounds %struct.mlx5_eswitch_fdb, %struct.mlx5_eswitch_fdb* %fdb_table2188, i32 0, i32 0, !dbg !18586
  %offloads2189 = bitcast %union.anon.154* %1256 to %struct.offloads_fdb*, !dbg !18586
  %miss_grp = getelementptr inbounds %struct.offloads_fdb, %struct.offloads_fdb* %offloads2189, i32 0, i32 5, !dbg !18587
  store %struct.mlx5_flow_group* %1254, %struct.mlx5_flow_group** %miss_grp, align 8, !dbg !18588
  %1257 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !18589
  %call2190 = call i32 @esw_add_fdb_miss_rule(%struct.mlx5_eswitch* %1257) #8, !dbg !18590
  store i32 %call2190, i32* %err, align 4, !dbg !18591
  %1258 = load i32, i32* %err, align 4, !dbg !18592
  %tobool2191 = icmp ne i32 %1258, 0, !dbg !18592
  br i1 %tobool2191, label %if.then2192, label %if.end2193, !dbg !18594

if.then2192:                                      ; preds = %if.end2187
  br label %miss_rule_err, !dbg !18595

if.end2193:                                       ; preds = %if.end2187
  %1259 = load i32*, i32** %flow_group_in, align 8, !dbg !18596
  %1260 = bitcast i32* %1259 to i8*, !dbg !18596
  call void @kvfree(i8* %1260) #8, !dbg !18597
  store i32 0, i32* %retval, align 4, !dbg !18598
  br label %return, !dbg !18598

miss_rule_err:                                    ; preds = %if.then2192
  call void @llvm.dbg.label(metadata !18599), !dbg !18600
  %1261 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !18601
  %fdb_table2194 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %1261, i32 0, i32 2, !dbg !18602
  %1262 = getelementptr inbounds %struct.mlx5_eswitch_fdb, %struct.mlx5_eswitch_fdb* %fdb_table2194, i32 0, i32 0, !dbg !18603
  %offloads2195 = bitcast %union.anon.154* %1262 to %struct.offloads_fdb*, !dbg !18603
  %miss_grp2196 = getelementptr inbounds %struct.offloads_fdb, %struct.offloads_fdb* %offloads2195, i32 0, i32 5, !dbg !18604
  %1263 = load %struct.mlx5_flow_group*, %struct.mlx5_flow_group** %miss_grp2196, align 8, !dbg !18604
  call void @mlx5_destroy_flow_group(%struct.mlx5_flow_group* %1263) #8, !dbg !18605
  br label %miss_err, !dbg !18605

miss_err:                                         ; preds = %miss_rule_err, %if.then2183
  call void @llvm.dbg.label(metadata !18606), !dbg !18607
  %1264 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !18608
  %dev2197 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %1264, i32 0, i32 0, !dbg !18608
  %1265 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev2197, align 8, !dbg !18608
  %caps2198 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %1265, i32 0, i32 9, !dbg !18608
  %hca_cur2199 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps2198, i32 0, i32 0, !dbg !18608
  %arrayidx2200 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur2199, i64 0, i64 9, !dbg !18608
  %arraydecay2201 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx2200, i64 0, i64 0, !dbg !18608
  %add.ptr2202 = getelementptr i32, i32* %arraydecay2201, i64 0, !dbg !18608
  %1266 = load i32, i32* %add.ptr2202, align 4, !dbg !18608
  %1267 = call i1 @llvm.is.constant.i32(i32 %1266), !dbg !18608
  br i1 %1267, label %cond.true2203, label %cond.false2239, !dbg !18608

cond.true2203:                                    ; preds = %miss_err
  %1268 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !18608
  %dev2204 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %1268, i32 0, i32 0, !dbg !18608
  %1269 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev2204, align 8, !dbg !18608
  %caps2205 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %1269, i32 0, i32 9, !dbg !18608
  %hca_cur2206 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps2205, i32 0, i32 0, !dbg !18608
  %arrayidx2207 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur2206, i64 0, i64 9, !dbg !18608
  %arraydecay2208 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx2207, i64 0, i64 0, !dbg !18608
  %add.ptr2209 = getelementptr i32, i32* %arraydecay2208, i64 0, !dbg !18608
  %1270 = load i32, i32* %add.ptr2209, align 4, !dbg !18608
  %and2210 = and i32 %1270, 255, !dbg !18608
  %shl2211 = shl i32 %and2210, 24, !dbg !18608
  %1271 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !18608
  %dev2212 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %1271, i32 0, i32 0, !dbg !18608
  %1272 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev2212, align 8, !dbg !18608
  %caps2213 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %1272, i32 0, i32 9, !dbg !18608
  %hca_cur2214 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps2213, i32 0, i32 0, !dbg !18608
  %arrayidx2215 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur2214, i64 0, i64 9, !dbg !18608
  %arraydecay2216 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx2215, i64 0, i64 0, !dbg !18608
  %add.ptr2217 = getelementptr i32, i32* %arraydecay2216, i64 0, !dbg !18608
  %1273 = load i32, i32* %add.ptr2217, align 4, !dbg !18608
  %and2218 = and i32 %1273, 65280, !dbg !18608
  %shl2219 = shl i32 %and2218, 8, !dbg !18608
  %or2220 = or i32 %shl2211, %shl2219, !dbg !18608
  %1274 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !18608
  %dev2221 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %1274, i32 0, i32 0, !dbg !18608
  %1275 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev2221, align 8, !dbg !18608
  %caps2222 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %1275, i32 0, i32 9, !dbg !18608
  %hca_cur2223 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps2222, i32 0, i32 0, !dbg !18608
  %arrayidx2224 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur2223, i64 0, i64 9, !dbg !18608
  %arraydecay2225 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx2224, i64 0, i64 0, !dbg !18608
  %add.ptr2226 = getelementptr i32, i32* %arraydecay2225, i64 0, !dbg !18608
  %1276 = load i32, i32* %add.ptr2226, align 4, !dbg !18608
  %and2227 = and i32 %1276, 16711680, !dbg !18608
  %shr2228 = lshr i32 %and2227, 8, !dbg !18608
  %or2229 = or i32 %or2220, %shr2228, !dbg !18608
  %1277 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !18608
  %dev2230 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %1277, i32 0, i32 0, !dbg !18608
  %1278 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev2230, align 8, !dbg !18608
  %caps2231 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %1278, i32 0, i32 9, !dbg !18608
  %hca_cur2232 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps2231, i32 0, i32 0, !dbg !18608
  %arrayidx2233 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur2232, i64 0, i64 9, !dbg !18608
  %arraydecay2234 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx2233, i64 0, i64 0, !dbg !18608
  %add.ptr2235 = getelementptr i32, i32* %arraydecay2234, i64 0, !dbg !18608
  %1279 = load i32, i32* %add.ptr2235, align 4, !dbg !18608
  %and2236 = and i32 %1279, -16777216, !dbg !18608
  %shr2237 = lshr i32 %and2236, 24, !dbg !18608
  %or2238 = or i32 %or2229, %shr2237, !dbg !18608
  br label %cond.end2247, !dbg !18608

cond.false2239:                                   ; preds = %miss_err
  %1280 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !18608
  %dev2240 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %1280, i32 0, i32 0, !dbg !18608
  %1281 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev2240, align 8, !dbg !18608
  %caps2241 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %1281, i32 0, i32 9, !dbg !18608
  %hca_cur2242 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps2241, i32 0, i32 0, !dbg !18608
  %arrayidx2243 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur2242, i64 0, i64 9, !dbg !18608
  %arraydecay2244 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx2243, i64 0, i64 0, !dbg !18608
  %add.ptr2245 = getelementptr i32, i32* %arraydecay2244, i64 0, !dbg !18608
  %1282 = load i32, i32* %add.ptr2245, align 4, !dbg !18608
  %call2246 = call i32 @__fswab32(i32 %1282) #10, !dbg !18608
  br label %cond.end2247, !dbg !18608

cond.end2247:                                     ; preds = %cond.false2239, %cond.true2203
  %cond2248 = phi i32 [ %or2238, %cond.true2203 ], [ %call2246, %cond.false2239 ], !dbg !18608
  %shr2249 = lshr i32 %cond2248, 2, !dbg !18608
  %and2250 = and i32 %shr2249, 1, !dbg !18608
  %tobool2251 = icmp ne i32 %and2250, 0, !dbg !18608
  br i1 %tobool2251, label %if.then2252, label %if.end2256, !dbg !18610

if.then2252:                                      ; preds = %cond.end2247
  %1283 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !18611
  %fdb_table2253 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %1283, i32 0, i32 2, !dbg !18612
  %1284 = getelementptr inbounds %struct.mlx5_eswitch_fdb, %struct.mlx5_eswitch_fdb* %fdb_table2253, i32 0, i32 0, !dbg !18613
  %offloads2254 = bitcast %union.anon.154* %1284 to %struct.offloads_fdb*, !dbg !18613
  %peer_miss_grp2255 = getelementptr inbounds %struct.offloads_fdb, %struct.offloads_fdb* %offloads2254, i32 0, i32 3, !dbg !18614
  %1285 = load %struct.mlx5_flow_group*, %struct.mlx5_flow_group** %peer_miss_grp2255, align 8, !dbg !18614
  call void @mlx5_destroy_flow_group(%struct.mlx5_flow_group* %1285) #8, !dbg !18615
  br label %if.end2256, !dbg !18615

if.end2256:                                       ; preds = %if.then2252, %cond.end2247
  br label %peer_miss_err, !dbg !18608

peer_miss_err:                                    ; preds = %if.end2256, %if.then1646
  call void @llvm.dbg.label(metadata !18616), !dbg !18617
  %1286 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !18618
  %fdb_table2257 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %1286, i32 0, i32 2, !dbg !18619
  %1287 = getelementptr inbounds %struct.mlx5_eswitch_fdb, %struct.mlx5_eswitch_fdb* %fdb_table2257, i32 0, i32 0, !dbg !18620
  %offloads2258 = bitcast %union.anon.154* %1287 to %struct.offloads_fdb*, !dbg !18620
  %send_to_vport_grp2259 = getelementptr inbounds %struct.offloads_fdb, %struct.offloads_fdb* %offloads2258, i32 0, i32 2, !dbg !18621
  %1288 = load %struct.mlx5_flow_group*, %struct.mlx5_flow_group** %send_to_vport_grp2259, align 8, !dbg !18621
  call void @mlx5_destroy_flow_group(%struct.mlx5_flow_group* %1288) #8, !dbg !18622
  br label %send_vport_err, !dbg !18622

send_vport_err:                                   ; preds = %peer_miss_err, %if.then888
  call void @llvm.dbg.label(metadata !18623), !dbg !18624
  %1289 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !18625
  %1290 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !18626
  %fdb_table2260 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %1290, i32 0, i32 2, !dbg !18626
  %1291 = getelementptr inbounds %struct.mlx5_eswitch_fdb, %struct.mlx5_eswitch_fdb* %fdb_table2260, i32 0, i32 0, !dbg !18626
  %offloads2261 = bitcast %union.anon.154* %1291 to %struct.offloads_fdb*, !dbg !18626
  %esw_chains_priv = getelementptr inbounds %struct.offloads_fdb, %struct.offloads_fdb* %offloads2261, i32 0, i32 9, !dbg !18626
  %1292 = load %struct.mlx5_fs_chains*, %struct.mlx5_fs_chains** %esw_chains_priv, align 8, !dbg !18626
  call void @esw_chains_destroy(%struct.mlx5_eswitch* %1289, %struct.mlx5_fs_chains* %1292) #8, !dbg !18627
  br label %fdb_chains_err, !dbg !18627

fdb_chains_err:                                   ; preds = %send_vport_err, %if.then35
  call void @llvm.dbg.label(metadata !18628), !dbg !18629
  %1293 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !18630
  %fdb_table2262 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %1293, i32 0, i32 2, !dbg !18631
  %1294 = getelementptr inbounds %struct.mlx5_eswitch_fdb, %struct.mlx5_eswitch_fdb* %fdb_table2262, i32 0, i32 0, !dbg !18632
  %offloads2263 = bitcast %union.anon.154* %1294 to %struct.offloads_fdb*, !dbg !18632
  %slow_fdb2264 = getelementptr inbounds %struct.offloads_fdb, %struct.offloads_fdb* %offloads2263, i32 0, i32 1, !dbg !18633
  %1295 = load %struct.mlx5_flow_table*, %struct.mlx5_flow_table** %slow_fdb2264, align 8, !dbg !18633
  %call2265 = call i32 @mlx5_destroy_flow_table(%struct.mlx5_flow_table* %1295) #8, !dbg !18634
  br label %slow_fdb_err, !dbg !18634

slow_fdb_err:                                     ; preds = %fdb_chains_err, %if.then26
  call void @llvm.dbg.label(metadata !18635), !dbg !18636
  %1296 = load %struct.mlx5_flow_namespace*, %struct.mlx5_flow_namespace** %root_ns, align 8, !dbg !18637
  %call2266 = call i32 @mlx5_flow_namespace_set_mode(%struct.mlx5_flow_namespace* %1296, i32 0) #8, !dbg !18638
  br label %ns_err, !dbg !18638

ns_err:                                           ; preds = %slow_fdb_err, %if.then13, %if.then8
  call void @llvm.dbg.label(metadata !18639), !dbg !18640
  %1297 = load i32*, i32** %flow_group_in, align 8, !dbg !18641
  %1298 = bitcast i32* %1297 to i8*, !dbg !18641
  call void @kvfree(i8* %1298) #8, !dbg !18642
  %1299 = load i32, i32* %err, align 4, !dbg !18643
  store i32 %1299, i32* %retval, align 4, !dbg !18644
  br label %return, !dbg !18644

return:                                           ; preds = %ns_err, %if.end2193, %if.then4
  %1300 = load i32, i32* %retval, align 4, !dbg !18645
  ret i32 %1300, !dbg !18645
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @mlx5_devlink_eswitch_encap_mode_get(%struct.devlink* %devlink, i32* %encap) #0 !dbg !18646 {
entry:
  %retval = alloca i32, align 4
  %devlink.addr = alloca %struct.devlink*, align 8
  %encap.addr = alloca i32*, align 8
  %esw = alloca %struct.mlx5_eswitch*, align 8
  %err = alloca i32, align 4
  store %struct.devlink* %devlink, %struct.devlink** %devlink.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.devlink** %devlink.addr, metadata !18647, metadata !DIExpression()), !dbg !18648
  store i32* %encap, i32** %encap.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %encap.addr, metadata !18649, metadata !DIExpression()), !dbg !18650
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw, metadata !18651, metadata !DIExpression()), !dbg !18652
  call void @llvm.dbg.declare(metadata i32* %err, metadata !18653, metadata !DIExpression()), !dbg !18654
  %0 = load %struct.devlink*, %struct.devlink** %devlink.addr, align 8, !dbg !18655
  %call = call %struct.mlx5_eswitch* @mlx5_devlink_eswitch_get(%struct.devlink* %0) #8, !dbg !18656
  store %struct.mlx5_eswitch* %call, %struct.mlx5_eswitch** %esw, align 8, !dbg !18657
  %1 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw, align 8, !dbg !18658
  %2 = bitcast %struct.mlx5_eswitch* %1 to i8*, !dbg !18658
  %call1 = call zeroext i1 @IS_ERR(i8* %2) #8, !dbg !18660
  br i1 %call1, label %if.then, label %if.end, !dbg !18661

if.then:                                          ; preds = %entry
  %3 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw, align 8, !dbg !18662
  %4 = bitcast %struct.mlx5_eswitch* %3 to i8*, !dbg !18662
  %call2 = call i64 @PTR_ERR(i8* %4) #8, !dbg !18663
  %conv = trunc i64 %call2 to i32, !dbg !18663
  store i32 %conv, i32* %retval, align 4, !dbg !18664
  br label %return, !dbg !18664

if.end:                                           ; preds = %entry
  %5 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw, align 8, !dbg !18665
  %mode_lock = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %5, i32 0, i32 11, !dbg !18666
  call void @mutex_lock(%struct.mutex* %mode_lock) #8, !dbg !18667
  %6 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw, align 8, !dbg !18668
  %call3 = call i32 @eswitch_devlink_esw_mode_check(%struct.mlx5_eswitch* %6) #8, !dbg !18669
  store i32 %call3, i32* %err, align 4, !dbg !18670
  %7 = load i32, i32* %err, align 4, !dbg !18671
  %tobool = icmp ne i32 %7, 0, !dbg !18671
  br i1 %tobool, label %if.then4, label %if.end5, !dbg !18673

if.then4:                                         ; preds = %if.end
  br label %unlock, !dbg !18674

if.end5:                                          ; preds = %if.end
  %8 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw, align 8, !dbg !18675
  %offloads = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %8, i32 0, i32 13, !dbg !18676
  %encap6 = getelementptr inbounds %struct.mlx5_esw_offload, %struct.mlx5_esw_offload* %offloads, i32 0, i32 18, !dbg !18677
  %9 = load i32, i32* %encap6, align 8, !dbg !18677
  %10 = load i32*, i32** %encap.addr, align 8, !dbg !18678
  store i32 %9, i32* %10, align 4, !dbg !18679
  br label %unlock, !dbg !18680

unlock:                                           ; preds = %if.end5, %if.then4
  call void @llvm.dbg.label(metadata !18681), !dbg !18682
  %11 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw, align 8, !dbg !18683
  %mode_lock7 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %11, i32 0, i32 11, !dbg !18684
  call void @mutex_unlock(%struct.mutex* %mode_lock7) #8, !dbg !18685
  store i32 0, i32* %retval, align 4, !dbg !18686
  br label %return, !dbg !18686

return:                                           ; preds = %unlock, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !18687
  ret i32 %12, !dbg !18687
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @mlx5_eswitch_register_vport_reps(%struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch_rep_ops* %ops, i8 zeroext %rep_type) #0 !dbg !18688 {
entry:
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !16444, metadata !DIExpression()), !dbg !18691
  %i.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i.i, metadata !16458, metadata !DIExpression()), !dbg !18699
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !16460, metadata !DIExpression()), !dbg !18700
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !16464, metadata !DIExpression()), !dbg !18702
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !16466, metadata !DIExpression()), !dbg !18703
  %i.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i, metadata !16468, metadata !DIExpression()), !dbg !18704
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  %ops.addr = alloca %struct.mlx5_eswitch_rep_ops*, align 8
  %rep_type.addr = alloca i8, align 1
  %rep_data = alloca %struct.mlx5_eswitch_rep_data*, align 8
  %rep = alloca %struct.mlx5_eswitch_rep*, align 8
  %i = alloca i32, align 4
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !18705, metadata !DIExpression()), !dbg !18706
  store %struct.mlx5_eswitch_rep_ops* %ops, %struct.mlx5_eswitch_rep_ops** %ops.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch_rep_ops** %ops.addr, metadata !18707, metadata !DIExpression()), !dbg !18708
  store i8 %rep_type, i8* %rep_type.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %rep_type.addr, metadata !18709, metadata !DIExpression()), !dbg !18710
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch_rep_data** %rep_data, metadata !18711, metadata !DIExpression()), !dbg !18713
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch_rep** %rep, metadata !18714, metadata !DIExpression()), !dbg !18715
  call void @llvm.dbg.declare(metadata i32* %i, metadata !18716, metadata !DIExpression()), !dbg !18717
  %0 = load %struct.mlx5_eswitch_rep_ops*, %struct.mlx5_eswitch_rep_ops** %ops.addr, align 8, !dbg !18718
  %1 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !18719
  %offloads = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %1, i32 0, i32 13, !dbg !18720
  %rep_ops = getelementptr inbounds %struct.mlx5_esw_offload, %struct.mlx5_esw_offload* %offloads, i32 0, i32 15, !dbg !18721
  %2 = load i8, i8* %rep_type.addr, align 1, !dbg !18722
  %idxprom = zext i8 %2 to i64, !dbg !18719
  %arrayidx = getelementptr [2 x %struct.mlx5_eswitch_rep_ops*], [2 x %struct.mlx5_eswitch_rep_ops*]* %rep_ops, i64 0, i64 %idxprom, !dbg !18719
  store %struct.mlx5_eswitch_rep_ops* %0, %struct.mlx5_eswitch_rep_ops** %arrayidx, align 8, !dbg !18723
  store i32 0, i32* %i, align 4, !dbg !18724
  br label %for.cond, !dbg !18724

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !18725
  %offloads1 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %3, i32 0, i32 13, !dbg !18725
  %vport_reps = getelementptr inbounds %struct.mlx5_esw_offload, %struct.mlx5_esw_offload* %offloads1, i32 0, i32 5, !dbg !18725
  %4 = load %struct.mlx5_eswitch_rep*, %struct.mlx5_eswitch_rep** %vport_reps, align 8, !dbg !18725
  %5 = load i32, i32* %i, align 4, !dbg !18725
  %idxprom2 = sext i32 %5 to i64, !dbg !18725
  %arrayidx3 = getelementptr %struct.mlx5_eswitch_rep, %struct.mlx5_eswitch_rep* %4, i64 %idxprom2, !dbg !18725
  store %struct.mlx5_eswitch_rep* %arrayidx3, %struct.mlx5_eswitch_rep** %rep, align 8, !dbg !18725
  %6 = load i32, i32* %i, align 4, !dbg !18725
  %7 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !18725
  %total_vports = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %7, i32 0, i32 8, !dbg !18725
  %8 = load i32, i32* %total_vports, align 4, !dbg !18725
  %cmp = icmp slt i32 %6, %8, !dbg !18725
  br i1 %cmp, label %for.body, label %for.end, !dbg !18724

for.body:                                         ; preds = %for.cond
  %9 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !18726
  %10 = load i32, i32* %i, align 4, !dbg !18726
  %conv = trunc i32 %10 to i16, !dbg !18726
  %call = call zeroext i1 @mlx5_eswitch_vport_has_rep(%struct.mlx5_eswitch* %9, i16 zeroext %conv) #8, !dbg !18726
  %lnot = xor i1 %call, true, !dbg !18726
  %lnot4 = xor i1 %lnot, true, !dbg !18726
  %lnot.ext = zext i1 %lnot4 to i32, !dbg !18726
  %conv5 = sext i32 %lnot.ext to i64, !dbg !18726
  %tobool = icmp ne i64 %conv5, 0, !dbg !18726
  br i1 %tobool, label %if.then, label %if.end, !dbg !18727

if.then:                                          ; preds = %for.body
  %11 = load %struct.mlx5_eswitch_rep*, %struct.mlx5_eswitch_rep** %rep, align 8, !dbg !18728
  %rep_data6 = getelementptr inbounds %struct.mlx5_eswitch_rep, %struct.mlx5_eswitch_rep* %11, i32 0, i32 0, !dbg !18729
  %12 = load i8, i8* %rep_type.addr, align 1, !dbg !18730
  %idxprom7 = zext i8 %12 to i64, !dbg !18728
  %arrayidx8 = getelementptr [2 x %struct.mlx5_eswitch_rep_data], [2 x %struct.mlx5_eswitch_rep_data]* %rep_data6, i64 0, i64 %idxprom7, !dbg !18728
  store %struct.mlx5_eswitch_rep_data* %arrayidx8, %struct.mlx5_eswitch_rep_data** %rep_data, align 8, !dbg !18731
  %13 = load %struct.mlx5_eswitch_rep_data*, %struct.mlx5_eswitch_rep_data** %rep_data, align 8, !dbg !18732
  %state = getelementptr inbounds %struct.mlx5_eswitch_rep_data, %struct.mlx5_eswitch_rep_data* %13, i32 0, i32 1, !dbg !18733
  store %struct.atomic_t* %state, %struct.atomic_t** %v.addr.i, align 8
  store i32 1, i32* %i.addr.i, align 4
  %14 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !18734
  %15 = bitcast %struct.atomic_t* %14 to i8*, !dbg !18734
  store i8* %15, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %16 = load i8*, i8** %v.addr.i.i, align 8, !dbg !18735
  %17 = load i64, i64* %size.addr.i.i, align 8, !dbg !18736
  %conv.i.i = trunc i64 %17 to i32, !dbg !18736
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %16, i32 %conv.i.i) #11, !dbg !18737
  %18 = load i8*, i8** %v.addr.i.i, align 8, !dbg !18738
  %19 = load i64, i64* %size.addr.i.i, align 8, !dbg !18738
  call void @kcsan_check_access(i8* %18, i64 %19, i32 5) #11, !dbg !18738
  %20 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !18739
  %21 = load i32, i32* %i.addr.i, align 4, !dbg !18740
  store %struct.atomic_t* %20, %struct.atomic_t** %v.addr.i1.i, align 8
  store i32 %21, i32* %i.addr.i.i, align 4
  %22 = load i32, i32* %i.addr.i.i, align 4, !dbg !18741
  %23 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !18741
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %23, i32 0, i32 0, !dbg !18741
  store volatile i32 %22, i32* %counter.i.i, align 4, !dbg !18741
  br label %if.end, !dbg !18742

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !18743

for.inc:                                          ; preds = %if.end
  %24 = load i32, i32* %i, align 4, !dbg !18725
  %inc = add i32 %24, 1, !dbg !18725
  store i32 %inc, i32* %i, align 4, !dbg !18725
  br label %for.cond, !dbg !18725, !llvm.loop !18744

for.end:                                          ; preds = %for.cond
  ret void, !dbg !18746
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @mlx5_eswitch_vport_has_rep(%struct.mlx5_eswitch* %esw, i16 zeroext %vport_num) #0 !dbg !18747 {
entry:
  %retval = alloca i1, align 1
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  %vport_num.addr = alloca i16, align 2
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !18750, metadata !DIExpression()), !dbg !18751
  store i16 %vport_num, i16* %vport_num.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %vport_num.addr, metadata !18752, metadata !DIExpression()), !dbg !18753
  %0 = load i16, i16* %vport_num.addr, align 2, !dbg !18754
  %conv = zext i16 %0 to i32, !dbg !18754
  %cmp = icmp eq i32 %conv, 0, !dbg !18756
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !18757

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !18758
  %dev = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %1, i32 0, i32 0, !dbg !18759
  %2 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !18759
  %call = call zeroext i1 @mlx5_core_is_ecpf_esw_manager(%struct.mlx5_core_dev* %2) #8, !dbg !18760
  br i1 %call, label %if.end, label %if.then, !dbg !18761

if.then:                                          ; preds = %land.lhs.true
  store i1 false, i1* %retval, align 1, !dbg !18762
  br label %return, !dbg !18762

if.end:                                           ; preds = %land.lhs.true, %entry
  %3 = load i16, i16* %vport_num.addr, align 2, !dbg !18763
  %conv2 = zext i16 %3 to i32, !dbg !18763
  %cmp3 = icmp eq i32 %conv2, 65534, !dbg !18765
  br i1 %cmp3, label %land.lhs.true5, label %if.end9, !dbg !18766

land.lhs.true5:                                   ; preds = %if.end
  %4 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !18767
  %dev6 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %4, i32 0, i32 0, !dbg !18768
  %5 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev6, align 8, !dbg !18768
  %call7 = call zeroext i1 @mlx5_ecpf_vport_exists(%struct.mlx5_core_dev* %5) #8, !dbg !18769
  br i1 %call7, label %if.end9, label %if.then8, !dbg !18770

if.then8:                                         ; preds = %land.lhs.true5
  store i1 false, i1* %retval, align 1, !dbg !18771
  br label %return, !dbg !18771

if.end9:                                          ; preds = %land.lhs.true5, %if.end
  store i1 true, i1* %retval, align 1, !dbg !18772
  br label %return, !dbg !18772

return:                                           ; preds = %if.end9, %if.then8, %if.then
  %6 = load i1, i1* %retval, align 1, !dbg !18773
  ret i1 %6, !dbg !18773
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @mlx5_eswitch_unregister_vport_reps(%struct.mlx5_eswitch* %esw, i8 zeroext %rep_type) #0 !dbg !18774 {
entry:
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !16444, metadata !DIExpression()), !dbg !18777
  %i.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i.i, metadata !16458, metadata !DIExpression()), !dbg !18782
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !16460, metadata !DIExpression()), !dbg !18783
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !16464, metadata !DIExpression()), !dbg !18785
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !16466, metadata !DIExpression()), !dbg !18786
  %i.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i, metadata !16468, metadata !DIExpression()), !dbg !18787
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  %rep_type.addr = alloca i8, align 1
  %rep = alloca %struct.mlx5_eswitch_rep*, align 8
  %i = alloca i32, align 4
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !18788, metadata !DIExpression()), !dbg !18789
  store i8 %rep_type, i8* %rep_type.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %rep_type.addr, metadata !18790, metadata !DIExpression()), !dbg !18791
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch_rep** %rep, metadata !18792, metadata !DIExpression()), !dbg !18793
  call void @llvm.dbg.declare(metadata i32* %i, metadata !18794, metadata !DIExpression()), !dbg !18795
  %0 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !18796
  %mode = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %0, i32 0, i32 14, !dbg !18798
  %1 = load i32, i32* %mode, align 8, !dbg !18798
  %cmp = icmp eq i32 %1, 2, !dbg !18799
  br i1 %cmp, label %if.then, label %if.end, !dbg !18800

if.then:                                          ; preds = %entry
  %2 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !18801
  %3 = load i8, i8* %rep_type.addr, align 1, !dbg !18802
  call void @__unload_reps_all_vport(%struct.mlx5_eswitch* %2, i8 zeroext %3) #8, !dbg !18803
  br label %if.end, !dbg !18803

if.end:                                           ; preds = %if.then, %entry
  store i32 0, i32* %i, align 4, !dbg !18804
  br label %for.cond, !dbg !18804

for.cond:                                         ; preds = %for.inc, %if.end
  %4 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !18805
  %offloads = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %4, i32 0, i32 13, !dbg !18805
  %vport_reps = getelementptr inbounds %struct.mlx5_esw_offload, %struct.mlx5_esw_offload* %offloads, i32 0, i32 5, !dbg !18805
  %5 = load %struct.mlx5_eswitch_rep*, %struct.mlx5_eswitch_rep** %vport_reps, align 8, !dbg !18805
  %6 = load i32, i32* %i, align 4, !dbg !18805
  %idxprom = sext i32 %6 to i64, !dbg !18805
  %arrayidx = getelementptr %struct.mlx5_eswitch_rep, %struct.mlx5_eswitch_rep* %5, i64 %idxprom, !dbg !18805
  store %struct.mlx5_eswitch_rep* %arrayidx, %struct.mlx5_eswitch_rep** %rep, align 8, !dbg !18805
  %7 = load i32, i32* %i, align 4, !dbg !18805
  %8 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !18805
  %total_vports = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %8, i32 0, i32 8, !dbg !18805
  %9 = load i32, i32* %total_vports, align 4, !dbg !18805
  %cmp1 = icmp slt i32 %7, %9, !dbg !18805
  br i1 %cmp1, label %for.body, label %for.end, !dbg !18804

for.body:                                         ; preds = %for.cond
  %10 = load %struct.mlx5_eswitch_rep*, %struct.mlx5_eswitch_rep** %rep, align 8, !dbg !18806
  %rep_data = getelementptr inbounds %struct.mlx5_eswitch_rep, %struct.mlx5_eswitch_rep* %10, i32 0, i32 0, !dbg !18807
  %11 = load i8, i8* %rep_type.addr, align 1, !dbg !18808
  %idxprom2 = zext i8 %11 to i64, !dbg !18806
  %arrayidx3 = getelementptr [2 x %struct.mlx5_eswitch_rep_data], [2 x %struct.mlx5_eswitch_rep_data]* %rep_data, i64 0, i64 %idxprom2, !dbg !18806
  %state = getelementptr inbounds %struct.mlx5_eswitch_rep_data, %struct.mlx5_eswitch_rep_data* %arrayidx3, i32 0, i32 1, !dbg !18809
  store %struct.atomic_t* %state, %struct.atomic_t** %v.addr.i, align 8
  store i32 0, i32* %i.addr.i, align 4
  %12 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !18810
  %13 = bitcast %struct.atomic_t* %12 to i8*, !dbg !18810
  store i8* %13, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %14 = load i8*, i8** %v.addr.i.i, align 8, !dbg !18811
  %15 = load i64, i64* %size.addr.i.i, align 8, !dbg !18812
  %conv.i.i = trunc i64 %15 to i32, !dbg !18812
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %14, i32 %conv.i.i) #11, !dbg !18813
  %16 = load i8*, i8** %v.addr.i.i, align 8, !dbg !18814
  %17 = load i64, i64* %size.addr.i.i, align 8, !dbg !18814
  call void @kcsan_check_access(i8* %16, i64 %17, i32 5) #11, !dbg !18814
  %18 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !18815
  %19 = load i32, i32* %i.addr.i, align 4, !dbg !18816
  store %struct.atomic_t* %18, %struct.atomic_t** %v.addr.i1.i, align 8
  store i32 %19, i32* %i.addr.i.i, align 4
  %20 = load i32, i32* %i.addr.i.i, align 4, !dbg !18817
  %21 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !18817
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %21, i32 0, i32 0, !dbg !18817
  store volatile i32 %20, i32* %counter.i.i, align 4, !dbg !18817
  br label %for.inc, !dbg !18818

for.inc:                                          ; preds = %for.body
  %22 = load i32, i32* %i, align 4, !dbg !18805
  %inc = add i32 %22, 1, !dbg !18805
  store i32 %inc, i32* %i, align 4, !dbg !18805
  br label %for.cond, !dbg !18805, !llvm.loop !18819

for.end:                                          ; preds = %for.cond
  ret void, !dbg !18821
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__unload_reps_all_vport(%struct.mlx5_eswitch* %esw, i8 zeroext %rep_type) #0 !dbg !18822 {
entry:
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  %rep_type.addr = alloca i8, align 1
  %rep = alloca %struct.mlx5_eswitch_rep*, align 8
  %i = alloca i32, align 4
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !18823, metadata !DIExpression()), !dbg !18824
  store i8 %rep_type, i8* %rep_type.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %rep_type.addr, metadata !18825, metadata !DIExpression()), !dbg !18826
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch_rep** %rep, metadata !18827, metadata !DIExpression()), !dbg !18828
  call void @llvm.dbg.declare(metadata i32* %i, metadata !18829, metadata !DIExpression()), !dbg !18830
  %0 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !18831
  %esw_funcs = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %0, i32 0, i32 17, !dbg !18831
  %num_vfs = getelementptr inbounds %struct.mlx5_esw_functions, %struct.mlx5_esw_functions* %esw_funcs, i32 0, i32 1, !dbg !18831
  %1 = load i16, i16* %num_vfs, align 8, !dbg !18831
  %conv = zext i16 %1 to i32, !dbg !18831
  store i32 %conv, i32* %i, align 4, !dbg !18831
  br label %for.cond, !dbg !18831

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !18833
  %offloads = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %2, i32 0, i32 13, !dbg !18833
  %vport_reps = getelementptr inbounds %struct.mlx5_esw_offload, %struct.mlx5_esw_offload* %offloads, i32 0, i32 5, !dbg !18833
  %3 = load %struct.mlx5_eswitch_rep*, %struct.mlx5_eswitch_rep** %vport_reps, align 8, !dbg !18833
  %4 = load i32, i32* %i, align 4, !dbg !18833
  %idxprom = sext i32 %4 to i64, !dbg !18833
  %arrayidx = getelementptr %struct.mlx5_eswitch_rep, %struct.mlx5_eswitch_rep* %3, i64 %idxprom, !dbg !18833
  store %struct.mlx5_eswitch_rep* %arrayidx, %struct.mlx5_eswitch_rep** %rep, align 8, !dbg !18833
  %5 = load i32, i32* %i, align 4, !dbg !18833
  %cmp = icmp sge i32 %5, 1, !dbg !18833
  br i1 %cmp, label %for.body, label %for.end, !dbg !18831

for.body:                                         ; preds = %for.cond
  %6 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !18835
  %7 = load %struct.mlx5_eswitch_rep*, %struct.mlx5_eswitch_rep** %rep, align 8, !dbg !18836
  %8 = load i8, i8* %rep_type.addr, align 1, !dbg !18837
  call void @__esw_offloads_unload_rep(%struct.mlx5_eswitch* %6, %struct.mlx5_eswitch_rep* %7, i8 zeroext %8) #8, !dbg !18838
  br label %for.inc, !dbg !18838

for.inc:                                          ; preds = %for.body
  %9 = load i32, i32* %i, align 4, !dbg !18833
  %dec = add i32 %9, -1, !dbg !18833
  store i32 %dec, i32* %i, align 4, !dbg !18833
  br label %for.cond, !dbg !18833, !llvm.loop !18839

for.end:                                          ; preds = %for.cond
  %10 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !18841
  %dev = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %10, i32 0, i32 0, !dbg !18843
  %11 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !18843
  %call = call zeroext i1 @mlx5_ecpf_vport_exists(%struct.mlx5_core_dev* %11) #8, !dbg !18844
  br i1 %call, label %if.then, label %if.end, !dbg !18845

if.then:                                          ; preds = %for.end
  %12 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !18846
  %call2 = call %struct.mlx5_eswitch_rep* @mlx5_eswitch_get_rep(%struct.mlx5_eswitch* %12, i16 zeroext -2) #8, !dbg !18848
  store %struct.mlx5_eswitch_rep* %call2, %struct.mlx5_eswitch_rep** %rep, align 8, !dbg !18849
  %13 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !18850
  %14 = load %struct.mlx5_eswitch_rep*, %struct.mlx5_eswitch_rep** %rep, align 8, !dbg !18851
  %15 = load i8, i8* %rep_type.addr, align 1, !dbg !18852
  call void @__esw_offloads_unload_rep(%struct.mlx5_eswitch* %13, %struct.mlx5_eswitch_rep* %14, i8 zeroext %15) #8, !dbg !18853
  br label %if.end, !dbg !18854

if.end:                                           ; preds = %if.then, %for.end
  %16 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !18855
  %dev3 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %16, i32 0, i32 0, !dbg !18857
  %17 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev3, align 8, !dbg !18857
  %call4 = call zeroext i1 @mlx5_core_is_ecpf_esw_manager(%struct.mlx5_core_dev* %17) #8, !dbg !18858
  br i1 %call4, label %if.then5, label %if.end7, !dbg !18859

if.then5:                                         ; preds = %if.end
  %18 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !18860
  %call6 = call %struct.mlx5_eswitch_rep* @mlx5_eswitch_get_rep(%struct.mlx5_eswitch* %18, i16 zeroext 0) #8, !dbg !18862
  store %struct.mlx5_eswitch_rep* %call6, %struct.mlx5_eswitch_rep** %rep, align 8, !dbg !18863
  %19 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !18864
  %20 = load %struct.mlx5_eswitch_rep*, %struct.mlx5_eswitch_rep** %rep, align 8, !dbg !18865
  %21 = load i8, i8* %rep_type.addr, align 1, !dbg !18866
  call void @__esw_offloads_unload_rep(%struct.mlx5_eswitch* %19, %struct.mlx5_eswitch_rep* %20, i8 zeroext %21) #8, !dbg !18867
  br label %if.end7, !dbg !18868

if.end7:                                          ; preds = %if.then5, %if.end
  %22 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !18869
  %call8 = call %struct.mlx5_eswitch_rep* @mlx5_eswitch_get_rep(%struct.mlx5_eswitch* %22, i16 zeroext -1) #8, !dbg !18870
  store %struct.mlx5_eswitch_rep* %call8, %struct.mlx5_eswitch_rep** %rep, align 8, !dbg !18871
  %23 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !18872
  %24 = load %struct.mlx5_eswitch_rep*, %struct.mlx5_eswitch_rep** %rep, align 8, !dbg !18873
  %25 = load i8, i8* %rep_type.addr, align 1, !dbg !18874
  call void @__esw_offloads_unload_rep(%struct.mlx5_eswitch* %23, %struct.mlx5_eswitch_rep* %24, i8 zeroext %25) #8, !dbg !18875
  ret void, !dbg !18876
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i8* @mlx5_eswitch_get_uplink_priv(%struct.mlx5_eswitch* %esw, i8 zeroext %rep_type) #0 !dbg !18877 {
entry:
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  %rep_type.addr = alloca i8, align 1
  %rep = alloca %struct.mlx5_eswitch_rep*, align 8
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !18880, metadata !DIExpression()), !dbg !18881
  store i8 %rep_type, i8* %rep_type.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %rep_type.addr, metadata !18882, metadata !DIExpression()), !dbg !18883
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch_rep** %rep, metadata !18884, metadata !DIExpression()), !dbg !18885
  %0 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !18886
  %call = call %struct.mlx5_eswitch_rep* @mlx5_eswitch_get_rep(%struct.mlx5_eswitch* %0, i16 zeroext -1) #8, !dbg !18887
  store %struct.mlx5_eswitch_rep* %call, %struct.mlx5_eswitch_rep** %rep, align 8, !dbg !18888
  %1 = load %struct.mlx5_eswitch_rep*, %struct.mlx5_eswitch_rep** %rep, align 8, !dbg !18889
  %rep_data = getelementptr inbounds %struct.mlx5_eswitch_rep, %struct.mlx5_eswitch_rep* %1, i32 0, i32 0, !dbg !18890
  %2 = load i8, i8* %rep_type.addr, align 1, !dbg !18891
  %idxprom = zext i8 %2 to i64, !dbg !18889
  %arrayidx = getelementptr [2 x %struct.mlx5_eswitch_rep_data], [2 x %struct.mlx5_eswitch_rep_data]* %rep_data, i64 0, i64 %idxprom, !dbg !18889
  %priv = getelementptr inbounds %struct.mlx5_eswitch_rep_data, %struct.mlx5_eswitch_rep_data* %arrayidx, i32 0, i32 0, !dbg !18892
  %3 = load i8*, i8** %priv, align 8, !dbg !18892
  ret i8* %3, !dbg !18893
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.mlx5_eswitch_rep* @mlx5_eswitch_get_rep(%struct.mlx5_eswitch* %esw, i16 zeroext %vport_num) #0 !dbg !18894 {
entry:
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  %vport_num.addr = alloca i16, align 2
  %idx = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !18897, metadata !DIExpression()), !dbg !18898
  store i16 %vport_num, i16* %vport_num.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %vport_num.addr, metadata !18899, metadata !DIExpression()), !dbg !18900
  call void @llvm.dbg.declare(metadata i32* %idx, metadata !18901, metadata !DIExpression()), !dbg !18902
  %0 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !18903
  %1 = load i16, i16* %vport_num.addr, align 2, !dbg !18904
  %call = call i32 @mlx5_eswitch_vport_num_to_index(%struct.mlx5_eswitch* %0, i16 zeroext %1) #8, !dbg !18905
  store i32 %call, i32* %idx, align 4, !dbg !18902
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !18906, metadata !DIExpression()), !dbg !18908
  %2 = load i32, i32* %idx, align 4, !dbg !18908
  %3 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !18908
  %total_vports = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %3, i32 0, i32 8, !dbg !18908
  %4 = load i32, i32* %total_vports, align 4, !dbg !18908
  %sub = sub i32 %4, 1, !dbg !18908
  %cmp = icmp sgt i32 %2, %sub, !dbg !18908
  %lnot = xor i1 %cmp, true, !dbg !18908
  %lnot1 = xor i1 %lnot, true, !dbg !18908
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !18908
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !18908
  %5 = load i32, i32* %__ret_warn_on, align 4, !dbg !18909
  %tobool = icmp ne i32 %5, 0, !dbg !18909
  %lnot2 = xor i1 %tobool, true, !dbg !18909
  %lnot4 = xor i1 %lnot2, true, !dbg !18909
  %lnot.ext5 = zext i1 %lnot4 to i32, !dbg !18909
  %conv = sext i32 %lnot.ext5 to i64, !dbg !18909
  %tobool6 = icmp ne i64 %conv, 0, !dbg !18909
  br i1 %tobool6, label %if.then, label %if.end, !dbg !18908

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !18909

do.body:                                          ; preds = %if.then
  br label %do.body7, !dbg !18911

do.body7:                                         ; preds = %do.body
  br label %do.end, !dbg !18913

do.end:                                           ; preds = %do.body7
  br label %do.body8, !dbg !18911

do.body8:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.7, i64 0, i64 0), i32 240, i32 2305, i64 12) #12, !dbg !18915, !srcloc !18917
  br label %do.end9, !dbg !18915

do.end9:                                          ; preds = %do.body8
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 668) #12, !dbg !18918, !srcloc !18920
  br label %do.body10, !dbg !18911

do.body10:                                        ; preds = %do.end9
  br label %do.end11, !dbg !18921

do.end11:                                         ; preds = %do.body10
  br label %do.end12, !dbg !18911

do.end12:                                         ; preds = %do.end11
  br label %if.end, !dbg !18911

if.end:                                           ; preds = %do.end12, %entry
  %6 = load i32, i32* %__ret_warn_on, align 4, !dbg !18908
  %tobool13 = icmp ne i32 %6, 0, !dbg !18908
  %lnot14 = xor i1 %tobool13, true, !dbg !18908
  %lnot16 = xor i1 %lnot14, true, !dbg !18908
  %lnot.ext17 = zext i1 %lnot16 to i32, !dbg !18908
  %conv18 = sext i32 %lnot.ext17 to i64, !dbg !18908
  store i64 %conv18, i64* %tmp, align 8, !dbg !18909
  %7 = load i64, i64* %tmp, align 8, !dbg !18908
  %8 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !18923
  %offloads = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %8, i32 0, i32 13, !dbg !18924
  %vport_reps = getelementptr inbounds %struct.mlx5_esw_offload, %struct.mlx5_esw_offload* %offloads, i32 0, i32 5, !dbg !18925
  %9 = load %struct.mlx5_eswitch_rep*, %struct.mlx5_eswitch_rep** %vport_reps, align 8, !dbg !18925
  %10 = load i32, i32* %idx, align 4, !dbg !18926
  %idxprom = sext i32 %10 to i64, !dbg !18923
  %arrayidx = getelementptr %struct.mlx5_eswitch_rep, %struct.mlx5_eswitch_rep* %9, i64 %idxprom, !dbg !18923
  ret %struct.mlx5_eswitch_rep* %arrayidx, !dbg !18927
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i8* @mlx5_eswitch_get_proto_dev(%struct.mlx5_eswitch* %esw, i16 zeroext %vport, i8 zeroext %rep_type) #0 !dbg !18928 {
entry:
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !15605, metadata !DIExpression()), !dbg !18931
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !15620, metadata !DIExpression()), !dbg !18935
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !15624, metadata !DIExpression()), !dbg !18937
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !15626, metadata !DIExpression()), !dbg !18938
  %retval = alloca i8*, align 8
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  %vport.addr = alloca i16, align 2
  %rep_type.addr = alloca i8, align 1
  %rep = alloca %struct.mlx5_eswitch_rep*, align 8
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !18939, metadata !DIExpression()), !dbg !18940
  store i16 %vport, i16* %vport.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %vport.addr, metadata !18941, metadata !DIExpression()), !dbg !18942
  store i8 %rep_type, i8* %rep_type.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %rep_type.addr, metadata !18943, metadata !DIExpression()), !dbg !18944
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch_rep** %rep, metadata !18945, metadata !DIExpression()), !dbg !18946
  %0 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !18947
  %1 = load i16, i16* %vport.addr, align 2, !dbg !18948
  %call = call %struct.mlx5_eswitch_rep* @mlx5_eswitch_get_rep(%struct.mlx5_eswitch* %0, i16 zeroext %1) #8, !dbg !18949
  store %struct.mlx5_eswitch_rep* %call, %struct.mlx5_eswitch_rep** %rep, align 8, !dbg !18950
  %2 = load %struct.mlx5_eswitch_rep*, %struct.mlx5_eswitch_rep** %rep, align 8, !dbg !18951
  %rep_data = getelementptr inbounds %struct.mlx5_eswitch_rep, %struct.mlx5_eswitch_rep* %2, i32 0, i32 0, !dbg !18952
  %3 = load i8, i8* %rep_type.addr, align 1, !dbg !18953
  %idxprom = zext i8 %3 to i64, !dbg !18951
  %arrayidx = getelementptr [2 x %struct.mlx5_eswitch_rep_data], [2 x %struct.mlx5_eswitch_rep_data]* %rep_data, i64 0, i64 %idxprom, !dbg !18951
  %state = getelementptr inbounds %struct.mlx5_eswitch_rep_data, %struct.mlx5_eswitch_rep_data* %arrayidx, i32 0, i32 1, !dbg !18954
  store %struct.atomic_t* %state, %struct.atomic_t** %v.addr.i, align 8
  %4 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !18955
  %5 = bitcast %struct.atomic_t* %4 to i8*, !dbg !18955
  store i8* %5, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %6 = load i8*, i8** %v.addr.i.i, align 8, !dbg !18956
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !18957
  %conv.i.i = trunc i64 %7 to i32, !dbg !18957
  %call.i.i = call zeroext i1 @kasan_check_read(i8* %6, i32 %conv.i.i) #11, !dbg !18958
  %8 = load i8*, i8** %v.addr.i.i, align 8, !dbg !18959
  %9 = load i64, i64* %size.addr.i.i, align 8, !dbg !18959
  call void @kcsan_check_access(i8* %8, i64 %9, i32 4) #11, !dbg !18959
  %10 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !18960
  store %struct.atomic_t* %10, %struct.atomic_t** %v.addr.i1.i, align 8
  %11 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !18961
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %11, i32 0, i32 0, !dbg !18961
  %12 = load volatile i32, i32* %counter.i.i, align 4, !dbg !18961
  %cmp = icmp eq i32 %12, 2, !dbg !18962
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !18963

land.lhs.true:                                    ; preds = %entry
  %13 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !18964
  %offloads = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %13, i32 0, i32 13, !dbg !18965
  %rep_ops = getelementptr inbounds %struct.mlx5_esw_offload, %struct.mlx5_esw_offload* %offloads, i32 0, i32 15, !dbg !18966
  %14 = load i8, i8* %rep_type.addr, align 1, !dbg !18967
  %idxprom2 = zext i8 %14 to i64, !dbg !18964
  %arrayidx3 = getelementptr [2 x %struct.mlx5_eswitch_rep_ops*], [2 x %struct.mlx5_eswitch_rep_ops*]* %rep_ops, i64 0, i64 %idxprom2, !dbg !18964
  %15 = load %struct.mlx5_eswitch_rep_ops*, %struct.mlx5_eswitch_rep_ops** %arrayidx3, align 8, !dbg !18964
  %get_proto_dev = getelementptr inbounds %struct.mlx5_eswitch_rep_ops, %struct.mlx5_eswitch_rep_ops* %15, i32 0, i32 2, !dbg !18968
  %16 = load i8* (%struct.mlx5_eswitch_rep*)*, i8* (%struct.mlx5_eswitch_rep*)** %get_proto_dev, align 8, !dbg !18968
  %tobool = icmp ne i8* (%struct.mlx5_eswitch_rep*)* %16, null, !dbg !18964
  br i1 %tobool, label %if.then, label %if.end, !dbg !18969

if.then:                                          ; preds = %land.lhs.true
  %17 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !18970
  %offloads4 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %17, i32 0, i32 13, !dbg !18971
  %rep_ops5 = getelementptr inbounds %struct.mlx5_esw_offload, %struct.mlx5_esw_offload* %offloads4, i32 0, i32 15, !dbg !18972
  %18 = load i8, i8* %rep_type.addr, align 1, !dbg !18973
  %idxprom6 = zext i8 %18 to i64, !dbg !18970
  %arrayidx7 = getelementptr [2 x %struct.mlx5_eswitch_rep_ops*], [2 x %struct.mlx5_eswitch_rep_ops*]* %rep_ops5, i64 0, i64 %idxprom6, !dbg !18970
  %19 = load %struct.mlx5_eswitch_rep_ops*, %struct.mlx5_eswitch_rep_ops** %arrayidx7, align 8, !dbg !18970
  %get_proto_dev8 = getelementptr inbounds %struct.mlx5_eswitch_rep_ops, %struct.mlx5_eswitch_rep_ops* %19, i32 0, i32 2, !dbg !18974
  %20 = load i8* (%struct.mlx5_eswitch_rep*)*, i8* (%struct.mlx5_eswitch_rep*)** %get_proto_dev8, align 8, !dbg !18974
  %21 = load %struct.mlx5_eswitch_rep*, %struct.mlx5_eswitch_rep** %rep, align 8, !dbg !18975
  %call9 = call i8* %20(%struct.mlx5_eswitch_rep* %21) #8, !dbg !18970
  store i8* %call9, i8** %retval, align 8, !dbg !18976
  br label %return, !dbg !18976

if.end:                                           ; preds = %land.lhs.true, %entry
  store i8* null, i8** %retval, align 8, !dbg !18977
  br label %return, !dbg !18977

return:                                           ; preds = %if.end, %if.then
  %22 = load i8*, i8** %retval, align 8, !dbg !18978
  ret i8* %22, !dbg !18978
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i8* @mlx5_eswitch_uplink_get_proto_dev(%struct.mlx5_eswitch* %esw, i8 zeroext %rep_type) #0 !dbg !18979 {
entry:
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  %rep_type.addr = alloca i8, align 1
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !18980, metadata !DIExpression()), !dbg !18981
  store i8 %rep_type, i8* %rep_type.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %rep_type.addr, metadata !18982, metadata !DIExpression()), !dbg !18983
  %0 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !18984
  %1 = load i8, i8* %rep_type.addr, align 1, !dbg !18985
  %call = call i8* @mlx5_eswitch_get_proto_dev(%struct.mlx5_eswitch* %0, i16 zeroext -1, i8 zeroext %1) #8, !dbg !18986
  ret i8* %call, !dbg !18987
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.mlx5_eswitch_rep* @mlx5_eswitch_vport_rep(%struct.mlx5_eswitch* %esw, i16 zeroext %vport) #0 !dbg !18988 {
entry:
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  %vport.addr = alloca i16, align 2
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !18989, metadata !DIExpression()), !dbg !18990
  store i16 %vport, i16* %vport.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %vport.addr, metadata !18991, metadata !DIExpression()), !dbg !18992
  %0 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !18993
  %1 = load i16, i16* %vport.addr, align 2, !dbg !18994
  %call = call %struct.mlx5_eswitch_rep* @mlx5_eswitch_get_rep(%struct.mlx5_eswitch* %0, i16 zeroext %1) #8, !dbg !18995
  ret %struct.mlx5_eswitch_rep* %call, !dbg !18996
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local zeroext i1 @mlx5_eswitch_is_vf_vport(%struct.mlx5_eswitch* %esw, i16 zeroext %vport_num) #0 !dbg !18997 {
entry:
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  %vport_num.addr = alloca i16, align 2
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !18998, metadata !DIExpression()), !dbg !18999
  store i16 %vport_num, i16* %vport_num.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %vport_num.addr, metadata !19000, metadata !DIExpression()), !dbg !19001
  %0 = load i16, i16* %vport_num.addr, align 2, !dbg !19002
  %conv = zext i16 %0 to i32, !dbg !19002
  %cmp = icmp sge i32 %conv, 1, !dbg !19003
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !19004

land.rhs:                                         ; preds = %entry
  %1 = load i16, i16* %vport_num.addr, align 2, !dbg !19005
  %conv2 = zext i16 %1 to i32, !dbg !19005
  %2 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !19006
  %dev = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %2, i32 0, i32 0, !dbg !19007
  %3 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !19007
  %priv = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %3, i32 0, i32 17, !dbg !19008
  %sriov = getelementptr inbounds %struct.mlx5_priv, %struct.mlx5_priv* %priv, i32 0, i32 27, !dbg !19009
  %max_vfs = getelementptr inbounds %struct.mlx5_core_sriov, %struct.mlx5_core_sriov* %sriov, i32 0, i32 2, !dbg !19010
  %4 = load i16, i16* %max_vfs, align 4, !dbg !19010
  %conv3 = zext i16 %4 to i32, !dbg !19006
  %cmp4 = icmp sle i32 %conv2, %conv3, !dbg !19011
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %5 = phi i1 [ false, %entry ], [ %cmp4, %land.rhs ], !dbg !19012
  ret i1 %5, !dbg !19013
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local zeroext i1 @mlx5_eswitch_reg_c1_loopback_enabled(%struct.mlx5_eswitch* %esw) #0 !dbg !19014 {
entry:
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !19015, metadata !DIExpression()), !dbg !19016
  %0 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !19017
  %flags = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %0, i32 0, i32 7, !dbg !19018
  %1 = load i32, i32* %flags, align 8, !dbg !19018
  %and = and i32 %1, 2, !dbg !19019
  %tobool = icmp ne i32 %and, 0, !dbg !19020
  %lnot = xor i1 %tobool, true, !dbg !19020
  %lnot1 = xor i1 %lnot, true, !dbg !19021
  ret i1 %lnot1, !dbg !19022
}

; Function Attrs: noredzone
declare dso_local %struct.mlx5_vport* @mlx5_eswitch_get_vport(%struct.mlx5_eswitch*, i16 zeroext) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @flow_attr_to_vport_key(%struct.mlx5_eswitch* %esw, %struct.mlx5_vport_tbl_attr* %attr, %struct.mlx5_vport_key* %key) #0 !dbg !19023 {
entry:
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  %attr.addr = alloca %struct.mlx5_vport_tbl_attr*, align 8
  %key.addr = alloca %struct.mlx5_vport_key*, align 8
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !19027, metadata !DIExpression()), !dbg !19028
  store %struct.mlx5_vport_tbl_attr* %attr, %struct.mlx5_vport_tbl_attr** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_vport_tbl_attr** %attr.addr, metadata !19029, metadata !DIExpression()), !dbg !19030
  store %struct.mlx5_vport_key* %key, %struct.mlx5_vport_key** %key.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_vport_key** %key.addr, metadata !19031, metadata !DIExpression()), !dbg !19032
  %0 = load %struct.mlx5_vport_tbl_attr*, %struct.mlx5_vport_tbl_attr** %attr.addr, align 8, !dbg !19033
  %vport = getelementptr inbounds %struct.mlx5_vport_tbl_attr, %struct.mlx5_vport_tbl_attr* %0, i32 0, i32 2, !dbg !19034
  %1 = load i16, i16* %vport, align 2, !dbg !19034
  %2 = load %struct.mlx5_vport_key*, %struct.mlx5_vport_key** %key.addr, align 8, !dbg !19035
  %vport1 = getelementptr inbounds %struct.mlx5_vport_key, %struct.mlx5_vport_key* %2, i32 0, i32 2, !dbg !19036
  store i16 %1, i16* %vport1, align 1, !dbg !19037
  %3 = load %struct.mlx5_vport_tbl_attr*, %struct.mlx5_vport_tbl_attr** %attr.addr, align 8, !dbg !19038
  %chain = getelementptr inbounds %struct.mlx5_vport_tbl_attr, %struct.mlx5_vport_tbl_attr* %3, i32 0, i32 0, !dbg !19039
  %4 = load i16, i16* %chain, align 2, !dbg !19039
  %conv = zext i16 %4 to i32, !dbg !19038
  %5 = load %struct.mlx5_vport_key*, %struct.mlx5_vport_key** %key.addr, align 8, !dbg !19040
  %chain2 = getelementptr inbounds %struct.mlx5_vport_key, %struct.mlx5_vport_key* %5, i32 0, i32 0, !dbg !19041
  store i32 %conv, i32* %chain2, align 1, !dbg !19042
  %6 = load %struct.mlx5_vport_tbl_attr*, %struct.mlx5_vport_tbl_attr** %attr.addr, align 8, !dbg !19043
  %prio = getelementptr inbounds %struct.mlx5_vport_tbl_attr, %struct.mlx5_vport_tbl_attr* %6, i32 0, i32 1, !dbg !19044
  %7 = load i16, i16* %prio, align 2, !dbg !19044
  %8 = load %struct.mlx5_vport_key*, %struct.mlx5_vport_key** %key.addr, align 8, !dbg !19045
  %prio3 = getelementptr inbounds %struct.mlx5_vport_key, %struct.mlx5_vport_key* %8, i32 0, i32 1, !dbg !19046
  store i16 %7, i16* %prio3, align 1, !dbg !19047
  %9 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !19048
  %dev = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %9, i32 0, i32 0, !dbg !19048
  %10 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !19048
  %caps = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %10, i32 0, i32 9, !dbg !19048
  %hca_cur = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps, i32 0, i32 0, !dbg !19048
  %arrayidx = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur, i64 0, i64 0, !dbg !19048
  %arraydecay = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx, i64 0, i64 0, !dbg !19048
  %add.ptr = getelementptr i32, i32* %arraydecay, i64 1, !dbg !19048
  %11 = load i32, i32* %add.ptr, align 4, !dbg !19048
  %12 = call i1 @llvm.is.constant.i32(i32 %11), !dbg !19048
  br i1 %12, label %cond.true, label %cond.false, !dbg !19048

cond.true:                                        ; preds = %entry
  %13 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !19048
  %dev4 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %13, i32 0, i32 0, !dbg !19048
  %14 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev4, align 8, !dbg !19048
  %caps5 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %14, i32 0, i32 9, !dbg !19048
  %hca_cur6 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps5, i32 0, i32 0, !dbg !19048
  %arrayidx7 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur6, i64 0, i64 0, !dbg !19048
  %arraydecay8 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx7, i64 0, i64 0, !dbg !19048
  %add.ptr9 = getelementptr i32, i32* %arraydecay8, i64 1, !dbg !19048
  %15 = load i32, i32* %add.ptr9, align 4, !dbg !19048
  %and = and i32 %15, 255, !dbg !19048
  %shl = shl i32 %and, 24, !dbg !19048
  %16 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !19048
  %dev10 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %16, i32 0, i32 0, !dbg !19048
  %17 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev10, align 8, !dbg !19048
  %caps11 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %17, i32 0, i32 9, !dbg !19048
  %hca_cur12 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps11, i32 0, i32 0, !dbg !19048
  %arrayidx13 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur12, i64 0, i64 0, !dbg !19048
  %arraydecay14 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx13, i64 0, i64 0, !dbg !19048
  %add.ptr15 = getelementptr i32, i32* %arraydecay14, i64 1, !dbg !19048
  %18 = load i32, i32* %add.ptr15, align 4, !dbg !19048
  %and16 = and i32 %18, 65280, !dbg !19048
  %shl17 = shl i32 %and16, 8, !dbg !19048
  %or = or i32 %shl, %shl17, !dbg !19048
  %19 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !19048
  %dev18 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %19, i32 0, i32 0, !dbg !19048
  %20 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev18, align 8, !dbg !19048
  %caps19 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %20, i32 0, i32 9, !dbg !19048
  %hca_cur20 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps19, i32 0, i32 0, !dbg !19048
  %arrayidx21 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur20, i64 0, i64 0, !dbg !19048
  %arraydecay22 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx21, i64 0, i64 0, !dbg !19048
  %add.ptr23 = getelementptr i32, i32* %arraydecay22, i64 1, !dbg !19048
  %21 = load i32, i32* %add.ptr23, align 4, !dbg !19048
  %and24 = and i32 %21, 16711680, !dbg !19048
  %shr = lshr i32 %and24, 8, !dbg !19048
  %or25 = or i32 %or, %shr, !dbg !19048
  %22 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !19048
  %dev26 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %22, i32 0, i32 0, !dbg !19048
  %23 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev26, align 8, !dbg !19048
  %caps27 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %23, i32 0, i32 9, !dbg !19048
  %hca_cur28 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps27, i32 0, i32 0, !dbg !19048
  %arrayidx29 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur28, i64 0, i64 0, !dbg !19048
  %arraydecay30 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx29, i64 0, i64 0, !dbg !19048
  %add.ptr31 = getelementptr i32, i32* %arraydecay30, i64 1, !dbg !19048
  %24 = load i32, i32* %add.ptr31, align 4, !dbg !19048
  %and32 = and i32 %24, -16777216, !dbg !19048
  %shr33 = lshr i32 %and32, 24, !dbg !19048
  %or34 = or i32 %or25, %shr33, !dbg !19048
  br label %cond.end, !dbg !19048

cond.false:                                       ; preds = %entry
  %25 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !19048
  %dev35 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %25, i32 0, i32 0, !dbg !19048
  %26 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev35, align 8, !dbg !19048
  %caps36 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %26, i32 0, i32 9, !dbg !19048
  %hca_cur37 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps36, i32 0, i32 0, !dbg !19048
  %arrayidx38 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur37, i64 0, i64 0, !dbg !19048
  %arraydecay39 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx38, i64 0, i64 0, !dbg !19048
  %add.ptr40 = getelementptr i32, i32* %arraydecay39, i64 1, !dbg !19048
  %27 = load i32, i32* %add.ptr40, align 4, !dbg !19048
  %call = call i32 @__fswab32(i32 %27) #10, !dbg !19048
  br label %cond.end, !dbg !19048

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %or34, %cond.true ], [ %call, %cond.false ], !dbg !19048
  %shr41 = lshr i32 %cond, 0, !dbg !19048
  %and42 = and i32 %shr41, 65535, !dbg !19048
  %conv43 = trunc i32 %and42 to i16, !dbg !19048
  %28 = load %struct.mlx5_vport_key*, %struct.mlx5_vport_key** %key.addr, align 8, !dbg !19049
  %vhca_id = getelementptr inbounds %struct.mlx5_vport_key, %struct.mlx5_vport_key* %28, i32 0, i32 3, !dbg !19050
  store i16 %conv43, i16* %vhca_id, align 1, !dbg !19051
  %29 = load %struct.mlx5_vport_key*, %struct.mlx5_vport_key** %key.addr, align 8, !dbg !19052
  %30 = bitcast %struct.mlx5_vport_key* %29 to i8*, !dbg !19052
  %call44 = call i32 @jhash(i8* %30, i32 10, i32 0) #8, !dbg !19053
  ret i32 %call44, !dbg !19054
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.mlx5_vport_table* @esw_vport_tbl_lookup(%struct.mlx5_eswitch* %esw, %struct.mlx5_vport_key* %skey, i32 %key) #0 !dbg !19055 {
entry:
  %retval = alloca %struct.mlx5_vport_table*, align 8
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  %skey.addr = alloca %struct.mlx5_vport_key*, align 8
  %key.addr = alloca i32, align 4
  %e = alloca %struct.mlx5_vport_table*, align 8
  %____ptr = alloca %struct.hlist_node*, align 8
  %tmp = alloca %struct.mlx5_vport_table*, align 8
  %__mptr = alloca i8*, align 8
  %tmp1 = alloca %struct.mlx5_vport_table*, align 8
  %____ptr6 = alloca %struct.hlist_node*, align 8
  %tmp7 = alloca %struct.mlx5_vport_table*, align 8
  %__mptr10 = alloca i8*, align 8
  %tmp13 = alloca %struct.mlx5_vport_table*, align 8
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !19058, metadata !DIExpression()), !dbg !19059
  store %struct.mlx5_vport_key* %skey, %struct.mlx5_vport_key** %skey.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_vport_key** %skey.addr, metadata !19060, metadata !DIExpression()), !dbg !19061
  store i32 %key, i32* %key.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %key.addr, metadata !19062, metadata !DIExpression()), !dbg !19063
  call void @llvm.dbg.declare(metadata %struct.mlx5_vport_table** %e, metadata !19064, metadata !DIExpression()), !dbg !19065
  call void @llvm.dbg.declare(metadata %struct.hlist_node** %____ptr, metadata !19066, metadata !DIExpression()), !dbg !19069
  %0 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !19069
  %fdb_table = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %0, i32 0, i32 2, !dbg !19069
  %1 = getelementptr inbounds %struct.mlx5_eswitch_fdb, %struct.mlx5_eswitch_fdb* %fdb_table, i32 0, i32 0, !dbg !19069
  %offloads = bitcast %union.anon.154* %1 to %struct.offloads_fdb*, !dbg !19069
  %vports = getelementptr inbounds %struct.offloads_fdb, %struct.offloads_fdb* %offloads, i32 0, i32 10, !dbg !19069
  %table = getelementptr inbounds %struct.anon.155, %struct.anon.155* %vports, i32 0, i32 0, !dbg !19069
  %2 = load i32, i32* %key.addr, align 4, !dbg !19069
  %call = call i32 @hash_32_generic(i32 %2, i32 8) #8, !dbg !19069
  %idxprom = zext i32 %call to i64, !dbg !19069
  %arrayidx = getelementptr [256 x %struct.hlist_head], [256 x %struct.hlist_head]* %table, i64 0, i64 %idxprom, !dbg !19069
  %first = getelementptr inbounds %struct.hlist_head, %struct.hlist_head* %arrayidx, i32 0, i32 0, !dbg !19069
  %3 = load %struct.hlist_node*, %struct.hlist_node** %first, align 8, !dbg !19069
  store %struct.hlist_node* %3, %struct.hlist_node** %____ptr, align 8, !dbg !19069
  %4 = load %struct.hlist_node*, %struct.hlist_node** %____ptr, align 8, !dbg !19069
  %tobool = icmp ne %struct.hlist_node* %4, null, !dbg !19069
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !19069

cond.true:                                        ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !19070, metadata !DIExpression()), !dbg !19072
  %5 = load %struct.hlist_node*, %struct.hlist_node** %____ptr, align 8, !dbg !19072
  %6 = bitcast %struct.hlist_node* %5 to i8*, !dbg !19072
  store i8* %6, i8** %__mptr, align 8, !dbg !19072
  br label %do.body, !dbg !19072

do.body:                                          ; preds = %cond.true
  br label %do.end, !dbg !19073

do.end:                                           ; preds = %do.body
  %7 = load i8*, i8** %__mptr, align 8, !dbg !19072
  %add.ptr = getelementptr i8, i8* %7, i64 0, !dbg !19072
  %8 = bitcast i8* %add.ptr to %struct.mlx5_vport_table*, !dbg !19072
  store %struct.mlx5_vport_table* %8, %struct.mlx5_vport_table** %tmp1, align 8, !dbg !19073
  %9 = load %struct.mlx5_vport_table*, %struct.mlx5_vport_table** %tmp1, align 8, !dbg !19072
  br label %cond.end, !dbg !19069

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !19069

cond.end:                                         ; preds = %cond.false, %do.end
  %cond = phi %struct.mlx5_vport_table* [ %9, %do.end ], [ null, %cond.false ], !dbg !19069
  store %struct.mlx5_vport_table* %cond, %struct.mlx5_vport_table** %tmp, align 8, !dbg !19069
  %10 = load %struct.mlx5_vport_table*, %struct.mlx5_vport_table** %tmp, align 8, !dbg !19069
  store %struct.mlx5_vport_table* %10, %struct.mlx5_vport_table** %e, align 8, !dbg !19075
  br label %for.cond, !dbg !19075

for.cond:                                         ; preds = %cond.end16, %cond.end
  %11 = load %struct.mlx5_vport_table*, %struct.mlx5_vport_table** %e, align 8, !dbg !19076
  %tobool2 = icmp ne %struct.mlx5_vport_table* %11, null, !dbg !19075
  br i1 %tobool2, label %for.body, label %for.end, !dbg !19075

for.body:                                         ; preds = %for.cond
  %12 = load %struct.mlx5_vport_table*, %struct.mlx5_vport_table** %e, align 8, !dbg !19078
  %key3 = getelementptr inbounds %struct.mlx5_vport_table, %struct.mlx5_vport_table* %12, i32 0, i32 3, !dbg !19080
  %13 = bitcast %struct.mlx5_vport_key* %key3 to i8*, !dbg !19081
  %14 = load %struct.mlx5_vport_key*, %struct.mlx5_vport_key** %skey.addr, align 8, !dbg !19082
  %15 = bitcast %struct.mlx5_vport_key* %14 to i8*, !dbg !19082
  %call4 = call i32 @memcmp(i8* %13, i8* %15, i64 10) #8, !dbg !19083
  %tobool5 = icmp ne i32 %call4, 0, !dbg !19083
  br i1 %tobool5, label %if.end, label %if.then, !dbg !19084

if.then:                                          ; preds = %for.body
  %16 = load %struct.mlx5_vport_table*, %struct.mlx5_vport_table** %e, align 8, !dbg !19085
  store %struct.mlx5_vport_table* %16, %struct.mlx5_vport_table** %retval, align 8, !dbg !19086
  br label %return, !dbg !19086

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !19087

for.inc:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.hlist_node** %____ptr6, metadata !19088, metadata !DIExpression()), !dbg !19090
  %17 = load %struct.mlx5_vport_table*, %struct.mlx5_vport_table** %e, align 8, !dbg !19090
  %hlist = getelementptr inbounds %struct.mlx5_vport_table, %struct.mlx5_vport_table* %17, i32 0, i32 0, !dbg !19090
  %next = getelementptr inbounds %struct.hlist_node, %struct.hlist_node* %hlist, i32 0, i32 0, !dbg !19090
  %18 = load %struct.hlist_node*, %struct.hlist_node** %next, align 8, !dbg !19090
  store %struct.hlist_node* %18, %struct.hlist_node** %____ptr6, align 8, !dbg !19090
  %19 = load %struct.hlist_node*, %struct.hlist_node** %____ptr6, align 8, !dbg !19090
  %tobool8 = icmp ne %struct.hlist_node* %19, null, !dbg !19090
  br i1 %tobool8, label %cond.true9, label %cond.false15, !dbg !19090

cond.true9:                                       ; preds = %for.inc
  call void @llvm.dbg.declare(metadata i8** %__mptr10, metadata !19091, metadata !DIExpression()), !dbg !19093
  %20 = load %struct.hlist_node*, %struct.hlist_node** %____ptr6, align 8, !dbg !19093
  %21 = bitcast %struct.hlist_node* %20 to i8*, !dbg !19093
  store i8* %21, i8** %__mptr10, align 8, !dbg !19093
  br label %do.body11, !dbg !19093

do.body11:                                        ; preds = %cond.true9
  br label %do.end12, !dbg !19094

do.end12:                                         ; preds = %do.body11
  %22 = load i8*, i8** %__mptr10, align 8, !dbg !19093
  %add.ptr14 = getelementptr i8, i8* %22, i64 0, !dbg !19093
  %23 = bitcast i8* %add.ptr14 to %struct.mlx5_vport_table*, !dbg !19093
  store %struct.mlx5_vport_table* %23, %struct.mlx5_vport_table** %tmp13, align 8, !dbg !19094
  %24 = load %struct.mlx5_vport_table*, %struct.mlx5_vport_table** %tmp13, align 8, !dbg !19093
  br label %cond.end16, !dbg !19090

cond.false15:                                     ; preds = %for.inc
  br label %cond.end16, !dbg !19090

cond.end16:                                       ; preds = %cond.false15, %do.end12
  %cond17 = phi %struct.mlx5_vport_table* [ %24, %do.end12 ], [ null, %cond.false15 ], !dbg !19090
  store %struct.mlx5_vport_table* %cond17, %struct.mlx5_vport_table** %tmp7, align 8, !dbg !19090
  %25 = load %struct.mlx5_vport_table*, %struct.mlx5_vport_table** %tmp7, align 8, !dbg !19090
  store %struct.mlx5_vport_table* %25, %struct.mlx5_vport_table** %e, align 8, !dbg !19076
  br label %for.cond, !dbg !19076, !llvm.loop !19096

for.end:                                          ; preds = %for.cond
  store %struct.mlx5_vport_table* null, %struct.mlx5_vport_table** %retval, align 8, !dbg !19098
  br label %return, !dbg !19098

return:                                           ; preds = %for.end, %if.then
  %26 = load %struct.mlx5_vport_table*, %struct.mlx5_vport_table** %retval, align 8, !dbg !19099
  ret %struct.mlx5_vport_table* %26, !dbg !19099
}

; Function Attrs: noredzone
declare dso_local %struct.mlx5_flow_namespace* @mlx5_get_flow_namespace(%struct.mlx5_core_dev*, i32) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.mlx5_flow_table* @esw_vport_tbl_create(%struct.mlx5_eswitch* %esw, %struct.mlx5_flow_namespace* %ns) #0 !dbg !19100 {
entry:
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  %ns.addr = alloca %struct.mlx5_flow_namespace*, align 8
  %ft_attr = alloca %struct.mlx5_flow_table_attr, align 8
  %fdb = alloca %struct.mlx5_flow_table*, align 8
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !19103, metadata !DIExpression()), !dbg !19104
  store %struct.mlx5_flow_namespace* %ns, %struct.mlx5_flow_namespace** %ns.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_flow_namespace** %ns.addr, metadata !19105, metadata !DIExpression()), !dbg !19106
  call void @llvm.dbg.declare(metadata %struct.mlx5_flow_table_attr* %ft_attr, metadata !19107, metadata !DIExpression()), !dbg !19108
  %0 = bitcast %struct.mlx5_flow_table_attr* %ft_attr to i8*, !dbg !19108
  call void @llvm.memset.p0i8.i64(i8* align 8 %0, i8 0, i64 32, i1 false), !dbg !19108
  call void @llvm.dbg.declare(metadata %struct.mlx5_flow_table** %fdb, metadata !19109, metadata !DIExpression()), !dbg !19110
  %autogroup = getelementptr inbounds %struct.mlx5_flow_table_attr, %struct.mlx5_flow_table_attr* %ft_attr, i32 0, i32 5, !dbg !19111
  %max_num_groups = getelementptr inbounds %struct.anon.218, %struct.anon.218* %autogroup, i32 0, i32 0, !dbg !19112
  store i32 4, i32* %max_num_groups, align 8, !dbg !19113
  %max_fte = getelementptr inbounds %struct.mlx5_flow_table_attr, %struct.mlx5_flow_table_attr* %ft_attr, i32 0, i32 1, !dbg !19114
  store i32 128, i32* %max_fte, align 4, !dbg !19115
  %prio = getelementptr inbounds %struct.mlx5_flow_table_attr, %struct.mlx5_flow_table_attr* %ft_attr, i32 0, i32 0, !dbg !19116
  store i32 4, i32* %prio, align 8, !dbg !19117
  %1 = load %struct.mlx5_flow_namespace*, %struct.mlx5_flow_namespace** %ns.addr, align 8, !dbg !19118
  %call = call %struct.mlx5_flow_table* @mlx5_create_auto_grouped_flow_table(%struct.mlx5_flow_namespace* %1, %struct.mlx5_flow_table_attr* %ft_attr) #8, !dbg !19119
  store %struct.mlx5_flow_table* %call, %struct.mlx5_flow_table** %fdb, align 8, !dbg !19120
  %2 = load %struct.mlx5_flow_table*, %struct.mlx5_flow_table** %fdb, align 8, !dbg !19121
  %3 = bitcast %struct.mlx5_flow_table* %2 to i8*, !dbg !19121
  %call1 = call zeroext i1 @IS_ERR(i8* %3) #8, !dbg !19123
  br i1 %call1, label %if.then, label %if.end, !dbg !19124

if.then:                                          ; preds = %entry
  %4 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !19125
  %dev = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %4, i32 0, i32 0, !dbg !19125
  %5 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !19125
  %device = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %5, i32 0, i32 0, !dbg !19125
  %6 = load %struct.device*, %struct.device** %device, align 8, !dbg !19125
  %7 = load %struct.mlx5_flow_table*, %struct.mlx5_flow_table** %fdb, align 8, !dbg !19125
  %8 = bitcast %struct.mlx5_flow_table* %7 to i8*, !dbg !19125
  %call2 = call i64 @PTR_ERR(i8* %8) #8, !dbg !19125
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %6, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.9, i64 0, i64 0), i64 %call2) #9, !dbg !19125
  br label %if.end, !dbg !19127

if.end:                                           ; preds = %if.then, %entry
  %9 = load %struct.mlx5_flow_table*, %struct.mlx5_flow_table** %fdb, align 8, !dbg !19128
  ret %struct.mlx5_flow_table* %9, !dbg !19129
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @hlist_add_head(%struct.hlist_node* %n, %struct.hlist_head* %h) #0 !dbg !19130 {
entry:
  %n.addr = alloca %struct.hlist_node*, align 8
  %h.addr = alloca %struct.hlist_head*, align 8
  %first = alloca %struct.hlist_node*, align 8
  store %struct.hlist_node* %n, %struct.hlist_node** %n.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hlist_node** %n.addr, metadata !19133, metadata !DIExpression()), !dbg !19134
  store %struct.hlist_head* %h, %struct.hlist_head** %h.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hlist_head** %h.addr, metadata !19135, metadata !DIExpression()), !dbg !19136
  call void @llvm.dbg.declare(metadata %struct.hlist_node** %first, metadata !19137, metadata !DIExpression()), !dbg !19138
  %0 = load %struct.hlist_head*, %struct.hlist_head** %h.addr, align 8, !dbg !19139
  %first1 = getelementptr inbounds %struct.hlist_head, %struct.hlist_head* %0, i32 0, i32 0, !dbg !19140
  %1 = load %struct.hlist_node*, %struct.hlist_node** %first1, align 8, !dbg !19140
  store %struct.hlist_node* %1, %struct.hlist_node** %first, align 8, !dbg !19138
  br label %do.body, !dbg !19141

do.body:                                          ; preds = %entry
  br label %do.body2, !dbg !19142

do.body2:                                         ; preds = %do.body
  br label %do.end, !dbg !19144

do.end:                                           ; preds = %do.body2
  br label %do.body3, !dbg !19142

do.body3:                                         ; preds = %do.end
  %2 = load %struct.hlist_node*, %struct.hlist_node** %first, align 8, !dbg !19146
  %3 = load %struct.hlist_node*, %struct.hlist_node** %n.addr, align 8, !dbg !19146
  %next = getelementptr inbounds %struct.hlist_node, %struct.hlist_node* %3, i32 0, i32 0, !dbg !19146
  store volatile %struct.hlist_node* %2, %struct.hlist_node** %next, align 8, !dbg !19146
  br label %do.end4, !dbg !19146

do.end4:                                          ; preds = %do.body3
  br label %do.end5, !dbg !19142

do.end5:                                          ; preds = %do.end4
  %4 = load %struct.hlist_node*, %struct.hlist_node** %first, align 8, !dbg !19148
  %tobool = icmp ne %struct.hlist_node* %4, null, !dbg !19148
  br i1 %tobool, label %if.then, label %if.end, !dbg !19150

if.then:                                          ; preds = %do.end5
  br label %do.body6, !dbg !19151

do.body6:                                         ; preds = %if.then
  br label %do.body7, !dbg !19152

do.body7:                                         ; preds = %do.body6
  br label %do.end8, !dbg !19154

do.end8:                                          ; preds = %do.body7
  br label %do.body9, !dbg !19152

do.body9:                                         ; preds = %do.end8
  %5 = load %struct.hlist_node*, %struct.hlist_node** %n.addr, align 8, !dbg !19156
  %next10 = getelementptr inbounds %struct.hlist_node, %struct.hlist_node* %5, i32 0, i32 0, !dbg !19156
  %6 = load %struct.hlist_node*, %struct.hlist_node** %first, align 8, !dbg !19156
  %pprev = getelementptr inbounds %struct.hlist_node, %struct.hlist_node* %6, i32 0, i32 1, !dbg !19156
  store volatile %struct.hlist_node** %next10, %struct.hlist_node*** %pprev, align 8, !dbg !19156
  br label %do.end11, !dbg !19156

do.end11:                                         ; preds = %do.body9
  br label %do.end12, !dbg !19152

do.end12:                                         ; preds = %do.end11
  br label %if.end, !dbg !19152

if.end:                                           ; preds = %do.end12, %do.end5
  br label %do.body13, !dbg !19158

do.body13:                                        ; preds = %if.end
  br label %do.body14, !dbg !19159

do.body14:                                        ; preds = %do.body13
  br label %do.end15, !dbg !19161

do.end15:                                         ; preds = %do.body14
  br label %do.body16, !dbg !19159

do.body16:                                        ; preds = %do.end15
  %7 = load %struct.hlist_node*, %struct.hlist_node** %n.addr, align 8, !dbg !19163
  %8 = load %struct.hlist_head*, %struct.hlist_head** %h.addr, align 8, !dbg !19163
  %first17 = getelementptr inbounds %struct.hlist_head, %struct.hlist_head* %8, i32 0, i32 0, !dbg !19163
  store volatile %struct.hlist_node* %7, %struct.hlist_node** %first17, align 8, !dbg !19163
  br label %do.end18, !dbg !19163

do.end18:                                         ; preds = %do.body16
  br label %do.end19, !dbg !19159

do.end19:                                         ; preds = %do.end18
  br label %do.body20, !dbg !19165

do.body20:                                        ; preds = %do.end19
  br label %do.body21, !dbg !19166

do.body21:                                        ; preds = %do.body20
  br label %do.end22, !dbg !19168

do.end22:                                         ; preds = %do.body21
  br label %do.body23, !dbg !19166

do.body23:                                        ; preds = %do.end22
  %9 = load %struct.hlist_head*, %struct.hlist_head** %h.addr, align 8, !dbg !19170
  %first24 = getelementptr inbounds %struct.hlist_head, %struct.hlist_head* %9, i32 0, i32 0, !dbg !19170
  %10 = load %struct.hlist_node*, %struct.hlist_node** %n.addr, align 8, !dbg !19170
  %pprev25 = getelementptr inbounds %struct.hlist_node, %struct.hlist_node* %10, i32 0, i32 1, !dbg !19170
  store volatile %struct.hlist_node** %first24, %struct.hlist_node*** %pprev25, align 8, !dbg !19170
  br label %do.end26, !dbg !19170

do.end26:                                         ; preds = %do.body23
  br label %do.end27, !dbg !19166

do.end27:                                         ; preds = %do.end26
  ret void, !dbg !19172
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @hash_32_generic(i32 %val, i32 %bits) #0 !dbg !19173 {
entry:
  %val.addr = alloca i32, align 4
  %bits.addr = alloca i32, align 4
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !19177, metadata !DIExpression()), !dbg !19178
  store i32 %bits, i32* %bits.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bits.addr, metadata !19179, metadata !DIExpression()), !dbg !19180
  %0 = load i32, i32* %val.addr, align 4, !dbg !19181
  %call = call i32 @__hash_32_generic(i32 %0) #8, !dbg !19182
  %1 = load i32, i32* %bits.addr, align 4, !dbg !19183
  %sub = sub i32 32, %1, !dbg !19184
  %shr = lshr i32 %call, %sub, !dbg !19185
  ret i32 %shr, !dbg !19186
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @jhash(i8* %key, i32 %length, i32 %initval) #0 !dbg !19187 {
entry:
  %key.addr = alloca i8*, align 8
  %length.addr = alloca i32, align 4
  %initval.addr = alloca i32, align 4
  %a = alloca i32, align 4
  %b = alloca i32, align 4
  %c = alloca i32, align 4
  %k = alloca i8*, align 8
  store i8* %key, i8** %key.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %key.addr, metadata !19189, metadata !DIExpression()), !dbg !19190
  store i32 %length, i32* %length.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %length.addr, metadata !19191, metadata !DIExpression()), !dbg !19192
  store i32 %initval, i32* %initval.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %initval.addr, metadata !19193, metadata !DIExpression()), !dbg !19194
  call void @llvm.dbg.declare(metadata i32* %a, metadata !19195, metadata !DIExpression()), !dbg !19196
  call void @llvm.dbg.declare(metadata i32* %b, metadata !19197, metadata !DIExpression()), !dbg !19198
  call void @llvm.dbg.declare(metadata i32* %c, metadata !19199, metadata !DIExpression()), !dbg !19200
  call void @llvm.dbg.declare(metadata i8** %k, metadata !19201, metadata !DIExpression()), !dbg !19202
  %0 = load i8*, i8** %key.addr, align 8, !dbg !19203
  store i8* %0, i8** %k, align 8, !dbg !19202
  %1 = load i32, i32* %length.addr, align 4, !dbg !19204
  %add = add i32 -559038737, %1, !dbg !19205
  %2 = load i32, i32* %initval.addr, align 4, !dbg !19206
  %add1 = add i32 %add, %2, !dbg !19207
  store i32 %add1, i32* %c, align 4, !dbg !19208
  store i32 %add1, i32* %b, align 4, !dbg !19209
  store i32 %add1, i32* %a, align 4, !dbg !19210
  br label %while.cond, !dbg !19211

while.cond:                                       ; preds = %while.body, %entry
  %3 = load i32, i32* %length.addr, align 4, !dbg !19212
  %cmp = icmp ugt i32 %3, 12, !dbg !19213
  br i1 %cmp, label %while.body, label %while.end, !dbg !19211

while.body:                                       ; preds = %while.cond
  %4 = load i8*, i8** %k, align 8, !dbg !19214
  %call = call i32 @__get_unaligned_cpu32(i8* %4) #8, !dbg !19216
  %5 = load i32, i32* %a, align 4, !dbg !19217
  %add2 = add i32 %5, %call, !dbg !19217
  store i32 %add2, i32* %a, align 4, !dbg !19217
  %6 = load i8*, i8** %k, align 8, !dbg !19218
  %add.ptr = getelementptr i8, i8* %6, i64 4, !dbg !19219
  %call3 = call i32 @__get_unaligned_cpu32(i8* %add.ptr) #8, !dbg !19220
  %7 = load i32, i32* %b, align 4, !dbg !19221
  %add4 = add i32 %7, %call3, !dbg !19221
  store i32 %add4, i32* %b, align 4, !dbg !19221
  %8 = load i8*, i8** %k, align 8, !dbg !19222
  %add.ptr5 = getelementptr i8, i8* %8, i64 8, !dbg !19223
  %call6 = call i32 @__get_unaligned_cpu32(i8* %add.ptr5) #8, !dbg !19224
  %9 = load i32, i32* %c, align 4, !dbg !19225
  %add7 = add i32 %9, %call6, !dbg !19225
  store i32 %add7, i32* %c, align 4, !dbg !19225
  %10 = load i32, i32* %c, align 4, !dbg !19226
  %11 = load i32, i32* %a, align 4, !dbg !19226
  %sub = sub i32 %11, %10, !dbg !19226
  store i32 %sub, i32* %a, align 4, !dbg !19226
  %12 = load i32, i32* %c, align 4, !dbg !19226
  %call8 = call i32 @rol32(i32 %12, i32 4) #8, !dbg !19226
  %13 = load i32, i32* %a, align 4, !dbg !19226
  %xor = xor i32 %13, %call8, !dbg !19226
  store i32 %xor, i32* %a, align 4, !dbg !19226
  %14 = load i32, i32* %b, align 4, !dbg !19226
  %15 = load i32, i32* %c, align 4, !dbg !19226
  %add9 = add i32 %15, %14, !dbg !19226
  store i32 %add9, i32* %c, align 4, !dbg !19226
  %16 = load i32, i32* %a, align 4, !dbg !19226
  %17 = load i32, i32* %b, align 4, !dbg !19226
  %sub10 = sub i32 %17, %16, !dbg !19226
  store i32 %sub10, i32* %b, align 4, !dbg !19226
  %18 = load i32, i32* %a, align 4, !dbg !19226
  %call11 = call i32 @rol32(i32 %18, i32 6) #8, !dbg !19226
  %19 = load i32, i32* %b, align 4, !dbg !19226
  %xor12 = xor i32 %19, %call11, !dbg !19226
  store i32 %xor12, i32* %b, align 4, !dbg !19226
  %20 = load i32, i32* %c, align 4, !dbg !19226
  %21 = load i32, i32* %a, align 4, !dbg !19226
  %add13 = add i32 %21, %20, !dbg !19226
  store i32 %add13, i32* %a, align 4, !dbg !19226
  %22 = load i32, i32* %b, align 4, !dbg !19226
  %23 = load i32, i32* %c, align 4, !dbg !19226
  %sub14 = sub i32 %23, %22, !dbg !19226
  store i32 %sub14, i32* %c, align 4, !dbg !19226
  %24 = load i32, i32* %b, align 4, !dbg !19226
  %call15 = call i32 @rol32(i32 %24, i32 8) #8, !dbg !19226
  %25 = load i32, i32* %c, align 4, !dbg !19226
  %xor16 = xor i32 %25, %call15, !dbg !19226
  store i32 %xor16, i32* %c, align 4, !dbg !19226
  %26 = load i32, i32* %a, align 4, !dbg !19226
  %27 = load i32, i32* %b, align 4, !dbg !19226
  %add17 = add i32 %27, %26, !dbg !19226
  store i32 %add17, i32* %b, align 4, !dbg !19226
  %28 = load i32, i32* %c, align 4, !dbg !19226
  %29 = load i32, i32* %a, align 4, !dbg !19226
  %sub18 = sub i32 %29, %28, !dbg !19226
  store i32 %sub18, i32* %a, align 4, !dbg !19226
  %30 = load i32, i32* %c, align 4, !dbg !19226
  %call19 = call i32 @rol32(i32 %30, i32 16) #8, !dbg !19226
  %31 = load i32, i32* %a, align 4, !dbg !19226
  %xor20 = xor i32 %31, %call19, !dbg !19226
  store i32 %xor20, i32* %a, align 4, !dbg !19226
  %32 = load i32, i32* %b, align 4, !dbg !19226
  %33 = load i32, i32* %c, align 4, !dbg !19226
  %add21 = add i32 %33, %32, !dbg !19226
  store i32 %add21, i32* %c, align 4, !dbg !19226
  %34 = load i32, i32* %a, align 4, !dbg !19226
  %35 = load i32, i32* %b, align 4, !dbg !19226
  %sub22 = sub i32 %35, %34, !dbg !19226
  store i32 %sub22, i32* %b, align 4, !dbg !19226
  %36 = load i32, i32* %a, align 4, !dbg !19226
  %call23 = call i32 @rol32(i32 %36, i32 19) #8, !dbg !19226
  %37 = load i32, i32* %b, align 4, !dbg !19226
  %xor24 = xor i32 %37, %call23, !dbg !19226
  store i32 %xor24, i32* %b, align 4, !dbg !19226
  %38 = load i32, i32* %c, align 4, !dbg !19226
  %39 = load i32, i32* %a, align 4, !dbg !19226
  %add25 = add i32 %39, %38, !dbg !19226
  store i32 %add25, i32* %a, align 4, !dbg !19226
  %40 = load i32, i32* %b, align 4, !dbg !19226
  %41 = load i32, i32* %c, align 4, !dbg !19226
  %sub26 = sub i32 %41, %40, !dbg !19226
  store i32 %sub26, i32* %c, align 4, !dbg !19226
  %42 = load i32, i32* %b, align 4, !dbg !19226
  %call27 = call i32 @rol32(i32 %42, i32 4) #8, !dbg !19226
  %43 = load i32, i32* %c, align 4, !dbg !19226
  %xor28 = xor i32 %43, %call27, !dbg !19226
  store i32 %xor28, i32* %c, align 4, !dbg !19226
  %44 = load i32, i32* %a, align 4, !dbg !19226
  %45 = load i32, i32* %b, align 4, !dbg !19226
  %add29 = add i32 %45, %44, !dbg !19226
  store i32 %add29, i32* %b, align 4, !dbg !19226
  %46 = load i32, i32* %length.addr, align 4, !dbg !19228
  %sub30 = sub i32 %46, 12, !dbg !19228
  store i32 %sub30, i32* %length.addr, align 4, !dbg !19228
  %47 = load i8*, i8** %k, align 8, !dbg !19229
  %add.ptr31 = getelementptr i8, i8* %47, i64 12, !dbg !19229
  store i8* %add.ptr31, i8** %k, align 8, !dbg !19229
  br label %while.cond, !dbg !19211, !llvm.loop !19230

while.end:                                        ; preds = %while.cond
  %48 = load i32, i32* %length.addr, align 4, !dbg !19232
  switch i32 %48, label %sw.epilog [
    i32 12, label %sw.bb
    i32 11, label %sw.bb33
    i32 10, label %sw.bb38
    i32 9, label %sw.bb43
    i32 8, label %sw.bb47
    i32 7, label %sw.bb52
    i32 6, label %sw.bb57
    i32 5, label %sw.bb62
    i32 4, label %sw.bb66
    i32 3, label %sw.bb71
    i32 2, label %sw.bb76
    i32 1, label %sw.bb81
    i32 0, label %sw.bb106
  ], !dbg !19233

sw.bb:                                            ; preds = %while.end
  %49 = load i8*, i8** %k, align 8, !dbg !19234
  %arrayidx = getelementptr i8, i8* %49, i64 11, !dbg !19234
  %50 = load i8, i8* %arrayidx, align 1, !dbg !19234
  %conv = zext i8 %50 to i32, !dbg !19236
  %shl = shl i32 %conv, 24, !dbg !19237
  %51 = load i32, i32* %c, align 4, !dbg !19238
  %add32 = add i32 %51, %shl, !dbg !19238
  store i32 %add32, i32* %c, align 4, !dbg !19238
  br label %sw.bb33, !dbg !19239

sw.bb33:                                          ; preds = %while.end, %sw.bb
  %52 = load i8*, i8** %k, align 8, !dbg !19240
  %arrayidx34 = getelementptr i8, i8* %52, i64 10, !dbg !19240
  %53 = load i8, i8* %arrayidx34, align 1, !dbg !19240
  %conv35 = zext i8 %53 to i32, !dbg !19241
  %shl36 = shl i32 %conv35, 16, !dbg !19242
  %54 = load i32, i32* %c, align 4, !dbg !19243
  %add37 = add i32 %54, %shl36, !dbg !19243
  store i32 %add37, i32* %c, align 4, !dbg !19243
  br label %sw.bb38, !dbg !19244

sw.bb38:                                          ; preds = %while.end, %sw.bb33
  %55 = load i8*, i8** %k, align 8, !dbg !19245
  %arrayidx39 = getelementptr i8, i8* %55, i64 9, !dbg !19245
  %56 = load i8, i8* %arrayidx39, align 1, !dbg !19245
  %conv40 = zext i8 %56 to i32, !dbg !19246
  %shl41 = shl i32 %conv40, 8, !dbg !19247
  %57 = load i32, i32* %c, align 4, !dbg !19248
  %add42 = add i32 %57, %shl41, !dbg !19248
  store i32 %add42, i32* %c, align 4, !dbg !19248
  br label %sw.bb43, !dbg !19249

sw.bb43:                                          ; preds = %while.end, %sw.bb38
  %58 = load i8*, i8** %k, align 8, !dbg !19250
  %arrayidx44 = getelementptr i8, i8* %58, i64 8, !dbg !19250
  %59 = load i8, i8* %arrayidx44, align 1, !dbg !19250
  %conv45 = zext i8 %59 to i32, !dbg !19250
  %60 = load i32, i32* %c, align 4, !dbg !19251
  %add46 = add i32 %60, %conv45, !dbg !19251
  store i32 %add46, i32* %c, align 4, !dbg !19251
  br label %sw.bb47, !dbg !19252

sw.bb47:                                          ; preds = %while.end, %sw.bb43
  %61 = load i8*, i8** %k, align 8, !dbg !19253
  %arrayidx48 = getelementptr i8, i8* %61, i64 7, !dbg !19253
  %62 = load i8, i8* %arrayidx48, align 1, !dbg !19253
  %conv49 = zext i8 %62 to i32, !dbg !19254
  %shl50 = shl i32 %conv49, 24, !dbg !19255
  %63 = load i32, i32* %b, align 4, !dbg !19256
  %add51 = add i32 %63, %shl50, !dbg !19256
  store i32 %add51, i32* %b, align 4, !dbg !19256
  br label %sw.bb52, !dbg !19257

sw.bb52:                                          ; preds = %while.end, %sw.bb47
  %64 = load i8*, i8** %k, align 8, !dbg !19258
  %arrayidx53 = getelementptr i8, i8* %64, i64 6, !dbg !19258
  %65 = load i8, i8* %arrayidx53, align 1, !dbg !19258
  %conv54 = zext i8 %65 to i32, !dbg !19259
  %shl55 = shl i32 %conv54, 16, !dbg !19260
  %66 = load i32, i32* %b, align 4, !dbg !19261
  %add56 = add i32 %66, %shl55, !dbg !19261
  store i32 %add56, i32* %b, align 4, !dbg !19261
  br label %sw.bb57, !dbg !19262

sw.bb57:                                          ; preds = %while.end, %sw.bb52
  %67 = load i8*, i8** %k, align 8, !dbg !19263
  %arrayidx58 = getelementptr i8, i8* %67, i64 5, !dbg !19263
  %68 = load i8, i8* %arrayidx58, align 1, !dbg !19263
  %conv59 = zext i8 %68 to i32, !dbg !19264
  %shl60 = shl i32 %conv59, 8, !dbg !19265
  %69 = load i32, i32* %b, align 4, !dbg !19266
  %add61 = add i32 %69, %shl60, !dbg !19266
  store i32 %add61, i32* %b, align 4, !dbg !19266
  br label %sw.bb62, !dbg !19267

sw.bb62:                                          ; preds = %while.end, %sw.bb57
  %70 = load i8*, i8** %k, align 8, !dbg !19268
  %arrayidx63 = getelementptr i8, i8* %70, i64 4, !dbg !19268
  %71 = load i8, i8* %arrayidx63, align 1, !dbg !19268
  %conv64 = zext i8 %71 to i32, !dbg !19268
  %72 = load i32, i32* %b, align 4, !dbg !19269
  %add65 = add i32 %72, %conv64, !dbg !19269
  store i32 %add65, i32* %b, align 4, !dbg !19269
  br label %sw.bb66, !dbg !19270

sw.bb66:                                          ; preds = %while.end, %sw.bb62
  %73 = load i8*, i8** %k, align 8, !dbg !19271
  %arrayidx67 = getelementptr i8, i8* %73, i64 3, !dbg !19271
  %74 = load i8, i8* %arrayidx67, align 1, !dbg !19271
  %conv68 = zext i8 %74 to i32, !dbg !19272
  %shl69 = shl i32 %conv68, 24, !dbg !19273
  %75 = load i32, i32* %a, align 4, !dbg !19274
  %add70 = add i32 %75, %shl69, !dbg !19274
  store i32 %add70, i32* %a, align 4, !dbg !19274
  br label %sw.bb71, !dbg !19275

sw.bb71:                                          ; preds = %while.end, %sw.bb66
  %76 = load i8*, i8** %k, align 8, !dbg !19276
  %arrayidx72 = getelementptr i8, i8* %76, i64 2, !dbg !19276
  %77 = load i8, i8* %arrayidx72, align 1, !dbg !19276
  %conv73 = zext i8 %77 to i32, !dbg !19277
  %shl74 = shl i32 %conv73, 16, !dbg !19278
  %78 = load i32, i32* %a, align 4, !dbg !19279
  %add75 = add i32 %78, %shl74, !dbg !19279
  store i32 %add75, i32* %a, align 4, !dbg !19279
  br label %sw.bb76, !dbg !19280

sw.bb76:                                          ; preds = %while.end, %sw.bb71
  %79 = load i8*, i8** %k, align 8, !dbg !19281
  %arrayidx77 = getelementptr i8, i8* %79, i64 1, !dbg !19281
  %80 = load i8, i8* %arrayidx77, align 1, !dbg !19281
  %conv78 = zext i8 %80 to i32, !dbg !19282
  %shl79 = shl i32 %conv78, 8, !dbg !19283
  %81 = load i32, i32* %a, align 4, !dbg !19284
  %add80 = add i32 %81, %shl79, !dbg !19284
  store i32 %add80, i32* %a, align 4, !dbg !19284
  br label %sw.bb81, !dbg !19285

sw.bb81:                                          ; preds = %while.end, %sw.bb76
  %82 = load i8*, i8** %k, align 8, !dbg !19286
  %arrayidx82 = getelementptr i8, i8* %82, i64 0, !dbg !19286
  %83 = load i8, i8* %arrayidx82, align 1, !dbg !19286
  %conv83 = zext i8 %83 to i32, !dbg !19286
  %84 = load i32, i32* %a, align 4, !dbg !19287
  %add84 = add i32 %84, %conv83, !dbg !19287
  store i32 %add84, i32* %a, align 4, !dbg !19287
  %85 = load i32, i32* %b, align 4, !dbg !19288
  %86 = load i32, i32* %c, align 4, !dbg !19288
  %xor85 = xor i32 %86, %85, !dbg !19288
  store i32 %xor85, i32* %c, align 4, !dbg !19288
  %87 = load i32, i32* %b, align 4, !dbg !19288
  %call86 = call i32 @rol32(i32 %87, i32 14) #8, !dbg !19288
  %88 = load i32, i32* %c, align 4, !dbg !19288
  %sub87 = sub i32 %88, %call86, !dbg !19288
  store i32 %sub87, i32* %c, align 4, !dbg !19288
  %89 = load i32, i32* %c, align 4, !dbg !19288
  %90 = load i32, i32* %a, align 4, !dbg !19288
  %xor88 = xor i32 %90, %89, !dbg !19288
  store i32 %xor88, i32* %a, align 4, !dbg !19288
  %91 = load i32, i32* %c, align 4, !dbg !19288
  %call89 = call i32 @rol32(i32 %91, i32 11) #8, !dbg !19288
  %92 = load i32, i32* %a, align 4, !dbg !19288
  %sub90 = sub i32 %92, %call89, !dbg !19288
  store i32 %sub90, i32* %a, align 4, !dbg !19288
  %93 = load i32, i32* %a, align 4, !dbg !19288
  %94 = load i32, i32* %b, align 4, !dbg !19288
  %xor91 = xor i32 %94, %93, !dbg !19288
  store i32 %xor91, i32* %b, align 4, !dbg !19288
  %95 = load i32, i32* %a, align 4, !dbg !19288
  %call92 = call i32 @rol32(i32 %95, i32 25) #8, !dbg !19288
  %96 = load i32, i32* %b, align 4, !dbg !19288
  %sub93 = sub i32 %96, %call92, !dbg !19288
  store i32 %sub93, i32* %b, align 4, !dbg !19288
  %97 = load i32, i32* %b, align 4, !dbg !19288
  %98 = load i32, i32* %c, align 4, !dbg !19288
  %xor94 = xor i32 %98, %97, !dbg !19288
  store i32 %xor94, i32* %c, align 4, !dbg !19288
  %99 = load i32, i32* %b, align 4, !dbg !19288
  %call95 = call i32 @rol32(i32 %99, i32 16) #8, !dbg !19288
  %100 = load i32, i32* %c, align 4, !dbg !19288
  %sub96 = sub i32 %100, %call95, !dbg !19288
  store i32 %sub96, i32* %c, align 4, !dbg !19288
  %101 = load i32, i32* %c, align 4, !dbg !19288
  %102 = load i32, i32* %a, align 4, !dbg !19288
  %xor97 = xor i32 %102, %101, !dbg !19288
  store i32 %xor97, i32* %a, align 4, !dbg !19288
  %103 = load i32, i32* %c, align 4, !dbg !19288
  %call98 = call i32 @rol32(i32 %103, i32 4) #8, !dbg !19288
  %104 = load i32, i32* %a, align 4, !dbg !19288
  %sub99 = sub i32 %104, %call98, !dbg !19288
  store i32 %sub99, i32* %a, align 4, !dbg !19288
  %105 = load i32, i32* %a, align 4, !dbg !19288
  %106 = load i32, i32* %b, align 4, !dbg !19288
  %xor100 = xor i32 %106, %105, !dbg !19288
  store i32 %xor100, i32* %b, align 4, !dbg !19288
  %107 = load i32, i32* %a, align 4, !dbg !19288
  %call101 = call i32 @rol32(i32 %107, i32 14) #8, !dbg !19288
  %108 = load i32, i32* %b, align 4, !dbg !19288
  %sub102 = sub i32 %108, %call101, !dbg !19288
  store i32 %sub102, i32* %b, align 4, !dbg !19288
  %109 = load i32, i32* %b, align 4, !dbg !19288
  %110 = load i32, i32* %c, align 4, !dbg !19288
  %xor103 = xor i32 %110, %109, !dbg !19288
  store i32 %xor103, i32* %c, align 4, !dbg !19288
  %111 = load i32, i32* %b, align 4, !dbg !19288
  %call104 = call i32 @rol32(i32 %111, i32 24) #8, !dbg !19288
  %112 = load i32, i32* %c, align 4, !dbg !19288
  %sub105 = sub i32 %112, %call104, !dbg !19288
  store i32 %sub105, i32* %c, align 4, !dbg !19288
  br label %sw.epilog, !dbg !19290

sw.bb106:                                         ; preds = %while.end
  br label %sw.epilog, !dbg !19291

sw.epilog:                                        ; preds = %while.end, %sw.bb106, %sw.bb81
  %113 = load i32, i32* %c, align 4, !dbg !19292
  ret i32 %113, !dbg !19293
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__get_unaligned_cpu32(i8* %p) #0 !dbg !19294 {
entry:
  %p.addr = alloca i8*, align 8
  %ptr = alloca %struct.__una_u32*, align 8
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !19297, metadata !DIExpression()), !dbg !19298
  call void @llvm.dbg.declare(metadata %struct.__una_u32** %ptr, metadata !19299, metadata !DIExpression()), !dbg !19300
  %0 = load i8*, i8** %p.addr, align 8, !dbg !19301
  %1 = bitcast i8* %0 to %struct.__una_u32*, !dbg !19302
  store %struct.__una_u32* %1, %struct.__una_u32** %ptr, align 8, !dbg !19300
  %2 = load %struct.__una_u32*, %struct.__una_u32** %ptr, align 8, !dbg !19303
  %x = getelementptr inbounds %struct.__una_u32, %struct.__una_u32* %2, i32 0, i32 0, !dbg !19304
  %3 = load i32, i32* %x, align 1, !dbg !19304
  ret i32 %3, !dbg !19305
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @rol32(i32 %word, i32 %shift) #0 !dbg !19306 {
entry:
  %word.addr = alloca i32, align 4
  %shift.addr = alloca i32, align 4
  store i32 %word, i32* %word.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %word.addr, metadata !19310, metadata !DIExpression()), !dbg !19311
  store i32 %shift, i32* %shift.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %shift.addr, metadata !19312, metadata !DIExpression()), !dbg !19313
  %0 = load i32, i32* %word.addr, align 4, !dbg !19314
  %1 = load i32, i32* %shift.addr, align 4, !dbg !19315
  %and = and i32 %1, 31, !dbg !19316
  %shl = shl i32 %0, %and, !dbg !19317
  %2 = load i32, i32* %word.addr, align 4, !dbg !19318
  %3 = load i32, i32* %shift.addr, align 4, !dbg !19319
  %sub = sub i32 0, %3, !dbg !19320
  %and1 = and i32 %sub, 31, !dbg !19321
  %shr = lshr i32 %2, %and1, !dbg !19322
  %or = or i32 %shl, %shr, !dbg !19323
  ret i32 %or, !dbg !19324
}

; Function Attrs: noredzone
declare dso_local i32 @memcmp(i8*, i8*, i64) #5

; Function Attrs: noredzone
declare dso_local %struct.mlx5_flow_table* @mlx5_create_auto_grouped_flow_table(%struct.mlx5_flow_namespace*, %struct.mlx5_flow_table_attr*) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__hash_32_generic(i32 %val) #0 !dbg !19325 {
entry:
  %val.addr = alloca i32, align 4
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !19328, metadata !DIExpression()), !dbg !19329
  %0 = load i32, i32* %val.addr, align 4, !dbg !19330
  %mul = mul i32 %0, 1640531527, !dbg !19331
  ret i32 %mul, !dbg !19332
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @hash_del(%struct.hlist_node* %node) #0 !dbg !19333 {
entry:
  %node.addr = alloca %struct.hlist_node*, align 8
  store %struct.hlist_node* %node, %struct.hlist_node** %node.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hlist_node** %node.addr, metadata !19337, metadata !DIExpression()), !dbg !19338
  %0 = load %struct.hlist_node*, %struct.hlist_node** %node.addr, align 8, !dbg !19339
  call void @hlist_del_init(%struct.hlist_node* %0) #8, !dbg !19340
  ret void, !dbg !19341
}

; Function Attrs: noredzone
declare dso_local i32 @mlx5_destroy_flow_table(%struct.mlx5_flow_table*) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @hlist_del_init(%struct.hlist_node* %n) #0 !dbg !19342 {
entry:
  %n.addr = alloca %struct.hlist_node*, align 8
  store %struct.hlist_node* %n, %struct.hlist_node** %n.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hlist_node** %n.addr, metadata !19343, metadata !DIExpression()), !dbg !19344
  %0 = load %struct.hlist_node*, %struct.hlist_node** %n.addr, align 8, !dbg !19345
  %call = call i32 @hlist_unhashed(%struct.hlist_node* %0) #8, !dbg !19347
  %tobool = icmp ne i32 %call, 0, !dbg !19347
  br i1 %tobool, label %if.end, label %if.then, !dbg !19348

if.then:                                          ; preds = %entry
  %1 = load %struct.hlist_node*, %struct.hlist_node** %n.addr, align 8, !dbg !19349
  call void @__hlist_del(%struct.hlist_node* %1) #8, !dbg !19351
  %2 = load %struct.hlist_node*, %struct.hlist_node** %n.addr, align 8, !dbg !19352
  call void @INIT_HLIST_NODE(%struct.hlist_node* %2) #8, !dbg !19353
  br label %if.end, !dbg !19354

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !19355
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @hlist_unhashed(%struct.hlist_node* %h) #0 !dbg !19356 {
entry:
  %h.addr = alloca %struct.hlist_node*, align 8
  store %struct.hlist_node* %h, %struct.hlist_node** %h.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hlist_node** %h.addr, metadata !19361, metadata !DIExpression()), !dbg !19362
  %0 = load %struct.hlist_node*, %struct.hlist_node** %h.addr, align 8, !dbg !19363
  %pprev = getelementptr inbounds %struct.hlist_node, %struct.hlist_node* %0, i32 0, i32 1, !dbg !19364
  %1 = load %struct.hlist_node**, %struct.hlist_node*** %pprev, align 8, !dbg !19364
  %tobool = icmp ne %struct.hlist_node** %1, null, !dbg !19365
  %lnot = xor i1 %tobool, true, !dbg !19365
  %lnot.ext = zext i1 %lnot to i32, !dbg !19365
  ret i32 %lnot.ext, !dbg !19366
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__hlist_del(%struct.hlist_node* %n) #0 !dbg !19367 {
entry:
  %n.addr = alloca %struct.hlist_node*, align 8
  %next = alloca %struct.hlist_node*, align 8
  %pprev = alloca %struct.hlist_node**, align 8
  store %struct.hlist_node* %n, %struct.hlist_node** %n.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hlist_node** %n.addr, metadata !19368, metadata !DIExpression()), !dbg !19369
  call void @llvm.dbg.declare(metadata %struct.hlist_node** %next, metadata !19370, metadata !DIExpression()), !dbg !19371
  %0 = load %struct.hlist_node*, %struct.hlist_node** %n.addr, align 8, !dbg !19372
  %next1 = getelementptr inbounds %struct.hlist_node, %struct.hlist_node* %0, i32 0, i32 0, !dbg !19373
  %1 = load %struct.hlist_node*, %struct.hlist_node** %next1, align 8, !dbg !19373
  store %struct.hlist_node* %1, %struct.hlist_node** %next, align 8, !dbg !19371
  call void @llvm.dbg.declare(metadata %struct.hlist_node*** %pprev, metadata !19374, metadata !DIExpression()), !dbg !19375
  %2 = load %struct.hlist_node*, %struct.hlist_node** %n.addr, align 8, !dbg !19376
  %pprev2 = getelementptr inbounds %struct.hlist_node, %struct.hlist_node* %2, i32 0, i32 1, !dbg !19377
  %3 = load %struct.hlist_node**, %struct.hlist_node*** %pprev2, align 8, !dbg !19377
  store %struct.hlist_node** %3, %struct.hlist_node*** %pprev, align 8, !dbg !19375
  br label %do.body, !dbg !19378

do.body:                                          ; preds = %entry
  br label %do.body3, !dbg !19379

do.body3:                                         ; preds = %do.body
  br label %do.end, !dbg !19381

do.end:                                           ; preds = %do.body3
  br label %do.body4, !dbg !19379

do.body4:                                         ; preds = %do.end
  %4 = load %struct.hlist_node*, %struct.hlist_node** %next, align 8, !dbg !19383
  %5 = load %struct.hlist_node**, %struct.hlist_node*** %pprev, align 8, !dbg !19383
  store volatile %struct.hlist_node* %4, %struct.hlist_node** %5, align 8, !dbg !19383
  br label %do.end5, !dbg !19383

do.end5:                                          ; preds = %do.body4
  br label %do.end6, !dbg !19379

do.end6:                                          ; preds = %do.end5
  %6 = load %struct.hlist_node*, %struct.hlist_node** %next, align 8, !dbg !19385
  %tobool = icmp ne %struct.hlist_node* %6, null, !dbg !19385
  br i1 %tobool, label %if.then, label %if.end, !dbg !19387

if.then:                                          ; preds = %do.end6
  br label %do.body7, !dbg !19388

do.body7:                                         ; preds = %if.then
  br label %do.body8, !dbg !19389

do.body8:                                         ; preds = %do.body7
  br label %do.end9, !dbg !19391

do.end9:                                          ; preds = %do.body8
  br label %do.body10, !dbg !19389

do.body10:                                        ; preds = %do.end9
  %7 = load %struct.hlist_node**, %struct.hlist_node*** %pprev, align 8, !dbg !19393
  %8 = load %struct.hlist_node*, %struct.hlist_node** %next, align 8, !dbg !19393
  %pprev11 = getelementptr inbounds %struct.hlist_node, %struct.hlist_node* %8, i32 0, i32 1, !dbg !19393
  store volatile %struct.hlist_node** %7, %struct.hlist_node*** %pprev11, align 8, !dbg !19393
  br label %do.end12, !dbg !19393

do.end12:                                         ; preds = %do.body10
  br label %do.end13, !dbg !19389

do.end13:                                         ; preds = %do.end12
  br label %if.end, !dbg !19389

if.end:                                           ; preds = %do.end13, %do.end6
  ret void, !dbg !19395
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @INIT_HLIST_NODE(%struct.hlist_node* %h) #0 !dbg !19396 {
entry:
  %h.addr = alloca %struct.hlist_node*, align 8
  store %struct.hlist_node* %h, %struct.hlist_node** %h.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hlist_node** %h.addr, metadata !19397, metadata !DIExpression()), !dbg !19398
  %0 = load %struct.hlist_node*, %struct.hlist_node** %h.addr, align 8, !dbg !19399
  %next = getelementptr inbounds %struct.hlist_node, %struct.hlist_node* %0, i32 0, i32 0, !dbg !19400
  store %struct.hlist_node* null, %struct.hlist_node** %next, align 8, !dbg !19401
  %1 = load %struct.hlist_node*, %struct.hlist_node** %h.addr, align 8, !dbg !19402
  %pprev = getelementptr inbounds %struct.hlist_node, %struct.hlist_node* %1, i32 0, i32 1, !dbg !19403
  store %struct.hlist_node** null, %struct.hlist_node*** %pprev, align 8, !dbg !19404
  ret void, !dbg !19405
}

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @__arch_swab32(i32 %val) #4 !dbg !19406 {
entry:
  %val.addr = alloca i32, align 4
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !19408, metadata !DIExpression()), !dbg !19409
  %0 = load i32, i32* %val.addr, align 4, !dbg !19410
  %1 = call i32 asm "bswapl $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %0) #13, !dbg !19411, !srcloc !19412
  store i32 %1, i32* %val.addr, align 4, !dbg !19411
  %2 = load i32, i32* %val.addr, align 4, !dbg !19413
  ret i32 %2, !dbg !19414
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @kasan_check_write(i8* %p, i32 %size) #0 !dbg !19415 {
entry:
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !19419, metadata !DIExpression()), !dbg !19420
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !19421, metadata !DIExpression()), !dbg !19422
  ret i1 true, !dbg !19423
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @kcsan_check_access(i8* %ptr, i64 %size, i32 %type) #0 !dbg !19424 {
entry:
  %ptr.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %type.addr = alloca i32, align 4
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !19428, metadata !DIExpression()), !dbg !19429
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !19430, metadata !DIExpression()), !dbg !19431
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !19432, metadata !DIExpression()), !dbg !19433
  ret void, !dbg !19434
}

; Function Attrs: noredzone
declare dso_local void @mlx5_eswitch_termtbl_put(%struct.mlx5_eswitch*, %struct.mlx5_termtbl_handle*) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kvmalloc(i64 %size, i32 %flags) #0 !dbg !19435 {
entry:
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !19436, metadata !DIExpression()), !dbg !19437
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !19438, metadata !DIExpression()), !dbg !19439
  %0 = load i64, i64* %size.addr, align 8, !dbg !19440
  %1 = load i32, i32* %flags.addr, align 4, !dbg !19441
  %call = call i8* @kvmalloc_node(i64 %0, i32 %1, i32 -1) #8, !dbg !19442
  ret i8* %call, !dbg !19443
}

; Function Attrs: noredzone
declare dso_local i8* @kvmalloc_node(i64, i32, i32) #5

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i64(i64) #3

; Function Attrs: noredzone
declare dso_local noalias i8* @__kmalloc(i64, i32) #5

; Function Attrs: nounwind willreturn
declare void @llvm.assume(i1) #7

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @get_order(i64 %size) #4 !dbg !19444 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !19448, metadata !DIExpression()), !dbg !19453
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !19455, metadata !DIExpression()), !dbg !19456
  %retval = alloca i32, align 4
  %size.addr = alloca i64, align 8
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !19457, metadata !DIExpression()), !dbg !19458
  %0 = load i64, i64* %size.addr, align 8, !dbg !19459
  %1 = call i1 @llvm.is.constant.i64(i64 %0), !dbg !19461
  br i1 %1, label %if.then, label %if.end447, !dbg !19462

if.then:                                          ; preds = %entry
  %2 = load i64, i64* %size.addr, align 8, !dbg !19463
  %tobool = icmp ne i64 %2, 0, !dbg !19463
  br i1 %tobool, label %if.end, label %if.then1, !dbg !19466

if.then1:                                         ; preds = %if.then
  store i32 52, i32* %retval, align 4, !dbg !19467
  br label %return, !dbg !19467

if.end:                                           ; preds = %if.then
  %3 = load i64, i64* %size.addr, align 8, !dbg !19468
  %cmp = icmp ult i64 %3, 4096, !dbg !19470
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !19471

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !19472
  br label %return, !dbg !19472

if.end3:                                          ; preds = %if.end
  %4 = load i64, i64* %size.addr, align 8, !dbg !19473
  %sub = sub i64 %4, 1, !dbg !19473
  %5 = call i1 @llvm.is.constant.i64(i64 %sub), !dbg !19473
  br i1 %5, label %cond.true, label %cond.false442, !dbg !19473

cond.true:                                        ; preds = %if.end3
  %6 = load i64, i64* %size.addr, align 8, !dbg !19473
  %sub4 = sub i64 %6, 1, !dbg !19473
  %7 = call i1 @llvm.is.constant.i64(i64 %sub4), !dbg !19473
  br i1 %7, label %cond.true5, label %cond.false439, !dbg !19473

cond.true5:                                       ; preds = %cond.true
  %8 = load i64, i64* %size.addr, align 8, !dbg !19473
  %sub6 = sub i64 %8, 1, !dbg !19473
  %cmp7 = icmp ult i64 %sub6, 2, !dbg !19473
  br i1 %cmp7, label %cond.true8, label %cond.false, !dbg !19473

cond.true8:                                       ; preds = %cond.true5
  br label %cond.end437, !dbg !19473

cond.false:                                       ; preds = %cond.true5
  %9 = load i64, i64* %size.addr, align 8, !dbg !19473
  %sub9 = sub i64 %9, 1, !dbg !19473
  %and = and i64 %sub9, -9223372036854775808, !dbg !19473
  %tobool10 = icmp ne i64 %and, 0, !dbg !19473
  br i1 %tobool10, label %cond.true11, label %cond.false12, !dbg !19473

cond.true11:                                      ; preds = %cond.false
  br label %cond.end435, !dbg !19473

cond.false12:                                     ; preds = %cond.false
  %10 = load i64, i64* %size.addr, align 8, !dbg !19473
  %sub13 = sub i64 %10, 1, !dbg !19473
  %and14 = and i64 %sub13, 4611686018427387904, !dbg !19473
  %tobool15 = icmp ne i64 %and14, 0, !dbg !19473
  br i1 %tobool15, label %cond.true16, label %cond.false17, !dbg !19473

cond.true16:                                      ; preds = %cond.false12
  br label %cond.end433, !dbg !19473

cond.false17:                                     ; preds = %cond.false12
  %11 = load i64, i64* %size.addr, align 8, !dbg !19473
  %sub18 = sub i64 %11, 1, !dbg !19473
  %and19 = and i64 %sub18, 2305843009213693952, !dbg !19473
  %tobool20 = icmp ne i64 %and19, 0, !dbg !19473
  br i1 %tobool20, label %cond.true21, label %cond.false22, !dbg !19473

cond.true21:                                      ; preds = %cond.false17
  br label %cond.end431, !dbg !19473

cond.false22:                                     ; preds = %cond.false17
  %12 = load i64, i64* %size.addr, align 8, !dbg !19473
  %sub23 = sub i64 %12, 1, !dbg !19473
  %and24 = and i64 %sub23, 1152921504606846976, !dbg !19473
  %tobool25 = icmp ne i64 %and24, 0, !dbg !19473
  br i1 %tobool25, label %cond.true26, label %cond.false27, !dbg !19473

cond.true26:                                      ; preds = %cond.false22
  br label %cond.end429, !dbg !19473

cond.false27:                                     ; preds = %cond.false22
  %13 = load i64, i64* %size.addr, align 8, !dbg !19473
  %sub28 = sub i64 %13, 1, !dbg !19473
  %and29 = and i64 %sub28, 576460752303423488, !dbg !19473
  %tobool30 = icmp ne i64 %and29, 0, !dbg !19473
  br i1 %tobool30, label %cond.true31, label %cond.false32, !dbg !19473

cond.true31:                                      ; preds = %cond.false27
  br label %cond.end427, !dbg !19473

cond.false32:                                     ; preds = %cond.false27
  %14 = load i64, i64* %size.addr, align 8, !dbg !19473
  %sub33 = sub i64 %14, 1, !dbg !19473
  %and34 = and i64 %sub33, 288230376151711744, !dbg !19473
  %tobool35 = icmp ne i64 %and34, 0, !dbg !19473
  br i1 %tobool35, label %cond.true36, label %cond.false37, !dbg !19473

cond.true36:                                      ; preds = %cond.false32
  br label %cond.end425, !dbg !19473

cond.false37:                                     ; preds = %cond.false32
  %15 = load i64, i64* %size.addr, align 8, !dbg !19473
  %sub38 = sub i64 %15, 1, !dbg !19473
  %and39 = and i64 %sub38, 144115188075855872, !dbg !19473
  %tobool40 = icmp ne i64 %and39, 0, !dbg !19473
  br i1 %tobool40, label %cond.true41, label %cond.false42, !dbg !19473

cond.true41:                                      ; preds = %cond.false37
  br label %cond.end423, !dbg !19473

cond.false42:                                     ; preds = %cond.false37
  %16 = load i64, i64* %size.addr, align 8, !dbg !19473
  %sub43 = sub i64 %16, 1, !dbg !19473
  %and44 = and i64 %sub43, 72057594037927936, !dbg !19473
  %tobool45 = icmp ne i64 %and44, 0, !dbg !19473
  br i1 %tobool45, label %cond.true46, label %cond.false47, !dbg !19473

cond.true46:                                      ; preds = %cond.false42
  br label %cond.end421, !dbg !19473

cond.false47:                                     ; preds = %cond.false42
  %17 = load i64, i64* %size.addr, align 8, !dbg !19473
  %sub48 = sub i64 %17, 1, !dbg !19473
  %and49 = and i64 %sub48, 36028797018963968, !dbg !19473
  %tobool50 = icmp ne i64 %and49, 0, !dbg !19473
  br i1 %tobool50, label %cond.true51, label %cond.false52, !dbg !19473

cond.true51:                                      ; preds = %cond.false47
  br label %cond.end419, !dbg !19473

cond.false52:                                     ; preds = %cond.false47
  %18 = load i64, i64* %size.addr, align 8, !dbg !19473
  %sub53 = sub i64 %18, 1, !dbg !19473
  %and54 = and i64 %sub53, 18014398509481984, !dbg !19473
  %tobool55 = icmp ne i64 %and54, 0, !dbg !19473
  br i1 %tobool55, label %cond.true56, label %cond.false57, !dbg !19473

cond.true56:                                      ; preds = %cond.false52
  br label %cond.end417, !dbg !19473

cond.false57:                                     ; preds = %cond.false52
  %19 = load i64, i64* %size.addr, align 8, !dbg !19473
  %sub58 = sub i64 %19, 1, !dbg !19473
  %and59 = and i64 %sub58, 9007199254740992, !dbg !19473
  %tobool60 = icmp ne i64 %and59, 0, !dbg !19473
  br i1 %tobool60, label %cond.true61, label %cond.false62, !dbg !19473

cond.true61:                                      ; preds = %cond.false57
  br label %cond.end415, !dbg !19473

cond.false62:                                     ; preds = %cond.false57
  %20 = load i64, i64* %size.addr, align 8, !dbg !19473
  %sub63 = sub i64 %20, 1, !dbg !19473
  %and64 = and i64 %sub63, 4503599627370496, !dbg !19473
  %tobool65 = icmp ne i64 %and64, 0, !dbg !19473
  br i1 %tobool65, label %cond.true66, label %cond.false67, !dbg !19473

cond.true66:                                      ; preds = %cond.false62
  br label %cond.end413, !dbg !19473

cond.false67:                                     ; preds = %cond.false62
  %21 = load i64, i64* %size.addr, align 8, !dbg !19473
  %sub68 = sub i64 %21, 1, !dbg !19473
  %and69 = and i64 %sub68, 2251799813685248, !dbg !19473
  %tobool70 = icmp ne i64 %and69, 0, !dbg !19473
  br i1 %tobool70, label %cond.true71, label %cond.false72, !dbg !19473

cond.true71:                                      ; preds = %cond.false67
  br label %cond.end411, !dbg !19473

cond.false72:                                     ; preds = %cond.false67
  %22 = load i64, i64* %size.addr, align 8, !dbg !19473
  %sub73 = sub i64 %22, 1, !dbg !19473
  %and74 = and i64 %sub73, 1125899906842624, !dbg !19473
  %tobool75 = icmp ne i64 %and74, 0, !dbg !19473
  br i1 %tobool75, label %cond.true76, label %cond.false77, !dbg !19473

cond.true76:                                      ; preds = %cond.false72
  br label %cond.end409, !dbg !19473

cond.false77:                                     ; preds = %cond.false72
  %23 = load i64, i64* %size.addr, align 8, !dbg !19473
  %sub78 = sub i64 %23, 1, !dbg !19473
  %and79 = and i64 %sub78, 562949953421312, !dbg !19473
  %tobool80 = icmp ne i64 %and79, 0, !dbg !19473
  br i1 %tobool80, label %cond.true81, label %cond.false82, !dbg !19473

cond.true81:                                      ; preds = %cond.false77
  br label %cond.end407, !dbg !19473

cond.false82:                                     ; preds = %cond.false77
  %24 = load i64, i64* %size.addr, align 8, !dbg !19473
  %sub83 = sub i64 %24, 1, !dbg !19473
  %and84 = and i64 %sub83, 281474976710656, !dbg !19473
  %tobool85 = icmp ne i64 %and84, 0, !dbg !19473
  br i1 %tobool85, label %cond.true86, label %cond.false87, !dbg !19473

cond.true86:                                      ; preds = %cond.false82
  br label %cond.end405, !dbg !19473

cond.false87:                                     ; preds = %cond.false82
  %25 = load i64, i64* %size.addr, align 8, !dbg !19473
  %sub88 = sub i64 %25, 1, !dbg !19473
  %and89 = and i64 %sub88, 140737488355328, !dbg !19473
  %tobool90 = icmp ne i64 %and89, 0, !dbg !19473
  br i1 %tobool90, label %cond.true91, label %cond.false92, !dbg !19473

cond.true91:                                      ; preds = %cond.false87
  br label %cond.end403, !dbg !19473

cond.false92:                                     ; preds = %cond.false87
  %26 = load i64, i64* %size.addr, align 8, !dbg !19473
  %sub93 = sub i64 %26, 1, !dbg !19473
  %and94 = and i64 %sub93, 70368744177664, !dbg !19473
  %tobool95 = icmp ne i64 %and94, 0, !dbg !19473
  br i1 %tobool95, label %cond.true96, label %cond.false97, !dbg !19473

cond.true96:                                      ; preds = %cond.false92
  br label %cond.end401, !dbg !19473

cond.false97:                                     ; preds = %cond.false92
  %27 = load i64, i64* %size.addr, align 8, !dbg !19473
  %sub98 = sub i64 %27, 1, !dbg !19473
  %and99 = and i64 %sub98, 35184372088832, !dbg !19473
  %tobool100 = icmp ne i64 %and99, 0, !dbg !19473
  br i1 %tobool100, label %cond.true101, label %cond.false102, !dbg !19473

cond.true101:                                     ; preds = %cond.false97
  br label %cond.end399, !dbg !19473

cond.false102:                                    ; preds = %cond.false97
  %28 = load i64, i64* %size.addr, align 8, !dbg !19473
  %sub103 = sub i64 %28, 1, !dbg !19473
  %and104 = and i64 %sub103, 17592186044416, !dbg !19473
  %tobool105 = icmp ne i64 %and104, 0, !dbg !19473
  br i1 %tobool105, label %cond.true106, label %cond.false107, !dbg !19473

cond.true106:                                     ; preds = %cond.false102
  br label %cond.end397, !dbg !19473

cond.false107:                                    ; preds = %cond.false102
  %29 = load i64, i64* %size.addr, align 8, !dbg !19473
  %sub108 = sub i64 %29, 1, !dbg !19473
  %and109 = and i64 %sub108, 8796093022208, !dbg !19473
  %tobool110 = icmp ne i64 %and109, 0, !dbg !19473
  br i1 %tobool110, label %cond.true111, label %cond.false112, !dbg !19473

cond.true111:                                     ; preds = %cond.false107
  br label %cond.end395, !dbg !19473

cond.false112:                                    ; preds = %cond.false107
  %30 = load i64, i64* %size.addr, align 8, !dbg !19473
  %sub113 = sub i64 %30, 1, !dbg !19473
  %and114 = and i64 %sub113, 4398046511104, !dbg !19473
  %tobool115 = icmp ne i64 %and114, 0, !dbg !19473
  br i1 %tobool115, label %cond.true116, label %cond.false117, !dbg !19473

cond.true116:                                     ; preds = %cond.false112
  br label %cond.end393, !dbg !19473

cond.false117:                                    ; preds = %cond.false112
  %31 = load i64, i64* %size.addr, align 8, !dbg !19473
  %sub118 = sub i64 %31, 1, !dbg !19473
  %and119 = and i64 %sub118, 2199023255552, !dbg !19473
  %tobool120 = icmp ne i64 %and119, 0, !dbg !19473
  br i1 %tobool120, label %cond.true121, label %cond.false122, !dbg !19473

cond.true121:                                     ; preds = %cond.false117
  br label %cond.end391, !dbg !19473

cond.false122:                                    ; preds = %cond.false117
  %32 = load i64, i64* %size.addr, align 8, !dbg !19473
  %sub123 = sub i64 %32, 1, !dbg !19473
  %and124 = and i64 %sub123, 1099511627776, !dbg !19473
  %tobool125 = icmp ne i64 %and124, 0, !dbg !19473
  br i1 %tobool125, label %cond.true126, label %cond.false127, !dbg !19473

cond.true126:                                     ; preds = %cond.false122
  br label %cond.end389, !dbg !19473

cond.false127:                                    ; preds = %cond.false122
  %33 = load i64, i64* %size.addr, align 8, !dbg !19473
  %sub128 = sub i64 %33, 1, !dbg !19473
  %and129 = and i64 %sub128, 549755813888, !dbg !19473
  %tobool130 = icmp ne i64 %and129, 0, !dbg !19473
  br i1 %tobool130, label %cond.true131, label %cond.false132, !dbg !19473

cond.true131:                                     ; preds = %cond.false127
  br label %cond.end387, !dbg !19473

cond.false132:                                    ; preds = %cond.false127
  %34 = load i64, i64* %size.addr, align 8, !dbg !19473
  %sub133 = sub i64 %34, 1, !dbg !19473
  %and134 = and i64 %sub133, 274877906944, !dbg !19473
  %tobool135 = icmp ne i64 %and134, 0, !dbg !19473
  br i1 %tobool135, label %cond.true136, label %cond.false137, !dbg !19473

cond.true136:                                     ; preds = %cond.false132
  br label %cond.end385, !dbg !19473

cond.false137:                                    ; preds = %cond.false132
  %35 = load i64, i64* %size.addr, align 8, !dbg !19473
  %sub138 = sub i64 %35, 1, !dbg !19473
  %and139 = and i64 %sub138, 137438953472, !dbg !19473
  %tobool140 = icmp ne i64 %and139, 0, !dbg !19473
  br i1 %tobool140, label %cond.true141, label %cond.false142, !dbg !19473

cond.true141:                                     ; preds = %cond.false137
  br label %cond.end383, !dbg !19473

cond.false142:                                    ; preds = %cond.false137
  %36 = load i64, i64* %size.addr, align 8, !dbg !19473
  %sub143 = sub i64 %36, 1, !dbg !19473
  %and144 = and i64 %sub143, 68719476736, !dbg !19473
  %tobool145 = icmp ne i64 %and144, 0, !dbg !19473
  br i1 %tobool145, label %cond.true146, label %cond.false147, !dbg !19473

cond.true146:                                     ; preds = %cond.false142
  br label %cond.end381, !dbg !19473

cond.false147:                                    ; preds = %cond.false142
  %37 = load i64, i64* %size.addr, align 8, !dbg !19473
  %sub148 = sub i64 %37, 1, !dbg !19473
  %and149 = and i64 %sub148, 34359738368, !dbg !19473
  %tobool150 = icmp ne i64 %and149, 0, !dbg !19473
  br i1 %tobool150, label %cond.true151, label %cond.false152, !dbg !19473

cond.true151:                                     ; preds = %cond.false147
  br label %cond.end379, !dbg !19473

cond.false152:                                    ; preds = %cond.false147
  %38 = load i64, i64* %size.addr, align 8, !dbg !19473
  %sub153 = sub i64 %38, 1, !dbg !19473
  %and154 = and i64 %sub153, 17179869184, !dbg !19473
  %tobool155 = icmp ne i64 %and154, 0, !dbg !19473
  br i1 %tobool155, label %cond.true156, label %cond.false157, !dbg !19473

cond.true156:                                     ; preds = %cond.false152
  br label %cond.end377, !dbg !19473

cond.false157:                                    ; preds = %cond.false152
  %39 = load i64, i64* %size.addr, align 8, !dbg !19473
  %sub158 = sub i64 %39, 1, !dbg !19473
  %and159 = and i64 %sub158, 8589934592, !dbg !19473
  %tobool160 = icmp ne i64 %and159, 0, !dbg !19473
  br i1 %tobool160, label %cond.true161, label %cond.false162, !dbg !19473

cond.true161:                                     ; preds = %cond.false157
  br label %cond.end375, !dbg !19473

cond.false162:                                    ; preds = %cond.false157
  %40 = load i64, i64* %size.addr, align 8, !dbg !19473
  %sub163 = sub i64 %40, 1, !dbg !19473
  %and164 = and i64 %sub163, 4294967296, !dbg !19473
  %tobool165 = icmp ne i64 %and164, 0, !dbg !19473
  br i1 %tobool165, label %cond.true166, label %cond.false167, !dbg !19473

cond.true166:                                     ; preds = %cond.false162
  br label %cond.end373, !dbg !19473

cond.false167:                                    ; preds = %cond.false162
  %41 = load i64, i64* %size.addr, align 8, !dbg !19473
  %sub168 = sub i64 %41, 1, !dbg !19473
  %and169 = and i64 %sub168, 2147483648, !dbg !19473
  %tobool170 = icmp ne i64 %and169, 0, !dbg !19473
  br i1 %tobool170, label %cond.true171, label %cond.false172, !dbg !19473

cond.true171:                                     ; preds = %cond.false167
  br label %cond.end371, !dbg !19473

cond.false172:                                    ; preds = %cond.false167
  %42 = load i64, i64* %size.addr, align 8, !dbg !19473
  %sub173 = sub i64 %42, 1, !dbg !19473
  %and174 = and i64 %sub173, 1073741824, !dbg !19473
  %tobool175 = icmp ne i64 %and174, 0, !dbg !19473
  br i1 %tobool175, label %cond.true176, label %cond.false177, !dbg !19473

cond.true176:                                     ; preds = %cond.false172
  br label %cond.end369, !dbg !19473

cond.false177:                                    ; preds = %cond.false172
  %43 = load i64, i64* %size.addr, align 8, !dbg !19473
  %sub178 = sub i64 %43, 1, !dbg !19473
  %and179 = and i64 %sub178, 536870912, !dbg !19473
  %tobool180 = icmp ne i64 %and179, 0, !dbg !19473
  br i1 %tobool180, label %cond.true181, label %cond.false182, !dbg !19473

cond.true181:                                     ; preds = %cond.false177
  br label %cond.end367, !dbg !19473

cond.false182:                                    ; preds = %cond.false177
  %44 = load i64, i64* %size.addr, align 8, !dbg !19473
  %sub183 = sub i64 %44, 1, !dbg !19473
  %and184 = and i64 %sub183, 268435456, !dbg !19473
  %tobool185 = icmp ne i64 %and184, 0, !dbg !19473
  br i1 %tobool185, label %cond.true186, label %cond.false187, !dbg !19473

cond.true186:                                     ; preds = %cond.false182
  br label %cond.end365, !dbg !19473

cond.false187:                                    ; preds = %cond.false182
  %45 = load i64, i64* %size.addr, align 8, !dbg !19473
  %sub188 = sub i64 %45, 1, !dbg !19473
  %and189 = and i64 %sub188, 134217728, !dbg !19473
  %tobool190 = icmp ne i64 %and189, 0, !dbg !19473
  br i1 %tobool190, label %cond.true191, label %cond.false192, !dbg !19473

cond.true191:                                     ; preds = %cond.false187
  br label %cond.end363, !dbg !19473

cond.false192:                                    ; preds = %cond.false187
  %46 = load i64, i64* %size.addr, align 8, !dbg !19473
  %sub193 = sub i64 %46, 1, !dbg !19473
  %and194 = and i64 %sub193, 67108864, !dbg !19473
  %tobool195 = icmp ne i64 %and194, 0, !dbg !19473
  br i1 %tobool195, label %cond.true196, label %cond.false197, !dbg !19473

cond.true196:                                     ; preds = %cond.false192
  br label %cond.end361, !dbg !19473

cond.false197:                                    ; preds = %cond.false192
  %47 = load i64, i64* %size.addr, align 8, !dbg !19473
  %sub198 = sub i64 %47, 1, !dbg !19473
  %and199 = and i64 %sub198, 33554432, !dbg !19473
  %tobool200 = icmp ne i64 %and199, 0, !dbg !19473
  br i1 %tobool200, label %cond.true201, label %cond.false202, !dbg !19473

cond.true201:                                     ; preds = %cond.false197
  br label %cond.end359, !dbg !19473

cond.false202:                                    ; preds = %cond.false197
  %48 = load i64, i64* %size.addr, align 8, !dbg !19473
  %sub203 = sub i64 %48, 1, !dbg !19473
  %and204 = and i64 %sub203, 16777216, !dbg !19473
  %tobool205 = icmp ne i64 %and204, 0, !dbg !19473
  br i1 %tobool205, label %cond.true206, label %cond.false207, !dbg !19473

cond.true206:                                     ; preds = %cond.false202
  br label %cond.end357, !dbg !19473

cond.false207:                                    ; preds = %cond.false202
  %49 = load i64, i64* %size.addr, align 8, !dbg !19473
  %sub208 = sub i64 %49, 1, !dbg !19473
  %and209 = and i64 %sub208, 8388608, !dbg !19473
  %tobool210 = icmp ne i64 %and209, 0, !dbg !19473
  br i1 %tobool210, label %cond.true211, label %cond.false212, !dbg !19473

cond.true211:                                     ; preds = %cond.false207
  br label %cond.end355, !dbg !19473

cond.false212:                                    ; preds = %cond.false207
  %50 = load i64, i64* %size.addr, align 8, !dbg !19473
  %sub213 = sub i64 %50, 1, !dbg !19473
  %and214 = and i64 %sub213, 4194304, !dbg !19473
  %tobool215 = icmp ne i64 %and214, 0, !dbg !19473
  br i1 %tobool215, label %cond.true216, label %cond.false217, !dbg !19473

cond.true216:                                     ; preds = %cond.false212
  br label %cond.end353, !dbg !19473

cond.false217:                                    ; preds = %cond.false212
  %51 = load i64, i64* %size.addr, align 8, !dbg !19473
  %sub218 = sub i64 %51, 1, !dbg !19473
  %and219 = and i64 %sub218, 2097152, !dbg !19473
  %tobool220 = icmp ne i64 %and219, 0, !dbg !19473
  br i1 %tobool220, label %cond.true221, label %cond.false222, !dbg !19473

cond.true221:                                     ; preds = %cond.false217
  br label %cond.end351, !dbg !19473

cond.false222:                                    ; preds = %cond.false217
  %52 = load i64, i64* %size.addr, align 8, !dbg !19473
  %sub223 = sub i64 %52, 1, !dbg !19473
  %and224 = and i64 %sub223, 1048576, !dbg !19473
  %tobool225 = icmp ne i64 %and224, 0, !dbg !19473
  br i1 %tobool225, label %cond.true226, label %cond.false227, !dbg !19473

cond.true226:                                     ; preds = %cond.false222
  br label %cond.end349, !dbg !19473

cond.false227:                                    ; preds = %cond.false222
  %53 = load i64, i64* %size.addr, align 8, !dbg !19473
  %sub228 = sub i64 %53, 1, !dbg !19473
  %and229 = and i64 %sub228, 524288, !dbg !19473
  %tobool230 = icmp ne i64 %and229, 0, !dbg !19473
  br i1 %tobool230, label %cond.true231, label %cond.false232, !dbg !19473

cond.true231:                                     ; preds = %cond.false227
  br label %cond.end347, !dbg !19473

cond.false232:                                    ; preds = %cond.false227
  %54 = load i64, i64* %size.addr, align 8, !dbg !19473
  %sub233 = sub i64 %54, 1, !dbg !19473
  %and234 = and i64 %sub233, 262144, !dbg !19473
  %tobool235 = icmp ne i64 %and234, 0, !dbg !19473
  br i1 %tobool235, label %cond.true236, label %cond.false237, !dbg !19473

cond.true236:                                     ; preds = %cond.false232
  br label %cond.end345, !dbg !19473

cond.false237:                                    ; preds = %cond.false232
  %55 = load i64, i64* %size.addr, align 8, !dbg !19473
  %sub238 = sub i64 %55, 1, !dbg !19473
  %and239 = and i64 %sub238, 131072, !dbg !19473
  %tobool240 = icmp ne i64 %and239, 0, !dbg !19473
  br i1 %tobool240, label %cond.true241, label %cond.false242, !dbg !19473

cond.true241:                                     ; preds = %cond.false237
  br label %cond.end343, !dbg !19473

cond.false242:                                    ; preds = %cond.false237
  %56 = load i64, i64* %size.addr, align 8, !dbg !19473
  %sub243 = sub i64 %56, 1, !dbg !19473
  %and244 = and i64 %sub243, 65536, !dbg !19473
  %tobool245 = icmp ne i64 %and244, 0, !dbg !19473
  br i1 %tobool245, label %cond.true246, label %cond.false247, !dbg !19473

cond.true246:                                     ; preds = %cond.false242
  br label %cond.end341, !dbg !19473

cond.false247:                                    ; preds = %cond.false242
  %57 = load i64, i64* %size.addr, align 8, !dbg !19473
  %sub248 = sub i64 %57, 1, !dbg !19473
  %and249 = and i64 %sub248, 32768, !dbg !19473
  %tobool250 = icmp ne i64 %and249, 0, !dbg !19473
  br i1 %tobool250, label %cond.true251, label %cond.false252, !dbg !19473

cond.true251:                                     ; preds = %cond.false247
  br label %cond.end339, !dbg !19473

cond.false252:                                    ; preds = %cond.false247
  %58 = load i64, i64* %size.addr, align 8, !dbg !19473
  %sub253 = sub i64 %58, 1, !dbg !19473
  %and254 = and i64 %sub253, 16384, !dbg !19473
  %tobool255 = icmp ne i64 %and254, 0, !dbg !19473
  br i1 %tobool255, label %cond.true256, label %cond.false257, !dbg !19473

cond.true256:                                     ; preds = %cond.false252
  br label %cond.end337, !dbg !19473

cond.false257:                                    ; preds = %cond.false252
  %59 = load i64, i64* %size.addr, align 8, !dbg !19473
  %sub258 = sub i64 %59, 1, !dbg !19473
  %and259 = and i64 %sub258, 8192, !dbg !19473
  %tobool260 = icmp ne i64 %and259, 0, !dbg !19473
  br i1 %tobool260, label %cond.true261, label %cond.false262, !dbg !19473

cond.true261:                                     ; preds = %cond.false257
  br label %cond.end335, !dbg !19473

cond.false262:                                    ; preds = %cond.false257
  %60 = load i64, i64* %size.addr, align 8, !dbg !19473
  %sub263 = sub i64 %60, 1, !dbg !19473
  %and264 = and i64 %sub263, 4096, !dbg !19473
  %tobool265 = icmp ne i64 %and264, 0, !dbg !19473
  br i1 %tobool265, label %cond.true266, label %cond.false267, !dbg !19473

cond.true266:                                     ; preds = %cond.false262
  br label %cond.end333, !dbg !19473

cond.false267:                                    ; preds = %cond.false262
  %61 = load i64, i64* %size.addr, align 8, !dbg !19473
  %sub268 = sub i64 %61, 1, !dbg !19473
  %and269 = and i64 %sub268, 2048, !dbg !19473
  %tobool270 = icmp ne i64 %and269, 0, !dbg !19473
  br i1 %tobool270, label %cond.true271, label %cond.false272, !dbg !19473

cond.true271:                                     ; preds = %cond.false267
  br label %cond.end331, !dbg !19473

cond.false272:                                    ; preds = %cond.false267
  %62 = load i64, i64* %size.addr, align 8, !dbg !19473
  %sub273 = sub i64 %62, 1, !dbg !19473
  %and274 = and i64 %sub273, 1024, !dbg !19473
  %tobool275 = icmp ne i64 %and274, 0, !dbg !19473
  br i1 %tobool275, label %cond.true276, label %cond.false277, !dbg !19473

cond.true276:                                     ; preds = %cond.false272
  br label %cond.end329, !dbg !19473

cond.false277:                                    ; preds = %cond.false272
  %63 = load i64, i64* %size.addr, align 8, !dbg !19473
  %sub278 = sub i64 %63, 1, !dbg !19473
  %and279 = and i64 %sub278, 512, !dbg !19473
  %tobool280 = icmp ne i64 %and279, 0, !dbg !19473
  br i1 %tobool280, label %cond.true281, label %cond.false282, !dbg !19473

cond.true281:                                     ; preds = %cond.false277
  br label %cond.end327, !dbg !19473

cond.false282:                                    ; preds = %cond.false277
  %64 = load i64, i64* %size.addr, align 8, !dbg !19473
  %sub283 = sub i64 %64, 1, !dbg !19473
  %and284 = and i64 %sub283, 256, !dbg !19473
  %tobool285 = icmp ne i64 %and284, 0, !dbg !19473
  br i1 %tobool285, label %cond.true286, label %cond.false287, !dbg !19473

cond.true286:                                     ; preds = %cond.false282
  br label %cond.end325, !dbg !19473

cond.false287:                                    ; preds = %cond.false282
  %65 = load i64, i64* %size.addr, align 8, !dbg !19473
  %sub288 = sub i64 %65, 1, !dbg !19473
  %and289 = and i64 %sub288, 128, !dbg !19473
  %tobool290 = icmp ne i64 %and289, 0, !dbg !19473
  br i1 %tobool290, label %cond.true291, label %cond.false292, !dbg !19473

cond.true291:                                     ; preds = %cond.false287
  br label %cond.end323, !dbg !19473

cond.false292:                                    ; preds = %cond.false287
  %66 = load i64, i64* %size.addr, align 8, !dbg !19473
  %sub293 = sub i64 %66, 1, !dbg !19473
  %and294 = and i64 %sub293, 64, !dbg !19473
  %tobool295 = icmp ne i64 %and294, 0, !dbg !19473
  br i1 %tobool295, label %cond.true296, label %cond.false297, !dbg !19473

cond.true296:                                     ; preds = %cond.false292
  br label %cond.end321, !dbg !19473

cond.false297:                                    ; preds = %cond.false292
  %67 = load i64, i64* %size.addr, align 8, !dbg !19473
  %sub298 = sub i64 %67, 1, !dbg !19473
  %and299 = and i64 %sub298, 32, !dbg !19473
  %tobool300 = icmp ne i64 %and299, 0, !dbg !19473
  br i1 %tobool300, label %cond.true301, label %cond.false302, !dbg !19473

cond.true301:                                     ; preds = %cond.false297
  br label %cond.end319, !dbg !19473

cond.false302:                                    ; preds = %cond.false297
  %68 = load i64, i64* %size.addr, align 8, !dbg !19473
  %sub303 = sub i64 %68, 1, !dbg !19473
  %and304 = and i64 %sub303, 16, !dbg !19473
  %tobool305 = icmp ne i64 %and304, 0, !dbg !19473
  br i1 %tobool305, label %cond.true306, label %cond.false307, !dbg !19473

cond.true306:                                     ; preds = %cond.false302
  br label %cond.end317, !dbg !19473

cond.false307:                                    ; preds = %cond.false302
  %69 = load i64, i64* %size.addr, align 8, !dbg !19473
  %sub308 = sub i64 %69, 1, !dbg !19473
  %and309 = and i64 %sub308, 8, !dbg !19473
  %tobool310 = icmp ne i64 %and309, 0, !dbg !19473
  br i1 %tobool310, label %cond.true311, label %cond.false312, !dbg !19473

cond.true311:                                     ; preds = %cond.false307
  br label %cond.end, !dbg !19473

cond.false312:                                    ; preds = %cond.false307
  %70 = load i64, i64* %size.addr, align 8, !dbg !19473
  %sub313 = sub i64 %70, 1, !dbg !19473
  %and314 = and i64 %sub313, 4, !dbg !19473
  %tobool315 = icmp ne i64 %and314, 0, !dbg !19473
  %71 = zext i1 %tobool315 to i64, !dbg !19473
  %cond = select i1 %tobool315, i32 2, i32 1, !dbg !19473
  br label %cond.end, !dbg !19473

cond.end:                                         ; preds = %cond.false312, %cond.true311
  %cond316 = phi i32 [ 3, %cond.true311 ], [ %cond, %cond.false312 ], !dbg !19473
  br label %cond.end317, !dbg !19473

cond.end317:                                      ; preds = %cond.end, %cond.true306
  %cond318 = phi i32 [ 4, %cond.true306 ], [ %cond316, %cond.end ], !dbg !19473
  br label %cond.end319, !dbg !19473

cond.end319:                                      ; preds = %cond.end317, %cond.true301
  %cond320 = phi i32 [ 5, %cond.true301 ], [ %cond318, %cond.end317 ], !dbg !19473
  br label %cond.end321, !dbg !19473

cond.end321:                                      ; preds = %cond.end319, %cond.true296
  %cond322 = phi i32 [ 6, %cond.true296 ], [ %cond320, %cond.end319 ], !dbg !19473
  br label %cond.end323, !dbg !19473

cond.end323:                                      ; preds = %cond.end321, %cond.true291
  %cond324 = phi i32 [ 7, %cond.true291 ], [ %cond322, %cond.end321 ], !dbg !19473
  br label %cond.end325, !dbg !19473

cond.end325:                                      ; preds = %cond.end323, %cond.true286
  %cond326 = phi i32 [ 8, %cond.true286 ], [ %cond324, %cond.end323 ], !dbg !19473
  br label %cond.end327, !dbg !19473

cond.end327:                                      ; preds = %cond.end325, %cond.true281
  %cond328 = phi i32 [ 9, %cond.true281 ], [ %cond326, %cond.end325 ], !dbg !19473
  br label %cond.end329, !dbg !19473

cond.end329:                                      ; preds = %cond.end327, %cond.true276
  %cond330 = phi i32 [ 10, %cond.true276 ], [ %cond328, %cond.end327 ], !dbg !19473
  br label %cond.end331, !dbg !19473

cond.end331:                                      ; preds = %cond.end329, %cond.true271
  %cond332 = phi i32 [ 11, %cond.true271 ], [ %cond330, %cond.end329 ], !dbg !19473
  br label %cond.end333, !dbg !19473

cond.end333:                                      ; preds = %cond.end331, %cond.true266
  %cond334 = phi i32 [ 12, %cond.true266 ], [ %cond332, %cond.end331 ], !dbg !19473
  br label %cond.end335, !dbg !19473

cond.end335:                                      ; preds = %cond.end333, %cond.true261
  %cond336 = phi i32 [ 13, %cond.true261 ], [ %cond334, %cond.end333 ], !dbg !19473
  br label %cond.end337, !dbg !19473

cond.end337:                                      ; preds = %cond.end335, %cond.true256
  %cond338 = phi i32 [ 14, %cond.true256 ], [ %cond336, %cond.end335 ], !dbg !19473
  br label %cond.end339, !dbg !19473

cond.end339:                                      ; preds = %cond.end337, %cond.true251
  %cond340 = phi i32 [ 15, %cond.true251 ], [ %cond338, %cond.end337 ], !dbg !19473
  br label %cond.end341, !dbg !19473

cond.end341:                                      ; preds = %cond.end339, %cond.true246
  %cond342 = phi i32 [ 16, %cond.true246 ], [ %cond340, %cond.end339 ], !dbg !19473
  br label %cond.end343, !dbg !19473

cond.end343:                                      ; preds = %cond.end341, %cond.true241
  %cond344 = phi i32 [ 17, %cond.true241 ], [ %cond342, %cond.end341 ], !dbg !19473
  br label %cond.end345, !dbg !19473

cond.end345:                                      ; preds = %cond.end343, %cond.true236
  %cond346 = phi i32 [ 18, %cond.true236 ], [ %cond344, %cond.end343 ], !dbg !19473
  br label %cond.end347, !dbg !19473

cond.end347:                                      ; preds = %cond.end345, %cond.true231
  %cond348 = phi i32 [ 19, %cond.true231 ], [ %cond346, %cond.end345 ], !dbg !19473
  br label %cond.end349, !dbg !19473

cond.end349:                                      ; preds = %cond.end347, %cond.true226
  %cond350 = phi i32 [ 20, %cond.true226 ], [ %cond348, %cond.end347 ], !dbg !19473
  br label %cond.end351, !dbg !19473

cond.end351:                                      ; preds = %cond.end349, %cond.true221
  %cond352 = phi i32 [ 21, %cond.true221 ], [ %cond350, %cond.end349 ], !dbg !19473
  br label %cond.end353, !dbg !19473

cond.end353:                                      ; preds = %cond.end351, %cond.true216
  %cond354 = phi i32 [ 22, %cond.true216 ], [ %cond352, %cond.end351 ], !dbg !19473
  br label %cond.end355, !dbg !19473

cond.end355:                                      ; preds = %cond.end353, %cond.true211
  %cond356 = phi i32 [ 23, %cond.true211 ], [ %cond354, %cond.end353 ], !dbg !19473
  br label %cond.end357, !dbg !19473

cond.end357:                                      ; preds = %cond.end355, %cond.true206
  %cond358 = phi i32 [ 24, %cond.true206 ], [ %cond356, %cond.end355 ], !dbg !19473
  br label %cond.end359, !dbg !19473

cond.end359:                                      ; preds = %cond.end357, %cond.true201
  %cond360 = phi i32 [ 25, %cond.true201 ], [ %cond358, %cond.end357 ], !dbg !19473
  br label %cond.end361, !dbg !19473

cond.end361:                                      ; preds = %cond.end359, %cond.true196
  %cond362 = phi i32 [ 26, %cond.true196 ], [ %cond360, %cond.end359 ], !dbg !19473
  br label %cond.end363, !dbg !19473

cond.end363:                                      ; preds = %cond.end361, %cond.true191
  %cond364 = phi i32 [ 27, %cond.true191 ], [ %cond362, %cond.end361 ], !dbg !19473
  br label %cond.end365, !dbg !19473

cond.end365:                                      ; preds = %cond.end363, %cond.true186
  %cond366 = phi i32 [ 28, %cond.true186 ], [ %cond364, %cond.end363 ], !dbg !19473
  br label %cond.end367, !dbg !19473

cond.end367:                                      ; preds = %cond.end365, %cond.true181
  %cond368 = phi i32 [ 29, %cond.true181 ], [ %cond366, %cond.end365 ], !dbg !19473
  br label %cond.end369, !dbg !19473

cond.end369:                                      ; preds = %cond.end367, %cond.true176
  %cond370 = phi i32 [ 30, %cond.true176 ], [ %cond368, %cond.end367 ], !dbg !19473
  br label %cond.end371, !dbg !19473

cond.end371:                                      ; preds = %cond.end369, %cond.true171
  %cond372 = phi i32 [ 31, %cond.true171 ], [ %cond370, %cond.end369 ], !dbg !19473
  br label %cond.end373, !dbg !19473

cond.end373:                                      ; preds = %cond.end371, %cond.true166
  %cond374 = phi i32 [ 32, %cond.true166 ], [ %cond372, %cond.end371 ], !dbg !19473
  br label %cond.end375, !dbg !19473

cond.end375:                                      ; preds = %cond.end373, %cond.true161
  %cond376 = phi i32 [ 33, %cond.true161 ], [ %cond374, %cond.end373 ], !dbg !19473
  br label %cond.end377, !dbg !19473

cond.end377:                                      ; preds = %cond.end375, %cond.true156
  %cond378 = phi i32 [ 34, %cond.true156 ], [ %cond376, %cond.end375 ], !dbg !19473
  br label %cond.end379, !dbg !19473

cond.end379:                                      ; preds = %cond.end377, %cond.true151
  %cond380 = phi i32 [ 35, %cond.true151 ], [ %cond378, %cond.end377 ], !dbg !19473
  br label %cond.end381, !dbg !19473

cond.end381:                                      ; preds = %cond.end379, %cond.true146
  %cond382 = phi i32 [ 36, %cond.true146 ], [ %cond380, %cond.end379 ], !dbg !19473
  br label %cond.end383, !dbg !19473

cond.end383:                                      ; preds = %cond.end381, %cond.true141
  %cond384 = phi i32 [ 37, %cond.true141 ], [ %cond382, %cond.end381 ], !dbg !19473
  br label %cond.end385, !dbg !19473

cond.end385:                                      ; preds = %cond.end383, %cond.true136
  %cond386 = phi i32 [ 38, %cond.true136 ], [ %cond384, %cond.end383 ], !dbg !19473
  br label %cond.end387, !dbg !19473

cond.end387:                                      ; preds = %cond.end385, %cond.true131
  %cond388 = phi i32 [ 39, %cond.true131 ], [ %cond386, %cond.end385 ], !dbg !19473
  br label %cond.end389, !dbg !19473

cond.end389:                                      ; preds = %cond.end387, %cond.true126
  %cond390 = phi i32 [ 40, %cond.true126 ], [ %cond388, %cond.end387 ], !dbg !19473
  br label %cond.end391, !dbg !19473

cond.end391:                                      ; preds = %cond.end389, %cond.true121
  %cond392 = phi i32 [ 41, %cond.true121 ], [ %cond390, %cond.end389 ], !dbg !19473
  br label %cond.end393, !dbg !19473

cond.end393:                                      ; preds = %cond.end391, %cond.true116
  %cond394 = phi i32 [ 42, %cond.true116 ], [ %cond392, %cond.end391 ], !dbg !19473
  br label %cond.end395, !dbg !19473

cond.end395:                                      ; preds = %cond.end393, %cond.true111
  %cond396 = phi i32 [ 43, %cond.true111 ], [ %cond394, %cond.end393 ], !dbg !19473
  br label %cond.end397, !dbg !19473

cond.end397:                                      ; preds = %cond.end395, %cond.true106
  %cond398 = phi i32 [ 44, %cond.true106 ], [ %cond396, %cond.end395 ], !dbg !19473
  br label %cond.end399, !dbg !19473

cond.end399:                                      ; preds = %cond.end397, %cond.true101
  %cond400 = phi i32 [ 45, %cond.true101 ], [ %cond398, %cond.end397 ], !dbg !19473
  br label %cond.end401, !dbg !19473

cond.end401:                                      ; preds = %cond.end399, %cond.true96
  %cond402 = phi i32 [ 46, %cond.true96 ], [ %cond400, %cond.end399 ], !dbg !19473
  br label %cond.end403, !dbg !19473

cond.end403:                                      ; preds = %cond.end401, %cond.true91
  %cond404 = phi i32 [ 47, %cond.true91 ], [ %cond402, %cond.end401 ], !dbg !19473
  br label %cond.end405, !dbg !19473

cond.end405:                                      ; preds = %cond.end403, %cond.true86
  %cond406 = phi i32 [ 48, %cond.true86 ], [ %cond404, %cond.end403 ], !dbg !19473
  br label %cond.end407, !dbg !19473

cond.end407:                                      ; preds = %cond.end405, %cond.true81
  %cond408 = phi i32 [ 49, %cond.true81 ], [ %cond406, %cond.end405 ], !dbg !19473
  br label %cond.end409, !dbg !19473

cond.end409:                                      ; preds = %cond.end407, %cond.true76
  %cond410 = phi i32 [ 50, %cond.true76 ], [ %cond408, %cond.end407 ], !dbg !19473
  br label %cond.end411, !dbg !19473

cond.end411:                                      ; preds = %cond.end409, %cond.true71
  %cond412 = phi i32 [ 51, %cond.true71 ], [ %cond410, %cond.end409 ], !dbg !19473
  br label %cond.end413, !dbg !19473

cond.end413:                                      ; preds = %cond.end411, %cond.true66
  %cond414 = phi i32 [ 52, %cond.true66 ], [ %cond412, %cond.end411 ], !dbg !19473
  br label %cond.end415, !dbg !19473

cond.end415:                                      ; preds = %cond.end413, %cond.true61
  %cond416 = phi i32 [ 53, %cond.true61 ], [ %cond414, %cond.end413 ], !dbg !19473
  br label %cond.end417, !dbg !19473

cond.end417:                                      ; preds = %cond.end415, %cond.true56
  %cond418 = phi i32 [ 54, %cond.true56 ], [ %cond416, %cond.end415 ], !dbg !19473
  br label %cond.end419, !dbg !19473

cond.end419:                                      ; preds = %cond.end417, %cond.true51
  %cond420 = phi i32 [ 55, %cond.true51 ], [ %cond418, %cond.end417 ], !dbg !19473
  br label %cond.end421, !dbg !19473

cond.end421:                                      ; preds = %cond.end419, %cond.true46
  %cond422 = phi i32 [ 56, %cond.true46 ], [ %cond420, %cond.end419 ], !dbg !19473
  br label %cond.end423, !dbg !19473

cond.end423:                                      ; preds = %cond.end421, %cond.true41
  %cond424 = phi i32 [ 57, %cond.true41 ], [ %cond422, %cond.end421 ], !dbg !19473
  br label %cond.end425, !dbg !19473

cond.end425:                                      ; preds = %cond.end423, %cond.true36
  %cond426 = phi i32 [ 58, %cond.true36 ], [ %cond424, %cond.end423 ], !dbg !19473
  br label %cond.end427, !dbg !19473

cond.end427:                                      ; preds = %cond.end425, %cond.true31
  %cond428 = phi i32 [ 59, %cond.true31 ], [ %cond426, %cond.end425 ], !dbg !19473
  br label %cond.end429, !dbg !19473

cond.end429:                                      ; preds = %cond.end427, %cond.true26
  %cond430 = phi i32 [ 60, %cond.true26 ], [ %cond428, %cond.end427 ], !dbg !19473
  br label %cond.end431, !dbg !19473

cond.end431:                                      ; preds = %cond.end429, %cond.true21
  %cond432 = phi i32 [ 61, %cond.true21 ], [ %cond430, %cond.end429 ], !dbg !19473
  br label %cond.end433, !dbg !19473

cond.end433:                                      ; preds = %cond.end431, %cond.true16
  %cond434 = phi i32 [ 62, %cond.true16 ], [ %cond432, %cond.end431 ], !dbg !19473
  br label %cond.end435, !dbg !19473

cond.end435:                                      ; preds = %cond.end433, %cond.true11
  %cond436 = phi i32 [ 63, %cond.true11 ], [ %cond434, %cond.end433 ], !dbg !19473
  br label %cond.end437, !dbg !19473

cond.end437:                                      ; preds = %cond.end435, %cond.true8
  %cond438 = phi i32 [ 0, %cond.true8 ], [ %cond436, %cond.end435 ], !dbg !19473
  br label %cond.end440, !dbg !19473

cond.false439:                                    ; preds = %cond.true
  br label %cond.end440, !dbg !19473

cond.end440:                                      ; preds = %cond.false439, %cond.end437
  %cond441 = phi i32 [ %cond438, %cond.end437 ], [ -1, %cond.false439 ], !dbg !19473
  br label %cond.end444, !dbg !19473

cond.false442:                                    ; preds = %if.end3
  %72 = load i64, i64* %size.addr, align 8, !dbg !19473
  %sub443 = sub i64 %72, 1, !dbg !19473
  %call = call i32 @__ilog2_u64(i64 %sub443) #10, !dbg !19473
  br label %cond.end444, !dbg !19473

cond.end444:                                      ; preds = %cond.false442, %cond.end440
  %cond445 = phi i32 [ %cond441, %cond.end440 ], [ %call, %cond.false442 ], !dbg !19473
  %sub446 = sub i32 %cond445, 12, !dbg !19474
  %add = add i32 %sub446, 1, !dbg !19475
  store i32 %add, i32* %retval, align 4, !dbg !19476
  br label %return, !dbg !19476

if.end447:                                        ; preds = %entry
  %73 = load i64, i64* %size.addr, align 8, !dbg !19477
  %dec = add i64 %73, -1, !dbg !19477
  store i64 %dec, i64* %size.addr, align 8, !dbg !19477
  %74 = load i64, i64* %size.addr, align 8, !dbg !19478
  %shr = lshr i64 %74, 12, !dbg !19478
  store i64 %shr, i64* %size.addr, align 8, !dbg !19478
  %75 = load i64, i64* %size.addr, align 8, !dbg !19479
  store i64 %75, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !19456
  %76 = load i32, i32* %bitpos.i, align 4, !dbg !19480
  %77 = load i64, i64* %x.addr.i, align 8, !dbg !19481
  %78 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %77, i32 %76) #14, !dbg !19480, !srcloc !19482
  store i32 %78, i32* %bitpos.i, align 4, !dbg !19480
  %79 = load i32, i32* %bitpos.i, align 4, !dbg !19483
  %add.i = add i32 %79, 1, !dbg !19484
  store i32 %add.i, i32* %retval, align 4, !dbg !19485
  br label %return, !dbg !19485

return:                                           ; preds = %if.end447, %cond.end444, %if.then2, %if.then1
  %80 = load i32, i32* %retval, align 4, !dbg !19486
  ret i32 %80, !dbg !19486
}

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @__ilog2_u64(i64 %n) #4 !dbg !19487 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !19448, metadata !DIExpression()), !dbg !19491
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !19455, metadata !DIExpression()), !dbg !19493
  %n.addr = alloca i64, align 8
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !19494, metadata !DIExpression()), !dbg !19495
  %0 = load i64, i64* %n.addr, align 8, !dbg !19496
  store i64 %0, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !19493
  %1 = load i32, i32* %bitpos.i, align 4, !dbg !19497
  %2 = load i64, i64* %x.addr.i, align 8, !dbg !19498
  %3 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %2, i32 %1) #14, !dbg !19497, !srcloc !19482
  store i32 %3, i32* %bitpos.i, align 4, !dbg !19497
  %4 = load i32, i32* %bitpos.i, align 4, !dbg !19499
  %add.i = add i32 %4, 1, !dbg !19500
  %sub = sub i32 %add.i, 1, !dbg !19501
  ret i32 %sub, !dbg !19502
}

; Function Attrs: noredzone
declare dso_local noalias i8* @kmalloc_order(i64, i32, i32) #5

; Function Attrs: noredzone
declare dso_local noalias i8* @kmem_cache_alloc(%struct.kmem_cache*, i32) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kasan_kmalloc(%struct.kmem_cache* %s, i8* %object, i64 %size, i32 %flags) #0 !dbg !19503 {
entry:
  %s.addr = alloca %struct.kmem_cache*, align 8
  %object.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store %struct.kmem_cache* %s, %struct.kmem_cache** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr, metadata !19507, metadata !DIExpression()), !dbg !19508
  store i8* %object, i8** %object.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %object.addr, metadata !19509, metadata !DIExpression()), !dbg !19510
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !19511, metadata !DIExpression()), !dbg !19512
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !19513, metadata !DIExpression()), !dbg !19514
  %0 = load i8*, i8** %object.addr, align 8, !dbg !19515
  ret i8* %0, !dbg !19516
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kmalloc_array(i64 %n, i64 %size, i32 %flags) #0 !dbg !19517 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !16011, metadata !DIExpression()), !dbg !19518
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !16021, metadata !DIExpression()), !dbg !19522
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !16023, metadata !DIExpression()), !dbg !19523
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !16025, metadata !DIExpression()), !dbg !19524
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !16027, metadata !DIExpression()), !dbg !19525
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !16033, metadata !DIExpression()), !dbg !19527
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !16039, metadata !DIExpression()), !dbg !19529
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !16048, metadata !DIExpression()), !dbg !19532
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !16050, metadata !DIExpression()), !dbg !19533
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !16052, metadata !DIExpression()), !dbg !19534
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !16054, metadata !DIExpression()), !dbg !19535
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !16056, metadata !DIExpression()), !dbg !19536
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !16058, metadata !DIExpression()), !dbg !19537
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !16060, metadata !DIExpression()), !dbg !19538
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !16062, metadata !DIExpression()), !dbg !19539
  %retval = alloca i8*, align 8
  %n.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  %bytes = alloca i64, align 8
  %__a = alloca i64, align 8
  %__b = alloca i64, align 8
  %__d = alloca i64*, align 8
  %tmp = alloca i8, align 1
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !19540, metadata !DIExpression()), !dbg !19541
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !19542, metadata !DIExpression()), !dbg !19543
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !19544, metadata !DIExpression()), !dbg !19545
  call void @llvm.dbg.declare(metadata i64* %bytes, metadata !19546, metadata !DIExpression()), !dbg !19547
  call void @llvm.dbg.declare(metadata i64* %__a, metadata !19548, metadata !DIExpression()), !dbg !19551
  %0 = load i64, i64* %n.addr, align 8, !dbg !19551
  store i64 %0, i64* %__a, align 8, !dbg !19551
  call void @llvm.dbg.declare(metadata i64* %__b, metadata !19552, metadata !DIExpression()), !dbg !19551
  %1 = load i64, i64* %size.addr, align 8, !dbg !19551
  store i64 %1, i64* %__b, align 8, !dbg !19551
  call void @llvm.dbg.declare(metadata i64** %__d, metadata !19553, metadata !DIExpression()), !dbg !19551
  store i64* %bytes, i64** %__d, align 8, !dbg !19551
  %cmp = icmp eq i64* %__a, %__b, !dbg !19551
  %conv = zext i1 %cmp to i32, !dbg !19551
  %2 = load i64*, i64** %__d, align 8, !dbg !19551
  %cmp1 = icmp eq i64* %__a, %2, !dbg !19551
  %conv2 = zext i1 %cmp1 to i32, !dbg !19551
  %3 = load i64, i64* %__a, align 8, !dbg !19551
  %4 = load i64, i64* %__b, align 8, !dbg !19551
  %5 = load i64*, i64** %__d, align 8, !dbg !19551
  %6 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %3, i64 %4), !dbg !19551
  %7 = extractvalue { i64, i1 } %6, 1, !dbg !19551
  %8 = extractvalue { i64, i1 } %6, 0, !dbg !19551
  store i64 %8, i64* %5, align 8, !dbg !19551
  %frombool = zext i1 %7 to i8, !dbg !19551
  store i8 %frombool, i8* %tmp, align 1, !dbg !19551
  %9 = load i8, i8* %tmp, align 1, !dbg !19551
  %tobool = trunc i8 %9 to i1, !dbg !19551
  %call = call zeroext i1 @__must_check_overflow(i1 zeroext %tobool) #8, !dbg !19554
  %lnot = xor i1 %call, true, !dbg !19554
  %lnot3 = xor i1 %lnot, true, !dbg !19554
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !19554
  %conv4 = sext i32 %lnot.ext to i64, !dbg !19554
  %tobool5 = icmp ne i64 %conv4, 0, !dbg !19554
  br i1 %tobool5, label %if.then, label %if.end, !dbg !19555

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !19556
  br label %return, !dbg !19556

if.end:                                           ; preds = %entry
  %10 = load i64, i64* %n.addr, align 8, !dbg !19557
  %11 = call i1 @llvm.is.constant.i64(i64 %10), !dbg !19558
  br i1 %11, label %land.lhs.true, label %if.end8, !dbg !19559

land.lhs.true:                                    ; preds = %if.end
  %12 = load i64, i64* %size.addr, align 8, !dbg !19560
  %13 = call i1 @llvm.is.constant.i64(i64 %12), !dbg !19561
  br i1 %13, label %if.then6, label %if.end8, !dbg !19562

if.then6:                                         ; preds = %land.lhs.true
  %14 = load i64, i64* %bytes, align 8, !dbg !19563
  %15 = load i32, i32* %flags.addr, align 4, !dbg !19564
  store i64 %14, i64* %size.addr.i, align 8
  store i32 %15, i32* %flags.addr.i, align 4
  %16 = load i64, i64* %size.addr.i, align 8, !dbg !19565
  %17 = call i1 @llvm.is.constant.i64(i64 %16) #12, !dbg !19566
  br i1 %17, label %if.then.i, label %if.end9.i, !dbg !19567

if.then.i:                                        ; preds = %if.then6
  %18 = load i64, i64* %size.addr.i, align 8, !dbg !19568
  %cmp.i = icmp ugt i64 %18, 8192, !dbg !19569
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !19570

if.then1.i:                                       ; preds = %if.then.i
  %19 = load i64, i64* %size.addr.i, align 8, !dbg !19571
  %20 = load i32, i32* %flags.addr.i, align 4, !dbg !19572
  store i64 %19, i64* %size.addr.i.i, align 8
  store i32 %20, i32* %flags.addr.i.i, align 4
  %21 = load i64, i64* %size.addr.i.i, align 8, !dbg !19573
  %call.i.i = call i32 @get_order(i64 %21) #10, !dbg !19574
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !19536
  %22 = load i64, i64* %size.addr.i.i, align 8, !dbg !19575
  %23 = load i32, i32* %flags.addr.i.i, align 4, !dbg !19576
  %24 = load i32, i32* %order.i.i, align 4, !dbg !19577
  store i64 %22, i64* %size.addr.i.i.i, align 8
  store i32 %23, i32* %flags.addr.i.i.i, align 4
  store i32 %24, i32* %order.addr.i.i.i, align 4
  %25 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !19578
  %26 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !19579
  %27 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !19580
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %25, i32 %26, i32 %27) #11, !dbg !19581
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !19581
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !19581
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !19581
  call void @llvm.assume(i1 %maskcond.i.i.i) #12, !dbg !19581
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !19582
  br label %kmalloc.exit, !dbg !19582

if.end.i:                                         ; preds = %if.then.i
  %28 = load i64, i64* %size.addr.i, align 8, !dbg !19583
  store i64 %28, i64* %size.addr.i11.i, align 8
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19584
  %tobool.i.i = icmp ne i64 %29, 0, !dbg !19584
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !19585

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !19586
  br label %kmalloc_index.exit.i, !dbg !19586

if.end.i.i:                                       ; preds = %if.end.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19587
  %cmp.i.i = icmp ule i64 %30, 8, !dbg !19588
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !19589

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !19590
  br label %kmalloc_index.exit.i, !dbg !19590

if.end2.i.i:                                      ; preds = %if.end.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19591
  %cmp3.i.i = icmp ugt i64 %31, 64, !dbg !19592
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !19593

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19594
  %cmp4.i.i = icmp ule i64 %32, 96, !dbg !19595
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !19596

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !19597
  br label %kmalloc_index.exit.i, !dbg !19597

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19598
  %cmp7.i.i = icmp ugt i64 %33, 128, !dbg !19599
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !19600

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19601
  %cmp9.i.i = icmp ule i64 %34, 192, !dbg !19602
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !19603

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !19604
  br label %kmalloc_index.exit.i, !dbg !19604

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19605
  %cmp12.i.i = icmp ule i64 %35, 8, !dbg !19606
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !19607

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !19608
  br label %kmalloc_index.exit.i, !dbg !19608

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19609
  %cmp15.i.i = icmp ule i64 %36, 16, !dbg !19610
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !19611

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !19612
  br label %kmalloc_index.exit.i, !dbg !19612

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19613
  %cmp18.i.i = icmp ule i64 %37, 32, !dbg !19614
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !19615

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !19616
  br label %kmalloc_index.exit.i, !dbg !19616

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19617
  %cmp21.i.i = icmp ule i64 %38, 64, !dbg !19618
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !19619

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !19620
  br label %kmalloc_index.exit.i, !dbg !19620

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19621
  %cmp24.i.i = icmp ule i64 %39, 128, !dbg !19622
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !19623

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !19624
  br label %kmalloc_index.exit.i, !dbg !19624

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19625
  %cmp27.i.i = icmp ule i64 %40, 256, !dbg !19626
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !19627

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !19628
  br label %kmalloc_index.exit.i, !dbg !19628

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19629
  %cmp30.i.i = icmp ule i64 %41, 512, !dbg !19630
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !19631

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !19632
  br label %kmalloc_index.exit.i, !dbg !19632

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19633
  %cmp33.i.i = icmp ule i64 %42, 1024, !dbg !19634
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !19635

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !19636
  br label %kmalloc_index.exit.i, !dbg !19636

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19637
  %cmp36.i.i = icmp ule i64 %43, 2048, !dbg !19638
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !19639

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !19640
  br label %kmalloc_index.exit.i, !dbg !19640

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19641
  %cmp39.i.i = icmp ule i64 %44, 4096, !dbg !19642
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !19643

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !19644
  br label %kmalloc_index.exit.i, !dbg !19644

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %45 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19645
  %cmp42.i.i = icmp ule i64 %45, 8192, !dbg !19646
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !19647

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !19648
  br label %kmalloc_index.exit.i, !dbg !19648

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %46 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19649
  %cmp45.i.i = icmp ule i64 %46, 16384, !dbg !19650
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !19651

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !19652
  br label %kmalloc_index.exit.i, !dbg !19652

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %47 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19653
  %cmp48.i.i = icmp ule i64 %47, 32768, !dbg !19654
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !19655

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !19656
  br label %kmalloc_index.exit.i, !dbg !19656

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %48 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19657
  %cmp51.i.i = icmp ule i64 %48, 65536, !dbg !19658
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !19659

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !19660
  br label %kmalloc_index.exit.i, !dbg !19660

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %49 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19661
  %cmp54.i.i = icmp ule i64 %49, 131072, !dbg !19662
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !19663

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !19664
  br label %kmalloc_index.exit.i, !dbg !19664

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %50 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19665
  %cmp57.i.i = icmp ule i64 %50, 262144, !dbg !19666
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !19667

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !19668
  br label %kmalloc_index.exit.i, !dbg !19668

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %51 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19669
  %cmp60.i.i = icmp ule i64 %51, 524288, !dbg !19670
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !19671

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !19672
  br label %kmalloc_index.exit.i, !dbg !19672

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %52 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19673
  %cmp63.i.i = icmp ule i64 %52, 1048576, !dbg !19674
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !19675

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !19676
  br label %kmalloc_index.exit.i, !dbg !19676

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %53 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19677
  %cmp66.i.i = icmp ule i64 %53, 2097152, !dbg !19678
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !19679

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !19680
  br label %kmalloc_index.exit.i, !dbg !19680

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %54 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19681
  %cmp69.i.i = icmp ule i64 %54, 4194304, !dbg !19682
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !19683

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !19684
  br label %kmalloc_index.exit.i, !dbg !19684

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %55 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19685
  %cmp72.i.i = icmp ule i64 %55, 8388608, !dbg !19686
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !19687

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !19688
  br label %kmalloc_index.exit.i, !dbg !19688

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %56 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19689
  %cmp75.i.i = icmp ule i64 %56, 16777216, !dbg !19690
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !19691

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !19692
  br label %kmalloc_index.exit.i, !dbg !19692

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %57 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19693
  %cmp78.i.i = icmp ule i64 %57, 33554432, !dbg !19694
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !19695

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !19696
  br label %kmalloc_index.exit.i, !dbg !19696

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %58 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19697
  %cmp81.i.i = icmp ule i64 %58, 67108864, !dbg !19698
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !19699

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !19700
  br label %kmalloc_index.exit.i, !dbg !19700

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.10, i64 0, i64 0), i32 382, i32 0, i64 12) #12, !dbg !19701, !srcloc !16238
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 221) #12, !dbg !19702, !srcloc !16242
  unreachable, !dbg !19703

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %59 = load i32, i32* %retval.i.i, align 4, !dbg !19704
  store i32 %59, i32* %index.i, align 4, !dbg !19705
  %60 = load i32, i32* %index.i, align 4, !dbg !19706
  %tobool.i = icmp ne i32 %60, 0, !dbg !19706
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !19707

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !19708
  br label %kmalloc.exit, !dbg !19708

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %61 = load i32, i32* %flags.addr.i, align 4, !dbg !19709
  store i32 %61, i32* %flags.addr.i13.i, align 4
  %62 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !19710
  %and.i.i = and i32 %62, 17, !dbg !19710
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !19710
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !19710
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !19710
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !19710
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !19711

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !19712
  br label %kmalloc_type.exit.i, !dbg !19712

if.end.i16.i:                                     ; preds = %if.end4.i
  %63 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !19713
  %and2.i.i = and i32 %63, 1, !dbg !19714
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !19713
  %64 = zext i1 %tobool3.i.i to i64, !dbg !19713
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !19713
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !19715
  br label %kmalloc_type.exit.i, !dbg !19715

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %65 = load i32, i32* %retval.i12.i, align 4, !dbg !19716
  %idxprom.i = zext i32 %65 to i64, !dbg !19717
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !19717
  %66 = load i32, i32* %index.i, align 4, !dbg !19718
  %idxprom6.i = zext i32 %66 to i64, !dbg !19717
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !19717
  %67 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !19717
  %68 = load i32, i32* %flags.addr.i, align 4, !dbg !19719
  %69 = load i64, i64* %size.addr.i, align 8, !dbg !19720
  store %struct.kmem_cache* %67, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %68, i32* %flags.addr.i17.i, align 4
  store i64 %69, i64* %size.addr.i18.i, align 8
  %70 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !19721
  %71 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !19722
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %70, i32 %71) #11, !dbg !19723
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !19723
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !19723
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !19723
  call void @llvm.assume(i1 %maskcond.i.i) #12, !dbg !19723
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !19524
  %72 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !19724
  %73 = load i8*, i8** %ret.i.i, align 8, !dbg !19725
  %74 = load i64, i64* %size.addr.i18.i, align 8, !dbg !19726
  %75 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !19727
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %72, i8* %73, i64 %74, i32 %75) #11, !dbg !19728
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !19729
  %76 = load i8*, i8** %ret.i.i, align 8, !dbg !19730
  store i8* %76, i8** %retval.i, align 8, !dbg !19731
  br label %kmalloc.exit, !dbg !19731

if.end9.i:                                        ; preds = %if.then6
  %77 = load i64, i64* %size.addr.i, align 8, !dbg !19732
  %78 = load i32, i32* %flags.addr.i, align 4, !dbg !19733
  %call10.i = call noalias i8* @__kmalloc(i64 %77, i32 %78) #11, !dbg !19734
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !19734
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !19734
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !19734
  call void @llvm.assume(i1 %maskcond.i) #12, !dbg !19734
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !19735
  br label %kmalloc.exit, !dbg !19735

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %79 = load i8*, i8** %retval.i, align 8, !dbg !19736
  store i8* %79, i8** %retval, align 8, !dbg !19737
  br label %return, !dbg !19737

if.end8:                                          ; preds = %land.lhs.true, %if.end
  %80 = load i64, i64* %bytes, align 8, !dbg !19738
  %81 = load i32, i32* %flags.addr, align 4, !dbg !19739
  %call9 = call noalias i8* @__kmalloc(i64 %80, i32 %81) #8, !dbg !19740
  %ptrint = ptrtoint i8* %call9 to i64, !dbg !19740
  %maskedptr = and i64 %ptrint, 7, !dbg !19740
  %maskcond = icmp eq i64 %maskedptr, 0, !dbg !19740
  call void @llvm.assume(i1 %maskcond), !dbg !19740
  store i8* %call9, i8** %retval, align 8, !dbg !19741
  br label %return, !dbg !19741

return:                                           ; preds = %if.end8, %kmalloc.exit, %if.then
  %82 = load i8*, i8** %retval, align 8, !dbg !19742
  ret i8* %82, !dbg !19742
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__must_check_overflow(i1 zeroext %overflow) #0 !dbg !19743 {
entry:
  %overflow.addr = alloca i8, align 1
  %frombool = zext i1 %overflow to i8
  store i8 %frombool, i8* %overflow.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %overflow.addr, metadata !19747, metadata !DIExpression()), !dbg !19748
  %0 = load i8, i8* %overflow.addr, align 1, !dbg !19749
  %tobool = trunc i8 %0 to i1, !dbg !19749
  %lnot = xor i1 %tobool, true, !dbg !19749
  %lnot1 = xor i1 %lnot, true, !dbg !19749
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !19749
  %conv = sext i32 %lnot.ext to i64, !dbg !19749
  %tobool2 = icmp ne i64 %conv, 0, !dbg !19749
  ret i1 %tobool2, !dbg !19750
}

; Function Attrs: nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlx5_eswitch_ecpf_idx(%struct.mlx5_eswitch* %esw) #0 !dbg !19751 {
entry:
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !19752, metadata !DIExpression()), !dbg !19753
  %0 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !19754
  %total_vports = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %0, i32 0, i32 8, !dbg !19755
  %1 = load i32, i32* %total_vports, align 4, !dbg !19755
  %sub = sub i32 %1, 2, !dbg !19756
  ret i32 %sub, !dbg !19757
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @mlx5_ecpf_vport_exists(%struct.mlx5_core_dev* %dev) #0 !dbg !19758 {
entry:
  %dev.addr = alloca %struct.mlx5_core_dev*, align 8
  store %struct.mlx5_core_dev* %dev, %struct.mlx5_core_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_core_dev** %dev.addr, metadata !19763, metadata !DIExpression()), !dbg !19764
  %0 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !19765
  %call = call zeroext i1 @mlx5_core_is_pf(%struct.mlx5_core_dev* %0) #8, !dbg !19766
  br i1 %call, label %land.rhs, label %land.end, !dbg !19767

land.rhs:                                         ; preds = %entry
  %1 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !19768
  %caps = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %1, i32 0, i32 9, !dbg !19768
  %hca_cur = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps, i32 0, i32 0, !dbg !19768
  %arrayidx = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur, i64 0, i64 9, !dbg !19768
  %arraydecay = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx, i64 0, i64 0, !dbg !19768
  %add.ptr = getelementptr i32, i32* %arraydecay, i64 0, !dbg !19768
  %2 = load i32, i32* %add.ptr, align 4, !dbg !19768
  %3 = call i1 @llvm.is.constant.i32(i32 %2), !dbg !19768
  br i1 %3, label %cond.true, label %cond.false, !dbg !19768

cond.true:                                        ; preds = %land.rhs
  %4 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !19768
  %caps1 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %4, i32 0, i32 9, !dbg !19768
  %hca_cur2 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps1, i32 0, i32 0, !dbg !19768
  %arrayidx3 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur2, i64 0, i64 9, !dbg !19768
  %arraydecay4 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx3, i64 0, i64 0, !dbg !19768
  %add.ptr5 = getelementptr i32, i32* %arraydecay4, i64 0, !dbg !19768
  %5 = load i32, i32* %add.ptr5, align 4, !dbg !19768
  %and = and i32 %5, 255, !dbg !19768
  %shl = shl i32 %and, 24, !dbg !19768
  %6 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !19768
  %caps6 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %6, i32 0, i32 9, !dbg !19768
  %hca_cur7 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps6, i32 0, i32 0, !dbg !19768
  %arrayidx8 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur7, i64 0, i64 9, !dbg !19768
  %arraydecay9 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx8, i64 0, i64 0, !dbg !19768
  %add.ptr10 = getelementptr i32, i32* %arraydecay9, i64 0, !dbg !19768
  %7 = load i32, i32* %add.ptr10, align 4, !dbg !19768
  %and11 = and i32 %7, 65280, !dbg !19768
  %shl12 = shl i32 %and11, 8, !dbg !19768
  %or = or i32 %shl, %shl12, !dbg !19768
  %8 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !19768
  %caps13 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %8, i32 0, i32 9, !dbg !19768
  %hca_cur14 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps13, i32 0, i32 0, !dbg !19768
  %arrayidx15 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur14, i64 0, i64 9, !dbg !19768
  %arraydecay16 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx15, i64 0, i64 0, !dbg !19768
  %add.ptr17 = getelementptr i32, i32* %arraydecay16, i64 0, !dbg !19768
  %9 = load i32, i32* %add.ptr17, align 4, !dbg !19768
  %and18 = and i32 %9, 16711680, !dbg !19768
  %shr = lshr i32 %and18, 8, !dbg !19768
  %or19 = or i32 %or, %shr, !dbg !19768
  %10 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !19768
  %caps20 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %10, i32 0, i32 9, !dbg !19768
  %hca_cur21 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps20, i32 0, i32 0, !dbg !19768
  %arrayidx22 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur21, i64 0, i64 9, !dbg !19768
  %arraydecay23 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx22, i64 0, i64 0, !dbg !19768
  %add.ptr24 = getelementptr i32, i32* %arraydecay23, i64 0, !dbg !19768
  %11 = load i32, i32* %add.ptr24, align 4, !dbg !19768
  %and25 = and i32 %11, -16777216, !dbg !19768
  %shr26 = lshr i32 %and25, 24, !dbg !19768
  %or27 = or i32 %or19, %shr26, !dbg !19768
  br label %cond.end, !dbg !19768

cond.false:                                       ; preds = %land.rhs
  %12 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !19768
  %caps28 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %12, i32 0, i32 9, !dbg !19768
  %hca_cur29 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps28, i32 0, i32 0, !dbg !19768
  %arrayidx30 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur29, i64 0, i64 9, !dbg !19768
  %arraydecay31 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx30, i64 0, i64 0, !dbg !19768
  %add.ptr32 = getelementptr i32, i32* %arraydecay31, i64 0, !dbg !19768
  %13 = load i32, i32* %add.ptr32, align 4, !dbg !19768
  %call33 = call i32 @__fswab32(i32 %13) #10, !dbg !19768
  br label %cond.end, !dbg !19768

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %or27, %cond.true ], [ %call33, %cond.false ], !dbg !19768
  %shr34 = lshr i32 %cond, 4, !dbg !19768
  %and35 = and i32 %shr34, 1, !dbg !19768
  %tobool = icmp ne i32 %and35, 0, !dbg !19767
  br label %land.end

land.end:                                         ; preds = %cond.end, %entry
  %14 = phi i1 [ false, %entry ], [ %tobool, %cond.end ], !dbg !19769
  ret i1 %14, !dbg !19770
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlx5_eswitch_uplink_idx(%struct.mlx5_eswitch* %esw) #0 !dbg !19771 {
entry:
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !19772, metadata !DIExpression()), !dbg !19773
  %0 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !19774
  %total_vports = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %0, i32 0, i32 8, !dbg !19775
  %1 = load i32, i32* %total_vports, align 4, !dbg !19775
  %sub = sub i32 %1, 1, !dbg !19776
  ret i32 %sub, !dbg !19777
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @mlx5_core_is_pf(%struct.mlx5_core_dev* %dev) #0 !dbg !19778 {
entry:
  %dev.addr = alloca %struct.mlx5_core_dev*, align 8
  store %struct.mlx5_core_dev* %dev, %struct.mlx5_core_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_core_dev** %dev.addr, metadata !19779, metadata !DIExpression()), !dbg !19780
  %0 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !19781
  %coredev_type = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %0, i32 0, i32 1, !dbg !19782
  %1 = load i32, i32* %coredev_type, align 8, !dbg !19782
  %cmp = icmp eq i32 %1, 0, !dbg !19783
  ret i1 %cmp, !dbg !19784
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__esw_offloads_unload_rep(%struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch_rep* %rep, i8 zeroext %rep_type) #0 !dbg !19785 {
entry:
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !16629, metadata !DIExpression()), !dbg !19788
  %old.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %old.addr.i.i, metadata !16640, metadata !DIExpression()), !dbg !19792
  %new.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %new.addr.i.i, metadata !16642, metadata !DIExpression()), !dbg !19793
  %__ret.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret.i.i, metadata !16644, metadata !DIExpression()), !dbg !19794
  %__old.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__old.i.i, metadata !16647, metadata !DIExpression()), !dbg !19794
  %__new.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__new.i.i, metadata !16648, metadata !DIExpression()), !dbg !19794
  %__ptr.i.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %__ptr.i.i, metadata !16649, metadata !DIExpression()), !dbg !19794
  %tmp.i.i = alloca i32, align 4
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !12689, metadata !DIExpression()), !dbg !19795
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !12699, metadata !DIExpression()), !dbg !19797
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !16653, metadata !DIExpression()), !dbg !19798
  %old.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %old.addr.i, metadata !16655, metadata !DIExpression()), !dbg !19799
  %new.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %new.addr.i, metadata !16657, metadata !DIExpression()), !dbg !19800
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  %rep.addr = alloca %struct.mlx5_eswitch_rep*, align 8
  %rep_type.addr = alloca i8, align 1
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !19801, metadata !DIExpression()), !dbg !19802
  store %struct.mlx5_eswitch_rep* %rep, %struct.mlx5_eswitch_rep** %rep.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch_rep** %rep.addr, metadata !19803, metadata !DIExpression()), !dbg !19804
  store i8 %rep_type, i8* %rep_type.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %rep_type.addr, metadata !19805, metadata !DIExpression()), !dbg !19806
  %0 = load %struct.mlx5_eswitch_rep*, %struct.mlx5_eswitch_rep** %rep.addr, align 8, !dbg !19807
  %rep_data = getelementptr inbounds %struct.mlx5_eswitch_rep, %struct.mlx5_eswitch_rep* %0, i32 0, i32 0, !dbg !19808
  %1 = load i8, i8* %rep_type.addr, align 1, !dbg !19809
  %idxprom = zext i8 %1 to i64, !dbg !19807
  %arrayidx = getelementptr [2 x %struct.mlx5_eswitch_rep_data], [2 x %struct.mlx5_eswitch_rep_data]* %rep_data, i64 0, i64 %idxprom, !dbg !19807
  %state = getelementptr inbounds %struct.mlx5_eswitch_rep_data, %struct.mlx5_eswitch_rep_data* %arrayidx, i32 0, i32 1, !dbg !19810
  store %struct.atomic_t* %state, %struct.atomic_t** %v.addr.i, align 8
  store i32 2, i32* %old.addr.i, align 4
  store i32 1, i32* %new.addr.i, align 4
  %2 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !19811
  %3 = bitcast %struct.atomic_t* %2 to i8*, !dbg !19811
  store i8* %3, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %4 = load i8*, i8** %v.addr.i.i, align 8, !dbg !19812
  %5 = load i64, i64* %size.addr.i.i, align 8, !dbg !19813
  %conv.i.i = trunc i64 %5 to i32, !dbg !19813
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %4, i32 %conv.i.i) #11, !dbg !19814
  %6 = load i8*, i8** %v.addr.i.i, align 8, !dbg !19815
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !19815
  call void @kcsan_check_access(i8* %6, i64 %7, i32 7) #11, !dbg !19815
  %8 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !19816
  %9 = load i32, i32* %old.addr.i, align 4, !dbg !19817
  %10 = load i32, i32* %new.addr.i, align 4, !dbg !19818
  store %struct.atomic_t* %8, %struct.atomic_t** %v.addr.i1.i, align 8
  store i32 %9, i32* %old.addr.i.i, align 4
  store i32 %10, i32* %new.addr.i.i, align 4
  %11 = load i32, i32* %old.addr.i.i, align 4, !dbg !19794
  store i32 %11, i32* %__old.i.i, align 4, !dbg !19794
  %12 = load i32, i32* %new.addr.i.i, align 4, !dbg !19794
  store i32 %12, i32* %__new.i.i, align 4, !dbg !19794
  %13 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !19794
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %13, i32 0, i32 0, !dbg !19794
  store i32* %counter.i.i, i32** %__ptr.i.i, align 8, !dbg !19794
  %14 = load i32*, i32** %__ptr.i.i, align 8, !dbg !19794
  %15 = load i32, i32* %__new.i.i, align 4, !dbg !19794
  %16 = load i32, i32* %__old.i.i, align 4, !dbg !19794
  %17 = call i32 asm sideeffect "cmpxchgl $2,$1", "={ax},=*m,r,0,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32* %14, i32 %15, i32 %16, i32* %14) #12, !dbg !19794, !srcloc !16690
  store i32 %17, i32* %__ret.i.i, align 4, !dbg !19794
  %18 = load i32, i32* %__ret.i.i, align 4, !dbg !19794
  store i32 %18, i32* %tmp.i.i, align 4, !dbg !19794
  %19 = load i32, i32* %tmp.i.i, align 4, !dbg !19794
  %cmp = icmp eq i32 %19, 2, !dbg !19819
  br i1 %cmp, label %if.then, label %if.end, !dbg !19820

if.then:                                          ; preds = %entry
  %20 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !19821
  %offloads = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %20, i32 0, i32 13, !dbg !19822
  %rep_ops = getelementptr inbounds %struct.mlx5_esw_offload, %struct.mlx5_esw_offload* %offloads, i32 0, i32 15, !dbg !19823
  %21 = load i8, i8* %rep_type.addr, align 1, !dbg !19824
  %idxprom1 = zext i8 %21 to i64, !dbg !19821
  %arrayidx2 = getelementptr [2 x %struct.mlx5_eswitch_rep_ops*], [2 x %struct.mlx5_eswitch_rep_ops*]* %rep_ops, i64 0, i64 %idxprom1, !dbg !19821
  %22 = load %struct.mlx5_eswitch_rep_ops*, %struct.mlx5_eswitch_rep_ops** %arrayidx2, align 8, !dbg !19821
  %unload = getelementptr inbounds %struct.mlx5_eswitch_rep_ops, %struct.mlx5_eswitch_rep_ops* %22, i32 0, i32 1, !dbg !19825
  %23 = load void (%struct.mlx5_eswitch_rep*)*, void (%struct.mlx5_eswitch_rep*)** %unload, align 8, !dbg !19825
  %24 = load %struct.mlx5_eswitch_rep*, %struct.mlx5_eswitch_rep** %rep.addr, align 8, !dbg !19826
  call void %23(%struct.mlx5_eswitch_rep* %24) #8, !dbg !19821
  br label %if.end, !dbg !19821

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !19827
}

; Function Attrs: noredzone
declare dso_local i32* @mlx5_esw_query_functions(%struct.mlx5_core_dev*) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @esw_vfs_changed_event_handler(%struct.mlx5_eswitch* %esw, i32* %out) #0 !dbg !19828 {
entry:
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  %out.addr = alloca i32*, align 8
  %host_pf_disabled = alloca i8, align 1
  %new_num_vfs = alloca i16, align 2
  %err = alloca i32, align 4
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !19831, metadata !DIExpression()), !dbg !19832
  store i32* %out, i32** %out.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %out.addr, metadata !19833, metadata !DIExpression()), !dbg !19834
  call void @llvm.dbg.declare(metadata i8* %host_pf_disabled, metadata !19835, metadata !DIExpression()), !dbg !19836
  call void @llvm.dbg.declare(metadata i16* %new_num_vfs, metadata !19837, metadata !DIExpression()), !dbg !19838
  %0 = load i32*, i32** %out.addr, align 8, !dbg !19839
  %add.ptr = getelementptr i32, i32* %0, i64 4, !dbg !19839
  %1 = load i32, i32* %add.ptr, align 4, !dbg !19839
  %2 = call i1 @llvm.is.constant.i32(i32 %1), !dbg !19839
  br i1 %2, label %cond.true, label %cond.false, !dbg !19839

cond.true:                                        ; preds = %entry
  %3 = load i32*, i32** %out.addr, align 8, !dbg !19839
  %add.ptr1 = getelementptr i32, i32* %3, i64 4, !dbg !19839
  %4 = load i32, i32* %add.ptr1, align 4, !dbg !19839
  %and = and i32 %4, 255, !dbg !19839
  %shl = shl i32 %and, 24, !dbg !19839
  %5 = load i32*, i32** %out.addr, align 8, !dbg !19839
  %add.ptr2 = getelementptr i32, i32* %5, i64 4, !dbg !19839
  %6 = load i32, i32* %add.ptr2, align 4, !dbg !19839
  %and3 = and i32 %6, 65280, !dbg !19839
  %shl4 = shl i32 %and3, 8, !dbg !19839
  %or = or i32 %shl, %shl4, !dbg !19839
  %7 = load i32*, i32** %out.addr, align 8, !dbg !19839
  %add.ptr5 = getelementptr i32, i32* %7, i64 4, !dbg !19839
  %8 = load i32, i32* %add.ptr5, align 4, !dbg !19839
  %and6 = and i32 %8, 16711680, !dbg !19839
  %shr = lshr i32 %and6, 8, !dbg !19839
  %or7 = or i32 %or, %shr, !dbg !19839
  %9 = load i32*, i32** %out.addr, align 8, !dbg !19839
  %add.ptr8 = getelementptr i32, i32* %9, i64 4, !dbg !19839
  %10 = load i32, i32* %add.ptr8, align 4, !dbg !19839
  %and9 = and i32 %10, -16777216, !dbg !19839
  %shr10 = lshr i32 %and9, 24, !dbg !19839
  %or11 = or i32 %or7, %shr10, !dbg !19839
  br label %cond.end, !dbg !19839

cond.false:                                       ; preds = %entry
  %11 = load i32*, i32** %out.addr, align 8, !dbg !19839
  %add.ptr12 = getelementptr i32, i32* %11, i64 4, !dbg !19839
  %12 = load i32, i32* %add.ptr12, align 4, !dbg !19839
  %call = call i32 @__fswab32(i32 %12) #10, !dbg !19839
  br label %cond.end, !dbg !19839

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %or11, %cond.true ], [ %call, %cond.false ], !dbg !19839
  %shr13 = lshr i32 %cond, 0, !dbg !19839
  %and14 = and i32 %shr13, 65535, !dbg !19839
  %conv = trunc i32 %and14 to i16, !dbg !19839
  store i16 %conv, i16* %new_num_vfs, align 2, !dbg !19840
  %13 = load i32*, i32** %out.addr, align 8, !dbg !19841
  %add.ptr15 = getelementptr i32, i32* %13, i64 4, !dbg !19841
  %14 = load i32, i32* %add.ptr15, align 4, !dbg !19841
  %15 = call i1 @llvm.is.constant.i32(i32 %14), !dbg !19841
  br i1 %15, label %cond.true16, label %cond.false32, !dbg !19841

cond.true16:                                      ; preds = %cond.end
  %16 = load i32*, i32** %out.addr, align 8, !dbg !19841
  %add.ptr17 = getelementptr i32, i32* %16, i64 4, !dbg !19841
  %17 = load i32, i32* %add.ptr17, align 4, !dbg !19841
  %and18 = and i32 %17, 255, !dbg !19841
  %shl19 = shl i32 %and18, 24, !dbg !19841
  %18 = load i32*, i32** %out.addr, align 8, !dbg !19841
  %add.ptr20 = getelementptr i32, i32* %18, i64 4, !dbg !19841
  %19 = load i32, i32* %add.ptr20, align 4, !dbg !19841
  %and21 = and i32 %19, 65280, !dbg !19841
  %shl22 = shl i32 %and21, 8, !dbg !19841
  %or23 = or i32 %shl19, %shl22, !dbg !19841
  %20 = load i32*, i32** %out.addr, align 8, !dbg !19841
  %add.ptr24 = getelementptr i32, i32* %20, i64 4, !dbg !19841
  %21 = load i32, i32* %add.ptr24, align 4, !dbg !19841
  %and25 = and i32 %21, 16711680, !dbg !19841
  %shr26 = lshr i32 %and25, 8, !dbg !19841
  %or27 = or i32 %or23, %shr26, !dbg !19841
  %22 = load i32*, i32** %out.addr, align 8, !dbg !19841
  %add.ptr28 = getelementptr i32, i32* %22, i64 4, !dbg !19841
  %23 = load i32, i32* %add.ptr28, align 4, !dbg !19841
  %and29 = and i32 %23, -16777216, !dbg !19841
  %shr30 = lshr i32 %and29, 24, !dbg !19841
  %or31 = or i32 %or27, %shr30, !dbg !19841
  br label %cond.end35, !dbg !19841

cond.false32:                                     ; preds = %cond.end
  %24 = load i32*, i32** %out.addr, align 8, !dbg !19841
  %add.ptr33 = getelementptr i32, i32* %24, i64 4, !dbg !19841
  %25 = load i32, i32* %add.ptr33, align 4, !dbg !19841
  %call34 = call i32 @__fswab32(i32 %25) #10, !dbg !19841
  br label %cond.end35, !dbg !19841

cond.end35:                                       ; preds = %cond.false32, %cond.true16
  %cond36 = phi i32 [ %or31, %cond.true16 ], [ %call34, %cond.false32 ], !dbg !19841
  %shr37 = lshr i32 %cond36, 16, !dbg !19841
  %and38 = and i32 %shr37, 1, !dbg !19841
  %tobool = icmp ne i32 %and38, 0, !dbg !19841
  %frombool = zext i1 %tobool to i8, !dbg !19842
  store i8 %frombool, i8* %host_pf_disabled, align 1, !dbg !19842
  %26 = load i16, i16* %new_num_vfs, align 2, !dbg !19843
  %conv39 = zext i16 %26 to i32, !dbg !19843
  %27 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !19845
  %esw_funcs = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %27, i32 0, i32 17, !dbg !19846
  %num_vfs = getelementptr inbounds %struct.mlx5_esw_functions, %struct.mlx5_esw_functions* %esw_funcs, i32 0, i32 1, !dbg !19847
  %28 = load i16, i16* %num_vfs, align 8, !dbg !19847
  %conv40 = zext i16 %28 to i32, !dbg !19845
  %cmp = icmp eq i32 %conv39, %conv40, !dbg !19848
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !19849

lor.lhs.false:                                    ; preds = %cond.end35
  %29 = load i8, i8* %host_pf_disabled, align 1, !dbg !19850
  %tobool42 = trunc i8 %29 to i1, !dbg !19850
  br i1 %tobool42, label %if.then, label %if.end, !dbg !19851

if.then:                                          ; preds = %lor.lhs.false, %cond.end35
  br label %return, !dbg !19852

if.end:                                           ; preds = %lor.lhs.false
  %30 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !19853
  %esw_funcs44 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %30, i32 0, i32 17, !dbg !19855
  %num_vfs45 = getelementptr inbounds %struct.mlx5_esw_functions, %struct.mlx5_esw_functions* %esw_funcs44, i32 0, i32 1, !dbg !19856
  %31 = load i16, i16* %num_vfs45, align 8, !dbg !19856
  %conv46 = zext i16 %31 to i32, !dbg !19853
  %cmp47 = icmp sgt i32 %conv46, 0, !dbg !19857
  br i1 %cmp47, label %if.then49, label %if.else, !dbg !19858

if.then49:                                        ; preds = %if.end
  %32 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !19859
  %33 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !19861
  %esw_funcs50 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %33, i32 0, i32 17, !dbg !19862
  %num_vfs51 = getelementptr inbounds %struct.mlx5_esw_functions, %struct.mlx5_esw_functions* %esw_funcs50, i32 0, i32 1, !dbg !19863
  %34 = load i16, i16* %num_vfs51, align 8, !dbg !19863
  call void @mlx5_eswitch_unload_vf_vports(%struct.mlx5_eswitch* %32, i16 zeroext %34) #8, !dbg !19864
  br label %if.end56, !dbg !19865

if.else:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %err, metadata !19866, metadata !DIExpression()), !dbg !19868
  %35 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !19869
  %36 = load i16, i16* %new_num_vfs, align 2, !dbg !19870
  %call52 = call i32 @mlx5_eswitch_load_vf_vports(%struct.mlx5_eswitch* %35, i16 zeroext %36, i32 1) #8, !dbg !19871
  store i32 %call52, i32* %err, align 4, !dbg !19872
  %37 = load i32, i32* %err, align 4, !dbg !19873
  %tobool53 = icmp ne i32 %37, 0, !dbg !19873
  br i1 %tobool53, label %if.then54, label %if.end55, !dbg !19875

if.then54:                                        ; preds = %if.else
  br label %return, !dbg !19876

if.end55:                                         ; preds = %if.else
  br label %if.end56

if.end56:                                         ; preds = %if.end55, %if.then49
  %38 = load i16, i16* %new_num_vfs, align 2, !dbg !19877
  %39 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !19878
  %esw_funcs57 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %39, i32 0, i32 17, !dbg !19879
  %num_vfs58 = getelementptr inbounds %struct.mlx5_esw_functions, %struct.mlx5_esw_functions* %esw_funcs57, i32 0, i32 1, !dbg !19880
  store i16 %38, i16* %num_vfs58, align 8, !dbg !19881
  br label %return, !dbg !19882

return:                                           ; preds = %if.end56, %if.then54, %if.then
  ret void, !dbg !19882
}

; Function Attrs: noredzone
declare dso_local void @mlx5_eswitch_unload_vf_vports(%struct.mlx5_eswitch*, i16 zeroext) #5

; Function Attrs: noredzone
declare dso_local i32 @mlx5_eswitch_load_vf_vports(%struct.mlx5_eswitch*, i16 zeroext, i32) #5

; Function Attrs: noredzone
declare dso_local zeroext i1 @queue_work_on(i32, %struct.workqueue_struct*, %struct.work_struct*) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @mlx5_core_is_ecpf_esw_manager(%struct.mlx5_core_dev* %dev) #0 !dbg !19883 {
entry:
  %dev.addr = alloca %struct.mlx5_core_dev*, align 8
  store %struct.mlx5_core_dev* %dev, %struct.mlx5_core_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_core_dev** %dev.addr, metadata !19884, metadata !DIExpression()), !dbg !19885
  %0 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !19886
  %caps = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %0, i32 0, i32 9, !dbg !19887
  %embedded_cpu = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps, i32 0, i32 6, !dbg !19888
  %1 = load i8, i8* %embedded_cpu, align 8, !dbg !19888
  %conv = zext i8 %1 to i32, !dbg !19886
  %tobool = icmp ne i32 %conv, 0, !dbg !19886
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !19889

land.rhs:                                         ; preds = %entry
  %2 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !19890
  %caps1 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %2, i32 0, i32 9, !dbg !19890
  %hca_cur = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps1, i32 0, i32 0, !dbg !19890
  %arrayidx = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur, i64 0, i64 0, !dbg !19890
  %arraydecay = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx, i64 0, i64 0, !dbg !19890
  %add.ptr = getelementptr i32, i32* %arraydecay, i64 13, !dbg !19890
  %3 = load i32, i32* %add.ptr, align 4, !dbg !19890
  %4 = call i1 @llvm.is.constant.i32(i32 %3), !dbg !19890
  br i1 %4, label %cond.true, label %cond.false, !dbg !19890

cond.true:                                        ; preds = %land.rhs
  %5 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !19890
  %caps2 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %5, i32 0, i32 9, !dbg !19890
  %hca_cur3 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps2, i32 0, i32 0, !dbg !19890
  %arrayidx4 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur3, i64 0, i64 0, !dbg !19890
  %arraydecay5 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx4, i64 0, i64 0, !dbg !19890
  %add.ptr6 = getelementptr i32, i32* %arraydecay5, i64 13, !dbg !19890
  %6 = load i32, i32* %add.ptr6, align 4, !dbg !19890
  %and = and i32 %6, 255, !dbg !19890
  %shl = shl i32 %and, 24, !dbg !19890
  %7 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !19890
  %caps7 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %7, i32 0, i32 9, !dbg !19890
  %hca_cur8 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps7, i32 0, i32 0, !dbg !19890
  %arrayidx9 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur8, i64 0, i64 0, !dbg !19890
  %arraydecay10 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx9, i64 0, i64 0, !dbg !19890
  %add.ptr11 = getelementptr i32, i32* %arraydecay10, i64 13, !dbg !19890
  %8 = load i32, i32* %add.ptr11, align 4, !dbg !19890
  %and12 = and i32 %8, 65280, !dbg !19890
  %shl13 = shl i32 %and12, 8, !dbg !19890
  %or = or i32 %shl, %shl13, !dbg !19890
  %9 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !19890
  %caps14 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %9, i32 0, i32 9, !dbg !19890
  %hca_cur15 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps14, i32 0, i32 0, !dbg !19890
  %arrayidx16 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur15, i64 0, i64 0, !dbg !19890
  %arraydecay17 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx16, i64 0, i64 0, !dbg !19890
  %add.ptr18 = getelementptr i32, i32* %arraydecay17, i64 13, !dbg !19890
  %10 = load i32, i32* %add.ptr18, align 4, !dbg !19890
  %and19 = and i32 %10, 16711680, !dbg !19890
  %shr = lshr i32 %and19, 8, !dbg !19890
  %or20 = or i32 %or, %shr, !dbg !19890
  %11 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !19890
  %caps21 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %11, i32 0, i32 9, !dbg !19890
  %hca_cur22 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps21, i32 0, i32 0, !dbg !19890
  %arrayidx23 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur22, i64 0, i64 0, !dbg !19890
  %arraydecay24 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx23, i64 0, i64 0, !dbg !19890
  %add.ptr25 = getelementptr i32, i32* %arraydecay24, i64 13, !dbg !19890
  %12 = load i32, i32* %add.ptr25, align 4, !dbg !19890
  %and26 = and i32 %12, -16777216, !dbg !19890
  %shr27 = lshr i32 %and26, 24, !dbg !19890
  %or28 = or i32 %or20, %shr27, !dbg !19890
  br label %cond.end, !dbg !19890

cond.false:                                       ; preds = %land.rhs
  %13 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !19890
  %caps29 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %13, i32 0, i32 9, !dbg !19890
  %hca_cur30 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps29, i32 0, i32 0, !dbg !19890
  %arrayidx31 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur30, i64 0, i64 0, !dbg !19890
  %arraydecay32 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx31, i64 0, i64 0, !dbg !19890
  %add.ptr33 = getelementptr i32, i32* %arraydecay32, i64 13, !dbg !19890
  %14 = load i32, i32* %add.ptr33, align 4, !dbg !19890
  %call = call i32 @__fswab32(i32 %14) #10, !dbg !19890
  br label %cond.end, !dbg !19890

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %or28, %cond.true ], [ %call, %cond.false ], !dbg !19890
  %shr34 = lshr i32 %cond, 24, !dbg !19890
  %and35 = and i32 %shr34, 1, !dbg !19890
  %tobool36 = icmp ne i32 %and35, 0, !dbg !19889
  br label %land.end

land.end:                                         ; preds = %cond.end, %entry
  %15 = phi i1 [ false, %entry ], [ %tobool36, %cond.end ], !dbg !19891
  ret i1 %15, !dbg !19892
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @esw_offloads_vport_metadata_setup(%struct.mlx5_eswitch* %esw, %struct.mlx5_vport* %vport) #0 !dbg !19893 {
entry:
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  %vport.addr = alloca %struct.mlx5_vport*, align 8
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !19894, metadata !DIExpression()), !dbg !19895
  store %struct.mlx5_vport* %vport, %struct.mlx5_vport** %vport.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_vport** %vport.addr, metadata !19896, metadata !DIExpression()), !dbg !19897
  %0 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !19898
  %call = call i32 @mlx5_esw_match_metadata_alloc(%struct.mlx5_eswitch* %0) #8, !dbg !19899
  %1 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport.addr, align 8, !dbg !19900
  %default_metadata = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %1, i32 0, i32 9, !dbg !19901
  store i32 %call, i32* %default_metadata, align 8, !dbg !19902
  %2 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport.addr, align 8, !dbg !19903
  %default_metadata1 = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %2, i32 0, i32 9, !dbg !19904
  %3 = load i32, i32* %default_metadata1, align 8, !dbg !19904
  %4 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport.addr, align 8, !dbg !19905
  %metadata = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %4, i32 0, i32 10, !dbg !19906
  store i32 %3, i32* %metadata, align 4, !dbg !19907
  %5 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport.addr, align 8, !dbg !19908
  %metadata2 = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %5, i32 0, i32 10, !dbg !19909
  %6 = load i32, i32* %metadata2, align 4, !dbg !19909
  %tobool = icmp ne i32 %6, 0, !dbg !19908
  %7 = zext i1 %tobool to i64, !dbg !19908
  %cond = select i1 %tobool, i32 0, i32 -28, !dbg !19908
  ret i32 %cond, !dbg !19910
}

; Function Attrs: noredzone
declare dso_local i32 @mlx5_cmd_exec(%struct.mlx5_core_dev*, i8*, i32, i8*, i32) #5

; Function Attrs: noredzone
declare dso_local i32 @mlx5_eswitch_modify_esw_vport_context(%struct.mlx5_core_dev*, i16 zeroext, i1 zeroext, i8*) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__hash_init(%struct.hlist_head* %ht, i32 %sz) #0 !dbg !19911 {
entry:
  %ht.addr = alloca %struct.hlist_head*, align 8
  %sz.addr = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.hlist_head* %ht, %struct.hlist_head** %ht.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.hlist_head** %ht.addr, metadata !19914, metadata !DIExpression()), !dbg !19915
  store i32 %sz, i32* %sz.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sz.addr, metadata !19916, metadata !DIExpression()), !dbg !19917
  call void @llvm.dbg.declare(metadata i32* %i, metadata !19918, metadata !DIExpression()), !dbg !19919
  store i32 0, i32* %i, align 4, !dbg !19920
  br label %for.cond, !dbg !19922

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !19923
  %1 = load i32, i32* %sz.addr, align 4, !dbg !19925
  %cmp = icmp ult i32 %0, %1, !dbg !19926
  br i1 %cmp, label %for.body, label %for.end, !dbg !19927

for.body:                                         ; preds = %for.cond
  %2 = load %struct.hlist_head*, %struct.hlist_head** %ht.addr, align 8, !dbg !19928
  %3 = load i32, i32* %i, align 4, !dbg !19928
  %idxprom = zext i32 %3 to i64, !dbg !19928
  %arrayidx = getelementptr %struct.hlist_head, %struct.hlist_head* %2, i64 %idxprom, !dbg !19928
  %first = getelementptr inbounds %struct.hlist_head, %struct.hlist_head* %arrayidx, i32 0, i32 0, !dbg !19928
  store %struct.hlist_node* null, %struct.hlist_node** %first, align 8, !dbg !19928
  br label %for.inc, !dbg !19928

for.inc:                                          ; preds = %for.body
  %4 = load i32, i32* %i, align 4, !dbg !19929
  %inc = add i32 %4, 1, !dbg !19929
  store i32 %inc, i32* %i, align 4, !dbg !19929
  br label %for.cond, !dbg !19930, !llvm.loop !19931

for.end:                                          ; preds = %for.cond
  ret void, !dbg !19933
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @esw_create_uplink_offloads_acl_tables(%struct.mlx5_eswitch* %esw) #0 !dbg !19934 {
entry:
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  %vport = alloca %struct.mlx5_vport*, align 8
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !19935, metadata !DIExpression()), !dbg !19936
  call void @llvm.dbg.declare(metadata %struct.mlx5_vport** %vport, metadata !19937, metadata !DIExpression()), !dbg !19938
  %0 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !19939
  %call = call %struct.mlx5_vport* @mlx5_eswitch_get_vport(%struct.mlx5_eswitch* %0, i16 zeroext -1) #8, !dbg !19940
  store %struct.mlx5_vport* %call, %struct.mlx5_vport** %vport, align 8, !dbg !19941
  %1 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !19942
  %2 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport, align 8, !dbg !19943
  %call1 = call i32 @esw_vport_create_offloads_acl_tables(%struct.mlx5_eswitch* %1, %struct.mlx5_vport* %2) #8, !dbg !19944
  ret i32 %call1, !dbg !19945
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @esw_create_offloads_table(%struct.mlx5_eswitch* %esw) #0 !dbg !19946 {
entry:
  %retval = alloca i32, align 4
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  %ft_attr = alloca %struct.mlx5_flow_table_attr, align 8
  %dev = alloca %struct.mlx5_core_dev*, align 8
  %ft_offloads = alloca %struct.mlx5_flow_table*, align 8
  %ns = alloca %struct.mlx5_flow_namespace*, align 8
  %err = alloca i32, align 4
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !19947, metadata !DIExpression()), !dbg !19948
  call void @llvm.dbg.declare(metadata %struct.mlx5_flow_table_attr* %ft_attr, metadata !19949, metadata !DIExpression()), !dbg !19950
  %0 = bitcast %struct.mlx5_flow_table_attr* %ft_attr to i8*, !dbg !19950
  call void @llvm.memset.p0i8.i64(i8* align 8 %0, i8 0, i64 32, i1 false), !dbg !19950
  call void @llvm.dbg.declare(metadata %struct.mlx5_core_dev** %dev, metadata !19951, metadata !DIExpression()), !dbg !19952
  %1 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !19953
  %dev1 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %1, i32 0, i32 0, !dbg !19954
  %2 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev1, align 8, !dbg !19954
  store %struct.mlx5_core_dev* %2, %struct.mlx5_core_dev** %dev, align 8, !dbg !19952
  call void @llvm.dbg.declare(metadata %struct.mlx5_flow_table** %ft_offloads, metadata !19955, metadata !DIExpression()), !dbg !19956
  call void @llvm.dbg.declare(metadata %struct.mlx5_flow_namespace** %ns, metadata !19957, metadata !DIExpression()), !dbg !19958
  call void @llvm.dbg.declare(metadata i32* %err, metadata !19959, metadata !DIExpression()), !dbg !19960
  store i32 0, i32* %err, align 4, !dbg !19960
  %3 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !19961
  %call = call %struct.mlx5_flow_namespace* @mlx5_get_flow_namespace(%struct.mlx5_core_dev* %3, i32 2) #8, !dbg !19962
  store %struct.mlx5_flow_namespace* %call, %struct.mlx5_flow_namespace** %ns, align 8, !dbg !19963
  %4 = load %struct.mlx5_flow_namespace*, %struct.mlx5_flow_namespace** %ns, align 8, !dbg !19964
  %tobool = icmp ne %struct.mlx5_flow_namespace* %4, null, !dbg !19964
  br i1 %tobool, label %if.end, label %if.then, !dbg !19966

if.then:                                          ; preds = %entry
  %5 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !19967
  %dev2 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %5, i32 0, i32 0, !dbg !19967
  %6 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev2, align 8, !dbg !19967
  %device = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %6, i32 0, i32 0, !dbg !19967
  %7 = load %struct.device*, %struct.device** %device, align 8, !dbg !19967
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %7, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.12, i64 0, i64 0)) #9, !dbg !19967
  store i32 -95, i32* %retval, align 4, !dbg !19969
  br label %return, !dbg !19969

if.end:                                           ; preds = %entry
  %8 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !19970
  %total_vports = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %8, i32 0, i32 8, !dbg !19971
  %9 = load i32, i32* %total_vports, align 4, !dbg !19971
  %add = add i32 %9, 2, !dbg !19972
  %max_fte = getelementptr inbounds %struct.mlx5_flow_table_attr, %struct.mlx5_flow_table_attr* %ft_attr, i32 0, i32 1, !dbg !19973
  store i32 %add, i32* %max_fte, align 4, !dbg !19974
  %prio = getelementptr inbounds %struct.mlx5_flow_table_attr, %struct.mlx5_flow_table_attr* %ft_attr, i32 0, i32 0, !dbg !19975
  store i32 1, i32* %prio, align 8, !dbg !19976
  %10 = load %struct.mlx5_flow_namespace*, %struct.mlx5_flow_namespace** %ns, align 8, !dbg !19977
  %call3 = call %struct.mlx5_flow_table* @mlx5_create_flow_table(%struct.mlx5_flow_namespace* %10, %struct.mlx5_flow_table_attr* %ft_attr) #8, !dbg !19978
  store %struct.mlx5_flow_table* %call3, %struct.mlx5_flow_table** %ft_offloads, align 8, !dbg !19979
  %11 = load %struct.mlx5_flow_table*, %struct.mlx5_flow_table** %ft_offloads, align 8, !dbg !19980
  %12 = bitcast %struct.mlx5_flow_table* %11 to i8*, !dbg !19980
  %call4 = call zeroext i1 @IS_ERR(i8* %12) #8, !dbg !19982
  br i1 %call4, label %if.then5, label %if.end9, !dbg !19983

if.then5:                                         ; preds = %if.end
  %13 = load %struct.mlx5_flow_table*, %struct.mlx5_flow_table** %ft_offloads, align 8, !dbg !19984
  %14 = bitcast %struct.mlx5_flow_table* %13 to i8*, !dbg !19984
  %call6 = call i64 @PTR_ERR(i8* %14) #8, !dbg !19986
  %conv = trunc i64 %call6 to i32, !dbg !19986
  store i32 %conv, i32* %err, align 4, !dbg !19987
  %15 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !19988
  %dev7 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %15, i32 0, i32 0, !dbg !19988
  %16 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev7, align 8, !dbg !19988
  %device8 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %16, i32 0, i32 0, !dbg !19988
  %17 = load %struct.device*, %struct.device** %device8, align 8, !dbg !19988
  %18 = load i32, i32* %err, align 4, !dbg !19988
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %17, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.13, i64 0, i64 0), i32 %18) #9, !dbg !19988
  %19 = load i32, i32* %err, align 4, !dbg !19989
  store i32 %19, i32* %retval, align 4, !dbg !19990
  br label %return, !dbg !19990

if.end9:                                          ; preds = %if.end
  %20 = load %struct.mlx5_flow_table*, %struct.mlx5_flow_table** %ft_offloads, align 8, !dbg !19991
  %21 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !19992
  %offloads = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %21, i32 0, i32 13, !dbg !19993
  %ft_offloads10 = getelementptr inbounds %struct.mlx5_esw_offload, %struct.mlx5_esw_offload* %offloads, i32 0, i32 3, !dbg !19994
  store %struct.mlx5_flow_table* %20, %struct.mlx5_flow_table** %ft_offloads10, align 8, !dbg !19995
  store i32 0, i32* %retval, align 4, !dbg !19996
  br label %return, !dbg !19996

return:                                           ; preds = %if.end9, %if.then5, %if.then
  %22 = load i32, i32* %retval, align 4, !dbg !19997
  ret i32 %22, !dbg !19997
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @esw_create_restore_table(%struct.mlx5_eswitch* %esw) #0 !dbg !19998 {
entry:
  %retval = alloca i32, align 4
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  %modact = alloca [8 x i8], align 1
  %inlen = alloca i32, align 4
  %ft_attr = alloca %struct.mlx5_flow_table_attr, align 8
  %dev = alloca %struct.mlx5_core_dev*, align 8
  %ns = alloca %struct.mlx5_flow_namespace*, align 8
  %mod_hdr = alloca %struct.mlx5_modify_hdr*, align 8
  %match_criteria = alloca i8*, align 8
  %misc = alloca i8*, align 8
  %ft = alloca %struct.mlx5_flow_table*, align 8
  %g = alloca %struct.mlx5_flow_group*, align 8
  %flow_group_in = alloca i32*, align 8
  %err = alloca i32, align 4
  %_v = alloca i32, align 4
  %_v182 = alloca i32, align 4
  %_v354 = alloca i32, align 4
  %_v527 = alloca i32, align 4
  %_v712 = alloca i32, align 4
  %_v926 = alloca i32, align 4
  %_v1141 = alloca i32, align 4
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !19999, metadata !DIExpression()), !dbg !20000
  call void @llvm.dbg.declare(metadata [8 x i8]* %modact, metadata !20001, metadata !DIExpression()), !dbg !20002
  %0 = bitcast [8 x i8]* %modact to i8*, !dbg !20002
  call void @llvm.memset.p0i8.i64(i8* align 1 %0, i8 0, i64 8, i1 false), !dbg !20002
  call void @llvm.dbg.declare(metadata i32* %inlen, metadata !20003, metadata !DIExpression()), !dbg !20004
  store i32 1024, i32* %inlen, align 4, !dbg !20004
  call void @llvm.dbg.declare(metadata %struct.mlx5_flow_table_attr* %ft_attr, metadata !20005, metadata !DIExpression()), !dbg !20006
  %1 = bitcast %struct.mlx5_flow_table_attr* %ft_attr to i8*, !dbg !20006
  call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 32, i1 false), !dbg !20006
  call void @llvm.dbg.declare(metadata %struct.mlx5_core_dev** %dev, metadata !20007, metadata !DIExpression()), !dbg !20008
  %2 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !20009
  %dev1 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %2, i32 0, i32 0, !dbg !20010
  %3 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev1, align 8, !dbg !20010
  store %struct.mlx5_core_dev* %3, %struct.mlx5_core_dev** %dev, align 8, !dbg !20008
  call void @llvm.dbg.declare(metadata %struct.mlx5_flow_namespace** %ns, metadata !20011, metadata !DIExpression()), !dbg !20012
  call void @llvm.dbg.declare(metadata %struct.mlx5_modify_hdr** %mod_hdr, metadata !20013, metadata !DIExpression()), !dbg !20014
  call void @llvm.dbg.declare(metadata i8** %match_criteria, metadata !20015, metadata !DIExpression()), !dbg !20016
  call void @llvm.dbg.declare(metadata i8** %misc, metadata !20017, metadata !DIExpression()), !dbg !20018
  call void @llvm.dbg.declare(metadata %struct.mlx5_flow_table** %ft, metadata !20019, metadata !DIExpression()), !dbg !20020
  call void @llvm.dbg.declare(metadata %struct.mlx5_flow_group** %g, metadata !20021, metadata !DIExpression()), !dbg !20022
  call void @llvm.dbg.declare(metadata i32** %flow_group_in, metadata !20023, metadata !DIExpression()), !dbg !20024
  call void @llvm.dbg.declare(metadata i32* %err, metadata !20025, metadata !DIExpression()), !dbg !20026
  store i32 0, i32* %err, align 4, !dbg !20026
  %4 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !20027
  %call = call zeroext i1 @mlx5_eswitch_reg_c1_loopback_supported(%struct.mlx5_eswitch* %4) #8, !dbg !20029
  br i1 %call, label %if.end, label %if.then, !dbg !20030

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !20031
  br label %return, !dbg !20031

if.end:                                           ; preds = %entry
  %5 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !20032
  %call2 = call %struct.mlx5_flow_namespace* @mlx5_get_flow_namespace(%struct.mlx5_core_dev* %5, i32 2) #8, !dbg !20033
  store %struct.mlx5_flow_namespace* %call2, %struct.mlx5_flow_namespace** %ns, align 8, !dbg !20034
  %6 = load %struct.mlx5_flow_namespace*, %struct.mlx5_flow_namespace** %ns, align 8, !dbg !20035
  %tobool = icmp ne %struct.mlx5_flow_namespace* %6, null, !dbg !20035
  br i1 %tobool, label %if.end5, label %if.then3, !dbg !20037

if.then3:                                         ; preds = %if.end
  %7 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !20038
  %dev4 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %7, i32 0, i32 0, !dbg !20038
  %8 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev4, align 8, !dbg !20038
  %device = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %8, i32 0, i32 0, !dbg !20038
  %9 = load %struct.device*, %struct.device** %device, align 8, !dbg !20038
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %9, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.12, i64 0, i64 0)) #9, !dbg !20038
  store i32 -95, i32* %retval, align 4, !dbg !20040
  br label %return, !dbg !20040

if.end5:                                          ; preds = %if.end
  %10 = load i32, i32* %inlen, align 4, !dbg !20041
  %conv = sext i32 %10 to i64, !dbg !20041
  %call6 = call i8* @kvzalloc(i64 %conv, i32 3264) #8, !dbg !20042
  %11 = bitcast i8* %call6 to i32*, !dbg !20042
  store i32* %11, i32** %flow_group_in, align 8, !dbg !20043
  %12 = load i32*, i32** %flow_group_in, align 8, !dbg !20044
  %tobool7 = icmp ne i32* %12, null, !dbg !20044
  br i1 %tobool7, label %if.end9, label %if.then8, !dbg !20046

if.then8:                                         ; preds = %if.end5
  store i32 -12, i32* %err, align 4, !dbg !20047
  br label %out_free, !dbg !20049

if.end9:                                          ; preds = %if.end5
  %max_fte = getelementptr inbounds %struct.mlx5_flow_table_attr, %struct.mlx5_flow_table_attr* %ft_attr, i32 0, i32 1, !dbg !20050
  store i32 65536, i32* %max_fte, align 4, !dbg !20051
  %13 = load %struct.mlx5_flow_namespace*, %struct.mlx5_flow_namespace** %ns, align 8, !dbg !20052
  %call10 = call %struct.mlx5_flow_table* @mlx5_create_flow_table(%struct.mlx5_flow_namespace* %13, %struct.mlx5_flow_table_attr* %ft_attr) #8, !dbg !20053
  store %struct.mlx5_flow_table* %call10, %struct.mlx5_flow_table** %ft, align 8, !dbg !20054
  %14 = load %struct.mlx5_flow_table*, %struct.mlx5_flow_table** %ft, align 8, !dbg !20055
  %15 = bitcast %struct.mlx5_flow_table* %14 to i8*, !dbg !20055
  %call11 = call zeroext i1 @IS_ERR(i8* %15) #8, !dbg !20057
  br i1 %call11, label %if.then12, label %if.end17, !dbg !20058

if.then12:                                        ; preds = %if.end9
  %16 = load %struct.mlx5_flow_table*, %struct.mlx5_flow_table** %ft, align 8, !dbg !20059
  %17 = bitcast %struct.mlx5_flow_table* %16 to i8*, !dbg !20059
  %call13 = call i64 @PTR_ERR(i8* %17) #8, !dbg !20061
  %conv14 = trunc i64 %call13 to i32, !dbg !20061
  store i32 %conv14, i32* %err, align 4, !dbg !20062
  %18 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !20063
  %dev15 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %18, i32 0, i32 0, !dbg !20063
  %19 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev15, align 8, !dbg !20063
  %device16 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %19, i32 0, i32 0, !dbg !20063
  %20 = load %struct.device*, %struct.device** %device16, align 8, !dbg !20063
  %21 = load i32, i32* %err, align 4, !dbg !20063
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %20, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.14, i64 0, i64 0), i32 %21) #9, !dbg !20063
  br label %out_free, !dbg !20064

if.end17:                                         ; preds = %if.end9
  %22 = load i32*, i32** %flow_group_in, align 8, !dbg !20065
  %23 = bitcast i32* %22 to i8*, !dbg !20066
  %24 = load i32, i32* %inlen, align 4, !dbg !20067
  %conv18 = sext i32 %24 to i64, !dbg !20067
  call void @llvm.memset.p0i8.i64(i8* align 4 %23, i8 0, i64 %conv18, i1 false), !dbg !20066
  %25 = load i32*, i32** %flow_group_in, align 8, !dbg !20068
  %26 = bitcast i32* %25 to i8*, !dbg !20068
  %add.ptr = getelementptr i8, i8* %26, i64 64, !dbg !20068
  store i8* %add.ptr, i8** %match_criteria, align 8, !dbg !20069
  %27 = load i8*, i8** %match_criteria, align 8, !dbg !20070
  %add.ptr19 = getelementptr i8, i8* %27, i64 192, !dbg !20070
  store i8* %add.ptr19, i8** %misc, align 8, !dbg !20071
  br label %do.body, !dbg !20072

do.body:                                          ; preds = %if.end17
  call void @llvm.dbg.declare(metadata i32* %_v, metadata !20073, metadata !DIExpression()), !dbg !20075
  store i32 65535, i32* %_v, align 4, !dbg !20075
  br label %do.body20, !dbg !20075

do.body20:                                        ; preds = %do.body
  br label %do.end, !dbg !20076

do.end:                                           ; preds = %do.body20
  %28 = load i8*, i8** %misc, align 8, !dbg !20075
  %29 = bitcast i8* %28 to i32*, !dbg !20075
  %add.ptr21 = getelementptr i32, i32* %29, i64 11, !dbg !20075
  %30 = load i32, i32* %add.ptr21, align 4, !dbg !20075
  %31 = call i1 @llvm.is.constant.i32(i32 %30), !dbg !20075
  br i1 %31, label %cond.true, label %cond.false, !dbg !20075

cond.true:                                        ; preds = %do.end
  %32 = load i8*, i8** %misc, align 8, !dbg !20075
  %33 = bitcast i8* %32 to i32*, !dbg !20075
  %add.ptr22 = getelementptr i32, i32* %33, i64 11, !dbg !20075
  %34 = load i32, i32* %add.ptr22, align 4, !dbg !20075
  %and = and i32 %34, 255, !dbg !20075
  %shl = shl i32 %and, 24, !dbg !20075
  %35 = load i8*, i8** %misc, align 8, !dbg !20075
  %36 = bitcast i8* %35 to i32*, !dbg !20075
  %add.ptr23 = getelementptr i32, i32* %36, i64 11, !dbg !20075
  %37 = load i32, i32* %add.ptr23, align 4, !dbg !20075
  %and24 = and i32 %37, 65280, !dbg !20075
  %shl25 = shl i32 %and24, 8, !dbg !20075
  %or = or i32 %shl, %shl25, !dbg !20075
  %38 = load i8*, i8** %misc, align 8, !dbg !20075
  %39 = bitcast i8* %38 to i32*, !dbg !20075
  %add.ptr26 = getelementptr i32, i32* %39, i64 11, !dbg !20075
  %40 = load i32, i32* %add.ptr26, align 4, !dbg !20075
  %and27 = and i32 %40, 16711680, !dbg !20075
  %shr = lshr i32 %and27, 8, !dbg !20075
  %or28 = or i32 %or, %shr, !dbg !20075
  %41 = load i8*, i8** %misc, align 8, !dbg !20075
  %42 = bitcast i8* %41 to i32*, !dbg !20075
  %add.ptr29 = getelementptr i32, i32* %42, i64 11, !dbg !20075
  %43 = load i32, i32* %add.ptr29, align 4, !dbg !20075
  %and30 = and i32 %43, -16777216, !dbg !20075
  %shr31 = lshr i32 %and30, 24, !dbg !20075
  %or32 = or i32 %or28, %shr31, !dbg !20075
  br label %cond.end, !dbg !20075

cond.false:                                       ; preds = %do.end
  %44 = load i8*, i8** %misc, align 8, !dbg !20075
  %45 = bitcast i8* %44 to i32*, !dbg !20075
  %add.ptr33 = getelementptr i32, i32* %45, i64 11, !dbg !20075
  %46 = load i32, i32* %add.ptr33, align 4, !dbg !20075
  %call34 = call i32 @__fswab32(i32 %46) #10, !dbg !20075
  br label %cond.end, !dbg !20075

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %or32, %cond.true ], [ %call34, %cond.false ], !dbg !20075
  %and35 = and i32 %cond, 0, !dbg !20075
  %47 = load i32, i32* %_v, align 4, !dbg !20075
  %shl36 = shl i32 %47, 0, !dbg !20075
  %or37 = or i32 %and35, %shl36, !dbg !20075
  %48 = call i1 @llvm.is.constant.i32(i32 %or37), !dbg !20075
  br i1 %48, label %cond.true38, label %cond.false150, !dbg !20075

cond.true38:                                      ; preds = %cond.end
  %49 = load i8*, i8** %misc, align 8, !dbg !20075
  %50 = bitcast i8* %49 to i32*, !dbg !20075
  %add.ptr39 = getelementptr i32, i32* %50, i64 11, !dbg !20075
  %51 = load i32, i32* %add.ptr39, align 4, !dbg !20075
  %52 = call i1 @llvm.is.constant.i32(i32 %51), !dbg !20075
  br i1 %52, label %cond.true40, label %cond.false56, !dbg !20075

cond.true40:                                      ; preds = %cond.true38
  %53 = load i8*, i8** %misc, align 8, !dbg !20075
  %54 = bitcast i8* %53 to i32*, !dbg !20075
  %add.ptr41 = getelementptr i32, i32* %54, i64 11, !dbg !20075
  %55 = load i32, i32* %add.ptr41, align 4, !dbg !20075
  %and42 = and i32 %55, 255, !dbg !20075
  %shl43 = shl i32 %and42, 24, !dbg !20075
  %56 = load i8*, i8** %misc, align 8, !dbg !20075
  %57 = bitcast i8* %56 to i32*, !dbg !20075
  %add.ptr44 = getelementptr i32, i32* %57, i64 11, !dbg !20075
  %58 = load i32, i32* %add.ptr44, align 4, !dbg !20075
  %and45 = and i32 %58, 65280, !dbg !20075
  %shl46 = shl i32 %and45, 8, !dbg !20075
  %or47 = or i32 %shl43, %shl46, !dbg !20075
  %59 = load i8*, i8** %misc, align 8, !dbg !20075
  %60 = bitcast i8* %59 to i32*, !dbg !20075
  %add.ptr48 = getelementptr i32, i32* %60, i64 11, !dbg !20075
  %61 = load i32, i32* %add.ptr48, align 4, !dbg !20075
  %and49 = and i32 %61, 16711680, !dbg !20075
  %shr50 = lshr i32 %and49, 8, !dbg !20075
  %or51 = or i32 %or47, %shr50, !dbg !20075
  %62 = load i8*, i8** %misc, align 8, !dbg !20075
  %63 = bitcast i8* %62 to i32*, !dbg !20075
  %add.ptr52 = getelementptr i32, i32* %63, i64 11, !dbg !20075
  %64 = load i32, i32* %add.ptr52, align 4, !dbg !20075
  %and53 = and i32 %64, -16777216, !dbg !20075
  %shr54 = lshr i32 %and53, 24, !dbg !20075
  %or55 = or i32 %or51, %shr54, !dbg !20075
  br label %cond.end59, !dbg !20075

cond.false56:                                     ; preds = %cond.true38
  %65 = load i8*, i8** %misc, align 8, !dbg !20075
  %66 = bitcast i8* %65 to i32*, !dbg !20075
  %add.ptr57 = getelementptr i32, i32* %66, i64 11, !dbg !20075
  %67 = load i32, i32* %add.ptr57, align 4, !dbg !20075
  %call58 = call i32 @__fswab32(i32 %67) #10, !dbg !20075
  br label %cond.end59, !dbg !20075

cond.end59:                                       ; preds = %cond.false56, %cond.true40
  %cond60 = phi i32 [ %or55, %cond.true40 ], [ %call58, %cond.false56 ], !dbg !20075
  %and61 = and i32 %cond60, 0, !dbg !20075
  %68 = load i32, i32* %_v, align 4, !dbg !20075
  %shl62 = shl i32 %68, 0, !dbg !20075
  %or63 = or i32 %and61, %shl62, !dbg !20075
  %and64 = and i32 %or63, 255, !dbg !20075
  %shl65 = shl i32 %and64, 24, !dbg !20075
  %69 = load i8*, i8** %misc, align 8, !dbg !20075
  %70 = bitcast i8* %69 to i32*, !dbg !20075
  %add.ptr66 = getelementptr i32, i32* %70, i64 11, !dbg !20075
  %71 = load i32, i32* %add.ptr66, align 4, !dbg !20075
  %72 = call i1 @llvm.is.constant.i32(i32 %71), !dbg !20075
  br i1 %72, label %cond.true67, label %cond.false83, !dbg !20075

cond.true67:                                      ; preds = %cond.end59
  %73 = load i8*, i8** %misc, align 8, !dbg !20075
  %74 = bitcast i8* %73 to i32*, !dbg !20075
  %add.ptr68 = getelementptr i32, i32* %74, i64 11, !dbg !20075
  %75 = load i32, i32* %add.ptr68, align 4, !dbg !20075
  %and69 = and i32 %75, 255, !dbg !20075
  %shl70 = shl i32 %and69, 24, !dbg !20075
  %76 = load i8*, i8** %misc, align 8, !dbg !20075
  %77 = bitcast i8* %76 to i32*, !dbg !20075
  %add.ptr71 = getelementptr i32, i32* %77, i64 11, !dbg !20075
  %78 = load i32, i32* %add.ptr71, align 4, !dbg !20075
  %and72 = and i32 %78, 65280, !dbg !20075
  %shl73 = shl i32 %and72, 8, !dbg !20075
  %or74 = or i32 %shl70, %shl73, !dbg !20075
  %79 = load i8*, i8** %misc, align 8, !dbg !20075
  %80 = bitcast i8* %79 to i32*, !dbg !20075
  %add.ptr75 = getelementptr i32, i32* %80, i64 11, !dbg !20075
  %81 = load i32, i32* %add.ptr75, align 4, !dbg !20075
  %and76 = and i32 %81, 16711680, !dbg !20075
  %shr77 = lshr i32 %and76, 8, !dbg !20075
  %or78 = or i32 %or74, %shr77, !dbg !20075
  %82 = load i8*, i8** %misc, align 8, !dbg !20075
  %83 = bitcast i8* %82 to i32*, !dbg !20075
  %add.ptr79 = getelementptr i32, i32* %83, i64 11, !dbg !20075
  %84 = load i32, i32* %add.ptr79, align 4, !dbg !20075
  %and80 = and i32 %84, -16777216, !dbg !20075
  %shr81 = lshr i32 %and80, 24, !dbg !20075
  %or82 = or i32 %or78, %shr81, !dbg !20075
  br label %cond.end86, !dbg !20075

cond.false83:                                     ; preds = %cond.end59
  %85 = load i8*, i8** %misc, align 8, !dbg !20075
  %86 = bitcast i8* %85 to i32*, !dbg !20075
  %add.ptr84 = getelementptr i32, i32* %86, i64 11, !dbg !20075
  %87 = load i32, i32* %add.ptr84, align 4, !dbg !20075
  %call85 = call i32 @__fswab32(i32 %87) #10, !dbg !20075
  br label %cond.end86, !dbg !20075

cond.end86:                                       ; preds = %cond.false83, %cond.true67
  %cond87 = phi i32 [ %or82, %cond.true67 ], [ %call85, %cond.false83 ], !dbg !20075
  %and88 = and i32 %cond87, 0, !dbg !20075
  %88 = load i32, i32* %_v, align 4, !dbg !20075
  %shl89 = shl i32 %88, 0, !dbg !20075
  %or90 = or i32 %and88, %shl89, !dbg !20075
  %and91 = and i32 %or90, 65280, !dbg !20075
  %shl92 = shl i32 %and91, 8, !dbg !20075
  %or93 = or i32 %shl65, %shl92, !dbg !20075
  %89 = load i8*, i8** %misc, align 8, !dbg !20075
  %90 = bitcast i8* %89 to i32*, !dbg !20075
  %add.ptr94 = getelementptr i32, i32* %90, i64 11, !dbg !20075
  %91 = load i32, i32* %add.ptr94, align 4, !dbg !20075
  %92 = call i1 @llvm.is.constant.i32(i32 %91), !dbg !20075
  br i1 %92, label %cond.true95, label %cond.false111, !dbg !20075

cond.true95:                                      ; preds = %cond.end86
  %93 = load i8*, i8** %misc, align 8, !dbg !20075
  %94 = bitcast i8* %93 to i32*, !dbg !20075
  %add.ptr96 = getelementptr i32, i32* %94, i64 11, !dbg !20075
  %95 = load i32, i32* %add.ptr96, align 4, !dbg !20075
  %and97 = and i32 %95, 255, !dbg !20075
  %shl98 = shl i32 %and97, 24, !dbg !20075
  %96 = load i8*, i8** %misc, align 8, !dbg !20075
  %97 = bitcast i8* %96 to i32*, !dbg !20075
  %add.ptr99 = getelementptr i32, i32* %97, i64 11, !dbg !20075
  %98 = load i32, i32* %add.ptr99, align 4, !dbg !20075
  %and100 = and i32 %98, 65280, !dbg !20075
  %shl101 = shl i32 %and100, 8, !dbg !20075
  %or102 = or i32 %shl98, %shl101, !dbg !20075
  %99 = load i8*, i8** %misc, align 8, !dbg !20075
  %100 = bitcast i8* %99 to i32*, !dbg !20075
  %add.ptr103 = getelementptr i32, i32* %100, i64 11, !dbg !20075
  %101 = load i32, i32* %add.ptr103, align 4, !dbg !20075
  %and104 = and i32 %101, 16711680, !dbg !20075
  %shr105 = lshr i32 %and104, 8, !dbg !20075
  %or106 = or i32 %or102, %shr105, !dbg !20075
  %102 = load i8*, i8** %misc, align 8, !dbg !20075
  %103 = bitcast i8* %102 to i32*, !dbg !20075
  %add.ptr107 = getelementptr i32, i32* %103, i64 11, !dbg !20075
  %104 = load i32, i32* %add.ptr107, align 4, !dbg !20075
  %and108 = and i32 %104, -16777216, !dbg !20075
  %shr109 = lshr i32 %and108, 24, !dbg !20075
  %or110 = or i32 %or106, %shr109, !dbg !20075
  br label %cond.end114, !dbg !20075

cond.false111:                                    ; preds = %cond.end86
  %105 = load i8*, i8** %misc, align 8, !dbg !20075
  %106 = bitcast i8* %105 to i32*, !dbg !20075
  %add.ptr112 = getelementptr i32, i32* %106, i64 11, !dbg !20075
  %107 = load i32, i32* %add.ptr112, align 4, !dbg !20075
  %call113 = call i32 @__fswab32(i32 %107) #10, !dbg !20075
  br label %cond.end114, !dbg !20075

cond.end114:                                      ; preds = %cond.false111, %cond.true95
  %cond115 = phi i32 [ %or110, %cond.true95 ], [ %call113, %cond.false111 ], !dbg !20075
  %and116 = and i32 %cond115, 0, !dbg !20075
  %108 = load i32, i32* %_v, align 4, !dbg !20075
  %shl117 = shl i32 %108, 0, !dbg !20075
  %or118 = or i32 %and116, %shl117, !dbg !20075
  %and119 = and i32 %or118, 16711680, !dbg !20075
  %shr120 = lshr i32 %and119, 8, !dbg !20075
  %or121 = or i32 %or93, %shr120, !dbg !20075
  %109 = load i8*, i8** %misc, align 8, !dbg !20075
  %110 = bitcast i8* %109 to i32*, !dbg !20075
  %add.ptr122 = getelementptr i32, i32* %110, i64 11, !dbg !20075
  %111 = load i32, i32* %add.ptr122, align 4, !dbg !20075
  %112 = call i1 @llvm.is.constant.i32(i32 %111), !dbg !20075
  br i1 %112, label %cond.true123, label %cond.false139, !dbg !20075

cond.true123:                                     ; preds = %cond.end114
  %113 = load i8*, i8** %misc, align 8, !dbg !20075
  %114 = bitcast i8* %113 to i32*, !dbg !20075
  %add.ptr124 = getelementptr i32, i32* %114, i64 11, !dbg !20075
  %115 = load i32, i32* %add.ptr124, align 4, !dbg !20075
  %and125 = and i32 %115, 255, !dbg !20075
  %shl126 = shl i32 %and125, 24, !dbg !20075
  %116 = load i8*, i8** %misc, align 8, !dbg !20075
  %117 = bitcast i8* %116 to i32*, !dbg !20075
  %add.ptr127 = getelementptr i32, i32* %117, i64 11, !dbg !20075
  %118 = load i32, i32* %add.ptr127, align 4, !dbg !20075
  %and128 = and i32 %118, 65280, !dbg !20075
  %shl129 = shl i32 %and128, 8, !dbg !20075
  %or130 = or i32 %shl126, %shl129, !dbg !20075
  %119 = load i8*, i8** %misc, align 8, !dbg !20075
  %120 = bitcast i8* %119 to i32*, !dbg !20075
  %add.ptr131 = getelementptr i32, i32* %120, i64 11, !dbg !20075
  %121 = load i32, i32* %add.ptr131, align 4, !dbg !20075
  %and132 = and i32 %121, 16711680, !dbg !20075
  %shr133 = lshr i32 %and132, 8, !dbg !20075
  %or134 = or i32 %or130, %shr133, !dbg !20075
  %122 = load i8*, i8** %misc, align 8, !dbg !20075
  %123 = bitcast i8* %122 to i32*, !dbg !20075
  %add.ptr135 = getelementptr i32, i32* %123, i64 11, !dbg !20075
  %124 = load i32, i32* %add.ptr135, align 4, !dbg !20075
  %and136 = and i32 %124, -16777216, !dbg !20075
  %shr137 = lshr i32 %and136, 24, !dbg !20075
  %or138 = or i32 %or134, %shr137, !dbg !20075
  br label %cond.end142, !dbg !20075

cond.false139:                                    ; preds = %cond.end114
  %125 = load i8*, i8** %misc, align 8, !dbg !20075
  %126 = bitcast i8* %125 to i32*, !dbg !20075
  %add.ptr140 = getelementptr i32, i32* %126, i64 11, !dbg !20075
  %127 = load i32, i32* %add.ptr140, align 4, !dbg !20075
  %call141 = call i32 @__fswab32(i32 %127) #10, !dbg !20075
  br label %cond.end142, !dbg !20075

cond.end142:                                      ; preds = %cond.false139, %cond.true123
  %cond143 = phi i32 [ %or138, %cond.true123 ], [ %call141, %cond.false139 ], !dbg !20075
  %and144 = and i32 %cond143, 0, !dbg !20075
  %128 = load i32, i32* %_v, align 4, !dbg !20075
  %shl145 = shl i32 %128, 0, !dbg !20075
  %or146 = or i32 %and144, %shl145, !dbg !20075
  %and147 = and i32 %or146, -16777216, !dbg !20075
  %shr148 = lshr i32 %and147, 24, !dbg !20075
  %or149 = or i32 %or121, %shr148, !dbg !20075
  br label %cond.end177, !dbg !20075

cond.false150:                                    ; preds = %cond.end
  %129 = load i8*, i8** %misc, align 8, !dbg !20075
  %130 = bitcast i8* %129 to i32*, !dbg !20075
  %add.ptr151 = getelementptr i32, i32* %130, i64 11, !dbg !20075
  %131 = load i32, i32* %add.ptr151, align 4, !dbg !20075
  %132 = call i1 @llvm.is.constant.i32(i32 %131), !dbg !20075
  br i1 %132, label %cond.true152, label %cond.false168, !dbg !20075

cond.true152:                                     ; preds = %cond.false150
  %133 = load i8*, i8** %misc, align 8, !dbg !20075
  %134 = bitcast i8* %133 to i32*, !dbg !20075
  %add.ptr153 = getelementptr i32, i32* %134, i64 11, !dbg !20075
  %135 = load i32, i32* %add.ptr153, align 4, !dbg !20075
  %and154 = and i32 %135, 255, !dbg !20075
  %shl155 = shl i32 %and154, 24, !dbg !20075
  %136 = load i8*, i8** %misc, align 8, !dbg !20075
  %137 = bitcast i8* %136 to i32*, !dbg !20075
  %add.ptr156 = getelementptr i32, i32* %137, i64 11, !dbg !20075
  %138 = load i32, i32* %add.ptr156, align 4, !dbg !20075
  %and157 = and i32 %138, 65280, !dbg !20075
  %shl158 = shl i32 %and157, 8, !dbg !20075
  %or159 = or i32 %shl155, %shl158, !dbg !20075
  %139 = load i8*, i8** %misc, align 8, !dbg !20075
  %140 = bitcast i8* %139 to i32*, !dbg !20075
  %add.ptr160 = getelementptr i32, i32* %140, i64 11, !dbg !20075
  %141 = load i32, i32* %add.ptr160, align 4, !dbg !20075
  %and161 = and i32 %141, 16711680, !dbg !20075
  %shr162 = lshr i32 %and161, 8, !dbg !20075
  %or163 = or i32 %or159, %shr162, !dbg !20075
  %142 = load i8*, i8** %misc, align 8, !dbg !20075
  %143 = bitcast i8* %142 to i32*, !dbg !20075
  %add.ptr164 = getelementptr i32, i32* %143, i64 11, !dbg !20075
  %144 = load i32, i32* %add.ptr164, align 4, !dbg !20075
  %and165 = and i32 %144, -16777216, !dbg !20075
  %shr166 = lshr i32 %and165, 24, !dbg !20075
  %or167 = or i32 %or163, %shr166, !dbg !20075
  br label %cond.end171, !dbg !20075

cond.false168:                                    ; preds = %cond.false150
  %145 = load i8*, i8** %misc, align 8, !dbg !20075
  %146 = bitcast i8* %145 to i32*, !dbg !20075
  %add.ptr169 = getelementptr i32, i32* %146, i64 11, !dbg !20075
  %147 = load i32, i32* %add.ptr169, align 4, !dbg !20075
  %call170 = call i32 @__fswab32(i32 %147) #10, !dbg !20075
  br label %cond.end171, !dbg !20075

cond.end171:                                      ; preds = %cond.false168, %cond.true152
  %cond172 = phi i32 [ %or167, %cond.true152 ], [ %call170, %cond.false168 ], !dbg !20075
  %and173 = and i32 %cond172, 0, !dbg !20075
  %148 = load i32, i32* %_v, align 4, !dbg !20075
  %shl174 = shl i32 %148, 0, !dbg !20075
  %or175 = or i32 %and173, %shl174, !dbg !20075
  %call176 = call i32 @__fswab32(i32 %or175) #10, !dbg !20075
  br label %cond.end177, !dbg !20075

cond.end177:                                      ; preds = %cond.end171, %cond.end142
  %cond178 = phi i32 [ %or149, %cond.end142 ], [ %call176, %cond.end171 ], !dbg !20075
  %149 = load i8*, i8** %misc, align 8, !dbg !20075
  %150 = bitcast i8* %149 to i32*, !dbg !20075
  %add.ptr179 = getelementptr i32, i32* %150, i64 11, !dbg !20075
  store i32 %cond178, i32* %add.ptr179, align 4, !dbg !20075
  br label %do.end180, !dbg !20075

do.end180:                                        ; preds = %cond.end177
  br label %do.body181, !dbg !20078

do.body181:                                       ; preds = %do.end180
  call void @llvm.dbg.declare(metadata i32* %_v182, metadata !20079, metadata !DIExpression()), !dbg !20081
  store i32 0, i32* %_v182, align 4, !dbg !20081
  br label %do.body183, !dbg !20081

do.body183:                                       ; preds = %do.body181
  br label %do.end184, !dbg !20082

do.end184:                                        ; preds = %do.body183
  %151 = load i32*, i32** %flow_group_in, align 8, !dbg !20081
  %add.ptr185 = getelementptr i32, i32* %151, i64 7, !dbg !20081
  %152 = load i32, i32* %add.ptr185, align 4, !dbg !20081
  %153 = call i1 @llvm.is.constant.i32(i32 %152), !dbg !20081
  br i1 %153, label %cond.true186, label %cond.false202, !dbg !20081

cond.true186:                                     ; preds = %do.end184
  %154 = load i32*, i32** %flow_group_in, align 8, !dbg !20081
  %add.ptr187 = getelementptr i32, i32* %154, i64 7, !dbg !20081
  %155 = load i32, i32* %add.ptr187, align 4, !dbg !20081
  %and188 = and i32 %155, 255, !dbg !20081
  %shl189 = shl i32 %and188, 24, !dbg !20081
  %156 = load i32*, i32** %flow_group_in, align 8, !dbg !20081
  %add.ptr190 = getelementptr i32, i32* %156, i64 7, !dbg !20081
  %157 = load i32, i32* %add.ptr190, align 4, !dbg !20081
  %and191 = and i32 %157, 65280, !dbg !20081
  %shl192 = shl i32 %and191, 8, !dbg !20081
  %or193 = or i32 %shl189, %shl192, !dbg !20081
  %158 = load i32*, i32** %flow_group_in, align 8, !dbg !20081
  %add.ptr194 = getelementptr i32, i32* %158, i64 7, !dbg !20081
  %159 = load i32, i32* %add.ptr194, align 4, !dbg !20081
  %and195 = and i32 %159, 16711680, !dbg !20081
  %shr196 = lshr i32 %and195, 8, !dbg !20081
  %or197 = or i32 %or193, %shr196, !dbg !20081
  %160 = load i32*, i32** %flow_group_in, align 8, !dbg !20081
  %add.ptr198 = getelementptr i32, i32* %160, i64 7, !dbg !20081
  %161 = load i32, i32* %add.ptr198, align 4, !dbg !20081
  %and199 = and i32 %161, -16777216, !dbg !20081
  %shr200 = lshr i32 %and199, 24, !dbg !20081
  %or201 = or i32 %or197, %shr200, !dbg !20081
  br label %cond.end205, !dbg !20081

cond.false202:                                    ; preds = %do.end184
  %162 = load i32*, i32** %flow_group_in, align 8, !dbg !20081
  %add.ptr203 = getelementptr i32, i32* %162, i64 7, !dbg !20081
  %163 = load i32, i32* %add.ptr203, align 4, !dbg !20081
  %call204 = call i32 @__fswab32(i32 %163) #10, !dbg !20081
  br label %cond.end205, !dbg !20081

cond.end205:                                      ; preds = %cond.false202, %cond.true186
  %cond206 = phi i32 [ %or201, %cond.true186 ], [ %call204, %cond.false202 ], !dbg !20081
  %and207 = and i32 %cond206, 0, !dbg !20081
  %164 = load i32, i32* %_v182, align 4, !dbg !20081
  %shl208 = shl i32 %164, 0, !dbg !20081
  %or209 = or i32 %and207, %shl208, !dbg !20081
  %165 = call i1 @llvm.is.constant.i32(i32 %or209), !dbg !20081
  br i1 %165, label %cond.true210, label %cond.false322, !dbg !20081

cond.true210:                                     ; preds = %cond.end205
  %166 = load i32*, i32** %flow_group_in, align 8, !dbg !20081
  %add.ptr211 = getelementptr i32, i32* %166, i64 7, !dbg !20081
  %167 = load i32, i32* %add.ptr211, align 4, !dbg !20081
  %168 = call i1 @llvm.is.constant.i32(i32 %167), !dbg !20081
  br i1 %168, label %cond.true212, label %cond.false228, !dbg !20081

cond.true212:                                     ; preds = %cond.true210
  %169 = load i32*, i32** %flow_group_in, align 8, !dbg !20081
  %add.ptr213 = getelementptr i32, i32* %169, i64 7, !dbg !20081
  %170 = load i32, i32* %add.ptr213, align 4, !dbg !20081
  %and214 = and i32 %170, 255, !dbg !20081
  %shl215 = shl i32 %and214, 24, !dbg !20081
  %171 = load i32*, i32** %flow_group_in, align 8, !dbg !20081
  %add.ptr216 = getelementptr i32, i32* %171, i64 7, !dbg !20081
  %172 = load i32, i32* %add.ptr216, align 4, !dbg !20081
  %and217 = and i32 %172, 65280, !dbg !20081
  %shl218 = shl i32 %and217, 8, !dbg !20081
  %or219 = or i32 %shl215, %shl218, !dbg !20081
  %173 = load i32*, i32** %flow_group_in, align 8, !dbg !20081
  %add.ptr220 = getelementptr i32, i32* %173, i64 7, !dbg !20081
  %174 = load i32, i32* %add.ptr220, align 4, !dbg !20081
  %and221 = and i32 %174, 16711680, !dbg !20081
  %shr222 = lshr i32 %and221, 8, !dbg !20081
  %or223 = or i32 %or219, %shr222, !dbg !20081
  %175 = load i32*, i32** %flow_group_in, align 8, !dbg !20081
  %add.ptr224 = getelementptr i32, i32* %175, i64 7, !dbg !20081
  %176 = load i32, i32* %add.ptr224, align 4, !dbg !20081
  %and225 = and i32 %176, -16777216, !dbg !20081
  %shr226 = lshr i32 %and225, 24, !dbg !20081
  %or227 = or i32 %or223, %shr226, !dbg !20081
  br label %cond.end231, !dbg !20081

cond.false228:                                    ; preds = %cond.true210
  %177 = load i32*, i32** %flow_group_in, align 8, !dbg !20081
  %add.ptr229 = getelementptr i32, i32* %177, i64 7, !dbg !20081
  %178 = load i32, i32* %add.ptr229, align 4, !dbg !20081
  %call230 = call i32 @__fswab32(i32 %178) #10, !dbg !20081
  br label %cond.end231, !dbg !20081

cond.end231:                                      ; preds = %cond.false228, %cond.true212
  %cond232 = phi i32 [ %or227, %cond.true212 ], [ %call230, %cond.false228 ], !dbg !20081
  %and233 = and i32 %cond232, 0, !dbg !20081
  %179 = load i32, i32* %_v182, align 4, !dbg !20081
  %shl234 = shl i32 %179, 0, !dbg !20081
  %or235 = or i32 %and233, %shl234, !dbg !20081
  %and236 = and i32 %or235, 255, !dbg !20081
  %shl237 = shl i32 %and236, 24, !dbg !20081
  %180 = load i32*, i32** %flow_group_in, align 8, !dbg !20081
  %add.ptr238 = getelementptr i32, i32* %180, i64 7, !dbg !20081
  %181 = load i32, i32* %add.ptr238, align 4, !dbg !20081
  %182 = call i1 @llvm.is.constant.i32(i32 %181), !dbg !20081
  br i1 %182, label %cond.true239, label %cond.false255, !dbg !20081

cond.true239:                                     ; preds = %cond.end231
  %183 = load i32*, i32** %flow_group_in, align 8, !dbg !20081
  %add.ptr240 = getelementptr i32, i32* %183, i64 7, !dbg !20081
  %184 = load i32, i32* %add.ptr240, align 4, !dbg !20081
  %and241 = and i32 %184, 255, !dbg !20081
  %shl242 = shl i32 %and241, 24, !dbg !20081
  %185 = load i32*, i32** %flow_group_in, align 8, !dbg !20081
  %add.ptr243 = getelementptr i32, i32* %185, i64 7, !dbg !20081
  %186 = load i32, i32* %add.ptr243, align 4, !dbg !20081
  %and244 = and i32 %186, 65280, !dbg !20081
  %shl245 = shl i32 %and244, 8, !dbg !20081
  %or246 = or i32 %shl242, %shl245, !dbg !20081
  %187 = load i32*, i32** %flow_group_in, align 8, !dbg !20081
  %add.ptr247 = getelementptr i32, i32* %187, i64 7, !dbg !20081
  %188 = load i32, i32* %add.ptr247, align 4, !dbg !20081
  %and248 = and i32 %188, 16711680, !dbg !20081
  %shr249 = lshr i32 %and248, 8, !dbg !20081
  %or250 = or i32 %or246, %shr249, !dbg !20081
  %189 = load i32*, i32** %flow_group_in, align 8, !dbg !20081
  %add.ptr251 = getelementptr i32, i32* %189, i64 7, !dbg !20081
  %190 = load i32, i32* %add.ptr251, align 4, !dbg !20081
  %and252 = and i32 %190, -16777216, !dbg !20081
  %shr253 = lshr i32 %and252, 24, !dbg !20081
  %or254 = or i32 %or250, %shr253, !dbg !20081
  br label %cond.end258, !dbg !20081

cond.false255:                                    ; preds = %cond.end231
  %191 = load i32*, i32** %flow_group_in, align 8, !dbg !20081
  %add.ptr256 = getelementptr i32, i32* %191, i64 7, !dbg !20081
  %192 = load i32, i32* %add.ptr256, align 4, !dbg !20081
  %call257 = call i32 @__fswab32(i32 %192) #10, !dbg !20081
  br label %cond.end258, !dbg !20081

cond.end258:                                      ; preds = %cond.false255, %cond.true239
  %cond259 = phi i32 [ %or254, %cond.true239 ], [ %call257, %cond.false255 ], !dbg !20081
  %and260 = and i32 %cond259, 0, !dbg !20081
  %193 = load i32, i32* %_v182, align 4, !dbg !20081
  %shl261 = shl i32 %193, 0, !dbg !20081
  %or262 = or i32 %and260, %shl261, !dbg !20081
  %and263 = and i32 %or262, 65280, !dbg !20081
  %shl264 = shl i32 %and263, 8, !dbg !20081
  %or265 = or i32 %shl237, %shl264, !dbg !20081
  %194 = load i32*, i32** %flow_group_in, align 8, !dbg !20081
  %add.ptr266 = getelementptr i32, i32* %194, i64 7, !dbg !20081
  %195 = load i32, i32* %add.ptr266, align 4, !dbg !20081
  %196 = call i1 @llvm.is.constant.i32(i32 %195), !dbg !20081
  br i1 %196, label %cond.true267, label %cond.false283, !dbg !20081

cond.true267:                                     ; preds = %cond.end258
  %197 = load i32*, i32** %flow_group_in, align 8, !dbg !20081
  %add.ptr268 = getelementptr i32, i32* %197, i64 7, !dbg !20081
  %198 = load i32, i32* %add.ptr268, align 4, !dbg !20081
  %and269 = and i32 %198, 255, !dbg !20081
  %shl270 = shl i32 %and269, 24, !dbg !20081
  %199 = load i32*, i32** %flow_group_in, align 8, !dbg !20081
  %add.ptr271 = getelementptr i32, i32* %199, i64 7, !dbg !20081
  %200 = load i32, i32* %add.ptr271, align 4, !dbg !20081
  %and272 = and i32 %200, 65280, !dbg !20081
  %shl273 = shl i32 %and272, 8, !dbg !20081
  %or274 = or i32 %shl270, %shl273, !dbg !20081
  %201 = load i32*, i32** %flow_group_in, align 8, !dbg !20081
  %add.ptr275 = getelementptr i32, i32* %201, i64 7, !dbg !20081
  %202 = load i32, i32* %add.ptr275, align 4, !dbg !20081
  %and276 = and i32 %202, 16711680, !dbg !20081
  %shr277 = lshr i32 %and276, 8, !dbg !20081
  %or278 = or i32 %or274, %shr277, !dbg !20081
  %203 = load i32*, i32** %flow_group_in, align 8, !dbg !20081
  %add.ptr279 = getelementptr i32, i32* %203, i64 7, !dbg !20081
  %204 = load i32, i32* %add.ptr279, align 4, !dbg !20081
  %and280 = and i32 %204, -16777216, !dbg !20081
  %shr281 = lshr i32 %and280, 24, !dbg !20081
  %or282 = or i32 %or278, %shr281, !dbg !20081
  br label %cond.end286, !dbg !20081

cond.false283:                                    ; preds = %cond.end258
  %205 = load i32*, i32** %flow_group_in, align 8, !dbg !20081
  %add.ptr284 = getelementptr i32, i32* %205, i64 7, !dbg !20081
  %206 = load i32, i32* %add.ptr284, align 4, !dbg !20081
  %call285 = call i32 @__fswab32(i32 %206) #10, !dbg !20081
  br label %cond.end286, !dbg !20081

cond.end286:                                      ; preds = %cond.false283, %cond.true267
  %cond287 = phi i32 [ %or282, %cond.true267 ], [ %call285, %cond.false283 ], !dbg !20081
  %and288 = and i32 %cond287, 0, !dbg !20081
  %207 = load i32, i32* %_v182, align 4, !dbg !20081
  %shl289 = shl i32 %207, 0, !dbg !20081
  %or290 = or i32 %and288, %shl289, !dbg !20081
  %and291 = and i32 %or290, 16711680, !dbg !20081
  %shr292 = lshr i32 %and291, 8, !dbg !20081
  %or293 = or i32 %or265, %shr292, !dbg !20081
  %208 = load i32*, i32** %flow_group_in, align 8, !dbg !20081
  %add.ptr294 = getelementptr i32, i32* %208, i64 7, !dbg !20081
  %209 = load i32, i32* %add.ptr294, align 4, !dbg !20081
  %210 = call i1 @llvm.is.constant.i32(i32 %209), !dbg !20081
  br i1 %210, label %cond.true295, label %cond.false311, !dbg !20081

cond.true295:                                     ; preds = %cond.end286
  %211 = load i32*, i32** %flow_group_in, align 8, !dbg !20081
  %add.ptr296 = getelementptr i32, i32* %211, i64 7, !dbg !20081
  %212 = load i32, i32* %add.ptr296, align 4, !dbg !20081
  %and297 = and i32 %212, 255, !dbg !20081
  %shl298 = shl i32 %and297, 24, !dbg !20081
  %213 = load i32*, i32** %flow_group_in, align 8, !dbg !20081
  %add.ptr299 = getelementptr i32, i32* %213, i64 7, !dbg !20081
  %214 = load i32, i32* %add.ptr299, align 4, !dbg !20081
  %and300 = and i32 %214, 65280, !dbg !20081
  %shl301 = shl i32 %and300, 8, !dbg !20081
  %or302 = or i32 %shl298, %shl301, !dbg !20081
  %215 = load i32*, i32** %flow_group_in, align 8, !dbg !20081
  %add.ptr303 = getelementptr i32, i32* %215, i64 7, !dbg !20081
  %216 = load i32, i32* %add.ptr303, align 4, !dbg !20081
  %and304 = and i32 %216, 16711680, !dbg !20081
  %shr305 = lshr i32 %and304, 8, !dbg !20081
  %or306 = or i32 %or302, %shr305, !dbg !20081
  %217 = load i32*, i32** %flow_group_in, align 8, !dbg !20081
  %add.ptr307 = getelementptr i32, i32* %217, i64 7, !dbg !20081
  %218 = load i32, i32* %add.ptr307, align 4, !dbg !20081
  %and308 = and i32 %218, -16777216, !dbg !20081
  %shr309 = lshr i32 %and308, 24, !dbg !20081
  %or310 = or i32 %or306, %shr309, !dbg !20081
  br label %cond.end314, !dbg !20081

cond.false311:                                    ; preds = %cond.end286
  %219 = load i32*, i32** %flow_group_in, align 8, !dbg !20081
  %add.ptr312 = getelementptr i32, i32* %219, i64 7, !dbg !20081
  %220 = load i32, i32* %add.ptr312, align 4, !dbg !20081
  %call313 = call i32 @__fswab32(i32 %220) #10, !dbg !20081
  br label %cond.end314, !dbg !20081

cond.end314:                                      ; preds = %cond.false311, %cond.true295
  %cond315 = phi i32 [ %or310, %cond.true295 ], [ %call313, %cond.false311 ], !dbg !20081
  %and316 = and i32 %cond315, 0, !dbg !20081
  %221 = load i32, i32* %_v182, align 4, !dbg !20081
  %shl317 = shl i32 %221, 0, !dbg !20081
  %or318 = or i32 %and316, %shl317, !dbg !20081
  %and319 = and i32 %or318, -16777216, !dbg !20081
  %shr320 = lshr i32 %and319, 24, !dbg !20081
  %or321 = or i32 %or293, %shr320, !dbg !20081
  br label %cond.end349, !dbg !20081

cond.false322:                                    ; preds = %cond.end205
  %222 = load i32*, i32** %flow_group_in, align 8, !dbg !20081
  %add.ptr323 = getelementptr i32, i32* %222, i64 7, !dbg !20081
  %223 = load i32, i32* %add.ptr323, align 4, !dbg !20081
  %224 = call i1 @llvm.is.constant.i32(i32 %223), !dbg !20081
  br i1 %224, label %cond.true324, label %cond.false340, !dbg !20081

cond.true324:                                     ; preds = %cond.false322
  %225 = load i32*, i32** %flow_group_in, align 8, !dbg !20081
  %add.ptr325 = getelementptr i32, i32* %225, i64 7, !dbg !20081
  %226 = load i32, i32* %add.ptr325, align 4, !dbg !20081
  %and326 = and i32 %226, 255, !dbg !20081
  %shl327 = shl i32 %and326, 24, !dbg !20081
  %227 = load i32*, i32** %flow_group_in, align 8, !dbg !20081
  %add.ptr328 = getelementptr i32, i32* %227, i64 7, !dbg !20081
  %228 = load i32, i32* %add.ptr328, align 4, !dbg !20081
  %and329 = and i32 %228, 65280, !dbg !20081
  %shl330 = shl i32 %and329, 8, !dbg !20081
  %or331 = or i32 %shl327, %shl330, !dbg !20081
  %229 = load i32*, i32** %flow_group_in, align 8, !dbg !20081
  %add.ptr332 = getelementptr i32, i32* %229, i64 7, !dbg !20081
  %230 = load i32, i32* %add.ptr332, align 4, !dbg !20081
  %and333 = and i32 %230, 16711680, !dbg !20081
  %shr334 = lshr i32 %and333, 8, !dbg !20081
  %or335 = or i32 %or331, %shr334, !dbg !20081
  %231 = load i32*, i32** %flow_group_in, align 8, !dbg !20081
  %add.ptr336 = getelementptr i32, i32* %231, i64 7, !dbg !20081
  %232 = load i32, i32* %add.ptr336, align 4, !dbg !20081
  %and337 = and i32 %232, -16777216, !dbg !20081
  %shr338 = lshr i32 %and337, 24, !dbg !20081
  %or339 = or i32 %or335, %shr338, !dbg !20081
  br label %cond.end343, !dbg !20081

cond.false340:                                    ; preds = %cond.false322
  %233 = load i32*, i32** %flow_group_in, align 8, !dbg !20081
  %add.ptr341 = getelementptr i32, i32* %233, i64 7, !dbg !20081
  %234 = load i32, i32* %add.ptr341, align 4, !dbg !20081
  %call342 = call i32 @__fswab32(i32 %234) #10, !dbg !20081
  br label %cond.end343, !dbg !20081

cond.end343:                                      ; preds = %cond.false340, %cond.true324
  %cond344 = phi i32 [ %or339, %cond.true324 ], [ %call342, %cond.false340 ], !dbg !20081
  %and345 = and i32 %cond344, 0, !dbg !20081
  %235 = load i32, i32* %_v182, align 4, !dbg !20081
  %shl346 = shl i32 %235, 0, !dbg !20081
  %or347 = or i32 %and345, %shl346, !dbg !20081
  %call348 = call i32 @__fswab32(i32 %or347) #10, !dbg !20081
  br label %cond.end349, !dbg !20081

cond.end349:                                      ; preds = %cond.end343, %cond.end314
  %cond350 = phi i32 [ %or321, %cond.end314 ], [ %call348, %cond.end343 ], !dbg !20081
  %236 = load i32*, i32** %flow_group_in, align 8, !dbg !20081
  %add.ptr351 = getelementptr i32, i32* %236, i64 7, !dbg !20081
  store i32 %cond350, i32* %add.ptr351, align 4, !dbg !20081
  br label %do.end352, !dbg !20081

do.end352:                                        ; preds = %cond.end349
  br label %do.body353, !dbg !20084

do.body353:                                       ; preds = %do.end352
  call void @llvm.dbg.declare(metadata i32* %_v354, metadata !20085, metadata !DIExpression()), !dbg !20087
  %max_fte355 = getelementptr inbounds %struct.mlx5_flow_table_attr, %struct.mlx5_flow_table_attr* %ft_attr, i32 0, i32 1, !dbg !20087
  %237 = load i32, i32* %max_fte355, align 4, !dbg !20087
  %sub = sub i32 %237, 1, !dbg !20087
  store i32 %sub, i32* %_v354, align 4, !dbg !20087
  br label %do.body356, !dbg !20087

do.body356:                                       ; preds = %do.body353
  br label %do.end357, !dbg !20088

do.end357:                                        ; preds = %do.body356
  %238 = load i32*, i32** %flow_group_in, align 8, !dbg !20087
  %add.ptr358 = getelementptr i32, i32* %238, i64 9, !dbg !20087
  %239 = load i32, i32* %add.ptr358, align 4, !dbg !20087
  %240 = call i1 @llvm.is.constant.i32(i32 %239), !dbg !20087
  br i1 %240, label %cond.true359, label %cond.false375, !dbg !20087

cond.true359:                                     ; preds = %do.end357
  %241 = load i32*, i32** %flow_group_in, align 8, !dbg !20087
  %add.ptr360 = getelementptr i32, i32* %241, i64 9, !dbg !20087
  %242 = load i32, i32* %add.ptr360, align 4, !dbg !20087
  %and361 = and i32 %242, 255, !dbg !20087
  %shl362 = shl i32 %and361, 24, !dbg !20087
  %243 = load i32*, i32** %flow_group_in, align 8, !dbg !20087
  %add.ptr363 = getelementptr i32, i32* %243, i64 9, !dbg !20087
  %244 = load i32, i32* %add.ptr363, align 4, !dbg !20087
  %and364 = and i32 %244, 65280, !dbg !20087
  %shl365 = shl i32 %and364, 8, !dbg !20087
  %or366 = or i32 %shl362, %shl365, !dbg !20087
  %245 = load i32*, i32** %flow_group_in, align 8, !dbg !20087
  %add.ptr367 = getelementptr i32, i32* %245, i64 9, !dbg !20087
  %246 = load i32, i32* %add.ptr367, align 4, !dbg !20087
  %and368 = and i32 %246, 16711680, !dbg !20087
  %shr369 = lshr i32 %and368, 8, !dbg !20087
  %or370 = or i32 %or366, %shr369, !dbg !20087
  %247 = load i32*, i32** %flow_group_in, align 8, !dbg !20087
  %add.ptr371 = getelementptr i32, i32* %247, i64 9, !dbg !20087
  %248 = load i32, i32* %add.ptr371, align 4, !dbg !20087
  %and372 = and i32 %248, -16777216, !dbg !20087
  %shr373 = lshr i32 %and372, 24, !dbg !20087
  %or374 = or i32 %or370, %shr373, !dbg !20087
  br label %cond.end378, !dbg !20087

cond.false375:                                    ; preds = %do.end357
  %249 = load i32*, i32** %flow_group_in, align 8, !dbg !20087
  %add.ptr376 = getelementptr i32, i32* %249, i64 9, !dbg !20087
  %250 = load i32, i32* %add.ptr376, align 4, !dbg !20087
  %call377 = call i32 @__fswab32(i32 %250) #10, !dbg !20087
  br label %cond.end378, !dbg !20087

cond.end378:                                      ; preds = %cond.false375, %cond.true359
  %cond379 = phi i32 [ %or374, %cond.true359 ], [ %call377, %cond.false375 ], !dbg !20087
  %and380 = and i32 %cond379, 0, !dbg !20087
  %251 = load i32, i32* %_v354, align 4, !dbg !20087
  %shl381 = shl i32 %251, 0, !dbg !20087
  %or382 = or i32 %and380, %shl381, !dbg !20087
  %252 = call i1 @llvm.is.constant.i32(i32 %or382), !dbg !20087
  br i1 %252, label %cond.true383, label %cond.false495, !dbg !20087

cond.true383:                                     ; preds = %cond.end378
  %253 = load i32*, i32** %flow_group_in, align 8, !dbg !20087
  %add.ptr384 = getelementptr i32, i32* %253, i64 9, !dbg !20087
  %254 = load i32, i32* %add.ptr384, align 4, !dbg !20087
  %255 = call i1 @llvm.is.constant.i32(i32 %254), !dbg !20087
  br i1 %255, label %cond.true385, label %cond.false401, !dbg !20087

cond.true385:                                     ; preds = %cond.true383
  %256 = load i32*, i32** %flow_group_in, align 8, !dbg !20087
  %add.ptr386 = getelementptr i32, i32* %256, i64 9, !dbg !20087
  %257 = load i32, i32* %add.ptr386, align 4, !dbg !20087
  %and387 = and i32 %257, 255, !dbg !20087
  %shl388 = shl i32 %and387, 24, !dbg !20087
  %258 = load i32*, i32** %flow_group_in, align 8, !dbg !20087
  %add.ptr389 = getelementptr i32, i32* %258, i64 9, !dbg !20087
  %259 = load i32, i32* %add.ptr389, align 4, !dbg !20087
  %and390 = and i32 %259, 65280, !dbg !20087
  %shl391 = shl i32 %and390, 8, !dbg !20087
  %or392 = or i32 %shl388, %shl391, !dbg !20087
  %260 = load i32*, i32** %flow_group_in, align 8, !dbg !20087
  %add.ptr393 = getelementptr i32, i32* %260, i64 9, !dbg !20087
  %261 = load i32, i32* %add.ptr393, align 4, !dbg !20087
  %and394 = and i32 %261, 16711680, !dbg !20087
  %shr395 = lshr i32 %and394, 8, !dbg !20087
  %or396 = or i32 %or392, %shr395, !dbg !20087
  %262 = load i32*, i32** %flow_group_in, align 8, !dbg !20087
  %add.ptr397 = getelementptr i32, i32* %262, i64 9, !dbg !20087
  %263 = load i32, i32* %add.ptr397, align 4, !dbg !20087
  %and398 = and i32 %263, -16777216, !dbg !20087
  %shr399 = lshr i32 %and398, 24, !dbg !20087
  %or400 = or i32 %or396, %shr399, !dbg !20087
  br label %cond.end404, !dbg !20087

cond.false401:                                    ; preds = %cond.true383
  %264 = load i32*, i32** %flow_group_in, align 8, !dbg !20087
  %add.ptr402 = getelementptr i32, i32* %264, i64 9, !dbg !20087
  %265 = load i32, i32* %add.ptr402, align 4, !dbg !20087
  %call403 = call i32 @__fswab32(i32 %265) #10, !dbg !20087
  br label %cond.end404, !dbg !20087

cond.end404:                                      ; preds = %cond.false401, %cond.true385
  %cond405 = phi i32 [ %or400, %cond.true385 ], [ %call403, %cond.false401 ], !dbg !20087
  %and406 = and i32 %cond405, 0, !dbg !20087
  %266 = load i32, i32* %_v354, align 4, !dbg !20087
  %shl407 = shl i32 %266, 0, !dbg !20087
  %or408 = or i32 %and406, %shl407, !dbg !20087
  %and409 = and i32 %or408, 255, !dbg !20087
  %shl410 = shl i32 %and409, 24, !dbg !20087
  %267 = load i32*, i32** %flow_group_in, align 8, !dbg !20087
  %add.ptr411 = getelementptr i32, i32* %267, i64 9, !dbg !20087
  %268 = load i32, i32* %add.ptr411, align 4, !dbg !20087
  %269 = call i1 @llvm.is.constant.i32(i32 %268), !dbg !20087
  br i1 %269, label %cond.true412, label %cond.false428, !dbg !20087

cond.true412:                                     ; preds = %cond.end404
  %270 = load i32*, i32** %flow_group_in, align 8, !dbg !20087
  %add.ptr413 = getelementptr i32, i32* %270, i64 9, !dbg !20087
  %271 = load i32, i32* %add.ptr413, align 4, !dbg !20087
  %and414 = and i32 %271, 255, !dbg !20087
  %shl415 = shl i32 %and414, 24, !dbg !20087
  %272 = load i32*, i32** %flow_group_in, align 8, !dbg !20087
  %add.ptr416 = getelementptr i32, i32* %272, i64 9, !dbg !20087
  %273 = load i32, i32* %add.ptr416, align 4, !dbg !20087
  %and417 = and i32 %273, 65280, !dbg !20087
  %shl418 = shl i32 %and417, 8, !dbg !20087
  %or419 = or i32 %shl415, %shl418, !dbg !20087
  %274 = load i32*, i32** %flow_group_in, align 8, !dbg !20087
  %add.ptr420 = getelementptr i32, i32* %274, i64 9, !dbg !20087
  %275 = load i32, i32* %add.ptr420, align 4, !dbg !20087
  %and421 = and i32 %275, 16711680, !dbg !20087
  %shr422 = lshr i32 %and421, 8, !dbg !20087
  %or423 = or i32 %or419, %shr422, !dbg !20087
  %276 = load i32*, i32** %flow_group_in, align 8, !dbg !20087
  %add.ptr424 = getelementptr i32, i32* %276, i64 9, !dbg !20087
  %277 = load i32, i32* %add.ptr424, align 4, !dbg !20087
  %and425 = and i32 %277, -16777216, !dbg !20087
  %shr426 = lshr i32 %and425, 24, !dbg !20087
  %or427 = or i32 %or423, %shr426, !dbg !20087
  br label %cond.end431, !dbg !20087

cond.false428:                                    ; preds = %cond.end404
  %278 = load i32*, i32** %flow_group_in, align 8, !dbg !20087
  %add.ptr429 = getelementptr i32, i32* %278, i64 9, !dbg !20087
  %279 = load i32, i32* %add.ptr429, align 4, !dbg !20087
  %call430 = call i32 @__fswab32(i32 %279) #10, !dbg !20087
  br label %cond.end431, !dbg !20087

cond.end431:                                      ; preds = %cond.false428, %cond.true412
  %cond432 = phi i32 [ %or427, %cond.true412 ], [ %call430, %cond.false428 ], !dbg !20087
  %and433 = and i32 %cond432, 0, !dbg !20087
  %280 = load i32, i32* %_v354, align 4, !dbg !20087
  %shl434 = shl i32 %280, 0, !dbg !20087
  %or435 = or i32 %and433, %shl434, !dbg !20087
  %and436 = and i32 %or435, 65280, !dbg !20087
  %shl437 = shl i32 %and436, 8, !dbg !20087
  %or438 = or i32 %shl410, %shl437, !dbg !20087
  %281 = load i32*, i32** %flow_group_in, align 8, !dbg !20087
  %add.ptr439 = getelementptr i32, i32* %281, i64 9, !dbg !20087
  %282 = load i32, i32* %add.ptr439, align 4, !dbg !20087
  %283 = call i1 @llvm.is.constant.i32(i32 %282), !dbg !20087
  br i1 %283, label %cond.true440, label %cond.false456, !dbg !20087

cond.true440:                                     ; preds = %cond.end431
  %284 = load i32*, i32** %flow_group_in, align 8, !dbg !20087
  %add.ptr441 = getelementptr i32, i32* %284, i64 9, !dbg !20087
  %285 = load i32, i32* %add.ptr441, align 4, !dbg !20087
  %and442 = and i32 %285, 255, !dbg !20087
  %shl443 = shl i32 %and442, 24, !dbg !20087
  %286 = load i32*, i32** %flow_group_in, align 8, !dbg !20087
  %add.ptr444 = getelementptr i32, i32* %286, i64 9, !dbg !20087
  %287 = load i32, i32* %add.ptr444, align 4, !dbg !20087
  %and445 = and i32 %287, 65280, !dbg !20087
  %shl446 = shl i32 %and445, 8, !dbg !20087
  %or447 = or i32 %shl443, %shl446, !dbg !20087
  %288 = load i32*, i32** %flow_group_in, align 8, !dbg !20087
  %add.ptr448 = getelementptr i32, i32* %288, i64 9, !dbg !20087
  %289 = load i32, i32* %add.ptr448, align 4, !dbg !20087
  %and449 = and i32 %289, 16711680, !dbg !20087
  %shr450 = lshr i32 %and449, 8, !dbg !20087
  %or451 = or i32 %or447, %shr450, !dbg !20087
  %290 = load i32*, i32** %flow_group_in, align 8, !dbg !20087
  %add.ptr452 = getelementptr i32, i32* %290, i64 9, !dbg !20087
  %291 = load i32, i32* %add.ptr452, align 4, !dbg !20087
  %and453 = and i32 %291, -16777216, !dbg !20087
  %shr454 = lshr i32 %and453, 24, !dbg !20087
  %or455 = or i32 %or451, %shr454, !dbg !20087
  br label %cond.end459, !dbg !20087

cond.false456:                                    ; preds = %cond.end431
  %292 = load i32*, i32** %flow_group_in, align 8, !dbg !20087
  %add.ptr457 = getelementptr i32, i32* %292, i64 9, !dbg !20087
  %293 = load i32, i32* %add.ptr457, align 4, !dbg !20087
  %call458 = call i32 @__fswab32(i32 %293) #10, !dbg !20087
  br label %cond.end459, !dbg !20087

cond.end459:                                      ; preds = %cond.false456, %cond.true440
  %cond460 = phi i32 [ %or455, %cond.true440 ], [ %call458, %cond.false456 ], !dbg !20087
  %and461 = and i32 %cond460, 0, !dbg !20087
  %294 = load i32, i32* %_v354, align 4, !dbg !20087
  %shl462 = shl i32 %294, 0, !dbg !20087
  %or463 = or i32 %and461, %shl462, !dbg !20087
  %and464 = and i32 %or463, 16711680, !dbg !20087
  %shr465 = lshr i32 %and464, 8, !dbg !20087
  %or466 = or i32 %or438, %shr465, !dbg !20087
  %295 = load i32*, i32** %flow_group_in, align 8, !dbg !20087
  %add.ptr467 = getelementptr i32, i32* %295, i64 9, !dbg !20087
  %296 = load i32, i32* %add.ptr467, align 4, !dbg !20087
  %297 = call i1 @llvm.is.constant.i32(i32 %296), !dbg !20087
  br i1 %297, label %cond.true468, label %cond.false484, !dbg !20087

cond.true468:                                     ; preds = %cond.end459
  %298 = load i32*, i32** %flow_group_in, align 8, !dbg !20087
  %add.ptr469 = getelementptr i32, i32* %298, i64 9, !dbg !20087
  %299 = load i32, i32* %add.ptr469, align 4, !dbg !20087
  %and470 = and i32 %299, 255, !dbg !20087
  %shl471 = shl i32 %and470, 24, !dbg !20087
  %300 = load i32*, i32** %flow_group_in, align 8, !dbg !20087
  %add.ptr472 = getelementptr i32, i32* %300, i64 9, !dbg !20087
  %301 = load i32, i32* %add.ptr472, align 4, !dbg !20087
  %and473 = and i32 %301, 65280, !dbg !20087
  %shl474 = shl i32 %and473, 8, !dbg !20087
  %or475 = or i32 %shl471, %shl474, !dbg !20087
  %302 = load i32*, i32** %flow_group_in, align 8, !dbg !20087
  %add.ptr476 = getelementptr i32, i32* %302, i64 9, !dbg !20087
  %303 = load i32, i32* %add.ptr476, align 4, !dbg !20087
  %and477 = and i32 %303, 16711680, !dbg !20087
  %shr478 = lshr i32 %and477, 8, !dbg !20087
  %or479 = or i32 %or475, %shr478, !dbg !20087
  %304 = load i32*, i32** %flow_group_in, align 8, !dbg !20087
  %add.ptr480 = getelementptr i32, i32* %304, i64 9, !dbg !20087
  %305 = load i32, i32* %add.ptr480, align 4, !dbg !20087
  %and481 = and i32 %305, -16777216, !dbg !20087
  %shr482 = lshr i32 %and481, 24, !dbg !20087
  %or483 = or i32 %or479, %shr482, !dbg !20087
  br label %cond.end487, !dbg !20087

cond.false484:                                    ; preds = %cond.end459
  %306 = load i32*, i32** %flow_group_in, align 8, !dbg !20087
  %add.ptr485 = getelementptr i32, i32* %306, i64 9, !dbg !20087
  %307 = load i32, i32* %add.ptr485, align 4, !dbg !20087
  %call486 = call i32 @__fswab32(i32 %307) #10, !dbg !20087
  br label %cond.end487, !dbg !20087

cond.end487:                                      ; preds = %cond.false484, %cond.true468
  %cond488 = phi i32 [ %or483, %cond.true468 ], [ %call486, %cond.false484 ], !dbg !20087
  %and489 = and i32 %cond488, 0, !dbg !20087
  %308 = load i32, i32* %_v354, align 4, !dbg !20087
  %shl490 = shl i32 %308, 0, !dbg !20087
  %or491 = or i32 %and489, %shl490, !dbg !20087
  %and492 = and i32 %or491, -16777216, !dbg !20087
  %shr493 = lshr i32 %and492, 24, !dbg !20087
  %or494 = or i32 %or466, %shr493, !dbg !20087
  br label %cond.end522, !dbg !20087

cond.false495:                                    ; preds = %cond.end378
  %309 = load i32*, i32** %flow_group_in, align 8, !dbg !20087
  %add.ptr496 = getelementptr i32, i32* %309, i64 9, !dbg !20087
  %310 = load i32, i32* %add.ptr496, align 4, !dbg !20087
  %311 = call i1 @llvm.is.constant.i32(i32 %310), !dbg !20087
  br i1 %311, label %cond.true497, label %cond.false513, !dbg !20087

cond.true497:                                     ; preds = %cond.false495
  %312 = load i32*, i32** %flow_group_in, align 8, !dbg !20087
  %add.ptr498 = getelementptr i32, i32* %312, i64 9, !dbg !20087
  %313 = load i32, i32* %add.ptr498, align 4, !dbg !20087
  %and499 = and i32 %313, 255, !dbg !20087
  %shl500 = shl i32 %and499, 24, !dbg !20087
  %314 = load i32*, i32** %flow_group_in, align 8, !dbg !20087
  %add.ptr501 = getelementptr i32, i32* %314, i64 9, !dbg !20087
  %315 = load i32, i32* %add.ptr501, align 4, !dbg !20087
  %and502 = and i32 %315, 65280, !dbg !20087
  %shl503 = shl i32 %and502, 8, !dbg !20087
  %or504 = or i32 %shl500, %shl503, !dbg !20087
  %316 = load i32*, i32** %flow_group_in, align 8, !dbg !20087
  %add.ptr505 = getelementptr i32, i32* %316, i64 9, !dbg !20087
  %317 = load i32, i32* %add.ptr505, align 4, !dbg !20087
  %and506 = and i32 %317, 16711680, !dbg !20087
  %shr507 = lshr i32 %and506, 8, !dbg !20087
  %or508 = or i32 %or504, %shr507, !dbg !20087
  %318 = load i32*, i32** %flow_group_in, align 8, !dbg !20087
  %add.ptr509 = getelementptr i32, i32* %318, i64 9, !dbg !20087
  %319 = load i32, i32* %add.ptr509, align 4, !dbg !20087
  %and510 = and i32 %319, -16777216, !dbg !20087
  %shr511 = lshr i32 %and510, 24, !dbg !20087
  %or512 = or i32 %or508, %shr511, !dbg !20087
  br label %cond.end516, !dbg !20087

cond.false513:                                    ; preds = %cond.false495
  %320 = load i32*, i32** %flow_group_in, align 8, !dbg !20087
  %add.ptr514 = getelementptr i32, i32* %320, i64 9, !dbg !20087
  %321 = load i32, i32* %add.ptr514, align 4, !dbg !20087
  %call515 = call i32 @__fswab32(i32 %321) #10, !dbg !20087
  br label %cond.end516, !dbg !20087

cond.end516:                                      ; preds = %cond.false513, %cond.true497
  %cond517 = phi i32 [ %or512, %cond.true497 ], [ %call515, %cond.false513 ], !dbg !20087
  %and518 = and i32 %cond517, 0, !dbg !20087
  %322 = load i32, i32* %_v354, align 4, !dbg !20087
  %shl519 = shl i32 %322, 0, !dbg !20087
  %or520 = or i32 %and518, %shl519, !dbg !20087
  %call521 = call i32 @__fswab32(i32 %or520) #10, !dbg !20087
  br label %cond.end522, !dbg !20087

cond.end522:                                      ; preds = %cond.end516, %cond.end487
  %cond523 = phi i32 [ %or494, %cond.end487 ], [ %call521, %cond.end516 ], !dbg !20087
  %323 = load i32*, i32** %flow_group_in, align 8, !dbg !20087
  %add.ptr524 = getelementptr i32, i32* %323, i64 9, !dbg !20087
  store i32 %cond523, i32* %add.ptr524, align 4, !dbg !20087
  br label %do.end525, !dbg !20087

do.end525:                                        ; preds = %cond.end522
  br label %do.body526, !dbg !20090

do.body526:                                       ; preds = %do.end525
  call void @llvm.dbg.declare(metadata i32* %_v527, metadata !20091, metadata !DIExpression()), !dbg !20093
  store i32 8, i32* %_v527, align 4, !dbg !20093
  br label %do.body528, !dbg !20093

do.body528:                                       ; preds = %do.body526
  br label %do.end529, !dbg !20094

do.end529:                                        ; preds = %do.body528
  %324 = load i32*, i32** %flow_group_in, align 8, !dbg !20093
  %add.ptr530 = getelementptr i32, i32* %324, i64 15, !dbg !20093
  %325 = load i32, i32* %add.ptr530, align 4, !dbg !20093
  %326 = call i1 @llvm.is.constant.i32(i32 %325), !dbg !20093
  br i1 %326, label %cond.true531, label %cond.false547, !dbg !20093

cond.true531:                                     ; preds = %do.end529
  %327 = load i32*, i32** %flow_group_in, align 8, !dbg !20093
  %add.ptr532 = getelementptr i32, i32* %327, i64 15, !dbg !20093
  %328 = load i32, i32* %add.ptr532, align 4, !dbg !20093
  %and533 = and i32 %328, 255, !dbg !20093
  %shl534 = shl i32 %and533, 24, !dbg !20093
  %329 = load i32*, i32** %flow_group_in, align 8, !dbg !20093
  %add.ptr535 = getelementptr i32, i32* %329, i64 15, !dbg !20093
  %330 = load i32, i32* %add.ptr535, align 4, !dbg !20093
  %and536 = and i32 %330, 65280, !dbg !20093
  %shl537 = shl i32 %and536, 8, !dbg !20093
  %or538 = or i32 %shl534, %shl537, !dbg !20093
  %331 = load i32*, i32** %flow_group_in, align 8, !dbg !20093
  %add.ptr539 = getelementptr i32, i32* %331, i64 15, !dbg !20093
  %332 = load i32, i32* %add.ptr539, align 4, !dbg !20093
  %and540 = and i32 %332, 16711680, !dbg !20093
  %shr541 = lshr i32 %and540, 8, !dbg !20093
  %or542 = or i32 %or538, %shr541, !dbg !20093
  %333 = load i32*, i32** %flow_group_in, align 8, !dbg !20093
  %add.ptr543 = getelementptr i32, i32* %333, i64 15, !dbg !20093
  %334 = load i32, i32* %add.ptr543, align 4, !dbg !20093
  %and544 = and i32 %334, -16777216, !dbg !20093
  %shr545 = lshr i32 %and544, 24, !dbg !20093
  %or546 = or i32 %or542, %shr545, !dbg !20093
  br label %cond.end550, !dbg !20093

cond.false547:                                    ; preds = %do.end529
  %335 = load i32*, i32** %flow_group_in, align 8, !dbg !20093
  %add.ptr548 = getelementptr i32, i32* %335, i64 15, !dbg !20093
  %336 = load i32, i32* %add.ptr548, align 4, !dbg !20093
  %call549 = call i32 @__fswab32(i32 %336) #10, !dbg !20093
  br label %cond.end550, !dbg !20093

cond.end550:                                      ; preds = %cond.false547, %cond.true531
  %cond551 = phi i32 [ %or546, %cond.true531 ], [ %call549, %cond.false547 ], !dbg !20093
  %and552 = and i32 %cond551, -256, !dbg !20093
  %337 = load i32, i32* %_v527, align 4, !dbg !20093
  %and553 = and i32 %337, 255, !dbg !20093
  %shl554 = shl i32 %and553, 0, !dbg !20093
  %or555 = or i32 %and552, %shl554, !dbg !20093
  %338 = call i1 @llvm.is.constant.i32(i32 %or555), !dbg !20093
  br i1 %338, label %cond.true556, label %cond.false672, !dbg !20093

cond.true556:                                     ; preds = %cond.end550
  %339 = load i32*, i32** %flow_group_in, align 8, !dbg !20093
  %add.ptr557 = getelementptr i32, i32* %339, i64 15, !dbg !20093
  %340 = load i32, i32* %add.ptr557, align 4, !dbg !20093
  %341 = call i1 @llvm.is.constant.i32(i32 %340), !dbg !20093
  br i1 %341, label %cond.true558, label %cond.false574, !dbg !20093

cond.true558:                                     ; preds = %cond.true556
  %342 = load i32*, i32** %flow_group_in, align 8, !dbg !20093
  %add.ptr559 = getelementptr i32, i32* %342, i64 15, !dbg !20093
  %343 = load i32, i32* %add.ptr559, align 4, !dbg !20093
  %and560 = and i32 %343, 255, !dbg !20093
  %shl561 = shl i32 %and560, 24, !dbg !20093
  %344 = load i32*, i32** %flow_group_in, align 8, !dbg !20093
  %add.ptr562 = getelementptr i32, i32* %344, i64 15, !dbg !20093
  %345 = load i32, i32* %add.ptr562, align 4, !dbg !20093
  %and563 = and i32 %345, 65280, !dbg !20093
  %shl564 = shl i32 %and563, 8, !dbg !20093
  %or565 = or i32 %shl561, %shl564, !dbg !20093
  %346 = load i32*, i32** %flow_group_in, align 8, !dbg !20093
  %add.ptr566 = getelementptr i32, i32* %346, i64 15, !dbg !20093
  %347 = load i32, i32* %add.ptr566, align 4, !dbg !20093
  %and567 = and i32 %347, 16711680, !dbg !20093
  %shr568 = lshr i32 %and567, 8, !dbg !20093
  %or569 = or i32 %or565, %shr568, !dbg !20093
  %348 = load i32*, i32** %flow_group_in, align 8, !dbg !20093
  %add.ptr570 = getelementptr i32, i32* %348, i64 15, !dbg !20093
  %349 = load i32, i32* %add.ptr570, align 4, !dbg !20093
  %and571 = and i32 %349, -16777216, !dbg !20093
  %shr572 = lshr i32 %and571, 24, !dbg !20093
  %or573 = or i32 %or569, %shr572, !dbg !20093
  br label %cond.end577, !dbg !20093

cond.false574:                                    ; preds = %cond.true556
  %350 = load i32*, i32** %flow_group_in, align 8, !dbg !20093
  %add.ptr575 = getelementptr i32, i32* %350, i64 15, !dbg !20093
  %351 = load i32, i32* %add.ptr575, align 4, !dbg !20093
  %call576 = call i32 @__fswab32(i32 %351) #10, !dbg !20093
  br label %cond.end577, !dbg !20093

cond.end577:                                      ; preds = %cond.false574, %cond.true558
  %cond578 = phi i32 [ %or573, %cond.true558 ], [ %call576, %cond.false574 ], !dbg !20093
  %and579 = and i32 %cond578, -256, !dbg !20093
  %352 = load i32, i32* %_v527, align 4, !dbg !20093
  %and580 = and i32 %352, 255, !dbg !20093
  %shl581 = shl i32 %and580, 0, !dbg !20093
  %or582 = or i32 %and579, %shl581, !dbg !20093
  %and583 = and i32 %or582, 255, !dbg !20093
  %shl584 = shl i32 %and583, 24, !dbg !20093
  %353 = load i32*, i32** %flow_group_in, align 8, !dbg !20093
  %add.ptr585 = getelementptr i32, i32* %353, i64 15, !dbg !20093
  %354 = load i32, i32* %add.ptr585, align 4, !dbg !20093
  %355 = call i1 @llvm.is.constant.i32(i32 %354), !dbg !20093
  br i1 %355, label %cond.true586, label %cond.false602, !dbg !20093

cond.true586:                                     ; preds = %cond.end577
  %356 = load i32*, i32** %flow_group_in, align 8, !dbg !20093
  %add.ptr587 = getelementptr i32, i32* %356, i64 15, !dbg !20093
  %357 = load i32, i32* %add.ptr587, align 4, !dbg !20093
  %and588 = and i32 %357, 255, !dbg !20093
  %shl589 = shl i32 %and588, 24, !dbg !20093
  %358 = load i32*, i32** %flow_group_in, align 8, !dbg !20093
  %add.ptr590 = getelementptr i32, i32* %358, i64 15, !dbg !20093
  %359 = load i32, i32* %add.ptr590, align 4, !dbg !20093
  %and591 = and i32 %359, 65280, !dbg !20093
  %shl592 = shl i32 %and591, 8, !dbg !20093
  %or593 = or i32 %shl589, %shl592, !dbg !20093
  %360 = load i32*, i32** %flow_group_in, align 8, !dbg !20093
  %add.ptr594 = getelementptr i32, i32* %360, i64 15, !dbg !20093
  %361 = load i32, i32* %add.ptr594, align 4, !dbg !20093
  %and595 = and i32 %361, 16711680, !dbg !20093
  %shr596 = lshr i32 %and595, 8, !dbg !20093
  %or597 = or i32 %or593, %shr596, !dbg !20093
  %362 = load i32*, i32** %flow_group_in, align 8, !dbg !20093
  %add.ptr598 = getelementptr i32, i32* %362, i64 15, !dbg !20093
  %363 = load i32, i32* %add.ptr598, align 4, !dbg !20093
  %and599 = and i32 %363, -16777216, !dbg !20093
  %shr600 = lshr i32 %and599, 24, !dbg !20093
  %or601 = or i32 %or597, %shr600, !dbg !20093
  br label %cond.end605, !dbg !20093

cond.false602:                                    ; preds = %cond.end577
  %364 = load i32*, i32** %flow_group_in, align 8, !dbg !20093
  %add.ptr603 = getelementptr i32, i32* %364, i64 15, !dbg !20093
  %365 = load i32, i32* %add.ptr603, align 4, !dbg !20093
  %call604 = call i32 @__fswab32(i32 %365) #10, !dbg !20093
  br label %cond.end605, !dbg !20093

cond.end605:                                      ; preds = %cond.false602, %cond.true586
  %cond606 = phi i32 [ %or601, %cond.true586 ], [ %call604, %cond.false602 ], !dbg !20093
  %and607 = and i32 %cond606, -256, !dbg !20093
  %366 = load i32, i32* %_v527, align 4, !dbg !20093
  %and608 = and i32 %366, 255, !dbg !20093
  %shl609 = shl i32 %and608, 0, !dbg !20093
  %or610 = or i32 %and607, %shl609, !dbg !20093
  %and611 = and i32 %or610, 65280, !dbg !20093
  %shl612 = shl i32 %and611, 8, !dbg !20093
  %or613 = or i32 %shl584, %shl612, !dbg !20093
  %367 = load i32*, i32** %flow_group_in, align 8, !dbg !20093
  %add.ptr614 = getelementptr i32, i32* %367, i64 15, !dbg !20093
  %368 = load i32, i32* %add.ptr614, align 4, !dbg !20093
  %369 = call i1 @llvm.is.constant.i32(i32 %368), !dbg !20093
  br i1 %369, label %cond.true615, label %cond.false631, !dbg !20093

cond.true615:                                     ; preds = %cond.end605
  %370 = load i32*, i32** %flow_group_in, align 8, !dbg !20093
  %add.ptr616 = getelementptr i32, i32* %370, i64 15, !dbg !20093
  %371 = load i32, i32* %add.ptr616, align 4, !dbg !20093
  %and617 = and i32 %371, 255, !dbg !20093
  %shl618 = shl i32 %and617, 24, !dbg !20093
  %372 = load i32*, i32** %flow_group_in, align 8, !dbg !20093
  %add.ptr619 = getelementptr i32, i32* %372, i64 15, !dbg !20093
  %373 = load i32, i32* %add.ptr619, align 4, !dbg !20093
  %and620 = and i32 %373, 65280, !dbg !20093
  %shl621 = shl i32 %and620, 8, !dbg !20093
  %or622 = or i32 %shl618, %shl621, !dbg !20093
  %374 = load i32*, i32** %flow_group_in, align 8, !dbg !20093
  %add.ptr623 = getelementptr i32, i32* %374, i64 15, !dbg !20093
  %375 = load i32, i32* %add.ptr623, align 4, !dbg !20093
  %and624 = and i32 %375, 16711680, !dbg !20093
  %shr625 = lshr i32 %and624, 8, !dbg !20093
  %or626 = or i32 %or622, %shr625, !dbg !20093
  %376 = load i32*, i32** %flow_group_in, align 8, !dbg !20093
  %add.ptr627 = getelementptr i32, i32* %376, i64 15, !dbg !20093
  %377 = load i32, i32* %add.ptr627, align 4, !dbg !20093
  %and628 = and i32 %377, -16777216, !dbg !20093
  %shr629 = lshr i32 %and628, 24, !dbg !20093
  %or630 = or i32 %or626, %shr629, !dbg !20093
  br label %cond.end634, !dbg !20093

cond.false631:                                    ; preds = %cond.end605
  %378 = load i32*, i32** %flow_group_in, align 8, !dbg !20093
  %add.ptr632 = getelementptr i32, i32* %378, i64 15, !dbg !20093
  %379 = load i32, i32* %add.ptr632, align 4, !dbg !20093
  %call633 = call i32 @__fswab32(i32 %379) #10, !dbg !20093
  br label %cond.end634, !dbg !20093

cond.end634:                                      ; preds = %cond.false631, %cond.true615
  %cond635 = phi i32 [ %or630, %cond.true615 ], [ %call633, %cond.false631 ], !dbg !20093
  %and636 = and i32 %cond635, -256, !dbg !20093
  %380 = load i32, i32* %_v527, align 4, !dbg !20093
  %and637 = and i32 %380, 255, !dbg !20093
  %shl638 = shl i32 %and637, 0, !dbg !20093
  %or639 = or i32 %and636, %shl638, !dbg !20093
  %and640 = and i32 %or639, 16711680, !dbg !20093
  %shr641 = lshr i32 %and640, 8, !dbg !20093
  %or642 = or i32 %or613, %shr641, !dbg !20093
  %381 = load i32*, i32** %flow_group_in, align 8, !dbg !20093
  %add.ptr643 = getelementptr i32, i32* %381, i64 15, !dbg !20093
  %382 = load i32, i32* %add.ptr643, align 4, !dbg !20093
  %383 = call i1 @llvm.is.constant.i32(i32 %382), !dbg !20093
  br i1 %383, label %cond.true644, label %cond.false660, !dbg !20093

cond.true644:                                     ; preds = %cond.end634
  %384 = load i32*, i32** %flow_group_in, align 8, !dbg !20093
  %add.ptr645 = getelementptr i32, i32* %384, i64 15, !dbg !20093
  %385 = load i32, i32* %add.ptr645, align 4, !dbg !20093
  %and646 = and i32 %385, 255, !dbg !20093
  %shl647 = shl i32 %and646, 24, !dbg !20093
  %386 = load i32*, i32** %flow_group_in, align 8, !dbg !20093
  %add.ptr648 = getelementptr i32, i32* %386, i64 15, !dbg !20093
  %387 = load i32, i32* %add.ptr648, align 4, !dbg !20093
  %and649 = and i32 %387, 65280, !dbg !20093
  %shl650 = shl i32 %and649, 8, !dbg !20093
  %or651 = or i32 %shl647, %shl650, !dbg !20093
  %388 = load i32*, i32** %flow_group_in, align 8, !dbg !20093
  %add.ptr652 = getelementptr i32, i32* %388, i64 15, !dbg !20093
  %389 = load i32, i32* %add.ptr652, align 4, !dbg !20093
  %and653 = and i32 %389, 16711680, !dbg !20093
  %shr654 = lshr i32 %and653, 8, !dbg !20093
  %or655 = or i32 %or651, %shr654, !dbg !20093
  %390 = load i32*, i32** %flow_group_in, align 8, !dbg !20093
  %add.ptr656 = getelementptr i32, i32* %390, i64 15, !dbg !20093
  %391 = load i32, i32* %add.ptr656, align 4, !dbg !20093
  %and657 = and i32 %391, -16777216, !dbg !20093
  %shr658 = lshr i32 %and657, 24, !dbg !20093
  %or659 = or i32 %or655, %shr658, !dbg !20093
  br label %cond.end663, !dbg !20093

cond.false660:                                    ; preds = %cond.end634
  %392 = load i32*, i32** %flow_group_in, align 8, !dbg !20093
  %add.ptr661 = getelementptr i32, i32* %392, i64 15, !dbg !20093
  %393 = load i32, i32* %add.ptr661, align 4, !dbg !20093
  %call662 = call i32 @__fswab32(i32 %393) #10, !dbg !20093
  br label %cond.end663, !dbg !20093

cond.end663:                                      ; preds = %cond.false660, %cond.true644
  %cond664 = phi i32 [ %or659, %cond.true644 ], [ %call662, %cond.false660 ], !dbg !20093
  %and665 = and i32 %cond664, -256, !dbg !20093
  %394 = load i32, i32* %_v527, align 4, !dbg !20093
  %and666 = and i32 %394, 255, !dbg !20093
  %shl667 = shl i32 %and666, 0, !dbg !20093
  %or668 = or i32 %and665, %shl667, !dbg !20093
  %and669 = and i32 %or668, -16777216, !dbg !20093
  %shr670 = lshr i32 %and669, 24, !dbg !20093
  %or671 = or i32 %or642, %shr670, !dbg !20093
  br label %cond.end700, !dbg !20093

cond.false672:                                    ; preds = %cond.end550
  %395 = load i32*, i32** %flow_group_in, align 8, !dbg !20093
  %add.ptr673 = getelementptr i32, i32* %395, i64 15, !dbg !20093
  %396 = load i32, i32* %add.ptr673, align 4, !dbg !20093
  %397 = call i1 @llvm.is.constant.i32(i32 %396), !dbg !20093
  br i1 %397, label %cond.true674, label %cond.false690, !dbg !20093

cond.true674:                                     ; preds = %cond.false672
  %398 = load i32*, i32** %flow_group_in, align 8, !dbg !20093
  %add.ptr675 = getelementptr i32, i32* %398, i64 15, !dbg !20093
  %399 = load i32, i32* %add.ptr675, align 4, !dbg !20093
  %and676 = and i32 %399, 255, !dbg !20093
  %shl677 = shl i32 %and676, 24, !dbg !20093
  %400 = load i32*, i32** %flow_group_in, align 8, !dbg !20093
  %add.ptr678 = getelementptr i32, i32* %400, i64 15, !dbg !20093
  %401 = load i32, i32* %add.ptr678, align 4, !dbg !20093
  %and679 = and i32 %401, 65280, !dbg !20093
  %shl680 = shl i32 %and679, 8, !dbg !20093
  %or681 = or i32 %shl677, %shl680, !dbg !20093
  %402 = load i32*, i32** %flow_group_in, align 8, !dbg !20093
  %add.ptr682 = getelementptr i32, i32* %402, i64 15, !dbg !20093
  %403 = load i32, i32* %add.ptr682, align 4, !dbg !20093
  %and683 = and i32 %403, 16711680, !dbg !20093
  %shr684 = lshr i32 %and683, 8, !dbg !20093
  %or685 = or i32 %or681, %shr684, !dbg !20093
  %404 = load i32*, i32** %flow_group_in, align 8, !dbg !20093
  %add.ptr686 = getelementptr i32, i32* %404, i64 15, !dbg !20093
  %405 = load i32, i32* %add.ptr686, align 4, !dbg !20093
  %and687 = and i32 %405, -16777216, !dbg !20093
  %shr688 = lshr i32 %and687, 24, !dbg !20093
  %or689 = or i32 %or685, %shr688, !dbg !20093
  br label %cond.end693, !dbg !20093

cond.false690:                                    ; preds = %cond.false672
  %406 = load i32*, i32** %flow_group_in, align 8, !dbg !20093
  %add.ptr691 = getelementptr i32, i32* %406, i64 15, !dbg !20093
  %407 = load i32, i32* %add.ptr691, align 4, !dbg !20093
  %call692 = call i32 @__fswab32(i32 %407) #10, !dbg !20093
  br label %cond.end693, !dbg !20093

cond.end693:                                      ; preds = %cond.false690, %cond.true674
  %cond694 = phi i32 [ %or689, %cond.true674 ], [ %call692, %cond.false690 ], !dbg !20093
  %and695 = and i32 %cond694, -256, !dbg !20093
  %408 = load i32, i32* %_v527, align 4, !dbg !20093
  %and696 = and i32 %408, 255, !dbg !20093
  %shl697 = shl i32 %and696, 0, !dbg !20093
  %or698 = or i32 %and695, %shl697, !dbg !20093
  %call699 = call i32 @__fswab32(i32 %or698) #10, !dbg !20093
  br label %cond.end700, !dbg !20093

cond.end700:                                      ; preds = %cond.end693, %cond.end663
  %cond701 = phi i32 [ %or671, %cond.end663 ], [ %call699, %cond.end693 ], !dbg !20093
  %409 = load i32*, i32** %flow_group_in, align 8, !dbg !20093
  %add.ptr702 = getelementptr i32, i32* %409, i64 15, !dbg !20093
  store i32 %cond701, i32* %add.ptr702, align 4, !dbg !20093
  br label %do.end703, !dbg !20093

do.end703:                                        ; preds = %cond.end700
  %410 = load %struct.mlx5_flow_table*, %struct.mlx5_flow_table** %ft, align 8, !dbg !20096
  %411 = load i32*, i32** %flow_group_in, align 8, !dbg !20097
  %call704 = call %struct.mlx5_flow_group* @mlx5_create_flow_group(%struct.mlx5_flow_table* %410, i32* %411) #8, !dbg !20098
  store %struct.mlx5_flow_group* %call704, %struct.mlx5_flow_group** %g, align 8, !dbg !20099
  %412 = load %struct.mlx5_flow_group*, %struct.mlx5_flow_group** %g, align 8, !dbg !20100
  %413 = bitcast %struct.mlx5_flow_group* %412 to i8*, !dbg !20100
  %call705 = call zeroext i1 @IS_ERR(i8* %413) #8, !dbg !20102
  br i1 %call705, label %if.then706, label %if.end710, !dbg !20103

if.then706:                                       ; preds = %do.end703
  %414 = load %struct.mlx5_flow_group*, %struct.mlx5_flow_group** %g, align 8, !dbg !20104
  %415 = bitcast %struct.mlx5_flow_group* %414 to i8*, !dbg !20104
  %call707 = call i64 @PTR_ERR(i8* %415) #8, !dbg !20106
  %conv708 = trunc i64 %call707 to i32, !dbg !20106
  store i32 %conv708, i32* %err, align 4, !dbg !20107
  %416 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !20108
  %device709 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %416, i32 0, i32 0, !dbg !20108
  %417 = load %struct.device*, %struct.device** %device709, align 8, !dbg !20108
  %418 = load i32, i32* %err, align 4, !dbg !20108
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %417, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.15, i64 0, i64 0), i32 %418) #9, !dbg !20108
  br label %err_group, !dbg !20109

if.end710:                                        ; preds = %do.end703
  br label %do.body711, !dbg !20110

do.body711:                                       ; preds = %if.end710
  call void @llvm.dbg.declare(metadata i32* %_v712, metadata !20111, metadata !DIExpression()), !dbg !20113
  store i32 3, i32* %_v712, align 4, !dbg !20113
  br label %do.body713, !dbg !20113

do.body713:                                       ; preds = %do.body711
  br label %do.end714, !dbg !20114

do.end714:                                        ; preds = %do.body713
  %arraydecay = getelementptr inbounds [8 x i8], [8 x i8]* %modact, i64 0, i64 0, !dbg !20113
  %419 = bitcast i8* %arraydecay to i32*, !dbg !20113
  %add.ptr715 = getelementptr i32, i32* %419, i64 0, !dbg !20113
  %420 = load i32, i32* %add.ptr715, align 4, !dbg !20113
  %421 = call i1 @llvm.is.constant.i32(i32 %420), !dbg !20113
  br i1 %421, label %cond.true716, label %cond.false736, !dbg !20113

cond.true716:                                     ; preds = %do.end714
  %arraydecay717 = getelementptr inbounds [8 x i8], [8 x i8]* %modact, i64 0, i64 0, !dbg !20113
  %422 = bitcast i8* %arraydecay717 to i32*, !dbg !20113
  %add.ptr718 = getelementptr i32, i32* %422, i64 0, !dbg !20113
  %423 = load i32, i32* %add.ptr718, align 4, !dbg !20113
  %and719 = and i32 %423, 255, !dbg !20113
  %shl720 = shl i32 %and719, 24, !dbg !20113
  %arraydecay721 = getelementptr inbounds [8 x i8], [8 x i8]* %modact, i64 0, i64 0, !dbg !20113
  %424 = bitcast i8* %arraydecay721 to i32*, !dbg !20113
  %add.ptr722 = getelementptr i32, i32* %424, i64 0, !dbg !20113
  %425 = load i32, i32* %add.ptr722, align 4, !dbg !20113
  %and723 = and i32 %425, 65280, !dbg !20113
  %shl724 = shl i32 %and723, 8, !dbg !20113
  %or725 = or i32 %shl720, %shl724, !dbg !20113
  %arraydecay726 = getelementptr inbounds [8 x i8], [8 x i8]* %modact, i64 0, i64 0, !dbg !20113
  %426 = bitcast i8* %arraydecay726 to i32*, !dbg !20113
  %add.ptr727 = getelementptr i32, i32* %426, i64 0, !dbg !20113
  %427 = load i32, i32* %add.ptr727, align 4, !dbg !20113
  %and728 = and i32 %427, 16711680, !dbg !20113
  %shr729 = lshr i32 %and728, 8, !dbg !20113
  %or730 = or i32 %or725, %shr729, !dbg !20113
  %arraydecay731 = getelementptr inbounds [8 x i8], [8 x i8]* %modact, i64 0, i64 0, !dbg !20113
  %428 = bitcast i8* %arraydecay731 to i32*, !dbg !20113
  %add.ptr732 = getelementptr i32, i32* %428, i64 0, !dbg !20113
  %429 = load i32, i32* %add.ptr732, align 4, !dbg !20113
  %and733 = and i32 %429, -16777216, !dbg !20113
  %shr734 = lshr i32 %and733, 24, !dbg !20113
  %or735 = or i32 %or730, %shr734, !dbg !20113
  br label %cond.end740, !dbg !20113

cond.false736:                                    ; preds = %do.end714
  %arraydecay737 = getelementptr inbounds [8 x i8], [8 x i8]* %modact, i64 0, i64 0, !dbg !20113
  %430 = bitcast i8* %arraydecay737 to i32*, !dbg !20113
  %add.ptr738 = getelementptr i32, i32* %430, i64 0, !dbg !20113
  %431 = load i32, i32* %add.ptr738, align 4, !dbg !20113
  %call739 = call i32 @__fswab32(i32 %431) #10, !dbg !20113
  br label %cond.end740, !dbg !20113

cond.end740:                                      ; preds = %cond.false736, %cond.true716
  %cond741 = phi i32 [ %or735, %cond.true716 ], [ %call739, %cond.false736 ], !dbg !20113
  %and742 = and i32 %cond741, 268435455, !dbg !20113
  %432 = load i32, i32* %_v712, align 4, !dbg !20113
  %and743 = and i32 %432, 15, !dbg !20113
  %shl744 = shl i32 %and743, 28, !dbg !20113
  %or745 = or i32 %and742, %shl744, !dbg !20113
  %433 = call i1 @llvm.is.constant.i32(i32 %or745), !dbg !20113
  br i1 %433, label %cond.true746, label %cond.false886, !dbg !20113

cond.true746:                                     ; preds = %cond.end740
  %arraydecay747 = getelementptr inbounds [8 x i8], [8 x i8]* %modact, i64 0, i64 0, !dbg !20113
  %434 = bitcast i8* %arraydecay747 to i32*, !dbg !20113
  %add.ptr748 = getelementptr i32, i32* %434, i64 0, !dbg !20113
  %435 = load i32, i32* %add.ptr748, align 4, !dbg !20113
  %436 = call i1 @llvm.is.constant.i32(i32 %435), !dbg !20113
  br i1 %436, label %cond.true749, label %cond.false769, !dbg !20113

cond.true749:                                     ; preds = %cond.true746
  %arraydecay750 = getelementptr inbounds [8 x i8], [8 x i8]* %modact, i64 0, i64 0, !dbg !20113
  %437 = bitcast i8* %arraydecay750 to i32*, !dbg !20113
  %add.ptr751 = getelementptr i32, i32* %437, i64 0, !dbg !20113
  %438 = load i32, i32* %add.ptr751, align 4, !dbg !20113
  %and752 = and i32 %438, 255, !dbg !20113
  %shl753 = shl i32 %and752, 24, !dbg !20113
  %arraydecay754 = getelementptr inbounds [8 x i8], [8 x i8]* %modact, i64 0, i64 0, !dbg !20113
  %439 = bitcast i8* %arraydecay754 to i32*, !dbg !20113
  %add.ptr755 = getelementptr i32, i32* %439, i64 0, !dbg !20113
  %440 = load i32, i32* %add.ptr755, align 4, !dbg !20113
  %and756 = and i32 %440, 65280, !dbg !20113
  %shl757 = shl i32 %and756, 8, !dbg !20113
  %or758 = or i32 %shl753, %shl757, !dbg !20113
  %arraydecay759 = getelementptr inbounds [8 x i8], [8 x i8]* %modact, i64 0, i64 0, !dbg !20113
  %441 = bitcast i8* %arraydecay759 to i32*, !dbg !20113
  %add.ptr760 = getelementptr i32, i32* %441, i64 0, !dbg !20113
  %442 = load i32, i32* %add.ptr760, align 4, !dbg !20113
  %and761 = and i32 %442, 16711680, !dbg !20113
  %shr762 = lshr i32 %and761, 8, !dbg !20113
  %or763 = or i32 %or758, %shr762, !dbg !20113
  %arraydecay764 = getelementptr inbounds [8 x i8], [8 x i8]* %modact, i64 0, i64 0, !dbg !20113
  %443 = bitcast i8* %arraydecay764 to i32*, !dbg !20113
  %add.ptr765 = getelementptr i32, i32* %443, i64 0, !dbg !20113
  %444 = load i32, i32* %add.ptr765, align 4, !dbg !20113
  %and766 = and i32 %444, -16777216, !dbg !20113
  %shr767 = lshr i32 %and766, 24, !dbg !20113
  %or768 = or i32 %or763, %shr767, !dbg !20113
  br label %cond.end773, !dbg !20113

cond.false769:                                    ; preds = %cond.true746
  %arraydecay770 = getelementptr inbounds [8 x i8], [8 x i8]* %modact, i64 0, i64 0, !dbg !20113
  %445 = bitcast i8* %arraydecay770 to i32*, !dbg !20113
  %add.ptr771 = getelementptr i32, i32* %445, i64 0, !dbg !20113
  %446 = load i32, i32* %add.ptr771, align 4, !dbg !20113
  %call772 = call i32 @__fswab32(i32 %446) #10, !dbg !20113
  br label %cond.end773, !dbg !20113

cond.end773:                                      ; preds = %cond.false769, %cond.true749
  %cond774 = phi i32 [ %or768, %cond.true749 ], [ %call772, %cond.false769 ], !dbg !20113
  %and775 = and i32 %cond774, 268435455, !dbg !20113
  %447 = load i32, i32* %_v712, align 4, !dbg !20113
  %and776 = and i32 %447, 15, !dbg !20113
  %shl777 = shl i32 %and776, 28, !dbg !20113
  %or778 = or i32 %and775, %shl777, !dbg !20113
  %and779 = and i32 %or778, 255, !dbg !20113
  %shl780 = shl i32 %and779, 24, !dbg !20113
  %arraydecay781 = getelementptr inbounds [8 x i8], [8 x i8]* %modact, i64 0, i64 0, !dbg !20113
  %448 = bitcast i8* %arraydecay781 to i32*, !dbg !20113
  %add.ptr782 = getelementptr i32, i32* %448, i64 0, !dbg !20113
  %449 = load i32, i32* %add.ptr782, align 4, !dbg !20113
  %450 = call i1 @llvm.is.constant.i32(i32 %449), !dbg !20113
  br i1 %450, label %cond.true783, label %cond.false803, !dbg !20113

cond.true783:                                     ; preds = %cond.end773
  %arraydecay784 = getelementptr inbounds [8 x i8], [8 x i8]* %modact, i64 0, i64 0, !dbg !20113
  %451 = bitcast i8* %arraydecay784 to i32*, !dbg !20113
  %add.ptr785 = getelementptr i32, i32* %451, i64 0, !dbg !20113
  %452 = load i32, i32* %add.ptr785, align 4, !dbg !20113
  %and786 = and i32 %452, 255, !dbg !20113
  %shl787 = shl i32 %and786, 24, !dbg !20113
  %arraydecay788 = getelementptr inbounds [8 x i8], [8 x i8]* %modact, i64 0, i64 0, !dbg !20113
  %453 = bitcast i8* %arraydecay788 to i32*, !dbg !20113
  %add.ptr789 = getelementptr i32, i32* %453, i64 0, !dbg !20113
  %454 = load i32, i32* %add.ptr789, align 4, !dbg !20113
  %and790 = and i32 %454, 65280, !dbg !20113
  %shl791 = shl i32 %and790, 8, !dbg !20113
  %or792 = or i32 %shl787, %shl791, !dbg !20113
  %arraydecay793 = getelementptr inbounds [8 x i8], [8 x i8]* %modact, i64 0, i64 0, !dbg !20113
  %455 = bitcast i8* %arraydecay793 to i32*, !dbg !20113
  %add.ptr794 = getelementptr i32, i32* %455, i64 0, !dbg !20113
  %456 = load i32, i32* %add.ptr794, align 4, !dbg !20113
  %and795 = and i32 %456, 16711680, !dbg !20113
  %shr796 = lshr i32 %and795, 8, !dbg !20113
  %or797 = or i32 %or792, %shr796, !dbg !20113
  %arraydecay798 = getelementptr inbounds [8 x i8], [8 x i8]* %modact, i64 0, i64 0, !dbg !20113
  %457 = bitcast i8* %arraydecay798 to i32*, !dbg !20113
  %add.ptr799 = getelementptr i32, i32* %457, i64 0, !dbg !20113
  %458 = load i32, i32* %add.ptr799, align 4, !dbg !20113
  %and800 = and i32 %458, -16777216, !dbg !20113
  %shr801 = lshr i32 %and800, 24, !dbg !20113
  %or802 = or i32 %or797, %shr801, !dbg !20113
  br label %cond.end807, !dbg !20113

cond.false803:                                    ; preds = %cond.end773
  %arraydecay804 = getelementptr inbounds [8 x i8], [8 x i8]* %modact, i64 0, i64 0, !dbg !20113
  %459 = bitcast i8* %arraydecay804 to i32*, !dbg !20113
  %add.ptr805 = getelementptr i32, i32* %459, i64 0, !dbg !20113
  %460 = load i32, i32* %add.ptr805, align 4, !dbg !20113
  %call806 = call i32 @__fswab32(i32 %460) #10, !dbg !20113
  br label %cond.end807, !dbg !20113

cond.end807:                                      ; preds = %cond.false803, %cond.true783
  %cond808 = phi i32 [ %or802, %cond.true783 ], [ %call806, %cond.false803 ], !dbg !20113
  %and809 = and i32 %cond808, 268435455, !dbg !20113
  %461 = load i32, i32* %_v712, align 4, !dbg !20113
  %and810 = and i32 %461, 15, !dbg !20113
  %shl811 = shl i32 %and810, 28, !dbg !20113
  %or812 = or i32 %and809, %shl811, !dbg !20113
  %and813 = and i32 %or812, 65280, !dbg !20113
  %shl814 = shl i32 %and813, 8, !dbg !20113
  %or815 = or i32 %shl780, %shl814, !dbg !20113
  %arraydecay816 = getelementptr inbounds [8 x i8], [8 x i8]* %modact, i64 0, i64 0, !dbg !20113
  %462 = bitcast i8* %arraydecay816 to i32*, !dbg !20113
  %add.ptr817 = getelementptr i32, i32* %462, i64 0, !dbg !20113
  %463 = load i32, i32* %add.ptr817, align 4, !dbg !20113
  %464 = call i1 @llvm.is.constant.i32(i32 %463), !dbg !20113
  br i1 %464, label %cond.true818, label %cond.false838, !dbg !20113

cond.true818:                                     ; preds = %cond.end807
  %arraydecay819 = getelementptr inbounds [8 x i8], [8 x i8]* %modact, i64 0, i64 0, !dbg !20113
  %465 = bitcast i8* %arraydecay819 to i32*, !dbg !20113
  %add.ptr820 = getelementptr i32, i32* %465, i64 0, !dbg !20113
  %466 = load i32, i32* %add.ptr820, align 4, !dbg !20113
  %and821 = and i32 %466, 255, !dbg !20113
  %shl822 = shl i32 %and821, 24, !dbg !20113
  %arraydecay823 = getelementptr inbounds [8 x i8], [8 x i8]* %modact, i64 0, i64 0, !dbg !20113
  %467 = bitcast i8* %arraydecay823 to i32*, !dbg !20113
  %add.ptr824 = getelementptr i32, i32* %467, i64 0, !dbg !20113
  %468 = load i32, i32* %add.ptr824, align 4, !dbg !20113
  %and825 = and i32 %468, 65280, !dbg !20113
  %shl826 = shl i32 %and825, 8, !dbg !20113
  %or827 = or i32 %shl822, %shl826, !dbg !20113
  %arraydecay828 = getelementptr inbounds [8 x i8], [8 x i8]* %modact, i64 0, i64 0, !dbg !20113
  %469 = bitcast i8* %arraydecay828 to i32*, !dbg !20113
  %add.ptr829 = getelementptr i32, i32* %469, i64 0, !dbg !20113
  %470 = load i32, i32* %add.ptr829, align 4, !dbg !20113
  %and830 = and i32 %470, 16711680, !dbg !20113
  %shr831 = lshr i32 %and830, 8, !dbg !20113
  %or832 = or i32 %or827, %shr831, !dbg !20113
  %arraydecay833 = getelementptr inbounds [8 x i8], [8 x i8]* %modact, i64 0, i64 0, !dbg !20113
  %471 = bitcast i8* %arraydecay833 to i32*, !dbg !20113
  %add.ptr834 = getelementptr i32, i32* %471, i64 0, !dbg !20113
  %472 = load i32, i32* %add.ptr834, align 4, !dbg !20113
  %and835 = and i32 %472, -16777216, !dbg !20113
  %shr836 = lshr i32 %and835, 24, !dbg !20113
  %or837 = or i32 %or832, %shr836, !dbg !20113
  br label %cond.end842, !dbg !20113

cond.false838:                                    ; preds = %cond.end807
  %arraydecay839 = getelementptr inbounds [8 x i8], [8 x i8]* %modact, i64 0, i64 0, !dbg !20113
  %473 = bitcast i8* %arraydecay839 to i32*, !dbg !20113
  %add.ptr840 = getelementptr i32, i32* %473, i64 0, !dbg !20113
  %474 = load i32, i32* %add.ptr840, align 4, !dbg !20113
  %call841 = call i32 @__fswab32(i32 %474) #10, !dbg !20113
  br label %cond.end842, !dbg !20113

cond.end842:                                      ; preds = %cond.false838, %cond.true818
  %cond843 = phi i32 [ %or837, %cond.true818 ], [ %call841, %cond.false838 ], !dbg !20113
  %and844 = and i32 %cond843, 268435455, !dbg !20113
  %475 = load i32, i32* %_v712, align 4, !dbg !20113
  %and845 = and i32 %475, 15, !dbg !20113
  %shl846 = shl i32 %and845, 28, !dbg !20113
  %or847 = or i32 %and844, %shl846, !dbg !20113
  %and848 = and i32 %or847, 16711680, !dbg !20113
  %shr849 = lshr i32 %and848, 8, !dbg !20113
  %or850 = or i32 %or815, %shr849, !dbg !20113
  %arraydecay851 = getelementptr inbounds [8 x i8], [8 x i8]* %modact, i64 0, i64 0, !dbg !20113
  %476 = bitcast i8* %arraydecay851 to i32*, !dbg !20113
  %add.ptr852 = getelementptr i32, i32* %476, i64 0, !dbg !20113
  %477 = load i32, i32* %add.ptr852, align 4, !dbg !20113
  %478 = call i1 @llvm.is.constant.i32(i32 %477), !dbg !20113
  br i1 %478, label %cond.true853, label %cond.false873, !dbg !20113

cond.true853:                                     ; preds = %cond.end842
  %arraydecay854 = getelementptr inbounds [8 x i8], [8 x i8]* %modact, i64 0, i64 0, !dbg !20113
  %479 = bitcast i8* %arraydecay854 to i32*, !dbg !20113
  %add.ptr855 = getelementptr i32, i32* %479, i64 0, !dbg !20113
  %480 = load i32, i32* %add.ptr855, align 4, !dbg !20113
  %and856 = and i32 %480, 255, !dbg !20113
  %shl857 = shl i32 %and856, 24, !dbg !20113
  %arraydecay858 = getelementptr inbounds [8 x i8], [8 x i8]* %modact, i64 0, i64 0, !dbg !20113
  %481 = bitcast i8* %arraydecay858 to i32*, !dbg !20113
  %add.ptr859 = getelementptr i32, i32* %481, i64 0, !dbg !20113
  %482 = load i32, i32* %add.ptr859, align 4, !dbg !20113
  %and860 = and i32 %482, 65280, !dbg !20113
  %shl861 = shl i32 %and860, 8, !dbg !20113
  %or862 = or i32 %shl857, %shl861, !dbg !20113
  %arraydecay863 = getelementptr inbounds [8 x i8], [8 x i8]* %modact, i64 0, i64 0, !dbg !20113
  %483 = bitcast i8* %arraydecay863 to i32*, !dbg !20113
  %add.ptr864 = getelementptr i32, i32* %483, i64 0, !dbg !20113
  %484 = load i32, i32* %add.ptr864, align 4, !dbg !20113
  %and865 = and i32 %484, 16711680, !dbg !20113
  %shr866 = lshr i32 %and865, 8, !dbg !20113
  %or867 = or i32 %or862, %shr866, !dbg !20113
  %arraydecay868 = getelementptr inbounds [8 x i8], [8 x i8]* %modact, i64 0, i64 0, !dbg !20113
  %485 = bitcast i8* %arraydecay868 to i32*, !dbg !20113
  %add.ptr869 = getelementptr i32, i32* %485, i64 0, !dbg !20113
  %486 = load i32, i32* %add.ptr869, align 4, !dbg !20113
  %and870 = and i32 %486, -16777216, !dbg !20113
  %shr871 = lshr i32 %and870, 24, !dbg !20113
  %or872 = or i32 %or867, %shr871, !dbg !20113
  br label %cond.end877, !dbg !20113

cond.false873:                                    ; preds = %cond.end842
  %arraydecay874 = getelementptr inbounds [8 x i8], [8 x i8]* %modact, i64 0, i64 0, !dbg !20113
  %487 = bitcast i8* %arraydecay874 to i32*, !dbg !20113
  %add.ptr875 = getelementptr i32, i32* %487, i64 0, !dbg !20113
  %488 = load i32, i32* %add.ptr875, align 4, !dbg !20113
  %call876 = call i32 @__fswab32(i32 %488) #10, !dbg !20113
  br label %cond.end877, !dbg !20113

cond.end877:                                      ; preds = %cond.false873, %cond.true853
  %cond878 = phi i32 [ %or872, %cond.true853 ], [ %call876, %cond.false873 ], !dbg !20113
  %and879 = and i32 %cond878, 268435455, !dbg !20113
  %489 = load i32, i32* %_v712, align 4, !dbg !20113
  %and880 = and i32 %489, 15, !dbg !20113
  %shl881 = shl i32 %and880, 28, !dbg !20113
  %or882 = or i32 %and879, %shl881, !dbg !20113
  %and883 = and i32 %or882, -16777216, !dbg !20113
  %shr884 = lshr i32 %and883, 24, !dbg !20113
  %or885 = or i32 %or850, %shr884, !dbg !20113
  br label %cond.end920, !dbg !20113

cond.false886:                                    ; preds = %cond.end740
  %arraydecay887 = getelementptr inbounds [8 x i8], [8 x i8]* %modact, i64 0, i64 0, !dbg !20113
  %490 = bitcast i8* %arraydecay887 to i32*, !dbg !20113
  %add.ptr888 = getelementptr i32, i32* %490, i64 0, !dbg !20113
  %491 = load i32, i32* %add.ptr888, align 4, !dbg !20113
  %492 = call i1 @llvm.is.constant.i32(i32 %491), !dbg !20113
  br i1 %492, label %cond.true889, label %cond.false909, !dbg !20113

cond.true889:                                     ; preds = %cond.false886
  %arraydecay890 = getelementptr inbounds [8 x i8], [8 x i8]* %modact, i64 0, i64 0, !dbg !20113
  %493 = bitcast i8* %arraydecay890 to i32*, !dbg !20113
  %add.ptr891 = getelementptr i32, i32* %493, i64 0, !dbg !20113
  %494 = load i32, i32* %add.ptr891, align 4, !dbg !20113
  %and892 = and i32 %494, 255, !dbg !20113
  %shl893 = shl i32 %and892, 24, !dbg !20113
  %arraydecay894 = getelementptr inbounds [8 x i8], [8 x i8]* %modact, i64 0, i64 0, !dbg !20113
  %495 = bitcast i8* %arraydecay894 to i32*, !dbg !20113
  %add.ptr895 = getelementptr i32, i32* %495, i64 0, !dbg !20113
  %496 = load i32, i32* %add.ptr895, align 4, !dbg !20113
  %and896 = and i32 %496, 65280, !dbg !20113
  %shl897 = shl i32 %and896, 8, !dbg !20113
  %or898 = or i32 %shl893, %shl897, !dbg !20113
  %arraydecay899 = getelementptr inbounds [8 x i8], [8 x i8]* %modact, i64 0, i64 0, !dbg !20113
  %497 = bitcast i8* %arraydecay899 to i32*, !dbg !20113
  %add.ptr900 = getelementptr i32, i32* %497, i64 0, !dbg !20113
  %498 = load i32, i32* %add.ptr900, align 4, !dbg !20113
  %and901 = and i32 %498, 16711680, !dbg !20113
  %shr902 = lshr i32 %and901, 8, !dbg !20113
  %or903 = or i32 %or898, %shr902, !dbg !20113
  %arraydecay904 = getelementptr inbounds [8 x i8], [8 x i8]* %modact, i64 0, i64 0, !dbg !20113
  %499 = bitcast i8* %arraydecay904 to i32*, !dbg !20113
  %add.ptr905 = getelementptr i32, i32* %499, i64 0, !dbg !20113
  %500 = load i32, i32* %add.ptr905, align 4, !dbg !20113
  %and906 = and i32 %500, -16777216, !dbg !20113
  %shr907 = lshr i32 %and906, 24, !dbg !20113
  %or908 = or i32 %or903, %shr907, !dbg !20113
  br label %cond.end913, !dbg !20113

cond.false909:                                    ; preds = %cond.false886
  %arraydecay910 = getelementptr inbounds [8 x i8], [8 x i8]* %modact, i64 0, i64 0, !dbg !20113
  %501 = bitcast i8* %arraydecay910 to i32*, !dbg !20113
  %add.ptr911 = getelementptr i32, i32* %501, i64 0, !dbg !20113
  %502 = load i32, i32* %add.ptr911, align 4, !dbg !20113
  %call912 = call i32 @__fswab32(i32 %502) #10, !dbg !20113
  br label %cond.end913, !dbg !20113

cond.end913:                                      ; preds = %cond.false909, %cond.true889
  %cond914 = phi i32 [ %or908, %cond.true889 ], [ %call912, %cond.false909 ], !dbg !20113
  %and915 = and i32 %cond914, 268435455, !dbg !20113
  %503 = load i32, i32* %_v712, align 4, !dbg !20113
  %and916 = and i32 %503, 15, !dbg !20113
  %shl917 = shl i32 %and916, 28, !dbg !20113
  %or918 = or i32 %and915, %shl917, !dbg !20113
  %call919 = call i32 @__fswab32(i32 %or918) #10, !dbg !20113
  br label %cond.end920, !dbg !20113

cond.end920:                                      ; preds = %cond.end913, %cond.end877
  %cond921 = phi i32 [ %or885, %cond.end877 ], [ %call919, %cond.end913 ], !dbg !20113
  %arraydecay922 = getelementptr inbounds [8 x i8], [8 x i8]* %modact, i64 0, i64 0, !dbg !20113
  %504 = bitcast i8* %arraydecay922 to i32*, !dbg !20113
  %add.ptr923 = getelementptr i32, i32* %504, i64 0, !dbg !20113
  store i32 %cond921, i32* %add.ptr923, align 4, !dbg !20113
  br label %do.end924, !dbg !20113

do.end924:                                        ; preds = %cond.end920
  br label %do.body925, !dbg !20116

do.body925:                                       ; preds = %do.end924
  call void @llvm.dbg.declare(metadata i32* %_v926, metadata !20117, metadata !DIExpression()), !dbg !20119
  store i32 82, i32* %_v926, align 4, !dbg !20119
  br label %do.body927, !dbg !20119

do.body927:                                       ; preds = %do.body925
  br label %do.end928, !dbg !20120

do.end928:                                        ; preds = %do.body927
  %arraydecay929 = getelementptr inbounds [8 x i8], [8 x i8]* %modact, i64 0, i64 0, !dbg !20119
  %505 = bitcast i8* %arraydecay929 to i32*, !dbg !20119
  %add.ptr930 = getelementptr i32, i32* %505, i64 0, !dbg !20119
  %506 = load i32, i32* %add.ptr930, align 4, !dbg !20119
  %507 = call i1 @llvm.is.constant.i32(i32 %506), !dbg !20119
  br i1 %507, label %cond.true931, label %cond.false951, !dbg !20119

cond.true931:                                     ; preds = %do.end928
  %arraydecay932 = getelementptr inbounds [8 x i8], [8 x i8]* %modact, i64 0, i64 0, !dbg !20119
  %508 = bitcast i8* %arraydecay932 to i32*, !dbg !20119
  %add.ptr933 = getelementptr i32, i32* %508, i64 0, !dbg !20119
  %509 = load i32, i32* %add.ptr933, align 4, !dbg !20119
  %and934 = and i32 %509, 255, !dbg !20119
  %shl935 = shl i32 %and934, 24, !dbg !20119
  %arraydecay936 = getelementptr inbounds [8 x i8], [8 x i8]* %modact, i64 0, i64 0, !dbg !20119
  %510 = bitcast i8* %arraydecay936 to i32*, !dbg !20119
  %add.ptr937 = getelementptr i32, i32* %510, i64 0, !dbg !20119
  %511 = load i32, i32* %add.ptr937, align 4, !dbg !20119
  %and938 = and i32 %511, 65280, !dbg !20119
  %shl939 = shl i32 %and938, 8, !dbg !20119
  %or940 = or i32 %shl935, %shl939, !dbg !20119
  %arraydecay941 = getelementptr inbounds [8 x i8], [8 x i8]* %modact, i64 0, i64 0, !dbg !20119
  %512 = bitcast i8* %arraydecay941 to i32*, !dbg !20119
  %add.ptr942 = getelementptr i32, i32* %512, i64 0, !dbg !20119
  %513 = load i32, i32* %add.ptr942, align 4, !dbg !20119
  %and943 = and i32 %513, 16711680, !dbg !20119
  %shr944 = lshr i32 %and943, 8, !dbg !20119
  %or945 = or i32 %or940, %shr944, !dbg !20119
  %arraydecay946 = getelementptr inbounds [8 x i8], [8 x i8]* %modact, i64 0, i64 0, !dbg !20119
  %514 = bitcast i8* %arraydecay946 to i32*, !dbg !20119
  %add.ptr947 = getelementptr i32, i32* %514, i64 0, !dbg !20119
  %515 = load i32, i32* %add.ptr947, align 4, !dbg !20119
  %and948 = and i32 %515, -16777216, !dbg !20119
  %shr949 = lshr i32 %and948, 24, !dbg !20119
  %or950 = or i32 %or945, %shr949, !dbg !20119
  br label %cond.end955, !dbg !20119

cond.false951:                                    ; preds = %do.end928
  %arraydecay952 = getelementptr inbounds [8 x i8], [8 x i8]* %modact, i64 0, i64 0, !dbg !20119
  %516 = bitcast i8* %arraydecay952 to i32*, !dbg !20119
  %add.ptr953 = getelementptr i32, i32* %516, i64 0, !dbg !20119
  %517 = load i32, i32* %add.ptr953, align 4, !dbg !20119
  %call954 = call i32 @__fswab32(i32 %517) #10, !dbg !20119
  br label %cond.end955, !dbg !20119

cond.end955:                                      ; preds = %cond.false951, %cond.true931
  %cond956 = phi i32 [ %or950, %cond.true931 ], [ %call954, %cond.false951 ], !dbg !20119
  %and957 = and i32 %cond956, -268369921, !dbg !20119
  %518 = load i32, i32* %_v926, align 4, !dbg !20119
  %and958 = and i32 %518, 4095, !dbg !20119
  %shl959 = shl i32 %and958, 16, !dbg !20119
  %or960 = or i32 %and957, %shl959, !dbg !20119
  %519 = call i1 @llvm.is.constant.i32(i32 %or960), !dbg !20119
  br i1 %519, label %cond.true961, label %cond.false1101, !dbg !20119

cond.true961:                                     ; preds = %cond.end955
  %arraydecay962 = getelementptr inbounds [8 x i8], [8 x i8]* %modact, i64 0, i64 0, !dbg !20119
  %520 = bitcast i8* %arraydecay962 to i32*, !dbg !20119
  %add.ptr963 = getelementptr i32, i32* %520, i64 0, !dbg !20119
  %521 = load i32, i32* %add.ptr963, align 4, !dbg !20119
  %522 = call i1 @llvm.is.constant.i32(i32 %521), !dbg !20119
  br i1 %522, label %cond.true964, label %cond.false984, !dbg !20119

cond.true964:                                     ; preds = %cond.true961
  %arraydecay965 = getelementptr inbounds [8 x i8], [8 x i8]* %modact, i64 0, i64 0, !dbg !20119
  %523 = bitcast i8* %arraydecay965 to i32*, !dbg !20119
  %add.ptr966 = getelementptr i32, i32* %523, i64 0, !dbg !20119
  %524 = load i32, i32* %add.ptr966, align 4, !dbg !20119
  %and967 = and i32 %524, 255, !dbg !20119
  %shl968 = shl i32 %and967, 24, !dbg !20119
  %arraydecay969 = getelementptr inbounds [8 x i8], [8 x i8]* %modact, i64 0, i64 0, !dbg !20119
  %525 = bitcast i8* %arraydecay969 to i32*, !dbg !20119
  %add.ptr970 = getelementptr i32, i32* %525, i64 0, !dbg !20119
  %526 = load i32, i32* %add.ptr970, align 4, !dbg !20119
  %and971 = and i32 %526, 65280, !dbg !20119
  %shl972 = shl i32 %and971, 8, !dbg !20119
  %or973 = or i32 %shl968, %shl972, !dbg !20119
  %arraydecay974 = getelementptr inbounds [8 x i8], [8 x i8]* %modact, i64 0, i64 0, !dbg !20119
  %527 = bitcast i8* %arraydecay974 to i32*, !dbg !20119
  %add.ptr975 = getelementptr i32, i32* %527, i64 0, !dbg !20119
  %528 = load i32, i32* %add.ptr975, align 4, !dbg !20119
  %and976 = and i32 %528, 16711680, !dbg !20119
  %shr977 = lshr i32 %and976, 8, !dbg !20119
  %or978 = or i32 %or973, %shr977, !dbg !20119
  %arraydecay979 = getelementptr inbounds [8 x i8], [8 x i8]* %modact, i64 0, i64 0, !dbg !20119
  %529 = bitcast i8* %arraydecay979 to i32*, !dbg !20119
  %add.ptr980 = getelementptr i32, i32* %529, i64 0, !dbg !20119
  %530 = load i32, i32* %add.ptr980, align 4, !dbg !20119
  %and981 = and i32 %530, -16777216, !dbg !20119
  %shr982 = lshr i32 %and981, 24, !dbg !20119
  %or983 = or i32 %or978, %shr982, !dbg !20119
  br label %cond.end988, !dbg !20119

cond.false984:                                    ; preds = %cond.true961
  %arraydecay985 = getelementptr inbounds [8 x i8], [8 x i8]* %modact, i64 0, i64 0, !dbg !20119
  %531 = bitcast i8* %arraydecay985 to i32*, !dbg !20119
  %add.ptr986 = getelementptr i32, i32* %531, i64 0, !dbg !20119
  %532 = load i32, i32* %add.ptr986, align 4, !dbg !20119
  %call987 = call i32 @__fswab32(i32 %532) #10, !dbg !20119
  br label %cond.end988, !dbg !20119

cond.end988:                                      ; preds = %cond.false984, %cond.true964
  %cond989 = phi i32 [ %or983, %cond.true964 ], [ %call987, %cond.false984 ], !dbg !20119
  %and990 = and i32 %cond989, -268369921, !dbg !20119
  %533 = load i32, i32* %_v926, align 4, !dbg !20119
  %and991 = and i32 %533, 4095, !dbg !20119
  %shl992 = shl i32 %and991, 16, !dbg !20119
  %or993 = or i32 %and990, %shl992, !dbg !20119
  %and994 = and i32 %or993, 255, !dbg !20119
  %shl995 = shl i32 %and994, 24, !dbg !20119
  %arraydecay996 = getelementptr inbounds [8 x i8], [8 x i8]* %modact, i64 0, i64 0, !dbg !20119
  %534 = bitcast i8* %arraydecay996 to i32*, !dbg !20119
  %add.ptr997 = getelementptr i32, i32* %534, i64 0, !dbg !20119
  %535 = load i32, i32* %add.ptr997, align 4, !dbg !20119
  %536 = call i1 @llvm.is.constant.i32(i32 %535), !dbg !20119
  br i1 %536, label %cond.true998, label %cond.false1018, !dbg !20119

cond.true998:                                     ; preds = %cond.end988
  %arraydecay999 = getelementptr inbounds [8 x i8], [8 x i8]* %modact, i64 0, i64 0, !dbg !20119
  %537 = bitcast i8* %arraydecay999 to i32*, !dbg !20119
  %add.ptr1000 = getelementptr i32, i32* %537, i64 0, !dbg !20119
  %538 = load i32, i32* %add.ptr1000, align 4, !dbg !20119
  %and1001 = and i32 %538, 255, !dbg !20119
  %shl1002 = shl i32 %and1001, 24, !dbg !20119
  %arraydecay1003 = getelementptr inbounds [8 x i8], [8 x i8]* %modact, i64 0, i64 0, !dbg !20119
  %539 = bitcast i8* %arraydecay1003 to i32*, !dbg !20119
  %add.ptr1004 = getelementptr i32, i32* %539, i64 0, !dbg !20119
  %540 = load i32, i32* %add.ptr1004, align 4, !dbg !20119
  %and1005 = and i32 %540, 65280, !dbg !20119
  %shl1006 = shl i32 %and1005, 8, !dbg !20119
  %or1007 = or i32 %shl1002, %shl1006, !dbg !20119
  %arraydecay1008 = getelementptr inbounds [8 x i8], [8 x i8]* %modact, i64 0, i64 0, !dbg !20119
  %541 = bitcast i8* %arraydecay1008 to i32*, !dbg !20119
  %add.ptr1009 = getelementptr i32, i32* %541, i64 0, !dbg !20119
  %542 = load i32, i32* %add.ptr1009, align 4, !dbg !20119
  %and1010 = and i32 %542, 16711680, !dbg !20119
  %shr1011 = lshr i32 %and1010, 8, !dbg !20119
  %or1012 = or i32 %or1007, %shr1011, !dbg !20119
  %arraydecay1013 = getelementptr inbounds [8 x i8], [8 x i8]* %modact, i64 0, i64 0, !dbg !20119
  %543 = bitcast i8* %arraydecay1013 to i32*, !dbg !20119
  %add.ptr1014 = getelementptr i32, i32* %543, i64 0, !dbg !20119
  %544 = load i32, i32* %add.ptr1014, align 4, !dbg !20119
  %and1015 = and i32 %544, -16777216, !dbg !20119
  %shr1016 = lshr i32 %and1015, 24, !dbg !20119
  %or1017 = or i32 %or1012, %shr1016, !dbg !20119
  br label %cond.end1022, !dbg !20119

cond.false1018:                                   ; preds = %cond.end988
  %arraydecay1019 = getelementptr inbounds [8 x i8], [8 x i8]* %modact, i64 0, i64 0, !dbg !20119
  %545 = bitcast i8* %arraydecay1019 to i32*, !dbg !20119
  %add.ptr1020 = getelementptr i32, i32* %545, i64 0, !dbg !20119
  %546 = load i32, i32* %add.ptr1020, align 4, !dbg !20119
  %call1021 = call i32 @__fswab32(i32 %546) #10, !dbg !20119
  br label %cond.end1022, !dbg !20119

cond.end1022:                                     ; preds = %cond.false1018, %cond.true998
  %cond1023 = phi i32 [ %or1017, %cond.true998 ], [ %call1021, %cond.false1018 ], !dbg !20119
  %and1024 = and i32 %cond1023, -268369921, !dbg !20119
  %547 = load i32, i32* %_v926, align 4, !dbg !20119
  %and1025 = and i32 %547, 4095, !dbg !20119
  %shl1026 = shl i32 %and1025, 16, !dbg !20119
  %or1027 = or i32 %and1024, %shl1026, !dbg !20119
  %and1028 = and i32 %or1027, 65280, !dbg !20119
  %shl1029 = shl i32 %and1028, 8, !dbg !20119
  %or1030 = or i32 %shl995, %shl1029, !dbg !20119
  %arraydecay1031 = getelementptr inbounds [8 x i8], [8 x i8]* %modact, i64 0, i64 0, !dbg !20119
  %548 = bitcast i8* %arraydecay1031 to i32*, !dbg !20119
  %add.ptr1032 = getelementptr i32, i32* %548, i64 0, !dbg !20119
  %549 = load i32, i32* %add.ptr1032, align 4, !dbg !20119
  %550 = call i1 @llvm.is.constant.i32(i32 %549), !dbg !20119
  br i1 %550, label %cond.true1033, label %cond.false1053, !dbg !20119

cond.true1033:                                    ; preds = %cond.end1022
  %arraydecay1034 = getelementptr inbounds [8 x i8], [8 x i8]* %modact, i64 0, i64 0, !dbg !20119
  %551 = bitcast i8* %arraydecay1034 to i32*, !dbg !20119
  %add.ptr1035 = getelementptr i32, i32* %551, i64 0, !dbg !20119
  %552 = load i32, i32* %add.ptr1035, align 4, !dbg !20119
  %and1036 = and i32 %552, 255, !dbg !20119
  %shl1037 = shl i32 %and1036, 24, !dbg !20119
  %arraydecay1038 = getelementptr inbounds [8 x i8], [8 x i8]* %modact, i64 0, i64 0, !dbg !20119
  %553 = bitcast i8* %arraydecay1038 to i32*, !dbg !20119
  %add.ptr1039 = getelementptr i32, i32* %553, i64 0, !dbg !20119
  %554 = load i32, i32* %add.ptr1039, align 4, !dbg !20119
  %and1040 = and i32 %554, 65280, !dbg !20119
  %shl1041 = shl i32 %and1040, 8, !dbg !20119
  %or1042 = or i32 %shl1037, %shl1041, !dbg !20119
  %arraydecay1043 = getelementptr inbounds [8 x i8], [8 x i8]* %modact, i64 0, i64 0, !dbg !20119
  %555 = bitcast i8* %arraydecay1043 to i32*, !dbg !20119
  %add.ptr1044 = getelementptr i32, i32* %555, i64 0, !dbg !20119
  %556 = load i32, i32* %add.ptr1044, align 4, !dbg !20119
  %and1045 = and i32 %556, 16711680, !dbg !20119
  %shr1046 = lshr i32 %and1045, 8, !dbg !20119
  %or1047 = or i32 %or1042, %shr1046, !dbg !20119
  %arraydecay1048 = getelementptr inbounds [8 x i8], [8 x i8]* %modact, i64 0, i64 0, !dbg !20119
  %557 = bitcast i8* %arraydecay1048 to i32*, !dbg !20119
  %add.ptr1049 = getelementptr i32, i32* %557, i64 0, !dbg !20119
  %558 = load i32, i32* %add.ptr1049, align 4, !dbg !20119
  %and1050 = and i32 %558, -16777216, !dbg !20119
  %shr1051 = lshr i32 %and1050, 24, !dbg !20119
  %or1052 = or i32 %or1047, %shr1051, !dbg !20119
  br label %cond.end1057, !dbg !20119

cond.false1053:                                   ; preds = %cond.end1022
  %arraydecay1054 = getelementptr inbounds [8 x i8], [8 x i8]* %modact, i64 0, i64 0, !dbg !20119
  %559 = bitcast i8* %arraydecay1054 to i32*, !dbg !20119
  %add.ptr1055 = getelementptr i32, i32* %559, i64 0, !dbg !20119
  %560 = load i32, i32* %add.ptr1055, align 4, !dbg !20119
  %call1056 = call i32 @__fswab32(i32 %560) #10, !dbg !20119
  br label %cond.end1057, !dbg !20119

cond.end1057:                                     ; preds = %cond.false1053, %cond.true1033
  %cond1058 = phi i32 [ %or1052, %cond.true1033 ], [ %call1056, %cond.false1053 ], !dbg !20119
  %and1059 = and i32 %cond1058, -268369921, !dbg !20119
  %561 = load i32, i32* %_v926, align 4, !dbg !20119
  %and1060 = and i32 %561, 4095, !dbg !20119
  %shl1061 = shl i32 %and1060, 16, !dbg !20119
  %or1062 = or i32 %and1059, %shl1061, !dbg !20119
  %and1063 = and i32 %or1062, 16711680, !dbg !20119
  %shr1064 = lshr i32 %and1063, 8, !dbg !20119
  %or1065 = or i32 %or1030, %shr1064, !dbg !20119
  %arraydecay1066 = getelementptr inbounds [8 x i8], [8 x i8]* %modact, i64 0, i64 0, !dbg !20119
  %562 = bitcast i8* %arraydecay1066 to i32*, !dbg !20119
  %add.ptr1067 = getelementptr i32, i32* %562, i64 0, !dbg !20119
  %563 = load i32, i32* %add.ptr1067, align 4, !dbg !20119
  %564 = call i1 @llvm.is.constant.i32(i32 %563), !dbg !20119
  br i1 %564, label %cond.true1068, label %cond.false1088, !dbg !20119

cond.true1068:                                    ; preds = %cond.end1057
  %arraydecay1069 = getelementptr inbounds [8 x i8], [8 x i8]* %modact, i64 0, i64 0, !dbg !20119
  %565 = bitcast i8* %arraydecay1069 to i32*, !dbg !20119
  %add.ptr1070 = getelementptr i32, i32* %565, i64 0, !dbg !20119
  %566 = load i32, i32* %add.ptr1070, align 4, !dbg !20119
  %and1071 = and i32 %566, 255, !dbg !20119
  %shl1072 = shl i32 %and1071, 24, !dbg !20119
  %arraydecay1073 = getelementptr inbounds [8 x i8], [8 x i8]* %modact, i64 0, i64 0, !dbg !20119
  %567 = bitcast i8* %arraydecay1073 to i32*, !dbg !20119
  %add.ptr1074 = getelementptr i32, i32* %567, i64 0, !dbg !20119
  %568 = load i32, i32* %add.ptr1074, align 4, !dbg !20119
  %and1075 = and i32 %568, 65280, !dbg !20119
  %shl1076 = shl i32 %and1075, 8, !dbg !20119
  %or1077 = or i32 %shl1072, %shl1076, !dbg !20119
  %arraydecay1078 = getelementptr inbounds [8 x i8], [8 x i8]* %modact, i64 0, i64 0, !dbg !20119
  %569 = bitcast i8* %arraydecay1078 to i32*, !dbg !20119
  %add.ptr1079 = getelementptr i32, i32* %569, i64 0, !dbg !20119
  %570 = load i32, i32* %add.ptr1079, align 4, !dbg !20119
  %and1080 = and i32 %570, 16711680, !dbg !20119
  %shr1081 = lshr i32 %and1080, 8, !dbg !20119
  %or1082 = or i32 %or1077, %shr1081, !dbg !20119
  %arraydecay1083 = getelementptr inbounds [8 x i8], [8 x i8]* %modact, i64 0, i64 0, !dbg !20119
  %571 = bitcast i8* %arraydecay1083 to i32*, !dbg !20119
  %add.ptr1084 = getelementptr i32, i32* %571, i64 0, !dbg !20119
  %572 = load i32, i32* %add.ptr1084, align 4, !dbg !20119
  %and1085 = and i32 %572, -16777216, !dbg !20119
  %shr1086 = lshr i32 %and1085, 24, !dbg !20119
  %or1087 = or i32 %or1082, %shr1086, !dbg !20119
  br label %cond.end1092, !dbg !20119

cond.false1088:                                   ; preds = %cond.end1057
  %arraydecay1089 = getelementptr inbounds [8 x i8], [8 x i8]* %modact, i64 0, i64 0, !dbg !20119
  %573 = bitcast i8* %arraydecay1089 to i32*, !dbg !20119
  %add.ptr1090 = getelementptr i32, i32* %573, i64 0, !dbg !20119
  %574 = load i32, i32* %add.ptr1090, align 4, !dbg !20119
  %call1091 = call i32 @__fswab32(i32 %574) #10, !dbg !20119
  br label %cond.end1092, !dbg !20119

cond.end1092:                                     ; preds = %cond.false1088, %cond.true1068
  %cond1093 = phi i32 [ %or1087, %cond.true1068 ], [ %call1091, %cond.false1088 ], !dbg !20119
  %and1094 = and i32 %cond1093, -268369921, !dbg !20119
  %575 = load i32, i32* %_v926, align 4, !dbg !20119
  %and1095 = and i32 %575, 4095, !dbg !20119
  %shl1096 = shl i32 %and1095, 16, !dbg !20119
  %or1097 = or i32 %and1094, %shl1096, !dbg !20119
  %and1098 = and i32 %or1097, -16777216, !dbg !20119
  %shr1099 = lshr i32 %and1098, 24, !dbg !20119
  %or1100 = or i32 %or1065, %shr1099, !dbg !20119
  br label %cond.end1135, !dbg !20119

cond.false1101:                                   ; preds = %cond.end955
  %arraydecay1102 = getelementptr inbounds [8 x i8], [8 x i8]* %modact, i64 0, i64 0, !dbg !20119
  %576 = bitcast i8* %arraydecay1102 to i32*, !dbg !20119
  %add.ptr1103 = getelementptr i32, i32* %576, i64 0, !dbg !20119
  %577 = load i32, i32* %add.ptr1103, align 4, !dbg !20119
  %578 = call i1 @llvm.is.constant.i32(i32 %577), !dbg !20119
  br i1 %578, label %cond.true1104, label %cond.false1124, !dbg !20119

cond.true1104:                                    ; preds = %cond.false1101
  %arraydecay1105 = getelementptr inbounds [8 x i8], [8 x i8]* %modact, i64 0, i64 0, !dbg !20119
  %579 = bitcast i8* %arraydecay1105 to i32*, !dbg !20119
  %add.ptr1106 = getelementptr i32, i32* %579, i64 0, !dbg !20119
  %580 = load i32, i32* %add.ptr1106, align 4, !dbg !20119
  %and1107 = and i32 %580, 255, !dbg !20119
  %shl1108 = shl i32 %and1107, 24, !dbg !20119
  %arraydecay1109 = getelementptr inbounds [8 x i8], [8 x i8]* %modact, i64 0, i64 0, !dbg !20119
  %581 = bitcast i8* %arraydecay1109 to i32*, !dbg !20119
  %add.ptr1110 = getelementptr i32, i32* %581, i64 0, !dbg !20119
  %582 = load i32, i32* %add.ptr1110, align 4, !dbg !20119
  %and1111 = and i32 %582, 65280, !dbg !20119
  %shl1112 = shl i32 %and1111, 8, !dbg !20119
  %or1113 = or i32 %shl1108, %shl1112, !dbg !20119
  %arraydecay1114 = getelementptr inbounds [8 x i8], [8 x i8]* %modact, i64 0, i64 0, !dbg !20119
  %583 = bitcast i8* %arraydecay1114 to i32*, !dbg !20119
  %add.ptr1115 = getelementptr i32, i32* %583, i64 0, !dbg !20119
  %584 = load i32, i32* %add.ptr1115, align 4, !dbg !20119
  %and1116 = and i32 %584, 16711680, !dbg !20119
  %shr1117 = lshr i32 %and1116, 8, !dbg !20119
  %or1118 = or i32 %or1113, %shr1117, !dbg !20119
  %arraydecay1119 = getelementptr inbounds [8 x i8], [8 x i8]* %modact, i64 0, i64 0, !dbg !20119
  %585 = bitcast i8* %arraydecay1119 to i32*, !dbg !20119
  %add.ptr1120 = getelementptr i32, i32* %585, i64 0, !dbg !20119
  %586 = load i32, i32* %add.ptr1120, align 4, !dbg !20119
  %and1121 = and i32 %586, -16777216, !dbg !20119
  %shr1122 = lshr i32 %and1121, 24, !dbg !20119
  %or1123 = or i32 %or1118, %shr1122, !dbg !20119
  br label %cond.end1128, !dbg !20119

cond.false1124:                                   ; preds = %cond.false1101
  %arraydecay1125 = getelementptr inbounds [8 x i8], [8 x i8]* %modact, i64 0, i64 0, !dbg !20119
  %587 = bitcast i8* %arraydecay1125 to i32*, !dbg !20119
  %add.ptr1126 = getelementptr i32, i32* %587, i64 0, !dbg !20119
  %588 = load i32, i32* %add.ptr1126, align 4, !dbg !20119
  %call1127 = call i32 @__fswab32(i32 %588) #10, !dbg !20119
  br label %cond.end1128, !dbg !20119

cond.end1128:                                     ; preds = %cond.false1124, %cond.true1104
  %cond1129 = phi i32 [ %or1123, %cond.true1104 ], [ %call1127, %cond.false1124 ], !dbg !20119
  %and1130 = and i32 %cond1129, -268369921, !dbg !20119
  %589 = load i32, i32* %_v926, align 4, !dbg !20119
  %and1131 = and i32 %589, 4095, !dbg !20119
  %shl1132 = shl i32 %and1131, 16, !dbg !20119
  %or1133 = or i32 %and1130, %shl1132, !dbg !20119
  %call1134 = call i32 @__fswab32(i32 %or1133) #10, !dbg !20119
  br label %cond.end1135, !dbg !20119

cond.end1135:                                     ; preds = %cond.end1128, %cond.end1092
  %cond1136 = phi i32 [ %or1100, %cond.end1092 ], [ %call1134, %cond.end1128 ], !dbg !20119
  %arraydecay1137 = getelementptr inbounds [8 x i8], [8 x i8]* %modact, i64 0, i64 0, !dbg !20119
  %590 = bitcast i8* %arraydecay1137 to i32*, !dbg !20119
  %add.ptr1138 = getelementptr i32, i32* %590, i64 0, !dbg !20119
  store i32 %cond1136, i32* %add.ptr1138, align 4, !dbg !20119
  br label %do.end1139, !dbg !20119

do.end1139:                                       ; preds = %cond.end1135
  br label %do.body1140, !dbg !20122

do.body1140:                                      ; preds = %do.end1139
  call void @llvm.dbg.declare(metadata i32* %_v1141, metadata !20123, metadata !DIExpression()), !dbg !20125
  store i32 80, i32* %_v1141, align 4, !dbg !20125
  br label %do.body1142, !dbg !20125

do.body1142:                                      ; preds = %do.body1140
  br label %do.end1143, !dbg !20126

do.end1143:                                       ; preds = %do.body1142
  %arraydecay1144 = getelementptr inbounds [8 x i8], [8 x i8]* %modact, i64 0, i64 0, !dbg !20125
  %591 = bitcast i8* %arraydecay1144 to i32*, !dbg !20125
  %add.ptr1145 = getelementptr i32, i32* %591, i64 1, !dbg !20125
  %592 = load i32, i32* %add.ptr1145, align 4, !dbg !20125
  %593 = call i1 @llvm.is.constant.i32(i32 %592), !dbg !20125
  br i1 %593, label %cond.true1146, label %cond.false1166, !dbg !20125

cond.true1146:                                    ; preds = %do.end1143
  %arraydecay1147 = getelementptr inbounds [8 x i8], [8 x i8]* %modact, i64 0, i64 0, !dbg !20125
  %594 = bitcast i8* %arraydecay1147 to i32*, !dbg !20125
  %add.ptr1148 = getelementptr i32, i32* %594, i64 1, !dbg !20125
  %595 = load i32, i32* %add.ptr1148, align 4, !dbg !20125
  %and1149 = and i32 %595, 255, !dbg !20125
  %shl1150 = shl i32 %and1149, 24, !dbg !20125
  %arraydecay1151 = getelementptr inbounds [8 x i8], [8 x i8]* %modact, i64 0, i64 0, !dbg !20125
  %596 = bitcast i8* %arraydecay1151 to i32*, !dbg !20125
  %add.ptr1152 = getelementptr i32, i32* %596, i64 1, !dbg !20125
  %597 = load i32, i32* %add.ptr1152, align 4, !dbg !20125
  %and1153 = and i32 %597, 65280, !dbg !20125
  %shl1154 = shl i32 %and1153, 8, !dbg !20125
  %or1155 = or i32 %shl1150, %shl1154, !dbg !20125
  %arraydecay1156 = getelementptr inbounds [8 x i8], [8 x i8]* %modact, i64 0, i64 0, !dbg !20125
  %598 = bitcast i8* %arraydecay1156 to i32*, !dbg !20125
  %add.ptr1157 = getelementptr i32, i32* %598, i64 1, !dbg !20125
  %599 = load i32, i32* %add.ptr1157, align 4, !dbg !20125
  %and1158 = and i32 %599, 16711680, !dbg !20125
  %shr1159 = lshr i32 %and1158, 8, !dbg !20125
  %or1160 = or i32 %or1155, %shr1159, !dbg !20125
  %arraydecay1161 = getelementptr inbounds [8 x i8], [8 x i8]* %modact, i64 0, i64 0, !dbg !20125
  %600 = bitcast i8* %arraydecay1161 to i32*, !dbg !20125
  %add.ptr1162 = getelementptr i32, i32* %600, i64 1, !dbg !20125
  %601 = load i32, i32* %add.ptr1162, align 4, !dbg !20125
  %and1163 = and i32 %601, -16777216, !dbg !20125
  %shr1164 = lshr i32 %and1163, 24, !dbg !20125
  %or1165 = or i32 %or1160, %shr1164, !dbg !20125
  br label %cond.end1170, !dbg !20125

cond.false1166:                                   ; preds = %do.end1143
  %arraydecay1167 = getelementptr inbounds [8 x i8], [8 x i8]* %modact, i64 0, i64 0, !dbg !20125
  %602 = bitcast i8* %arraydecay1167 to i32*, !dbg !20125
  %add.ptr1168 = getelementptr i32, i32* %602, i64 1, !dbg !20125
  %603 = load i32, i32* %add.ptr1168, align 4, !dbg !20125
  %call1169 = call i32 @__fswab32(i32 %603) #10, !dbg !20125
  br label %cond.end1170, !dbg !20125

cond.end1170:                                     ; preds = %cond.false1166, %cond.true1146
  %cond1171 = phi i32 [ %or1165, %cond.true1146 ], [ %call1169, %cond.false1166 ], !dbg !20125
  %and1172 = and i32 %cond1171, -268369921, !dbg !20125
  %604 = load i32, i32* %_v1141, align 4, !dbg !20125
  %and1173 = and i32 %604, 4095, !dbg !20125
  %shl1174 = shl i32 %and1173, 16, !dbg !20125
  %or1175 = or i32 %and1172, %shl1174, !dbg !20125
  %605 = call i1 @llvm.is.constant.i32(i32 %or1175), !dbg !20125
  br i1 %605, label %cond.true1176, label %cond.false1316, !dbg !20125

cond.true1176:                                    ; preds = %cond.end1170
  %arraydecay1177 = getelementptr inbounds [8 x i8], [8 x i8]* %modact, i64 0, i64 0, !dbg !20125
  %606 = bitcast i8* %arraydecay1177 to i32*, !dbg !20125
  %add.ptr1178 = getelementptr i32, i32* %606, i64 1, !dbg !20125
  %607 = load i32, i32* %add.ptr1178, align 4, !dbg !20125
  %608 = call i1 @llvm.is.constant.i32(i32 %607), !dbg !20125
  br i1 %608, label %cond.true1179, label %cond.false1199, !dbg !20125

cond.true1179:                                    ; preds = %cond.true1176
  %arraydecay1180 = getelementptr inbounds [8 x i8], [8 x i8]* %modact, i64 0, i64 0, !dbg !20125
  %609 = bitcast i8* %arraydecay1180 to i32*, !dbg !20125
  %add.ptr1181 = getelementptr i32, i32* %609, i64 1, !dbg !20125
  %610 = load i32, i32* %add.ptr1181, align 4, !dbg !20125
  %and1182 = and i32 %610, 255, !dbg !20125
  %shl1183 = shl i32 %and1182, 24, !dbg !20125
  %arraydecay1184 = getelementptr inbounds [8 x i8], [8 x i8]* %modact, i64 0, i64 0, !dbg !20125
  %611 = bitcast i8* %arraydecay1184 to i32*, !dbg !20125
  %add.ptr1185 = getelementptr i32, i32* %611, i64 1, !dbg !20125
  %612 = load i32, i32* %add.ptr1185, align 4, !dbg !20125
  %and1186 = and i32 %612, 65280, !dbg !20125
  %shl1187 = shl i32 %and1186, 8, !dbg !20125
  %or1188 = or i32 %shl1183, %shl1187, !dbg !20125
  %arraydecay1189 = getelementptr inbounds [8 x i8], [8 x i8]* %modact, i64 0, i64 0, !dbg !20125
  %613 = bitcast i8* %arraydecay1189 to i32*, !dbg !20125
  %add.ptr1190 = getelementptr i32, i32* %613, i64 1, !dbg !20125
  %614 = load i32, i32* %add.ptr1190, align 4, !dbg !20125
  %and1191 = and i32 %614, 16711680, !dbg !20125
  %shr1192 = lshr i32 %and1191, 8, !dbg !20125
  %or1193 = or i32 %or1188, %shr1192, !dbg !20125
  %arraydecay1194 = getelementptr inbounds [8 x i8], [8 x i8]* %modact, i64 0, i64 0, !dbg !20125
  %615 = bitcast i8* %arraydecay1194 to i32*, !dbg !20125
  %add.ptr1195 = getelementptr i32, i32* %615, i64 1, !dbg !20125
  %616 = load i32, i32* %add.ptr1195, align 4, !dbg !20125
  %and1196 = and i32 %616, -16777216, !dbg !20125
  %shr1197 = lshr i32 %and1196, 24, !dbg !20125
  %or1198 = or i32 %or1193, %shr1197, !dbg !20125
  br label %cond.end1203, !dbg !20125

cond.false1199:                                   ; preds = %cond.true1176
  %arraydecay1200 = getelementptr inbounds [8 x i8], [8 x i8]* %modact, i64 0, i64 0, !dbg !20125
  %617 = bitcast i8* %arraydecay1200 to i32*, !dbg !20125
  %add.ptr1201 = getelementptr i32, i32* %617, i64 1, !dbg !20125
  %618 = load i32, i32* %add.ptr1201, align 4, !dbg !20125
  %call1202 = call i32 @__fswab32(i32 %618) #10, !dbg !20125
  br label %cond.end1203, !dbg !20125

cond.end1203:                                     ; preds = %cond.false1199, %cond.true1179
  %cond1204 = phi i32 [ %or1198, %cond.true1179 ], [ %call1202, %cond.false1199 ], !dbg !20125
  %and1205 = and i32 %cond1204, -268369921, !dbg !20125
  %619 = load i32, i32* %_v1141, align 4, !dbg !20125
  %and1206 = and i32 %619, 4095, !dbg !20125
  %shl1207 = shl i32 %and1206, 16, !dbg !20125
  %or1208 = or i32 %and1205, %shl1207, !dbg !20125
  %and1209 = and i32 %or1208, 255, !dbg !20125
  %shl1210 = shl i32 %and1209, 24, !dbg !20125
  %arraydecay1211 = getelementptr inbounds [8 x i8], [8 x i8]* %modact, i64 0, i64 0, !dbg !20125
  %620 = bitcast i8* %arraydecay1211 to i32*, !dbg !20125
  %add.ptr1212 = getelementptr i32, i32* %620, i64 1, !dbg !20125
  %621 = load i32, i32* %add.ptr1212, align 4, !dbg !20125
  %622 = call i1 @llvm.is.constant.i32(i32 %621), !dbg !20125
  br i1 %622, label %cond.true1213, label %cond.false1233, !dbg !20125

cond.true1213:                                    ; preds = %cond.end1203
  %arraydecay1214 = getelementptr inbounds [8 x i8], [8 x i8]* %modact, i64 0, i64 0, !dbg !20125
  %623 = bitcast i8* %arraydecay1214 to i32*, !dbg !20125
  %add.ptr1215 = getelementptr i32, i32* %623, i64 1, !dbg !20125
  %624 = load i32, i32* %add.ptr1215, align 4, !dbg !20125
  %and1216 = and i32 %624, 255, !dbg !20125
  %shl1217 = shl i32 %and1216, 24, !dbg !20125
  %arraydecay1218 = getelementptr inbounds [8 x i8], [8 x i8]* %modact, i64 0, i64 0, !dbg !20125
  %625 = bitcast i8* %arraydecay1218 to i32*, !dbg !20125
  %add.ptr1219 = getelementptr i32, i32* %625, i64 1, !dbg !20125
  %626 = load i32, i32* %add.ptr1219, align 4, !dbg !20125
  %and1220 = and i32 %626, 65280, !dbg !20125
  %shl1221 = shl i32 %and1220, 8, !dbg !20125
  %or1222 = or i32 %shl1217, %shl1221, !dbg !20125
  %arraydecay1223 = getelementptr inbounds [8 x i8], [8 x i8]* %modact, i64 0, i64 0, !dbg !20125
  %627 = bitcast i8* %arraydecay1223 to i32*, !dbg !20125
  %add.ptr1224 = getelementptr i32, i32* %627, i64 1, !dbg !20125
  %628 = load i32, i32* %add.ptr1224, align 4, !dbg !20125
  %and1225 = and i32 %628, 16711680, !dbg !20125
  %shr1226 = lshr i32 %and1225, 8, !dbg !20125
  %or1227 = or i32 %or1222, %shr1226, !dbg !20125
  %arraydecay1228 = getelementptr inbounds [8 x i8], [8 x i8]* %modact, i64 0, i64 0, !dbg !20125
  %629 = bitcast i8* %arraydecay1228 to i32*, !dbg !20125
  %add.ptr1229 = getelementptr i32, i32* %629, i64 1, !dbg !20125
  %630 = load i32, i32* %add.ptr1229, align 4, !dbg !20125
  %and1230 = and i32 %630, -16777216, !dbg !20125
  %shr1231 = lshr i32 %and1230, 24, !dbg !20125
  %or1232 = or i32 %or1227, %shr1231, !dbg !20125
  br label %cond.end1237, !dbg !20125

cond.false1233:                                   ; preds = %cond.end1203
  %arraydecay1234 = getelementptr inbounds [8 x i8], [8 x i8]* %modact, i64 0, i64 0, !dbg !20125
  %631 = bitcast i8* %arraydecay1234 to i32*, !dbg !20125
  %add.ptr1235 = getelementptr i32, i32* %631, i64 1, !dbg !20125
  %632 = load i32, i32* %add.ptr1235, align 4, !dbg !20125
  %call1236 = call i32 @__fswab32(i32 %632) #10, !dbg !20125
  br label %cond.end1237, !dbg !20125

cond.end1237:                                     ; preds = %cond.false1233, %cond.true1213
  %cond1238 = phi i32 [ %or1232, %cond.true1213 ], [ %call1236, %cond.false1233 ], !dbg !20125
  %and1239 = and i32 %cond1238, -268369921, !dbg !20125
  %633 = load i32, i32* %_v1141, align 4, !dbg !20125
  %and1240 = and i32 %633, 4095, !dbg !20125
  %shl1241 = shl i32 %and1240, 16, !dbg !20125
  %or1242 = or i32 %and1239, %shl1241, !dbg !20125
  %and1243 = and i32 %or1242, 65280, !dbg !20125
  %shl1244 = shl i32 %and1243, 8, !dbg !20125
  %or1245 = or i32 %shl1210, %shl1244, !dbg !20125
  %arraydecay1246 = getelementptr inbounds [8 x i8], [8 x i8]* %modact, i64 0, i64 0, !dbg !20125
  %634 = bitcast i8* %arraydecay1246 to i32*, !dbg !20125
  %add.ptr1247 = getelementptr i32, i32* %634, i64 1, !dbg !20125
  %635 = load i32, i32* %add.ptr1247, align 4, !dbg !20125
  %636 = call i1 @llvm.is.constant.i32(i32 %635), !dbg !20125
  br i1 %636, label %cond.true1248, label %cond.false1268, !dbg !20125

cond.true1248:                                    ; preds = %cond.end1237
  %arraydecay1249 = getelementptr inbounds [8 x i8], [8 x i8]* %modact, i64 0, i64 0, !dbg !20125
  %637 = bitcast i8* %arraydecay1249 to i32*, !dbg !20125
  %add.ptr1250 = getelementptr i32, i32* %637, i64 1, !dbg !20125
  %638 = load i32, i32* %add.ptr1250, align 4, !dbg !20125
  %and1251 = and i32 %638, 255, !dbg !20125
  %shl1252 = shl i32 %and1251, 24, !dbg !20125
  %arraydecay1253 = getelementptr inbounds [8 x i8], [8 x i8]* %modact, i64 0, i64 0, !dbg !20125
  %639 = bitcast i8* %arraydecay1253 to i32*, !dbg !20125
  %add.ptr1254 = getelementptr i32, i32* %639, i64 1, !dbg !20125
  %640 = load i32, i32* %add.ptr1254, align 4, !dbg !20125
  %and1255 = and i32 %640, 65280, !dbg !20125
  %shl1256 = shl i32 %and1255, 8, !dbg !20125
  %or1257 = or i32 %shl1252, %shl1256, !dbg !20125
  %arraydecay1258 = getelementptr inbounds [8 x i8], [8 x i8]* %modact, i64 0, i64 0, !dbg !20125
  %641 = bitcast i8* %arraydecay1258 to i32*, !dbg !20125
  %add.ptr1259 = getelementptr i32, i32* %641, i64 1, !dbg !20125
  %642 = load i32, i32* %add.ptr1259, align 4, !dbg !20125
  %and1260 = and i32 %642, 16711680, !dbg !20125
  %shr1261 = lshr i32 %and1260, 8, !dbg !20125
  %or1262 = or i32 %or1257, %shr1261, !dbg !20125
  %arraydecay1263 = getelementptr inbounds [8 x i8], [8 x i8]* %modact, i64 0, i64 0, !dbg !20125
  %643 = bitcast i8* %arraydecay1263 to i32*, !dbg !20125
  %add.ptr1264 = getelementptr i32, i32* %643, i64 1, !dbg !20125
  %644 = load i32, i32* %add.ptr1264, align 4, !dbg !20125
  %and1265 = and i32 %644, -16777216, !dbg !20125
  %shr1266 = lshr i32 %and1265, 24, !dbg !20125
  %or1267 = or i32 %or1262, %shr1266, !dbg !20125
  br label %cond.end1272, !dbg !20125

cond.false1268:                                   ; preds = %cond.end1237
  %arraydecay1269 = getelementptr inbounds [8 x i8], [8 x i8]* %modact, i64 0, i64 0, !dbg !20125
  %645 = bitcast i8* %arraydecay1269 to i32*, !dbg !20125
  %add.ptr1270 = getelementptr i32, i32* %645, i64 1, !dbg !20125
  %646 = load i32, i32* %add.ptr1270, align 4, !dbg !20125
  %call1271 = call i32 @__fswab32(i32 %646) #10, !dbg !20125
  br label %cond.end1272, !dbg !20125

cond.end1272:                                     ; preds = %cond.false1268, %cond.true1248
  %cond1273 = phi i32 [ %or1267, %cond.true1248 ], [ %call1271, %cond.false1268 ], !dbg !20125
  %and1274 = and i32 %cond1273, -268369921, !dbg !20125
  %647 = load i32, i32* %_v1141, align 4, !dbg !20125
  %and1275 = and i32 %647, 4095, !dbg !20125
  %shl1276 = shl i32 %and1275, 16, !dbg !20125
  %or1277 = or i32 %and1274, %shl1276, !dbg !20125
  %and1278 = and i32 %or1277, 16711680, !dbg !20125
  %shr1279 = lshr i32 %and1278, 8, !dbg !20125
  %or1280 = or i32 %or1245, %shr1279, !dbg !20125
  %arraydecay1281 = getelementptr inbounds [8 x i8], [8 x i8]* %modact, i64 0, i64 0, !dbg !20125
  %648 = bitcast i8* %arraydecay1281 to i32*, !dbg !20125
  %add.ptr1282 = getelementptr i32, i32* %648, i64 1, !dbg !20125
  %649 = load i32, i32* %add.ptr1282, align 4, !dbg !20125
  %650 = call i1 @llvm.is.constant.i32(i32 %649), !dbg !20125
  br i1 %650, label %cond.true1283, label %cond.false1303, !dbg !20125

cond.true1283:                                    ; preds = %cond.end1272
  %arraydecay1284 = getelementptr inbounds [8 x i8], [8 x i8]* %modact, i64 0, i64 0, !dbg !20125
  %651 = bitcast i8* %arraydecay1284 to i32*, !dbg !20125
  %add.ptr1285 = getelementptr i32, i32* %651, i64 1, !dbg !20125
  %652 = load i32, i32* %add.ptr1285, align 4, !dbg !20125
  %and1286 = and i32 %652, 255, !dbg !20125
  %shl1287 = shl i32 %and1286, 24, !dbg !20125
  %arraydecay1288 = getelementptr inbounds [8 x i8], [8 x i8]* %modact, i64 0, i64 0, !dbg !20125
  %653 = bitcast i8* %arraydecay1288 to i32*, !dbg !20125
  %add.ptr1289 = getelementptr i32, i32* %653, i64 1, !dbg !20125
  %654 = load i32, i32* %add.ptr1289, align 4, !dbg !20125
  %and1290 = and i32 %654, 65280, !dbg !20125
  %shl1291 = shl i32 %and1290, 8, !dbg !20125
  %or1292 = or i32 %shl1287, %shl1291, !dbg !20125
  %arraydecay1293 = getelementptr inbounds [8 x i8], [8 x i8]* %modact, i64 0, i64 0, !dbg !20125
  %655 = bitcast i8* %arraydecay1293 to i32*, !dbg !20125
  %add.ptr1294 = getelementptr i32, i32* %655, i64 1, !dbg !20125
  %656 = load i32, i32* %add.ptr1294, align 4, !dbg !20125
  %and1295 = and i32 %656, 16711680, !dbg !20125
  %shr1296 = lshr i32 %and1295, 8, !dbg !20125
  %or1297 = or i32 %or1292, %shr1296, !dbg !20125
  %arraydecay1298 = getelementptr inbounds [8 x i8], [8 x i8]* %modact, i64 0, i64 0, !dbg !20125
  %657 = bitcast i8* %arraydecay1298 to i32*, !dbg !20125
  %add.ptr1299 = getelementptr i32, i32* %657, i64 1, !dbg !20125
  %658 = load i32, i32* %add.ptr1299, align 4, !dbg !20125
  %and1300 = and i32 %658, -16777216, !dbg !20125
  %shr1301 = lshr i32 %and1300, 24, !dbg !20125
  %or1302 = or i32 %or1297, %shr1301, !dbg !20125
  br label %cond.end1307, !dbg !20125

cond.false1303:                                   ; preds = %cond.end1272
  %arraydecay1304 = getelementptr inbounds [8 x i8], [8 x i8]* %modact, i64 0, i64 0, !dbg !20125
  %659 = bitcast i8* %arraydecay1304 to i32*, !dbg !20125
  %add.ptr1305 = getelementptr i32, i32* %659, i64 1, !dbg !20125
  %660 = load i32, i32* %add.ptr1305, align 4, !dbg !20125
  %call1306 = call i32 @__fswab32(i32 %660) #10, !dbg !20125
  br label %cond.end1307, !dbg !20125

cond.end1307:                                     ; preds = %cond.false1303, %cond.true1283
  %cond1308 = phi i32 [ %or1302, %cond.true1283 ], [ %call1306, %cond.false1303 ], !dbg !20125
  %and1309 = and i32 %cond1308, -268369921, !dbg !20125
  %661 = load i32, i32* %_v1141, align 4, !dbg !20125
  %and1310 = and i32 %661, 4095, !dbg !20125
  %shl1311 = shl i32 %and1310, 16, !dbg !20125
  %or1312 = or i32 %and1309, %shl1311, !dbg !20125
  %and1313 = and i32 %or1312, -16777216, !dbg !20125
  %shr1314 = lshr i32 %and1313, 24, !dbg !20125
  %or1315 = or i32 %or1280, %shr1314, !dbg !20125
  br label %cond.end1350, !dbg !20125

cond.false1316:                                   ; preds = %cond.end1170
  %arraydecay1317 = getelementptr inbounds [8 x i8], [8 x i8]* %modact, i64 0, i64 0, !dbg !20125
  %662 = bitcast i8* %arraydecay1317 to i32*, !dbg !20125
  %add.ptr1318 = getelementptr i32, i32* %662, i64 1, !dbg !20125
  %663 = load i32, i32* %add.ptr1318, align 4, !dbg !20125
  %664 = call i1 @llvm.is.constant.i32(i32 %663), !dbg !20125
  br i1 %664, label %cond.true1319, label %cond.false1339, !dbg !20125

cond.true1319:                                    ; preds = %cond.false1316
  %arraydecay1320 = getelementptr inbounds [8 x i8], [8 x i8]* %modact, i64 0, i64 0, !dbg !20125
  %665 = bitcast i8* %arraydecay1320 to i32*, !dbg !20125
  %add.ptr1321 = getelementptr i32, i32* %665, i64 1, !dbg !20125
  %666 = load i32, i32* %add.ptr1321, align 4, !dbg !20125
  %and1322 = and i32 %666, 255, !dbg !20125
  %shl1323 = shl i32 %and1322, 24, !dbg !20125
  %arraydecay1324 = getelementptr inbounds [8 x i8], [8 x i8]* %modact, i64 0, i64 0, !dbg !20125
  %667 = bitcast i8* %arraydecay1324 to i32*, !dbg !20125
  %add.ptr1325 = getelementptr i32, i32* %667, i64 1, !dbg !20125
  %668 = load i32, i32* %add.ptr1325, align 4, !dbg !20125
  %and1326 = and i32 %668, 65280, !dbg !20125
  %shl1327 = shl i32 %and1326, 8, !dbg !20125
  %or1328 = or i32 %shl1323, %shl1327, !dbg !20125
  %arraydecay1329 = getelementptr inbounds [8 x i8], [8 x i8]* %modact, i64 0, i64 0, !dbg !20125
  %669 = bitcast i8* %arraydecay1329 to i32*, !dbg !20125
  %add.ptr1330 = getelementptr i32, i32* %669, i64 1, !dbg !20125
  %670 = load i32, i32* %add.ptr1330, align 4, !dbg !20125
  %and1331 = and i32 %670, 16711680, !dbg !20125
  %shr1332 = lshr i32 %and1331, 8, !dbg !20125
  %or1333 = or i32 %or1328, %shr1332, !dbg !20125
  %arraydecay1334 = getelementptr inbounds [8 x i8], [8 x i8]* %modact, i64 0, i64 0, !dbg !20125
  %671 = bitcast i8* %arraydecay1334 to i32*, !dbg !20125
  %add.ptr1335 = getelementptr i32, i32* %671, i64 1, !dbg !20125
  %672 = load i32, i32* %add.ptr1335, align 4, !dbg !20125
  %and1336 = and i32 %672, -16777216, !dbg !20125
  %shr1337 = lshr i32 %and1336, 24, !dbg !20125
  %or1338 = or i32 %or1333, %shr1337, !dbg !20125
  br label %cond.end1343, !dbg !20125

cond.false1339:                                   ; preds = %cond.false1316
  %arraydecay1340 = getelementptr inbounds [8 x i8], [8 x i8]* %modact, i64 0, i64 0, !dbg !20125
  %673 = bitcast i8* %arraydecay1340 to i32*, !dbg !20125
  %add.ptr1341 = getelementptr i32, i32* %673, i64 1, !dbg !20125
  %674 = load i32, i32* %add.ptr1341, align 4, !dbg !20125
  %call1342 = call i32 @__fswab32(i32 %674) #10, !dbg !20125
  br label %cond.end1343, !dbg !20125

cond.end1343:                                     ; preds = %cond.false1339, %cond.true1319
  %cond1344 = phi i32 [ %or1338, %cond.true1319 ], [ %call1342, %cond.false1339 ], !dbg !20125
  %and1345 = and i32 %cond1344, -268369921, !dbg !20125
  %675 = load i32, i32* %_v1141, align 4, !dbg !20125
  %and1346 = and i32 %675, 4095, !dbg !20125
  %shl1347 = shl i32 %and1346, 16, !dbg !20125
  %or1348 = or i32 %and1345, %shl1347, !dbg !20125
  %call1349 = call i32 @__fswab32(i32 %or1348) #10, !dbg !20125
  br label %cond.end1350, !dbg !20125

cond.end1350:                                     ; preds = %cond.end1343, %cond.end1307
  %cond1351 = phi i32 [ %or1315, %cond.end1307 ], [ %call1349, %cond.end1343 ], !dbg !20125
  %arraydecay1352 = getelementptr inbounds [8 x i8], [8 x i8]* %modact, i64 0, i64 0, !dbg !20125
  %676 = bitcast i8* %arraydecay1352 to i32*, !dbg !20125
  %add.ptr1353 = getelementptr i32, i32* %676, i64 1, !dbg !20125
  store i32 %cond1351, i32* %add.ptr1353, align 4, !dbg !20125
  br label %do.end1354, !dbg !20125

do.end1354:                                       ; preds = %cond.end1350
  %677 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !20128
  %dev1355 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %677, i32 0, i32 0, !dbg !20129
  %678 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev1355, align 8, !dbg !20129
  %arraydecay1356 = getelementptr inbounds [8 x i8], [8 x i8]* %modact, i64 0, i64 0, !dbg !20130
  %call1357 = call %struct.mlx5_modify_hdr* @mlx5_modify_header_alloc(%struct.mlx5_core_dev* %678, i8 zeroext 4, i8 zeroext 1, i8* %arraydecay1356) #8, !dbg !20131
  store %struct.mlx5_modify_hdr* %call1357, %struct.mlx5_modify_hdr** %mod_hdr, align 8, !dbg !20132
  %679 = load %struct.mlx5_modify_hdr*, %struct.mlx5_modify_hdr** %mod_hdr, align 8, !dbg !20133
  %680 = bitcast %struct.mlx5_modify_hdr* %679 to i8*, !dbg !20133
  %call1358 = call zeroext i1 @IS_ERR(i8* %680) #8, !dbg !20135
  br i1 %call1358, label %if.then1359, label %if.end1363, !dbg !20136

if.then1359:                                      ; preds = %do.end1354
  %681 = load %struct.mlx5_modify_hdr*, %struct.mlx5_modify_hdr** %mod_hdr, align 8, !dbg !20137
  %682 = bitcast %struct.mlx5_modify_hdr* %681 to i8*, !dbg !20137
  %call1360 = call i64 @PTR_ERR(i8* %682) #8, !dbg !20139
  %conv1361 = trunc i64 %call1360 to i32, !dbg !20139
  store i32 %conv1361, i32* %err, align 4, !dbg !20140
  %683 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !20141
  %device1362 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %683, i32 0, i32 0, !dbg !20141
  %684 = load %struct.device*, %struct.device** %device1362, align 8, !dbg !20141
  %685 = load i32, i32* %err, align 4, !dbg !20141
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %684, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.16, i64 0, i64 0), i32 %685) #9, !dbg !20141
  br label %err_mod_hdr, !dbg !20142

if.end1363:                                       ; preds = %do.end1354
  %686 = load %struct.mlx5_flow_table*, %struct.mlx5_flow_table** %ft, align 8, !dbg !20143
  %687 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !20144
  %offloads = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %687, i32 0, i32 13, !dbg !20145
  %ft_offloads_restore = getelementptr inbounds %struct.mlx5_esw_offload, %struct.mlx5_esw_offload* %offloads, i32 0, i32 0, !dbg !20146
  store %struct.mlx5_flow_table* %686, %struct.mlx5_flow_table** %ft_offloads_restore, align 8, !dbg !20147
  %688 = load %struct.mlx5_flow_group*, %struct.mlx5_flow_group** %g, align 8, !dbg !20148
  %689 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !20149
  %offloads1364 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %689, i32 0, i32 13, !dbg !20150
  %restore_group = getelementptr inbounds %struct.mlx5_esw_offload, %struct.mlx5_esw_offload* %offloads1364, i32 0, i32 1, !dbg !20151
  store %struct.mlx5_flow_group* %688, %struct.mlx5_flow_group** %restore_group, align 8, !dbg !20152
  %690 = load %struct.mlx5_modify_hdr*, %struct.mlx5_modify_hdr** %mod_hdr, align 8, !dbg !20153
  %691 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !20154
  %offloads1365 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %691, i32 0, i32 13, !dbg !20155
  %restore_copy_hdr_id = getelementptr inbounds %struct.mlx5_esw_offload, %struct.mlx5_esw_offload* %offloads1365, i32 0, i32 2, !dbg !20156
  store %struct.mlx5_modify_hdr* %690, %struct.mlx5_modify_hdr** %restore_copy_hdr_id, align 8, !dbg !20157
  %692 = load i32*, i32** %flow_group_in, align 8, !dbg !20158
  %693 = bitcast i32* %692 to i8*, !dbg !20158
  call void @kvfree(i8* %693) #8, !dbg !20159
  store i32 0, i32* %retval, align 4, !dbg !20160
  br label %return, !dbg !20160

err_mod_hdr:                                      ; preds = %if.then1359
  call void @llvm.dbg.label(metadata !20161), !dbg !20162
  %694 = load %struct.mlx5_flow_group*, %struct.mlx5_flow_group** %g, align 8, !dbg !20163
  call void @mlx5_destroy_flow_group(%struct.mlx5_flow_group* %694) #8, !dbg !20164
  br label %err_group, !dbg !20164

err_group:                                        ; preds = %err_mod_hdr, %if.then706
  call void @llvm.dbg.label(metadata !20165), !dbg !20166
  %695 = load %struct.mlx5_flow_table*, %struct.mlx5_flow_table** %ft, align 8, !dbg !20167
  %call1366 = call i32 @mlx5_destroy_flow_table(%struct.mlx5_flow_table* %695) #8, !dbg !20168
  br label %out_free, !dbg !20168

out_free:                                         ; preds = %err_group, %if.then12, %if.then8
  call void @llvm.dbg.label(metadata !20169), !dbg !20170
  %696 = load i32*, i32** %flow_group_in, align 8, !dbg !20171
  %697 = bitcast i32* %696 to i8*, !dbg !20171
  call void @kvfree(i8* %697) #8, !dbg !20172
  %698 = load i32, i32* %err, align 4, !dbg !20173
  store i32 %698, i32* %retval, align 4, !dbg !20174
  br label %return, !dbg !20174

return:                                           ; preds = %out_free, %if.end1363, %if.then3, %if.then
  %699 = load i32, i32* %retval, align 4, !dbg !20175
  ret i32 %699, !dbg !20175
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @esw_create_vport_rx_group(%struct.mlx5_eswitch* %esw) #0 !dbg !20176 {
entry:
  %pscr_ret__.i = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i, metadata !20177, metadata !DIExpression()), !dbg !20183
  %__vpp_verify.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i, metadata !20187, metadata !DIExpression()), !dbg !20189
  %pfo_val__.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i, metadata !20190, metadata !DIExpression()), !dbg !20192
  %tmp.i = alloca %struct.task_struct*, align 8
  %tmp1.i = alloca %struct.task_struct*, align 8
  %retval = alloca i32, align 4
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  %inlen = alloca i32, align 4
  %g = alloca %struct.mlx5_flow_group*, align 8
  %flow_group_in = alloca i32*, align 8
  %nvports = alloca i32, align 4
  %err = alloca i32, align 4
  %_v = alloca i32, align 4
  %_v162 = alloca i32, align 4
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !20193, metadata !DIExpression()), !dbg !20194
  call void @llvm.dbg.declare(metadata i32* %inlen, metadata !20195, metadata !DIExpression()), !dbg !20196
  store i32 1024, i32* %inlen, align 4, !dbg !20196
  call void @llvm.dbg.declare(metadata %struct.mlx5_flow_group** %g, metadata !20197, metadata !DIExpression()), !dbg !20198
  call void @llvm.dbg.declare(metadata i32** %flow_group_in, metadata !20199, metadata !DIExpression()), !dbg !20200
  call void @llvm.dbg.declare(metadata i32* %nvports, metadata !20201, metadata !DIExpression()), !dbg !20202
  call void @llvm.dbg.declare(metadata i32* %err, metadata !20203, metadata !DIExpression()), !dbg !20204
  store i32 0, i32* %err, align 4, !dbg !20204
  %0 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !20205
  %total_vports = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %0, i32 0, i32 8, !dbg !20206
  %1 = load i32, i32* %total_vports, align 4, !dbg !20206
  %add = add i32 %1, 2, !dbg !20207
  store i32 %add, i32* %nvports, align 4, !dbg !20208
  %2 = load i32, i32* %inlen, align 4, !dbg !20209
  %conv = sext i32 %2 to i64, !dbg !20209
  %call = call i8* @kvzalloc(i64 %conv, i32 3264) #8, !dbg !20210
  %3 = bitcast i8* %call to i32*, !dbg !20210
  store i32* %3, i32** %flow_group_in, align 8, !dbg !20211
  %4 = load i32*, i32** %flow_group_in, align 8, !dbg !20212
  %tobool = icmp ne i32* %4, null, !dbg !20212
  br i1 %tobool, label %if.end, label %if.then, !dbg !20214

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !20215
  br label %return, !dbg !20215

if.end:                                           ; preds = %entry
  %5 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !20216
  %6 = load i32*, i32** %flow_group_in, align 8, !dbg !20217
  call void @esw_set_flow_group_source_port(%struct.mlx5_eswitch* %5, i32* %6) #8, !dbg !20218
  br label %do.body, !dbg !20219

do.body:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %_v, metadata !20220, metadata !DIExpression()), !dbg !20222
  store i32 0, i32* %_v, align 4, !dbg !20222
  br label %do.body1, !dbg !20222

do.body1:                                         ; preds = %do.body
  br label %do.end, !dbg !20223

do.end:                                           ; preds = %do.body1
  %7 = load i32*, i32** %flow_group_in, align 8, !dbg !20222
  %add.ptr = getelementptr i32, i32* %7, i64 7, !dbg !20222
  %8 = load i32, i32* %add.ptr, align 4, !dbg !20222
  %9 = call i1 @llvm.is.constant.i32(i32 %8), !dbg !20222
  br i1 %9, label %cond.true, label %cond.false, !dbg !20222

cond.true:                                        ; preds = %do.end
  %10 = load i32*, i32** %flow_group_in, align 8, !dbg !20222
  %add.ptr2 = getelementptr i32, i32* %10, i64 7, !dbg !20222
  %11 = load i32, i32* %add.ptr2, align 4, !dbg !20222
  %and = and i32 %11, 255, !dbg !20222
  %shl = shl i32 %and, 24, !dbg !20222
  %12 = load i32*, i32** %flow_group_in, align 8, !dbg !20222
  %add.ptr3 = getelementptr i32, i32* %12, i64 7, !dbg !20222
  %13 = load i32, i32* %add.ptr3, align 4, !dbg !20222
  %and4 = and i32 %13, 65280, !dbg !20222
  %shl5 = shl i32 %and4, 8, !dbg !20222
  %or = or i32 %shl, %shl5, !dbg !20222
  %14 = load i32*, i32** %flow_group_in, align 8, !dbg !20222
  %add.ptr6 = getelementptr i32, i32* %14, i64 7, !dbg !20222
  %15 = load i32, i32* %add.ptr6, align 4, !dbg !20222
  %and7 = and i32 %15, 16711680, !dbg !20222
  %shr = lshr i32 %and7, 8, !dbg !20222
  %or8 = or i32 %or, %shr, !dbg !20222
  %16 = load i32*, i32** %flow_group_in, align 8, !dbg !20222
  %add.ptr9 = getelementptr i32, i32* %16, i64 7, !dbg !20222
  %17 = load i32, i32* %add.ptr9, align 4, !dbg !20222
  %and10 = and i32 %17, -16777216, !dbg !20222
  %shr11 = lshr i32 %and10, 24, !dbg !20222
  %or12 = or i32 %or8, %shr11, !dbg !20222
  br label %cond.end, !dbg !20222

cond.false:                                       ; preds = %do.end
  %18 = load i32*, i32** %flow_group_in, align 8, !dbg !20222
  %add.ptr13 = getelementptr i32, i32* %18, i64 7, !dbg !20222
  %19 = load i32, i32* %add.ptr13, align 4, !dbg !20222
  %call14 = call i32 @__fswab32(i32 %19) #10, !dbg !20222
  br label %cond.end, !dbg !20222

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %or12, %cond.true ], [ %call14, %cond.false ], !dbg !20222
  %and15 = and i32 %cond, 0, !dbg !20222
  %20 = load i32, i32* %_v, align 4, !dbg !20222
  %shl16 = shl i32 %20, 0, !dbg !20222
  %or17 = or i32 %and15, %shl16, !dbg !20222
  %21 = call i1 @llvm.is.constant.i32(i32 %or17), !dbg !20222
  br i1 %21, label %cond.true18, label %cond.false130, !dbg !20222

cond.true18:                                      ; preds = %cond.end
  %22 = load i32*, i32** %flow_group_in, align 8, !dbg !20222
  %add.ptr19 = getelementptr i32, i32* %22, i64 7, !dbg !20222
  %23 = load i32, i32* %add.ptr19, align 4, !dbg !20222
  %24 = call i1 @llvm.is.constant.i32(i32 %23), !dbg !20222
  br i1 %24, label %cond.true20, label %cond.false36, !dbg !20222

cond.true20:                                      ; preds = %cond.true18
  %25 = load i32*, i32** %flow_group_in, align 8, !dbg !20222
  %add.ptr21 = getelementptr i32, i32* %25, i64 7, !dbg !20222
  %26 = load i32, i32* %add.ptr21, align 4, !dbg !20222
  %and22 = and i32 %26, 255, !dbg !20222
  %shl23 = shl i32 %and22, 24, !dbg !20222
  %27 = load i32*, i32** %flow_group_in, align 8, !dbg !20222
  %add.ptr24 = getelementptr i32, i32* %27, i64 7, !dbg !20222
  %28 = load i32, i32* %add.ptr24, align 4, !dbg !20222
  %and25 = and i32 %28, 65280, !dbg !20222
  %shl26 = shl i32 %and25, 8, !dbg !20222
  %or27 = or i32 %shl23, %shl26, !dbg !20222
  %29 = load i32*, i32** %flow_group_in, align 8, !dbg !20222
  %add.ptr28 = getelementptr i32, i32* %29, i64 7, !dbg !20222
  %30 = load i32, i32* %add.ptr28, align 4, !dbg !20222
  %and29 = and i32 %30, 16711680, !dbg !20222
  %shr30 = lshr i32 %and29, 8, !dbg !20222
  %or31 = or i32 %or27, %shr30, !dbg !20222
  %31 = load i32*, i32** %flow_group_in, align 8, !dbg !20222
  %add.ptr32 = getelementptr i32, i32* %31, i64 7, !dbg !20222
  %32 = load i32, i32* %add.ptr32, align 4, !dbg !20222
  %and33 = and i32 %32, -16777216, !dbg !20222
  %shr34 = lshr i32 %and33, 24, !dbg !20222
  %or35 = or i32 %or31, %shr34, !dbg !20222
  br label %cond.end39, !dbg !20222

cond.false36:                                     ; preds = %cond.true18
  %33 = load i32*, i32** %flow_group_in, align 8, !dbg !20222
  %add.ptr37 = getelementptr i32, i32* %33, i64 7, !dbg !20222
  %34 = load i32, i32* %add.ptr37, align 4, !dbg !20222
  %call38 = call i32 @__fswab32(i32 %34) #10, !dbg !20222
  br label %cond.end39, !dbg !20222

cond.end39:                                       ; preds = %cond.false36, %cond.true20
  %cond40 = phi i32 [ %or35, %cond.true20 ], [ %call38, %cond.false36 ], !dbg !20222
  %and41 = and i32 %cond40, 0, !dbg !20222
  %35 = load i32, i32* %_v, align 4, !dbg !20222
  %shl42 = shl i32 %35, 0, !dbg !20222
  %or43 = or i32 %and41, %shl42, !dbg !20222
  %and44 = and i32 %or43, 255, !dbg !20222
  %shl45 = shl i32 %and44, 24, !dbg !20222
  %36 = load i32*, i32** %flow_group_in, align 8, !dbg !20222
  %add.ptr46 = getelementptr i32, i32* %36, i64 7, !dbg !20222
  %37 = load i32, i32* %add.ptr46, align 4, !dbg !20222
  %38 = call i1 @llvm.is.constant.i32(i32 %37), !dbg !20222
  br i1 %38, label %cond.true47, label %cond.false63, !dbg !20222

cond.true47:                                      ; preds = %cond.end39
  %39 = load i32*, i32** %flow_group_in, align 8, !dbg !20222
  %add.ptr48 = getelementptr i32, i32* %39, i64 7, !dbg !20222
  %40 = load i32, i32* %add.ptr48, align 4, !dbg !20222
  %and49 = and i32 %40, 255, !dbg !20222
  %shl50 = shl i32 %and49, 24, !dbg !20222
  %41 = load i32*, i32** %flow_group_in, align 8, !dbg !20222
  %add.ptr51 = getelementptr i32, i32* %41, i64 7, !dbg !20222
  %42 = load i32, i32* %add.ptr51, align 4, !dbg !20222
  %and52 = and i32 %42, 65280, !dbg !20222
  %shl53 = shl i32 %and52, 8, !dbg !20222
  %or54 = or i32 %shl50, %shl53, !dbg !20222
  %43 = load i32*, i32** %flow_group_in, align 8, !dbg !20222
  %add.ptr55 = getelementptr i32, i32* %43, i64 7, !dbg !20222
  %44 = load i32, i32* %add.ptr55, align 4, !dbg !20222
  %and56 = and i32 %44, 16711680, !dbg !20222
  %shr57 = lshr i32 %and56, 8, !dbg !20222
  %or58 = or i32 %or54, %shr57, !dbg !20222
  %45 = load i32*, i32** %flow_group_in, align 8, !dbg !20222
  %add.ptr59 = getelementptr i32, i32* %45, i64 7, !dbg !20222
  %46 = load i32, i32* %add.ptr59, align 4, !dbg !20222
  %and60 = and i32 %46, -16777216, !dbg !20222
  %shr61 = lshr i32 %and60, 24, !dbg !20222
  %or62 = or i32 %or58, %shr61, !dbg !20222
  br label %cond.end66, !dbg !20222

cond.false63:                                     ; preds = %cond.end39
  %47 = load i32*, i32** %flow_group_in, align 8, !dbg !20222
  %add.ptr64 = getelementptr i32, i32* %47, i64 7, !dbg !20222
  %48 = load i32, i32* %add.ptr64, align 4, !dbg !20222
  %call65 = call i32 @__fswab32(i32 %48) #10, !dbg !20222
  br label %cond.end66, !dbg !20222

cond.end66:                                       ; preds = %cond.false63, %cond.true47
  %cond67 = phi i32 [ %or62, %cond.true47 ], [ %call65, %cond.false63 ], !dbg !20222
  %and68 = and i32 %cond67, 0, !dbg !20222
  %49 = load i32, i32* %_v, align 4, !dbg !20222
  %shl69 = shl i32 %49, 0, !dbg !20222
  %or70 = or i32 %and68, %shl69, !dbg !20222
  %and71 = and i32 %or70, 65280, !dbg !20222
  %shl72 = shl i32 %and71, 8, !dbg !20222
  %or73 = or i32 %shl45, %shl72, !dbg !20222
  %50 = load i32*, i32** %flow_group_in, align 8, !dbg !20222
  %add.ptr74 = getelementptr i32, i32* %50, i64 7, !dbg !20222
  %51 = load i32, i32* %add.ptr74, align 4, !dbg !20222
  %52 = call i1 @llvm.is.constant.i32(i32 %51), !dbg !20222
  br i1 %52, label %cond.true75, label %cond.false91, !dbg !20222

cond.true75:                                      ; preds = %cond.end66
  %53 = load i32*, i32** %flow_group_in, align 8, !dbg !20222
  %add.ptr76 = getelementptr i32, i32* %53, i64 7, !dbg !20222
  %54 = load i32, i32* %add.ptr76, align 4, !dbg !20222
  %and77 = and i32 %54, 255, !dbg !20222
  %shl78 = shl i32 %and77, 24, !dbg !20222
  %55 = load i32*, i32** %flow_group_in, align 8, !dbg !20222
  %add.ptr79 = getelementptr i32, i32* %55, i64 7, !dbg !20222
  %56 = load i32, i32* %add.ptr79, align 4, !dbg !20222
  %and80 = and i32 %56, 65280, !dbg !20222
  %shl81 = shl i32 %and80, 8, !dbg !20222
  %or82 = or i32 %shl78, %shl81, !dbg !20222
  %57 = load i32*, i32** %flow_group_in, align 8, !dbg !20222
  %add.ptr83 = getelementptr i32, i32* %57, i64 7, !dbg !20222
  %58 = load i32, i32* %add.ptr83, align 4, !dbg !20222
  %and84 = and i32 %58, 16711680, !dbg !20222
  %shr85 = lshr i32 %and84, 8, !dbg !20222
  %or86 = or i32 %or82, %shr85, !dbg !20222
  %59 = load i32*, i32** %flow_group_in, align 8, !dbg !20222
  %add.ptr87 = getelementptr i32, i32* %59, i64 7, !dbg !20222
  %60 = load i32, i32* %add.ptr87, align 4, !dbg !20222
  %and88 = and i32 %60, -16777216, !dbg !20222
  %shr89 = lshr i32 %and88, 24, !dbg !20222
  %or90 = or i32 %or86, %shr89, !dbg !20222
  br label %cond.end94, !dbg !20222

cond.false91:                                     ; preds = %cond.end66
  %61 = load i32*, i32** %flow_group_in, align 8, !dbg !20222
  %add.ptr92 = getelementptr i32, i32* %61, i64 7, !dbg !20222
  %62 = load i32, i32* %add.ptr92, align 4, !dbg !20222
  %call93 = call i32 @__fswab32(i32 %62) #10, !dbg !20222
  br label %cond.end94, !dbg !20222

cond.end94:                                       ; preds = %cond.false91, %cond.true75
  %cond95 = phi i32 [ %or90, %cond.true75 ], [ %call93, %cond.false91 ], !dbg !20222
  %and96 = and i32 %cond95, 0, !dbg !20222
  %63 = load i32, i32* %_v, align 4, !dbg !20222
  %shl97 = shl i32 %63, 0, !dbg !20222
  %or98 = or i32 %and96, %shl97, !dbg !20222
  %and99 = and i32 %or98, 16711680, !dbg !20222
  %shr100 = lshr i32 %and99, 8, !dbg !20222
  %or101 = or i32 %or73, %shr100, !dbg !20222
  %64 = load i32*, i32** %flow_group_in, align 8, !dbg !20222
  %add.ptr102 = getelementptr i32, i32* %64, i64 7, !dbg !20222
  %65 = load i32, i32* %add.ptr102, align 4, !dbg !20222
  %66 = call i1 @llvm.is.constant.i32(i32 %65), !dbg !20222
  br i1 %66, label %cond.true103, label %cond.false119, !dbg !20222

cond.true103:                                     ; preds = %cond.end94
  %67 = load i32*, i32** %flow_group_in, align 8, !dbg !20222
  %add.ptr104 = getelementptr i32, i32* %67, i64 7, !dbg !20222
  %68 = load i32, i32* %add.ptr104, align 4, !dbg !20222
  %and105 = and i32 %68, 255, !dbg !20222
  %shl106 = shl i32 %and105, 24, !dbg !20222
  %69 = load i32*, i32** %flow_group_in, align 8, !dbg !20222
  %add.ptr107 = getelementptr i32, i32* %69, i64 7, !dbg !20222
  %70 = load i32, i32* %add.ptr107, align 4, !dbg !20222
  %and108 = and i32 %70, 65280, !dbg !20222
  %shl109 = shl i32 %and108, 8, !dbg !20222
  %or110 = or i32 %shl106, %shl109, !dbg !20222
  %71 = load i32*, i32** %flow_group_in, align 8, !dbg !20222
  %add.ptr111 = getelementptr i32, i32* %71, i64 7, !dbg !20222
  %72 = load i32, i32* %add.ptr111, align 4, !dbg !20222
  %and112 = and i32 %72, 16711680, !dbg !20222
  %shr113 = lshr i32 %and112, 8, !dbg !20222
  %or114 = or i32 %or110, %shr113, !dbg !20222
  %73 = load i32*, i32** %flow_group_in, align 8, !dbg !20222
  %add.ptr115 = getelementptr i32, i32* %73, i64 7, !dbg !20222
  %74 = load i32, i32* %add.ptr115, align 4, !dbg !20222
  %and116 = and i32 %74, -16777216, !dbg !20222
  %shr117 = lshr i32 %and116, 24, !dbg !20222
  %or118 = or i32 %or114, %shr117, !dbg !20222
  br label %cond.end122, !dbg !20222

cond.false119:                                    ; preds = %cond.end94
  %75 = load i32*, i32** %flow_group_in, align 8, !dbg !20222
  %add.ptr120 = getelementptr i32, i32* %75, i64 7, !dbg !20222
  %76 = load i32, i32* %add.ptr120, align 4, !dbg !20222
  %call121 = call i32 @__fswab32(i32 %76) #10, !dbg !20222
  br label %cond.end122, !dbg !20222

cond.end122:                                      ; preds = %cond.false119, %cond.true103
  %cond123 = phi i32 [ %or118, %cond.true103 ], [ %call121, %cond.false119 ], !dbg !20222
  %and124 = and i32 %cond123, 0, !dbg !20222
  %77 = load i32, i32* %_v, align 4, !dbg !20222
  %shl125 = shl i32 %77, 0, !dbg !20222
  %or126 = or i32 %and124, %shl125, !dbg !20222
  %and127 = and i32 %or126, -16777216, !dbg !20222
  %shr128 = lshr i32 %and127, 24, !dbg !20222
  %or129 = or i32 %or101, %shr128, !dbg !20222
  br label %cond.end157, !dbg !20222

cond.false130:                                    ; preds = %cond.end
  %78 = load i32*, i32** %flow_group_in, align 8, !dbg !20222
  %add.ptr131 = getelementptr i32, i32* %78, i64 7, !dbg !20222
  %79 = load i32, i32* %add.ptr131, align 4, !dbg !20222
  %80 = call i1 @llvm.is.constant.i32(i32 %79), !dbg !20222
  br i1 %80, label %cond.true132, label %cond.false148, !dbg !20222

cond.true132:                                     ; preds = %cond.false130
  %81 = load i32*, i32** %flow_group_in, align 8, !dbg !20222
  %add.ptr133 = getelementptr i32, i32* %81, i64 7, !dbg !20222
  %82 = load i32, i32* %add.ptr133, align 4, !dbg !20222
  %and134 = and i32 %82, 255, !dbg !20222
  %shl135 = shl i32 %and134, 24, !dbg !20222
  %83 = load i32*, i32** %flow_group_in, align 8, !dbg !20222
  %add.ptr136 = getelementptr i32, i32* %83, i64 7, !dbg !20222
  %84 = load i32, i32* %add.ptr136, align 4, !dbg !20222
  %and137 = and i32 %84, 65280, !dbg !20222
  %shl138 = shl i32 %and137, 8, !dbg !20222
  %or139 = or i32 %shl135, %shl138, !dbg !20222
  %85 = load i32*, i32** %flow_group_in, align 8, !dbg !20222
  %add.ptr140 = getelementptr i32, i32* %85, i64 7, !dbg !20222
  %86 = load i32, i32* %add.ptr140, align 4, !dbg !20222
  %and141 = and i32 %86, 16711680, !dbg !20222
  %shr142 = lshr i32 %and141, 8, !dbg !20222
  %or143 = or i32 %or139, %shr142, !dbg !20222
  %87 = load i32*, i32** %flow_group_in, align 8, !dbg !20222
  %add.ptr144 = getelementptr i32, i32* %87, i64 7, !dbg !20222
  %88 = load i32, i32* %add.ptr144, align 4, !dbg !20222
  %and145 = and i32 %88, -16777216, !dbg !20222
  %shr146 = lshr i32 %and145, 24, !dbg !20222
  %or147 = or i32 %or143, %shr146, !dbg !20222
  br label %cond.end151, !dbg !20222

cond.false148:                                    ; preds = %cond.false130
  %89 = load i32*, i32** %flow_group_in, align 8, !dbg !20222
  %add.ptr149 = getelementptr i32, i32* %89, i64 7, !dbg !20222
  %90 = load i32, i32* %add.ptr149, align 4, !dbg !20222
  %call150 = call i32 @__fswab32(i32 %90) #10, !dbg !20222
  br label %cond.end151, !dbg !20222

cond.end151:                                      ; preds = %cond.false148, %cond.true132
  %cond152 = phi i32 [ %or147, %cond.true132 ], [ %call150, %cond.false148 ], !dbg !20222
  %and153 = and i32 %cond152, 0, !dbg !20222
  %91 = load i32, i32* %_v, align 4, !dbg !20222
  %shl154 = shl i32 %91, 0, !dbg !20222
  %or155 = or i32 %and153, %shl154, !dbg !20222
  %call156 = call i32 @__fswab32(i32 %or155) #10, !dbg !20222
  br label %cond.end157, !dbg !20222

cond.end157:                                      ; preds = %cond.end151, %cond.end122
  %cond158 = phi i32 [ %or129, %cond.end122 ], [ %call156, %cond.end151 ], !dbg !20222
  %92 = load i32*, i32** %flow_group_in, align 8, !dbg !20222
  %add.ptr159 = getelementptr i32, i32* %92, i64 7, !dbg !20222
  store i32 %cond158, i32* %add.ptr159, align 4, !dbg !20222
  br label %do.end160, !dbg !20222

do.end160:                                        ; preds = %cond.end157
  br label %do.body161, !dbg !20225

do.body161:                                       ; preds = %do.end160
  call void @llvm.dbg.declare(metadata i32* %_v162, metadata !20226, metadata !DIExpression()), !dbg !20228
  %93 = load i32, i32* %nvports, align 4, !dbg !20228
  %sub = sub i32 %93, 1, !dbg !20228
  store i32 %sub, i32* %_v162, align 4, !dbg !20228
  br label %do.body163, !dbg !20228

do.body163:                                       ; preds = %do.body161
  br label %do.end164, !dbg !20229

do.end164:                                        ; preds = %do.body163
  %94 = load i32*, i32** %flow_group_in, align 8, !dbg !20228
  %add.ptr165 = getelementptr i32, i32* %94, i64 9, !dbg !20228
  %95 = load i32, i32* %add.ptr165, align 4, !dbg !20228
  %96 = call i1 @llvm.is.constant.i32(i32 %95), !dbg !20228
  br i1 %96, label %cond.true166, label %cond.false182, !dbg !20228

cond.true166:                                     ; preds = %do.end164
  %97 = load i32*, i32** %flow_group_in, align 8, !dbg !20228
  %add.ptr167 = getelementptr i32, i32* %97, i64 9, !dbg !20228
  %98 = load i32, i32* %add.ptr167, align 4, !dbg !20228
  %and168 = and i32 %98, 255, !dbg !20228
  %shl169 = shl i32 %and168, 24, !dbg !20228
  %99 = load i32*, i32** %flow_group_in, align 8, !dbg !20228
  %add.ptr170 = getelementptr i32, i32* %99, i64 9, !dbg !20228
  %100 = load i32, i32* %add.ptr170, align 4, !dbg !20228
  %and171 = and i32 %100, 65280, !dbg !20228
  %shl172 = shl i32 %and171, 8, !dbg !20228
  %or173 = or i32 %shl169, %shl172, !dbg !20228
  %101 = load i32*, i32** %flow_group_in, align 8, !dbg !20228
  %add.ptr174 = getelementptr i32, i32* %101, i64 9, !dbg !20228
  %102 = load i32, i32* %add.ptr174, align 4, !dbg !20228
  %and175 = and i32 %102, 16711680, !dbg !20228
  %shr176 = lshr i32 %and175, 8, !dbg !20228
  %or177 = or i32 %or173, %shr176, !dbg !20228
  %103 = load i32*, i32** %flow_group_in, align 8, !dbg !20228
  %add.ptr178 = getelementptr i32, i32* %103, i64 9, !dbg !20228
  %104 = load i32, i32* %add.ptr178, align 4, !dbg !20228
  %and179 = and i32 %104, -16777216, !dbg !20228
  %shr180 = lshr i32 %and179, 24, !dbg !20228
  %or181 = or i32 %or177, %shr180, !dbg !20228
  br label %cond.end185, !dbg !20228

cond.false182:                                    ; preds = %do.end164
  %105 = load i32*, i32** %flow_group_in, align 8, !dbg !20228
  %add.ptr183 = getelementptr i32, i32* %105, i64 9, !dbg !20228
  %106 = load i32, i32* %add.ptr183, align 4, !dbg !20228
  %call184 = call i32 @__fswab32(i32 %106) #10, !dbg !20228
  br label %cond.end185, !dbg !20228

cond.end185:                                      ; preds = %cond.false182, %cond.true166
  %cond186 = phi i32 [ %or181, %cond.true166 ], [ %call184, %cond.false182 ], !dbg !20228
  %and187 = and i32 %cond186, 0, !dbg !20228
  %107 = load i32, i32* %_v162, align 4, !dbg !20228
  %shl188 = shl i32 %107, 0, !dbg !20228
  %or189 = or i32 %and187, %shl188, !dbg !20228
  %108 = call i1 @llvm.is.constant.i32(i32 %or189), !dbg !20228
  br i1 %108, label %cond.true190, label %cond.false302, !dbg !20228

cond.true190:                                     ; preds = %cond.end185
  %109 = load i32*, i32** %flow_group_in, align 8, !dbg !20228
  %add.ptr191 = getelementptr i32, i32* %109, i64 9, !dbg !20228
  %110 = load i32, i32* %add.ptr191, align 4, !dbg !20228
  %111 = call i1 @llvm.is.constant.i32(i32 %110), !dbg !20228
  br i1 %111, label %cond.true192, label %cond.false208, !dbg !20228

cond.true192:                                     ; preds = %cond.true190
  %112 = load i32*, i32** %flow_group_in, align 8, !dbg !20228
  %add.ptr193 = getelementptr i32, i32* %112, i64 9, !dbg !20228
  %113 = load i32, i32* %add.ptr193, align 4, !dbg !20228
  %and194 = and i32 %113, 255, !dbg !20228
  %shl195 = shl i32 %and194, 24, !dbg !20228
  %114 = load i32*, i32** %flow_group_in, align 8, !dbg !20228
  %add.ptr196 = getelementptr i32, i32* %114, i64 9, !dbg !20228
  %115 = load i32, i32* %add.ptr196, align 4, !dbg !20228
  %and197 = and i32 %115, 65280, !dbg !20228
  %shl198 = shl i32 %and197, 8, !dbg !20228
  %or199 = or i32 %shl195, %shl198, !dbg !20228
  %116 = load i32*, i32** %flow_group_in, align 8, !dbg !20228
  %add.ptr200 = getelementptr i32, i32* %116, i64 9, !dbg !20228
  %117 = load i32, i32* %add.ptr200, align 4, !dbg !20228
  %and201 = and i32 %117, 16711680, !dbg !20228
  %shr202 = lshr i32 %and201, 8, !dbg !20228
  %or203 = or i32 %or199, %shr202, !dbg !20228
  %118 = load i32*, i32** %flow_group_in, align 8, !dbg !20228
  %add.ptr204 = getelementptr i32, i32* %118, i64 9, !dbg !20228
  %119 = load i32, i32* %add.ptr204, align 4, !dbg !20228
  %and205 = and i32 %119, -16777216, !dbg !20228
  %shr206 = lshr i32 %and205, 24, !dbg !20228
  %or207 = or i32 %or203, %shr206, !dbg !20228
  br label %cond.end211, !dbg !20228

cond.false208:                                    ; preds = %cond.true190
  %120 = load i32*, i32** %flow_group_in, align 8, !dbg !20228
  %add.ptr209 = getelementptr i32, i32* %120, i64 9, !dbg !20228
  %121 = load i32, i32* %add.ptr209, align 4, !dbg !20228
  %call210 = call i32 @__fswab32(i32 %121) #10, !dbg !20228
  br label %cond.end211, !dbg !20228

cond.end211:                                      ; preds = %cond.false208, %cond.true192
  %cond212 = phi i32 [ %or207, %cond.true192 ], [ %call210, %cond.false208 ], !dbg !20228
  %and213 = and i32 %cond212, 0, !dbg !20228
  %122 = load i32, i32* %_v162, align 4, !dbg !20228
  %shl214 = shl i32 %122, 0, !dbg !20228
  %or215 = or i32 %and213, %shl214, !dbg !20228
  %and216 = and i32 %or215, 255, !dbg !20228
  %shl217 = shl i32 %and216, 24, !dbg !20228
  %123 = load i32*, i32** %flow_group_in, align 8, !dbg !20228
  %add.ptr218 = getelementptr i32, i32* %123, i64 9, !dbg !20228
  %124 = load i32, i32* %add.ptr218, align 4, !dbg !20228
  %125 = call i1 @llvm.is.constant.i32(i32 %124), !dbg !20228
  br i1 %125, label %cond.true219, label %cond.false235, !dbg !20228

cond.true219:                                     ; preds = %cond.end211
  %126 = load i32*, i32** %flow_group_in, align 8, !dbg !20228
  %add.ptr220 = getelementptr i32, i32* %126, i64 9, !dbg !20228
  %127 = load i32, i32* %add.ptr220, align 4, !dbg !20228
  %and221 = and i32 %127, 255, !dbg !20228
  %shl222 = shl i32 %and221, 24, !dbg !20228
  %128 = load i32*, i32** %flow_group_in, align 8, !dbg !20228
  %add.ptr223 = getelementptr i32, i32* %128, i64 9, !dbg !20228
  %129 = load i32, i32* %add.ptr223, align 4, !dbg !20228
  %and224 = and i32 %129, 65280, !dbg !20228
  %shl225 = shl i32 %and224, 8, !dbg !20228
  %or226 = or i32 %shl222, %shl225, !dbg !20228
  %130 = load i32*, i32** %flow_group_in, align 8, !dbg !20228
  %add.ptr227 = getelementptr i32, i32* %130, i64 9, !dbg !20228
  %131 = load i32, i32* %add.ptr227, align 4, !dbg !20228
  %and228 = and i32 %131, 16711680, !dbg !20228
  %shr229 = lshr i32 %and228, 8, !dbg !20228
  %or230 = or i32 %or226, %shr229, !dbg !20228
  %132 = load i32*, i32** %flow_group_in, align 8, !dbg !20228
  %add.ptr231 = getelementptr i32, i32* %132, i64 9, !dbg !20228
  %133 = load i32, i32* %add.ptr231, align 4, !dbg !20228
  %and232 = and i32 %133, -16777216, !dbg !20228
  %shr233 = lshr i32 %and232, 24, !dbg !20228
  %or234 = or i32 %or230, %shr233, !dbg !20228
  br label %cond.end238, !dbg !20228

cond.false235:                                    ; preds = %cond.end211
  %134 = load i32*, i32** %flow_group_in, align 8, !dbg !20228
  %add.ptr236 = getelementptr i32, i32* %134, i64 9, !dbg !20228
  %135 = load i32, i32* %add.ptr236, align 4, !dbg !20228
  %call237 = call i32 @__fswab32(i32 %135) #10, !dbg !20228
  br label %cond.end238, !dbg !20228

cond.end238:                                      ; preds = %cond.false235, %cond.true219
  %cond239 = phi i32 [ %or234, %cond.true219 ], [ %call237, %cond.false235 ], !dbg !20228
  %and240 = and i32 %cond239, 0, !dbg !20228
  %136 = load i32, i32* %_v162, align 4, !dbg !20228
  %shl241 = shl i32 %136, 0, !dbg !20228
  %or242 = or i32 %and240, %shl241, !dbg !20228
  %and243 = and i32 %or242, 65280, !dbg !20228
  %shl244 = shl i32 %and243, 8, !dbg !20228
  %or245 = or i32 %shl217, %shl244, !dbg !20228
  %137 = load i32*, i32** %flow_group_in, align 8, !dbg !20228
  %add.ptr246 = getelementptr i32, i32* %137, i64 9, !dbg !20228
  %138 = load i32, i32* %add.ptr246, align 4, !dbg !20228
  %139 = call i1 @llvm.is.constant.i32(i32 %138), !dbg !20228
  br i1 %139, label %cond.true247, label %cond.false263, !dbg !20228

cond.true247:                                     ; preds = %cond.end238
  %140 = load i32*, i32** %flow_group_in, align 8, !dbg !20228
  %add.ptr248 = getelementptr i32, i32* %140, i64 9, !dbg !20228
  %141 = load i32, i32* %add.ptr248, align 4, !dbg !20228
  %and249 = and i32 %141, 255, !dbg !20228
  %shl250 = shl i32 %and249, 24, !dbg !20228
  %142 = load i32*, i32** %flow_group_in, align 8, !dbg !20228
  %add.ptr251 = getelementptr i32, i32* %142, i64 9, !dbg !20228
  %143 = load i32, i32* %add.ptr251, align 4, !dbg !20228
  %and252 = and i32 %143, 65280, !dbg !20228
  %shl253 = shl i32 %and252, 8, !dbg !20228
  %or254 = or i32 %shl250, %shl253, !dbg !20228
  %144 = load i32*, i32** %flow_group_in, align 8, !dbg !20228
  %add.ptr255 = getelementptr i32, i32* %144, i64 9, !dbg !20228
  %145 = load i32, i32* %add.ptr255, align 4, !dbg !20228
  %and256 = and i32 %145, 16711680, !dbg !20228
  %shr257 = lshr i32 %and256, 8, !dbg !20228
  %or258 = or i32 %or254, %shr257, !dbg !20228
  %146 = load i32*, i32** %flow_group_in, align 8, !dbg !20228
  %add.ptr259 = getelementptr i32, i32* %146, i64 9, !dbg !20228
  %147 = load i32, i32* %add.ptr259, align 4, !dbg !20228
  %and260 = and i32 %147, -16777216, !dbg !20228
  %shr261 = lshr i32 %and260, 24, !dbg !20228
  %or262 = or i32 %or258, %shr261, !dbg !20228
  br label %cond.end266, !dbg !20228

cond.false263:                                    ; preds = %cond.end238
  %148 = load i32*, i32** %flow_group_in, align 8, !dbg !20228
  %add.ptr264 = getelementptr i32, i32* %148, i64 9, !dbg !20228
  %149 = load i32, i32* %add.ptr264, align 4, !dbg !20228
  %call265 = call i32 @__fswab32(i32 %149) #10, !dbg !20228
  br label %cond.end266, !dbg !20228

cond.end266:                                      ; preds = %cond.false263, %cond.true247
  %cond267 = phi i32 [ %or262, %cond.true247 ], [ %call265, %cond.false263 ], !dbg !20228
  %and268 = and i32 %cond267, 0, !dbg !20228
  %150 = load i32, i32* %_v162, align 4, !dbg !20228
  %shl269 = shl i32 %150, 0, !dbg !20228
  %or270 = or i32 %and268, %shl269, !dbg !20228
  %and271 = and i32 %or270, 16711680, !dbg !20228
  %shr272 = lshr i32 %and271, 8, !dbg !20228
  %or273 = or i32 %or245, %shr272, !dbg !20228
  %151 = load i32*, i32** %flow_group_in, align 8, !dbg !20228
  %add.ptr274 = getelementptr i32, i32* %151, i64 9, !dbg !20228
  %152 = load i32, i32* %add.ptr274, align 4, !dbg !20228
  %153 = call i1 @llvm.is.constant.i32(i32 %152), !dbg !20228
  br i1 %153, label %cond.true275, label %cond.false291, !dbg !20228

cond.true275:                                     ; preds = %cond.end266
  %154 = load i32*, i32** %flow_group_in, align 8, !dbg !20228
  %add.ptr276 = getelementptr i32, i32* %154, i64 9, !dbg !20228
  %155 = load i32, i32* %add.ptr276, align 4, !dbg !20228
  %and277 = and i32 %155, 255, !dbg !20228
  %shl278 = shl i32 %and277, 24, !dbg !20228
  %156 = load i32*, i32** %flow_group_in, align 8, !dbg !20228
  %add.ptr279 = getelementptr i32, i32* %156, i64 9, !dbg !20228
  %157 = load i32, i32* %add.ptr279, align 4, !dbg !20228
  %and280 = and i32 %157, 65280, !dbg !20228
  %shl281 = shl i32 %and280, 8, !dbg !20228
  %or282 = or i32 %shl278, %shl281, !dbg !20228
  %158 = load i32*, i32** %flow_group_in, align 8, !dbg !20228
  %add.ptr283 = getelementptr i32, i32* %158, i64 9, !dbg !20228
  %159 = load i32, i32* %add.ptr283, align 4, !dbg !20228
  %and284 = and i32 %159, 16711680, !dbg !20228
  %shr285 = lshr i32 %and284, 8, !dbg !20228
  %or286 = or i32 %or282, %shr285, !dbg !20228
  %160 = load i32*, i32** %flow_group_in, align 8, !dbg !20228
  %add.ptr287 = getelementptr i32, i32* %160, i64 9, !dbg !20228
  %161 = load i32, i32* %add.ptr287, align 4, !dbg !20228
  %and288 = and i32 %161, -16777216, !dbg !20228
  %shr289 = lshr i32 %and288, 24, !dbg !20228
  %or290 = or i32 %or286, %shr289, !dbg !20228
  br label %cond.end294, !dbg !20228

cond.false291:                                    ; preds = %cond.end266
  %162 = load i32*, i32** %flow_group_in, align 8, !dbg !20228
  %add.ptr292 = getelementptr i32, i32* %162, i64 9, !dbg !20228
  %163 = load i32, i32* %add.ptr292, align 4, !dbg !20228
  %call293 = call i32 @__fswab32(i32 %163) #10, !dbg !20228
  br label %cond.end294, !dbg !20228

cond.end294:                                      ; preds = %cond.false291, %cond.true275
  %cond295 = phi i32 [ %or290, %cond.true275 ], [ %call293, %cond.false291 ], !dbg !20228
  %and296 = and i32 %cond295, 0, !dbg !20228
  %164 = load i32, i32* %_v162, align 4, !dbg !20228
  %shl297 = shl i32 %164, 0, !dbg !20228
  %or298 = or i32 %and296, %shl297, !dbg !20228
  %and299 = and i32 %or298, -16777216, !dbg !20228
  %shr300 = lshr i32 %and299, 24, !dbg !20228
  %or301 = or i32 %or273, %shr300, !dbg !20228
  br label %cond.end329, !dbg !20228

cond.false302:                                    ; preds = %cond.end185
  %165 = load i32*, i32** %flow_group_in, align 8, !dbg !20228
  %add.ptr303 = getelementptr i32, i32* %165, i64 9, !dbg !20228
  %166 = load i32, i32* %add.ptr303, align 4, !dbg !20228
  %167 = call i1 @llvm.is.constant.i32(i32 %166), !dbg !20228
  br i1 %167, label %cond.true304, label %cond.false320, !dbg !20228

cond.true304:                                     ; preds = %cond.false302
  %168 = load i32*, i32** %flow_group_in, align 8, !dbg !20228
  %add.ptr305 = getelementptr i32, i32* %168, i64 9, !dbg !20228
  %169 = load i32, i32* %add.ptr305, align 4, !dbg !20228
  %and306 = and i32 %169, 255, !dbg !20228
  %shl307 = shl i32 %and306, 24, !dbg !20228
  %170 = load i32*, i32** %flow_group_in, align 8, !dbg !20228
  %add.ptr308 = getelementptr i32, i32* %170, i64 9, !dbg !20228
  %171 = load i32, i32* %add.ptr308, align 4, !dbg !20228
  %and309 = and i32 %171, 65280, !dbg !20228
  %shl310 = shl i32 %and309, 8, !dbg !20228
  %or311 = or i32 %shl307, %shl310, !dbg !20228
  %172 = load i32*, i32** %flow_group_in, align 8, !dbg !20228
  %add.ptr312 = getelementptr i32, i32* %172, i64 9, !dbg !20228
  %173 = load i32, i32* %add.ptr312, align 4, !dbg !20228
  %and313 = and i32 %173, 16711680, !dbg !20228
  %shr314 = lshr i32 %and313, 8, !dbg !20228
  %or315 = or i32 %or311, %shr314, !dbg !20228
  %174 = load i32*, i32** %flow_group_in, align 8, !dbg !20228
  %add.ptr316 = getelementptr i32, i32* %174, i64 9, !dbg !20228
  %175 = load i32, i32* %add.ptr316, align 4, !dbg !20228
  %and317 = and i32 %175, -16777216, !dbg !20228
  %shr318 = lshr i32 %and317, 24, !dbg !20228
  %or319 = or i32 %or315, %shr318, !dbg !20228
  br label %cond.end323, !dbg !20228

cond.false320:                                    ; preds = %cond.false302
  %176 = load i32*, i32** %flow_group_in, align 8, !dbg !20228
  %add.ptr321 = getelementptr i32, i32* %176, i64 9, !dbg !20228
  %177 = load i32, i32* %add.ptr321, align 4, !dbg !20228
  %call322 = call i32 @__fswab32(i32 %177) #10, !dbg !20228
  br label %cond.end323, !dbg !20228

cond.end323:                                      ; preds = %cond.false320, %cond.true304
  %cond324 = phi i32 [ %or319, %cond.true304 ], [ %call322, %cond.false320 ], !dbg !20228
  %and325 = and i32 %cond324, 0, !dbg !20228
  %178 = load i32, i32* %_v162, align 4, !dbg !20228
  %shl326 = shl i32 %178, 0, !dbg !20228
  %or327 = or i32 %and325, %shl326, !dbg !20228
  %call328 = call i32 @__fswab32(i32 %or327) #10, !dbg !20228
  br label %cond.end329, !dbg !20228

cond.end329:                                      ; preds = %cond.end323, %cond.end294
  %cond330 = phi i32 [ %or301, %cond.end294 ], [ %call328, %cond.end323 ], !dbg !20228
  %179 = load i32*, i32** %flow_group_in, align 8, !dbg !20228
  %add.ptr331 = getelementptr i32, i32* %179, i64 9, !dbg !20228
  store i32 %cond330, i32* %add.ptr331, align 4, !dbg !20228
  br label %do.end332, !dbg !20228

do.end332:                                        ; preds = %cond.end329
  %180 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !20231
  %offloads = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %180, i32 0, i32 13, !dbg !20232
  %ft_offloads = getelementptr inbounds %struct.mlx5_esw_offload, %struct.mlx5_esw_offload* %offloads, i32 0, i32 3, !dbg !20233
  %181 = load %struct.mlx5_flow_table*, %struct.mlx5_flow_table** %ft_offloads, align 8, !dbg !20233
  %182 = load i32*, i32** %flow_group_in, align 8, !dbg !20234
  %call333 = call %struct.mlx5_flow_group* @mlx5_create_flow_group(%struct.mlx5_flow_table* %181, i32* %182) #8, !dbg !20235
  store %struct.mlx5_flow_group* %call333, %struct.mlx5_flow_group** %g, align 8, !dbg !20236
  %183 = load %struct.mlx5_flow_group*, %struct.mlx5_flow_group** %g, align 8, !dbg !20237
  %184 = bitcast %struct.mlx5_flow_group* %183 to i8*, !dbg !20237
  %call334 = call zeroext i1 @IS_ERR(i8* %184) #8, !dbg !20238
  br i1 %call334, label %if.then335, label %if.end339, !dbg !20239

if.then335:                                       ; preds = %do.end332
  %185 = load %struct.mlx5_flow_group*, %struct.mlx5_flow_group** %g, align 8, !dbg !20240
  %186 = bitcast %struct.mlx5_flow_group* %185 to i8*, !dbg !20240
  %call336 = call i64 @PTR_ERR(i8* %186) #8, !dbg !20241
  %conv337 = trunc i64 %call336 to i32, !dbg !20241
  store i32 %conv337, i32* %err, align 4, !dbg !20242
  %187 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !20243
  %dev = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %187, i32 0, i32 0, !dbg !20243
  %188 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !20243
  %device = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %188, i32 0, i32 0, !dbg !20243
  %189 = load %struct.device*, %struct.device** %device, align 8, !dbg !20243
  store i8* null, i8** %__vpp_verify.i, align 8, !dbg !20189
  %190 = load i8*, i8** %__vpp_verify.i, align 8, !dbg !20189
  %191 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #13, !dbg !20192, !srcloc !20244
  store i64 %191, i64* %pfo_val__.i, align 8, !dbg !20192
  %192 = load i64, i64* %pfo_val__.i, align 8, !dbg !20192
  %193 = inttoptr i64 %192 to %struct.task_struct*, !dbg !20192
  store %struct.task_struct* %193, %struct.task_struct** %tmp.i, align 8, !dbg !20192
  %194 = load %struct.task_struct*, %struct.task_struct** %tmp.i, align 8, !dbg !20192
  store %struct.task_struct* %194, %struct.task_struct** %pscr_ret__.i, align 8, !dbg !20183
  %195 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i, align 8, !dbg !20183
  store %struct.task_struct* %195, %struct.task_struct** %tmp1.i, align 8, !dbg !20183
  %196 = load %struct.task_struct*, %struct.task_struct** %tmp1.i, align 8, !dbg !20183
  %pid = getelementptr inbounds %struct.task_struct, %struct.task_struct* %196, i32 0, i32 35, !dbg !20243
  %197 = load i32, i32* %pid, align 64, !dbg !20243
  %198 = load i32, i32* %err, align 4, !dbg !20243
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %189, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.17, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @__func__.esw_create_vport_rx_group, i64 0, i64 0), i32 1532, i32 %197, i32 %198) #9, !dbg !20243
  br label %out, !dbg !20245

if.end339:                                        ; preds = %do.end332
  %199 = load %struct.mlx5_flow_group*, %struct.mlx5_flow_group** %g, align 8, !dbg !20246
  %200 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !20247
  %offloads340 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %200, i32 0, i32 13, !dbg !20248
  %vport_rx_group = getelementptr inbounds %struct.mlx5_esw_offload, %struct.mlx5_esw_offload* %offloads340, i32 0, i32 4, !dbg !20249
  store %struct.mlx5_flow_group* %199, %struct.mlx5_flow_group** %vport_rx_group, align 8, !dbg !20250
  br label %out, !dbg !20247

out:                                              ; preds = %if.end339, %if.then335
  call void @llvm.dbg.label(metadata !20251), !dbg !20252
  %201 = load i32*, i32** %flow_group_in, align 8, !dbg !20253
  %202 = bitcast i32* %201 to i8*, !dbg !20253
  call void @kvfree(i8* %202) #8, !dbg !20254
  %203 = load i32, i32* %err, align 4, !dbg !20255
  store i32 %203, i32* %retval, align 4, !dbg !20256
  br label %return, !dbg !20256

return:                                           ; preds = %out, %if.then
  %204 = load i32, i32* %retval, align 4, !dbg !20257
  ret i32 %204, !dbg !20257
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @esw_destroy_restore_table(%struct.mlx5_eswitch* %esw) #0 !dbg !20258 {
entry:
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  %offloads = alloca %struct.mlx5_esw_offload*, align 8
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !20259, metadata !DIExpression()), !dbg !20260
  call void @llvm.dbg.declare(metadata %struct.mlx5_esw_offload** %offloads, metadata !20261, metadata !DIExpression()), !dbg !20263
  %0 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !20264
  %offloads1 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %0, i32 0, i32 13, !dbg !20265
  store %struct.mlx5_esw_offload* %offloads1, %struct.mlx5_esw_offload** %offloads, align 8, !dbg !20263
  %1 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !20266
  %call = call zeroext i1 @mlx5_eswitch_reg_c1_loopback_supported(%struct.mlx5_eswitch* %1) #8, !dbg !20268
  br i1 %call, label %if.end, label %if.then, !dbg !20269

if.then:                                          ; preds = %entry
  br label %return, !dbg !20270

if.end:                                           ; preds = %entry
  %2 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !20271
  %dev = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %2, i32 0, i32 0, !dbg !20272
  %3 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !20272
  %4 = load %struct.mlx5_esw_offload*, %struct.mlx5_esw_offload** %offloads, align 8, !dbg !20273
  %restore_copy_hdr_id = getelementptr inbounds %struct.mlx5_esw_offload, %struct.mlx5_esw_offload* %4, i32 0, i32 2, !dbg !20274
  %5 = load %struct.mlx5_modify_hdr*, %struct.mlx5_modify_hdr** %restore_copy_hdr_id, align 8, !dbg !20274
  call void @mlx5_modify_header_dealloc(%struct.mlx5_core_dev* %3, %struct.mlx5_modify_hdr* %5) #8, !dbg !20275
  %6 = load %struct.mlx5_esw_offload*, %struct.mlx5_esw_offload** %offloads, align 8, !dbg !20276
  %restore_group = getelementptr inbounds %struct.mlx5_esw_offload, %struct.mlx5_esw_offload* %6, i32 0, i32 1, !dbg !20277
  %7 = load %struct.mlx5_flow_group*, %struct.mlx5_flow_group** %restore_group, align 8, !dbg !20277
  call void @mlx5_destroy_flow_group(%struct.mlx5_flow_group* %7) #8, !dbg !20278
  %8 = load %struct.mlx5_esw_offload*, %struct.mlx5_esw_offload** %offloads, align 8, !dbg !20279
  %ft_offloads_restore = getelementptr inbounds %struct.mlx5_esw_offload, %struct.mlx5_esw_offload* %8, i32 0, i32 0, !dbg !20280
  %9 = load %struct.mlx5_flow_table*, %struct.mlx5_flow_table** %ft_offloads_restore, align 8, !dbg !20280
  %call2 = call i32 @mlx5_destroy_flow_table(%struct.mlx5_flow_table* %9) #8, !dbg !20281
  br label %return, !dbg !20282

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !20282
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @esw_destroy_offloads_table(%struct.mlx5_eswitch* %esw) #0 !dbg !20283 {
entry:
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  %offloads = alloca %struct.mlx5_esw_offload*, align 8
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !20284, metadata !DIExpression()), !dbg !20285
  call void @llvm.dbg.declare(metadata %struct.mlx5_esw_offload** %offloads, metadata !20286, metadata !DIExpression()), !dbg !20287
  %0 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !20288
  %offloads1 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %0, i32 0, i32 13, !dbg !20289
  store %struct.mlx5_esw_offload* %offloads1, %struct.mlx5_esw_offload** %offloads, align 8, !dbg !20287
  %1 = load %struct.mlx5_esw_offload*, %struct.mlx5_esw_offload** %offloads, align 8, !dbg !20290
  %ft_offloads = getelementptr inbounds %struct.mlx5_esw_offload, %struct.mlx5_esw_offload* %1, i32 0, i32 3, !dbg !20291
  %2 = load %struct.mlx5_flow_table*, %struct.mlx5_flow_table** %ft_offloads, align 8, !dbg !20291
  %call = call i32 @mlx5_destroy_flow_table(%struct.mlx5_flow_table* %2) #8, !dbg !20292
  ret void, !dbg !20293
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @esw_destroy_uplink_offloads_acl_tables(%struct.mlx5_eswitch* %esw) #0 !dbg !20294 {
entry:
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  %vport = alloca %struct.mlx5_vport*, align 8
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !20295, metadata !DIExpression()), !dbg !20296
  call void @llvm.dbg.declare(metadata %struct.mlx5_vport** %vport, metadata !20297, metadata !DIExpression()), !dbg !20298
  %0 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !20299
  %call = call %struct.mlx5_vport* @mlx5_eswitch_get_vport(%struct.mlx5_eswitch* %0, i16 zeroext -1) #8, !dbg !20300
  store %struct.mlx5_vport* %call, %struct.mlx5_vport** %vport, align 8, !dbg !20301
  %1 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !20302
  %2 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport, align 8, !dbg !20303
  call void @esw_vport_destroy_offloads_acl_tables(%struct.mlx5_eswitch* %1, %struct.mlx5_vport* %2) #8, !dbg !20304
  ret void, !dbg !20305
}

; Function Attrs: noredzone
declare dso_local %struct.mlx5_flow_table* @mlx5_create_flow_table(%struct.mlx5_flow_namespace*, %struct.mlx5_flow_table_attr*) #5

; Function Attrs: noredzone
declare dso_local %struct.mlx5_flow_group* @mlx5_create_flow_group(%struct.mlx5_flow_table*, i32*) #5

; Function Attrs: noredzone
declare dso_local %struct.mlx5_modify_hdr* @mlx5_modify_header_alloc(%struct.mlx5_core_dev*, i8 zeroext, i8 zeroext, i8*) #5

; Function Attrs: noredzone
declare dso_local void @mlx5_destroy_flow_group(%struct.mlx5_flow_group*) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @esw_set_flow_group_source_port(%struct.mlx5_eswitch* %esw, i32* %flow_group_in) #0 !dbg !20306 {
entry:
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  %flow_group_in.addr = alloca i32*, align 8
  %match_criteria = alloca i8*, align 8
  %_v = alloca i32, align 4
  %_v169 = alloca i32, align 4
  %_v342 = alloca i32, align 4
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !20309, metadata !DIExpression()), !dbg !20310
  store i32* %flow_group_in, i32** %flow_group_in.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %flow_group_in.addr, metadata !20311, metadata !DIExpression()), !dbg !20312
  call void @llvm.dbg.declare(metadata i8** %match_criteria, metadata !20313, metadata !DIExpression()), !dbg !20314
  %0 = load i32*, i32** %flow_group_in.addr, align 8, !dbg !20315
  %1 = bitcast i32* %0 to i8*, !dbg !20315
  %add.ptr = getelementptr i8, i8* %1, i64 64, !dbg !20315
  store i8* %add.ptr, i8** %match_criteria, align 8, !dbg !20314
  %2 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !20316
  %call = call zeroext i1 @mlx5_eswitch_vport_match_metadata_enabled(%struct.mlx5_eswitch* %2) #8, !dbg !20318
  br i1 %call, label %if.then, label %if.else, !dbg !20319

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !20320

do.body:                                          ; preds = %if.then
  call void @llvm.dbg.declare(metadata i32* %_v, metadata !20322, metadata !DIExpression()), !dbg !20324
  store i32 8, i32* %_v, align 4, !dbg !20324
  br label %do.body1, !dbg !20324

do.body1:                                         ; preds = %do.body
  br label %do.end, !dbg !20325

do.end:                                           ; preds = %do.body1
  %3 = load i32*, i32** %flow_group_in.addr, align 8, !dbg !20324
  %add.ptr2 = getelementptr i32, i32* %3, i64 15, !dbg !20324
  %4 = load i32, i32* %add.ptr2, align 4, !dbg !20324
  %5 = call i1 @llvm.is.constant.i32(i32 %4), !dbg !20324
  br i1 %5, label %cond.true, label %cond.false, !dbg !20324

cond.true:                                        ; preds = %do.end
  %6 = load i32*, i32** %flow_group_in.addr, align 8, !dbg !20324
  %add.ptr3 = getelementptr i32, i32* %6, i64 15, !dbg !20324
  %7 = load i32, i32* %add.ptr3, align 4, !dbg !20324
  %and = and i32 %7, 255, !dbg !20324
  %shl = shl i32 %and, 24, !dbg !20324
  %8 = load i32*, i32** %flow_group_in.addr, align 8, !dbg !20324
  %add.ptr4 = getelementptr i32, i32* %8, i64 15, !dbg !20324
  %9 = load i32, i32* %add.ptr4, align 4, !dbg !20324
  %and5 = and i32 %9, 65280, !dbg !20324
  %shl6 = shl i32 %and5, 8, !dbg !20324
  %or = or i32 %shl, %shl6, !dbg !20324
  %10 = load i32*, i32** %flow_group_in.addr, align 8, !dbg !20324
  %add.ptr7 = getelementptr i32, i32* %10, i64 15, !dbg !20324
  %11 = load i32, i32* %add.ptr7, align 4, !dbg !20324
  %and8 = and i32 %11, 16711680, !dbg !20324
  %shr = lshr i32 %and8, 8, !dbg !20324
  %or9 = or i32 %or, %shr, !dbg !20324
  %12 = load i32*, i32** %flow_group_in.addr, align 8, !dbg !20324
  %add.ptr10 = getelementptr i32, i32* %12, i64 15, !dbg !20324
  %13 = load i32, i32* %add.ptr10, align 4, !dbg !20324
  %and11 = and i32 %13, -16777216, !dbg !20324
  %shr12 = lshr i32 %and11, 24, !dbg !20324
  %or13 = or i32 %or9, %shr12, !dbg !20324
  br label %cond.end, !dbg !20324

cond.false:                                       ; preds = %do.end
  %14 = load i32*, i32** %flow_group_in.addr, align 8, !dbg !20324
  %add.ptr14 = getelementptr i32, i32* %14, i64 15, !dbg !20324
  %15 = load i32, i32* %add.ptr14, align 4, !dbg !20324
  %call15 = call i32 @__fswab32(i32 %15) #10, !dbg !20324
  br label %cond.end, !dbg !20324

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %or13, %cond.true ], [ %call15, %cond.false ], !dbg !20324
  %and16 = and i32 %cond, -256, !dbg !20324
  %16 = load i32, i32* %_v, align 4, !dbg !20324
  %and17 = and i32 %16, 255, !dbg !20324
  %shl18 = shl i32 %and17, 0, !dbg !20324
  %or19 = or i32 %and16, %shl18, !dbg !20324
  %17 = call i1 @llvm.is.constant.i32(i32 %or19), !dbg !20324
  br i1 %17, label %cond.true20, label %cond.false136, !dbg !20324

cond.true20:                                      ; preds = %cond.end
  %18 = load i32*, i32** %flow_group_in.addr, align 8, !dbg !20324
  %add.ptr21 = getelementptr i32, i32* %18, i64 15, !dbg !20324
  %19 = load i32, i32* %add.ptr21, align 4, !dbg !20324
  %20 = call i1 @llvm.is.constant.i32(i32 %19), !dbg !20324
  br i1 %20, label %cond.true22, label %cond.false38, !dbg !20324

cond.true22:                                      ; preds = %cond.true20
  %21 = load i32*, i32** %flow_group_in.addr, align 8, !dbg !20324
  %add.ptr23 = getelementptr i32, i32* %21, i64 15, !dbg !20324
  %22 = load i32, i32* %add.ptr23, align 4, !dbg !20324
  %and24 = and i32 %22, 255, !dbg !20324
  %shl25 = shl i32 %and24, 24, !dbg !20324
  %23 = load i32*, i32** %flow_group_in.addr, align 8, !dbg !20324
  %add.ptr26 = getelementptr i32, i32* %23, i64 15, !dbg !20324
  %24 = load i32, i32* %add.ptr26, align 4, !dbg !20324
  %and27 = and i32 %24, 65280, !dbg !20324
  %shl28 = shl i32 %and27, 8, !dbg !20324
  %or29 = or i32 %shl25, %shl28, !dbg !20324
  %25 = load i32*, i32** %flow_group_in.addr, align 8, !dbg !20324
  %add.ptr30 = getelementptr i32, i32* %25, i64 15, !dbg !20324
  %26 = load i32, i32* %add.ptr30, align 4, !dbg !20324
  %and31 = and i32 %26, 16711680, !dbg !20324
  %shr32 = lshr i32 %and31, 8, !dbg !20324
  %or33 = or i32 %or29, %shr32, !dbg !20324
  %27 = load i32*, i32** %flow_group_in.addr, align 8, !dbg !20324
  %add.ptr34 = getelementptr i32, i32* %27, i64 15, !dbg !20324
  %28 = load i32, i32* %add.ptr34, align 4, !dbg !20324
  %and35 = and i32 %28, -16777216, !dbg !20324
  %shr36 = lshr i32 %and35, 24, !dbg !20324
  %or37 = or i32 %or33, %shr36, !dbg !20324
  br label %cond.end41, !dbg !20324

cond.false38:                                     ; preds = %cond.true20
  %29 = load i32*, i32** %flow_group_in.addr, align 8, !dbg !20324
  %add.ptr39 = getelementptr i32, i32* %29, i64 15, !dbg !20324
  %30 = load i32, i32* %add.ptr39, align 4, !dbg !20324
  %call40 = call i32 @__fswab32(i32 %30) #10, !dbg !20324
  br label %cond.end41, !dbg !20324

cond.end41:                                       ; preds = %cond.false38, %cond.true22
  %cond42 = phi i32 [ %or37, %cond.true22 ], [ %call40, %cond.false38 ], !dbg !20324
  %and43 = and i32 %cond42, -256, !dbg !20324
  %31 = load i32, i32* %_v, align 4, !dbg !20324
  %and44 = and i32 %31, 255, !dbg !20324
  %shl45 = shl i32 %and44, 0, !dbg !20324
  %or46 = or i32 %and43, %shl45, !dbg !20324
  %and47 = and i32 %or46, 255, !dbg !20324
  %shl48 = shl i32 %and47, 24, !dbg !20324
  %32 = load i32*, i32** %flow_group_in.addr, align 8, !dbg !20324
  %add.ptr49 = getelementptr i32, i32* %32, i64 15, !dbg !20324
  %33 = load i32, i32* %add.ptr49, align 4, !dbg !20324
  %34 = call i1 @llvm.is.constant.i32(i32 %33), !dbg !20324
  br i1 %34, label %cond.true50, label %cond.false66, !dbg !20324

cond.true50:                                      ; preds = %cond.end41
  %35 = load i32*, i32** %flow_group_in.addr, align 8, !dbg !20324
  %add.ptr51 = getelementptr i32, i32* %35, i64 15, !dbg !20324
  %36 = load i32, i32* %add.ptr51, align 4, !dbg !20324
  %and52 = and i32 %36, 255, !dbg !20324
  %shl53 = shl i32 %and52, 24, !dbg !20324
  %37 = load i32*, i32** %flow_group_in.addr, align 8, !dbg !20324
  %add.ptr54 = getelementptr i32, i32* %37, i64 15, !dbg !20324
  %38 = load i32, i32* %add.ptr54, align 4, !dbg !20324
  %and55 = and i32 %38, 65280, !dbg !20324
  %shl56 = shl i32 %and55, 8, !dbg !20324
  %or57 = or i32 %shl53, %shl56, !dbg !20324
  %39 = load i32*, i32** %flow_group_in.addr, align 8, !dbg !20324
  %add.ptr58 = getelementptr i32, i32* %39, i64 15, !dbg !20324
  %40 = load i32, i32* %add.ptr58, align 4, !dbg !20324
  %and59 = and i32 %40, 16711680, !dbg !20324
  %shr60 = lshr i32 %and59, 8, !dbg !20324
  %or61 = or i32 %or57, %shr60, !dbg !20324
  %41 = load i32*, i32** %flow_group_in.addr, align 8, !dbg !20324
  %add.ptr62 = getelementptr i32, i32* %41, i64 15, !dbg !20324
  %42 = load i32, i32* %add.ptr62, align 4, !dbg !20324
  %and63 = and i32 %42, -16777216, !dbg !20324
  %shr64 = lshr i32 %and63, 24, !dbg !20324
  %or65 = or i32 %or61, %shr64, !dbg !20324
  br label %cond.end69, !dbg !20324

cond.false66:                                     ; preds = %cond.end41
  %43 = load i32*, i32** %flow_group_in.addr, align 8, !dbg !20324
  %add.ptr67 = getelementptr i32, i32* %43, i64 15, !dbg !20324
  %44 = load i32, i32* %add.ptr67, align 4, !dbg !20324
  %call68 = call i32 @__fswab32(i32 %44) #10, !dbg !20324
  br label %cond.end69, !dbg !20324

cond.end69:                                       ; preds = %cond.false66, %cond.true50
  %cond70 = phi i32 [ %or65, %cond.true50 ], [ %call68, %cond.false66 ], !dbg !20324
  %and71 = and i32 %cond70, -256, !dbg !20324
  %45 = load i32, i32* %_v, align 4, !dbg !20324
  %and72 = and i32 %45, 255, !dbg !20324
  %shl73 = shl i32 %and72, 0, !dbg !20324
  %or74 = or i32 %and71, %shl73, !dbg !20324
  %and75 = and i32 %or74, 65280, !dbg !20324
  %shl76 = shl i32 %and75, 8, !dbg !20324
  %or77 = or i32 %shl48, %shl76, !dbg !20324
  %46 = load i32*, i32** %flow_group_in.addr, align 8, !dbg !20324
  %add.ptr78 = getelementptr i32, i32* %46, i64 15, !dbg !20324
  %47 = load i32, i32* %add.ptr78, align 4, !dbg !20324
  %48 = call i1 @llvm.is.constant.i32(i32 %47), !dbg !20324
  br i1 %48, label %cond.true79, label %cond.false95, !dbg !20324

cond.true79:                                      ; preds = %cond.end69
  %49 = load i32*, i32** %flow_group_in.addr, align 8, !dbg !20324
  %add.ptr80 = getelementptr i32, i32* %49, i64 15, !dbg !20324
  %50 = load i32, i32* %add.ptr80, align 4, !dbg !20324
  %and81 = and i32 %50, 255, !dbg !20324
  %shl82 = shl i32 %and81, 24, !dbg !20324
  %51 = load i32*, i32** %flow_group_in.addr, align 8, !dbg !20324
  %add.ptr83 = getelementptr i32, i32* %51, i64 15, !dbg !20324
  %52 = load i32, i32* %add.ptr83, align 4, !dbg !20324
  %and84 = and i32 %52, 65280, !dbg !20324
  %shl85 = shl i32 %and84, 8, !dbg !20324
  %or86 = or i32 %shl82, %shl85, !dbg !20324
  %53 = load i32*, i32** %flow_group_in.addr, align 8, !dbg !20324
  %add.ptr87 = getelementptr i32, i32* %53, i64 15, !dbg !20324
  %54 = load i32, i32* %add.ptr87, align 4, !dbg !20324
  %and88 = and i32 %54, 16711680, !dbg !20324
  %shr89 = lshr i32 %and88, 8, !dbg !20324
  %or90 = or i32 %or86, %shr89, !dbg !20324
  %55 = load i32*, i32** %flow_group_in.addr, align 8, !dbg !20324
  %add.ptr91 = getelementptr i32, i32* %55, i64 15, !dbg !20324
  %56 = load i32, i32* %add.ptr91, align 4, !dbg !20324
  %and92 = and i32 %56, -16777216, !dbg !20324
  %shr93 = lshr i32 %and92, 24, !dbg !20324
  %or94 = or i32 %or90, %shr93, !dbg !20324
  br label %cond.end98, !dbg !20324

cond.false95:                                     ; preds = %cond.end69
  %57 = load i32*, i32** %flow_group_in.addr, align 8, !dbg !20324
  %add.ptr96 = getelementptr i32, i32* %57, i64 15, !dbg !20324
  %58 = load i32, i32* %add.ptr96, align 4, !dbg !20324
  %call97 = call i32 @__fswab32(i32 %58) #10, !dbg !20324
  br label %cond.end98, !dbg !20324

cond.end98:                                       ; preds = %cond.false95, %cond.true79
  %cond99 = phi i32 [ %or94, %cond.true79 ], [ %call97, %cond.false95 ], !dbg !20324
  %and100 = and i32 %cond99, -256, !dbg !20324
  %59 = load i32, i32* %_v, align 4, !dbg !20324
  %and101 = and i32 %59, 255, !dbg !20324
  %shl102 = shl i32 %and101, 0, !dbg !20324
  %or103 = or i32 %and100, %shl102, !dbg !20324
  %and104 = and i32 %or103, 16711680, !dbg !20324
  %shr105 = lshr i32 %and104, 8, !dbg !20324
  %or106 = or i32 %or77, %shr105, !dbg !20324
  %60 = load i32*, i32** %flow_group_in.addr, align 8, !dbg !20324
  %add.ptr107 = getelementptr i32, i32* %60, i64 15, !dbg !20324
  %61 = load i32, i32* %add.ptr107, align 4, !dbg !20324
  %62 = call i1 @llvm.is.constant.i32(i32 %61), !dbg !20324
  br i1 %62, label %cond.true108, label %cond.false124, !dbg !20324

cond.true108:                                     ; preds = %cond.end98
  %63 = load i32*, i32** %flow_group_in.addr, align 8, !dbg !20324
  %add.ptr109 = getelementptr i32, i32* %63, i64 15, !dbg !20324
  %64 = load i32, i32* %add.ptr109, align 4, !dbg !20324
  %and110 = and i32 %64, 255, !dbg !20324
  %shl111 = shl i32 %and110, 24, !dbg !20324
  %65 = load i32*, i32** %flow_group_in.addr, align 8, !dbg !20324
  %add.ptr112 = getelementptr i32, i32* %65, i64 15, !dbg !20324
  %66 = load i32, i32* %add.ptr112, align 4, !dbg !20324
  %and113 = and i32 %66, 65280, !dbg !20324
  %shl114 = shl i32 %and113, 8, !dbg !20324
  %or115 = or i32 %shl111, %shl114, !dbg !20324
  %67 = load i32*, i32** %flow_group_in.addr, align 8, !dbg !20324
  %add.ptr116 = getelementptr i32, i32* %67, i64 15, !dbg !20324
  %68 = load i32, i32* %add.ptr116, align 4, !dbg !20324
  %and117 = and i32 %68, 16711680, !dbg !20324
  %shr118 = lshr i32 %and117, 8, !dbg !20324
  %or119 = or i32 %or115, %shr118, !dbg !20324
  %69 = load i32*, i32** %flow_group_in.addr, align 8, !dbg !20324
  %add.ptr120 = getelementptr i32, i32* %69, i64 15, !dbg !20324
  %70 = load i32, i32* %add.ptr120, align 4, !dbg !20324
  %and121 = and i32 %70, -16777216, !dbg !20324
  %shr122 = lshr i32 %and121, 24, !dbg !20324
  %or123 = or i32 %or119, %shr122, !dbg !20324
  br label %cond.end127, !dbg !20324

cond.false124:                                    ; preds = %cond.end98
  %71 = load i32*, i32** %flow_group_in.addr, align 8, !dbg !20324
  %add.ptr125 = getelementptr i32, i32* %71, i64 15, !dbg !20324
  %72 = load i32, i32* %add.ptr125, align 4, !dbg !20324
  %call126 = call i32 @__fswab32(i32 %72) #10, !dbg !20324
  br label %cond.end127, !dbg !20324

cond.end127:                                      ; preds = %cond.false124, %cond.true108
  %cond128 = phi i32 [ %or123, %cond.true108 ], [ %call126, %cond.false124 ], !dbg !20324
  %and129 = and i32 %cond128, -256, !dbg !20324
  %73 = load i32, i32* %_v, align 4, !dbg !20324
  %and130 = and i32 %73, 255, !dbg !20324
  %shl131 = shl i32 %and130, 0, !dbg !20324
  %or132 = or i32 %and129, %shl131, !dbg !20324
  %and133 = and i32 %or132, -16777216, !dbg !20324
  %shr134 = lshr i32 %and133, 24, !dbg !20324
  %or135 = or i32 %or106, %shr134, !dbg !20324
  br label %cond.end164, !dbg !20324

cond.false136:                                    ; preds = %cond.end
  %74 = load i32*, i32** %flow_group_in.addr, align 8, !dbg !20324
  %add.ptr137 = getelementptr i32, i32* %74, i64 15, !dbg !20324
  %75 = load i32, i32* %add.ptr137, align 4, !dbg !20324
  %76 = call i1 @llvm.is.constant.i32(i32 %75), !dbg !20324
  br i1 %76, label %cond.true138, label %cond.false154, !dbg !20324

cond.true138:                                     ; preds = %cond.false136
  %77 = load i32*, i32** %flow_group_in.addr, align 8, !dbg !20324
  %add.ptr139 = getelementptr i32, i32* %77, i64 15, !dbg !20324
  %78 = load i32, i32* %add.ptr139, align 4, !dbg !20324
  %and140 = and i32 %78, 255, !dbg !20324
  %shl141 = shl i32 %and140, 24, !dbg !20324
  %79 = load i32*, i32** %flow_group_in.addr, align 8, !dbg !20324
  %add.ptr142 = getelementptr i32, i32* %79, i64 15, !dbg !20324
  %80 = load i32, i32* %add.ptr142, align 4, !dbg !20324
  %and143 = and i32 %80, 65280, !dbg !20324
  %shl144 = shl i32 %and143, 8, !dbg !20324
  %or145 = or i32 %shl141, %shl144, !dbg !20324
  %81 = load i32*, i32** %flow_group_in.addr, align 8, !dbg !20324
  %add.ptr146 = getelementptr i32, i32* %81, i64 15, !dbg !20324
  %82 = load i32, i32* %add.ptr146, align 4, !dbg !20324
  %and147 = and i32 %82, 16711680, !dbg !20324
  %shr148 = lshr i32 %and147, 8, !dbg !20324
  %or149 = or i32 %or145, %shr148, !dbg !20324
  %83 = load i32*, i32** %flow_group_in.addr, align 8, !dbg !20324
  %add.ptr150 = getelementptr i32, i32* %83, i64 15, !dbg !20324
  %84 = load i32, i32* %add.ptr150, align 4, !dbg !20324
  %and151 = and i32 %84, -16777216, !dbg !20324
  %shr152 = lshr i32 %and151, 24, !dbg !20324
  %or153 = or i32 %or149, %shr152, !dbg !20324
  br label %cond.end157, !dbg !20324

cond.false154:                                    ; preds = %cond.false136
  %85 = load i32*, i32** %flow_group_in.addr, align 8, !dbg !20324
  %add.ptr155 = getelementptr i32, i32* %85, i64 15, !dbg !20324
  %86 = load i32, i32* %add.ptr155, align 4, !dbg !20324
  %call156 = call i32 @__fswab32(i32 %86) #10, !dbg !20324
  br label %cond.end157, !dbg !20324

cond.end157:                                      ; preds = %cond.false154, %cond.true138
  %cond158 = phi i32 [ %or153, %cond.true138 ], [ %call156, %cond.false154 ], !dbg !20324
  %and159 = and i32 %cond158, -256, !dbg !20324
  %87 = load i32, i32* %_v, align 4, !dbg !20324
  %and160 = and i32 %87, 255, !dbg !20324
  %shl161 = shl i32 %and160, 0, !dbg !20324
  %or162 = or i32 %and159, %shl161, !dbg !20324
  %call163 = call i32 @__fswab32(i32 %or162) #10, !dbg !20324
  br label %cond.end164, !dbg !20324

cond.end164:                                      ; preds = %cond.end157, %cond.end127
  %cond165 = phi i32 [ %or135, %cond.end127 ], [ %call163, %cond.end157 ], !dbg !20324
  %88 = load i32*, i32** %flow_group_in.addr, align 8, !dbg !20324
  %add.ptr166 = getelementptr i32, i32* %88, i64 15, !dbg !20324
  store i32 %cond165, i32* %add.ptr166, align 4, !dbg !20324
  br label %do.end167, !dbg !20324

do.end167:                                        ; preds = %cond.end164
  br label %do.body168, !dbg !20327

do.body168:                                       ; preds = %do.end167
  call void @llvm.dbg.declare(metadata i32* %_v169, metadata !20328, metadata !DIExpression()), !dbg !20330
  %call170 = call i32 @mlx5_eswitch_get_vport_metadata_mask() #8, !dbg !20330
  store i32 %call170, i32* %_v169, align 4, !dbg !20330
  br label %do.body171, !dbg !20330

do.body171:                                       ; preds = %do.body168
  br label %do.end172, !dbg !20331

do.end172:                                        ; preds = %do.body171
  %89 = load i8*, i8** %match_criteria, align 8, !dbg !20330
  %90 = bitcast i8* %89 to i32*, !dbg !20330
  %add.ptr173 = getelementptr i32, i32* %90, i64 59, !dbg !20330
  %91 = load i32, i32* %add.ptr173, align 4, !dbg !20330
  %92 = call i1 @llvm.is.constant.i32(i32 %91), !dbg !20330
  br i1 %92, label %cond.true174, label %cond.false190, !dbg !20330

cond.true174:                                     ; preds = %do.end172
  %93 = load i8*, i8** %match_criteria, align 8, !dbg !20330
  %94 = bitcast i8* %93 to i32*, !dbg !20330
  %add.ptr175 = getelementptr i32, i32* %94, i64 59, !dbg !20330
  %95 = load i32, i32* %add.ptr175, align 4, !dbg !20330
  %and176 = and i32 %95, 255, !dbg !20330
  %shl177 = shl i32 %and176, 24, !dbg !20330
  %96 = load i8*, i8** %match_criteria, align 8, !dbg !20330
  %97 = bitcast i8* %96 to i32*, !dbg !20330
  %add.ptr178 = getelementptr i32, i32* %97, i64 59, !dbg !20330
  %98 = load i32, i32* %add.ptr178, align 4, !dbg !20330
  %and179 = and i32 %98, 65280, !dbg !20330
  %shl180 = shl i32 %and179, 8, !dbg !20330
  %or181 = or i32 %shl177, %shl180, !dbg !20330
  %99 = load i8*, i8** %match_criteria, align 8, !dbg !20330
  %100 = bitcast i8* %99 to i32*, !dbg !20330
  %add.ptr182 = getelementptr i32, i32* %100, i64 59, !dbg !20330
  %101 = load i32, i32* %add.ptr182, align 4, !dbg !20330
  %and183 = and i32 %101, 16711680, !dbg !20330
  %shr184 = lshr i32 %and183, 8, !dbg !20330
  %or185 = or i32 %or181, %shr184, !dbg !20330
  %102 = load i8*, i8** %match_criteria, align 8, !dbg !20330
  %103 = bitcast i8* %102 to i32*, !dbg !20330
  %add.ptr186 = getelementptr i32, i32* %103, i64 59, !dbg !20330
  %104 = load i32, i32* %add.ptr186, align 4, !dbg !20330
  %and187 = and i32 %104, -16777216, !dbg !20330
  %shr188 = lshr i32 %and187, 24, !dbg !20330
  %or189 = or i32 %or185, %shr188, !dbg !20330
  br label %cond.end193, !dbg !20330

cond.false190:                                    ; preds = %do.end172
  %105 = load i8*, i8** %match_criteria, align 8, !dbg !20330
  %106 = bitcast i8* %105 to i32*, !dbg !20330
  %add.ptr191 = getelementptr i32, i32* %106, i64 59, !dbg !20330
  %107 = load i32, i32* %add.ptr191, align 4, !dbg !20330
  %call192 = call i32 @__fswab32(i32 %107) #10, !dbg !20330
  br label %cond.end193, !dbg !20330

cond.end193:                                      ; preds = %cond.false190, %cond.true174
  %cond194 = phi i32 [ %or189, %cond.true174 ], [ %call192, %cond.false190 ], !dbg !20330
  %and195 = and i32 %cond194, 0, !dbg !20330
  %108 = load i32, i32* %_v169, align 4, !dbg !20330
  %shl196 = shl i32 %108, 0, !dbg !20330
  %or197 = or i32 %and195, %shl196, !dbg !20330
  %109 = call i1 @llvm.is.constant.i32(i32 %or197), !dbg !20330
  br i1 %109, label %cond.true198, label %cond.false310, !dbg !20330

cond.true198:                                     ; preds = %cond.end193
  %110 = load i8*, i8** %match_criteria, align 8, !dbg !20330
  %111 = bitcast i8* %110 to i32*, !dbg !20330
  %add.ptr199 = getelementptr i32, i32* %111, i64 59, !dbg !20330
  %112 = load i32, i32* %add.ptr199, align 4, !dbg !20330
  %113 = call i1 @llvm.is.constant.i32(i32 %112), !dbg !20330
  br i1 %113, label %cond.true200, label %cond.false216, !dbg !20330

cond.true200:                                     ; preds = %cond.true198
  %114 = load i8*, i8** %match_criteria, align 8, !dbg !20330
  %115 = bitcast i8* %114 to i32*, !dbg !20330
  %add.ptr201 = getelementptr i32, i32* %115, i64 59, !dbg !20330
  %116 = load i32, i32* %add.ptr201, align 4, !dbg !20330
  %and202 = and i32 %116, 255, !dbg !20330
  %shl203 = shl i32 %and202, 24, !dbg !20330
  %117 = load i8*, i8** %match_criteria, align 8, !dbg !20330
  %118 = bitcast i8* %117 to i32*, !dbg !20330
  %add.ptr204 = getelementptr i32, i32* %118, i64 59, !dbg !20330
  %119 = load i32, i32* %add.ptr204, align 4, !dbg !20330
  %and205 = and i32 %119, 65280, !dbg !20330
  %shl206 = shl i32 %and205, 8, !dbg !20330
  %or207 = or i32 %shl203, %shl206, !dbg !20330
  %120 = load i8*, i8** %match_criteria, align 8, !dbg !20330
  %121 = bitcast i8* %120 to i32*, !dbg !20330
  %add.ptr208 = getelementptr i32, i32* %121, i64 59, !dbg !20330
  %122 = load i32, i32* %add.ptr208, align 4, !dbg !20330
  %and209 = and i32 %122, 16711680, !dbg !20330
  %shr210 = lshr i32 %and209, 8, !dbg !20330
  %or211 = or i32 %or207, %shr210, !dbg !20330
  %123 = load i8*, i8** %match_criteria, align 8, !dbg !20330
  %124 = bitcast i8* %123 to i32*, !dbg !20330
  %add.ptr212 = getelementptr i32, i32* %124, i64 59, !dbg !20330
  %125 = load i32, i32* %add.ptr212, align 4, !dbg !20330
  %and213 = and i32 %125, -16777216, !dbg !20330
  %shr214 = lshr i32 %and213, 24, !dbg !20330
  %or215 = or i32 %or211, %shr214, !dbg !20330
  br label %cond.end219, !dbg !20330

cond.false216:                                    ; preds = %cond.true198
  %126 = load i8*, i8** %match_criteria, align 8, !dbg !20330
  %127 = bitcast i8* %126 to i32*, !dbg !20330
  %add.ptr217 = getelementptr i32, i32* %127, i64 59, !dbg !20330
  %128 = load i32, i32* %add.ptr217, align 4, !dbg !20330
  %call218 = call i32 @__fswab32(i32 %128) #10, !dbg !20330
  br label %cond.end219, !dbg !20330

cond.end219:                                      ; preds = %cond.false216, %cond.true200
  %cond220 = phi i32 [ %or215, %cond.true200 ], [ %call218, %cond.false216 ], !dbg !20330
  %and221 = and i32 %cond220, 0, !dbg !20330
  %129 = load i32, i32* %_v169, align 4, !dbg !20330
  %shl222 = shl i32 %129, 0, !dbg !20330
  %or223 = or i32 %and221, %shl222, !dbg !20330
  %and224 = and i32 %or223, 255, !dbg !20330
  %shl225 = shl i32 %and224, 24, !dbg !20330
  %130 = load i8*, i8** %match_criteria, align 8, !dbg !20330
  %131 = bitcast i8* %130 to i32*, !dbg !20330
  %add.ptr226 = getelementptr i32, i32* %131, i64 59, !dbg !20330
  %132 = load i32, i32* %add.ptr226, align 4, !dbg !20330
  %133 = call i1 @llvm.is.constant.i32(i32 %132), !dbg !20330
  br i1 %133, label %cond.true227, label %cond.false243, !dbg !20330

cond.true227:                                     ; preds = %cond.end219
  %134 = load i8*, i8** %match_criteria, align 8, !dbg !20330
  %135 = bitcast i8* %134 to i32*, !dbg !20330
  %add.ptr228 = getelementptr i32, i32* %135, i64 59, !dbg !20330
  %136 = load i32, i32* %add.ptr228, align 4, !dbg !20330
  %and229 = and i32 %136, 255, !dbg !20330
  %shl230 = shl i32 %and229, 24, !dbg !20330
  %137 = load i8*, i8** %match_criteria, align 8, !dbg !20330
  %138 = bitcast i8* %137 to i32*, !dbg !20330
  %add.ptr231 = getelementptr i32, i32* %138, i64 59, !dbg !20330
  %139 = load i32, i32* %add.ptr231, align 4, !dbg !20330
  %and232 = and i32 %139, 65280, !dbg !20330
  %shl233 = shl i32 %and232, 8, !dbg !20330
  %or234 = or i32 %shl230, %shl233, !dbg !20330
  %140 = load i8*, i8** %match_criteria, align 8, !dbg !20330
  %141 = bitcast i8* %140 to i32*, !dbg !20330
  %add.ptr235 = getelementptr i32, i32* %141, i64 59, !dbg !20330
  %142 = load i32, i32* %add.ptr235, align 4, !dbg !20330
  %and236 = and i32 %142, 16711680, !dbg !20330
  %shr237 = lshr i32 %and236, 8, !dbg !20330
  %or238 = or i32 %or234, %shr237, !dbg !20330
  %143 = load i8*, i8** %match_criteria, align 8, !dbg !20330
  %144 = bitcast i8* %143 to i32*, !dbg !20330
  %add.ptr239 = getelementptr i32, i32* %144, i64 59, !dbg !20330
  %145 = load i32, i32* %add.ptr239, align 4, !dbg !20330
  %and240 = and i32 %145, -16777216, !dbg !20330
  %shr241 = lshr i32 %and240, 24, !dbg !20330
  %or242 = or i32 %or238, %shr241, !dbg !20330
  br label %cond.end246, !dbg !20330

cond.false243:                                    ; preds = %cond.end219
  %146 = load i8*, i8** %match_criteria, align 8, !dbg !20330
  %147 = bitcast i8* %146 to i32*, !dbg !20330
  %add.ptr244 = getelementptr i32, i32* %147, i64 59, !dbg !20330
  %148 = load i32, i32* %add.ptr244, align 4, !dbg !20330
  %call245 = call i32 @__fswab32(i32 %148) #10, !dbg !20330
  br label %cond.end246, !dbg !20330

cond.end246:                                      ; preds = %cond.false243, %cond.true227
  %cond247 = phi i32 [ %or242, %cond.true227 ], [ %call245, %cond.false243 ], !dbg !20330
  %and248 = and i32 %cond247, 0, !dbg !20330
  %149 = load i32, i32* %_v169, align 4, !dbg !20330
  %shl249 = shl i32 %149, 0, !dbg !20330
  %or250 = or i32 %and248, %shl249, !dbg !20330
  %and251 = and i32 %or250, 65280, !dbg !20330
  %shl252 = shl i32 %and251, 8, !dbg !20330
  %or253 = or i32 %shl225, %shl252, !dbg !20330
  %150 = load i8*, i8** %match_criteria, align 8, !dbg !20330
  %151 = bitcast i8* %150 to i32*, !dbg !20330
  %add.ptr254 = getelementptr i32, i32* %151, i64 59, !dbg !20330
  %152 = load i32, i32* %add.ptr254, align 4, !dbg !20330
  %153 = call i1 @llvm.is.constant.i32(i32 %152), !dbg !20330
  br i1 %153, label %cond.true255, label %cond.false271, !dbg !20330

cond.true255:                                     ; preds = %cond.end246
  %154 = load i8*, i8** %match_criteria, align 8, !dbg !20330
  %155 = bitcast i8* %154 to i32*, !dbg !20330
  %add.ptr256 = getelementptr i32, i32* %155, i64 59, !dbg !20330
  %156 = load i32, i32* %add.ptr256, align 4, !dbg !20330
  %and257 = and i32 %156, 255, !dbg !20330
  %shl258 = shl i32 %and257, 24, !dbg !20330
  %157 = load i8*, i8** %match_criteria, align 8, !dbg !20330
  %158 = bitcast i8* %157 to i32*, !dbg !20330
  %add.ptr259 = getelementptr i32, i32* %158, i64 59, !dbg !20330
  %159 = load i32, i32* %add.ptr259, align 4, !dbg !20330
  %and260 = and i32 %159, 65280, !dbg !20330
  %shl261 = shl i32 %and260, 8, !dbg !20330
  %or262 = or i32 %shl258, %shl261, !dbg !20330
  %160 = load i8*, i8** %match_criteria, align 8, !dbg !20330
  %161 = bitcast i8* %160 to i32*, !dbg !20330
  %add.ptr263 = getelementptr i32, i32* %161, i64 59, !dbg !20330
  %162 = load i32, i32* %add.ptr263, align 4, !dbg !20330
  %and264 = and i32 %162, 16711680, !dbg !20330
  %shr265 = lshr i32 %and264, 8, !dbg !20330
  %or266 = or i32 %or262, %shr265, !dbg !20330
  %163 = load i8*, i8** %match_criteria, align 8, !dbg !20330
  %164 = bitcast i8* %163 to i32*, !dbg !20330
  %add.ptr267 = getelementptr i32, i32* %164, i64 59, !dbg !20330
  %165 = load i32, i32* %add.ptr267, align 4, !dbg !20330
  %and268 = and i32 %165, -16777216, !dbg !20330
  %shr269 = lshr i32 %and268, 24, !dbg !20330
  %or270 = or i32 %or266, %shr269, !dbg !20330
  br label %cond.end274, !dbg !20330

cond.false271:                                    ; preds = %cond.end246
  %166 = load i8*, i8** %match_criteria, align 8, !dbg !20330
  %167 = bitcast i8* %166 to i32*, !dbg !20330
  %add.ptr272 = getelementptr i32, i32* %167, i64 59, !dbg !20330
  %168 = load i32, i32* %add.ptr272, align 4, !dbg !20330
  %call273 = call i32 @__fswab32(i32 %168) #10, !dbg !20330
  br label %cond.end274, !dbg !20330

cond.end274:                                      ; preds = %cond.false271, %cond.true255
  %cond275 = phi i32 [ %or270, %cond.true255 ], [ %call273, %cond.false271 ], !dbg !20330
  %and276 = and i32 %cond275, 0, !dbg !20330
  %169 = load i32, i32* %_v169, align 4, !dbg !20330
  %shl277 = shl i32 %169, 0, !dbg !20330
  %or278 = or i32 %and276, %shl277, !dbg !20330
  %and279 = and i32 %or278, 16711680, !dbg !20330
  %shr280 = lshr i32 %and279, 8, !dbg !20330
  %or281 = or i32 %or253, %shr280, !dbg !20330
  %170 = load i8*, i8** %match_criteria, align 8, !dbg !20330
  %171 = bitcast i8* %170 to i32*, !dbg !20330
  %add.ptr282 = getelementptr i32, i32* %171, i64 59, !dbg !20330
  %172 = load i32, i32* %add.ptr282, align 4, !dbg !20330
  %173 = call i1 @llvm.is.constant.i32(i32 %172), !dbg !20330
  br i1 %173, label %cond.true283, label %cond.false299, !dbg !20330

cond.true283:                                     ; preds = %cond.end274
  %174 = load i8*, i8** %match_criteria, align 8, !dbg !20330
  %175 = bitcast i8* %174 to i32*, !dbg !20330
  %add.ptr284 = getelementptr i32, i32* %175, i64 59, !dbg !20330
  %176 = load i32, i32* %add.ptr284, align 4, !dbg !20330
  %and285 = and i32 %176, 255, !dbg !20330
  %shl286 = shl i32 %and285, 24, !dbg !20330
  %177 = load i8*, i8** %match_criteria, align 8, !dbg !20330
  %178 = bitcast i8* %177 to i32*, !dbg !20330
  %add.ptr287 = getelementptr i32, i32* %178, i64 59, !dbg !20330
  %179 = load i32, i32* %add.ptr287, align 4, !dbg !20330
  %and288 = and i32 %179, 65280, !dbg !20330
  %shl289 = shl i32 %and288, 8, !dbg !20330
  %or290 = or i32 %shl286, %shl289, !dbg !20330
  %180 = load i8*, i8** %match_criteria, align 8, !dbg !20330
  %181 = bitcast i8* %180 to i32*, !dbg !20330
  %add.ptr291 = getelementptr i32, i32* %181, i64 59, !dbg !20330
  %182 = load i32, i32* %add.ptr291, align 4, !dbg !20330
  %and292 = and i32 %182, 16711680, !dbg !20330
  %shr293 = lshr i32 %and292, 8, !dbg !20330
  %or294 = or i32 %or290, %shr293, !dbg !20330
  %183 = load i8*, i8** %match_criteria, align 8, !dbg !20330
  %184 = bitcast i8* %183 to i32*, !dbg !20330
  %add.ptr295 = getelementptr i32, i32* %184, i64 59, !dbg !20330
  %185 = load i32, i32* %add.ptr295, align 4, !dbg !20330
  %and296 = and i32 %185, -16777216, !dbg !20330
  %shr297 = lshr i32 %and296, 24, !dbg !20330
  %or298 = or i32 %or294, %shr297, !dbg !20330
  br label %cond.end302, !dbg !20330

cond.false299:                                    ; preds = %cond.end274
  %186 = load i8*, i8** %match_criteria, align 8, !dbg !20330
  %187 = bitcast i8* %186 to i32*, !dbg !20330
  %add.ptr300 = getelementptr i32, i32* %187, i64 59, !dbg !20330
  %188 = load i32, i32* %add.ptr300, align 4, !dbg !20330
  %call301 = call i32 @__fswab32(i32 %188) #10, !dbg !20330
  br label %cond.end302, !dbg !20330

cond.end302:                                      ; preds = %cond.false299, %cond.true283
  %cond303 = phi i32 [ %or298, %cond.true283 ], [ %call301, %cond.false299 ], !dbg !20330
  %and304 = and i32 %cond303, 0, !dbg !20330
  %189 = load i32, i32* %_v169, align 4, !dbg !20330
  %shl305 = shl i32 %189, 0, !dbg !20330
  %or306 = or i32 %and304, %shl305, !dbg !20330
  %and307 = and i32 %or306, -16777216, !dbg !20330
  %shr308 = lshr i32 %and307, 24, !dbg !20330
  %or309 = or i32 %or281, %shr308, !dbg !20330
  br label %cond.end337, !dbg !20330

cond.false310:                                    ; preds = %cond.end193
  %190 = load i8*, i8** %match_criteria, align 8, !dbg !20330
  %191 = bitcast i8* %190 to i32*, !dbg !20330
  %add.ptr311 = getelementptr i32, i32* %191, i64 59, !dbg !20330
  %192 = load i32, i32* %add.ptr311, align 4, !dbg !20330
  %193 = call i1 @llvm.is.constant.i32(i32 %192), !dbg !20330
  br i1 %193, label %cond.true312, label %cond.false328, !dbg !20330

cond.true312:                                     ; preds = %cond.false310
  %194 = load i8*, i8** %match_criteria, align 8, !dbg !20330
  %195 = bitcast i8* %194 to i32*, !dbg !20330
  %add.ptr313 = getelementptr i32, i32* %195, i64 59, !dbg !20330
  %196 = load i32, i32* %add.ptr313, align 4, !dbg !20330
  %and314 = and i32 %196, 255, !dbg !20330
  %shl315 = shl i32 %and314, 24, !dbg !20330
  %197 = load i8*, i8** %match_criteria, align 8, !dbg !20330
  %198 = bitcast i8* %197 to i32*, !dbg !20330
  %add.ptr316 = getelementptr i32, i32* %198, i64 59, !dbg !20330
  %199 = load i32, i32* %add.ptr316, align 4, !dbg !20330
  %and317 = and i32 %199, 65280, !dbg !20330
  %shl318 = shl i32 %and317, 8, !dbg !20330
  %or319 = or i32 %shl315, %shl318, !dbg !20330
  %200 = load i8*, i8** %match_criteria, align 8, !dbg !20330
  %201 = bitcast i8* %200 to i32*, !dbg !20330
  %add.ptr320 = getelementptr i32, i32* %201, i64 59, !dbg !20330
  %202 = load i32, i32* %add.ptr320, align 4, !dbg !20330
  %and321 = and i32 %202, 16711680, !dbg !20330
  %shr322 = lshr i32 %and321, 8, !dbg !20330
  %or323 = or i32 %or319, %shr322, !dbg !20330
  %203 = load i8*, i8** %match_criteria, align 8, !dbg !20330
  %204 = bitcast i8* %203 to i32*, !dbg !20330
  %add.ptr324 = getelementptr i32, i32* %204, i64 59, !dbg !20330
  %205 = load i32, i32* %add.ptr324, align 4, !dbg !20330
  %and325 = and i32 %205, -16777216, !dbg !20330
  %shr326 = lshr i32 %and325, 24, !dbg !20330
  %or327 = or i32 %or323, %shr326, !dbg !20330
  br label %cond.end331, !dbg !20330

cond.false328:                                    ; preds = %cond.false310
  %206 = load i8*, i8** %match_criteria, align 8, !dbg !20330
  %207 = bitcast i8* %206 to i32*, !dbg !20330
  %add.ptr329 = getelementptr i32, i32* %207, i64 59, !dbg !20330
  %208 = load i32, i32* %add.ptr329, align 4, !dbg !20330
  %call330 = call i32 @__fswab32(i32 %208) #10, !dbg !20330
  br label %cond.end331, !dbg !20330

cond.end331:                                      ; preds = %cond.false328, %cond.true312
  %cond332 = phi i32 [ %or327, %cond.true312 ], [ %call330, %cond.false328 ], !dbg !20330
  %and333 = and i32 %cond332, 0, !dbg !20330
  %209 = load i32, i32* %_v169, align 4, !dbg !20330
  %shl334 = shl i32 %209, 0, !dbg !20330
  %or335 = or i32 %and333, %shl334, !dbg !20330
  %call336 = call i32 @__fswab32(i32 %or335) #10, !dbg !20330
  br label %cond.end337, !dbg !20330

cond.end337:                                      ; preds = %cond.end331, %cond.end302
  %cond338 = phi i32 [ %or309, %cond.end302 ], [ %call336, %cond.end331 ], !dbg !20330
  %210 = load i8*, i8** %match_criteria, align 8, !dbg !20330
  %211 = bitcast i8* %210 to i32*, !dbg !20330
  %add.ptr339 = getelementptr i32, i32* %211, i64 59, !dbg !20330
  store i32 %cond338, i32* %add.ptr339, align 4, !dbg !20330
  br label %do.end340, !dbg !20330

do.end340:                                        ; preds = %cond.end337
  br label %if.end, !dbg !20333

if.else:                                          ; preds = %entry
  br label %do.body341, !dbg !20334

do.body341:                                       ; preds = %if.else
  call void @llvm.dbg.declare(metadata i32* %_v342, metadata !20336, metadata !DIExpression()), !dbg !20338
  store i32 2, i32* %_v342, align 4, !dbg !20338
  br label %do.body343, !dbg !20338

do.body343:                                       ; preds = %do.body341
  br label %do.end344, !dbg !20339

do.end344:                                        ; preds = %do.body343
  %212 = load i32*, i32** %flow_group_in.addr, align 8, !dbg !20338
  %add.ptr345 = getelementptr i32, i32* %212, i64 15, !dbg !20338
  %213 = load i32, i32* %add.ptr345, align 4, !dbg !20338
  %214 = call i1 @llvm.is.constant.i32(i32 %213), !dbg !20338
  br i1 %214, label %cond.true346, label %cond.false362, !dbg !20338

cond.true346:                                     ; preds = %do.end344
  %215 = load i32*, i32** %flow_group_in.addr, align 8, !dbg !20338
  %add.ptr347 = getelementptr i32, i32* %215, i64 15, !dbg !20338
  %216 = load i32, i32* %add.ptr347, align 4, !dbg !20338
  %and348 = and i32 %216, 255, !dbg !20338
  %shl349 = shl i32 %and348, 24, !dbg !20338
  %217 = load i32*, i32** %flow_group_in.addr, align 8, !dbg !20338
  %add.ptr350 = getelementptr i32, i32* %217, i64 15, !dbg !20338
  %218 = load i32, i32* %add.ptr350, align 4, !dbg !20338
  %and351 = and i32 %218, 65280, !dbg !20338
  %shl352 = shl i32 %and351, 8, !dbg !20338
  %or353 = or i32 %shl349, %shl352, !dbg !20338
  %219 = load i32*, i32** %flow_group_in.addr, align 8, !dbg !20338
  %add.ptr354 = getelementptr i32, i32* %219, i64 15, !dbg !20338
  %220 = load i32, i32* %add.ptr354, align 4, !dbg !20338
  %and355 = and i32 %220, 16711680, !dbg !20338
  %shr356 = lshr i32 %and355, 8, !dbg !20338
  %or357 = or i32 %or353, %shr356, !dbg !20338
  %221 = load i32*, i32** %flow_group_in.addr, align 8, !dbg !20338
  %add.ptr358 = getelementptr i32, i32* %221, i64 15, !dbg !20338
  %222 = load i32, i32* %add.ptr358, align 4, !dbg !20338
  %and359 = and i32 %222, -16777216, !dbg !20338
  %shr360 = lshr i32 %and359, 24, !dbg !20338
  %or361 = or i32 %or357, %shr360, !dbg !20338
  br label %cond.end365, !dbg !20338

cond.false362:                                    ; preds = %do.end344
  %223 = load i32*, i32** %flow_group_in.addr, align 8, !dbg !20338
  %add.ptr363 = getelementptr i32, i32* %223, i64 15, !dbg !20338
  %224 = load i32, i32* %add.ptr363, align 4, !dbg !20338
  %call364 = call i32 @__fswab32(i32 %224) #10, !dbg !20338
  br label %cond.end365, !dbg !20338

cond.end365:                                      ; preds = %cond.false362, %cond.true346
  %cond366 = phi i32 [ %or361, %cond.true346 ], [ %call364, %cond.false362 ], !dbg !20338
  %and367 = and i32 %cond366, -256, !dbg !20338
  %225 = load i32, i32* %_v342, align 4, !dbg !20338
  %and368 = and i32 %225, 255, !dbg !20338
  %shl369 = shl i32 %and368, 0, !dbg !20338
  %or370 = or i32 %and367, %shl369, !dbg !20338
  %226 = call i1 @llvm.is.constant.i32(i32 %or370), !dbg !20338
  br i1 %226, label %cond.true371, label %cond.false487, !dbg !20338

cond.true371:                                     ; preds = %cond.end365
  %227 = load i32*, i32** %flow_group_in.addr, align 8, !dbg !20338
  %add.ptr372 = getelementptr i32, i32* %227, i64 15, !dbg !20338
  %228 = load i32, i32* %add.ptr372, align 4, !dbg !20338
  %229 = call i1 @llvm.is.constant.i32(i32 %228), !dbg !20338
  br i1 %229, label %cond.true373, label %cond.false389, !dbg !20338

cond.true373:                                     ; preds = %cond.true371
  %230 = load i32*, i32** %flow_group_in.addr, align 8, !dbg !20338
  %add.ptr374 = getelementptr i32, i32* %230, i64 15, !dbg !20338
  %231 = load i32, i32* %add.ptr374, align 4, !dbg !20338
  %and375 = and i32 %231, 255, !dbg !20338
  %shl376 = shl i32 %and375, 24, !dbg !20338
  %232 = load i32*, i32** %flow_group_in.addr, align 8, !dbg !20338
  %add.ptr377 = getelementptr i32, i32* %232, i64 15, !dbg !20338
  %233 = load i32, i32* %add.ptr377, align 4, !dbg !20338
  %and378 = and i32 %233, 65280, !dbg !20338
  %shl379 = shl i32 %and378, 8, !dbg !20338
  %or380 = or i32 %shl376, %shl379, !dbg !20338
  %234 = load i32*, i32** %flow_group_in.addr, align 8, !dbg !20338
  %add.ptr381 = getelementptr i32, i32* %234, i64 15, !dbg !20338
  %235 = load i32, i32* %add.ptr381, align 4, !dbg !20338
  %and382 = and i32 %235, 16711680, !dbg !20338
  %shr383 = lshr i32 %and382, 8, !dbg !20338
  %or384 = or i32 %or380, %shr383, !dbg !20338
  %236 = load i32*, i32** %flow_group_in.addr, align 8, !dbg !20338
  %add.ptr385 = getelementptr i32, i32* %236, i64 15, !dbg !20338
  %237 = load i32, i32* %add.ptr385, align 4, !dbg !20338
  %and386 = and i32 %237, -16777216, !dbg !20338
  %shr387 = lshr i32 %and386, 24, !dbg !20338
  %or388 = or i32 %or384, %shr387, !dbg !20338
  br label %cond.end392, !dbg !20338

cond.false389:                                    ; preds = %cond.true371
  %238 = load i32*, i32** %flow_group_in.addr, align 8, !dbg !20338
  %add.ptr390 = getelementptr i32, i32* %238, i64 15, !dbg !20338
  %239 = load i32, i32* %add.ptr390, align 4, !dbg !20338
  %call391 = call i32 @__fswab32(i32 %239) #10, !dbg !20338
  br label %cond.end392, !dbg !20338

cond.end392:                                      ; preds = %cond.false389, %cond.true373
  %cond393 = phi i32 [ %or388, %cond.true373 ], [ %call391, %cond.false389 ], !dbg !20338
  %and394 = and i32 %cond393, -256, !dbg !20338
  %240 = load i32, i32* %_v342, align 4, !dbg !20338
  %and395 = and i32 %240, 255, !dbg !20338
  %shl396 = shl i32 %and395, 0, !dbg !20338
  %or397 = or i32 %and394, %shl396, !dbg !20338
  %and398 = and i32 %or397, 255, !dbg !20338
  %shl399 = shl i32 %and398, 24, !dbg !20338
  %241 = load i32*, i32** %flow_group_in.addr, align 8, !dbg !20338
  %add.ptr400 = getelementptr i32, i32* %241, i64 15, !dbg !20338
  %242 = load i32, i32* %add.ptr400, align 4, !dbg !20338
  %243 = call i1 @llvm.is.constant.i32(i32 %242), !dbg !20338
  br i1 %243, label %cond.true401, label %cond.false417, !dbg !20338

cond.true401:                                     ; preds = %cond.end392
  %244 = load i32*, i32** %flow_group_in.addr, align 8, !dbg !20338
  %add.ptr402 = getelementptr i32, i32* %244, i64 15, !dbg !20338
  %245 = load i32, i32* %add.ptr402, align 4, !dbg !20338
  %and403 = and i32 %245, 255, !dbg !20338
  %shl404 = shl i32 %and403, 24, !dbg !20338
  %246 = load i32*, i32** %flow_group_in.addr, align 8, !dbg !20338
  %add.ptr405 = getelementptr i32, i32* %246, i64 15, !dbg !20338
  %247 = load i32, i32* %add.ptr405, align 4, !dbg !20338
  %and406 = and i32 %247, 65280, !dbg !20338
  %shl407 = shl i32 %and406, 8, !dbg !20338
  %or408 = or i32 %shl404, %shl407, !dbg !20338
  %248 = load i32*, i32** %flow_group_in.addr, align 8, !dbg !20338
  %add.ptr409 = getelementptr i32, i32* %248, i64 15, !dbg !20338
  %249 = load i32, i32* %add.ptr409, align 4, !dbg !20338
  %and410 = and i32 %249, 16711680, !dbg !20338
  %shr411 = lshr i32 %and410, 8, !dbg !20338
  %or412 = or i32 %or408, %shr411, !dbg !20338
  %250 = load i32*, i32** %flow_group_in.addr, align 8, !dbg !20338
  %add.ptr413 = getelementptr i32, i32* %250, i64 15, !dbg !20338
  %251 = load i32, i32* %add.ptr413, align 4, !dbg !20338
  %and414 = and i32 %251, -16777216, !dbg !20338
  %shr415 = lshr i32 %and414, 24, !dbg !20338
  %or416 = or i32 %or412, %shr415, !dbg !20338
  br label %cond.end420, !dbg !20338

cond.false417:                                    ; preds = %cond.end392
  %252 = load i32*, i32** %flow_group_in.addr, align 8, !dbg !20338
  %add.ptr418 = getelementptr i32, i32* %252, i64 15, !dbg !20338
  %253 = load i32, i32* %add.ptr418, align 4, !dbg !20338
  %call419 = call i32 @__fswab32(i32 %253) #10, !dbg !20338
  br label %cond.end420, !dbg !20338

cond.end420:                                      ; preds = %cond.false417, %cond.true401
  %cond421 = phi i32 [ %or416, %cond.true401 ], [ %call419, %cond.false417 ], !dbg !20338
  %and422 = and i32 %cond421, -256, !dbg !20338
  %254 = load i32, i32* %_v342, align 4, !dbg !20338
  %and423 = and i32 %254, 255, !dbg !20338
  %shl424 = shl i32 %and423, 0, !dbg !20338
  %or425 = or i32 %and422, %shl424, !dbg !20338
  %and426 = and i32 %or425, 65280, !dbg !20338
  %shl427 = shl i32 %and426, 8, !dbg !20338
  %or428 = or i32 %shl399, %shl427, !dbg !20338
  %255 = load i32*, i32** %flow_group_in.addr, align 8, !dbg !20338
  %add.ptr429 = getelementptr i32, i32* %255, i64 15, !dbg !20338
  %256 = load i32, i32* %add.ptr429, align 4, !dbg !20338
  %257 = call i1 @llvm.is.constant.i32(i32 %256), !dbg !20338
  br i1 %257, label %cond.true430, label %cond.false446, !dbg !20338

cond.true430:                                     ; preds = %cond.end420
  %258 = load i32*, i32** %flow_group_in.addr, align 8, !dbg !20338
  %add.ptr431 = getelementptr i32, i32* %258, i64 15, !dbg !20338
  %259 = load i32, i32* %add.ptr431, align 4, !dbg !20338
  %and432 = and i32 %259, 255, !dbg !20338
  %shl433 = shl i32 %and432, 24, !dbg !20338
  %260 = load i32*, i32** %flow_group_in.addr, align 8, !dbg !20338
  %add.ptr434 = getelementptr i32, i32* %260, i64 15, !dbg !20338
  %261 = load i32, i32* %add.ptr434, align 4, !dbg !20338
  %and435 = and i32 %261, 65280, !dbg !20338
  %shl436 = shl i32 %and435, 8, !dbg !20338
  %or437 = or i32 %shl433, %shl436, !dbg !20338
  %262 = load i32*, i32** %flow_group_in.addr, align 8, !dbg !20338
  %add.ptr438 = getelementptr i32, i32* %262, i64 15, !dbg !20338
  %263 = load i32, i32* %add.ptr438, align 4, !dbg !20338
  %and439 = and i32 %263, 16711680, !dbg !20338
  %shr440 = lshr i32 %and439, 8, !dbg !20338
  %or441 = or i32 %or437, %shr440, !dbg !20338
  %264 = load i32*, i32** %flow_group_in.addr, align 8, !dbg !20338
  %add.ptr442 = getelementptr i32, i32* %264, i64 15, !dbg !20338
  %265 = load i32, i32* %add.ptr442, align 4, !dbg !20338
  %and443 = and i32 %265, -16777216, !dbg !20338
  %shr444 = lshr i32 %and443, 24, !dbg !20338
  %or445 = or i32 %or441, %shr444, !dbg !20338
  br label %cond.end449, !dbg !20338

cond.false446:                                    ; preds = %cond.end420
  %266 = load i32*, i32** %flow_group_in.addr, align 8, !dbg !20338
  %add.ptr447 = getelementptr i32, i32* %266, i64 15, !dbg !20338
  %267 = load i32, i32* %add.ptr447, align 4, !dbg !20338
  %call448 = call i32 @__fswab32(i32 %267) #10, !dbg !20338
  br label %cond.end449, !dbg !20338

cond.end449:                                      ; preds = %cond.false446, %cond.true430
  %cond450 = phi i32 [ %or445, %cond.true430 ], [ %call448, %cond.false446 ], !dbg !20338
  %and451 = and i32 %cond450, -256, !dbg !20338
  %268 = load i32, i32* %_v342, align 4, !dbg !20338
  %and452 = and i32 %268, 255, !dbg !20338
  %shl453 = shl i32 %and452, 0, !dbg !20338
  %or454 = or i32 %and451, %shl453, !dbg !20338
  %and455 = and i32 %or454, 16711680, !dbg !20338
  %shr456 = lshr i32 %and455, 8, !dbg !20338
  %or457 = or i32 %or428, %shr456, !dbg !20338
  %269 = load i32*, i32** %flow_group_in.addr, align 8, !dbg !20338
  %add.ptr458 = getelementptr i32, i32* %269, i64 15, !dbg !20338
  %270 = load i32, i32* %add.ptr458, align 4, !dbg !20338
  %271 = call i1 @llvm.is.constant.i32(i32 %270), !dbg !20338
  br i1 %271, label %cond.true459, label %cond.false475, !dbg !20338

cond.true459:                                     ; preds = %cond.end449
  %272 = load i32*, i32** %flow_group_in.addr, align 8, !dbg !20338
  %add.ptr460 = getelementptr i32, i32* %272, i64 15, !dbg !20338
  %273 = load i32, i32* %add.ptr460, align 4, !dbg !20338
  %and461 = and i32 %273, 255, !dbg !20338
  %shl462 = shl i32 %and461, 24, !dbg !20338
  %274 = load i32*, i32** %flow_group_in.addr, align 8, !dbg !20338
  %add.ptr463 = getelementptr i32, i32* %274, i64 15, !dbg !20338
  %275 = load i32, i32* %add.ptr463, align 4, !dbg !20338
  %and464 = and i32 %275, 65280, !dbg !20338
  %shl465 = shl i32 %and464, 8, !dbg !20338
  %or466 = or i32 %shl462, %shl465, !dbg !20338
  %276 = load i32*, i32** %flow_group_in.addr, align 8, !dbg !20338
  %add.ptr467 = getelementptr i32, i32* %276, i64 15, !dbg !20338
  %277 = load i32, i32* %add.ptr467, align 4, !dbg !20338
  %and468 = and i32 %277, 16711680, !dbg !20338
  %shr469 = lshr i32 %and468, 8, !dbg !20338
  %or470 = or i32 %or466, %shr469, !dbg !20338
  %278 = load i32*, i32** %flow_group_in.addr, align 8, !dbg !20338
  %add.ptr471 = getelementptr i32, i32* %278, i64 15, !dbg !20338
  %279 = load i32, i32* %add.ptr471, align 4, !dbg !20338
  %and472 = and i32 %279, -16777216, !dbg !20338
  %shr473 = lshr i32 %and472, 24, !dbg !20338
  %or474 = or i32 %or470, %shr473, !dbg !20338
  br label %cond.end478, !dbg !20338

cond.false475:                                    ; preds = %cond.end449
  %280 = load i32*, i32** %flow_group_in.addr, align 8, !dbg !20338
  %add.ptr476 = getelementptr i32, i32* %280, i64 15, !dbg !20338
  %281 = load i32, i32* %add.ptr476, align 4, !dbg !20338
  %call477 = call i32 @__fswab32(i32 %281) #10, !dbg !20338
  br label %cond.end478, !dbg !20338

cond.end478:                                      ; preds = %cond.false475, %cond.true459
  %cond479 = phi i32 [ %or474, %cond.true459 ], [ %call477, %cond.false475 ], !dbg !20338
  %and480 = and i32 %cond479, -256, !dbg !20338
  %282 = load i32, i32* %_v342, align 4, !dbg !20338
  %and481 = and i32 %282, 255, !dbg !20338
  %shl482 = shl i32 %and481, 0, !dbg !20338
  %or483 = or i32 %and480, %shl482, !dbg !20338
  %and484 = and i32 %or483, -16777216, !dbg !20338
  %shr485 = lshr i32 %and484, 24, !dbg !20338
  %or486 = or i32 %or457, %shr485, !dbg !20338
  br label %cond.end515, !dbg !20338

cond.false487:                                    ; preds = %cond.end365
  %283 = load i32*, i32** %flow_group_in.addr, align 8, !dbg !20338
  %add.ptr488 = getelementptr i32, i32* %283, i64 15, !dbg !20338
  %284 = load i32, i32* %add.ptr488, align 4, !dbg !20338
  %285 = call i1 @llvm.is.constant.i32(i32 %284), !dbg !20338
  br i1 %285, label %cond.true489, label %cond.false505, !dbg !20338

cond.true489:                                     ; preds = %cond.false487
  %286 = load i32*, i32** %flow_group_in.addr, align 8, !dbg !20338
  %add.ptr490 = getelementptr i32, i32* %286, i64 15, !dbg !20338
  %287 = load i32, i32* %add.ptr490, align 4, !dbg !20338
  %and491 = and i32 %287, 255, !dbg !20338
  %shl492 = shl i32 %and491, 24, !dbg !20338
  %288 = load i32*, i32** %flow_group_in.addr, align 8, !dbg !20338
  %add.ptr493 = getelementptr i32, i32* %288, i64 15, !dbg !20338
  %289 = load i32, i32* %add.ptr493, align 4, !dbg !20338
  %and494 = and i32 %289, 65280, !dbg !20338
  %shl495 = shl i32 %and494, 8, !dbg !20338
  %or496 = or i32 %shl492, %shl495, !dbg !20338
  %290 = load i32*, i32** %flow_group_in.addr, align 8, !dbg !20338
  %add.ptr497 = getelementptr i32, i32* %290, i64 15, !dbg !20338
  %291 = load i32, i32* %add.ptr497, align 4, !dbg !20338
  %and498 = and i32 %291, 16711680, !dbg !20338
  %shr499 = lshr i32 %and498, 8, !dbg !20338
  %or500 = or i32 %or496, %shr499, !dbg !20338
  %292 = load i32*, i32** %flow_group_in.addr, align 8, !dbg !20338
  %add.ptr501 = getelementptr i32, i32* %292, i64 15, !dbg !20338
  %293 = load i32, i32* %add.ptr501, align 4, !dbg !20338
  %and502 = and i32 %293, -16777216, !dbg !20338
  %shr503 = lshr i32 %and502, 24, !dbg !20338
  %or504 = or i32 %or500, %shr503, !dbg !20338
  br label %cond.end508, !dbg !20338

cond.false505:                                    ; preds = %cond.false487
  %294 = load i32*, i32** %flow_group_in.addr, align 8, !dbg !20338
  %add.ptr506 = getelementptr i32, i32* %294, i64 15, !dbg !20338
  %295 = load i32, i32* %add.ptr506, align 4, !dbg !20338
  %call507 = call i32 @__fswab32(i32 %295) #10, !dbg !20338
  br label %cond.end508, !dbg !20338

cond.end508:                                      ; preds = %cond.false505, %cond.true489
  %cond509 = phi i32 [ %or504, %cond.true489 ], [ %call507, %cond.false505 ], !dbg !20338
  %and510 = and i32 %cond509, -256, !dbg !20338
  %296 = load i32, i32* %_v342, align 4, !dbg !20338
  %and511 = and i32 %296, 255, !dbg !20338
  %shl512 = shl i32 %and511, 0, !dbg !20338
  %or513 = or i32 %and510, %shl512, !dbg !20338
  %call514 = call i32 @__fswab32(i32 %or513) #10, !dbg !20338
  br label %cond.end515, !dbg !20338

cond.end515:                                      ; preds = %cond.end508, %cond.end478
  %cond516 = phi i32 [ %or486, %cond.end478 ], [ %call514, %cond.end508 ], !dbg !20338
  %297 = load i32*, i32** %flow_group_in.addr, align 8, !dbg !20338
  %add.ptr517 = getelementptr i32, i32* %297, i64 15, !dbg !20338
  store i32 %cond516, i32* %add.ptr517, align 4, !dbg !20338
  br label %do.end518, !dbg !20338

do.end518:                                        ; preds = %cond.end515
  br label %do.body519, !dbg !20341

do.body519:                                       ; preds = %do.end518
  br label %do.body520, !dbg !20342

do.body520:                                       ; preds = %do.body519
  br label %do.end521, !dbg !20344

do.end521:                                        ; preds = %do.body520
  %298 = load i8*, i8** %match_criteria, align 8, !dbg !20342
  %299 = bitcast i8* %298 to i32*, !dbg !20342
  %add.ptr522 = getelementptr i32, i32* %299, i64 17, !dbg !20342
  %300 = load i32, i32* %add.ptr522, align 4, !dbg !20342
  %301 = call i1 @llvm.is.constant.i32(i32 %300), !dbg !20342
  br i1 %301, label %cond.true523, label %cond.false539, !dbg !20342

cond.true523:                                     ; preds = %do.end521
  %302 = load i8*, i8** %match_criteria, align 8, !dbg !20342
  %303 = bitcast i8* %302 to i32*, !dbg !20342
  %add.ptr524 = getelementptr i32, i32* %303, i64 17, !dbg !20342
  %304 = load i32, i32* %add.ptr524, align 4, !dbg !20342
  %and525 = and i32 %304, 255, !dbg !20342
  %shl526 = shl i32 %and525, 24, !dbg !20342
  %305 = load i8*, i8** %match_criteria, align 8, !dbg !20342
  %306 = bitcast i8* %305 to i32*, !dbg !20342
  %add.ptr527 = getelementptr i32, i32* %306, i64 17, !dbg !20342
  %307 = load i32, i32* %add.ptr527, align 4, !dbg !20342
  %and528 = and i32 %307, 65280, !dbg !20342
  %shl529 = shl i32 %and528, 8, !dbg !20342
  %or530 = or i32 %shl526, %shl529, !dbg !20342
  %308 = load i8*, i8** %match_criteria, align 8, !dbg !20342
  %309 = bitcast i8* %308 to i32*, !dbg !20342
  %add.ptr531 = getelementptr i32, i32* %309, i64 17, !dbg !20342
  %310 = load i32, i32* %add.ptr531, align 4, !dbg !20342
  %and532 = and i32 %310, 16711680, !dbg !20342
  %shr533 = lshr i32 %and532, 8, !dbg !20342
  %or534 = or i32 %or530, %shr533, !dbg !20342
  %311 = load i8*, i8** %match_criteria, align 8, !dbg !20342
  %312 = bitcast i8* %311 to i32*, !dbg !20342
  %add.ptr535 = getelementptr i32, i32* %312, i64 17, !dbg !20342
  %313 = load i32, i32* %add.ptr535, align 4, !dbg !20342
  %and536 = and i32 %313, -16777216, !dbg !20342
  %shr537 = lshr i32 %and536, 24, !dbg !20342
  %or538 = or i32 %or534, %shr537, !dbg !20342
  br label %cond.end542, !dbg !20342

cond.false539:                                    ; preds = %do.end521
  %314 = load i8*, i8** %match_criteria, align 8, !dbg !20342
  %315 = bitcast i8* %314 to i32*, !dbg !20342
  %add.ptr540 = getelementptr i32, i32* %315, i64 17, !dbg !20342
  %316 = load i32, i32* %add.ptr540, align 4, !dbg !20342
  %call541 = call i32 @__fswab32(i32 %316) #10, !dbg !20342
  br label %cond.end542, !dbg !20342

cond.end542:                                      ; preds = %cond.false539, %cond.true523
  %cond543 = phi i32 [ %or538, %cond.true523 ], [ %call541, %cond.false539 ], !dbg !20342
  %and544 = and i32 %cond543, -65536, !dbg !20342
  %or545 = or i32 %and544, 65535, !dbg !20342
  %317 = call i1 @llvm.is.constant.i32(i32 %or545), !dbg !20342
  br i1 %317, label %cond.true546, label %cond.false654, !dbg !20342

cond.true546:                                     ; preds = %cond.end542
  %318 = load i8*, i8** %match_criteria, align 8, !dbg !20342
  %319 = bitcast i8* %318 to i32*, !dbg !20342
  %add.ptr547 = getelementptr i32, i32* %319, i64 17, !dbg !20342
  %320 = load i32, i32* %add.ptr547, align 4, !dbg !20342
  %321 = call i1 @llvm.is.constant.i32(i32 %320), !dbg !20342
  br i1 %321, label %cond.true548, label %cond.false564, !dbg !20342

cond.true548:                                     ; preds = %cond.true546
  %322 = load i8*, i8** %match_criteria, align 8, !dbg !20342
  %323 = bitcast i8* %322 to i32*, !dbg !20342
  %add.ptr549 = getelementptr i32, i32* %323, i64 17, !dbg !20342
  %324 = load i32, i32* %add.ptr549, align 4, !dbg !20342
  %and550 = and i32 %324, 255, !dbg !20342
  %shl551 = shl i32 %and550, 24, !dbg !20342
  %325 = load i8*, i8** %match_criteria, align 8, !dbg !20342
  %326 = bitcast i8* %325 to i32*, !dbg !20342
  %add.ptr552 = getelementptr i32, i32* %326, i64 17, !dbg !20342
  %327 = load i32, i32* %add.ptr552, align 4, !dbg !20342
  %and553 = and i32 %327, 65280, !dbg !20342
  %shl554 = shl i32 %and553, 8, !dbg !20342
  %or555 = or i32 %shl551, %shl554, !dbg !20342
  %328 = load i8*, i8** %match_criteria, align 8, !dbg !20342
  %329 = bitcast i8* %328 to i32*, !dbg !20342
  %add.ptr556 = getelementptr i32, i32* %329, i64 17, !dbg !20342
  %330 = load i32, i32* %add.ptr556, align 4, !dbg !20342
  %and557 = and i32 %330, 16711680, !dbg !20342
  %shr558 = lshr i32 %and557, 8, !dbg !20342
  %or559 = or i32 %or555, %shr558, !dbg !20342
  %331 = load i8*, i8** %match_criteria, align 8, !dbg !20342
  %332 = bitcast i8* %331 to i32*, !dbg !20342
  %add.ptr560 = getelementptr i32, i32* %332, i64 17, !dbg !20342
  %333 = load i32, i32* %add.ptr560, align 4, !dbg !20342
  %and561 = and i32 %333, -16777216, !dbg !20342
  %shr562 = lshr i32 %and561, 24, !dbg !20342
  %or563 = or i32 %or559, %shr562, !dbg !20342
  br label %cond.end567, !dbg !20342

cond.false564:                                    ; preds = %cond.true546
  %334 = load i8*, i8** %match_criteria, align 8, !dbg !20342
  %335 = bitcast i8* %334 to i32*, !dbg !20342
  %add.ptr565 = getelementptr i32, i32* %335, i64 17, !dbg !20342
  %336 = load i32, i32* %add.ptr565, align 4, !dbg !20342
  %call566 = call i32 @__fswab32(i32 %336) #10, !dbg !20342
  br label %cond.end567, !dbg !20342

cond.end567:                                      ; preds = %cond.false564, %cond.true548
  %cond568 = phi i32 [ %or563, %cond.true548 ], [ %call566, %cond.false564 ], !dbg !20342
  %and569 = and i32 %cond568, -65536, !dbg !20342
  %or570 = or i32 %and569, 65535, !dbg !20342
  %and571 = and i32 %or570, 255, !dbg !20342
  %shl572 = shl i32 %and571, 24, !dbg !20342
  %337 = load i8*, i8** %match_criteria, align 8, !dbg !20342
  %338 = bitcast i8* %337 to i32*, !dbg !20342
  %add.ptr573 = getelementptr i32, i32* %338, i64 17, !dbg !20342
  %339 = load i32, i32* %add.ptr573, align 4, !dbg !20342
  %340 = call i1 @llvm.is.constant.i32(i32 %339), !dbg !20342
  br i1 %340, label %cond.true574, label %cond.false590, !dbg !20342

cond.true574:                                     ; preds = %cond.end567
  %341 = load i8*, i8** %match_criteria, align 8, !dbg !20342
  %342 = bitcast i8* %341 to i32*, !dbg !20342
  %add.ptr575 = getelementptr i32, i32* %342, i64 17, !dbg !20342
  %343 = load i32, i32* %add.ptr575, align 4, !dbg !20342
  %and576 = and i32 %343, 255, !dbg !20342
  %shl577 = shl i32 %and576, 24, !dbg !20342
  %344 = load i8*, i8** %match_criteria, align 8, !dbg !20342
  %345 = bitcast i8* %344 to i32*, !dbg !20342
  %add.ptr578 = getelementptr i32, i32* %345, i64 17, !dbg !20342
  %346 = load i32, i32* %add.ptr578, align 4, !dbg !20342
  %and579 = and i32 %346, 65280, !dbg !20342
  %shl580 = shl i32 %and579, 8, !dbg !20342
  %or581 = or i32 %shl577, %shl580, !dbg !20342
  %347 = load i8*, i8** %match_criteria, align 8, !dbg !20342
  %348 = bitcast i8* %347 to i32*, !dbg !20342
  %add.ptr582 = getelementptr i32, i32* %348, i64 17, !dbg !20342
  %349 = load i32, i32* %add.ptr582, align 4, !dbg !20342
  %and583 = and i32 %349, 16711680, !dbg !20342
  %shr584 = lshr i32 %and583, 8, !dbg !20342
  %or585 = or i32 %or581, %shr584, !dbg !20342
  %350 = load i8*, i8** %match_criteria, align 8, !dbg !20342
  %351 = bitcast i8* %350 to i32*, !dbg !20342
  %add.ptr586 = getelementptr i32, i32* %351, i64 17, !dbg !20342
  %352 = load i32, i32* %add.ptr586, align 4, !dbg !20342
  %and587 = and i32 %352, -16777216, !dbg !20342
  %shr588 = lshr i32 %and587, 24, !dbg !20342
  %or589 = or i32 %or585, %shr588, !dbg !20342
  br label %cond.end593, !dbg !20342

cond.false590:                                    ; preds = %cond.end567
  %353 = load i8*, i8** %match_criteria, align 8, !dbg !20342
  %354 = bitcast i8* %353 to i32*, !dbg !20342
  %add.ptr591 = getelementptr i32, i32* %354, i64 17, !dbg !20342
  %355 = load i32, i32* %add.ptr591, align 4, !dbg !20342
  %call592 = call i32 @__fswab32(i32 %355) #10, !dbg !20342
  br label %cond.end593, !dbg !20342

cond.end593:                                      ; preds = %cond.false590, %cond.true574
  %cond594 = phi i32 [ %or589, %cond.true574 ], [ %call592, %cond.false590 ], !dbg !20342
  %and595 = and i32 %cond594, -65536, !dbg !20342
  %or596 = or i32 %and595, 65535, !dbg !20342
  %and597 = and i32 %or596, 65280, !dbg !20342
  %shl598 = shl i32 %and597, 8, !dbg !20342
  %or599 = or i32 %shl572, %shl598, !dbg !20342
  %356 = load i8*, i8** %match_criteria, align 8, !dbg !20342
  %357 = bitcast i8* %356 to i32*, !dbg !20342
  %add.ptr600 = getelementptr i32, i32* %357, i64 17, !dbg !20342
  %358 = load i32, i32* %add.ptr600, align 4, !dbg !20342
  %359 = call i1 @llvm.is.constant.i32(i32 %358), !dbg !20342
  br i1 %359, label %cond.true601, label %cond.false617, !dbg !20342

cond.true601:                                     ; preds = %cond.end593
  %360 = load i8*, i8** %match_criteria, align 8, !dbg !20342
  %361 = bitcast i8* %360 to i32*, !dbg !20342
  %add.ptr602 = getelementptr i32, i32* %361, i64 17, !dbg !20342
  %362 = load i32, i32* %add.ptr602, align 4, !dbg !20342
  %and603 = and i32 %362, 255, !dbg !20342
  %shl604 = shl i32 %and603, 24, !dbg !20342
  %363 = load i8*, i8** %match_criteria, align 8, !dbg !20342
  %364 = bitcast i8* %363 to i32*, !dbg !20342
  %add.ptr605 = getelementptr i32, i32* %364, i64 17, !dbg !20342
  %365 = load i32, i32* %add.ptr605, align 4, !dbg !20342
  %and606 = and i32 %365, 65280, !dbg !20342
  %shl607 = shl i32 %and606, 8, !dbg !20342
  %or608 = or i32 %shl604, %shl607, !dbg !20342
  %366 = load i8*, i8** %match_criteria, align 8, !dbg !20342
  %367 = bitcast i8* %366 to i32*, !dbg !20342
  %add.ptr609 = getelementptr i32, i32* %367, i64 17, !dbg !20342
  %368 = load i32, i32* %add.ptr609, align 4, !dbg !20342
  %and610 = and i32 %368, 16711680, !dbg !20342
  %shr611 = lshr i32 %and610, 8, !dbg !20342
  %or612 = or i32 %or608, %shr611, !dbg !20342
  %369 = load i8*, i8** %match_criteria, align 8, !dbg !20342
  %370 = bitcast i8* %369 to i32*, !dbg !20342
  %add.ptr613 = getelementptr i32, i32* %370, i64 17, !dbg !20342
  %371 = load i32, i32* %add.ptr613, align 4, !dbg !20342
  %and614 = and i32 %371, -16777216, !dbg !20342
  %shr615 = lshr i32 %and614, 24, !dbg !20342
  %or616 = or i32 %or612, %shr615, !dbg !20342
  br label %cond.end620, !dbg !20342

cond.false617:                                    ; preds = %cond.end593
  %372 = load i8*, i8** %match_criteria, align 8, !dbg !20342
  %373 = bitcast i8* %372 to i32*, !dbg !20342
  %add.ptr618 = getelementptr i32, i32* %373, i64 17, !dbg !20342
  %374 = load i32, i32* %add.ptr618, align 4, !dbg !20342
  %call619 = call i32 @__fswab32(i32 %374) #10, !dbg !20342
  br label %cond.end620, !dbg !20342

cond.end620:                                      ; preds = %cond.false617, %cond.true601
  %cond621 = phi i32 [ %or616, %cond.true601 ], [ %call619, %cond.false617 ], !dbg !20342
  %and622 = and i32 %cond621, -65536, !dbg !20342
  %or623 = or i32 %and622, 65535, !dbg !20342
  %and624 = and i32 %or623, 16711680, !dbg !20342
  %shr625 = lshr i32 %and624, 8, !dbg !20342
  %or626 = or i32 %or599, %shr625, !dbg !20342
  %375 = load i8*, i8** %match_criteria, align 8, !dbg !20342
  %376 = bitcast i8* %375 to i32*, !dbg !20342
  %add.ptr627 = getelementptr i32, i32* %376, i64 17, !dbg !20342
  %377 = load i32, i32* %add.ptr627, align 4, !dbg !20342
  %378 = call i1 @llvm.is.constant.i32(i32 %377), !dbg !20342
  br i1 %378, label %cond.true628, label %cond.false644, !dbg !20342

cond.true628:                                     ; preds = %cond.end620
  %379 = load i8*, i8** %match_criteria, align 8, !dbg !20342
  %380 = bitcast i8* %379 to i32*, !dbg !20342
  %add.ptr629 = getelementptr i32, i32* %380, i64 17, !dbg !20342
  %381 = load i32, i32* %add.ptr629, align 4, !dbg !20342
  %and630 = and i32 %381, 255, !dbg !20342
  %shl631 = shl i32 %and630, 24, !dbg !20342
  %382 = load i8*, i8** %match_criteria, align 8, !dbg !20342
  %383 = bitcast i8* %382 to i32*, !dbg !20342
  %add.ptr632 = getelementptr i32, i32* %383, i64 17, !dbg !20342
  %384 = load i32, i32* %add.ptr632, align 4, !dbg !20342
  %and633 = and i32 %384, 65280, !dbg !20342
  %shl634 = shl i32 %and633, 8, !dbg !20342
  %or635 = or i32 %shl631, %shl634, !dbg !20342
  %385 = load i8*, i8** %match_criteria, align 8, !dbg !20342
  %386 = bitcast i8* %385 to i32*, !dbg !20342
  %add.ptr636 = getelementptr i32, i32* %386, i64 17, !dbg !20342
  %387 = load i32, i32* %add.ptr636, align 4, !dbg !20342
  %and637 = and i32 %387, 16711680, !dbg !20342
  %shr638 = lshr i32 %and637, 8, !dbg !20342
  %or639 = or i32 %or635, %shr638, !dbg !20342
  %388 = load i8*, i8** %match_criteria, align 8, !dbg !20342
  %389 = bitcast i8* %388 to i32*, !dbg !20342
  %add.ptr640 = getelementptr i32, i32* %389, i64 17, !dbg !20342
  %390 = load i32, i32* %add.ptr640, align 4, !dbg !20342
  %and641 = and i32 %390, -16777216, !dbg !20342
  %shr642 = lshr i32 %and641, 24, !dbg !20342
  %or643 = or i32 %or639, %shr642, !dbg !20342
  br label %cond.end647, !dbg !20342

cond.false644:                                    ; preds = %cond.end620
  %391 = load i8*, i8** %match_criteria, align 8, !dbg !20342
  %392 = bitcast i8* %391 to i32*, !dbg !20342
  %add.ptr645 = getelementptr i32, i32* %392, i64 17, !dbg !20342
  %393 = load i32, i32* %add.ptr645, align 4, !dbg !20342
  %call646 = call i32 @__fswab32(i32 %393) #10, !dbg !20342
  br label %cond.end647, !dbg !20342

cond.end647:                                      ; preds = %cond.false644, %cond.true628
  %cond648 = phi i32 [ %or643, %cond.true628 ], [ %call646, %cond.false644 ], !dbg !20342
  %and649 = and i32 %cond648, -65536, !dbg !20342
  %or650 = or i32 %and649, 65535, !dbg !20342
  %and651 = and i32 %or650, -16777216, !dbg !20342
  %shr652 = lshr i32 %and651, 24, !dbg !20342
  %or653 = or i32 %or626, %shr652, !dbg !20342
  br label %cond.end680, !dbg !20342

cond.false654:                                    ; preds = %cond.end542
  %394 = load i8*, i8** %match_criteria, align 8, !dbg !20342
  %395 = bitcast i8* %394 to i32*, !dbg !20342
  %add.ptr655 = getelementptr i32, i32* %395, i64 17, !dbg !20342
  %396 = load i32, i32* %add.ptr655, align 4, !dbg !20342
  %397 = call i1 @llvm.is.constant.i32(i32 %396), !dbg !20342
  br i1 %397, label %cond.true656, label %cond.false672, !dbg !20342

cond.true656:                                     ; preds = %cond.false654
  %398 = load i8*, i8** %match_criteria, align 8, !dbg !20342
  %399 = bitcast i8* %398 to i32*, !dbg !20342
  %add.ptr657 = getelementptr i32, i32* %399, i64 17, !dbg !20342
  %400 = load i32, i32* %add.ptr657, align 4, !dbg !20342
  %and658 = and i32 %400, 255, !dbg !20342
  %shl659 = shl i32 %and658, 24, !dbg !20342
  %401 = load i8*, i8** %match_criteria, align 8, !dbg !20342
  %402 = bitcast i8* %401 to i32*, !dbg !20342
  %add.ptr660 = getelementptr i32, i32* %402, i64 17, !dbg !20342
  %403 = load i32, i32* %add.ptr660, align 4, !dbg !20342
  %and661 = and i32 %403, 65280, !dbg !20342
  %shl662 = shl i32 %and661, 8, !dbg !20342
  %or663 = or i32 %shl659, %shl662, !dbg !20342
  %404 = load i8*, i8** %match_criteria, align 8, !dbg !20342
  %405 = bitcast i8* %404 to i32*, !dbg !20342
  %add.ptr664 = getelementptr i32, i32* %405, i64 17, !dbg !20342
  %406 = load i32, i32* %add.ptr664, align 4, !dbg !20342
  %and665 = and i32 %406, 16711680, !dbg !20342
  %shr666 = lshr i32 %and665, 8, !dbg !20342
  %or667 = or i32 %or663, %shr666, !dbg !20342
  %407 = load i8*, i8** %match_criteria, align 8, !dbg !20342
  %408 = bitcast i8* %407 to i32*, !dbg !20342
  %add.ptr668 = getelementptr i32, i32* %408, i64 17, !dbg !20342
  %409 = load i32, i32* %add.ptr668, align 4, !dbg !20342
  %and669 = and i32 %409, -16777216, !dbg !20342
  %shr670 = lshr i32 %and669, 24, !dbg !20342
  %or671 = or i32 %or667, %shr670, !dbg !20342
  br label %cond.end675, !dbg !20342

cond.false672:                                    ; preds = %cond.false654
  %410 = load i8*, i8** %match_criteria, align 8, !dbg !20342
  %411 = bitcast i8* %410 to i32*, !dbg !20342
  %add.ptr673 = getelementptr i32, i32* %411, i64 17, !dbg !20342
  %412 = load i32, i32* %add.ptr673, align 4, !dbg !20342
  %call674 = call i32 @__fswab32(i32 %412) #10, !dbg !20342
  br label %cond.end675, !dbg !20342

cond.end675:                                      ; preds = %cond.false672, %cond.true656
  %cond676 = phi i32 [ %or671, %cond.true656 ], [ %call674, %cond.false672 ], !dbg !20342
  %and677 = and i32 %cond676, -65536, !dbg !20342
  %or678 = or i32 %and677, 65535, !dbg !20342
  %call679 = call i32 @__fswab32(i32 %or678) #10, !dbg !20342
  br label %cond.end680, !dbg !20342

cond.end680:                                      ; preds = %cond.end675, %cond.end647
  %cond681 = phi i32 [ %or653, %cond.end647 ], [ %call679, %cond.end675 ], !dbg !20342
  %413 = load i8*, i8** %match_criteria, align 8, !dbg !20342
  %414 = bitcast i8* %413 to i32*, !dbg !20342
  %add.ptr682 = getelementptr i32, i32* %414, i64 17, !dbg !20342
  store i32 %cond681, i32* %add.ptr682, align 4, !dbg !20342
  br label %do.end683, !dbg !20342

do.end683:                                        ; preds = %cond.end680
  br label %if.end

if.end:                                           ; preds = %do.end683, %do.end340
  ret void, !dbg !20346
}

; Function Attrs: noredzone
declare dso_local void @mlx5_modify_header_dealloc(%struct.mlx5_core_dev*, %struct.mlx5_modify_hdr*) #5

; Function Attrs: noredzone
declare dso_local void @mlx5_devcom_register_component(%struct.mlx5_devcom*, i32, i32 (i32, i8*, i8*)*, i8*) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlx5_esw_offloads_devcom_event(i32 %event, i8* %my_data, i8* %event_data) #0 !dbg !20347 {
entry:
  %pscr_ret__.i = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i, metadata !20177, metadata !DIExpression()), !dbg !20350
  %__vpp_verify.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i, metadata !20187, metadata !DIExpression()), !dbg !20352
  %pfo_val__.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i, metadata !20190, metadata !DIExpression()), !dbg !20353
  %tmp.i = alloca %struct.task_struct*, align 8
  %tmp1.i = alloca %struct.task_struct*, align 8
  %retval = alloca i32, align 4
  %event.addr = alloca i32, align 4
  %my_data.addr = alloca i8*, align 8
  %event_data.addr = alloca i8*, align 8
  %esw = alloca %struct.mlx5_eswitch*, align 8
  %devcom = alloca %struct.mlx5_devcom*, align 8
  %peer_esw = alloca %struct.mlx5_eswitch*, align 8
  %err = alloca i32, align 4
  store i32 %event, i32* %event.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %event.addr, metadata !20354, metadata !DIExpression()), !dbg !20355
  store i8* %my_data, i8** %my_data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %my_data.addr, metadata !20356, metadata !DIExpression()), !dbg !20357
  store i8* %event_data, i8** %event_data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %event_data.addr, metadata !20358, metadata !DIExpression()), !dbg !20359
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw, metadata !20360, metadata !DIExpression()), !dbg !20361
  %0 = load i8*, i8** %my_data.addr, align 8, !dbg !20362
  %1 = bitcast i8* %0 to %struct.mlx5_eswitch*, !dbg !20362
  store %struct.mlx5_eswitch* %1, %struct.mlx5_eswitch** %esw, align 8, !dbg !20361
  call void @llvm.dbg.declare(metadata %struct.mlx5_devcom** %devcom, metadata !20363, metadata !DIExpression()), !dbg !20364
  %2 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw, align 8, !dbg !20365
  %dev = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %2, i32 0, i32 0, !dbg !20366
  %3 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !20366
  %priv = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %3, i32 0, i32 17, !dbg !20367
  %devcom1 = getelementptr inbounds %struct.mlx5_priv, %struct.mlx5_priv* %priv, i32 0, i32 29, !dbg !20368
  %4 = load %struct.mlx5_devcom*, %struct.mlx5_devcom** %devcom1, align 8, !dbg !20368
  store %struct.mlx5_devcom* %4, %struct.mlx5_devcom** %devcom, align 8, !dbg !20364
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %peer_esw, metadata !20369, metadata !DIExpression()), !dbg !20370
  %5 = load i8*, i8** %event_data.addr, align 8, !dbg !20371
  %6 = bitcast i8* %5 to %struct.mlx5_eswitch*, !dbg !20371
  store %struct.mlx5_eswitch* %6, %struct.mlx5_eswitch** %peer_esw, align 8, !dbg !20370
  call void @llvm.dbg.declare(metadata i32* %err, metadata !20372, metadata !DIExpression()), !dbg !20373
  %7 = load i32, i32* %event.addr, align 4, !dbg !20374
  switch i32 %7, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb16
  ], !dbg !20375

sw.bb:                                            ; preds = %entry
  %8 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw, align 8, !dbg !20376
  %call = call zeroext i1 @mlx5_eswitch_vport_match_metadata_enabled(%struct.mlx5_eswitch* %8) #8, !dbg !20379
  %conv = zext i1 %call to i32, !dbg !20379
  %9 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %peer_esw, align 8, !dbg !20380
  %call2 = call zeroext i1 @mlx5_eswitch_vport_match_metadata_enabled(%struct.mlx5_eswitch* %9) #8, !dbg !20381
  %conv3 = zext i1 %call2 to i32, !dbg !20381
  %cmp = icmp ne i32 %conv, %conv3, !dbg !20382
  br i1 %cmp, label %if.then, label %if.end, !dbg !20383

if.then:                                          ; preds = %sw.bb
  br label %sw.epilog, !dbg !20384

if.end:                                           ; preds = %sw.bb
  %10 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw, align 8, !dbg !20385
  %11 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %peer_esw, align 8, !dbg !20386
  %call5 = call i32 @mlx5_esw_offloads_set_ns_peer(%struct.mlx5_eswitch* %10, %struct.mlx5_eswitch* %11, i1 zeroext true) #8, !dbg !20387
  store i32 %call5, i32* %err, align 4, !dbg !20388
  %12 = load i32, i32* %err, align 4, !dbg !20389
  %tobool = icmp ne i32 %12, 0, !dbg !20389
  br i1 %tobool, label %if.then6, label %if.end7, !dbg !20391

if.then6:                                         ; preds = %if.end
  br label %err_out, !dbg !20392

if.end7:                                          ; preds = %if.end
  %13 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw, align 8, !dbg !20393
  %14 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %peer_esw, align 8, !dbg !20394
  %call8 = call i32 @mlx5_esw_offloads_pair(%struct.mlx5_eswitch* %13, %struct.mlx5_eswitch* %14) #8, !dbg !20395
  store i32 %call8, i32* %err, align 4, !dbg !20396
  %15 = load i32, i32* %err, align 4, !dbg !20397
  %tobool9 = icmp ne i32 %15, 0, !dbg !20397
  br i1 %tobool9, label %if.then10, label %if.end11, !dbg !20399

if.then10:                                        ; preds = %if.end7
  br label %err_peer, !dbg !20400

if.end11:                                         ; preds = %if.end7
  %16 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %peer_esw, align 8, !dbg !20401
  %17 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw, align 8, !dbg !20402
  %call12 = call i32 @mlx5_esw_offloads_pair(%struct.mlx5_eswitch* %16, %struct.mlx5_eswitch* %17) #8, !dbg !20403
  store i32 %call12, i32* %err, align 4, !dbg !20404
  %18 = load i32, i32* %err, align 4, !dbg !20405
  %tobool13 = icmp ne i32 %18, 0, !dbg !20405
  br i1 %tobool13, label %if.then14, label %if.end15, !dbg !20407

if.then14:                                        ; preds = %if.end11
  br label %err_pair, !dbg !20408

if.end15:                                         ; preds = %if.end11
  %19 = load %struct.mlx5_devcom*, %struct.mlx5_devcom** %devcom, align 8, !dbg !20409
  call void @mlx5_devcom_set_paired(%struct.mlx5_devcom* %19, i32 0, i1 zeroext true) #8, !dbg !20410
  br label %sw.epilog, !dbg !20411

sw.bb16:                                          ; preds = %entry
  %20 = load %struct.mlx5_devcom*, %struct.mlx5_devcom** %devcom, align 8, !dbg !20412
  %call17 = call zeroext i1 @mlx5_devcom_is_paired(%struct.mlx5_devcom* %20, i32 0) #8, !dbg !20414
  br i1 %call17, label %if.end19, label %if.then18, !dbg !20415

if.then18:                                        ; preds = %sw.bb16
  br label %sw.epilog, !dbg !20416

if.end19:                                         ; preds = %sw.bb16
  %21 = load %struct.mlx5_devcom*, %struct.mlx5_devcom** %devcom, align 8, !dbg !20417
  call void @mlx5_devcom_set_paired(%struct.mlx5_devcom* %21, i32 0, i1 zeroext false) #8, !dbg !20418
  %22 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %peer_esw, align 8, !dbg !20419
  call void @mlx5_esw_offloads_unpair(%struct.mlx5_eswitch* %22) #8, !dbg !20420
  %23 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw, align 8, !dbg !20421
  call void @mlx5_esw_offloads_unpair(%struct.mlx5_eswitch* %23) #8, !dbg !20422
  %24 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw, align 8, !dbg !20423
  %25 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %peer_esw, align 8, !dbg !20424
  %call20 = call i32 @mlx5_esw_offloads_set_ns_peer(%struct.mlx5_eswitch* %24, %struct.mlx5_eswitch* %25, i1 zeroext false) #8, !dbg !20425
  br label %sw.epilog, !dbg !20426

sw.epilog:                                        ; preds = %entry, %if.end19, %if.then18, %if.end15, %if.then
  store i32 0, i32* %retval, align 4, !dbg !20427
  br label %return, !dbg !20427

err_pair:                                         ; preds = %if.then14
  call void @llvm.dbg.label(metadata !20428), !dbg !20429
  %26 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw, align 8, !dbg !20430
  call void @mlx5_esw_offloads_unpair(%struct.mlx5_eswitch* %26) #8, !dbg !20431
  br label %err_peer, !dbg !20431

err_peer:                                         ; preds = %err_pair, %if.then10
  call void @llvm.dbg.label(metadata !20432), !dbg !20433
  %27 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw, align 8, !dbg !20434
  %28 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %peer_esw, align 8, !dbg !20435
  %call21 = call i32 @mlx5_esw_offloads_set_ns_peer(%struct.mlx5_eswitch* %27, %struct.mlx5_eswitch* %28, i1 zeroext false) #8, !dbg !20436
  br label %err_out, !dbg !20436

err_out:                                          ; preds = %err_peer, %if.then6
  call void @llvm.dbg.label(metadata !20437), !dbg !20438
  %29 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw, align 8, !dbg !20439
  %dev22 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %29, i32 0, i32 0, !dbg !20439
  %30 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev22, align 8, !dbg !20439
  %device = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %30, i32 0, i32 0, !dbg !20439
  %31 = load %struct.device*, %struct.device** %device, align 8, !dbg !20439
  store i8* null, i8** %__vpp_verify.i, align 8, !dbg !20352
  %32 = load i8*, i8** %__vpp_verify.i, align 8, !dbg !20352
  %33 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #13, !dbg !20353, !srcloc !20244
  store i64 %33, i64* %pfo_val__.i, align 8, !dbg !20353
  %34 = load i64, i64* %pfo_val__.i, align 8, !dbg !20353
  %35 = inttoptr i64 %34 to %struct.task_struct*, !dbg !20353
  store %struct.task_struct* %35, %struct.task_struct** %tmp.i, align 8, !dbg !20353
  %36 = load %struct.task_struct*, %struct.task_struct** %tmp.i, align 8, !dbg !20353
  store %struct.task_struct* %36, %struct.task_struct** %pscr_ret__.i, align 8, !dbg !20350
  %37 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i, align 8, !dbg !20350
  store %struct.task_struct* %37, %struct.task_struct** %tmp1.i, align 8, !dbg !20350
  %38 = load %struct.task_struct*, %struct.task_struct** %tmp1.i, align 8, !dbg !20350
  %pid = getelementptr inbounds %struct.task_struct, %struct.task_struct* %38, i32 0, i32 35, !dbg !20439
  %39 = load i32, i32* %pid, align 64, !dbg !20439
  %40 = load i32, i32* %event.addr, align 4, !dbg !20439
  %41 = load i32, i32* %err, align 4, !dbg !20439
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %31, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @__func__.mlx5_esw_offloads_devcom_event, i64 0, i64 0), i32 1990, i32 %39, i32 %40, i32 %41) #9, !dbg !20439
  %42 = load i32, i32* %err, align 4, !dbg !20440
  store i32 %42, i32* %retval, align 4, !dbg !20441
  br label %return, !dbg !20441

return:                                           ; preds = %err_out, %sw.epilog
  %43 = load i32, i32* %retval, align 4, !dbg !20442
  ret i32 %43, !dbg !20442
}

; Function Attrs: noredzone
declare dso_local i32 @mlx5_devcom_send_event(%struct.mlx5_devcom*, i32, i32, i8*) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlx5_esw_offloads_set_ns_peer(%struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch* %peer_esw, i1 zeroext %pair) #0 !dbg !20443 {
entry:
  %retval = alloca i32, align 4
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  %peer_esw.addr = alloca %struct.mlx5_eswitch*, align 8
  %pair.addr = alloca i8, align 1
  %peer_ns = alloca %struct.mlx5_flow_root_namespace*, align 8
  %ns = alloca %struct.mlx5_flow_root_namespace*, align 8
  %err = alloca i32, align 4
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !20446, metadata !DIExpression()), !dbg !20447
  store %struct.mlx5_eswitch* %peer_esw, %struct.mlx5_eswitch** %peer_esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %peer_esw.addr, metadata !20448, metadata !DIExpression()), !dbg !20449
  %frombool = zext i1 %pair to i8
  store i8 %frombool, i8* %pair.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %pair.addr, metadata !20450, metadata !DIExpression()), !dbg !20451
  call void @llvm.dbg.declare(metadata %struct.mlx5_flow_root_namespace** %peer_ns, metadata !20452, metadata !DIExpression()), !dbg !20453
  call void @llvm.dbg.declare(metadata %struct.mlx5_flow_root_namespace** %ns, metadata !20454, metadata !DIExpression()), !dbg !20455
  call void @llvm.dbg.declare(metadata i32* %err, metadata !20456, metadata !DIExpression()), !dbg !20457
  %0 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %peer_esw.addr, align 8, !dbg !20458
  %dev = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %0, i32 0, i32 0, !dbg !20459
  %1 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !20459
  %priv = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %1, i32 0, i32 17, !dbg !20460
  %steering = getelementptr inbounds %struct.mlx5_priv, %struct.mlx5_priv* %priv, i32 0, i32 24, !dbg !20461
  %2 = load %struct.mlx5_flow_steering*, %struct.mlx5_flow_steering** %steering, align 8, !dbg !20461
  %fdb_root_ns = getelementptr inbounds %struct.mlx5_flow_steering, %struct.mlx5_flow_steering* %2, i32 0, i32 5, !dbg !20462
  %3 = load %struct.mlx5_flow_root_namespace*, %struct.mlx5_flow_root_namespace** %fdb_root_ns, align 8, !dbg !20462
  store %struct.mlx5_flow_root_namespace* %3, %struct.mlx5_flow_root_namespace** %peer_ns, align 8, !dbg !20463
  %4 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !20464
  %dev1 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %4, i32 0, i32 0, !dbg !20465
  %5 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev1, align 8, !dbg !20465
  %priv2 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %5, i32 0, i32 17, !dbg !20466
  %steering3 = getelementptr inbounds %struct.mlx5_priv, %struct.mlx5_priv* %priv2, i32 0, i32 24, !dbg !20467
  %6 = load %struct.mlx5_flow_steering*, %struct.mlx5_flow_steering** %steering3, align 8, !dbg !20467
  %fdb_root_ns4 = getelementptr inbounds %struct.mlx5_flow_steering, %struct.mlx5_flow_steering* %6, i32 0, i32 5, !dbg !20468
  %7 = load %struct.mlx5_flow_root_namespace*, %struct.mlx5_flow_root_namespace** %fdb_root_ns4, align 8, !dbg !20468
  store %struct.mlx5_flow_root_namespace* %7, %struct.mlx5_flow_root_namespace** %ns, align 8, !dbg !20469
  %8 = load i8, i8* %pair.addr, align 1, !dbg !20470
  %tobool = trunc i8 %8 to i1, !dbg !20470
  br i1 %tobool, label %if.then, label %if.else, !dbg !20472

if.then:                                          ; preds = %entry
  %9 = load %struct.mlx5_flow_root_namespace*, %struct.mlx5_flow_root_namespace** %ns, align 8, !dbg !20473
  %10 = load %struct.mlx5_flow_root_namespace*, %struct.mlx5_flow_root_namespace** %peer_ns, align 8, !dbg !20475
  %call = call i32 @mlx5_flow_namespace_set_peer(%struct.mlx5_flow_root_namespace* %9, %struct.mlx5_flow_root_namespace* %10) #8, !dbg !20476
  store i32 %call, i32* %err, align 4, !dbg !20477
  %11 = load i32, i32* %err, align 4, !dbg !20478
  %tobool5 = icmp ne i32 %11, 0, !dbg !20478
  br i1 %tobool5, label %if.then6, label %if.end, !dbg !20480

if.then6:                                         ; preds = %if.then
  %12 = load i32, i32* %err, align 4, !dbg !20481
  store i32 %12, i32* %retval, align 4, !dbg !20482
  br label %return, !dbg !20482

if.end:                                           ; preds = %if.then
  %13 = load %struct.mlx5_flow_root_namespace*, %struct.mlx5_flow_root_namespace** %peer_ns, align 8, !dbg !20483
  %14 = load %struct.mlx5_flow_root_namespace*, %struct.mlx5_flow_root_namespace** %ns, align 8, !dbg !20484
  %call7 = call i32 @mlx5_flow_namespace_set_peer(%struct.mlx5_flow_root_namespace* %13, %struct.mlx5_flow_root_namespace* %14) #8, !dbg !20485
  store i32 %call7, i32* %err, align 4, !dbg !20486
  %15 = load i32, i32* %err, align 4, !dbg !20487
  %tobool8 = icmp ne i32 %15, 0, !dbg !20487
  br i1 %tobool8, label %if.then9, label %if.end11, !dbg !20489

if.then9:                                         ; preds = %if.end
  %16 = load %struct.mlx5_flow_root_namespace*, %struct.mlx5_flow_root_namespace** %ns, align 8, !dbg !20490
  %call10 = call i32 @mlx5_flow_namespace_set_peer(%struct.mlx5_flow_root_namespace* %16, %struct.mlx5_flow_root_namespace* null) #8, !dbg !20492
  %17 = load i32, i32* %err, align 4, !dbg !20493
  store i32 %17, i32* %retval, align 4, !dbg !20494
  br label %return, !dbg !20494

if.end11:                                         ; preds = %if.end
  br label %if.end14, !dbg !20495

if.else:                                          ; preds = %entry
  %18 = load %struct.mlx5_flow_root_namespace*, %struct.mlx5_flow_root_namespace** %ns, align 8, !dbg !20496
  %call12 = call i32 @mlx5_flow_namespace_set_peer(%struct.mlx5_flow_root_namespace* %18, %struct.mlx5_flow_root_namespace* null) #8, !dbg !20498
  %19 = load %struct.mlx5_flow_root_namespace*, %struct.mlx5_flow_root_namespace** %peer_ns, align 8, !dbg !20499
  %call13 = call i32 @mlx5_flow_namespace_set_peer(%struct.mlx5_flow_root_namespace* %19, %struct.mlx5_flow_root_namespace* null) #8, !dbg !20500
  br label %if.end14

if.end14:                                         ; preds = %if.else, %if.end11
  store i32 0, i32* %retval, align 4, !dbg !20501
  br label %return, !dbg !20501

return:                                           ; preds = %if.end14, %if.then9, %if.then6
  %20 = load i32, i32* %retval, align 4, !dbg !20502
  ret i32 %20, !dbg !20502
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlx5_esw_offloads_pair(%struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch* %peer_esw) #0 !dbg !20503 {
entry:
  %retval = alloca i32, align 4
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  %peer_esw.addr = alloca %struct.mlx5_eswitch*, align 8
  %err = alloca i32, align 4
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !20506, metadata !DIExpression()), !dbg !20507
  store %struct.mlx5_eswitch* %peer_esw, %struct.mlx5_eswitch** %peer_esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %peer_esw.addr, metadata !20508, metadata !DIExpression()), !dbg !20509
  call void @llvm.dbg.declare(metadata i32* %err, metadata !20510, metadata !DIExpression()), !dbg !20511
  %0 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !20512
  %1 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %peer_esw.addr, align 8, !dbg !20513
  %dev = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %1, i32 0, i32 0, !dbg !20514
  %2 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !20514
  %call = call i32 @esw_add_fdb_peer_miss_rules(%struct.mlx5_eswitch* %0, %struct.mlx5_core_dev* %2) #8, !dbg !20515
  store i32 %call, i32* %err, align 4, !dbg !20516
  %3 = load i32, i32* %err, align 4, !dbg !20517
  %tobool = icmp ne i32 %3, 0, !dbg !20517
  br i1 %tobool, label %if.then, label %if.end, !dbg !20519

if.then:                                          ; preds = %entry
  %4 = load i32, i32* %err, align 4, !dbg !20520
  store i32 %4, i32* %retval, align 4, !dbg !20521
  br label %return, !dbg !20521

if.end:                                           ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !20522
  br label %return, !dbg !20522

return:                                           ; preds = %if.end, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !20523
  ret i32 %5, !dbg !20523
}

; Function Attrs: noredzone
declare dso_local void @mlx5_devcom_set_paired(%struct.mlx5_devcom*, i32, i1 zeroext) #5

; Function Attrs: noredzone
declare dso_local zeroext i1 @mlx5_devcom_is_paired(%struct.mlx5_devcom*, i32) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mlx5_esw_offloads_unpair(%struct.mlx5_eswitch* %esw) #0 !dbg !20524 {
entry:
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !20525, metadata !DIExpression()), !dbg !20526
  %0 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !20527
  call void @esw_del_fdb_peer_miss_rules(%struct.mlx5_eswitch* %0) #8, !dbg !20528
  ret void, !dbg !20529
}

; Function Attrs: cold noredzone
declare dso_local void @_dev_err(%struct.device*, i8*, ...) #6

; Function Attrs: noredzone
declare dso_local i32 @mlx5_flow_namespace_set_peer(%struct.mlx5_flow_root_namespace*, %struct.mlx5_flow_root_namespace*) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @esw_add_fdb_peer_miss_rules(%struct.mlx5_eswitch* %esw, %struct.mlx5_core_dev* %peer_dev) #0 !dbg !20530 {
entry:
  %retval = alloca i32, align 4
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  %peer_dev.addr = alloca %struct.mlx5_core_dev*, align 8
  %dest = alloca %struct.mlx5_flow_destination, align 8
  %flow_act = alloca %struct.mlx5_flow_act, align 8
  %flows = alloca %struct.mlx5_flow_handle**, align 8
  %flow = alloca %struct.mlx5_flow_handle*, align 8
  %spec = alloca %struct.mlx5_flow_spec*, align 8
  %nvports = alloca i32, align 4
  %misc = alloca i8*, align 8
  %err = alloca i32, align 4
  %i = alloca i32, align 4
  %_v = alloca i32, align 4
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !20533, metadata !DIExpression()), !dbg !20534
  store %struct.mlx5_core_dev* %peer_dev, %struct.mlx5_core_dev** %peer_dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_core_dev** %peer_dev.addr, metadata !20535, metadata !DIExpression()), !dbg !20536
  call void @llvm.dbg.declare(metadata %struct.mlx5_flow_destination* %dest, metadata !20537, metadata !DIExpression()), !dbg !20538
  %0 = bitcast %struct.mlx5_flow_destination* %dest to i8*, !dbg !20538
  call void @llvm.memset.p0i8.i64(i8* align 8 %0, i8 0, i64 32, i1 false), !dbg !20538
  call void @llvm.dbg.declare(metadata %struct.mlx5_flow_act* %flow_act, metadata !20539, metadata !DIExpression()), !dbg !20540
  %1 = bitcast %struct.mlx5_flow_act* %flow_act to i8*, !dbg !20540
  call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 56, i1 false), !dbg !20540
  call void @llvm.dbg.declare(metadata %struct.mlx5_flow_handle*** %flows, metadata !20541, metadata !DIExpression()), !dbg !20542
  call void @llvm.dbg.declare(metadata %struct.mlx5_flow_handle** %flow, metadata !20543, metadata !DIExpression()), !dbg !20544
  call void @llvm.dbg.declare(metadata %struct.mlx5_flow_spec** %spec, metadata !20545, metadata !DIExpression()), !dbg !20546
  call void @llvm.dbg.declare(metadata i32* %nvports, metadata !20547, metadata !DIExpression()), !dbg !20548
  %2 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !20549
  %total_vports = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %2, i32 0, i32 8, !dbg !20550
  %3 = load i32, i32* %total_vports, align 4, !dbg !20550
  store i32 %3, i32* %nvports, align 4, !dbg !20548
  call void @llvm.dbg.declare(metadata i8** %misc, metadata !20551, metadata !DIExpression()), !dbg !20552
  call void @llvm.dbg.declare(metadata i32* %err, metadata !20553, metadata !DIExpression()), !dbg !20554
  call void @llvm.dbg.declare(metadata i32* %i, metadata !20555, metadata !DIExpression()), !dbg !20556
  %call = call i8* @kvzalloc(i64 1040, i32 3264) #8, !dbg !20557
  %4 = bitcast i8* %call to %struct.mlx5_flow_spec*, !dbg !20557
  store %struct.mlx5_flow_spec* %4, %struct.mlx5_flow_spec** %spec, align 8, !dbg !20558
  %5 = load %struct.mlx5_flow_spec*, %struct.mlx5_flow_spec** %spec, align 8, !dbg !20559
  %tobool = icmp ne %struct.mlx5_flow_spec* %5, null, !dbg !20559
  br i1 %tobool, label %if.end, label %if.then, !dbg !20561

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !20562
  br label %return, !dbg !20562

if.end:                                           ; preds = %entry
  %6 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !20563
  %7 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %peer_dev.addr, align 8, !dbg !20564
  %8 = load %struct.mlx5_flow_spec*, %struct.mlx5_flow_spec** %spec, align 8, !dbg !20565
  call void @peer_miss_rules_setup(%struct.mlx5_eswitch* %6, %struct.mlx5_core_dev* %7, %struct.mlx5_flow_spec* %8, %struct.mlx5_flow_destination* %dest) #8, !dbg !20566
  %9 = load i32, i32* %nvports, align 4, !dbg !20567
  %conv = sext i32 %9 to i64, !dbg !20567
  %mul = mul i64 %conv, 8, !dbg !20568
  %call1 = call i8* @kvzalloc(i64 %mul, i32 3264) #8, !dbg !20569
  %10 = bitcast i8* %call1 to %struct.mlx5_flow_handle**, !dbg !20569
  store %struct.mlx5_flow_handle** %10, %struct.mlx5_flow_handle*** %flows, align 8, !dbg !20570
  %11 = load %struct.mlx5_flow_handle**, %struct.mlx5_flow_handle*** %flows, align 8, !dbg !20571
  %tobool2 = icmp ne %struct.mlx5_flow_handle** %11, null, !dbg !20571
  br i1 %tobool2, label %if.end4, label %if.then3, !dbg !20573

if.then3:                                         ; preds = %if.end
  store i32 -12, i32* %err, align 4, !dbg !20574
  br label %alloc_flows_err, !dbg !20576

if.end4:                                          ; preds = %if.end
  %action = getelementptr inbounds %struct.mlx5_flow_act, %struct.mlx5_flow_act* %flow_act, i32 0, i32 0, !dbg !20577
  store i32 4, i32* %action, align 8, !dbg !20578
  %12 = load %struct.mlx5_flow_spec*, %struct.mlx5_flow_spec** %spec, align 8, !dbg !20579
  %match_value = getelementptr inbounds %struct.mlx5_flow_spec, %struct.mlx5_flow_spec* %12, i32 0, i32 2, !dbg !20579
  %arraydecay = getelementptr inbounds [128 x i32], [128 x i32]* %match_value, i64 0, i64 0, !dbg !20579
  %13 = bitcast i32* %arraydecay to i8*, !dbg !20579
  %add.ptr = getelementptr i8, i8* %13, i64 64, !dbg !20579
  store i8* %add.ptr, i8** %misc, align 8, !dbg !20580
  %14 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !20581
  %dev = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %14, i32 0, i32 0, !dbg !20583
  %15 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !20583
  %call5 = call zeroext i1 @mlx5_core_is_ecpf_esw_manager(%struct.mlx5_core_dev* %15) #8, !dbg !20584
  br i1 %call5, label %if.then6, label %if.end13, !dbg !20585

if.then6:                                         ; preds = %if.end4
  %16 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !20586
  %17 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %peer_dev.addr, align 8, !dbg !20588
  %priv = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %17, i32 0, i32 17, !dbg !20589
  %eswitch = getelementptr inbounds %struct.mlx5_priv, %struct.mlx5_priv* %priv, i32 0, i32 26, !dbg !20590
  %18 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %eswitch, align 8, !dbg !20590
  %19 = load %struct.mlx5_flow_spec*, %struct.mlx5_flow_spec** %spec, align 8, !dbg !20591
  call void @esw_set_peer_miss_rule_source_port(%struct.mlx5_eswitch* %16, %struct.mlx5_eswitch* %18, %struct.mlx5_flow_spec* %19, i16 zeroext 0) #8, !dbg !20592
  %20 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !20593
  %fdb_table = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %20, i32 0, i32 2, !dbg !20594
  %21 = getelementptr inbounds %struct.mlx5_eswitch_fdb, %struct.mlx5_eswitch_fdb* %fdb_table, i32 0, i32 0, !dbg !20595
  %offloads = bitcast %union.anon.154* %21 to %struct.offloads_fdb*, !dbg !20595
  %slow_fdb = getelementptr inbounds %struct.offloads_fdb, %struct.offloads_fdb* %offloads, i32 0, i32 1, !dbg !20596
  %22 = load %struct.mlx5_flow_table*, %struct.mlx5_flow_table** %slow_fdb, align 8, !dbg !20596
  %23 = load %struct.mlx5_flow_spec*, %struct.mlx5_flow_spec** %spec, align 8, !dbg !20597
  %call7 = call %struct.mlx5_flow_handle* @mlx5_add_flow_rules(%struct.mlx5_flow_table* %22, %struct.mlx5_flow_spec* %23, %struct.mlx5_flow_act* %flow_act, %struct.mlx5_flow_destination* %dest, i32 1) #8, !dbg !20598
  store %struct.mlx5_flow_handle* %call7, %struct.mlx5_flow_handle** %flow, align 8, !dbg !20599
  %24 = load %struct.mlx5_flow_handle*, %struct.mlx5_flow_handle** %flow, align 8, !dbg !20600
  %25 = bitcast %struct.mlx5_flow_handle* %24 to i8*, !dbg !20600
  %call8 = call zeroext i1 @IS_ERR(i8* %25) #8, !dbg !20602
  br i1 %call8, label %if.then9, label %if.end12, !dbg !20603

if.then9:                                         ; preds = %if.then6
  %26 = load %struct.mlx5_flow_handle*, %struct.mlx5_flow_handle** %flow, align 8, !dbg !20604
  %27 = bitcast %struct.mlx5_flow_handle* %26 to i8*, !dbg !20604
  %call10 = call i64 @PTR_ERR(i8* %27) #8, !dbg !20606
  %conv11 = trunc i64 %call10 to i32, !dbg !20606
  store i32 %conv11, i32* %err, align 4, !dbg !20607
  br label %add_pf_flow_err, !dbg !20608

if.end12:                                         ; preds = %if.then6
  %28 = load %struct.mlx5_flow_handle*, %struct.mlx5_flow_handle** %flow, align 8, !dbg !20609
  %29 = load %struct.mlx5_flow_handle**, %struct.mlx5_flow_handle*** %flows, align 8, !dbg !20610
  %arrayidx = getelementptr %struct.mlx5_flow_handle*, %struct.mlx5_flow_handle** %29, i64 0, !dbg !20610
  store %struct.mlx5_flow_handle* %28, %struct.mlx5_flow_handle** %arrayidx, align 8, !dbg !20611
  br label %if.end13, !dbg !20612

if.end13:                                         ; preds = %if.end12, %if.end4
  %30 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !20613
  %dev14 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %30, i32 0, i32 0, !dbg !20615
  %31 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev14, align 8, !dbg !20615
  %call15 = call zeroext i1 @mlx5_ecpf_vport_exists(%struct.mlx5_core_dev* %31) #8, !dbg !20616
  br i1 %call15, label %if.then16, label %if.end195, !dbg !20617

if.then16:                                        ; preds = %if.end13
  br label %do.body, !dbg !20618

do.body:                                          ; preds = %if.then16
  call void @llvm.dbg.declare(metadata i32* %_v, metadata !20620, metadata !DIExpression()), !dbg !20622
  store i32 65534, i32* %_v, align 4, !dbg !20622
  br label %do.body17, !dbg !20622

do.body17:                                        ; preds = %do.body
  br label %do.end, !dbg !20623

do.end:                                           ; preds = %do.body17
  %32 = load i8*, i8** %misc, align 8, !dbg !20622
  %33 = bitcast i8* %32 to i32*, !dbg !20622
  %add.ptr18 = getelementptr i32, i32* %33, i64 1, !dbg !20622
  %34 = load i32, i32* %add.ptr18, align 4, !dbg !20622
  %35 = call i1 @llvm.is.constant.i32(i32 %34), !dbg !20622
  br i1 %35, label %cond.true, label %cond.false, !dbg !20622

cond.true:                                        ; preds = %do.end
  %36 = load i8*, i8** %misc, align 8, !dbg !20622
  %37 = bitcast i8* %36 to i32*, !dbg !20622
  %add.ptr19 = getelementptr i32, i32* %37, i64 1, !dbg !20622
  %38 = load i32, i32* %add.ptr19, align 4, !dbg !20622
  %and = and i32 %38, 255, !dbg !20622
  %shl = shl i32 %and, 24, !dbg !20622
  %39 = load i8*, i8** %misc, align 8, !dbg !20622
  %40 = bitcast i8* %39 to i32*, !dbg !20622
  %add.ptr20 = getelementptr i32, i32* %40, i64 1, !dbg !20622
  %41 = load i32, i32* %add.ptr20, align 4, !dbg !20622
  %and21 = and i32 %41, 65280, !dbg !20622
  %shl22 = shl i32 %and21, 8, !dbg !20622
  %or = or i32 %shl, %shl22, !dbg !20622
  %42 = load i8*, i8** %misc, align 8, !dbg !20622
  %43 = bitcast i8* %42 to i32*, !dbg !20622
  %add.ptr23 = getelementptr i32, i32* %43, i64 1, !dbg !20622
  %44 = load i32, i32* %add.ptr23, align 4, !dbg !20622
  %and24 = and i32 %44, 16711680, !dbg !20622
  %shr = lshr i32 %and24, 8, !dbg !20622
  %or25 = or i32 %or, %shr, !dbg !20622
  %45 = load i8*, i8** %misc, align 8, !dbg !20622
  %46 = bitcast i8* %45 to i32*, !dbg !20622
  %add.ptr26 = getelementptr i32, i32* %46, i64 1, !dbg !20622
  %47 = load i32, i32* %add.ptr26, align 4, !dbg !20622
  %and27 = and i32 %47, -16777216, !dbg !20622
  %shr28 = lshr i32 %and27, 24, !dbg !20622
  %or29 = or i32 %or25, %shr28, !dbg !20622
  br label %cond.end, !dbg !20622

cond.false:                                       ; preds = %do.end
  %48 = load i8*, i8** %misc, align 8, !dbg !20622
  %49 = bitcast i8* %48 to i32*, !dbg !20622
  %add.ptr30 = getelementptr i32, i32* %49, i64 1, !dbg !20622
  %50 = load i32, i32* %add.ptr30, align 4, !dbg !20622
  %call31 = call i32 @__fswab32(i32 %50) #10, !dbg !20622
  br label %cond.end, !dbg !20622

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %or29, %cond.true ], [ %call31, %cond.false ], !dbg !20622
  %and32 = and i32 %cond, -65536, !dbg !20622
  %51 = load i32, i32* %_v, align 4, !dbg !20622
  %and33 = and i32 %51, 65535, !dbg !20622
  %shl34 = shl i32 %and33, 0, !dbg !20622
  %or35 = or i32 %and32, %shl34, !dbg !20622
  %52 = call i1 @llvm.is.constant.i32(i32 %or35), !dbg !20622
  br i1 %52, label %cond.true36, label %cond.false152, !dbg !20622

cond.true36:                                      ; preds = %cond.end
  %53 = load i8*, i8** %misc, align 8, !dbg !20622
  %54 = bitcast i8* %53 to i32*, !dbg !20622
  %add.ptr37 = getelementptr i32, i32* %54, i64 1, !dbg !20622
  %55 = load i32, i32* %add.ptr37, align 4, !dbg !20622
  %56 = call i1 @llvm.is.constant.i32(i32 %55), !dbg !20622
  br i1 %56, label %cond.true38, label %cond.false54, !dbg !20622

cond.true38:                                      ; preds = %cond.true36
  %57 = load i8*, i8** %misc, align 8, !dbg !20622
  %58 = bitcast i8* %57 to i32*, !dbg !20622
  %add.ptr39 = getelementptr i32, i32* %58, i64 1, !dbg !20622
  %59 = load i32, i32* %add.ptr39, align 4, !dbg !20622
  %and40 = and i32 %59, 255, !dbg !20622
  %shl41 = shl i32 %and40, 24, !dbg !20622
  %60 = load i8*, i8** %misc, align 8, !dbg !20622
  %61 = bitcast i8* %60 to i32*, !dbg !20622
  %add.ptr42 = getelementptr i32, i32* %61, i64 1, !dbg !20622
  %62 = load i32, i32* %add.ptr42, align 4, !dbg !20622
  %and43 = and i32 %62, 65280, !dbg !20622
  %shl44 = shl i32 %and43, 8, !dbg !20622
  %or45 = or i32 %shl41, %shl44, !dbg !20622
  %63 = load i8*, i8** %misc, align 8, !dbg !20622
  %64 = bitcast i8* %63 to i32*, !dbg !20622
  %add.ptr46 = getelementptr i32, i32* %64, i64 1, !dbg !20622
  %65 = load i32, i32* %add.ptr46, align 4, !dbg !20622
  %and47 = and i32 %65, 16711680, !dbg !20622
  %shr48 = lshr i32 %and47, 8, !dbg !20622
  %or49 = or i32 %or45, %shr48, !dbg !20622
  %66 = load i8*, i8** %misc, align 8, !dbg !20622
  %67 = bitcast i8* %66 to i32*, !dbg !20622
  %add.ptr50 = getelementptr i32, i32* %67, i64 1, !dbg !20622
  %68 = load i32, i32* %add.ptr50, align 4, !dbg !20622
  %and51 = and i32 %68, -16777216, !dbg !20622
  %shr52 = lshr i32 %and51, 24, !dbg !20622
  %or53 = or i32 %or49, %shr52, !dbg !20622
  br label %cond.end57, !dbg !20622

cond.false54:                                     ; preds = %cond.true36
  %69 = load i8*, i8** %misc, align 8, !dbg !20622
  %70 = bitcast i8* %69 to i32*, !dbg !20622
  %add.ptr55 = getelementptr i32, i32* %70, i64 1, !dbg !20622
  %71 = load i32, i32* %add.ptr55, align 4, !dbg !20622
  %call56 = call i32 @__fswab32(i32 %71) #10, !dbg !20622
  br label %cond.end57, !dbg !20622

cond.end57:                                       ; preds = %cond.false54, %cond.true38
  %cond58 = phi i32 [ %or53, %cond.true38 ], [ %call56, %cond.false54 ], !dbg !20622
  %and59 = and i32 %cond58, -65536, !dbg !20622
  %72 = load i32, i32* %_v, align 4, !dbg !20622
  %and60 = and i32 %72, 65535, !dbg !20622
  %shl61 = shl i32 %and60, 0, !dbg !20622
  %or62 = or i32 %and59, %shl61, !dbg !20622
  %and63 = and i32 %or62, 255, !dbg !20622
  %shl64 = shl i32 %and63, 24, !dbg !20622
  %73 = load i8*, i8** %misc, align 8, !dbg !20622
  %74 = bitcast i8* %73 to i32*, !dbg !20622
  %add.ptr65 = getelementptr i32, i32* %74, i64 1, !dbg !20622
  %75 = load i32, i32* %add.ptr65, align 4, !dbg !20622
  %76 = call i1 @llvm.is.constant.i32(i32 %75), !dbg !20622
  br i1 %76, label %cond.true66, label %cond.false82, !dbg !20622

cond.true66:                                      ; preds = %cond.end57
  %77 = load i8*, i8** %misc, align 8, !dbg !20622
  %78 = bitcast i8* %77 to i32*, !dbg !20622
  %add.ptr67 = getelementptr i32, i32* %78, i64 1, !dbg !20622
  %79 = load i32, i32* %add.ptr67, align 4, !dbg !20622
  %and68 = and i32 %79, 255, !dbg !20622
  %shl69 = shl i32 %and68, 24, !dbg !20622
  %80 = load i8*, i8** %misc, align 8, !dbg !20622
  %81 = bitcast i8* %80 to i32*, !dbg !20622
  %add.ptr70 = getelementptr i32, i32* %81, i64 1, !dbg !20622
  %82 = load i32, i32* %add.ptr70, align 4, !dbg !20622
  %and71 = and i32 %82, 65280, !dbg !20622
  %shl72 = shl i32 %and71, 8, !dbg !20622
  %or73 = or i32 %shl69, %shl72, !dbg !20622
  %83 = load i8*, i8** %misc, align 8, !dbg !20622
  %84 = bitcast i8* %83 to i32*, !dbg !20622
  %add.ptr74 = getelementptr i32, i32* %84, i64 1, !dbg !20622
  %85 = load i32, i32* %add.ptr74, align 4, !dbg !20622
  %and75 = and i32 %85, 16711680, !dbg !20622
  %shr76 = lshr i32 %and75, 8, !dbg !20622
  %or77 = or i32 %or73, %shr76, !dbg !20622
  %86 = load i8*, i8** %misc, align 8, !dbg !20622
  %87 = bitcast i8* %86 to i32*, !dbg !20622
  %add.ptr78 = getelementptr i32, i32* %87, i64 1, !dbg !20622
  %88 = load i32, i32* %add.ptr78, align 4, !dbg !20622
  %and79 = and i32 %88, -16777216, !dbg !20622
  %shr80 = lshr i32 %and79, 24, !dbg !20622
  %or81 = or i32 %or77, %shr80, !dbg !20622
  br label %cond.end85, !dbg !20622

cond.false82:                                     ; preds = %cond.end57
  %89 = load i8*, i8** %misc, align 8, !dbg !20622
  %90 = bitcast i8* %89 to i32*, !dbg !20622
  %add.ptr83 = getelementptr i32, i32* %90, i64 1, !dbg !20622
  %91 = load i32, i32* %add.ptr83, align 4, !dbg !20622
  %call84 = call i32 @__fswab32(i32 %91) #10, !dbg !20622
  br label %cond.end85, !dbg !20622

cond.end85:                                       ; preds = %cond.false82, %cond.true66
  %cond86 = phi i32 [ %or81, %cond.true66 ], [ %call84, %cond.false82 ], !dbg !20622
  %and87 = and i32 %cond86, -65536, !dbg !20622
  %92 = load i32, i32* %_v, align 4, !dbg !20622
  %and88 = and i32 %92, 65535, !dbg !20622
  %shl89 = shl i32 %and88, 0, !dbg !20622
  %or90 = or i32 %and87, %shl89, !dbg !20622
  %and91 = and i32 %or90, 65280, !dbg !20622
  %shl92 = shl i32 %and91, 8, !dbg !20622
  %or93 = or i32 %shl64, %shl92, !dbg !20622
  %93 = load i8*, i8** %misc, align 8, !dbg !20622
  %94 = bitcast i8* %93 to i32*, !dbg !20622
  %add.ptr94 = getelementptr i32, i32* %94, i64 1, !dbg !20622
  %95 = load i32, i32* %add.ptr94, align 4, !dbg !20622
  %96 = call i1 @llvm.is.constant.i32(i32 %95), !dbg !20622
  br i1 %96, label %cond.true95, label %cond.false111, !dbg !20622

cond.true95:                                      ; preds = %cond.end85
  %97 = load i8*, i8** %misc, align 8, !dbg !20622
  %98 = bitcast i8* %97 to i32*, !dbg !20622
  %add.ptr96 = getelementptr i32, i32* %98, i64 1, !dbg !20622
  %99 = load i32, i32* %add.ptr96, align 4, !dbg !20622
  %and97 = and i32 %99, 255, !dbg !20622
  %shl98 = shl i32 %and97, 24, !dbg !20622
  %100 = load i8*, i8** %misc, align 8, !dbg !20622
  %101 = bitcast i8* %100 to i32*, !dbg !20622
  %add.ptr99 = getelementptr i32, i32* %101, i64 1, !dbg !20622
  %102 = load i32, i32* %add.ptr99, align 4, !dbg !20622
  %and100 = and i32 %102, 65280, !dbg !20622
  %shl101 = shl i32 %and100, 8, !dbg !20622
  %or102 = or i32 %shl98, %shl101, !dbg !20622
  %103 = load i8*, i8** %misc, align 8, !dbg !20622
  %104 = bitcast i8* %103 to i32*, !dbg !20622
  %add.ptr103 = getelementptr i32, i32* %104, i64 1, !dbg !20622
  %105 = load i32, i32* %add.ptr103, align 4, !dbg !20622
  %and104 = and i32 %105, 16711680, !dbg !20622
  %shr105 = lshr i32 %and104, 8, !dbg !20622
  %or106 = or i32 %or102, %shr105, !dbg !20622
  %106 = load i8*, i8** %misc, align 8, !dbg !20622
  %107 = bitcast i8* %106 to i32*, !dbg !20622
  %add.ptr107 = getelementptr i32, i32* %107, i64 1, !dbg !20622
  %108 = load i32, i32* %add.ptr107, align 4, !dbg !20622
  %and108 = and i32 %108, -16777216, !dbg !20622
  %shr109 = lshr i32 %and108, 24, !dbg !20622
  %or110 = or i32 %or106, %shr109, !dbg !20622
  br label %cond.end114, !dbg !20622

cond.false111:                                    ; preds = %cond.end85
  %109 = load i8*, i8** %misc, align 8, !dbg !20622
  %110 = bitcast i8* %109 to i32*, !dbg !20622
  %add.ptr112 = getelementptr i32, i32* %110, i64 1, !dbg !20622
  %111 = load i32, i32* %add.ptr112, align 4, !dbg !20622
  %call113 = call i32 @__fswab32(i32 %111) #10, !dbg !20622
  br label %cond.end114, !dbg !20622

cond.end114:                                      ; preds = %cond.false111, %cond.true95
  %cond115 = phi i32 [ %or110, %cond.true95 ], [ %call113, %cond.false111 ], !dbg !20622
  %and116 = and i32 %cond115, -65536, !dbg !20622
  %112 = load i32, i32* %_v, align 4, !dbg !20622
  %and117 = and i32 %112, 65535, !dbg !20622
  %shl118 = shl i32 %and117, 0, !dbg !20622
  %or119 = or i32 %and116, %shl118, !dbg !20622
  %and120 = and i32 %or119, 16711680, !dbg !20622
  %shr121 = lshr i32 %and120, 8, !dbg !20622
  %or122 = or i32 %or93, %shr121, !dbg !20622
  %113 = load i8*, i8** %misc, align 8, !dbg !20622
  %114 = bitcast i8* %113 to i32*, !dbg !20622
  %add.ptr123 = getelementptr i32, i32* %114, i64 1, !dbg !20622
  %115 = load i32, i32* %add.ptr123, align 4, !dbg !20622
  %116 = call i1 @llvm.is.constant.i32(i32 %115), !dbg !20622
  br i1 %116, label %cond.true124, label %cond.false140, !dbg !20622

cond.true124:                                     ; preds = %cond.end114
  %117 = load i8*, i8** %misc, align 8, !dbg !20622
  %118 = bitcast i8* %117 to i32*, !dbg !20622
  %add.ptr125 = getelementptr i32, i32* %118, i64 1, !dbg !20622
  %119 = load i32, i32* %add.ptr125, align 4, !dbg !20622
  %and126 = and i32 %119, 255, !dbg !20622
  %shl127 = shl i32 %and126, 24, !dbg !20622
  %120 = load i8*, i8** %misc, align 8, !dbg !20622
  %121 = bitcast i8* %120 to i32*, !dbg !20622
  %add.ptr128 = getelementptr i32, i32* %121, i64 1, !dbg !20622
  %122 = load i32, i32* %add.ptr128, align 4, !dbg !20622
  %and129 = and i32 %122, 65280, !dbg !20622
  %shl130 = shl i32 %and129, 8, !dbg !20622
  %or131 = or i32 %shl127, %shl130, !dbg !20622
  %123 = load i8*, i8** %misc, align 8, !dbg !20622
  %124 = bitcast i8* %123 to i32*, !dbg !20622
  %add.ptr132 = getelementptr i32, i32* %124, i64 1, !dbg !20622
  %125 = load i32, i32* %add.ptr132, align 4, !dbg !20622
  %and133 = and i32 %125, 16711680, !dbg !20622
  %shr134 = lshr i32 %and133, 8, !dbg !20622
  %or135 = or i32 %or131, %shr134, !dbg !20622
  %126 = load i8*, i8** %misc, align 8, !dbg !20622
  %127 = bitcast i8* %126 to i32*, !dbg !20622
  %add.ptr136 = getelementptr i32, i32* %127, i64 1, !dbg !20622
  %128 = load i32, i32* %add.ptr136, align 4, !dbg !20622
  %and137 = and i32 %128, -16777216, !dbg !20622
  %shr138 = lshr i32 %and137, 24, !dbg !20622
  %or139 = or i32 %or135, %shr138, !dbg !20622
  br label %cond.end143, !dbg !20622

cond.false140:                                    ; preds = %cond.end114
  %129 = load i8*, i8** %misc, align 8, !dbg !20622
  %130 = bitcast i8* %129 to i32*, !dbg !20622
  %add.ptr141 = getelementptr i32, i32* %130, i64 1, !dbg !20622
  %131 = load i32, i32* %add.ptr141, align 4, !dbg !20622
  %call142 = call i32 @__fswab32(i32 %131) #10, !dbg !20622
  br label %cond.end143, !dbg !20622

cond.end143:                                      ; preds = %cond.false140, %cond.true124
  %cond144 = phi i32 [ %or139, %cond.true124 ], [ %call142, %cond.false140 ], !dbg !20622
  %and145 = and i32 %cond144, -65536, !dbg !20622
  %132 = load i32, i32* %_v, align 4, !dbg !20622
  %and146 = and i32 %132, 65535, !dbg !20622
  %shl147 = shl i32 %and146, 0, !dbg !20622
  %or148 = or i32 %and145, %shl147, !dbg !20622
  %and149 = and i32 %or148, -16777216, !dbg !20622
  %shr150 = lshr i32 %and149, 24, !dbg !20622
  %or151 = or i32 %or122, %shr150, !dbg !20622
  br label %cond.end180, !dbg !20622

cond.false152:                                    ; preds = %cond.end
  %133 = load i8*, i8** %misc, align 8, !dbg !20622
  %134 = bitcast i8* %133 to i32*, !dbg !20622
  %add.ptr153 = getelementptr i32, i32* %134, i64 1, !dbg !20622
  %135 = load i32, i32* %add.ptr153, align 4, !dbg !20622
  %136 = call i1 @llvm.is.constant.i32(i32 %135), !dbg !20622
  br i1 %136, label %cond.true154, label %cond.false170, !dbg !20622

cond.true154:                                     ; preds = %cond.false152
  %137 = load i8*, i8** %misc, align 8, !dbg !20622
  %138 = bitcast i8* %137 to i32*, !dbg !20622
  %add.ptr155 = getelementptr i32, i32* %138, i64 1, !dbg !20622
  %139 = load i32, i32* %add.ptr155, align 4, !dbg !20622
  %and156 = and i32 %139, 255, !dbg !20622
  %shl157 = shl i32 %and156, 24, !dbg !20622
  %140 = load i8*, i8** %misc, align 8, !dbg !20622
  %141 = bitcast i8* %140 to i32*, !dbg !20622
  %add.ptr158 = getelementptr i32, i32* %141, i64 1, !dbg !20622
  %142 = load i32, i32* %add.ptr158, align 4, !dbg !20622
  %and159 = and i32 %142, 65280, !dbg !20622
  %shl160 = shl i32 %and159, 8, !dbg !20622
  %or161 = or i32 %shl157, %shl160, !dbg !20622
  %143 = load i8*, i8** %misc, align 8, !dbg !20622
  %144 = bitcast i8* %143 to i32*, !dbg !20622
  %add.ptr162 = getelementptr i32, i32* %144, i64 1, !dbg !20622
  %145 = load i32, i32* %add.ptr162, align 4, !dbg !20622
  %and163 = and i32 %145, 16711680, !dbg !20622
  %shr164 = lshr i32 %and163, 8, !dbg !20622
  %or165 = or i32 %or161, %shr164, !dbg !20622
  %146 = load i8*, i8** %misc, align 8, !dbg !20622
  %147 = bitcast i8* %146 to i32*, !dbg !20622
  %add.ptr166 = getelementptr i32, i32* %147, i64 1, !dbg !20622
  %148 = load i32, i32* %add.ptr166, align 4, !dbg !20622
  %and167 = and i32 %148, -16777216, !dbg !20622
  %shr168 = lshr i32 %and167, 24, !dbg !20622
  %or169 = or i32 %or165, %shr168, !dbg !20622
  br label %cond.end173, !dbg !20622

cond.false170:                                    ; preds = %cond.false152
  %149 = load i8*, i8** %misc, align 8, !dbg !20622
  %150 = bitcast i8* %149 to i32*, !dbg !20622
  %add.ptr171 = getelementptr i32, i32* %150, i64 1, !dbg !20622
  %151 = load i32, i32* %add.ptr171, align 4, !dbg !20622
  %call172 = call i32 @__fswab32(i32 %151) #10, !dbg !20622
  br label %cond.end173, !dbg !20622

cond.end173:                                      ; preds = %cond.false170, %cond.true154
  %cond174 = phi i32 [ %or169, %cond.true154 ], [ %call172, %cond.false170 ], !dbg !20622
  %and175 = and i32 %cond174, -65536, !dbg !20622
  %152 = load i32, i32* %_v, align 4, !dbg !20622
  %and176 = and i32 %152, 65535, !dbg !20622
  %shl177 = shl i32 %and176, 0, !dbg !20622
  %or178 = or i32 %and175, %shl177, !dbg !20622
  %call179 = call i32 @__fswab32(i32 %or178) #10, !dbg !20622
  br label %cond.end180, !dbg !20622

cond.end180:                                      ; preds = %cond.end173, %cond.end143
  %cond181 = phi i32 [ %or151, %cond.end143 ], [ %call179, %cond.end173 ], !dbg !20622
  %153 = load i8*, i8** %misc, align 8, !dbg !20622
  %154 = bitcast i8* %153 to i32*, !dbg !20622
  %add.ptr182 = getelementptr i32, i32* %154, i64 1, !dbg !20622
  store i32 %cond181, i32* %add.ptr182, align 4, !dbg !20622
  br label %do.end183, !dbg !20622

do.end183:                                        ; preds = %cond.end180
  %155 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !20625
  %fdb_table184 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %155, i32 0, i32 2, !dbg !20626
  %156 = getelementptr inbounds %struct.mlx5_eswitch_fdb, %struct.mlx5_eswitch_fdb* %fdb_table184, i32 0, i32 0, !dbg !20627
  %offloads185 = bitcast %union.anon.154* %156 to %struct.offloads_fdb*, !dbg !20627
  %slow_fdb186 = getelementptr inbounds %struct.offloads_fdb, %struct.offloads_fdb* %offloads185, i32 0, i32 1, !dbg !20628
  %157 = load %struct.mlx5_flow_table*, %struct.mlx5_flow_table** %slow_fdb186, align 8, !dbg !20628
  %158 = load %struct.mlx5_flow_spec*, %struct.mlx5_flow_spec** %spec, align 8, !dbg !20629
  %call187 = call %struct.mlx5_flow_handle* @mlx5_add_flow_rules(%struct.mlx5_flow_table* %157, %struct.mlx5_flow_spec* %158, %struct.mlx5_flow_act* %flow_act, %struct.mlx5_flow_destination* %dest, i32 1) #8, !dbg !20630
  store %struct.mlx5_flow_handle* %call187, %struct.mlx5_flow_handle** %flow, align 8, !dbg !20631
  %159 = load %struct.mlx5_flow_handle*, %struct.mlx5_flow_handle** %flow, align 8, !dbg !20632
  %160 = bitcast %struct.mlx5_flow_handle* %159 to i8*, !dbg !20632
  %call188 = call zeroext i1 @IS_ERR(i8* %160) #8, !dbg !20634
  br i1 %call188, label %if.then189, label %if.end192, !dbg !20635

if.then189:                                       ; preds = %do.end183
  %161 = load %struct.mlx5_flow_handle*, %struct.mlx5_flow_handle** %flow, align 8, !dbg !20636
  %162 = bitcast %struct.mlx5_flow_handle* %161 to i8*, !dbg !20636
  %call190 = call i64 @PTR_ERR(i8* %162) #8, !dbg !20638
  %conv191 = trunc i64 %call190 to i32, !dbg !20638
  store i32 %conv191, i32* %err, align 4, !dbg !20639
  br label %add_ecpf_flow_err, !dbg !20640

if.end192:                                        ; preds = %do.end183
  %163 = load %struct.mlx5_flow_handle*, %struct.mlx5_flow_handle** %flow, align 8, !dbg !20641
  %164 = load %struct.mlx5_flow_handle**, %struct.mlx5_flow_handle*** %flows, align 8, !dbg !20642
  %165 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !20643
  %call193 = call i32 @mlx5_eswitch_ecpf_idx(%struct.mlx5_eswitch* %165) #8, !dbg !20644
  %idxprom = sext i32 %call193 to i64, !dbg !20642
  %arrayidx194 = getelementptr %struct.mlx5_flow_handle*, %struct.mlx5_flow_handle** %164, i64 %idxprom, !dbg !20642
  store %struct.mlx5_flow_handle* %163, %struct.mlx5_flow_handle** %arrayidx194, align 8, !dbg !20645
  br label %if.end195, !dbg !20646

if.end195:                                        ; preds = %if.end192, %if.end13
  store i32 1, i32* %i, align 4, !dbg !20647
  br label %for.cond, !dbg !20647

for.cond:                                         ; preds = %for.inc, %if.end195
  %166 = load i32, i32* %i, align 4, !dbg !20649
  %167 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !20649
  %dev196 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %167, i32 0, i32 0, !dbg !20649
  %168 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev196, align 8, !dbg !20649
  %call197 = call zeroext i16 @mlx5_core_max_vfs(%struct.mlx5_core_dev* %168) #8, !dbg !20649
  %conv198 = zext i16 %call197 to i32, !dbg !20649
  %cmp = icmp sle i32 %166, %conv198, !dbg !20649
  br i1 %cmp, label %for.body, label %for.end, !dbg !20647

for.body:                                         ; preds = %for.cond
  %169 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !20651
  %170 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %peer_dev.addr, align 8, !dbg !20653
  %priv200 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %170, i32 0, i32 17, !dbg !20654
  %eswitch201 = getelementptr inbounds %struct.mlx5_priv, %struct.mlx5_priv* %priv200, i32 0, i32 26, !dbg !20655
  %171 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %eswitch201, align 8, !dbg !20655
  %172 = load %struct.mlx5_flow_spec*, %struct.mlx5_flow_spec** %spec, align 8, !dbg !20656
  %173 = load i32, i32* %i, align 4, !dbg !20657
  %conv202 = trunc i32 %173 to i16, !dbg !20657
  call void @esw_set_peer_miss_rule_source_port(%struct.mlx5_eswitch* %169, %struct.mlx5_eswitch* %171, %struct.mlx5_flow_spec* %172, i16 zeroext %conv202) #8, !dbg !20658
  %174 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !20659
  %fdb_table203 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %174, i32 0, i32 2, !dbg !20660
  %175 = getelementptr inbounds %struct.mlx5_eswitch_fdb, %struct.mlx5_eswitch_fdb* %fdb_table203, i32 0, i32 0, !dbg !20661
  %offloads204 = bitcast %union.anon.154* %175 to %struct.offloads_fdb*, !dbg !20661
  %slow_fdb205 = getelementptr inbounds %struct.offloads_fdb, %struct.offloads_fdb* %offloads204, i32 0, i32 1, !dbg !20662
  %176 = load %struct.mlx5_flow_table*, %struct.mlx5_flow_table** %slow_fdb205, align 8, !dbg !20662
  %177 = load %struct.mlx5_flow_spec*, %struct.mlx5_flow_spec** %spec, align 8, !dbg !20663
  %call206 = call %struct.mlx5_flow_handle* @mlx5_add_flow_rules(%struct.mlx5_flow_table* %176, %struct.mlx5_flow_spec* %177, %struct.mlx5_flow_act* %flow_act, %struct.mlx5_flow_destination* %dest, i32 1) #8, !dbg !20664
  store %struct.mlx5_flow_handle* %call206, %struct.mlx5_flow_handle** %flow, align 8, !dbg !20665
  %178 = load %struct.mlx5_flow_handle*, %struct.mlx5_flow_handle** %flow, align 8, !dbg !20666
  %179 = bitcast %struct.mlx5_flow_handle* %178 to i8*, !dbg !20666
  %call207 = call zeroext i1 @IS_ERR(i8* %179) #8, !dbg !20668
  br i1 %call207, label %if.then208, label %if.end211, !dbg !20669

if.then208:                                       ; preds = %for.body
  %180 = load %struct.mlx5_flow_handle*, %struct.mlx5_flow_handle** %flow, align 8, !dbg !20670
  %181 = bitcast %struct.mlx5_flow_handle* %180 to i8*, !dbg !20670
  %call209 = call i64 @PTR_ERR(i8* %181) #8, !dbg !20672
  %conv210 = trunc i64 %call209 to i32, !dbg !20672
  store i32 %conv210, i32* %err, align 4, !dbg !20673
  br label %add_vf_flow_err, !dbg !20674

if.end211:                                        ; preds = %for.body
  %182 = load %struct.mlx5_flow_handle*, %struct.mlx5_flow_handle** %flow, align 8, !dbg !20675
  %183 = load %struct.mlx5_flow_handle**, %struct.mlx5_flow_handle*** %flows, align 8, !dbg !20676
  %184 = load i32, i32* %i, align 4, !dbg !20677
  %idxprom212 = sext i32 %184 to i64, !dbg !20676
  %arrayidx213 = getelementptr %struct.mlx5_flow_handle*, %struct.mlx5_flow_handle** %183, i64 %idxprom212, !dbg !20676
  store %struct.mlx5_flow_handle* %182, %struct.mlx5_flow_handle** %arrayidx213, align 8, !dbg !20678
  br label %for.inc, !dbg !20679

for.inc:                                          ; preds = %if.end211
  %185 = load i32, i32* %i, align 4, !dbg !20649
  %inc = add i32 %185, 1, !dbg !20649
  store i32 %inc, i32* %i, align 4, !dbg !20649
  br label %for.cond, !dbg !20649, !llvm.loop !20680

for.end:                                          ; preds = %for.cond
  %186 = load %struct.mlx5_flow_handle**, %struct.mlx5_flow_handle*** %flows, align 8, !dbg !20682
  %187 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !20683
  %fdb_table214 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %187, i32 0, i32 2, !dbg !20684
  %188 = getelementptr inbounds %struct.mlx5_eswitch_fdb, %struct.mlx5_eswitch_fdb* %fdb_table214, i32 0, i32 0, !dbg !20685
  %offloads215 = bitcast %union.anon.154* %188 to %struct.offloads_fdb*, !dbg !20685
  %peer_miss_rules = getelementptr inbounds %struct.offloads_fdb, %struct.offloads_fdb* %offloads215, i32 0, i32 4, !dbg !20686
  store %struct.mlx5_flow_handle** %186, %struct.mlx5_flow_handle*** %peer_miss_rules, align 8, !dbg !20687
  %189 = load %struct.mlx5_flow_spec*, %struct.mlx5_flow_spec** %spec, align 8, !dbg !20688
  %190 = bitcast %struct.mlx5_flow_spec* %189 to i8*, !dbg !20688
  call void @kvfree(i8* %190) #8, !dbg !20689
  store i32 0, i32* %retval, align 4, !dbg !20690
  br label %return, !dbg !20690

add_vf_flow_err:                                  ; preds = %if.then208
  call void @llvm.dbg.label(metadata !20691), !dbg !20692
  %191 = load i32, i32* %i, align 4, !dbg !20693
  %dec = add i32 %191, -1, !dbg !20693
  store i32 %dec, i32* %i, align 4, !dbg !20693
  store i32 %dec, i32* %nvports, align 4, !dbg !20694
  %192 = load i32, i32* %nvports, align 4, !dbg !20695
  store i32 %192, i32* %i, align 4, !dbg !20695
  br label %for.cond216, !dbg !20695

for.cond216:                                      ; preds = %for.inc222, %add_vf_flow_err
  %193 = load i32, i32* %i, align 4, !dbg !20697
  %cmp217 = icmp sge i32 %193, 1, !dbg !20697
  br i1 %cmp217, label %for.body219, label %for.end224, !dbg !20695

for.body219:                                      ; preds = %for.cond216
  %194 = load %struct.mlx5_flow_handle**, %struct.mlx5_flow_handle*** %flows, align 8, !dbg !20699
  %195 = load i32, i32* %i, align 4, !dbg !20700
  %idxprom220 = sext i32 %195 to i64, !dbg !20699
  %arrayidx221 = getelementptr %struct.mlx5_flow_handle*, %struct.mlx5_flow_handle** %194, i64 %idxprom220, !dbg !20699
  %196 = load %struct.mlx5_flow_handle*, %struct.mlx5_flow_handle** %arrayidx221, align 8, !dbg !20699
  call void @mlx5_del_flow_rules(%struct.mlx5_flow_handle* %196) #8, !dbg !20701
  br label %for.inc222, !dbg !20701

for.inc222:                                       ; preds = %for.body219
  %197 = load i32, i32* %i, align 4, !dbg !20697
  %dec223 = add i32 %197, -1, !dbg !20697
  store i32 %dec223, i32* %i, align 4, !dbg !20697
  br label %for.cond216, !dbg !20697, !llvm.loop !20702

for.end224:                                       ; preds = %for.cond216
  %198 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !20704
  %dev225 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %198, i32 0, i32 0, !dbg !20706
  %199 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev225, align 8, !dbg !20706
  %call226 = call zeroext i1 @mlx5_ecpf_vport_exists(%struct.mlx5_core_dev* %199) #8, !dbg !20707
  br i1 %call226, label %if.then227, label %if.end231, !dbg !20708

if.then227:                                       ; preds = %for.end224
  %200 = load %struct.mlx5_flow_handle**, %struct.mlx5_flow_handle*** %flows, align 8, !dbg !20709
  %201 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !20710
  %call228 = call i32 @mlx5_eswitch_ecpf_idx(%struct.mlx5_eswitch* %201) #8, !dbg !20711
  %idxprom229 = sext i32 %call228 to i64, !dbg !20709
  %arrayidx230 = getelementptr %struct.mlx5_flow_handle*, %struct.mlx5_flow_handle** %200, i64 %idxprom229, !dbg !20709
  %202 = load %struct.mlx5_flow_handle*, %struct.mlx5_flow_handle** %arrayidx230, align 8, !dbg !20709
  call void @mlx5_del_flow_rules(%struct.mlx5_flow_handle* %202) #8, !dbg !20712
  br label %if.end231, !dbg !20712

if.end231:                                        ; preds = %if.then227, %for.end224
  br label %add_ecpf_flow_err, !dbg !20713

add_ecpf_flow_err:                                ; preds = %if.end231, %if.then189
  call void @llvm.dbg.label(metadata !20714), !dbg !20715
  %203 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !20716
  %dev232 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %203, i32 0, i32 0, !dbg !20718
  %204 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev232, align 8, !dbg !20718
  %call233 = call zeroext i1 @mlx5_core_is_ecpf_esw_manager(%struct.mlx5_core_dev* %204) #8, !dbg !20719
  br i1 %call233, label %if.then234, label %if.end236, !dbg !20720

if.then234:                                       ; preds = %add_ecpf_flow_err
  %205 = load %struct.mlx5_flow_handle**, %struct.mlx5_flow_handle*** %flows, align 8, !dbg !20721
  %arrayidx235 = getelementptr %struct.mlx5_flow_handle*, %struct.mlx5_flow_handle** %205, i64 0, !dbg !20721
  %206 = load %struct.mlx5_flow_handle*, %struct.mlx5_flow_handle** %arrayidx235, align 8, !dbg !20721
  call void @mlx5_del_flow_rules(%struct.mlx5_flow_handle* %206) #8, !dbg !20722
  br label %if.end236, !dbg !20722

if.end236:                                        ; preds = %if.then234, %add_ecpf_flow_err
  br label %add_pf_flow_err, !dbg !20723

add_pf_flow_err:                                  ; preds = %if.end236, %if.then9
  call void @llvm.dbg.label(metadata !20724), !dbg !20725
  %207 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !20726
  %dev237 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %207, i32 0, i32 0, !dbg !20726
  %208 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev237, align 8, !dbg !20726
  %device = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %208, i32 0, i32 0, !dbg !20726
  %209 = load %struct.device*, %struct.device** %device, align 8, !dbg !20726
  %210 = load i32, i32* %err, align 4, !dbg !20726
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %209, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.20, i64 0, i64 0), i32 %210) #9, !dbg !20726
  %211 = load %struct.mlx5_flow_handle**, %struct.mlx5_flow_handle*** %flows, align 8, !dbg !20727
  %212 = bitcast %struct.mlx5_flow_handle** %211 to i8*, !dbg !20727
  call void @kvfree(i8* %212) #8, !dbg !20728
  br label %alloc_flows_err, !dbg !20728

alloc_flows_err:                                  ; preds = %add_pf_flow_err, %if.then3
  call void @llvm.dbg.label(metadata !20729), !dbg !20730
  %213 = load %struct.mlx5_flow_spec*, %struct.mlx5_flow_spec** %spec, align 8, !dbg !20731
  %214 = bitcast %struct.mlx5_flow_spec* %213 to i8*, !dbg !20731
  call void @kvfree(i8* %214) #8, !dbg !20732
  %215 = load i32, i32* %err, align 4, !dbg !20733
  store i32 %215, i32* %retval, align 4, !dbg !20734
  br label %return, !dbg !20734

return:                                           ; preds = %alloc_flows_err, %for.end, %if.then
  %216 = load i32, i32* %retval, align 4, !dbg !20735
  ret i32 %216, !dbg !20735
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @peer_miss_rules_setup(%struct.mlx5_eswitch* %esw, %struct.mlx5_core_dev* %peer_dev, %struct.mlx5_flow_spec* %spec, %struct.mlx5_flow_destination* %dest) #0 !dbg !20736 {
entry:
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  %peer_dev.addr = alloca %struct.mlx5_core_dev*, align 8
  %spec.addr = alloca %struct.mlx5_flow_spec*, align 8
  %dest.addr = alloca %struct.mlx5_flow_destination*, align 8
  %misc = alloca i8*, align 8
  %_v = alloca i32, align 4
  %_v166 = alloca i32, align 4
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !20739, metadata !DIExpression()), !dbg !20740
  store %struct.mlx5_core_dev* %peer_dev, %struct.mlx5_core_dev** %peer_dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_core_dev** %peer_dev.addr, metadata !20741, metadata !DIExpression()), !dbg !20742
  store %struct.mlx5_flow_spec* %spec, %struct.mlx5_flow_spec** %spec.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_flow_spec** %spec.addr, metadata !20743, metadata !DIExpression()), !dbg !20744
  store %struct.mlx5_flow_destination* %dest, %struct.mlx5_flow_destination** %dest.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_flow_destination** %dest.addr, metadata !20745, metadata !DIExpression()), !dbg !20746
  call void @llvm.dbg.declare(metadata i8** %misc, metadata !20747, metadata !DIExpression()), !dbg !20748
  %0 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !20749
  %call = call zeroext i1 @mlx5_eswitch_vport_match_metadata_enabled(%struct.mlx5_eswitch* %0) #8, !dbg !20751
  br i1 %call, label %if.then, label %if.else, !dbg !20752

if.then:                                          ; preds = %entry
  %1 = load %struct.mlx5_flow_spec*, %struct.mlx5_flow_spec** %spec.addr, align 8, !dbg !20753
  %match_criteria = getelementptr inbounds %struct.mlx5_flow_spec, %struct.mlx5_flow_spec* %1, i32 0, i32 1, !dbg !20753
  %arraydecay = getelementptr inbounds [128 x i32], [128 x i32]* %match_criteria, i64 0, i64 0, !dbg !20753
  %2 = bitcast i32* %arraydecay to i8*, !dbg !20753
  %add.ptr = getelementptr i8, i8* %2, i64 192, !dbg !20753
  store i8* %add.ptr, i8** %misc, align 8, !dbg !20755
  br label %do.body, !dbg !20756

do.body:                                          ; preds = %if.then
  call void @llvm.dbg.declare(metadata i32* %_v, metadata !20757, metadata !DIExpression()), !dbg !20759
  %call1 = call i32 @mlx5_eswitch_get_vport_metadata_mask() #8, !dbg !20759
  store i32 %call1, i32* %_v, align 4, !dbg !20759
  br label %do.body2, !dbg !20759

do.body2:                                         ; preds = %do.body
  br label %do.end, !dbg !20760

do.end:                                           ; preds = %do.body2
  %3 = load i8*, i8** %misc, align 8, !dbg !20759
  %4 = bitcast i8* %3 to i32*, !dbg !20759
  %add.ptr3 = getelementptr i32, i32* %4, i64 11, !dbg !20759
  %5 = load i32, i32* %add.ptr3, align 4, !dbg !20759
  %6 = call i1 @llvm.is.constant.i32(i32 %5), !dbg !20759
  br i1 %6, label %cond.true, label %cond.false, !dbg !20759

cond.true:                                        ; preds = %do.end
  %7 = load i8*, i8** %misc, align 8, !dbg !20759
  %8 = bitcast i8* %7 to i32*, !dbg !20759
  %add.ptr4 = getelementptr i32, i32* %8, i64 11, !dbg !20759
  %9 = load i32, i32* %add.ptr4, align 4, !dbg !20759
  %and = and i32 %9, 255, !dbg !20759
  %shl = shl i32 %and, 24, !dbg !20759
  %10 = load i8*, i8** %misc, align 8, !dbg !20759
  %11 = bitcast i8* %10 to i32*, !dbg !20759
  %add.ptr5 = getelementptr i32, i32* %11, i64 11, !dbg !20759
  %12 = load i32, i32* %add.ptr5, align 4, !dbg !20759
  %and6 = and i32 %12, 65280, !dbg !20759
  %shl7 = shl i32 %and6, 8, !dbg !20759
  %or = or i32 %shl, %shl7, !dbg !20759
  %13 = load i8*, i8** %misc, align 8, !dbg !20759
  %14 = bitcast i8* %13 to i32*, !dbg !20759
  %add.ptr8 = getelementptr i32, i32* %14, i64 11, !dbg !20759
  %15 = load i32, i32* %add.ptr8, align 4, !dbg !20759
  %and9 = and i32 %15, 16711680, !dbg !20759
  %shr = lshr i32 %and9, 8, !dbg !20759
  %or10 = or i32 %or, %shr, !dbg !20759
  %16 = load i8*, i8** %misc, align 8, !dbg !20759
  %17 = bitcast i8* %16 to i32*, !dbg !20759
  %add.ptr11 = getelementptr i32, i32* %17, i64 11, !dbg !20759
  %18 = load i32, i32* %add.ptr11, align 4, !dbg !20759
  %and12 = and i32 %18, -16777216, !dbg !20759
  %shr13 = lshr i32 %and12, 24, !dbg !20759
  %or14 = or i32 %or10, %shr13, !dbg !20759
  br label %cond.end, !dbg !20759

cond.false:                                       ; preds = %do.end
  %19 = load i8*, i8** %misc, align 8, !dbg !20759
  %20 = bitcast i8* %19 to i32*, !dbg !20759
  %add.ptr15 = getelementptr i32, i32* %20, i64 11, !dbg !20759
  %21 = load i32, i32* %add.ptr15, align 4, !dbg !20759
  %call16 = call i32 @__fswab32(i32 %21) #10, !dbg !20759
  br label %cond.end, !dbg !20759

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %or14, %cond.true ], [ %call16, %cond.false ], !dbg !20759
  %and17 = and i32 %cond, 0, !dbg !20759
  %22 = load i32, i32* %_v, align 4, !dbg !20759
  %shl18 = shl i32 %22, 0, !dbg !20759
  %or19 = or i32 %and17, %shl18, !dbg !20759
  %23 = call i1 @llvm.is.constant.i32(i32 %or19), !dbg !20759
  br i1 %23, label %cond.true20, label %cond.false132, !dbg !20759

cond.true20:                                      ; preds = %cond.end
  %24 = load i8*, i8** %misc, align 8, !dbg !20759
  %25 = bitcast i8* %24 to i32*, !dbg !20759
  %add.ptr21 = getelementptr i32, i32* %25, i64 11, !dbg !20759
  %26 = load i32, i32* %add.ptr21, align 4, !dbg !20759
  %27 = call i1 @llvm.is.constant.i32(i32 %26), !dbg !20759
  br i1 %27, label %cond.true22, label %cond.false38, !dbg !20759

cond.true22:                                      ; preds = %cond.true20
  %28 = load i8*, i8** %misc, align 8, !dbg !20759
  %29 = bitcast i8* %28 to i32*, !dbg !20759
  %add.ptr23 = getelementptr i32, i32* %29, i64 11, !dbg !20759
  %30 = load i32, i32* %add.ptr23, align 4, !dbg !20759
  %and24 = and i32 %30, 255, !dbg !20759
  %shl25 = shl i32 %and24, 24, !dbg !20759
  %31 = load i8*, i8** %misc, align 8, !dbg !20759
  %32 = bitcast i8* %31 to i32*, !dbg !20759
  %add.ptr26 = getelementptr i32, i32* %32, i64 11, !dbg !20759
  %33 = load i32, i32* %add.ptr26, align 4, !dbg !20759
  %and27 = and i32 %33, 65280, !dbg !20759
  %shl28 = shl i32 %and27, 8, !dbg !20759
  %or29 = or i32 %shl25, %shl28, !dbg !20759
  %34 = load i8*, i8** %misc, align 8, !dbg !20759
  %35 = bitcast i8* %34 to i32*, !dbg !20759
  %add.ptr30 = getelementptr i32, i32* %35, i64 11, !dbg !20759
  %36 = load i32, i32* %add.ptr30, align 4, !dbg !20759
  %and31 = and i32 %36, 16711680, !dbg !20759
  %shr32 = lshr i32 %and31, 8, !dbg !20759
  %or33 = or i32 %or29, %shr32, !dbg !20759
  %37 = load i8*, i8** %misc, align 8, !dbg !20759
  %38 = bitcast i8* %37 to i32*, !dbg !20759
  %add.ptr34 = getelementptr i32, i32* %38, i64 11, !dbg !20759
  %39 = load i32, i32* %add.ptr34, align 4, !dbg !20759
  %and35 = and i32 %39, -16777216, !dbg !20759
  %shr36 = lshr i32 %and35, 24, !dbg !20759
  %or37 = or i32 %or33, %shr36, !dbg !20759
  br label %cond.end41, !dbg !20759

cond.false38:                                     ; preds = %cond.true20
  %40 = load i8*, i8** %misc, align 8, !dbg !20759
  %41 = bitcast i8* %40 to i32*, !dbg !20759
  %add.ptr39 = getelementptr i32, i32* %41, i64 11, !dbg !20759
  %42 = load i32, i32* %add.ptr39, align 4, !dbg !20759
  %call40 = call i32 @__fswab32(i32 %42) #10, !dbg !20759
  br label %cond.end41, !dbg !20759

cond.end41:                                       ; preds = %cond.false38, %cond.true22
  %cond42 = phi i32 [ %or37, %cond.true22 ], [ %call40, %cond.false38 ], !dbg !20759
  %and43 = and i32 %cond42, 0, !dbg !20759
  %43 = load i32, i32* %_v, align 4, !dbg !20759
  %shl44 = shl i32 %43, 0, !dbg !20759
  %or45 = or i32 %and43, %shl44, !dbg !20759
  %and46 = and i32 %or45, 255, !dbg !20759
  %shl47 = shl i32 %and46, 24, !dbg !20759
  %44 = load i8*, i8** %misc, align 8, !dbg !20759
  %45 = bitcast i8* %44 to i32*, !dbg !20759
  %add.ptr48 = getelementptr i32, i32* %45, i64 11, !dbg !20759
  %46 = load i32, i32* %add.ptr48, align 4, !dbg !20759
  %47 = call i1 @llvm.is.constant.i32(i32 %46), !dbg !20759
  br i1 %47, label %cond.true49, label %cond.false65, !dbg !20759

cond.true49:                                      ; preds = %cond.end41
  %48 = load i8*, i8** %misc, align 8, !dbg !20759
  %49 = bitcast i8* %48 to i32*, !dbg !20759
  %add.ptr50 = getelementptr i32, i32* %49, i64 11, !dbg !20759
  %50 = load i32, i32* %add.ptr50, align 4, !dbg !20759
  %and51 = and i32 %50, 255, !dbg !20759
  %shl52 = shl i32 %and51, 24, !dbg !20759
  %51 = load i8*, i8** %misc, align 8, !dbg !20759
  %52 = bitcast i8* %51 to i32*, !dbg !20759
  %add.ptr53 = getelementptr i32, i32* %52, i64 11, !dbg !20759
  %53 = load i32, i32* %add.ptr53, align 4, !dbg !20759
  %and54 = and i32 %53, 65280, !dbg !20759
  %shl55 = shl i32 %and54, 8, !dbg !20759
  %or56 = or i32 %shl52, %shl55, !dbg !20759
  %54 = load i8*, i8** %misc, align 8, !dbg !20759
  %55 = bitcast i8* %54 to i32*, !dbg !20759
  %add.ptr57 = getelementptr i32, i32* %55, i64 11, !dbg !20759
  %56 = load i32, i32* %add.ptr57, align 4, !dbg !20759
  %and58 = and i32 %56, 16711680, !dbg !20759
  %shr59 = lshr i32 %and58, 8, !dbg !20759
  %or60 = or i32 %or56, %shr59, !dbg !20759
  %57 = load i8*, i8** %misc, align 8, !dbg !20759
  %58 = bitcast i8* %57 to i32*, !dbg !20759
  %add.ptr61 = getelementptr i32, i32* %58, i64 11, !dbg !20759
  %59 = load i32, i32* %add.ptr61, align 4, !dbg !20759
  %and62 = and i32 %59, -16777216, !dbg !20759
  %shr63 = lshr i32 %and62, 24, !dbg !20759
  %or64 = or i32 %or60, %shr63, !dbg !20759
  br label %cond.end68, !dbg !20759

cond.false65:                                     ; preds = %cond.end41
  %60 = load i8*, i8** %misc, align 8, !dbg !20759
  %61 = bitcast i8* %60 to i32*, !dbg !20759
  %add.ptr66 = getelementptr i32, i32* %61, i64 11, !dbg !20759
  %62 = load i32, i32* %add.ptr66, align 4, !dbg !20759
  %call67 = call i32 @__fswab32(i32 %62) #10, !dbg !20759
  br label %cond.end68, !dbg !20759

cond.end68:                                       ; preds = %cond.false65, %cond.true49
  %cond69 = phi i32 [ %or64, %cond.true49 ], [ %call67, %cond.false65 ], !dbg !20759
  %and70 = and i32 %cond69, 0, !dbg !20759
  %63 = load i32, i32* %_v, align 4, !dbg !20759
  %shl71 = shl i32 %63, 0, !dbg !20759
  %or72 = or i32 %and70, %shl71, !dbg !20759
  %and73 = and i32 %or72, 65280, !dbg !20759
  %shl74 = shl i32 %and73, 8, !dbg !20759
  %or75 = or i32 %shl47, %shl74, !dbg !20759
  %64 = load i8*, i8** %misc, align 8, !dbg !20759
  %65 = bitcast i8* %64 to i32*, !dbg !20759
  %add.ptr76 = getelementptr i32, i32* %65, i64 11, !dbg !20759
  %66 = load i32, i32* %add.ptr76, align 4, !dbg !20759
  %67 = call i1 @llvm.is.constant.i32(i32 %66), !dbg !20759
  br i1 %67, label %cond.true77, label %cond.false93, !dbg !20759

cond.true77:                                      ; preds = %cond.end68
  %68 = load i8*, i8** %misc, align 8, !dbg !20759
  %69 = bitcast i8* %68 to i32*, !dbg !20759
  %add.ptr78 = getelementptr i32, i32* %69, i64 11, !dbg !20759
  %70 = load i32, i32* %add.ptr78, align 4, !dbg !20759
  %and79 = and i32 %70, 255, !dbg !20759
  %shl80 = shl i32 %and79, 24, !dbg !20759
  %71 = load i8*, i8** %misc, align 8, !dbg !20759
  %72 = bitcast i8* %71 to i32*, !dbg !20759
  %add.ptr81 = getelementptr i32, i32* %72, i64 11, !dbg !20759
  %73 = load i32, i32* %add.ptr81, align 4, !dbg !20759
  %and82 = and i32 %73, 65280, !dbg !20759
  %shl83 = shl i32 %and82, 8, !dbg !20759
  %or84 = or i32 %shl80, %shl83, !dbg !20759
  %74 = load i8*, i8** %misc, align 8, !dbg !20759
  %75 = bitcast i8* %74 to i32*, !dbg !20759
  %add.ptr85 = getelementptr i32, i32* %75, i64 11, !dbg !20759
  %76 = load i32, i32* %add.ptr85, align 4, !dbg !20759
  %and86 = and i32 %76, 16711680, !dbg !20759
  %shr87 = lshr i32 %and86, 8, !dbg !20759
  %or88 = or i32 %or84, %shr87, !dbg !20759
  %77 = load i8*, i8** %misc, align 8, !dbg !20759
  %78 = bitcast i8* %77 to i32*, !dbg !20759
  %add.ptr89 = getelementptr i32, i32* %78, i64 11, !dbg !20759
  %79 = load i32, i32* %add.ptr89, align 4, !dbg !20759
  %and90 = and i32 %79, -16777216, !dbg !20759
  %shr91 = lshr i32 %and90, 24, !dbg !20759
  %or92 = or i32 %or88, %shr91, !dbg !20759
  br label %cond.end96, !dbg !20759

cond.false93:                                     ; preds = %cond.end68
  %80 = load i8*, i8** %misc, align 8, !dbg !20759
  %81 = bitcast i8* %80 to i32*, !dbg !20759
  %add.ptr94 = getelementptr i32, i32* %81, i64 11, !dbg !20759
  %82 = load i32, i32* %add.ptr94, align 4, !dbg !20759
  %call95 = call i32 @__fswab32(i32 %82) #10, !dbg !20759
  br label %cond.end96, !dbg !20759

cond.end96:                                       ; preds = %cond.false93, %cond.true77
  %cond97 = phi i32 [ %or92, %cond.true77 ], [ %call95, %cond.false93 ], !dbg !20759
  %and98 = and i32 %cond97, 0, !dbg !20759
  %83 = load i32, i32* %_v, align 4, !dbg !20759
  %shl99 = shl i32 %83, 0, !dbg !20759
  %or100 = or i32 %and98, %shl99, !dbg !20759
  %and101 = and i32 %or100, 16711680, !dbg !20759
  %shr102 = lshr i32 %and101, 8, !dbg !20759
  %or103 = or i32 %or75, %shr102, !dbg !20759
  %84 = load i8*, i8** %misc, align 8, !dbg !20759
  %85 = bitcast i8* %84 to i32*, !dbg !20759
  %add.ptr104 = getelementptr i32, i32* %85, i64 11, !dbg !20759
  %86 = load i32, i32* %add.ptr104, align 4, !dbg !20759
  %87 = call i1 @llvm.is.constant.i32(i32 %86), !dbg !20759
  br i1 %87, label %cond.true105, label %cond.false121, !dbg !20759

cond.true105:                                     ; preds = %cond.end96
  %88 = load i8*, i8** %misc, align 8, !dbg !20759
  %89 = bitcast i8* %88 to i32*, !dbg !20759
  %add.ptr106 = getelementptr i32, i32* %89, i64 11, !dbg !20759
  %90 = load i32, i32* %add.ptr106, align 4, !dbg !20759
  %and107 = and i32 %90, 255, !dbg !20759
  %shl108 = shl i32 %and107, 24, !dbg !20759
  %91 = load i8*, i8** %misc, align 8, !dbg !20759
  %92 = bitcast i8* %91 to i32*, !dbg !20759
  %add.ptr109 = getelementptr i32, i32* %92, i64 11, !dbg !20759
  %93 = load i32, i32* %add.ptr109, align 4, !dbg !20759
  %and110 = and i32 %93, 65280, !dbg !20759
  %shl111 = shl i32 %and110, 8, !dbg !20759
  %or112 = or i32 %shl108, %shl111, !dbg !20759
  %94 = load i8*, i8** %misc, align 8, !dbg !20759
  %95 = bitcast i8* %94 to i32*, !dbg !20759
  %add.ptr113 = getelementptr i32, i32* %95, i64 11, !dbg !20759
  %96 = load i32, i32* %add.ptr113, align 4, !dbg !20759
  %and114 = and i32 %96, 16711680, !dbg !20759
  %shr115 = lshr i32 %and114, 8, !dbg !20759
  %or116 = or i32 %or112, %shr115, !dbg !20759
  %97 = load i8*, i8** %misc, align 8, !dbg !20759
  %98 = bitcast i8* %97 to i32*, !dbg !20759
  %add.ptr117 = getelementptr i32, i32* %98, i64 11, !dbg !20759
  %99 = load i32, i32* %add.ptr117, align 4, !dbg !20759
  %and118 = and i32 %99, -16777216, !dbg !20759
  %shr119 = lshr i32 %and118, 24, !dbg !20759
  %or120 = or i32 %or116, %shr119, !dbg !20759
  br label %cond.end124, !dbg !20759

cond.false121:                                    ; preds = %cond.end96
  %100 = load i8*, i8** %misc, align 8, !dbg !20759
  %101 = bitcast i8* %100 to i32*, !dbg !20759
  %add.ptr122 = getelementptr i32, i32* %101, i64 11, !dbg !20759
  %102 = load i32, i32* %add.ptr122, align 4, !dbg !20759
  %call123 = call i32 @__fswab32(i32 %102) #10, !dbg !20759
  br label %cond.end124, !dbg !20759

cond.end124:                                      ; preds = %cond.false121, %cond.true105
  %cond125 = phi i32 [ %or120, %cond.true105 ], [ %call123, %cond.false121 ], !dbg !20759
  %and126 = and i32 %cond125, 0, !dbg !20759
  %103 = load i32, i32* %_v, align 4, !dbg !20759
  %shl127 = shl i32 %103, 0, !dbg !20759
  %or128 = or i32 %and126, %shl127, !dbg !20759
  %and129 = and i32 %or128, -16777216, !dbg !20759
  %shr130 = lshr i32 %and129, 24, !dbg !20759
  %or131 = or i32 %or103, %shr130, !dbg !20759
  br label %cond.end159, !dbg !20759

cond.false132:                                    ; preds = %cond.end
  %104 = load i8*, i8** %misc, align 8, !dbg !20759
  %105 = bitcast i8* %104 to i32*, !dbg !20759
  %add.ptr133 = getelementptr i32, i32* %105, i64 11, !dbg !20759
  %106 = load i32, i32* %add.ptr133, align 4, !dbg !20759
  %107 = call i1 @llvm.is.constant.i32(i32 %106), !dbg !20759
  br i1 %107, label %cond.true134, label %cond.false150, !dbg !20759

cond.true134:                                     ; preds = %cond.false132
  %108 = load i8*, i8** %misc, align 8, !dbg !20759
  %109 = bitcast i8* %108 to i32*, !dbg !20759
  %add.ptr135 = getelementptr i32, i32* %109, i64 11, !dbg !20759
  %110 = load i32, i32* %add.ptr135, align 4, !dbg !20759
  %and136 = and i32 %110, 255, !dbg !20759
  %shl137 = shl i32 %and136, 24, !dbg !20759
  %111 = load i8*, i8** %misc, align 8, !dbg !20759
  %112 = bitcast i8* %111 to i32*, !dbg !20759
  %add.ptr138 = getelementptr i32, i32* %112, i64 11, !dbg !20759
  %113 = load i32, i32* %add.ptr138, align 4, !dbg !20759
  %and139 = and i32 %113, 65280, !dbg !20759
  %shl140 = shl i32 %and139, 8, !dbg !20759
  %or141 = or i32 %shl137, %shl140, !dbg !20759
  %114 = load i8*, i8** %misc, align 8, !dbg !20759
  %115 = bitcast i8* %114 to i32*, !dbg !20759
  %add.ptr142 = getelementptr i32, i32* %115, i64 11, !dbg !20759
  %116 = load i32, i32* %add.ptr142, align 4, !dbg !20759
  %and143 = and i32 %116, 16711680, !dbg !20759
  %shr144 = lshr i32 %and143, 8, !dbg !20759
  %or145 = or i32 %or141, %shr144, !dbg !20759
  %117 = load i8*, i8** %misc, align 8, !dbg !20759
  %118 = bitcast i8* %117 to i32*, !dbg !20759
  %add.ptr146 = getelementptr i32, i32* %118, i64 11, !dbg !20759
  %119 = load i32, i32* %add.ptr146, align 4, !dbg !20759
  %and147 = and i32 %119, -16777216, !dbg !20759
  %shr148 = lshr i32 %and147, 24, !dbg !20759
  %or149 = or i32 %or145, %shr148, !dbg !20759
  br label %cond.end153, !dbg !20759

cond.false150:                                    ; preds = %cond.false132
  %120 = load i8*, i8** %misc, align 8, !dbg !20759
  %121 = bitcast i8* %120 to i32*, !dbg !20759
  %add.ptr151 = getelementptr i32, i32* %121, i64 11, !dbg !20759
  %122 = load i32, i32* %add.ptr151, align 4, !dbg !20759
  %call152 = call i32 @__fswab32(i32 %122) #10, !dbg !20759
  br label %cond.end153, !dbg !20759

cond.end153:                                      ; preds = %cond.false150, %cond.true134
  %cond154 = phi i32 [ %or149, %cond.true134 ], [ %call152, %cond.false150 ], !dbg !20759
  %and155 = and i32 %cond154, 0, !dbg !20759
  %123 = load i32, i32* %_v, align 4, !dbg !20759
  %shl156 = shl i32 %123, 0, !dbg !20759
  %or157 = or i32 %and155, %shl156, !dbg !20759
  %call158 = call i32 @__fswab32(i32 %or157) #10, !dbg !20759
  br label %cond.end159, !dbg !20759

cond.end159:                                      ; preds = %cond.end153, %cond.end124
  %cond160 = phi i32 [ %or131, %cond.end124 ], [ %call158, %cond.end153 ], !dbg !20759
  %124 = load i8*, i8** %misc, align 8, !dbg !20759
  %125 = bitcast i8* %124 to i32*, !dbg !20759
  %add.ptr161 = getelementptr i32, i32* %125, i64 11, !dbg !20759
  store i32 %cond160, i32* %add.ptr161, align 4, !dbg !20759
  br label %do.end162, !dbg !20759

do.end162:                                        ; preds = %cond.end159
  %126 = load %struct.mlx5_flow_spec*, %struct.mlx5_flow_spec** %spec.addr, align 8, !dbg !20762
  %match_criteria_enable = getelementptr inbounds %struct.mlx5_flow_spec, %struct.mlx5_flow_spec* %126, i32 0, i32 0, !dbg !20763
  store i8 8, i8* %match_criteria_enable, align 4, !dbg !20764
  br label %if.end, !dbg !20765

if.else:                                          ; preds = %entry
  %127 = load %struct.mlx5_flow_spec*, %struct.mlx5_flow_spec** %spec.addr, align 8, !dbg !20766
  %match_value = getelementptr inbounds %struct.mlx5_flow_spec, %struct.mlx5_flow_spec* %127, i32 0, i32 2, !dbg !20766
  %arraydecay163 = getelementptr inbounds [128 x i32], [128 x i32]* %match_value, i64 0, i64 0, !dbg !20766
  %128 = bitcast i32* %arraydecay163 to i8*, !dbg !20766
  %add.ptr164 = getelementptr i8, i8* %128, i64 64, !dbg !20766
  store i8* %add.ptr164, i8** %misc, align 8, !dbg !20768
  br label %do.body165, !dbg !20769

do.body165:                                       ; preds = %if.else
  call void @llvm.dbg.declare(metadata i32* %_v166, metadata !20770, metadata !DIExpression()), !dbg !20772
  %129 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %peer_dev.addr, align 8, !dbg !20772
  %caps = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %129, i32 0, i32 9, !dbg !20772
  %hca_cur = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps, i32 0, i32 0, !dbg !20772
  %arrayidx = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur, i64 0, i64 0, !dbg !20772
  %arraydecay167 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx, i64 0, i64 0, !dbg !20772
  %add.ptr168 = getelementptr i32, i32* %arraydecay167, i64 1, !dbg !20772
  %130 = load i32, i32* %add.ptr168, align 4, !dbg !20772
  %131 = call i1 @llvm.is.constant.i32(i32 %130), !dbg !20772
  br i1 %131, label %cond.true169, label %cond.false201, !dbg !20772

cond.true169:                                     ; preds = %do.body165
  %132 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %peer_dev.addr, align 8, !dbg !20772
  %caps170 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %132, i32 0, i32 9, !dbg !20772
  %hca_cur171 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps170, i32 0, i32 0, !dbg !20772
  %arrayidx172 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur171, i64 0, i64 0, !dbg !20772
  %arraydecay173 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx172, i64 0, i64 0, !dbg !20772
  %add.ptr174 = getelementptr i32, i32* %arraydecay173, i64 1, !dbg !20772
  %133 = load i32, i32* %add.ptr174, align 4, !dbg !20772
  %and175 = and i32 %133, 255, !dbg !20772
  %shl176 = shl i32 %and175, 24, !dbg !20772
  %134 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %peer_dev.addr, align 8, !dbg !20772
  %caps177 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %134, i32 0, i32 9, !dbg !20772
  %hca_cur178 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps177, i32 0, i32 0, !dbg !20772
  %arrayidx179 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur178, i64 0, i64 0, !dbg !20772
  %arraydecay180 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx179, i64 0, i64 0, !dbg !20772
  %add.ptr181 = getelementptr i32, i32* %arraydecay180, i64 1, !dbg !20772
  %135 = load i32, i32* %add.ptr181, align 4, !dbg !20772
  %and182 = and i32 %135, 65280, !dbg !20772
  %shl183 = shl i32 %and182, 8, !dbg !20772
  %or184 = or i32 %shl176, %shl183, !dbg !20772
  %136 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %peer_dev.addr, align 8, !dbg !20772
  %caps185 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %136, i32 0, i32 9, !dbg !20772
  %hca_cur186 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps185, i32 0, i32 0, !dbg !20772
  %arrayidx187 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur186, i64 0, i64 0, !dbg !20772
  %arraydecay188 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx187, i64 0, i64 0, !dbg !20772
  %add.ptr189 = getelementptr i32, i32* %arraydecay188, i64 1, !dbg !20772
  %137 = load i32, i32* %add.ptr189, align 4, !dbg !20772
  %and190 = and i32 %137, 16711680, !dbg !20772
  %shr191 = lshr i32 %and190, 8, !dbg !20772
  %or192 = or i32 %or184, %shr191, !dbg !20772
  %138 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %peer_dev.addr, align 8, !dbg !20772
  %caps193 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %138, i32 0, i32 9, !dbg !20772
  %hca_cur194 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps193, i32 0, i32 0, !dbg !20772
  %arrayidx195 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur194, i64 0, i64 0, !dbg !20772
  %arraydecay196 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx195, i64 0, i64 0, !dbg !20772
  %add.ptr197 = getelementptr i32, i32* %arraydecay196, i64 1, !dbg !20772
  %139 = load i32, i32* %add.ptr197, align 4, !dbg !20772
  %and198 = and i32 %139, -16777216, !dbg !20772
  %shr199 = lshr i32 %and198, 24, !dbg !20772
  %or200 = or i32 %or192, %shr199, !dbg !20772
  br label %cond.end208, !dbg !20772

cond.false201:                                    ; preds = %do.body165
  %140 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %peer_dev.addr, align 8, !dbg !20772
  %caps202 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %140, i32 0, i32 9, !dbg !20772
  %hca_cur203 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps202, i32 0, i32 0, !dbg !20772
  %arrayidx204 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur203, i64 0, i64 0, !dbg !20772
  %arraydecay205 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx204, i64 0, i64 0, !dbg !20772
  %add.ptr206 = getelementptr i32, i32* %arraydecay205, i64 1, !dbg !20772
  %141 = load i32, i32* %add.ptr206, align 4, !dbg !20772
  %call207 = call i32 @__fswab32(i32 %141) #10, !dbg !20772
  br label %cond.end208, !dbg !20772

cond.end208:                                      ; preds = %cond.false201, %cond.true169
  %cond209 = phi i32 [ %or200, %cond.true169 ], [ %call207, %cond.false201 ], !dbg !20772
  %shr210 = lshr i32 %cond209, 0, !dbg !20772
  %and211 = and i32 %shr210, 65535, !dbg !20772
  store i32 %and211, i32* %_v166, align 4, !dbg !20772
  br label %do.body212, !dbg !20772

do.body212:                                       ; preds = %cond.end208
  br label %do.end213, !dbg !20773

do.end213:                                        ; preds = %do.body212
  %142 = load i8*, i8** %misc, align 8, !dbg !20772
  %143 = bitcast i8* %142 to i32*, !dbg !20772
  %add.ptr214 = getelementptr i32, i32* %143, i64 1, !dbg !20772
  %144 = load i32, i32* %add.ptr214, align 4, !dbg !20772
  %145 = call i1 @llvm.is.constant.i32(i32 %144), !dbg !20772
  br i1 %145, label %cond.true215, label %cond.false231, !dbg !20772

cond.true215:                                     ; preds = %do.end213
  %146 = load i8*, i8** %misc, align 8, !dbg !20772
  %147 = bitcast i8* %146 to i32*, !dbg !20772
  %add.ptr216 = getelementptr i32, i32* %147, i64 1, !dbg !20772
  %148 = load i32, i32* %add.ptr216, align 4, !dbg !20772
  %and217 = and i32 %148, 255, !dbg !20772
  %shl218 = shl i32 %and217, 24, !dbg !20772
  %149 = load i8*, i8** %misc, align 8, !dbg !20772
  %150 = bitcast i8* %149 to i32*, !dbg !20772
  %add.ptr219 = getelementptr i32, i32* %150, i64 1, !dbg !20772
  %151 = load i32, i32* %add.ptr219, align 4, !dbg !20772
  %and220 = and i32 %151, 65280, !dbg !20772
  %shl221 = shl i32 %and220, 8, !dbg !20772
  %or222 = or i32 %shl218, %shl221, !dbg !20772
  %152 = load i8*, i8** %misc, align 8, !dbg !20772
  %153 = bitcast i8* %152 to i32*, !dbg !20772
  %add.ptr223 = getelementptr i32, i32* %153, i64 1, !dbg !20772
  %154 = load i32, i32* %add.ptr223, align 4, !dbg !20772
  %and224 = and i32 %154, 16711680, !dbg !20772
  %shr225 = lshr i32 %and224, 8, !dbg !20772
  %or226 = or i32 %or222, %shr225, !dbg !20772
  %155 = load i8*, i8** %misc, align 8, !dbg !20772
  %156 = bitcast i8* %155 to i32*, !dbg !20772
  %add.ptr227 = getelementptr i32, i32* %156, i64 1, !dbg !20772
  %157 = load i32, i32* %add.ptr227, align 4, !dbg !20772
  %and228 = and i32 %157, -16777216, !dbg !20772
  %shr229 = lshr i32 %and228, 24, !dbg !20772
  %or230 = or i32 %or226, %shr229, !dbg !20772
  br label %cond.end234, !dbg !20772

cond.false231:                                    ; preds = %do.end213
  %158 = load i8*, i8** %misc, align 8, !dbg !20772
  %159 = bitcast i8* %158 to i32*, !dbg !20772
  %add.ptr232 = getelementptr i32, i32* %159, i64 1, !dbg !20772
  %160 = load i32, i32* %add.ptr232, align 4, !dbg !20772
  %call233 = call i32 @__fswab32(i32 %160) #10, !dbg !20772
  br label %cond.end234, !dbg !20772

cond.end234:                                      ; preds = %cond.false231, %cond.true215
  %cond235 = phi i32 [ %or230, %cond.true215 ], [ %call233, %cond.false231 ], !dbg !20772
  %and236 = and i32 %cond235, 65535, !dbg !20772
  %161 = load i32, i32* %_v166, align 4, !dbg !20772
  %and237 = and i32 %161, 65535, !dbg !20772
  %shl238 = shl i32 %and237, 16, !dbg !20772
  %or239 = or i32 %and236, %shl238, !dbg !20772
  %162 = call i1 @llvm.is.constant.i32(i32 %or239), !dbg !20772
  br i1 %162, label %cond.true240, label %cond.false356, !dbg !20772

cond.true240:                                     ; preds = %cond.end234
  %163 = load i8*, i8** %misc, align 8, !dbg !20772
  %164 = bitcast i8* %163 to i32*, !dbg !20772
  %add.ptr241 = getelementptr i32, i32* %164, i64 1, !dbg !20772
  %165 = load i32, i32* %add.ptr241, align 4, !dbg !20772
  %166 = call i1 @llvm.is.constant.i32(i32 %165), !dbg !20772
  br i1 %166, label %cond.true242, label %cond.false258, !dbg !20772

cond.true242:                                     ; preds = %cond.true240
  %167 = load i8*, i8** %misc, align 8, !dbg !20772
  %168 = bitcast i8* %167 to i32*, !dbg !20772
  %add.ptr243 = getelementptr i32, i32* %168, i64 1, !dbg !20772
  %169 = load i32, i32* %add.ptr243, align 4, !dbg !20772
  %and244 = and i32 %169, 255, !dbg !20772
  %shl245 = shl i32 %and244, 24, !dbg !20772
  %170 = load i8*, i8** %misc, align 8, !dbg !20772
  %171 = bitcast i8* %170 to i32*, !dbg !20772
  %add.ptr246 = getelementptr i32, i32* %171, i64 1, !dbg !20772
  %172 = load i32, i32* %add.ptr246, align 4, !dbg !20772
  %and247 = and i32 %172, 65280, !dbg !20772
  %shl248 = shl i32 %and247, 8, !dbg !20772
  %or249 = or i32 %shl245, %shl248, !dbg !20772
  %173 = load i8*, i8** %misc, align 8, !dbg !20772
  %174 = bitcast i8* %173 to i32*, !dbg !20772
  %add.ptr250 = getelementptr i32, i32* %174, i64 1, !dbg !20772
  %175 = load i32, i32* %add.ptr250, align 4, !dbg !20772
  %and251 = and i32 %175, 16711680, !dbg !20772
  %shr252 = lshr i32 %and251, 8, !dbg !20772
  %or253 = or i32 %or249, %shr252, !dbg !20772
  %176 = load i8*, i8** %misc, align 8, !dbg !20772
  %177 = bitcast i8* %176 to i32*, !dbg !20772
  %add.ptr254 = getelementptr i32, i32* %177, i64 1, !dbg !20772
  %178 = load i32, i32* %add.ptr254, align 4, !dbg !20772
  %and255 = and i32 %178, -16777216, !dbg !20772
  %shr256 = lshr i32 %and255, 24, !dbg !20772
  %or257 = or i32 %or253, %shr256, !dbg !20772
  br label %cond.end261, !dbg !20772

cond.false258:                                    ; preds = %cond.true240
  %179 = load i8*, i8** %misc, align 8, !dbg !20772
  %180 = bitcast i8* %179 to i32*, !dbg !20772
  %add.ptr259 = getelementptr i32, i32* %180, i64 1, !dbg !20772
  %181 = load i32, i32* %add.ptr259, align 4, !dbg !20772
  %call260 = call i32 @__fswab32(i32 %181) #10, !dbg !20772
  br label %cond.end261, !dbg !20772

cond.end261:                                      ; preds = %cond.false258, %cond.true242
  %cond262 = phi i32 [ %or257, %cond.true242 ], [ %call260, %cond.false258 ], !dbg !20772
  %and263 = and i32 %cond262, 65535, !dbg !20772
  %182 = load i32, i32* %_v166, align 4, !dbg !20772
  %and264 = and i32 %182, 65535, !dbg !20772
  %shl265 = shl i32 %and264, 16, !dbg !20772
  %or266 = or i32 %and263, %shl265, !dbg !20772
  %and267 = and i32 %or266, 255, !dbg !20772
  %shl268 = shl i32 %and267, 24, !dbg !20772
  %183 = load i8*, i8** %misc, align 8, !dbg !20772
  %184 = bitcast i8* %183 to i32*, !dbg !20772
  %add.ptr269 = getelementptr i32, i32* %184, i64 1, !dbg !20772
  %185 = load i32, i32* %add.ptr269, align 4, !dbg !20772
  %186 = call i1 @llvm.is.constant.i32(i32 %185), !dbg !20772
  br i1 %186, label %cond.true270, label %cond.false286, !dbg !20772

cond.true270:                                     ; preds = %cond.end261
  %187 = load i8*, i8** %misc, align 8, !dbg !20772
  %188 = bitcast i8* %187 to i32*, !dbg !20772
  %add.ptr271 = getelementptr i32, i32* %188, i64 1, !dbg !20772
  %189 = load i32, i32* %add.ptr271, align 4, !dbg !20772
  %and272 = and i32 %189, 255, !dbg !20772
  %shl273 = shl i32 %and272, 24, !dbg !20772
  %190 = load i8*, i8** %misc, align 8, !dbg !20772
  %191 = bitcast i8* %190 to i32*, !dbg !20772
  %add.ptr274 = getelementptr i32, i32* %191, i64 1, !dbg !20772
  %192 = load i32, i32* %add.ptr274, align 4, !dbg !20772
  %and275 = and i32 %192, 65280, !dbg !20772
  %shl276 = shl i32 %and275, 8, !dbg !20772
  %or277 = or i32 %shl273, %shl276, !dbg !20772
  %193 = load i8*, i8** %misc, align 8, !dbg !20772
  %194 = bitcast i8* %193 to i32*, !dbg !20772
  %add.ptr278 = getelementptr i32, i32* %194, i64 1, !dbg !20772
  %195 = load i32, i32* %add.ptr278, align 4, !dbg !20772
  %and279 = and i32 %195, 16711680, !dbg !20772
  %shr280 = lshr i32 %and279, 8, !dbg !20772
  %or281 = or i32 %or277, %shr280, !dbg !20772
  %196 = load i8*, i8** %misc, align 8, !dbg !20772
  %197 = bitcast i8* %196 to i32*, !dbg !20772
  %add.ptr282 = getelementptr i32, i32* %197, i64 1, !dbg !20772
  %198 = load i32, i32* %add.ptr282, align 4, !dbg !20772
  %and283 = and i32 %198, -16777216, !dbg !20772
  %shr284 = lshr i32 %and283, 24, !dbg !20772
  %or285 = or i32 %or281, %shr284, !dbg !20772
  br label %cond.end289, !dbg !20772

cond.false286:                                    ; preds = %cond.end261
  %199 = load i8*, i8** %misc, align 8, !dbg !20772
  %200 = bitcast i8* %199 to i32*, !dbg !20772
  %add.ptr287 = getelementptr i32, i32* %200, i64 1, !dbg !20772
  %201 = load i32, i32* %add.ptr287, align 4, !dbg !20772
  %call288 = call i32 @__fswab32(i32 %201) #10, !dbg !20772
  br label %cond.end289, !dbg !20772

cond.end289:                                      ; preds = %cond.false286, %cond.true270
  %cond290 = phi i32 [ %or285, %cond.true270 ], [ %call288, %cond.false286 ], !dbg !20772
  %and291 = and i32 %cond290, 65535, !dbg !20772
  %202 = load i32, i32* %_v166, align 4, !dbg !20772
  %and292 = and i32 %202, 65535, !dbg !20772
  %shl293 = shl i32 %and292, 16, !dbg !20772
  %or294 = or i32 %and291, %shl293, !dbg !20772
  %and295 = and i32 %or294, 65280, !dbg !20772
  %shl296 = shl i32 %and295, 8, !dbg !20772
  %or297 = or i32 %shl268, %shl296, !dbg !20772
  %203 = load i8*, i8** %misc, align 8, !dbg !20772
  %204 = bitcast i8* %203 to i32*, !dbg !20772
  %add.ptr298 = getelementptr i32, i32* %204, i64 1, !dbg !20772
  %205 = load i32, i32* %add.ptr298, align 4, !dbg !20772
  %206 = call i1 @llvm.is.constant.i32(i32 %205), !dbg !20772
  br i1 %206, label %cond.true299, label %cond.false315, !dbg !20772

cond.true299:                                     ; preds = %cond.end289
  %207 = load i8*, i8** %misc, align 8, !dbg !20772
  %208 = bitcast i8* %207 to i32*, !dbg !20772
  %add.ptr300 = getelementptr i32, i32* %208, i64 1, !dbg !20772
  %209 = load i32, i32* %add.ptr300, align 4, !dbg !20772
  %and301 = and i32 %209, 255, !dbg !20772
  %shl302 = shl i32 %and301, 24, !dbg !20772
  %210 = load i8*, i8** %misc, align 8, !dbg !20772
  %211 = bitcast i8* %210 to i32*, !dbg !20772
  %add.ptr303 = getelementptr i32, i32* %211, i64 1, !dbg !20772
  %212 = load i32, i32* %add.ptr303, align 4, !dbg !20772
  %and304 = and i32 %212, 65280, !dbg !20772
  %shl305 = shl i32 %and304, 8, !dbg !20772
  %or306 = or i32 %shl302, %shl305, !dbg !20772
  %213 = load i8*, i8** %misc, align 8, !dbg !20772
  %214 = bitcast i8* %213 to i32*, !dbg !20772
  %add.ptr307 = getelementptr i32, i32* %214, i64 1, !dbg !20772
  %215 = load i32, i32* %add.ptr307, align 4, !dbg !20772
  %and308 = and i32 %215, 16711680, !dbg !20772
  %shr309 = lshr i32 %and308, 8, !dbg !20772
  %or310 = or i32 %or306, %shr309, !dbg !20772
  %216 = load i8*, i8** %misc, align 8, !dbg !20772
  %217 = bitcast i8* %216 to i32*, !dbg !20772
  %add.ptr311 = getelementptr i32, i32* %217, i64 1, !dbg !20772
  %218 = load i32, i32* %add.ptr311, align 4, !dbg !20772
  %and312 = and i32 %218, -16777216, !dbg !20772
  %shr313 = lshr i32 %and312, 24, !dbg !20772
  %or314 = or i32 %or310, %shr313, !dbg !20772
  br label %cond.end318, !dbg !20772

cond.false315:                                    ; preds = %cond.end289
  %219 = load i8*, i8** %misc, align 8, !dbg !20772
  %220 = bitcast i8* %219 to i32*, !dbg !20772
  %add.ptr316 = getelementptr i32, i32* %220, i64 1, !dbg !20772
  %221 = load i32, i32* %add.ptr316, align 4, !dbg !20772
  %call317 = call i32 @__fswab32(i32 %221) #10, !dbg !20772
  br label %cond.end318, !dbg !20772

cond.end318:                                      ; preds = %cond.false315, %cond.true299
  %cond319 = phi i32 [ %or314, %cond.true299 ], [ %call317, %cond.false315 ], !dbg !20772
  %and320 = and i32 %cond319, 65535, !dbg !20772
  %222 = load i32, i32* %_v166, align 4, !dbg !20772
  %and321 = and i32 %222, 65535, !dbg !20772
  %shl322 = shl i32 %and321, 16, !dbg !20772
  %or323 = or i32 %and320, %shl322, !dbg !20772
  %and324 = and i32 %or323, 16711680, !dbg !20772
  %shr325 = lshr i32 %and324, 8, !dbg !20772
  %or326 = or i32 %or297, %shr325, !dbg !20772
  %223 = load i8*, i8** %misc, align 8, !dbg !20772
  %224 = bitcast i8* %223 to i32*, !dbg !20772
  %add.ptr327 = getelementptr i32, i32* %224, i64 1, !dbg !20772
  %225 = load i32, i32* %add.ptr327, align 4, !dbg !20772
  %226 = call i1 @llvm.is.constant.i32(i32 %225), !dbg !20772
  br i1 %226, label %cond.true328, label %cond.false344, !dbg !20772

cond.true328:                                     ; preds = %cond.end318
  %227 = load i8*, i8** %misc, align 8, !dbg !20772
  %228 = bitcast i8* %227 to i32*, !dbg !20772
  %add.ptr329 = getelementptr i32, i32* %228, i64 1, !dbg !20772
  %229 = load i32, i32* %add.ptr329, align 4, !dbg !20772
  %and330 = and i32 %229, 255, !dbg !20772
  %shl331 = shl i32 %and330, 24, !dbg !20772
  %230 = load i8*, i8** %misc, align 8, !dbg !20772
  %231 = bitcast i8* %230 to i32*, !dbg !20772
  %add.ptr332 = getelementptr i32, i32* %231, i64 1, !dbg !20772
  %232 = load i32, i32* %add.ptr332, align 4, !dbg !20772
  %and333 = and i32 %232, 65280, !dbg !20772
  %shl334 = shl i32 %and333, 8, !dbg !20772
  %or335 = or i32 %shl331, %shl334, !dbg !20772
  %233 = load i8*, i8** %misc, align 8, !dbg !20772
  %234 = bitcast i8* %233 to i32*, !dbg !20772
  %add.ptr336 = getelementptr i32, i32* %234, i64 1, !dbg !20772
  %235 = load i32, i32* %add.ptr336, align 4, !dbg !20772
  %and337 = and i32 %235, 16711680, !dbg !20772
  %shr338 = lshr i32 %and337, 8, !dbg !20772
  %or339 = or i32 %or335, %shr338, !dbg !20772
  %236 = load i8*, i8** %misc, align 8, !dbg !20772
  %237 = bitcast i8* %236 to i32*, !dbg !20772
  %add.ptr340 = getelementptr i32, i32* %237, i64 1, !dbg !20772
  %238 = load i32, i32* %add.ptr340, align 4, !dbg !20772
  %and341 = and i32 %238, -16777216, !dbg !20772
  %shr342 = lshr i32 %and341, 24, !dbg !20772
  %or343 = or i32 %or339, %shr342, !dbg !20772
  br label %cond.end347, !dbg !20772

cond.false344:                                    ; preds = %cond.end318
  %239 = load i8*, i8** %misc, align 8, !dbg !20772
  %240 = bitcast i8* %239 to i32*, !dbg !20772
  %add.ptr345 = getelementptr i32, i32* %240, i64 1, !dbg !20772
  %241 = load i32, i32* %add.ptr345, align 4, !dbg !20772
  %call346 = call i32 @__fswab32(i32 %241) #10, !dbg !20772
  br label %cond.end347, !dbg !20772

cond.end347:                                      ; preds = %cond.false344, %cond.true328
  %cond348 = phi i32 [ %or343, %cond.true328 ], [ %call346, %cond.false344 ], !dbg !20772
  %and349 = and i32 %cond348, 65535, !dbg !20772
  %242 = load i32, i32* %_v166, align 4, !dbg !20772
  %and350 = and i32 %242, 65535, !dbg !20772
  %shl351 = shl i32 %and350, 16, !dbg !20772
  %or352 = or i32 %and349, %shl351, !dbg !20772
  %and353 = and i32 %or352, -16777216, !dbg !20772
  %shr354 = lshr i32 %and353, 24, !dbg !20772
  %or355 = or i32 %or326, %shr354, !dbg !20772
  br label %cond.end384, !dbg !20772

cond.false356:                                    ; preds = %cond.end234
  %243 = load i8*, i8** %misc, align 8, !dbg !20772
  %244 = bitcast i8* %243 to i32*, !dbg !20772
  %add.ptr357 = getelementptr i32, i32* %244, i64 1, !dbg !20772
  %245 = load i32, i32* %add.ptr357, align 4, !dbg !20772
  %246 = call i1 @llvm.is.constant.i32(i32 %245), !dbg !20772
  br i1 %246, label %cond.true358, label %cond.false374, !dbg !20772

cond.true358:                                     ; preds = %cond.false356
  %247 = load i8*, i8** %misc, align 8, !dbg !20772
  %248 = bitcast i8* %247 to i32*, !dbg !20772
  %add.ptr359 = getelementptr i32, i32* %248, i64 1, !dbg !20772
  %249 = load i32, i32* %add.ptr359, align 4, !dbg !20772
  %and360 = and i32 %249, 255, !dbg !20772
  %shl361 = shl i32 %and360, 24, !dbg !20772
  %250 = load i8*, i8** %misc, align 8, !dbg !20772
  %251 = bitcast i8* %250 to i32*, !dbg !20772
  %add.ptr362 = getelementptr i32, i32* %251, i64 1, !dbg !20772
  %252 = load i32, i32* %add.ptr362, align 4, !dbg !20772
  %and363 = and i32 %252, 65280, !dbg !20772
  %shl364 = shl i32 %and363, 8, !dbg !20772
  %or365 = or i32 %shl361, %shl364, !dbg !20772
  %253 = load i8*, i8** %misc, align 8, !dbg !20772
  %254 = bitcast i8* %253 to i32*, !dbg !20772
  %add.ptr366 = getelementptr i32, i32* %254, i64 1, !dbg !20772
  %255 = load i32, i32* %add.ptr366, align 4, !dbg !20772
  %and367 = and i32 %255, 16711680, !dbg !20772
  %shr368 = lshr i32 %and367, 8, !dbg !20772
  %or369 = or i32 %or365, %shr368, !dbg !20772
  %256 = load i8*, i8** %misc, align 8, !dbg !20772
  %257 = bitcast i8* %256 to i32*, !dbg !20772
  %add.ptr370 = getelementptr i32, i32* %257, i64 1, !dbg !20772
  %258 = load i32, i32* %add.ptr370, align 4, !dbg !20772
  %and371 = and i32 %258, -16777216, !dbg !20772
  %shr372 = lshr i32 %and371, 24, !dbg !20772
  %or373 = or i32 %or369, %shr372, !dbg !20772
  br label %cond.end377, !dbg !20772

cond.false374:                                    ; preds = %cond.false356
  %259 = load i8*, i8** %misc, align 8, !dbg !20772
  %260 = bitcast i8* %259 to i32*, !dbg !20772
  %add.ptr375 = getelementptr i32, i32* %260, i64 1, !dbg !20772
  %261 = load i32, i32* %add.ptr375, align 4, !dbg !20772
  %call376 = call i32 @__fswab32(i32 %261) #10, !dbg !20772
  br label %cond.end377, !dbg !20772

cond.end377:                                      ; preds = %cond.false374, %cond.true358
  %cond378 = phi i32 [ %or373, %cond.true358 ], [ %call376, %cond.false374 ], !dbg !20772
  %and379 = and i32 %cond378, 65535, !dbg !20772
  %262 = load i32, i32* %_v166, align 4, !dbg !20772
  %and380 = and i32 %262, 65535, !dbg !20772
  %shl381 = shl i32 %and380, 16, !dbg !20772
  %or382 = or i32 %and379, %shl381, !dbg !20772
  %call383 = call i32 @__fswab32(i32 %or382) #10, !dbg !20772
  br label %cond.end384, !dbg !20772

cond.end384:                                      ; preds = %cond.end377, %cond.end347
  %cond385 = phi i32 [ %or355, %cond.end347 ], [ %call383, %cond.end377 ], !dbg !20772
  %263 = load i8*, i8** %misc, align 8, !dbg !20772
  %264 = bitcast i8* %263 to i32*, !dbg !20772
  %add.ptr386 = getelementptr i32, i32* %264, i64 1, !dbg !20772
  store i32 %cond385, i32* %add.ptr386, align 4, !dbg !20772
  br label %do.end387, !dbg !20772

do.end387:                                        ; preds = %cond.end384
  %265 = load %struct.mlx5_flow_spec*, %struct.mlx5_flow_spec** %spec.addr, align 8, !dbg !20775
  %match_criteria_enable388 = getelementptr inbounds %struct.mlx5_flow_spec, %struct.mlx5_flow_spec* %265, i32 0, i32 0, !dbg !20776
  store i8 2, i8* %match_criteria_enable388, align 4, !dbg !20777
  %266 = load %struct.mlx5_flow_spec*, %struct.mlx5_flow_spec** %spec.addr, align 8, !dbg !20778
  %match_criteria389 = getelementptr inbounds %struct.mlx5_flow_spec, %struct.mlx5_flow_spec* %266, i32 0, i32 1, !dbg !20778
  %arraydecay390 = getelementptr inbounds [128 x i32], [128 x i32]* %match_criteria389, i64 0, i64 0, !dbg !20778
  %267 = bitcast i32* %arraydecay390 to i8*, !dbg !20778
  %add.ptr391 = getelementptr i8, i8* %267, i64 64, !dbg !20778
  store i8* %add.ptr391, i8** %misc, align 8, !dbg !20779
  br label %do.body392, !dbg !20780

do.body392:                                       ; preds = %do.end387
  br label %do.body393, !dbg !20781

do.body393:                                       ; preds = %do.body392
  br label %do.end394, !dbg !20783

do.end394:                                        ; preds = %do.body393
  %268 = load i8*, i8** %misc, align 8, !dbg !20781
  %269 = bitcast i8* %268 to i32*, !dbg !20781
  %add.ptr395 = getelementptr i32, i32* %269, i64 1, !dbg !20781
  %270 = load i32, i32* %add.ptr395, align 4, !dbg !20781
  %271 = call i1 @llvm.is.constant.i32(i32 %270), !dbg !20781
  br i1 %271, label %cond.true396, label %cond.false412, !dbg !20781

cond.true396:                                     ; preds = %do.end394
  %272 = load i8*, i8** %misc, align 8, !dbg !20781
  %273 = bitcast i8* %272 to i32*, !dbg !20781
  %add.ptr397 = getelementptr i32, i32* %273, i64 1, !dbg !20781
  %274 = load i32, i32* %add.ptr397, align 4, !dbg !20781
  %and398 = and i32 %274, 255, !dbg !20781
  %shl399 = shl i32 %and398, 24, !dbg !20781
  %275 = load i8*, i8** %misc, align 8, !dbg !20781
  %276 = bitcast i8* %275 to i32*, !dbg !20781
  %add.ptr400 = getelementptr i32, i32* %276, i64 1, !dbg !20781
  %277 = load i32, i32* %add.ptr400, align 4, !dbg !20781
  %and401 = and i32 %277, 65280, !dbg !20781
  %shl402 = shl i32 %and401, 8, !dbg !20781
  %or403 = or i32 %shl399, %shl402, !dbg !20781
  %278 = load i8*, i8** %misc, align 8, !dbg !20781
  %279 = bitcast i8* %278 to i32*, !dbg !20781
  %add.ptr404 = getelementptr i32, i32* %279, i64 1, !dbg !20781
  %280 = load i32, i32* %add.ptr404, align 4, !dbg !20781
  %and405 = and i32 %280, 16711680, !dbg !20781
  %shr406 = lshr i32 %and405, 8, !dbg !20781
  %or407 = or i32 %or403, %shr406, !dbg !20781
  %281 = load i8*, i8** %misc, align 8, !dbg !20781
  %282 = bitcast i8* %281 to i32*, !dbg !20781
  %add.ptr408 = getelementptr i32, i32* %282, i64 1, !dbg !20781
  %283 = load i32, i32* %add.ptr408, align 4, !dbg !20781
  %and409 = and i32 %283, -16777216, !dbg !20781
  %shr410 = lshr i32 %and409, 24, !dbg !20781
  %or411 = or i32 %or407, %shr410, !dbg !20781
  br label %cond.end415, !dbg !20781

cond.false412:                                    ; preds = %do.end394
  %284 = load i8*, i8** %misc, align 8, !dbg !20781
  %285 = bitcast i8* %284 to i32*, !dbg !20781
  %add.ptr413 = getelementptr i32, i32* %285, i64 1, !dbg !20781
  %286 = load i32, i32* %add.ptr413, align 4, !dbg !20781
  %call414 = call i32 @__fswab32(i32 %286) #10, !dbg !20781
  br label %cond.end415, !dbg !20781

cond.end415:                                      ; preds = %cond.false412, %cond.true396
  %cond416 = phi i32 [ %or411, %cond.true396 ], [ %call414, %cond.false412 ], !dbg !20781
  %and417 = and i32 %cond416, -65536, !dbg !20781
  %or418 = or i32 %and417, 65535, !dbg !20781
  %287 = call i1 @llvm.is.constant.i32(i32 %or418), !dbg !20781
  br i1 %287, label %cond.true419, label %cond.false527, !dbg !20781

cond.true419:                                     ; preds = %cond.end415
  %288 = load i8*, i8** %misc, align 8, !dbg !20781
  %289 = bitcast i8* %288 to i32*, !dbg !20781
  %add.ptr420 = getelementptr i32, i32* %289, i64 1, !dbg !20781
  %290 = load i32, i32* %add.ptr420, align 4, !dbg !20781
  %291 = call i1 @llvm.is.constant.i32(i32 %290), !dbg !20781
  br i1 %291, label %cond.true421, label %cond.false437, !dbg !20781

cond.true421:                                     ; preds = %cond.true419
  %292 = load i8*, i8** %misc, align 8, !dbg !20781
  %293 = bitcast i8* %292 to i32*, !dbg !20781
  %add.ptr422 = getelementptr i32, i32* %293, i64 1, !dbg !20781
  %294 = load i32, i32* %add.ptr422, align 4, !dbg !20781
  %and423 = and i32 %294, 255, !dbg !20781
  %shl424 = shl i32 %and423, 24, !dbg !20781
  %295 = load i8*, i8** %misc, align 8, !dbg !20781
  %296 = bitcast i8* %295 to i32*, !dbg !20781
  %add.ptr425 = getelementptr i32, i32* %296, i64 1, !dbg !20781
  %297 = load i32, i32* %add.ptr425, align 4, !dbg !20781
  %and426 = and i32 %297, 65280, !dbg !20781
  %shl427 = shl i32 %and426, 8, !dbg !20781
  %or428 = or i32 %shl424, %shl427, !dbg !20781
  %298 = load i8*, i8** %misc, align 8, !dbg !20781
  %299 = bitcast i8* %298 to i32*, !dbg !20781
  %add.ptr429 = getelementptr i32, i32* %299, i64 1, !dbg !20781
  %300 = load i32, i32* %add.ptr429, align 4, !dbg !20781
  %and430 = and i32 %300, 16711680, !dbg !20781
  %shr431 = lshr i32 %and430, 8, !dbg !20781
  %or432 = or i32 %or428, %shr431, !dbg !20781
  %301 = load i8*, i8** %misc, align 8, !dbg !20781
  %302 = bitcast i8* %301 to i32*, !dbg !20781
  %add.ptr433 = getelementptr i32, i32* %302, i64 1, !dbg !20781
  %303 = load i32, i32* %add.ptr433, align 4, !dbg !20781
  %and434 = and i32 %303, -16777216, !dbg !20781
  %shr435 = lshr i32 %and434, 24, !dbg !20781
  %or436 = or i32 %or432, %shr435, !dbg !20781
  br label %cond.end440, !dbg !20781

cond.false437:                                    ; preds = %cond.true419
  %304 = load i8*, i8** %misc, align 8, !dbg !20781
  %305 = bitcast i8* %304 to i32*, !dbg !20781
  %add.ptr438 = getelementptr i32, i32* %305, i64 1, !dbg !20781
  %306 = load i32, i32* %add.ptr438, align 4, !dbg !20781
  %call439 = call i32 @__fswab32(i32 %306) #10, !dbg !20781
  br label %cond.end440, !dbg !20781

cond.end440:                                      ; preds = %cond.false437, %cond.true421
  %cond441 = phi i32 [ %or436, %cond.true421 ], [ %call439, %cond.false437 ], !dbg !20781
  %and442 = and i32 %cond441, -65536, !dbg !20781
  %or443 = or i32 %and442, 65535, !dbg !20781
  %and444 = and i32 %or443, 255, !dbg !20781
  %shl445 = shl i32 %and444, 24, !dbg !20781
  %307 = load i8*, i8** %misc, align 8, !dbg !20781
  %308 = bitcast i8* %307 to i32*, !dbg !20781
  %add.ptr446 = getelementptr i32, i32* %308, i64 1, !dbg !20781
  %309 = load i32, i32* %add.ptr446, align 4, !dbg !20781
  %310 = call i1 @llvm.is.constant.i32(i32 %309), !dbg !20781
  br i1 %310, label %cond.true447, label %cond.false463, !dbg !20781

cond.true447:                                     ; preds = %cond.end440
  %311 = load i8*, i8** %misc, align 8, !dbg !20781
  %312 = bitcast i8* %311 to i32*, !dbg !20781
  %add.ptr448 = getelementptr i32, i32* %312, i64 1, !dbg !20781
  %313 = load i32, i32* %add.ptr448, align 4, !dbg !20781
  %and449 = and i32 %313, 255, !dbg !20781
  %shl450 = shl i32 %and449, 24, !dbg !20781
  %314 = load i8*, i8** %misc, align 8, !dbg !20781
  %315 = bitcast i8* %314 to i32*, !dbg !20781
  %add.ptr451 = getelementptr i32, i32* %315, i64 1, !dbg !20781
  %316 = load i32, i32* %add.ptr451, align 4, !dbg !20781
  %and452 = and i32 %316, 65280, !dbg !20781
  %shl453 = shl i32 %and452, 8, !dbg !20781
  %or454 = or i32 %shl450, %shl453, !dbg !20781
  %317 = load i8*, i8** %misc, align 8, !dbg !20781
  %318 = bitcast i8* %317 to i32*, !dbg !20781
  %add.ptr455 = getelementptr i32, i32* %318, i64 1, !dbg !20781
  %319 = load i32, i32* %add.ptr455, align 4, !dbg !20781
  %and456 = and i32 %319, 16711680, !dbg !20781
  %shr457 = lshr i32 %and456, 8, !dbg !20781
  %or458 = or i32 %or454, %shr457, !dbg !20781
  %320 = load i8*, i8** %misc, align 8, !dbg !20781
  %321 = bitcast i8* %320 to i32*, !dbg !20781
  %add.ptr459 = getelementptr i32, i32* %321, i64 1, !dbg !20781
  %322 = load i32, i32* %add.ptr459, align 4, !dbg !20781
  %and460 = and i32 %322, -16777216, !dbg !20781
  %shr461 = lshr i32 %and460, 24, !dbg !20781
  %or462 = or i32 %or458, %shr461, !dbg !20781
  br label %cond.end466, !dbg !20781

cond.false463:                                    ; preds = %cond.end440
  %323 = load i8*, i8** %misc, align 8, !dbg !20781
  %324 = bitcast i8* %323 to i32*, !dbg !20781
  %add.ptr464 = getelementptr i32, i32* %324, i64 1, !dbg !20781
  %325 = load i32, i32* %add.ptr464, align 4, !dbg !20781
  %call465 = call i32 @__fswab32(i32 %325) #10, !dbg !20781
  br label %cond.end466, !dbg !20781

cond.end466:                                      ; preds = %cond.false463, %cond.true447
  %cond467 = phi i32 [ %or462, %cond.true447 ], [ %call465, %cond.false463 ], !dbg !20781
  %and468 = and i32 %cond467, -65536, !dbg !20781
  %or469 = or i32 %and468, 65535, !dbg !20781
  %and470 = and i32 %or469, 65280, !dbg !20781
  %shl471 = shl i32 %and470, 8, !dbg !20781
  %or472 = or i32 %shl445, %shl471, !dbg !20781
  %326 = load i8*, i8** %misc, align 8, !dbg !20781
  %327 = bitcast i8* %326 to i32*, !dbg !20781
  %add.ptr473 = getelementptr i32, i32* %327, i64 1, !dbg !20781
  %328 = load i32, i32* %add.ptr473, align 4, !dbg !20781
  %329 = call i1 @llvm.is.constant.i32(i32 %328), !dbg !20781
  br i1 %329, label %cond.true474, label %cond.false490, !dbg !20781

cond.true474:                                     ; preds = %cond.end466
  %330 = load i8*, i8** %misc, align 8, !dbg !20781
  %331 = bitcast i8* %330 to i32*, !dbg !20781
  %add.ptr475 = getelementptr i32, i32* %331, i64 1, !dbg !20781
  %332 = load i32, i32* %add.ptr475, align 4, !dbg !20781
  %and476 = and i32 %332, 255, !dbg !20781
  %shl477 = shl i32 %and476, 24, !dbg !20781
  %333 = load i8*, i8** %misc, align 8, !dbg !20781
  %334 = bitcast i8* %333 to i32*, !dbg !20781
  %add.ptr478 = getelementptr i32, i32* %334, i64 1, !dbg !20781
  %335 = load i32, i32* %add.ptr478, align 4, !dbg !20781
  %and479 = and i32 %335, 65280, !dbg !20781
  %shl480 = shl i32 %and479, 8, !dbg !20781
  %or481 = or i32 %shl477, %shl480, !dbg !20781
  %336 = load i8*, i8** %misc, align 8, !dbg !20781
  %337 = bitcast i8* %336 to i32*, !dbg !20781
  %add.ptr482 = getelementptr i32, i32* %337, i64 1, !dbg !20781
  %338 = load i32, i32* %add.ptr482, align 4, !dbg !20781
  %and483 = and i32 %338, 16711680, !dbg !20781
  %shr484 = lshr i32 %and483, 8, !dbg !20781
  %or485 = or i32 %or481, %shr484, !dbg !20781
  %339 = load i8*, i8** %misc, align 8, !dbg !20781
  %340 = bitcast i8* %339 to i32*, !dbg !20781
  %add.ptr486 = getelementptr i32, i32* %340, i64 1, !dbg !20781
  %341 = load i32, i32* %add.ptr486, align 4, !dbg !20781
  %and487 = and i32 %341, -16777216, !dbg !20781
  %shr488 = lshr i32 %and487, 24, !dbg !20781
  %or489 = or i32 %or485, %shr488, !dbg !20781
  br label %cond.end493, !dbg !20781

cond.false490:                                    ; preds = %cond.end466
  %342 = load i8*, i8** %misc, align 8, !dbg !20781
  %343 = bitcast i8* %342 to i32*, !dbg !20781
  %add.ptr491 = getelementptr i32, i32* %343, i64 1, !dbg !20781
  %344 = load i32, i32* %add.ptr491, align 4, !dbg !20781
  %call492 = call i32 @__fswab32(i32 %344) #10, !dbg !20781
  br label %cond.end493, !dbg !20781

cond.end493:                                      ; preds = %cond.false490, %cond.true474
  %cond494 = phi i32 [ %or489, %cond.true474 ], [ %call492, %cond.false490 ], !dbg !20781
  %and495 = and i32 %cond494, -65536, !dbg !20781
  %or496 = or i32 %and495, 65535, !dbg !20781
  %and497 = and i32 %or496, 16711680, !dbg !20781
  %shr498 = lshr i32 %and497, 8, !dbg !20781
  %or499 = or i32 %or472, %shr498, !dbg !20781
  %345 = load i8*, i8** %misc, align 8, !dbg !20781
  %346 = bitcast i8* %345 to i32*, !dbg !20781
  %add.ptr500 = getelementptr i32, i32* %346, i64 1, !dbg !20781
  %347 = load i32, i32* %add.ptr500, align 4, !dbg !20781
  %348 = call i1 @llvm.is.constant.i32(i32 %347), !dbg !20781
  br i1 %348, label %cond.true501, label %cond.false517, !dbg !20781

cond.true501:                                     ; preds = %cond.end493
  %349 = load i8*, i8** %misc, align 8, !dbg !20781
  %350 = bitcast i8* %349 to i32*, !dbg !20781
  %add.ptr502 = getelementptr i32, i32* %350, i64 1, !dbg !20781
  %351 = load i32, i32* %add.ptr502, align 4, !dbg !20781
  %and503 = and i32 %351, 255, !dbg !20781
  %shl504 = shl i32 %and503, 24, !dbg !20781
  %352 = load i8*, i8** %misc, align 8, !dbg !20781
  %353 = bitcast i8* %352 to i32*, !dbg !20781
  %add.ptr505 = getelementptr i32, i32* %353, i64 1, !dbg !20781
  %354 = load i32, i32* %add.ptr505, align 4, !dbg !20781
  %and506 = and i32 %354, 65280, !dbg !20781
  %shl507 = shl i32 %and506, 8, !dbg !20781
  %or508 = or i32 %shl504, %shl507, !dbg !20781
  %355 = load i8*, i8** %misc, align 8, !dbg !20781
  %356 = bitcast i8* %355 to i32*, !dbg !20781
  %add.ptr509 = getelementptr i32, i32* %356, i64 1, !dbg !20781
  %357 = load i32, i32* %add.ptr509, align 4, !dbg !20781
  %and510 = and i32 %357, 16711680, !dbg !20781
  %shr511 = lshr i32 %and510, 8, !dbg !20781
  %or512 = or i32 %or508, %shr511, !dbg !20781
  %358 = load i8*, i8** %misc, align 8, !dbg !20781
  %359 = bitcast i8* %358 to i32*, !dbg !20781
  %add.ptr513 = getelementptr i32, i32* %359, i64 1, !dbg !20781
  %360 = load i32, i32* %add.ptr513, align 4, !dbg !20781
  %and514 = and i32 %360, -16777216, !dbg !20781
  %shr515 = lshr i32 %and514, 24, !dbg !20781
  %or516 = or i32 %or512, %shr515, !dbg !20781
  br label %cond.end520, !dbg !20781

cond.false517:                                    ; preds = %cond.end493
  %361 = load i8*, i8** %misc, align 8, !dbg !20781
  %362 = bitcast i8* %361 to i32*, !dbg !20781
  %add.ptr518 = getelementptr i32, i32* %362, i64 1, !dbg !20781
  %363 = load i32, i32* %add.ptr518, align 4, !dbg !20781
  %call519 = call i32 @__fswab32(i32 %363) #10, !dbg !20781
  br label %cond.end520, !dbg !20781

cond.end520:                                      ; preds = %cond.false517, %cond.true501
  %cond521 = phi i32 [ %or516, %cond.true501 ], [ %call519, %cond.false517 ], !dbg !20781
  %and522 = and i32 %cond521, -65536, !dbg !20781
  %or523 = or i32 %and522, 65535, !dbg !20781
  %and524 = and i32 %or523, -16777216, !dbg !20781
  %shr525 = lshr i32 %and524, 24, !dbg !20781
  %or526 = or i32 %or499, %shr525, !dbg !20781
  br label %cond.end553, !dbg !20781

cond.false527:                                    ; preds = %cond.end415
  %364 = load i8*, i8** %misc, align 8, !dbg !20781
  %365 = bitcast i8* %364 to i32*, !dbg !20781
  %add.ptr528 = getelementptr i32, i32* %365, i64 1, !dbg !20781
  %366 = load i32, i32* %add.ptr528, align 4, !dbg !20781
  %367 = call i1 @llvm.is.constant.i32(i32 %366), !dbg !20781
  br i1 %367, label %cond.true529, label %cond.false545, !dbg !20781

cond.true529:                                     ; preds = %cond.false527
  %368 = load i8*, i8** %misc, align 8, !dbg !20781
  %369 = bitcast i8* %368 to i32*, !dbg !20781
  %add.ptr530 = getelementptr i32, i32* %369, i64 1, !dbg !20781
  %370 = load i32, i32* %add.ptr530, align 4, !dbg !20781
  %and531 = and i32 %370, 255, !dbg !20781
  %shl532 = shl i32 %and531, 24, !dbg !20781
  %371 = load i8*, i8** %misc, align 8, !dbg !20781
  %372 = bitcast i8* %371 to i32*, !dbg !20781
  %add.ptr533 = getelementptr i32, i32* %372, i64 1, !dbg !20781
  %373 = load i32, i32* %add.ptr533, align 4, !dbg !20781
  %and534 = and i32 %373, 65280, !dbg !20781
  %shl535 = shl i32 %and534, 8, !dbg !20781
  %or536 = or i32 %shl532, %shl535, !dbg !20781
  %374 = load i8*, i8** %misc, align 8, !dbg !20781
  %375 = bitcast i8* %374 to i32*, !dbg !20781
  %add.ptr537 = getelementptr i32, i32* %375, i64 1, !dbg !20781
  %376 = load i32, i32* %add.ptr537, align 4, !dbg !20781
  %and538 = and i32 %376, 16711680, !dbg !20781
  %shr539 = lshr i32 %and538, 8, !dbg !20781
  %or540 = or i32 %or536, %shr539, !dbg !20781
  %377 = load i8*, i8** %misc, align 8, !dbg !20781
  %378 = bitcast i8* %377 to i32*, !dbg !20781
  %add.ptr541 = getelementptr i32, i32* %378, i64 1, !dbg !20781
  %379 = load i32, i32* %add.ptr541, align 4, !dbg !20781
  %and542 = and i32 %379, -16777216, !dbg !20781
  %shr543 = lshr i32 %and542, 24, !dbg !20781
  %or544 = or i32 %or540, %shr543, !dbg !20781
  br label %cond.end548, !dbg !20781

cond.false545:                                    ; preds = %cond.false527
  %380 = load i8*, i8** %misc, align 8, !dbg !20781
  %381 = bitcast i8* %380 to i32*, !dbg !20781
  %add.ptr546 = getelementptr i32, i32* %381, i64 1, !dbg !20781
  %382 = load i32, i32* %add.ptr546, align 4, !dbg !20781
  %call547 = call i32 @__fswab32(i32 %382) #10, !dbg !20781
  br label %cond.end548, !dbg !20781

cond.end548:                                      ; preds = %cond.false545, %cond.true529
  %cond549 = phi i32 [ %or544, %cond.true529 ], [ %call547, %cond.false545 ], !dbg !20781
  %and550 = and i32 %cond549, -65536, !dbg !20781
  %or551 = or i32 %and550, 65535, !dbg !20781
  %call552 = call i32 @__fswab32(i32 %or551) #10, !dbg !20781
  br label %cond.end553, !dbg !20781

cond.end553:                                      ; preds = %cond.end548, %cond.end520
  %cond554 = phi i32 [ %or526, %cond.end520 ], [ %call552, %cond.end548 ], !dbg !20781
  %383 = load i8*, i8** %misc, align 8, !dbg !20781
  %384 = bitcast i8* %383 to i32*, !dbg !20781
  %add.ptr555 = getelementptr i32, i32* %384, i64 1, !dbg !20781
  store i32 %cond554, i32* %add.ptr555, align 4, !dbg !20781
  br label %do.end556, !dbg !20781

do.end556:                                        ; preds = %cond.end553
  br label %do.body557, !dbg !20785

do.body557:                                       ; preds = %do.end556
  br label %do.body558, !dbg !20786

do.body558:                                       ; preds = %do.body557
  br label %do.end559, !dbg !20788

do.end559:                                        ; preds = %do.body558
  %385 = load i8*, i8** %misc, align 8, !dbg !20786
  %386 = bitcast i8* %385 to i32*, !dbg !20786
  %add.ptr560 = getelementptr i32, i32* %386, i64 1, !dbg !20786
  %387 = load i32, i32* %add.ptr560, align 4, !dbg !20786
  %388 = call i1 @llvm.is.constant.i32(i32 %387), !dbg !20786
  br i1 %388, label %cond.true561, label %cond.false577, !dbg !20786

cond.true561:                                     ; preds = %do.end559
  %389 = load i8*, i8** %misc, align 8, !dbg !20786
  %390 = bitcast i8* %389 to i32*, !dbg !20786
  %add.ptr562 = getelementptr i32, i32* %390, i64 1, !dbg !20786
  %391 = load i32, i32* %add.ptr562, align 4, !dbg !20786
  %and563 = and i32 %391, 255, !dbg !20786
  %shl564 = shl i32 %and563, 24, !dbg !20786
  %392 = load i8*, i8** %misc, align 8, !dbg !20786
  %393 = bitcast i8* %392 to i32*, !dbg !20786
  %add.ptr565 = getelementptr i32, i32* %393, i64 1, !dbg !20786
  %394 = load i32, i32* %add.ptr565, align 4, !dbg !20786
  %and566 = and i32 %394, 65280, !dbg !20786
  %shl567 = shl i32 %and566, 8, !dbg !20786
  %or568 = or i32 %shl564, %shl567, !dbg !20786
  %395 = load i8*, i8** %misc, align 8, !dbg !20786
  %396 = bitcast i8* %395 to i32*, !dbg !20786
  %add.ptr569 = getelementptr i32, i32* %396, i64 1, !dbg !20786
  %397 = load i32, i32* %add.ptr569, align 4, !dbg !20786
  %and570 = and i32 %397, 16711680, !dbg !20786
  %shr571 = lshr i32 %and570, 8, !dbg !20786
  %or572 = or i32 %or568, %shr571, !dbg !20786
  %398 = load i8*, i8** %misc, align 8, !dbg !20786
  %399 = bitcast i8* %398 to i32*, !dbg !20786
  %add.ptr573 = getelementptr i32, i32* %399, i64 1, !dbg !20786
  %400 = load i32, i32* %add.ptr573, align 4, !dbg !20786
  %and574 = and i32 %400, -16777216, !dbg !20786
  %shr575 = lshr i32 %and574, 24, !dbg !20786
  %or576 = or i32 %or572, %shr575, !dbg !20786
  br label %cond.end580, !dbg !20786

cond.false577:                                    ; preds = %do.end559
  %401 = load i8*, i8** %misc, align 8, !dbg !20786
  %402 = bitcast i8* %401 to i32*, !dbg !20786
  %add.ptr578 = getelementptr i32, i32* %402, i64 1, !dbg !20786
  %403 = load i32, i32* %add.ptr578, align 4, !dbg !20786
  %call579 = call i32 @__fswab32(i32 %403) #10, !dbg !20786
  br label %cond.end580, !dbg !20786

cond.end580:                                      ; preds = %cond.false577, %cond.true561
  %cond581 = phi i32 [ %or576, %cond.true561 ], [ %call579, %cond.false577 ], !dbg !20786
  %and582 = and i32 %cond581, 65535, !dbg !20786
  %or583 = or i32 %and582, -65536, !dbg !20786
  %404 = call i1 @llvm.is.constant.i32(i32 %or583), !dbg !20786
  br i1 %404, label %cond.true584, label %cond.false692, !dbg !20786

cond.true584:                                     ; preds = %cond.end580
  %405 = load i8*, i8** %misc, align 8, !dbg !20786
  %406 = bitcast i8* %405 to i32*, !dbg !20786
  %add.ptr585 = getelementptr i32, i32* %406, i64 1, !dbg !20786
  %407 = load i32, i32* %add.ptr585, align 4, !dbg !20786
  %408 = call i1 @llvm.is.constant.i32(i32 %407), !dbg !20786
  br i1 %408, label %cond.true586, label %cond.false602, !dbg !20786

cond.true586:                                     ; preds = %cond.true584
  %409 = load i8*, i8** %misc, align 8, !dbg !20786
  %410 = bitcast i8* %409 to i32*, !dbg !20786
  %add.ptr587 = getelementptr i32, i32* %410, i64 1, !dbg !20786
  %411 = load i32, i32* %add.ptr587, align 4, !dbg !20786
  %and588 = and i32 %411, 255, !dbg !20786
  %shl589 = shl i32 %and588, 24, !dbg !20786
  %412 = load i8*, i8** %misc, align 8, !dbg !20786
  %413 = bitcast i8* %412 to i32*, !dbg !20786
  %add.ptr590 = getelementptr i32, i32* %413, i64 1, !dbg !20786
  %414 = load i32, i32* %add.ptr590, align 4, !dbg !20786
  %and591 = and i32 %414, 65280, !dbg !20786
  %shl592 = shl i32 %and591, 8, !dbg !20786
  %or593 = or i32 %shl589, %shl592, !dbg !20786
  %415 = load i8*, i8** %misc, align 8, !dbg !20786
  %416 = bitcast i8* %415 to i32*, !dbg !20786
  %add.ptr594 = getelementptr i32, i32* %416, i64 1, !dbg !20786
  %417 = load i32, i32* %add.ptr594, align 4, !dbg !20786
  %and595 = and i32 %417, 16711680, !dbg !20786
  %shr596 = lshr i32 %and595, 8, !dbg !20786
  %or597 = or i32 %or593, %shr596, !dbg !20786
  %418 = load i8*, i8** %misc, align 8, !dbg !20786
  %419 = bitcast i8* %418 to i32*, !dbg !20786
  %add.ptr598 = getelementptr i32, i32* %419, i64 1, !dbg !20786
  %420 = load i32, i32* %add.ptr598, align 4, !dbg !20786
  %and599 = and i32 %420, -16777216, !dbg !20786
  %shr600 = lshr i32 %and599, 24, !dbg !20786
  %or601 = or i32 %or597, %shr600, !dbg !20786
  br label %cond.end605, !dbg !20786

cond.false602:                                    ; preds = %cond.true584
  %421 = load i8*, i8** %misc, align 8, !dbg !20786
  %422 = bitcast i8* %421 to i32*, !dbg !20786
  %add.ptr603 = getelementptr i32, i32* %422, i64 1, !dbg !20786
  %423 = load i32, i32* %add.ptr603, align 4, !dbg !20786
  %call604 = call i32 @__fswab32(i32 %423) #10, !dbg !20786
  br label %cond.end605, !dbg !20786

cond.end605:                                      ; preds = %cond.false602, %cond.true586
  %cond606 = phi i32 [ %or601, %cond.true586 ], [ %call604, %cond.false602 ], !dbg !20786
  %and607 = and i32 %cond606, 65535, !dbg !20786
  %or608 = or i32 %and607, -65536, !dbg !20786
  %and609 = and i32 %or608, 255, !dbg !20786
  %shl610 = shl i32 %and609, 24, !dbg !20786
  %424 = load i8*, i8** %misc, align 8, !dbg !20786
  %425 = bitcast i8* %424 to i32*, !dbg !20786
  %add.ptr611 = getelementptr i32, i32* %425, i64 1, !dbg !20786
  %426 = load i32, i32* %add.ptr611, align 4, !dbg !20786
  %427 = call i1 @llvm.is.constant.i32(i32 %426), !dbg !20786
  br i1 %427, label %cond.true612, label %cond.false628, !dbg !20786

cond.true612:                                     ; preds = %cond.end605
  %428 = load i8*, i8** %misc, align 8, !dbg !20786
  %429 = bitcast i8* %428 to i32*, !dbg !20786
  %add.ptr613 = getelementptr i32, i32* %429, i64 1, !dbg !20786
  %430 = load i32, i32* %add.ptr613, align 4, !dbg !20786
  %and614 = and i32 %430, 255, !dbg !20786
  %shl615 = shl i32 %and614, 24, !dbg !20786
  %431 = load i8*, i8** %misc, align 8, !dbg !20786
  %432 = bitcast i8* %431 to i32*, !dbg !20786
  %add.ptr616 = getelementptr i32, i32* %432, i64 1, !dbg !20786
  %433 = load i32, i32* %add.ptr616, align 4, !dbg !20786
  %and617 = and i32 %433, 65280, !dbg !20786
  %shl618 = shl i32 %and617, 8, !dbg !20786
  %or619 = or i32 %shl615, %shl618, !dbg !20786
  %434 = load i8*, i8** %misc, align 8, !dbg !20786
  %435 = bitcast i8* %434 to i32*, !dbg !20786
  %add.ptr620 = getelementptr i32, i32* %435, i64 1, !dbg !20786
  %436 = load i32, i32* %add.ptr620, align 4, !dbg !20786
  %and621 = and i32 %436, 16711680, !dbg !20786
  %shr622 = lshr i32 %and621, 8, !dbg !20786
  %or623 = or i32 %or619, %shr622, !dbg !20786
  %437 = load i8*, i8** %misc, align 8, !dbg !20786
  %438 = bitcast i8* %437 to i32*, !dbg !20786
  %add.ptr624 = getelementptr i32, i32* %438, i64 1, !dbg !20786
  %439 = load i32, i32* %add.ptr624, align 4, !dbg !20786
  %and625 = and i32 %439, -16777216, !dbg !20786
  %shr626 = lshr i32 %and625, 24, !dbg !20786
  %or627 = or i32 %or623, %shr626, !dbg !20786
  br label %cond.end631, !dbg !20786

cond.false628:                                    ; preds = %cond.end605
  %440 = load i8*, i8** %misc, align 8, !dbg !20786
  %441 = bitcast i8* %440 to i32*, !dbg !20786
  %add.ptr629 = getelementptr i32, i32* %441, i64 1, !dbg !20786
  %442 = load i32, i32* %add.ptr629, align 4, !dbg !20786
  %call630 = call i32 @__fswab32(i32 %442) #10, !dbg !20786
  br label %cond.end631, !dbg !20786

cond.end631:                                      ; preds = %cond.false628, %cond.true612
  %cond632 = phi i32 [ %or627, %cond.true612 ], [ %call630, %cond.false628 ], !dbg !20786
  %and633 = and i32 %cond632, 65535, !dbg !20786
  %or634 = or i32 %and633, -65536, !dbg !20786
  %and635 = and i32 %or634, 65280, !dbg !20786
  %shl636 = shl i32 %and635, 8, !dbg !20786
  %or637 = or i32 %shl610, %shl636, !dbg !20786
  %443 = load i8*, i8** %misc, align 8, !dbg !20786
  %444 = bitcast i8* %443 to i32*, !dbg !20786
  %add.ptr638 = getelementptr i32, i32* %444, i64 1, !dbg !20786
  %445 = load i32, i32* %add.ptr638, align 4, !dbg !20786
  %446 = call i1 @llvm.is.constant.i32(i32 %445), !dbg !20786
  br i1 %446, label %cond.true639, label %cond.false655, !dbg !20786

cond.true639:                                     ; preds = %cond.end631
  %447 = load i8*, i8** %misc, align 8, !dbg !20786
  %448 = bitcast i8* %447 to i32*, !dbg !20786
  %add.ptr640 = getelementptr i32, i32* %448, i64 1, !dbg !20786
  %449 = load i32, i32* %add.ptr640, align 4, !dbg !20786
  %and641 = and i32 %449, 255, !dbg !20786
  %shl642 = shl i32 %and641, 24, !dbg !20786
  %450 = load i8*, i8** %misc, align 8, !dbg !20786
  %451 = bitcast i8* %450 to i32*, !dbg !20786
  %add.ptr643 = getelementptr i32, i32* %451, i64 1, !dbg !20786
  %452 = load i32, i32* %add.ptr643, align 4, !dbg !20786
  %and644 = and i32 %452, 65280, !dbg !20786
  %shl645 = shl i32 %and644, 8, !dbg !20786
  %or646 = or i32 %shl642, %shl645, !dbg !20786
  %453 = load i8*, i8** %misc, align 8, !dbg !20786
  %454 = bitcast i8* %453 to i32*, !dbg !20786
  %add.ptr647 = getelementptr i32, i32* %454, i64 1, !dbg !20786
  %455 = load i32, i32* %add.ptr647, align 4, !dbg !20786
  %and648 = and i32 %455, 16711680, !dbg !20786
  %shr649 = lshr i32 %and648, 8, !dbg !20786
  %or650 = or i32 %or646, %shr649, !dbg !20786
  %456 = load i8*, i8** %misc, align 8, !dbg !20786
  %457 = bitcast i8* %456 to i32*, !dbg !20786
  %add.ptr651 = getelementptr i32, i32* %457, i64 1, !dbg !20786
  %458 = load i32, i32* %add.ptr651, align 4, !dbg !20786
  %and652 = and i32 %458, -16777216, !dbg !20786
  %shr653 = lshr i32 %and652, 24, !dbg !20786
  %or654 = or i32 %or650, %shr653, !dbg !20786
  br label %cond.end658, !dbg !20786

cond.false655:                                    ; preds = %cond.end631
  %459 = load i8*, i8** %misc, align 8, !dbg !20786
  %460 = bitcast i8* %459 to i32*, !dbg !20786
  %add.ptr656 = getelementptr i32, i32* %460, i64 1, !dbg !20786
  %461 = load i32, i32* %add.ptr656, align 4, !dbg !20786
  %call657 = call i32 @__fswab32(i32 %461) #10, !dbg !20786
  br label %cond.end658, !dbg !20786

cond.end658:                                      ; preds = %cond.false655, %cond.true639
  %cond659 = phi i32 [ %or654, %cond.true639 ], [ %call657, %cond.false655 ], !dbg !20786
  %and660 = and i32 %cond659, 65535, !dbg !20786
  %or661 = or i32 %and660, -65536, !dbg !20786
  %and662 = and i32 %or661, 16711680, !dbg !20786
  %shr663 = lshr i32 %and662, 8, !dbg !20786
  %or664 = or i32 %or637, %shr663, !dbg !20786
  %462 = load i8*, i8** %misc, align 8, !dbg !20786
  %463 = bitcast i8* %462 to i32*, !dbg !20786
  %add.ptr665 = getelementptr i32, i32* %463, i64 1, !dbg !20786
  %464 = load i32, i32* %add.ptr665, align 4, !dbg !20786
  %465 = call i1 @llvm.is.constant.i32(i32 %464), !dbg !20786
  br i1 %465, label %cond.true666, label %cond.false682, !dbg !20786

cond.true666:                                     ; preds = %cond.end658
  %466 = load i8*, i8** %misc, align 8, !dbg !20786
  %467 = bitcast i8* %466 to i32*, !dbg !20786
  %add.ptr667 = getelementptr i32, i32* %467, i64 1, !dbg !20786
  %468 = load i32, i32* %add.ptr667, align 4, !dbg !20786
  %and668 = and i32 %468, 255, !dbg !20786
  %shl669 = shl i32 %and668, 24, !dbg !20786
  %469 = load i8*, i8** %misc, align 8, !dbg !20786
  %470 = bitcast i8* %469 to i32*, !dbg !20786
  %add.ptr670 = getelementptr i32, i32* %470, i64 1, !dbg !20786
  %471 = load i32, i32* %add.ptr670, align 4, !dbg !20786
  %and671 = and i32 %471, 65280, !dbg !20786
  %shl672 = shl i32 %and671, 8, !dbg !20786
  %or673 = or i32 %shl669, %shl672, !dbg !20786
  %472 = load i8*, i8** %misc, align 8, !dbg !20786
  %473 = bitcast i8* %472 to i32*, !dbg !20786
  %add.ptr674 = getelementptr i32, i32* %473, i64 1, !dbg !20786
  %474 = load i32, i32* %add.ptr674, align 4, !dbg !20786
  %and675 = and i32 %474, 16711680, !dbg !20786
  %shr676 = lshr i32 %and675, 8, !dbg !20786
  %or677 = or i32 %or673, %shr676, !dbg !20786
  %475 = load i8*, i8** %misc, align 8, !dbg !20786
  %476 = bitcast i8* %475 to i32*, !dbg !20786
  %add.ptr678 = getelementptr i32, i32* %476, i64 1, !dbg !20786
  %477 = load i32, i32* %add.ptr678, align 4, !dbg !20786
  %and679 = and i32 %477, -16777216, !dbg !20786
  %shr680 = lshr i32 %and679, 24, !dbg !20786
  %or681 = or i32 %or677, %shr680, !dbg !20786
  br label %cond.end685, !dbg !20786

cond.false682:                                    ; preds = %cond.end658
  %478 = load i8*, i8** %misc, align 8, !dbg !20786
  %479 = bitcast i8* %478 to i32*, !dbg !20786
  %add.ptr683 = getelementptr i32, i32* %479, i64 1, !dbg !20786
  %480 = load i32, i32* %add.ptr683, align 4, !dbg !20786
  %call684 = call i32 @__fswab32(i32 %480) #10, !dbg !20786
  br label %cond.end685, !dbg !20786

cond.end685:                                      ; preds = %cond.false682, %cond.true666
  %cond686 = phi i32 [ %or681, %cond.true666 ], [ %call684, %cond.false682 ], !dbg !20786
  %and687 = and i32 %cond686, 65535, !dbg !20786
  %or688 = or i32 %and687, -65536, !dbg !20786
  %and689 = and i32 %or688, -16777216, !dbg !20786
  %shr690 = lshr i32 %and689, 24, !dbg !20786
  %or691 = or i32 %or664, %shr690, !dbg !20786
  br label %cond.end718, !dbg !20786

cond.false692:                                    ; preds = %cond.end580
  %481 = load i8*, i8** %misc, align 8, !dbg !20786
  %482 = bitcast i8* %481 to i32*, !dbg !20786
  %add.ptr693 = getelementptr i32, i32* %482, i64 1, !dbg !20786
  %483 = load i32, i32* %add.ptr693, align 4, !dbg !20786
  %484 = call i1 @llvm.is.constant.i32(i32 %483), !dbg !20786
  br i1 %484, label %cond.true694, label %cond.false710, !dbg !20786

cond.true694:                                     ; preds = %cond.false692
  %485 = load i8*, i8** %misc, align 8, !dbg !20786
  %486 = bitcast i8* %485 to i32*, !dbg !20786
  %add.ptr695 = getelementptr i32, i32* %486, i64 1, !dbg !20786
  %487 = load i32, i32* %add.ptr695, align 4, !dbg !20786
  %and696 = and i32 %487, 255, !dbg !20786
  %shl697 = shl i32 %and696, 24, !dbg !20786
  %488 = load i8*, i8** %misc, align 8, !dbg !20786
  %489 = bitcast i8* %488 to i32*, !dbg !20786
  %add.ptr698 = getelementptr i32, i32* %489, i64 1, !dbg !20786
  %490 = load i32, i32* %add.ptr698, align 4, !dbg !20786
  %and699 = and i32 %490, 65280, !dbg !20786
  %shl700 = shl i32 %and699, 8, !dbg !20786
  %or701 = or i32 %shl697, %shl700, !dbg !20786
  %491 = load i8*, i8** %misc, align 8, !dbg !20786
  %492 = bitcast i8* %491 to i32*, !dbg !20786
  %add.ptr702 = getelementptr i32, i32* %492, i64 1, !dbg !20786
  %493 = load i32, i32* %add.ptr702, align 4, !dbg !20786
  %and703 = and i32 %493, 16711680, !dbg !20786
  %shr704 = lshr i32 %and703, 8, !dbg !20786
  %or705 = or i32 %or701, %shr704, !dbg !20786
  %494 = load i8*, i8** %misc, align 8, !dbg !20786
  %495 = bitcast i8* %494 to i32*, !dbg !20786
  %add.ptr706 = getelementptr i32, i32* %495, i64 1, !dbg !20786
  %496 = load i32, i32* %add.ptr706, align 4, !dbg !20786
  %and707 = and i32 %496, -16777216, !dbg !20786
  %shr708 = lshr i32 %and707, 24, !dbg !20786
  %or709 = or i32 %or705, %shr708, !dbg !20786
  br label %cond.end713, !dbg !20786

cond.false710:                                    ; preds = %cond.false692
  %497 = load i8*, i8** %misc, align 8, !dbg !20786
  %498 = bitcast i8* %497 to i32*, !dbg !20786
  %add.ptr711 = getelementptr i32, i32* %498, i64 1, !dbg !20786
  %499 = load i32, i32* %add.ptr711, align 4, !dbg !20786
  %call712 = call i32 @__fswab32(i32 %499) #10, !dbg !20786
  br label %cond.end713, !dbg !20786

cond.end713:                                      ; preds = %cond.false710, %cond.true694
  %cond714 = phi i32 [ %or709, %cond.true694 ], [ %call712, %cond.false710 ], !dbg !20786
  %and715 = and i32 %cond714, 65535, !dbg !20786
  %or716 = or i32 %and715, -65536, !dbg !20786
  %call717 = call i32 @__fswab32(i32 %or716) #10, !dbg !20786
  br label %cond.end718, !dbg !20786

cond.end718:                                      ; preds = %cond.end713, %cond.end685
  %cond719 = phi i32 [ %or691, %cond.end685 ], [ %call717, %cond.end713 ], !dbg !20786
  %500 = load i8*, i8** %misc, align 8, !dbg !20786
  %501 = bitcast i8* %500 to i32*, !dbg !20786
  %add.ptr720 = getelementptr i32, i32* %501, i64 1, !dbg !20786
  store i32 %cond719, i32* %add.ptr720, align 4, !dbg !20786
  br label %do.end721, !dbg !20786

do.end721:                                        ; preds = %cond.end718
  br label %if.end

if.end:                                           ; preds = %do.end721, %do.end162
  %502 = load %struct.mlx5_flow_destination*, %struct.mlx5_flow_destination** %dest.addr, align 8, !dbg !20790
  %type = getelementptr inbounds %struct.mlx5_flow_destination, %struct.mlx5_flow_destination* %502, i32 0, i32 0, !dbg !20791
  store i32 0, i32* %type, align 8, !dbg !20792
  %503 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %peer_dev.addr, align 8, !dbg !20793
  %priv = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %503, i32 0, i32 17, !dbg !20794
  %eswitch = getelementptr inbounds %struct.mlx5_priv, %struct.mlx5_priv* %priv, i32 0, i32 26, !dbg !20795
  %504 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %eswitch, align 8, !dbg !20795
  %manager_vport = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %504, i32 0, i32 15, !dbg !20796
  %505 = load i16, i16* %manager_vport, align 4, !dbg !20796
  %506 = load %struct.mlx5_flow_destination*, %struct.mlx5_flow_destination** %dest.addr, align 8, !dbg !20797
  %507 = getelementptr inbounds %struct.mlx5_flow_destination, %struct.mlx5_flow_destination* %506, i32 0, i32 1, !dbg !20798
  %vport = bitcast %union.anon.146* %507 to %struct.anon.147*, !dbg !20798
  %num = getelementptr inbounds %struct.anon.147, %struct.anon.147* %vport, i32 0, i32 0, !dbg !20799
  store i16 %505, i16* %num, align 8, !dbg !20800
  %508 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %peer_dev.addr, align 8, !dbg !20801
  %caps722 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %508, i32 0, i32 9, !dbg !20801
  %hca_cur723 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps722, i32 0, i32 0, !dbg !20801
  %arrayidx724 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur723, i64 0, i64 0, !dbg !20801
  %arraydecay725 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx724, i64 0, i64 0, !dbg !20801
  %add.ptr726 = getelementptr i32, i32* %arraydecay725, i64 1, !dbg !20801
  %509 = load i32, i32* %add.ptr726, align 4, !dbg !20801
  %510 = call i1 @llvm.is.constant.i32(i32 %509), !dbg !20801
  br i1 %510, label %cond.true727, label %cond.false759, !dbg !20801

cond.true727:                                     ; preds = %if.end
  %511 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %peer_dev.addr, align 8, !dbg !20801
  %caps728 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %511, i32 0, i32 9, !dbg !20801
  %hca_cur729 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps728, i32 0, i32 0, !dbg !20801
  %arrayidx730 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur729, i64 0, i64 0, !dbg !20801
  %arraydecay731 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx730, i64 0, i64 0, !dbg !20801
  %add.ptr732 = getelementptr i32, i32* %arraydecay731, i64 1, !dbg !20801
  %512 = load i32, i32* %add.ptr732, align 4, !dbg !20801
  %and733 = and i32 %512, 255, !dbg !20801
  %shl734 = shl i32 %and733, 24, !dbg !20801
  %513 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %peer_dev.addr, align 8, !dbg !20801
  %caps735 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %513, i32 0, i32 9, !dbg !20801
  %hca_cur736 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps735, i32 0, i32 0, !dbg !20801
  %arrayidx737 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur736, i64 0, i64 0, !dbg !20801
  %arraydecay738 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx737, i64 0, i64 0, !dbg !20801
  %add.ptr739 = getelementptr i32, i32* %arraydecay738, i64 1, !dbg !20801
  %514 = load i32, i32* %add.ptr739, align 4, !dbg !20801
  %and740 = and i32 %514, 65280, !dbg !20801
  %shl741 = shl i32 %and740, 8, !dbg !20801
  %or742 = or i32 %shl734, %shl741, !dbg !20801
  %515 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %peer_dev.addr, align 8, !dbg !20801
  %caps743 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %515, i32 0, i32 9, !dbg !20801
  %hca_cur744 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps743, i32 0, i32 0, !dbg !20801
  %arrayidx745 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur744, i64 0, i64 0, !dbg !20801
  %arraydecay746 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx745, i64 0, i64 0, !dbg !20801
  %add.ptr747 = getelementptr i32, i32* %arraydecay746, i64 1, !dbg !20801
  %516 = load i32, i32* %add.ptr747, align 4, !dbg !20801
  %and748 = and i32 %516, 16711680, !dbg !20801
  %shr749 = lshr i32 %and748, 8, !dbg !20801
  %or750 = or i32 %or742, %shr749, !dbg !20801
  %517 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %peer_dev.addr, align 8, !dbg !20801
  %caps751 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %517, i32 0, i32 9, !dbg !20801
  %hca_cur752 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps751, i32 0, i32 0, !dbg !20801
  %arrayidx753 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur752, i64 0, i64 0, !dbg !20801
  %arraydecay754 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx753, i64 0, i64 0, !dbg !20801
  %add.ptr755 = getelementptr i32, i32* %arraydecay754, i64 1, !dbg !20801
  %518 = load i32, i32* %add.ptr755, align 4, !dbg !20801
  %and756 = and i32 %518, -16777216, !dbg !20801
  %shr757 = lshr i32 %and756, 24, !dbg !20801
  %or758 = or i32 %or750, %shr757, !dbg !20801
  br label %cond.end766, !dbg !20801

cond.false759:                                    ; preds = %if.end
  %519 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %peer_dev.addr, align 8, !dbg !20801
  %caps760 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %519, i32 0, i32 9, !dbg !20801
  %hca_cur761 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps760, i32 0, i32 0, !dbg !20801
  %arrayidx762 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur761, i64 0, i64 0, !dbg !20801
  %arraydecay763 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx762, i64 0, i64 0, !dbg !20801
  %add.ptr764 = getelementptr i32, i32* %arraydecay763, i64 1, !dbg !20801
  %520 = load i32, i32* %add.ptr764, align 4, !dbg !20801
  %call765 = call i32 @__fswab32(i32 %520) #10, !dbg !20801
  br label %cond.end766, !dbg !20801

cond.end766:                                      ; preds = %cond.false759, %cond.true727
  %cond767 = phi i32 [ %or758, %cond.true727 ], [ %call765, %cond.false759 ], !dbg !20801
  %shr768 = lshr i32 %cond767, 0, !dbg !20801
  %and769 = and i32 %shr768, 65535, !dbg !20801
  %conv = trunc i32 %and769 to i16, !dbg !20801
  %521 = load %struct.mlx5_flow_destination*, %struct.mlx5_flow_destination** %dest.addr, align 8, !dbg !20802
  %522 = getelementptr inbounds %struct.mlx5_flow_destination, %struct.mlx5_flow_destination* %521, i32 0, i32 1, !dbg !20803
  %vport770 = bitcast %union.anon.146* %522 to %struct.anon.147*, !dbg !20803
  %vhca_id = getelementptr inbounds %struct.anon.147, %struct.anon.147* %vport770, i32 0, i32 1, !dbg !20804
  store i16 %conv, i16* %vhca_id, align 2, !dbg !20805
  %523 = load %struct.mlx5_flow_destination*, %struct.mlx5_flow_destination** %dest.addr, align 8, !dbg !20806
  %524 = getelementptr inbounds %struct.mlx5_flow_destination, %struct.mlx5_flow_destination* %523, i32 0, i32 1, !dbg !20807
  %vport771 = bitcast %union.anon.146* %524 to %struct.anon.147*, !dbg !20807
  %flags = getelementptr inbounds %struct.anon.147, %struct.anon.147* %vport771, i32 0, i32 3, !dbg !20808
  %525 = load i8, i8* %flags, align 8, !dbg !20809
  %conv772 = zext i8 %525 to i32, !dbg !20809
  %or773 = or i32 %conv772, 1, !dbg !20809
  %conv774 = trunc i32 %or773 to i8, !dbg !20809
  store i8 %conv774, i8* %flags, align 8, !dbg !20809
  ret void, !dbg !20810
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @esw_set_peer_miss_rule_source_port(%struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch* %peer_esw, %struct.mlx5_flow_spec* %spec, i16 zeroext %vport) #0 !dbg !20811 {
entry:
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  %peer_esw.addr = alloca %struct.mlx5_eswitch*, align 8
  %spec.addr = alloca %struct.mlx5_flow_spec*, align 8
  %vport.addr = alloca i16, align 2
  %misc = alloca i8*, align 8
  %_v = alloca i32, align 4
  %_v167 = alloca i32, align 4
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !20814, metadata !DIExpression()), !dbg !20815
  store %struct.mlx5_eswitch* %peer_esw, %struct.mlx5_eswitch** %peer_esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %peer_esw.addr, metadata !20816, metadata !DIExpression()), !dbg !20817
  store %struct.mlx5_flow_spec* %spec, %struct.mlx5_flow_spec** %spec.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_flow_spec** %spec.addr, metadata !20818, metadata !DIExpression()), !dbg !20819
  store i16 %vport, i16* %vport.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %vport.addr, metadata !20820, metadata !DIExpression()), !dbg !20821
  call void @llvm.dbg.declare(metadata i8** %misc, metadata !20822, metadata !DIExpression()), !dbg !20823
  %0 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !20824
  %call = call zeroext i1 @mlx5_eswitch_vport_match_metadata_enabled(%struct.mlx5_eswitch* %0) #8, !dbg !20826
  br i1 %call, label %if.then, label %if.else, !dbg !20827

if.then:                                          ; preds = %entry
  %1 = load %struct.mlx5_flow_spec*, %struct.mlx5_flow_spec** %spec.addr, align 8, !dbg !20828
  %match_value = getelementptr inbounds %struct.mlx5_flow_spec, %struct.mlx5_flow_spec* %1, i32 0, i32 2, !dbg !20828
  %arraydecay = getelementptr inbounds [128 x i32], [128 x i32]* %match_value, i64 0, i64 0, !dbg !20828
  %2 = bitcast i32* %arraydecay to i8*, !dbg !20828
  %add.ptr = getelementptr i8, i8* %2, i64 192, !dbg !20828
  store i8* %add.ptr, i8** %misc, align 8, !dbg !20830
  br label %do.body, !dbg !20831

do.body:                                          ; preds = %if.then
  call void @llvm.dbg.declare(metadata i32* %_v, metadata !20832, metadata !DIExpression()), !dbg !20834
  %3 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %peer_esw.addr, align 8, !dbg !20834
  %4 = load i16, i16* %vport.addr, align 2, !dbg !20834
  %call1 = call i32 @mlx5_eswitch_get_vport_metadata_for_match(%struct.mlx5_eswitch* %3, i16 zeroext %4) #8, !dbg !20834
  store i32 %call1, i32* %_v, align 4, !dbg !20834
  br label %do.body2, !dbg !20834

do.body2:                                         ; preds = %do.body
  br label %do.end, !dbg !20835

do.end:                                           ; preds = %do.body2
  %5 = load i8*, i8** %misc, align 8, !dbg !20834
  %6 = bitcast i8* %5 to i32*, !dbg !20834
  %add.ptr3 = getelementptr i32, i32* %6, i64 11, !dbg !20834
  %7 = load i32, i32* %add.ptr3, align 4, !dbg !20834
  %8 = call i1 @llvm.is.constant.i32(i32 %7), !dbg !20834
  br i1 %8, label %cond.true, label %cond.false, !dbg !20834

cond.true:                                        ; preds = %do.end
  %9 = load i8*, i8** %misc, align 8, !dbg !20834
  %10 = bitcast i8* %9 to i32*, !dbg !20834
  %add.ptr4 = getelementptr i32, i32* %10, i64 11, !dbg !20834
  %11 = load i32, i32* %add.ptr4, align 4, !dbg !20834
  %and = and i32 %11, 255, !dbg !20834
  %shl = shl i32 %and, 24, !dbg !20834
  %12 = load i8*, i8** %misc, align 8, !dbg !20834
  %13 = bitcast i8* %12 to i32*, !dbg !20834
  %add.ptr5 = getelementptr i32, i32* %13, i64 11, !dbg !20834
  %14 = load i32, i32* %add.ptr5, align 4, !dbg !20834
  %and6 = and i32 %14, 65280, !dbg !20834
  %shl7 = shl i32 %and6, 8, !dbg !20834
  %or = or i32 %shl, %shl7, !dbg !20834
  %15 = load i8*, i8** %misc, align 8, !dbg !20834
  %16 = bitcast i8* %15 to i32*, !dbg !20834
  %add.ptr8 = getelementptr i32, i32* %16, i64 11, !dbg !20834
  %17 = load i32, i32* %add.ptr8, align 4, !dbg !20834
  %and9 = and i32 %17, 16711680, !dbg !20834
  %shr = lshr i32 %and9, 8, !dbg !20834
  %or10 = or i32 %or, %shr, !dbg !20834
  %18 = load i8*, i8** %misc, align 8, !dbg !20834
  %19 = bitcast i8* %18 to i32*, !dbg !20834
  %add.ptr11 = getelementptr i32, i32* %19, i64 11, !dbg !20834
  %20 = load i32, i32* %add.ptr11, align 4, !dbg !20834
  %and12 = and i32 %20, -16777216, !dbg !20834
  %shr13 = lshr i32 %and12, 24, !dbg !20834
  %or14 = or i32 %or10, %shr13, !dbg !20834
  br label %cond.end, !dbg !20834

cond.false:                                       ; preds = %do.end
  %21 = load i8*, i8** %misc, align 8, !dbg !20834
  %22 = bitcast i8* %21 to i32*, !dbg !20834
  %add.ptr15 = getelementptr i32, i32* %22, i64 11, !dbg !20834
  %23 = load i32, i32* %add.ptr15, align 4, !dbg !20834
  %call16 = call i32 @__fswab32(i32 %23) #10, !dbg !20834
  br label %cond.end, !dbg !20834

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %or14, %cond.true ], [ %call16, %cond.false ], !dbg !20834
  %and17 = and i32 %cond, 0, !dbg !20834
  %24 = load i32, i32* %_v, align 4, !dbg !20834
  %shl18 = shl i32 %24, 0, !dbg !20834
  %or19 = or i32 %and17, %shl18, !dbg !20834
  %25 = call i1 @llvm.is.constant.i32(i32 %or19), !dbg !20834
  br i1 %25, label %cond.true20, label %cond.false132, !dbg !20834

cond.true20:                                      ; preds = %cond.end
  %26 = load i8*, i8** %misc, align 8, !dbg !20834
  %27 = bitcast i8* %26 to i32*, !dbg !20834
  %add.ptr21 = getelementptr i32, i32* %27, i64 11, !dbg !20834
  %28 = load i32, i32* %add.ptr21, align 4, !dbg !20834
  %29 = call i1 @llvm.is.constant.i32(i32 %28), !dbg !20834
  br i1 %29, label %cond.true22, label %cond.false38, !dbg !20834

cond.true22:                                      ; preds = %cond.true20
  %30 = load i8*, i8** %misc, align 8, !dbg !20834
  %31 = bitcast i8* %30 to i32*, !dbg !20834
  %add.ptr23 = getelementptr i32, i32* %31, i64 11, !dbg !20834
  %32 = load i32, i32* %add.ptr23, align 4, !dbg !20834
  %and24 = and i32 %32, 255, !dbg !20834
  %shl25 = shl i32 %and24, 24, !dbg !20834
  %33 = load i8*, i8** %misc, align 8, !dbg !20834
  %34 = bitcast i8* %33 to i32*, !dbg !20834
  %add.ptr26 = getelementptr i32, i32* %34, i64 11, !dbg !20834
  %35 = load i32, i32* %add.ptr26, align 4, !dbg !20834
  %and27 = and i32 %35, 65280, !dbg !20834
  %shl28 = shl i32 %and27, 8, !dbg !20834
  %or29 = or i32 %shl25, %shl28, !dbg !20834
  %36 = load i8*, i8** %misc, align 8, !dbg !20834
  %37 = bitcast i8* %36 to i32*, !dbg !20834
  %add.ptr30 = getelementptr i32, i32* %37, i64 11, !dbg !20834
  %38 = load i32, i32* %add.ptr30, align 4, !dbg !20834
  %and31 = and i32 %38, 16711680, !dbg !20834
  %shr32 = lshr i32 %and31, 8, !dbg !20834
  %or33 = or i32 %or29, %shr32, !dbg !20834
  %39 = load i8*, i8** %misc, align 8, !dbg !20834
  %40 = bitcast i8* %39 to i32*, !dbg !20834
  %add.ptr34 = getelementptr i32, i32* %40, i64 11, !dbg !20834
  %41 = load i32, i32* %add.ptr34, align 4, !dbg !20834
  %and35 = and i32 %41, -16777216, !dbg !20834
  %shr36 = lshr i32 %and35, 24, !dbg !20834
  %or37 = or i32 %or33, %shr36, !dbg !20834
  br label %cond.end41, !dbg !20834

cond.false38:                                     ; preds = %cond.true20
  %42 = load i8*, i8** %misc, align 8, !dbg !20834
  %43 = bitcast i8* %42 to i32*, !dbg !20834
  %add.ptr39 = getelementptr i32, i32* %43, i64 11, !dbg !20834
  %44 = load i32, i32* %add.ptr39, align 4, !dbg !20834
  %call40 = call i32 @__fswab32(i32 %44) #10, !dbg !20834
  br label %cond.end41, !dbg !20834

cond.end41:                                       ; preds = %cond.false38, %cond.true22
  %cond42 = phi i32 [ %or37, %cond.true22 ], [ %call40, %cond.false38 ], !dbg !20834
  %and43 = and i32 %cond42, 0, !dbg !20834
  %45 = load i32, i32* %_v, align 4, !dbg !20834
  %shl44 = shl i32 %45, 0, !dbg !20834
  %or45 = or i32 %and43, %shl44, !dbg !20834
  %and46 = and i32 %or45, 255, !dbg !20834
  %shl47 = shl i32 %and46, 24, !dbg !20834
  %46 = load i8*, i8** %misc, align 8, !dbg !20834
  %47 = bitcast i8* %46 to i32*, !dbg !20834
  %add.ptr48 = getelementptr i32, i32* %47, i64 11, !dbg !20834
  %48 = load i32, i32* %add.ptr48, align 4, !dbg !20834
  %49 = call i1 @llvm.is.constant.i32(i32 %48), !dbg !20834
  br i1 %49, label %cond.true49, label %cond.false65, !dbg !20834

cond.true49:                                      ; preds = %cond.end41
  %50 = load i8*, i8** %misc, align 8, !dbg !20834
  %51 = bitcast i8* %50 to i32*, !dbg !20834
  %add.ptr50 = getelementptr i32, i32* %51, i64 11, !dbg !20834
  %52 = load i32, i32* %add.ptr50, align 4, !dbg !20834
  %and51 = and i32 %52, 255, !dbg !20834
  %shl52 = shl i32 %and51, 24, !dbg !20834
  %53 = load i8*, i8** %misc, align 8, !dbg !20834
  %54 = bitcast i8* %53 to i32*, !dbg !20834
  %add.ptr53 = getelementptr i32, i32* %54, i64 11, !dbg !20834
  %55 = load i32, i32* %add.ptr53, align 4, !dbg !20834
  %and54 = and i32 %55, 65280, !dbg !20834
  %shl55 = shl i32 %and54, 8, !dbg !20834
  %or56 = or i32 %shl52, %shl55, !dbg !20834
  %56 = load i8*, i8** %misc, align 8, !dbg !20834
  %57 = bitcast i8* %56 to i32*, !dbg !20834
  %add.ptr57 = getelementptr i32, i32* %57, i64 11, !dbg !20834
  %58 = load i32, i32* %add.ptr57, align 4, !dbg !20834
  %and58 = and i32 %58, 16711680, !dbg !20834
  %shr59 = lshr i32 %and58, 8, !dbg !20834
  %or60 = or i32 %or56, %shr59, !dbg !20834
  %59 = load i8*, i8** %misc, align 8, !dbg !20834
  %60 = bitcast i8* %59 to i32*, !dbg !20834
  %add.ptr61 = getelementptr i32, i32* %60, i64 11, !dbg !20834
  %61 = load i32, i32* %add.ptr61, align 4, !dbg !20834
  %and62 = and i32 %61, -16777216, !dbg !20834
  %shr63 = lshr i32 %and62, 24, !dbg !20834
  %or64 = or i32 %or60, %shr63, !dbg !20834
  br label %cond.end68, !dbg !20834

cond.false65:                                     ; preds = %cond.end41
  %62 = load i8*, i8** %misc, align 8, !dbg !20834
  %63 = bitcast i8* %62 to i32*, !dbg !20834
  %add.ptr66 = getelementptr i32, i32* %63, i64 11, !dbg !20834
  %64 = load i32, i32* %add.ptr66, align 4, !dbg !20834
  %call67 = call i32 @__fswab32(i32 %64) #10, !dbg !20834
  br label %cond.end68, !dbg !20834

cond.end68:                                       ; preds = %cond.false65, %cond.true49
  %cond69 = phi i32 [ %or64, %cond.true49 ], [ %call67, %cond.false65 ], !dbg !20834
  %and70 = and i32 %cond69, 0, !dbg !20834
  %65 = load i32, i32* %_v, align 4, !dbg !20834
  %shl71 = shl i32 %65, 0, !dbg !20834
  %or72 = or i32 %and70, %shl71, !dbg !20834
  %and73 = and i32 %or72, 65280, !dbg !20834
  %shl74 = shl i32 %and73, 8, !dbg !20834
  %or75 = or i32 %shl47, %shl74, !dbg !20834
  %66 = load i8*, i8** %misc, align 8, !dbg !20834
  %67 = bitcast i8* %66 to i32*, !dbg !20834
  %add.ptr76 = getelementptr i32, i32* %67, i64 11, !dbg !20834
  %68 = load i32, i32* %add.ptr76, align 4, !dbg !20834
  %69 = call i1 @llvm.is.constant.i32(i32 %68), !dbg !20834
  br i1 %69, label %cond.true77, label %cond.false93, !dbg !20834

cond.true77:                                      ; preds = %cond.end68
  %70 = load i8*, i8** %misc, align 8, !dbg !20834
  %71 = bitcast i8* %70 to i32*, !dbg !20834
  %add.ptr78 = getelementptr i32, i32* %71, i64 11, !dbg !20834
  %72 = load i32, i32* %add.ptr78, align 4, !dbg !20834
  %and79 = and i32 %72, 255, !dbg !20834
  %shl80 = shl i32 %and79, 24, !dbg !20834
  %73 = load i8*, i8** %misc, align 8, !dbg !20834
  %74 = bitcast i8* %73 to i32*, !dbg !20834
  %add.ptr81 = getelementptr i32, i32* %74, i64 11, !dbg !20834
  %75 = load i32, i32* %add.ptr81, align 4, !dbg !20834
  %and82 = and i32 %75, 65280, !dbg !20834
  %shl83 = shl i32 %and82, 8, !dbg !20834
  %or84 = or i32 %shl80, %shl83, !dbg !20834
  %76 = load i8*, i8** %misc, align 8, !dbg !20834
  %77 = bitcast i8* %76 to i32*, !dbg !20834
  %add.ptr85 = getelementptr i32, i32* %77, i64 11, !dbg !20834
  %78 = load i32, i32* %add.ptr85, align 4, !dbg !20834
  %and86 = and i32 %78, 16711680, !dbg !20834
  %shr87 = lshr i32 %and86, 8, !dbg !20834
  %or88 = or i32 %or84, %shr87, !dbg !20834
  %79 = load i8*, i8** %misc, align 8, !dbg !20834
  %80 = bitcast i8* %79 to i32*, !dbg !20834
  %add.ptr89 = getelementptr i32, i32* %80, i64 11, !dbg !20834
  %81 = load i32, i32* %add.ptr89, align 4, !dbg !20834
  %and90 = and i32 %81, -16777216, !dbg !20834
  %shr91 = lshr i32 %and90, 24, !dbg !20834
  %or92 = or i32 %or88, %shr91, !dbg !20834
  br label %cond.end96, !dbg !20834

cond.false93:                                     ; preds = %cond.end68
  %82 = load i8*, i8** %misc, align 8, !dbg !20834
  %83 = bitcast i8* %82 to i32*, !dbg !20834
  %add.ptr94 = getelementptr i32, i32* %83, i64 11, !dbg !20834
  %84 = load i32, i32* %add.ptr94, align 4, !dbg !20834
  %call95 = call i32 @__fswab32(i32 %84) #10, !dbg !20834
  br label %cond.end96, !dbg !20834

cond.end96:                                       ; preds = %cond.false93, %cond.true77
  %cond97 = phi i32 [ %or92, %cond.true77 ], [ %call95, %cond.false93 ], !dbg !20834
  %and98 = and i32 %cond97, 0, !dbg !20834
  %85 = load i32, i32* %_v, align 4, !dbg !20834
  %shl99 = shl i32 %85, 0, !dbg !20834
  %or100 = or i32 %and98, %shl99, !dbg !20834
  %and101 = and i32 %or100, 16711680, !dbg !20834
  %shr102 = lshr i32 %and101, 8, !dbg !20834
  %or103 = or i32 %or75, %shr102, !dbg !20834
  %86 = load i8*, i8** %misc, align 8, !dbg !20834
  %87 = bitcast i8* %86 to i32*, !dbg !20834
  %add.ptr104 = getelementptr i32, i32* %87, i64 11, !dbg !20834
  %88 = load i32, i32* %add.ptr104, align 4, !dbg !20834
  %89 = call i1 @llvm.is.constant.i32(i32 %88), !dbg !20834
  br i1 %89, label %cond.true105, label %cond.false121, !dbg !20834

cond.true105:                                     ; preds = %cond.end96
  %90 = load i8*, i8** %misc, align 8, !dbg !20834
  %91 = bitcast i8* %90 to i32*, !dbg !20834
  %add.ptr106 = getelementptr i32, i32* %91, i64 11, !dbg !20834
  %92 = load i32, i32* %add.ptr106, align 4, !dbg !20834
  %and107 = and i32 %92, 255, !dbg !20834
  %shl108 = shl i32 %and107, 24, !dbg !20834
  %93 = load i8*, i8** %misc, align 8, !dbg !20834
  %94 = bitcast i8* %93 to i32*, !dbg !20834
  %add.ptr109 = getelementptr i32, i32* %94, i64 11, !dbg !20834
  %95 = load i32, i32* %add.ptr109, align 4, !dbg !20834
  %and110 = and i32 %95, 65280, !dbg !20834
  %shl111 = shl i32 %and110, 8, !dbg !20834
  %or112 = or i32 %shl108, %shl111, !dbg !20834
  %96 = load i8*, i8** %misc, align 8, !dbg !20834
  %97 = bitcast i8* %96 to i32*, !dbg !20834
  %add.ptr113 = getelementptr i32, i32* %97, i64 11, !dbg !20834
  %98 = load i32, i32* %add.ptr113, align 4, !dbg !20834
  %and114 = and i32 %98, 16711680, !dbg !20834
  %shr115 = lshr i32 %and114, 8, !dbg !20834
  %or116 = or i32 %or112, %shr115, !dbg !20834
  %99 = load i8*, i8** %misc, align 8, !dbg !20834
  %100 = bitcast i8* %99 to i32*, !dbg !20834
  %add.ptr117 = getelementptr i32, i32* %100, i64 11, !dbg !20834
  %101 = load i32, i32* %add.ptr117, align 4, !dbg !20834
  %and118 = and i32 %101, -16777216, !dbg !20834
  %shr119 = lshr i32 %and118, 24, !dbg !20834
  %or120 = or i32 %or116, %shr119, !dbg !20834
  br label %cond.end124, !dbg !20834

cond.false121:                                    ; preds = %cond.end96
  %102 = load i8*, i8** %misc, align 8, !dbg !20834
  %103 = bitcast i8* %102 to i32*, !dbg !20834
  %add.ptr122 = getelementptr i32, i32* %103, i64 11, !dbg !20834
  %104 = load i32, i32* %add.ptr122, align 4, !dbg !20834
  %call123 = call i32 @__fswab32(i32 %104) #10, !dbg !20834
  br label %cond.end124, !dbg !20834

cond.end124:                                      ; preds = %cond.false121, %cond.true105
  %cond125 = phi i32 [ %or120, %cond.true105 ], [ %call123, %cond.false121 ], !dbg !20834
  %and126 = and i32 %cond125, 0, !dbg !20834
  %105 = load i32, i32* %_v, align 4, !dbg !20834
  %shl127 = shl i32 %105, 0, !dbg !20834
  %or128 = or i32 %and126, %shl127, !dbg !20834
  %and129 = and i32 %or128, -16777216, !dbg !20834
  %shr130 = lshr i32 %and129, 24, !dbg !20834
  %or131 = or i32 %or103, %shr130, !dbg !20834
  br label %cond.end159, !dbg !20834

cond.false132:                                    ; preds = %cond.end
  %106 = load i8*, i8** %misc, align 8, !dbg !20834
  %107 = bitcast i8* %106 to i32*, !dbg !20834
  %add.ptr133 = getelementptr i32, i32* %107, i64 11, !dbg !20834
  %108 = load i32, i32* %add.ptr133, align 4, !dbg !20834
  %109 = call i1 @llvm.is.constant.i32(i32 %108), !dbg !20834
  br i1 %109, label %cond.true134, label %cond.false150, !dbg !20834

cond.true134:                                     ; preds = %cond.false132
  %110 = load i8*, i8** %misc, align 8, !dbg !20834
  %111 = bitcast i8* %110 to i32*, !dbg !20834
  %add.ptr135 = getelementptr i32, i32* %111, i64 11, !dbg !20834
  %112 = load i32, i32* %add.ptr135, align 4, !dbg !20834
  %and136 = and i32 %112, 255, !dbg !20834
  %shl137 = shl i32 %and136, 24, !dbg !20834
  %113 = load i8*, i8** %misc, align 8, !dbg !20834
  %114 = bitcast i8* %113 to i32*, !dbg !20834
  %add.ptr138 = getelementptr i32, i32* %114, i64 11, !dbg !20834
  %115 = load i32, i32* %add.ptr138, align 4, !dbg !20834
  %and139 = and i32 %115, 65280, !dbg !20834
  %shl140 = shl i32 %and139, 8, !dbg !20834
  %or141 = or i32 %shl137, %shl140, !dbg !20834
  %116 = load i8*, i8** %misc, align 8, !dbg !20834
  %117 = bitcast i8* %116 to i32*, !dbg !20834
  %add.ptr142 = getelementptr i32, i32* %117, i64 11, !dbg !20834
  %118 = load i32, i32* %add.ptr142, align 4, !dbg !20834
  %and143 = and i32 %118, 16711680, !dbg !20834
  %shr144 = lshr i32 %and143, 8, !dbg !20834
  %or145 = or i32 %or141, %shr144, !dbg !20834
  %119 = load i8*, i8** %misc, align 8, !dbg !20834
  %120 = bitcast i8* %119 to i32*, !dbg !20834
  %add.ptr146 = getelementptr i32, i32* %120, i64 11, !dbg !20834
  %121 = load i32, i32* %add.ptr146, align 4, !dbg !20834
  %and147 = and i32 %121, -16777216, !dbg !20834
  %shr148 = lshr i32 %and147, 24, !dbg !20834
  %or149 = or i32 %or145, %shr148, !dbg !20834
  br label %cond.end153, !dbg !20834

cond.false150:                                    ; preds = %cond.false132
  %122 = load i8*, i8** %misc, align 8, !dbg !20834
  %123 = bitcast i8* %122 to i32*, !dbg !20834
  %add.ptr151 = getelementptr i32, i32* %123, i64 11, !dbg !20834
  %124 = load i32, i32* %add.ptr151, align 4, !dbg !20834
  %call152 = call i32 @__fswab32(i32 %124) #10, !dbg !20834
  br label %cond.end153, !dbg !20834

cond.end153:                                      ; preds = %cond.false150, %cond.true134
  %cond154 = phi i32 [ %or149, %cond.true134 ], [ %call152, %cond.false150 ], !dbg !20834
  %and155 = and i32 %cond154, 0, !dbg !20834
  %125 = load i32, i32* %_v, align 4, !dbg !20834
  %shl156 = shl i32 %125, 0, !dbg !20834
  %or157 = or i32 %and155, %shl156, !dbg !20834
  %call158 = call i32 @__fswab32(i32 %or157) #10, !dbg !20834
  br label %cond.end159, !dbg !20834

cond.end159:                                      ; preds = %cond.end153, %cond.end124
  %cond160 = phi i32 [ %or131, %cond.end124 ], [ %call158, %cond.end153 ], !dbg !20834
  %126 = load i8*, i8** %misc, align 8, !dbg !20834
  %127 = bitcast i8* %126 to i32*, !dbg !20834
  %add.ptr161 = getelementptr i32, i32* %127, i64 11, !dbg !20834
  store i32 %cond160, i32* %add.ptr161, align 4, !dbg !20834
  br label %do.end162, !dbg !20834

do.end162:                                        ; preds = %cond.end159
  br label %if.end, !dbg !20837

if.else:                                          ; preds = %entry
  %128 = load %struct.mlx5_flow_spec*, %struct.mlx5_flow_spec** %spec.addr, align 8, !dbg !20838
  %match_value163 = getelementptr inbounds %struct.mlx5_flow_spec, %struct.mlx5_flow_spec* %128, i32 0, i32 2, !dbg !20838
  %arraydecay164 = getelementptr inbounds [128 x i32], [128 x i32]* %match_value163, i64 0, i64 0, !dbg !20838
  %129 = bitcast i32* %arraydecay164 to i8*, !dbg !20838
  %add.ptr165 = getelementptr i8, i8* %129, i64 64, !dbg !20838
  store i8* %add.ptr165, i8** %misc, align 8, !dbg !20840
  br label %do.body166, !dbg !20841

do.body166:                                       ; preds = %if.else
  call void @llvm.dbg.declare(metadata i32* %_v167, metadata !20842, metadata !DIExpression()), !dbg !20844
  %130 = load i16, i16* %vport.addr, align 2, !dbg !20844
  %conv = zext i16 %130 to i32, !dbg !20844
  store i32 %conv, i32* %_v167, align 4, !dbg !20844
  br label %do.body168, !dbg !20844

do.body168:                                       ; preds = %do.body166
  br label %do.end169, !dbg !20845

do.end169:                                        ; preds = %do.body168
  %131 = load i8*, i8** %misc, align 8, !dbg !20844
  %132 = bitcast i8* %131 to i32*, !dbg !20844
  %add.ptr170 = getelementptr i32, i32* %132, i64 1, !dbg !20844
  %133 = load i32, i32* %add.ptr170, align 4, !dbg !20844
  %134 = call i1 @llvm.is.constant.i32(i32 %133), !dbg !20844
  br i1 %134, label %cond.true171, label %cond.false187, !dbg !20844

cond.true171:                                     ; preds = %do.end169
  %135 = load i8*, i8** %misc, align 8, !dbg !20844
  %136 = bitcast i8* %135 to i32*, !dbg !20844
  %add.ptr172 = getelementptr i32, i32* %136, i64 1, !dbg !20844
  %137 = load i32, i32* %add.ptr172, align 4, !dbg !20844
  %and173 = and i32 %137, 255, !dbg !20844
  %shl174 = shl i32 %and173, 24, !dbg !20844
  %138 = load i8*, i8** %misc, align 8, !dbg !20844
  %139 = bitcast i8* %138 to i32*, !dbg !20844
  %add.ptr175 = getelementptr i32, i32* %139, i64 1, !dbg !20844
  %140 = load i32, i32* %add.ptr175, align 4, !dbg !20844
  %and176 = and i32 %140, 65280, !dbg !20844
  %shl177 = shl i32 %and176, 8, !dbg !20844
  %or178 = or i32 %shl174, %shl177, !dbg !20844
  %141 = load i8*, i8** %misc, align 8, !dbg !20844
  %142 = bitcast i8* %141 to i32*, !dbg !20844
  %add.ptr179 = getelementptr i32, i32* %142, i64 1, !dbg !20844
  %143 = load i32, i32* %add.ptr179, align 4, !dbg !20844
  %and180 = and i32 %143, 16711680, !dbg !20844
  %shr181 = lshr i32 %and180, 8, !dbg !20844
  %or182 = or i32 %or178, %shr181, !dbg !20844
  %144 = load i8*, i8** %misc, align 8, !dbg !20844
  %145 = bitcast i8* %144 to i32*, !dbg !20844
  %add.ptr183 = getelementptr i32, i32* %145, i64 1, !dbg !20844
  %146 = load i32, i32* %add.ptr183, align 4, !dbg !20844
  %and184 = and i32 %146, -16777216, !dbg !20844
  %shr185 = lshr i32 %and184, 24, !dbg !20844
  %or186 = or i32 %or182, %shr185, !dbg !20844
  br label %cond.end190, !dbg !20844

cond.false187:                                    ; preds = %do.end169
  %147 = load i8*, i8** %misc, align 8, !dbg !20844
  %148 = bitcast i8* %147 to i32*, !dbg !20844
  %add.ptr188 = getelementptr i32, i32* %148, i64 1, !dbg !20844
  %149 = load i32, i32* %add.ptr188, align 4, !dbg !20844
  %call189 = call i32 @__fswab32(i32 %149) #10, !dbg !20844
  br label %cond.end190, !dbg !20844

cond.end190:                                      ; preds = %cond.false187, %cond.true171
  %cond191 = phi i32 [ %or186, %cond.true171 ], [ %call189, %cond.false187 ], !dbg !20844
  %and192 = and i32 %cond191, -65536, !dbg !20844
  %150 = load i32, i32* %_v167, align 4, !dbg !20844
  %and193 = and i32 %150, 65535, !dbg !20844
  %shl194 = shl i32 %and193, 0, !dbg !20844
  %or195 = or i32 %and192, %shl194, !dbg !20844
  %151 = call i1 @llvm.is.constant.i32(i32 %or195), !dbg !20844
  br i1 %151, label %cond.true196, label %cond.false312, !dbg !20844

cond.true196:                                     ; preds = %cond.end190
  %152 = load i8*, i8** %misc, align 8, !dbg !20844
  %153 = bitcast i8* %152 to i32*, !dbg !20844
  %add.ptr197 = getelementptr i32, i32* %153, i64 1, !dbg !20844
  %154 = load i32, i32* %add.ptr197, align 4, !dbg !20844
  %155 = call i1 @llvm.is.constant.i32(i32 %154), !dbg !20844
  br i1 %155, label %cond.true198, label %cond.false214, !dbg !20844

cond.true198:                                     ; preds = %cond.true196
  %156 = load i8*, i8** %misc, align 8, !dbg !20844
  %157 = bitcast i8* %156 to i32*, !dbg !20844
  %add.ptr199 = getelementptr i32, i32* %157, i64 1, !dbg !20844
  %158 = load i32, i32* %add.ptr199, align 4, !dbg !20844
  %and200 = and i32 %158, 255, !dbg !20844
  %shl201 = shl i32 %and200, 24, !dbg !20844
  %159 = load i8*, i8** %misc, align 8, !dbg !20844
  %160 = bitcast i8* %159 to i32*, !dbg !20844
  %add.ptr202 = getelementptr i32, i32* %160, i64 1, !dbg !20844
  %161 = load i32, i32* %add.ptr202, align 4, !dbg !20844
  %and203 = and i32 %161, 65280, !dbg !20844
  %shl204 = shl i32 %and203, 8, !dbg !20844
  %or205 = or i32 %shl201, %shl204, !dbg !20844
  %162 = load i8*, i8** %misc, align 8, !dbg !20844
  %163 = bitcast i8* %162 to i32*, !dbg !20844
  %add.ptr206 = getelementptr i32, i32* %163, i64 1, !dbg !20844
  %164 = load i32, i32* %add.ptr206, align 4, !dbg !20844
  %and207 = and i32 %164, 16711680, !dbg !20844
  %shr208 = lshr i32 %and207, 8, !dbg !20844
  %or209 = or i32 %or205, %shr208, !dbg !20844
  %165 = load i8*, i8** %misc, align 8, !dbg !20844
  %166 = bitcast i8* %165 to i32*, !dbg !20844
  %add.ptr210 = getelementptr i32, i32* %166, i64 1, !dbg !20844
  %167 = load i32, i32* %add.ptr210, align 4, !dbg !20844
  %and211 = and i32 %167, -16777216, !dbg !20844
  %shr212 = lshr i32 %and211, 24, !dbg !20844
  %or213 = or i32 %or209, %shr212, !dbg !20844
  br label %cond.end217, !dbg !20844

cond.false214:                                    ; preds = %cond.true196
  %168 = load i8*, i8** %misc, align 8, !dbg !20844
  %169 = bitcast i8* %168 to i32*, !dbg !20844
  %add.ptr215 = getelementptr i32, i32* %169, i64 1, !dbg !20844
  %170 = load i32, i32* %add.ptr215, align 4, !dbg !20844
  %call216 = call i32 @__fswab32(i32 %170) #10, !dbg !20844
  br label %cond.end217, !dbg !20844

cond.end217:                                      ; preds = %cond.false214, %cond.true198
  %cond218 = phi i32 [ %or213, %cond.true198 ], [ %call216, %cond.false214 ], !dbg !20844
  %and219 = and i32 %cond218, -65536, !dbg !20844
  %171 = load i32, i32* %_v167, align 4, !dbg !20844
  %and220 = and i32 %171, 65535, !dbg !20844
  %shl221 = shl i32 %and220, 0, !dbg !20844
  %or222 = or i32 %and219, %shl221, !dbg !20844
  %and223 = and i32 %or222, 255, !dbg !20844
  %shl224 = shl i32 %and223, 24, !dbg !20844
  %172 = load i8*, i8** %misc, align 8, !dbg !20844
  %173 = bitcast i8* %172 to i32*, !dbg !20844
  %add.ptr225 = getelementptr i32, i32* %173, i64 1, !dbg !20844
  %174 = load i32, i32* %add.ptr225, align 4, !dbg !20844
  %175 = call i1 @llvm.is.constant.i32(i32 %174), !dbg !20844
  br i1 %175, label %cond.true226, label %cond.false242, !dbg !20844

cond.true226:                                     ; preds = %cond.end217
  %176 = load i8*, i8** %misc, align 8, !dbg !20844
  %177 = bitcast i8* %176 to i32*, !dbg !20844
  %add.ptr227 = getelementptr i32, i32* %177, i64 1, !dbg !20844
  %178 = load i32, i32* %add.ptr227, align 4, !dbg !20844
  %and228 = and i32 %178, 255, !dbg !20844
  %shl229 = shl i32 %and228, 24, !dbg !20844
  %179 = load i8*, i8** %misc, align 8, !dbg !20844
  %180 = bitcast i8* %179 to i32*, !dbg !20844
  %add.ptr230 = getelementptr i32, i32* %180, i64 1, !dbg !20844
  %181 = load i32, i32* %add.ptr230, align 4, !dbg !20844
  %and231 = and i32 %181, 65280, !dbg !20844
  %shl232 = shl i32 %and231, 8, !dbg !20844
  %or233 = or i32 %shl229, %shl232, !dbg !20844
  %182 = load i8*, i8** %misc, align 8, !dbg !20844
  %183 = bitcast i8* %182 to i32*, !dbg !20844
  %add.ptr234 = getelementptr i32, i32* %183, i64 1, !dbg !20844
  %184 = load i32, i32* %add.ptr234, align 4, !dbg !20844
  %and235 = and i32 %184, 16711680, !dbg !20844
  %shr236 = lshr i32 %and235, 8, !dbg !20844
  %or237 = or i32 %or233, %shr236, !dbg !20844
  %185 = load i8*, i8** %misc, align 8, !dbg !20844
  %186 = bitcast i8* %185 to i32*, !dbg !20844
  %add.ptr238 = getelementptr i32, i32* %186, i64 1, !dbg !20844
  %187 = load i32, i32* %add.ptr238, align 4, !dbg !20844
  %and239 = and i32 %187, -16777216, !dbg !20844
  %shr240 = lshr i32 %and239, 24, !dbg !20844
  %or241 = or i32 %or237, %shr240, !dbg !20844
  br label %cond.end245, !dbg !20844

cond.false242:                                    ; preds = %cond.end217
  %188 = load i8*, i8** %misc, align 8, !dbg !20844
  %189 = bitcast i8* %188 to i32*, !dbg !20844
  %add.ptr243 = getelementptr i32, i32* %189, i64 1, !dbg !20844
  %190 = load i32, i32* %add.ptr243, align 4, !dbg !20844
  %call244 = call i32 @__fswab32(i32 %190) #10, !dbg !20844
  br label %cond.end245, !dbg !20844

cond.end245:                                      ; preds = %cond.false242, %cond.true226
  %cond246 = phi i32 [ %or241, %cond.true226 ], [ %call244, %cond.false242 ], !dbg !20844
  %and247 = and i32 %cond246, -65536, !dbg !20844
  %191 = load i32, i32* %_v167, align 4, !dbg !20844
  %and248 = and i32 %191, 65535, !dbg !20844
  %shl249 = shl i32 %and248, 0, !dbg !20844
  %or250 = or i32 %and247, %shl249, !dbg !20844
  %and251 = and i32 %or250, 65280, !dbg !20844
  %shl252 = shl i32 %and251, 8, !dbg !20844
  %or253 = or i32 %shl224, %shl252, !dbg !20844
  %192 = load i8*, i8** %misc, align 8, !dbg !20844
  %193 = bitcast i8* %192 to i32*, !dbg !20844
  %add.ptr254 = getelementptr i32, i32* %193, i64 1, !dbg !20844
  %194 = load i32, i32* %add.ptr254, align 4, !dbg !20844
  %195 = call i1 @llvm.is.constant.i32(i32 %194), !dbg !20844
  br i1 %195, label %cond.true255, label %cond.false271, !dbg !20844

cond.true255:                                     ; preds = %cond.end245
  %196 = load i8*, i8** %misc, align 8, !dbg !20844
  %197 = bitcast i8* %196 to i32*, !dbg !20844
  %add.ptr256 = getelementptr i32, i32* %197, i64 1, !dbg !20844
  %198 = load i32, i32* %add.ptr256, align 4, !dbg !20844
  %and257 = and i32 %198, 255, !dbg !20844
  %shl258 = shl i32 %and257, 24, !dbg !20844
  %199 = load i8*, i8** %misc, align 8, !dbg !20844
  %200 = bitcast i8* %199 to i32*, !dbg !20844
  %add.ptr259 = getelementptr i32, i32* %200, i64 1, !dbg !20844
  %201 = load i32, i32* %add.ptr259, align 4, !dbg !20844
  %and260 = and i32 %201, 65280, !dbg !20844
  %shl261 = shl i32 %and260, 8, !dbg !20844
  %or262 = or i32 %shl258, %shl261, !dbg !20844
  %202 = load i8*, i8** %misc, align 8, !dbg !20844
  %203 = bitcast i8* %202 to i32*, !dbg !20844
  %add.ptr263 = getelementptr i32, i32* %203, i64 1, !dbg !20844
  %204 = load i32, i32* %add.ptr263, align 4, !dbg !20844
  %and264 = and i32 %204, 16711680, !dbg !20844
  %shr265 = lshr i32 %and264, 8, !dbg !20844
  %or266 = or i32 %or262, %shr265, !dbg !20844
  %205 = load i8*, i8** %misc, align 8, !dbg !20844
  %206 = bitcast i8* %205 to i32*, !dbg !20844
  %add.ptr267 = getelementptr i32, i32* %206, i64 1, !dbg !20844
  %207 = load i32, i32* %add.ptr267, align 4, !dbg !20844
  %and268 = and i32 %207, -16777216, !dbg !20844
  %shr269 = lshr i32 %and268, 24, !dbg !20844
  %or270 = or i32 %or266, %shr269, !dbg !20844
  br label %cond.end274, !dbg !20844

cond.false271:                                    ; preds = %cond.end245
  %208 = load i8*, i8** %misc, align 8, !dbg !20844
  %209 = bitcast i8* %208 to i32*, !dbg !20844
  %add.ptr272 = getelementptr i32, i32* %209, i64 1, !dbg !20844
  %210 = load i32, i32* %add.ptr272, align 4, !dbg !20844
  %call273 = call i32 @__fswab32(i32 %210) #10, !dbg !20844
  br label %cond.end274, !dbg !20844

cond.end274:                                      ; preds = %cond.false271, %cond.true255
  %cond275 = phi i32 [ %or270, %cond.true255 ], [ %call273, %cond.false271 ], !dbg !20844
  %and276 = and i32 %cond275, -65536, !dbg !20844
  %211 = load i32, i32* %_v167, align 4, !dbg !20844
  %and277 = and i32 %211, 65535, !dbg !20844
  %shl278 = shl i32 %and277, 0, !dbg !20844
  %or279 = or i32 %and276, %shl278, !dbg !20844
  %and280 = and i32 %or279, 16711680, !dbg !20844
  %shr281 = lshr i32 %and280, 8, !dbg !20844
  %or282 = or i32 %or253, %shr281, !dbg !20844
  %212 = load i8*, i8** %misc, align 8, !dbg !20844
  %213 = bitcast i8* %212 to i32*, !dbg !20844
  %add.ptr283 = getelementptr i32, i32* %213, i64 1, !dbg !20844
  %214 = load i32, i32* %add.ptr283, align 4, !dbg !20844
  %215 = call i1 @llvm.is.constant.i32(i32 %214), !dbg !20844
  br i1 %215, label %cond.true284, label %cond.false300, !dbg !20844

cond.true284:                                     ; preds = %cond.end274
  %216 = load i8*, i8** %misc, align 8, !dbg !20844
  %217 = bitcast i8* %216 to i32*, !dbg !20844
  %add.ptr285 = getelementptr i32, i32* %217, i64 1, !dbg !20844
  %218 = load i32, i32* %add.ptr285, align 4, !dbg !20844
  %and286 = and i32 %218, 255, !dbg !20844
  %shl287 = shl i32 %and286, 24, !dbg !20844
  %219 = load i8*, i8** %misc, align 8, !dbg !20844
  %220 = bitcast i8* %219 to i32*, !dbg !20844
  %add.ptr288 = getelementptr i32, i32* %220, i64 1, !dbg !20844
  %221 = load i32, i32* %add.ptr288, align 4, !dbg !20844
  %and289 = and i32 %221, 65280, !dbg !20844
  %shl290 = shl i32 %and289, 8, !dbg !20844
  %or291 = or i32 %shl287, %shl290, !dbg !20844
  %222 = load i8*, i8** %misc, align 8, !dbg !20844
  %223 = bitcast i8* %222 to i32*, !dbg !20844
  %add.ptr292 = getelementptr i32, i32* %223, i64 1, !dbg !20844
  %224 = load i32, i32* %add.ptr292, align 4, !dbg !20844
  %and293 = and i32 %224, 16711680, !dbg !20844
  %shr294 = lshr i32 %and293, 8, !dbg !20844
  %or295 = or i32 %or291, %shr294, !dbg !20844
  %225 = load i8*, i8** %misc, align 8, !dbg !20844
  %226 = bitcast i8* %225 to i32*, !dbg !20844
  %add.ptr296 = getelementptr i32, i32* %226, i64 1, !dbg !20844
  %227 = load i32, i32* %add.ptr296, align 4, !dbg !20844
  %and297 = and i32 %227, -16777216, !dbg !20844
  %shr298 = lshr i32 %and297, 24, !dbg !20844
  %or299 = or i32 %or295, %shr298, !dbg !20844
  br label %cond.end303, !dbg !20844

cond.false300:                                    ; preds = %cond.end274
  %228 = load i8*, i8** %misc, align 8, !dbg !20844
  %229 = bitcast i8* %228 to i32*, !dbg !20844
  %add.ptr301 = getelementptr i32, i32* %229, i64 1, !dbg !20844
  %230 = load i32, i32* %add.ptr301, align 4, !dbg !20844
  %call302 = call i32 @__fswab32(i32 %230) #10, !dbg !20844
  br label %cond.end303, !dbg !20844

cond.end303:                                      ; preds = %cond.false300, %cond.true284
  %cond304 = phi i32 [ %or299, %cond.true284 ], [ %call302, %cond.false300 ], !dbg !20844
  %and305 = and i32 %cond304, -65536, !dbg !20844
  %231 = load i32, i32* %_v167, align 4, !dbg !20844
  %and306 = and i32 %231, 65535, !dbg !20844
  %shl307 = shl i32 %and306, 0, !dbg !20844
  %or308 = or i32 %and305, %shl307, !dbg !20844
  %and309 = and i32 %or308, -16777216, !dbg !20844
  %shr310 = lshr i32 %and309, 24, !dbg !20844
  %or311 = or i32 %or282, %shr310, !dbg !20844
  br label %cond.end340, !dbg !20844

cond.false312:                                    ; preds = %cond.end190
  %232 = load i8*, i8** %misc, align 8, !dbg !20844
  %233 = bitcast i8* %232 to i32*, !dbg !20844
  %add.ptr313 = getelementptr i32, i32* %233, i64 1, !dbg !20844
  %234 = load i32, i32* %add.ptr313, align 4, !dbg !20844
  %235 = call i1 @llvm.is.constant.i32(i32 %234), !dbg !20844
  br i1 %235, label %cond.true314, label %cond.false330, !dbg !20844

cond.true314:                                     ; preds = %cond.false312
  %236 = load i8*, i8** %misc, align 8, !dbg !20844
  %237 = bitcast i8* %236 to i32*, !dbg !20844
  %add.ptr315 = getelementptr i32, i32* %237, i64 1, !dbg !20844
  %238 = load i32, i32* %add.ptr315, align 4, !dbg !20844
  %and316 = and i32 %238, 255, !dbg !20844
  %shl317 = shl i32 %and316, 24, !dbg !20844
  %239 = load i8*, i8** %misc, align 8, !dbg !20844
  %240 = bitcast i8* %239 to i32*, !dbg !20844
  %add.ptr318 = getelementptr i32, i32* %240, i64 1, !dbg !20844
  %241 = load i32, i32* %add.ptr318, align 4, !dbg !20844
  %and319 = and i32 %241, 65280, !dbg !20844
  %shl320 = shl i32 %and319, 8, !dbg !20844
  %or321 = or i32 %shl317, %shl320, !dbg !20844
  %242 = load i8*, i8** %misc, align 8, !dbg !20844
  %243 = bitcast i8* %242 to i32*, !dbg !20844
  %add.ptr322 = getelementptr i32, i32* %243, i64 1, !dbg !20844
  %244 = load i32, i32* %add.ptr322, align 4, !dbg !20844
  %and323 = and i32 %244, 16711680, !dbg !20844
  %shr324 = lshr i32 %and323, 8, !dbg !20844
  %or325 = or i32 %or321, %shr324, !dbg !20844
  %245 = load i8*, i8** %misc, align 8, !dbg !20844
  %246 = bitcast i8* %245 to i32*, !dbg !20844
  %add.ptr326 = getelementptr i32, i32* %246, i64 1, !dbg !20844
  %247 = load i32, i32* %add.ptr326, align 4, !dbg !20844
  %and327 = and i32 %247, -16777216, !dbg !20844
  %shr328 = lshr i32 %and327, 24, !dbg !20844
  %or329 = or i32 %or325, %shr328, !dbg !20844
  br label %cond.end333, !dbg !20844

cond.false330:                                    ; preds = %cond.false312
  %248 = load i8*, i8** %misc, align 8, !dbg !20844
  %249 = bitcast i8* %248 to i32*, !dbg !20844
  %add.ptr331 = getelementptr i32, i32* %249, i64 1, !dbg !20844
  %250 = load i32, i32* %add.ptr331, align 4, !dbg !20844
  %call332 = call i32 @__fswab32(i32 %250) #10, !dbg !20844
  br label %cond.end333, !dbg !20844

cond.end333:                                      ; preds = %cond.false330, %cond.true314
  %cond334 = phi i32 [ %or329, %cond.true314 ], [ %call332, %cond.false330 ], !dbg !20844
  %and335 = and i32 %cond334, -65536, !dbg !20844
  %251 = load i32, i32* %_v167, align 4, !dbg !20844
  %and336 = and i32 %251, 65535, !dbg !20844
  %shl337 = shl i32 %and336, 0, !dbg !20844
  %or338 = or i32 %and335, %shl337, !dbg !20844
  %call339 = call i32 @__fswab32(i32 %or338) #10, !dbg !20844
  br label %cond.end340, !dbg !20844

cond.end340:                                      ; preds = %cond.end333, %cond.end303
  %cond341 = phi i32 [ %or311, %cond.end303 ], [ %call339, %cond.end333 ], !dbg !20844
  %252 = load i8*, i8** %misc, align 8, !dbg !20844
  %253 = bitcast i8* %252 to i32*, !dbg !20844
  %add.ptr342 = getelementptr i32, i32* %253, i64 1, !dbg !20844
  store i32 %cond341, i32* %add.ptr342, align 4, !dbg !20844
  br label %do.end343, !dbg !20844

do.end343:                                        ; preds = %cond.end340
  br label %if.end

if.end:                                           ; preds = %do.end343, %do.end162
  ret void, !dbg !20847
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @mlx5_core_max_vfs(%struct.mlx5_core_dev* %dev) #0 !dbg !20848 {
entry:
  %dev.addr = alloca %struct.mlx5_core_dev*, align 8
  store %struct.mlx5_core_dev* %dev, %struct.mlx5_core_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_core_dev** %dev.addr, metadata !20851, metadata !DIExpression()), !dbg !20852
  %0 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !20853
  %priv = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %0, i32 0, i32 17, !dbg !20854
  %sriov = getelementptr inbounds %struct.mlx5_priv, %struct.mlx5_priv* %priv, i32 0, i32 27, !dbg !20855
  %max_vfs = getelementptr inbounds %struct.mlx5_core_sriov, %struct.mlx5_core_sriov* %sriov, i32 0, i32 2, !dbg !20856
  %1 = load i16, i16* %max_vfs, align 4, !dbg !20856
  ret i16 %1, !dbg !20857
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @esw_del_fdb_peer_miss_rules(%struct.mlx5_eswitch* %esw) #0 !dbg !20858 {
entry:
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  %flows = alloca %struct.mlx5_flow_handle**, align 8
  %i = alloca i32, align 4
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !20859, metadata !DIExpression()), !dbg !20860
  call void @llvm.dbg.declare(metadata %struct.mlx5_flow_handle*** %flows, metadata !20861, metadata !DIExpression()), !dbg !20862
  call void @llvm.dbg.declare(metadata i32* %i, metadata !20863, metadata !DIExpression()), !dbg !20864
  %0 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !20865
  %fdb_table = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %0, i32 0, i32 2, !dbg !20866
  %1 = getelementptr inbounds %struct.mlx5_eswitch_fdb, %struct.mlx5_eswitch_fdb* %fdb_table, i32 0, i32 0, !dbg !20867
  %offloads = bitcast %union.anon.154* %1 to %struct.offloads_fdb*, !dbg !20867
  %peer_miss_rules = getelementptr inbounds %struct.offloads_fdb, %struct.offloads_fdb* %offloads, i32 0, i32 4, !dbg !20868
  %2 = load %struct.mlx5_flow_handle**, %struct.mlx5_flow_handle*** %peer_miss_rules, align 8, !dbg !20868
  store %struct.mlx5_flow_handle** %2, %struct.mlx5_flow_handle*** %flows, align 8, !dbg !20869
  %3 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !20870
  %dev = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %3, i32 0, i32 0, !dbg !20870
  %4 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !20870
  %call = call zeroext i16 @mlx5_core_max_vfs(%struct.mlx5_core_dev* %4) #8, !dbg !20870
  %conv = zext i16 %call to i32, !dbg !20870
  store i32 %conv, i32* %i, align 4, !dbg !20870
  br label %for.cond, !dbg !20870

for.cond:                                         ; preds = %for.inc, %entry
  %5 = load i32, i32* %i, align 4, !dbg !20872
  %cmp = icmp sge i32 %5, 1, !dbg !20872
  br i1 %cmp, label %for.body, label %for.end, !dbg !20870

for.body:                                         ; preds = %for.cond
  %6 = load %struct.mlx5_flow_handle**, %struct.mlx5_flow_handle*** %flows, align 8, !dbg !20874
  %7 = load i32, i32* %i, align 4, !dbg !20875
  %idxprom = sext i32 %7 to i64, !dbg !20874
  %arrayidx = getelementptr %struct.mlx5_flow_handle*, %struct.mlx5_flow_handle** %6, i64 %idxprom, !dbg !20874
  %8 = load %struct.mlx5_flow_handle*, %struct.mlx5_flow_handle** %arrayidx, align 8, !dbg !20874
  call void @mlx5_del_flow_rules(%struct.mlx5_flow_handle* %8) #8, !dbg !20876
  br label %for.inc, !dbg !20876

for.inc:                                          ; preds = %for.body
  %9 = load i32, i32* %i, align 4, !dbg !20872
  %dec = add i32 %9, -1, !dbg !20872
  store i32 %dec, i32* %i, align 4, !dbg !20872
  br label %for.cond, !dbg !20872, !llvm.loop !20877

for.end:                                          ; preds = %for.cond
  %10 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !20879
  %dev2 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %10, i32 0, i32 0, !dbg !20881
  %11 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev2, align 8, !dbg !20881
  %call3 = call zeroext i1 @mlx5_ecpf_vport_exists(%struct.mlx5_core_dev* %11) #8, !dbg !20882
  br i1 %call3, label %if.then, label %if.end, !dbg !20883

if.then:                                          ; preds = %for.end
  %12 = load %struct.mlx5_flow_handle**, %struct.mlx5_flow_handle*** %flows, align 8, !dbg !20884
  %13 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !20885
  %call4 = call i32 @mlx5_eswitch_ecpf_idx(%struct.mlx5_eswitch* %13) #8, !dbg !20886
  %idxprom5 = sext i32 %call4 to i64, !dbg !20884
  %arrayidx6 = getelementptr %struct.mlx5_flow_handle*, %struct.mlx5_flow_handle** %12, i64 %idxprom5, !dbg !20884
  %14 = load %struct.mlx5_flow_handle*, %struct.mlx5_flow_handle** %arrayidx6, align 8, !dbg !20884
  call void @mlx5_del_flow_rules(%struct.mlx5_flow_handle* %14) #8, !dbg !20887
  br label %if.end, !dbg !20887

if.end:                                           ; preds = %if.then, %for.end
  %15 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !20888
  %dev7 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %15, i32 0, i32 0, !dbg !20890
  %16 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev7, align 8, !dbg !20890
  %call8 = call zeroext i1 @mlx5_core_is_ecpf_esw_manager(%struct.mlx5_core_dev* %16) #8, !dbg !20891
  br i1 %call8, label %if.then9, label %if.end11, !dbg !20892

if.then9:                                         ; preds = %if.end
  %17 = load %struct.mlx5_flow_handle**, %struct.mlx5_flow_handle*** %flows, align 8, !dbg !20893
  %arrayidx10 = getelementptr %struct.mlx5_flow_handle*, %struct.mlx5_flow_handle** %17, i64 0, !dbg !20893
  %18 = load %struct.mlx5_flow_handle*, %struct.mlx5_flow_handle** %arrayidx10, align 8, !dbg !20893
  call void @mlx5_del_flow_rules(%struct.mlx5_flow_handle* %18) #8, !dbg !20894
  br label %if.end11, !dbg !20894

if.end11:                                         ; preds = %if.then9, %if.end
  %19 = load %struct.mlx5_flow_handle**, %struct.mlx5_flow_handle*** %flows, align 8, !dbg !20895
  %20 = bitcast %struct.mlx5_flow_handle** %19 to i8*, !dbg !20895
  call void @kvfree(i8* %20) #8, !dbg !20896
  ret void, !dbg !20897
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @esw_destroy_vport_rx_group(%struct.mlx5_eswitch* %esw) #0 !dbg !20898 {
entry:
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !20899, metadata !DIExpression()), !dbg !20900
  %0 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !20901
  %offloads = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %0, i32 0, i32 13, !dbg !20902
  %vport_rx_group = getelementptr inbounds %struct.mlx5_esw_offload, %struct.mlx5_esw_offload* %offloads, i32 0, i32 4, !dbg !20903
  %1 = load %struct.mlx5_flow_group*, %struct.mlx5_flow_group** %vport_rx_group, align 8, !dbg !20903
  call void @mlx5_destroy_flow_group(%struct.mlx5_flow_group* %1) #8, !dbg !20904
  ret void, !dbg !20905
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @esw_offloads_vport_metadata_cleanup(%struct.mlx5_eswitch* %esw, %struct.mlx5_vport* %vport) #0 !dbg !20906 {
entry:
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  %vport.addr = alloca %struct.mlx5_vport*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !20907, metadata !DIExpression()), !dbg !20908
  store %struct.mlx5_vport* %vport, %struct.mlx5_vport** %vport.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_vport** %vport.addr, metadata !20909, metadata !DIExpression()), !dbg !20910
  %0 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport.addr, align 8, !dbg !20911
  %default_metadata = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %0, i32 0, i32 9, !dbg !20913
  %1 = load i32, i32* %default_metadata, align 8, !dbg !20913
  %tobool = icmp ne i32 %1, 0, !dbg !20911
  br i1 %tobool, label %if.end, label %if.then, !dbg !20914

if.then:                                          ; preds = %entry
  br label %return, !dbg !20915

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !20916, metadata !DIExpression()), !dbg !20918
  %2 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport.addr, align 8, !dbg !20918
  %metadata = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %2, i32 0, i32 10, !dbg !20918
  %3 = load i32, i32* %metadata, align 4, !dbg !20918
  %4 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport.addr, align 8, !dbg !20918
  %default_metadata1 = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %4, i32 0, i32 9, !dbg !20918
  %5 = load i32, i32* %default_metadata1, align 8, !dbg !20918
  %cmp = icmp ne i32 %3, %5, !dbg !20918
  %lnot = xor i1 %cmp, true, !dbg !20918
  %lnot2 = xor i1 %lnot, true, !dbg !20918
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !20918
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !20918
  %6 = load i32, i32* %__ret_warn_on, align 4, !dbg !20919
  %tobool3 = icmp ne i32 %6, 0, !dbg !20919
  %lnot4 = xor i1 %tobool3, true, !dbg !20919
  %lnot6 = xor i1 %lnot4, true, !dbg !20919
  %lnot.ext7 = zext i1 %lnot6 to i32, !dbg !20919
  %conv = sext i32 %lnot.ext7 to i64, !dbg !20919
  %tobool8 = icmp ne i64 %conv, 0, !dbg !20919
  br i1 %tobool8, label %if.then9, label %if.end16, !dbg !20918

if.then9:                                         ; preds = %if.end
  br label %do.body, !dbg !20919

do.body:                                          ; preds = %if.then9
  br label %do.body10, !dbg !20921

do.body10:                                        ; preds = %do.body
  br label %do.end, !dbg !20923

do.end:                                           ; preds = %do.body10
  br label %do.body11, !dbg !20921

do.body11:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.7, i64 0, i64 0), i32 2090, i32 2305, i64 12) #12, !dbg !20925, !srcloc !20927
  br label %do.end12, !dbg !20925

do.end12:                                         ; preds = %do.body11
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 720) #12, !dbg !20928, !srcloc !20930
  br label %do.body13, !dbg !20921

do.body13:                                        ; preds = %do.end12
  br label %do.end14, !dbg !20931

do.end14:                                         ; preds = %do.body13
  br label %do.end15, !dbg !20921

do.end15:                                         ; preds = %do.end14
  br label %if.end16, !dbg !20921

if.end16:                                         ; preds = %do.end15, %if.end
  %7 = load i32, i32* %__ret_warn_on, align 4, !dbg !20918
  %tobool17 = icmp ne i32 %7, 0, !dbg !20918
  %lnot18 = xor i1 %tobool17, true, !dbg !20918
  %lnot20 = xor i1 %lnot18, true, !dbg !20918
  %lnot.ext21 = zext i1 %lnot20 to i32, !dbg !20918
  %conv22 = sext i32 %lnot.ext21 to i64, !dbg !20918
  store i64 %conv22, i64* %tmp, align 8, !dbg !20919
  %8 = load i64, i64* %tmp, align 8, !dbg !20918
  %9 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !20933
  %10 = load %struct.mlx5_vport*, %struct.mlx5_vport** %vport.addr, align 8, !dbg !20934
  %default_metadata23 = getelementptr inbounds %struct.mlx5_vport, %struct.mlx5_vport* %10, i32 0, i32 9, !dbg !20935
  %11 = load i32, i32* %default_metadata23, align 8, !dbg !20935
  call void @mlx5_esw_match_metadata_free(%struct.mlx5_eswitch* %9, i32 %11) #8, !dbg !20936
  br label %return, !dbg !20937

return:                                           ; preds = %if.end16, %if.then
  ret void, !dbg !20937
}

; Function Attrs: noredzone
declare dso_local void @mlx5_devcom_unregister_component(%struct.mlx5_devcom*, i32) #5

; Function Attrs: noredzone
declare dso_local void @mlx5_eswitch_disable_locked(%struct.mlx5_eswitch*, i1 zeroext) #5

; Function Attrs: noredzone
declare dso_local i32 @mlx5_eswitch_enable_locked(%struct.mlx5_eswitch*, i32, i32) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlx5_eswitch_inline_mode_get(%struct.mlx5_eswitch* %esw, i8* %mode) #0 !dbg !20938 {
entry:
  %retval = alloca i32, align 4
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  %mode.addr = alloca i8*, align 8
  %prev_mlx5_mode = alloca i8, align 1
  %mlx5_mode = alloca i8, align 1
  %dev = alloca %struct.mlx5_core_dev*, align 8
  %vport = alloca i32, align 4
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !20941, metadata !DIExpression()), !dbg !20942
  store i8* %mode, i8** %mode.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %mode.addr, metadata !20943, metadata !DIExpression()), !dbg !20944
  call void @llvm.dbg.declare(metadata i8* %prev_mlx5_mode, metadata !20945, metadata !DIExpression()), !dbg !20946
  call void @llvm.dbg.declare(metadata i8* %mlx5_mode, metadata !20947, metadata !DIExpression()), !dbg !20948
  store i8 1, i8* %mlx5_mode, align 1, !dbg !20948
  call void @llvm.dbg.declare(metadata %struct.mlx5_core_dev** %dev, metadata !20949, metadata !DIExpression()), !dbg !20950
  %0 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !20951
  %dev1 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %0, i32 0, i32 0, !dbg !20952
  %1 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev1, align 8, !dbg !20952
  store %struct.mlx5_core_dev* %1, %struct.mlx5_core_dev** %dev, align 8, !dbg !20950
  call void @llvm.dbg.declare(metadata i32* %vport, metadata !20953, metadata !DIExpression()), !dbg !20954
  %2 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !20955
  %caps = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %2, i32 0, i32 9, !dbg !20955
  %hca_cur = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps, i32 0, i32 0, !dbg !20955
  %arrayidx = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur, i64 0, i64 0, !dbg !20955
  %arraydecay = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx, i64 0, i64 0, !dbg !20955
  %add.ptr = getelementptr i32, i32* %arraydecay, i64 13, !dbg !20955
  %3 = load i32, i32* %add.ptr, align 4, !dbg !20955
  %4 = call i1 @llvm.is.constant.i32(i32 %3), !dbg !20955
  br i1 %4, label %cond.true, label %cond.false, !dbg !20955

cond.true:                                        ; preds = %entry
  %5 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !20955
  %caps2 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %5, i32 0, i32 9, !dbg !20955
  %hca_cur3 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps2, i32 0, i32 0, !dbg !20955
  %arrayidx4 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur3, i64 0, i64 0, !dbg !20955
  %arraydecay5 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx4, i64 0, i64 0, !dbg !20955
  %add.ptr6 = getelementptr i32, i32* %arraydecay5, i64 13, !dbg !20955
  %6 = load i32, i32* %add.ptr6, align 4, !dbg !20955
  %and = and i32 %6, 255, !dbg !20955
  %shl = shl i32 %and, 24, !dbg !20955
  %7 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !20955
  %caps7 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %7, i32 0, i32 9, !dbg !20955
  %hca_cur8 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps7, i32 0, i32 0, !dbg !20955
  %arrayidx9 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur8, i64 0, i64 0, !dbg !20955
  %arraydecay10 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx9, i64 0, i64 0, !dbg !20955
  %add.ptr11 = getelementptr i32, i32* %arraydecay10, i64 13, !dbg !20955
  %8 = load i32, i32* %add.ptr11, align 4, !dbg !20955
  %and12 = and i32 %8, 65280, !dbg !20955
  %shl13 = shl i32 %and12, 8, !dbg !20955
  %or = or i32 %shl, %shl13, !dbg !20955
  %9 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !20955
  %caps14 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %9, i32 0, i32 9, !dbg !20955
  %hca_cur15 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps14, i32 0, i32 0, !dbg !20955
  %arrayidx16 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur15, i64 0, i64 0, !dbg !20955
  %arraydecay17 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx16, i64 0, i64 0, !dbg !20955
  %add.ptr18 = getelementptr i32, i32* %arraydecay17, i64 13, !dbg !20955
  %10 = load i32, i32* %add.ptr18, align 4, !dbg !20955
  %and19 = and i32 %10, 16711680, !dbg !20955
  %shr = lshr i32 %and19, 8, !dbg !20955
  %or20 = or i32 %or, %shr, !dbg !20955
  %11 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !20955
  %caps21 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %11, i32 0, i32 9, !dbg !20955
  %hca_cur22 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps21, i32 0, i32 0, !dbg !20955
  %arrayidx23 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur22, i64 0, i64 0, !dbg !20955
  %arraydecay24 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx23, i64 0, i64 0, !dbg !20955
  %add.ptr25 = getelementptr i32, i32* %arraydecay24, i64 13, !dbg !20955
  %12 = load i32, i32* %add.ptr25, align 4, !dbg !20955
  %and26 = and i32 %12, -16777216, !dbg !20955
  %shr27 = lshr i32 %and26, 24, !dbg !20955
  %or28 = or i32 %or20, %shr27, !dbg !20955
  br label %cond.end, !dbg !20955

cond.false:                                       ; preds = %entry
  %13 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !20955
  %caps29 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %13, i32 0, i32 9, !dbg !20955
  %hca_cur30 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps29, i32 0, i32 0, !dbg !20955
  %arrayidx31 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur30, i64 0, i64 0, !dbg !20955
  %arraydecay32 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx31, i64 0, i64 0, !dbg !20955
  %add.ptr33 = getelementptr i32, i32* %arraydecay32, i64 13, !dbg !20955
  %14 = load i32, i32* %add.ptr33, align 4, !dbg !20955
  %call = call i32 @__fswab32(i32 %14) #10, !dbg !20955
  br label %cond.end, !dbg !20955

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %or28, %cond.true ], [ %call, %cond.false ], !dbg !20955
  %shr34 = lshr i32 %cond, 31, !dbg !20955
  %and35 = and i32 %shr34, 1, !dbg !20955
  %tobool = icmp ne i32 %and35, 0, !dbg !20955
  br i1 %tobool, label %if.end, label %if.then, !dbg !20957

if.then:                                          ; preds = %cond.end
  store i32 -95, i32* %retval, align 4, !dbg !20958
  br label %return, !dbg !20958

if.end:                                           ; preds = %cond.end
  %15 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !20959
  %mode36 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %15, i32 0, i32 14, !dbg !20961
  %16 = load i32, i32* %mode36, align 8, !dbg !20961
  %cmp = icmp eq i32 %16, 0, !dbg !20962
  br i1 %cmp, label %if.then37, label %if.end38, !dbg !20963

if.then37:                                        ; preds = %if.end
  store i32 -95, i32* %retval, align 4, !dbg !20964
  br label %return, !dbg !20964

if.end38:                                         ; preds = %if.end
  %17 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !20965
  %caps39 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %17, i32 0, i32 9, !dbg !20965
  %hca_cur40 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps39, i32 0, i32 0, !dbg !20965
  %arrayidx41 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur40, i64 0, i64 1, !dbg !20965
  %arraydecay42 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx41, i64 0, i64 0, !dbg !20965
  %add.ptr43 = getelementptr i32, i32* %arraydecay42, i64 0, !dbg !20965
  %18 = load i32, i32* %add.ptr43, align 4, !dbg !20965
  %19 = call i1 @llvm.is.constant.i32(i32 %18), !dbg !20965
  br i1 %19, label %cond.true44, label %cond.false76, !dbg !20965

cond.true44:                                      ; preds = %if.end38
  %20 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !20965
  %caps45 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %20, i32 0, i32 9, !dbg !20965
  %hca_cur46 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps45, i32 0, i32 0, !dbg !20965
  %arrayidx47 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur46, i64 0, i64 1, !dbg !20965
  %arraydecay48 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx47, i64 0, i64 0, !dbg !20965
  %add.ptr49 = getelementptr i32, i32* %arraydecay48, i64 0, !dbg !20965
  %21 = load i32, i32* %add.ptr49, align 4, !dbg !20965
  %and50 = and i32 %21, 255, !dbg !20965
  %shl51 = shl i32 %and50, 24, !dbg !20965
  %22 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !20965
  %caps52 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %22, i32 0, i32 9, !dbg !20965
  %hca_cur53 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps52, i32 0, i32 0, !dbg !20965
  %arrayidx54 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur53, i64 0, i64 1, !dbg !20965
  %arraydecay55 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx54, i64 0, i64 0, !dbg !20965
  %add.ptr56 = getelementptr i32, i32* %arraydecay55, i64 0, !dbg !20965
  %23 = load i32, i32* %add.ptr56, align 4, !dbg !20965
  %and57 = and i32 %23, 65280, !dbg !20965
  %shl58 = shl i32 %and57, 8, !dbg !20965
  %or59 = or i32 %shl51, %shl58, !dbg !20965
  %24 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !20965
  %caps60 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %24, i32 0, i32 9, !dbg !20965
  %hca_cur61 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps60, i32 0, i32 0, !dbg !20965
  %arrayidx62 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur61, i64 0, i64 1, !dbg !20965
  %arraydecay63 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx62, i64 0, i64 0, !dbg !20965
  %add.ptr64 = getelementptr i32, i32* %arraydecay63, i64 0, !dbg !20965
  %25 = load i32, i32* %add.ptr64, align 4, !dbg !20965
  %and65 = and i32 %25, 16711680, !dbg !20965
  %shr66 = lshr i32 %and65, 8, !dbg !20965
  %or67 = or i32 %or59, %shr66, !dbg !20965
  %26 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !20965
  %caps68 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %26, i32 0, i32 9, !dbg !20965
  %hca_cur69 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps68, i32 0, i32 0, !dbg !20965
  %arrayidx70 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur69, i64 0, i64 1, !dbg !20965
  %arraydecay71 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx70, i64 0, i64 0, !dbg !20965
  %add.ptr72 = getelementptr i32, i32* %arraydecay71, i64 0, !dbg !20965
  %27 = load i32, i32* %add.ptr72, align 4, !dbg !20965
  %and73 = and i32 %27, -16777216, !dbg !20965
  %shr74 = lshr i32 %and73, 24, !dbg !20965
  %or75 = or i32 %or67, %shr74, !dbg !20965
  br label %cond.end83, !dbg !20965

cond.false76:                                     ; preds = %if.end38
  %28 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !20965
  %caps77 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %28, i32 0, i32 9, !dbg !20965
  %hca_cur78 = getelementptr inbounds %struct.anon.144, %struct.anon.144* %caps77, i32 0, i32 0, !dbg !20965
  %arrayidx79 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur78, i64 0, i64 1, !dbg !20965
  %arraydecay80 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx79, i64 0, i64 0, !dbg !20965
  %add.ptr81 = getelementptr i32, i32* %arraydecay80, i64 0, !dbg !20965
  %29 = load i32, i32* %add.ptr81, align 4, !dbg !20965
  %call82 = call i32 @__fswab32(i32 %29) #10, !dbg !20965
  br label %cond.end83, !dbg !20965

cond.end83:                                       ; preds = %cond.false76, %cond.true44
  %cond84 = phi i32 [ %or75, %cond.true44 ], [ %call82, %cond.false76 ], !dbg !20965
  %shr85 = lshr i32 %cond84, 12, !dbg !20965
  %and86 = and i32 %shr85, 3, !dbg !20965
  switch i32 %and86, label %sw.epilog [
    i32 2, label %sw.bb
    i32 0, label %sw.bb87
    i32 1, label %sw.bb88
  ], !dbg !20966

sw.bb:                                            ; preds = %cond.end83
  store i8 0, i8* %mlx5_mode, align 1, !dbg !20967
  br label %out, !dbg !20969

sw.bb87:                                          ; preds = %cond.end83
  store i8 1, i8* %mlx5_mode, align 1, !dbg !20970
  br label %out, !dbg !20971

sw.bb88:                                          ; preds = %cond.end83
  br label %query_vports, !dbg !20972

sw.epilog:                                        ; preds = %cond.end83
  br label %query_vports, !dbg !20973

query_vports:                                     ; preds = %sw.epilog, %sw.bb88
  call void @llvm.dbg.label(metadata !20974), !dbg !20975
  %30 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !20976
  %31 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !20977
  %first_host_vport = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %31, i32 0, i32 16, !dbg !20978
  %32 = load i16, i16* %first_host_vport, align 2, !dbg !20978
  %call89 = call i32 @mlx5_query_nic_vport_min_inline(%struct.mlx5_core_dev* %30, i16 zeroext %32, i8* %prev_mlx5_mode) #8, !dbg !20979
  %33 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !20980
  %first_host_vport90 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %33, i32 0, i32 16, !dbg !20980
  %34 = load i16, i16* %first_host_vport90, align 2, !dbg !20980
  %conv = zext i16 %34 to i32, !dbg !20980
  store i32 %conv, i32* %vport, align 4, !dbg !20980
  br label %for.cond, !dbg !20980

for.cond:                                         ; preds = %for.inc, %query_vports
  %35 = load i32, i32* %vport, align 4, !dbg !20982
  %36 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !20982
  %esw_funcs = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %36, i32 0, i32 17, !dbg !20982
  %num_vfs = getelementptr inbounds %struct.mlx5_esw_functions, %struct.mlx5_esw_functions* %esw_funcs, i32 0, i32 1, !dbg !20982
  %37 = load i16, i16* %num_vfs, align 8, !dbg !20982
  %conv91 = zext i16 %37 to i32, !dbg !20982
  %cmp92 = icmp sle i32 %35, %conv91, !dbg !20982
  br i1 %cmp92, label %for.body, label %for.end, !dbg !20980

for.body:                                         ; preds = %for.cond
  %38 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !20984
  %39 = load i32, i32* %vport, align 4, !dbg !20986
  %conv94 = trunc i32 %39 to i16, !dbg !20986
  %call95 = call i32 @mlx5_query_nic_vport_min_inline(%struct.mlx5_core_dev* %38, i16 zeroext %conv94, i8* %mlx5_mode) #8, !dbg !20987
  %40 = load i8, i8* %prev_mlx5_mode, align 1, !dbg !20988
  %conv96 = zext i8 %40 to i32, !dbg !20988
  %41 = load i8, i8* %mlx5_mode, align 1, !dbg !20990
  %conv97 = zext i8 %41 to i32, !dbg !20990
  %cmp98 = icmp ne i32 %conv96, %conv97, !dbg !20991
  br i1 %cmp98, label %if.then100, label %if.end101, !dbg !20992

if.then100:                                       ; preds = %for.body
  store i32 -22, i32* %retval, align 4, !dbg !20993
  br label %return, !dbg !20993

if.end101:                                        ; preds = %for.body
  %42 = load i8, i8* %mlx5_mode, align 1, !dbg !20994
  store i8 %42, i8* %prev_mlx5_mode, align 1, !dbg !20995
  br label %for.inc, !dbg !20996

for.inc:                                          ; preds = %if.end101
  %43 = load i32, i32* %vport, align 4, !dbg !20982
  %inc = add i32 %43, 1, !dbg !20982
  store i32 %inc, i32* %vport, align 4, !dbg !20982
  br label %for.cond, !dbg !20982, !llvm.loop !20997

for.end:                                          ; preds = %for.cond
  br label %out, !dbg !20998

out:                                              ; preds = %for.end, %sw.bb87, %sw.bb
  call void @llvm.dbg.label(metadata !20999), !dbg !21000
  %44 = load i8, i8* %mlx5_mode, align 1, !dbg !21001
  %45 = load i8*, i8** %mode.addr, align 8, !dbg !21002
  store i8 %44, i8* %45, align 1, !dbg !21003
  store i32 0, i32* %retval, align 4, !dbg !21004
  br label %return, !dbg !21004

return:                                           ; preds = %out, %if.then100, %if.then37, %if.then
  %46 = load i32, i32* %retval, align 4, !dbg !21005
  ret i32 %46, !dbg !21005
}

; Function Attrs: noredzone
declare dso_local i32 @mlx5_query_nic_vport_min_inline(%struct.mlx5_core_dev*, i16 zeroext, i8*) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @arch_atomic64_read(%struct.atomic64_t* %v) #0 !dbg !21006 {
entry:
  %v.addr = alloca %struct.atomic64_t*, align 8
  store %struct.atomic64_t* %v, %struct.atomic64_t** %v.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic64_t** %v.addr, metadata !21007, metadata !DIExpression()), !dbg !21008
  %0 = load %struct.atomic64_t*, %struct.atomic64_t** %v.addr, align 8, !dbg !21009
  %counter = getelementptr inbounds %struct.atomic64_t, %struct.atomic64_t* %0, i32 0, i32 0, !dbg !21009
  %1 = load volatile i64, i64* %counter, align 8, !dbg !21009
  ret i64 %1, !dbg !21010
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @kasan_check_read(i8* %p, i32 %size) #0 !dbg !21011 {
entry:
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !21012, metadata !DIExpression()), !dbg !21013
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !21014, metadata !DIExpression()), !dbg !21015
  ret i1 true, !dbg !21016
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @esw_chains_destroy(%struct.mlx5_eswitch* %esw, %struct.mlx5_fs_chains* %chains) #0 !dbg !21017 {
entry:
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  %chains.addr = alloca %struct.mlx5_fs_chains*, align 8
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !21020, metadata !DIExpression()), !dbg !21021
  store %struct.mlx5_fs_chains* %chains, %struct.mlx5_fs_chains** %chains.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_fs_chains** %chains.addr, metadata !21022, metadata !DIExpression()), !dbg !21023
  ret void, !dbg !21024
}

; Function Attrs: noredzone
declare dso_local i32 @mlx5_flow_namespace_set_mode(%struct.mlx5_flow_namespace*, i32) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @esw_chains_create(%struct.mlx5_eswitch* %esw, %struct.mlx5_flow_table* %miss_fdb) #0 !dbg !21025 {
entry:
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  %miss_fdb.addr = alloca %struct.mlx5_flow_table*, align 8
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !21028, metadata !DIExpression()), !dbg !21029
  store %struct.mlx5_flow_table* %miss_fdb, %struct.mlx5_flow_table** %miss_fdb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_flow_table** %miss_fdb.addr, metadata !21030, metadata !DIExpression()), !dbg !21031
  ret i32 0, !dbg !21032
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @esw_add_fdb_miss_rule(%struct.mlx5_eswitch* %esw) #0 !dbg !21033 {
entry:
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  %flow_act = alloca %struct.mlx5_flow_act, align 8
  %dest = alloca %struct.mlx5_flow_destination, align 8
  %flow_rule = alloca %struct.mlx5_flow_handle*, align 8
  %spec = alloca %struct.mlx5_flow_spec*, align 8
  %headers_c = alloca i8*, align 8
  %headers_v = alloca i8*, align 8
  %err = alloca i32, align 4
  %dmac_c = alloca i8*, align 8
  %dmac_v = alloca i8*, align 8
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !21034, metadata !DIExpression()), !dbg !21035
  call void @llvm.dbg.declare(metadata %struct.mlx5_flow_act* %flow_act, metadata !21036, metadata !DIExpression()), !dbg !21037
  %0 = bitcast %struct.mlx5_flow_act* %flow_act to i8*, !dbg !21037
  call void @llvm.memset.p0i8.i64(i8* align 8 %0, i8 0, i64 56, i1 false), !dbg !21037
  call void @llvm.dbg.declare(metadata %struct.mlx5_flow_destination* %dest, metadata !21038, metadata !DIExpression()), !dbg !21039
  %1 = bitcast %struct.mlx5_flow_destination* %dest to i8*, !dbg !21039
  call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 32, i1 false), !dbg !21039
  call void @llvm.dbg.declare(metadata %struct.mlx5_flow_handle** %flow_rule, metadata !21040, metadata !DIExpression()), !dbg !21041
  store %struct.mlx5_flow_handle* null, %struct.mlx5_flow_handle** %flow_rule, align 8, !dbg !21041
  call void @llvm.dbg.declare(metadata %struct.mlx5_flow_spec** %spec, metadata !21042, metadata !DIExpression()), !dbg !21043
  call void @llvm.dbg.declare(metadata i8** %headers_c, metadata !21044, metadata !DIExpression()), !dbg !21045
  call void @llvm.dbg.declare(metadata i8** %headers_v, metadata !21046, metadata !DIExpression()), !dbg !21047
  call void @llvm.dbg.declare(metadata i32* %err, metadata !21048, metadata !DIExpression()), !dbg !21049
  store i32 0, i32* %err, align 4, !dbg !21049
  call void @llvm.dbg.declare(metadata i8** %dmac_c, metadata !21050, metadata !DIExpression()), !dbg !21051
  call void @llvm.dbg.declare(metadata i8** %dmac_v, metadata !21052, metadata !DIExpression()), !dbg !21053
  %call = call i8* @kvzalloc(i64 1040, i32 3264) #8, !dbg !21054
  %2 = bitcast i8* %call to %struct.mlx5_flow_spec*, !dbg !21054
  store %struct.mlx5_flow_spec* %2, %struct.mlx5_flow_spec** %spec, align 8, !dbg !21055
  %3 = load %struct.mlx5_flow_spec*, %struct.mlx5_flow_spec** %spec, align 8, !dbg !21056
  %tobool = icmp ne %struct.mlx5_flow_spec* %3, null, !dbg !21056
  br i1 %tobool, label %if.end, label %if.then, !dbg !21058

if.then:                                          ; preds = %entry
  store i32 -12, i32* %err, align 4, !dbg !21059
  br label %out, !dbg !21061

if.end:                                           ; preds = %entry
  %4 = load %struct.mlx5_flow_spec*, %struct.mlx5_flow_spec** %spec, align 8, !dbg !21062
  %match_criteria_enable = getelementptr inbounds %struct.mlx5_flow_spec, %struct.mlx5_flow_spec* %4, i32 0, i32 0, !dbg !21063
  store i8 1, i8* %match_criteria_enable, align 4, !dbg !21064
  %5 = load %struct.mlx5_flow_spec*, %struct.mlx5_flow_spec** %spec, align 8, !dbg !21065
  %match_criteria = getelementptr inbounds %struct.mlx5_flow_spec, %struct.mlx5_flow_spec* %5, i32 0, i32 1, !dbg !21065
  %arraydecay = getelementptr inbounds [128 x i32], [128 x i32]* %match_criteria, i64 0, i64 0, !dbg !21065
  %6 = bitcast i32* %arraydecay to i8*, !dbg !21065
  %add.ptr = getelementptr i8, i8* %6, i64 0, !dbg !21065
  store i8* %add.ptr, i8** %headers_c, align 8, !dbg !21066
  %7 = load i8*, i8** %headers_c, align 8, !dbg !21067
  %add.ptr1 = getelementptr i8, i8* %7, i64 8, !dbg !21067
  store i8* %add.ptr1, i8** %dmac_c, align 8, !dbg !21068
  %8 = load i8*, i8** %dmac_c, align 8, !dbg !21069
  %arrayidx = getelementptr i8, i8* %8, i64 0, !dbg !21069
  store i8 1, i8* %arrayidx, align 1, !dbg !21070
  %type = getelementptr inbounds %struct.mlx5_flow_destination, %struct.mlx5_flow_destination* %dest, i32 0, i32 0, !dbg !21071
  store i32 0, i32* %type, align 8, !dbg !21072
  %9 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !21073
  %manager_vport = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %9, i32 0, i32 15, !dbg !21074
  %10 = load i16, i16* %manager_vport, align 4, !dbg !21074
  %11 = getelementptr inbounds %struct.mlx5_flow_destination, %struct.mlx5_flow_destination* %dest, i32 0, i32 1, !dbg !21075
  %vport = bitcast %union.anon.146* %11 to %struct.anon.147*, !dbg !21075
  %num = getelementptr inbounds %struct.anon.147, %struct.anon.147* %vport, i32 0, i32 0, !dbg !21076
  store i16 %10, i16* %num, align 8, !dbg !21077
  %action = getelementptr inbounds %struct.mlx5_flow_act, %struct.mlx5_flow_act* %flow_act, i32 0, i32 0, !dbg !21078
  store i32 4, i32* %action, align 8, !dbg !21079
  %12 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !21080
  %fdb_table = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %12, i32 0, i32 2, !dbg !21081
  %13 = getelementptr inbounds %struct.mlx5_eswitch_fdb, %struct.mlx5_eswitch_fdb* %fdb_table, i32 0, i32 0, !dbg !21082
  %offloads = bitcast %union.anon.154* %13 to %struct.offloads_fdb*, !dbg !21082
  %slow_fdb = getelementptr inbounds %struct.offloads_fdb, %struct.offloads_fdb* %offloads, i32 0, i32 1, !dbg !21083
  %14 = load %struct.mlx5_flow_table*, %struct.mlx5_flow_table** %slow_fdb, align 8, !dbg !21083
  %15 = load %struct.mlx5_flow_spec*, %struct.mlx5_flow_spec** %spec, align 8, !dbg !21084
  %call2 = call %struct.mlx5_flow_handle* @mlx5_add_flow_rules(%struct.mlx5_flow_table* %14, %struct.mlx5_flow_spec* %15, %struct.mlx5_flow_act* %flow_act, %struct.mlx5_flow_destination* %dest, i32 1) #8, !dbg !21085
  store %struct.mlx5_flow_handle* %call2, %struct.mlx5_flow_handle** %flow_rule, align 8, !dbg !21086
  %16 = load %struct.mlx5_flow_handle*, %struct.mlx5_flow_handle** %flow_rule, align 8, !dbg !21087
  %17 = bitcast %struct.mlx5_flow_handle* %16 to i8*, !dbg !21087
  %call3 = call zeroext i1 @IS_ERR(i8* %17) #8, !dbg !21089
  br i1 %call3, label %if.then4, label %if.end6, !dbg !21090

if.then4:                                         ; preds = %if.end
  %18 = load %struct.mlx5_flow_handle*, %struct.mlx5_flow_handle** %flow_rule, align 8, !dbg !21091
  %19 = bitcast %struct.mlx5_flow_handle* %18 to i8*, !dbg !21091
  %call5 = call i64 @PTR_ERR(i8* %19) #8, !dbg !21093
  %conv = trunc i64 %call5 to i32, !dbg !21093
  store i32 %conv, i32* %err, align 4, !dbg !21094
  %20 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !21095
  %dev = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %20, i32 0, i32 0, !dbg !21095
  %21 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !21095
  %device = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %21, i32 0, i32 0, !dbg !21095
  %22 = load %struct.device*, %struct.device** %device, align 8, !dbg !21095
  %23 = load i32, i32* %err, align 4, !dbg !21095
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %22, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.32, i64 0, i64 0), i32 %23) #9, !dbg !21095
  br label %out, !dbg !21096

if.end6:                                          ; preds = %if.end
  %24 = load %struct.mlx5_flow_handle*, %struct.mlx5_flow_handle** %flow_rule, align 8, !dbg !21097
  %25 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !21098
  %fdb_table7 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %25, i32 0, i32 2, !dbg !21099
  %26 = getelementptr inbounds %struct.mlx5_eswitch_fdb, %struct.mlx5_eswitch_fdb* %fdb_table7, i32 0, i32 0, !dbg !21100
  %offloads8 = bitcast %union.anon.154* %26 to %struct.offloads_fdb*, !dbg !21100
  %miss_rule_uni = getelementptr inbounds %struct.offloads_fdb, %struct.offloads_fdb* %offloads8, i32 0, i32 6, !dbg !21101
  store %struct.mlx5_flow_handle* %24, %struct.mlx5_flow_handle** %miss_rule_uni, align 8, !dbg !21102
  %27 = load %struct.mlx5_flow_spec*, %struct.mlx5_flow_spec** %spec, align 8, !dbg !21103
  %match_value = getelementptr inbounds %struct.mlx5_flow_spec, %struct.mlx5_flow_spec* %27, i32 0, i32 2, !dbg !21103
  %arraydecay9 = getelementptr inbounds [128 x i32], [128 x i32]* %match_value, i64 0, i64 0, !dbg !21103
  %28 = bitcast i32* %arraydecay9 to i8*, !dbg !21103
  %add.ptr10 = getelementptr i8, i8* %28, i64 0, !dbg !21103
  store i8* %add.ptr10, i8** %headers_v, align 8, !dbg !21104
  %29 = load i8*, i8** %headers_v, align 8, !dbg !21105
  %add.ptr11 = getelementptr i8, i8* %29, i64 8, !dbg !21105
  store i8* %add.ptr11, i8** %dmac_v, align 8, !dbg !21106
  %30 = load i8*, i8** %dmac_v, align 8, !dbg !21107
  %arrayidx12 = getelementptr i8, i8* %30, i64 0, !dbg !21107
  store i8 1, i8* %arrayidx12, align 1, !dbg !21108
  %31 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !21109
  %fdb_table13 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %31, i32 0, i32 2, !dbg !21110
  %32 = getelementptr inbounds %struct.mlx5_eswitch_fdb, %struct.mlx5_eswitch_fdb* %fdb_table13, i32 0, i32 0, !dbg !21111
  %offloads14 = bitcast %union.anon.154* %32 to %struct.offloads_fdb*, !dbg !21111
  %slow_fdb15 = getelementptr inbounds %struct.offloads_fdb, %struct.offloads_fdb* %offloads14, i32 0, i32 1, !dbg !21112
  %33 = load %struct.mlx5_flow_table*, %struct.mlx5_flow_table** %slow_fdb15, align 8, !dbg !21112
  %34 = load %struct.mlx5_flow_spec*, %struct.mlx5_flow_spec** %spec, align 8, !dbg !21113
  %call16 = call %struct.mlx5_flow_handle* @mlx5_add_flow_rules(%struct.mlx5_flow_table* %33, %struct.mlx5_flow_spec* %34, %struct.mlx5_flow_act* %flow_act, %struct.mlx5_flow_destination* %dest, i32 1) #8, !dbg !21114
  store %struct.mlx5_flow_handle* %call16, %struct.mlx5_flow_handle** %flow_rule, align 8, !dbg !21115
  %35 = load %struct.mlx5_flow_handle*, %struct.mlx5_flow_handle** %flow_rule, align 8, !dbg !21116
  %36 = bitcast %struct.mlx5_flow_handle* %35 to i8*, !dbg !21116
  %call17 = call zeroext i1 @IS_ERR(i8* %36) #8, !dbg !21118
  br i1 %call17, label %if.then18, label %if.end26, !dbg !21119

if.then18:                                        ; preds = %if.end6
  %37 = load %struct.mlx5_flow_handle*, %struct.mlx5_flow_handle** %flow_rule, align 8, !dbg !21120
  %38 = bitcast %struct.mlx5_flow_handle* %37 to i8*, !dbg !21120
  %call19 = call i64 @PTR_ERR(i8* %38) #8, !dbg !21122
  %conv20 = trunc i64 %call19 to i32, !dbg !21122
  store i32 %conv20, i32* %err, align 4, !dbg !21123
  %39 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !21124
  %dev21 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %39, i32 0, i32 0, !dbg !21124
  %40 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev21, align 8, !dbg !21124
  %device22 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %40, i32 0, i32 0, !dbg !21124
  %41 = load %struct.device*, %struct.device** %device22, align 8, !dbg !21124
  %42 = load i32, i32* %err, align 4, !dbg !21124
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %41, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.33, i64 0, i64 0), i32 %42) #9, !dbg !21124
  %43 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !21125
  %fdb_table23 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %43, i32 0, i32 2, !dbg !21126
  %44 = getelementptr inbounds %struct.mlx5_eswitch_fdb, %struct.mlx5_eswitch_fdb* %fdb_table23, i32 0, i32 0, !dbg !21127
  %offloads24 = bitcast %union.anon.154* %44 to %struct.offloads_fdb*, !dbg !21127
  %miss_rule_uni25 = getelementptr inbounds %struct.offloads_fdb, %struct.offloads_fdb* %offloads24, i32 0, i32 6, !dbg !21128
  %45 = load %struct.mlx5_flow_handle*, %struct.mlx5_flow_handle** %miss_rule_uni25, align 8, !dbg !21128
  call void @mlx5_del_flow_rules(%struct.mlx5_flow_handle* %45) #8, !dbg !21129
  br label %out, !dbg !21130

if.end26:                                         ; preds = %if.end6
  %46 = load %struct.mlx5_flow_handle*, %struct.mlx5_flow_handle** %flow_rule, align 8, !dbg !21131
  %47 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !21132
  %fdb_table27 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %47, i32 0, i32 2, !dbg !21133
  %48 = getelementptr inbounds %struct.mlx5_eswitch_fdb, %struct.mlx5_eswitch_fdb* %fdb_table27, i32 0, i32 0, !dbg !21134
  %offloads28 = bitcast %union.anon.154* %48 to %struct.offloads_fdb*, !dbg !21134
  %miss_rule_multi = getelementptr inbounds %struct.offloads_fdb, %struct.offloads_fdb* %offloads28, i32 0, i32 7, !dbg !21135
  store %struct.mlx5_flow_handle* %46, %struct.mlx5_flow_handle** %miss_rule_multi, align 8, !dbg !21136
  br label %out, !dbg !21132

out:                                              ; preds = %if.end26, %if.then18, %if.then4, %if.then
  call void @llvm.dbg.label(metadata !21137), !dbg !21138
  %49 = load %struct.mlx5_flow_spec*, %struct.mlx5_flow_spec** %spec, align 8, !dbg !21139
  %50 = bitcast %struct.mlx5_flow_spec* %49 to i8*, !dbg !21139
  call void @kvfree(i8* %50) #8, !dbg !21140
  %51 = load i32, i32* %err, align 4, !dbg !21141
  ret i32 %51, !dbg !21142
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlx5_eswitch_vport_num_to_index(%struct.mlx5_eswitch* %esw, i16 zeroext %vport_num) #0 !dbg !21143 {
entry:
  %retval = alloca i32, align 4
  %esw.addr = alloca %struct.mlx5_eswitch*, align 8
  %vport_num.addr = alloca i16, align 2
  store %struct.mlx5_eswitch* %esw, %struct.mlx5_eswitch** %esw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_eswitch** %esw.addr, metadata !21144, metadata !DIExpression()), !dbg !21145
  store i16 %vport_num, i16* %vport_num.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %vport_num.addr, metadata !21146, metadata !DIExpression()), !dbg !21147
  %0 = load i16, i16* %vport_num.addr, align 2, !dbg !21148
  %conv = zext i16 %0 to i32, !dbg !21148
  %cmp = icmp eq i32 %conv, 65534, !dbg !21150
  br i1 %cmp, label %if.then, label %if.end5, !dbg !21151

if.then:                                          ; preds = %entry
  %1 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !21152
  %dev = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %1, i32 0, i32 0, !dbg !21155
  %2 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev, align 8, !dbg !21155
  %call = call zeroext i1 @mlx5_ecpf_vport_exists(%struct.mlx5_core_dev* %2) #8, !dbg !21156
  br i1 %call, label %if.end, label %if.then2, !dbg !21157

if.then2:                                         ; preds = %if.then
  %3 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !21158
  %dev3 = getelementptr inbounds %struct.mlx5_eswitch, %struct.mlx5_eswitch* %3, i32 0, i32 0, !dbg !21158
  %4 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev3, align 8, !dbg !21158
  %device = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %4, i32 0, i32 0, !dbg !21158
  %5 = load %struct.device*, %struct.device** %device, align 8, !dbg !21158
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %5, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.34, i64 0, i64 0)) #9, !dbg !21158
  br label %if.end, !dbg !21158

if.end:                                           ; preds = %if.then2, %if.then
  %6 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !21159
  %call4 = call i32 @mlx5_eswitch_ecpf_idx(%struct.mlx5_eswitch* %6) #8, !dbg !21160
  store i32 %call4, i32* %retval, align 4, !dbg !21161
  br label %return, !dbg !21161

if.end5:                                          ; preds = %entry
  %7 = load i16, i16* %vport_num.addr, align 2, !dbg !21162
  %conv6 = zext i16 %7 to i32, !dbg !21162
  %cmp7 = icmp eq i32 %conv6, 65535, !dbg !21164
  br i1 %cmp7, label %if.then9, label %if.end11, !dbg !21165

if.then9:                                         ; preds = %if.end5
  %8 = load %struct.mlx5_eswitch*, %struct.mlx5_eswitch** %esw.addr, align 8, !dbg !21166
  %call10 = call i32 @mlx5_eswitch_uplink_idx(%struct.mlx5_eswitch* %8) #8, !dbg !21167
  store i32 %call10, i32* %retval, align 4, !dbg !21168
  br label %return, !dbg !21168

if.end11:                                         ; preds = %if.end5
  %9 = load i16, i16* %vport_num.addr, align 2, !dbg !21169
  %conv12 = zext i16 %9 to i32, !dbg !21169
  store i32 %conv12, i32* %retval, align 4, !dbg !21170
  br label %return, !dbg !21170

return:                                           ; preds = %if.end11, %if.then9, %if.end
  %10 = load i32, i32* %retval, align 4, !dbg !21171
  ret i32 %10, !dbg !21171
}

attributes #0 = { noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nounwind readnone willreturn }
attributes #4 = { noinline noredzone nounwind optnone readnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { cold noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind willreturn }
attributes #8 = { noredzone }
attributes #9 = { cold noredzone }
attributes #10 = { noredzone nounwind readnone }
attributes #11 = { noredzone nounwind }
attributes #12 = { nounwind }
attributes #13 = { nounwind readnone }
attributes #14 = { nounwind readonly }

!llvm.dbg.cu = !{!11477}
!llvm.module.flags = !{!12332, !12333, !12334, !12335}
!llvm.ident = !{!12336}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "__key", scope: !2, file: !3, line: 2323, type: !461, isLocal: true, isDefinition: true)
!2 = distinct !DISubprogram(name: "esw_offloads_enable", scope: !3, file: !3, line: 2312, type: !4, scopeLine: 2313, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!3 = !DIFile(filename: "drivers/net/ethernet/mellanox/mlx5/core/eswitch_offloads.c", directory: "/home/lizy2001/genbc/linux")
!4 = !DISubroutineType(types: !5)
!5 = !{!6, !7}
!6 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!7 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8, size: 64)
!8 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_eswitch", file: !9, line: 244, size: 102976, elements: !10)
!9 = !DIFile(filename: "drivers/net/ethernet/mellanox/mlx5/core/eswitch.h", directory: "/home/lizy2001/genbc/linux")
!10 = !{!11, !11248, !11249, !11291, !11292, !11304, !11305, !11396, !11397, !11398, !11399, !11400, !11401, !11406, !11465, !11466, !11467, !11468, !11473}
!11 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !8, file: !9, line: 245, baseType: !12, size: 64)
!12 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13, size: 64)
!13 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_core_dev", file: !14, line: 670, size: 1467584, elements: !15)
!14 = !DIFile(filename: "./include/linux/mlx5/driver.h", directory: "/home/lizy2001/genbc/linux")
!15 = !{!16, !10093, !10098, !10369, !10370, !10375, !10376, !10377, !10518, !10526, !10544, !10545, !10546, !10592, !10593, !10599, !10600, !10601, !11003, !11017, !11018, !11044, !11047, !11050, !11053, !11063, !11235, !11238, !11241, !11244, !11245}
!16 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !13, file: !14, line: 671, baseType: !17, size: 64)
!17 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18, size: 64)
!18 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !19, line: 461, size: 5568, elements: !20)
!19 = !DIFile(filename: "./include/linux/device.h", directory: "/home/lizy2001/genbc/linux")
!20 = !{!21, !9645, !9646, !9649, !9650, !9700, !9792, !9793, !9794, !9795, !9796, !9811, !9912, !9925, !9929, !9930, !9934, !9935, !9936, !9937, !9941, !9947, !9948, !9951, !9955, !10045, !10046, !10047, !10048, !10049, !10081, !10082, !10083, !10086, !10089, !10090, !10091, !10092}
!21 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !18, file: !19, line: 462, baseType: !22, size: 512)
!22 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobject", file: !23, line: 64, size: 512, elements: !24)
!23 = !DIFile(filename: "./include/linux/kobject.h", directory: "/home/lizy2001/genbc/linux")
!24 = !{!25, !29, !36, !38, !98, !9517, !9639, !9640, !9641, !9642, !9643, !9644}
!25 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !22, file: !23, line: 65, baseType: !26, size: 64)
!26 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !27, size: 64)
!27 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !28)
!28 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!29 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !22, file: !23, line: 66, baseType: !30, size: 128, offset: 64)
!30 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_head", file: !31, line: 178, size: 128, elements: !32)
!31 = !DIFile(filename: "./include/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!32 = !{!33, !35}
!33 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !30, file: !31, line: 179, baseType: !34, size: 64)
!34 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !30, size: 64)
!35 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !30, file: !31, line: 179, baseType: !34, size: 64, offset: 64)
!36 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !22, file: !23, line: 67, baseType: !37, size: 64, offset: 192)
!37 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !22, size: 64)
!38 = !DIDerivedType(tag: DW_TAG_member, name: "kset", scope: !22, file: !23, line: 68, baseType: !39, size: 64, offset: 256)
!39 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !40, size: 64)
!40 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset", file: !23, line: 192, size: 704, elements: !41)
!41 = !{!42, !43, !59, !60}
!42 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !40, file: !23, line: 193, baseType: !30, size: 128)
!43 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !40, file: !23, line: 194, baseType: !44, offset: 128)
!44 = !DIDerivedType(tag: DW_TAG_typedef, name: "spinlock_t", file: !45, line: 83, baseType: !46)
!45 = !DIFile(filename: "./include/linux/spinlock_types.h", directory: "/home/lizy2001/genbc/linux")
!46 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spinlock", file: !45, line: 71, elements: !47)
!47 = !{!48}
!48 = !DIDerivedType(tag: DW_TAG_member, scope: !46, file: !45, line: 72, baseType: !49)
!49 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !46, file: !45, line: 72, elements: !50)
!50 = !{!51}
!51 = !DIDerivedType(tag: DW_TAG_member, name: "rlock", scope: !49, file: !45, line: 73, baseType: !52)
!52 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raw_spinlock", file: !45, line: 20, elements: !53)
!53 = !{!54}
!54 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !52, file: !45, line: 21, baseType: !55)
!55 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_spinlock_t", file: !56, line: 25, baseType: !57)
!56 = !DIFile(filename: "./include/linux/spinlock_types_up.h", directory: "/home/lizy2001/genbc/linux")
!57 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 25, elements: !58)
!58 = !{}
!59 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !40, file: !23, line: 195, baseType: !22, size: 512, offset: 128)
!60 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_ops", scope: !40, file: !23, line: 196, baseType: !61, size: 64, offset: 640)
!61 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !62, size: 64)
!62 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !63)
!63 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset_uevent_ops", file: !23, line: 156, size: 192, elements: !64)
!64 = !{!65, !70, !75}
!65 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !63, file: !23, line: 157, baseType: !66, size: 64)
!66 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !67)
!67 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !68, size: 64)
!68 = !DISubroutineType(types: !69)
!69 = !{!6, !39, !37}
!70 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !63, file: !23, line: 158, baseType: !71, size: 64, offset: 64)
!71 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !72)
!72 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !73, size: 64)
!73 = !DISubroutineType(types: !74)
!74 = !{!26, !39, !37}
!75 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !63, file: !23, line: 159, baseType: !76, size: 64, offset: 128)
!76 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !77)
!77 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !78, size: 64)
!78 = !DISubroutineType(types: !79)
!79 = !{!6, !39, !37, !80}
!80 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !81, size: 64)
!81 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_uevent_env", file: !23, line: 148, size: 20736, elements: !82)
!82 = !{!83, !88, !92, !93, !97}
!83 = !DIDerivedType(tag: DW_TAG_member, name: "argv", scope: !81, file: !23, line: 149, baseType: !84, size: 192)
!84 = !DICompositeType(tag: DW_TAG_array_type, baseType: !85, size: 192, elements: !86)
!85 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !28, size: 64)
!86 = !{!87}
!87 = !DISubrange(count: 3)
!88 = !DIDerivedType(tag: DW_TAG_member, name: "envp", scope: !81, file: !23, line: 150, baseType: !89, size: 4096, offset: 192)
!89 = !DICompositeType(tag: DW_TAG_array_type, baseType: !85, size: 4096, elements: !90)
!90 = !{!91}
!91 = !DISubrange(count: 64)
!92 = !DIDerivedType(tag: DW_TAG_member, name: "envp_idx", scope: !81, file: !23, line: 151, baseType: !6, size: 32, offset: 4288)
!93 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !81, file: !23, line: 152, baseType: !94, size: 16384, offset: 4320)
!94 = !DICompositeType(tag: DW_TAG_array_type, baseType: !28, size: 16384, elements: !95)
!95 = !{!96}
!96 = !DISubrange(count: 2048)
!97 = !DIDerivedType(tag: DW_TAG_member, name: "buflen", scope: !81, file: !23, line: 153, baseType: !6, size: 32, offset: 20704)
!98 = !DIDerivedType(tag: DW_TAG_member, name: "ktype", scope: !22, file: !23, line: 69, baseType: !99, size: 64, offset: 320)
!99 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !100, size: 64)
!100 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_type", file: !23, line: 138, size: 448, elements: !101)
!101 = !{!102, !106, !136, !138, !9477, !9509, !9513}
!102 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !100, file: !23, line: 139, baseType: !103, size: 64)
!103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !104, size: 64)
!104 = !DISubroutineType(types: !105)
!105 = !{null, !37}
!106 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_ops", scope: !100, file: !23, line: 140, baseType: !107, size: 64, offset: 64)
!107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !108, size: 64)
!108 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !109)
!109 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sysfs_ops", file: !110, line: 230, size: 128, elements: !111)
!110 = !DIFile(filename: "./include/linux/sysfs.h", directory: "/home/lizy2001/genbc/linux")
!111 = !{!112, !128}
!112 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !109, file: !110, line: 231, baseType: !113, size: 64)
!113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !114, size: 64)
!114 = !DISubroutineType(types: !115)
!115 = !{!116, !37, !121, !85}
!116 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !31, line: 60, baseType: !117)
!117 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ssize_t", file: !118, line: 73, baseType: !119)
!118 = !DIFile(filename: "./include/uapi/asm-generic/posix_types.h", directory: "/home/lizy2001/genbc/linux")
!119 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_long_t", file: !118, line: 15, baseType: !120)
!120 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !122, size: 64)
!122 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute", file: !110, line: 30, size: 128, elements: !123)
!123 = !{!124, !125}
!124 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !122, file: !110, line: 31, baseType: !26, size: 64)
!125 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !122, file: !110, line: 32, baseType: !126, size: 16, offset: 64)
!126 = !DIDerivedType(tag: DW_TAG_typedef, name: "umode_t", file: !31, line: 19, baseType: !127)
!127 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!128 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !109, file: !110, line: 232, baseType: !129, size: 64, offset: 64)
!129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !130, size: 64)
!130 = !DISubroutineType(types: !131)
!131 = !{!116, !37, !121, !26, !132}
!132 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !31, line: 55, baseType: !133)
!133 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_size_t", file: !118, line: 72, baseType: !134)
!134 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ulong_t", file: !118, line: 16, baseType: !135)
!135 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!136 = !DIDerivedType(tag: DW_TAG_member, name: "default_attrs", scope: !100, file: !23, line: 141, baseType: !137, size: 64, offset: 128)
!137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !121, size: 64)
!138 = !DIDerivedType(tag: DW_TAG_member, name: "default_groups", scope: !100, file: !23, line: 142, baseType: !139, size: 64, offset: 192)
!139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !140, size: 64)
!140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !141, size: 64)
!141 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !142)
!142 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute_group", file: !110, line: 84, size: 320, elements: !143)
!143 = !{!144, !145, !149, !9474, !9475}
!144 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !142, file: !110, line: 85, baseType: !26, size: 64)
!145 = !DIDerivedType(tag: DW_TAG_member, name: "is_visible", scope: !142, file: !110, line: 86, baseType: !146, size: 64, offset: 64)
!146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !147, size: 64)
!147 = !DISubroutineType(types: !148)
!148 = !{!126, !37, !121, !6}
!149 = !DIDerivedType(tag: DW_TAG_member, name: "is_bin_visible", scope: !142, file: !110, line: 88, baseType: !150, size: 64, offset: 128)
!150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !151, size: 64)
!151 = !DISubroutineType(types: !152)
!152 = !{!126, !37, !153, !6}
!153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !154, size: 64)
!154 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bin_attribute", file: !110, line: 168, size: 448, elements: !155)
!155 = !{!156, !157, !158, !160, !9469, !9470}
!156 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !154, file: !110, line: 169, baseType: !122, size: 128)
!157 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !154, file: !110, line: 170, baseType: !132, size: 64, offset: 128)
!158 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !154, file: !110, line: 171, baseType: !159, size: 64, offset: 192)
!159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!160 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !154, file: !110, line: 172, baseType: !161, size: 64, offset: 256)
!161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !162, size: 64)
!162 = !DISubroutineType(types: !163)
!163 = !{!116, !164, !37, !153, !85, !345, !132}
!164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !165, size: 64)
!165 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file", file: !166, line: 916, size: 1856, align: 32, elements: !167)
!166 = !DIFile(filename: "./include/linux/fs.h", directory: "/home/lizy2001/genbc/linux")
!167 = !{!168, !186, !9419, !9420, !9421, !9422, !9431, !9432, !9433, !9434, !9435, !9436, !9452, !9453, !9462, !9463, !9464, !9465, !9466, !9467, !9468}
!168 = !DIDerivedType(tag: DW_TAG_member, name: "f_u", scope: !165, file: !166, line: 920, baseType: !169, size: 128)
!169 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !165, file: !166, line: 917, size: 128, elements: !170)
!170 = !{!171, !177}
!171 = !DIDerivedType(tag: DW_TAG_member, name: "fu_llist", scope: !169, file: !166, line: 918, baseType: !172, size: 64)
!172 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "llist_node", file: !173, line: 58, size: 64, elements: !174)
!173 = !DIFile(filename: "./include/linux/llist.h", directory: "/home/lizy2001/genbc/linux")
!174 = !{!175}
!175 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !172, file: !173, line: 59, baseType: !176, size: 64)
!176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !172, size: 64)
!177 = !DIDerivedType(tag: DW_TAG_member, name: "fu_rcuhead", scope: !169, file: !166, line: 919, baseType: !178, size: 128, align: 64)
!178 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "callback_head", file: !31, line: 216, size: 128, align: 64, elements: !179)
!179 = !{!180, !182}
!180 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !178, file: !31, line: 217, baseType: !181, size: 64)
!181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !178, size: 64)
!182 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !178, file: !31, line: 218, baseType: !183, size: 64, offset: 64)
!183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !184, size: 64)
!184 = !DISubroutineType(types: !185)
!185 = !{null, !181}
!186 = !DIDerivedType(tag: DW_TAG_member, name: "f_path", scope: !165, file: !166, line: 921, baseType: !187, size: 128, offset: 128)
!187 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "path", file: !188, line: 8, size: 128, elements: !189)
!188 = !DIFile(filename: "./include/linux/path.h", directory: "/home/lizy2001/genbc/linux")
!189 = !{!190, !194}
!190 = !DIDerivedType(tag: DW_TAG_member, name: "mnt", scope: !187, file: !188, line: 9, baseType: !191, size: 64)
!191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !192, size: 64)
!192 = !DICompositeType(tag: DW_TAG_structure_type, name: "vfsmount", file: !193, line: 18, flags: DIFlagFwdDecl)
!193 = !DIFile(filename: "./include/linux/dcache.h", directory: "/home/lizy2001/genbc/linux")
!194 = !DIDerivedType(tag: DW_TAG_member, name: "dentry", scope: !187, file: !188, line: 10, baseType: !195, size: 64, offset: 64)
!195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !196, size: 64)
!196 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry", file: !193, line: 89, size: 1536, elements: !197)
!197 = !{!198, !200, !210, !218, !219, !242, !9389, !9390, !9402, !9403, !9404, !9405, !9406, !9411, !9412, !9413}
!198 = !DIDerivedType(tag: DW_TAG_member, name: "d_flags", scope: !196, file: !193, line: 91, baseType: !199, size: 32)
!199 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!200 = !DIDerivedType(tag: DW_TAG_member, name: "d_seq", scope: !196, file: !193, line: 92, baseType: !201, size: 32, offset: 32)
!201 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_spinlock_t", file: !202, line: 277, baseType: !203)
!202 = !DIFile(filename: "./include/linux/seqlock.h", directory: "/home/lizy2001/genbc/linux")
!203 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_spinlock", file: !202, line: 277, size: 32, elements: !204)
!204 = !{!205}
!205 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !203, file: !202, line: 277, baseType: !206, size: 32)
!206 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_t", file: !202, line: 70, baseType: !207)
!207 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount", file: !202, line: 65, size: 32, elements: !208)
!208 = !{!209}
!209 = !DIDerivedType(tag: DW_TAG_member, name: "sequence", scope: !207, file: !202, line: 66, baseType: !199, size: 32)
!210 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !196, file: !193, line: 93, baseType: !211, size: 128, offset: 64)
!211 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_node", file: !212, line: 38, size: 128, elements: !213)
!212 = !DIFile(filename: "./include/linux/list_bl.h", directory: "/home/lizy2001/genbc/linux")
!213 = !{!214, !216}
!214 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !211, file: !212, line: 39, baseType: !215, size: 64)
!215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !211, size: 64)
!216 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !211, file: !212, line: 39, baseType: !217, size: 64, offset: 64)
!217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !215, size: 64)
!218 = !DIDerivedType(tag: DW_TAG_member, name: "d_parent", scope: !196, file: !193, line: 94, baseType: !195, size: 64, offset: 192)
!219 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !196, file: !193, line: 95, baseType: !220, size: 128, offset: 256)
!220 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qstr", file: !193, line: 47, size: 128, elements: !221)
!221 = !{!222, !238}
!222 = !DIDerivedType(tag: DW_TAG_member, scope: !220, file: !193, line: 48, baseType: !223, size: 64)
!223 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !220, file: !193, line: 48, size: 64, elements: !224)
!224 = !{!225, !234}
!225 = !DIDerivedType(tag: DW_TAG_member, scope: !223, file: !193, line: 49, baseType: !226, size: 64)
!226 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !223, file: !193, line: 49, size: 64, elements: !227)
!227 = !{!228, !233}
!228 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !226, file: !193, line: 50, baseType: !229, size: 32)
!229 = !DIDerivedType(tag: DW_TAG_typedef, name: "u32", file: !230, line: 21, baseType: !231)
!230 = !DIFile(filename: "./include/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!231 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u32", file: !232, line: 27, baseType: !199)
!232 = !DIFile(filename: "./include/uapi/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!233 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !226, file: !193, line: 50, baseType: !229, size: 32, offset: 32)
!234 = !DIDerivedType(tag: DW_TAG_member, name: "hash_len", scope: !223, file: !193, line: 52, baseType: !235, size: 64)
!235 = !DIDerivedType(tag: DW_TAG_typedef, name: "u64", file: !230, line: 23, baseType: !236)
!236 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u64", file: !232, line: 31, baseType: !237)
!237 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!238 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !220, file: !193, line: 54, baseType: !239, size: 64, offset: 64)
!239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !240, size: 64)
!240 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !241)
!241 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!242 = !DIDerivedType(tag: DW_TAG_member, name: "d_inode", scope: !196, file: !193, line: 96, baseType: !243, size: 64, offset: 384)
!243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !244, size: 64)
!244 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode", file: !166, line: 610, size: 4224, elements: !245)
!245 = !{!246, !247, !248, !256, !263, !264, !412, !9114, !9115, !9116, !9121, !9122, !9123, !9124, !9125, !9126, !9127, !9128, !9129, !9130, !9131, !9132, !9133, !9134, !9135, !9136, !9137, !9138, !9139, !9140, !9145, !9146, !9147, !9148, !9149, !9150, !9151, !9357, !9365, !9366, !9367, !9385, !9386, !9387, !9388}
!246 = !DIDerivedType(tag: DW_TAG_member, name: "i_mode", scope: !244, file: !166, line: 611, baseType: !126, size: 16)
!247 = !DIDerivedType(tag: DW_TAG_member, name: "i_opflags", scope: !244, file: !166, line: 612, baseType: !127, size: 16, offset: 16)
!248 = !DIDerivedType(tag: DW_TAG_member, name: "i_uid", scope: !244, file: !166, line: 613, baseType: !249, size: 32, offset: 32)
!249 = !DIDerivedType(tag: DW_TAG_typedef, name: "kuid_t", file: !250, line: 23, baseType: !251)
!250 = !DIFile(filename: "./include/linux/uidgid.h", directory: "/home/lizy2001/genbc/linux")
!251 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !250, line: 21, size: 32, elements: !252)
!252 = !{!253}
!253 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !251, file: !250, line: 22, baseType: !254, size: 32)
!254 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !31, line: 32, baseType: !255)
!255 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_uid32_t", file: !118, line: 49, baseType: !199)
!256 = !DIDerivedType(tag: DW_TAG_member, name: "i_gid", scope: !244, file: !166, line: 614, baseType: !257, size: 32, offset: 64)
!257 = !DIDerivedType(tag: DW_TAG_typedef, name: "kgid_t", file: !250, line: 28, baseType: !258)
!258 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !250, line: 26, size: 32, elements: !259)
!259 = !{!260}
!260 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !258, file: !250, line: 27, baseType: !261, size: 32)
!261 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !31, line: 33, baseType: !262)
!262 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_gid32_t", file: !118, line: 50, baseType: !199)
!263 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !244, file: !166, line: 615, baseType: !199, size: 32, offset: 96)
!264 = !DIDerivedType(tag: DW_TAG_member, name: "i_op", scope: !244, file: !166, line: 622, baseType: !265, size: 64, offset: 128)
!265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !266, size: 64)
!266 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !267)
!267 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode_operations", file: !166, line: 1864, size: 1536, align: 512, elements: !268)
!268 = !{!269, !273, !286, !290, !296, !300, !306, !310, !314, !318, !322, !323, !329, !333, !359, !388, !392, !398, !403, !407, !408}
!269 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !267, file: !166, line: 1865, baseType: !270, size: 64)
!270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !271, size: 64)
!271 = !DISubroutineType(types: !272)
!272 = !{!195, !243, !195, !199}
!273 = !DIDerivedType(tag: DW_TAG_member, name: "get_link", scope: !267, file: !166, line: 1866, baseType: !274, size: 64, offset: 64)
!274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !275, size: 64)
!275 = !DISubroutineType(types: !276)
!276 = !{!26, !195, !243, !277}
!277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !278, size: 64)
!278 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_call", file: !279, line: 10, size: 128, elements: !280)
!279 = !DIFile(filename: "./include/linux/delayed_call.h", directory: "/home/lizy2001/genbc/linux")
!280 = !{!281, !285}
!281 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !278, file: !279, line: 11, baseType: !282, size: 64)
!282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !283, size: 64)
!283 = !DISubroutineType(types: !284)
!284 = !{null, !159}
!285 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !278, file: !279, line: 12, baseType: !159, size: 64, offset: 64)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "permission", scope: !267, file: !166, line: 1867, baseType: !287, size: 64, offset: 128)
!287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !288, size: 64)
!288 = !DISubroutineType(types: !289)
!289 = !{!6, !243, !6}
!290 = !DIDerivedType(tag: DW_TAG_member, name: "get_acl", scope: !267, file: !166, line: 1868, baseType: !291, size: 64, offset: 192)
!291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !292, size: 64)
!292 = !DISubroutineType(types: !293)
!293 = !{!294, !243, !6}
!294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !295, size: 64)
!295 = !DICompositeType(tag: DW_TAG_structure_type, name: "posix_acl", file: !166, line: 581, flags: DIFlagFwdDecl)
!296 = !DIDerivedType(tag: DW_TAG_member, name: "readlink", scope: !267, file: !166, line: 1870, baseType: !297, size: 64, offset: 256)
!297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !298, size: 64)
!298 = !DISubroutineType(types: !299)
!299 = !{!6, !195, !85, !6}
!300 = !DIDerivedType(tag: DW_TAG_member, name: "create", scope: !267, file: !166, line: 1872, baseType: !301, size: 64, offset: 320)
!301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !302, size: 64)
!302 = !DISubroutineType(types: !303)
!303 = !{!6, !243, !195, !126, !304}
!304 = !DIDerivedType(tag: DW_TAG_typedef, name: "bool", file: !31, line: 30, baseType: !305)
!305 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!306 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !267, file: !166, line: 1873, baseType: !307, size: 64, offset: 384)
!307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !308, size: 64)
!308 = !DISubroutineType(types: !309)
!309 = !{!6, !195, !243, !195}
!310 = !DIDerivedType(tag: DW_TAG_member, name: "unlink", scope: !267, file: !166, line: 1874, baseType: !311, size: 64, offset: 448)
!311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !312, size: 64)
!312 = !DISubroutineType(types: !313)
!313 = !{!6, !243, !195}
!314 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !267, file: !166, line: 1875, baseType: !315, size: 64, offset: 512)
!315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !316, size: 64)
!316 = !DISubroutineType(types: !317)
!317 = !{!6, !243, !195, !26}
!318 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !267, file: !166, line: 1876, baseType: !319, size: 64, offset: 576)
!319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !320, size: 64)
!320 = !DISubroutineType(types: !321)
!321 = !{!6, !243, !195, !126}
!322 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !267, file: !166, line: 1877, baseType: !311, size: 64, offset: 640)
!323 = !DIDerivedType(tag: DW_TAG_member, name: "mknod", scope: !267, file: !166, line: 1878, baseType: !324, size: 64, offset: 704)
!324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !325, size: 64)
!325 = !DISubroutineType(types: !326)
!326 = !{!6, !243, !195, !126, !327}
!327 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !31, line: 16, baseType: !328)
!328 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_dev_t", file: !31, line: 13, baseType: !229)
!329 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !267, file: !166, line: 1879, baseType: !330, size: 64, offset: 768)
!330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !331, size: 64)
!331 = !DISubroutineType(types: !332)
!332 = !{!6, !243, !195, !243, !195, !199}
!333 = !DIDerivedType(tag: DW_TAG_member, name: "setattr", scope: !267, file: !166, line: 1881, baseType: !334, size: 64, offset: 832)
!334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !335, size: 64)
!335 = !DISubroutineType(types: !336)
!336 = !{!6, !195, !337}
!337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !338, size: 64)
!338 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iattr", file: !166, line: 219, size: 640, elements: !339)
!339 = !{!340, !341, !342, !343, !344, !348, !356, !357, !358}
!340 = !DIDerivedType(tag: DW_TAG_member, name: "ia_valid", scope: !338, file: !166, line: 220, baseType: !199, size: 32)
!341 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mode", scope: !338, file: !166, line: 221, baseType: !126, size: 16, offset: 32)
!342 = !DIDerivedType(tag: DW_TAG_member, name: "ia_uid", scope: !338, file: !166, line: 222, baseType: !249, size: 32, offset: 64)
!343 = !DIDerivedType(tag: DW_TAG_member, name: "ia_gid", scope: !338, file: !166, line: 223, baseType: !257, size: 32, offset: 96)
!344 = !DIDerivedType(tag: DW_TAG_member, name: "ia_size", scope: !338, file: !166, line: 224, baseType: !345, size: 64, offset: 128)
!345 = !DIDerivedType(tag: DW_TAG_typedef, name: "loff_t", file: !31, line: 46, baseType: !346)
!346 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_loff_t", file: !118, line: 88, baseType: !347)
!347 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!348 = !DIDerivedType(tag: DW_TAG_member, name: "ia_atime", scope: !338, file: !166, line: 225, baseType: !349, size: 128, offset: 192)
!349 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec64", file: !350, line: 13, size: 128, elements: !351)
!350 = !DIFile(filename: "./include/linux/time64.h", directory: "/home/lizy2001/genbc/linux")
!351 = !{!352, !355}
!352 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !349, file: !350, line: 14, baseType: !353, size: 64)
!353 = !DIDerivedType(tag: DW_TAG_typedef, name: "time64_t", file: !350, line: 8, baseType: !354)
!354 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s64", file: !232, line: 30, baseType: !347)
!355 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !349, file: !350, line: 15, baseType: !120, size: 64, offset: 64)
!356 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mtime", scope: !338, file: !166, line: 226, baseType: !349, size: 128, offset: 320)
!357 = !DIDerivedType(tag: DW_TAG_member, name: "ia_ctime", scope: !338, file: !166, line: 227, baseType: !349, size: 128, offset: 448)
!358 = !DIDerivedType(tag: DW_TAG_member, name: "ia_file", scope: !338, file: !166, line: 234, baseType: !164, size: 64, offset: 576)
!359 = !DIDerivedType(tag: DW_TAG_member, name: "getattr", scope: !267, file: !166, line: 1882, baseType: !360, size: 64, offset: 896)
!360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !361, size: 64)
!361 = !DISubroutineType(types: !362)
!362 = !{!6, !363, !365, !229, !199}
!363 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !364, size: 64)
!364 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !187)
!365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !366, size: 64)
!366 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kstat", file: !367, line: 22, size: 1152, elements: !368)
!367 = !DIFile(filename: "./include/linux/stat.h", directory: "/home/lizy2001/genbc/linux")
!368 = !{!369, !370, !371, !372, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387}
!369 = !DIDerivedType(tag: DW_TAG_member, name: "result_mask", scope: !366, file: !367, line: 23, baseType: !229, size: 32)
!370 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !366, file: !367, line: 24, baseType: !126, size: 16, offset: 32)
!371 = !DIDerivedType(tag: DW_TAG_member, name: "nlink", scope: !366, file: !367, line: 25, baseType: !199, size: 32, offset: 64)
!372 = !DIDerivedType(tag: DW_TAG_member, name: "blksize", scope: !366, file: !367, line: 26, baseType: !373, size: 32, offset: 96)
!373 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !31, line: 104, baseType: !229)
!374 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !366, file: !367, line: 27, baseType: !235, size: 64, offset: 128)
!375 = !DIDerivedType(tag: DW_TAG_member, name: "attributes_mask", scope: !366, file: !367, line: 28, baseType: !235, size: 64, offset: 192)
!376 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !366, file: !367, line: 37, baseType: !235, size: 64, offset: 256)
!377 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !366, file: !367, line: 38, baseType: !327, size: 32, offset: 320)
!378 = !DIDerivedType(tag: DW_TAG_member, name: "rdev", scope: !366, file: !367, line: 39, baseType: !327, size: 32, offset: 352)
!379 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !366, file: !367, line: 40, baseType: !249, size: 32, offset: 384)
!380 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !366, file: !367, line: 41, baseType: !257, size: 32, offset: 416)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !366, file: !367, line: 42, baseType: !345, size: 64, offset: 448)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "atime", scope: !366, file: !367, line: 43, baseType: !349, size: 128, offset: 512)
!383 = !DIDerivedType(tag: DW_TAG_member, name: "mtime", scope: !366, file: !367, line: 44, baseType: !349, size: 128, offset: 640)
!384 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !366, file: !367, line: 45, baseType: !349, size: 128, offset: 768)
!385 = !DIDerivedType(tag: DW_TAG_member, name: "btime", scope: !366, file: !367, line: 46, baseType: !349, size: 128, offset: 896)
!386 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !366, file: !367, line: 47, baseType: !235, size: 64, offset: 1024)
!387 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_id", scope: !366, file: !367, line: 48, baseType: !235, size: 64, offset: 1088)
!388 = !DIDerivedType(tag: DW_TAG_member, name: "listxattr", scope: !267, file: !166, line: 1883, baseType: !389, size: 64, offset: 960)
!389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !390, size: 64)
!390 = !DISubroutineType(types: !391)
!391 = !{!116, !195, !85, !132}
!392 = !DIDerivedType(tag: DW_TAG_member, name: "fiemap", scope: !267, file: !166, line: 1884, baseType: !393, size: 64, offset: 1024)
!393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !394, size: 64)
!394 = !DISubroutineType(types: !395)
!395 = !{!6, !243, !396, !235, !235}
!396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !397, size: 64)
!397 = !DICompositeType(tag: DW_TAG_structure_type, name: "fiemap_extent_info", file: !166, line: 50, flags: DIFlagFwdDecl)
!398 = !DIDerivedType(tag: DW_TAG_member, name: "update_time", scope: !267, file: !166, line: 1886, baseType: !399, size: 64, offset: 1088)
!399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !400, size: 64)
!400 = !DISubroutineType(types: !401)
!401 = !{!6, !243, !402, !6}
!402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !349, size: 64)
!403 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_open", scope: !267, file: !166, line: 1887, baseType: !404, size: 64, offset: 1152)
!404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !405, size: 64)
!405 = !DISubroutineType(types: !406)
!406 = !{!6, !243, !195, !164, !199, !126}
!407 = !DIDerivedType(tag: DW_TAG_member, name: "tmpfile", scope: !267, file: !166, line: 1890, baseType: !319, size: 64, offset: 1216)
!408 = !DIDerivedType(tag: DW_TAG_member, name: "set_acl", scope: !267, file: !166, line: 1891, baseType: !409, size: 64, offset: 1280)
!409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !410, size: 64)
!410 = !DISubroutineType(types: !411)
!411 = !{!6, !243, !294, !6}
!412 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb", scope: !244, file: !166, line: 623, baseType: !413, size: 64, offset: 192)
!413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !414, size: 64)
!414 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_block", file: !166, line: 1416, size: 9472, elements: !415)
!415 = !{!416, !417, !418, !419, !420, !421, !470, !8723, !8811, !8894, !8898, !8899, !8900, !8901, !8902, !8903, !8904, !8905, !8910, !8914, !8915, !8916, !8917, !8920, !8921, !8922, !8963, !8990, !8991, !8992, !8993, !8994, !8995, !8998, !8999, !9005, !9006, !9007, !9008, !9009, !9068, !9069, !9083, !9084, !9085, !9086, !9087, !9088, !9089, !9090, !9105, !9106, !9107, !9108, !9109, !9110, !9111, !9112, !9113}
!416 = !DIDerivedType(tag: DW_TAG_member, name: "s_list", scope: !414, file: !166, line: 1417, baseType: !30, size: 128)
!417 = !DIDerivedType(tag: DW_TAG_member, name: "s_dev", scope: !414, file: !166, line: 1418, baseType: !327, size: 32, offset: 128)
!418 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize_bits", scope: !414, file: !166, line: 1419, baseType: !241, size: 8, offset: 160)
!419 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize", scope: !414, file: !166, line: 1420, baseType: !135, size: 64, offset: 192)
!420 = !DIDerivedType(tag: DW_TAG_member, name: "s_maxbytes", scope: !414, file: !166, line: 1421, baseType: !345, size: 64, offset: 256)
!421 = !DIDerivedType(tag: DW_TAG_member, name: "s_type", scope: !414, file: !166, line: 1422, baseType: !422, size: 64, offset: 320)
!422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !423, size: 64)
!423 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_system_type", file: !166, line: 2228, size: 576, elements: !424)
!424 = !{!425, !426, !427, !433, !437, !441, !445, !449, !450, !460, !463, !464, !465, !467, !468, !469}
!425 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !423, file: !166, line: 2229, baseType: !26, size: 64)
!426 = !DIDerivedType(tag: DW_TAG_member, name: "fs_flags", scope: !423, file: !166, line: 2230, baseType: !6, size: 32, offset: 64)
!427 = !DIDerivedType(tag: DW_TAG_member, name: "init_fs_context", scope: !423, file: !166, line: 2238, baseType: !428, size: 64, offset: 128)
!428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !429, size: 64)
!429 = !DISubroutineType(types: !430)
!430 = !{!6, !431}
!431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !432, size: 64)
!432 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_context", file: !166, line: 69, flags: DIFlagFwdDecl)
!433 = !DIDerivedType(tag: DW_TAG_member, name: "parameters", scope: !423, file: !166, line: 2239, baseType: !434, size: 64, offset: 192)
!434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !435, size: 64)
!435 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !436)
!436 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_parameter_spec", file: !166, line: 70, flags: DIFlagFwdDecl)
!437 = !DIDerivedType(tag: DW_TAG_member, name: "mount", scope: !423, file: !166, line: 2240, baseType: !438, size: 64, offset: 256)
!438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !439, size: 64)
!439 = !DISubroutineType(types: !440)
!440 = !{!195, !422, !6, !26, !159}
!441 = !DIDerivedType(tag: DW_TAG_member, name: "kill_sb", scope: !423, file: !166, line: 2242, baseType: !442, size: 64, offset: 320)
!442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !443, size: 64)
!443 = !DISubroutineType(types: !444)
!444 = !{null, !413}
!445 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !423, file: !166, line: 2243, baseType: !446, size: 64, offset: 384)
!446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !447, size: 64)
!447 = !DICompositeType(tag: DW_TAG_structure_type, name: "module", file: !448, line: 76, flags: DIFlagFwdDecl)
!448 = !DIFile(filename: "./arch/x86/include/asm/alternative.h", directory: "/home/lizy2001/genbc/linux")
!449 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !423, file: !166, line: 2244, baseType: !422, size: 64, offset: 448)
!450 = !DIDerivedType(tag: DW_TAG_member, name: "fs_supers", scope: !423, file: !166, line: 2245, baseType: !451, size: 64, offset: 512)
!451 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_head", file: !31, line: 182, size: 64, elements: !452)
!452 = !{!453}
!453 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !451, file: !31, line: 183, baseType: !454, size: 64)
!454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !455, size: 64)
!455 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_node", file: !31, line: 186, size: 128, elements: !456)
!456 = !{!457, !458}
!457 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !455, file: !31, line: 187, baseType: !454, size: 64)
!458 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !455, file: !31, line: 187, baseType: !459, size: 64, offset: 64)
!459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !454, size: 64)
!460 = !DIDerivedType(tag: DW_TAG_member, name: "s_lock_key", scope: !423, file: !166, line: 2247, baseType: !461, offset: 576)
!461 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_class_key", file: !462, line: 187, elements: !58)
!462 = !DIFile(filename: "./include/linux/lockdep_types.h", directory: "/home/lizy2001/genbc/linux")
!463 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount_key", scope: !423, file: !166, line: 2248, baseType: !461, offset: 576)
!464 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_key", scope: !423, file: !166, line: 2249, baseType: !461, offset: 576)
!465 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers_key", scope: !423, file: !166, line: 2250, baseType: !466, offset: 576)
!466 = !DICompositeType(tag: DW_TAG_array_type, baseType: !461, elements: !86)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock_key", scope: !423, file: !166, line: 2252, baseType: !461, offset: 576)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_key", scope: !423, file: !166, line: 2253, baseType: !461, offset: 576)
!469 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_dir_key", scope: !423, file: !166, line: 2254, baseType: !461, offset: 576)
!470 = !DIDerivedType(tag: DW_TAG_member, name: "s_op", scope: !414, file: !166, line: 1423, baseType: !471, size: 64, offset: 384)
!471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !472, size: 64)
!472 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !473)
!473 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_operations", file: !166, line: 1935, size: 1472, elements: !474)
!474 = !{!475, !479, !483, !484, !488, !513, !517, !518, !519, !523, !527, !528, !529, !530, !536, !541, !542, !598, !599, !600, !601, !8709, !8722}
!475 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_inode", scope: !473, file: !166, line: 1936, baseType: !476, size: 64)
!476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !477, size: 64)
!477 = !DISubroutineType(types: !478)
!478 = !{!243, !413}
!479 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_inode", scope: !473, file: !166, line: 1937, baseType: !480, size: 64, offset: 64)
!480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !481, size: 64)
!481 = !DISubroutineType(types: !482)
!482 = !{null, !243}
!483 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !473, file: !166, line: 1938, baseType: !480, size: 64, offset: 128)
!484 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_inode", scope: !473, file: !166, line: 1940, baseType: !485, size: 64, offset: 192)
!485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !486, size: 64)
!486 = !DISubroutineType(types: !487)
!487 = !{null, !243, !6}
!488 = !DIDerivedType(tag: DW_TAG_member, name: "write_inode", scope: !473, file: !166, line: 1941, baseType: !489, size: 64, offset: 256)
!489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !490, size: 64)
!490 = !DISubroutineType(types: !491)
!491 = !{!6, !243, !492}
!492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !493, size: 64)
!493 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "writeback_control", file: !494, line: 51, size: 320, elements: !495)
!494 = !DIFile(filename: "./include/linux/writeback.h", directory: "/home/lizy2001/genbc/linux")
!495 = !{!496, !497, !498, !499, !500, !505, !506, !507, !508, !509, !510, !511, !512}
!496 = !DIDerivedType(tag: DW_TAG_member, name: "nr_to_write", scope: !493, file: !494, line: 52, baseType: !120, size: 64)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "pages_skipped", scope: !493, file: !494, line: 54, baseType: !120, size: 64, offset: 64)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "range_start", scope: !493, file: !494, line: 61, baseType: !345, size: 64, offset: 128)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "range_end", scope: !493, file: !494, line: 62, baseType: !345, size: 64, offset: 192)
!500 = !DIDerivedType(tag: DW_TAG_member, name: "sync_mode", scope: !493, file: !494, line: 64, baseType: !501, size: 32, offset: 256)
!501 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "writeback_sync_modes", file: !494, line: 41, baseType: !199, size: 32, elements: !502)
!502 = !{!503, !504}
!503 = !DIEnumerator(name: "WB_SYNC_NONE", value: 0, isUnsigned: true)
!504 = !DIEnumerator(name: "WB_SYNC_ALL", value: 1, isUnsigned: true)
!505 = !DIDerivedType(tag: DW_TAG_member, name: "for_kupdate", scope: !493, file: !494, line: 66, baseType: !199, size: 1, offset: 288, flags: DIFlagBitField, extraData: i64 288)
!506 = !DIDerivedType(tag: DW_TAG_member, name: "for_background", scope: !493, file: !494, line: 67, baseType: !199, size: 1, offset: 289, flags: DIFlagBitField, extraData: i64 288)
!507 = !DIDerivedType(tag: DW_TAG_member, name: "tagged_writepages", scope: !493, file: !494, line: 68, baseType: !199, size: 1, offset: 290, flags: DIFlagBitField, extraData: i64 288)
!508 = !DIDerivedType(tag: DW_TAG_member, name: "for_reclaim", scope: !493, file: !494, line: 69, baseType: !199, size: 1, offset: 291, flags: DIFlagBitField, extraData: i64 288)
!509 = !DIDerivedType(tag: DW_TAG_member, name: "range_cyclic", scope: !493, file: !494, line: 70, baseType: !199, size: 1, offset: 292, flags: DIFlagBitField, extraData: i64 288)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "for_sync", scope: !493, file: !494, line: 71, baseType: !199, size: 1, offset: 293, flags: DIFlagBitField, extraData: i64 288)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "no_cgroup_owner", scope: !493, file: !494, line: 79, baseType: !199, size: 1, offset: 294, flags: DIFlagBitField, extraData: i64 288)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "punt_to_cgroup", scope: !493, file: !494, line: 81, baseType: !199, size: 1, offset: 295, flags: DIFlagBitField, extraData: i64 288)
!513 = !DIDerivedType(tag: DW_TAG_member, name: "drop_inode", scope: !473, file: !166, line: 1942, baseType: !514, size: 64, offset: 320)
!514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !515, size: 64)
!515 = !DISubroutineType(types: !516)
!516 = !{!6, !243}
!517 = !DIDerivedType(tag: DW_TAG_member, name: "evict_inode", scope: !473, file: !166, line: 1943, baseType: !480, size: 64, offset: 384)
!518 = !DIDerivedType(tag: DW_TAG_member, name: "put_super", scope: !473, file: !166, line: 1944, baseType: !442, size: 64, offset: 448)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "sync_fs", scope: !473, file: !166, line: 1945, baseType: !520, size: 64, offset: 512)
!520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !521, size: 64)
!521 = !DISubroutineType(types: !522)
!522 = !{!6, !413, !6}
!523 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_super", scope: !473, file: !166, line: 1946, baseType: !524, size: 64, offset: 576)
!524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !525, size: 64)
!525 = !DISubroutineType(types: !526)
!526 = !{!6, !413}
!527 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_fs", scope: !473, file: !166, line: 1947, baseType: !524, size: 64, offset: 640)
!528 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_super", scope: !473, file: !166, line: 1948, baseType: !524, size: 64, offset: 704)
!529 = !DIDerivedType(tag: DW_TAG_member, name: "unfreeze_fs", scope: !473, file: !166, line: 1949, baseType: !524, size: 64, offset: 768)
!530 = !DIDerivedType(tag: DW_TAG_member, name: "statfs", scope: !473, file: !166, line: 1950, baseType: !531, size: 64, offset: 832)
!531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !532, size: 64)
!532 = !DISubroutineType(types: !533)
!533 = !{!6, !195, !534}
!534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !535, size: 64)
!535 = !DICompositeType(tag: DW_TAG_structure_type, name: "kstatfs", file: !166, line: 57, flags: DIFlagFwdDecl)
!536 = !DIDerivedType(tag: DW_TAG_member, name: "remount_fs", scope: !473, file: !166, line: 1951, baseType: !537, size: 64, offset: 896)
!537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !538, size: 64)
!538 = !DISubroutineType(types: !539)
!539 = !{!6, !413, !540, !85}
!540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6, size: 64)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "umount_begin", scope: !473, file: !166, line: 1952, baseType: !442, size: 64, offset: 960)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !473, file: !166, line: 1954, baseType: !543, size: 64, offset: 1024)
!543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !544, size: 64)
!544 = !DISubroutineType(types: !545)
!545 = !{!6, !546, !195}
!546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !547, size: 64)
!547 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seq_file", file: !548, line: 16, size: 896, elements: !549)
!548 = !DIFile(filename: "./include/linux/seq_file.h", directory: "/home/lizy2001/genbc/linux")
!549 = !{!550, !551, !552, !553, !554, !555, !556, !557, !571, !593, !594, !597}
!550 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !547, file: !548, line: 17, baseType: !85, size: 64)
!551 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !547, file: !548, line: 18, baseType: !132, size: 64, offset: 64)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "from", scope: !547, file: !548, line: 19, baseType: !132, size: 64, offset: 128)
!553 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !547, file: !548, line: 20, baseType: !132, size: 64, offset: 192)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "pad_until", scope: !547, file: !548, line: 21, baseType: !132, size: 64, offset: 256)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !547, file: !548, line: 22, baseType: !345, size: 64, offset: 320)
!556 = !DIDerivedType(tag: DW_TAG_member, name: "read_pos", scope: !547, file: !548, line: 23, baseType: !345, size: 64, offset: 384)
!557 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !547, file: !548, line: 24, baseType: !558, size: 192, offset: 448)
!558 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mutex", file: !559, line: 53, size: 192, elements: !560)
!559 = !DIFile(filename: "./include/linux/mutex.h", directory: "/home/lizy2001/genbc/linux")
!560 = !{!561, !569, !570}
!561 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !558, file: !559, line: 54, baseType: !562, size: 64)
!562 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_long_t", file: !563, line: 13, baseType: !564)
!563 = !DIFile(filename: "./include/asm-generic/atomic-long.h", directory: "/home/lizy2001/genbc/linux")
!564 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic64_t", file: !31, line: 175, baseType: !565)
!565 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !31, line: 173, size: 64, elements: !566)
!566 = !{!567}
!567 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !565, file: !31, line: 174, baseType: !568, size: 64)
!568 = !DIDerivedType(tag: DW_TAG_typedef, name: "s64", file: !230, line: 22, baseType: !354)
!569 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !558, file: !559, line: 55, baseType: !44, offset: 64)
!570 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !558, file: !559, line: 59, baseType: !30, size: 128, offset: 64)
!571 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !547, file: !548, line: 25, baseType: !572, size: 64, offset: 640)
!572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !573, size: 64)
!573 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !574)
!574 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seq_operations", file: !548, line: 31, size: 256, elements: !575)
!575 = !{!576, !581, !585, !589}
!576 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !574, file: !548, line: 32, baseType: !577, size: 64)
!577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !578, size: 64)
!578 = !DISubroutineType(types: !579)
!579 = !{!159, !546, !580}
!580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !345, size: 64)
!581 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !574, file: !548, line: 33, baseType: !582, size: 64, offset: 64)
!582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !583, size: 64)
!583 = !DISubroutineType(types: !584)
!584 = !{null, !546, !159}
!585 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !574, file: !548, line: 34, baseType: !586, size: 64, offset: 128)
!586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !587, size: 64)
!587 = !DISubroutineType(types: !588)
!588 = !{!159, !546, !159, !580}
!589 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !574, file: !548, line: 35, baseType: !590, size: 64, offset: 192)
!590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !591, size: 64)
!591 = !DISubroutineType(types: !592)
!592 = !{!6, !546, !159}
!593 = !DIDerivedType(tag: DW_TAG_member, name: "poll_event", scope: !547, file: !548, line: 26, baseType: !6, size: 32, offset: 704)
!594 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !547, file: !548, line: 27, baseType: !595, size: 64, offset: 768)
!595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !596, size: 64)
!596 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !165)
!597 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !547, file: !548, line: 28, baseType: !159, size: 64, offset: 832)
!598 = !DIDerivedType(tag: DW_TAG_member, name: "show_devname", scope: !473, file: !166, line: 1955, baseType: !543, size: 64, offset: 1088)
!599 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !473, file: !166, line: 1956, baseType: !543, size: 64, offset: 1152)
!600 = !DIDerivedType(tag: DW_TAG_member, name: "show_stats", scope: !473, file: !166, line: 1957, baseType: !543, size: 64, offset: 1216)
!601 = !DIDerivedType(tag: DW_TAG_member, name: "bdev_try_to_free_page", scope: !473, file: !166, line: 1963, baseType: !602, size: 64, offset: 1280)
!602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !603, size: 64)
!603 = !DISubroutineType(types: !604)
!604 = !{!6, !413, !605, !628}
!605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !606, size: 64)
!606 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page", file: !607, line: 68, size: 512, align: 128, elements: !608)
!607 = !DIFile(filename: "./include/linux/mm_types.h", directory: "/home/lizy2001/genbc/linux")
!608 = !{!609, !610, !8701, !8708}
!609 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !606, file: !607, line: 69, baseType: !135, size: 64)
!610 = !DIDerivedType(tag: DW_TAG_member, scope: !606, file: !607, line: 77, baseType: !611, size: 320, offset: 64)
!611 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !606, file: !607, line: 77, size: 320, elements: !612)
!612 = !{!613, !966, !971, !999, !1007, !1013, !8645, !8700}
!613 = !DIDerivedType(tag: DW_TAG_member, scope: !611, file: !607, line: 78, baseType: !614, size: 320)
!614 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !611, file: !607, line: 78, size: 320, elements: !615)
!615 = !{!616, !617, !964, !965}
!616 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !614, file: !607, line: 84, baseType: !30, size: 128)
!617 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !614, file: !607, line: 86, baseType: !618, size: 64, offset: 128)
!618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !619, size: 64)
!619 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space", file: !166, line: 451, size: 1216, align: 64, elements: !620)
!620 = !{!621, !622, !630, !631, !636, !651, !660, !661, !662, !663, !957, !958, !961, !962, !963}
!621 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !619, file: !166, line: 452, baseType: !243, size: 64)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "i_pages", scope: !619, file: !166, line: 453, baseType: !623, size: 128, offset: 64)
!623 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xarray", file: !624, line: 292, size: 128, elements: !625)
!624 = !DIFile(filename: "./include/linux/xarray.h", directory: "/home/lizy2001/genbc/linux")
!625 = !{!626, !627, !629}
!626 = !DIDerivedType(tag: DW_TAG_member, name: "xa_lock", scope: !623, file: !624, line: 293, baseType: !44)
!627 = !DIDerivedType(tag: DW_TAG_member, name: "xa_flags", scope: !623, file: !624, line: 295, baseType: !628, size: 32)
!628 = !DIDerivedType(tag: DW_TAG_typedef, name: "gfp_t", file: !31, line: 148, baseType: !199)
!629 = !DIDerivedType(tag: DW_TAG_member, name: "xa_head", scope: !623, file: !624, line: 296, baseType: !159, size: 64, offset: 64)
!630 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !619, file: !166, line: 454, baseType: !628, size: 32, offset: 192)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_writable", scope: !619, file: !166, line: 455, baseType: !632, size: 32, offset: 224)
!632 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !31, line: 168, baseType: !633)
!633 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !31, line: 166, size: 32, elements: !634)
!634 = !{!635}
!635 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !633, file: !31, line: 167, baseType: !6, size: 32)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap", scope: !619, file: !166, line: 460, baseType: !637, size: 128, offset: 256)
!637 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root_cached", file: !638, line: 125, size: 128, elements: !639)
!638 = !DIFile(filename: "./include/linux/rbtree.h", directory: "/home/lizy2001/genbc/linux")
!639 = !{!640, !650}
!640 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !637, file: !638, line: 126, baseType: !641, size: 64)
!641 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root", file: !638, line: 31, size: 64, elements: !642)
!642 = !{!643}
!643 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !641, file: !638, line: 32, baseType: !644, size: 64)
!644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !645, size: 64)
!645 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_node", file: !638, line: 24, size: 192, align: 64, elements: !646)
!646 = !{!647, !648, !649}
!647 = !DIDerivedType(tag: DW_TAG_member, name: "__rb_parent_color", scope: !645, file: !638, line: 25, baseType: !135, size: 64)
!648 = !DIDerivedType(tag: DW_TAG_member, name: "rb_right", scope: !645, file: !638, line: 26, baseType: !644, size: 64, offset: 64)
!649 = !DIDerivedType(tag: DW_TAG_member, name: "rb_left", scope: !645, file: !638, line: 27, baseType: !644, size: 64, offset: 128)
!650 = !DIDerivedType(tag: DW_TAG_member, name: "rb_leftmost", scope: !637, file: !638, line: 127, baseType: !644, size: 64, offset: 64)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_rwsem", scope: !619, file: !166, line: 461, baseType: !652, size: 256, offset: 384)
!652 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rw_semaphore", file: !653, line: 35, size: 256, elements: !654)
!653 = !DIFile(filename: "./include/linux/rwsem.h", directory: "/home/lizy2001/genbc/linux")
!654 = !{!655, !656, !657, !659}
!655 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !652, file: !653, line: 36, baseType: !562, size: 64)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !652, file: !653, line: 42, baseType: !562, size: 64, offset: 64)
!657 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !652, file: !653, line: 46, baseType: !658, offset: 128)
!658 = !DIDerivedType(tag: DW_TAG_typedef, name: "raw_spinlock_t", file: !45, line: 29, baseType: !52)
!659 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !652, file: !653, line: 47, baseType: !30, size: 128, offset: 128)
!660 = !DIDerivedType(tag: DW_TAG_member, name: "nrpages", scope: !619, file: !166, line: 462, baseType: !135, size: 64, offset: 640)
!661 = !DIDerivedType(tag: DW_TAG_member, name: "nrexceptional", scope: !619, file: !166, line: 463, baseType: !135, size: 64, offset: 704)
!662 = !DIDerivedType(tag: DW_TAG_member, name: "writeback_index", scope: !619, file: !166, line: 464, baseType: !135, size: 64, offset: 768)
!663 = !DIDerivedType(tag: DW_TAG_member, name: "a_ops", scope: !619, file: !166, line: 465, baseType: !664, size: 64, offset: 832)
!664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !665, size: 64)
!665 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !666)
!666 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space_operations", file: !166, line: 367, size: 1408, elements: !667)
!667 = !{!668, !672, !676, !680, !684, !688, !701, !707, !711, !716, !720, !724, !728, !914, !925, !931, !932, !933, !937, !942, !946, !953}
!668 = !DIDerivedType(tag: DW_TAG_member, name: "writepage", scope: !666, file: !166, line: 368, baseType: !669, size: 64)
!669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !670, size: 64)
!670 = !DISubroutineType(types: !671)
!671 = !{!6, !605, !492}
!672 = !DIDerivedType(tag: DW_TAG_member, name: "readpage", scope: !666, file: !166, line: 369, baseType: !673, size: 64, offset: 64)
!673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !674, size: 64)
!674 = !DISubroutineType(types: !675)
!675 = !{!6, !164, !605}
!676 = !DIDerivedType(tag: DW_TAG_member, name: "writepages", scope: !666, file: !166, line: 372, baseType: !677, size: 64, offset: 128)
!677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !678, size: 64)
!678 = !DISubroutineType(types: !679)
!679 = !{!6, !618, !492}
!680 = !DIDerivedType(tag: DW_TAG_member, name: "set_page_dirty", scope: !666, file: !166, line: 375, baseType: !681, size: 64, offset: 192)
!681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !682, size: 64)
!682 = !DISubroutineType(types: !683)
!683 = !{!6, !605}
!684 = !DIDerivedType(tag: DW_TAG_member, name: "readpages", scope: !666, file: !166, line: 381, baseType: !685, size: 64, offset: 256)
!685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !686, size: 64)
!686 = !DISubroutineType(types: !687)
!687 = !{!6, !164, !618, !34, !199}
!688 = !DIDerivedType(tag: DW_TAG_member, name: "readahead", scope: !666, file: !166, line: 383, baseType: !689, size: 64, offset: 320)
!689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !690, size: 64)
!690 = !DISubroutineType(types: !691)
!691 = !{null, !692}
!692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !693, size: 64)
!693 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "readahead_control", file: !694, line: 795, size: 256, elements: !695)
!694 = !DIFile(filename: "./include/linux/pagemap.h", directory: "/home/lizy2001/genbc/linux")
!695 = !{!696, !697, !698, !699, !700}
!696 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !693, file: !694, line: 796, baseType: !164, size: 64)
!697 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !693, file: !694, line: 797, baseType: !618, size: 64, offset: 64)
!698 = !DIDerivedType(tag: DW_TAG_member, name: "_index", scope: !693, file: !694, line: 799, baseType: !135, size: 64, offset: 128)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "_nr_pages", scope: !693, file: !694, line: 800, baseType: !199, size: 32, offset: 192)
!700 = !DIDerivedType(tag: DW_TAG_member, name: "_batch_count", scope: !693, file: !694, line: 801, baseType: !199, size: 32, offset: 224)
!701 = !DIDerivedType(tag: DW_TAG_member, name: "write_begin", scope: !666, file: !166, line: 385, baseType: !702, size: 64, offset: 384)
!702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !703, size: 64)
!703 = !DISubroutineType(types: !704)
!704 = !{!6, !164, !618, !345, !199, !199, !705, !706}
!705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !605, size: 64)
!706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !159, size: 64)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "write_end", scope: !666, file: !166, line: 388, baseType: !708, size: 64, offset: 448)
!708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !709, size: 64)
!709 = !DISubroutineType(types: !710)
!710 = !{!6, !164, !618, !345, !199, !199, !605, !159}
!711 = !DIDerivedType(tag: DW_TAG_member, name: "bmap", scope: !666, file: !166, line: 393, baseType: !712, size: 64, offset: 512)
!712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !713, size: 64)
!713 = !DISubroutineType(types: !714)
!714 = !{!715, !618, !715}
!715 = !DIDerivedType(tag: DW_TAG_typedef, name: "sector_t", file: !31, line: 125, baseType: !235)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "invalidatepage", scope: !666, file: !166, line: 394, baseType: !717, size: 64, offset: 576)
!717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !718, size: 64)
!718 = !DISubroutineType(types: !719)
!719 = !{null, !605, !199, !199}
!720 = !DIDerivedType(tag: DW_TAG_member, name: "releasepage", scope: !666, file: !166, line: 395, baseType: !721, size: 64, offset: 640)
!721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !722, size: 64)
!722 = !DISubroutineType(types: !723)
!723 = !{!6, !605, !628}
!724 = !DIDerivedType(tag: DW_TAG_member, name: "freepage", scope: !666, file: !166, line: 396, baseType: !725, size: 64, offset: 704)
!725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !726, size: 64)
!726 = !DISubroutineType(types: !727)
!727 = !{null, !605}
!728 = !DIDerivedType(tag: DW_TAG_member, name: "direct_IO", scope: !666, file: !166, line: 397, baseType: !729, size: 64, offset: 768)
!729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !730, size: 64)
!730 = !DISubroutineType(types: !731)
!731 = !{!116, !732, !771}
!732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !733, size: 64)
!733 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kiocb", file: !166, line: 320, size: 384, elements: !734)
!734 = !{!735, !736, !737, !741, !742, !743, !746, !747}
!735 = !DIDerivedType(tag: DW_TAG_member, name: "ki_filp", scope: !733, file: !166, line: 321, baseType: !164, size: 64)
!736 = !DIDerivedType(tag: DW_TAG_member, name: "ki_pos", scope: !733, file: !166, line: 326, baseType: !345, size: 64, offset: 64)
!737 = !DIDerivedType(tag: DW_TAG_member, name: "ki_complete", scope: !733, file: !166, line: 327, baseType: !738, size: 64, offset: 128)
!738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !739, size: 64)
!739 = !DISubroutineType(types: !740)
!740 = !{null, !732, !120, !120}
!741 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !733, file: !166, line: 328, baseType: !159, size: 64, offset: 192)
!742 = !DIDerivedType(tag: DW_TAG_member, name: "ki_flags", scope: !733, file: !166, line: 329, baseType: !6, size: 32, offset: 256)
!743 = !DIDerivedType(tag: DW_TAG_member, name: "ki_hint", scope: !733, file: !166, line: 330, baseType: !744, size: 16, offset: 288)
!744 = !DIDerivedType(tag: DW_TAG_typedef, name: "u16", file: !230, line: 19, baseType: !745)
!745 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u16", file: !232, line: 24, baseType: !127)
!746 = !DIDerivedType(tag: DW_TAG_member, name: "ki_ioprio", scope: !733, file: !166, line: 331, baseType: !744, size: 16, offset: 304)
!747 = !DIDerivedType(tag: DW_TAG_member, scope: !733, file: !166, line: 332, baseType: !748, size: 64, offset: 320)
!748 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !733, file: !166, line: 332, size: 64, elements: !749)
!749 = !{!750, !751}
!750 = !DIDerivedType(tag: DW_TAG_member, name: "ki_cookie", scope: !748, file: !166, line: 333, baseType: !199, size: 32)
!751 = !DIDerivedType(tag: DW_TAG_member, name: "ki_waitq", scope: !748, file: !166, line: 334, baseType: !752, size: 64)
!752 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !753, size: 64)
!753 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_page_queue", file: !694, line: 569, size: 448, elements: !754)
!754 = !{!755, !756, !757}
!755 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !753, file: !694, line: 570, baseType: !605, size: 64)
!756 = !DIDerivedType(tag: DW_TAG_member, name: "bit_nr", scope: !753, file: !694, line: 571, baseType: !6, size: 32, offset: 64)
!757 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !753, file: !694, line: 572, baseType: !758, size: 320, offset: 128)
!758 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_entry_t", file: !759, line: 14, baseType: !760)
!759 = !DIFile(filename: "./include/linux/wait.h", directory: "/home/lizy2001/genbc/linux")
!760 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_entry", file: !759, line: 29, size: 320, elements: !761)
!761 = !{!762, !763, !764, !770}
!762 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !760, file: !759, line: 30, baseType: !199, size: 32)
!763 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !760, file: !759, line: 31, baseType: !159, size: 64, offset: 64)
!764 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !760, file: !759, line: 32, baseType: !765, size: 64, offset: 128)
!765 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_func_t", file: !759, line: 16, baseType: !766)
!766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !767, size: 64)
!767 = !DISubroutineType(types: !768)
!768 = !{!6, !769, !199, !6, !159}
!769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !760, size: 64)
!770 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !760, file: !759, line: 33, baseType: !30, size: 128, offset: 192)
!771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !772, size: 64)
!772 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iov_iter", file: !773, line: 29, size: 320, elements: !774)
!773 = !DIFile(filename: "./include/linux/uio.h", directory: "/home/lizy2001/genbc/linux")
!774 = !{!775, !776, !777, !778, !905}
!775 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !772, file: !773, line: 35, baseType: !199, size: 32)
!776 = !DIDerivedType(tag: DW_TAG_member, name: "iov_offset", scope: !772, file: !773, line: 36, baseType: !132, size: 64, offset: 64)
!777 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !772, file: !773, line: 37, baseType: !132, size: 64, offset: 128)
!778 = !DIDerivedType(tag: DW_TAG_member, scope: !772, file: !773, line: 38, baseType: !779, size: 64, offset: 192)
!779 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !772, file: !773, line: 38, size: 64, elements: !780)
!780 = !{!781, !789, !796, !805}
!781 = !DIDerivedType(tag: DW_TAG_member, name: "iov", scope: !779, file: !773, line: 39, baseType: !782, size: 64)
!782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !783, size: 64)
!783 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !784)
!784 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iovec", file: !785, line: 17, size: 128, elements: !786)
!785 = !DIFile(filename: "./include/uapi/linux/uio.h", directory: "/home/lizy2001/genbc/linux")
!786 = !{!787, !788}
!787 = !DIDerivedType(tag: DW_TAG_member, name: "iov_base", scope: !784, file: !785, line: 19, baseType: !159, size: 64)
!788 = !DIDerivedType(tag: DW_TAG_member, name: "iov_len", scope: !784, file: !785, line: 20, baseType: !133, size: 64, offset: 64)
!789 = !DIDerivedType(tag: DW_TAG_member, name: "kvec", scope: !779, file: !773, line: 40, baseType: !790, size: 64)
!790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !791, size: 64)
!791 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !792)
!792 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kvec", file: !773, line: 15, size: 128, elements: !793)
!793 = !{!794, !795}
!794 = !DIDerivedType(tag: DW_TAG_member, name: "iov_base", scope: !792, file: !773, line: 16, baseType: !159, size: 64)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "iov_len", scope: !792, file: !773, line: 17, baseType: !132, size: 64, offset: 64)
!796 = !DIDerivedType(tag: DW_TAG_member, name: "bvec", scope: !779, file: !773, line: 41, baseType: !797, size: 64)
!797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !798, size: 64)
!798 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !799)
!799 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_vec", file: !800, line: 31, size: 128, elements: !801)
!800 = !DIFile(filename: "./include/linux/bvec.h", directory: "/home/lizy2001/genbc/linux")
!801 = !{!802, !803, !804}
!802 = !DIDerivedType(tag: DW_TAG_member, name: "bv_page", scope: !799, file: !800, line: 32, baseType: !605, size: 64)
!803 = !DIDerivedType(tag: DW_TAG_member, name: "bv_len", scope: !799, file: !800, line: 33, baseType: !199, size: 32, offset: 64)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "bv_offset", scope: !799, file: !800, line: 34, baseType: !199, size: 32, offset: 96)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "pipe", scope: !779, file: !773, line: 42, baseType: !806, size: 64)
!806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !807, size: 64)
!807 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_inode_info", file: !808, line: 57, size: 1088, elements: !809)
!808 = !DIFile(filename: "./include/linux/pipe_fs_i.h", directory: "/home/lizy2001/genbc/linux")
!809 = !{!810, !811, !817, !818, !819, !820, !821, !822, !823, !824, !825, !826, !827, !828, !829, !846, !847, !874}
!810 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !807, file: !808, line: 58, baseType: !558, size: 192)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "rd_wait", scope: !807, file: !808, line: 59, baseType: !812, size: 128, offset: 192)
!812 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_head_t", file: !759, line: 40, baseType: !813)
!813 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_head", file: !759, line: 36, size: 128, elements: !814)
!814 = !{!815, !816}
!815 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !813, file: !759, line: 37, baseType: !44)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !813, file: !759, line: 38, baseType: !30, size: 128)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "wr_wait", scope: !807, file: !808, line: 59, baseType: !812, size: 128, offset: 320)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !807, file: !808, line: 60, baseType: !199, size: 32, offset: 448)
!819 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !807, file: !808, line: 61, baseType: !199, size: 32, offset: 480)
!820 = !DIDerivedType(tag: DW_TAG_member, name: "max_usage", scope: !807, file: !808, line: 62, baseType: !199, size: 32, offset: 512)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "ring_size", scope: !807, file: !808, line: 63, baseType: !199, size: 32, offset: 544)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "nr_accounted", scope: !807, file: !808, line: 67, baseType: !199, size: 32, offset: 576)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "readers", scope: !807, file: !808, line: 68, baseType: !199, size: 32, offset: 608)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "writers", scope: !807, file: !808, line: 69, baseType: !199, size: 32, offset: 640)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !807, file: !808, line: 70, baseType: !199, size: 32, offset: 672)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "r_counter", scope: !807, file: !808, line: 71, baseType: !199, size: 32, offset: 704)
!827 = !DIDerivedType(tag: DW_TAG_member, name: "w_counter", scope: !807, file: !808, line: 72, baseType: !199, size: 32, offset: 736)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "tmp_page", scope: !807, file: !808, line: 73, baseType: !605, size: 64, offset: 768)
!829 = !DIDerivedType(tag: DW_TAG_member, name: "fasync_readers", scope: !807, file: !808, line: 74, baseType: !830, size: 64, offset: 832)
!830 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !831, size: 64)
!831 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fasync_struct", file: !166, line: 1314, size: 320, elements: !832)
!832 = !{!833, !841, !842, !843, !844, !845}
!833 = !DIDerivedType(tag: DW_TAG_member, name: "fa_lock", scope: !831, file: !166, line: 1315, baseType: !834)
!834 = !DIDerivedType(tag: DW_TAG_typedef, name: "rwlock_t", file: !835, line: 20, baseType: !836)
!835 = !DIFile(filename: "./include/linux/rwlock_types.h", directory: "/home/lizy2001/genbc/linux")
!836 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !835, line: 11, elements: !837)
!837 = !{!838}
!838 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !836, file: !835, line: 12, baseType: !839)
!839 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_rwlock_t", file: !56, line: 33, baseType: !840)
!840 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !56, line: 31, elements: !58)
!841 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !831, file: !166, line: 1316, baseType: !6, size: 32)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "fa_fd", scope: !831, file: !166, line: 1317, baseType: !6, size: 32, offset: 32)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "fa_next", scope: !831, file: !166, line: 1318, baseType: !830, size: 64, offset: 64)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "fa_file", scope: !831, file: !166, line: 1319, baseType: !164, size: 64, offset: 128)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "fa_rcu", scope: !831, file: !166, line: 1320, baseType: !178, size: 128, align: 64, offset: 192)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "fasync_writers", scope: !807, file: !808, line: 75, baseType: !830, size: 64, offset: 896)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "bufs", scope: !807, file: !808, line: 76, baseType: !848, size: 64, offset: 960)
!848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !849, size: 64)
!849 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_buffer", file: !808, line: 26, size: 320, elements: !850)
!850 = !{!851, !852, !853, !854, !872, !873}
!851 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !849, file: !808, line: 27, baseType: !605, size: 64)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !849, file: !808, line: 28, baseType: !199, size: 32, offset: 64)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !849, file: !808, line: 28, baseType: !199, size: 32, offset: 96)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !849, file: !808, line: 29, baseType: !855, size: 64, offset: 128)
!855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !856, size: 64)
!856 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !857)
!857 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_buf_operations", file: !808, line: 93, size: 256, elements: !858)
!858 = !{!859, !863, !867, !871}
!859 = !DIDerivedType(tag: DW_TAG_member, name: "confirm", scope: !857, file: !808, line: 101, baseType: !860, size: 64)
!860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !861, size: 64)
!861 = !DISubroutineType(types: !862)
!862 = !{!6, !806, !848}
!863 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !857, file: !808, line: 107, baseType: !864, size: 64, offset: 64)
!864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !865, size: 64)
!865 = !DISubroutineType(types: !866)
!866 = !{null, !806, !848}
!867 = !DIDerivedType(tag: DW_TAG_member, name: "try_steal", scope: !857, file: !808, line: 117, baseType: !868, size: 64, offset: 128)
!868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !869, size: 64)
!869 = !DISubroutineType(types: !870)
!870 = !{!304, !806, !848}
!871 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !857, file: !808, line: 122, baseType: !868, size: 64, offset: 192)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !849, file: !808, line: 30, baseType: !199, size: 32, offset: 192)
!873 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !849, file: !808, line: 31, baseType: !135, size: 64, offset: 256)
!874 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !807, file: !808, line: 77, baseType: !875, size: 64, offset: 1024)
!875 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !876, size: 64)
!876 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "user_struct", file: !877, line: 13, size: 896, elements: !878)
!877 = !DIFile(filename: "./include/linux/sched/user.h", directory: "/home/lizy2001/genbc/linux")
!878 = !{!879, !885, !886, !887, !888, !889, !890, !891, !892, !893, !894}
!879 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !876, file: !877, line: 14, baseType: !880, size: 32)
!880 = !DIDerivedType(tag: DW_TAG_typedef, name: "refcount_t", file: !881, line: 113, baseType: !882)
!881 = !DIFile(filename: "./include/linux/refcount.h", directory: "/home/lizy2001/genbc/linux")
!882 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "refcount_struct", file: !881, line: 111, size: 32, elements: !883)
!883 = !{!884}
!884 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !882, file: !881, line: 112, baseType: !632, size: 32)
!885 = !DIDerivedType(tag: DW_TAG_member, name: "processes", scope: !876, file: !877, line: 15, baseType: !632, size: 32, offset: 32)
!886 = !DIDerivedType(tag: DW_TAG_member, name: "sigpending", scope: !876, file: !877, line: 16, baseType: !632, size: 32, offset: 64)
!887 = !DIDerivedType(tag: DW_TAG_member, name: "epoll_watches", scope: !876, file: !877, line: 21, baseType: !562, size: 64, offset: 128)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "locked_shm", scope: !876, file: !877, line: 27, baseType: !135, size: 64, offset: 192)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "unix_inflight", scope: !876, file: !877, line: 28, baseType: !135, size: 64, offset: 256)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "pipe_bufs", scope: !876, file: !877, line: 29, baseType: !562, size: 64, offset: 320)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "uidhash_node", scope: !876, file: !877, line: 32, baseType: !455, size: 128, offset: 384)
!892 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !876, file: !877, line: 33, baseType: !249, size: 32, offset: 512)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !876, file: !877, line: 37, baseType: !562, size: 64, offset: 576)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "ratelimit", scope: !876, file: !877, line: 44, baseType: !895, size: 256, offset: 640)
!895 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ratelimit_state", file: !896, line: 15, size: 256, elements: !897)
!896 = !DIFile(filename: "./include/linux/ratelimit_types.h", directory: "/home/lizy2001/genbc/linux")
!897 = !{!898, !899, !900, !901, !902, !903, !904}
!898 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !895, file: !896, line: 16, baseType: !658)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !895, file: !896, line: 18, baseType: !6, size: 32)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "burst", scope: !895, file: !896, line: 19, baseType: !6, size: 32, offset: 32)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "printed", scope: !895, file: !896, line: 20, baseType: !6, size: 32, offset: 64)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "missed", scope: !895, file: !896, line: 21, baseType: !6, size: 32, offset: 96)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !895, file: !896, line: 22, baseType: !135, size: 64, offset: 128)
!904 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !895, file: !896, line: 23, baseType: !135, size: 64, offset: 192)
!905 = !DIDerivedType(tag: DW_TAG_member, scope: !772, file: !773, line: 44, baseType: !906, size: 64, offset: 256)
!906 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !772, file: !773, line: 44, size: 64, elements: !907)
!907 = !{!908, !909}
!908 = !DIDerivedType(tag: DW_TAG_member, name: "nr_segs", scope: !906, file: !773, line: 45, baseType: !135, size: 64)
!909 = !DIDerivedType(tag: DW_TAG_member, scope: !906, file: !773, line: 46, baseType: !910, size: 64)
!910 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !906, file: !773, line: 46, size: 64, elements: !911)
!911 = !{!912, !913}
!912 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !910, file: !773, line: 47, baseType: !199, size: 32)
!913 = !DIDerivedType(tag: DW_TAG_member, name: "start_head", scope: !910, file: !773, line: 48, baseType: !199, size: 32, offset: 32)
!914 = !DIDerivedType(tag: DW_TAG_member, name: "migratepage", scope: !666, file: !166, line: 402, baseType: !915, size: 64, offset: 832)
!915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !916, size: 64)
!916 = !DISubroutineType(types: !917)
!917 = !{!6, !618, !605, !605, !918}
!918 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "migrate_mode", file: !919, line: 15, baseType: !199, size: 32, elements: !920)
!919 = !DIFile(filename: "./include/linux/migrate_mode.h", directory: "/home/lizy2001/genbc/linux")
!920 = !{!921, !922, !923, !924}
!921 = !DIEnumerator(name: "MIGRATE_ASYNC", value: 0, isUnsigned: true)
!922 = !DIEnumerator(name: "MIGRATE_SYNC_LIGHT", value: 1, isUnsigned: true)
!923 = !DIEnumerator(name: "MIGRATE_SYNC", value: 2, isUnsigned: true)
!924 = !DIEnumerator(name: "MIGRATE_SYNC_NO_COPY", value: 3, isUnsigned: true)
!925 = !DIDerivedType(tag: DW_TAG_member, name: "isolate_page", scope: !666, file: !166, line: 404, baseType: !926, size: 64, offset: 896)
!926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !927, size: 64)
!927 = !DISubroutineType(types: !928)
!928 = !{!304, !605, !929}
!929 = !DIDerivedType(tag: DW_TAG_typedef, name: "isolate_mode_t", file: !930, line: 305, baseType: !199)
!930 = !DIFile(filename: "./include/linux/mmzone.h", directory: "/home/lizy2001/genbc/linux")
!931 = !DIDerivedType(tag: DW_TAG_member, name: "putback_page", scope: !666, file: !166, line: 405, baseType: !725, size: 64, offset: 960)
!932 = !DIDerivedType(tag: DW_TAG_member, name: "launder_page", scope: !666, file: !166, line: 406, baseType: !681, size: 64, offset: 1024)
!933 = !DIDerivedType(tag: DW_TAG_member, name: "is_partially_uptodate", scope: !666, file: !166, line: 407, baseType: !934, size: 64, offset: 1088)
!934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !935, size: 64)
!935 = !DISubroutineType(types: !936)
!936 = !{!6, !605, !135, !135}
!937 = !DIDerivedType(tag: DW_TAG_member, name: "is_dirty_writeback", scope: !666, file: !166, line: 409, baseType: !938, size: 64, offset: 1152)
!938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !939, size: 64)
!939 = !DISubroutineType(types: !940)
!940 = !{null, !605, !941, !941}
!941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !304, size: 64)
!942 = !DIDerivedType(tag: DW_TAG_member, name: "error_remove_page", scope: !666, file: !166, line: 410, baseType: !943, size: 64, offset: 1216)
!943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !944, size: 64)
!944 = !DISubroutineType(types: !945)
!945 = !{!6, !618, !605}
!946 = !DIDerivedType(tag: DW_TAG_member, name: "swap_activate", scope: !666, file: !166, line: 413, baseType: !947, size: 64, offset: 1280)
!947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !948, size: 64)
!948 = !DISubroutineType(types: !949)
!949 = !{!6, !950, !164, !952}
!950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !951, size: 64)
!951 = !DICompositeType(tag: DW_TAG_structure_type, name: "swap_info_struct", file: !166, line: 61, flags: DIFlagFwdDecl)
!952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !715, size: 64)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "swap_deactivate", scope: !666, file: !166, line: 415, baseType: !954, size: 64, offset: 1344)
!954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !955, size: 64)
!955 = !DISubroutineType(types: !956)
!956 = !{null, !164}
!957 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !619, file: !166, line: 466, baseType: !135, size: 64, offset: 896)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "wb_err", scope: !619, file: !166, line: 467, baseType: !959, size: 32, offset: 960)
!959 = !DIDerivedType(tag: DW_TAG_typedef, name: "errseq_t", file: !960, line: 8, baseType: !229)
!960 = !DIFile(filename: "./include/linux/errseq.h", directory: "/home/lizy2001/genbc/linux")
!961 = !DIDerivedType(tag: DW_TAG_member, name: "private_lock", scope: !619, file: !166, line: 468, baseType: !44, offset: 992)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "private_list", scope: !619, file: !166, line: 469, baseType: !30, size: 128, offset: 1024)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !619, file: !166, line: 470, baseType: !159, size: 64, offset: 1152)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !614, file: !607, line: 87, baseType: !135, size: 64, offset: 192)
!965 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !614, file: !607, line: 94, baseType: !135, size: 64, offset: 256)
!966 = !DIDerivedType(tag: DW_TAG_member, scope: !611, file: !607, line: 96, baseType: !967, size: 64)
!967 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !611, file: !607, line: 96, size: 64, elements: !968)
!968 = !{!969}
!969 = !DIDerivedType(tag: DW_TAG_member, name: "dma_addr", scope: !967, file: !607, line: 101, baseType: !970, size: 64)
!970 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_addr_t", file: !31, line: 143, baseType: !235)
!971 = !DIDerivedType(tag: DW_TAG_member, scope: !611, file: !607, line: 103, baseType: !972, size: 320)
!972 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !611, file: !607, line: 103, size: 320, elements: !973)
!973 = !{!974, !984, !987, !988}
!974 = !DIDerivedType(tag: DW_TAG_member, scope: !972, file: !607, line: 104, baseType: !975, size: 128)
!975 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !972, file: !607, line: 104, size: 128, elements: !976)
!976 = !{!977, !978}
!977 = !DIDerivedType(tag: DW_TAG_member, name: "slab_list", scope: !975, file: !607, line: 105, baseType: !30, size: 128)
!978 = !DIDerivedType(tag: DW_TAG_member, scope: !975, file: !607, line: 106, baseType: !979, size: 128)
!979 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !975, file: !607, line: 106, size: 128, elements: !980)
!980 = !{!981, !982, !983}
!981 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !979, file: !607, line: 107, baseType: !605, size: 64)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !979, file: !607, line: 109, baseType: !6, size: 32, offset: 64)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "pobjects", scope: !979, file: !607, line: 110, baseType: !6, size: 32, offset: 96)
!984 = !DIDerivedType(tag: DW_TAG_member, name: "slab_cache", scope: !972, file: !607, line: 117, baseType: !985, size: 64, offset: 128)
!985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !986, size: 64)
!986 = !DICompositeType(tag: DW_TAG_structure_type, name: "kmem_cache", file: !607, line: 117, flags: DIFlagFwdDecl)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "freelist", scope: !972, file: !607, line: 119, baseType: !159, size: 64, offset: 192)
!988 = !DIDerivedType(tag: DW_TAG_member, scope: !972, file: !607, line: 120, baseType: !989, size: 64, offset: 256)
!989 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !972, file: !607, line: 120, size: 64, elements: !990)
!990 = !{!991, !992, !993}
!991 = !DIDerivedType(tag: DW_TAG_member, name: "s_mem", scope: !989, file: !607, line: 121, baseType: !159, size: 64)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "counters", scope: !989, file: !607, line: 122, baseType: !135, size: 64)
!993 = !DIDerivedType(tag: DW_TAG_member, scope: !989, file: !607, line: 123, baseType: !994, size: 32)
!994 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !989, file: !607, line: 123, size: 32, elements: !995)
!995 = !{!996, !997, !998}
!996 = !DIDerivedType(tag: DW_TAG_member, name: "inuse", scope: !994, file: !607, line: 124, baseType: !199, size: 16, flags: DIFlagBitField, extraData: i64 0)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !994, file: !607, line: 125, baseType: !199, size: 15, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !994, file: !607, line: 126, baseType: !199, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!999 = !DIDerivedType(tag: DW_TAG_member, scope: !611, file: !607, line: 130, baseType: !1000, size: 192)
!1000 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !611, file: !607, line: 130, size: 192, elements: !1001)
!1001 = !{!1002, !1003, !1004, !1005, !1006}
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "compound_head", scope: !1000, file: !607, line: 131, baseType: !135, size: 64)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "compound_dtor", scope: !1000, file: !607, line: 134, baseType: !241, size: 8, offset: 64)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "compound_order", scope: !1000, file: !607, line: 135, baseType: !241, size: 8, offset: 72)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "compound_mapcount", scope: !1000, file: !607, line: 136, baseType: !632, size: 32, offset: 96)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "compound_nr", scope: !1000, file: !607, line: 137, baseType: !199, size: 32, offset: 128)
!1007 = !DIDerivedType(tag: DW_TAG_member, scope: !611, file: !607, line: 139, baseType: !1008, size: 256)
!1008 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !611, file: !607, line: 139, size: 256, elements: !1009)
!1009 = !{!1010, !1011, !1012}
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "_compound_pad_1", scope: !1008, file: !607, line: 140, baseType: !135, size: 64)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "hpage_pinned_refcount", scope: !1008, file: !607, line: 141, baseType: !632, size: 32, offset: 64)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_list", scope: !1008, file: !607, line: 143, baseType: !30, size: 128, offset: 128)
!1013 = !DIDerivedType(tag: DW_TAG_member, scope: !611, file: !607, line: 145, baseType: !1014, size: 256)
!1014 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !611, file: !607, line: 145, size: 256, elements: !1015)
!1015 = !{!1016, !1017, !1020, !1021, !8644}
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_1", scope: !1014, file: !607, line: 146, baseType: !135, size: 64)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "pmd_huge_pte", scope: !1014, file: !607, line: 147, baseType: !1018, size: 64, offset: 64)
!1018 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgtable_t", file: !1019, line: 509, baseType: !605)
!1019 = !DIFile(filename: "./arch/x86/include/asm/pgtable_types.h", directory: "/home/lizy2001/genbc/linux")
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_2", scope: !1014, file: !607, line: 148, baseType: !135, size: 64, offset: 128)
!1021 = !DIDerivedType(tag: DW_TAG_member, scope: !1014, file: !607, line: 149, baseType: !1022, size: 64, offset: 192)
!1022 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1014, file: !607, line: 149, size: 64, elements: !1023)
!1023 = !{!1024, !8643}
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "pt_mm", scope: !1022, file: !607, line: 150, baseType: !1025, size: 64)
!1025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1026, size: 64)
!1026 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_struct", file: !607, line: 388, size: 7296, elements: !1027)
!1027 = !{!1028, !8641}
!1028 = !DIDerivedType(tag: DW_TAG_member, scope: !1026, file: !607, line: 389, baseType: !1029, size: 7296)
!1029 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1026, file: !607, line: 389, size: 7296, elements: !1030)
!1030 = !{!1031, !1155, !1156, !1157, !1161, !1162, !1163, !1164, !1165, !1172, !1173, !1174, !1175, !1176, !1177, !1178, !1179, !1180, !1181, !1182, !1183, !1184, !1185, !1186, !1187, !1188, !1189, !1190, !1191, !1192, !1193, !1194, !1195, !1196, !1197, !1198, !1199, !1200, !1201, !1202, !1206, !1214, !1217, !1257, !1258, !8625, !8626, !8629, !8630, !8631, !8634, !8635, !8636, !8639, !8640}
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !1029, file: !607, line: 390, baseType: !1032, size: 64)
!1032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1033, size: 64)
!1033 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_area_struct", file: !607, line: 305, size: 1472, elements: !1034)
!1034 = !{!1035, !1036, !1037, !1038, !1039, !1040, !1041, !1042, !1049, !1050, !1055, !1056, !1059, !1149, !1150, !1151, !1152, !1153}
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "vm_start", scope: !1033, file: !607, line: 308, baseType: !135, size: 64)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "vm_end", scope: !1033, file: !607, line: 309, baseType: !135, size: 64, offset: 64)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "vm_next", scope: !1033, file: !607, line: 313, baseType: !1032, size: 64, offset: 128)
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "vm_prev", scope: !1033, file: !607, line: 313, baseType: !1032, size: 64, offset: 192)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "vm_rb", scope: !1033, file: !607, line: 315, baseType: !645, size: 192, align: 64, offset: 256)
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_gap", scope: !1033, file: !607, line: 323, baseType: !135, size: 64, offset: 448)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "vm_mm", scope: !1033, file: !607, line: 327, baseType: !1025, size: 64, offset: 512)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "vm_page_prot", scope: !1033, file: !607, line: 333, baseType: !1043, size: 64, offset: 576)
!1043 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprot_t", file: !1019, line: 284, baseType: !1044)
!1044 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pgprot", file: !1019, line: 284, size: 64, elements: !1045)
!1045 = !{!1046}
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "pgprot", scope: !1044, file: !1019, line: 284, baseType: !1047, size: 64)
!1047 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprotval_t", file: !1048, line: 19, baseType: !135)
!1048 = !DIFile(filename: "./arch/x86/include/asm/pgtable_64_types.h", directory: "/home/lizy2001/genbc/linux")
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "vm_flags", scope: !1033, file: !607, line: 334, baseType: !135, size: 64, offset: 640)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "shared", scope: !1033, file: !607, line: 343, baseType: !1051, size: 256, offset: 704)
!1051 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1033, file: !607, line: 340, size: 256, elements: !1052)
!1052 = !{!1053, !1054}
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !1051, file: !607, line: 341, baseType: !645, size: 192, align: 64)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_last", scope: !1051, file: !607, line: 342, baseType: !135, size: 64, offset: 192)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma_chain", scope: !1033, file: !607, line: 351, baseType: !30, size: 128, offset: 960)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma", scope: !1033, file: !607, line: 353, baseType: !1057, size: 64, offset: 1088)
!1057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1058, size: 64)
!1058 = !DICompositeType(tag: DW_TAG_structure_type, name: "anon_vma", file: !607, line: 353, flags: DIFlagFwdDecl)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !1033, file: !607, line: 356, baseType: !1060, size: 64, offset: 1152)
!1060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1061, size: 64)
!1061 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1062)
!1062 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_operations_struct", file: !1063, line: 557, size: 832, elements: !1064)
!1063 = !DIFile(filename: "./include/linux/mm.h", directory: "/home/lizy2001/genbc/linux")
!1064 = !{!1065, !1069, !1070, !1074, !1078, !1118, !1127, !1131, !1135, !1136, !1137, !1141, !1145}
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !1062, file: !1063, line: 558, baseType: !1066, size: 64)
!1066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1067, size: 64)
!1067 = !DISubroutineType(types: !1068)
!1068 = !{null, !1032}
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !1062, file: !1063, line: 559, baseType: !1066, size: 64, offset: 64)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "split", scope: !1062, file: !1063, line: 560, baseType: !1071, size: 64, offset: 128)
!1071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1072, size: 64)
!1072 = !DISubroutineType(types: !1073)
!1073 = !{!6, !1032, !135}
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "mremap", scope: !1062, file: !1063, line: 561, baseType: !1075, size: 64, offset: 192)
!1075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1076, size: 64)
!1076 = !DISubroutineType(types: !1077)
!1077 = !{!6, !1032}
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "fault", scope: !1062, file: !1063, line: 562, baseType: !1079, size: 64, offset: 256)
!1079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1080, size: 64)
!1080 = !DISubroutineType(types: !1081)
!1081 = !{!1082, !1083}
!1082 = !DIDerivedType(tag: DW_TAG_typedef, name: "vm_fault_t", file: !607, line: 682, baseType: !199)
!1083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1084, size: 64)
!1084 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_fault", file: !1063, line: 508, size: 768, elements: !1085)
!1085 = !{!1086, !1087, !1088, !1089, !1090, !1091, !1098, !1105, !1111, !1112, !1113, !1115, !1117}
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "vma", scope: !1084, file: !1063, line: 509, baseType: !1032, size: 64)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1084, file: !1063, line: 510, baseType: !199, size: 32, offset: 64)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !1084, file: !1063, line: 511, baseType: !628, size: 32, offset: 96)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "pgoff", scope: !1084, file: !1063, line: 512, baseType: !135, size: 64, offset: 128)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !1084, file: !1063, line: 513, baseType: !135, size: 64, offset: 192)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !1084, file: !1063, line: 514, baseType: !1092, size: 64, offset: 256)
!1092 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1093, size: 64)
!1093 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmd_t", file: !1019, line: 385, baseType: !1094)
!1094 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1019, line: 385, size: 64, elements: !1095)
!1095 = !{!1096}
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !1094, file: !1019, line: 385, baseType: !1097, size: 64)
!1097 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmdval_t", file: !1048, line: 15, baseType: !135)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !1084, file: !1063, line: 516, baseType: !1099, size: 64, offset: 320)
!1099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1100, size: 64)
!1100 = !DIDerivedType(tag: DW_TAG_typedef, name: "pud_t", file: !1019, line: 359, baseType: !1101)
!1101 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1019, line: 359, size: 64, elements: !1102)
!1102 = !{!1103}
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !1101, file: !1019, line: 359, baseType: !1104, size: 64)
!1104 = !DIDerivedType(tag: DW_TAG_typedef, name: "pudval_t", file: !1048, line: 16, baseType: !135)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "orig_pte", scope: !1084, file: !1063, line: 519, baseType: !1106, size: 64, offset: 384)
!1106 = !DIDerivedType(tag: DW_TAG_typedef, name: "pte_t", file: !1048, line: 21, baseType: !1107)
!1107 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1048, line: 21, size: 64, elements: !1108)
!1108 = !{!1109}
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !1107, file: !1048, line: 21, baseType: !1110, size: 64)
!1110 = !DIDerivedType(tag: DW_TAG_typedef, name: "pteval_t", file: !1048, line: 14, baseType: !135)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "cow_page", scope: !1084, file: !1063, line: 521, baseType: !605, size: 64, offset: 448)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !1084, file: !1063, line: 522, baseType: !605, size: 64, offset: 512)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !1084, file: !1063, line: 528, baseType: !1114, size: 64, offset: 576)
!1114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1106, size: 64)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !1084, file: !1063, line: 532, baseType: !1116, size: 64, offset: 640)
!1116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !44, size: 64)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_pte", scope: !1084, file: !1063, line: 536, baseType: !1018, size: 64, offset: 704)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "huge_fault", scope: !1062, file: !1063, line: 563, baseType: !1119, size: 64, offset: 320)
!1119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1120, size: 64)
!1120 = !DISubroutineType(types: !1121)
!1121 = !{!1082, !1083, !1122}
!1122 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "page_entry_size", file: !1063, line: 546, baseType: !199, size: 32, elements: !1123)
!1123 = !{!1124, !1125, !1126}
!1124 = !DIEnumerator(name: "PE_SIZE_PTE", value: 0, isUnsigned: true)
!1125 = !DIEnumerator(name: "PE_SIZE_PMD", value: 1, isUnsigned: true)
!1126 = !DIEnumerator(name: "PE_SIZE_PUD", value: 2, isUnsigned: true)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "map_pages", scope: !1062, file: !1063, line: 565, baseType: !1128, size: 64, offset: 384)
!1128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1129, size: 64)
!1129 = !DISubroutineType(types: !1130)
!1130 = !{null, !1083, !135, !135}
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "pagesize", scope: !1062, file: !1063, line: 567, baseType: !1132, size: 64, offset: 448)
!1132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1133, size: 64)
!1133 = !DISubroutineType(types: !1134)
!1134 = !{!135, !1032}
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "page_mkwrite", scope: !1062, file: !1063, line: 571, baseType: !1079, size: 64, offset: 512)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "pfn_mkwrite", scope: !1062, file: !1063, line: 574, baseType: !1079, size: 64, offset: 576)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "access", scope: !1062, file: !1063, line: 579, baseType: !1138, size: 64, offset: 640)
!1138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1139, size: 64)
!1139 = !DISubroutineType(types: !1140)
!1140 = !{!6, !1032, !135, !159, !6, !6}
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1062, file: !1063, line: 585, baseType: !1142, size: 64, offset: 704)
!1142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1143, size: 64)
!1143 = !DISubroutineType(types: !1144)
!1144 = !{!26, !1032}
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "find_special_page", scope: !1062, file: !1063, line: 615, baseType: !1146, size: 64, offset: 768)
!1146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1147, size: 64)
!1147 = !DISubroutineType(types: !1148)
!1148 = !{!605, !1032, !135}
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "vm_pgoff", scope: !1033, file: !607, line: 359, baseType: !135, size: 64, offset: 1216)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "vm_file", scope: !1033, file: !607, line: 361, baseType: !164, size: 64, offset: 1280)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "vm_private_data", scope: !1033, file: !607, line: 362, baseType: !159, size: 64, offset: 1344)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "swap_readahead_info", scope: !1033, file: !607, line: 365, baseType: !562, size: 64, offset: 1408)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "vm_userfaultfd_ctx", scope: !1033, file: !607, line: 373, baseType: !1154, offset: 1472)
!1154 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_userfaultfd_ctx", file: !607, line: 296, elements: !58)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "mm_rb", scope: !1029, file: !607, line: 391, baseType: !641, size: 64, offset: 64)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache_seqnum", scope: !1029, file: !607, line: 392, baseType: !235, size: 64, offset: 128)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !1029, file: !607, line: 394, baseType: !1158, size: 64, offset: 192)
!1158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1159, size: 64)
!1159 = !DISubroutineType(types: !1160)
!1160 = !{!135, !164, !135, !135, !135, !135}
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_base", scope: !1029, file: !607, line: 398, baseType: !135, size: 64, offset: 256)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_legacy_base", scope: !1029, file: !607, line: 399, baseType: !135, size: 64, offset: 320)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "task_size", scope: !1029, file: !607, line: 405, baseType: !135, size: 64, offset: 384)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "highest_vm_end", scope: !1029, file: !607, line: 406, baseType: !135, size: 64, offset: 448)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !1029, file: !607, line: 407, baseType: !1166, size: 64, offset: 512)
!1166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1167, size: 64)
!1167 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgd_t", file: !1019, line: 286, baseType: !1168)
!1168 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1019, line: 286, size: 64, elements: !1169)
!1169 = !{!1170}
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !1168, file: !1019, line: 286, baseType: !1171, size: 64)
!1171 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgdval_t", file: !1048, line: 18, baseType: !135)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "membarrier_state", scope: !1029, file: !607, line: 416, baseType: !632, size: 32, offset: 576)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "mm_users", scope: !1029, file: !607, line: 428, baseType: !632, size: 32, offset: 608)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "mm_count", scope: !1029, file: !607, line: 437, baseType: !632, size: 32, offset: 640)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "has_pinned", scope: !1029, file: !607, line: 447, baseType: !632, size: 32, offset: 672)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "pgtables_bytes", scope: !1029, file: !607, line: 450, baseType: !562, size: 64, offset: 704)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "map_count", scope: !1029, file: !607, line: 452, baseType: !6, size: 32, offset: 768)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "page_table_lock", scope: !1029, file: !607, line: 454, baseType: !44, offset: 800)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_lock", scope: !1029, file: !607, line: 457, baseType: !652, size: 256, offset: 832)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "mmlist", scope: !1029, file: !607, line: 459, baseType: !30, size: 128, offset: 1088)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_rss", scope: !1029, file: !607, line: 466, baseType: !135, size: 64, offset: 1216)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_vm", scope: !1029, file: !607, line: 467, baseType: !135, size: 64, offset: 1280)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "total_vm", scope: !1029, file: !607, line: 469, baseType: !135, size: 64, offset: 1344)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !1029, file: !607, line: 470, baseType: !135, size: 64, offset: 1408)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "pinned_vm", scope: !1029, file: !607, line: 471, baseType: !564, size: 64, offset: 1472)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "data_vm", scope: !1029, file: !607, line: 472, baseType: !135, size: 64, offset: 1536)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "exec_vm", scope: !1029, file: !607, line: 473, baseType: !135, size: 64, offset: 1600)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm", scope: !1029, file: !607, line: 474, baseType: !135, size: 64, offset: 1664)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "def_flags", scope: !1029, file: !607, line: 475, baseType: !135, size: 64, offset: 1728)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "arg_lock", scope: !1029, file: !607, line: 477, baseType: !44, offset: 1792)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "start_code", scope: !1029, file: !607, line: 478, baseType: !135, size: 64, offset: 1792)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "end_code", scope: !1029, file: !607, line: 478, baseType: !135, size: 64, offset: 1856)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "start_data", scope: !1029, file: !607, line: 478, baseType: !135, size: 64, offset: 1920)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "end_data", scope: !1029, file: !607, line: 478, baseType: !135, size: 64, offset: 1984)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "start_brk", scope: !1029, file: !607, line: 479, baseType: !135, size: 64, offset: 2048)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "brk", scope: !1029, file: !607, line: 479, baseType: !135, size: 64, offset: 2112)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "start_stack", scope: !1029, file: !607, line: 479, baseType: !135, size: 64, offset: 2176)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "arg_start", scope: !1029, file: !607, line: 480, baseType: !135, size: 64, offset: 2240)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "arg_end", scope: !1029, file: !607, line: 480, baseType: !135, size: 64, offset: 2304)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "env_start", scope: !1029, file: !607, line: 480, baseType: !135, size: 64, offset: 2368)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "env_end", scope: !1029, file: !607, line: 480, baseType: !135, size: 64, offset: 2432)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "saved_auxv", scope: !1029, file: !607, line: 482, baseType: !1203, size: 2816, offset: 2496)
!1203 = !DICompositeType(tag: DW_TAG_array_type, baseType: !135, size: 2816, elements: !1204)
!1204 = !{!1205}
!1205 = !DISubrange(count: 44)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "rss_stat", scope: !1029, file: !607, line: 488, baseType: !1207, size: 256, offset: 5312)
!1207 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_rss_stat", file: !1208, line: 60, size: 256, elements: !1209)
!1208 = !DIFile(filename: "./include/linux/mm_types_task.h", directory: "/home/lizy2001/genbc/linux")
!1209 = !{!1210}
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1207, file: !1208, line: 61, baseType: !1211, size: 256)
!1211 = !DICompositeType(tag: DW_TAG_array_type, baseType: !562, size: 256, elements: !1212)
!1212 = !{!1213}
!1213 = !DISubrange(count: 4)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "binfmt", scope: !1029, file: !607, line: 490, baseType: !1215, size: 64, offset: 5568)
!1215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1216, size: 64)
!1216 = !DICompositeType(tag: DW_TAG_structure_type, name: "linux_binfmt", file: !607, line: 490, flags: DIFlagFwdDecl)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1029, file: !607, line: 493, baseType: !1218, size: 896, offset: 5632)
!1218 = !DIDerivedType(tag: DW_TAG_typedef, name: "mm_context_t", file: !1219, line: 53, baseType: !1220)
!1219 = !DIFile(filename: "./arch/x86/include/asm/mmu.h", directory: "/home/lizy2001/genbc/linux")
!1220 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1219, line: 13, size: 896, elements: !1221)
!1221 = !{!1222, !1223, !1224, !1225, !1228, !1229, !1230, !1231, !1251, !1252, !1253}
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_id", scope: !1220, file: !1219, line: 18, baseType: !235, size: 64)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_gen", scope: !1220, file: !1219, line: 28, baseType: !564, size: 64, offset: 64)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "ldt_usr_sem", scope: !1220, file: !1219, line: 31, baseType: !652, size: 256, offset: 128)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "ldt", scope: !1220, file: !1219, line: 32, baseType: !1226, size: 64, offset: 384)
!1226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1227, size: 64)
!1227 = !DICompositeType(tag: DW_TAG_structure_type, name: "ldt_struct", file: !1219, line: 32, flags: DIFlagFwdDecl)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "ia32_compat", scope: !1220, file: !1219, line: 37, baseType: !127, size: 16, offset: 448)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1220, file: !1219, line: 40, baseType: !558, size: 192, offset: 512)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "vdso", scope: !1220, file: !1219, line: 41, baseType: !159, size: 64, offset: 704)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "vdso_image", scope: !1220, file: !1219, line: 42, baseType: !1232, size: 64, offset: 768)
!1232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1233, size: 64)
!1233 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1234)
!1234 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vdso_image", file: !1235, line: 13, size: 896, elements: !1236)
!1235 = !DIFile(filename: "./arch/x86/include/asm/vdso.h", directory: "/home/lizy2001/genbc/linux")
!1236 = !{!1237, !1238, !1239, !1240, !1241, !1242, !1243, !1244, !1245, !1246, !1247, !1248, !1249, !1250}
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1234, file: !1235, line: 14, baseType: !159, size: 64)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1234, file: !1235, line: 15, baseType: !135, size: 64, offset: 64)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "alt", scope: !1234, file: !1235, line: 17, baseType: !135, size: 64, offset: 128)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "alt_len", scope: !1234, file: !1235, line: 17, baseType: !135, size: 64, offset: 192)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_start", scope: !1234, file: !1235, line: 19, baseType: !120, size: 64, offset: 256)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_page", scope: !1234, file: !1235, line: 21, baseType: !120, size: 64, offset: 320)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "sym_pvclock_page", scope: !1234, file: !1235, line: 22, baseType: !120, size: 64, offset: 384)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "sym_hvclock_page", scope: !1234, file: !1235, line: 23, baseType: !120, size: 64, offset: 448)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "sym_timens_page", scope: !1234, file: !1235, line: 24, baseType: !120, size: 64, offset: 512)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "sym_VDSO32_NOTE_MASK", scope: !1234, file: !1235, line: 25, baseType: !120, size: 64, offset: 576)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_sigreturn", scope: !1234, file: !1235, line: 26, baseType: !120, size: 64, offset: 640)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_rt_sigreturn", scope: !1234, file: !1235, line: 27, baseType: !120, size: 64, offset: 704)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_vsyscall", scope: !1234, file: !1235, line: 28, baseType: !120, size: 64, offset: 768)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "sym_int80_landing_pad", scope: !1234, file: !1235, line: 29, baseType: !120, size: 64, offset: 832)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "perf_rdpmc_allowed", scope: !1220, file: !1219, line: 44, baseType: !632, size: 32, offset: 832)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "pkey_allocation_map", scope: !1220, file: !1219, line: 50, baseType: !744, size: 16, offset: 864)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "execute_only_pkey", scope: !1220, file: !1219, line: 51, baseType: !1254, size: 16, offset: 880)
!1254 = !DIDerivedType(tag: DW_TAG_typedef, name: "s16", file: !230, line: 18, baseType: !1255)
!1255 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s16", file: !232, line: 23, baseType: !1256)
!1256 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1029, file: !607, line: 495, baseType: !135, size: 64, offset: 6528)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "core_state", scope: !1029, file: !607, line: 497, baseType: !1259, size: 64, offset: 6592)
!1259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1260, size: 64)
!1260 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_state", file: !607, line: 381, size: 384, elements: !1261)
!1261 = !{!1262, !1263, !8624}
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !1260, file: !607, line: 382, baseType: !632, size: 32)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "dumper", scope: !1260, file: !607, line: 383, baseType: !1264, size: 128, offset: 64)
!1264 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_thread", file: !607, line: 376, size: 128, elements: !1265)
!1265 = !{!1266, !8622}
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !1264, file: !607, line: 377, baseType: !1267, size: 64)
!1267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1268, size: 64)
!1268 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_struct", file: !1269, line: 640, size: 48640, elements: !1270)
!1269 = !DIFile(filename: "./include/linux/sched.h", directory: "/home/lizy2001/genbc/linux")
!1270 = !{!1271, !1277, !1279, !1280, !1281, !1282, !1283, !1284, !1285, !1286, !1287, !1288, !1292, !1310, !1321, !1411, !1412, !1413, !1424, !1425, !1427, !1428, !1429, !1430, !1436, !1437, !1438, !1439, !1440, !1441, !1442, !1443, !1444, !1445, !1446, !1447, !1448, !1449, !1450, !1451, !1520, !1523, !1524, !1525, !1526, !1527, !1528, !1529, !1530, !1531, !1532, !1849, !1851, !1852, !1853, !1854, !1855, !1856, !1857, !1858, !1859, !1865, !1866, !1867, !1868, !1869, !1870, !1871, !1883, !1888, !1939, !1940, !1941, !1942, !1946, !1949, !1952, !1955, !1958, !7285, !7381, !7410, !7411, !7412, !7413, !7414, !7415, !7416, !7417, !7418, !7427, !7428, !7429, !7430, !7431, !7436, !7437, !7438, !7441, !7442, !8282, !8291, !8294, !8295, !8296, !8299, !8300, !8379, !8380, !8383, !8384, !8387, !8388, !8389, !8393, !8394, !8395, !8408, !8409, !8410, !8420, !8425, !8426, !8427, !8428, !8429, !8430, !8431, !8432, !8433, !8434, !8448, !8449, !8450, !8451, !8452, !8453, !8454, !8455, !8456}
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "thread_info", scope: !1268, file: !1269, line: 646, baseType: !1272, size: 128)
!1272 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_info", file: !1273, line: 56, size: 128, elements: !1274)
!1273 = !DIFile(filename: "./arch/x86/include/asm/thread_info.h", directory: "/home/lizy2001/genbc/linux")
!1274 = !{!1275, !1276}
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1272, file: !1273, line: 57, baseType: !135, size: 64)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !1272, file: !1273, line: 58, baseType: !229, size: 32, offset: 64)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1268, file: !1269, line: 649, baseType: !1278, size: 64, offset: 128)
!1278 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !120)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !1268, file: !1269, line: 657, baseType: !159, size: 64, offset: 192)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1268, file: !1269, line: 658, baseType: !880, size: 32, offset: 256)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1268, file: !1269, line: 660, baseType: !199, size: 32, offset: 288)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace", scope: !1268, file: !1269, line: 661, baseType: !199, size: 32, offset: 320)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1268, file: !1269, line: 684, baseType: !6, size: 32, offset: 352)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1268, file: !1269, line: 686, baseType: !6, size: 32, offset: 384)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "static_prio", scope: !1268, file: !1269, line: 687, baseType: !6, size: 32, offset: 416)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "normal_prio", scope: !1268, file: !1269, line: 688, baseType: !6, size: 32, offset: 448)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "rt_priority", scope: !1268, file: !1269, line: 689, baseType: !199, size: 32, offset: 480)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "sched_class", scope: !1268, file: !1269, line: 691, baseType: !1289, size: 64, offset: 512)
!1289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1290, size: 64)
!1290 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1291)
!1291 = !DICompositeType(tag: DW_TAG_structure_type, name: "sched_class", file: !1269, line: 691, flags: DIFlagFwdDecl)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "se", scope: !1268, file: !1269, line: 692, baseType: !1293, size: 832, offset: 576)
!1293 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_entity", file: !1269, line: 451, size: 832, elements: !1294)
!1294 = !{!1295, !1300, !1301, !1302, !1303, !1304, !1305, !1306, !1307, !1308}
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "load", scope: !1293, file: !1269, line: 453, baseType: !1296, size: 128)
!1296 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "load_weight", file: !1269, line: 325, size: 128, elements: !1297)
!1297 = !{!1298, !1299}
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1296, file: !1269, line: 326, baseType: !135, size: 64)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "inv_weight", scope: !1296, file: !1269, line: 327, baseType: !229, size: 32, offset: 64)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "run_node", scope: !1293, file: !1269, line: 454, baseType: !645, size: 192, align: 64, offset: 128)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "group_node", scope: !1293, file: !1269, line: 455, baseType: !30, size: 128, offset: 320)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1293, file: !1269, line: 456, baseType: !199, size: 32, offset: 448)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "exec_start", scope: !1293, file: !1269, line: 458, baseType: !235, size: 64, offset: 512)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !1293, file: !1269, line: 459, baseType: !235, size: 64, offset: 576)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "vruntime", scope: !1293, file: !1269, line: 460, baseType: !235, size: 64, offset: 640)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "prev_sum_exec_runtime", scope: !1293, file: !1269, line: 461, baseType: !235, size: 64, offset: 704)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "nr_migrations", scope: !1293, file: !1269, line: 463, baseType: !235, size: 64, offset: 768)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "statistics", scope: !1293, file: !1269, line: 465, baseType: !1309, offset: 832)
!1309 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_statistics", file: !1269, line: 415, elements: !58)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1268, file: !1269, line: 693, baseType: !1311, size: 384, offset: 1408)
!1311 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_rt_entity", file: !1269, line: 489, size: 384, elements: !1312)
!1312 = !{!1313, !1314, !1315, !1316, !1317, !1318, !1319}
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "run_list", scope: !1311, file: !1269, line: 490, baseType: !30, size: 128)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1311, file: !1269, line: 491, baseType: !135, size: 64, offset: 128)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_stamp", scope: !1311, file: !1269, line: 492, baseType: !135, size: 64, offset: 192)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "time_slice", scope: !1311, file: !1269, line: 493, baseType: !199, size: 32, offset: 256)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1311, file: !1269, line: 494, baseType: !127, size: 16, offset: 288)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "on_list", scope: !1311, file: !1269, line: 495, baseType: !127, size: 16, offset: 304)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !1311, file: !1269, line: 497, baseType: !1320, size: 64, offset: 320)
!1320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1311, size: 64)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "dl", scope: !1268, file: !1269, line: 697, baseType: !1322, size: 1792, offset: 1792)
!1322 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_dl_entity", file: !1269, line: 507, size: 1792, elements: !1323)
!1323 = !{!1324, !1325, !1326, !1327, !1328, !1329, !1330, !1331, !1332, !1333, !1334, !1335, !1336, !1337, !1408, !1409}
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !1322, file: !1269, line: 508, baseType: !645, size: 192, align: 64)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "dl_runtime", scope: !1322, file: !1269, line: 515, baseType: !235, size: 64, offset: 192)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "dl_deadline", scope: !1322, file: !1269, line: 516, baseType: !235, size: 64, offset: 256)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "dl_period", scope: !1322, file: !1269, line: 517, baseType: !235, size: 64, offset: 320)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "dl_bw", scope: !1322, file: !1269, line: 518, baseType: !235, size: 64, offset: 384)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "dl_density", scope: !1322, file: !1269, line: 519, baseType: !235, size: 64, offset: 448)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "runtime", scope: !1322, file: !1269, line: 526, baseType: !568, size: 64, offset: 512)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", scope: !1322, file: !1269, line: 527, baseType: !235, size: 64, offset: 576)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1322, file: !1269, line: 528, baseType: !199, size: 32, offset: 640)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "dl_throttled", scope: !1322, file: !1269, line: 554, baseType: !199, size: 1, offset: 672, flags: DIFlagBitField, extraData: i64 672)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "dl_yielded", scope: !1322, file: !1269, line: 555, baseType: !199, size: 1, offset: 673, flags: DIFlagBitField, extraData: i64 672)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "dl_non_contending", scope: !1322, file: !1269, line: 556, baseType: !199, size: 1, offset: 674, flags: DIFlagBitField, extraData: i64 672)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "dl_overrun", scope: !1322, file: !1269, line: 557, baseType: !199, size: 1, offset: 675, flags: DIFlagBitField, extraData: i64 672)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "dl_timer", scope: !1322, file: !1269, line: 563, baseType: !1338, size: 512, offset: 704)
!1338 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer", file: !1339, line: 118, size: 512, elements: !1340)
!1339 = !DIFile(filename: "./include/linux/hrtimer.h", directory: "/home/lizy2001/genbc/linux")
!1340 = !{!1341, !1349, !1350, !1359, !1402, !1405, !1406, !1407}
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1338, file: !1339, line: 119, baseType: !1342, size: 256)
!1342 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_node", file: !1343, line: 9, size: 256, elements: !1344)
!1343 = !DIFile(filename: "./include/linux/timerqueue.h", directory: "/home/lizy2001/genbc/linux")
!1344 = !{!1345, !1346}
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1342, file: !1343, line: 10, baseType: !645, size: 192, align: 64)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1342, file: !1343, line: 11, baseType: !1347, size: 64, offset: 192)
!1347 = !DIDerivedType(tag: DW_TAG_typedef, name: "ktime_t", file: !1348, line: 29, baseType: !568)
!1348 = !DIFile(filename: "./include/linux/ktime.h", directory: "/home/lizy2001/genbc/linux")
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "_softexpires", scope: !1338, file: !1339, line: 120, baseType: !1347, size: 64, offset: 256)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !1338, file: !1339, line: 121, baseType: !1351, size: 64, offset: 320)
!1351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1352, size: 64)
!1352 = !DISubroutineType(types: !1353)
!1353 = !{!1354, !1358}
!1354 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hrtimer_restart", file: !1339, line: 65, baseType: !199, size: 32, elements: !1355)
!1355 = !{!1356, !1357}
!1356 = !DIEnumerator(name: "HRTIMER_NORESTART", value: 0, isUnsigned: true)
!1357 = !DIEnumerator(name: "HRTIMER_RESTART", value: 1, isUnsigned: true)
!1358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1338, size: 64)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1338, file: !1339, line: 122, baseType: !1360, size: 64, offset: 384)
!1360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1361, size: 64)
!1361 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_clock_base", file: !1339, line: 159, size: 512, align: 512, elements: !1362)
!1362 = !{!1363, !1383, !1384, !1387, !1392, !1393, !1397, !1401}
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_base", scope: !1361, file: !1339, line: 160, baseType: !1364, size: 64)
!1364 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1365, size: 64)
!1365 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_cpu_base", file: !1339, line: 214, size: 4608, align: 512, elements: !1366)
!1366 = !{!1367, !1368, !1369, !1370, !1371, !1372, !1373, !1374, !1375, !1376, !1377, !1378, !1379}
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1365, file: !1339, line: 215, baseType: !658)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !1365, file: !1339, line: 216, baseType: !199, size: 32)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "active_bases", scope: !1365, file: !1339, line: 217, baseType: !199, size: 32, offset: 32)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "clock_was_set_seq", scope: !1365, file: !1339, line: 218, baseType: !199, size: 32, offset: 64)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "hres_active", scope: !1365, file: !1339, line: 219, baseType: !199, size: 1, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "in_hrtirq", scope: !1365, file: !1339, line: 220, baseType: !199, size: 1, offset: 97, flags: DIFlagBitField, extraData: i64 96)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "hang_detected", scope: !1365, file: !1339, line: 221, baseType: !199, size: 1, offset: 98, flags: DIFlagBitField, extraData: i64 96)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_activated", scope: !1365, file: !1339, line: 222, baseType: !199, size: 1, offset: 99, flags: DIFlagBitField, extraData: i64 96)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "expires_next", scope: !1365, file: !1339, line: 233, baseType: !1347, size: 64, offset: 128)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "next_timer", scope: !1365, file: !1339, line: 234, baseType: !1358, size: 64, offset: 192)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_expires_next", scope: !1365, file: !1339, line: 235, baseType: !1347, size: 64, offset: 256)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_next_timer", scope: !1365, file: !1339, line: 236, baseType: !1358, size: 64, offset: 320)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "clock_base", scope: !1365, file: !1339, line: 237, baseType: !1380, size: 4096, offset: 512)
!1380 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1361, size: 4096, elements: !1381)
!1381 = !{!1382}
!1382 = !DISubrange(count: 8)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1361, file: !1339, line: 161, baseType: !199, size: 32, offset: 64)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !1361, file: !1339, line: 162, baseType: !1385, size: 32, offset: 96)
!1385 = !DIDerivedType(tag: DW_TAG_typedef, name: "clockid_t", file: !31, line: 27, baseType: !1386)
!1386 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clockid_t", file: !118, line: 96, baseType: !6)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !1361, file: !1339, line: 163, baseType: !1388, size: 32, offset: 128)
!1388 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_raw_spinlock_t", file: !202, line: 276, baseType: !1389)
!1389 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_raw_spinlock", file: !202, line: 276, size: 32, elements: !1390)
!1390 = !{!1391}
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !1389, file: !202, line: 276, baseType: !206, size: 32)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "running", scope: !1361, file: !1339, line: 164, baseType: !1358, size: 64, offset: 192)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !1361, file: !1339, line: 165, baseType: !1394, size: 128, offset: 256)
!1394 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_head", file: !1343, line: 14, size: 128, elements: !1395)
!1395 = !{!1396}
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !1394, file: !1343, line: 15, baseType: !637, size: 128)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "get_time", scope: !1361, file: !1339, line: 166, baseType: !1398, size: 64, offset: 384)
!1398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1399, size: 64)
!1399 = !DISubroutineType(types: !1400)
!1400 = !{!1347}
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1361, file: !1339, line: 167, baseType: !1347, size: 64, offset: 448)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1338, file: !1339, line: 123, baseType: !1403, size: 8, offset: 448)
!1403 = !DIDerivedType(tag: DW_TAG_typedef, name: "u8", file: !230, line: 17, baseType: !1404)
!1404 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u8", file: !232, line: 21, baseType: !241)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "is_rel", scope: !1338, file: !1339, line: 124, baseType: !1403, size: 8, offset: 456)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "is_soft", scope: !1338, file: !1339, line: 125, baseType: !1403, size: 8, offset: 464)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "is_hard", scope: !1338, file: !1339, line: 126, baseType: !1403, size: 8, offset: 472)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "inactive_timer", scope: !1322, file: !1269, line: 572, baseType: !1338, size: 512, offset: 1216)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "pi_se", scope: !1322, file: !1269, line: 580, baseType: !1410, size: 64, offset: 1728)
!1410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1322, size: 64)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !1268, file: !1269, line: 721, baseType: !199, size: 32, offset: 3584)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cpus_allowed", scope: !1268, file: !1269, line: 722, baseType: !6, size: 32, offset: 3616)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_ptr", scope: !1268, file: !1269, line: 723, baseType: !1414, size: 64, offset: 3648)
!1414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1415, size: 64)
!1415 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1416)
!1416 = !DIDerivedType(tag: DW_TAG_typedef, name: "cpumask_t", file: !1417, line: 17, baseType: !1418)
!1417 = !DIFile(filename: "./include/linux/cpumask.h", directory: "/home/lizy2001/genbc/linux")
!1418 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpumask", file: !1417, line: 17, size: 64, elements: !1419)
!1419 = !{!1420}
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !1418, file: !1417, line: 17, baseType: !1421, size: 64)
!1421 = !DICompositeType(tag: DW_TAG_array_type, baseType: !135, size: 64, elements: !1422)
!1422 = !{!1423}
!1423 = !DISubrange(count: 1)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_mask", scope: !1268, file: !1269, line: 724, baseType: !1416, size: 64, offset: 3712)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "sched_info", scope: !1268, file: !1269, line: 749, baseType: !1426, offset: 3776)
!1426 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_info", file: !1269, line: 290, elements: !58)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !1268, file: !1269, line: 751, baseType: !30, size: 128, offset: 3776)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "mm", scope: !1268, file: !1269, line: 757, baseType: !1025, size: 64, offset: 3904)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "active_mm", scope: !1268, file: !1269, line: 758, baseType: !1025, size: 64, offset: 3968)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache", scope: !1268, file: !1269, line: 761, baseType: !1431, size: 320, offset: 4032)
!1431 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmacache", file: !1208, line: 34, size: 320, elements: !1432)
!1432 = !{!1433, !1434}
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "seqnum", scope: !1431, file: !1208, line: 35, baseType: !235, size: 64)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "vmas", scope: !1431, file: !1208, line: 36, baseType: !1435, size: 256, offset: 64)
!1435 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1032, size: 256, elements: !1212)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "exit_state", scope: !1268, file: !1269, line: 766, baseType: !6, size: 32, offset: 4352)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "exit_code", scope: !1268, file: !1269, line: 767, baseType: !6, size: 32, offset: 4384)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "exit_signal", scope: !1268, file: !1269, line: 768, baseType: !6, size: 32, offset: 4416)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "pdeath_signal", scope: !1268, file: !1269, line: 770, baseType: !6, size: 32, offset: 4448)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "jobctl", scope: !1268, file: !1269, line: 772, baseType: !135, size: 64, offset: 4480)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !1268, file: !1269, line: 775, baseType: !199, size: 32, offset: 4544)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "sched_reset_on_fork", scope: !1268, file: !1269, line: 778, baseType: !199, size: 1, offset: 4576, flags: DIFlagBitField, extraData: i64 4576)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "sched_contributes_to_load", scope: !1268, file: !1269, line: 779, baseType: !199, size: 1, offset: 4577, flags: DIFlagBitField, extraData: i64 4576)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "sched_migrated", scope: !1268, file: !1269, line: 780, baseType: !199, size: 1, offset: 4578, flags: DIFlagBitField, extraData: i64 4576)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "sched_remote_wakeup", scope: !1268, file: !1269, line: 803, baseType: !199, size: 1, offset: 4608, flags: DIFlagBitField, extraData: i64 4608)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "in_execve", scope: !1268, file: !1269, line: 806, baseType: !199, size: 1, offset: 4609, flags: DIFlagBitField, extraData: i64 4608)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "in_iowait", scope: !1268, file: !1269, line: 807, baseType: !199, size: 1, offset: 4610, flags: DIFlagBitField, extraData: i64 4608)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "restore_sigmask", scope: !1268, file: !1269, line: 809, baseType: !199, size: 1, offset: 4611, flags: DIFlagBitField, extraData: i64 4608)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "brk_randomized", scope: !1268, file: !1269, line: 815, baseType: !199, size: 1, offset: 4612, flags: DIFlagBitField, extraData: i64 4608)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_flags", scope: !1268, file: !1269, line: 831, baseType: !135, size: 64, offset: 4672)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "restart_block", scope: !1268, file: !1269, line: 833, baseType: !1452, size: 384, offset: 4736)
!1452 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "restart_block", file: !1453, line: 25, size: 384, elements: !1454)
!1453 = !DIFile(filename: "./include/linux/restart_block.h", directory: "/home/lizy2001/genbc/linux")
!1454 = !{!1455, !1460}
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1452, file: !1453, line: 26, baseType: !1456, size: 64)
!1456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1457, size: 64)
!1457 = !DISubroutineType(types: !1458)
!1458 = !{!120, !1459}
!1459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1452, size: 64)
!1460 = !DIDerivedType(tag: DW_TAG_member, scope: !1452, file: !1453, line: 27, baseType: !1461, size: 320, offset: 64)
!1461 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1452, file: !1453, line: 27, size: 320, elements: !1462)
!1462 = !{!1463, !1473, !1505}
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "futex", scope: !1461, file: !1453, line: 36, baseType: !1464, size: 320)
!1464 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1461, file: !1453, line: 29, size: 320, elements: !1465)
!1465 = !{!1466, !1468, !1469, !1470, !1471, !1472}
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr", scope: !1464, file: !1453, line: 30, baseType: !1467, size: 64)
!1467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !229, size: 64)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1464, file: !1453, line: 31, baseType: !229, size: 32, offset: 64)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1464, file: !1453, line: 32, baseType: !229, size: 32, offset: 96)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "bitset", scope: !1464, file: !1453, line: 33, baseType: !229, size: 32, offset: 128)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !1464, file: !1453, line: 34, baseType: !235, size: 64, offset: 192)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr2", scope: !1464, file: !1453, line: 35, baseType: !1467, size: 64, offset: 256)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "nanosleep", scope: !1461, file: !1453, line: 46, baseType: !1474, size: 192)
!1474 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1461, file: !1453, line: 38, size: 192, elements: !1475)
!1475 = !{!1476, !1477, !1483, !1504}
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !1474, file: !1453, line: 39, baseType: !1385, size: 32)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1474, file: !1453, line: 40, baseType: !1478, size: 32, offset: 32)
!1478 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "timespec_type", file: !1453, line: 16, baseType: !199, size: 32, elements: !1479)
!1479 = !{!1480, !1481, !1482}
!1480 = !DIEnumerator(name: "TT_NONE", value: 0, isUnsigned: true)
!1481 = !DIEnumerator(name: "TT_NATIVE", value: 1, isUnsigned: true)
!1482 = !DIEnumerator(name: "TT_COMPAT", value: 2, isUnsigned: true)
!1483 = !DIDerivedType(tag: DW_TAG_member, scope: !1474, file: !1453, line: 41, baseType: !1484, size: 64, offset: 64)
!1484 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1474, file: !1453, line: 41, size: 64, elements: !1485)
!1485 = !{!1486, !1494}
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "rmtp", scope: !1484, file: !1453, line: 42, baseType: !1487, size: 64)
!1487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1488, size: 64)
!1488 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__kernel_timespec", file: !1489, line: 7, size: 128, elements: !1490)
!1489 = !DIFile(filename: "./include/uapi/linux/time_types.h", directory: "/home/lizy2001/genbc/linux")
!1490 = !{!1491, !1493}
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1488, file: !1489, line: 8, baseType: !1492, size: 64)
!1492 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_time64_t", file: !118, line: 93, baseType: !347)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1488, file: !1489, line: 9, baseType: !347, size: 64, offset: 64)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "compat_rmtp", scope: !1484, file: !1453, line: 43, baseType: !1495, size: 64)
!1495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1496, size: 64)
!1496 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "old_timespec32", file: !1497, line: 7, size: 64, elements: !1498)
!1497 = !DIFile(filename: "./include/vdso/time32.h", directory: "/home/lizy2001/genbc/linux")
!1498 = !{!1499, !1503}
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1496, file: !1497, line: 8, baseType: !1500, size: 32)
!1500 = !DIDerivedType(tag: DW_TAG_typedef, name: "old_time32_t", file: !1497, line: 5, baseType: !1501)
!1501 = !DIDerivedType(tag: DW_TAG_typedef, name: "s32", file: !230, line: 20, baseType: !1502)
!1502 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s32", file: !232, line: 26, baseType: !6)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1496, file: !1497, line: 9, baseType: !1501, size: 32, offset: 32)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1474, file: !1453, line: 45, baseType: !235, size: 64, offset: 128)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !1461, file: !1453, line: 54, baseType: !1506, size: 256)
!1506 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1461, file: !1453, line: 48, size: 256, elements: !1507)
!1507 = !{!1508, !1516, !1517, !1518, !1519}
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "ufds", scope: !1506, file: !1453, line: 49, baseType: !1509, size: 64)
!1509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1510, size: 64)
!1510 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pollfd", file: !1511, line: 36, size: 64, elements: !1512)
!1511 = !DIFile(filename: "./include/uapi/asm-generic/poll.h", directory: "/home/lizy2001/genbc/linux")
!1512 = !{!1513, !1514, !1515}
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !1510, file: !1511, line: 37, baseType: !6, size: 32)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "events", scope: !1510, file: !1511, line: 38, baseType: !1256, size: 16, offset: 32)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "revents", scope: !1510, file: !1511, line: 39, baseType: !1256, size: 16, offset: 48)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "nfds", scope: !1506, file: !1453, line: 50, baseType: !6, size: 32, offset: 64)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "has_timeout", scope: !1506, file: !1453, line: 51, baseType: !6, size: 32, offset: 96)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1506, file: !1453, line: 52, baseType: !135, size: 64, offset: 128)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1506, file: !1453, line: 53, baseType: !135, size: 64, offset: 192)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !1268, file: !1269, line: 835, baseType: !1521, size: 32, offset: 5120)
!1521 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !31, line: 22, baseType: !1522)
!1522 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_pid_t", file: !118, line: 28, baseType: !6)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "tgid", scope: !1268, file: !1269, line: 836, baseType: !1521, size: 32, offset: 5152)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "stack_canary", scope: !1268, file: !1269, line: 840, baseType: !135, size: 64, offset: 5184)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "real_parent", scope: !1268, file: !1269, line: 849, baseType: !1267, size: 64, offset: 5248)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1268, file: !1269, line: 852, baseType: !1267, size: 64, offset: 5312)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1268, file: !1269, line: 857, baseType: !30, size: 128, offset: 5376)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !1268, file: !1269, line: 858, baseType: !30, size: 128, offset: 5504)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "group_leader", scope: !1268, file: !1269, line: 859, baseType: !1267, size: 64, offset: 5632)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "ptraced", scope: !1268, file: !1269, line: 867, baseType: !30, size: 128, offset: 5696)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_entry", scope: !1268, file: !1269, line: 868, baseType: !30, size: 128, offset: 5824)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "thread_pid", scope: !1268, file: !1269, line: 871, baseType: !1533, size: 64, offset: 5952)
!1533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1534, size: 64)
!1534 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pid", file: !1535, line: 59, size: 768, elements: !1536)
!1535 = !DIFile(filename: "./include/linux/pid.h", directory: "/home/lizy2001/genbc/linux")
!1536 = !{!1537, !1538, !1539, !1540, !1542, !1543, !1544, !1545}
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1534, file: !1535, line: 61, baseType: !880, size: 32)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1534, file: !1535, line: 62, baseType: !199, size: 32, offset: 32)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1534, file: !1535, line: 63, baseType: !44, offset: 64)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !1534, file: !1535, line: 65, baseType: !1541, size: 256, offset: 64)
!1541 = !DICompositeType(tag: DW_TAG_array_type, baseType: !451, size: 256, elements: !1212)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "inodes", scope: !1534, file: !1535, line: 66, baseType: !451, size: 64, offset: 320)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "wait_pidfd", scope: !1534, file: !1535, line: 68, baseType: !812, size: 128, offset: 384)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1534, file: !1535, line: 69, baseType: !178, size: 128, align: 64, offset: 512)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "numbers", scope: !1534, file: !1535, line: 70, baseType: !1546, size: 128, offset: 640)
!1546 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1547, size: 128, elements: !1422)
!1547 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "upid", file: !1535, line: 54, size: 128, elements: !1548)
!1548 = !{!1549, !1550}
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !1547, file: !1535, line: 55, baseType: !6, size: 32)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !1547, file: !1535, line: 56, baseType: !1551, size: 64, offset: 64)
!1551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1552, size: 64)
!1552 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pid_namespace", file: !1553, line: 20, size: 1088, elements: !1554)
!1553 = !DIFile(filename: "./include/linux/pid_namespace.h", directory: "/home/lizy2001/genbc/linux")
!1554 = !{!1555, !1560, !1567, !1568, !1569, !1570, !1571, !1572, !1573, !1846, !1847, !1848}
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !1552, file: !1553, line: 21, baseType: !1556, size: 32)
!1556 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kref", file: !1557, line: 19, size: 32, elements: !1558)
!1557 = !DIFile(filename: "./include/linux/kref.h", directory: "/home/lizy2001/genbc/linux")
!1558 = !{!1559}
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !1556, file: !1557, line: 20, baseType: !880, size: 32)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "idr", scope: !1552, file: !1553, line: 22, baseType: !1561, size: 192, offset: 64)
!1561 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "idr", file: !1562, line: 19, size: 192, elements: !1563)
!1562 = !DIFile(filename: "./include/linux/idr.h", directory: "/home/lizy2001/genbc/linux")
!1563 = !{!1564, !1565, !1566}
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "idr_rt", scope: !1561, file: !1562, line: 20, baseType: !623, size: 128)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "idr_base", scope: !1561, file: !1562, line: 21, baseType: !199, size: 32, offset: 128)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "idr_next", scope: !1561, file: !1562, line: 22, baseType: !199, size: 32, offset: 160)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1552, file: !1553, line: 23, baseType: !178, size: 128, align: 64, offset: 256)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "pid_allocated", scope: !1552, file: !1553, line: 24, baseType: !199, size: 32, offset: 384)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "child_reaper", scope: !1552, file: !1553, line: 25, baseType: !1267, size: 64, offset: 448)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "pid_cachep", scope: !1552, file: !1553, line: 26, baseType: !985, size: 64, offset: 512)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1552, file: !1553, line: 27, baseType: !199, size: 32, offset: 576)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1552, file: !1553, line: 28, baseType: !1551, size: 64, offset: 640)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1552, file: !1553, line: 32, baseType: !1574, size: 64, offset: 704)
!1574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1575, size: 64)
!1575 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "user_namespace", file: !1576, line: 56, size: 4160, elements: !1577)
!1576 = !DIFile(filename: "./include/linux/user_namespace.h", directory: "/home/lizy2001/genbc/linux")
!1577 = !{!1578, !1600, !1601, !1602, !1603, !1604, !1605, !1606, !1607, !1617, !1618, !1619, !1726, !1727, !1739, !1831, !1832, !1844}
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "uid_map", scope: !1575, file: !1576, line: 57, baseType: !1579, size: 576)
!1579 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uid_gid_map", file: !1576, line: 23, size: 576, elements: !1580)
!1580 = !{!1581, !1582}
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "nr_extents", scope: !1579, file: !1576, line: 24, baseType: !229, size: 32)
!1582 = !DIDerivedType(tag: DW_TAG_member, scope: !1579, file: !1576, line: 25, baseType: !1583, size: 512, offset: 64)
!1583 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1579, file: !1576, line: 25, size: 512, elements: !1584)
!1584 = !{!1585, !1594}
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "extent", scope: !1583, file: !1576, line: 26, baseType: !1586, size: 480)
!1586 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1587, size: 480, elements: !1592)
!1587 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uid_gid_extent", file: !1576, line: 17, size: 96, elements: !1588)
!1588 = !{!1589, !1590, !1591}
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !1587, file: !1576, line: 18, baseType: !229, size: 32)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "lower_first", scope: !1587, file: !1576, line: 19, baseType: !229, size: 32, offset: 32)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1587, file: !1576, line: 20, baseType: !229, size: 32, offset: 64)
!1592 = !{!1593}
!1593 = !DISubrange(count: 5)
!1594 = !DIDerivedType(tag: DW_TAG_member, scope: !1583, file: !1576, line: 27, baseType: !1595, size: 128)
!1595 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1583, file: !1576, line: 27, size: 128, elements: !1596)
!1596 = !{!1597, !1599}
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "forward", scope: !1595, file: !1576, line: 28, baseType: !1598, size: 64)
!1598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1587, size: 64)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "reverse", scope: !1595, file: !1576, line: 29, baseType: !1598, size: 64, offset: 64)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "gid_map", scope: !1575, file: !1576, line: 58, baseType: !1579, size: 576, offset: 576)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "projid_map", scope: !1575, file: !1576, line: 59, baseType: !1579, size: 576, offset: 1152)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1575, file: !1576, line: 60, baseType: !632, size: 32, offset: 1728)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1575, file: !1576, line: 61, baseType: !1574, size: 64, offset: 1792)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1575, file: !1576, line: 62, baseType: !6, size: 32, offset: 1856)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1575, file: !1576, line: 63, baseType: !249, size: 32, offset: 1888)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !1575, file: !1576, line: 64, baseType: !257, size: 32, offset: 1920)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !1575, file: !1576, line: 65, baseType: !1608, size: 192, offset: 1984)
!1608 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ns_common", file: !1609, line: 7, size: 192, elements: !1610)
!1609 = !DIFile(filename: "./include/linux/ns_common.h", directory: "/home/lizy2001/genbc/linux")
!1610 = !{!1611, !1612, !1616}
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "stashed", scope: !1608, file: !1609, line: 8, baseType: !562, size: 64)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1608, file: !1609, line: 9, baseType: !1613, size: 64, offset: 64)
!1613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1614, size: 64)
!1614 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1615)
!1615 = !DICompositeType(tag: DW_TAG_structure_type, name: "proc_ns_operations", file: !1609, line: 5, flags: DIFlagFwdDecl)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "inum", scope: !1608, file: !1609, line: 10, baseType: !199, size: 32, offset: 128)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1575, file: !1576, line: 66, baseType: !135, size: 64, offset: 2176)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "keyring_name_list", scope: !1575, file: !1576, line: 74, baseType: !30, size: 128, offset: 2240)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "user_keyring_register", scope: !1575, file: !1576, line: 75, baseType: !1620, size: 64, offset: 2368)
!1620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1621, size: 64)
!1621 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key", file: !1622, line: 189, size: 1664, elements: !1623)
!1622 = !DIFile(filename: "./include/linux/key.h", directory: "/home/lizy2001/genbc/linux")
!1623 = !{!1624, !1625, !1628, !1633, !1634, !1637, !1638, !1643, !1644, !1645, !1646, !1648, !1649, !1650, !1651, !1652, !1690, !1711}
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1621, file: !1622, line: 190, baseType: !880, size: 32)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !1621, file: !1622, line: 191, baseType: !1626, size: 32, offset: 32)
!1626 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_serial_t", file: !1622, line: 28, baseType: !1627)
!1627 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !31, line: 98, baseType: !1501)
!1628 = !DIDerivedType(tag: DW_TAG_member, scope: !1621, file: !1622, line: 192, baseType: !1629, size: 192, offset: 64)
!1629 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1621, file: !1622, line: 192, size: 192, elements: !1630)
!1630 = !{!1631, !1632}
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "graveyard_link", scope: !1629, file: !1622, line: 193, baseType: !30, size: 128)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "serial_node", scope: !1629, file: !1622, line: 194, baseType: !645, size: 192, align: 64)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "sem", scope: !1621, file: !1622, line: 199, baseType: !652, size: 256, offset: 256)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1621, file: !1622, line: 200, baseType: !1635, size: 64, offset: 512)
!1635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1636, size: 64)
!1636 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_user", file: !1622, line: 200, flags: DIFlagFwdDecl)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "security", scope: !1621, file: !1622, line: 201, baseType: !159, size: 64, offset: 576)
!1638 = !DIDerivedType(tag: DW_TAG_member, scope: !1621, file: !1622, line: 202, baseType: !1639, size: 64, offset: 640)
!1639 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1621, file: !1622, line: 202, size: 64, elements: !1640)
!1640 = !{!1641, !1642}
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "expiry", scope: !1639, file: !1622, line: 203, baseType: !353, size: 64)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "revoked_at", scope: !1639, file: !1622, line: 204, baseType: !353, size: 64)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "last_used_at", scope: !1621, file: !1622, line: 206, baseType: !353, size: 64, offset: 704)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1621, file: !1622, line: 207, baseType: !249, size: 32, offset: 768)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1621, file: !1622, line: 208, baseType: !257, size: 32, offset: 800)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !1621, file: !1622, line: 209, baseType: !1647, size: 32, offset: 832)
!1647 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_perm_t", file: !1622, line: 31, baseType: !373)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "quotalen", scope: !1621, file: !1622, line: 210, baseType: !127, size: 16, offset: 864)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "datalen", scope: !1621, file: !1622, line: 211, baseType: !127, size: 16, offset: 880)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1621, file: !1622, line: 215, baseType: !1256, size: 16, offset: 896)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1621, file: !1622, line: 222, baseType: !135, size: 64, offset: 960)
!1652 = !DIDerivedType(tag: DW_TAG_member, scope: !1621, file: !1622, line: 239, baseType: !1653, size: 320, offset: 1024)
!1653 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1621, file: !1622, line: 239, size: 320, elements: !1654)
!1654 = !{!1655, !1682}
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "index_key", scope: !1653, file: !1622, line: 240, baseType: !1656, size: 320)
!1656 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "keyring_index_key", file: !1622, line: 108, size: 320, elements: !1657)
!1657 = !{!1658, !1659, !1671, !1674, !1681}
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1656, file: !1622, line: 110, baseType: !135, size: 64)
!1659 = !DIDerivedType(tag: DW_TAG_member, scope: !1656, file: !1622, line: 111, baseType: !1660, size: 64, offset: 64)
!1660 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1656, file: !1622, line: 111, size: 64, elements: !1661)
!1661 = !{!1662, !1670}
!1662 = !DIDerivedType(tag: DW_TAG_member, scope: !1660, file: !1622, line: 112, baseType: !1663, size: 64)
!1663 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1660, file: !1622, line: 112, size: 64, elements: !1664)
!1664 = !{!1665, !1666}
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "desc_len", scope: !1663, file: !1622, line: 114, baseType: !744, size: 16)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !1663, file: !1622, line: 115, baseType: !1667, size: 48, offset: 16)
!1667 = !DICompositeType(tag: DW_TAG_array_type, baseType: !28, size: 48, elements: !1668)
!1668 = !{!1669}
!1669 = !DISubrange(count: 6)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1660, file: !1622, line: 121, baseType: !135, size: 64)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1656, file: !1622, line: 123, baseType: !1672, size: 64, offset: 128)
!1672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1673, size: 64)
!1673 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_type", file: !1622, line: 96, flags: DIFlagFwdDecl)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !1656, file: !1622, line: 124, baseType: !1675, size: 64, offset: 192)
!1675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1676, size: 64)
!1676 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_tag", file: !1622, line: 102, size: 192, elements: !1677)
!1677 = !{!1678, !1679, !1680}
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1676, file: !1622, line: 103, baseType: !178, size: 128, align: 64)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1676, file: !1622, line: 104, baseType: !880, size: 32, offset: 128)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "removed", scope: !1676, file: !1622, line: 105, baseType: !304, size: 8, offset: 160)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1656, file: !1622, line: 125, baseType: !26, size: 64, offset: 256)
!1682 = !DIDerivedType(tag: DW_TAG_member, scope: !1653, file: !1622, line: 241, baseType: !1683, size: 320)
!1683 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1653, file: !1622, line: 241, size: 320, elements: !1684)
!1684 = !{!1685, !1686, !1687, !1688, !1689}
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1683, file: !1622, line: 242, baseType: !135, size: 64)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "len_desc", scope: !1683, file: !1622, line: 243, baseType: !135, size: 64, offset: 64)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1683, file: !1622, line: 244, baseType: !1672, size: 64, offset: 128)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !1683, file: !1622, line: 245, baseType: !1675, size: 64, offset: 192)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1683, file: !1622, line: 246, baseType: !85, size: 64, offset: 256)
!1690 = !DIDerivedType(tag: DW_TAG_member, scope: !1621, file: !1622, line: 254, baseType: !1691, size: 256, offset: 1344)
!1691 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1621, file: !1622, line: 254, size: 256, elements: !1692)
!1692 = !{!1693, !1699}
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "payload", scope: !1691, file: !1622, line: 255, baseType: !1694, size: 256)
!1694 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "key_payload", file: !1622, line: 128, size: 256, elements: !1695)
!1695 = !{!1696, !1697}
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_data0", scope: !1694, file: !1622, line: 129, baseType: !159, size: 64)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1694, file: !1622, line: 130, baseType: !1698, size: 256)
!1698 = !DICompositeType(tag: DW_TAG_array_type, baseType: !159, size: 256, elements: !1212)
!1699 = !DIDerivedType(tag: DW_TAG_member, scope: !1691, file: !1622, line: 256, baseType: !1700, size: 256)
!1700 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1691, file: !1622, line: 256, size: 256, elements: !1701)
!1701 = !{!1702, !1703}
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "name_link", scope: !1700, file: !1622, line: 258, baseType: !30, size: 128)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !1700, file: !1622, line: 259, baseType: !1704, size: 128, offset: 128)
!1704 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array", file: !1705, line: 22, size: 128, elements: !1706)
!1705 = !DIFile(filename: "./include/linux/assoc_array.h", directory: "/home/lizy2001/genbc/linux")
!1706 = !{!1707, !1710}
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !1704, file: !1705, line: 23, baseType: !1708, size: 64)
!1708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1709, size: 64)
!1709 = !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array_ptr", file: !1705, line: 23, flags: DIFlagFwdDecl)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "nr_leaves_on_tree", scope: !1704, file: !1705, line: 24, baseType: !135, size: 64, offset: 64)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_link", scope: !1621, file: !1622, line: 274, baseType: !1712, size: 64, offset: 1600)
!1712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1713, size: 64)
!1713 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_restriction", file: !1622, line: 170, size: 192, elements: !1714)
!1714 = !{!1715, !1724, !1725}
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !1713, file: !1622, line: 171, baseType: !1716, size: 64)
!1716 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_restrict_link_func_t", file: !1622, line: 165, baseType: !1717)
!1717 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1718, size: 64)
!1718 = !DISubroutineType(types: !1719)
!1719 = !{!6, !1620, !1720, !1722, !1620}
!1720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1721, size: 64)
!1721 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1673)
!1722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1723, size: 64)
!1723 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1694)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1713, file: !1622, line: 172, baseType: !1620, size: 64, offset: 64)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "keytype", scope: !1713, file: !1622, line: 173, baseType: !1672, size: 64, offset: 128)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "keyring_sem", scope: !1575, file: !1576, line: 76, baseType: !652, size: 256, offset: 2432)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !1575, file: !1576, line: 83, baseType: !1728, size: 256, offset: 2688)
!1728 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "work_struct", file: !1729, line: 102, size: 256, elements: !1730)
!1729 = !DIFile(filename: "./include/linux/workqueue.h", directory: "/home/lizy2001/genbc/linux")
!1730 = !{!1731, !1732, !1733}
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1728, file: !1729, line: 103, baseType: !562, size: 64)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !1728, file: !1729, line: 104, baseType: !30, size: 128, offset: 64)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1728, file: !1729, line: 105, baseType: !1734, size: 64, offset: 192)
!1734 = !DIDerivedType(tag: DW_TAG_typedef, name: "work_func_t", file: !1729, line: 21, baseType: !1735)
!1735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1736, size: 64)
!1736 = !DISubroutineType(types: !1737)
!1737 = !{null, !1738}
!1738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1728, size: 64)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !1575, file: !1576, line: 85, baseType: !1740, size: 768, offset: 2944)
!1740 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_set", file: !1741, line: 156, size: 768, elements: !1742)
!1741 = !DIFile(filename: "./include/linux/sysctl.h", directory: "/home/lizy2001/genbc/linux")
!1742 = !{!1743, !1748}
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "is_seen", scope: !1740, file: !1741, line: 157, baseType: !1744, size: 64)
!1744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1745, size: 64)
!1745 = !DISubroutineType(types: !1746)
!1746 = !{!6, !1747}
!1747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1740, size: 64)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !1740, file: !1741, line: 158, baseType: !1749, size: 704, offset: 64)
!1749 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_dir", file: !1741, line: 150, size: 704, elements: !1750)
!1750 = !{!1751, !1830}
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !1749, file: !1741, line: 152, baseType: !1752, size: 640)
!1752 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_header", file: !1741, line: 131, size: 640, elements: !1753)
!1753 = !{!1754, !1787, !1799, !1800, !1820, !1821, !1823, !1829}
!1754 = !DIDerivedType(tag: DW_TAG_member, scope: !1752, file: !1741, line: 132, baseType: !1755, size: 192)
!1755 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1752, file: !1741, line: 132, size: 192, elements: !1756)
!1756 = !{!1757, !1786}
!1757 = !DIDerivedType(tag: DW_TAG_member, scope: !1755, file: !1741, line: 133, baseType: !1758, size: 192)
!1758 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1755, file: !1741, line: 133, size: 192, elements: !1759)
!1759 = !{!1760, !1783, !1784, !1785}
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "ctl_table", scope: !1758, file: !1741, line: 134, baseType: !1761, size: 64)
!1761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1762, size: 64)
!1762 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table", file: !1741, line: 112, size: 512, elements: !1763)
!1763 = !{!1764, !1765, !1766, !1767, !1768, !1769, !1775, !1781, !1782}
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "procname", scope: !1762, file: !1741, line: 113, baseType: !26, size: 64)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1762, file: !1741, line: 114, baseType: !159, size: 64, offset: 64)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "maxlen", scope: !1762, file: !1741, line: 115, baseType: !6, size: 32, offset: 128)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1762, file: !1741, line: 116, baseType: !126, size: 16, offset: 160)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !1762, file: !1741, line: 117, baseType: !1761, size: 64, offset: 192)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "proc_handler", scope: !1762, file: !1741, line: 118, baseType: !1770, size: 64, offset: 256)
!1770 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1771, size: 64)
!1771 = !DIDerivedType(tag: DW_TAG_typedef, name: "proc_handler", file: !1741, line: 47, baseType: !1772)
!1772 = !DISubroutineType(types: !1773)
!1773 = !{!6, !1761, !6, !159, !1774, !580}
!1774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !132, size: 64)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !1762, file: !1741, line: 119, baseType: !1776, size: 64, offset: 320)
!1776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1777, size: 64)
!1777 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_poll", file: !1741, line: 94, size: 192, elements: !1778)
!1778 = !{!1779, !1780}
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !1777, file: !1741, line: 95, baseType: !632, size: 32)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !1777, file: !1741, line: 96, baseType: !812, size: 128, offset: 64)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "extra1", scope: !1762, file: !1741, line: 120, baseType: !159, size: 64, offset: 384)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "extra2", scope: !1762, file: !1741, line: 121, baseType: !159, size: 64, offset: 448)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !1758, file: !1741, line: 135, baseType: !6, size: 32, offset: 64)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1758, file: !1741, line: 136, baseType: !6, size: 32, offset: 96)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "nreg", scope: !1758, file: !1741, line: 137, baseType: !6, size: 32, offset: 128)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1755, file: !1741, line: 139, baseType: !178, size: 128, align: 64)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "unregistering", scope: !1752, file: !1741, line: 141, baseType: !1788, size: 64, offset: 192)
!1788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1789, size: 64)
!1789 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "completion", file: !1790, line: 26, size: 192, elements: !1791)
!1790 = !DIFile(filename: "./include/linux/completion.h", directory: "/home/lizy2001/genbc/linux")
!1791 = !{!1792, !1793}
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !1789, file: !1790, line: 27, baseType: !199, size: 32)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !1789, file: !1790, line: 28, baseType: !1794, size: 128, offset: 64)
!1794 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swait_queue_head", file: !1795, line: 43, size: 128, elements: !1796)
!1795 = !DIFile(filename: "./include/linux/swait.h", directory: "/home/lizy2001/genbc/linux")
!1796 = !{!1797, !1798}
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1794, file: !1795, line: 44, baseType: !658)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "task_list", scope: !1794, file: !1795, line: 45, baseType: !30, size: 128)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "ctl_table_arg", scope: !1752, file: !1741, line: 142, baseType: !1761, size: 64, offset: 256)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !1752, file: !1741, line: 143, baseType: !1801, size: 64, offset: 320)
!1801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1802, size: 64)
!1802 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_root", file: !1741, line: 161, size: 960, elements: !1803)
!1803 = !{!1804, !1805, !1809, !1816}
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "default_set", scope: !1802, file: !1741, line: 162, baseType: !1740, size: 768)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !1802, file: !1741, line: 163, baseType: !1806, size: 64, offset: 768)
!1806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1807, size: 64)
!1807 = !DISubroutineType(types: !1808)
!1808 = !{!1747, !1801}
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "set_ownership", scope: !1802, file: !1741, line: 164, baseType: !1810, size: 64, offset: 832)
!1810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1811, size: 64)
!1811 = !DISubroutineType(types: !1812)
!1812 = !{null, !1813, !1761, !1814, !1815}
!1813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1752, size: 64)
!1814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !249, size: 64)
!1815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !257, size: 64)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "permissions", scope: !1802, file: !1741, line: 167, baseType: !1817, size: 64, offset: 896)
!1817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1818, size: 64)
!1818 = !DISubroutineType(types: !1819)
!1819 = !{!6, !1813, !1761}
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !1752, file: !1741, line: 144, baseType: !1747, size: 64, offset: 384)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1752, file: !1741, line: 145, baseType: !1822, size: 64, offset: 448)
!1822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1749, size: 64)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1752, file: !1741, line: 146, baseType: !1824, size: 64, offset: 512)
!1824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1825, size: 64)
!1825 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_node", file: !1741, line: 124, size: 256, elements: !1826)
!1826 = !{!1827, !1828}
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1825, file: !1741, line: 125, baseType: !645, size: 192, align: 64)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !1825, file: !1741, line: 126, baseType: !1813, size: 64, offset: 192)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "inodes", scope: !1752, file: !1741, line: 147, baseType: !451, size: 64, offset: 576)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !1749, file: !1741, line: 153, baseType: !641, size: 64, offset: 640)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "sysctls", scope: !1575, file: !1576, line: 86, baseType: !1813, size: 64, offset: 3712)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "ucounts", scope: !1575, file: !1576, line: 88, baseType: !1833, size: 64, offset: 3776)
!1833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1834, size: 64)
!1834 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ucounts", file: !1576, line: 92, size: 576, elements: !1835)
!1835 = !{!1836, !1837, !1838, !1839, !1840}
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1834, file: !1576, line: 93, baseType: !455, size: 128)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !1834, file: !1576, line: 94, baseType: !1574, size: 64, offset: 128)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1834, file: !1576, line: 95, baseType: !249, size: 32, offset: 192)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1834, file: !1576, line: 96, baseType: !6, size: 32, offset: 224)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "ucount", scope: !1834, file: !1576, line: 97, baseType: !1841, size: 320, offset: 256)
!1841 = !DICompositeType(tag: DW_TAG_array_type, baseType: !632, size: 320, elements: !1842)
!1842 = !{!1843}
!1843 = !DISubrange(count: 10)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "ucount_max", scope: !1575, file: !1576, line: 89, baseType: !1845, size: 320, offset: 3840)
!1845 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6, size: 320, elements: !1842)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "ucounts", scope: !1552, file: !1553, line: 33, baseType: !1833, size: 64, offset: 768)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "reboot", scope: !1552, file: !1553, line: 34, baseType: !6, size: 32, offset: 832)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !1552, file: !1553, line: 35, baseType: !1608, size: 192, offset: 896)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "pid_links", scope: !1268, file: !1269, line: 872, baseType: !1850, size: 512, offset: 6016)
!1850 = !DICompositeType(tag: DW_TAG_array_type, baseType: !455, size: 512, elements: !1212)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "thread_group", scope: !1268, file: !1269, line: 873, baseType: !30, size: 128, offset: 6528)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "thread_node", scope: !1268, file: !1269, line: 874, baseType: !30, size: 128, offset: 6656)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "vfork_done", scope: !1268, file: !1269, line: 876, baseType: !1788, size: 64, offset: 6784)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "set_child_tid", scope: !1268, file: !1269, line: 879, baseType: !540, size: 64, offset: 6848)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "clear_child_tid", scope: !1268, file: !1269, line: 882, baseType: !540, size: 64, offset: 6912)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1268, file: !1269, line: 884, baseType: !235, size: 64, offset: 6976)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1268, file: !1269, line: 885, baseType: !235, size: 64, offset: 7040)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !1268, file: !1269, line: 890, baseType: !235, size: 64, offset: 7104)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !1268, file: !1269, line: 891, baseType: !1860, size: 128, offset: 7168)
!1860 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "prev_cputime", file: !1269, line: 242, size: 128, elements: !1861)
!1861 = !{!1862, !1863, !1864}
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1860, file: !1269, line: 244, baseType: !235, size: 64)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1860, file: !1269, line: 245, baseType: !235, size: 64, offset: 64)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1860, file: !1269, line: 246, baseType: !658, offset: 128)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !1268, file: !1269, line: 900, baseType: !135, size: 64, offset: 7296)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !1268, file: !1269, line: 901, baseType: !135, size: 64, offset: 7360)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "start_time", scope: !1268, file: !1269, line: 904, baseType: !235, size: 64, offset: 7424)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "start_boottime", scope: !1268, file: !1269, line: 907, baseType: !235, size: 64, offset: 7488)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !1268, file: !1269, line: 910, baseType: !135, size: 64, offset: 7552)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !1268, file: !1269, line: 911, baseType: !135, size: 64, offset: 7616)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !1268, file: !1269, line: 914, baseType: !1872, size: 640, offset: 7680)
!1872 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers", file: !1873, line: 123, size: 640, elements: !1874)
!1873 = !DIFile(filename: "./include/linux/posix-timers.h", directory: "/home/lizy2001/genbc/linux")
!1874 = !{!1875, !1881, !1882}
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "bases", scope: !1872, file: !1873, line: 124, baseType: !1876, size: 576)
!1876 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1877, size: 576, elements: !86)
!1877 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimer_base", file: !1873, line: 108, size: 192, elements: !1878)
!1878 = !{!1879, !1880}
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "nextevt", scope: !1877, file: !1873, line: 109, baseType: !235, size: 64)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "tqhead", scope: !1877, file: !1873, line: 110, baseType: !1394, size: 128, offset: 64)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "timers_active", scope: !1872, file: !1873, line: 125, baseType: !199, size: 32, offset: 576)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "expiry_active", scope: !1872, file: !1873, line: 126, baseType: !199, size: 32, offset: 608)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers_work", scope: !1268, file: !1269, line: 917, baseType: !1884, size: 192, offset: 8320)
!1884 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers_work", file: !1873, line: 134, size: 192, elements: !1885)
!1885 = !{!1886, !1887}
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !1884, file: !1873, line: 135, baseType: !178, size: 128, align: 64)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "scheduled", scope: !1884, file: !1873, line: 136, baseType: !199, size: 32, offset: 128)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "ptracer_cred", scope: !1268, file: !1269, line: 923, baseType: !1889, size: 64, offset: 8512)
!1889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1890, size: 64)
!1890 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1891)
!1891 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cred", file: !1892, line: 111, size: 1280, elements: !1893)
!1892 = !DIFile(filename: "./include/linux/cred.h", directory: "/home/lizy2001/genbc/linux")
!1893 = !{!1894, !1895, !1896, !1897, !1898, !1899, !1900, !1901, !1902, !1903, !1904, !1913, !1914, !1915, !1916, !1917, !1918, !1919, !1920, !1921, !1922, !1923, !1924, !1934}
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1891, file: !1892, line: 112, baseType: !632, size: 32)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1891, file: !1892, line: 120, baseType: !249, size: 32, offset: 32)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1891, file: !1892, line: 121, baseType: !257, size: 32, offset: 64)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "suid", scope: !1891, file: !1892, line: 122, baseType: !249, size: 32, offset: 96)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "sgid", scope: !1891, file: !1892, line: 123, baseType: !257, size: 32, offset: 128)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !1891, file: !1892, line: 124, baseType: !249, size: 32, offset: 160)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "egid", scope: !1891, file: !1892, line: 125, baseType: !257, size: 32, offset: 192)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "fsuid", scope: !1891, file: !1892, line: 126, baseType: !249, size: 32, offset: 224)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "fsgid", scope: !1891, file: !1892, line: 127, baseType: !257, size: 32, offset: 256)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "securebits", scope: !1891, file: !1892, line: 128, baseType: !199, size: 32, offset: 288)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "cap_inheritable", scope: !1891, file: !1892, line: 129, baseType: !1905, size: 64, offset: 320)
!1905 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_cap_t", file: !1906, line: 26, baseType: !1907)
!1906 = !DIFile(filename: "./include/linux/capability.h", directory: "/home/lizy2001/genbc/linux")
!1907 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_cap_struct", file: !1906, line: 24, size: 64, elements: !1908)
!1908 = !{!1909}
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !1907, file: !1906, line: 25, baseType: !1910, size: 64)
!1910 = !DICompositeType(tag: DW_TAG_array_type, baseType: !231, size: 64, elements: !1911)
!1911 = !{!1912}
!1912 = !DISubrange(count: 2)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "cap_permitted", scope: !1891, file: !1892, line: 130, baseType: !1905, size: 64, offset: 384)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "cap_effective", scope: !1891, file: !1892, line: 131, baseType: !1905, size: 64, offset: 448)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "cap_bset", scope: !1891, file: !1892, line: 132, baseType: !1905, size: 64, offset: 512)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "cap_ambient", scope: !1891, file: !1892, line: 133, baseType: !1905, size: 64, offset: 576)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "jit_keyring", scope: !1891, file: !1892, line: 135, baseType: !241, size: 8, offset: 640)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "session_keyring", scope: !1891, file: !1892, line: 137, baseType: !1620, size: 64, offset: 704)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "process_keyring", scope: !1891, file: !1892, line: 138, baseType: !1620, size: 64, offset: 768)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "thread_keyring", scope: !1891, file: !1892, line: 139, baseType: !1620, size: 64, offset: 832)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "request_key_auth", scope: !1891, file: !1892, line: 140, baseType: !1620, size: 64, offset: 896)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1891, file: !1892, line: 145, baseType: !875, size: 64, offset: 960)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1891, file: !1892, line: 146, baseType: !1574, size: 64, offset: 1024)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "group_info", scope: !1891, file: !1892, line: 147, baseType: !1925, size: 64, offset: 1088)
!1925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1926, size: 64)
!1926 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group_info", file: !1892, line: 25, size: 64, elements: !1927)
!1927 = !{!1928, !1929, !1930}
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1926, file: !1892, line: 26, baseType: !632, size: 32)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "ngroups", scope: !1926, file: !1892, line: 27, baseType: !6, size: 32, offset: 32)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1926, file: !1892, line: 28, baseType: !1931, offset: 64)
!1931 = !DICompositeType(tag: DW_TAG_array_type, baseType: !257, elements: !1932)
!1932 = !{!1933}
!1933 = !DISubrange(count: 0)
!1934 = !DIDerivedType(tag: DW_TAG_member, scope: !1891, file: !1892, line: 149, baseType: !1935, size: 128, offset: 1152)
!1935 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1891, file: !1892, line: 149, size: 128, elements: !1936)
!1936 = !{!1937, !1938}
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "non_rcu", scope: !1935, file: !1892, line: 150, baseType: !6, size: 32)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1935, file: !1892, line: 151, baseType: !178, size: 128, align: 64)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "real_cred", scope: !1268, file: !1269, line: 926, baseType: !1889, size: 64, offset: 8576)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "cred", scope: !1268, file: !1269, line: 929, baseType: !1889, size: 64, offset: 8640)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "cached_requested_key", scope: !1268, file: !1269, line: 933, baseType: !1620, size: 64, offset: 8704)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "comm", scope: !1268, file: !1269, line: 943, baseType: !1943, size: 128, offset: 8768)
!1943 = !DICompositeType(tag: DW_TAG_array_type, baseType: !28, size: 128, elements: !1944)
!1944 = !{!1945}
!1945 = !DISubrange(count: 16)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "nameidata", scope: !1268, file: !1269, line: 945, baseType: !1947, size: 64, offset: 8896)
!1947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1948, size: 64)
!1948 = !DICompositeType(tag: DW_TAG_structure_type, name: "nameidata", file: !1269, line: 49, flags: DIFlagFwdDecl)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !1268, file: !1269, line: 956, baseType: !1950, size: 64, offset: 8960)
!1950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1951, size: 64)
!1951 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_struct", file: !1269, line: 45, flags: DIFlagFwdDecl)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !1268, file: !1269, line: 959, baseType: !1953, size: 64, offset: 9024)
!1953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1954, size: 64)
!1954 = !DICompositeType(tag: DW_TAG_structure_type, name: "files_struct", file: !1269, line: 959, flags: DIFlagFwdDecl)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "io_uring", scope: !1268, file: !1269, line: 962, baseType: !1956, size: 64, offset: 9088)
!1956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1957, size: 64)
!1957 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_uring_task", file: !1269, line: 66, flags: DIFlagFwdDecl)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "nsproxy", scope: !1268, file: !1269, line: 966, baseType: !1959, size: 64, offset: 9152)
!1959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1960, size: 64)
!1960 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nsproxy", file: !1961, line: 31, size: 576, elements: !1962)
!1961 = !DIFile(filename: "./include/linux/nsproxy.h", directory: "/home/lizy2001/genbc/linux")
!1962 = !{!1963, !1964, !1967, !1970, !1973, !1974, !7268, !7271, !7272}
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1960, file: !1961, line: 32, baseType: !632, size: 32)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "uts_ns", scope: !1960, file: !1961, line: 33, baseType: !1965, size: 64, offset: 64)
!1965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1966, size: 64)
!1966 = !DICompositeType(tag: DW_TAG_structure_type, name: "uts_namespace", file: !1961, line: 9, flags: DIFlagFwdDecl)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "ipc_ns", scope: !1960, file: !1961, line: 34, baseType: !1968, size: 64, offset: 128)
!1968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1969, size: 64)
!1969 = !DICompositeType(tag: DW_TAG_structure_type, name: "ipc_namespace", file: !1961, line: 10, flags: DIFlagFwdDecl)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_ns", scope: !1960, file: !1961, line: 35, baseType: !1971, size: 64, offset: 192)
!1971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1972, size: 64)
!1972 = !DICompositeType(tag: DW_TAG_structure_type, name: "mnt_namespace", file: !1961, line: 8, flags: DIFlagFwdDecl)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "pid_ns_for_children", scope: !1960, file: !1961, line: 36, baseType: !1551, size: 64, offset: 256)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "net_ns", scope: !1960, file: !1961, line: 37, baseType: !1975, size: 64, offset: 320)
!1975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1976, size: 64)
!1976 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "net", file: !1977, line: 56, size: 16896, elements: !1978)
!1977 = !DIFile(filename: "./include/net/net_namespace.h", directory: "/home/lizy2001/genbc/linux")
!1978 = !{!1979, !1980, !1981, !1982, !1983, !1984, !1985, !1986, !1987, !1988, !1989, !1990, !1991, !1992, !1993, !1994, !1995, !1996, !2000, !2001, !2002, !6692, !6693, !6696, !6698, !6699, !6714, !6715, !6716, !6717, !6727, !6782, !6788, !6794, !6807, !7112, !7202, !7203, !7217, !7240, !7241, !7267}
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "passive", scope: !1976, file: !1977, line: 60, baseType: !880, size: 32)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1976, file: !1977, line: 63, baseType: !880, size: 32, offset: 32)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "rules_mod_lock", scope: !1976, file: !1977, line: 66, baseType: !44, offset: 64)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "dev_unreg_count", scope: !1976, file: !1977, line: 68, baseType: !199, size: 32, offset: 64)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "dev_base_seq", scope: !1976, file: !1977, line: 70, baseType: !199, size: 32, offset: 96)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "ifindex", scope: !1976, file: !1977, line: 71, baseType: !6, size: 32, offset: 128)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "nsid_lock", scope: !1976, file: !1977, line: 73, baseType: !44, offset: 160)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "fnhe_genid", scope: !1976, file: !1977, line: 74, baseType: !632, size: 32, offset: 160)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !1976, file: !1977, line: 76, baseType: !30, size: 128, offset: 192)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "exit_list", scope: !1976, file: !1977, line: 77, baseType: !30, size: 128, offset: 320)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup_list", scope: !1976, file: !1977, line: 83, baseType: !172, size: 64, offset: 448)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "key_domain", scope: !1976, file: !1977, line: 86, baseType: !1675, size: 64, offset: 512)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1976, file: !1977, line: 88, baseType: !1574, size: 64, offset: 576)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "ucounts", scope: !1976, file: !1977, line: 89, baseType: !1833, size: 64, offset: 640)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "netns_ids", scope: !1976, file: !1977, line: 90, baseType: !1561, size: 192, offset: 704)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !1976, file: !1977, line: 92, baseType: !1608, size: 192, offset: 896)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "dev_base_head", scope: !1976, file: !1977, line: 94, baseType: !30, size: 128, offset: 1088)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "proc_net", scope: !1976, file: !1977, line: 95, baseType: !1997, size: 64, offset: 1216)
!1997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1998, size: 64)
!1998 = !DICompositeType(tag: DW_TAG_structure_type, name: "proc_dir_entry", file: !1999, line: 17, flags: DIFlagFwdDecl)
!1999 = !DIFile(filename: "./include/net/netns/mib.h", directory: "/home/lizy2001/genbc/linux")
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "proc_net_stat", scope: !1976, file: !1977, line: 96, baseType: !1997, size: 64, offset: 1280)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "sysctls", scope: !1976, file: !1977, line: 99, baseType: !1740, size: 768, offset: 1344)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "rtnl", scope: !1976, file: !1977, line: 102, baseType: !2003, size: 64, offset: 2112)
!2003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2004, size: 64)
!2004 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sock", file: !2005, line: 347, size: 5568, elements: !2006)
!2005 = !DIFile(filename: "./include/net/sock.h", directory: "/home/lizy2001/genbc/linux")
!2006 = !{!2007, !6444, !6451, !6452, !6453, !6454, !6455, !6456, !6463, !6464, !6465, !6466, !6467, !6474, !6487, !6488, !6489, !6490, !6491, !6492, !6493, !6494, !6499, !6500, !6501, !6502, !6503, !6504, !6505, !6506, !6507, !6508, !6509, !6510, !6511, !6517, !6518, !6519, !6520, !6521, !6522, !6523, !6524, !6525, !6526, !6527, !6528, !6529, !6530, !6531, !6532, !6533, !6534, !6535, !6536, !6537, !6538, !6539, !6540, !6541, !6542, !6543, !6544, !6545, !6546, !6547, !6548, !6549, !6550, !6551, !6552, !6553, !6675, !6676, !6679, !6682, !6683, !6684, !6685, !6686, !6687, !6688, !6691}
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "__sk_common", scope: !2004, file: !2005, line: 352, baseType: !2008, size: 1088)
!2008 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sock_common", file: !2005, line: 162, size: 1088, elements: !2009)
!2009 = !{!2010, !2022, !2028, !2039, !2040, !2042, !2043, !2044, !2045, !2046, !2047, !2052, !6399, !6400, !6401, !6402, !6403, !6415, !6417, !6429, !6430, !6436, !6437, !6438}
!2010 = !DIDerivedType(tag: DW_TAG_member, scope: !2008, file: !2005, line: 166, baseType: !2011, size: 64)
!2011 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2008, file: !2005, line: 166, size: 64, elements: !2012)
!2012 = !{!2013, !2015}
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "skc_addrpair", scope: !2011, file: !2005, line: 167, baseType: !2014, size: 64)
!2014 = !DIDerivedType(tag: DW_TAG_typedef, name: "__addrpair", file: !2005, line: 115, baseType: !236)
!2015 = !DIDerivedType(tag: DW_TAG_member, scope: !2011, file: !2005, line: 168, baseType: !2016, size: 64)
!2016 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2011, file: !2005, line: 168, size: 64, elements: !2017)
!2017 = !{!2018, !2021}
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "skc_daddr", scope: !2016, file: !2005, line: 169, baseType: !2019, size: 32)
!2019 = !DIDerivedType(tag: DW_TAG_typedef, name: "__be32", file: !2020, line: 32, baseType: !231)
!2020 = !DIFile(filename: "./include/uapi/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "skc_rcv_saddr", scope: !2016, file: !2005, line: 170, baseType: !2019, size: 32, offset: 32)
!2022 = !DIDerivedType(tag: DW_TAG_member, scope: !2008, file: !2005, line: 173, baseType: !2023, size: 32, offset: 64)
!2023 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2008, file: !2005, line: 173, size: 32, elements: !2024)
!2024 = !{!2025, !2026}
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "skc_hash", scope: !2023, file: !2005, line: 174, baseType: !199, size: 32)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "skc_u16hashes", scope: !2023, file: !2005, line: 175, baseType: !2027, size: 32)
!2027 = !DICompositeType(tag: DW_TAG_array_type, baseType: !745, size: 32, elements: !1911)
!2028 = !DIDerivedType(tag: DW_TAG_member, scope: !2008, file: !2005, line: 178, baseType: !2029, size: 32, offset: 96)
!2029 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2008, file: !2005, line: 178, size: 32, elements: !2030)
!2030 = !{!2031, !2033}
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "skc_portpair", scope: !2029, file: !2005, line: 179, baseType: !2032, size: 32)
!2032 = !DIDerivedType(tag: DW_TAG_typedef, name: "__portpair", file: !2005, line: 114, baseType: !231)
!2033 = !DIDerivedType(tag: DW_TAG_member, scope: !2029, file: !2005, line: 180, baseType: !2034, size: 32)
!2034 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2029, file: !2005, line: 180, size: 32, elements: !2035)
!2035 = !{!2036, !2038}
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "skc_dport", scope: !2034, file: !2005, line: 181, baseType: !2037, size: 16)
!2037 = !DIDerivedType(tag: DW_TAG_typedef, name: "__be16", file: !2020, line: 30, baseType: !745)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "skc_num", scope: !2034, file: !2005, line: 182, baseType: !745, size: 16, offset: 16)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "skc_family", scope: !2008, file: !2005, line: 186, baseType: !127, size: 16, offset: 128)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "skc_state", scope: !2008, file: !2005, line: 187, baseType: !2041, size: 8, offset: 144)
!2041 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !241)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "skc_reuse", scope: !2008, file: !2005, line: 188, baseType: !241, size: 4, offset: 152, flags: DIFlagBitField, extraData: i64 152)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "skc_reuseport", scope: !2008, file: !2005, line: 189, baseType: !241, size: 1, offset: 156, flags: DIFlagBitField, extraData: i64 152)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "skc_ipv6only", scope: !2008, file: !2005, line: 190, baseType: !241, size: 1, offset: 157, flags: DIFlagBitField, extraData: i64 152)
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "skc_net_refcnt", scope: !2008, file: !2005, line: 191, baseType: !241, size: 1, offset: 158, flags: DIFlagBitField, extraData: i64 152)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "skc_bound_dev_if", scope: !2008, file: !2005, line: 192, baseType: !6, size: 32, offset: 160)
!2047 = !DIDerivedType(tag: DW_TAG_member, scope: !2008, file: !2005, line: 193, baseType: !2048, size: 128, offset: 192)
!2048 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2008, file: !2005, line: 193, size: 128, elements: !2049)
!2049 = !{!2050, !2051}
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "skc_bind_node", scope: !2048, file: !2005, line: 194, baseType: !455, size: 128)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "skc_portaddr_node", scope: !2048, file: !2005, line: 195, baseType: !455, size: 128)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "skc_prot", scope: !2008, file: !2005, line: 197, baseType: !2053, size: 64, offset: 320)
!2053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2054, size: 64)
!2054 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "proto", file: !2005, line: 1127, size: 3264, elements: !2055)
!2055 = !{!2056, !2060, !2076, !2077, !2081, !2085, !2089, !2093, !2097, !2101, !2115, !2119, !2120, !2139, !2143, !2147, !2148, !2149, !6257, !6258, !6259, !6260, !6261, !6265, !6266, !6272, !6276, !6277, !6278, !6280, !6282, !6283, !6285, !6286, !6287, !6288, !6289, !6290, !6291, !6292, !6293, !6295, !6296, !6297, !6298, !6354, !6367, !6395, !6396, !6397, !6398}
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !2054, file: !2005, line: 1128, baseType: !2057, size: 64)
!2057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2058, size: 64)
!2058 = !DISubroutineType(types: !2059)
!2059 = !{null, !2003, !120}
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "pre_connect", scope: !2054, file: !2005, line: 1130, baseType: !2061, size: 64, offset: 64)
!2061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2062, size: 64)
!2062 = !DISubroutineType(types: !2063)
!2063 = !{!6, !2003, !2064, !6}
!2064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2065, size: 64)
!2065 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr", file: !2066, line: 32, size: 128, elements: !2067)
!2066 = !DIFile(filename: "./include/linux/socket.h", directory: "/home/lizy2001/genbc/linux")
!2067 = !{!2068, !2072}
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "sa_family", scope: !2065, file: !2066, line: 33, baseType: !2069, size: 16)
!2069 = !DIDerivedType(tag: DW_TAG_typedef, name: "sa_family_t", file: !2066, line: 26, baseType: !2070)
!2070 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_sa_family_t", file: !2071, line: 10, baseType: !127)
!2071 = !DIFile(filename: "./include/uapi/linux/socket.h", directory: "/home/lizy2001/genbc/linux")
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "sa_data", scope: !2065, file: !2066, line: 34, baseType: !2073, size: 112, offset: 16)
!2073 = !DICompositeType(tag: DW_TAG_array_type, baseType: !28, size: 112, elements: !2074)
!2074 = !{!2075}
!2075 = !DISubrange(count: 14)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "connect", scope: !2054, file: !2005, line: 1133, baseType: !2061, size: 64, offset: 128)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "disconnect", scope: !2054, file: !2005, line: 1136, baseType: !2078, size: 64, offset: 192)
!2078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2079, size: 64)
!2079 = !DISubroutineType(types: !2080)
!2080 = !{!6, !2003, !6}
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "accept", scope: !2054, file: !2005, line: 1138, baseType: !2082, size: 64, offset: 256)
!2082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2083, size: 64)
!2083 = !DISubroutineType(types: !2084)
!2084 = !{!2003, !2003, !6, !540, !304}
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "ioctl", scope: !2054, file: !2005, line: 1141, baseType: !2086, size: 64, offset: 320)
!2086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2087, size: 64)
!2087 = !DISubroutineType(types: !2088)
!2088 = !{!6, !2003, !6, !135}
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2054, file: !2005, line: 1143, baseType: !2090, size: 64, offset: 384)
!2090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2091, size: 64)
!2091 = !DISubroutineType(types: !2092)
!2092 = !{!6, !2003}
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "destroy", scope: !2054, file: !2005, line: 1144, baseType: !2094, size: 64, offset: 448)
!2094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2095, size: 64)
!2095 = !DISubroutineType(types: !2096)
!2096 = !{null, !2003}
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !2054, file: !2005, line: 1145, baseType: !2098, size: 64, offset: 512)
!2098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2099, size: 64)
!2099 = !DISubroutineType(types: !2100)
!2100 = !{null, !2003, !6}
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "setsockopt", scope: !2054, file: !2005, line: 1146, baseType: !2102, size: 64, offset: 576)
!2102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2103, size: 64)
!2103 = !DISubroutineType(types: !2104)
!2104 = !{!6, !2003, !6, !6, !2105, !199}
!2105 = !DIDerivedType(tag: DW_TAG_typedef, name: "sockptr_t", file: !2106, line: 20, baseType: !2107)
!2106 = !DIFile(filename: "./include/linux/sockptr.h", directory: "/home/lizy2001/genbc/linux")
!2107 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2106, line: 14, size: 128, elements: !2108)
!2108 = !{!2109, !2114}
!2109 = !DIDerivedType(tag: DW_TAG_member, scope: !2107, file: !2106, line: 15, baseType: !2110, size: 64)
!2110 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2107, file: !2106, line: 15, size: 64, elements: !2111)
!2111 = !{!2112, !2113}
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "kernel", scope: !2110, file: !2106, line: 16, baseType: !159, size: 64)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !2110, file: !2106, line: 17, baseType: !159, size: 64)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "is_kernel", scope: !2107, file: !2106, line: 19, baseType: !304, size: 1, offset: 64, flags: DIFlagBitField, extraData: i64 64)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "getsockopt", scope: !2054, file: !2005, line: 1149, baseType: !2116, size: 64, offset: 640)
!2116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2117, size: 64)
!2117 = !DISubroutineType(types: !2118)
!2118 = !{!6, !2003, !6, !6, !85, !540}
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "keepalive", scope: !2054, file: !2005, line: 1152, baseType: !2098, size: 64, offset: 704)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "sendmsg", scope: !2054, file: !2005, line: 1157, baseType: !2121, size: 64, offset: 768)
!2121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2122, size: 64)
!2122 = !DISubroutineType(types: !2123)
!2123 = !{!6, !2003, !2124, !132}
!2124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2125, size: 64)
!2125 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "msghdr", file: !2066, line: 50, size: 768, elements: !2126)
!2126 = !{!2127, !2128, !2129, !2130, !2135, !2136, !2137, !2138}
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "msg_name", scope: !2125, file: !2066, line: 51, baseType: !159, size: 64)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "msg_namelen", scope: !2125, file: !2066, line: 52, baseType: !6, size: 32, offset: 64)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "msg_iter", scope: !2125, file: !2066, line: 53, baseType: !772, size: 320, offset: 128)
!2130 = !DIDerivedType(tag: DW_TAG_member, scope: !2125, file: !2066, line: 60, baseType: !2131, size: 64, offset: 448)
!2131 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2125, file: !2066, line: 60, size: 64, elements: !2132)
!2132 = !{!2133, !2134}
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "msg_control", scope: !2131, file: !2066, line: 61, baseType: !159, size: 64)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "msg_control_user", scope: !2131, file: !2066, line: 62, baseType: !159, size: 64)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "msg_control_is_user", scope: !2125, file: !2066, line: 64, baseType: !304, size: 1, offset: 512, flags: DIFlagBitField, extraData: i64 512)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "msg_controllen", scope: !2125, file: !2066, line: 65, baseType: !133, size: 64, offset: 576)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "msg_flags", scope: !2125, file: !2066, line: 66, baseType: !199, size: 32, offset: 640)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "msg_iocb", scope: !2125, file: !2066, line: 67, baseType: !732, size: 64, offset: 704)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "recvmsg", scope: !2054, file: !2005, line: 1159, baseType: !2140, size: 64, offset: 832)
!2140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2141, size: 64)
!2141 = !DISubroutineType(types: !2142)
!2142 = !{!6, !2003, !2124, !132, !6, !6, !540}
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "sendpage", scope: !2054, file: !2005, line: 1162, baseType: !2144, size: 64, offset: 896)
!2144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2145, size: 64)
!2145 = !DISubroutineType(types: !2146)
!2146 = !{!6, !2003, !605, !6, !132, !6}
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "bind", scope: !2054, file: !2005, line: 1164, baseType: !2061, size: 64, offset: 960)
!2148 = !DIDerivedType(tag: DW_TAG_member, name: "bind_add", scope: !2054, file: !2005, line: 1166, baseType: !2061, size: 64, offset: 1024)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "backlog_rcv", scope: !2054, file: !2005, line: 1169, baseType: !2150, size: 64, offset: 1088)
!2150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2151, size: 64)
!2151 = !DISubroutineType(types: !2152)
!2152 = !{!6, !2003, !2153}
!2153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2154, size: 64)
!2154 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sk_buff", file: !2155, line: 713, size: 1600, elements: !2156)
!2155 = !DIFile(filename: "./include/linux/skbuff.h", directory: "/home/lizy2001/genbc/linux")
!2156 = !{!2157, !6152, !6157, !6162, !6164, !6173, !6174, !6175, !6176, !6177, !6178, !6179, !6180, !6181, !6182, !6183, !6184, !6185, !6186, !6187, !6188, !6189, !6190, !6191, !6192, !6193, !6194, !6195, !6196, !6197, !6198, !6199, !6200, !6201, !6202, !6203, !6204, !6205, !6206, !6207, !6208, !6209, !6210, !6211, !6212, !6222, !6223, !6224, !6225, !6226, !6227, !6232, !6237, !6242, !6243, !6244, !6245, !6246, !6247, !6248, !6249, !6250, !6252, !6253, !6254, !6255, !6256}
!2157 = !DIDerivedType(tag: DW_TAG_member, scope: !2154, file: !2155, line: 714, baseType: !2158, size: 192)
!2158 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2154, file: !2155, line: 714, size: 192, elements: !2159)
!2159 = !{!2160, !6150, !6151}
!2160 = !DIDerivedType(tag: DW_TAG_member, scope: !2158, file: !2155, line: 715, baseType: !2161, size: 192)
!2161 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2158, file: !2155, line: 715, size: 192, elements: !2162)
!2162 = !{!2163, !2164, !2165}
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2161, file: !2155, line: 717, baseType: !2153, size: 64)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2161, file: !2155, line: 718, baseType: !2153, size: 64, offset: 64)
!2165 = !DIDerivedType(tag: DW_TAG_member, scope: !2161, file: !2155, line: 720, baseType: !2166, size: 64, offset: 128)
!2166 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2161, file: !2155, line: 720, size: 64, elements: !2167)
!2167 = !{!2168, !6149}
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2166, file: !2155, line: 721, baseType: !2169, size: 64)
!2169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2170, size: 64)
!2170 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "net_device", file: !2171, line: 1858, size: 15808, elements: !2172)
!2171 = !DIFile(filename: "./include/linux/netdevice.h", directory: "/home/lizy2001/genbc/linux")
!2172 = !{!2173, !2174, !2182, !2191, !2192, !2193, !2194, !2195, !2196, !2197, !2198, !2199, !2200, !2201, !2202, !2207, !2210, !2211, !2212, !2213, !2214, !2215, !2216, !2217, !2218, !2244, !2245, !2246, !2247, !2248, !2249, !2253, !2256, !4255, !4821, !5397, !5430, !5431, !5432, !5433, !5434, !5435, !5436, !5437, !5438, !5439, !5440, !5441, !5442, !5443, !5444, !5445, !5446, !5447, !5448, !5449, !5450, !5451, !5452, !5453, !5454, !5455, !5456, !5461, !5462, !5463, !5464, !5465, !5466, !5467, !5470, !5473, !5474, !5477, !5480, !5481, !5494, !5495, !5496, !5497, !5498, !5499, !5512, !5513, !5943, !5944, !5945, !5946, !5947, !5948, !5949, !5950, !5951, !5954, !5955, !5956, !5957, !5958, !5959, !5960, !5969, !5970, !5975, !5976, !5977, !5978, !6015, !6016, !6018, !6019, !6088, !6089, !6090, !6091, !6097, !6099, !6102, !6105, !6107, !6108, !6109, !6110, !6111, !6140, !6141}
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2170, file: !2171, line: 1859, baseType: !1943, size: 128)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "name_node", scope: !2170, file: !2171, line: 1860, baseType: !2175, size: 64, offset: 128)
!2175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2176, size: 64)
!2176 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_name_node", file: !2171, line: 938, size: 384, elements: !2177)
!2177 = !{!2178, !2179, !2180, !2181}
!2178 = !DIDerivedType(tag: DW_TAG_member, name: "hlist", scope: !2176, file: !2171, line: 939, baseType: !455, size: 128)
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2176, file: !2171, line: 940, baseType: !30, size: 128, offset: 128)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2176, file: !2171, line: 941, baseType: !2169, size: 64, offset: 256)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2176, file: !2171, line: 942, baseType: !26, size: 64, offset: 320)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "ifalias", scope: !2170, file: !2171, line: 1861, baseType: !2183, size: 64, offset: 192)
!2183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2184, size: 64)
!2184 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_ifalias", file: !2171, line: 930, size: 128, elements: !2185)
!2185 = !{!2186, !2187}
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "rcuhead", scope: !2184, file: !2171, line: 931, baseType: !178, size: 128, align: 64)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "ifalias", scope: !2184, file: !2171, line: 932, baseType: !2188, offset: 128)
!2188 = !DICompositeType(tag: DW_TAG_array_type, baseType: !28, elements: !2189)
!2189 = !{!2190}
!2190 = !DISubrange(count: -1)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "mem_end", scope: !2170, file: !2171, line: 1866, baseType: !135, size: 64, offset: 256)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "mem_start", scope: !2170, file: !2171, line: 1867, baseType: !135, size: 64, offset: 320)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "base_addr", scope: !2170, file: !2171, line: 1868, baseType: !135, size: 64, offset: 384)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !2170, file: !2171, line: 1869, baseType: !6, size: 32, offset: 448)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2170, file: !2171, line: 1877, baseType: !135, size: 64, offset: 512)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "dev_list", scope: !2170, file: !2171, line: 1879, baseType: !30, size: 128, offset: 576)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "napi_list", scope: !2170, file: !2171, line: 1880, baseType: !30, size: 128, offset: 704)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "unreg_list", scope: !2170, file: !2171, line: 1881, baseType: !30, size: 128, offset: 832)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "close_list", scope: !2170, file: !2171, line: 1882, baseType: !30, size: 128, offset: 960)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "ptype_all", scope: !2170, file: !2171, line: 1883, baseType: !30, size: 128, offset: 1088)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "ptype_specific", scope: !2170, file: !2171, line: 1884, baseType: !30, size: 128, offset: 1216)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "adj_list", scope: !2170, file: !2171, line: 1889, baseType: !2203, size: 256, offset: 1344)
!2203 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2170, file: !2171, line: 1886, size: 256, elements: !2204)
!2204 = !{!2205, !2206}
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "upper", scope: !2203, file: !2171, line: 1887, baseType: !30, size: 128)
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "lower", scope: !2203, file: !2171, line: 1888, baseType: !30, size: 128, offset: 128)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "features", scope: !2170, file: !2171, line: 1891, baseType: !2208, size: 64, offset: 1600)
!2208 = !DIDerivedType(tag: DW_TAG_typedef, name: "netdev_features_t", file: !2209, line: 12, baseType: !235)
!2209 = !DIFile(filename: "./include/linux/netdev_features.h", directory: "/home/lizy2001/genbc/linux")
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "hw_features", scope: !2170, file: !2171, line: 1892, baseType: !2208, size: 64, offset: 1664)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "wanted_features", scope: !2170, file: !2171, line: 1893, baseType: !2208, size: 64, offset: 1728)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_features", scope: !2170, file: !2171, line: 1894, baseType: !2208, size: 64, offset: 1792)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "hw_enc_features", scope: !2170, file: !2171, line: 1895, baseType: !2208, size: 64, offset: 1856)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "mpls_features", scope: !2170, file: !2171, line: 1896, baseType: !2208, size: 64, offset: 1920)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "gso_partial_features", scope: !2170, file: !2171, line: 1897, baseType: !2208, size: 64, offset: 1984)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "ifindex", scope: !2170, file: !2171, line: 1899, baseType: !6, size: 32, offset: 2048)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !2170, file: !2171, line: 1900, baseType: !6, size: 32, offset: 2080)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !2170, file: !2171, line: 1902, baseType: !2219, size: 1472, offset: 2112)
!2219 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "net_device_stats", file: !2171, line: 169, size: 1472, elements: !2220)
!2220 = !{!2221, !2222, !2223, !2224, !2225, !2226, !2227, !2228, !2229, !2230, !2231, !2232, !2233, !2234, !2235, !2236, !2237, !2238, !2239, !2240, !2241, !2242, !2243}
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "rx_packets", scope: !2219, file: !2171, line: 170, baseType: !135, size: 64)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "tx_packets", scope: !2219, file: !2171, line: 171, baseType: !135, size: 64, offset: 64)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "rx_bytes", scope: !2219, file: !2171, line: 172, baseType: !135, size: 64, offset: 128)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "tx_bytes", scope: !2219, file: !2171, line: 173, baseType: !135, size: 64, offset: 192)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "rx_errors", scope: !2219, file: !2171, line: 174, baseType: !135, size: 64, offset: 256)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "tx_errors", scope: !2219, file: !2171, line: 175, baseType: !135, size: 64, offset: 320)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "rx_dropped", scope: !2219, file: !2171, line: 176, baseType: !135, size: 64, offset: 384)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "tx_dropped", scope: !2219, file: !2171, line: 177, baseType: !135, size: 64, offset: 448)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "multicast", scope: !2219, file: !2171, line: 178, baseType: !135, size: 64, offset: 512)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "collisions", scope: !2219, file: !2171, line: 179, baseType: !135, size: 64, offset: 576)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "rx_length_errors", scope: !2219, file: !2171, line: 180, baseType: !135, size: 64, offset: 640)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "rx_over_errors", scope: !2219, file: !2171, line: 181, baseType: !135, size: 64, offset: 704)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "rx_crc_errors", scope: !2219, file: !2171, line: 182, baseType: !135, size: 64, offset: 768)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "rx_frame_errors", scope: !2219, file: !2171, line: 183, baseType: !135, size: 64, offset: 832)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "rx_fifo_errors", scope: !2219, file: !2171, line: 184, baseType: !135, size: 64, offset: 896)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "rx_missed_errors", scope: !2219, file: !2171, line: 185, baseType: !135, size: 64, offset: 960)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "tx_aborted_errors", scope: !2219, file: !2171, line: 186, baseType: !135, size: 64, offset: 1024)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "tx_carrier_errors", scope: !2219, file: !2171, line: 187, baseType: !135, size: 64, offset: 1088)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "tx_fifo_errors", scope: !2219, file: !2171, line: 188, baseType: !135, size: 64, offset: 1152)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "tx_heartbeat_errors", scope: !2219, file: !2171, line: 189, baseType: !135, size: 64, offset: 1216)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "tx_window_errors", scope: !2219, file: !2171, line: 190, baseType: !135, size: 64, offset: 1280)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "rx_compressed", scope: !2219, file: !2171, line: 191, baseType: !135, size: 64, offset: 1344)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "tx_compressed", scope: !2219, file: !2171, line: 192, baseType: !135, size: 64, offset: 1408)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "rx_dropped", scope: !2170, file: !2171, line: 1904, baseType: !562, size: 64, offset: 3584)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "tx_dropped", scope: !2170, file: !2171, line: 1905, baseType: !562, size: 64, offset: 3648)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "rx_nohandler", scope: !2170, file: !2171, line: 1906, baseType: !562, size: 64, offset: 3712)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "carrier_up_count", scope: !2170, file: !2171, line: 1909, baseType: !632, size: 32, offset: 3776)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "carrier_down_count", scope: !2170, file: !2171, line: 1910, baseType: !632, size: 32, offset: 3808)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "wireless_handlers", scope: !2170, file: !2171, line: 1913, baseType: !2250, size: 64, offset: 3840)
!2250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2251, size: 64)
!2251 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2252)
!2252 = !DICompositeType(tag: DW_TAG_structure_type, name: "iw_handler_def", file: !2171, line: 1913, flags: DIFlagFwdDecl)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "wireless_data", scope: !2170, file: !2171, line: 1914, baseType: !2254, size: 64, offset: 3904)
!2254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2255, size: 64)
!2255 = !DICompositeType(tag: DW_TAG_structure_type, name: "iw_public_data", file: !2171, line: 1914, flags: DIFlagFwdDecl)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "netdev_ops", scope: !2170, file: !2171, line: 1916, baseType: !2257, size: 64, offset: 3968)
!2257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2258, size: 64)
!2258 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2259)
!2259 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "net_device_ops", file: !2171, line: 1283, size: 4416, elements: !2260)
!2260 = !{!2261, !2265, !2269, !2270, !2271, !2281, !2285, !2289, !2293, !2294, !2298, !2299, !2410, !2415, !2419, !2689, !2693, !2725, !2729, !2733, !2738, !2742, !2743, !2748, !2752, !2756, !2760, !2761, !2781, !2785, !2800, !2806, !2810, !2819, !2823, !2824, !2848, !2852, !2856, !2860, !2864, !2868, !2872, !2876, !2891, !2895, !2939, !2943, !2948, !2952, !2956, !2960, !2969, !2970, !2974, !2986, !2987, !2991, !2995, !2999, !3003, !3004, !3008, !3009, !3844, !3864, !3868, !4221, !4251}
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_init", scope: !2259, file: !2171, line: 1284, baseType: !2262, size: 64)
!2262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2263, size: 64)
!2263 = !DISubroutineType(types: !2264)
!2264 = !{!6, !2169}
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_uninit", scope: !2259, file: !2171, line: 1285, baseType: !2266, size: 64, offset: 64)
!2266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2267, size: 64)
!2267 = !DISubroutineType(types: !2268)
!2268 = !{null, !2169}
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_open", scope: !2259, file: !2171, line: 1286, baseType: !2262, size: 64, offset: 128)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_stop", scope: !2259, file: !2171, line: 1287, baseType: !2262, size: 64, offset: 192)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_start_xmit", scope: !2259, file: !2171, line: 1288, baseType: !2272, size: 64, offset: 256)
!2272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2273, size: 64)
!2273 = !DISubroutineType(types: !2274)
!2274 = !{!2275, !2153, !2169}
!2275 = !DIDerivedType(tag: DW_TAG_typedef, name: "netdev_tx_t", file: !2171, line: 120, baseType: !2276)
!2276 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "netdev_tx", file: !2171, line: 115, baseType: !6, size: 32, elements: !2277)
!2277 = !{!2278, !2279, !2280}
!2278 = !DIEnumerator(name: "__NETDEV_TX_MIN", value: -2147483648)
!2279 = !DIEnumerator(name: "NETDEV_TX_OK", value: 0)
!2280 = !DIEnumerator(name: "NETDEV_TX_BUSY", value: 16)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_features_check", scope: !2259, file: !2171, line: 1290, baseType: !2282, size: 64, offset: 320)
!2282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2283, size: 64)
!2283 = !DISubroutineType(types: !2284)
!2284 = !{!2208, !2153, !2169, !2208}
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_select_queue", scope: !2259, file: !2171, line: 1293, baseType: !2286, size: 64, offset: 384)
!2286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2287, size: 64)
!2287 = !DISubroutineType(types: !2288)
!2288 = !{!744, !2169, !2153, !2169}
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_change_rx_flags", scope: !2259, file: !2171, line: 1296, baseType: !2290, size: 64, offset: 448)
!2290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2291, size: 64)
!2291 = !DISubroutineType(types: !2292)
!2292 = !{null, !2169, !6}
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_rx_mode", scope: !2259, file: !2171, line: 1298, baseType: !2266, size: 64, offset: 512)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_mac_address", scope: !2259, file: !2171, line: 1299, baseType: !2295, size: 64, offset: 576)
!2295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2296, size: 64)
!2296 = !DISubroutineType(types: !2297)
!2297 = !{!6, !2169, !159}
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_validate_addr", scope: !2259, file: !2171, line: 1301, baseType: !2262, size: 64, offset: 640)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_do_ioctl", scope: !2259, file: !2171, line: 1302, baseType: !2300, size: 64, offset: 704)
!2300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2301, size: 64)
!2301 = !DISubroutineType(types: !2302)
!2302 = !{!6, !2169, !2303, !6}
!2303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2304, size: 64)
!2304 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifreq", file: !2305, line: 234, size: 320, elements: !2306)
!2305 = !DIFile(filename: "./include/uapi/linux/if.h", directory: "/home/lizy2001/genbc/linux")
!2306 = !{!2307, !2311}
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "ifr_ifrn", scope: !2304, file: !2305, line: 239, baseType: !2308, size: 128)
!2308 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2304, file: !2305, line: 236, size: 128, elements: !2309)
!2309 = !{!2310}
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "ifrn_name", scope: !2308, file: !2305, line: 238, baseType: !1943, size: 128)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "ifr_ifru", scope: !2304, file: !2305, line: 255, baseType: !2312, size: 192, offset: 128)
!2312 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2304, file: !2305, line: 241, size: 192, elements: !2313)
!2313 = !{!2314, !2315, !2316, !2317, !2318, !2319, !2320, !2321, !2322, !2331, !2332, !2333, !2334}
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_addr", scope: !2312, file: !2305, line: 242, baseType: !2065, size: 128)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_dstaddr", scope: !2312, file: !2305, line: 243, baseType: !2065, size: 128)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_broadaddr", scope: !2312, file: !2305, line: 244, baseType: !2065, size: 128)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_netmask", scope: !2312, file: !2305, line: 245, baseType: !2065, size: 128)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_hwaddr", scope: !2312, file: !2305, line: 246, baseType: !2065, size: 128)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_flags", scope: !2312, file: !2305, line: 247, baseType: !1256, size: 16)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_ivalue", scope: !2312, file: !2305, line: 248, baseType: !6, size: 32)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_mtu", scope: !2312, file: !2305, line: 249, baseType: !6, size: 32)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_map", scope: !2312, file: !2305, line: 250, baseType: !2323, size: 192)
!2323 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifmap", file: !2305, line: 196, size: 192, elements: !2324)
!2324 = !{!2325, !2326, !2327, !2328, !2329, !2330}
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "mem_start", scope: !2323, file: !2305, line: 197, baseType: !135, size: 64)
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "mem_end", scope: !2323, file: !2305, line: 198, baseType: !135, size: 64, offset: 64)
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "base_addr", scope: !2323, file: !2305, line: 199, baseType: !127, size: 16, offset: 128)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !2323, file: !2305, line: 200, baseType: !241, size: 8, offset: 144)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "dma", scope: !2323, file: !2305, line: 201, baseType: !241, size: 8, offset: 152)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !2323, file: !2305, line: 202, baseType: !241, size: 8, offset: 160)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_slave", scope: !2312, file: !2305, line: 251, baseType: !1943, size: 128)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_newname", scope: !2312, file: !2305, line: 252, baseType: !1943, size: 128)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_data", scope: !2312, file: !2305, line: 253, baseType: !159, size: 64)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_settings", scope: !2312, file: !2305, line: 254, baseType: !2335, size: 128)
!2335 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "if_settings", file: !2305, line: 207, size: 128, elements: !2336)
!2336 = !{!2337, !2338, !2339}
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2335, file: !2305, line: 208, baseType: !199, size: 32)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2335, file: !2305, line: 209, baseType: !199, size: 32, offset: 32)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "ifs_ifsu", scope: !2335, file: !2305, line: 222, baseType: !2340, size: 64, offset: 64)
!2340 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2335, file: !2305, line: 210, size: 64, elements: !2341)
!2341 = !{!2342, !2350, !2357, !2369, !2375, !2382, !2393, !2401}
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "raw_hdlc", scope: !2340, file: !2305, line: 212, baseType: !2343, size: 64)
!2343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2344, size: 64)
!2344 = !DIDerivedType(tag: DW_TAG_typedef, name: "raw_hdlc_proto", file: !2345, line: 56, baseType: !2346)
!2345 = !DIFile(filename: "./include/uapi/linux/hdlc/ioctl.h", directory: "/home/lizy2001/genbc/linux")
!2346 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2345, line: 53, size: 32, elements: !2347)
!2347 = !{!2348, !2349}
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "encoding", scope: !2346, file: !2345, line: 54, baseType: !127, size: 16)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !2346, file: !2345, line: 55, baseType: !127, size: 16, offset: 16)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "cisco", scope: !2340, file: !2305, line: 213, baseType: !2351, size: 64)
!2351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2352, size: 64)
!2352 = !DIDerivedType(tag: DW_TAG_typedef, name: "cisco_proto", file: !2345, line: 80, baseType: !2353)
!2353 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2345, line: 77, size: 64, elements: !2354)
!2354 = !{!2355, !2356}
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !2353, file: !2345, line: 78, baseType: !199, size: 32)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2353, file: !2345, line: 79, baseType: !199, size: 32, offset: 32)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "fr", scope: !2340, file: !2305, line: 214, baseType: !2358, size: 64)
!2358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2359, size: 64)
!2359 = !DIDerivedType(tag: DW_TAG_typedef, name: "fr_proto", file: !2345, line: 66, baseType: !2360)
!2360 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2345, line: 58, size: 192, elements: !2361)
!2361 = !{!2362, !2363, !2364, !2365, !2366, !2367, !2368}
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "t391", scope: !2360, file: !2345, line: 59, baseType: !199, size: 32)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "t392", scope: !2360, file: !2345, line: 60, baseType: !199, size: 32, offset: 32)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "n391", scope: !2360, file: !2345, line: 61, baseType: !199, size: 32, offset: 64)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "n392", scope: !2360, file: !2345, line: 62, baseType: !199, size: 32, offset: 96)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "n393", scope: !2360, file: !2345, line: 63, baseType: !199, size: 32, offset: 128)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "lmi", scope: !2360, file: !2345, line: 64, baseType: !127, size: 16, offset: 160)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "dce", scope: !2360, file: !2345, line: 65, baseType: !127, size: 16, offset: 176)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "fr_pvc", scope: !2340, file: !2305, line: 215, baseType: !2370, size: 64)
!2370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2371, size: 64)
!2371 = !DIDerivedType(tag: DW_TAG_typedef, name: "fr_proto_pvc", file: !2345, line: 70, baseType: !2372)
!2372 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2345, line: 68, size: 32, elements: !2373)
!2373 = !{!2374}
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "dlci", scope: !2372, file: !2345, line: 69, baseType: !199, size: 32)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "fr_pvc_info", scope: !2340, file: !2305, line: 216, baseType: !2376, size: 64)
!2376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2377, size: 64)
!2377 = !DIDerivedType(tag: DW_TAG_typedef, name: "fr_proto_pvc_info", file: !2345, line: 75, baseType: !2378)
!2378 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2345, line: 72, size: 160, elements: !2379)
!2379 = !{!2380, !2381}
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "dlci", scope: !2378, file: !2345, line: 73, baseType: !199, size: 32)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "master", scope: !2378, file: !2345, line: 74, baseType: !1943, size: 128, offset: 32)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "x25", scope: !2340, file: !2305, line: 217, baseType: !2383, size: 64)
!2383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2384, size: 64)
!2384 = !DIDerivedType(tag: DW_TAG_typedef, name: "x25_hdlc_proto", file: !2345, line: 89, baseType: !2385)
!2385 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2345, line: 82, size: 192, elements: !2386)
!2386 = !{!2387, !2388, !2389, !2390, !2391, !2392}
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "dce", scope: !2385, file: !2345, line: 83, baseType: !127, size: 16)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "modulo", scope: !2385, file: !2345, line: 84, baseType: !199, size: 32, offset: 32)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "window", scope: !2385, file: !2345, line: 85, baseType: !199, size: 32, offset: 64)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "t1", scope: !2385, file: !2345, line: 86, baseType: !199, size: 32, offset: 96)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "t2", scope: !2385, file: !2345, line: 87, baseType: !199, size: 32, offset: 128)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "n2", scope: !2385, file: !2345, line: 88, baseType: !199, size: 32, offset: 160)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "sync", scope: !2340, file: !2305, line: 220, baseType: !2394, size: 64)
!2394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2395, size: 64)
!2395 = !DIDerivedType(tag: DW_TAG_typedef, name: "sync_serial_settings", file: !2345, line: 44, baseType: !2396)
!2396 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2345, line: 40, size: 96, elements: !2397)
!2397 = !{!2398, !2399, !2400}
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "clock_rate", scope: !2396, file: !2345, line: 41, baseType: !199, size: 32)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "clock_type", scope: !2396, file: !2345, line: 42, baseType: !199, size: 32, offset: 32)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "loopback", scope: !2396, file: !2345, line: 43, baseType: !127, size: 16, offset: 64)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "te1", scope: !2340, file: !2305, line: 221, baseType: !2402, size: 64)
!2402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2403, size: 64)
!2403 = !DIDerivedType(tag: DW_TAG_typedef, name: "te1_settings", file: !2345, line: 51, baseType: !2404)
!2404 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2345, line: 46, size: 128, elements: !2405)
!2405 = !{!2406, !2407, !2408, !2409}
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "clock_rate", scope: !2404, file: !2345, line: 47, baseType: !199, size: 32)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "clock_type", scope: !2404, file: !2345, line: 48, baseType: !199, size: 32, offset: 32)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "loopback", scope: !2404, file: !2345, line: 49, baseType: !127, size: 16, offset: 64)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "slot_map", scope: !2404, file: !2345, line: 50, baseType: !199, size: 32, offset: 96)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_config", scope: !2259, file: !2171, line: 1304, baseType: !2411, size: 64, offset: 768)
!2411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2412, size: 64)
!2412 = !DISubroutineType(types: !2413)
!2413 = !{!6, !2169, !2414}
!2414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2323, size: 64)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_change_mtu", scope: !2259, file: !2171, line: 1306, baseType: !2416, size: 64, offset: 832)
!2416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2417, size: 64)
!2417 = !DISubroutineType(types: !2418)
!2418 = !{!6, !2169, !6}
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_neigh_setup", scope: !2259, file: !2171, line: 1308, baseType: !2420, size: 64, offset: 896)
!2420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2421, size: 64)
!2421 = !DISubroutineType(types: !2422)
!2422 = !{!6, !2169, !2423}
!2423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2424, size: 64)
!2424 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "neigh_parms", file: !2425, line: 70, size: 1152, elements: !2426)
!2425 = !DIFile(filename: "./include/net/neighbour.h", directory: "/home/lizy2001/genbc/linux")
!2426 = !{!2427, !2432, !2433, !2434, !2678, !2679, !2680, !2681, !2682, !2683, !2684, !2688}
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "net", scope: !2424, file: !2425, line: 71, baseType: !2428, size: 64)
!2428 = !DIDerivedType(tag: DW_TAG_typedef, name: "possible_net_t", file: !1977, line: 318, baseType: !2429)
!2429 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1977, line: 314, size: 64, elements: !2430)
!2430 = !{!2431}
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "net", scope: !2429, file: !1977, line: 316, baseType: !1975, size: 64)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2424, file: !2425, line: 72, baseType: !2169, size: 64, offset: 64)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2424, file: !2425, line: 73, baseType: !30, size: 128, offset: 128)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "neigh_setup", scope: !2424, file: !2425, line: 74, baseType: !2435, size: 64, offset: 256)
!2435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2436, size: 64)
!2436 = !DISubroutineType(types: !2437)
!2437 = !{!6, !2438}
!2438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2439, size: 64)
!2439 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "neighbour", file: !2425, line: 134, size: 2624, elements: !2440)
!2440 = !{!2441, !2442, !2622, !2623, !2624, !2625, !2626, !2627, !2628, !2629, !2630, !2631, !2632, !2633, !2634, !2635, !2636, !2637, !2643, !2647, !2656, !2660, !2673, !2674, !2675, !2676}
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2439, file: !2425, line: 135, baseType: !2438, size: 64)
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "tbl", scope: !2439, file: !2425, line: 136, baseType: !2443, size: 64, offset: 64)
!2443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2444, size: 64)
!2444 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "neigh_table", file: !2425, line: 194, size: 3840, elements: !2445)
!2445 = !{!2446, !2447, !2448, !2449, !2450, !2459, !2465, !2466, !2480, !2484, !2488, !2492, !2553, !2554, !2555, !2556, !2557, !2558, !2559, !2560, !2561, !2581, !2582, !2589, !2590, !2591, !2592, !2593, !2594, !2610, !2620}
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !2444, file: !2425, line: 195, baseType: !6, size: 32)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "entry_size", scope: !2444, file: !2425, line: 196, baseType: !199, size: 32, offset: 32)
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "key_len", scope: !2444, file: !2425, line: 197, baseType: !199, size: 32, offset: 64)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !2444, file: !2425, line: 198, baseType: !2037, size: 16, offset: 96)
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !2444, file: !2425, line: 199, baseType: !2451, size: 64, offset: 128)
!2451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2452, size: 64)
!2452 = !DISubroutineType(types: !2453)
!2453 = !{!231, !2454, !2456, !2458}
!2454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2455, size: 64)
!2455 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!2456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2457, size: 64)
!2457 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2170)
!2458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !231, size: 64)
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "key_eq", scope: !2444, file: !2425, line: 202, baseType: !2460, size: 64, offset: 192)
!2460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2461, size: 64)
!2461 = !DISubroutineType(types: !2462)
!2462 = !{!304, !2463, !2454}
!2463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2464, size: 64)
!2464 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2439)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "constructor", scope: !2444, file: !2425, line: 203, baseType: !2435, size: 64, offset: 256)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "pconstructor", scope: !2444, file: !2425, line: 204, baseType: !2467, size: 64, offset: 320)
!2467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2468, size: 64)
!2468 = !DISubroutineType(types: !2469)
!2469 = !{!6, !2470}
!2470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2471, size: 64)
!2471 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pneigh_entry", file: !2425, line: 171, size: 256, elements: !2472)
!2472 = !{!2473, !2474, !2475, !2476, !2477, !2478}
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2471, file: !2425, line: 172, baseType: !2470, size: 64)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "net", scope: !2471, file: !2425, line: 173, baseType: !2428, size: 64, offset: 64)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2471, file: !2425, line: 174, baseType: !2169, size: 64, offset: 128)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2471, file: !2425, line: 175, baseType: !1403, size: 8, offset: 192)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !2471, file: !2425, line: 176, baseType: !1403, size: 8, offset: 200)
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !2471, file: !2425, line: 177, baseType: !2479, offset: 208)
!2479 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1403, elements: !2189)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "pdestructor", scope: !2444, file: !2425, line: 205, baseType: !2481, size: 64, offset: 384)
!2481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2482, size: 64)
!2482 = !DISubroutineType(types: !2483)
!2483 = !{null, !2470}
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_redo", scope: !2444, file: !2425, line: 206, baseType: !2485, size: 64, offset: 448)
!2485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2486, size: 64)
!2486 = !DISubroutineType(types: !2487)
!2487 = !{null, !2153}
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "is_multicast", scope: !2444, file: !2425, line: 207, baseType: !2489, size: 64, offset: 512)
!2489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2490, size: 64)
!2490 = !DISubroutineType(types: !2491)
!2491 = !{!6, !2454}
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "allow_add", scope: !2444, file: !2425, line: 208, baseType: !2493, size: 64, offset: 576)
!2493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2494, size: 64)
!2494 = !DISubroutineType(types: !2495)
!2495 = !{!304, !2456, !2496}
!2496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2497, size: 64)
!2497 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netlink_ext_ack", file: !2498, line: 75, size: 384, elements: !2499)
!2498 = !DIFile(filename: "./include/linux/netlink.h", directory: "/home/lizy2001/genbc/linux")
!2499 = !{!2500, !2501, !2509, !2548, !2552}
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "_msg", scope: !2497, file: !2498, line: 76, baseType: !26, size: 64)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "bad_attr", scope: !2497, file: !2498, line: 77, baseType: !2502, size: 64, offset: 64)
!2502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2503, size: 64)
!2503 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2504)
!2504 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nlattr", file: !2505, line: 213, size: 32, elements: !2506)
!2505 = !DIFile(filename: "./include/uapi/linux/netlink.h", directory: "/home/lizy2001/genbc/linux")
!2506 = !{!2507, !2508}
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "nla_len", scope: !2504, file: !2505, line: 214, baseType: !745, size: 16)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "nla_type", scope: !2504, file: !2505, line: 215, baseType: !745, size: 16, offset: 16)
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !2497, file: !2498, line: 78, baseType: !2510, size: 64, offset: 128)
!2510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2511, size: 64)
!2511 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2512)
!2512 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nla_policy", file: !2513, line: 315, size: 128, elements: !2514)
!2513 = !DIFile(filename: "./include/net/netlink.h", directory: "/home/lizy2001/genbc/linux")
!2514 = !{!2515, !2516, !2517, !2518}
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2512, file: !2513, line: 316, baseType: !1403, size: 8)
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "validation_type", scope: !2512, file: !2513, line: 317, baseType: !1403, size: 8, offset: 8)
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !2512, file: !2513, line: 318, baseType: !744, size: 16, offset: 16)
!2518 = !DIDerivedType(tag: DW_TAG_member, scope: !2512, file: !2513, line: 319, baseType: !2519, size: 64, offset: 64)
!2519 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2512, file: !2513, line: 319, size: 64, elements: !2520)
!2520 = !{!2521, !2523, !2524, !2525, !2526, !2532, !2538, !2543, !2547}
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "bitfield32_valid", scope: !2519, file: !2513, line: 320, baseType: !2522, size: 32)
!2522 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !229)
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !2519, file: !2513, line: 321, baseType: !2522, size: 32)
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "reject_message", scope: !2519, file: !2513, line: 322, baseType: !26, size: 64)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "nested_policy", scope: !2519, file: !2513, line: 323, baseType: !2510, size: 64)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !2519, file: !2513, line: 324, baseType: !2527, size: 64)
!2527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2528, size: 64)
!2528 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netlink_range_validation", file: !2513, line: 189, size: 128, elements: !2529)
!2529 = !{!2530, !2531}
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !2528, file: !2513, line: 190, baseType: !235, size: 64)
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !2528, file: !2513, line: 190, baseType: !235, size: 64, offset: 64)
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "range_signed", scope: !2519, file: !2513, line: 325, baseType: !2533, size: 64)
!2533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2534, size: 64)
!2534 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netlink_range_validation_signed", file: !2513, line: 193, size: 128, elements: !2535)
!2535 = !{!2536, !2537}
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !2534, file: !2513, line: 194, baseType: !568, size: 64)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !2534, file: !2513, line: 194, baseType: !568, size: 64, offset: 64)
!2538 = !DIDerivedType(tag: DW_TAG_member, scope: !2519, file: !2513, line: 326, baseType: !2539, size: 32)
!2539 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2519, file: !2513, line: 326, size: 32, elements: !2540)
!2540 = !{!2541, !2542}
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !2539, file: !2513, line: 327, baseType: !1254, size: 16)
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !2539, file: !2513, line: 327, baseType: !1254, size: 16, offset: 16)
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "validate", scope: !2519, file: !2513, line: 329, baseType: !2544, size: 64)
!2544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2545, size: 64)
!2545 = !DISubroutineType(types: !2546)
!2546 = !{!6, !2502, !2496}
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "strict_start_type", scope: !2519, file: !2513, line: 349, baseType: !744, size: 16)
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "cookie", scope: !2497, file: !2498, line: 79, baseType: !2549, size: 160, offset: 192)
!2549 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1403, size: 160, elements: !2550)
!2550 = !{!2551}
!2551 = !DISubrange(count: 20)
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "cookie_len", scope: !2497, file: !2498, line: 80, baseType: !1403, size: 8, offset: 352)
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2444, file: !2425, line: 210, baseType: !85, size: 64, offset: 640)
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "parms", scope: !2444, file: !2425, line: 211, baseType: !2424, size: 1152, offset: 704)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "parms_list", scope: !2444, file: !2425, line: 212, baseType: !30, size: 128, offset: 1856)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "gc_interval", scope: !2444, file: !2425, line: 213, baseType: !6, size: 32, offset: 1984)
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "gc_thresh1", scope: !2444, file: !2425, line: 214, baseType: !6, size: 32, offset: 2016)
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "gc_thresh2", scope: !2444, file: !2425, line: 215, baseType: !6, size: 32, offset: 2048)
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "gc_thresh3", scope: !2444, file: !2425, line: 216, baseType: !6, size: 32, offset: 2080)
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "last_flush", scope: !2444, file: !2425, line: 217, baseType: !135, size: 64, offset: 2112)
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "gc_work", scope: !2444, file: !2425, line: 218, baseType: !2562, size: 704, offset: 2176)
!2562 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_work", file: !1729, line: 115, size: 704, elements: !2563)
!2563 = !{!2564, !2565, !2577, !2580}
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !2562, file: !1729, line: 116, baseType: !1728, size: 256)
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !2562, file: !1729, line: 117, baseType: !2566, size: 320, offset: 256)
!2566 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timer_list", file: !2567, line: 11, size: 320, elements: !2568)
!2567 = !DIFile(filename: "./include/linux/timer.h", directory: "/home/lizy2001/genbc/linux")
!2568 = !{!2569, !2570, !2571, !2576}
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !2566, file: !2567, line: 16, baseType: !455, size: 128)
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !2566, file: !2567, line: 17, baseType: !135, size: 64, offset: 128)
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !2566, file: !2567, line: 18, baseType: !2572, size: 64, offset: 192)
!2572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2573, size: 64)
!2573 = !DISubroutineType(types: !2574)
!2574 = !{null, !2575}
!2575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2566, size: 64)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2566, file: !2567, line: 19, baseType: !229, size: 32, offset: 256)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "wq", scope: !2562, file: !1729, line: 120, baseType: !2578, size: 64, offset: 576)
!2578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2579, size: 64)
!2579 = !DICompositeType(tag: DW_TAG_structure_type, name: "workqueue_struct", file: !1729, line: 18, flags: DIFlagFwdDecl)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !2562, file: !1729, line: 121, baseType: !6, size: 32, offset: 640)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_timer", scope: !2444, file: !2425, line: 219, baseType: !2566, size: 320, offset: 2880)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_queue", scope: !2444, file: !2425, line: 220, baseType: !2583, size: 192, offset: 3200)
!2583 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sk_buff_head", file: !2155, line: 291, size: 192, elements: !2584)
!2584 = !{!2585, !2586, !2587, !2588}
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2583, file: !2155, line: 293, baseType: !2153, size: 64)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2583, file: !2155, line: 294, baseType: !2153, size: 64, offset: 64)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "qlen", scope: !2583, file: !2155, line: 296, baseType: !231, size: 32, offset: 128)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2583, file: !2155, line: 297, baseType: !44, offset: 160)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "entries", scope: !2444, file: !2425, line: 221, baseType: !632, size: 32, offset: 3392)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "gc_entries", scope: !2444, file: !2425, line: 222, baseType: !632, size: 32, offset: 3424)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "gc_list", scope: !2444, file: !2425, line: 223, baseType: !30, size: 128, offset: 3456)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2444, file: !2425, line: 224, baseType: !834, offset: 3584)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "last_rand", scope: !2444, file: !2425, line: 225, baseType: !135, size: 64, offset: 3584)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !2444, file: !2425, line: 226, baseType: !2595, size: 64, offset: 3648)
!2595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2596, size: 64)
!2596 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "neigh_statistics", file: !2425, line: 112, size: 768, elements: !2597)
!2597 = !{!2598, !2599, !2600, !2601, !2602, !2603, !2604, !2605, !2606, !2607, !2608, !2609}
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "allocs", scope: !2596, file: !2425, line: 113, baseType: !135, size: 64)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "destroys", scope: !2596, file: !2425, line: 114, baseType: !135, size: 64, offset: 64)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "hash_grows", scope: !2596, file: !2425, line: 115, baseType: !135, size: 64, offset: 128)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "res_failed", scope: !2596, file: !2425, line: 117, baseType: !135, size: 64, offset: 192)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "lookups", scope: !2596, file: !2425, line: 119, baseType: !135, size: 64, offset: 256)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "hits", scope: !2596, file: !2425, line: 120, baseType: !135, size: 64, offset: 320)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "rcv_probes_mcast", scope: !2596, file: !2425, line: 122, baseType: !135, size: 64, offset: 384)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "rcv_probes_ucast", scope: !2596, file: !2425, line: 123, baseType: !135, size: 64, offset: 448)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "periodic_gc_runs", scope: !2596, file: !2425, line: 125, baseType: !135, size: 64, offset: 512)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "forced_gc_runs", scope: !2596, file: !2425, line: 126, baseType: !135, size: 64, offset: 576)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "unres_discards", scope: !2596, file: !2425, line: 128, baseType: !135, size: 64, offset: 640)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "table_fulls", scope: !2596, file: !2425, line: 129, baseType: !135, size: 64, offset: 704)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "nht", scope: !2444, file: !2425, line: 227, baseType: !2611, size: 64, offset: 3712)
!2611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2612, size: 64)
!2612 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "neigh_hash_table", file: !2425, line: 186, size: 384, elements: !2613)
!2613 = !{!2614, !2616, !2617, !2619}
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "hash_buckets", scope: !2612, file: !2425, line: 187, baseType: !2615, size: 64)
!2615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2438, size: 64)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "hash_shift", scope: !2612, file: !2425, line: 188, baseType: !199, size: 32, offset: 64)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "hash_rnd", scope: !2612, file: !2425, line: 189, baseType: !2618, size: 128, offset: 96)
!2618 = !DICompositeType(tag: DW_TAG_array_type, baseType: !231, size: 128, elements: !1212)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2612, file: !2425, line: 190, baseType: !178, size: 128, align: 64, offset: 256)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "phash_buckets", scope: !2444, file: !2425, line: 228, baseType: !2621, size: 64, offset: 3776)
!2621 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2470, size: 64)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "parms", scope: !2439, file: !2425, line: 137, baseType: !2423, size: 64, offset: 128)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "confirmed", scope: !2439, file: !2425, line: 138, baseType: !135, size: 64, offset: 192)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "updated", scope: !2439, file: !2425, line: 139, baseType: !135, size: 64, offset: 256)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2439, file: !2425, line: 140, baseType: !834, offset: 320)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !2439, file: !2425, line: 141, baseType: !880, size: 32, offset: 320)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "arp_queue_len_bytes", scope: !2439, file: !2425, line: 142, baseType: !199, size: 32, offset: 352)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "arp_queue", scope: !2439, file: !2425, line: 143, baseType: !2583, size: 192, offset: 384)
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !2439, file: !2425, line: 144, baseType: !2566, size: 320, offset: 576)
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !2439, file: !2425, line: 145, baseType: !135, size: 64, offset: 896)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "probes", scope: !2439, file: !2425, line: 146, baseType: !632, size: 32, offset: 960)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2439, file: !2425, line: 147, baseType: !1404, size: 8, offset: 992)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "nud_state", scope: !2439, file: !2425, line: 148, baseType: !1404, size: 8, offset: 1000)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2439, file: !2425, line: 149, baseType: !1404, size: 8, offset: 1008)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "dead", scope: !2439, file: !2425, line: 150, baseType: !1404, size: 8, offset: 1016)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !2439, file: !2425, line: 151, baseType: !1403, size: 8, offset: 1024)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "ha_lock", scope: !2439, file: !2425, line: 152, baseType: !2638, size: 32, offset: 1056)
!2638 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqlock_t", file: !202, line: 805, baseType: !2639)
!2639 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !202, line: 798, size: 32, elements: !2640)
!2640 = !{!2641, !2642}
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !2639, file: !202, line: 803, baseType: !201, size: 32)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2639, file: !202, line: 804, baseType: !44, offset: 32)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "ha", scope: !2439, file: !2425, line: 153, baseType: !2644, size: 256, align: 64, offset: 1088)
!2644 = !DICompositeType(tag: DW_TAG_array_type, baseType: !241, size: 256, elements: !2645)
!2645 = !{!2646}
!2646 = !DISubrange(count: 32)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "hh", scope: !2439, file: !2425, line: 154, baseType: !2648, size: 832, offset: 1344)
!2648 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hh_cache", file: !2171, line: 244, size: 832, elements: !2649)
!2649 = !{!2650, !2651, !2652}
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "hh_len", scope: !2648, file: !2171, line: 245, baseType: !199, size: 32)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "hh_lock", scope: !2648, file: !2171, line: 246, baseType: !2638, size: 32, offset: 32)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "hh_data", scope: !2648, file: !2171, line: 254, baseType: !2653, size: 768, offset: 64)
!2653 = !DICompositeType(tag: DW_TAG_array_type, baseType: !135, size: 768, elements: !2654)
!2654 = !{!2655}
!2655 = !DISubrange(count: 12)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "output", scope: !2439, file: !2425, line: 155, baseType: !2657, size: 64, offset: 2176)
!2657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2658, size: 64)
!2658 = !DISubroutineType(types: !2659)
!2659 = !{!6, !2438, !2153}
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2439, file: !2425, line: 156, baseType: !2661, size: 64, offset: 2240)
!2661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2662, size: 64)
!2662 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2663)
!2663 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "neigh_ops", file: !2425, line: 163, size: 320, elements: !2664)
!2664 = !{!2665, !2666, !2670, !2671, !2672}
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !2663, file: !2425, line: 164, baseType: !6, size: 32)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "solicit", scope: !2663, file: !2425, line: 165, baseType: !2667, size: 64, offset: 64)
!2667 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2668, size: 64)
!2668 = !DISubroutineType(types: !2669)
!2669 = !{null, !2438, !2153}
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "error_report", scope: !2663, file: !2425, line: 166, baseType: !2667, size: 64, offset: 128)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "output", scope: !2663, file: !2425, line: 167, baseType: !2657, size: 64, offset: 192)
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "connected_output", scope: !2663, file: !2425, line: 168, baseType: !2657, size: 64, offset: 256)
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "gc_list", scope: !2439, file: !2425, line: 157, baseType: !30, size: 128, offset: 2304)
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2439, file: !2425, line: 158, baseType: !178, size: 128, align: 64, offset: 2432)
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2439, file: !2425, line: 159, baseType: !2169, size: 64, offset: 2560)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "primary_key", scope: !2439, file: !2425, line: 160, baseType: !2677, offset: 2624)
!2677 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1403, elements: !1932)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "tbl", scope: !2424, file: !2425, line: 75, baseType: !2443, size: 64, offset: 320)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_table", scope: !2424, file: !2425, line: 77, baseType: !159, size: 64, offset: 384)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "dead", scope: !2424, file: !2425, line: 79, baseType: !6, size: 32, offset: 448)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !2424, file: !2425, line: 80, baseType: !880, size: 32, offset: 480)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !2424, file: !2425, line: 81, baseType: !178, size: 128, align: 64, offset: 512)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "reachable_time", scope: !2424, file: !2425, line: 83, baseType: !6, size: 32, offset: 640)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2424, file: !2425, line: 84, baseType: !2685, size: 416, offset: 672)
!2685 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6, size: 416, elements: !2686)
!2686 = !{!2687}
!2687 = !DISubrange(count: 13)
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "data_state", scope: !2424, file: !2425, line: 85, baseType: !1421, size: 64, offset: 1088)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_tx_timeout", scope: !2259, file: !2171, line: 1310, baseType: !2690, size: 64, offset: 960)
!2690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2691, size: 64)
!2691 = !DISubroutineType(types: !2692)
!2692 = !{null, !2169, !199}
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_stats64", scope: !2259, file: !2171, line: 1313, baseType: !2694, size: 64, offset: 1024)
!2694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2695, size: 64)
!2695 = !DISubroutineType(types: !2696)
!2696 = !{null, !2169, !2697}
!2697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2698, size: 64)
!2698 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtnl_link_stats64", file: !2699, line: 214, size: 1536, elements: !2700)
!2699 = !DIFile(filename: "./include/uapi/linux/if_link.h", directory: "/home/lizy2001/genbc/linux")
!2700 = !{!2701, !2702, !2703, !2704, !2705, !2706, !2707, !2708, !2709, !2710, !2711, !2712, !2713, !2714, !2715, !2716, !2717, !2718, !2719, !2720, !2721, !2722, !2723, !2724}
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "rx_packets", scope: !2698, file: !2699, line: 215, baseType: !236, size: 64)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "tx_packets", scope: !2698, file: !2699, line: 216, baseType: !236, size: 64, offset: 64)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "rx_bytes", scope: !2698, file: !2699, line: 217, baseType: !236, size: 64, offset: 128)
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "tx_bytes", scope: !2698, file: !2699, line: 218, baseType: !236, size: 64, offset: 192)
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "rx_errors", scope: !2698, file: !2699, line: 219, baseType: !236, size: 64, offset: 256)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "tx_errors", scope: !2698, file: !2699, line: 220, baseType: !236, size: 64, offset: 320)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "rx_dropped", scope: !2698, file: !2699, line: 221, baseType: !236, size: 64, offset: 384)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "tx_dropped", scope: !2698, file: !2699, line: 222, baseType: !236, size: 64, offset: 448)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "multicast", scope: !2698, file: !2699, line: 223, baseType: !236, size: 64, offset: 512)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "collisions", scope: !2698, file: !2699, line: 224, baseType: !236, size: 64, offset: 576)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "rx_length_errors", scope: !2698, file: !2699, line: 227, baseType: !236, size: 64, offset: 640)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "rx_over_errors", scope: !2698, file: !2699, line: 228, baseType: !236, size: 64, offset: 704)
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "rx_crc_errors", scope: !2698, file: !2699, line: 229, baseType: !236, size: 64, offset: 768)
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "rx_frame_errors", scope: !2698, file: !2699, line: 230, baseType: !236, size: 64, offset: 832)
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "rx_fifo_errors", scope: !2698, file: !2699, line: 231, baseType: !236, size: 64, offset: 896)
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "rx_missed_errors", scope: !2698, file: !2699, line: 232, baseType: !236, size: 64, offset: 960)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "tx_aborted_errors", scope: !2698, file: !2699, line: 235, baseType: !236, size: 64, offset: 1024)
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "tx_carrier_errors", scope: !2698, file: !2699, line: 236, baseType: !236, size: 64, offset: 1088)
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "tx_fifo_errors", scope: !2698, file: !2699, line: 237, baseType: !236, size: 64, offset: 1152)
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "tx_heartbeat_errors", scope: !2698, file: !2699, line: 238, baseType: !236, size: 64, offset: 1216)
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "tx_window_errors", scope: !2698, file: !2699, line: 239, baseType: !236, size: 64, offset: 1280)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "rx_compressed", scope: !2698, file: !2699, line: 242, baseType: !236, size: 64, offset: 1344)
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "tx_compressed", scope: !2698, file: !2699, line: 243, baseType: !236, size: 64, offset: 1408)
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "rx_nohandler", scope: !2698, file: !2699, line: 244, baseType: !236, size: 64, offset: 1472)
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_has_offload_stats", scope: !2259, file: !2171, line: 1315, baseType: !2726, size: 64, offset: 1088)
!2726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2727, size: 64)
!2727 = !DISubroutineType(types: !2728)
!2728 = !{!304, !2456, !6}
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_offload_stats", scope: !2259, file: !2171, line: 1316, baseType: !2730, size: 64, offset: 1152)
!2730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2731, size: 64)
!2731 = !DISubroutineType(types: !2732)
!2732 = !{!6, !6, !2456, !159}
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_stats", scope: !2259, file: !2171, line: 1319, baseType: !2734, size: 64, offset: 1216)
!2734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2735, size: 64)
!2735 = !DISubroutineType(types: !2736)
!2736 = !{!2737, !2169}
!2737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2219, size: 64)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_vlan_rx_add_vid", scope: !2259, file: !2171, line: 1321, baseType: !2739, size: 64, offset: 1280)
!2739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2740, size: 64)
!2740 = !DISubroutineType(types: !2741)
!2741 = !{!6, !2169, !2037, !744}
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_vlan_rx_kill_vid", scope: !2259, file: !2171, line: 1323, baseType: !2739, size: 64, offset: 1344)
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_mac", scope: !2259, file: !2171, line: 1331, baseType: !2744, size: 64, offset: 1408)
!2744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2745, size: 64)
!2745 = !DISubroutineType(types: !2746)
!2746 = !{!6, !2169, !6, !2747}
!2747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1403, size: 64)
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_vlan", scope: !2259, file: !2171, line: 1333, baseType: !2749, size: 64, offset: 1472)
!2749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2750, size: 64)
!2750 = !DISubroutineType(types: !2751)
!2751 = !{!6, !2169, !6, !744, !1403, !2037}
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_rate", scope: !2259, file: !2171, line: 1336, baseType: !2753, size: 64, offset: 1536)
!2753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2754, size: 64)
!2754 = !DISubroutineType(types: !2755)
!2755 = !{!6, !2169, !6, !6, !6}
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_spoofchk", scope: !2259, file: !2171, line: 1339, baseType: !2757, size: 64, offset: 1600)
!2757 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2758, size: 64)
!2758 = !DISubroutineType(types: !2759)
!2759 = !{!6, !2169, !6, !304}
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_trust", scope: !2259, file: !2171, line: 1341, baseType: !2757, size: 64, offset: 1664)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_vf_config", scope: !2259, file: !2171, line: 1343, baseType: !2762, size: 64, offset: 1728)
!2762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2763, size: 64)
!2763 = !DISubroutineType(types: !2764)
!2764 = !{!6, !2169, !6, !2765}
!2765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2766, size: 64)
!2766 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifla_vf_info", file: !2767, line: 20, size: 576, elements: !2768)
!2767 = !DIFile(filename: "./include/linux/if_link.h", directory: "/home/lizy2001/genbc/linux")
!2768 = !{!2769, !2770, !2772, !2773, !2774, !2775, !2776, !2777, !2778, !2779, !2780}
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "vf", scope: !2766, file: !2767, line: 21, baseType: !231, size: 32)
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "mac", scope: !2766, file: !2767, line: 22, baseType: !2771, size: 256, offset: 32)
!2771 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1404, size: 256, elements: !2645)
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "vlan", scope: !2766, file: !2767, line: 23, baseType: !231, size: 32, offset: 288)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "qos", scope: !2766, file: !2767, line: 24, baseType: !231, size: 32, offset: 320)
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "spoofchk", scope: !2766, file: !2767, line: 25, baseType: !231, size: 32, offset: 352)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "linkstate", scope: !2766, file: !2767, line: 26, baseType: !231, size: 32, offset: 384)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "min_tx_rate", scope: !2766, file: !2767, line: 27, baseType: !231, size: 32, offset: 416)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "max_tx_rate", scope: !2766, file: !2767, line: 28, baseType: !231, size: 32, offset: 448)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "rss_query_en", scope: !2766, file: !2767, line: 29, baseType: !231, size: 32, offset: 480)
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "trusted", scope: !2766, file: !2767, line: 30, baseType: !231, size: 32, offset: 512)
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_proto", scope: !2766, file: !2767, line: 31, baseType: !2037, size: 16, offset: 544)
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_link_state", scope: !2259, file: !2171, line: 1346, baseType: !2782, size: 64, offset: 1792)
!2782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2783, size: 64)
!2783 = !DISubroutineType(types: !2784)
!2784 = !{!6, !2169, !6, !6}
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_vf_stats", scope: !2259, file: !2171, line: 1348, baseType: !2786, size: 64, offset: 1856)
!2786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2787, size: 64)
!2787 = !DISubroutineType(types: !2788)
!2788 = !{!6, !2169, !6, !2789}
!2789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2790, size: 64)
!2790 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifla_vf_stats", file: !2767, line: 9, size: 512, elements: !2791)
!2791 = !{!2792, !2793, !2794, !2795, !2796, !2797, !2798, !2799}
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "rx_packets", scope: !2790, file: !2767, line: 10, baseType: !236, size: 64)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "tx_packets", scope: !2790, file: !2767, line: 11, baseType: !236, size: 64, offset: 64)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "rx_bytes", scope: !2790, file: !2767, line: 12, baseType: !236, size: 64, offset: 128)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "tx_bytes", scope: !2790, file: !2767, line: 13, baseType: !236, size: 64, offset: 192)
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "broadcast", scope: !2790, file: !2767, line: 14, baseType: !236, size: 64, offset: 256)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "multicast", scope: !2790, file: !2767, line: 15, baseType: !236, size: 64, offset: 320)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "rx_dropped", scope: !2790, file: !2767, line: 16, baseType: !236, size: 64, offset: 384)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "tx_dropped", scope: !2790, file: !2767, line: 17, baseType: !236, size: 64, offset: 448)
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_port", scope: !2259, file: !2171, line: 1352, baseType: !2801, size: 64, offset: 1920)
!2801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2802, size: 64)
!2802 = !DISubroutineType(types: !2803)
!2803 = !{!6, !2169, !6, !2804}
!2804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2805, size: 64)
!2805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2504, size: 64)
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_vf_port", scope: !2259, file: !2171, line: 1355, baseType: !2807, size: 64, offset: 1984)
!2807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2808, size: 64)
!2808 = !DISubroutineType(types: !2809)
!2809 = !{!6, !2169, !6, !2153}
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_vf_guid", scope: !2259, file: !2171, line: 1357, baseType: !2811, size: 64, offset: 2048)
!2811 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2812, size: 64)
!2812 = !DISubroutineType(types: !2813)
!2813 = !{!6, !2169, !6, !2814, !2814}
!2814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2815, size: 64)
!2815 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifla_vf_guid", file: !2699, line: 956, size: 128, elements: !2816)
!2816 = !{!2817, !2818}
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "vf", scope: !2815, file: !2699, line: 957, baseType: !231, size: 32)
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "guid", scope: !2815, file: !2699, line: 958, baseType: !236, size: 64, offset: 64)
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_guid", scope: !2259, file: !2171, line: 1361, baseType: !2820, size: 64, offset: 2112)
!2820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2821, size: 64)
!2821 = !DISubroutineType(types: !2822)
!2822 = !{!6, !2169, !6, !235, !6}
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_rss_query_en", scope: !2259, file: !2171, line: 1364, baseType: !2757, size: 64, offset: 2176)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_setup_tc", scope: !2259, file: !2171, line: 1367, baseType: !2825, size: 64, offset: 2240)
!2825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2826, size: 64)
!2826 = !DISubroutineType(types: !2827)
!2827 = !{!6, !2169, !2828, !159}
!2828 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "tc_setup_type", file: !2171, line: 836, baseType: !199, size: 32, elements: !2829)
!2829 = !{!2830, !2831, !2832, !2833, !2834, !2835, !2836, !2837, !2838, !2839, !2840, !2841, !2842, !2843, !2844, !2845, !2846, !2847}
!2830 = !DIEnumerator(name: "TC_SETUP_QDISC_MQPRIO", value: 0, isUnsigned: true)
!2831 = !DIEnumerator(name: "TC_SETUP_CLSU32", value: 1, isUnsigned: true)
!2832 = !DIEnumerator(name: "TC_SETUP_CLSFLOWER", value: 2, isUnsigned: true)
!2833 = !DIEnumerator(name: "TC_SETUP_CLSMATCHALL", value: 3, isUnsigned: true)
!2834 = !DIEnumerator(name: "TC_SETUP_CLSBPF", value: 4, isUnsigned: true)
!2835 = !DIEnumerator(name: "TC_SETUP_BLOCK", value: 5, isUnsigned: true)
!2836 = !DIEnumerator(name: "TC_SETUP_QDISC_CBS", value: 6, isUnsigned: true)
!2837 = !DIEnumerator(name: "TC_SETUP_QDISC_RED", value: 7, isUnsigned: true)
!2838 = !DIEnumerator(name: "TC_SETUP_QDISC_PRIO", value: 8, isUnsigned: true)
!2839 = !DIEnumerator(name: "TC_SETUP_QDISC_MQ", value: 9, isUnsigned: true)
!2840 = !DIEnumerator(name: "TC_SETUP_QDISC_ETF", value: 10, isUnsigned: true)
!2841 = !DIEnumerator(name: "TC_SETUP_ROOT_QDISC", value: 11, isUnsigned: true)
!2842 = !DIEnumerator(name: "TC_SETUP_QDISC_GRED", value: 12, isUnsigned: true)
!2843 = !DIEnumerator(name: "TC_SETUP_QDISC_TAPRIO", value: 13, isUnsigned: true)
!2844 = !DIEnumerator(name: "TC_SETUP_FT", value: 14, isUnsigned: true)
!2845 = !DIEnumerator(name: "TC_SETUP_QDISC_ETS", value: 15, isUnsigned: true)
!2846 = !DIEnumerator(name: "TC_SETUP_QDISC_TBF", value: 16, isUnsigned: true)
!2847 = !DIEnumerator(name: "TC_SETUP_QDISC_FIFO", value: 17, isUnsigned: true)
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_add_slave", scope: !2259, file: !2171, line: 1400, baseType: !2849, size: 64, offset: 2304)
!2849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2850, size: 64)
!2850 = !DISubroutineType(types: !2851)
!2851 = !{!6, !2169, !2169, !2496}
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_del_slave", scope: !2259, file: !2171, line: 1403, baseType: !2853, size: 64, offset: 2368)
!2853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2854, size: 64)
!2854 = !DISubroutineType(types: !2855)
!2855 = !{!6, !2169, !2169}
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_xmit_slave", scope: !2259, file: !2171, line: 1405, baseType: !2857, size: 64, offset: 2432)
!2857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2858, size: 64)
!2858 = !DISubroutineType(types: !2859)
!2859 = !{!2169, !2169, !2153, !304}
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fix_features", scope: !2259, file: !2171, line: 1408, baseType: !2861, size: 64, offset: 2496)
!2861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2862, size: 64)
!2862 = !DISubroutineType(types: !2863)
!2863 = !{!2208, !2169, !2208}
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_features", scope: !2259, file: !2171, line: 1410, baseType: !2865, size: 64, offset: 2560)
!2865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2866, size: 64)
!2866 = !DISubroutineType(types: !2867)
!2867 = !{!6, !2169, !2208}
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_neigh_construct", scope: !2259, file: !2171, line: 1412, baseType: !2869, size: 64, offset: 2624)
!2869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2870, size: 64)
!2870 = !DISubroutineType(types: !2871)
!2871 = !{!6, !2169, !2438}
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_neigh_destroy", scope: !2259, file: !2171, line: 1414, baseType: !2873, size: 64, offset: 2688)
!2873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2874, size: 64)
!2874 = !DISubroutineType(types: !2875)
!2875 = !{null, !2169, !2438}
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fdb_add", scope: !2259, file: !2171, line: 1417, baseType: !2877, size: 64, offset: 2752)
!2877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2878, size: 64)
!2878 = !DISubroutineType(types: !2879)
!2879 = !{!6, !2880, !2804, !2169, !239, !744, !744, !2496}
!2880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2881, size: 64)
!2881 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ndmsg", file: !2882, line: 8, size: 96, elements: !2883)
!2882 = !DIFile(filename: "./include/uapi/linux/neighbour.h", directory: "/home/lizy2001/genbc/linux")
!2883 = !{!2884, !2885, !2886, !2887, !2888, !2889, !2890}
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_family", scope: !2881, file: !2882, line: 9, baseType: !1404, size: 8)
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_pad1", scope: !2881, file: !2882, line: 10, baseType: !1404, size: 8, offset: 8)
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_pad2", scope: !2881, file: !2882, line: 11, baseType: !745, size: 16, offset: 16)
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_ifindex", scope: !2881, file: !2882, line: 12, baseType: !1502, size: 32, offset: 32)
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_state", scope: !2881, file: !2882, line: 13, baseType: !745, size: 16, offset: 64)
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_flags", scope: !2881, file: !2882, line: 14, baseType: !1404, size: 8, offset: 80)
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_type", scope: !2881, file: !2882, line: 15, baseType: !1404, size: 8, offset: 88)
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fdb_del", scope: !2259, file: !2171, line: 1424, baseType: !2892, size: 64, offset: 2816)
!2892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2893, size: 64)
!2893 = !DISubroutineType(types: !2894)
!2894 = !{!6, !2880, !2804, !2169, !239, !744}
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fdb_dump", scope: !2259, file: !2171, line: 1429, baseType: !2896, size: 64, offset: 2880)
!2896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2897, size: 64)
!2897 = !DISubroutineType(types: !2898)
!2898 = !{!6, !2153, !2899, !2169, !2169, !540}
!2899 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2900, size: 64)
!2900 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netlink_callback", file: !2498, line: 203, size: 1024, elements: !2901)
!2901 = !{!2902, !2903, !2913, !2917, !2921, !2922, !2923, !2924, !2925, !2926, !2927, !2928, !2929, !2930}
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "skb", scope: !2900, file: !2498, line: 204, baseType: !2153, size: 64)
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "nlh", scope: !2900, file: !2498, line: 205, baseType: !2904, size: 64, offset: 64)
!2904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2905, size: 64)
!2905 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2906)
!2906 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nlmsghdr", file: !2505, line: 44, size: 128, elements: !2907)
!2907 = !{!2908, !2909, !2910, !2911, !2912}
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "nlmsg_len", scope: !2906, file: !2505, line: 45, baseType: !231, size: 32)
!2909 = !DIDerivedType(tag: DW_TAG_member, name: "nlmsg_type", scope: !2906, file: !2505, line: 46, baseType: !745, size: 16, offset: 32)
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "nlmsg_flags", scope: !2906, file: !2505, line: 47, baseType: !745, size: 16, offset: 48)
!2911 = !DIDerivedType(tag: DW_TAG_member, name: "nlmsg_seq", scope: !2906, file: !2505, line: 48, baseType: !231, size: 32, offset: 64)
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "nlmsg_pid", scope: !2906, file: !2505, line: 49, baseType: !231, size: 32, offset: 96)
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "dump", scope: !2900, file: !2498, line: 206, baseType: !2914, size: 64, offset: 128)
!2914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2915, size: 64)
!2915 = !DISubroutineType(types: !2916)
!2916 = !{!6, !2153, !2899}
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !2900, file: !2498, line: 208, baseType: !2918, size: 64, offset: 192)
!2918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2919, size: 64)
!2919 = !DISubroutineType(types: !2920)
!2920 = !{!6, !2899}
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2900, file: !2498, line: 209, baseType: !159, size: 64, offset: 256)
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "module", scope: !2900, file: !2498, line: 211, baseType: !446, size: 64, offset: 320)
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "extack", scope: !2900, file: !2498, line: 212, baseType: !2496, size: 64, offset: 384)
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !2900, file: !2498, line: 213, baseType: !744, size: 16, offset: 448)
!2925 = !DIDerivedType(tag: DW_TAG_member, name: "answer_flags", scope: !2900, file: !2498, line: 214, baseType: !744, size: 16, offset: 464)
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "min_dump_alloc", scope: !2900, file: !2498, line: 215, baseType: !229, size: 32, offset: 480)
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "prev_seq", scope: !2900, file: !2498, line: 216, baseType: !199, size: 32, offset: 512)
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !2900, file: !2498, line: 216, baseType: !199, size: 32, offset: 544)
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "strict_check", scope: !2900, file: !2498, line: 217, baseType: !304, size: 8, offset: 576)
!2930 = !DIDerivedType(tag: DW_TAG_member, scope: !2900, file: !2498, line: 218, baseType: !2931, size: 384, offset: 640)
!2931 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2900, file: !2498, line: 218, size: 384, elements: !2932)
!2932 = !{!2933, !2937}
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "ctx", scope: !2931, file: !2498, line: 219, baseType: !2934, size: 384)
!2934 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1403, size: 384, elements: !2935)
!2935 = !{!2936}
!2936 = !DISubrange(count: 48)
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !2931, file: !2498, line: 224, baseType: !2938, size: 384)
!2938 = !DICompositeType(tag: DW_TAG_array_type, baseType: !120, size: 384, elements: !1668)
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fdb_get", scope: !2259, file: !2171, line: 1434, baseType: !2940, size: 64, offset: 2944)
!2940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2941, size: 64)
!2941 = !DISubroutineType(types: !2942)
!2942 = !{!6, !2153, !2804, !2169, !239, !744, !229, !229, !2496}
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_bridge_setlink", scope: !2259, file: !2171, line: 1440, baseType: !2944, size: 64, offset: 3008)
!2944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2945, size: 64)
!2945 = !DISubroutineType(types: !2946)
!2946 = !{!6, !2169, !2947, !744, !2496}
!2947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2906, size: 64)
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_bridge_getlink", scope: !2259, file: !2171, line: 1444, baseType: !2949, size: 64, offset: 3072)
!2949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2950, size: 64)
!2950 = !DISubroutineType(types: !2951)
!2951 = !{!6, !2153, !229, !229, !2169, !229, !6}
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_bridge_dellink", scope: !2259, file: !2171, line: 1449, baseType: !2953, size: 64, offset: 3136)
!2953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2954, size: 64)
!2954 = !DISubroutineType(types: !2955)
!2955 = !{!6, !2169, !2947, !744}
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_change_carrier", scope: !2259, file: !2171, line: 1452, baseType: !2957, size: 64, offset: 3200)
!2957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2958, size: 64)
!2958 = !DISubroutineType(types: !2959)
!2959 = !{!6, !2169, !304}
!2960 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_phys_port_id", scope: !2259, file: !2171, line: 1454, baseType: !2961, size: 64, offset: 3264)
!2961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2962, size: 64)
!2962 = !DISubroutineType(types: !2963)
!2963 = !{!6, !2169, !2964}
!2964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2965, size: 64)
!2965 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_phys_item_id", file: !2171, line: 820, size: 264, elements: !2966)
!2966 = !{!2967, !2968}
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2965, file: !2171, line: 821, baseType: !2644, size: 256)
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "id_len", scope: !2965, file: !2171, line: 822, baseType: !241, size: 8, offset: 256)
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_port_parent_id", scope: !2259, file: !2171, line: 1456, baseType: !2961, size: 64, offset: 3328)
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_phys_port_name", scope: !2259, file: !2171, line: 1458, baseType: !2971, size: 64, offset: 3392)
!2971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2972, size: 64)
!2972 = !DISubroutineType(types: !2973)
!2973 = !{!6, !2169, !85, !132}
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_udp_tunnel_add", scope: !2259, file: !2171, line: 1460, baseType: !2975, size: 64, offset: 3456)
!2975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2976, size: 64)
!2976 = !DISubroutineType(types: !2977)
!2977 = !{null, !2169, !2978}
!2978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2979, size: 64)
!2979 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "udp_tunnel_info", file: !2980, line: 114, size: 64, elements: !2981)
!2980 = !DIFile(filename: "./include/net/udp_tunnel.h", directory: "/home/lizy2001/genbc/linux")
!2981 = !{!2982, !2983, !2984, !2985}
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2979, file: !2980, line: 115, baseType: !127, size: 16)
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "sa_family", scope: !2979, file: !2980, line: 116, baseType: !2069, size: 16, offset: 16)
!2984 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !2979, file: !2980, line: 117, baseType: !2037, size: 16, offset: 32)
!2985 = !DIDerivedType(tag: DW_TAG_member, name: "hw_priv", scope: !2979, file: !2980, line: 118, baseType: !1403, size: 8, offset: 48)
!2986 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_udp_tunnel_del", scope: !2259, file: !2171, line: 1462, baseType: !2975, size: 64, offset: 3520)
!2987 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_dfwd_add_station", scope: !2259, file: !2171, line: 1464, baseType: !2988, size: 64, offset: 3584)
!2988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2989, size: 64)
!2989 = !DISubroutineType(types: !2990)
!2990 = !{!159, !2169, !2169}
!2991 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_dfwd_del_station", scope: !2259, file: !2171, line: 1466, baseType: !2992, size: 64, offset: 3648)
!2992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2993, size: 64)
!2993 = !DISubroutineType(types: !2994)
!2994 = !{null, !2169, !159}
!2995 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_tx_maxrate", scope: !2259, file: !2171, line: 1469, baseType: !2996, size: 64, offset: 3712)
!2996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2997, size: 64)
!2997 = !DISubroutineType(types: !2998)
!2998 = !{!6, !2169, !6, !229}
!2999 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_iflink", scope: !2259, file: !2171, line: 1472, baseType: !3000, size: 64, offset: 3776)
!3000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3001, size: 64)
!3001 = !DISubroutineType(types: !3002)
!3002 = !{!6, !2456}
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_change_proto_down", scope: !2259, file: !2171, line: 1473, baseType: !2957, size: 64, offset: 3840)
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fill_metadata_dst", scope: !2259, file: !2171, line: 1475, baseType: !3005, size: 64, offset: 3904)
!3005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3006, size: 64)
!3006 = !DISubroutineType(types: !3007)
!3007 = !{!6, !2169, !2153}
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_rx_headroom", scope: !2259, file: !2171, line: 1477, baseType: !2290, size: 64, offset: 3968)
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_bpf", scope: !2259, file: !2171, line: 1479, baseType: !3010, size: 64, offset: 4032)
!3010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3011, size: 64)
!3011 = !DISubroutineType(types: !3012)
!3012 = !{!6, !2169, !3013}
!3013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3014, size: 64)
!3014 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_bpf", file: !2171, line: 894, size: 256, elements: !3015)
!3015 = !{!3016, !3024}
!3016 = !DIDerivedType(tag: DW_TAG_member, name: "command", scope: !3014, file: !2171, line: 895, baseType: !3017, size: 32)
!3017 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_netdev_command", file: !2171, line: 860, baseType: !199, size: 32, elements: !3018)
!3018 = !{!3019, !3020, !3021, !3022, !3023}
!3019 = !DIEnumerator(name: "XDP_SETUP_PROG", value: 0, isUnsigned: true)
!3020 = !DIEnumerator(name: "XDP_SETUP_PROG_HW", value: 1, isUnsigned: true)
!3021 = !DIEnumerator(name: "BPF_OFFLOAD_MAP_ALLOC", value: 2, isUnsigned: true)
!3022 = !DIEnumerator(name: "BPF_OFFLOAD_MAP_FREE", value: 3, isUnsigned: true)
!3023 = !DIEnumerator(name: "XDP_SETUP_XSK_POOL", value: 4, isUnsigned: true)
!3024 = !DIDerivedType(tag: DW_TAG_member, scope: !3014, file: !2171, line: 896, baseType: !3025, size: 192, offset: 64)
!3025 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3014, file: !2171, line: 896, size: 192, elements: !3026)
!3026 = !{!3027, !3808, !3837}
!3027 = !DIDerivedType(tag: DW_TAG_member, scope: !3025, file: !2171, line: 898, baseType: !3028, size: 192)
!3028 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3025, file: !2171, line: 898, size: 192, elements: !3029)
!3029 = !{!3030, !3031, !3807}
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3028, file: !2171, line: 899, baseType: !229, size: 32)
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !3028, file: !2171, line: 900, baseType: !3032, size: 64, offset: 64)
!3032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3033, size: 64)
!3033 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog", file: !3034, line: 525, size: 448, elements: !3035)
!3034 = !DIFile(filename: "./include/linux/filter.h", directory: "/home/lizy2001/genbc/linux")
!3035 = !{!3036, !3037, !3038, !3039, !3040, !3041, !3042, !3043, !3044, !3045, !3046, !3047, !3048, !3083, !3125, !3126, !3127, !3129, !3783, !3797, !3803, !3805}
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !3033, file: !3034, line: 526, baseType: !744, size: 16)
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "jited", scope: !3033, file: !3034, line: 527, baseType: !744, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 16)
!3038 = !DIDerivedType(tag: DW_TAG_member, name: "jit_requested", scope: !3033, file: !3034, line: 528, baseType: !744, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 16)
!3039 = !DIDerivedType(tag: DW_TAG_member, name: "gpl_compatible", scope: !3033, file: !3034, line: 529, baseType: !744, size: 1, offset: 18, flags: DIFlagBitField, extraData: i64 16)
!3040 = !DIDerivedType(tag: DW_TAG_member, name: "cb_access", scope: !3033, file: !3034, line: 530, baseType: !744, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 16)
!3041 = !DIDerivedType(tag: DW_TAG_member, name: "dst_needed", scope: !3033, file: !3034, line: 531, baseType: !744, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 16)
!3042 = !DIDerivedType(tag: DW_TAG_member, name: "blinded", scope: !3033, file: !3034, line: 532, baseType: !744, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 16)
!3043 = !DIDerivedType(tag: DW_TAG_member, name: "is_func", scope: !3033, file: !3034, line: 533, baseType: !744, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 16)
!3044 = !DIDerivedType(tag: DW_TAG_member, name: "kprobe_override", scope: !3033, file: !3034, line: 534, baseType: !744, size: 1, offset: 23, flags: DIFlagBitField, extraData: i64 16)
!3045 = !DIDerivedType(tag: DW_TAG_member, name: "has_callchain_buf", scope: !3033, file: !3034, line: 535, baseType: !744, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 16)
!3046 = !DIDerivedType(tag: DW_TAG_member, name: "enforce_expected_attach_type", scope: !3033, file: !3034, line: 536, baseType: !744, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 16)
!3047 = !DIDerivedType(tag: DW_TAG_member, name: "call_get_stack", scope: !3033, file: !3034, line: 537, baseType: !744, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 16)
!3048 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3033, file: !3034, line: 538, baseType: !3049, size: 32, offset: 32)
!3049 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_prog_type", file: !3050, line: 170, baseType: !199, size: 32, elements: !3051)
!3050 = !DIFile(filename: "./include/uapi/linux/bpf.h", directory: "/home/lizy2001/genbc/linux")
!3051 = !{!3052, !3053, !3054, !3055, !3056, !3057, !3058, !3059, !3060, !3061, !3062, !3063, !3064, !3065, !3066, !3067, !3068, !3069, !3070, !3071, !3072, !3073, !3074, !3075, !3076, !3077, !3078, !3079, !3080, !3081, !3082}
!3052 = !DIEnumerator(name: "BPF_PROG_TYPE_UNSPEC", value: 0, isUnsigned: true)
!3053 = !DIEnumerator(name: "BPF_PROG_TYPE_SOCKET_FILTER", value: 1, isUnsigned: true)
!3054 = !DIEnumerator(name: "BPF_PROG_TYPE_KPROBE", value: 2, isUnsigned: true)
!3055 = !DIEnumerator(name: "BPF_PROG_TYPE_SCHED_CLS", value: 3, isUnsigned: true)
!3056 = !DIEnumerator(name: "BPF_PROG_TYPE_SCHED_ACT", value: 4, isUnsigned: true)
!3057 = !DIEnumerator(name: "BPF_PROG_TYPE_TRACEPOINT", value: 5, isUnsigned: true)
!3058 = !DIEnumerator(name: "BPF_PROG_TYPE_XDP", value: 6, isUnsigned: true)
!3059 = !DIEnumerator(name: "BPF_PROG_TYPE_PERF_EVENT", value: 7, isUnsigned: true)
!3060 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_SKB", value: 8, isUnsigned: true)
!3061 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_SOCK", value: 9, isUnsigned: true)
!3062 = !DIEnumerator(name: "BPF_PROG_TYPE_LWT_IN", value: 10, isUnsigned: true)
!3063 = !DIEnumerator(name: "BPF_PROG_TYPE_LWT_OUT", value: 11, isUnsigned: true)
!3064 = !DIEnumerator(name: "BPF_PROG_TYPE_LWT_XMIT", value: 12, isUnsigned: true)
!3065 = !DIEnumerator(name: "BPF_PROG_TYPE_SOCK_OPS", value: 13, isUnsigned: true)
!3066 = !DIEnumerator(name: "BPF_PROG_TYPE_SK_SKB", value: 14, isUnsigned: true)
!3067 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_DEVICE", value: 15, isUnsigned: true)
!3068 = !DIEnumerator(name: "BPF_PROG_TYPE_SK_MSG", value: 16, isUnsigned: true)
!3069 = !DIEnumerator(name: "BPF_PROG_TYPE_RAW_TRACEPOINT", value: 17, isUnsigned: true)
!3070 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_SOCK_ADDR", value: 18, isUnsigned: true)
!3071 = !DIEnumerator(name: "BPF_PROG_TYPE_LWT_SEG6LOCAL", value: 19, isUnsigned: true)
!3072 = !DIEnumerator(name: "BPF_PROG_TYPE_LIRC_MODE2", value: 20, isUnsigned: true)
!3073 = !DIEnumerator(name: "BPF_PROG_TYPE_SK_REUSEPORT", value: 21, isUnsigned: true)
!3074 = !DIEnumerator(name: "BPF_PROG_TYPE_FLOW_DISSECTOR", value: 22, isUnsigned: true)
!3075 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_SYSCTL", value: 23, isUnsigned: true)
!3076 = !DIEnumerator(name: "BPF_PROG_TYPE_RAW_TRACEPOINT_WRITABLE", value: 24, isUnsigned: true)
!3077 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_SOCKOPT", value: 25, isUnsigned: true)
!3078 = !DIEnumerator(name: "BPF_PROG_TYPE_TRACING", value: 26, isUnsigned: true)
!3079 = !DIEnumerator(name: "BPF_PROG_TYPE_STRUCT_OPS", value: 27, isUnsigned: true)
!3080 = !DIEnumerator(name: "BPF_PROG_TYPE_EXT", value: 28, isUnsigned: true)
!3081 = !DIEnumerator(name: "BPF_PROG_TYPE_LSM", value: 29, isUnsigned: true)
!3082 = !DIEnumerator(name: "BPF_PROG_TYPE_SK_LOOKUP", value: 30, isUnsigned: true)
!3083 = !DIDerivedType(tag: DW_TAG_member, name: "expected_attach_type", scope: !3033, file: !3034, line: 539, baseType: !3084, size: 32, offset: 64)
!3084 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_attach_type", file: !3050, line: 204, baseType: !199, size: 32, elements: !3085)
!3085 = !{!3086, !3087, !3088, !3089, !3090, !3091, !3092, !3093, !3094, !3095, !3096, !3097, !3098, !3099, !3100, !3101, !3102, !3103, !3104, !3105, !3106, !3107, !3108, !3109, !3110, !3111, !3112, !3113, !3114, !3115, !3116, !3117, !3118, !3119, !3120, !3121, !3122, !3123, !3124}
!3086 = !DIEnumerator(name: "BPF_CGROUP_INET_INGRESS", value: 0, isUnsigned: true)
!3087 = !DIEnumerator(name: "BPF_CGROUP_INET_EGRESS", value: 1, isUnsigned: true)
!3088 = !DIEnumerator(name: "BPF_CGROUP_INET_SOCK_CREATE", value: 2, isUnsigned: true)
!3089 = !DIEnumerator(name: "BPF_CGROUP_SOCK_OPS", value: 3, isUnsigned: true)
!3090 = !DIEnumerator(name: "BPF_SK_SKB_STREAM_PARSER", value: 4, isUnsigned: true)
!3091 = !DIEnumerator(name: "BPF_SK_SKB_STREAM_VERDICT", value: 5, isUnsigned: true)
!3092 = !DIEnumerator(name: "BPF_CGROUP_DEVICE", value: 6, isUnsigned: true)
!3093 = !DIEnumerator(name: "BPF_SK_MSG_VERDICT", value: 7, isUnsigned: true)
!3094 = !DIEnumerator(name: "BPF_CGROUP_INET4_BIND", value: 8, isUnsigned: true)
!3095 = !DIEnumerator(name: "BPF_CGROUP_INET6_BIND", value: 9, isUnsigned: true)
!3096 = !DIEnumerator(name: "BPF_CGROUP_INET4_CONNECT", value: 10, isUnsigned: true)
!3097 = !DIEnumerator(name: "BPF_CGROUP_INET6_CONNECT", value: 11, isUnsigned: true)
!3098 = !DIEnumerator(name: "BPF_CGROUP_INET4_POST_BIND", value: 12, isUnsigned: true)
!3099 = !DIEnumerator(name: "BPF_CGROUP_INET6_POST_BIND", value: 13, isUnsigned: true)
!3100 = !DIEnumerator(name: "BPF_CGROUP_UDP4_SENDMSG", value: 14, isUnsigned: true)
!3101 = !DIEnumerator(name: "BPF_CGROUP_UDP6_SENDMSG", value: 15, isUnsigned: true)
!3102 = !DIEnumerator(name: "BPF_LIRC_MODE2", value: 16, isUnsigned: true)
!3103 = !DIEnumerator(name: "BPF_FLOW_DISSECTOR", value: 17, isUnsigned: true)
!3104 = !DIEnumerator(name: "BPF_CGROUP_SYSCTL", value: 18, isUnsigned: true)
!3105 = !DIEnumerator(name: "BPF_CGROUP_UDP4_RECVMSG", value: 19, isUnsigned: true)
!3106 = !DIEnumerator(name: "BPF_CGROUP_UDP6_RECVMSG", value: 20, isUnsigned: true)
!3107 = !DIEnumerator(name: "BPF_CGROUP_GETSOCKOPT", value: 21, isUnsigned: true)
!3108 = !DIEnumerator(name: "BPF_CGROUP_SETSOCKOPT", value: 22, isUnsigned: true)
!3109 = !DIEnumerator(name: "BPF_TRACE_RAW_TP", value: 23, isUnsigned: true)
!3110 = !DIEnumerator(name: "BPF_TRACE_FENTRY", value: 24, isUnsigned: true)
!3111 = !DIEnumerator(name: "BPF_TRACE_FEXIT", value: 25, isUnsigned: true)
!3112 = !DIEnumerator(name: "BPF_MODIFY_RETURN", value: 26, isUnsigned: true)
!3113 = !DIEnumerator(name: "BPF_LSM_MAC", value: 27, isUnsigned: true)
!3114 = !DIEnumerator(name: "BPF_TRACE_ITER", value: 28, isUnsigned: true)
!3115 = !DIEnumerator(name: "BPF_CGROUP_INET4_GETPEERNAME", value: 29, isUnsigned: true)
!3116 = !DIEnumerator(name: "BPF_CGROUP_INET6_GETPEERNAME", value: 30, isUnsigned: true)
!3117 = !DIEnumerator(name: "BPF_CGROUP_INET4_GETSOCKNAME", value: 31, isUnsigned: true)
!3118 = !DIEnumerator(name: "BPF_CGROUP_INET6_GETSOCKNAME", value: 32, isUnsigned: true)
!3119 = !DIEnumerator(name: "BPF_XDP_DEVMAP", value: 33, isUnsigned: true)
!3120 = !DIEnumerator(name: "BPF_CGROUP_INET_SOCK_RELEASE", value: 34, isUnsigned: true)
!3121 = !DIEnumerator(name: "BPF_XDP_CPUMAP", value: 35, isUnsigned: true)
!3122 = !DIEnumerator(name: "BPF_SK_LOOKUP", value: 36, isUnsigned: true)
!3123 = !DIEnumerator(name: "BPF_XDP", value: 37, isUnsigned: true)
!3124 = !DIEnumerator(name: "__MAX_BPF_ATTACH_TYPE", value: 38, isUnsigned: true)
!3125 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !3033, file: !3034, line: 540, baseType: !229, size: 32, offset: 96)
!3126 = !DIDerivedType(tag: DW_TAG_member, name: "jited_len", scope: !3033, file: !3034, line: 541, baseType: !229, size: 32, offset: 128)
!3127 = !DIDerivedType(tag: DW_TAG_member, name: "tag", scope: !3033, file: !3034, line: 542, baseType: !3128, size: 64, offset: 160)
!3128 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1403, size: 64, elements: !1381)
!3129 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !3033, file: !3034, line: 543, baseType: !3130, size: 64, offset: 256)
!3130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3131, size: 64)
!3131 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_aux", file: !3132, line: 757, size: 4928, elements: !3133)
!3132 = !DIFile(filename: "./include/linux/bpf.h", directory: "/home/lizy2001/genbc/linux")
!3133 = !{!3134, !3135, !3136, !3137, !3138, !3139, !3140, !3141, !3142, !3143, !3144, !3145, !3146, !3147, !3185, !3186, !3187, !3231, !3232, !3233, !3234, !3235, !3236, !3237, !3238, !3239, !3247, !3248, !3252, !3253, !3255, !3256, !3700, !3701, !3702, !3711, !3713, !3714, !3715, !3716, !3717, !3719, !3720, !3735, !3736, !3742, !3748, !3756, !3757, !3758, !3759, !3760, !3761, !3769, !3778}
!3134 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !3131, file: !3132, line: 758, baseType: !564, size: 64)
!3135 = !DIDerivedType(tag: DW_TAG_member, name: "used_map_cnt", scope: !3131, file: !3132, line: 759, baseType: !229, size: 32, offset: 64)
!3136 = !DIDerivedType(tag: DW_TAG_member, name: "max_ctx_offset", scope: !3131, file: !3132, line: 760, baseType: !229, size: 32, offset: 96)
!3137 = !DIDerivedType(tag: DW_TAG_member, name: "max_pkt_offset", scope: !3131, file: !3132, line: 761, baseType: !229, size: 32, offset: 128)
!3138 = !DIDerivedType(tag: DW_TAG_member, name: "max_tp_access", scope: !3131, file: !3132, line: 762, baseType: !229, size: 32, offset: 160)
!3139 = !DIDerivedType(tag: DW_TAG_member, name: "stack_depth", scope: !3131, file: !3132, line: 763, baseType: !229, size: 32, offset: 192)
!3140 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3131, file: !3132, line: 764, baseType: !229, size: 32, offset: 224)
!3141 = !DIDerivedType(tag: DW_TAG_member, name: "func_cnt", scope: !3131, file: !3132, line: 765, baseType: !229, size: 32, offset: 256)
!3142 = !DIDerivedType(tag: DW_TAG_member, name: "func_idx", scope: !3131, file: !3132, line: 766, baseType: !229, size: 32, offset: 288)
!3143 = !DIDerivedType(tag: DW_TAG_member, name: "attach_btf_id", scope: !3131, file: !3132, line: 767, baseType: !229, size: 32, offset: 320)
!3144 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_arg_info_size", scope: !3131, file: !3132, line: 768, baseType: !229, size: 32, offset: 352)
!3145 = !DIDerivedType(tag: DW_TAG_member, name: "max_rdonly_access", scope: !3131, file: !3132, line: 769, baseType: !229, size: 32, offset: 384)
!3146 = !DIDerivedType(tag: DW_TAG_member, name: "max_rdwr_access", scope: !3131, file: !3132, line: 770, baseType: !229, size: 32, offset: 416)
!3147 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_arg_info", scope: !3131, file: !3132, line: 771, baseType: !3148, size: 64, offset: 448)
!3148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3149, size: 64)
!3149 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3150)
!3150 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_ctx_arg_aux", file: !3132, line: 751, size: 96, elements: !3151)
!3151 = !{!3152, !3153, !3184}
!3152 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !3150, file: !3132, line: 752, baseType: !229, size: 32)
!3153 = !DIDerivedType(tag: DW_TAG_member, name: "reg_type", scope: !3150, file: !3132, line: 753, baseType: !3154, size: 32, offset: 32)
!3154 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_reg_type", file: !3132, line: 369, baseType: !199, size: 32, elements: !3155)
!3155 = !{!3156, !3157, !3158, !3159, !3160, !3161, !3162, !3163, !3164, !3165, !3166, !3167, !3168, !3169, !3170, !3171, !3172, !3173, !3174, !3175, !3176, !3177, !3178, !3179, !3180, !3181, !3182, !3183}
!3156 = !DIEnumerator(name: "NOT_INIT", value: 0, isUnsigned: true)
!3157 = !DIEnumerator(name: "SCALAR_VALUE", value: 1, isUnsigned: true)
!3158 = !DIEnumerator(name: "PTR_TO_CTX", value: 2, isUnsigned: true)
!3159 = !DIEnumerator(name: "CONST_PTR_TO_MAP", value: 3, isUnsigned: true)
!3160 = !DIEnumerator(name: "PTR_TO_MAP_VALUE", value: 4, isUnsigned: true)
!3161 = !DIEnumerator(name: "PTR_TO_MAP_VALUE_OR_NULL", value: 5, isUnsigned: true)
!3162 = !DIEnumerator(name: "PTR_TO_STACK", value: 6, isUnsigned: true)
!3163 = !DIEnumerator(name: "PTR_TO_PACKET_META", value: 7, isUnsigned: true)
!3164 = !DIEnumerator(name: "PTR_TO_PACKET", value: 8, isUnsigned: true)
!3165 = !DIEnumerator(name: "PTR_TO_PACKET_END", value: 9, isUnsigned: true)
!3166 = !DIEnumerator(name: "PTR_TO_FLOW_KEYS", value: 10, isUnsigned: true)
!3167 = !DIEnumerator(name: "PTR_TO_SOCKET", value: 11, isUnsigned: true)
!3168 = !DIEnumerator(name: "PTR_TO_SOCKET_OR_NULL", value: 12, isUnsigned: true)
!3169 = !DIEnumerator(name: "PTR_TO_SOCK_COMMON", value: 13, isUnsigned: true)
!3170 = !DIEnumerator(name: "PTR_TO_SOCK_COMMON_OR_NULL", value: 14, isUnsigned: true)
!3171 = !DIEnumerator(name: "PTR_TO_TCP_SOCK", value: 15, isUnsigned: true)
!3172 = !DIEnumerator(name: "PTR_TO_TCP_SOCK_OR_NULL", value: 16, isUnsigned: true)
!3173 = !DIEnumerator(name: "PTR_TO_TP_BUFFER", value: 17, isUnsigned: true)
!3174 = !DIEnumerator(name: "PTR_TO_XDP_SOCK", value: 18, isUnsigned: true)
!3175 = !DIEnumerator(name: "PTR_TO_BTF_ID", value: 19, isUnsigned: true)
!3176 = !DIEnumerator(name: "PTR_TO_BTF_ID_OR_NULL", value: 20, isUnsigned: true)
!3177 = !DIEnumerator(name: "PTR_TO_MEM", value: 21, isUnsigned: true)
!3178 = !DIEnumerator(name: "PTR_TO_MEM_OR_NULL", value: 22, isUnsigned: true)
!3179 = !DIEnumerator(name: "PTR_TO_RDONLY_BUF", value: 23, isUnsigned: true)
!3180 = !DIEnumerator(name: "PTR_TO_RDONLY_BUF_OR_NULL", value: 24, isUnsigned: true)
!3181 = !DIEnumerator(name: "PTR_TO_RDWR_BUF", value: 25, isUnsigned: true)
!3182 = !DIEnumerator(name: "PTR_TO_RDWR_BUF_OR_NULL", value: 26, isUnsigned: true)
!3183 = !DIEnumerator(name: "PTR_TO_PERCPU_BTF_ID", value: 27, isUnsigned: true)
!3184 = !DIDerivedType(tag: DW_TAG_member, name: "btf_id", scope: !3150, file: !3132, line: 754, baseType: !229, size: 32, offset: 64)
!3185 = !DIDerivedType(tag: DW_TAG_member, name: "dst_mutex", scope: !3131, file: !3132, line: 772, baseType: !558, size: 192, offset: 512)
!3186 = !DIDerivedType(tag: DW_TAG_member, name: "dst_prog", scope: !3131, file: !3132, line: 773, baseType: !3032, size: 64, offset: 704)
!3187 = !DIDerivedType(tag: DW_TAG_member, name: "dst_trampoline", scope: !3131, file: !3132, line: 774, baseType: !3188, size: 64, offset: 768)
!3188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3189, size: 64)
!3189 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_trampoline", file: !3132, line: 586, size: 2944, elements: !3190)
!3190 = !{!3191, !3192, !3193, !3194, !3195, !3207, !3208, !3210, !3212, !3213, !3214}
!3191 = !DIDerivedType(tag: DW_TAG_member, name: "hlist", scope: !3189, file: !3132, line: 588, baseType: !455, size: 128)
!3192 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !3189, file: !3132, line: 590, baseType: !558, size: 192, offset: 128)
!3193 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !3189, file: !3132, line: 591, baseType: !880, size: 32, offset: 320)
!3194 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !3189, file: !3132, line: 592, baseType: !235, size: 64, offset: 384)
!3195 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !3189, file: !3132, line: 597, baseType: !3196, size: 256, offset: 448)
!3196 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3189, file: !3132, line: 593, size: 256, elements: !3197)
!3197 = !{!3198, !3205, !3206}
!3198 = !DIDerivedType(tag: DW_TAG_member, name: "model", scope: !3196, file: !3132, line: 594, baseType: !3199, size: 112)
!3199 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "btf_func_model", file: !3132, line: 509, size: 112, elements: !3200)
!3200 = !{!3201, !3202, !3203}
!3201 = !DIDerivedType(tag: DW_TAG_member, name: "ret_size", scope: !3199, file: !3132, line: 510, baseType: !1403, size: 8)
!3202 = !DIDerivedType(tag: DW_TAG_member, name: "nr_args", scope: !3199, file: !3132, line: 511, baseType: !1403, size: 8, offset: 8)
!3203 = !DIDerivedType(tag: DW_TAG_member, name: "arg_size", scope: !3199, file: !3132, line: 512, baseType: !3204, size: 96, offset: 16)
!3204 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1403, size: 96, elements: !2654)
!3205 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !3196, file: !3132, line: 595, baseType: !159, size: 64, offset: 128)
!3206 = !DIDerivedType(tag: DW_TAG_member, name: "ftrace_managed", scope: !3196, file: !3132, line: 596, baseType: !304, size: 8, offset: 192)
!3207 = !DIDerivedType(tag: DW_TAG_member, name: "extension_prog", scope: !3189, file: !3132, line: 602, baseType: !3032, size: 64, offset: 704)
!3208 = !DIDerivedType(tag: DW_TAG_member, name: "progs_hlist", scope: !3189, file: !3132, line: 604, baseType: !3209, size: 192, offset: 768)
!3209 = !DICompositeType(tag: DW_TAG_array_type, baseType: !451, size: 192, elements: !86)
!3210 = !DIDerivedType(tag: DW_TAG_member, name: "progs_cnt", scope: !3189, file: !3132, line: 606, baseType: !3211, size: 96, offset: 960)
!3211 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6, size: 96, elements: !86)
!3212 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !3189, file: !3132, line: 608, baseType: !159, size: 64, offset: 1088)
!3213 = !DIDerivedType(tag: DW_TAG_member, name: "selector", scope: !3189, file: !3132, line: 609, baseType: !235, size: 64, offset: 1152)
!3214 = !DIDerivedType(tag: DW_TAG_member, name: "ksym", scope: !3189, file: !3132, line: 610, baseType: !3215, size: 1728, offset: 1216)
!3215 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_ksym", file: !3132, line: 569, size: 1728, elements: !3216)
!3216 = !{!3217, !3218, !3219, !3223, !3224, !3230}
!3217 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3215, file: !3132, line: 570, baseType: !135, size: 64)
!3218 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !3215, file: !3132, line: 571, baseType: !135, size: 64, offset: 64)
!3219 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3215, file: !3132, line: 572, baseType: !3220, size: 1024, offset: 128)
!3220 = !DICompositeType(tag: DW_TAG_array_type, baseType: !28, size: 1024, elements: !3221)
!3221 = !{!3222}
!3222 = !DISubrange(count: 128)
!3223 = !DIDerivedType(tag: DW_TAG_member, name: "lnode", scope: !3215, file: !3132, line: 573, baseType: !30, size: 128, offset: 1152)
!3224 = !DIDerivedType(tag: DW_TAG_member, name: "tnode", scope: !3215, file: !3132, line: 574, baseType: !3225, size: 384, offset: 1280)
!3225 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "latch_tree_node", file: !3226, line: 40, size: 384, elements: !3227)
!3226 = !DIFile(filename: "./include/linux/rbtree_latch.h", directory: "/home/lizy2001/genbc/linux")
!3227 = !{!3228}
!3228 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3225, file: !3226, line: 41, baseType: !3229, size: 384)
!3229 = !DICompositeType(tag: DW_TAG_array_type, baseType: !645, size: 384, elements: !1911)
!3230 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !3215, file: !3132, line: 575, baseType: !304, size: 8, offset: 1664)
!3231 = !DIDerivedType(tag: DW_TAG_member, name: "saved_dst_prog_type", scope: !3131, file: !3132, line: 775, baseType: !3049, size: 32, offset: 832)
!3232 = !DIDerivedType(tag: DW_TAG_member, name: "saved_dst_attach_type", scope: !3131, file: !3132, line: 776, baseType: !3084, size: 32, offset: 864)
!3233 = !DIDerivedType(tag: DW_TAG_member, name: "verifier_zext", scope: !3131, file: !3132, line: 777, baseType: !304, size: 8, offset: 896)
!3234 = !DIDerivedType(tag: DW_TAG_member, name: "offload_requested", scope: !3131, file: !3132, line: 778, baseType: !304, size: 8, offset: 904)
!3235 = !DIDerivedType(tag: DW_TAG_member, name: "attach_btf_trace", scope: !3131, file: !3132, line: 779, baseType: !304, size: 8, offset: 912)
!3236 = !DIDerivedType(tag: DW_TAG_member, name: "func_proto_unreliable", scope: !3131, file: !3132, line: 780, baseType: !304, size: 8, offset: 920)
!3237 = !DIDerivedType(tag: DW_TAG_member, name: "sleepable", scope: !3131, file: !3132, line: 781, baseType: !304, size: 8, offset: 928)
!3238 = !DIDerivedType(tag: DW_TAG_member, name: "tail_call_reachable", scope: !3131, file: !3132, line: 782, baseType: !304, size: 8, offset: 936)
!3239 = !DIDerivedType(tag: DW_TAG_member, name: "trampoline_prog_type", scope: !3131, file: !3132, line: 783, baseType: !3240, size: 32, offset: 960)
!3240 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_tramp_prog_type", file: !3132, line: 578, baseType: !199, size: 32, elements: !3241)
!3241 = !{!3242, !3243, !3244, !3245, !3246}
!3242 = !DIEnumerator(name: "BPF_TRAMP_FENTRY", value: 0, isUnsigned: true)
!3243 = !DIEnumerator(name: "BPF_TRAMP_FEXIT", value: 1, isUnsigned: true)
!3244 = !DIEnumerator(name: "BPF_TRAMP_MODIFY_RETURN", value: 2, isUnsigned: true)
!3245 = !DIEnumerator(name: "BPF_TRAMP_MAX", value: 3, isUnsigned: true)
!3246 = !DIEnumerator(name: "BPF_TRAMP_REPLACE", value: 4, isUnsigned: true)
!3247 = !DIDerivedType(tag: DW_TAG_member, name: "tramp_hlist", scope: !3131, file: !3132, line: 784, baseType: !455, size: 128, offset: 1024)
!3248 = !DIDerivedType(tag: DW_TAG_member, name: "attach_func_proto", scope: !3131, file: !3132, line: 786, baseType: !3249, size: 64, offset: 1152)
!3249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3250, size: 64)
!3250 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3251)
!3251 = !DICompositeType(tag: DW_TAG_structure_type, name: "btf_type", file: !3132, line: 33, flags: DIFlagFwdDecl)
!3252 = !DIDerivedType(tag: DW_TAG_member, name: "attach_func_name", scope: !3131, file: !3132, line: 788, baseType: !26, size: 64, offset: 1216)
!3253 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !3131, file: !3132, line: 789, baseType: !3254, size: 64, offset: 1280)
!3254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3032, size: 64)
!3255 = !DIDerivedType(tag: DW_TAG_member, name: "jit_data", scope: !3131, file: !3132, line: 790, baseType: !159, size: 64, offset: 1344)
!3256 = !DIDerivedType(tag: DW_TAG_member, name: "poke_tab", scope: !3131, file: !3132, line: 791, baseType: !3257, size: 64, offset: 1408)
!3257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3258, size: 64)
!3258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_jit_poke_descriptor", file: !3132, line: 734, size: 384, elements: !3259)
!3259 = !{!3260, !3261, !3262, !3263, !3696, !3697, !3698, !3699}
!3260 = !DIDerivedType(tag: DW_TAG_member, name: "tailcall_target", scope: !3258, file: !3132, line: 735, baseType: !159, size: 64)
!3261 = !DIDerivedType(tag: DW_TAG_member, name: "tailcall_bypass", scope: !3258, file: !3132, line: 736, baseType: !159, size: 64, offset: 64)
!3262 = !DIDerivedType(tag: DW_TAG_member, name: "bypass_addr", scope: !3258, file: !3132, line: 737, baseType: !159, size: 64, offset: 128)
!3263 = !DIDerivedType(tag: DW_TAG_member, scope: !3258, file: !3132, line: 738, baseType: !3264, size: 128, offset: 192)
!3264 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3258, file: !3132, line: 738, size: 128, elements: !3265)
!3265 = !{!3266}
!3266 = !DIDerivedType(tag: DW_TAG_member, name: "tail_call", scope: !3264, file: !3132, line: 742, baseType: !3267, size: 128)
!3267 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3264, file: !3132, line: 739, size: 128, elements: !3268)
!3268 = !{!3269, !3695}
!3269 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !3267, file: !3132, line: 740, baseType: !3270, size: 64)
!3270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3271, size: 64)
!3271 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_map", file: !3132, line: 141, size: 2048, elements: !3272)
!3272 = !{!3273, !3637, !3638, !3670, !3671, !3672, !3673, !3674, !3675, !3676, !3677, !3678, !3679, !3681, !3686, !3687, !3688, !3689, !3690, !3691, !3692, !3693, !3694}
!3273 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3271, file: !3132, line: 145, baseType: !3274, size: 64, align: 512)
!3274 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3275, size: 64)
!3275 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3276)
!3276 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_map_ops", file: !3132, line: 54, size: 2368, elements: !3277)
!3277 = !{!3278, !3477, !3481, !3485, !3489, !3493, !3494, !3498, !3504, !3505, !3506, !3507, !3508, !3512, !3516, !3520, !3521, !3522, !3526, !3527, !3539, !3543, !3547, !3556, !3560, !3564, !3568, !3573, !3577, !3581, !3597, !3603, !3607, !3614, !3618, !3620, !3621}
!3278 = !DIDerivedType(tag: DW_TAG_member, name: "map_alloc_check", scope: !3276, file: !3132, line: 56, baseType: !3279, size: 64)
!3279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3280, size: 64)
!3280 = !DISubroutineType(types: !3281)
!3281 = !{!6, !3282}
!3282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3283, size: 64)
!3283 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "bpf_attr", file: !3050, line: 483, size: 960, align: 64, elements: !3284)
!3284 = !{!3285, !3301, !3312, !3323, !3347, !3353, !3361, !3378, !3391, !3397, !3406, !3411, !3419, !3431, !3451, !3458, !3462, !3466, !3471}
!3285 = !DIDerivedType(tag: DW_TAG_member, scope: !3283, file: !3050, line: 484, baseType: !3286, size: 512)
!3286 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3283, file: !3050, line: 484, size: 512, elements: !3287)
!3287 = !{!3288, !3289, !3290, !3291, !3292, !3293, !3294, !3295, !3296, !3297, !3298, !3299, !3300}
!3288 = !DIDerivedType(tag: DW_TAG_member, name: "map_type", scope: !3286, file: !3050, line: 485, baseType: !231, size: 32)
!3289 = !DIDerivedType(tag: DW_TAG_member, name: "key_size", scope: !3286, file: !3050, line: 486, baseType: !231, size: 32, offset: 32)
!3290 = !DIDerivedType(tag: DW_TAG_member, name: "value_size", scope: !3286, file: !3050, line: 487, baseType: !231, size: 32, offset: 64)
!3291 = !DIDerivedType(tag: DW_TAG_member, name: "max_entries", scope: !3286, file: !3050, line: 488, baseType: !231, size: 32, offset: 96)
!3292 = !DIDerivedType(tag: DW_TAG_member, name: "map_flags", scope: !3286, file: !3050, line: 489, baseType: !231, size: 32, offset: 128)
!3293 = !DIDerivedType(tag: DW_TAG_member, name: "inner_map_fd", scope: !3286, file: !3050, line: 492, baseType: !231, size: 32, offset: 160)
!3294 = !DIDerivedType(tag: DW_TAG_member, name: "numa_node", scope: !3286, file: !3050, line: 493, baseType: !231, size: 32, offset: 192)
!3295 = !DIDerivedType(tag: DW_TAG_member, name: "map_name", scope: !3286, file: !3050, line: 496, baseType: !1943, size: 128, offset: 224)
!3296 = !DIDerivedType(tag: DW_TAG_member, name: "map_ifindex", scope: !3286, file: !3050, line: 497, baseType: !231, size: 32, offset: 352)
!3297 = !DIDerivedType(tag: DW_TAG_member, name: "btf_fd", scope: !3286, file: !3050, line: 498, baseType: !231, size: 32, offset: 384)
!3298 = !DIDerivedType(tag: DW_TAG_member, name: "btf_key_type_id", scope: !3286, file: !3050, line: 499, baseType: !231, size: 32, offset: 416)
!3299 = !DIDerivedType(tag: DW_TAG_member, name: "btf_value_type_id", scope: !3286, file: !3050, line: 500, baseType: !231, size: 32, offset: 448)
!3300 = !DIDerivedType(tag: DW_TAG_member, name: "btf_vmlinux_value_type_id", scope: !3286, file: !3050, line: 501, baseType: !231, size: 32, offset: 480)
!3301 = !DIDerivedType(tag: DW_TAG_member, scope: !3283, file: !3050, line: 507, baseType: !3302, size: 256)
!3302 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3283, file: !3050, line: 507, size: 256, elements: !3303)
!3303 = !{!3304, !3305, !3306, !3311}
!3304 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd", scope: !3302, file: !3050, line: 508, baseType: !231, size: 32)
!3305 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !3302, file: !3050, line: 509, baseType: !236, size: 64, align: 64, offset: 64)
!3306 = !DIDerivedType(tag: DW_TAG_member, scope: !3302, file: !3050, line: 510, baseType: !3307, size: 64, offset: 128)
!3307 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3302, file: !3050, line: 510, size: 64, elements: !3308)
!3308 = !{!3309, !3310}
!3309 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !3307, file: !3050, line: 511, baseType: !236, size: 64, align: 64)
!3310 = !DIDerivedType(tag: DW_TAG_member, name: "next_key", scope: !3307, file: !3050, line: 512, baseType: !236, size: 64, align: 64)
!3311 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3302, file: !3050, line: 514, baseType: !236, size: 64, offset: 192)
!3312 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !3283, file: !3050, line: 532, baseType: !3313, size: 448)
!3313 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3283, file: !3050, line: 517, size: 448, elements: !3314)
!3314 = !{!3315, !3316, !3317, !3318, !3319, !3320, !3321, !3322}
!3315 = !DIDerivedType(tag: DW_TAG_member, name: "in_batch", scope: !3313, file: !3050, line: 518, baseType: !236, size: 64, align: 64)
!3316 = !DIDerivedType(tag: DW_TAG_member, name: "out_batch", scope: !3313, file: !3050, line: 521, baseType: !236, size: 64, align: 64, offset: 64)
!3317 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !3313, file: !3050, line: 522, baseType: !236, size: 64, align: 64, offset: 128)
!3318 = !DIDerivedType(tag: DW_TAG_member, name: "values", scope: !3313, file: !3050, line: 523, baseType: !236, size: 64, align: 64, offset: 192)
!3319 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3313, file: !3050, line: 524, baseType: !231, size: 32, offset: 256)
!3320 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd", scope: !3313, file: !3050, line: 529, baseType: !231, size: 32, offset: 288)
!3321 = !DIDerivedType(tag: DW_TAG_member, name: "elem_flags", scope: !3313, file: !3050, line: 530, baseType: !236, size: 64, offset: 320)
!3322 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3313, file: !3050, line: 531, baseType: !236, size: 64, offset: 384)
!3323 = !DIDerivedType(tag: DW_TAG_member, scope: !3283, file: !3050, line: 534, baseType: !3324, size: 960)
!3324 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3283, file: !3050, line: 534, size: 960, elements: !3325)
!3325 = !{!3326, !3327, !3328, !3329, !3330, !3331, !3332, !3333, !3334, !3335, !3336, !3337, !3338, !3339, !3340, !3341, !3342, !3343, !3344, !3345, !3346}
!3326 = !DIDerivedType(tag: DW_TAG_member, name: "prog_type", scope: !3324, file: !3050, line: 535, baseType: !231, size: 32)
!3327 = !DIDerivedType(tag: DW_TAG_member, name: "insn_cnt", scope: !3324, file: !3050, line: 536, baseType: !231, size: 32, offset: 32)
!3328 = !DIDerivedType(tag: DW_TAG_member, name: "insns", scope: !3324, file: !3050, line: 537, baseType: !236, size: 64, align: 64, offset: 64)
!3329 = !DIDerivedType(tag: DW_TAG_member, name: "license", scope: !3324, file: !3050, line: 538, baseType: !236, size: 64, align: 64, offset: 128)
!3330 = !DIDerivedType(tag: DW_TAG_member, name: "log_level", scope: !3324, file: !3050, line: 539, baseType: !231, size: 32, offset: 192)
!3331 = !DIDerivedType(tag: DW_TAG_member, name: "log_size", scope: !3324, file: !3050, line: 540, baseType: !231, size: 32, offset: 224)
!3332 = !DIDerivedType(tag: DW_TAG_member, name: "log_buf", scope: !3324, file: !3050, line: 541, baseType: !236, size: 64, align: 64, offset: 256)
!3333 = !DIDerivedType(tag: DW_TAG_member, name: "kern_version", scope: !3324, file: !3050, line: 542, baseType: !231, size: 32, offset: 320)
!3334 = !DIDerivedType(tag: DW_TAG_member, name: "prog_flags", scope: !3324, file: !3050, line: 543, baseType: !231, size: 32, offset: 352)
!3335 = !DIDerivedType(tag: DW_TAG_member, name: "prog_name", scope: !3324, file: !3050, line: 544, baseType: !1943, size: 128, offset: 384)
!3336 = !DIDerivedType(tag: DW_TAG_member, name: "prog_ifindex", scope: !3324, file: !3050, line: 545, baseType: !231, size: 32, offset: 512)
!3337 = !DIDerivedType(tag: DW_TAG_member, name: "expected_attach_type", scope: !3324, file: !3050, line: 550, baseType: !231, size: 32, offset: 544)
!3338 = !DIDerivedType(tag: DW_TAG_member, name: "prog_btf_fd", scope: !3324, file: !3050, line: 551, baseType: !231, size: 32, offset: 576)
!3339 = !DIDerivedType(tag: DW_TAG_member, name: "func_info_rec_size", scope: !3324, file: !3050, line: 552, baseType: !231, size: 32, offset: 608)
!3340 = !DIDerivedType(tag: DW_TAG_member, name: "func_info", scope: !3324, file: !3050, line: 553, baseType: !236, size: 64, align: 64, offset: 640)
!3341 = !DIDerivedType(tag: DW_TAG_member, name: "func_info_cnt", scope: !3324, file: !3050, line: 554, baseType: !231, size: 32, offset: 704)
!3342 = !DIDerivedType(tag: DW_TAG_member, name: "line_info_rec_size", scope: !3324, file: !3050, line: 555, baseType: !231, size: 32, offset: 736)
!3343 = !DIDerivedType(tag: DW_TAG_member, name: "line_info", scope: !3324, file: !3050, line: 556, baseType: !236, size: 64, align: 64, offset: 768)
!3344 = !DIDerivedType(tag: DW_TAG_member, name: "line_info_cnt", scope: !3324, file: !3050, line: 557, baseType: !231, size: 32, offset: 832)
!3345 = !DIDerivedType(tag: DW_TAG_member, name: "attach_btf_id", scope: !3324, file: !3050, line: 558, baseType: !231, size: 32, offset: 864)
!3346 = !DIDerivedType(tag: DW_TAG_member, name: "attach_prog_fd", scope: !3324, file: !3050, line: 559, baseType: !231, size: 32, offset: 896)
!3347 = !DIDerivedType(tag: DW_TAG_member, scope: !3283, file: !3050, line: 562, baseType: !3348, size: 128)
!3348 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3283, file: !3050, line: 562, size: 128, elements: !3349)
!3349 = !{!3350, !3351, !3352}
!3350 = !DIDerivedType(tag: DW_TAG_member, name: "pathname", scope: !3348, file: !3050, line: 563, baseType: !236, size: 64, align: 64)
!3351 = !DIDerivedType(tag: DW_TAG_member, name: "bpf_fd", scope: !3348, file: !3050, line: 564, baseType: !231, size: 32, offset: 64)
!3352 = !DIDerivedType(tag: DW_TAG_member, name: "file_flags", scope: !3348, file: !3050, line: 565, baseType: !231, size: 32, offset: 96)
!3353 = !DIDerivedType(tag: DW_TAG_member, scope: !3283, file: !3050, line: 568, baseType: !3354, size: 160)
!3354 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3283, file: !3050, line: 568, size: 160, elements: !3355)
!3355 = !{!3356, !3357, !3358, !3359, !3360}
!3356 = !DIDerivedType(tag: DW_TAG_member, name: "target_fd", scope: !3354, file: !3050, line: 569, baseType: !231, size: 32)
!3357 = !DIDerivedType(tag: DW_TAG_member, name: "attach_bpf_fd", scope: !3354, file: !3050, line: 570, baseType: !231, size: 32, offset: 32)
!3358 = !DIDerivedType(tag: DW_TAG_member, name: "attach_type", scope: !3354, file: !3050, line: 571, baseType: !231, size: 32, offset: 64)
!3359 = !DIDerivedType(tag: DW_TAG_member, name: "attach_flags", scope: !3354, file: !3050, line: 572, baseType: !231, size: 32, offset: 96)
!3360 = !DIDerivedType(tag: DW_TAG_member, name: "replace_bpf_fd", scope: !3354, file: !3050, line: 573, baseType: !231, size: 32, offset: 128)
!3361 = !DIDerivedType(tag: DW_TAG_member, name: "test", scope: !3283, file: !3050, line: 600, baseType: !3362, size: 576)
!3362 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3283, file: !3050, line: 579, size: 576, elements: !3363)
!3363 = !{!3364, !3365, !3366, !3367, !3368, !3369, !3370, !3371, !3372, !3373, !3374, !3375, !3376, !3377}
!3364 = !DIDerivedType(tag: DW_TAG_member, name: "prog_fd", scope: !3362, file: !3050, line: 580, baseType: !231, size: 32)
!3365 = !DIDerivedType(tag: DW_TAG_member, name: "retval", scope: !3362, file: !3050, line: 581, baseType: !231, size: 32, offset: 32)
!3366 = !DIDerivedType(tag: DW_TAG_member, name: "data_size_in", scope: !3362, file: !3050, line: 582, baseType: !231, size: 32, offset: 64)
!3367 = !DIDerivedType(tag: DW_TAG_member, name: "data_size_out", scope: !3362, file: !3050, line: 583, baseType: !231, size: 32, offset: 96)
!3368 = !DIDerivedType(tag: DW_TAG_member, name: "data_in", scope: !3362, file: !3050, line: 587, baseType: !236, size: 64, align: 64, offset: 128)
!3369 = !DIDerivedType(tag: DW_TAG_member, name: "data_out", scope: !3362, file: !3050, line: 588, baseType: !236, size: 64, align: 64, offset: 192)
!3370 = !DIDerivedType(tag: DW_TAG_member, name: "repeat", scope: !3362, file: !3050, line: 589, baseType: !231, size: 32, offset: 256)
!3371 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !3362, file: !3050, line: 590, baseType: !231, size: 32, offset: 288)
!3372 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_size_in", scope: !3362, file: !3050, line: 591, baseType: !231, size: 32, offset: 320)
!3373 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_size_out", scope: !3362, file: !3050, line: 592, baseType: !231, size: 32, offset: 352)
!3374 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_in", scope: !3362, file: !3050, line: 596, baseType: !236, size: 64, align: 64, offset: 384)
!3375 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_out", scope: !3362, file: !3050, line: 597, baseType: !236, size: 64, align: 64, offset: 448)
!3376 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3362, file: !3050, line: 598, baseType: !231, size: 32, offset: 512)
!3377 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !3362, file: !3050, line: 599, baseType: !231, size: 32, offset: 544)
!3378 = !DIDerivedType(tag: DW_TAG_member, scope: !3283, file: !3050, line: 602, baseType: !3379, size: 96)
!3379 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3283, file: !3050, line: 602, size: 96, elements: !3380)
!3380 = !{!3381, !3389, !3390}
!3381 = !DIDerivedType(tag: DW_TAG_member, scope: !3379, file: !3050, line: 603, baseType: !3382, size: 32)
!3382 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3379, file: !3050, line: 603, size: 32, elements: !3383)
!3383 = !{!3384, !3385, !3386, !3387, !3388}
!3384 = !DIDerivedType(tag: DW_TAG_member, name: "start_id", scope: !3382, file: !3050, line: 604, baseType: !231, size: 32)
!3385 = !DIDerivedType(tag: DW_TAG_member, name: "prog_id", scope: !3382, file: !3050, line: 605, baseType: !231, size: 32)
!3386 = !DIDerivedType(tag: DW_TAG_member, name: "map_id", scope: !3382, file: !3050, line: 606, baseType: !231, size: 32)
!3387 = !DIDerivedType(tag: DW_TAG_member, name: "btf_id", scope: !3382, file: !3050, line: 607, baseType: !231, size: 32)
!3388 = !DIDerivedType(tag: DW_TAG_member, name: "link_id", scope: !3382, file: !3050, line: 608, baseType: !231, size: 32)
!3389 = !DIDerivedType(tag: DW_TAG_member, name: "next_id", scope: !3379, file: !3050, line: 610, baseType: !231, size: 32, offset: 32)
!3390 = !DIDerivedType(tag: DW_TAG_member, name: "open_flags", scope: !3379, file: !3050, line: 611, baseType: !231, size: 32, offset: 64)
!3391 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !3283, file: !3050, line: 618, baseType: !3392, size: 128)
!3392 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3283, file: !3050, line: 614, size: 128, elements: !3393)
!3393 = !{!3394, !3395, !3396}
!3394 = !DIDerivedType(tag: DW_TAG_member, name: "bpf_fd", scope: !3392, file: !3050, line: 615, baseType: !231, size: 32)
!3395 = !DIDerivedType(tag: DW_TAG_member, name: "info_len", scope: !3392, file: !3050, line: 616, baseType: !231, size: 32, offset: 32)
!3396 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !3392, file: !3050, line: 617, baseType: !236, size: 64, align: 64, offset: 64)
!3397 = !DIDerivedType(tag: DW_TAG_member, name: "query", scope: !3283, file: !3050, line: 627, baseType: !3398, size: 256)
!3398 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3283, file: !3050, line: 620, size: 256, elements: !3399)
!3399 = !{!3400, !3401, !3402, !3403, !3404, !3405}
!3400 = !DIDerivedType(tag: DW_TAG_member, name: "target_fd", scope: !3398, file: !3050, line: 621, baseType: !231, size: 32)
!3401 = !DIDerivedType(tag: DW_TAG_member, name: "attach_type", scope: !3398, file: !3050, line: 622, baseType: !231, size: 32, offset: 32)
!3402 = !DIDerivedType(tag: DW_TAG_member, name: "query_flags", scope: !3398, file: !3050, line: 623, baseType: !231, size: 32, offset: 64)
!3403 = !DIDerivedType(tag: DW_TAG_member, name: "attach_flags", scope: !3398, file: !3050, line: 624, baseType: !231, size: 32, offset: 96)
!3404 = !DIDerivedType(tag: DW_TAG_member, name: "prog_ids", scope: !3398, file: !3050, line: 625, baseType: !236, size: 64, align: 64, offset: 128)
!3405 = !DIDerivedType(tag: DW_TAG_member, name: "prog_cnt", scope: !3398, file: !3050, line: 626, baseType: !231, size: 32, offset: 192)
!3406 = !DIDerivedType(tag: DW_TAG_member, name: "raw_tracepoint", scope: !3283, file: !3050, line: 632, baseType: !3407, size: 128)
!3407 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3283, file: !3050, line: 629, size: 128, elements: !3408)
!3408 = !{!3409, !3410}
!3409 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3407, file: !3050, line: 630, baseType: !236, size: 64)
!3410 = !DIDerivedType(tag: DW_TAG_member, name: "prog_fd", scope: !3407, file: !3050, line: 631, baseType: !231, size: 32, offset: 64)
!3411 = !DIDerivedType(tag: DW_TAG_member, scope: !3283, file: !3050, line: 634, baseType: !3412, size: 256)
!3412 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3283, file: !3050, line: 634, size: 256, elements: !3413)
!3413 = !{!3414, !3415, !3416, !3417, !3418}
!3414 = !DIDerivedType(tag: DW_TAG_member, name: "btf", scope: !3412, file: !3050, line: 635, baseType: !236, size: 64, align: 64)
!3415 = !DIDerivedType(tag: DW_TAG_member, name: "btf_log_buf", scope: !3412, file: !3050, line: 636, baseType: !236, size: 64, align: 64, offset: 64)
!3416 = !DIDerivedType(tag: DW_TAG_member, name: "btf_size", scope: !3412, file: !3050, line: 637, baseType: !231, size: 32, offset: 128)
!3417 = !DIDerivedType(tag: DW_TAG_member, name: "btf_log_size", scope: !3412, file: !3050, line: 638, baseType: !231, size: 32, offset: 160)
!3418 = !DIDerivedType(tag: DW_TAG_member, name: "btf_log_level", scope: !3412, file: !3050, line: 639, baseType: !231, size: 32, offset: 192)
!3419 = !DIDerivedType(tag: DW_TAG_member, name: "task_fd_query", scope: !3283, file: !3050, line: 656, baseType: !3420, size: 384)
!3420 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3283, file: !3050, line: 642, size: 384, elements: !3421)
!3421 = !{!3422, !3423, !3424, !3425, !3426, !3427, !3428, !3429, !3430}
!3422 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !3420, file: !3050, line: 643, baseType: !231, size: 32)
!3423 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !3420, file: !3050, line: 644, baseType: !231, size: 32, offset: 32)
!3424 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3420, file: !3050, line: 645, baseType: !231, size: 32, offset: 64)
!3425 = !DIDerivedType(tag: DW_TAG_member, name: "buf_len", scope: !3420, file: !3050, line: 646, baseType: !231, size: 32, offset: 96)
!3426 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !3420, file: !3050, line: 647, baseType: !236, size: 64, align: 64, offset: 128)
!3427 = !DIDerivedType(tag: DW_TAG_member, name: "prog_id", scope: !3420, file: !3050, line: 652, baseType: !231, size: 32, offset: 192)
!3428 = !DIDerivedType(tag: DW_TAG_member, name: "fd_type", scope: !3420, file: !3050, line: 653, baseType: !231, size: 32, offset: 224)
!3429 = !DIDerivedType(tag: DW_TAG_member, name: "probe_offset", scope: !3420, file: !3050, line: 654, baseType: !236, size: 64, offset: 256)
!3430 = !DIDerivedType(tag: DW_TAG_member, name: "probe_addr", scope: !3420, file: !3050, line: 655, baseType: !236, size: 64, offset: 320)
!3431 = !DIDerivedType(tag: DW_TAG_member, name: "link_create", scope: !3283, file: !3050, line: 673, baseType: !3432, size: 256)
!3432 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3283, file: !3050, line: 658, size: 256, elements: !3433)
!3433 = !{!3434, !3435, !3440, !3441, !3442}
!3434 = !DIDerivedType(tag: DW_TAG_member, name: "prog_fd", scope: !3432, file: !3050, line: 659, baseType: !231, size: 32)
!3435 = !DIDerivedType(tag: DW_TAG_member, scope: !3432, file: !3050, line: 660, baseType: !3436, size: 32, offset: 32)
!3436 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3432, file: !3050, line: 660, size: 32, elements: !3437)
!3437 = !{!3438, !3439}
!3438 = !DIDerivedType(tag: DW_TAG_member, name: "target_fd", scope: !3436, file: !3050, line: 661, baseType: !231, size: 32)
!3439 = !DIDerivedType(tag: DW_TAG_member, name: "target_ifindex", scope: !3436, file: !3050, line: 662, baseType: !231, size: 32)
!3440 = !DIDerivedType(tag: DW_TAG_member, name: "attach_type", scope: !3432, file: !3050, line: 664, baseType: !231, size: 32, offset: 64)
!3441 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3432, file: !3050, line: 665, baseType: !231, size: 32, offset: 96)
!3442 = !DIDerivedType(tag: DW_TAG_member, scope: !3432, file: !3050, line: 666, baseType: !3443, size: 128, offset: 128)
!3443 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3432, file: !3050, line: 666, size: 128, elements: !3444)
!3444 = !{!3445, !3446}
!3445 = !DIDerivedType(tag: DW_TAG_member, name: "target_btf_id", scope: !3443, file: !3050, line: 667, baseType: !231, size: 32)
!3446 = !DIDerivedType(tag: DW_TAG_member, scope: !3443, file: !3050, line: 668, baseType: !3447, size: 128)
!3447 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3443, file: !3050, line: 668, size: 128, elements: !3448)
!3448 = !{!3449, !3450}
!3449 = !DIDerivedType(tag: DW_TAG_member, name: "iter_info", scope: !3447, file: !3050, line: 669, baseType: !236, size: 64, align: 64)
!3450 = !DIDerivedType(tag: DW_TAG_member, name: "iter_info_len", scope: !3447, file: !3050, line: 670, baseType: !231, size: 32, offset: 64)
!3451 = !DIDerivedType(tag: DW_TAG_member, name: "link_update", scope: !3283, file: !3050, line: 683, baseType: !3452, size: 128)
!3452 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3283, file: !3050, line: 675, size: 128, elements: !3453)
!3453 = !{!3454, !3455, !3456, !3457}
!3454 = !DIDerivedType(tag: DW_TAG_member, name: "link_fd", scope: !3452, file: !3050, line: 676, baseType: !231, size: 32)
!3455 = !DIDerivedType(tag: DW_TAG_member, name: "new_prog_fd", scope: !3452, file: !3050, line: 678, baseType: !231, size: 32, offset: 32)
!3456 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3452, file: !3050, line: 679, baseType: !231, size: 32, offset: 64)
!3457 = !DIDerivedType(tag: DW_TAG_member, name: "old_prog_fd", scope: !3452, file: !3050, line: 682, baseType: !231, size: 32, offset: 96)
!3458 = !DIDerivedType(tag: DW_TAG_member, name: "link_detach", scope: !3283, file: !3050, line: 687, baseType: !3459, size: 32)
!3459 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3283, file: !3050, line: 685, size: 32, elements: !3460)
!3460 = !{!3461}
!3461 = !DIDerivedType(tag: DW_TAG_member, name: "link_fd", scope: !3459, file: !3050, line: 686, baseType: !231, size: 32)
!3462 = !DIDerivedType(tag: DW_TAG_member, name: "enable_stats", scope: !3283, file: !3050, line: 691, baseType: !3463, size: 32)
!3463 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3283, file: !3050, line: 689, size: 32, elements: !3464)
!3464 = !{!3465}
!3465 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3463, file: !3050, line: 690, baseType: !231, size: 32)
!3466 = !DIDerivedType(tag: DW_TAG_member, name: "iter_create", scope: !3283, file: !3050, line: 696, baseType: !3467, size: 64)
!3467 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3283, file: !3050, line: 693, size: 64, elements: !3468)
!3468 = !{!3469, !3470}
!3469 = !DIDerivedType(tag: DW_TAG_member, name: "link_fd", scope: !3467, file: !3050, line: 694, baseType: !231, size: 32)
!3470 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3467, file: !3050, line: 695, baseType: !231, size: 32, offset: 32)
!3471 = !DIDerivedType(tag: DW_TAG_member, name: "prog_bind_map", scope: !3283, file: !3050, line: 702, baseType: !3472, size: 96)
!3472 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3283, file: !3050, line: 698, size: 96, elements: !3473)
!3473 = !{!3474, !3475, !3476}
!3474 = !DIDerivedType(tag: DW_TAG_member, name: "prog_fd", scope: !3472, file: !3050, line: 699, baseType: !231, size: 32)
!3475 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd", scope: !3472, file: !3050, line: 700, baseType: !231, size: 32, offset: 32)
!3476 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3472, file: !3050, line: 701, baseType: !231, size: 32, offset: 64)
!3477 = !DIDerivedType(tag: DW_TAG_member, name: "map_alloc", scope: !3276, file: !3132, line: 57, baseType: !3478, size: 64, offset: 64)
!3478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3479, size: 64)
!3479 = !DISubroutineType(types: !3480)
!3480 = !{!3270, !3282}
!3481 = !DIDerivedType(tag: DW_TAG_member, name: "map_release", scope: !3276, file: !3132, line: 58, baseType: !3482, size: 64, offset: 128)
!3482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3483, size: 64)
!3483 = !DISubroutineType(types: !3484)
!3484 = !{null, !3270, !164}
!3485 = !DIDerivedType(tag: DW_TAG_member, name: "map_free", scope: !3276, file: !3132, line: 59, baseType: !3486, size: 64, offset: 192)
!3486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3487, size: 64)
!3487 = !DISubroutineType(types: !3488)
!3488 = !{null, !3270}
!3489 = !DIDerivedType(tag: DW_TAG_member, name: "map_get_next_key", scope: !3276, file: !3132, line: 60, baseType: !3490, size: 64, offset: 256)
!3490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3491, size: 64)
!3491 = !DISubroutineType(types: !3492)
!3492 = !{!6, !3270, !159, !159}
!3493 = !DIDerivedType(tag: DW_TAG_member, name: "map_release_uref", scope: !3276, file: !3132, line: 61, baseType: !3486, size: 64, offset: 320)
!3494 = !DIDerivedType(tag: DW_TAG_member, name: "map_lookup_elem_sys_only", scope: !3276, file: !3132, line: 62, baseType: !3495, size: 64, offset: 384)
!3495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3496, size: 64)
!3496 = !DISubroutineType(types: !3497)
!3497 = !{!159, !3270, !159}
!3498 = !DIDerivedType(tag: DW_TAG_member, name: "map_lookup_batch", scope: !3276, file: !3132, line: 63, baseType: !3499, size: 64, offset: 448)
!3499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3500, size: 64)
!3500 = !DISubroutineType(types: !3501)
!3501 = !{!6, !3270, !3502, !3282}
!3502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3503, size: 64)
!3503 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3283)
!3504 = !DIDerivedType(tag: DW_TAG_member, name: "map_lookup_and_delete_batch", scope: !3276, file: !3132, line: 65, baseType: !3499, size: 64, offset: 512)
!3505 = !DIDerivedType(tag: DW_TAG_member, name: "map_update_batch", scope: !3276, file: !3132, line: 68, baseType: !3499, size: 64, offset: 576)
!3506 = !DIDerivedType(tag: DW_TAG_member, name: "map_delete_batch", scope: !3276, file: !3132, line: 70, baseType: !3499, size: 64, offset: 640)
!3507 = !DIDerivedType(tag: DW_TAG_member, name: "map_lookup_elem", scope: !3276, file: !3132, line: 74, baseType: !3495, size: 64, offset: 704)
!3508 = !DIDerivedType(tag: DW_TAG_member, name: "map_update_elem", scope: !3276, file: !3132, line: 75, baseType: !3509, size: 64, offset: 768)
!3509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3510, size: 64)
!3510 = !DISubroutineType(types: !3511)
!3511 = !{!6, !3270, !159, !159, !235}
!3512 = !DIDerivedType(tag: DW_TAG_member, name: "map_delete_elem", scope: !3276, file: !3132, line: 76, baseType: !3513, size: 64, offset: 832)
!3513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3514, size: 64)
!3514 = !DISubroutineType(types: !3515)
!3515 = !{!6, !3270, !159}
!3516 = !DIDerivedType(tag: DW_TAG_member, name: "map_push_elem", scope: !3276, file: !3132, line: 77, baseType: !3517, size: 64, offset: 896)
!3517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3518, size: 64)
!3518 = !DISubroutineType(types: !3519)
!3519 = !{!6, !3270, !159, !235}
!3520 = !DIDerivedType(tag: DW_TAG_member, name: "map_pop_elem", scope: !3276, file: !3132, line: 78, baseType: !3513, size: 64, offset: 960)
!3521 = !DIDerivedType(tag: DW_TAG_member, name: "map_peek_elem", scope: !3276, file: !3132, line: 79, baseType: !3513, size: 64, offset: 1024)
!3522 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd_get_ptr", scope: !3276, file: !3132, line: 82, baseType: !3523, size: 64, offset: 1088)
!3523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3524, size: 64)
!3524 = !DISubroutineType(types: !3525)
!3525 = !{!159, !3270, !164, !6}
!3526 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd_put_ptr", scope: !3276, file: !3132, line: 84, baseType: !282, size: 64, offset: 1152)
!3527 = !DIDerivedType(tag: DW_TAG_member, name: "map_gen_lookup", scope: !3276, file: !3132, line: 85, baseType: !3528, size: 64, offset: 1216)
!3528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3529, size: 64)
!3529 = !DISubroutineType(types: !3530)
!3530 = !{!6, !3270, !3531}
!3531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3532, size: 64)
!3532 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_insn", file: !3050, line: 65, size: 64, elements: !3533)
!3533 = !{!3534, !3535, !3536, !3537, !3538}
!3534 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !3532, file: !3050, line: 66, baseType: !1404, size: 8)
!3535 = !DIDerivedType(tag: DW_TAG_member, name: "dst_reg", scope: !3532, file: !3050, line: 67, baseType: !1404, size: 4, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!3536 = !DIDerivedType(tag: DW_TAG_member, name: "src_reg", scope: !3532, file: !3050, line: 68, baseType: !1404, size: 4, offset: 12, flags: DIFlagBitField, extraData: i64 8)
!3537 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !3532, file: !3050, line: 69, baseType: !1255, size: 16, offset: 16)
!3538 = !DIDerivedType(tag: DW_TAG_member, name: "imm", scope: !3532, file: !3050, line: 70, baseType: !1502, size: 32, offset: 32)
!3539 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd_sys_lookup_elem", scope: !3276, file: !3132, line: 86, baseType: !3540, size: 64, offset: 1280)
!3540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3541, size: 64)
!3541 = !DISubroutineType(types: !3542)
!3542 = !{!229, !159}
!3543 = !DIDerivedType(tag: DW_TAG_member, name: "map_seq_show_elem", scope: !3276, file: !3132, line: 87, baseType: !3544, size: 64, offset: 1344)
!3544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3545, size: 64)
!3545 = !DISubroutineType(types: !3546)
!3546 = !{null, !3270, !159, !546}
!3547 = !DIDerivedType(tag: DW_TAG_member, name: "map_check_btf", scope: !3276, file: !3132, line: 89, baseType: !3548, size: 64, offset: 1408)
!3548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3549, size: 64)
!3549 = !DISubroutineType(types: !3550)
!3550 = !{!6, !3551, !3553, !3249, !3249}
!3551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3552, size: 64)
!3552 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3271)
!3553 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3554, size: 64)
!3554 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3555)
!3555 = !DICompositeType(tag: DW_TAG_structure_type, name: "btf", file: !3132, line: 32, flags: DIFlagFwdDecl)
!3556 = !DIDerivedType(tag: DW_TAG_member, name: "map_poke_track", scope: !3276, file: !3132, line: 95, baseType: !3557, size: 64, offset: 1472)
!3557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3558, size: 64)
!3558 = !DISubroutineType(types: !3559)
!3559 = !{!6, !3270, !3130}
!3560 = !DIDerivedType(tag: DW_TAG_member, name: "map_poke_untrack", scope: !3276, file: !3132, line: 96, baseType: !3561, size: 64, offset: 1536)
!3561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3562, size: 64)
!3562 = !DISubroutineType(types: !3563)
!3563 = !{null, !3270, !3130}
!3564 = !DIDerivedType(tag: DW_TAG_member, name: "map_poke_run", scope: !3276, file: !3132, line: 97, baseType: !3565, size: 64, offset: 1600)
!3565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3566, size: 64)
!3566 = !DISubroutineType(types: !3567)
!3567 = !{null, !3270, !229, !3032, !3032}
!3568 = !DIDerivedType(tag: DW_TAG_member, name: "map_direct_value_addr", scope: !3276, file: !3132, line: 101, baseType: !3569, size: 64, offset: 1664)
!3569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3570, size: 64)
!3570 = !DISubroutineType(types: !3571)
!3571 = !{!6, !3551, !3572, !229}
!3572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !235, size: 64)
!3573 = !DIDerivedType(tag: DW_TAG_member, name: "map_direct_value_meta", scope: !3276, file: !3132, line: 103, baseType: !3574, size: 64, offset: 1728)
!3574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3575, size: 64)
!3575 = !DISubroutineType(types: !3576)
!3576 = !{!6, !3551, !235, !1467}
!3577 = !DIDerivedType(tag: DW_TAG_member, name: "map_mmap", scope: !3276, file: !3132, line: 105, baseType: !3578, size: 64, offset: 1792)
!3578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3579, size: 64)
!3579 = !DISubroutineType(types: !3580)
!3580 = !{!6, !3270, !1032}
!3581 = !DIDerivedType(tag: DW_TAG_member, name: "map_poll", scope: !3276, file: !3132, line: 106, baseType: !3582, size: 64, offset: 1856)
!3582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3583, size: 64)
!3583 = !DISubroutineType(types: !3584)
!3584 = !{!3585, !3270, !164, !3586}
!3585 = !DIDerivedType(tag: DW_TAG_typedef, name: "__poll_t", file: !2020, line: 52, baseType: !199)
!3586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3587, size: 64)
!3587 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "poll_table_struct", file: !3588, line: 43, size: 128, elements: !3589)
!3588 = !DIFile(filename: "./include/linux/poll.h", directory: "/home/lizy2001/genbc/linux")
!3589 = !{!3590, !3596}
!3590 = !DIDerivedType(tag: DW_TAG_member, name: "_qproc", scope: !3587, file: !3588, line: 44, baseType: !3591, size: 64)
!3591 = !DIDerivedType(tag: DW_TAG_typedef, name: "poll_queue_proc", file: !3588, line: 37, baseType: !3592)
!3592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3593, size: 64)
!3593 = !DISubroutineType(types: !3594)
!3594 = !{null, !164, !3595, !3586}
!3595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !812, size: 64)
!3596 = !DIDerivedType(tag: DW_TAG_member, name: "_key", scope: !3587, file: !3588, line: 45, baseType: !3585, size: 32, offset: 64)
!3597 = !DIDerivedType(tag: DW_TAG_member, name: "map_local_storage_charge", scope: !3276, file: !3132, line: 110, baseType: !3598, size: 64, offset: 1920)
!3598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3599, size: 64)
!3599 = !DISubroutineType(types: !3600)
!3600 = !{!6, !3601, !159, !229}
!3601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3602, size: 64)
!3602 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_local_storage_map", file: !3132, line: 38, flags: DIFlagFwdDecl)
!3603 = !DIDerivedType(tag: DW_TAG_member, name: "map_local_storage_uncharge", scope: !3276, file: !3132, line: 112, baseType: !3604, size: 64, offset: 1984)
!3604 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3605, size: 64)
!3605 = !DISubroutineType(types: !3606)
!3606 = !{null, !3601, !159, !229}
!3607 = !DIDerivedType(tag: DW_TAG_member, name: "map_owner_storage_ptr", scope: !3276, file: !3132, line: 114, baseType: !3608, size: 64, offset: 2048)
!3608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3609, size: 64)
!3609 = !DISubroutineType(types: !3610)
!3610 = !{!3611, !159}
!3611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3612, size: 64)
!3612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3613, size: 64)
!3613 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_local_storage", file: !3132, line: 37, flags: DIFlagFwdDecl)
!3614 = !DIDerivedType(tag: DW_TAG_member, name: "map_meta_equal", scope: !3276, file: !3132, line: 125, baseType: !3615, size: 64, offset: 2112)
!3615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3616, size: 64)
!3616 = !DISubroutineType(types: !3617)
!3617 = !{!304, !3551, !3551}
!3618 = !DIDerivedType(tag: DW_TAG_member, name: "map_btf_name", scope: !3276, file: !3132, line: 129, baseType: !3619, size: 64, offset: 2176)
!3619 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !26)
!3620 = !DIDerivedType(tag: DW_TAG_member, name: "map_btf_id", scope: !3276, file: !3132, line: 130, baseType: !540, size: 64, offset: 2240)
!3621 = !DIDerivedType(tag: DW_TAG_member, name: "iter_seq_info", scope: !3276, file: !3132, line: 133, baseType: !3622, size: 64, offset: 2304)
!3622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3623, size: 64)
!3623 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3624)
!3624 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_iter_seq_info", file: !3132, line: 46, size: 256, elements: !3625)
!3625 = !{!3626, !3627, !3634, !3636}
!3626 = !DIDerivedType(tag: DW_TAG_member, name: "seq_ops", scope: !3624, file: !3132, line: 47, baseType: !572, size: 64)
!3627 = !DIDerivedType(tag: DW_TAG_member, name: "init_seq_private", scope: !3624, file: !3132, line: 48, baseType: !3628, size: 64, offset: 64)
!3628 = !DIDerivedType(tag: DW_TAG_typedef, name: "bpf_iter_init_seq_priv_t", file: !3132, line: 43, baseType: !3629)
!3629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3630, size: 64)
!3630 = !DISubroutineType(types: !3631)
!3631 = !{!6, !159, !3632}
!3632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3633, size: 64)
!3633 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_iter_aux_info", file: !3132, line: 36, flags: DIFlagFwdDecl)
!3634 = !DIDerivedType(tag: DW_TAG_member, name: "fini_seq_private", scope: !3624, file: !3132, line: 49, baseType: !3635, size: 64, offset: 128)
!3635 = !DIDerivedType(tag: DW_TAG_typedef, name: "bpf_iter_fini_seq_priv_t", file: !3132, line: 45, baseType: !282)
!3636 = !DIDerivedType(tag: DW_TAG_member, name: "seq_priv_size", scope: !3624, file: !3132, line: 50, baseType: !229, size: 32, offset: 192)
!3637 = !DIDerivedType(tag: DW_TAG_member, name: "inner_map_meta", scope: !3271, file: !3132, line: 146, baseType: !3270, size: 64, offset: 64)
!3638 = !DIDerivedType(tag: DW_TAG_member, name: "map_type", scope: !3271, file: !3132, line: 150, baseType: !3639, size: 32, offset: 128)
!3639 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_map_type", file: !3050, line: 130, baseType: !199, size: 32, elements: !3640)
!3640 = !{!3641, !3642, !3643, !3644, !3645, !3646, !3647, !3648, !3649, !3650, !3651, !3652, !3653, !3654, !3655, !3656, !3657, !3658, !3659, !3660, !3661, !3662, !3663, !3664, !3665, !3666, !3667, !3668, !3669}
!3641 = !DIEnumerator(name: "BPF_MAP_TYPE_UNSPEC", value: 0, isUnsigned: true)
!3642 = !DIEnumerator(name: "BPF_MAP_TYPE_HASH", value: 1, isUnsigned: true)
!3643 = !DIEnumerator(name: "BPF_MAP_TYPE_ARRAY", value: 2, isUnsigned: true)
!3644 = !DIEnumerator(name: "BPF_MAP_TYPE_PROG_ARRAY", value: 3, isUnsigned: true)
!3645 = !DIEnumerator(name: "BPF_MAP_TYPE_PERF_EVENT_ARRAY", value: 4, isUnsigned: true)
!3646 = !DIEnumerator(name: "BPF_MAP_TYPE_PERCPU_HASH", value: 5, isUnsigned: true)
!3647 = !DIEnumerator(name: "BPF_MAP_TYPE_PERCPU_ARRAY", value: 6, isUnsigned: true)
!3648 = !DIEnumerator(name: "BPF_MAP_TYPE_STACK_TRACE", value: 7, isUnsigned: true)
!3649 = !DIEnumerator(name: "BPF_MAP_TYPE_CGROUP_ARRAY", value: 8, isUnsigned: true)
!3650 = !DIEnumerator(name: "BPF_MAP_TYPE_LRU_HASH", value: 9, isUnsigned: true)
!3651 = !DIEnumerator(name: "BPF_MAP_TYPE_LRU_PERCPU_HASH", value: 10, isUnsigned: true)
!3652 = !DIEnumerator(name: "BPF_MAP_TYPE_LPM_TRIE", value: 11, isUnsigned: true)
!3653 = !DIEnumerator(name: "BPF_MAP_TYPE_ARRAY_OF_MAPS", value: 12, isUnsigned: true)
!3654 = !DIEnumerator(name: "BPF_MAP_TYPE_HASH_OF_MAPS", value: 13, isUnsigned: true)
!3655 = !DIEnumerator(name: "BPF_MAP_TYPE_DEVMAP", value: 14, isUnsigned: true)
!3656 = !DIEnumerator(name: "BPF_MAP_TYPE_SOCKMAP", value: 15, isUnsigned: true)
!3657 = !DIEnumerator(name: "BPF_MAP_TYPE_CPUMAP", value: 16, isUnsigned: true)
!3658 = !DIEnumerator(name: "BPF_MAP_TYPE_XSKMAP", value: 17, isUnsigned: true)
!3659 = !DIEnumerator(name: "BPF_MAP_TYPE_SOCKHASH", value: 18, isUnsigned: true)
!3660 = !DIEnumerator(name: "BPF_MAP_TYPE_CGROUP_STORAGE", value: 19, isUnsigned: true)
!3661 = !DIEnumerator(name: "BPF_MAP_TYPE_REUSEPORT_SOCKARRAY", value: 20, isUnsigned: true)
!3662 = !DIEnumerator(name: "BPF_MAP_TYPE_PERCPU_CGROUP_STORAGE", value: 21, isUnsigned: true)
!3663 = !DIEnumerator(name: "BPF_MAP_TYPE_QUEUE", value: 22, isUnsigned: true)
!3664 = !DIEnumerator(name: "BPF_MAP_TYPE_STACK", value: 23, isUnsigned: true)
!3665 = !DIEnumerator(name: "BPF_MAP_TYPE_SK_STORAGE", value: 24, isUnsigned: true)
!3666 = !DIEnumerator(name: "BPF_MAP_TYPE_DEVMAP_HASH", value: 25, isUnsigned: true)
!3667 = !DIEnumerator(name: "BPF_MAP_TYPE_STRUCT_OPS", value: 26, isUnsigned: true)
!3668 = !DIEnumerator(name: "BPF_MAP_TYPE_RINGBUF", value: 27, isUnsigned: true)
!3669 = !DIEnumerator(name: "BPF_MAP_TYPE_INODE_STORAGE", value: 28, isUnsigned: true)
!3670 = !DIDerivedType(tag: DW_TAG_member, name: "key_size", scope: !3271, file: !3132, line: 151, baseType: !229, size: 32, offset: 160)
!3671 = !DIDerivedType(tag: DW_TAG_member, name: "value_size", scope: !3271, file: !3132, line: 152, baseType: !229, size: 32, offset: 192)
!3672 = !DIDerivedType(tag: DW_TAG_member, name: "max_entries", scope: !3271, file: !3132, line: 153, baseType: !229, size: 32, offset: 224)
!3673 = !DIDerivedType(tag: DW_TAG_member, name: "map_flags", scope: !3271, file: !3132, line: 154, baseType: !229, size: 32, offset: 256)
!3674 = !DIDerivedType(tag: DW_TAG_member, name: "spin_lock_off", scope: !3271, file: !3132, line: 155, baseType: !6, size: 32, offset: 288)
!3675 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3271, file: !3132, line: 156, baseType: !229, size: 32, offset: 320)
!3676 = !DIDerivedType(tag: DW_TAG_member, name: "numa_node", scope: !3271, file: !3132, line: 157, baseType: !6, size: 32, offset: 352)
!3677 = !DIDerivedType(tag: DW_TAG_member, name: "btf_key_type_id", scope: !3271, file: !3132, line: 158, baseType: !229, size: 32, offset: 384)
!3678 = !DIDerivedType(tag: DW_TAG_member, name: "btf_value_type_id", scope: !3271, file: !3132, line: 159, baseType: !229, size: 32, offset: 416)
!3679 = !DIDerivedType(tag: DW_TAG_member, name: "btf", scope: !3271, file: !3132, line: 160, baseType: !3680, size: 64, offset: 448)
!3680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3555, size: 64)
!3681 = !DIDerivedType(tag: DW_TAG_member, name: "memory", scope: !3271, file: !3132, line: 161, baseType: !3682, size: 128, offset: 512)
!3682 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_map_memory", file: !3132, line: 136, size: 128, elements: !3683)
!3683 = !{!3684, !3685}
!3684 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !3682, file: !3132, line: 137, baseType: !229, size: 32)
!3685 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !3682, file: !3132, line: 138, baseType: !875, size: 64, offset: 64)
!3686 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3271, file: !3132, line: 162, baseType: !1943, size: 128, offset: 640)
!3687 = !DIDerivedType(tag: DW_TAG_member, name: "btf_vmlinux_value_type_id", scope: !3271, file: !3132, line: 163, baseType: !229, size: 32, offset: 768)
!3688 = !DIDerivedType(tag: DW_TAG_member, name: "bypass_spec_v1", scope: !3271, file: !3132, line: 164, baseType: !304, size: 8, offset: 800)
!3689 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !3271, file: !3132, line: 165, baseType: !304, size: 8, offset: 808)
!3690 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !3271, file: !3132, line: 171, baseType: !564, size: 64, align: 512, offset: 1024)
!3691 = !DIDerivedType(tag: DW_TAG_member, name: "usercnt", scope: !3271, file: !3132, line: 172, baseType: !564, size: 64, offset: 1088)
!3692 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !3271, file: !3132, line: 173, baseType: !1728, size: 256, offset: 1152)
!3693 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_mutex", scope: !3271, file: !3132, line: 174, baseType: !558, size: 192, offset: 1408)
!3694 = !DIDerivedType(tag: DW_TAG_member, name: "writecnt", scope: !3271, file: !3132, line: 175, baseType: !235, size: 64, offset: 1600)
!3695 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !3267, file: !3132, line: 741, baseType: !229, size: 32, offset: 64)
!3696 = !DIDerivedType(tag: DW_TAG_member, name: "tailcall_target_stable", scope: !3258, file: !3132, line: 744, baseType: !304, size: 8, offset: 320)
!3697 = !DIDerivedType(tag: DW_TAG_member, name: "adj_off", scope: !3258, file: !3132, line: 745, baseType: !1403, size: 8, offset: 328)
!3698 = !DIDerivedType(tag: DW_TAG_member, name: "reason", scope: !3258, file: !3132, line: 746, baseType: !744, size: 16, offset: 336)
!3699 = !DIDerivedType(tag: DW_TAG_member, name: "insn_idx", scope: !3258, file: !3132, line: 747, baseType: !229, size: 32, offset: 352)
!3700 = !DIDerivedType(tag: DW_TAG_member, name: "size_poke_tab", scope: !3131, file: !3132, line: 792, baseType: !229, size: 32, offset: 1472)
!3701 = !DIDerivedType(tag: DW_TAG_member, name: "ksym", scope: !3131, file: !3132, line: 793, baseType: !3215, size: 1728, offset: 1536)
!3702 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3131, file: !3132, line: 794, baseType: !3703, size: 64, offset: 3264)
!3703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3704, size: 64)
!3704 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3705)
!3705 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_ops", file: !3132, line: 432, size: 64, elements: !3706)
!3706 = !{!3707}
!3707 = !DIDerivedType(tag: DW_TAG_member, name: "test_run", scope: !3705, file: !3132, line: 433, baseType: !3708, size: 64)
!3708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3709, size: 64)
!3709 = !DISubroutineType(types: !3710)
!3710 = !{!6, !3032, !3502, !3282}
!3711 = !DIDerivedType(tag: DW_TAG_member, name: "used_maps", scope: !3131, file: !3132, line: 795, baseType: !3712, size: 64, offset: 3328)
!3712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3270, size: 64)
!3713 = !DIDerivedType(tag: DW_TAG_member, name: "used_maps_mutex", scope: !3131, file: !3132, line: 796, baseType: !558, size: 192, offset: 3392)
!3714 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !3131, file: !3132, line: 797, baseType: !3032, size: 64, offset: 3584)
!3715 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !3131, file: !3132, line: 798, baseType: !875, size: 64, offset: 3648)
!3716 = !DIDerivedType(tag: DW_TAG_member, name: "load_time", scope: !3131, file: !3132, line: 799, baseType: !235, size: 64, offset: 3712)
!3717 = !DIDerivedType(tag: DW_TAG_member, name: "cgroup_storage", scope: !3131, file: !3132, line: 800, baseType: !3718, size: 128, offset: 3776)
!3718 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3270, size: 128, elements: !1911)
!3719 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3131, file: !3132, line: 801, baseType: !1943, size: 128, offset: 3904)
!3720 = !DIDerivedType(tag: DW_TAG_member, name: "offload", scope: !3131, file: !3132, line: 805, baseType: !3721, size: 64, offset: 4032)
!3721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3722, size: 64)
!3722 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_offload", file: !3132, line: 478, size: 576, elements: !3723)
!3723 = !{!3724, !3725, !3726, !3729, !3730, !3731, !3732, !3733, !3734}
!3724 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !3722, file: !3132, line: 479, baseType: !3032, size: 64)
!3725 = !DIDerivedType(tag: DW_TAG_member, name: "netdev", scope: !3722, file: !3132, line: 480, baseType: !2169, size: 64, offset: 64)
!3726 = !DIDerivedType(tag: DW_TAG_member, name: "offdev", scope: !3722, file: !3132, line: 481, baseType: !3727, size: 64, offset: 128)
!3727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3728, size: 64)
!3728 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_offload_dev", file: !3132, line: 209, flags: DIFlagFwdDecl)
!3729 = !DIDerivedType(tag: DW_TAG_member, name: "dev_priv", scope: !3722, file: !3132, line: 482, baseType: !159, size: 64, offset: 192)
!3730 = !DIDerivedType(tag: DW_TAG_member, name: "offloads", scope: !3722, file: !3132, line: 483, baseType: !30, size: 128, offset: 256)
!3731 = !DIDerivedType(tag: DW_TAG_member, name: "dev_state", scope: !3722, file: !3132, line: 484, baseType: !304, size: 8, offset: 384)
!3732 = !DIDerivedType(tag: DW_TAG_member, name: "opt_failed", scope: !3722, file: !3132, line: 485, baseType: !304, size: 8, offset: 392)
!3733 = !DIDerivedType(tag: DW_TAG_member, name: "jited_image", scope: !3722, file: !3132, line: 486, baseType: !159, size: 64, offset: 448)
!3734 = !DIDerivedType(tag: DW_TAG_member, name: "jited_len", scope: !3722, file: !3132, line: 487, baseType: !229, size: 32, offset: 512)
!3735 = !DIDerivedType(tag: DW_TAG_member, name: "btf", scope: !3131, file: !3132, line: 806, baseType: !3680, size: 64, offset: 4096)
!3736 = !DIDerivedType(tag: DW_TAG_member, name: "func_info", scope: !3131, file: !3132, line: 807, baseType: !3737, size: 64, offset: 4160)
!3737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3738, size: 64)
!3738 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_func_info", file: !3050, line: 4963, size: 64, elements: !3739)
!3739 = !{!3740, !3741}
!3740 = !DIDerivedType(tag: DW_TAG_member, name: "insn_off", scope: !3738, file: !3050, line: 4964, baseType: !231, size: 32)
!3741 = !DIDerivedType(tag: DW_TAG_member, name: "type_id", scope: !3738, file: !3050, line: 4965, baseType: !231, size: 32, offset: 32)
!3742 = !DIDerivedType(tag: DW_TAG_member, name: "func_info_aux", scope: !3131, file: !3132, line: 808, baseType: !3743, size: 64, offset: 4224)
!3743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3744, size: 64)
!3744 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_func_info_aux", file: !3132, line: 724, size: 32, elements: !3745)
!3745 = !{!3746, !3747}
!3746 = !DIDerivedType(tag: DW_TAG_member, name: "linkage", scope: !3744, file: !3132, line: 725, baseType: !744, size: 16)
!3747 = !DIDerivedType(tag: DW_TAG_member, name: "unreliable", scope: !3744, file: !3132, line: 726, baseType: !304, size: 8, offset: 16)
!3748 = !DIDerivedType(tag: DW_TAG_member, name: "linfo", scope: !3131, file: !3132, line: 815, baseType: !3749, size: 64, offset: 4288)
!3749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3750, size: 64)
!3750 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_line_info", file: !3050, line: 4971, size: 128, elements: !3751)
!3751 = !{!3752, !3753, !3754, !3755}
!3752 = !DIDerivedType(tag: DW_TAG_member, name: "insn_off", scope: !3750, file: !3050, line: 4972, baseType: !231, size: 32)
!3753 = !DIDerivedType(tag: DW_TAG_member, name: "file_name_off", scope: !3750, file: !3050, line: 4973, baseType: !231, size: 32, offset: 32)
!3754 = !DIDerivedType(tag: DW_TAG_member, name: "line_off", scope: !3750, file: !3050, line: 4974, baseType: !231, size: 32, offset: 64)
!3755 = !DIDerivedType(tag: DW_TAG_member, name: "line_col", scope: !3750, file: !3050, line: 4975, baseType: !231, size: 32, offset: 96)
!3756 = !DIDerivedType(tag: DW_TAG_member, name: "jited_linfo", scope: !3131, file: !3132, line: 823, baseType: !706, size: 64, offset: 4352)
!3757 = !DIDerivedType(tag: DW_TAG_member, name: "func_info_cnt", scope: !3131, file: !3132, line: 824, baseType: !229, size: 32, offset: 4416)
!3758 = !DIDerivedType(tag: DW_TAG_member, name: "nr_linfo", scope: !3131, file: !3132, line: 825, baseType: !229, size: 32, offset: 4448)
!3759 = !DIDerivedType(tag: DW_TAG_member, name: "linfo_idx", scope: !3131, file: !3132, line: 830, baseType: !229, size: 32, offset: 4480)
!3760 = !DIDerivedType(tag: DW_TAG_member, name: "num_exentries", scope: !3131, file: !3132, line: 831, baseType: !229, size: 32, offset: 4512)
!3761 = !DIDerivedType(tag: DW_TAG_member, name: "extable", scope: !3131, file: !3132, line: 832, baseType: !3762, size: 64, offset: 4544)
!3762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3763, size: 64)
!3763 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "exception_table_entry", file: !3764, line: 17, size: 96, elements: !3765)
!3764 = !DIFile(filename: "./arch/x86/include/asm/extable.h", directory: "/home/lizy2001/genbc/linux")
!3765 = !{!3766, !3767, !3768}
!3766 = !DIDerivedType(tag: DW_TAG_member, name: "insn", scope: !3763, file: !3764, line: 18, baseType: !6, size: 32)
!3767 = !DIDerivedType(tag: DW_TAG_member, name: "fixup", scope: !3763, file: !3764, line: 18, baseType: !6, size: 32, offset: 32)
!3768 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !3763, file: !3764, line: 18, baseType: !6, size: 32, offset: 64)
!3769 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !3131, file: !3132, line: 833, baseType: !3770, size: 64, offset: 4608)
!3770 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3771, size: 64)
!3771 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_stats", file: !3132, line: 503, size: 128, align: 128, elements: !3772)
!3772 = !{!3773, !3774, !3775}
!3773 = !DIDerivedType(tag: DW_TAG_member, name: "cnt", scope: !3771, file: !3132, line: 504, baseType: !235, size: 64)
!3774 = !DIDerivedType(tag: DW_TAG_member, name: "nsecs", scope: !3771, file: !3132, line: 505, baseType: !235, size: 64, offset: 64)
!3775 = !DIDerivedType(tag: DW_TAG_member, name: "syncp", scope: !3771, file: !3132, line: 506, baseType: !3776, offset: 128)
!3776 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "u64_stats_sync", file: !3777, line: 68, elements: !58)
!3777 = !DIFile(filename: "./include/linux/u64_stats_sync.h", directory: "/home/lizy2001/genbc/linux")
!3778 = !DIDerivedType(tag: DW_TAG_member, scope: !3131, file: !3132, line: 834, baseType: !3779, size: 256, offset: 4672)
!3779 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3131, file: !3132, line: 834, size: 256, elements: !3780)
!3780 = !{!3781, !3782}
!3781 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !3779, file: !3132, line: 835, baseType: !1728, size: 256)
!3782 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !3779, file: !3132, line: 836, baseType: !178, size: 128, align: 64)
!3783 = !DIDerivedType(tag: DW_TAG_member, name: "orig_prog", scope: !3033, file: !3034, line: 544, baseType: !3784, size: 64, offset: 320)
!3784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3785, size: 64)
!3785 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sock_fprog_kern", file: !3034, line: 512, size: 128, elements: !3786)
!3786 = !{!3787, !3788}
!3787 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !3785, file: !3034, line: 513, baseType: !744, size: 16)
!3788 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !3785, file: !3034, line: 514, baseType: !3789, size: 64, offset: 64)
!3789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3790, size: 64)
!3790 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sock_filter", file: !3791, line: 24, size: 64, elements: !3792)
!3791 = !DIFile(filename: "./include/uapi/linux/filter.h", directory: "/home/lizy2001/genbc/linux")
!3792 = !{!3793, !3794, !3795, !3796}
!3793 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !3790, file: !3791, line: 25, baseType: !745, size: 16)
!3794 = !DIDerivedType(tag: DW_TAG_member, name: "jt", scope: !3790, file: !3791, line: 26, baseType: !1404, size: 8, offset: 16)
!3795 = !DIDerivedType(tag: DW_TAG_member, name: "jf", scope: !3790, file: !3791, line: 27, baseType: !1404, size: 8, offset: 24)
!3796 = !DIDerivedType(tag: DW_TAG_member, name: "k", scope: !3790, file: !3791, line: 28, baseType: !231, size: 32, offset: 32)
!3797 = !DIDerivedType(tag: DW_TAG_member, name: "bpf_func", scope: !3033, file: !3034, line: 545, baseType: !3798, size: 64, offset: 384)
!3798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3799, size: 64)
!3799 = !DISubroutineType(types: !3800)
!3800 = !{!199, !2454, !3801}
!3801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3802, size: 64)
!3802 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3532)
!3803 = !DIDerivedType(tag: DW_TAG_member, name: "insns", scope: !3033, file: !3034, line: 548, baseType: !3804, offset: 448)
!3804 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3790, elements: !1932)
!3805 = !DIDerivedType(tag: DW_TAG_member, name: "insnsi", scope: !3033, file: !3034, line: 549, baseType: !3806, offset: 448)
!3806 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3532, elements: !2189)
!3807 = !DIDerivedType(tag: DW_TAG_member, name: "extack", scope: !3028, file: !2171, line: 901, baseType: !2496, size: 64, offset: 128)
!3808 = !DIDerivedType(tag: DW_TAG_member, scope: !3025, file: !2171, line: 904, baseType: !3809, size: 64)
!3809 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3025, file: !2171, line: 904, size: 64, elements: !3810)
!3810 = !{!3811}
!3811 = !DIDerivedType(tag: DW_TAG_member, name: "offmap", scope: !3809, file: !2171, line: 905, baseType: !3812, size: 64)
!3812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3813, size: 64)
!3813 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_offloaded_map", file: !3132, line: 222, size: 2560, elements: !3814)
!3814 = !{!3815, !3816, !3817, !3835, !3836}
!3815 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !3813, file: !3132, line: 223, baseType: !3271, size: 2048)
!3816 = !DIDerivedType(tag: DW_TAG_member, name: "netdev", scope: !3813, file: !3132, line: 224, baseType: !2169, size: 64, offset: 2048)
!3817 = !DIDerivedType(tag: DW_TAG_member, name: "dev_ops", scope: !3813, file: !3132, line: 225, baseType: !3818, size: 64, offset: 2112)
!3818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3819, size: 64)
!3819 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3820)
!3820 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_map_dev_ops", file: !3132, line: 212, size: 256, elements: !3821)
!3821 = !{!3822, !3826, !3827, !3831}
!3822 = !DIDerivedType(tag: DW_TAG_member, name: "map_get_next_key", scope: !3820, file: !3132, line: 213, baseType: !3823, size: 64)
!3823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3824, size: 64)
!3824 = !DISubroutineType(types: !3825)
!3825 = !{!6, !3812, !159, !159}
!3826 = !DIDerivedType(tag: DW_TAG_member, name: "map_lookup_elem", scope: !3820, file: !3132, line: 215, baseType: !3823, size: 64, offset: 64)
!3827 = !DIDerivedType(tag: DW_TAG_member, name: "map_update_elem", scope: !3820, file: !3132, line: 217, baseType: !3828, size: 64, offset: 128)
!3828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3829, size: 64)
!3829 = !DISubroutineType(types: !3830)
!3830 = !{!6, !3812, !159, !159, !235}
!3831 = !DIDerivedType(tag: DW_TAG_member, name: "map_delete_elem", scope: !3820, file: !3132, line: 219, baseType: !3832, size: 64, offset: 192)
!3832 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3833, size: 64)
!3833 = !DISubroutineType(types: !3834)
!3834 = !{!6, !3812, !159}
!3835 = !DIDerivedType(tag: DW_TAG_member, name: "dev_priv", scope: !3813, file: !3132, line: 226, baseType: !159, size: 64, offset: 2176)
!3836 = !DIDerivedType(tag: DW_TAG_member, name: "offloads", scope: !3813, file: !3132, line: 227, baseType: !30, size: 128, offset: 2240)
!3837 = !DIDerivedType(tag: DW_TAG_member, name: "xsk", scope: !3025, file: !2171, line: 911, baseType: !3838, size: 128)
!3838 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3025, file: !2171, line: 908, size: 128, elements: !3839)
!3839 = !{!3840, !3843}
!3840 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !3838, file: !2171, line: 909, baseType: !3841, size: 64)
!3841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3842, size: 64)
!3842 = !DICompositeType(tag: DW_TAG_structure_type, name: "xsk_buff_pool", file: !2171, line: 909, flags: DIFlagFwdDecl)
!3843 = !DIDerivedType(tag: DW_TAG_member, name: "queue_id", scope: !3838, file: !2171, line: 910, baseType: !744, size: 16, offset: 64)
!3844 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_xdp_xmit", scope: !2259, file: !2171, line: 1481, baseType: !3845, size: 64, offset: 4096)
!3845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3846, size: 64)
!3846 = !DISubroutineType(types: !3847)
!3847 = !{!6, !2169, !6, !3848, !229}
!3848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3849, size: 64)
!3849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3850, size: 64)
!3850 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xdp_frame", file: !3851, line: 94, size: 256, elements: !3852)
!3851 = !DIFile(filename: "./include/net/xdp.h", directory: "/home/lizy2001/genbc/linux")
!3852 = !{!3853, !3854, !3855, !3856, !3857, !3858, !3863}
!3853 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3850, file: !3851, line: 95, baseType: !159, size: 64)
!3854 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !3850, file: !3851, line: 96, baseType: !744, size: 16, offset: 64)
!3855 = !DIDerivedType(tag: DW_TAG_member, name: "headroom", scope: !3850, file: !3851, line: 97, baseType: !744, size: 16, offset: 80)
!3856 = !DIDerivedType(tag: DW_TAG_member, name: "metasize", scope: !3850, file: !3851, line: 98, baseType: !229, size: 8, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!3857 = !DIDerivedType(tag: DW_TAG_member, name: "frame_sz", scope: !3850, file: !3851, line: 99, baseType: !229, size: 24, offset: 104, flags: DIFlagBitField, extraData: i64 96)
!3858 = !DIDerivedType(tag: DW_TAG_member, name: "mem", scope: !3850, file: !3851, line: 103, baseType: !3859, size: 64, offset: 128)
!3859 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xdp_mem_info", file: !3851, line: 50, size: 64, elements: !3860)
!3860 = !{!3861, !3862}
!3861 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3859, file: !3851, line: 51, baseType: !229, size: 32)
!3862 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3859, file: !3851, line: 52, baseType: !229, size: 32, offset: 32)
!3863 = !DIDerivedType(tag: DW_TAG_member, name: "dev_rx", scope: !3850, file: !3851, line: 104, baseType: !2169, size: 64, offset: 192)
!3864 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_xsk_wakeup", scope: !2259, file: !2171, line: 1484, baseType: !3865, size: 64, offset: 4160)
!3865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3866, size: 64)
!3866 = !DISubroutineType(types: !3867)
!3867 = !{!6, !2169, !229, !229}
!3868 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_devlink_port", scope: !2259, file: !2171, line: 1486, baseType: !3869, size: 64, offset: 4224)
!3869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3870, size: 64)
!3870 = !DISubroutineType(types: !3871)
!3871 = !{!3872, !2169}
!3872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3873, size: 64)
!3873 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "devlink_port", file: !3874, line: 119, size: 2176, elements: !3875)
!3874 = !DIFile(filename: "./include/net/devlink.h", directory: "/home/lizy2001/genbc/linux")
!3875 = !{!3876, !3877, !3878, !3879, !4172, !4173, !4174, !4175, !4176, !4177, !4178, !4216, !4217, !4218, !4219, !4220}
!3876 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3873, file: !3874, line: 120, baseType: !30, size: 128)
!3877 = !DIDerivedType(tag: DW_TAG_member, name: "param_list", scope: !3873, file: !3874, line: 121, baseType: !30, size: 128, offset: 128)
!3878 = !DIDerivedType(tag: DW_TAG_member, name: "region_list", scope: !3873, file: !3874, line: 122, baseType: !30, size: 128, offset: 256)
!3879 = !DIDerivedType(tag: DW_TAG_member, name: "devlink", scope: !3873, file: !3874, line: 123, baseType: !3880, size: 64, offset: 384)
!3880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3881, size: 64)
!3881 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "devlink", file: !3874, line: 33, size: 2816, elements: !3882)
!3882 = !{!3883, !3884, !3885, !3886, !3887, !3888, !3889, !3890, !3891, !3892, !3919, !3920, !3921, !3922, !4157, !4158, !4164, !4165, !4166, !4167, !4168, !4169, !4170}
!3883 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3881, file: !3874, line: 34, baseType: !30, size: 128)
!3884 = !DIDerivedType(tag: DW_TAG_member, name: "port_list", scope: !3881, file: !3874, line: 35, baseType: !30, size: 128, offset: 128)
!3885 = !DIDerivedType(tag: DW_TAG_member, name: "sb_list", scope: !3881, file: !3874, line: 36, baseType: !30, size: 128, offset: 256)
!3886 = !DIDerivedType(tag: DW_TAG_member, name: "dpipe_table_list", scope: !3881, file: !3874, line: 37, baseType: !30, size: 128, offset: 384)
!3887 = !DIDerivedType(tag: DW_TAG_member, name: "resource_list", scope: !3881, file: !3874, line: 38, baseType: !30, size: 128, offset: 512)
!3888 = !DIDerivedType(tag: DW_TAG_member, name: "param_list", scope: !3881, file: !3874, line: 39, baseType: !30, size: 128, offset: 640)
!3889 = !DIDerivedType(tag: DW_TAG_member, name: "region_list", scope: !3881, file: !3874, line: 40, baseType: !30, size: 128, offset: 768)
!3890 = !DIDerivedType(tag: DW_TAG_member, name: "reporter_list", scope: !3881, file: !3874, line: 41, baseType: !30, size: 128, offset: 896)
!3891 = !DIDerivedType(tag: DW_TAG_member, name: "reporters_lock", scope: !3881, file: !3874, line: 42, baseType: !558, size: 192, offset: 1024)
!3892 = !DIDerivedType(tag: DW_TAG_member, name: "dpipe_headers", scope: !3881, file: !3874, line: 43, baseType: !3893, size: 64, offset: 1216)
!3893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3894, size: 64)
!3894 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "devlink_dpipe_headers", file: !3874, line: 320, size: 128, elements: !3895)
!3895 = !{!3896, !3918}
!3896 = !DIDerivedType(tag: DW_TAG_member, name: "headers", scope: !3894, file: !3874, line: 321, baseType: !3897, size: 64)
!3897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3898, size: 64)
!3898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3899, size: 64)
!3899 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "devlink_dpipe_header", file: !3874, line: 170, size: 256, elements: !3900)
!3900 = !{!3901, !3902, !3903, !3916, !3917}
!3901 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3899, file: !3874, line: 171, baseType: !26, size: 64)
!3902 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3899, file: !3874, line: 172, baseType: !199, size: 32, offset: 64)
!3903 = !DIDerivedType(tag: DW_TAG_member, name: "fields", scope: !3899, file: !3874, line: 173, baseType: !3904, size: 64, offset: 128)
!3904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3905, size: 64)
!3905 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "devlink_dpipe_field", file: !3874, line: 154, size: 192, elements: !3906)
!3906 = !{!3907, !3908, !3909, !3910}
!3907 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3905, file: !3874, line: 155, baseType: !26, size: 64)
!3908 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3905, file: !3874, line: 156, baseType: !199, size: 32, offset: 64)
!3909 = !DIDerivedType(tag: DW_TAG_member, name: "bitwidth", scope: !3905, file: !3874, line: 157, baseType: !199, size: 32, offset: 96)
!3910 = !DIDerivedType(tag: DW_TAG_member, name: "mapping_type", scope: !3905, file: !3874, line: 158, baseType: !3911, size: 32, offset: 128)
!3911 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "devlink_dpipe_field_mapping_type", file: !3912, line: 541, baseType: !199, size: 32, elements: !3913)
!3912 = !DIFile(filename: "./include/uapi/linux/devlink.h", directory: "/home/lizy2001/genbc/linux")
!3913 = !{!3914, !3915}
!3914 = !DIEnumerator(name: "DEVLINK_DPIPE_FIELD_MAPPING_TYPE_NONE", value: 0, isUnsigned: true)
!3915 = !DIEnumerator(name: "DEVLINK_DPIPE_FIELD_MAPPING_TYPE_IFINDEX", value: 1, isUnsigned: true)
!3916 = !DIDerivedType(tag: DW_TAG_member, name: "fields_count", scope: !3899, file: !3874, line: 174, baseType: !199, size: 32, offset: 192)
!3917 = !DIDerivedType(tag: DW_TAG_member, name: "global", scope: !3899, file: !3874, line: 175, baseType: !304, size: 8, offset: 224)
!3918 = !DIDerivedType(tag: DW_TAG_member, name: "headers_count", scope: !3894, file: !3874, line: 322, baseType: !199, size: 32, offset: 64)
!3919 = !DIDerivedType(tag: DW_TAG_member, name: "trap_list", scope: !3881, file: !3874, line: 44, baseType: !30, size: 128, offset: 1280)
!3920 = !DIDerivedType(tag: DW_TAG_member, name: "trap_group_list", scope: !3881, file: !3874, line: 45, baseType: !30, size: 128, offset: 1408)
!3921 = !DIDerivedType(tag: DW_TAG_member, name: "trap_policer_list", scope: !3881, file: !3874, line: 46, baseType: !30, size: 128, offset: 1536)
!3922 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3881, file: !3874, line: 47, baseType: !3923, size: 64, offset: 1664)
!3923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3924, size: 64)
!3924 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3925)
!3925 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "devlink_ops", file: !3874, line: 1159, size: 2432, elements: !3926)
!3926 = !{!3927, !3928, !3929, !3930, !3947, !3951, !3961, !3965, !3969, !3988, !3992, !3996, !4000, !4005, !4009, !4013, !4014, !4018, !4022, !4026, !4030, !4034, !4038, !4047, !4051, !4057, !4067, !4092, !4096, !4100, !4112, !4127, !4131, !4135, !4139, !4143, !4147, !4151}
!3927 = !DIDerivedType(tag: DW_TAG_member, name: "supported_flash_update_params", scope: !3925, file: !3874, line: 1165, baseType: !229, size: 32)
!3928 = !DIDerivedType(tag: DW_TAG_member, name: "reload_actions", scope: !3925, file: !3874, line: 1166, baseType: !135, size: 64, offset: 64)
!3929 = !DIDerivedType(tag: DW_TAG_member, name: "reload_limits", scope: !3925, file: !3874, line: 1167, baseType: !135, size: 64, offset: 128)
!3930 = !DIDerivedType(tag: DW_TAG_member, name: "reload_down", scope: !3925, file: !3874, line: 1168, baseType: !3931, size: 64, offset: 192)
!3931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3932, size: 64)
!3932 = !DISubroutineType(types: !3933)
!3933 = !{!6, !3880, !304, !3934, !3941, !2496}
!3934 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "devlink_reload_action", file: !3912, line: 304, baseType: !199, size: 32, elements: !3935)
!3935 = !{!3936, !3937, !3938, !3939, !3940}
!3936 = !DIEnumerator(name: "DEVLINK_RELOAD_ACTION_UNSPEC", value: 0, isUnsigned: true)
!3937 = !DIEnumerator(name: "DEVLINK_RELOAD_ACTION_DRIVER_REINIT", value: 1, isUnsigned: true)
!3938 = !DIEnumerator(name: "DEVLINK_RELOAD_ACTION_FW_ACTIVATE", value: 2, isUnsigned: true)
!3939 = !DIEnumerator(name: "__DEVLINK_RELOAD_ACTION_MAX", value: 3, isUnsigned: true)
!3940 = !DIEnumerator(name: "DEVLINK_RELOAD_ACTION_MAX", value: 2, isUnsigned: true)
!3941 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "devlink_reload_limit", file: !3912, line: 314, baseType: !199, size: 32, elements: !3942)
!3942 = !{!3943, !3944, !3945, !3946}
!3943 = !DIEnumerator(name: "DEVLINK_RELOAD_LIMIT_UNSPEC", value: 0, isUnsigned: true)
!3944 = !DIEnumerator(name: "DEVLINK_RELOAD_LIMIT_NO_RESET", value: 1, isUnsigned: true)
!3945 = !DIEnumerator(name: "__DEVLINK_RELOAD_LIMIT_MAX", value: 2, isUnsigned: true)
!3946 = !DIEnumerator(name: "DEVLINK_RELOAD_LIMIT_MAX", value: 1, isUnsigned: true)
!3947 = !DIDerivedType(tag: DW_TAG_member, name: "reload_up", scope: !3925, file: !3874, line: 1172, baseType: !3948, size: 64, offset: 256)
!3948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3949, size: 64)
!3949 = !DISubroutineType(types: !3950)
!3950 = !{!6, !3880, !3934, !3941, !1467, !2496}
!3951 = !DIDerivedType(tag: DW_TAG_member, name: "port_type_set", scope: !3925, file: !3874, line: 1175, baseType: !3952, size: 64, offset: 320)
!3952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3953, size: 64)
!3953 = !DISubroutineType(types: !3954)
!3954 = !{!6, !3872, !3955}
!3955 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "devlink_port_type", file: !3912, line: 134, baseType: !199, size: 32, elements: !3956)
!3956 = !{!3957, !3958, !3959, !3960}
!3957 = !DIEnumerator(name: "DEVLINK_PORT_TYPE_NOTSET", value: 0, isUnsigned: true)
!3958 = !DIEnumerator(name: "DEVLINK_PORT_TYPE_AUTO", value: 1, isUnsigned: true)
!3959 = !DIEnumerator(name: "DEVLINK_PORT_TYPE_ETH", value: 2, isUnsigned: true)
!3960 = !DIEnumerator(name: "DEVLINK_PORT_TYPE_IB", value: 3, isUnsigned: true)
!3961 = !DIDerivedType(tag: DW_TAG_member, name: "port_split", scope: !3925, file: !3874, line: 1177, baseType: !3962, size: 64, offset: 384)
!3962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3963, size: 64)
!3963 = !DISubroutineType(types: !3964)
!3964 = !{!6, !3880, !199, !199, !2496}
!3965 = !DIDerivedType(tag: DW_TAG_member, name: "port_unsplit", scope: !3925, file: !3874, line: 1179, baseType: !3966, size: 64, offset: 448)
!3966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3967, size: 64)
!3967 = !DISubroutineType(types: !3968)
!3968 = !{!6, !3880, !199, !2496}
!3969 = !DIDerivedType(tag: DW_TAG_member, name: "sb_pool_get", scope: !3925, file: !3874, line: 1181, baseType: !3970, size: 64, offset: 512)
!3970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3971, size: 64)
!3971 = !DISubroutineType(types: !3972)
!3972 = !{!6, !3880, !199, !744, !3973}
!3973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3974, size: 64)
!3974 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "devlink_sb_pool_info", file: !3874, line: 140, size: 128, elements: !3975)
!3975 = !{!3976, !3981, !3982, !3987}
!3976 = !DIDerivedType(tag: DW_TAG_member, name: "pool_type", scope: !3974, file: !3874, line: 141, baseType: !3977, size: 32)
!3977 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "devlink_sb_pool_type", file: !3912, line: 141, baseType: !199, size: 32, elements: !3978)
!3978 = !{!3979, !3980}
!3979 = !DIEnumerator(name: "DEVLINK_SB_POOL_TYPE_INGRESS", value: 0, isUnsigned: true)
!3980 = !DIEnumerator(name: "DEVLINK_SB_POOL_TYPE_EGRESS", value: 1, isUnsigned: true)
!3981 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3974, file: !3874, line: 142, baseType: !229, size: 32, offset: 32)
!3982 = !DIDerivedType(tag: DW_TAG_member, name: "threshold_type", scope: !3974, file: !3874, line: 143, baseType: !3983, size: 32, offset: 64)
!3983 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "devlink_sb_threshold_type", file: !3912, line: 159, baseType: !199, size: 32, elements: !3984)
!3984 = !{!3985, !3986}
!3985 = !DIEnumerator(name: "DEVLINK_SB_THRESHOLD_TYPE_STATIC", value: 0, isUnsigned: true)
!3986 = !DIEnumerator(name: "DEVLINK_SB_THRESHOLD_TYPE_DYNAMIC", value: 1, isUnsigned: true)
!3987 = !DIDerivedType(tag: DW_TAG_member, name: "cell_size", scope: !3974, file: !3874, line: 144, baseType: !229, size: 32, offset: 96)
!3988 = !DIDerivedType(tag: DW_TAG_member, name: "sb_pool_set", scope: !3925, file: !3874, line: 1184, baseType: !3989, size: 64, offset: 576)
!3989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3990, size: 64)
!3990 = !DISubroutineType(types: !3991)
!3991 = !{!6, !3880, !199, !744, !229, !3983, !2496}
!3992 = !DIDerivedType(tag: DW_TAG_member, name: "sb_port_pool_get", scope: !3925, file: !3874, line: 1188, baseType: !3993, size: 64, offset: 640)
!3993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3994, size: 64)
!3994 = !DISubroutineType(types: !3995)
!3995 = !{!6, !3872, !199, !744, !1467}
!3996 = !DIDerivedType(tag: DW_TAG_member, name: "sb_port_pool_set", scope: !3925, file: !3874, line: 1191, baseType: !3997, size: 64, offset: 704)
!3997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3998, size: 64)
!3998 = !DISubroutineType(types: !3999)
!3999 = !{!6, !3872, !199, !744, !229, !2496}
!4000 = !DIDerivedType(tag: DW_TAG_member, name: "sb_tc_pool_bind_get", scope: !3925, file: !3874, line: 1194, baseType: !4001, size: 64, offset: 768)
!4001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4002, size: 64)
!4002 = !DISubroutineType(types: !4003)
!4003 = !{!6, !3872, !199, !744, !3977, !4004, !1467}
!4004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !744, size: 64)
!4005 = !DIDerivedType(tag: DW_TAG_member, name: "sb_tc_pool_bind_set", scope: !3925, file: !3874, line: 1199, baseType: !4006, size: 64, offset: 832)
!4006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4007, size: 64)
!4007 = !DISubroutineType(types: !4008)
!4008 = !{!6, !3872, !199, !744, !3977, !744, !229, !2496}
!4009 = !DIDerivedType(tag: DW_TAG_member, name: "sb_occ_snapshot", scope: !3925, file: !3874, line: 1205, baseType: !4010, size: 64, offset: 896)
!4010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4011, size: 64)
!4011 = !DISubroutineType(types: !4012)
!4012 = !{!6, !3880, !199}
!4013 = !DIDerivedType(tag: DW_TAG_member, name: "sb_occ_max_clear", scope: !3925, file: !3874, line: 1207, baseType: !4010, size: 64, offset: 960)
!4014 = !DIDerivedType(tag: DW_TAG_member, name: "sb_occ_port_pool_get", scope: !3925, file: !3874, line: 1209, baseType: !4015, size: 64, offset: 1024)
!4015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4016, size: 64)
!4016 = !DISubroutineType(types: !4017)
!4017 = !{!6, !3872, !199, !744, !1467, !1467}
!4018 = !DIDerivedType(tag: DW_TAG_member, name: "sb_occ_tc_port_bind_get", scope: !3925, file: !3874, line: 1212, baseType: !4019, size: 64, offset: 1088)
!4019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4020, size: 64)
!4020 = !DISubroutineType(types: !4021)
!4021 = !{!6, !3872, !199, !744, !3977, !1467, !1467}
!4022 = !DIDerivedType(tag: DW_TAG_member, name: "eswitch_mode_get", scope: !3925, file: !3874, line: 1218, baseType: !4023, size: 64, offset: 1152)
!4023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4024, size: 64)
!4024 = !DISubroutineType(types: !4025)
!4025 = !{!6, !3880, !4004}
!4026 = !DIDerivedType(tag: DW_TAG_member, name: "eswitch_mode_set", scope: !3925, file: !3874, line: 1219, baseType: !4027, size: 64, offset: 1216)
!4027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4028, size: 64)
!4028 = !DISubroutineType(types: !4029)
!4029 = !{!6, !3880, !744, !2496}
!4030 = !DIDerivedType(tag: DW_TAG_member, name: "eswitch_inline_mode_get", scope: !3925, file: !3874, line: 1221, baseType: !4031, size: 64, offset: 1280)
!4031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4032, size: 64)
!4032 = !DISubroutineType(types: !4033)
!4033 = !{!6, !3880, !2747}
!4034 = !DIDerivedType(tag: DW_TAG_member, name: "eswitch_inline_mode_set", scope: !3925, file: !3874, line: 1222, baseType: !4035, size: 64, offset: 1344)
!4035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4036, size: 64)
!4036 = !DISubroutineType(types: !4037)
!4037 = !{!6, !3880, !1403, !2496}
!4038 = !DIDerivedType(tag: DW_TAG_member, name: "eswitch_encap_mode_get", scope: !3925, file: !3874, line: 1224, baseType: !4039, size: 64, offset: 1408)
!4039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4040, size: 64)
!4040 = !DISubroutineType(types: !4041)
!4041 = !{!6, !3880, !4042}
!4042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4043, size: 64)
!4043 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "devlink_eswitch_encap_mode", file: !3912, line: 178, baseType: !199, size: 32, elements: !4044)
!4044 = !{!4045, !4046}
!4045 = !DIEnumerator(name: "DEVLINK_ESWITCH_ENCAP_MODE_NONE", value: 0, isUnsigned: true)
!4046 = !DIEnumerator(name: "DEVLINK_ESWITCH_ENCAP_MODE_BASIC", value: 1, isUnsigned: true)
!4047 = !DIDerivedType(tag: DW_TAG_member, name: "eswitch_encap_mode_set", scope: !3925, file: !3874, line: 1226, baseType: !4048, size: 64, offset: 1472)
!4048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4049, size: 64)
!4049 = !DISubroutineType(types: !4050)
!4050 = !{!6, !3880, !4043, !2496}
!4051 = !DIDerivedType(tag: DW_TAG_member, name: "info_get", scope: !3925, file: !3874, line: 1229, baseType: !4052, size: 64, offset: 1536)
!4052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4053, size: 64)
!4053 = !DISubroutineType(types: !4054)
!4054 = !{!6, !3880, !4055, !2496}
!4055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4056, size: 64)
!4056 = !DICompositeType(tag: DW_TAG_structure_type, name: "devlink_info_req", file: !3874, line: 586, flags: DIFlagFwdDecl)
!4057 = !DIDerivedType(tag: DW_TAG_member, name: "flash_update", scope: !3925, file: !3874, line: 1238, baseType: !4058, size: 64, offset: 1600)
!4058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4059, size: 64)
!4059 = !DISubroutineType(types: !4060)
!4060 = !{!6, !3880, !4061, !2496}
!4061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4062, size: 64)
!4062 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "devlink_flash_update_params", file: !3874, line: 576, size: 192, elements: !4063)
!4063 = !{!4064, !4065, !4066}
!4064 = !DIDerivedType(tag: DW_TAG_member, name: "file_name", scope: !4062, file: !3874, line: 577, baseType: !26, size: 64)
!4065 = !DIDerivedType(tag: DW_TAG_member, name: "component", scope: !4062, file: !3874, line: 578, baseType: !26, size: 64, offset: 64)
!4066 = !DIDerivedType(tag: DW_TAG_member, name: "overwrite_mask", scope: !4062, file: !3874, line: 579, baseType: !229, size: 32, offset: 128)
!4067 = !DIDerivedType(tag: DW_TAG_member, name: "trap_init", scope: !3925, file: !3874, line: 1249, baseType: !4068, size: 64, offset: 1664)
!4068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4069, size: 64)
!4069 = !DISubroutineType(types: !4070)
!4070 = !{!6, !3880, !4071, !159}
!4071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4072, size: 64)
!4072 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4073)
!4073 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "devlink_trap", file: !3874, line: 733, size: 256, elements: !4074)
!4074 = !{!4075, !4081, !4087, !4088, !4089, !4090, !4091}
!4075 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4073, file: !3874, line: 734, baseType: !4076, size: 32)
!4076 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "devlink_trap_type", file: !3912, line: 291, baseType: !199, size: 32, elements: !4077)
!4077 = !{!4078, !4079, !4080}
!4078 = !DIEnumerator(name: "DEVLINK_TRAP_TYPE_DROP", value: 0, isUnsigned: true)
!4079 = !DIEnumerator(name: "DEVLINK_TRAP_TYPE_EXCEPTION", value: 1, isUnsigned: true)
!4080 = !DIEnumerator(name: "DEVLINK_TRAP_TYPE_CONTROL", value: 2, isUnsigned: true)
!4081 = !DIDerivedType(tag: DW_TAG_member, name: "init_action", scope: !4073, file: !3874, line: 735, baseType: !4082, size: 32, offset: 32)
!4082 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "devlink_trap_action", file: !3912, line: 268, baseType: !199, size: 32, elements: !4083)
!4083 = !{!4084, !4085, !4086}
!4084 = !DIEnumerator(name: "DEVLINK_TRAP_ACTION_DROP", value: 0, isUnsigned: true)
!4085 = !DIEnumerator(name: "DEVLINK_TRAP_ACTION_TRAP", value: 1, isUnsigned: true)
!4086 = !DIEnumerator(name: "DEVLINK_TRAP_ACTION_MIRROR", value: 2, isUnsigned: true)
!4087 = !DIDerivedType(tag: DW_TAG_member, name: "generic", scope: !4073, file: !3874, line: 736, baseType: !304, size: 8, offset: 64)
!4088 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4073, file: !3874, line: 737, baseType: !744, size: 16, offset: 80)
!4089 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4073, file: !3874, line: 738, baseType: !26, size: 64, offset: 128)
!4090 = !DIDerivedType(tag: DW_TAG_member, name: "init_group_id", scope: !4073, file: !3874, line: 739, baseType: !744, size: 16, offset: 192)
!4091 = !DIDerivedType(tag: DW_TAG_member, name: "metadata_cap", scope: !4073, file: !3874, line: 740, baseType: !229, size: 32, offset: 224)
!4092 = !DIDerivedType(tag: DW_TAG_member, name: "trap_fini", scope: !3925, file: !3874, line: 1257, baseType: !4093, size: 64, offset: 1728)
!4093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4094, size: 64)
!4094 = !DISubroutineType(types: !4095)
!4095 = !{null, !3880, !4071, !159}
!4096 = !DIDerivedType(tag: DW_TAG_member, name: "trap_action_set", scope: !3925, file: !3874, line: 1262, baseType: !4097, size: 64, offset: 1792)
!4097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4098, size: 64)
!4098 = !DISubroutineType(types: !4099)
!4099 = !{!6, !3880, !4071, !4082, !2496}
!4100 = !DIDerivedType(tag: DW_TAG_member, name: "trap_group_init", scope: !3925, file: !3874, line: 1272, baseType: !4101, size: 64, offset: 1856)
!4101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4102, size: 64)
!4102 = !DISubroutineType(types: !4103)
!4103 = !{!6, !3880, !4104}
!4104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4105, size: 64)
!4105 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4106)
!4106 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "devlink_trap_group", file: !3874, line: 710, size: 128, elements: !4107)
!4107 = !{!4108, !4109, !4110, !4111}
!4108 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4106, file: !3874, line: 711, baseType: !26, size: 64)
!4109 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4106, file: !3874, line: 712, baseType: !744, size: 16, offset: 64)
!4110 = !DIDerivedType(tag: DW_TAG_member, name: "generic", scope: !4106, file: !3874, line: 713, baseType: !304, size: 8, offset: 80)
!4111 = !DIDerivedType(tag: DW_TAG_member, name: "init_policer_id", scope: !4106, file: !3874, line: 714, baseType: !229, size: 32, offset: 96)
!4112 = !DIDerivedType(tag: DW_TAG_member, name: "trap_group_set", scope: !3925, file: !3874, line: 1280, baseType: !4113, size: 64, offset: 1920)
!4113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4114, size: 64)
!4114 = !DISubroutineType(types: !4115)
!4115 = !{!6, !3880, !4104, !4116, !2496}
!4116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4117, size: 64)
!4117 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4118)
!4118 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "devlink_trap_policer", file: !3874, line: 690, size: 448, elements: !4119)
!4119 = !{!4120, !4121, !4122, !4123, !4124, !4125, !4126}
!4120 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4118, file: !3874, line: 691, baseType: !229, size: 32)
!4121 = !DIDerivedType(tag: DW_TAG_member, name: "init_rate", scope: !4118, file: !3874, line: 692, baseType: !235, size: 64, offset: 64)
!4122 = !DIDerivedType(tag: DW_TAG_member, name: "init_burst", scope: !4118, file: !3874, line: 693, baseType: !235, size: 64, offset: 128)
!4123 = !DIDerivedType(tag: DW_TAG_member, name: "max_rate", scope: !4118, file: !3874, line: 694, baseType: !235, size: 64, offset: 192)
!4124 = !DIDerivedType(tag: DW_TAG_member, name: "min_rate", scope: !4118, file: !3874, line: 695, baseType: !235, size: 64, offset: 256)
!4125 = !DIDerivedType(tag: DW_TAG_member, name: "max_burst", scope: !4118, file: !3874, line: 696, baseType: !235, size: 64, offset: 320)
!4126 = !DIDerivedType(tag: DW_TAG_member, name: "min_burst", scope: !4118, file: !3874, line: 697, baseType: !235, size: 64, offset: 384)
!4127 = !DIDerivedType(tag: DW_TAG_member, name: "trap_group_action_set", scope: !3925, file: !3874, line: 1290, baseType: !4128, size: 64, offset: 1984)
!4128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4129, size: 64)
!4129 = !DISubroutineType(types: !4130)
!4130 = !{!6, !3880, !4104, !4082, !2496}
!4131 = !DIDerivedType(tag: DW_TAG_member, name: "trap_policer_init", scope: !3925, file: !3874, line: 1300, baseType: !4132, size: 64, offset: 2048)
!4132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4133, size: 64)
!4133 = !DISubroutineType(types: !4134)
!4134 = !{!6, !3880, !4116}
!4135 = !DIDerivedType(tag: DW_TAG_member, name: "trap_policer_fini", scope: !3925, file: !3874, line: 1308, baseType: !4136, size: 64, offset: 2112)
!4136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4137, size: 64)
!4137 = !DISubroutineType(types: !4138)
!4138 = !{null, !3880, !4116}
!4139 = !DIDerivedType(tag: DW_TAG_member, name: "trap_policer_set", scope: !3925, file: !3874, line: 1313, baseType: !4140, size: 64, offset: 2176)
!4140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4141, size: 64)
!4141 = !DISubroutineType(types: !4142)
!4142 = !{!6, !3880, !4116, !235, !235, !2496}
!4143 = !DIDerivedType(tag: DW_TAG_member, name: "trap_policer_counter_get", scope: !3925, file: !3874, line: 1323, baseType: !4144, size: 64, offset: 2240)
!4144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4145, size: 64)
!4145 = !DISubroutineType(types: !4146)
!4146 = !{!6, !3880, !4116, !3572}
!4147 = !DIDerivedType(tag: DW_TAG_member, name: "port_function_hw_addr_get", scope: !3925, file: !3874, line: 1335, baseType: !4148, size: 64, offset: 2304)
!4148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4149, size: 64)
!4149 = !DISubroutineType(types: !4150)
!4150 = !{!6, !3880, !3872, !2747, !540, !2496}
!4151 = !DIDerivedType(tag: DW_TAG_member, name: "port_function_hw_addr_set", scope: !3925, file: !3874, line: 1345, baseType: !4152, size: 64, offset: 2368)
!4152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4153, size: 64)
!4153 = !DISubroutineType(types: !4154)
!4154 = !{!6, !3880, !3872, !4155, !6, !2496}
!4155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4156, size: 64)
!4156 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1403)
!4157 = !DIDerivedType(tag: DW_TAG_member, name: "snapshot_ids", scope: !3881, file: !3874, line: 48, baseType: !623, size: 128, offset: 1728)
!4158 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !3881, file: !3874, line: 49, baseType: !4159, size: 384, offset: 1856)
!4159 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "devlink_dev_stats", file: !3874, line: 26, size: 384, elements: !4160)
!4160 = !{!4161, !4163}
!4161 = !DIDerivedType(tag: DW_TAG_member, name: "reload_stats", scope: !4159, file: !3874, line: 27, baseType: !4162, size: 192)
!4162 = !DICompositeType(tag: DW_TAG_array_type, baseType: !229, size: 192, elements: !1668)
!4163 = !DIDerivedType(tag: DW_TAG_member, name: "remote_reload_stats", scope: !4159, file: !3874, line: 28, baseType: !4162, size: 192, offset: 192)
!4164 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3881, file: !3874, line: 50, baseType: !17, size: 64, offset: 2240)
!4165 = !DIDerivedType(tag: DW_TAG_member, name: "_net", scope: !3881, file: !3874, line: 51, baseType: !2428, size: 64, offset: 2304)
!4166 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3881, file: !3874, line: 52, baseType: !558, size: 192, offset: 2368)
!4167 = !DIDerivedType(tag: DW_TAG_member, name: "reload_failed", scope: !3881, file: !3874, line: 55, baseType: !1403, size: 1, offset: 2560, flags: DIFlagBitField, extraData: i64 2560)
!4168 = !DIDerivedType(tag: DW_TAG_member, name: "reload_enabled", scope: !3881, file: !3874, line: 56, baseType: !1403, size: 1, offset: 2561, flags: DIFlagBitField, extraData: i64 2560)
!4169 = !DIDerivedType(tag: DW_TAG_member, name: "registered", scope: !3881, file: !3874, line: 57, baseType: !1403, size: 1, offset: 2562, flags: DIFlagBitField, extraData: i64 2560)
!4170 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !3881, file: !3874, line: 58, baseType: !4171, align: 256, offset: 2816)
!4171 = !DICompositeType(tag: DW_TAG_array_type, baseType: !28, elements: !1932)
!4172 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !3873, file: !3874, line: 124, baseType: !199, size: 32, offset: 448)
!4173 = !DIDerivedType(tag: DW_TAG_member, name: "registered", scope: !3873, file: !3874, line: 125, baseType: !304, size: 8, offset: 480)
!4174 = !DIDerivedType(tag: DW_TAG_member, name: "type_lock", scope: !3873, file: !3874, line: 126, baseType: !44, offset: 488)
!4175 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3873, file: !3874, line: 129, baseType: !3955, size: 32, offset: 512)
!4176 = !DIDerivedType(tag: DW_TAG_member, name: "desired_type", scope: !3873, file: !3874, line: 130, baseType: !3955, size: 32, offset: 544)
!4177 = !DIDerivedType(tag: DW_TAG_member, name: "type_dev", scope: !3873, file: !3874, line: 131, baseType: !159, size: 64, offset: 576)
!4178 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !3873, file: !3874, line: 132, baseType: !4179, size: 480, offset: 640)
!4179 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "devlink_port_attrs", file: !3874, line: 106, size: 480, elements: !4180)
!4180 = !{!4181, !4182, !4183, !4184, !4194, !4195}
!4181 = !DIDerivedType(tag: DW_TAG_member, name: "split", scope: !4179, file: !3874, line: 107, baseType: !1403, size: 1, flags: DIFlagBitField, extraData: i64 0)
!4182 = !DIDerivedType(tag: DW_TAG_member, name: "splittable", scope: !4179, file: !3874, line: 108, baseType: !1403, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!4183 = !DIDerivedType(tag: DW_TAG_member, name: "lanes", scope: !4179, file: !3874, line: 109, baseType: !229, size: 32, offset: 32)
!4184 = !DIDerivedType(tag: DW_TAG_member, name: "flavour", scope: !4179, file: !3874, line: 110, baseType: !4185, size: 32, offset: 64)
!4185 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "devlink_port_flavour", file: !3912, line: 183, baseType: !199, size: 32, elements: !4186)
!4186 = !{!4187, !4188, !4189, !4190, !4191, !4192, !4193}
!4187 = !DIEnumerator(name: "DEVLINK_PORT_FLAVOUR_PHYSICAL", value: 0, isUnsigned: true)
!4188 = !DIEnumerator(name: "DEVLINK_PORT_FLAVOUR_CPU", value: 1, isUnsigned: true)
!4189 = !DIEnumerator(name: "DEVLINK_PORT_FLAVOUR_DSA", value: 2, isUnsigned: true)
!4190 = !DIEnumerator(name: "DEVLINK_PORT_FLAVOUR_PCI_PF", value: 3, isUnsigned: true)
!4191 = !DIEnumerator(name: "DEVLINK_PORT_FLAVOUR_PCI_VF", value: 4, isUnsigned: true)
!4192 = !DIEnumerator(name: "DEVLINK_PORT_FLAVOUR_VIRTUAL", value: 5, isUnsigned: true)
!4193 = !DIEnumerator(name: "DEVLINK_PORT_FLAVOUR_UNUSED", value: 6, isUnsigned: true)
!4194 = !DIDerivedType(tag: DW_TAG_member, name: "switch_id", scope: !4179, file: !3874, line: 111, baseType: !2965, size: 264, offset: 96)
!4195 = !DIDerivedType(tag: DW_TAG_member, scope: !4179, file: !3874, line: 112, baseType: !4196, size: 96, offset: 384)
!4196 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4179, file: !3874, line: 112, size: 96, elements: !4197)
!4197 = !{!4198, !4203, !4209}
!4198 = !DIDerivedType(tag: DW_TAG_member, name: "phys", scope: !4196, file: !3874, line: 113, baseType: !4199, size: 64)
!4199 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "devlink_port_phys_attrs", file: !3874, line: 61, size: 64, elements: !4200)
!4200 = !{!4201, !4202}
!4201 = !DIDerivedType(tag: DW_TAG_member, name: "port_number", scope: !4199, file: !3874, line: 62, baseType: !229, size: 32)
!4202 = !DIDerivedType(tag: DW_TAG_member, name: "split_subport_number", scope: !4199, file: !3874, line: 66, baseType: !229, size: 32, offset: 32)
!4203 = !DIDerivedType(tag: DW_TAG_member, name: "pci_pf", scope: !4196, file: !3874, line: 114, baseType: !4204, size: 64)
!4204 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "devlink_port_pci_pf_attrs", file: !3874, line: 75, size: 64, elements: !4205)
!4205 = !{!4206, !4207, !4208}
!4206 = !DIDerivedType(tag: DW_TAG_member, name: "controller", scope: !4204, file: !3874, line: 76, baseType: !229, size: 32)
!4207 = !DIDerivedType(tag: DW_TAG_member, name: "pf", scope: !4204, file: !3874, line: 77, baseType: !744, size: 16, offset: 32)
!4208 = !DIDerivedType(tag: DW_TAG_member, name: "external", scope: !4204, file: !3874, line: 78, baseType: !1403, size: 1, offset: 48, flags: DIFlagBitField, extraData: i64 48)
!4209 = !DIDerivedType(tag: DW_TAG_member, name: "pci_vf", scope: !4196, file: !3874, line: 115, baseType: !4210, size: 96)
!4210 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "devlink_port_pci_vf_attrs", file: !3874, line: 88, size: 96, elements: !4211)
!4211 = !{!4212, !4213, !4214, !4215}
!4212 = !DIDerivedType(tag: DW_TAG_member, name: "controller", scope: !4210, file: !3874, line: 89, baseType: !229, size: 32)
!4213 = !DIDerivedType(tag: DW_TAG_member, name: "pf", scope: !4210, file: !3874, line: 90, baseType: !744, size: 16, offset: 32)
!4214 = !DIDerivedType(tag: DW_TAG_member, name: "vf", scope: !4210, file: !3874, line: 91, baseType: !744, size: 16, offset: 48)
!4215 = !DIDerivedType(tag: DW_TAG_member, name: "external", scope: !4210, file: !3874, line: 92, baseType: !1403, size: 1, offset: 64, flags: DIFlagBitField, extraData: i64 64)
!4216 = !DIDerivedType(tag: DW_TAG_member, name: "attrs_set", scope: !3873, file: !3874, line: 133, baseType: !1403, size: 1, offset: 1120, flags: DIFlagBitField, extraData: i64 1120)
!4217 = !DIDerivedType(tag: DW_TAG_member, name: "switch_port", scope: !3873, file: !3874, line: 134, baseType: !1403, size: 1, offset: 1121, flags: DIFlagBitField, extraData: i64 1120)
!4218 = !DIDerivedType(tag: DW_TAG_member, name: "type_warn_dw", scope: !3873, file: !3874, line: 135, baseType: !2562, size: 704, offset: 1152)
!4219 = !DIDerivedType(tag: DW_TAG_member, name: "reporter_list", scope: !3873, file: !3874, line: 136, baseType: !30, size: 128, offset: 1856)
!4220 = !DIDerivedType(tag: DW_TAG_member, name: "reporters_lock", scope: !3873, file: !3874, line: 137, baseType: !558, size: 192, offset: 1984)
!4221 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_tunnel_ctl", scope: !2259, file: !2171, line: 1487, baseType: !4222, size: 64, offset: 4288)
!4222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4223, size: 64)
!4223 = !DISubroutineType(types: !4224)
!4224 = !{!6, !2169, !4225, !6}
!4225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4226, size: 64)
!4226 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ip_tunnel_parm", file: !4227, line: 48, size: 416, elements: !4228)
!4227 = !DIFile(filename: "./include/uapi/linux/if_tunnel.h", directory: "/home/lizy2001/genbc/linux")
!4228 = !{!4229, !4230, !4231, !4232, !4233, !4234, !4235}
!4229 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4226, file: !4227, line: 49, baseType: !1943, size: 128)
!4230 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !4226, file: !4227, line: 50, baseType: !6, size: 32, offset: 128)
!4231 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !4226, file: !4227, line: 51, baseType: !2037, size: 16, offset: 160)
!4232 = !DIDerivedType(tag: DW_TAG_member, name: "o_flags", scope: !4226, file: !4227, line: 52, baseType: !2037, size: 16, offset: 176)
!4233 = !DIDerivedType(tag: DW_TAG_member, name: "i_key", scope: !4226, file: !4227, line: 53, baseType: !2019, size: 32, offset: 192)
!4234 = !DIDerivedType(tag: DW_TAG_member, name: "o_key", scope: !4226, file: !4227, line: 54, baseType: !2019, size: 32, offset: 224)
!4235 = !DIDerivedType(tag: DW_TAG_member, name: "iph", scope: !4226, file: !4227, line: 55, baseType: !4236, size: 160, offset: 256)
!4236 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iphdr", file: !4237, line: 86, size: 160, elements: !4238)
!4237 = !DIFile(filename: "./include/uapi/linux/ip.h", directory: "/home/lizy2001/genbc/linux")
!4238 = !{!4239, !4240, !4241, !4242, !4243, !4244, !4245, !4246, !4247, !4249, !4250}
!4239 = !DIDerivedType(tag: DW_TAG_member, name: "ihl", scope: !4236, file: !4237, line: 88, baseType: !1404, size: 4, flags: DIFlagBitField, extraData: i64 0)
!4240 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !4236, file: !4237, line: 89, baseType: !1404, size: 4, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!4241 = !DIDerivedType(tag: DW_TAG_member, name: "tos", scope: !4236, file: !4237, line: 96, baseType: !1404, size: 8, offset: 8)
!4242 = !DIDerivedType(tag: DW_TAG_member, name: "tot_len", scope: !4236, file: !4237, line: 97, baseType: !2037, size: 16, offset: 16)
!4243 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4236, file: !4237, line: 98, baseType: !2037, size: 16, offset: 32)
!4244 = !DIDerivedType(tag: DW_TAG_member, name: "frag_off", scope: !4236, file: !4237, line: 99, baseType: !2037, size: 16, offset: 48)
!4245 = !DIDerivedType(tag: DW_TAG_member, name: "ttl", scope: !4236, file: !4237, line: 100, baseType: !1404, size: 8, offset: 64)
!4246 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !4236, file: !4237, line: 101, baseType: !1404, size: 8, offset: 72)
!4247 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !4236, file: !4237, line: 102, baseType: !4248, size: 16, offset: 80)
!4248 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sum16", file: !2020, line: 36, baseType: !745)
!4249 = !DIDerivedType(tag: DW_TAG_member, name: "saddr", scope: !4236, file: !4237, line: 103, baseType: !2019, size: 32, offset: 96)
!4250 = !DIDerivedType(tag: DW_TAG_member, name: "daddr", scope: !4236, file: !4237, line: 104, baseType: !2019, size: 32, offset: 128)
!4251 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_peer_dev", scope: !2259, file: !2171, line: 1489, baseType: !4252, size: 64, offset: 4352)
!4252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4253, size: 64)
!4253 = !DISubroutineType(types: !4254)
!4254 = !{!2169, !2169}
!4255 = !DIDerivedType(tag: DW_TAG_member, name: "ethtool_ops", scope: !2170, file: !2171, line: 1917, baseType: !4256, size: 64, offset: 4032)
!4256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4257, size: 64)
!4257 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4258)
!4258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_ops", file: !4259, line: 421, size: 3904, elements: !4260)
!4259 = !DIFile(filename: "./include/linux/ethtool.h", directory: "/home/lizy2001/genbc/linux")
!4260 = !{!4261, !4262, !4284, !4285, !4297, !4309, !4313, !4317, !4321, !4322, !4323, !4381, !4382, !4394, !4395, !4425, !4426, !4442, !4446, !4455, !4466, !4470, !4483, !4487, !4497, !4507, !4508, !4509, !4510, !4514, !4515, !4619, !4623, !4633, !4637, !4638, !4639, !4643, !4648, !4652, !4656, !4672, !4676, !4688, !4692, !4693, !4708, !4720, !4721, !4737, !4738, !4752, !4756, !4760, !4761, !4800, !4806, !4817, !4818, !4819, !4820}
!4261 = !DIDerivedType(tag: DW_TAG_member, name: "supported_coalesce_params", scope: !4258, file: !4259, line: 422, baseType: !229, size: 32)
!4262 = !DIDerivedType(tag: DW_TAG_member, name: "get_drvinfo", scope: !4258, file: !4259, line: 423, baseType: !4263, size: 64, offset: 64)
!4263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4264, size: 64)
!4264 = !DISubroutineType(types: !4265)
!4265 = !{null, !2169, !4266}
!4266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4267, size: 64)
!4267 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_drvinfo", file: !4268, line: 177, size: 1568, elements: !4269)
!4268 = !DIFile(filename: "./include/uapi/linux/ethtool.h", directory: "/home/lizy2001/genbc/linux")
!4269 = !{!4270, !4271, !4273, !4274, !4275, !4276, !4277, !4279, !4280, !4281, !4282, !4283}
!4270 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !4267, file: !4268, line: 178, baseType: !231, size: 32)
!4271 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !4267, file: !4268, line: 179, baseType: !4272, size: 256, offset: 32)
!4272 = !DICompositeType(tag: DW_TAG_array_type, baseType: !28, size: 256, elements: !2645)
!4273 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !4267, file: !4268, line: 180, baseType: !4272, size: 256, offset: 288)
!4274 = !DIDerivedType(tag: DW_TAG_member, name: "fw_version", scope: !4267, file: !4268, line: 181, baseType: !4272, size: 256, offset: 544)
!4275 = !DIDerivedType(tag: DW_TAG_member, name: "bus_info", scope: !4267, file: !4268, line: 182, baseType: !4272, size: 256, offset: 800)
!4276 = !DIDerivedType(tag: DW_TAG_member, name: "erom_version", scope: !4267, file: !4268, line: 183, baseType: !4272, size: 256, offset: 1056)
!4277 = !DIDerivedType(tag: DW_TAG_member, name: "reserved2", scope: !4267, file: !4268, line: 184, baseType: !4278, size: 96, offset: 1312)
!4278 = !DICompositeType(tag: DW_TAG_array_type, baseType: !28, size: 96, elements: !2654)
!4279 = !DIDerivedType(tag: DW_TAG_member, name: "n_priv_flags", scope: !4267, file: !4268, line: 185, baseType: !231, size: 32, offset: 1408)
!4280 = !DIDerivedType(tag: DW_TAG_member, name: "n_stats", scope: !4267, file: !4268, line: 186, baseType: !231, size: 32, offset: 1440)
!4281 = !DIDerivedType(tag: DW_TAG_member, name: "testinfo_len", scope: !4267, file: !4268, line: 187, baseType: !231, size: 32, offset: 1472)
!4282 = !DIDerivedType(tag: DW_TAG_member, name: "eedump_len", scope: !4267, file: !4268, line: 188, baseType: !231, size: 32, offset: 1504)
!4283 = !DIDerivedType(tag: DW_TAG_member, name: "regdump_len", scope: !4267, file: !4268, line: 189, baseType: !231, size: 32, offset: 1536)
!4284 = !DIDerivedType(tag: DW_TAG_member, name: "get_regs_len", scope: !4258, file: !4259, line: 424, baseType: !2262, size: 64, offset: 128)
!4285 = !DIDerivedType(tag: DW_TAG_member, name: "get_regs", scope: !4258, file: !4259, line: 425, baseType: !4286, size: 64, offset: 192)
!4286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4287, size: 64)
!4287 = !DISubroutineType(types: !4288)
!4288 = !{null, !2169, !4289, !159}
!4289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4290, size: 64)
!4290 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_regs", file: !4268, line: 310, size: 96, elements: !4291)
!4291 = !{!4292, !4293, !4294, !4295}
!4292 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !4290, file: !4268, line: 311, baseType: !231, size: 32)
!4293 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !4290, file: !4268, line: 312, baseType: !231, size: 32, offset: 32)
!4294 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !4290, file: !4268, line: 313, baseType: !231, size: 32, offset: 64)
!4295 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4290, file: !4268, line: 314, baseType: !4296, offset: 96)
!4296 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1404, elements: !1932)
!4297 = !DIDerivedType(tag: DW_TAG_member, name: "get_wol", scope: !4258, file: !4259, line: 426, baseType: !4298, size: 64, offset: 256)
!4298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4299, size: 64)
!4299 = !DISubroutineType(types: !4300)
!4300 = !{null, !2169, !4301}
!4301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4302, size: 64)
!4302 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_wolinfo", file: !4268, line: 203, size: 160, elements: !4303)
!4303 = !{!4304, !4305, !4306, !4307}
!4304 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !4302, file: !4268, line: 204, baseType: !231, size: 32)
!4305 = !DIDerivedType(tag: DW_TAG_member, name: "supported", scope: !4302, file: !4268, line: 205, baseType: !231, size: 32, offset: 32)
!4306 = !DIDerivedType(tag: DW_TAG_member, name: "wolopts", scope: !4302, file: !4268, line: 206, baseType: !231, size: 32, offset: 64)
!4307 = !DIDerivedType(tag: DW_TAG_member, name: "sopass", scope: !4302, file: !4268, line: 207, baseType: !4308, size: 48, offset: 96)
!4308 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1404, size: 48, elements: !1668)
!4309 = !DIDerivedType(tag: DW_TAG_member, name: "set_wol", scope: !4258, file: !4259, line: 427, baseType: !4310, size: 64, offset: 320)
!4310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4311, size: 64)
!4311 = !DISubroutineType(types: !4312)
!4312 = !{!6, !2169, !4301}
!4313 = !DIDerivedType(tag: DW_TAG_member, name: "get_msglevel", scope: !4258, file: !4259, line: 428, baseType: !4314, size: 64, offset: 384)
!4314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4315, size: 64)
!4315 = !DISubroutineType(types: !4316)
!4316 = !{!229, !2169}
!4317 = !DIDerivedType(tag: DW_TAG_member, name: "set_msglevel", scope: !4258, file: !4259, line: 429, baseType: !4318, size: 64, offset: 448)
!4318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4319, size: 64)
!4319 = !DISubroutineType(types: !4320)
!4320 = !{null, !2169, !229}
!4321 = !DIDerivedType(tag: DW_TAG_member, name: "nway_reset", scope: !4258, file: !4259, line: 430, baseType: !2262, size: 64, offset: 512)
!4322 = !DIDerivedType(tag: DW_TAG_member, name: "get_link", scope: !4258, file: !4259, line: 431, baseType: !4314, size: 64, offset: 576)
!4323 = !DIDerivedType(tag: DW_TAG_member, name: "get_link_ext_state", scope: !4258, file: !4259, line: 432, baseType: !4324, size: 64, offset: 640)
!4324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4325, size: 64)
!4325 = !DISubroutineType(types: !4326)
!4326 = !{!6, !2169, !4327}
!4327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4328, size: 64)
!4328 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_link_ext_state_info", file: !4259, line: 93, size: 64, elements: !4329)
!4329 = !{!4330, !4343}
!4330 = !DIDerivedType(tag: DW_TAG_member, name: "link_ext_state", scope: !4328, file: !4259, line: 94, baseType: !4331, size: 32)
!4331 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_state", file: !4268, line: 585, baseType: !199, size: 32, elements: !4332)
!4332 = !{!4333, !4334, !4335, !4336, !4337, !4338, !4339, !4340, !4341, !4342}
!4333 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_AUTONEG", value: 0, isUnsigned: true)
!4334 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_LINK_TRAINING_FAILURE", value: 1, isUnsigned: true)
!4335 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_LINK_LOGICAL_MISMATCH", value: 2, isUnsigned: true)
!4336 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_BAD_SIGNAL_INTEGRITY", value: 3, isUnsigned: true)
!4337 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_NO_CABLE", value: 4, isUnsigned: true)
!4338 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_CABLE_ISSUE", value: 5, isUnsigned: true)
!4339 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_EEPROM_ISSUE", value: 6, isUnsigned: true)
!4340 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_CALIBRATION_FAILURE", value: 7, isUnsigned: true)
!4341 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_POWER_BUDGET_EXCEEDED", value: 8, isUnsigned: true)
!4342 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_OVERHEAT", value: 9, isUnsigned: true)
!4343 = !DIDerivedType(tag: DW_TAG_member, scope: !4328, file: !4259, line: 95, baseType: !4344, size: 32, offset: 32)
!4344 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4328, file: !4259, line: 95, size: 32, elements: !4345)
!4345 = !{!4346, !4355, !4362, !4370, !4375, !4380}
!4346 = !DIDerivedType(tag: DW_TAG_member, name: "autoneg", scope: !4344, file: !4259, line: 96, baseType: !4347, size: 32)
!4347 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_substate_autoneg", file: !4268, line: 602, baseType: !199, size: 32, elements: !4348)
!4348 = !{!4349, !4350, !4351, !4352, !4353, !4354}
!4349 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_NO_PARTNER_DETECTED", value: 1, isUnsigned: true)
!4350 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_ACK_NOT_RECEIVED", value: 2, isUnsigned: true)
!4351 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_NEXT_PAGE_EXCHANGE_FAILED", value: 3, isUnsigned: true)
!4352 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_NO_PARTNER_DETECTED_FORCE_MODE", value: 4, isUnsigned: true)
!4353 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_FEC_MISMATCH_DURING_OVERRIDE", value: 5, isUnsigned: true)
!4354 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_NO_HCD", value: 6, isUnsigned: true)
!4355 = !DIDerivedType(tag: DW_TAG_member, name: "link_training", scope: !4344, file: !4259, line: 97, baseType: !4356, size: 32)
!4356 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_substate_link_training", file: !4268, line: 615, baseType: !199, size: 32, elements: !4357)
!4357 = !{!4358, !4359, !4360, !4361}
!4358 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LT_KR_FRAME_LOCK_NOT_ACQUIRED", value: 1, isUnsigned: true)
!4359 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LT_KR_LINK_INHIBIT_TIMEOUT", value: 2, isUnsigned: true)
!4360 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LT_KR_LINK_PARTNER_DID_NOT_SET_RECEIVER_READY", value: 3, isUnsigned: true)
!4361 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LT_REMOTE_FAULT", value: 4, isUnsigned: true)
!4362 = !DIDerivedType(tag: DW_TAG_member, name: "link_logical_mismatch", scope: !4344, file: !4259, line: 98, baseType: !4363, size: 32)
!4363 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_substate_link_logical_mismatch", file: !4268, line: 626, baseType: !199, size: 32, elements: !4364)
!4364 = !{!4365, !4366, !4367, !4368, !4369}
!4365 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LLM_PCS_DID_NOT_ACQUIRE_BLOCK_LOCK", value: 1, isUnsigned: true)
!4366 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LLM_PCS_DID_NOT_ACQUIRE_AM_LOCK", value: 2, isUnsigned: true)
!4367 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LLM_PCS_DID_NOT_GET_ALIGN_STATUS", value: 3, isUnsigned: true)
!4368 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LLM_FC_FEC_IS_NOT_LOCKED", value: 4, isUnsigned: true)
!4369 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LLM_RS_FEC_IS_NOT_LOCKED", value: 5, isUnsigned: true)
!4370 = !DIDerivedType(tag: DW_TAG_member, name: "bad_signal_integrity", scope: !4344, file: !4259, line: 99, baseType: !4371, size: 32)
!4371 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_substate_bad_signal_integrity", file: !4268, line: 638, baseType: !199, size: 32, elements: !4372)
!4372 = !{!4373, !4374}
!4373 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_BSI_LARGE_NUMBER_OF_PHYSICAL_ERRORS", value: 1, isUnsigned: true)
!4374 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_BSI_UNSUPPORTED_RATE", value: 2, isUnsigned: true)
!4375 = !DIDerivedType(tag: DW_TAG_member, name: "cable_issue", scope: !4344, file: !4259, line: 100, baseType: !4376, size: 32)
!4376 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_substate_cable_issue", file: !4268, line: 647, baseType: !199, size: 32, elements: !4377)
!4377 = !{!4378, !4379}
!4378 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_CI_UNSUPPORTED_CABLE", value: 1, isUnsigned: true)
!4379 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_CI_CABLE_TEST_FAILURE", value: 2, isUnsigned: true)
!4380 = !DIDerivedType(tag: DW_TAG_member, name: "__link_ext_substate", scope: !4344, file: !4259, line: 101, baseType: !1403, size: 8)
!4381 = !DIDerivedType(tag: DW_TAG_member, name: "get_eeprom_len", scope: !4258, file: !4259, line: 434, baseType: !2262, size: 64, offset: 704)
!4382 = !DIDerivedType(tag: DW_TAG_member, name: "get_eeprom", scope: !4258, file: !4259, line: 435, baseType: !4383, size: 64, offset: 768)
!4383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4384, size: 64)
!4384 = !DISubroutineType(types: !4385)
!4385 = !{!6, !2169, !4386, !2747}
!4386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4387, size: 64)
!4387 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_eeprom", file: !4268, line: 335, size: 128, elements: !4388)
!4388 = !{!4389, !4390, !4391, !4392, !4393}
!4389 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !4387, file: !4268, line: 336, baseType: !231, size: 32)
!4390 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !4387, file: !4268, line: 337, baseType: !231, size: 32, offset: 32)
!4391 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !4387, file: !4268, line: 338, baseType: !231, size: 32, offset: 64)
!4392 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !4387, file: !4268, line: 339, baseType: !231, size: 32, offset: 96)
!4393 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4387, file: !4268, line: 340, baseType: !4296, offset: 128)
!4394 = !DIDerivedType(tag: DW_TAG_member, name: "set_eeprom", scope: !4258, file: !4259, line: 437, baseType: !4383, size: 64, offset: 832)
!4395 = !DIDerivedType(tag: DW_TAG_member, name: "get_coalesce", scope: !4258, file: !4259, line: 439, baseType: !4396, size: 64, offset: 896)
!4396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4397, size: 64)
!4397 = !DISubroutineType(types: !4398)
!4398 = !{!6, !2169, !4399}
!4399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4400, size: 64)
!4400 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_coalesce", file: !4268, line: 462, size: 736, elements: !4401)
!4401 = !{!4402, !4403, !4404, !4405, !4406, !4407, !4408, !4409, !4410, !4411, !4412, !4413, !4414, !4415, !4416, !4417, !4418, !4419, !4420, !4421, !4422, !4423, !4424}
!4402 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !4400, file: !4268, line: 463, baseType: !231, size: 32)
!4403 = !DIDerivedType(tag: DW_TAG_member, name: "rx_coalesce_usecs", scope: !4400, file: !4268, line: 464, baseType: !231, size: 32, offset: 32)
!4404 = !DIDerivedType(tag: DW_TAG_member, name: "rx_max_coalesced_frames", scope: !4400, file: !4268, line: 465, baseType: !231, size: 32, offset: 64)
!4405 = !DIDerivedType(tag: DW_TAG_member, name: "rx_coalesce_usecs_irq", scope: !4400, file: !4268, line: 466, baseType: !231, size: 32, offset: 96)
!4406 = !DIDerivedType(tag: DW_TAG_member, name: "rx_max_coalesced_frames_irq", scope: !4400, file: !4268, line: 467, baseType: !231, size: 32, offset: 128)
!4407 = !DIDerivedType(tag: DW_TAG_member, name: "tx_coalesce_usecs", scope: !4400, file: !4268, line: 468, baseType: !231, size: 32, offset: 160)
!4408 = !DIDerivedType(tag: DW_TAG_member, name: "tx_max_coalesced_frames", scope: !4400, file: !4268, line: 469, baseType: !231, size: 32, offset: 192)
!4409 = !DIDerivedType(tag: DW_TAG_member, name: "tx_coalesce_usecs_irq", scope: !4400, file: !4268, line: 470, baseType: !231, size: 32, offset: 224)
!4410 = !DIDerivedType(tag: DW_TAG_member, name: "tx_max_coalesced_frames_irq", scope: !4400, file: !4268, line: 471, baseType: !231, size: 32, offset: 256)
!4411 = !DIDerivedType(tag: DW_TAG_member, name: "stats_block_coalesce_usecs", scope: !4400, file: !4268, line: 472, baseType: !231, size: 32, offset: 288)
!4412 = !DIDerivedType(tag: DW_TAG_member, name: "use_adaptive_rx_coalesce", scope: !4400, file: !4268, line: 473, baseType: !231, size: 32, offset: 320)
!4413 = !DIDerivedType(tag: DW_TAG_member, name: "use_adaptive_tx_coalesce", scope: !4400, file: !4268, line: 474, baseType: !231, size: 32, offset: 352)
!4414 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_rate_low", scope: !4400, file: !4268, line: 475, baseType: !231, size: 32, offset: 384)
!4415 = !DIDerivedType(tag: DW_TAG_member, name: "rx_coalesce_usecs_low", scope: !4400, file: !4268, line: 476, baseType: !231, size: 32, offset: 416)
!4416 = !DIDerivedType(tag: DW_TAG_member, name: "rx_max_coalesced_frames_low", scope: !4400, file: !4268, line: 477, baseType: !231, size: 32, offset: 448)
!4417 = !DIDerivedType(tag: DW_TAG_member, name: "tx_coalesce_usecs_low", scope: !4400, file: !4268, line: 478, baseType: !231, size: 32, offset: 480)
!4418 = !DIDerivedType(tag: DW_TAG_member, name: "tx_max_coalesced_frames_low", scope: !4400, file: !4268, line: 479, baseType: !231, size: 32, offset: 512)
!4419 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_rate_high", scope: !4400, file: !4268, line: 480, baseType: !231, size: 32, offset: 544)
!4420 = !DIDerivedType(tag: DW_TAG_member, name: "rx_coalesce_usecs_high", scope: !4400, file: !4268, line: 481, baseType: !231, size: 32, offset: 576)
!4421 = !DIDerivedType(tag: DW_TAG_member, name: "rx_max_coalesced_frames_high", scope: !4400, file: !4268, line: 482, baseType: !231, size: 32, offset: 608)
!4422 = !DIDerivedType(tag: DW_TAG_member, name: "tx_coalesce_usecs_high", scope: !4400, file: !4268, line: 483, baseType: !231, size: 32, offset: 640)
!4423 = !DIDerivedType(tag: DW_TAG_member, name: "tx_max_coalesced_frames_high", scope: !4400, file: !4268, line: 484, baseType: !231, size: 32, offset: 672)
!4424 = !DIDerivedType(tag: DW_TAG_member, name: "rate_sample_interval", scope: !4400, file: !4268, line: 485, baseType: !231, size: 32, offset: 704)
!4425 = !DIDerivedType(tag: DW_TAG_member, name: "set_coalesce", scope: !4258, file: !4259, line: 440, baseType: !4396, size: 64, offset: 960)
!4426 = !DIDerivedType(tag: DW_TAG_member, name: "get_ringparam", scope: !4258, file: !4259, line: 441, baseType: !4427, size: 64, offset: 1024)
!4427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4428, size: 64)
!4428 = !DISubroutineType(types: !4429)
!4429 = !{null, !2169, !4430}
!4430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4431, size: 64)
!4431 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_ringparam", file: !4268, line: 513, size: 288, elements: !4432)
!4432 = !{!4433, !4434, !4435, !4436, !4437, !4438, !4439, !4440, !4441}
!4433 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !4431, file: !4268, line: 514, baseType: !231, size: 32)
!4434 = !DIDerivedType(tag: DW_TAG_member, name: "rx_max_pending", scope: !4431, file: !4268, line: 515, baseType: !231, size: 32, offset: 32)
!4435 = !DIDerivedType(tag: DW_TAG_member, name: "rx_mini_max_pending", scope: !4431, file: !4268, line: 516, baseType: !231, size: 32, offset: 64)
!4436 = !DIDerivedType(tag: DW_TAG_member, name: "rx_jumbo_max_pending", scope: !4431, file: !4268, line: 517, baseType: !231, size: 32, offset: 96)
!4437 = !DIDerivedType(tag: DW_TAG_member, name: "tx_max_pending", scope: !4431, file: !4268, line: 518, baseType: !231, size: 32, offset: 128)
!4438 = !DIDerivedType(tag: DW_TAG_member, name: "rx_pending", scope: !4431, file: !4268, line: 519, baseType: !231, size: 32, offset: 160)
!4439 = !DIDerivedType(tag: DW_TAG_member, name: "rx_mini_pending", scope: !4431, file: !4268, line: 520, baseType: !231, size: 32, offset: 192)
!4440 = !DIDerivedType(tag: DW_TAG_member, name: "rx_jumbo_pending", scope: !4431, file: !4268, line: 521, baseType: !231, size: 32, offset: 224)
!4441 = !DIDerivedType(tag: DW_TAG_member, name: "tx_pending", scope: !4431, file: !4268, line: 522, baseType: !231, size: 32, offset: 256)
!4442 = !DIDerivedType(tag: DW_TAG_member, name: "set_ringparam", scope: !4258, file: !4259, line: 443, baseType: !4443, size: 64, offset: 1088)
!4443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4444, size: 64)
!4444 = !DISubroutineType(types: !4445)
!4445 = !{!6, !2169, !4430}
!4446 = !DIDerivedType(tag: DW_TAG_member, name: "get_pause_stats", scope: !4258, file: !4259, line: 445, baseType: !4447, size: 64, offset: 1152)
!4447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4448, size: 64)
!4448 = !DISubroutineType(types: !4449)
!4449 = !{null, !2169, !4450}
!4450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4451, size: 64)
!4451 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_pause_stats", file: !4259, line: 260, size: 128, elements: !4452)
!4452 = !{!4453, !4454}
!4453 = !DIDerivedType(tag: DW_TAG_member, name: "tx_pause_frames", scope: !4451, file: !4259, line: 261, baseType: !235, size: 64)
!4454 = !DIDerivedType(tag: DW_TAG_member, name: "rx_pause_frames", scope: !4451, file: !4259, line: 262, baseType: !235, size: 64, offset: 64)
!4455 = !DIDerivedType(tag: DW_TAG_member, name: "get_pauseparam", scope: !4258, file: !4259, line: 447, baseType: !4456, size: 64, offset: 1216)
!4456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4457, size: 64)
!4457 = !DISubroutineType(types: !4458)
!4458 = !{null, !2169, !4459}
!4459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4460, size: 64)
!4460 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_pauseparam", file: !4268, line: 575, size: 128, elements: !4461)
!4461 = !{!4462, !4463, !4464, !4465}
!4462 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !4460, file: !4268, line: 576, baseType: !231, size: 32)
!4463 = !DIDerivedType(tag: DW_TAG_member, name: "autoneg", scope: !4460, file: !4268, line: 577, baseType: !231, size: 32, offset: 32)
!4464 = !DIDerivedType(tag: DW_TAG_member, name: "rx_pause", scope: !4460, file: !4268, line: 578, baseType: !231, size: 32, offset: 64)
!4465 = !DIDerivedType(tag: DW_TAG_member, name: "tx_pause", scope: !4460, file: !4268, line: 579, baseType: !231, size: 32, offset: 96)
!4466 = !DIDerivedType(tag: DW_TAG_member, name: "set_pauseparam", scope: !4258, file: !4259, line: 449, baseType: !4467, size: 64, offset: 1280)
!4467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4468, size: 64)
!4468 = !DISubroutineType(types: !4469)
!4469 = !{!6, !2169, !4459}
!4470 = !DIDerivedType(tag: DW_TAG_member, name: "self_test", scope: !4258, file: !4259, line: 451, baseType: !4471, size: 64, offset: 1344)
!4471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4472, size: 64)
!4472 = !DISubroutineType(types: !4473)
!4473 = !{null, !2169, !4474, !3572}
!4474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4475, size: 64)
!4475 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_test", file: !4268, line: 770, size: 128, elements: !4476)
!4476 = !{!4477, !4478, !4479, !4480, !4481}
!4477 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !4475, file: !4268, line: 771, baseType: !231, size: 32)
!4478 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4475, file: !4268, line: 772, baseType: !231, size: 32, offset: 32)
!4479 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !4475, file: !4268, line: 773, baseType: !231, size: 32, offset: 64)
!4480 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !4475, file: !4268, line: 774, baseType: !231, size: 32, offset: 96)
!4481 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4475, file: !4268, line: 775, baseType: !4482, offset: 128)
!4482 = !DICompositeType(tag: DW_TAG_array_type, baseType: !236, elements: !1932)
!4483 = !DIDerivedType(tag: DW_TAG_member, name: "get_strings", scope: !4258, file: !4259, line: 452, baseType: !4484, size: 64, offset: 1408)
!4484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4485, size: 64)
!4485 = !DISubroutineType(types: !4486)
!4486 = !{null, !2169, !229, !2747}
!4487 = !DIDerivedType(tag: DW_TAG_member, name: "set_phys_id", scope: !4258, file: !4259, line: 453, baseType: !4488, size: 64, offset: 1472)
!4488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4489, size: 64)
!4489 = !DISubroutineType(types: !4490)
!4490 = !{!6, !2169, !4491}
!4491 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_phys_id_state", file: !4259, line: 54, baseType: !199, size: 32, elements: !4492)
!4492 = !{!4493, !4494, !4495, !4496}
!4493 = !DIEnumerator(name: "ETHTOOL_ID_INACTIVE", value: 0, isUnsigned: true)
!4494 = !DIEnumerator(name: "ETHTOOL_ID_ACTIVE", value: 1, isUnsigned: true)
!4495 = !DIEnumerator(name: "ETHTOOL_ID_ON", value: 2, isUnsigned: true)
!4496 = !DIEnumerator(name: "ETHTOOL_ID_OFF", value: 3, isUnsigned: true)
!4497 = !DIDerivedType(tag: DW_TAG_member, name: "get_ethtool_stats", scope: !4258, file: !4259, line: 454, baseType: !4498, size: 64, offset: 1536)
!4498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4499, size: 64)
!4499 = !DISubroutineType(types: !4500)
!4500 = !{null, !2169, !4501, !3572}
!4501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4502, size: 64)
!4502 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_stats", file: !4268, line: 789, size: 64, elements: !4503)
!4503 = !{!4504, !4505, !4506}
!4504 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !4502, file: !4268, line: 790, baseType: !231, size: 32)
!4505 = !DIDerivedType(tag: DW_TAG_member, name: "n_stats", scope: !4502, file: !4268, line: 791, baseType: !231, size: 32, offset: 32)
!4506 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4502, file: !4268, line: 792, baseType: !4482, offset: 64)
!4507 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !4258, file: !4259, line: 456, baseType: !2262, size: 64, offset: 1600)
!4508 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !4258, file: !4259, line: 457, baseType: !2266, size: 64, offset: 1664)
!4509 = !DIDerivedType(tag: DW_TAG_member, name: "get_priv_flags", scope: !4258, file: !4259, line: 458, baseType: !4314, size: 64, offset: 1728)
!4510 = !DIDerivedType(tag: DW_TAG_member, name: "set_priv_flags", scope: !4258, file: !4259, line: 459, baseType: !4511, size: 64, offset: 1792)
!4511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4512, size: 64)
!4512 = !DISubroutineType(types: !4513)
!4513 = !{!6, !2169, !229}
!4514 = !DIDerivedType(tag: DW_TAG_member, name: "get_sset_count", scope: !4258, file: !4259, line: 460, baseType: !2416, size: 64, offset: 1856)
!4515 = !DIDerivedType(tag: DW_TAG_member, name: "get_rxnfc", scope: !4258, file: !4259, line: 461, baseType: !4516, size: 64, offset: 1920)
!4516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4517, size: 64)
!4517 = !DISubroutineType(types: !4518)
!4518 = !{!6, !2169, !4519, !1467}
!4519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4520, size: 64)
!4520 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_rxnfc", file: !4268, line: 1088, size: 1536, elements: !4521)
!4521 = !{!4522, !4523, !4524, !4525, !4612, !4617}
!4522 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !4520, file: !4268, line: 1089, baseType: !231, size: 32)
!4523 = !DIDerivedType(tag: DW_TAG_member, name: "flow_type", scope: !4520, file: !4268, line: 1090, baseType: !231, size: 32, offset: 32)
!4524 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4520, file: !4268, line: 1091, baseType: !236, size: 64, offset: 64)
!4525 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !4520, file: !4268, line: 1092, baseType: !4526, size: 1344, offset: 128)
!4526 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_rx_flow_spec", file: !4268, line: 992, size: 1344, elements: !4527)
!4527 = !{!4528, !4529, !4598, !4608, !4609, !4610, !4611}
!4528 = !DIDerivedType(tag: DW_TAG_member, name: "flow_type", scope: !4526, file: !4268, line: 993, baseType: !231, size: 32)
!4529 = !DIDerivedType(tag: DW_TAG_member, name: "h_u", scope: !4526, file: !4268, line: 994, baseType: !4530, size: 416, offset: 32)
!4530 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "ethtool_flow_union", file: !4268, line: 939, size: 416, elements: !4531)
!4531 = !{!4532, !4540, !4541, !4542, !4549, !4550, !4559, !4568, !4569, !4570, !4577, !4578, !4586, !4594}
!4532 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_ip4_spec", scope: !4530, file: !4268, line: 940, baseType: !4533, size: 128)
!4533 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_tcpip4_spec", file: !4268, line: 845, size: 128, elements: !4534)
!4534 = !{!4535, !4536, !4537, !4538, !4539}
!4535 = !DIDerivedType(tag: DW_TAG_member, name: "ip4src", scope: !4533, file: !4268, line: 846, baseType: !2019, size: 32)
!4536 = !DIDerivedType(tag: DW_TAG_member, name: "ip4dst", scope: !4533, file: !4268, line: 847, baseType: !2019, size: 32, offset: 32)
!4537 = !DIDerivedType(tag: DW_TAG_member, name: "psrc", scope: !4533, file: !4268, line: 848, baseType: !2037, size: 16, offset: 64)
!4538 = !DIDerivedType(tag: DW_TAG_member, name: "pdst", scope: !4533, file: !4268, line: 849, baseType: !2037, size: 16, offset: 80)
!4539 = !DIDerivedType(tag: DW_TAG_member, name: "tos", scope: !4533, file: !4268, line: 850, baseType: !1404, size: 8, offset: 96)
!4540 = !DIDerivedType(tag: DW_TAG_member, name: "udp_ip4_spec", scope: !4530, file: !4268, line: 941, baseType: !4533, size: 128)
!4541 = !DIDerivedType(tag: DW_TAG_member, name: "sctp_ip4_spec", scope: !4530, file: !4268, line: 942, baseType: !4533, size: 128)
!4542 = !DIDerivedType(tag: DW_TAG_member, name: "ah_ip4_spec", scope: !4530, file: !4268, line: 943, baseType: !4543, size: 128)
!4543 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_ah_espip4_spec", file: !4268, line: 862, size: 128, elements: !4544)
!4544 = !{!4545, !4546, !4547, !4548}
!4545 = !DIDerivedType(tag: DW_TAG_member, name: "ip4src", scope: !4543, file: !4268, line: 863, baseType: !2019, size: 32)
!4546 = !DIDerivedType(tag: DW_TAG_member, name: "ip4dst", scope: !4543, file: !4268, line: 864, baseType: !2019, size: 32, offset: 32)
!4547 = !DIDerivedType(tag: DW_TAG_member, name: "spi", scope: !4543, file: !4268, line: 865, baseType: !2019, size: 32, offset: 64)
!4548 = !DIDerivedType(tag: DW_TAG_member, name: "tos", scope: !4543, file: !4268, line: 866, baseType: !1404, size: 8, offset: 96)
!4549 = !DIDerivedType(tag: DW_TAG_member, name: "esp_ip4_spec", scope: !4530, file: !4268, line: 944, baseType: !4543, size: 128)
!4550 = !DIDerivedType(tag: DW_TAG_member, name: "usr_ip4_spec", scope: !4530, file: !4268, line: 945, baseType: !4551, size: 128)
!4551 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_usrip4_spec", file: !4268, line: 880, size: 128, elements: !4552)
!4552 = !{!4553, !4554, !4555, !4556, !4557, !4558}
!4553 = !DIDerivedType(tag: DW_TAG_member, name: "ip4src", scope: !4551, file: !4268, line: 881, baseType: !2019, size: 32)
!4554 = !DIDerivedType(tag: DW_TAG_member, name: "ip4dst", scope: !4551, file: !4268, line: 882, baseType: !2019, size: 32, offset: 32)
!4555 = !DIDerivedType(tag: DW_TAG_member, name: "l4_4_bytes", scope: !4551, file: !4268, line: 883, baseType: !2019, size: 32, offset: 64)
!4556 = !DIDerivedType(tag: DW_TAG_member, name: "tos", scope: !4551, file: !4268, line: 884, baseType: !1404, size: 8, offset: 96)
!4557 = !DIDerivedType(tag: DW_TAG_member, name: "ip_ver", scope: !4551, file: !4268, line: 885, baseType: !1404, size: 8, offset: 104)
!4558 = !DIDerivedType(tag: DW_TAG_member, name: "proto", scope: !4551, file: !4268, line: 886, baseType: !1404, size: 8, offset: 112)
!4559 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_ip6_spec", scope: !4530, file: !4268, line: 946, baseType: !4560, size: 320)
!4560 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_tcpip6_spec", file: !4268, line: 899, size: 320, elements: !4561)
!4561 = !{!4562, !4564, !4565, !4566, !4567}
!4562 = !DIDerivedType(tag: DW_TAG_member, name: "ip6src", scope: !4560, file: !4268, line: 900, baseType: !4563, size: 128)
!4563 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2019, size: 128, elements: !1212)
!4564 = !DIDerivedType(tag: DW_TAG_member, name: "ip6dst", scope: !4560, file: !4268, line: 901, baseType: !4563, size: 128, offset: 128)
!4565 = !DIDerivedType(tag: DW_TAG_member, name: "psrc", scope: !4560, file: !4268, line: 902, baseType: !2037, size: 16, offset: 256)
!4566 = !DIDerivedType(tag: DW_TAG_member, name: "pdst", scope: !4560, file: !4268, line: 903, baseType: !2037, size: 16, offset: 272)
!4567 = !DIDerivedType(tag: DW_TAG_member, name: "tclass", scope: !4560, file: !4268, line: 904, baseType: !1404, size: 8, offset: 288)
!4568 = !DIDerivedType(tag: DW_TAG_member, name: "udp_ip6_spec", scope: !4530, file: !4268, line: 947, baseType: !4560, size: 320)
!4569 = !DIDerivedType(tag: DW_TAG_member, name: "sctp_ip6_spec", scope: !4530, file: !4268, line: 948, baseType: !4560, size: 320)
!4570 = !DIDerivedType(tag: DW_TAG_member, name: "ah_ip6_spec", scope: !4530, file: !4268, line: 949, baseType: !4571, size: 320)
!4571 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_ah_espip6_spec", file: !4268, line: 916, size: 320, elements: !4572)
!4572 = !{!4573, !4574, !4575, !4576}
!4573 = !DIDerivedType(tag: DW_TAG_member, name: "ip6src", scope: !4571, file: !4268, line: 917, baseType: !4563, size: 128)
!4574 = !DIDerivedType(tag: DW_TAG_member, name: "ip6dst", scope: !4571, file: !4268, line: 918, baseType: !4563, size: 128, offset: 128)
!4575 = !DIDerivedType(tag: DW_TAG_member, name: "spi", scope: !4571, file: !4268, line: 919, baseType: !2019, size: 32, offset: 256)
!4576 = !DIDerivedType(tag: DW_TAG_member, name: "tclass", scope: !4571, file: !4268, line: 920, baseType: !1404, size: 8, offset: 288)
!4577 = !DIDerivedType(tag: DW_TAG_member, name: "esp_ip6_spec", scope: !4530, file: !4268, line: 950, baseType: !4571, size: 320)
!4578 = !DIDerivedType(tag: DW_TAG_member, name: "usr_ip6_spec", scope: !4530, file: !4268, line: 951, baseType: !4579, size: 320)
!4579 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_usrip6_spec", file: !4268, line: 931, size: 320, elements: !4580)
!4580 = !{!4581, !4582, !4583, !4584, !4585}
!4581 = !DIDerivedType(tag: DW_TAG_member, name: "ip6src", scope: !4579, file: !4268, line: 932, baseType: !4563, size: 128)
!4582 = !DIDerivedType(tag: DW_TAG_member, name: "ip6dst", scope: !4579, file: !4268, line: 933, baseType: !4563, size: 128, offset: 128)
!4583 = !DIDerivedType(tag: DW_TAG_member, name: "l4_4_bytes", scope: !4579, file: !4268, line: 934, baseType: !2019, size: 32, offset: 256)
!4584 = !DIDerivedType(tag: DW_TAG_member, name: "tclass", scope: !4579, file: !4268, line: 935, baseType: !1404, size: 8, offset: 288)
!4585 = !DIDerivedType(tag: DW_TAG_member, name: "l4_proto", scope: !4579, file: !4268, line: 936, baseType: !1404, size: 8, offset: 296)
!4586 = !DIDerivedType(tag: DW_TAG_member, name: "ether_spec", scope: !4530, file: !4268, line: 952, baseType: !4587, size: 112)
!4587 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethhdr", file: !4588, line: 164, size: 112, elements: !4589)
!4588 = !DIFile(filename: "./include/uapi/linux/if_ether.h", directory: "/home/lizy2001/genbc/linux")
!4589 = !{!4590, !4592, !4593}
!4590 = !DIDerivedType(tag: DW_TAG_member, name: "h_dest", scope: !4587, file: !4588, line: 165, baseType: !4591, size: 48)
!4591 = !DICompositeType(tag: DW_TAG_array_type, baseType: !241, size: 48, elements: !1668)
!4592 = !DIDerivedType(tag: DW_TAG_member, name: "h_source", scope: !4587, file: !4588, line: 166, baseType: !4591, size: 48, offset: 48)
!4593 = !DIDerivedType(tag: DW_TAG_member, name: "h_proto", scope: !4587, file: !4588, line: 167, baseType: !2037, size: 16, offset: 96)
!4594 = !DIDerivedType(tag: DW_TAG_member, name: "hdata", scope: !4530, file: !4268, line: 953, baseType: !4595, size: 416)
!4595 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1404, size: 416, elements: !4596)
!4596 = !{!4597}
!4597 = !DISubrange(count: 52)
!4598 = !DIDerivedType(tag: DW_TAG_member, name: "h_ext", scope: !4526, file: !4268, line: 995, baseType: !4599, size: 160, offset: 448)
!4599 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_flow_ext", file: !4268, line: 967, size: 160, elements: !4600)
!4600 = !{!4601, !4603, !4604, !4605, !4606}
!4601 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !4599, file: !4268, line: 968, baseType: !4602, size: 16)
!4602 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1404, size: 16, elements: !1911)
!4603 = !DIDerivedType(tag: DW_TAG_member, name: "h_dest", scope: !4599, file: !4268, line: 969, baseType: !4591, size: 48, offset: 16)
!4604 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_etype", scope: !4599, file: !4268, line: 970, baseType: !2037, size: 16, offset: 64)
!4605 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_tci", scope: !4599, file: !4268, line: 971, baseType: !2037, size: 16, offset: 80)
!4606 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4599, file: !4268, line: 972, baseType: !4607, size: 64, offset: 96)
!4607 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2019, size: 64, elements: !1911)
!4608 = !DIDerivedType(tag: DW_TAG_member, name: "m_u", scope: !4526, file: !4268, line: 996, baseType: !4530, size: 416, offset: 608)
!4609 = !DIDerivedType(tag: DW_TAG_member, name: "m_ext", scope: !4526, file: !4268, line: 997, baseType: !4599, size: 160, offset: 1024)
!4610 = !DIDerivedType(tag: DW_TAG_member, name: "ring_cookie", scope: !4526, file: !4268, line: 998, baseType: !236, size: 64, offset: 1216)
!4611 = !DIDerivedType(tag: DW_TAG_member, name: "location", scope: !4526, file: !4268, line: 999, baseType: !231, size: 32, offset: 1280)
!4612 = !DIDerivedType(tag: DW_TAG_member, scope: !4520, file: !4268, line: 1093, baseType: !4613, size: 32, offset: 1472)
!4613 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4520, file: !4268, line: 1093, size: 32, elements: !4614)
!4614 = !{!4615, !4616}
!4615 = !DIDerivedType(tag: DW_TAG_member, name: "rule_cnt", scope: !4613, file: !4268, line: 1094, baseType: !231, size: 32)
!4616 = !DIDerivedType(tag: DW_TAG_member, name: "rss_context", scope: !4613, file: !4268, line: 1095, baseType: !231, size: 32)
!4617 = !DIDerivedType(tag: DW_TAG_member, name: "rule_locs", scope: !4520, file: !4268, line: 1097, baseType: !4618, offset: 1504)
!4618 = !DICompositeType(tag: DW_TAG_array_type, baseType: !231, elements: !1932)
!4619 = !DIDerivedType(tag: DW_TAG_member, name: "set_rxnfc", scope: !4258, file: !4259, line: 463, baseType: !4620, size: 64, offset: 1984)
!4620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4621, size: 64)
!4621 = !DISubroutineType(types: !4622)
!4622 = !{!6, !2169, !4519}
!4623 = !DIDerivedType(tag: DW_TAG_member, name: "flash_device", scope: !4258, file: !4259, line: 464, baseType: !4624, size: 64, offset: 2048)
!4624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4625, size: 64)
!4625 = !DISubroutineType(types: !4626)
!4626 = !{!6, !2169, !4627}
!4627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4628, size: 64)
!4628 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_flash", file: !4268, line: 1217, size: 1088, elements: !4629)
!4629 = !{!4630, !4631, !4632}
!4630 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !4628, file: !4268, line: 1218, baseType: !231, size: 32)
!4631 = !DIDerivedType(tag: DW_TAG_member, name: "region", scope: !4628, file: !4268, line: 1219, baseType: !231, size: 32, offset: 32)
!4632 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4628, file: !4268, line: 1220, baseType: !3220, size: 1024, offset: 64)
!4633 = !DIDerivedType(tag: DW_TAG_member, name: "reset", scope: !4258, file: !4259, line: 465, baseType: !4634, size: 64, offset: 2112)
!4634 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4635, size: 64)
!4635 = !DISubroutineType(types: !4636)
!4636 = !{!6, !2169, !1467}
!4637 = !DIDerivedType(tag: DW_TAG_member, name: "get_rxfh_key_size", scope: !4258, file: !4259, line: 466, baseType: !4314, size: 64, offset: 2176)
!4638 = !DIDerivedType(tag: DW_TAG_member, name: "get_rxfh_indir_size", scope: !4258, file: !4259, line: 467, baseType: !4314, size: 64, offset: 2240)
!4639 = !DIDerivedType(tag: DW_TAG_member, name: "get_rxfh", scope: !4258, file: !4259, line: 468, baseType: !4640, size: 64, offset: 2304)
!4640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4641, size: 64)
!4641 = !DISubroutineType(types: !4642)
!4642 = !{!6, !2169, !1467, !2747, !2747}
!4643 = !DIDerivedType(tag: DW_TAG_member, name: "set_rxfh", scope: !4258, file: !4259, line: 470, baseType: !4644, size: 64, offset: 2368)
!4644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4645, size: 64)
!4645 = !DISubroutineType(types: !4646)
!4646 = !{!6, !2169, !4647, !4155, !4156}
!4647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2522, size: 64)
!4648 = !DIDerivedType(tag: DW_TAG_member, name: "get_rxfh_context", scope: !4258, file: !4259, line: 472, baseType: !4649, size: 64, offset: 2432)
!4649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4650, size: 64)
!4650 = !DISubroutineType(types: !4651)
!4651 = !{!6, !2169, !1467, !2747, !2747, !229}
!4652 = !DIDerivedType(tag: DW_TAG_member, name: "set_rxfh_context", scope: !4258, file: !4259, line: 474, baseType: !4653, size: 64, offset: 2496)
!4653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4654, size: 64)
!4654 = !DISubroutineType(types: !4655)
!4655 = !{!6, !2169, !4647, !4155, !4156, !1467, !304}
!4656 = !DIDerivedType(tag: DW_TAG_member, name: "get_channels", scope: !4258, file: !4259, line: 477, baseType: !4657, size: 64, offset: 2560)
!4657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4658, size: 64)
!4658 = !DISubroutineType(types: !4659)
!4659 = !{null, !2169, !4660}
!4660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4661, size: 64)
!4661 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_channels", file: !4268, line: 541, size: 288, elements: !4662)
!4662 = !{!4663, !4664, !4665, !4666, !4667, !4668, !4669, !4670, !4671}
!4663 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !4661, file: !4268, line: 542, baseType: !231, size: 32)
!4664 = !DIDerivedType(tag: DW_TAG_member, name: "max_rx", scope: !4661, file: !4268, line: 543, baseType: !231, size: 32, offset: 32)
!4665 = !DIDerivedType(tag: DW_TAG_member, name: "max_tx", scope: !4661, file: !4268, line: 544, baseType: !231, size: 32, offset: 64)
!4666 = !DIDerivedType(tag: DW_TAG_member, name: "max_other", scope: !4661, file: !4268, line: 545, baseType: !231, size: 32, offset: 96)
!4667 = !DIDerivedType(tag: DW_TAG_member, name: "max_combined", scope: !4661, file: !4268, line: 546, baseType: !231, size: 32, offset: 128)
!4668 = !DIDerivedType(tag: DW_TAG_member, name: "rx_count", scope: !4661, file: !4268, line: 547, baseType: !231, size: 32, offset: 160)
!4669 = !DIDerivedType(tag: DW_TAG_member, name: "tx_count", scope: !4661, file: !4268, line: 548, baseType: !231, size: 32, offset: 192)
!4670 = !DIDerivedType(tag: DW_TAG_member, name: "other_count", scope: !4661, file: !4268, line: 549, baseType: !231, size: 32, offset: 224)
!4671 = !DIDerivedType(tag: DW_TAG_member, name: "combined_count", scope: !4661, file: !4268, line: 550, baseType: !231, size: 32, offset: 256)
!4672 = !DIDerivedType(tag: DW_TAG_member, name: "set_channels", scope: !4258, file: !4259, line: 478, baseType: !4673, size: 64, offset: 2624)
!4673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4674, size: 64)
!4674 = !DISubroutineType(types: !4675)
!4675 = !{!6, !2169, !4660}
!4676 = !DIDerivedType(tag: DW_TAG_member, name: "get_dump_flag", scope: !4258, file: !4259, line: 479, baseType: !4677, size: 64, offset: 2688)
!4677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4678, size: 64)
!4678 = !DISubroutineType(types: !4679)
!4679 = !{!6, !2169, !4680}
!4680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4681, size: 64)
!4681 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_dump", file: !4268, line: 1237, size: 128, elements: !4682)
!4682 = !{!4683, !4684, !4685, !4686, !4687}
!4683 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !4681, file: !4268, line: 1238, baseType: !231, size: 32)
!4684 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !4681, file: !4268, line: 1239, baseType: !231, size: 32, offset: 32)
!4685 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !4681, file: !4268, line: 1240, baseType: !231, size: 32, offset: 64)
!4686 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !4681, file: !4268, line: 1241, baseType: !231, size: 32, offset: 96)
!4687 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4681, file: !4268, line: 1242, baseType: !4296, offset: 128)
!4688 = !DIDerivedType(tag: DW_TAG_member, name: "get_dump_data", scope: !4258, file: !4259, line: 480, baseType: !4689, size: 64, offset: 2752)
!4689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4690, size: 64)
!4690 = !DISubroutineType(types: !4691)
!4691 = !{!6, !2169, !4680, !159}
!4692 = !DIDerivedType(tag: DW_TAG_member, name: "set_dump", scope: !4258, file: !4259, line: 482, baseType: !4677, size: 64, offset: 2816)
!4693 = !DIDerivedType(tag: DW_TAG_member, name: "get_ts_info", scope: !4258, file: !4259, line: 483, baseType: !4694, size: 64, offset: 2880)
!4694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4695, size: 64)
!4695 = !DISubroutineType(types: !4696)
!4696 = !{!6, !2169, !4697}
!4697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4698, size: 64)
!4698 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_ts_info", file: !4268, line: 1317, size: 352, elements: !4699)
!4699 = !{!4700, !4701, !4702, !4703, !4704, !4706, !4707}
!4700 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !4698, file: !4268, line: 1318, baseType: !231, size: 32)
!4701 = !DIDerivedType(tag: DW_TAG_member, name: "so_timestamping", scope: !4698, file: !4268, line: 1319, baseType: !231, size: 32, offset: 32)
!4702 = !DIDerivedType(tag: DW_TAG_member, name: "phc_index", scope: !4698, file: !4268, line: 1320, baseType: !1502, size: 32, offset: 64)
!4703 = !DIDerivedType(tag: DW_TAG_member, name: "tx_types", scope: !4698, file: !4268, line: 1321, baseType: !231, size: 32, offset: 96)
!4704 = !DIDerivedType(tag: DW_TAG_member, name: "tx_reserved", scope: !4698, file: !4268, line: 1322, baseType: !4705, size: 96, offset: 128)
!4705 = !DICompositeType(tag: DW_TAG_array_type, baseType: !231, size: 96, elements: !86)
!4706 = !DIDerivedType(tag: DW_TAG_member, name: "rx_filters", scope: !4698, file: !4268, line: 1323, baseType: !231, size: 32, offset: 224)
!4707 = !DIDerivedType(tag: DW_TAG_member, name: "rx_reserved", scope: !4698, file: !4268, line: 1324, baseType: !4705, size: 96, offset: 256)
!4708 = !DIDerivedType(tag: DW_TAG_member, name: "get_module_info", scope: !4258, file: !4259, line: 484, baseType: !4709, size: 64, offset: 2944)
!4709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4710, size: 64)
!4710 = !DISubroutineType(types: !4711)
!4711 = !{!6, !2169, !4712}
!4712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4713, size: 64)
!4713 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_modinfo", file: !4268, line: 382, size: 352, elements: !4714)
!4714 = !{!4715, !4716, !4717, !4718}
!4715 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !4713, file: !4268, line: 383, baseType: !231, size: 32)
!4716 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4713, file: !4268, line: 384, baseType: !231, size: 32, offset: 32)
!4717 = !DIDerivedType(tag: DW_TAG_member, name: "eeprom_len", scope: !4713, file: !4268, line: 385, baseType: !231, size: 32, offset: 64)
!4718 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !4713, file: !4268, line: 386, baseType: !4719, size: 256, offset: 96)
!4719 = !DICompositeType(tag: DW_TAG_array_type, baseType: !231, size: 256, elements: !1381)
!4720 = !DIDerivedType(tag: DW_TAG_member, name: "get_module_eeprom", scope: !4258, file: !4259, line: 486, baseType: !4383, size: 64, offset: 3008)
!4721 = !DIDerivedType(tag: DW_TAG_member, name: "get_eee", scope: !4258, file: !4259, line: 488, baseType: !4722, size: 64, offset: 3072)
!4722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4723, size: 64)
!4723 = !DISubroutineType(types: !4724)
!4724 = !{!6, !2169, !4725}
!4725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4726, size: 64)
!4726 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_eee", file: !4268, line: 360, size: 320, elements: !4727)
!4727 = !{!4728, !4729, !4730, !4731, !4732, !4733, !4734, !4735, !4736}
!4728 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !4726, file: !4268, line: 361, baseType: !231, size: 32)
!4729 = !DIDerivedType(tag: DW_TAG_member, name: "supported", scope: !4726, file: !4268, line: 362, baseType: !231, size: 32, offset: 32)
!4730 = !DIDerivedType(tag: DW_TAG_member, name: "advertised", scope: !4726, file: !4268, line: 363, baseType: !231, size: 32, offset: 64)
!4731 = !DIDerivedType(tag: DW_TAG_member, name: "lp_advertised", scope: !4726, file: !4268, line: 364, baseType: !231, size: 32, offset: 96)
!4732 = !DIDerivedType(tag: DW_TAG_member, name: "eee_active", scope: !4726, file: !4268, line: 365, baseType: !231, size: 32, offset: 128)
!4733 = !DIDerivedType(tag: DW_TAG_member, name: "eee_enabled", scope: !4726, file: !4268, line: 366, baseType: !231, size: 32, offset: 160)
!4734 = !DIDerivedType(tag: DW_TAG_member, name: "tx_lpi_enabled", scope: !4726, file: !4268, line: 367, baseType: !231, size: 32, offset: 192)
!4735 = !DIDerivedType(tag: DW_TAG_member, name: "tx_lpi_timer", scope: !4726, file: !4268, line: 368, baseType: !231, size: 32, offset: 224)
!4736 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !4726, file: !4268, line: 369, baseType: !1910, size: 64, offset: 256)
!4737 = !DIDerivedType(tag: DW_TAG_member, name: "set_eee", scope: !4258, file: !4259, line: 489, baseType: !4722, size: 64, offset: 3136)
!4738 = !DIDerivedType(tag: DW_TAG_member, name: "get_tunable", scope: !4258, file: !4259, line: 490, baseType: !4739, size: 64, offset: 3200)
!4739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4740, size: 64)
!4740 = !DISubroutineType(types: !4741)
!4741 = !{!6, !2169, !4742, !159}
!4742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4743, size: 64)
!4743 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4744)
!4744 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_tunable", file: !4268, line: 244, size: 128, elements: !4745)
!4745 = !{!4746, !4747, !4748, !4749, !4750}
!4746 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !4744, file: !4268, line: 245, baseType: !231, size: 32)
!4747 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4744, file: !4268, line: 246, baseType: !231, size: 32, offset: 32)
!4748 = !DIDerivedType(tag: DW_TAG_member, name: "type_id", scope: !4744, file: !4268, line: 247, baseType: !231, size: 32, offset: 64)
!4749 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !4744, file: !4268, line: 248, baseType: !231, size: 32, offset: 96)
!4750 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4744, file: !4268, line: 249, baseType: !4751, offset: 128)
!4751 = !DICompositeType(tag: DW_TAG_array_type, baseType: !159, elements: !1932)
!4752 = !DIDerivedType(tag: DW_TAG_member, name: "set_tunable", scope: !4258, file: !4259, line: 492, baseType: !4753, size: 64, offset: 3264)
!4753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4754, size: 64)
!4754 = !DISubroutineType(types: !4755)
!4755 = !{!6, !2169, !4742, !2454}
!4756 = !DIDerivedType(tag: DW_TAG_member, name: "get_per_queue_coalesce", scope: !4258, file: !4259, line: 494, baseType: !4757, size: 64, offset: 3328)
!4757 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4758, size: 64)
!4758 = !DISubroutineType(types: !4759)
!4759 = !{!6, !2169, !229, !4399}
!4760 = !DIDerivedType(tag: DW_TAG_member, name: "set_per_queue_coalesce", scope: !4258, file: !4259, line: 496, baseType: !4757, size: 64, offset: 3392)
!4761 = !DIDerivedType(tag: DW_TAG_member, name: "get_link_ksettings", scope: !4258, file: !4259, line: 498, baseType: !4762, size: 64, offset: 3456)
!4762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4763, size: 64)
!4763 = !DISubroutineType(types: !4764)
!4764 = !{!6, !2169, !4765}
!4765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4766, size: 64)
!4766 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_link_ksettings", file: !4259, line: 124, size: 768, elements: !4767)
!4767 = !{!4768, !4793}
!4768 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !4766, file: !4259, line: 125, baseType: !4769, size: 384)
!4769 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_link_settings", file: !4268, line: 1996, size: 384, elements: !4770)
!4770 = !{!4771, !4772, !4773, !4774, !4775, !4776, !4777, !4778, !4779, !4780, !4783, !4784, !4785, !4786, !4788, !4792}
!4771 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !4769, file: !4268, line: 1997, baseType: !231, size: 32)
!4772 = !DIDerivedType(tag: DW_TAG_member, name: "speed", scope: !4769, file: !4268, line: 1998, baseType: !231, size: 32, offset: 32)
!4773 = !DIDerivedType(tag: DW_TAG_member, name: "duplex", scope: !4769, file: !4268, line: 1999, baseType: !1404, size: 8, offset: 64)
!4774 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !4769, file: !4268, line: 2000, baseType: !1404, size: 8, offset: 72)
!4775 = !DIDerivedType(tag: DW_TAG_member, name: "phy_address", scope: !4769, file: !4268, line: 2001, baseType: !1404, size: 8, offset: 80)
!4776 = !DIDerivedType(tag: DW_TAG_member, name: "autoneg", scope: !4769, file: !4268, line: 2002, baseType: !1404, size: 8, offset: 88)
!4777 = !DIDerivedType(tag: DW_TAG_member, name: "mdio_support", scope: !4769, file: !4268, line: 2003, baseType: !1404, size: 8, offset: 96)
!4778 = !DIDerivedType(tag: DW_TAG_member, name: "eth_tp_mdix", scope: !4769, file: !4268, line: 2004, baseType: !1404, size: 8, offset: 104)
!4779 = !DIDerivedType(tag: DW_TAG_member, name: "eth_tp_mdix_ctrl", scope: !4769, file: !4268, line: 2005, baseType: !1404, size: 8, offset: 112)
!4780 = !DIDerivedType(tag: DW_TAG_member, name: "link_mode_masks_nwords", scope: !4769, file: !4268, line: 2006, baseType: !4781, size: 8, offset: 120)
!4781 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s8", file: !232, line: 20, baseType: !4782)
!4782 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!4783 = !DIDerivedType(tag: DW_TAG_member, name: "transceiver", scope: !4769, file: !4268, line: 2007, baseType: !1404, size: 8, offset: 128)
!4784 = !DIDerivedType(tag: DW_TAG_member, name: "master_slave_cfg", scope: !4769, file: !4268, line: 2008, baseType: !1404, size: 8, offset: 136)
!4785 = !DIDerivedType(tag: DW_TAG_member, name: "master_slave_state", scope: !4769, file: !4268, line: 2009, baseType: !1404, size: 8, offset: 144)
!4786 = !DIDerivedType(tag: DW_TAG_member, name: "reserved1", scope: !4769, file: !4268, line: 2010, baseType: !4787, size: 8, offset: 152)
!4787 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1404, size: 8, elements: !1422)
!4788 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !4769, file: !4268, line: 2011, baseType: !4789, size: 224, offset: 160)
!4789 = !DICompositeType(tag: DW_TAG_array_type, baseType: !231, size: 224, elements: !4790)
!4790 = !{!4791}
!4791 = !DISubrange(count: 7)
!4792 = !DIDerivedType(tag: DW_TAG_member, name: "link_mode_masks", scope: !4769, file: !4268, line: 2012, baseType: !4618, offset: 384)
!4793 = !DIDerivedType(tag: DW_TAG_member, name: "link_modes", scope: !4766, file: !4259, line: 130, baseType: !4794, size: 384, offset: 384)
!4794 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4766, file: !4259, line: 126, size: 384, elements: !4795)
!4795 = !{!4796, !4798, !4799}
!4796 = !DIDerivedType(tag: DW_TAG_member, name: "supported", scope: !4794, file: !4259, line: 127, baseType: !4797, size: 128)
!4797 = !DICompositeType(tag: DW_TAG_array_type, baseType: !135, size: 128, elements: !1911)
!4798 = !DIDerivedType(tag: DW_TAG_member, name: "advertising", scope: !4794, file: !4259, line: 128, baseType: !4797, size: 128, offset: 128)
!4799 = !DIDerivedType(tag: DW_TAG_member, name: "lp_advertising", scope: !4794, file: !4259, line: 129, baseType: !4797, size: 128, offset: 256)
!4800 = !DIDerivedType(tag: DW_TAG_member, name: "set_link_ksettings", scope: !4258, file: !4259, line: 500, baseType: !4801, size: 64, offset: 3520)
!4801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4802, size: 64)
!4802 = !DISubroutineType(types: !4803)
!4803 = !{!6, !2169, !4804}
!4804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4805, size: 64)
!4805 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4766)
!4806 = !DIDerivedType(tag: DW_TAG_member, name: "get_fecparam", scope: !4258, file: !4259, line: 502, baseType: !4807, size: 64, offset: 3584)
!4807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4808, size: 64)
!4808 = !DISubroutineType(types: !4809)
!4809 = !{!6, !2169, !4810}
!4810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4811, size: 64)
!4811 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_fecparam", file: !4268, line: 1389, size: 128, elements: !4812)
!4812 = !{!4813, !4814, !4815, !4816}
!4813 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !4811, file: !4268, line: 1390, baseType: !231, size: 32)
!4814 = !DIDerivedType(tag: DW_TAG_member, name: "active_fec", scope: !4811, file: !4268, line: 1392, baseType: !231, size: 32, offset: 32)
!4815 = !DIDerivedType(tag: DW_TAG_member, name: "fec", scope: !4811, file: !4268, line: 1393, baseType: !231, size: 32, offset: 64)
!4816 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !4811, file: !4268, line: 1394, baseType: !231, size: 32, offset: 96)
!4817 = !DIDerivedType(tag: DW_TAG_member, name: "set_fecparam", scope: !4258, file: !4259, line: 504, baseType: !4807, size: 64, offset: 3648)
!4818 = !DIDerivedType(tag: DW_TAG_member, name: "get_ethtool_phy_stats", scope: !4258, file: !4259, line: 506, baseType: !4498, size: 64, offset: 3712)
!4819 = !DIDerivedType(tag: DW_TAG_member, name: "get_phy_tunable", scope: !4258, file: !4259, line: 508, baseType: !4739, size: 64, offset: 3776)
!4820 = !DIDerivedType(tag: DW_TAG_member, name: "set_phy_tunable", scope: !4258, file: !4259, line: 510, baseType: !4753, size: 64, offset: 3840)
!4821 = !DIDerivedType(tag: DW_TAG_member, name: "ndisc_ops", scope: !2170, file: !2171, line: 1922, baseType: !4822, size: 64, offset: 4096)
!4822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4823, size: 64)
!4823 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4824)
!4824 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ndisc_ops", file: !4825, line: 202, size: 384, elements: !4826)
!4825 = !DIFile(filename: "./include/net/ndisc.h", directory: "/home/lizy2001/genbc/linux")
!4826 = !{!4827, !4831, !4849, !4855, !4860, !4864}
!4827 = !DIDerivedType(tag: DW_TAG_member, name: "is_useropt", scope: !4824, file: !4825, line: 203, baseType: !4828, size: 64)
!4828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4829, size: 64)
!4829 = !DISubroutineType(types: !4830)
!4830 = !{!6, !1403}
!4831 = !DIDerivedType(tag: DW_TAG_member, name: "parse_options", scope: !4824, file: !4825, line: 204, baseType: !4832, size: 64, offset: 64)
!4832 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4833, size: 64)
!4833 = !DISubroutineType(types: !4834)
!4834 = !{!6, !2456, !4835, !4840}
!4835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4836, size: 64)
!4836 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nd_opt_hdr", file: !4825, line: 105, size: 16, elements: !4837)
!4837 = !{!4838, !4839}
!4838 = !DIDerivedType(tag: DW_TAG_member, name: "nd_opt_type", scope: !4836, file: !4825, line: 106, baseType: !1404, size: 8)
!4839 = !DIDerivedType(tag: DW_TAG_member, name: "nd_opt_len", scope: !4836, file: !4825, line: 107, baseType: !1404, size: 8, offset: 8)
!4840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4841, size: 64)
!4841 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ndisc_options", file: !4825, line: 111, size: 1088, elements: !4842)
!4842 = !{!4843, !4847, !4848}
!4843 = !DIDerivedType(tag: DW_TAG_member, name: "nd_opt_array", scope: !4841, file: !4825, line: 112, baseType: !4844, size: 960)
!4844 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4835, size: 960, elements: !4845)
!4845 = !{!4846}
!4846 = !DISubrange(count: 15)
!4847 = !DIDerivedType(tag: DW_TAG_member, name: "nd_useropts", scope: !4841, file: !4825, line: 117, baseType: !4835, size: 64, offset: 960)
!4848 = !DIDerivedType(tag: DW_TAG_member, name: "nd_useropts_end", scope: !4841, file: !4825, line: 118, baseType: !4835, size: 64, offset: 1024)
!4849 = !DIDerivedType(tag: DW_TAG_member, name: "update", scope: !4824, file: !4825, line: 207, baseType: !4850, size: 64, offset: 128)
!4850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4851, size: 64)
!4851 = !DISubroutineType(types: !4852)
!4852 = !{null, !2456, !2438, !229, !1403, !4853}
!4853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4854, size: 64)
!4854 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4841)
!4855 = !DIDerivedType(tag: DW_TAG_member, name: "opt_addr_space", scope: !4824, file: !4825, line: 210, baseType: !4856, size: 64, offset: 192)
!4856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4857, size: 64)
!4857 = !DISubroutineType(types: !4858)
!4858 = !{!6, !2456, !1403, !2438, !2747, !4859}
!4859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2747, size: 64)
!4860 = !DIDerivedType(tag: DW_TAG_member, name: "fill_addr_option", scope: !4824, file: !4825, line: 213, baseType: !4861, size: 64, offset: 256)
!4861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4862, size: 64)
!4862 = !DISubroutineType(types: !4863)
!4863 = !{null, !2456, !2153, !1403, !4155}
!4864 = !DIDerivedType(tag: DW_TAG_member, name: "prefix_rcv_add_addr", scope: !4824, file: !4825, line: 216, baseType: !4865, size: 64, offset: 320)
!4865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4866, size: 64)
!4866 = !DISubroutineType(types: !4867)
!4867 = !{null, !1975, !2169, !4868, !4894, !5396, !6, !229, !304, !304, !231, !229, !304}
!4868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4869, size: 64)
!4869 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4870)
!4870 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "prefix_info", file: !4871, line: 27, size: 256, elements: !4872)
!4871 = !DIFile(filename: "./include/net/addrconf.h", directory: "/home/lizy2001/genbc/linux")
!4872 = !{!4873, !4874, !4875, !4876, !4877, !4878, !4879, !4880, !4881, !4882}
!4873 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4870, file: !4871, line: 28, baseType: !1404, size: 8)
!4874 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !4870, file: !4871, line: 29, baseType: !1404, size: 8, offset: 8)
!4875 = !DIDerivedType(tag: DW_TAG_member, name: "prefix_len", scope: !4870, file: !4871, line: 30, baseType: !1404, size: 8, offset: 16)
!4876 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !4870, file: !4871, line: 37, baseType: !1404, size: 6, offset: 24, flags: DIFlagBitField, extraData: i64 24)
!4877 = !DIDerivedType(tag: DW_TAG_member, name: "autoconf", scope: !4870, file: !4871, line: 38, baseType: !1404, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 24)
!4878 = !DIDerivedType(tag: DW_TAG_member, name: "onlink", scope: !4870, file: !4871, line: 39, baseType: !1404, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 24)
!4879 = !DIDerivedType(tag: DW_TAG_member, name: "valid", scope: !4870, file: !4871, line: 43, baseType: !2019, size: 32, offset: 32)
!4880 = !DIDerivedType(tag: DW_TAG_member, name: "prefered", scope: !4870, file: !4871, line: 44, baseType: !2019, size: 32, offset: 64)
!4881 = !DIDerivedType(tag: DW_TAG_member, name: "reserved2", scope: !4870, file: !4871, line: 45, baseType: !2019, size: 32, offset: 96)
!4882 = !DIDerivedType(tag: DW_TAG_member, name: "prefix", scope: !4870, file: !4871, line: 47, baseType: !4883, size: 128, offset: 128)
!4883 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "in6_addr", file: !4884, line: 33, size: 128, elements: !4885)
!4884 = !DIFile(filename: "./include/uapi/linux/in6.h", directory: "/home/lizy2001/genbc/linux")
!4885 = !{!4886}
!4886 = !DIDerivedType(tag: DW_TAG_member, name: "in6_u", scope: !4883, file: !4884, line: 40, baseType: !4887, size: 128)
!4887 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4883, file: !4884, line: 34, size: 128, elements: !4888)
!4888 = !{!4889, !4891, !4893}
!4889 = !DIDerivedType(tag: DW_TAG_member, name: "u6_addr8", scope: !4887, file: !4884, line: 35, baseType: !4890, size: 128)
!4890 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1404, size: 128, elements: !1944)
!4891 = !DIDerivedType(tag: DW_TAG_member, name: "u6_addr16", scope: !4887, file: !4884, line: 37, baseType: !4892, size: 128)
!4892 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2037, size: 128, elements: !1381)
!4893 = !DIDerivedType(tag: DW_TAG_member, name: "u6_addr32", scope: !4887, file: !4884, line: 38, baseType: !4563, size: 128)
!4894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4895, size: 64)
!4895 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inet6_dev", file: !4896, line: 163, size: 4544, elements: !4897)
!4896 = !DIFile(filename: "./include/net/if_inet6.h", directory: "/home/lizy2001/genbc/linux")
!4897 = !{!4898, !4899, !4900, !4928, !4929, !4930, !4931, !4932, !4933, !4934, !4935, !4936, !4937, !4938, !4939, !4940, !4941, !5302, !5303, !5304, !5305, !5306, !5307, !5308, !5309, !5310, !5363, !5391, !5392, !5393, !5394, !5395}
!4898 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4895, file: !4896, line: 164, baseType: !2169, size: 64)
!4899 = !DIDerivedType(tag: DW_TAG_member, name: "addr_list", scope: !4895, file: !4896, line: 166, baseType: !30, size: 128, offset: 64)
!4900 = !DIDerivedType(tag: DW_TAG_member, name: "mc_list", scope: !4895, file: !4896, line: 168, baseType: !4901, size: 64, offset: 192)
!4901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4902, size: 64)
!4902 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifmcaddr6", file: !4896, line: 114, size: 1152, elements: !4903)
!4903 = !{!4904, !4905, !4906, !4907, !4917, !4918, !4919, !4920, !4921, !4922, !4923, !4924, !4925, !4926, !4927}
!4904 = !DIDerivedType(tag: DW_TAG_member, name: "mca_addr", scope: !4902, file: !4896, line: 115, baseType: !4883, size: 128)
!4905 = !DIDerivedType(tag: DW_TAG_member, name: "idev", scope: !4902, file: !4896, line: 116, baseType: !4894, size: 64, offset: 128)
!4906 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4902, file: !4896, line: 117, baseType: !4901, size: 64, offset: 192)
!4907 = !DIDerivedType(tag: DW_TAG_member, name: "mca_sources", scope: !4902, file: !4896, line: 118, baseType: !4908, size: 64, offset: 256)
!4908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4909, size: 64)
!4909 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ip6_sf_list", file: !4896, line: 99, size: 384, elements: !4910)
!4910 = !{!4911, !4912, !4913, !4914, !4915, !4916}
!4911 = !DIDerivedType(tag: DW_TAG_member, name: "sf_next", scope: !4909, file: !4896, line: 100, baseType: !4908, size: 64)
!4912 = !DIDerivedType(tag: DW_TAG_member, name: "sf_addr", scope: !4909, file: !4896, line: 101, baseType: !4883, size: 128, offset: 64)
!4913 = !DIDerivedType(tag: DW_TAG_member, name: "sf_count", scope: !4909, file: !4896, line: 102, baseType: !4797, size: 128, offset: 192)
!4914 = !DIDerivedType(tag: DW_TAG_member, name: "sf_gsresp", scope: !4909, file: !4896, line: 103, baseType: !241, size: 8, offset: 320)
!4915 = !DIDerivedType(tag: DW_TAG_member, name: "sf_oldin", scope: !4909, file: !4896, line: 104, baseType: !241, size: 8, offset: 328)
!4916 = !DIDerivedType(tag: DW_TAG_member, name: "sf_crcount", scope: !4909, file: !4896, line: 105, baseType: !241, size: 8, offset: 336)
!4917 = !DIDerivedType(tag: DW_TAG_member, name: "mca_tomb", scope: !4902, file: !4896, line: 119, baseType: !4908, size: 64, offset: 320)
!4918 = !DIDerivedType(tag: DW_TAG_member, name: "mca_sfmode", scope: !4902, file: !4896, line: 120, baseType: !199, size: 32, offset: 384)
!4919 = !DIDerivedType(tag: DW_TAG_member, name: "mca_crcount", scope: !4902, file: !4896, line: 121, baseType: !241, size: 8, offset: 416)
!4920 = !DIDerivedType(tag: DW_TAG_member, name: "mca_sfcount", scope: !4902, file: !4896, line: 122, baseType: !4797, size: 128, offset: 448)
!4921 = !DIDerivedType(tag: DW_TAG_member, name: "mca_timer", scope: !4902, file: !4896, line: 123, baseType: !2566, size: 320, offset: 576)
!4922 = !DIDerivedType(tag: DW_TAG_member, name: "mca_flags", scope: !4902, file: !4896, line: 124, baseType: !199, size: 32, offset: 896)
!4923 = !DIDerivedType(tag: DW_TAG_member, name: "mca_users", scope: !4902, file: !4896, line: 125, baseType: !6, size: 32, offset: 928)
!4924 = !DIDerivedType(tag: DW_TAG_member, name: "mca_refcnt", scope: !4902, file: !4896, line: 126, baseType: !880, size: 32, offset: 960)
!4925 = !DIDerivedType(tag: DW_TAG_member, name: "mca_lock", scope: !4902, file: !4896, line: 127, baseType: !44, offset: 992)
!4926 = !DIDerivedType(tag: DW_TAG_member, name: "mca_cstamp", scope: !4902, file: !4896, line: 128, baseType: !135, size: 64, offset: 1024)
!4927 = !DIDerivedType(tag: DW_TAG_member, name: "mca_tstamp", scope: !4902, file: !4896, line: 129, baseType: !135, size: 64, offset: 1088)
!4928 = !DIDerivedType(tag: DW_TAG_member, name: "mc_tomb", scope: !4895, file: !4896, line: 169, baseType: !4901, size: 64, offset: 256)
!4929 = !DIDerivedType(tag: DW_TAG_member, name: "mc_lock", scope: !4895, file: !4896, line: 170, baseType: !44, offset: 320)
!4930 = !DIDerivedType(tag: DW_TAG_member, name: "mc_qrv", scope: !4895, file: !4896, line: 172, baseType: !241, size: 8, offset: 320)
!4931 = !DIDerivedType(tag: DW_TAG_member, name: "mc_gq_running", scope: !4895, file: !4896, line: 173, baseType: !241, size: 8, offset: 328)
!4932 = !DIDerivedType(tag: DW_TAG_member, name: "mc_ifc_count", scope: !4895, file: !4896, line: 174, baseType: !241, size: 8, offset: 336)
!4933 = !DIDerivedType(tag: DW_TAG_member, name: "mc_dad_count", scope: !4895, file: !4896, line: 175, baseType: !241, size: 8, offset: 344)
!4934 = !DIDerivedType(tag: DW_TAG_member, name: "mc_v1_seen", scope: !4895, file: !4896, line: 177, baseType: !135, size: 64, offset: 384)
!4935 = !DIDerivedType(tag: DW_TAG_member, name: "mc_qi", scope: !4895, file: !4896, line: 178, baseType: !135, size: 64, offset: 448)
!4936 = !DIDerivedType(tag: DW_TAG_member, name: "mc_qri", scope: !4895, file: !4896, line: 179, baseType: !135, size: 64, offset: 512)
!4937 = !DIDerivedType(tag: DW_TAG_member, name: "mc_maxdelay", scope: !4895, file: !4896, line: 180, baseType: !135, size: 64, offset: 576)
!4938 = !DIDerivedType(tag: DW_TAG_member, name: "mc_gq_timer", scope: !4895, file: !4896, line: 182, baseType: !2566, size: 320, offset: 640)
!4939 = !DIDerivedType(tag: DW_TAG_member, name: "mc_ifc_timer", scope: !4895, file: !4896, line: 183, baseType: !2566, size: 320, offset: 960)
!4940 = !DIDerivedType(tag: DW_TAG_member, name: "mc_dad_timer", scope: !4895, file: !4896, line: 184, baseType: !2566, size: 320, offset: 1280)
!4941 = !DIDerivedType(tag: DW_TAG_member, name: "ac_list", scope: !4895, file: !4896, line: 186, baseType: !4942, size: 64, offset: 1600)
!4942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4943, size: 64)
!4943 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifacaddr6", file: !4896, line: 140, size: 704, elements: !4944)
!4944 = !{!4945, !4946, !5295, !5296, !5297, !5298, !5299, !5300, !5301}
!4945 = !DIDerivedType(tag: DW_TAG_member, name: "aca_addr", scope: !4943, file: !4896, line: 141, baseType: !4883, size: 128)
!4946 = !DIDerivedType(tag: DW_TAG_member, name: "aca_rt", scope: !4943, file: !4896, line: 142, baseType: !4947, size: 64, offset: 128)
!4947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4948, size: 64)
!4948 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fib6_info", file: !4949, line: 163, size: 1280, elements: !4950)
!4949 = !DIFile(filename: "./include/net/ip6_fib.h", directory: "/home/lizy2001/genbc/linux")
!4950 = !{!4951, !4980, !4981, !4982, !4987, !4988, !4989, !4990, !5000, !5005, !5006, !5007, !5008, !5009, !5010, !5011, !5012, !5013, !5014, !5015, !5016, !5017, !5018, !5019, !5293}
!4951 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_table", scope: !4948, file: !4949, line: 164, baseType: !4952, size: 64)
!4952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4953, size: 64)
!4953 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fib6_table", file: !4949, line: 390, size: 896, elements: !4954)
!4954 = !{!4955, !4956, !4957, !4958, !4971, !4978, !4979}
!4955 = !DIDerivedType(tag: DW_TAG_member, name: "tb6_hlist", scope: !4953, file: !4949, line: 391, baseType: !455, size: 128)
!4956 = !DIDerivedType(tag: DW_TAG_member, name: "tb6_id", scope: !4953, file: !4949, line: 392, baseType: !229, size: 32, offset: 128)
!4957 = !DIDerivedType(tag: DW_TAG_member, name: "tb6_lock", scope: !4953, file: !4949, line: 393, baseType: !44, offset: 160)
!4958 = !DIDerivedType(tag: DW_TAG_member, name: "tb6_root", scope: !4953, file: !4949, line: 394, baseType: !4959, size: 512, offset: 192)
!4959 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fib6_node", file: !4949, line: 72, size: 512, elements: !4960)
!4960 = !{!4961, !4963, !4964, !4965, !4966, !4967, !4968, !4969, !4970}
!4961 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !4959, file: !4949, line: 73, baseType: !4962, size: 64)
!4962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4959, size: 64)
!4963 = !DIDerivedType(tag: DW_TAG_member, name: "left", scope: !4959, file: !4949, line: 74, baseType: !4962, size: 64, offset: 64)
!4964 = !DIDerivedType(tag: DW_TAG_member, name: "right", scope: !4959, file: !4949, line: 75, baseType: !4962, size: 64, offset: 128)
!4965 = !DIDerivedType(tag: DW_TAG_member, name: "leaf", scope: !4959, file: !4949, line: 79, baseType: !4947, size: 64, offset: 192)
!4966 = !DIDerivedType(tag: DW_TAG_member, name: "fn_bit", scope: !4959, file: !4949, line: 81, baseType: !745, size: 16, offset: 256)
!4967 = !DIDerivedType(tag: DW_TAG_member, name: "fn_flags", scope: !4959, file: !4949, line: 82, baseType: !745, size: 16, offset: 272)
!4968 = !DIDerivedType(tag: DW_TAG_member, name: "fn_sernum", scope: !4959, file: !4949, line: 83, baseType: !6, size: 32, offset: 288)
!4969 = !DIDerivedType(tag: DW_TAG_member, name: "rr_ptr", scope: !4959, file: !4949, line: 84, baseType: !4947, size: 64, offset: 320)
!4970 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !4959, file: !4949, line: 85, baseType: !178, size: 128, align: 64, offset: 384)
!4971 = !DIDerivedType(tag: DW_TAG_member, name: "tb6_peers", scope: !4953, file: !4949, line: 395, baseType: !4972, size: 128, offset: 704)
!4972 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inet_peer_base", file: !4973, line: 61, size: 128, elements: !4974)
!4973 = !DIFile(filename: "./include/net/inetpeer.h", directory: "/home/lizy2001/genbc/linux")
!4974 = !{!4975, !4976, !4977}
!4975 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !4972, file: !4973, line: 62, baseType: !641, size: 64)
!4976 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4972, file: !4973, line: 63, baseType: !2638, size: 32, offset: 64)
!4977 = !DIDerivedType(tag: DW_TAG_member, name: "total", scope: !4972, file: !4973, line: 64, baseType: !6, size: 32, offset: 96)
!4978 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4953, file: !4949, line: 396, baseType: !199, size: 32, offset: 832)
!4979 = !DIDerivedType(tag: DW_TAG_member, name: "fib_seq", scope: !4953, file: !4949, line: 397, baseType: !199, size: 32, offset: 864)
!4980 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_next", scope: !4948, file: !4949, line: 165, baseType: !4947, size: 64, offset: 64)
!4981 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_node", scope: !4948, file: !4949, line: 166, baseType: !4962, size: 64, offset: 128)
!4982 = !DIDerivedType(tag: DW_TAG_member, scope: !4948, file: !4949, line: 173, baseType: !4983, size: 128, offset: 192)
!4983 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4948, file: !4949, line: 173, size: 128, elements: !4984)
!4984 = !{!4985, !4986}
!4985 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_siblings", scope: !4983, file: !4949, line: 174, baseType: !30, size: 128)
!4986 = !DIDerivedType(tag: DW_TAG_member, name: "nh_list", scope: !4983, file: !4949, line: 175, baseType: !30, size: 128)
!4987 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_nsiblings", scope: !4948, file: !4949, line: 177, baseType: !199, size: 32, offset: 320)
!4988 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_ref", scope: !4948, file: !4949, line: 179, baseType: !880, size: 32, offset: 352)
!4989 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !4948, file: !4949, line: 180, baseType: !135, size: 64, offset: 384)
!4990 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_metrics", scope: !4948, file: !4949, line: 181, baseType: !4991, size: 64, offset: 448)
!4991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4992, size: 64)
!4992 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dst_metrics", file: !4993, line: 81, size: 576, align: 32, elements: !4994)
!4993 = !DIFile(filename: "./include/net/dst.h", directory: "/home/lizy2001/genbc/linux")
!4994 = !{!4995, !4999}
!4995 = !DIDerivedType(tag: DW_TAG_member, name: "metrics", scope: !4992, file: !4993, line: 82, baseType: !4996, size: 544)
!4996 = !DICompositeType(tag: DW_TAG_array_type, baseType: !229, size: 544, elements: !4997)
!4997 = !{!4998}
!4998 = !DISubrange(count: 17)
!4999 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !4992, file: !4993, line: 83, baseType: !880, size: 32, offset: 544)
!5000 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_dst", scope: !4948, file: !4949, line: 184, baseType: !5001, size: 160, offset: 512)
!5001 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rt6key", file: !4949, line: 129, size: 160, elements: !5002)
!5002 = !{!5003, !5004}
!5003 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !5001, file: !4949, line: 130, baseType: !4883, size: 128)
!5004 = !DIDerivedType(tag: DW_TAG_member, name: "plen", scope: !5001, file: !4949, line: 131, baseType: !6, size: 32, offset: 128)
!5005 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_flags", scope: !4948, file: !4949, line: 185, baseType: !229, size: 32, offset: 672)
!5006 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_src", scope: !4948, file: !4949, line: 186, baseType: !5001, size: 160, offset: 704)
!5007 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_prefsrc", scope: !4948, file: !4949, line: 187, baseType: !5001, size: 160, offset: 864)
!5008 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_metric", scope: !4948, file: !4949, line: 189, baseType: !229, size: 32, offset: 1024)
!5009 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_protocol", scope: !4948, file: !4949, line: 190, baseType: !1403, size: 8, offset: 1056)
!5010 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_type", scope: !4948, file: !4949, line: 191, baseType: !1403, size: 8, offset: 1064)
!5011 = !DIDerivedType(tag: DW_TAG_member, name: "should_flush", scope: !4948, file: !4949, line: 192, baseType: !1403, size: 1, offset: 1072, flags: DIFlagBitField, extraData: i64 1072)
!5012 = !DIDerivedType(tag: DW_TAG_member, name: "dst_nocount", scope: !4948, file: !4949, line: 193, baseType: !1403, size: 1, offset: 1073, flags: DIFlagBitField, extraData: i64 1072)
!5013 = !DIDerivedType(tag: DW_TAG_member, name: "dst_nopolicy", scope: !4948, file: !4949, line: 194, baseType: !1403, size: 1, offset: 1074, flags: DIFlagBitField, extraData: i64 1072)
!5014 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_destroying", scope: !4948, file: !4949, line: 195, baseType: !1403, size: 1, offset: 1075, flags: DIFlagBitField, extraData: i64 1072)
!5015 = !DIDerivedType(tag: DW_TAG_member, name: "offload", scope: !4948, file: !4949, line: 196, baseType: !1403, size: 1, offset: 1076, flags: DIFlagBitField, extraData: i64 1072)
!5016 = !DIDerivedType(tag: DW_TAG_member, name: "trap", scope: !4948, file: !4949, line: 197, baseType: !1403, size: 1, offset: 1077, flags: DIFlagBitField, extraData: i64 1072)
!5017 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !4948, file: !4949, line: 198, baseType: !1403, size: 2, offset: 1078, flags: DIFlagBitField, extraData: i64 1072)
!5018 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !4948, file: !4949, line: 200, baseType: !178, size: 128, align: 64, offset: 1088)
!5019 = !DIDerivedType(tag: DW_TAG_member, name: "nh", scope: !4948, file: !4949, line: 201, baseType: !5020, size: 64, offset: 1216)
!5020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5021, size: 64)
!5021 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nexthop", file: !5022, line: 84, size: 1088, elements: !5023)
!5022 = !DIFile(filename: "./include/net/nexthop.h", directory: "/home/lizy2001/genbc/linux")
!5023 = !{!5024, !5025, !5026, !5027, !5028, !5029, !5030, !5031, !5032, !5033, !5034, !5035, !5036}
!5024 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !5021, file: !5022, line: 85, baseType: !645, size: 192, align: 64)
!5025 = !DIDerivedType(tag: DW_TAG_member, name: "fi_list", scope: !5021, file: !5022, line: 86, baseType: !30, size: 128, offset: 192)
!5026 = !DIDerivedType(tag: DW_TAG_member, name: "f6i_list", scope: !5021, file: !5022, line: 87, baseType: !30, size: 128, offset: 320)
!5027 = !DIDerivedType(tag: DW_TAG_member, name: "fdb_list", scope: !5021, file: !5022, line: 88, baseType: !30, size: 128, offset: 448)
!5028 = !DIDerivedType(tag: DW_TAG_member, name: "grp_list", scope: !5021, file: !5022, line: 89, baseType: !30, size: 128, offset: 576)
!5029 = !DIDerivedType(tag: DW_TAG_member, name: "net", scope: !5021, file: !5022, line: 90, baseType: !1975, size: 64, offset: 704)
!5030 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !5021, file: !5022, line: 92, baseType: !229, size: 32, offset: 768)
!5031 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !5021, file: !5022, line: 94, baseType: !1403, size: 8, offset: 800)
!5032 = !DIDerivedType(tag: DW_TAG_member, name: "nh_flags", scope: !5021, file: !5022, line: 95, baseType: !1403, size: 8, offset: 808)
!5033 = !DIDerivedType(tag: DW_TAG_member, name: "is_group", scope: !5021, file: !5022, line: 96, baseType: !304, size: 8, offset: 816)
!5034 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !5021, file: !5022, line: 98, baseType: !880, size: 32, offset: 832)
!5035 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !5021, file: !5022, line: 99, baseType: !178, size: 128, align: 64, offset: 896)
!5036 = !DIDerivedType(tag: DW_TAG_member, scope: !5021, file: !5022, line: 101, baseType: !5037, size: 64, offset: 1024)
!5037 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5021, file: !5022, line: 101, size: 64, elements: !5038)
!5038 = !{!5039, !5275}
!5039 = !DIDerivedType(tag: DW_TAG_member, name: "nh_info", scope: !5037, file: !5022, line: 102, baseType: !5040, size: 64)
!5040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5041, size: 64)
!5041 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nh_info", file: !5022, line: 51, size: 1088, elements: !5042)
!5042 = !{!5043, !5044, !5045, !5046, !5047, !5048}
!5043 = !DIDerivedType(tag: DW_TAG_member, name: "dev_hash", scope: !5041, file: !5022, line: 52, baseType: !455, size: 128)
!5044 = !DIDerivedType(tag: DW_TAG_member, name: "nh_parent", scope: !5041, file: !5022, line: 53, baseType: !5020, size: 64, offset: 128)
!5045 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !5041, file: !5022, line: 55, baseType: !1403, size: 8, offset: 192)
!5046 = !DIDerivedType(tag: DW_TAG_member, name: "reject_nh", scope: !5041, file: !5022, line: 56, baseType: !304, size: 8, offset: 200)
!5047 = !DIDerivedType(tag: DW_TAG_member, name: "fdb_nh", scope: !5041, file: !5022, line: 57, baseType: !304, size: 8, offset: 208)
!5048 = !DIDerivedType(tag: DW_TAG_member, scope: !5041, file: !5022, line: 59, baseType: !5049, size: 832, offset: 256)
!5049 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5041, file: !5022, line: 59, size: 832, elements: !5050)
!5050 = !{!5051, !5216, !5249}
!5051 = !DIDerivedType(tag: DW_TAG_member, name: "fib_nhc", scope: !5049, file: !5022, line: 60, baseType: !5052, size: 576)
!5052 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fib_nh_common", file: !5053, line: 80, size: 576, elements: !5054)
!5053 = !DIFile(filename: "./include/net/ip_fib.h", directory: "/home/lizy2001/genbc/linux")
!5054 = !{!5055, !5056, !5057, !5058, !5059, !5060, !5061, !5081, !5086, !5087, !5088, !5196, !5197}
!5055 = !DIDerivedType(tag: DW_TAG_member, name: "nhc_dev", scope: !5052, file: !5053, line: 81, baseType: !2169, size: 64)
!5056 = !DIDerivedType(tag: DW_TAG_member, name: "nhc_oif", scope: !5052, file: !5053, line: 82, baseType: !6, size: 32, offset: 64)
!5057 = !DIDerivedType(tag: DW_TAG_member, name: "nhc_scope", scope: !5052, file: !5053, line: 83, baseType: !241, size: 8, offset: 96)
!5058 = !DIDerivedType(tag: DW_TAG_member, name: "nhc_family", scope: !5052, file: !5053, line: 84, baseType: !1403, size: 8, offset: 104)
!5059 = !DIDerivedType(tag: DW_TAG_member, name: "nhc_gw_family", scope: !5052, file: !5053, line: 85, baseType: !1403, size: 8, offset: 112)
!5060 = !DIDerivedType(tag: DW_TAG_member, name: "nhc_flags", scope: !5052, file: !5053, line: 86, baseType: !241, size: 8, offset: 120)
!5061 = !DIDerivedType(tag: DW_TAG_member, name: "nhc_lwtstate", scope: !5052, file: !5053, line: 87, baseType: !5062, size: 64, offset: 128)
!5062 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5063, size: 64)
!5063 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lwtunnel_state", file: !5064, line: 25, size: 384, elements: !5065)
!5064 = !DIFile(filename: "./include/net/lwtunnel.h", directory: "/home/lizy2001/genbc/linux")
!5065 = !{!5066, !5067, !5068, !5069, !5070, !5074, !5078, !5079}
!5066 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5063, file: !5064, line: 26, baseType: !745, size: 16)
!5067 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5063, file: !5064, line: 27, baseType: !745, size: 16, offset: 16)
!5068 = !DIDerivedType(tag: DW_TAG_member, name: "headroom", scope: !5063, file: !5064, line: 28, baseType: !745, size: 16, offset: 32)
!5069 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !5063, file: !5064, line: 29, baseType: !632, size: 32, offset: 64)
!5070 = !DIDerivedType(tag: DW_TAG_member, name: "orig_output", scope: !5063, file: !5064, line: 30, baseType: !5071, size: 64, offset: 128)
!5071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5072, size: 64)
!5072 = !DISubroutineType(types: !5073)
!5073 = !{!6, !1975, !2003, !2153}
!5074 = !DIDerivedType(tag: DW_TAG_member, name: "orig_input", scope: !5063, file: !5064, line: 31, baseType: !5075, size: 64, offset: 192)
!5075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5076, size: 64)
!5076 = !DISubroutineType(types: !5077)
!5077 = !{!6, !2153}
!5078 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !5063, file: !5064, line: 32, baseType: !178, size: 128, align: 64, offset: 256)
!5079 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5063, file: !5064, line: 33, baseType: !5080, offset: 384)
!5080 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1404, elements: !2189)
!5081 = !DIDerivedType(tag: DW_TAG_member, name: "nhc_gw", scope: !5052, file: !5053, line: 92, baseType: !5082, size: 128, offset: 192)
!5082 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5052, file: !5053, line: 89, size: 128, elements: !5083)
!5083 = !{!5084, !5085}
!5084 = !DIDerivedType(tag: DW_TAG_member, name: "ipv4", scope: !5082, file: !5053, line: 90, baseType: !2019, size: 32)
!5085 = !DIDerivedType(tag: DW_TAG_member, name: "ipv6", scope: !5082, file: !5053, line: 91, baseType: !4883, size: 128)
!5086 = !DIDerivedType(tag: DW_TAG_member, name: "nhc_weight", scope: !5052, file: !5053, line: 94, baseType: !6, size: 32, offset: 320)
!5087 = !DIDerivedType(tag: DW_TAG_member, name: "nhc_upper_bound", scope: !5052, file: !5053, line: 95, baseType: !632, size: 32, offset: 352)
!5088 = !DIDerivedType(tag: DW_TAG_member, name: "nhc_pcpu_rth_output", scope: !5052, file: !5053, line: 98, baseType: !5089, size: 64, offset: 384)
!5089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5090, size: 64)
!5090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5091, size: 64)
!5091 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtable", file: !5092, line: 49, size: 1408, elements: !5093)
!5092 = !DIFile(filename: "./include/net/route.h", directory: "/home/lizy2001/genbc/linux")
!5093 = !{!5094, !5178, !5179, !5180, !5181, !5182, !5183, !5184, !5185, !5190, !5191, !5192, !5193}
!5094 = !DIDerivedType(tag: DW_TAG_member, name: "dst", scope: !5091, file: !5092, line: 50, baseType: !5095, size: 896)
!5095 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dst_entry", file: !4993, line: 24, size: 896, elements: !5096)
!5096 = !{!5097, !5098, !5161, !5162, !5163, !5164, !5165, !5166, !5167, !5168, !5169, !5170, !5171, !5172, !5173, !5174, !5175, !5176, !5177}
!5097 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !5095, file: !4993, line: 25, baseType: !2169, size: 64)
!5098 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !5095, file: !4993, line: 26, baseType: !5099, size: 64, offset: 64)
!5099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5100, size: 64)
!5100 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dst_ops", file: !5101, line: 15, size: 1088, elements: !5102)
!5101 = !DIFile(filename: "./include/net/dst_ops.h", directory: "/home/lizy2001/genbc/linux")
!5102 = !{!5103, !5104, !5105, !5109, !5114, !5120, !5121, !5125, !5129, !5133, !5137, !5138, !5142, !5146, !5147, !5151, !5155, !5156}
!5103 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !5100, file: !5101, line: 16, baseType: !127, size: 16)
!5104 = !DIDerivedType(tag: DW_TAG_member, name: "gc_thresh", scope: !5100, file: !5101, line: 17, baseType: !199, size: 32, offset: 32)
!5105 = !DIDerivedType(tag: DW_TAG_member, name: "gc", scope: !5100, file: !5101, line: 19, baseType: !5106, size: 64, offset: 64)
!5106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5107, size: 64)
!5107 = !DISubroutineType(types: !5108)
!5108 = !{!6, !5099}
!5109 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !5100, file: !5101, line: 20, baseType: !5110, size: 64, offset: 128)
!5110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5111, size: 64)
!5111 = !DISubroutineType(types: !5112)
!5112 = !{!5113, !5113, !231}
!5113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5095, size: 64)
!5114 = !DIDerivedType(tag: DW_TAG_member, name: "default_advmss", scope: !5100, file: !5101, line: 21, baseType: !5115, size: 64, offset: 192)
!5115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5116, size: 64)
!5116 = !DISubroutineType(types: !5117)
!5117 = !{!199, !5118}
!5118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5119, size: 64)
!5119 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5095)
!5120 = !DIDerivedType(tag: DW_TAG_member, name: "mtu", scope: !5100, file: !5101, line: 22, baseType: !5115, size: 64, offset: 256)
!5121 = !DIDerivedType(tag: DW_TAG_member, name: "cow_metrics", scope: !5100, file: !5101, line: 23, baseType: !5122, size: 64, offset: 320)
!5122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5123, size: 64)
!5123 = !DISubroutineType(types: !5124)
!5124 = !{!1467, !5113, !135}
!5125 = !DIDerivedType(tag: DW_TAG_member, name: "destroy", scope: !5100, file: !5101, line: 24, baseType: !5126, size: 64, offset: 384)
!5126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5127, size: 64)
!5127 = !DISubroutineType(types: !5128)
!5128 = !{null, !5113}
!5129 = !DIDerivedType(tag: DW_TAG_member, name: "ifdown", scope: !5100, file: !5101, line: 25, baseType: !5130, size: 64, offset: 448)
!5130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5131, size: 64)
!5131 = !DISubroutineType(types: !5132)
!5132 = !{null, !5113, !2169, !6}
!5133 = !DIDerivedType(tag: DW_TAG_member, name: "negative_advice", scope: !5100, file: !5101, line: 27, baseType: !5134, size: 64, offset: 512)
!5134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5135, size: 64)
!5135 = !DISubroutineType(types: !5136)
!5136 = !{!5113, !5113}
!5137 = !DIDerivedType(tag: DW_TAG_member, name: "link_failure", scope: !5100, file: !5101, line: 28, baseType: !2485, size: 64, offset: 576)
!5138 = !DIDerivedType(tag: DW_TAG_member, name: "update_pmtu", scope: !5100, file: !5101, line: 29, baseType: !5139, size: 64, offset: 640)
!5139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5140, size: 64)
!5140 = !DISubroutineType(types: !5141)
!5141 = !{null, !5113, !2003, !2153, !229, !304}
!5142 = !DIDerivedType(tag: DW_TAG_member, name: "redirect", scope: !5100, file: !5101, line: 32, baseType: !5143, size: 64, offset: 704)
!5143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5144, size: 64)
!5144 = !DISubroutineType(types: !5145)
!5145 = !{null, !5113, !2003, !2153}
!5146 = !DIDerivedType(tag: DW_TAG_member, name: "local_out", scope: !5100, file: !5101, line: 34, baseType: !5071, size: 64, offset: 768)
!5147 = !DIDerivedType(tag: DW_TAG_member, name: "neigh_lookup", scope: !5100, file: !5101, line: 35, baseType: !5148, size: 64, offset: 832)
!5148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5149, size: 64)
!5149 = !DISubroutineType(types: !5150)
!5150 = !{!2438, !5118, !2153, !2454}
!5151 = !DIDerivedType(tag: DW_TAG_member, name: "confirm_neigh", scope: !5100, file: !5101, line: 38, baseType: !5152, size: 64, offset: 896)
!5152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5153, size: 64)
!5153 = !DISubroutineType(types: !5154)
!5154 = !{null, !5118, !2454}
!5155 = !DIDerivedType(tag: DW_TAG_member, name: "kmem_cachep", scope: !5100, file: !5101, line: 41, baseType: !985, size: 64, offset: 960)
!5156 = !DIDerivedType(tag: DW_TAG_member, name: "pcpuc_entries", scope: !5100, file: !5101, line: 43, baseType: !5157, size: 64, offset: 1024)
!5157 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_counter", file: !5158, line: 97, size: 64, elements: !5159)
!5158 = !DIFile(filename: "./include/linux/percpu_counter.h", directory: "/home/lizy2001/genbc/linux")
!5159 = !{!5160}
!5160 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !5157, file: !5158, line: 98, baseType: !568, size: 64)
!5161 = !DIDerivedType(tag: DW_TAG_member, name: "_metrics", scope: !5095, file: !4993, line: 27, baseType: !135, size: 64, offset: 128)
!5162 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !5095, file: !4993, line: 28, baseType: !135, size: 64, offset: 192)
!5163 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !5095, file: !4993, line: 32, baseType: !159, size: 64, offset: 256)
!5164 = !DIDerivedType(tag: DW_TAG_member, name: "input", scope: !5095, file: !4993, line: 34, baseType: !5075, size: 64, offset: 320)
!5165 = !DIDerivedType(tag: DW_TAG_member, name: "output", scope: !5095, file: !4993, line: 35, baseType: !5071, size: 64, offset: 384)
!5166 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5095, file: !4993, line: 37, baseType: !127, size: 16, offset: 448)
!5167 = !DIDerivedType(tag: DW_TAG_member, name: "obsolete", scope: !5095, file: !4993, line: 54, baseType: !1256, size: 16, offset: 464)
!5168 = !DIDerivedType(tag: DW_TAG_member, name: "header_len", scope: !5095, file: !4993, line: 59, baseType: !127, size: 16, offset: 480)
!5169 = !DIDerivedType(tag: DW_TAG_member, name: "trailer_len", scope: !5095, file: !4993, line: 60, baseType: !127, size: 16, offset: 496)
!5170 = !DIDerivedType(tag: DW_TAG_member, name: "__refcnt", scope: !5095, file: !4993, line: 67, baseType: !632, size: 32, offset: 512)
!5171 = !DIDerivedType(tag: DW_TAG_member, name: "__use", scope: !5095, file: !4993, line: 69, baseType: !6, size: 32, offset: 544)
!5172 = !DIDerivedType(tag: DW_TAG_member, name: "lastuse", scope: !5095, file: !4993, line: 70, baseType: !135, size: 64, offset: 576)
!5173 = !DIDerivedType(tag: DW_TAG_member, name: "lwtstate", scope: !5095, file: !4993, line: 71, baseType: !5062, size: 64, offset: 640)
!5174 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !5095, file: !4993, line: 72, baseType: !178, size: 128, align: 64, offset: 704)
!5175 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !5095, file: !4993, line: 73, baseType: !1256, size: 16, offset: 832)
!5176 = !DIDerivedType(tag: DW_TAG_member, name: "__pad", scope: !5095, file: !4993, line: 74, baseType: !1256, size: 16, offset: 848)
!5177 = !DIDerivedType(tag: DW_TAG_member, name: "tclassid", scope: !5095, file: !4993, line: 75, baseType: !231, size: 32, offset: 864)
!5178 = !DIDerivedType(tag: DW_TAG_member, name: "rt_genid", scope: !5091, file: !5092, line: 52, baseType: !6, size: 32, offset: 896)
!5179 = !DIDerivedType(tag: DW_TAG_member, name: "rt_flags", scope: !5091, file: !5092, line: 53, baseType: !199, size: 32, offset: 928)
!5180 = !DIDerivedType(tag: DW_TAG_member, name: "rt_type", scope: !5091, file: !5092, line: 54, baseType: !745, size: 16, offset: 960)
!5181 = !DIDerivedType(tag: DW_TAG_member, name: "rt_is_input", scope: !5091, file: !5092, line: 55, baseType: !1404, size: 8, offset: 976)
!5182 = !DIDerivedType(tag: DW_TAG_member, name: "rt_uses_gateway", scope: !5091, file: !5092, line: 56, baseType: !1404, size: 8, offset: 984)
!5183 = !DIDerivedType(tag: DW_TAG_member, name: "rt_iif", scope: !5091, file: !5092, line: 58, baseType: !6, size: 32, offset: 992)
!5184 = !DIDerivedType(tag: DW_TAG_member, name: "rt_gw_family", scope: !5091, file: !5092, line: 60, baseType: !1403, size: 8, offset: 1024)
!5185 = !DIDerivedType(tag: DW_TAG_member, scope: !5091, file: !5092, line: 62, baseType: !5186, size: 128, offset: 1056)
!5186 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5091, file: !5092, line: 62, size: 128, elements: !5187)
!5187 = !{!5188, !5189}
!5188 = !DIDerivedType(tag: DW_TAG_member, name: "rt_gw4", scope: !5186, file: !5092, line: 63, baseType: !2019, size: 32)
!5189 = !DIDerivedType(tag: DW_TAG_member, name: "rt_gw6", scope: !5186, file: !5092, line: 64, baseType: !4883, size: 128)
!5190 = !DIDerivedType(tag: DW_TAG_member, name: "rt_mtu_locked", scope: !5091, file: !5092, line: 68, baseType: !229, size: 1, offset: 1184, flags: DIFlagBitField, extraData: i64 1184)
!5191 = !DIDerivedType(tag: DW_TAG_member, name: "rt_pmtu", scope: !5091, file: !5092, line: 69, baseType: !229, size: 31, offset: 1185, flags: DIFlagBitField, extraData: i64 1184)
!5192 = !DIDerivedType(tag: DW_TAG_member, name: "rt_uncached", scope: !5091, file: !5092, line: 71, baseType: !30, size: 128, offset: 1216)
!5193 = !DIDerivedType(tag: DW_TAG_member, name: "rt_uncached_list", scope: !5091, file: !5092, line: 72, baseType: !5194, size: 64, offset: 1344)
!5194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5195, size: 64)
!5195 = !DICompositeType(tag: DW_TAG_structure_type, name: "uncached_list", file: !5092, line: 48, flags: DIFlagFwdDecl)
!5196 = !DIDerivedType(tag: DW_TAG_member, name: "nhc_rth_input", scope: !5052, file: !5053, line: 99, baseType: !5090, size: 64, offset: 448)
!5197 = !DIDerivedType(tag: DW_TAG_member, name: "nhc_exceptions", scope: !5052, file: !5053, line: 100, baseType: !5198, size: 64, offset: 512)
!5198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5199, size: 64)
!5199 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fnhe_hash_bucket", file: !5053, line: 72, size: 64, elements: !5200)
!5200 = !{!5201}
!5201 = !DIDerivedType(tag: DW_TAG_member, name: "chain", scope: !5199, file: !5053, line: 73, baseType: !5202, size: 64)
!5202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5203, size: 64)
!5203 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fib_nh_exception", file: !5053, line: 58, size: 640, elements: !5204)
!5204 = !{!5205, !5206, !5207, !5208, !5209, !5210, !5211, !5212, !5213, !5214, !5215}
!5205 = !DIDerivedType(tag: DW_TAG_member, name: "fnhe_next", scope: !5203, file: !5053, line: 59, baseType: !5202, size: 64)
!5206 = !DIDerivedType(tag: DW_TAG_member, name: "fnhe_genid", scope: !5203, file: !5053, line: 60, baseType: !6, size: 32, offset: 64)
!5207 = !DIDerivedType(tag: DW_TAG_member, name: "fnhe_daddr", scope: !5203, file: !5053, line: 61, baseType: !2019, size: 32, offset: 96)
!5208 = !DIDerivedType(tag: DW_TAG_member, name: "fnhe_pmtu", scope: !5203, file: !5053, line: 62, baseType: !229, size: 32, offset: 128)
!5209 = !DIDerivedType(tag: DW_TAG_member, name: "fnhe_mtu_locked", scope: !5203, file: !5053, line: 63, baseType: !304, size: 8, offset: 160)
!5210 = !DIDerivedType(tag: DW_TAG_member, name: "fnhe_gw", scope: !5203, file: !5053, line: 64, baseType: !2019, size: 32, offset: 192)
!5211 = !DIDerivedType(tag: DW_TAG_member, name: "fnhe_expires", scope: !5203, file: !5053, line: 65, baseType: !135, size: 64, offset: 256)
!5212 = !DIDerivedType(tag: DW_TAG_member, name: "fnhe_rth_input", scope: !5203, file: !5053, line: 66, baseType: !5090, size: 64, offset: 320)
!5213 = !DIDerivedType(tag: DW_TAG_member, name: "fnhe_rth_output", scope: !5203, file: !5053, line: 67, baseType: !5090, size: 64, offset: 384)
!5214 = !DIDerivedType(tag: DW_TAG_member, name: "fnhe_stamp", scope: !5203, file: !5053, line: 68, baseType: !135, size: 64, offset: 448)
!5215 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !5203, file: !5053, line: 69, baseType: !178, size: 128, align: 64, offset: 512)
!5216 = !DIDerivedType(tag: DW_TAG_member, name: "fib_nh", scope: !5049, file: !5022, line: 61, baseType: !5217, size: 832)
!5217 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fib_nh", file: !5053, line: 103, size: 832, elements: !5218)
!5218 = !{!5219, !5220, !5221, !5247, !5248}
!5219 = !DIDerivedType(tag: DW_TAG_member, name: "nh_common", scope: !5217, file: !5053, line: 104, baseType: !5052, size: 576)
!5220 = !DIDerivedType(tag: DW_TAG_member, name: "nh_hash", scope: !5217, file: !5053, line: 105, baseType: !455, size: 128, offset: 576)
!5221 = !DIDerivedType(tag: DW_TAG_member, name: "nh_parent", scope: !5217, file: !5053, line: 106, baseType: !5222, size: 64, offset: 704)
!5222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5223, size: 64)
!5223 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fib_info", file: !5053, line: 131, size: 1024, elements: !5224)
!5224 = !{!5225, !5226, !5227, !5228, !5229, !5230, !5231, !5232, !5233, !5234, !5235, !5236, !5237, !5238, !5239, !5240, !5241, !5242, !5243, !5244, !5245}
!5225 = !DIDerivedType(tag: DW_TAG_member, name: "fib_hash", scope: !5223, file: !5053, line: 132, baseType: !455, size: 128)
!5226 = !DIDerivedType(tag: DW_TAG_member, name: "fib_lhash", scope: !5223, file: !5053, line: 133, baseType: !455, size: 128, offset: 128)
!5227 = !DIDerivedType(tag: DW_TAG_member, name: "nh_list", scope: !5223, file: !5053, line: 134, baseType: !30, size: 128, offset: 256)
!5228 = !DIDerivedType(tag: DW_TAG_member, name: "fib_net", scope: !5223, file: !5053, line: 135, baseType: !1975, size: 64, offset: 384)
!5229 = !DIDerivedType(tag: DW_TAG_member, name: "fib_treeref", scope: !5223, file: !5053, line: 136, baseType: !6, size: 32, offset: 448)
!5230 = !DIDerivedType(tag: DW_TAG_member, name: "fib_clntref", scope: !5223, file: !5053, line: 137, baseType: !880, size: 32, offset: 480)
!5231 = !DIDerivedType(tag: DW_TAG_member, name: "fib_flags", scope: !5223, file: !5053, line: 138, baseType: !199, size: 32, offset: 512)
!5232 = !DIDerivedType(tag: DW_TAG_member, name: "fib_dead", scope: !5223, file: !5053, line: 139, baseType: !241, size: 8, offset: 544)
!5233 = !DIDerivedType(tag: DW_TAG_member, name: "fib_protocol", scope: !5223, file: !5053, line: 140, baseType: !241, size: 8, offset: 552)
!5234 = !DIDerivedType(tag: DW_TAG_member, name: "fib_scope", scope: !5223, file: !5053, line: 141, baseType: !241, size: 8, offset: 560)
!5235 = !DIDerivedType(tag: DW_TAG_member, name: "fib_type", scope: !5223, file: !5053, line: 142, baseType: !241, size: 8, offset: 568)
!5236 = !DIDerivedType(tag: DW_TAG_member, name: "fib_prefsrc", scope: !5223, file: !5053, line: 143, baseType: !2019, size: 32, offset: 576)
!5237 = !DIDerivedType(tag: DW_TAG_member, name: "fib_tb_id", scope: !5223, file: !5053, line: 144, baseType: !229, size: 32, offset: 608)
!5238 = !DIDerivedType(tag: DW_TAG_member, name: "fib_priority", scope: !5223, file: !5053, line: 145, baseType: !229, size: 32, offset: 640)
!5239 = !DIDerivedType(tag: DW_TAG_member, name: "fib_metrics", scope: !5223, file: !5053, line: 146, baseType: !4991, size: 64, offset: 704)
!5240 = !DIDerivedType(tag: DW_TAG_member, name: "fib_nhs", scope: !5223, file: !5053, line: 151, baseType: !6, size: 32, offset: 768)
!5241 = !DIDerivedType(tag: DW_TAG_member, name: "fib_nh_is_v6", scope: !5223, file: !5053, line: 152, baseType: !304, size: 8, offset: 800)
!5242 = !DIDerivedType(tag: DW_TAG_member, name: "nh_updated", scope: !5223, file: !5053, line: 153, baseType: !304, size: 8, offset: 808)
!5243 = !DIDerivedType(tag: DW_TAG_member, name: "nh", scope: !5223, file: !5053, line: 154, baseType: !5020, size: 64, offset: 832)
!5244 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !5223, file: !5053, line: 155, baseType: !178, size: 128, align: 64, offset: 896)
!5245 = !DIDerivedType(tag: DW_TAG_member, name: "fib_nh", scope: !5223, file: !5053, line: 156, baseType: !5246, offset: 1024)
!5246 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5217, elements: !2189)
!5247 = !DIDerivedType(tag: DW_TAG_member, name: "nh_saddr", scope: !5217, file: !5053, line: 110, baseType: !2019, size: 32, offset: 768)
!5248 = !DIDerivedType(tag: DW_TAG_member, name: "nh_saddr_genid", scope: !5217, file: !5053, line: 111, baseType: !6, size: 32, offset: 800)
!5249 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_nh", scope: !5049, file: !5022, line: 62, baseType: !5250, size: 704)
!5250 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fib6_nh", file: !4949, line: 152, size: 704, elements: !5251)
!5251 = !{!5252, !5253, !5269}
!5252 = !DIDerivedType(tag: DW_TAG_member, name: "nh_common", scope: !5250, file: !4949, line: 153, baseType: !5052, size: 576)
!5253 = !DIDerivedType(tag: DW_TAG_member, name: "rt6i_pcpu", scope: !5250, file: !4949, line: 159, baseType: !5254, size: 64, offset: 576)
!5254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5255, size: 64)
!5255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5256, size: 64)
!5256 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rt6_info", file: !4949, line: 205, size: 1856, elements: !5257)
!5257 = !{!5258, !5259, !5260, !5261, !5262, !5263, !5264, !5265, !5266, !5267, !5268}
!5258 = !DIDerivedType(tag: DW_TAG_member, name: "dst", scope: !5256, file: !4949, line: 206, baseType: !5095, size: 896)
!5259 = !DIDerivedType(tag: DW_TAG_member, name: "from", scope: !5256, file: !4949, line: 207, baseType: !4947, size: 64, offset: 896)
!5260 = !DIDerivedType(tag: DW_TAG_member, name: "sernum", scope: !5256, file: !4949, line: 208, baseType: !6, size: 32, offset: 960)
!5261 = !DIDerivedType(tag: DW_TAG_member, name: "rt6i_dst", scope: !5256, file: !4949, line: 210, baseType: !5001, size: 160, offset: 992)
!5262 = !DIDerivedType(tag: DW_TAG_member, name: "rt6i_src", scope: !5256, file: !4949, line: 211, baseType: !5001, size: 160, offset: 1152)
!5263 = !DIDerivedType(tag: DW_TAG_member, name: "rt6i_gateway", scope: !5256, file: !4949, line: 212, baseType: !4883, size: 128, offset: 1312)
!5264 = !DIDerivedType(tag: DW_TAG_member, name: "rt6i_idev", scope: !5256, file: !4949, line: 213, baseType: !4894, size: 64, offset: 1472)
!5265 = !DIDerivedType(tag: DW_TAG_member, name: "rt6i_flags", scope: !5256, file: !4949, line: 214, baseType: !229, size: 32, offset: 1536)
!5266 = !DIDerivedType(tag: DW_TAG_member, name: "rt6i_uncached", scope: !5256, file: !4949, line: 216, baseType: !30, size: 128, offset: 1600)
!5267 = !DIDerivedType(tag: DW_TAG_member, name: "rt6i_uncached_list", scope: !5256, file: !4949, line: 217, baseType: !5194, size: 64, offset: 1728)
!5268 = !DIDerivedType(tag: DW_TAG_member, name: "rt6i_nfheader_len", scope: !5256, file: !4949, line: 220, baseType: !127, size: 16, offset: 1792)
!5269 = !DIDerivedType(tag: DW_TAG_member, name: "rt6i_exception_bucket", scope: !5250, file: !4949, line: 160, baseType: !5270, size: 64, offset: 640)
!5270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5271, size: 64)
!5271 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rt6_exception_bucket", file: !4949, line: 136, size: 128, elements: !5272)
!5272 = !{!5273, !5274}
!5273 = !DIDerivedType(tag: DW_TAG_member, name: "chain", scope: !5271, file: !4949, line: 137, baseType: !451, size: 64)
!5274 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !5271, file: !4949, line: 138, baseType: !6, size: 32, offset: 64)
!5275 = !DIDerivedType(tag: DW_TAG_member, name: "nh_grp", scope: !5037, file: !5022, line: 103, baseType: !5276, size: 64)
!5276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5277, size: 64)
!5277 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nh_group", file: !5022, line: 75, size: 128, elements: !5278)
!5278 = !{!5279, !5280, !5281, !5282, !5283, !5284}
!5279 = !DIDerivedType(tag: DW_TAG_member, name: "spare", scope: !5277, file: !5022, line: 76, baseType: !5276, size: 64)
!5280 = !DIDerivedType(tag: DW_TAG_member, name: "num_nh", scope: !5277, file: !5022, line: 77, baseType: !744, size: 16, offset: 64)
!5281 = !DIDerivedType(tag: DW_TAG_member, name: "mpath", scope: !5277, file: !5022, line: 78, baseType: !304, size: 8, offset: 80)
!5282 = !DIDerivedType(tag: DW_TAG_member, name: "fdb_nh", scope: !5277, file: !5022, line: 79, baseType: !304, size: 8, offset: 88)
!5283 = !DIDerivedType(tag: DW_TAG_member, name: "has_v4", scope: !5277, file: !5022, line: 80, baseType: !304, size: 8, offset: 96)
!5284 = !DIDerivedType(tag: DW_TAG_member, name: "nh_entries", scope: !5277, file: !5022, line: 81, baseType: !5285, offset: 128)
!5285 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5286, elements: !2189)
!5286 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nh_grp_entry", file: !5022, line: 66, size: 320, elements: !5287)
!5287 = !{!5288, !5289, !5290, !5291, !5292}
!5288 = !DIDerivedType(tag: DW_TAG_member, name: "nh", scope: !5286, file: !5022, line: 67, baseType: !5020, size: 64)
!5289 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !5286, file: !5022, line: 68, baseType: !1403, size: 8, offset: 64)
!5290 = !DIDerivedType(tag: DW_TAG_member, name: "upper_bound", scope: !5286, file: !5022, line: 69, baseType: !632, size: 32, offset: 96)
!5291 = !DIDerivedType(tag: DW_TAG_member, name: "nh_list", scope: !5286, file: !5022, line: 71, baseType: !30, size: 128, offset: 128)
!5292 = !DIDerivedType(tag: DW_TAG_member, name: "nh_parent", scope: !5286, file: !5022, line: 72, baseType: !5020, size: 64, offset: 256)
!5293 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_nh", scope: !4948, file: !4949, line: 202, baseType: !5294, offset: 1280)
!5294 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5250, elements: !2189)
!5295 = !DIDerivedType(tag: DW_TAG_member, name: "aca_next", scope: !4943, file: !4896, line: 143, baseType: !4942, size: 64, offset: 192)
!5296 = !DIDerivedType(tag: DW_TAG_member, name: "aca_addr_lst", scope: !4943, file: !4896, line: 144, baseType: !455, size: 128, offset: 256)
!5297 = !DIDerivedType(tag: DW_TAG_member, name: "aca_users", scope: !4943, file: !4896, line: 145, baseType: !6, size: 32, offset: 384)
!5298 = !DIDerivedType(tag: DW_TAG_member, name: "aca_refcnt", scope: !4943, file: !4896, line: 146, baseType: !880, size: 32, offset: 416)
!5299 = !DIDerivedType(tag: DW_TAG_member, name: "aca_cstamp", scope: !4943, file: !4896, line: 147, baseType: !135, size: 64, offset: 448)
!5300 = !DIDerivedType(tag: DW_TAG_member, name: "aca_tstamp", scope: !4943, file: !4896, line: 148, baseType: !135, size: 64, offset: 512)
!5301 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !4943, file: !4896, line: 149, baseType: !178, size: 128, align: 64, offset: 576)
!5302 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4895, file: !4896, line: 187, baseType: !834, offset: 1664)
!5303 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !4895, file: !4896, line: 188, baseType: !880, size: 32, offset: 1664)
!5304 = !DIDerivedType(tag: DW_TAG_member, name: "if_flags", scope: !4895, file: !4896, line: 189, baseType: !231, size: 32, offset: 1696)
!5305 = !DIDerivedType(tag: DW_TAG_member, name: "dead", scope: !4895, file: !4896, line: 190, baseType: !6, size: 32, offset: 1728)
!5306 = !DIDerivedType(tag: DW_TAG_member, name: "desync_factor", scope: !4895, file: !4896, line: 192, baseType: !229, size: 32, offset: 1760)
!5307 = !DIDerivedType(tag: DW_TAG_member, name: "tempaddr_list", scope: !4895, file: !4896, line: 193, baseType: !30, size: 128, offset: 1792)
!5308 = !DIDerivedType(tag: DW_TAG_member, name: "token", scope: !4895, file: !4896, line: 195, baseType: !4883, size: 128, offset: 1920)
!5309 = !DIDerivedType(tag: DW_TAG_member, name: "nd_parms", scope: !4895, file: !4896, line: 197, baseType: !2423, size: 64, offset: 2048)
!5310 = !DIDerivedType(tag: DW_TAG_member, name: "cnf", scope: !4895, file: !4896, line: 198, baseType: !5311, size: 1600, offset: 2112)
!5311 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ipv6_devconf", file: !5312, line: 12, size: 1600, elements: !5313)
!5312 = !DIFile(filename: "./include/linux/ipv6.h", directory: "/home/lizy2001/genbc/linux")
!5313 = !{!5314, !5315, !5316, !5317, !5318, !5319, !5320, !5321, !5322, !5323, !5324, !5325, !5326, !5327, !5328, !5329, !5330, !5331, !5332, !5333, !5334, !5335, !5336, !5337, !5338, !5339, !5340, !5341, !5342, !5343, !5344, !5345, !5346, !5347, !5348, !5349, !5354, !5355, !5356, !5357, !5358, !5359, !5360, !5361, !5362}
!5314 = !DIDerivedType(tag: DW_TAG_member, name: "forwarding", scope: !5311, file: !5312, line: 13, baseType: !1502, size: 32)
!5315 = !DIDerivedType(tag: DW_TAG_member, name: "hop_limit", scope: !5311, file: !5312, line: 14, baseType: !1502, size: 32, offset: 32)
!5316 = !DIDerivedType(tag: DW_TAG_member, name: "mtu6", scope: !5311, file: !5312, line: 15, baseType: !1502, size: 32, offset: 64)
!5317 = !DIDerivedType(tag: DW_TAG_member, name: "accept_ra", scope: !5311, file: !5312, line: 16, baseType: !1502, size: 32, offset: 96)
!5318 = !DIDerivedType(tag: DW_TAG_member, name: "accept_redirects", scope: !5311, file: !5312, line: 17, baseType: !1502, size: 32, offset: 128)
!5319 = !DIDerivedType(tag: DW_TAG_member, name: "autoconf", scope: !5311, file: !5312, line: 18, baseType: !1502, size: 32, offset: 160)
!5320 = !DIDerivedType(tag: DW_TAG_member, name: "dad_transmits", scope: !5311, file: !5312, line: 19, baseType: !1502, size: 32, offset: 192)
!5321 = !DIDerivedType(tag: DW_TAG_member, name: "rtr_solicits", scope: !5311, file: !5312, line: 20, baseType: !1502, size: 32, offset: 224)
!5322 = !DIDerivedType(tag: DW_TAG_member, name: "rtr_solicit_interval", scope: !5311, file: !5312, line: 21, baseType: !1502, size: 32, offset: 256)
!5323 = !DIDerivedType(tag: DW_TAG_member, name: "rtr_solicit_max_interval", scope: !5311, file: !5312, line: 22, baseType: !1502, size: 32, offset: 288)
!5324 = !DIDerivedType(tag: DW_TAG_member, name: "rtr_solicit_delay", scope: !5311, file: !5312, line: 23, baseType: !1502, size: 32, offset: 320)
!5325 = !DIDerivedType(tag: DW_TAG_member, name: "force_mld_version", scope: !5311, file: !5312, line: 24, baseType: !1502, size: 32, offset: 352)
!5326 = !DIDerivedType(tag: DW_TAG_member, name: "mldv1_unsolicited_report_interval", scope: !5311, file: !5312, line: 25, baseType: !1502, size: 32, offset: 384)
!5327 = !DIDerivedType(tag: DW_TAG_member, name: "mldv2_unsolicited_report_interval", scope: !5311, file: !5312, line: 26, baseType: !1502, size: 32, offset: 416)
!5328 = !DIDerivedType(tag: DW_TAG_member, name: "use_tempaddr", scope: !5311, file: !5312, line: 27, baseType: !1502, size: 32, offset: 448)
!5329 = !DIDerivedType(tag: DW_TAG_member, name: "temp_valid_lft", scope: !5311, file: !5312, line: 28, baseType: !1502, size: 32, offset: 480)
!5330 = !DIDerivedType(tag: DW_TAG_member, name: "temp_prefered_lft", scope: !5311, file: !5312, line: 29, baseType: !1502, size: 32, offset: 512)
!5331 = !DIDerivedType(tag: DW_TAG_member, name: "regen_max_retry", scope: !5311, file: !5312, line: 30, baseType: !1502, size: 32, offset: 544)
!5332 = !DIDerivedType(tag: DW_TAG_member, name: "max_desync_factor", scope: !5311, file: !5312, line: 31, baseType: !1502, size: 32, offset: 576)
!5333 = !DIDerivedType(tag: DW_TAG_member, name: "max_addresses", scope: !5311, file: !5312, line: 32, baseType: !1502, size: 32, offset: 608)
!5334 = !DIDerivedType(tag: DW_TAG_member, name: "accept_ra_defrtr", scope: !5311, file: !5312, line: 33, baseType: !1502, size: 32, offset: 640)
!5335 = !DIDerivedType(tag: DW_TAG_member, name: "accept_ra_min_hop_limit", scope: !5311, file: !5312, line: 34, baseType: !1502, size: 32, offset: 672)
!5336 = !DIDerivedType(tag: DW_TAG_member, name: "accept_ra_pinfo", scope: !5311, file: !5312, line: 35, baseType: !1502, size: 32, offset: 704)
!5337 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_routes_with_linkdown", scope: !5311, file: !5312, line: 36, baseType: !1502, size: 32, offset: 736)
!5338 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_ndp", scope: !5311, file: !5312, line: 45, baseType: !1502, size: 32, offset: 768)
!5339 = !DIDerivedType(tag: DW_TAG_member, name: "accept_source_route", scope: !5311, file: !5312, line: 46, baseType: !1502, size: 32, offset: 800)
!5340 = !DIDerivedType(tag: DW_TAG_member, name: "accept_ra_from_local", scope: !5311, file: !5312, line: 47, baseType: !1502, size: 32, offset: 832)
!5341 = !DIDerivedType(tag: DW_TAG_member, name: "disable_ipv6", scope: !5311, file: !5312, line: 55, baseType: !1502, size: 32, offset: 864)
!5342 = !DIDerivedType(tag: DW_TAG_member, name: "drop_unicast_in_l2_multicast", scope: !5311, file: !5312, line: 56, baseType: !1502, size: 32, offset: 896)
!5343 = !DIDerivedType(tag: DW_TAG_member, name: "accept_dad", scope: !5311, file: !5312, line: 57, baseType: !1502, size: 32, offset: 928)
!5344 = !DIDerivedType(tag: DW_TAG_member, name: "force_tllao", scope: !5311, file: !5312, line: 58, baseType: !1502, size: 32, offset: 960)
!5345 = !DIDerivedType(tag: DW_TAG_member, name: "ndisc_notify", scope: !5311, file: !5312, line: 59, baseType: !1502, size: 32, offset: 992)
!5346 = !DIDerivedType(tag: DW_TAG_member, name: "suppress_frag_ndisc", scope: !5311, file: !5312, line: 60, baseType: !1502, size: 32, offset: 1024)
!5347 = !DIDerivedType(tag: DW_TAG_member, name: "accept_ra_mtu", scope: !5311, file: !5312, line: 61, baseType: !1502, size: 32, offset: 1056)
!5348 = !DIDerivedType(tag: DW_TAG_member, name: "drop_unsolicited_na", scope: !5311, file: !5312, line: 62, baseType: !1502, size: 32, offset: 1088)
!5349 = !DIDerivedType(tag: DW_TAG_member, name: "stable_secret", scope: !5311, file: !5312, line: 66, baseType: !5350, size: 160, offset: 1120)
!5350 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ipv6_stable_secret", file: !5312, line: 63, size: 160, elements: !5351)
!5351 = !{!5352, !5353}
!5352 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !5350, file: !5312, line: 64, baseType: !304, size: 8)
!5353 = !DIDerivedType(tag: DW_TAG_member, name: "secret", scope: !5350, file: !5312, line: 65, baseType: !4883, size: 128, offset: 32)
!5354 = !DIDerivedType(tag: DW_TAG_member, name: "use_oif_addrs_only", scope: !5311, file: !5312, line: 67, baseType: !1502, size: 32, offset: 1280)
!5355 = !DIDerivedType(tag: DW_TAG_member, name: "keep_addr_on_down", scope: !5311, file: !5312, line: 68, baseType: !1502, size: 32, offset: 1312)
!5356 = !DIDerivedType(tag: DW_TAG_member, name: "seg6_enabled", scope: !5311, file: !5312, line: 69, baseType: !1502, size: 32, offset: 1344)
!5357 = !DIDerivedType(tag: DW_TAG_member, name: "enhanced_dad", scope: !5311, file: !5312, line: 73, baseType: !231, size: 32, offset: 1376)
!5358 = !DIDerivedType(tag: DW_TAG_member, name: "addr_gen_mode", scope: !5311, file: !5312, line: 74, baseType: !231, size: 32, offset: 1408)
!5359 = !DIDerivedType(tag: DW_TAG_member, name: "disable_policy", scope: !5311, file: !5312, line: 75, baseType: !1502, size: 32, offset: 1440)
!5360 = !DIDerivedType(tag: DW_TAG_member, name: "ndisc_tclass", scope: !5311, file: !5312, line: 76, baseType: !1502, size: 32, offset: 1472)
!5361 = !DIDerivedType(tag: DW_TAG_member, name: "rpl_seg_enabled", scope: !5311, file: !5312, line: 77, baseType: !1502, size: 32, offset: 1504)
!5362 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_header", scope: !5311, file: !5312, line: 79, baseType: !1813, size: 64, offset: 1536)
!5363 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !4895, file: !4896, line: 199, baseType: !5364, size: 256, offset: 3712)
!5364 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ipv6_devstat", file: !4896, line: 156, size: 256, elements: !5365)
!5365 = !{!5366, !5367, !5377, !5383}
!5366 = !DIDerivedType(tag: DW_TAG_member, name: "proc_dir_entry", scope: !5364, file: !4896, line: 157, baseType: !1997, size: 64)
!5367 = !DIDerivedType(tag: DW_TAG_member, name: "ipv6", scope: !5364, file: !4896, line: 158, baseType: !5368, size: 64, offset: 64)
!5368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5369, size: 64)
!5369 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ipstats_mib", file: !5370, line: 51, size: 2368, elements: !5371)
!5370 = !DIFile(filename: "./include/net/snmp.h", directory: "/home/lizy2001/genbc/linux")
!5371 = !{!5372, !5376}
!5372 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !5369, file: !5370, line: 53, baseType: !5373, size: 2368)
!5373 = !DICompositeType(tag: DW_TAG_array_type, baseType: !235, size: 2368, elements: !5374)
!5374 = !{!5375}
!5375 = !DISubrange(count: 37)
!5376 = !DIDerivedType(tag: DW_TAG_member, name: "syncp", scope: !5369, file: !5370, line: 54, baseType: !3776, offset: 2368)
!5377 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6dev", scope: !5364, file: !4896, line: 159, baseType: !5378, size: 64, offset: 128)
!5378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5379, size: 64)
!5379 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "icmpv6_mib_device", file: !5370, line: 75, size: 384, elements: !5380)
!5380 = !{!5381}
!5381 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !5379, file: !5370, line: 76, baseType: !5382, size: 384)
!5382 = !DICompositeType(tag: DW_TAG_array_type, baseType: !562, size: 384, elements: !1668)
!5383 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6msgdev", scope: !5364, file: !4896, line: 160, baseType: !5384, size: 64, offset: 192)
!5384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5385, size: 64)
!5385 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "icmpv6msg_mib_device", file: !5370, line: 85, size: 32768, elements: !5386)
!5386 = !{!5387}
!5387 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !5385, file: !5370, line: 86, baseType: !5388, size: 32768)
!5388 = !DICompositeType(tag: DW_TAG_array_type, baseType: !562, size: 32768, elements: !5389)
!5389 = !{!5390}
!5390 = !DISubrange(count: 512)
!5391 = !DIDerivedType(tag: DW_TAG_member, name: "rs_timer", scope: !4895, file: !4896, line: 201, baseType: !2566, size: 320, offset: 3968)
!5392 = !DIDerivedType(tag: DW_TAG_member, name: "rs_interval", scope: !4895, file: !4896, line: 202, baseType: !1502, size: 32, offset: 4288)
!5393 = !DIDerivedType(tag: DW_TAG_member, name: "rs_probes", scope: !4895, file: !4896, line: 203, baseType: !1404, size: 8, offset: 4320)
!5394 = !DIDerivedType(tag: DW_TAG_member, name: "tstamp", scope: !4895, file: !4896, line: 205, baseType: !135, size: 64, offset: 4352)
!5395 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !4895, file: !4896, line: 206, baseType: !178, size: 128, align: 64, offset: 4416)
!5396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4883, size: 64)
!5397 = !DIDerivedType(tag: DW_TAG_member, name: "header_ops", scope: !2170, file: !2171, line: 1933, baseType: !5398, size: 64, offset: 4160)
!5398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5399, size: 64)
!5399 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5400)
!5400 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "header_ops", file: !2171, line: 270, size: 384, elements: !5401)
!5401 = !{!5402, !5406, !5413, !5418, !5422, !5426}
!5402 = !DIDerivedType(tag: DW_TAG_member, name: "create", scope: !5400, file: !2171, line: 271, baseType: !5403, size: 64)
!5403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5404, size: 64)
!5404 = !DISubroutineType(types: !5405)
!5405 = !{!6, !2153, !2169, !127, !2454, !2454, !199}
!5406 = !DIDerivedType(tag: DW_TAG_member, name: "parse", scope: !5400, file: !2171, line: 274, baseType: !5407, size: 64, offset: 64)
!5407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5408, size: 64)
!5408 = !DISubroutineType(types: !5409)
!5409 = !{!6, !5410, !5412}
!5410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5411, size: 64)
!5411 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2154)
!5412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !241, size: 64)
!5413 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !5400, file: !2171, line: 275, baseType: !5414, size: 64, offset: 128)
!5414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5415, size: 64)
!5415 = !DISubroutineType(types: !5416)
!5416 = !{!6, !2463, !5417, !2037}
!5417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2648, size: 64)
!5418 = !DIDerivedType(tag: DW_TAG_member, name: "cache_update", scope: !5400, file: !2171, line: 276, baseType: !5419, size: 64, offset: 192)
!5419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5420, size: 64)
!5420 = !DISubroutineType(types: !5421)
!5421 = !{null, !5417, !2456, !239}
!5422 = !DIDerivedType(tag: DW_TAG_member, name: "validate", scope: !5400, file: !2171, line: 279, baseType: !5423, size: 64, offset: 256)
!5423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5424, size: 64)
!5424 = !DISubroutineType(types: !5425)
!5425 = !{!304, !26, !199}
!5426 = !DIDerivedType(tag: DW_TAG_member, name: "parse_protocol", scope: !5400, file: !2171, line: 280, baseType: !5427, size: 64, offset: 320)
!5427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5428, size: 64)
!5428 = !DISubroutineType(types: !5429)
!5429 = !{!2037, !5410}
!5430 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2170, file: !2171, line: 1935, baseType: !199, size: 32, offset: 4224)
!5431 = !DIDerivedType(tag: DW_TAG_member, name: "priv_flags", scope: !2170, file: !2171, line: 1936, baseType: !199, size: 32, offset: 4256)
!5432 = !DIDerivedType(tag: DW_TAG_member, name: "gflags", scope: !2170, file: !2171, line: 1938, baseType: !127, size: 16, offset: 4288)
!5433 = !DIDerivedType(tag: DW_TAG_member, name: "padded", scope: !2170, file: !2171, line: 1939, baseType: !127, size: 16, offset: 4304)
!5434 = !DIDerivedType(tag: DW_TAG_member, name: "operstate", scope: !2170, file: !2171, line: 1941, baseType: !241, size: 8, offset: 4320)
!5435 = !DIDerivedType(tag: DW_TAG_member, name: "link_mode", scope: !2170, file: !2171, line: 1942, baseType: !241, size: 8, offset: 4328)
!5436 = !DIDerivedType(tag: DW_TAG_member, name: "if_port", scope: !2170, file: !2171, line: 1944, baseType: !241, size: 8, offset: 4336)
!5437 = !DIDerivedType(tag: DW_TAG_member, name: "dma", scope: !2170, file: !2171, line: 1945, baseType: !241, size: 8, offset: 4344)
!5438 = !DIDerivedType(tag: DW_TAG_member, name: "mtu", scope: !2170, file: !2171, line: 1952, baseType: !199, size: 32, offset: 4352)
!5439 = !DIDerivedType(tag: DW_TAG_member, name: "min_mtu", scope: !2170, file: !2171, line: 1953, baseType: !199, size: 32, offset: 4384)
!5440 = !DIDerivedType(tag: DW_TAG_member, name: "max_mtu", scope: !2170, file: !2171, line: 1954, baseType: !199, size: 32, offset: 4416)
!5441 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2170, file: !2171, line: 1955, baseType: !127, size: 16, offset: 4448)
!5442 = !DIDerivedType(tag: DW_TAG_member, name: "hard_header_len", scope: !2170, file: !2171, line: 1956, baseType: !127, size: 16, offset: 4464)
!5443 = !DIDerivedType(tag: DW_TAG_member, name: "min_header_len", scope: !2170, file: !2171, line: 1957, baseType: !241, size: 8, offset: 4480)
!5444 = !DIDerivedType(tag: DW_TAG_member, name: "name_assign_type", scope: !2170, file: !2171, line: 1958, baseType: !241, size: 8, offset: 4488)
!5445 = !DIDerivedType(tag: DW_TAG_member, name: "needed_headroom", scope: !2170, file: !2171, line: 1960, baseType: !127, size: 16, offset: 4496)
!5446 = !DIDerivedType(tag: DW_TAG_member, name: "needed_tailroom", scope: !2170, file: !2171, line: 1961, baseType: !127, size: 16, offset: 4512)
!5447 = !DIDerivedType(tag: DW_TAG_member, name: "perm_addr", scope: !2170, file: !2171, line: 1964, baseType: !2644, size: 256, offset: 4528)
!5448 = !DIDerivedType(tag: DW_TAG_member, name: "addr_assign_type", scope: !2170, file: !2171, line: 1965, baseType: !241, size: 8, offset: 4784)
!5449 = !DIDerivedType(tag: DW_TAG_member, name: "addr_len", scope: !2170, file: !2171, line: 1966, baseType: !241, size: 8, offset: 4792)
!5450 = !DIDerivedType(tag: DW_TAG_member, name: "upper_level", scope: !2170, file: !2171, line: 1967, baseType: !241, size: 8, offset: 4800)
!5451 = !DIDerivedType(tag: DW_TAG_member, name: "lower_level", scope: !2170, file: !2171, line: 1968, baseType: !241, size: 8, offset: 4808)
!5452 = !DIDerivedType(tag: DW_TAG_member, name: "neigh_priv_len", scope: !2170, file: !2171, line: 1970, baseType: !127, size: 16, offset: 4816)
!5453 = !DIDerivedType(tag: DW_TAG_member, name: "dev_id", scope: !2170, file: !2171, line: 1971, baseType: !127, size: 16, offset: 4832)
!5454 = !DIDerivedType(tag: DW_TAG_member, name: "dev_port", scope: !2170, file: !2171, line: 1972, baseType: !127, size: 16, offset: 4848)
!5455 = !DIDerivedType(tag: DW_TAG_member, name: "addr_list_lock", scope: !2170, file: !2171, line: 1973, baseType: !44, offset: 4864)
!5456 = !DIDerivedType(tag: DW_TAG_member, name: "uc", scope: !2170, file: !2171, line: 1975, baseType: !5457, size: 192, offset: 4864)
!5457 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_hw_addr_list", file: !2171, line: 224, size: 192, elements: !5458)
!5458 = !{!5459, !5460}
!5459 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !5457, file: !2171, line: 225, baseType: !30, size: 128)
!5460 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !5457, file: !2171, line: 226, baseType: !6, size: 32, offset: 128)
!5461 = !DIDerivedType(tag: DW_TAG_member, name: "mc", scope: !2170, file: !2171, line: 1976, baseType: !5457, size: 192, offset: 5056)
!5462 = !DIDerivedType(tag: DW_TAG_member, name: "dev_addrs", scope: !2170, file: !2171, line: 1977, baseType: !5457, size: 192, offset: 5248)
!5463 = !DIDerivedType(tag: DW_TAG_member, name: "queues_kset", scope: !2170, file: !2171, line: 1980, baseType: !39, size: 64, offset: 5440)
!5464 = !DIDerivedType(tag: DW_TAG_member, name: "promiscuity", scope: !2170, file: !2171, line: 1985, baseType: !199, size: 32, offset: 5504)
!5465 = !DIDerivedType(tag: DW_TAG_member, name: "allmulti", scope: !2170, file: !2171, line: 1986, baseType: !199, size: 32, offset: 5536)
!5466 = !DIDerivedType(tag: DW_TAG_member, name: "uc_promisc", scope: !2170, file: !2171, line: 1987, baseType: !304, size: 8, offset: 5568)
!5467 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_info", scope: !2170, file: !2171, line: 1996, baseType: !5468, size: 64, offset: 5632)
!5468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5469, size: 64)
!5469 = !DICompositeType(tag: DW_TAG_structure_type, name: "vlan_info", file: !2171, line: 1996, flags: DIFlagFwdDecl)
!5470 = !DIDerivedType(tag: DW_TAG_member, name: "ip_ptr", scope: !2170, file: !2171, line: 2007, baseType: !5471, size: 64, offset: 5696)
!5471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5472, size: 64)
!5472 = !DICompositeType(tag: DW_TAG_structure_type, name: "in_device", file: !2171, line: 2007, flags: DIFlagFwdDecl)
!5473 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_ptr", scope: !2170, file: !2171, line: 2011, baseType: !4894, size: 64, offset: 5760)
!5474 = !DIDerivedType(tag: DW_TAG_member, name: "ieee80211_ptr", scope: !2170, file: !2171, line: 2015, baseType: !5475, size: 64, offset: 5824)
!5475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5476, size: 64)
!5476 = !DICompositeType(tag: DW_TAG_structure_type, name: "wireless_dev", file: !2171, line: 62, flags: DIFlagFwdDecl)
!5477 = !DIDerivedType(tag: DW_TAG_member, name: "ieee802154_ptr", scope: !2170, file: !2171, line: 2016, baseType: !5478, size: 64, offset: 5888)
!5478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5479, size: 64)
!5479 = !DICompositeType(tag: DW_TAG_structure_type, name: "wpan_dev", file: !2171, line: 64, flags: DIFlagFwdDecl)
!5480 = !DIDerivedType(tag: DW_TAG_member, name: "dev_addr", scope: !2170, file: !2171, line: 2025, baseType: !5412, size: 64, offset: 5952)
!5481 = !DIDerivedType(tag: DW_TAG_member, name: "_rx", scope: !2170, file: !2171, line: 2027, baseType: !5482, size: 64, offset: 6016)
!5482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5483, size: 64)
!5483 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_rx_queue", file: !2171, line: 736, size: 1536, elements: !5484)
!5484 = !{!5485, !5486, !5487}
!5485 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !5483, file: !2171, line: 741, baseType: !22, size: 512)
!5486 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !5483, file: !2171, line: 742, baseType: !2169, size: 64, offset: 512)
!5487 = !DIDerivedType(tag: DW_TAG_member, name: "xdp_rxq", scope: !5483, file: !2171, line: 743, baseType: !5488, size: 512, align: 512, offset: 1024)
!5488 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xdp_rxq_info", file: !3851, line: 57, size: 512, align: 512, elements: !5489)
!5489 = !{!5490, !5491, !5492, !5493}
!5490 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !5488, file: !3851, line: 58, baseType: !2169, size: 64)
!5491 = !DIDerivedType(tag: DW_TAG_member, name: "queue_index", scope: !5488, file: !3851, line: 59, baseType: !229, size: 32, offset: 64)
!5492 = !DIDerivedType(tag: DW_TAG_member, name: "reg_state", scope: !5488, file: !3851, line: 60, baseType: !229, size: 32, offset: 96)
!5493 = !DIDerivedType(tag: DW_TAG_member, name: "mem", scope: !5488, file: !3851, line: 61, baseType: !3859, size: 64, offset: 128)
!5494 = !DIDerivedType(tag: DW_TAG_member, name: "num_rx_queues", scope: !2170, file: !2171, line: 2028, baseType: !199, size: 32, offset: 6080)
!5495 = !DIDerivedType(tag: DW_TAG_member, name: "real_num_rx_queues", scope: !2170, file: !2171, line: 2029, baseType: !199, size: 32, offset: 6112)
!5496 = !DIDerivedType(tag: DW_TAG_member, name: "xdp_prog", scope: !2170, file: !2171, line: 2031, baseType: !3032, size: 64, offset: 6144)
!5497 = !DIDerivedType(tag: DW_TAG_member, name: "gro_flush_timeout", scope: !2170, file: !2171, line: 2032, baseType: !135, size: 64, offset: 6208)
!5498 = !DIDerivedType(tag: DW_TAG_member, name: "napi_defer_hard_irqs", scope: !2170, file: !2171, line: 2033, baseType: !6, size: 32, offset: 6272)
!5499 = !DIDerivedType(tag: DW_TAG_member, name: "rx_handler", scope: !2170, file: !2171, line: 2034, baseType: !5500, size: 64, offset: 6336)
!5500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5501, size: 64)
!5501 = !DIDerivedType(tag: DW_TAG_typedef, name: "rx_handler_func_t", file: !2171, line: 430, baseType: !5502)
!5502 = !DISubroutineType(types: !5503)
!5503 = !{!5504, !5511}
!5504 = !DIDerivedType(tag: DW_TAG_typedef, name: "rx_handler_result_t", file: !2171, line: 429, baseType: !5505)
!5505 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rx_handler_result", file: !2171, line: 423, baseType: !199, size: 32, elements: !5506)
!5506 = !{!5507, !5508, !5509, !5510}
!5507 = !DIEnumerator(name: "RX_HANDLER_CONSUMED", value: 0, isUnsigned: true)
!5508 = !DIEnumerator(name: "RX_HANDLER_ANOTHER", value: 1, isUnsigned: true)
!5509 = !DIEnumerator(name: "RX_HANDLER_EXACT", value: 2, isUnsigned: true)
!5510 = !DIEnumerator(name: "RX_HANDLER_PASS", value: 3, isUnsigned: true)
!5511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2153, size: 64)
!5512 = !DIDerivedType(tag: DW_TAG_member, name: "rx_handler_data", scope: !2170, file: !2171, line: 2035, baseType: !159, size: 64, offset: 6400)
!5513 = !DIDerivedType(tag: DW_TAG_member, name: "ingress_queue", scope: !2170, file: !2171, line: 2040, baseType: !5514, size: 64, offset: 6464)
!5514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5515, size: 64)
!5515 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_queue", file: !2171, line: 584, size: 1600, elements: !5516)
!5516 = !{!5517, !5518, !5917, !5918, !5919, !5920, !5921, !5922, !5923, !5924, !5925, !5926}
!5517 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !5515, file: !2171, line: 588, baseType: !2169, size: 64)
!5518 = !DIDerivedType(tag: DW_TAG_member, name: "qdisc", scope: !5515, file: !2171, line: 589, baseType: !5519, size: 64, offset: 64)
!5519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5520, size: 64)
!5520 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Qdisc", file: !5521, line: 57, size: 2048, elements: !5522)
!5521 = !DIFile(filename: "./include/net/sch_generic.h", directory: "/home/lizy2001/genbc/linux")
!5522 = !{!5523, !5527, !5531, !5532, !5533, !5857, !5877, !5878, !5879, !5880, !5881, !5884, !5894, !5895, !5896, !5897, !5898, !5905, !5906, !5907, !5908, !5909, !5910, !5911, !5912, !5913, !5914, !5915}
!5523 = !DIDerivedType(tag: DW_TAG_member, name: "enqueue", scope: !5520, file: !5521, line: 58, baseType: !5524, size: 64)
!5524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5525, size: 64)
!5525 = !DISubroutineType(types: !5526)
!5526 = !{!6, !2153, !5519, !5511}
!5527 = !DIDerivedType(tag: DW_TAG_member, name: "dequeue", scope: !5520, file: !5521, line: 61, baseType: !5528, size: 64, offset: 64)
!5528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5529, size: 64)
!5529 = !DISubroutineType(types: !5530)
!5530 = !{!2153, !5519}
!5531 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5520, file: !5521, line: 62, baseType: !199, size: 32, offset: 128)
!5532 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !5520, file: !5521, line: 82, baseType: !229, size: 32, offset: 160)
!5533 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !5520, file: !5521, line: 83, baseType: !5534, size: 64, offset: 192)
!5534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5535, size: 64)
!5535 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5536)
!5536 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Qdisc_ops", file: !5521, line: 238, size: 1344, elements: !5537)
!5537 = !{!5538, !5540, !5817, !5818, !5819, !5820, !5821, !5822, !5823, !5827, !5831, !5832, !5833, !5834, !5838, !5842, !5846, !5850, !5851, !5855, !5856}
!5538 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5536, file: !5521, line: 239, baseType: !5539, size: 64)
!5539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5536, size: 64)
!5540 = !DIDerivedType(tag: DW_TAG_member, name: "cl_ops", scope: !5536, file: !5521, line: 240, baseType: !5541, size: 64, offset: 64)
!5541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5542, size: 64)
!5542 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5543)
!5543 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Qdisc_class_ops", file: !5521, line: 198, size: 896, elements: !5544)
!5544 = !{!5545, !5546, !5561, !5566, !5570, !5574, !5578, !5583, !5587, !5602, !5780, !5784, !5785, !5789}
!5545 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5543, file: !5521, line: 199, baseType: !199, size: 32)
!5546 = !DIDerivedType(tag: DW_TAG_member, name: "select_queue", scope: !5543, file: !5521, line: 201, baseType: !5547, size: 64, offset: 64)
!5547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5548, size: 64)
!5548 = !DISubroutineType(types: !5549)
!5549 = !{!5514, !5519, !5550}
!5550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5551, size: 64)
!5551 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tcmsg", file: !5552, line: 577, size: 160, elements: !5553)
!5552 = !DIFile(filename: "./include/uapi/linux/rtnetlink.h", directory: "/home/lizy2001/genbc/linux")
!5553 = !{!5554, !5555, !5556, !5557, !5558, !5559, !5560}
!5554 = !DIDerivedType(tag: DW_TAG_member, name: "tcm_family", scope: !5551, file: !5552, line: 578, baseType: !241, size: 8)
!5555 = !DIDerivedType(tag: DW_TAG_member, name: "tcm__pad1", scope: !5551, file: !5552, line: 579, baseType: !241, size: 8, offset: 8)
!5556 = !DIDerivedType(tag: DW_TAG_member, name: "tcm__pad2", scope: !5551, file: !5552, line: 580, baseType: !127, size: 16, offset: 16)
!5557 = !DIDerivedType(tag: DW_TAG_member, name: "tcm_ifindex", scope: !5551, file: !5552, line: 581, baseType: !6, size: 32, offset: 32)
!5558 = !DIDerivedType(tag: DW_TAG_member, name: "tcm_handle", scope: !5551, file: !5552, line: 582, baseType: !231, size: 32, offset: 64)
!5559 = !DIDerivedType(tag: DW_TAG_member, name: "tcm_parent", scope: !5551, file: !5552, line: 583, baseType: !231, size: 32, offset: 96)
!5560 = !DIDerivedType(tag: DW_TAG_member, name: "tcm_info", scope: !5551, file: !5552, line: 588, baseType: !231, size: 32, offset: 128)
!5561 = !DIDerivedType(tag: DW_TAG_member, name: "graft", scope: !5543, file: !5521, line: 202, baseType: !5562, size: 64, offset: 128)
!5562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5563, size: 64)
!5563 = !DISubroutineType(types: !5564)
!5564 = !{!6, !5519, !135, !5519, !5565, !2496}
!5565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5519, size: 64)
!5566 = !DIDerivedType(tag: DW_TAG_member, name: "leaf", scope: !5543, file: !5521, line: 205, baseType: !5567, size: 64, offset: 192)
!5567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5568, size: 64)
!5568 = !DISubroutineType(types: !5569)
!5569 = !{!5519, !5519, !135}
!5570 = !DIDerivedType(tag: DW_TAG_member, name: "qlen_notify", scope: !5543, file: !5521, line: 206, baseType: !5571, size: 64, offset: 256)
!5571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5572, size: 64)
!5572 = !DISubroutineType(types: !5573)
!5573 = !{null, !5519, !135}
!5574 = !DIDerivedType(tag: DW_TAG_member, name: "find", scope: !5543, file: !5521, line: 209, baseType: !5575, size: 64, offset: 320)
!5575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5576, size: 64)
!5576 = !DISubroutineType(types: !5577)
!5577 = !{!135, !5519, !229}
!5578 = !DIDerivedType(tag: DW_TAG_member, name: "change", scope: !5543, file: !5521, line: 210, baseType: !5579, size: 64, offset: 384)
!5579 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5580, size: 64)
!5580 = !DISubroutineType(types: !5581)
!5581 = !{!6, !5519, !229, !229, !2804, !5582, !2496}
!5582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !135, size: 64)
!5583 = !DIDerivedType(tag: DW_TAG_member, name: "delete", scope: !5543, file: !5521, line: 213, baseType: !5584, size: 64, offset: 448)
!5584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5585, size: 64)
!5585 = !DISubroutineType(types: !5586)
!5586 = !{!6, !5519, !135}
!5587 = !DIDerivedType(tag: DW_TAG_member, name: "walk", scope: !5543, file: !5521, line: 214, baseType: !5588, size: 64, offset: 512)
!5588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5589, size: 64)
!5589 = !DISubroutineType(types: !5590)
!5590 = !{null, !5519, !5591}
!5591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5592, size: 64)
!5592 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qdisc_walker", file: !5593, line: 15, size: 192, elements: !5594)
!5593 = !DIFile(filename: "./include/net/pkt_sched.h", directory: "/home/lizy2001/genbc/linux")
!5594 = !{!5595, !5596, !5597, !5598}
!5595 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !5592, file: !5593, line: 16, baseType: !6, size: 32)
!5596 = !DIDerivedType(tag: DW_TAG_member, name: "skip", scope: !5592, file: !5593, line: 17, baseType: !6, size: 32, offset: 32)
!5597 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !5592, file: !5593, line: 18, baseType: !6, size: 32, offset: 64)
!5598 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !5592, file: !5593, line: 19, baseType: !5599, size: 64, offset: 128)
!5599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5600, size: 64)
!5600 = !DISubroutineType(types: !5601)
!5601 = !{!6, !5519, !135, !5591}
!5602 = !DIDerivedType(tag: DW_TAG_member, name: "tcf_block", scope: !5543, file: !5521, line: 217, baseType: !5603, size: 64, offset: 576)
!5603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5604, size: 64)
!5604 = !DISubroutineType(types: !5605)
!5605 = !{!5606, !5519, !135, !2496}
!5606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5607, size: 64)
!5607 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tcf_block", file: !5521, line: 411, size: 9920, elements: !5608)
!5608 = !{!5609, !5610, !5611, !5612, !5613, !5614, !5615, !5616, !5617, !5622, !5623, !5624, !5625, !5626, !5627, !5776, !5777, !5779}
!5609 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5607, file: !5521, line: 415, baseType: !558, size: 192)
!5610 = !DIDerivedType(tag: DW_TAG_member, name: "chain_list", scope: !5607, file: !5521, line: 416, baseType: !30, size: 128, offset: 192)
!5611 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !5607, file: !5521, line: 417, baseType: !229, size: 32, offset: 320)
!5612 = !DIDerivedType(tag: DW_TAG_member, name: "classid", scope: !5607, file: !5521, line: 418, baseType: !229, size: 32, offset: 352)
!5613 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !5607, file: !5521, line: 419, baseType: !880, size: 32, offset: 384)
!5614 = !DIDerivedType(tag: DW_TAG_member, name: "net", scope: !5607, file: !5521, line: 420, baseType: !1975, size: 64, offset: 448)
!5615 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !5607, file: !5521, line: 421, baseType: !5519, size: 64, offset: 512)
!5616 = !DIDerivedType(tag: DW_TAG_member, name: "cb_lock", scope: !5607, file: !5521, line: 422, baseType: !652, size: 256, offset: 576)
!5617 = !DIDerivedType(tag: DW_TAG_member, name: "flow_block", scope: !5607, file: !5521, line: 423, baseType: !5618, size: 128, offset: 832)
!5618 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "flow_block", file: !5619, line: 430, size: 128, elements: !5620)
!5619 = !DIFile(filename: "./include/net/flow_offload.h", directory: "/home/lizy2001/genbc/linux")
!5620 = !{!5621}
!5621 = !DIDerivedType(tag: DW_TAG_member, name: "cb_list", scope: !5618, file: !5619, line: 431, baseType: !30, size: 128)
!5622 = !DIDerivedType(tag: DW_TAG_member, name: "owner_list", scope: !5607, file: !5521, line: 424, baseType: !30, size: 128, offset: 960)
!5623 = !DIDerivedType(tag: DW_TAG_member, name: "keep_dst", scope: !5607, file: !5521, line: 425, baseType: !304, size: 8, offset: 1088)
!5624 = !DIDerivedType(tag: DW_TAG_member, name: "offloadcnt", scope: !5607, file: !5521, line: 426, baseType: !632, size: 32, offset: 1120)
!5625 = !DIDerivedType(tag: DW_TAG_member, name: "nooffloaddevcnt", scope: !5607, file: !5521, line: 427, baseType: !199, size: 32, offset: 1152)
!5626 = !DIDerivedType(tag: DW_TAG_member, name: "lockeddevcnt", scope: !5607, file: !5521, line: 428, baseType: !199, size: 32, offset: 1184)
!5627 = !DIDerivedType(tag: DW_TAG_member, name: "chain0", scope: !5607, file: !5521, line: 432, baseType: !5628, size: 192, offset: 1216)
!5628 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5607, file: !5521, line: 429, size: 192, elements: !5629)
!5629 = !{!5630, !5775}
!5630 = !DIDerivedType(tag: DW_TAG_member, name: "chain", scope: !5628, file: !5521, line: 430, baseType: !5631, size: 64)
!5631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5632, size: 64)
!5632 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tcf_chain", file: !5521, line: 395, size: 832, elements: !5633)
!5633 = !{!5634, !5635, !5765, !5766, !5767, !5768, !5769, !5770, !5771, !5772, !5773, !5774}
!5634 = !DIDerivedType(tag: DW_TAG_member, name: "filter_chain_lock", scope: !5632, file: !5521, line: 397, baseType: !558, size: 192)
!5635 = !DIDerivedType(tag: DW_TAG_member, name: "filter_chain", scope: !5632, file: !5521, line: 398, baseType: !5636, size: 64, offset: 192)
!5636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5637, size: 64)
!5637 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tcf_proto", file: !5521, line: 356, size: 768, elements: !5638)
!5638 = !{!5639, !5640, !5641, !5673, !5674, !5675, !5676, !5759, !5760, !5761, !5762, !5763, !5764}
!5639 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5637, file: !5521, line: 358, baseType: !5636, size: 64)
!5640 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !5637, file: !5521, line: 359, baseType: !159, size: 64, offset: 64)
!5641 = !DIDerivedType(tag: DW_TAG_member, name: "classify", scope: !5637, file: !5521, line: 362, baseType: !5642, size: 64, offset: 128)
!5642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5643, size: 64)
!5643 = !DISubroutineType(types: !5644)
!5644 = !{!6, !2153, !5645, !5647}
!5645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5646, size: 64)
!5646 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5637)
!5647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5648, size: 64)
!5648 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tcf_result", file: !5521, line: 275, size: 128, elements: !5649)
!5649 = !{!5650}
!5650 = !DIDerivedType(tag: DW_TAG_member, scope: !5648, file: !5521, line: 276, baseType: !5651, size: 128)
!5651 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5648, file: !5521, line: 276, size: 128, elements: !5652)
!5652 = !{!5653, !5658, !5659}
!5653 = !DIDerivedType(tag: DW_TAG_member, scope: !5651, file: !5521, line: 277, baseType: !5654, size: 128)
!5654 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5651, file: !5521, line: 277, size: 128, elements: !5655)
!5655 = !{!5656, !5657}
!5656 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !5654, file: !5521, line: 278, baseType: !135, size: 64)
!5657 = !DIDerivedType(tag: DW_TAG_member, name: "classid", scope: !5654, file: !5521, line: 279, baseType: !229, size: 32, offset: 64)
!5658 = !DIDerivedType(tag: DW_TAG_member, name: "goto_tp", scope: !5651, file: !5521, line: 281, baseType: !5645, size: 64)
!5659 = !DIDerivedType(tag: DW_TAG_member, scope: !5651, file: !5521, line: 284, baseType: !5660, size: 128)
!5660 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5651, file: !5521, line: 284, size: 128, elements: !5661)
!5661 = !{!5662, !5663}
!5662 = !DIDerivedType(tag: DW_TAG_member, name: "ingress", scope: !5660, file: !5521, line: 285, baseType: !304, size: 8)
!5663 = !DIDerivedType(tag: DW_TAG_member, name: "qstats", scope: !5660, file: !5521, line: 286, baseType: !5664, size: 64, offset: 64)
!5664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5665, size: 64)
!5665 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gnet_stats_queue", file: !5666, line: 59, size: 160, elements: !5667)
!5666 = !DIFile(filename: "./include/uapi/linux/gen_stats.h", directory: "/home/lizy2001/genbc/linux")
!5667 = !{!5668, !5669, !5670, !5671, !5672}
!5668 = !DIDerivedType(tag: DW_TAG_member, name: "qlen", scope: !5665, file: !5666, line: 60, baseType: !231, size: 32)
!5669 = !DIDerivedType(tag: DW_TAG_member, name: "backlog", scope: !5665, file: !5666, line: 61, baseType: !231, size: 32, offset: 32)
!5670 = !DIDerivedType(tag: DW_TAG_member, name: "drops", scope: !5665, file: !5666, line: 62, baseType: !231, size: 32, offset: 64)
!5671 = !DIDerivedType(tag: DW_TAG_member, name: "requeues", scope: !5665, file: !5666, line: 63, baseType: !231, size: 32, offset: 96)
!5672 = !DIDerivedType(tag: DW_TAG_member, name: "overlimits", scope: !5665, file: !5666, line: 64, baseType: !231, size: 32, offset: 128)
!5673 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !5637, file: !5521, line: 365, baseType: !2037, size: 16, offset: 192)
!5674 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !5637, file: !5521, line: 368, baseType: !229, size: 32, offset: 224)
!5675 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5637, file: !5521, line: 369, baseType: !159, size: 64, offset: 256)
!5676 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !5637, file: !5521, line: 370, baseType: !5677, size: 64, offset: 320)
!5677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5678, size: 64)
!5678 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5679)
!5679 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tcf_proto_ops", file: !5521, line: 293, size: 1536, elements: !5680)
!5680 = !{!5681, !5682, !5683, !5684, !5688, !5692, !5696, !5700, !5704, !5708, !5712, !5729, !5737, !5738, !5739, !5743, !5747, !5748, !5752, !5753, !5757, !5758}
!5681 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !5679, file: !5521, line: 294, baseType: !30, size: 128)
!5682 = !DIDerivedType(tag: DW_TAG_member, name: "kind", scope: !5679, file: !5521, line: 295, baseType: !1943, size: 128, offset: 128)
!5683 = !DIDerivedType(tag: DW_TAG_member, name: "classify", scope: !5679, file: !5521, line: 297, baseType: !5642, size: 64, offset: 256)
!5684 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !5679, file: !5521, line: 300, baseType: !5685, size: 64, offset: 320)
!5685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5686, size: 64)
!5686 = !DISubroutineType(types: !5687)
!5687 = !{!6, !5636}
!5688 = !DIDerivedType(tag: DW_TAG_member, name: "destroy", scope: !5679, file: !5521, line: 301, baseType: !5689, size: 64, offset: 384)
!5689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5690, size: 64)
!5690 = !DISubroutineType(types: !5691)
!5691 = !{null, !5636, !304, !2496}
!5692 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !5679, file: !5521, line: 304, baseType: !5693, size: 64, offset: 448)
!5693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5694, size: 64)
!5694 = !DISubroutineType(types: !5695)
!5695 = !{!159, !5636, !229}
!5696 = !DIDerivedType(tag: DW_TAG_member, name: "put", scope: !5679, file: !5521, line: 305, baseType: !5697, size: 64, offset: 512)
!5697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5698, size: 64)
!5698 = !DISubroutineType(types: !5699)
!5699 = !{null, !5636, !159}
!5700 = !DIDerivedType(tag: DW_TAG_member, name: "change", scope: !5679, file: !5521, line: 306, baseType: !5701, size: 64, offset: 576)
!5701 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5702, size: 64)
!5702 = !DISubroutineType(types: !5703)
!5703 = !{!6, !1975, !2153, !5636, !135, !229, !2804, !706, !304, !304, !2496}
!5704 = !DIDerivedType(tag: DW_TAG_member, name: "delete", scope: !5679, file: !5521, line: 311, baseType: !5705, size: 64, offset: 640)
!5705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5706, size: 64)
!5706 = !DISubroutineType(types: !5707)
!5707 = !{!6, !5636, !159, !941, !304, !2496}
!5708 = !DIDerivedType(tag: DW_TAG_member, name: "delete_empty", scope: !5679, file: !5521, line: 314, baseType: !5709, size: 64, offset: 704)
!5709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5710, size: 64)
!5710 = !DISubroutineType(types: !5711)
!5711 = !{!304, !5636}
!5712 = !DIDerivedType(tag: DW_TAG_member, name: "walk", scope: !5679, file: !5521, line: 315, baseType: !5713, size: 64, offset: 768)
!5713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5714, size: 64)
!5714 = !DISubroutineType(types: !5715)
!5715 = !{null, !5636, !5716, !304}
!5716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5717, size: 64)
!5717 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tcf_walker", file: !5718, line: 16, size: 256, elements: !5719)
!5718 = !DIFile(filename: "./include/net/pkt_cls.h", directory: "/home/lizy2001/genbc/linux")
!5719 = !{!5720, !5721, !5722, !5723, !5724, !5725}
!5720 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !5717, file: !5718, line: 17, baseType: !6, size: 32)
!5721 = !DIDerivedType(tag: DW_TAG_member, name: "skip", scope: !5717, file: !5718, line: 18, baseType: !6, size: 32, offset: 32)
!5722 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !5717, file: !5718, line: 19, baseType: !6, size: 32, offset: 64)
!5723 = !DIDerivedType(tag: DW_TAG_member, name: "nonempty", scope: !5717, file: !5718, line: 20, baseType: !304, size: 8, offset: 96)
!5724 = !DIDerivedType(tag: DW_TAG_member, name: "cookie", scope: !5717, file: !5718, line: 21, baseType: !135, size: 64, offset: 128)
!5725 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !5717, file: !5718, line: 22, baseType: !5726, size: 64, offset: 192)
!5726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5727, size: 64)
!5727 = !DISubroutineType(types: !5728)
!5728 = !{!6, !5636, !159, !5716}
!5729 = !DIDerivedType(tag: DW_TAG_member, name: "reoffload", scope: !5679, file: !5521, line: 317, baseType: !5730, size: 64, offset: 832)
!5730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5731, size: 64)
!5731 = !DISubroutineType(types: !5732)
!5732 = !{!6, !5636, !304, !5733, !159, !2496}
!5733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5734, size: 64)
!5734 = !DIDerivedType(tag: DW_TAG_typedef, name: "flow_setup_cb_t", file: !5619, line: 450, baseType: !5735)
!5735 = !DISubroutineType(types: !5736)
!5736 = !{!6, !2828, !159, !159}
!5737 = !DIDerivedType(tag: DW_TAG_member, name: "hw_add", scope: !5679, file: !5521, line: 320, baseType: !5697, size: 64, offset: 896)
!5738 = !DIDerivedType(tag: DW_TAG_member, name: "hw_del", scope: !5679, file: !5521, line: 322, baseType: !5697, size: 64, offset: 960)
!5739 = !DIDerivedType(tag: DW_TAG_member, name: "bind_class", scope: !5679, file: !5521, line: 324, baseType: !5740, size: 64, offset: 1024)
!5740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5741, size: 64)
!5741 = !DISubroutineType(types: !5742)
!5742 = !{null, !159, !229, !135, !159, !135}
!5743 = !DIDerivedType(tag: DW_TAG_member, name: "tmplt_create", scope: !5679, file: !5521, line: 326, baseType: !5744, size: 64, offset: 1088)
!5744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5745, size: 64)
!5745 = !DISubroutineType(types: !5746)
!5746 = !{!159, !1975, !5631, !2804, !2496}
!5747 = !DIDerivedType(tag: DW_TAG_member, name: "tmplt_destroy", scope: !5679, file: !5521, line: 330, baseType: !282, size: 64, offset: 1152)
!5748 = !DIDerivedType(tag: DW_TAG_member, name: "dump", scope: !5679, file: !5521, line: 333, baseType: !5749, size: 64, offset: 1216)
!5749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5750, size: 64)
!5750 = !DISubroutineType(types: !5751)
!5751 = !{!6, !1975, !5636, !159, !2153, !5550, !304}
!5752 = !DIDerivedType(tag: DW_TAG_member, name: "terse_dump", scope: !5679, file: !5521, line: 336, baseType: !5749, size: 64, offset: 1280)
!5753 = !DIDerivedType(tag: DW_TAG_member, name: "tmplt_dump", scope: !5679, file: !5521, line: 340, baseType: !5754, size: 64, offset: 1344)
!5754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5755, size: 64)
!5755 = !DISubroutineType(types: !5756)
!5756 = !{!6, !2153, !1975, !159}
!5757 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !5679, file: !5521, line: 344, baseType: !446, size: 64, offset: 1408)
!5758 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5679, file: !5521, line: 345, baseType: !6, size: 32, offset: 1472)
!5759 = !DIDerivedType(tag: DW_TAG_member, name: "chain", scope: !5637, file: !5521, line: 371, baseType: !5631, size: 64, offset: 384)
!5760 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5637, file: !5521, line: 375, baseType: !44, offset: 448)
!5761 = !DIDerivedType(tag: DW_TAG_member, name: "deleting", scope: !5637, file: !5521, line: 376, baseType: !304, size: 8, offset: 448)
!5762 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !5637, file: !5521, line: 377, baseType: !880, size: 32, offset: 480)
!5763 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !5637, file: !5521, line: 378, baseType: !178, size: 128, align: 64, offset: 512)
!5764 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_ht_node", scope: !5637, file: !5521, line: 379, baseType: !455, size: 128, offset: 640)
!5765 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !5632, file: !5521, line: 399, baseType: !30, size: 128, offset: 256)
!5766 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !5632, file: !5521, line: 400, baseType: !5606, size: 64, offset: 384)
!5767 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !5632, file: !5521, line: 401, baseType: !229, size: 32, offset: 448)
!5768 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !5632, file: !5521, line: 402, baseType: !199, size: 32, offset: 480)
!5769 = !DIDerivedType(tag: DW_TAG_member, name: "action_refcnt", scope: !5632, file: !5521, line: 403, baseType: !199, size: 32, offset: 512)
!5770 = !DIDerivedType(tag: DW_TAG_member, name: "explicitly_created", scope: !5632, file: !5521, line: 404, baseType: !304, size: 8, offset: 544)
!5771 = !DIDerivedType(tag: DW_TAG_member, name: "flushing", scope: !5632, file: !5521, line: 405, baseType: !304, size: 8, offset: 552)
!5772 = !DIDerivedType(tag: DW_TAG_member, name: "tmplt_ops", scope: !5632, file: !5521, line: 406, baseType: !5677, size: 64, offset: 576)
!5773 = !DIDerivedType(tag: DW_TAG_member, name: "tmplt_priv", scope: !5632, file: !5521, line: 407, baseType: !159, size: 64, offset: 640)
!5774 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !5632, file: !5521, line: 408, baseType: !178, size: 128, align: 64, offset: 704)
!5775 = !DIDerivedType(tag: DW_TAG_member, name: "filter_chain_list", scope: !5628, file: !5521, line: 431, baseType: !30, size: 128, offset: 64)
!5776 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !5607, file: !5521, line: 433, baseType: !178, size: 128, align: 64, offset: 1408)
!5777 = !DIDerivedType(tag: DW_TAG_member, name: "proto_destroy_ht", scope: !5607, file: !5521, line: 434, baseType: !5778, size: 8192, offset: 1536)
!5778 = !DICompositeType(tag: DW_TAG_array_type, baseType: !451, size: 8192, elements: !3221)
!5779 = !DIDerivedType(tag: DW_TAG_member, name: "proto_destroy_lock", scope: !5607, file: !5521, line: 435, baseType: !558, size: 192, offset: 9728)
!5780 = !DIDerivedType(tag: DW_TAG_member, name: "bind_tcf", scope: !5543, file: !5521, line: 220, baseType: !5781, size: 64, offset: 640)
!5781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5782, size: 64)
!5782 = !DISubroutineType(types: !5783)
!5783 = !{!135, !5519, !135, !229}
!5784 = !DIDerivedType(tag: DW_TAG_member, name: "unbind_tcf", scope: !5543, file: !5521, line: 222, baseType: !5571, size: 64, offset: 704)
!5785 = !DIDerivedType(tag: DW_TAG_member, name: "dump", scope: !5543, file: !5521, line: 225, baseType: !5786, size: 64, offset: 768)
!5786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5787, size: 64)
!5787 = !DISubroutineType(types: !5788)
!5788 = !{!6, !5519, !135, !2153, !5550}
!5789 = !DIDerivedType(tag: DW_TAG_member, name: "dump_stats", scope: !5543, file: !5521, line: 227, baseType: !5790, size: 64, offset: 832)
!5790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5791, size: 64)
!5791 = !DISubroutineType(types: !5792)
!5792 = !{!6, !5519, !135, !5793}
!5793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5794, size: 64)
!5794 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gnet_dump", file: !5795, line: 23, size: 768, elements: !5796)
!5795 = !DIFile(filename: "./include/net/gen_stats.h", directory: "/home/lizy2001/genbc/linux")
!5796 = !{!5797, !5798, !5799, !5800, !5801, !5802, !5803, !5804, !5805}
!5797 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5794, file: !5795, line: 24, baseType: !1116, size: 64)
!5798 = !DIDerivedType(tag: DW_TAG_member, name: "skb", scope: !5794, file: !5795, line: 25, baseType: !2153, size: 64, offset: 64)
!5799 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !5794, file: !5795, line: 26, baseType: !2805, size: 64, offset: 128)
!5800 = !DIDerivedType(tag: DW_TAG_member, name: "compat_tc_stats", scope: !5794, file: !5795, line: 29, baseType: !6, size: 32, offset: 192)
!5801 = !DIDerivedType(tag: DW_TAG_member, name: "compat_xstats", scope: !5794, file: !5795, line: 30, baseType: !6, size: 32, offset: 224)
!5802 = !DIDerivedType(tag: DW_TAG_member, name: "padattr", scope: !5794, file: !5795, line: 31, baseType: !6, size: 32, offset: 256)
!5803 = !DIDerivedType(tag: DW_TAG_member, name: "xstats", scope: !5794, file: !5795, line: 32, baseType: !159, size: 64, offset: 320)
!5804 = !DIDerivedType(tag: DW_TAG_member, name: "xstats_len", scope: !5794, file: !5795, line: 33, baseType: !6, size: 32, offset: 384)
!5805 = !DIDerivedType(tag: DW_TAG_member, name: "tc_stats", scope: !5794, file: !5795, line: 34, baseType: !5806, size: 320, offset: 448)
!5806 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tc_stats", file: !5807, line: 34, size: 320, elements: !5808)
!5807 = !DIFile(filename: "./include/uapi/linux/pkt_sched.h", directory: "/home/lizy2001/genbc/linux")
!5808 = !{!5809, !5810, !5811, !5812, !5813, !5814, !5815, !5816}
!5809 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !5806, file: !5807, line: 35, baseType: !236, size: 64)
!5810 = !DIDerivedType(tag: DW_TAG_member, name: "packets", scope: !5806, file: !5807, line: 36, baseType: !231, size: 32, offset: 64)
!5811 = !DIDerivedType(tag: DW_TAG_member, name: "drops", scope: !5806, file: !5807, line: 37, baseType: !231, size: 32, offset: 96)
!5812 = !DIDerivedType(tag: DW_TAG_member, name: "overlimits", scope: !5806, file: !5807, line: 38, baseType: !231, size: 32, offset: 128)
!5813 = !DIDerivedType(tag: DW_TAG_member, name: "bps", scope: !5806, file: !5807, line: 40, baseType: !231, size: 32, offset: 160)
!5814 = !DIDerivedType(tag: DW_TAG_member, name: "pps", scope: !5806, file: !5807, line: 41, baseType: !231, size: 32, offset: 192)
!5815 = !DIDerivedType(tag: DW_TAG_member, name: "qlen", scope: !5806, file: !5807, line: 42, baseType: !231, size: 32, offset: 224)
!5816 = !DIDerivedType(tag: DW_TAG_member, name: "backlog", scope: !5806, file: !5807, line: 43, baseType: !231, size: 32, offset: 256)
!5817 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !5536, file: !5521, line: 241, baseType: !1943, size: 128, offset: 128)
!5818 = !DIDerivedType(tag: DW_TAG_member, name: "priv_size", scope: !5536, file: !5521, line: 242, baseType: !6, size: 32, offset: 256)
!5819 = !DIDerivedType(tag: DW_TAG_member, name: "static_flags", scope: !5536, file: !5521, line: 243, baseType: !199, size: 32, offset: 288)
!5820 = !DIDerivedType(tag: DW_TAG_member, name: "enqueue", scope: !5536, file: !5521, line: 245, baseType: !5524, size: 64, offset: 320)
!5821 = !DIDerivedType(tag: DW_TAG_member, name: "dequeue", scope: !5536, file: !5521, line: 248, baseType: !5528, size: 64, offset: 384)
!5822 = !DIDerivedType(tag: DW_TAG_member, name: "peek", scope: !5536, file: !5521, line: 249, baseType: !5528, size: 64, offset: 448)
!5823 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !5536, file: !5521, line: 251, baseType: !5824, size: 64, offset: 512)
!5824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5825, size: 64)
!5825 = !DISubroutineType(types: !5826)
!5826 = !{!6, !5519, !2805, !2496}
!5827 = !DIDerivedType(tag: DW_TAG_member, name: "reset", scope: !5536, file: !5521, line: 253, baseType: !5828, size: 64, offset: 576)
!5828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5829, size: 64)
!5829 = !DISubroutineType(types: !5830)
!5830 = !{null, !5519}
!5831 = !DIDerivedType(tag: DW_TAG_member, name: "destroy", scope: !5536, file: !5521, line: 254, baseType: !5828, size: 64, offset: 640)
!5832 = !DIDerivedType(tag: DW_TAG_member, name: "change", scope: !5536, file: !5521, line: 255, baseType: !5824, size: 64, offset: 704)
!5833 = !DIDerivedType(tag: DW_TAG_member, name: "attach", scope: !5536, file: !5521, line: 258, baseType: !5828, size: 64, offset: 768)
!5834 = !DIDerivedType(tag: DW_TAG_member, name: "change_tx_queue_len", scope: !5536, file: !5521, line: 259, baseType: !5835, size: 64, offset: 832)
!5835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5836, size: 64)
!5836 = !DISubroutineType(types: !5837)
!5837 = !{!6, !5519, !199}
!5838 = !DIDerivedType(tag: DW_TAG_member, name: "dump", scope: !5536, file: !5521, line: 261, baseType: !5839, size: 64, offset: 896)
!5839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5840, size: 64)
!5840 = !DISubroutineType(types: !5841)
!5841 = !{!6, !5519, !2153}
!5842 = !DIDerivedType(tag: DW_TAG_member, name: "dump_stats", scope: !5536, file: !5521, line: 262, baseType: !5843, size: 64, offset: 960)
!5843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5844, size: 64)
!5844 = !DISubroutineType(types: !5845)
!5845 = !{!6, !5519, !5793}
!5846 = !DIDerivedType(tag: DW_TAG_member, name: "ingress_block_set", scope: !5536, file: !5521, line: 264, baseType: !5847, size: 64, offset: 1024)
!5847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5848, size: 64)
!5848 = !DISubroutineType(types: !5849)
!5849 = !{null, !5519, !229}
!5850 = !DIDerivedType(tag: DW_TAG_member, name: "egress_block_set", scope: !5536, file: !5521, line: 266, baseType: !5847, size: 64, offset: 1088)
!5851 = !DIDerivedType(tag: DW_TAG_member, name: "ingress_block_get", scope: !5536, file: !5521, line: 268, baseType: !5852, size: 64, offset: 1152)
!5852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5853, size: 64)
!5853 = !DISubroutineType(types: !5854)
!5854 = !{!229, !5519}
!5855 = !DIDerivedType(tag: DW_TAG_member, name: "egress_block_get", scope: !5536, file: !5521, line: 269, baseType: !5852, size: 64, offset: 1216)
!5856 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !5536, file: !5521, line: 271, baseType: !446, size: 64, offset: 1280)
!5857 = !DIDerivedType(tag: DW_TAG_member, name: "stab", scope: !5520, file: !5521, line: 84, baseType: !5858, size: 64, offset: 256)
!5858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5859, size: 64)
!5859 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qdisc_size_table", file: !5521, line: 41, size: 512, elements: !5860)
!5860 = !{!5861, !5862, !5863, !5874, !5875}
!5861 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !5859, file: !5521, line: 42, baseType: !178, size: 128, align: 64)
!5862 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !5859, file: !5521, line: 43, baseType: !30, size: 128, offset: 128)
!5863 = !DIDerivedType(tag: DW_TAG_member, name: "szopts", scope: !5859, file: !5521, line: 44, baseType: !5864, size: 192, offset: 256)
!5864 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tc_sizespec", file: !5807, line: 102, size: 192, elements: !5865)
!5865 = !{!5866, !5867, !5868, !5869, !5870, !5871, !5872, !5873}
!5866 = !DIDerivedType(tag: DW_TAG_member, name: "cell_log", scope: !5864, file: !5807, line: 103, baseType: !241, size: 8)
!5867 = !DIDerivedType(tag: DW_TAG_member, name: "size_log", scope: !5864, file: !5807, line: 104, baseType: !241, size: 8, offset: 8)
!5868 = !DIDerivedType(tag: DW_TAG_member, name: "cell_align", scope: !5864, file: !5807, line: 105, baseType: !1256, size: 16, offset: 16)
!5869 = !DIDerivedType(tag: DW_TAG_member, name: "overhead", scope: !5864, file: !5807, line: 106, baseType: !6, size: 32, offset: 32)
!5870 = !DIDerivedType(tag: DW_TAG_member, name: "linklayer", scope: !5864, file: !5807, line: 107, baseType: !199, size: 32, offset: 64)
!5871 = !DIDerivedType(tag: DW_TAG_member, name: "mpu", scope: !5864, file: !5807, line: 108, baseType: !199, size: 32, offset: 96)
!5872 = !DIDerivedType(tag: DW_TAG_member, name: "mtu", scope: !5864, file: !5807, line: 109, baseType: !199, size: 32, offset: 128)
!5873 = !DIDerivedType(tag: DW_TAG_member, name: "tsize", scope: !5864, file: !5807, line: 110, baseType: !199, size: 32, offset: 160)
!5874 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !5859, file: !5521, line: 45, baseType: !6, size: 32, offset: 448)
!5875 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5859, file: !5521, line: 46, baseType: !5876, offset: 480)
!5876 = !DICompositeType(tag: DW_TAG_array_type, baseType: !744, elements: !2189)
!5877 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !5520, file: !5521, line: 85, baseType: !455, size: 128, offset: 320)
!5878 = !DIDerivedType(tag: DW_TAG_member, name: "handle", scope: !5520, file: !5521, line: 86, baseType: !229, size: 32, offset: 448)
!5879 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !5520, file: !5521, line: 87, baseType: !229, size: 32, offset: 480)
!5880 = !DIDerivedType(tag: DW_TAG_member, name: "dev_queue", scope: !5520, file: !5521, line: 89, baseType: !5514, size: 64, offset: 512)
!5881 = !DIDerivedType(tag: DW_TAG_member, name: "rate_est", scope: !5520, file: !5521, line: 91, baseType: !5882, size: 64, offset: 576)
!5882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5883, size: 64)
!5883 = !DICompositeType(tag: DW_TAG_structure_type, name: "net_rate_estimator", file: !5795, line: 21, flags: DIFlagFwdDecl)
!5884 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_bstats", scope: !5520, file: !5521, line: 92, baseType: !5885, size: 64, offset: 640)
!5885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5886, size: 64)
!5886 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gnet_stats_basic_cpu", file: !5795, line: 16, size: 128, align: 128, elements: !5887)
!5887 = !{!5888, !5893}
!5888 = !DIDerivedType(tag: DW_TAG_member, name: "bstats", scope: !5886, file: !5795, line: 17, baseType: !5889, size: 128)
!5889 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gnet_stats_basic_packed", file: !5795, line: 11, size: 128, elements: !5890)
!5890 = !{!5891, !5892}
!5891 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !5889, file: !5795, line: 12, baseType: !236, size: 64)
!5892 = !DIDerivedType(tag: DW_TAG_member, name: "packets", scope: !5889, file: !5795, line: 13, baseType: !236, size: 64, offset: 64)
!5893 = !DIDerivedType(tag: DW_TAG_member, name: "syncp", scope: !5886, file: !5795, line: 18, baseType: !3776, offset: 128)
!5894 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_qstats", scope: !5520, file: !5521, line: 93, baseType: !5664, size: 64, offset: 704)
!5895 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !5520, file: !5521, line: 94, baseType: !6, size: 32, offset: 768)
!5896 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !5520, file: !5521, line: 95, baseType: !880, size: 32, offset: 800)
!5897 = !DIDerivedType(tag: DW_TAG_member, name: "gso_skb", scope: !5520, file: !5521, line: 100, baseType: !2583, size: 192, offset: 832)
!5898 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !5520, file: !5521, line: 101, baseType: !5899, size: 192, offset: 1024)
!5899 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qdisc_skb_head", file: !5521, line: 50, size: 192, elements: !5900)
!5900 = !{!5901, !5902, !5903, !5904}
!5901 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !5899, file: !5521, line: 51, baseType: !2153, size: 64)
!5902 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !5899, file: !5521, line: 52, baseType: !2153, size: 64, offset: 64)
!5903 = !DIDerivedType(tag: DW_TAG_member, name: "qlen", scope: !5899, file: !5521, line: 53, baseType: !231, size: 32, offset: 128)
!5904 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5899, file: !5521, line: 54, baseType: !44, offset: 160)
!5905 = !DIDerivedType(tag: DW_TAG_member, name: "bstats", scope: !5520, file: !5521, line: 102, baseType: !5889, size: 128, offset: 1216)
!5906 = !DIDerivedType(tag: DW_TAG_member, name: "running", scope: !5520, file: !5521, line: 103, baseType: !206, size: 32, offset: 1344)
!5907 = !DIDerivedType(tag: DW_TAG_member, name: "qstats", scope: !5520, file: !5521, line: 104, baseType: !5665, size: 160, offset: 1376)
!5908 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !5520, file: !5521, line: 105, baseType: !135, size: 64, offset: 1536)
!5909 = !DIDerivedType(tag: DW_TAG_member, name: "next_sched", scope: !5520, file: !5521, line: 106, baseType: !5519, size: 64, offset: 1600)
!5910 = !DIDerivedType(tag: DW_TAG_member, name: "skb_bad_txq", scope: !5520, file: !5521, line: 107, baseType: !2583, size: 192, offset: 1664)
!5911 = !DIDerivedType(tag: DW_TAG_member, name: "busylock", scope: !5520, file: !5521, line: 109, baseType: !44, offset: 1856)
!5912 = !DIDerivedType(tag: DW_TAG_member, name: "seqlock", scope: !5520, file: !5521, line: 110, baseType: !44, offset: 1856)
!5913 = !DIDerivedType(tag: DW_TAG_member, name: "empty", scope: !5520, file: !5521, line: 113, baseType: !304, size: 8, offset: 1856)
!5914 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !5520, file: !5521, line: 114, baseType: !178, size: 128, align: 64, offset: 1920)
!5915 = !DIDerivedType(tag: DW_TAG_member, name: "privdata", scope: !5520, file: !5521, line: 117, baseType: !5916, align: 512, offset: 2048)
!5916 = !DICompositeType(tag: DW_TAG_array_type, baseType: !120, elements: !2189)
!5917 = !DIDerivedType(tag: DW_TAG_member, name: "qdisc_sleeping", scope: !5515, file: !2171, line: 590, baseType: !5519, size: 64, offset: 128)
!5918 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !5515, file: !2171, line: 592, baseType: !22, size: 512, offset: 192)
!5919 = !DIDerivedType(tag: DW_TAG_member, name: "tx_maxrate", scope: !5515, file: !2171, line: 597, baseType: !135, size: 64, offset: 704)
!5920 = !DIDerivedType(tag: DW_TAG_member, name: "trans_timeout", scope: !5515, file: !2171, line: 602, baseType: !135, size: 64, offset: 768)
!5921 = !DIDerivedType(tag: DW_TAG_member, name: "sb_dev", scope: !5515, file: !2171, line: 605, baseType: !2169, size: 64, offset: 832)
!5922 = !DIDerivedType(tag: DW_TAG_member, name: "_xmit_lock", scope: !5515, file: !2171, line: 612, baseType: !44, offset: 896)
!5923 = !DIDerivedType(tag: DW_TAG_member, name: "xmit_lock_owner", scope: !5515, file: !2171, line: 613, baseType: !6, size: 32, offset: 896)
!5924 = !DIDerivedType(tag: DW_TAG_member, name: "trans_start", scope: !5515, file: !2171, line: 617, baseType: !135, size: 64, offset: 960)
!5925 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !5515, file: !2171, line: 619, baseType: !135, size: 64, offset: 1024)
!5926 = !DIDerivedType(tag: DW_TAG_member, name: "dql", scope: !5515, file: !2171, line: 622, baseType: !5927, size: 512, offset: 1088)
!5927 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dql", file: !5928, line: 43, size: 512, elements: !5929)
!5928 = !DIFile(filename: "./include/linux/dynamic_queue_limits.h", directory: "/home/lizy2001/genbc/linux")
!5929 = !{!5930, !5931, !5932, !5933, !5934, !5935, !5936, !5937, !5938, !5939, !5940, !5941, !5942}
!5930 = !DIDerivedType(tag: DW_TAG_member, name: "num_queued", scope: !5927, file: !5928, line: 45, baseType: !199, size: 32)
!5931 = !DIDerivedType(tag: DW_TAG_member, name: "adj_limit", scope: !5927, file: !5928, line: 46, baseType: !199, size: 32, offset: 32)
!5932 = !DIDerivedType(tag: DW_TAG_member, name: "last_obj_cnt", scope: !5927, file: !5928, line: 47, baseType: !199, size: 32, offset: 64)
!5933 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !5927, file: !5928, line: 51, baseType: !199, size: 32, offset: 96)
!5934 = !DIDerivedType(tag: DW_TAG_member, name: "num_completed", scope: !5927, file: !5928, line: 52, baseType: !199, size: 32, offset: 128)
!5935 = !DIDerivedType(tag: DW_TAG_member, name: "prev_ovlimit", scope: !5927, file: !5928, line: 54, baseType: !199, size: 32, offset: 160)
!5936 = !DIDerivedType(tag: DW_TAG_member, name: "prev_num_queued", scope: !5927, file: !5928, line: 55, baseType: !199, size: 32, offset: 192)
!5937 = !DIDerivedType(tag: DW_TAG_member, name: "prev_last_obj_cnt", scope: !5927, file: !5928, line: 56, baseType: !199, size: 32, offset: 224)
!5938 = !DIDerivedType(tag: DW_TAG_member, name: "lowest_slack", scope: !5927, file: !5928, line: 58, baseType: !199, size: 32, offset: 256)
!5939 = !DIDerivedType(tag: DW_TAG_member, name: "slack_start_time", scope: !5927, file: !5928, line: 59, baseType: !135, size: 64, offset: 320)
!5940 = !DIDerivedType(tag: DW_TAG_member, name: "max_limit", scope: !5927, file: !5928, line: 62, baseType: !199, size: 32, offset: 384)
!5941 = !DIDerivedType(tag: DW_TAG_member, name: "min_limit", scope: !5927, file: !5928, line: 63, baseType: !199, size: 32, offset: 416)
!5942 = !DIDerivedType(tag: DW_TAG_member, name: "slack_hold_time", scope: !5927, file: !5928, line: 64, baseType: !199, size: 32, offset: 448)
!5943 = !DIDerivedType(tag: DW_TAG_member, name: "broadcast", scope: !2170, file: !2171, line: 2045, baseType: !2644, size: 256, offset: 6528)
!5944 = !DIDerivedType(tag: DW_TAG_member, name: "index_hlist", scope: !2170, file: !2171, line: 2049, baseType: !455, size: 128, offset: 6784)
!5945 = !DIDerivedType(tag: DW_TAG_member, name: "_tx", scope: !2170, file: !2171, line: 2054, baseType: !5514, size: 64, offset: 6912)
!5946 = !DIDerivedType(tag: DW_TAG_member, name: "num_tx_queues", scope: !2170, file: !2171, line: 2055, baseType: !199, size: 32, offset: 6976)
!5947 = !DIDerivedType(tag: DW_TAG_member, name: "real_num_tx_queues", scope: !2170, file: !2171, line: 2056, baseType: !199, size: 32, offset: 7008)
!5948 = !DIDerivedType(tag: DW_TAG_member, name: "qdisc", scope: !2170, file: !2171, line: 2057, baseType: !5519, size: 64, offset: 7040)
!5949 = !DIDerivedType(tag: DW_TAG_member, name: "tx_queue_len", scope: !2170, file: !2171, line: 2058, baseType: !199, size: 32, offset: 7104)
!5950 = !DIDerivedType(tag: DW_TAG_member, name: "tx_global_lock", scope: !2170, file: !2171, line: 2059, baseType: !44, offset: 7136)
!5951 = !DIDerivedType(tag: DW_TAG_member, name: "xdp_bulkq", scope: !2170, file: !2171, line: 2061, baseType: !5952, size: 64, offset: 7168)
!5952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5953, size: 64)
!5953 = !DICompositeType(tag: DW_TAG_structure_type, name: "xdp_dev_bulk_queue", file: !2171, line: 879, flags: DIFlagFwdDecl)
!5954 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_timer", scope: !2170, file: !2171, line: 2075, baseType: !2566, size: 320, offset: 7232)
!5955 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_timeo", scope: !2170, file: !2171, line: 2076, baseType: !6, size: 32, offset: 7552)
!5956 = !DIDerivedType(tag: DW_TAG_member, name: "proto_down_reason", scope: !2170, file: !2171, line: 2078, baseType: !229, size: 32, offset: 7584)
!5957 = !DIDerivedType(tag: DW_TAG_member, name: "todo_list", scope: !2170, file: !2171, line: 2080, baseType: !30, size: 128, offset: 7616)
!5958 = !DIDerivedType(tag: DW_TAG_member, name: "pcpu_refcnt", scope: !2170, file: !2171, line: 2081, baseType: !540, size: 64, offset: 7744)
!5959 = !DIDerivedType(tag: DW_TAG_member, name: "link_watch_list", scope: !2170, file: !2171, line: 2083, baseType: !30, size: 128, offset: 7808)
!5960 = !DIDerivedType(tag: DW_TAG_member, name: "reg_state", scope: !2170, file: !2171, line: 2091, baseType: !5961, size: 8, offset: 7936, flags: DIFlagBitField, extraData: i64 7936)
!5961 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !2170, file: !2171, line: 2085, baseType: !199, size: 32, elements: !5962)
!5962 = !{!5963, !5964, !5965, !5966, !5967, !5968}
!5963 = !DIEnumerator(name: "NETREG_UNINITIALIZED", value: 0, isUnsigned: true)
!5964 = !DIEnumerator(name: "NETREG_REGISTERED", value: 1, isUnsigned: true)
!5965 = !DIEnumerator(name: "NETREG_UNREGISTERING", value: 2, isUnsigned: true)
!5966 = !DIEnumerator(name: "NETREG_UNREGISTERED", value: 3, isUnsigned: true)
!5967 = !DIEnumerator(name: "NETREG_RELEASED", value: 4, isUnsigned: true)
!5968 = !DIEnumerator(name: "NETREG_DUMMY", value: 5, isUnsigned: true)
!5969 = !DIDerivedType(tag: DW_TAG_member, name: "dismantle", scope: !2170, file: !2171, line: 2093, baseType: !304, size: 8, offset: 7944)
!5970 = !DIDerivedType(tag: DW_TAG_member, name: "rtnl_link_state", scope: !2170, file: !2171, line: 2098, baseType: !5971, size: 16, offset: 7952, flags: DIFlagBitField, extraData: i64 7952)
!5971 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !2170, file: !2171, line: 2095, baseType: !199, size: 32, elements: !5972)
!5972 = !{!5973, !5974}
!5973 = !DIEnumerator(name: "RTNL_LINK_INITIALIZED", value: 0, isUnsigned: true)
!5974 = !DIEnumerator(name: "RTNL_LINK_INITIALIZING", value: 1, isUnsigned: true)
!5975 = !DIDerivedType(tag: DW_TAG_member, name: "needs_free_netdev", scope: !2170, file: !2171, line: 2100, baseType: !304, size: 8, offset: 7968)
!5976 = !DIDerivedType(tag: DW_TAG_member, name: "priv_destructor", scope: !2170, file: !2171, line: 2101, baseType: !2266, size: 64, offset: 8000)
!5977 = !DIDerivedType(tag: DW_TAG_member, name: "nd_net", scope: !2170, file: !2171, line: 2107, baseType: !2428, size: 64, offset: 8064)
!5978 = !DIDerivedType(tag: DW_TAG_member, scope: !2170, file: !2171, line: 2110, baseType: !5979, size: 64, offset: 8128)
!5979 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2170, file: !2171, line: 2110, size: 64, elements: !5980)
!5980 = !{!5981, !5982, !6003, !6012}
!5981 = !DIDerivedType(tag: DW_TAG_member, name: "ml_priv", scope: !5979, file: !2171, line: 2111, baseType: !159, size: 64)
!5982 = !DIDerivedType(tag: DW_TAG_member, name: "lstats", scope: !5979, file: !2171, line: 2112, baseType: !5983, size: 64)
!5983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5984, size: 64)
!5984 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pcpu_lstats", file: !2171, line: 2542, size: 128, align: 128, elements: !5985)
!5985 = !{!5986, !6001, !6002}
!5986 = !DIDerivedType(tag: DW_TAG_member, name: "packets", scope: !5984, file: !2171, line: 2543, baseType: !5987, size: 64)
!5987 = !DIDerivedType(tag: DW_TAG_typedef, name: "u64_stats_t", file: !3777, line: 79, baseType: !5988)
!5988 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3777, line: 77, size: 64, elements: !5989)
!5989 = !{!5990}
!5990 = !DIDerivedType(tag: DW_TAG_member, name: "v", scope: !5988, file: !3777, line: 78, baseType: !5991, size: 64)
!5991 = !DIDerivedType(tag: DW_TAG_typedef, name: "local64_t", file: !5992, line: 26, baseType: !5993)
!5992 = !DIFile(filename: "./include/asm-generic/local64.h", directory: "/home/lizy2001/genbc/linux")
!5993 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !5992, line: 24, size: 64, elements: !5994)
!5994 = !{!5995}
!5995 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !5993, file: !5992, line: 25, baseType: !5996, size: 64)
!5996 = !DIDerivedType(tag: DW_TAG_typedef, name: "local_t", file: !5997, line: 12, baseType: !5998)
!5997 = !DIFile(filename: "./arch/x86/include/asm/local.h", directory: "/home/lizy2001/genbc/linux")
!5998 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !5997, line: 10, size: 64, elements: !5999)
!5999 = !{!6000}
!6000 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !5998, file: !5997, line: 11, baseType: !562, size: 64)
!6001 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !5984, file: !2171, line: 2544, baseType: !5987, size: 64, offset: 64)
!6002 = !DIDerivedType(tag: DW_TAG_member, name: "syncp", scope: !5984, file: !2171, line: 2545, baseType: !3776, offset: 128)
!6003 = !DIDerivedType(tag: DW_TAG_member, name: "tstats", scope: !5979, file: !2171, line: 2113, baseType: !6004, size: 64)
!6004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6005, size: 64)
!6005 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pcpu_sw_netstats", file: !2171, line: 2534, size: 256, align: 256, elements: !6006)
!6006 = !{!6007, !6008, !6009, !6010, !6011}
!6007 = !DIDerivedType(tag: DW_TAG_member, name: "rx_packets", scope: !6005, file: !2171, line: 2535, baseType: !235, size: 64)
!6008 = !DIDerivedType(tag: DW_TAG_member, name: "rx_bytes", scope: !6005, file: !2171, line: 2536, baseType: !235, size: 64, offset: 64)
!6009 = !DIDerivedType(tag: DW_TAG_member, name: "tx_packets", scope: !6005, file: !2171, line: 2537, baseType: !235, size: 64, offset: 128)
!6010 = !DIDerivedType(tag: DW_TAG_member, name: "tx_bytes", scope: !6005, file: !2171, line: 2538, baseType: !235, size: 64, offset: 192)
!6011 = !DIDerivedType(tag: DW_TAG_member, name: "syncp", scope: !6005, file: !2171, line: 2539, baseType: !3776, offset: 256)
!6012 = !DIDerivedType(tag: DW_TAG_member, name: "dstats", scope: !5979, file: !2171, line: 2114, baseType: !6013, size: 64)
!6013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6014, size: 64)
!6014 = !DICompositeType(tag: DW_TAG_structure_type, name: "pcpu_dstats", file: !2171, line: 2114, flags: DIFlagFwdDecl)
!6015 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2170, file: !2171, line: 2124, baseType: !18, size: 5568, offset: 8192)
!6016 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_groups", scope: !2170, file: !2171, line: 2125, baseType: !6017, size: 256, offset: 13760)
!6017 = !DICompositeType(tag: DW_TAG_array_type, baseType: !140, size: 256, elements: !1212)
!6018 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_rx_queue_group", scope: !2170, file: !2171, line: 2126, baseType: !140, size: 64, offset: 14016)
!6019 = !DIDerivedType(tag: DW_TAG_member, name: "rtnl_link_ops", scope: !2170, file: !2171, line: 2128, baseType: !6020, size: 64, offset: 14080)
!6020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6021, size: 64)
!6021 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6022)
!6022 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtnl_link_ops", file: !6023, line: 59, size: 1600, elements: !6024)
!6023 = !DIFile(filename: "./include/net/rtnetlink.h", directory: "/home/lizy2001/genbc/linux")
!6024 = !{!6025, !6026, !6027, !6028, !6029, !6030, !6031, !6035, !6039, !6043, !6047, !6051, !6055, !6056, !6057, !6061, !6062, !6063, !6064, !6068, !6072, !6076, !6080, !6084}
!6025 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !6022, file: !6023, line: 60, baseType: !30, size: 128)
!6026 = !DIDerivedType(tag: DW_TAG_member, name: "kind", scope: !6022, file: !6023, line: 62, baseType: !26, size: 64, offset: 128)
!6027 = !DIDerivedType(tag: DW_TAG_member, name: "priv_size", scope: !6022, file: !6023, line: 64, baseType: !132, size: 64, offset: 192)
!6028 = !DIDerivedType(tag: DW_TAG_member, name: "setup", scope: !6022, file: !6023, line: 65, baseType: !2266, size: 64, offset: 256)
!6029 = !DIDerivedType(tag: DW_TAG_member, name: "maxtype", scope: !6022, file: !6023, line: 67, baseType: !199, size: 32, offset: 320)
!6030 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !6022, file: !6023, line: 68, baseType: !2510, size: 64, offset: 384)
!6031 = !DIDerivedType(tag: DW_TAG_member, name: "validate", scope: !6022, file: !6023, line: 69, baseType: !6032, size: 64, offset: 448)
!6032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6033, size: 64)
!6033 = !DISubroutineType(types: !6034)
!6034 = !{!6, !2804, !2804, !2496}
!6035 = !DIDerivedType(tag: DW_TAG_member, name: "newlink", scope: !6022, file: !6023, line: 73, baseType: !6036, size: 64, offset: 512)
!6036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6037, size: 64)
!6037 = !DISubroutineType(types: !6038)
!6038 = !{!6, !1975, !2169, !2804, !2804, !2496}
!6039 = !DIDerivedType(tag: DW_TAG_member, name: "changelink", scope: !6022, file: !6023, line: 78, baseType: !6040, size: 64, offset: 576)
!6040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6041, size: 64)
!6041 = !DISubroutineType(types: !6042)
!6042 = !{!6, !2169, !2804, !2804, !2496}
!6043 = !DIDerivedType(tag: DW_TAG_member, name: "dellink", scope: !6022, file: !6023, line: 82, baseType: !6044, size: 64, offset: 640)
!6044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6045, size: 64)
!6045 = !DISubroutineType(types: !6046)
!6046 = !{null, !2169, !34}
!6047 = !DIDerivedType(tag: DW_TAG_member, name: "get_size", scope: !6022, file: !6023, line: 85, baseType: !6048, size: 64, offset: 704)
!6048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6049, size: 64)
!6049 = !DISubroutineType(types: !6050)
!6050 = !{!132, !2456}
!6051 = !DIDerivedType(tag: DW_TAG_member, name: "fill_info", scope: !6022, file: !6023, line: 86, baseType: !6052, size: 64, offset: 768)
!6052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6053, size: 64)
!6053 = !DISubroutineType(types: !6054)
!6054 = !{!6, !2153, !2456}
!6055 = !DIDerivedType(tag: DW_TAG_member, name: "get_xstats_size", scope: !6022, file: !6023, line: 89, baseType: !6048, size: 64, offset: 832)
!6056 = !DIDerivedType(tag: DW_TAG_member, name: "fill_xstats", scope: !6022, file: !6023, line: 90, baseType: !6052, size: 64, offset: 896)
!6057 = !DIDerivedType(tag: DW_TAG_member, name: "get_num_tx_queues", scope: !6022, file: !6023, line: 92, baseType: !6058, size: 64, offset: 960)
!6058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6059, size: 64)
!6059 = !DISubroutineType(types: !6060)
!6060 = !{!199}
!6061 = !DIDerivedType(tag: DW_TAG_member, name: "get_num_rx_queues", scope: !6022, file: !6023, line: 93, baseType: !6058, size: 64, offset: 1024)
!6062 = !DIDerivedType(tag: DW_TAG_member, name: "slave_maxtype", scope: !6022, file: !6023, line: 95, baseType: !199, size: 32, offset: 1088)
!6063 = !DIDerivedType(tag: DW_TAG_member, name: "slave_policy", scope: !6022, file: !6023, line: 96, baseType: !2510, size: 64, offset: 1152)
!6064 = !DIDerivedType(tag: DW_TAG_member, name: "slave_changelink", scope: !6022, file: !6023, line: 97, baseType: !6065, size: 64, offset: 1216)
!6065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6066, size: 64)
!6066 = !DISubroutineType(types: !6067)
!6067 = !{!6, !2169, !2169, !2804, !2804, !2496}
!6068 = !DIDerivedType(tag: DW_TAG_member, name: "get_slave_size", scope: !6022, file: !6023, line: 102, baseType: !6069, size: 64, offset: 1280)
!6069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6070, size: 64)
!6070 = !DISubroutineType(types: !6071)
!6071 = !{!132, !2456, !2456}
!6072 = !DIDerivedType(tag: DW_TAG_member, name: "fill_slave_info", scope: !6022, file: !6023, line: 104, baseType: !6073, size: 64, offset: 1344)
!6073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6074, size: 64)
!6074 = !DISubroutineType(types: !6075)
!6075 = !{!6, !2153, !2456, !2456}
!6076 = !DIDerivedType(tag: DW_TAG_member, name: "get_link_net", scope: !6022, file: !6023, line: 107, baseType: !6077, size: 64, offset: 1408)
!6077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6078, size: 64)
!6078 = !DISubroutineType(types: !6079)
!6079 = !{!1975, !2456}
!6080 = !DIDerivedType(tag: DW_TAG_member, name: "get_linkxstats_size", scope: !6022, file: !6023, line: 108, baseType: !6081, size: 64, offset: 1472)
!6081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6082, size: 64)
!6082 = !DISubroutineType(types: !6083)
!6083 = !{!132, !2456, !6}
!6084 = !DIDerivedType(tag: DW_TAG_member, name: "fill_linkxstats", scope: !6022, file: !6023, line: 110, baseType: !6085, size: 64, offset: 1536)
!6085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6086, size: 64)
!6086 = !DISubroutineType(types: !6087)
!6087 = !{!6, !2153, !2456, !540, !6}
!6088 = !DIDerivedType(tag: DW_TAG_member, name: "gso_max_size", scope: !2170, file: !2171, line: 2132, baseType: !199, size: 32, offset: 14144)
!6089 = !DIDerivedType(tag: DW_TAG_member, name: "gso_max_segs", scope: !2170, file: !2171, line: 2134, baseType: !744, size: 16, offset: 14176)
!6090 = !DIDerivedType(tag: DW_TAG_member, name: "num_tc", scope: !2170, file: !2171, line: 2139, baseType: !1254, size: 16, offset: 14192)
!6091 = !DIDerivedType(tag: DW_TAG_member, name: "tc_to_txq", scope: !2170, file: !2171, line: 2140, baseType: !6092, size: 512, offset: 14208)
!6092 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6093, size: 512, elements: !1944)
!6093 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_tc_txq", file: !2171, line: 793, size: 32, elements: !6094)
!6094 = !{!6095, !6096}
!6095 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !6093, file: !2171, line: 794, baseType: !744, size: 16)
!6096 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !6093, file: !2171, line: 795, baseType: !744, size: 16, offset: 16)
!6097 = !DIDerivedType(tag: DW_TAG_member, name: "prio_tc_map", scope: !2170, file: !2171, line: 2141, baseType: !6098, size: 128, offset: 14720)
!6098 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1403, size: 128, elements: !1944)
!6099 = !DIDerivedType(tag: DW_TAG_member, name: "phydev", scope: !2170, file: !2171, line: 2149, baseType: !6100, size: 64, offset: 14848)
!6100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6101, size: 64)
!6101 = !DICompositeType(tag: DW_TAG_structure_type, name: "phy_device", file: !4259, line: 536, flags: DIFlagFwdDecl)
!6102 = !DIDerivedType(tag: DW_TAG_member, name: "sfp_bus", scope: !2170, file: !2171, line: 2150, baseType: !6103, size: 64, offset: 14912)
!6103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6104, size: 64)
!6104 = !DICompositeType(tag: DW_TAG_structure_type, name: "sfp_bus", file: !2171, line: 60, flags: DIFlagFwdDecl)
!6105 = !DIDerivedType(tag: DW_TAG_member, name: "qdisc_tx_busylock", scope: !2170, file: !2171, line: 2151, baseType: !6106, size: 64, offset: 14976)
!6106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !461, size: 64)
!6107 = !DIDerivedType(tag: DW_TAG_member, name: "qdisc_running_key", scope: !2170, file: !2171, line: 2152, baseType: !6106, size: 64, offset: 15040)
!6108 = !DIDerivedType(tag: DW_TAG_member, name: "proto_down", scope: !2170, file: !2171, line: 2153, baseType: !304, size: 8, offset: 15104)
!6109 = !DIDerivedType(tag: DW_TAG_member, name: "wol_enabled", scope: !2170, file: !2171, line: 2154, baseType: !199, size: 1, offset: 15112, flags: DIFlagBitField, extraData: i64 15112)
!6110 = !DIDerivedType(tag: DW_TAG_member, name: "net_notifier_list", scope: !2170, file: !2171, line: 2156, baseType: !30, size: 128, offset: 15168)
!6111 = !DIDerivedType(tag: DW_TAG_member, name: "udp_tunnel_nic_info", scope: !2170, file: !2171, line: 2162, baseType: !6112, size: 64, offset: 15296)
!6112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6113, size: 64)
!6113 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6114)
!6114 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "udp_tunnel_nic_info", file: !2980, line: 247, size: 576, elements: !6115)
!6115 = !{!6116, !6120, !6121, !6125, !6133, !6134}
!6116 = !DIDerivedType(tag: DW_TAG_member, name: "set_port", scope: !6114, file: !2980, line: 249, baseType: !6117, size: 64)
!6117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6118, size: 64)
!6118 = !DISubroutineType(types: !6119)
!6119 = !{!6, !2169, !199, !199, !2978}
!6120 = !DIDerivedType(tag: DW_TAG_member, name: "unset_port", scope: !6114, file: !2980, line: 252, baseType: !6117, size: 64, offset: 64)
!6121 = !DIDerivedType(tag: DW_TAG_member, name: "sync_table", scope: !6114, file: !2980, line: 257, baseType: !6122, size: 64, offset: 128)
!6122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6123, size: 64)
!6123 = !DISubroutineType(types: !6124)
!6124 = !{!6, !2169, !199}
!6125 = !DIDerivedType(tag: DW_TAG_member, name: "shared", scope: !6114, file: !2980, line: 259, baseType: !6126, size: 64, offset: 192)
!6126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6127, size: 64)
!6127 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "udp_tunnel_nic_shared", file: !2980, line: 207, size: 192, elements: !6128)
!6128 = !{!6129, !6132}
!6129 = !DIDerivedType(tag: DW_TAG_member, name: "udp_tunnel_nic_info", scope: !6127, file: !2980, line: 208, baseType: !6130, size: 64)
!6130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6131, size: 64)
!6131 = !DICompositeType(tag: DW_TAG_structure_type, name: "udp_tunnel_nic", file: !2171, line: 69, flags: DIFlagFwdDecl)
!6132 = !DIDerivedType(tag: DW_TAG_member, name: "devices", scope: !6127, file: !2980, line: 210, baseType: !30, size: 128, offset: 64)
!6133 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6114, file: !2980, line: 261, baseType: !199, size: 32, offset: 256)
!6134 = !DIDerivedType(tag: DW_TAG_member, name: "tables", scope: !6114, file: !2980, line: 266, baseType: !6135, size: 256, offset: 288)
!6135 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6136, size: 256, elements: !1212)
!6136 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "udp_tunnel_nic_table_info", file: !2980, line: 263, size: 64, elements: !6137)
!6137 = !{!6138, !6139}
!6138 = !DIDerivedType(tag: DW_TAG_member, name: "n_entries", scope: !6136, file: !2980, line: 264, baseType: !199, size: 32)
!6139 = !DIDerivedType(tag: DW_TAG_member, name: "tunnel_types", scope: !6136, file: !2980, line: 265, baseType: !199, size: 32, offset: 32)
!6140 = !DIDerivedType(tag: DW_TAG_member, name: "udp_tunnel_nic", scope: !2170, file: !2171, line: 2163, baseType: !6130, size: 64, offset: 15360)
!6141 = !DIDerivedType(tag: DW_TAG_member, name: "xdp_state", scope: !2170, file: !2171, line: 2166, baseType: !6142, size: 384, offset: 15424)
!6142 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6143, size: 384, elements: !86)
!6143 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_xdp_entity", file: !2171, line: 889, size: 128, elements: !6144)
!6144 = !{!6145, !6146}
!6145 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !6143, file: !2171, line: 890, baseType: !3032, size: 64)
!6146 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !6143, file: !2171, line: 891, baseType: !6147, size: 64, offset: 64)
!6147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6148, size: 64)
!6148 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_xdp_link", file: !2171, line: 880, flags: DIFlagFwdDecl)
!6149 = !DIDerivedType(tag: DW_TAG_member, name: "dev_scratch", scope: !2166, file: !2155, line: 726, baseType: !135, size: 64)
!6150 = !DIDerivedType(tag: DW_TAG_member, name: "rbnode", scope: !2158, file: !2155, line: 729, baseType: !645, size: 192, align: 64)
!6151 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2158, file: !2155, line: 730, baseType: !30, size: 128)
!6152 = !DIDerivedType(tag: DW_TAG_member, scope: !2154, file: !2155, line: 733, baseType: !6153, size: 64, offset: 192)
!6153 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2154, file: !2155, line: 733, size: 64, elements: !6154)
!6154 = !{!6155, !6156}
!6155 = !DIDerivedType(tag: DW_TAG_member, name: "sk", scope: !6153, file: !2155, line: 734, baseType: !2003, size: 64)
!6156 = !DIDerivedType(tag: DW_TAG_member, name: "ip_defrag_offset", scope: !6153, file: !2155, line: 735, baseType: !6, size: 32)
!6157 = !DIDerivedType(tag: DW_TAG_member, scope: !2154, file: !2155, line: 738, baseType: !6158, size: 64, offset: 256)
!6158 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2154, file: !2155, line: 738, size: 64, elements: !6159)
!6159 = !{!6160, !6161}
!6160 = !DIDerivedType(tag: DW_TAG_member, name: "tstamp", scope: !6158, file: !2155, line: 739, baseType: !1347, size: 64)
!6161 = !DIDerivedType(tag: DW_TAG_member, name: "skb_mstamp_ns", scope: !6158, file: !2155, line: 740, baseType: !235, size: 64)
!6162 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !2154, file: !2155, line: 748, baseType: !6163, size: 384, align: 64, offset: 320)
!6163 = !DICompositeType(tag: DW_TAG_array_type, baseType: !28, size: 384, elements: !2935)
!6164 = !DIDerivedType(tag: DW_TAG_member, scope: !2154, file: !2155, line: 750, baseType: !6165, size: 128, offset: 704)
!6165 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2154, file: !2155, line: 750, size: 128, elements: !6166)
!6166 = !{!6167, !6172}
!6167 = !DIDerivedType(tag: DW_TAG_member, scope: !6165, file: !2155, line: 751, baseType: !6168, size: 128)
!6168 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6165, file: !2155, line: 751, size: 128, elements: !6169)
!6169 = !{!6170, !6171}
!6170 = !DIDerivedType(tag: DW_TAG_member, name: "_skb_refdst", scope: !6168, file: !2155, line: 752, baseType: !135, size: 64)
!6171 = !DIDerivedType(tag: DW_TAG_member, name: "destructor", scope: !6168, file: !2155, line: 753, baseType: !2485, size: 64, offset: 64)
!6172 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_tsorted_anchor", scope: !6165, file: !2155, line: 755, baseType: !30, size: 128)
!6173 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !2154, file: !2155, line: 761, baseType: !199, size: 32, offset: 832)
!6174 = !DIDerivedType(tag: DW_TAG_member, name: "data_len", scope: !2154, file: !2155, line: 762, baseType: !199, size: 32, offset: 864)
!6175 = !DIDerivedType(tag: DW_TAG_member, name: "mac_len", scope: !2154, file: !2155, line: 763, baseType: !745, size: 16, offset: 896)
!6176 = !DIDerivedType(tag: DW_TAG_member, name: "hdr_len", scope: !2154, file: !2155, line: 764, baseType: !745, size: 16, offset: 912)
!6177 = !DIDerivedType(tag: DW_TAG_member, name: "queue_mapping", scope: !2154, file: !2155, line: 769, baseType: !745, size: 16, offset: 928)
!6178 = !DIDerivedType(tag: DW_TAG_member, name: "__cloned_offset", scope: !2154, file: !2155, line: 780, baseType: !4296, offset: 944)
!6179 = !DIDerivedType(tag: DW_TAG_member, name: "cloned", scope: !2154, file: !2155, line: 782, baseType: !1404, size: 1, offset: 944, flags: DIFlagBitField, extraData: i64 944)
!6180 = !DIDerivedType(tag: DW_TAG_member, name: "nohdr", scope: !2154, file: !2155, line: 783, baseType: !1404, size: 1, offset: 945, flags: DIFlagBitField, extraData: i64 944)
!6181 = !DIDerivedType(tag: DW_TAG_member, name: "fclone", scope: !2154, file: !2155, line: 784, baseType: !1404, size: 2, offset: 946, flags: DIFlagBitField, extraData: i64 944)
!6182 = !DIDerivedType(tag: DW_TAG_member, name: "peeked", scope: !2154, file: !2155, line: 785, baseType: !1404, size: 1, offset: 948, flags: DIFlagBitField, extraData: i64 944)
!6183 = !DIDerivedType(tag: DW_TAG_member, name: "head_frag", scope: !2154, file: !2155, line: 786, baseType: !1404, size: 1, offset: 949, flags: DIFlagBitField, extraData: i64 944)
!6184 = !DIDerivedType(tag: DW_TAG_member, name: "pfmemalloc", scope: !2154, file: !2155, line: 787, baseType: !1404, size: 1, offset: 950, flags: DIFlagBitField, extraData: i64 944)
!6185 = !DIDerivedType(tag: DW_TAG_member, name: "headers_start", scope: !2154, file: !2155, line: 795, baseType: !4618, offset: 960)
!6186 = !DIDerivedType(tag: DW_TAG_member, name: "__pkt_type_offset", scope: !2154, file: !2155, line: 807, baseType: !4296, offset: 960)
!6187 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_type", scope: !2154, file: !2155, line: 809, baseType: !1404, size: 3, offset: 960, flags: DIFlagBitField, extraData: i64 960)
!6188 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_df", scope: !2154, file: !2155, line: 810, baseType: !1404, size: 1, offset: 963, flags: DIFlagBitField, extraData: i64 960)
!6189 = !DIDerivedType(tag: DW_TAG_member, name: "nf_trace", scope: !2154, file: !2155, line: 811, baseType: !1404, size: 1, offset: 964, flags: DIFlagBitField, extraData: i64 960)
!6190 = !DIDerivedType(tag: DW_TAG_member, name: "ip_summed", scope: !2154, file: !2155, line: 812, baseType: !1404, size: 2, offset: 965, flags: DIFlagBitField, extraData: i64 960)
!6191 = !DIDerivedType(tag: DW_TAG_member, name: "ooo_okay", scope: !2154, file: !2155, line: 813, baseType: !1404, size: 1, offset: 967, flags: DIFlagBitField, extraData: i64 960)
!6192 = !DIDerivedType(tag: DW_TAG_member, name: "l4_hash", scope: !2154, file: !2155, line: 815, baseType: !1404, size: 1, offset: 968, flags: DIFlagBitField, extraData: i64 960)
!6193 = !DIDerivedType(tag: DW_TAG_member, name: "sw_hash", scope: !2154, file: !2155, line: 816, baseType: !1404, size: 1, offset: 969, flags: DIFlagBitField, extraData: i64 960)
!6194 = !DIDerivedType(tag: DW_TAG_member, name: "wifi_acked_valid", scope: !2154, file: !2155, line: 817, baseType: !1404, size: 1, offset: 970, flags: DIFlagBitField, extraData: i64 960)
!6195 = !DIDerivedType(tag: DW_TAG_member, name: "wifi_acked", scope: !2154, file: !2155, line: 818, baseType: !1404, size: 1, offset: 971, flags: DIFlagBitField, extraData: i64 960)
!6196 = !DIDerivedType(tag: DW_TAG_member, name: "no_fcs", scope: !2154, file: !2155, line: 819, baseType: !1404, size: 1, offset: 972, flags: DIFlagBitField, extraData: i64 960)
!6197 = !DIDerivedType(tag: DW_TAG_member, name: "encapsulation", scope: !2154, file: !2155, line: 821, baseType: !1404, size: 1, offset: 973, flags: DIFlagBitField, extraData: i64 960)
!6198 = !DIDerivedType(tag: DW_TAG_member, name: "encap_hdr_csum", scope: !2154, file: !2155, line: 822, baseType: !1404, size: 1, offset: 974, flags: DIFlagBitField, extraData: i64 960)
!6199 = !DIDerivedType(tag: DW_TAG_member, name: "csum_valid", scope: !2154, file: !2155, line: 823, baseType: !1404, size: 1, offset: 975, flags: DIFlagBitField, extraData: i64 960)
!6200 = !DIDerivedType(tag: DW_TAG_member, name: "__pkt_vlan_present_offset", scope: !2154, file: !2155, line: 832, baseType: !4296, offset: 976)
!6201 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_present", scope: !2154, file: !2155, line: 834, baseType: !1404, size: 1, offset: 976, flags: DIFlagBitField, extraData: i64 976)
!6202 = !DIDerivedType(tag: DW_TAG_member, name: "csum_complete_sw", scope: !2154, file: !2155, line: 835, baseType: !1404, size: 1, offset: 977, flags: DIFlagBitField, extraData: i64 976)
!6203 = !DIDerivedType(tag: DW_TAG_member, name: "csum_level", scope: !2154, file: !2155, line: 836, baseType: !1404, size: 2, offset: 978, flags: DIFlagBitField, extraData: i64 976)
!6204 = !DIDerivedType(tag: DW_TAG_member, name: "csum_not_inet", scope: !2154, file: !2155, line: 837, baseType: !1404, size: 1, offset: 980, flags: DIFlagBitField, extraData: i64 976)
!6205 = !DIDerivedType(tag: DW_TAG_member, name: "dst_pending_confirm", scope: !2154, file: !2155, line: 838, baseType: !1404, size: 1, offset: 981, flags: DIFlagBitField, extraData: i64 976)
!6206 = !DIDerivedType(tag: DW_TAG_member, name: "ndisc_nodetype", scope: !2154, file: !2155, line: 840, baseType: !1404, size: 2, offset: 982, flags: DIFlagBitField, extraData: i64 976)
!6207 = !DIDerivedType(tag: DW_TAG_member, name: "ipvs_property", scope: !2154, file: !2155, line: 843, baseType: !1404, size: 1, offset: 984, flags: DIFlagBitField, extraData: i64 976)
!6208 = !DIDerivedType(tag: DW_TAG_member, name: "inner_protocol_type", scope: !2154, file: !2155, line: 844, baseType: !1404, size: 1, offset: 985, flags: DIFlagBitField, extraData: i64 976)
!6209 = !DIDerivedType(tag: DW_TAG_member, name: "remcsum_offload", scope: !2154, file: !2155, line: 845, baseType: !1404, size: 1, offset: 986, flags: DIFlagBitField, extraData: i64 976)
!6210 = !DIDerivedType(tag: DW_TAG_member, name: "offload_fwd_mark", scope: !2154, file: !2155, line: 847, baseType: !1404, size: 1, offset: 987, flags: DIFlagBitField, extraData: i64 976)
!6211 = !DIDerivedType(tag: DW_TAG_member, name: "offload_l3_fwd_mark", scope: !2154, file: !2155, line: 848, baseType: !1404, size: 1, offset: 988, flags: DIFlagBitField, extraData: i64 976)
!6212 = !DIDerivedType(tag: DW_TAG_member, scope: !2154, file: !2155, line: 866, baseType: !6213, size: 32, offset: 992)
!6213 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2154, file: !2155, line: 866, size: 32, elements: !6214)
!6214 = !{!6215, !6217}
!6215 = !DIDerivedType(tag: DW_TAG_member, name: "csum", scope: !6213, file: !2155, line: 867, baseType: !6216, size: 32)
!6216 = !DIDerivedType(tag: DW_TAG_typedef, name: "__wsum", file: !2020, line: 37, baseType: !231)
!6217 = !DIDerivedType(tag: DW_TAG_member, scope: !6213, file: !2155, line: 868, baseType: !6218, size: 32)
!6218 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6213, file: !2155, line: 868, size: 32, elements: !6219)
!6219 = !{!6220, !6221}
!6220 = !DIDerivedType(tag: DW_TAG_member, name: "csum_start", scope: !6218, file: !2155, line: 869, baseType: !745, size: 16)
!6221 = !DIDerivedType(tag: DW_TAG_member, name: "csum_offset", scope: !6218, file: !2155, line: 870, baseType: !745, size: 16, offset: 16)
!6222 = !DIDerivedType(tag: DW_TAG_member, name: "priority", scope: !2154, file: !2155, line: 873, baseType: !231, size: 32, offset: 1024)
!6223 = !DIDerivedType(tag: DW_TAG_member, name: "skb_iif", scope: !2154, file: !2155, line: 874, baseType: !6, size: 32, offset: 1056)
!6224 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !2154, file: !2155, line: 875, baseType: !231, size: 32, offset: 1088)
!6225 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_proto", scope: !2154, file: !2155, line: 876, baseType: !2037, size: 16, offset: 1120)
!6226 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_tci", scope: !2154, file: !2155, line: 877, baseType: !745, size: 16, offset: 1136)
!6227 = !DIDerivedType(tag: DW_TAG_member, scope: !2154, file: !2155, line: 879, baseType: !6228, size: 32, offset: 1152)
!6228 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2154, file: !2155, line: 879, size: 32, elements: !6229)
!6229 = !{!6230, !6231}
!6230 = !DIDerivedType(tag: DW_TAG_member, name: "napi_id", scope: !6228, file: !2155, line: 880, baseType: !199, size: 32)
!6231 = !DIDerivedType(tag: DW_TAG_member, name: "sender_cpu", scope: !6228, file: !2155, line: 881, baseType: !199, size: 32)
!6232 = !DIDerivedType(tag: DW_TAG_member, scope: !2154, file: !2155, line: 888, baseType: !6233, size: 32, offset: 1184)
!6233 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2154, file: !2155, line: 888, size: 32, elements: !6234)
!6234 = !{!6235, !6236}
!6235 = !DIDerivedType(tag: DW_TAG_member, name: "mark", scope: !6233, file: !2155, line: 889, baseType: !231, size: 32)
!6236 = !DIDerivedType(tag: DW_TAG_member, name: "reserved_tailroom", scope: !6233, file: !2155, line: 890, baseType: !231, size: 32)
!6237 = !DIDerivedType(tag: DW_TAG_member, scope: !2154, file: !2155, line: 893, baseType: !6238, size: 16, offset: 1216)
!6238 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2154, file: !2155, line: 893, size: 16, elements: !6239)
!6239 = !{!6240, !6241}
!6240 = !DIDerivedType(tag: DW_TAG_member, name: "inner_protocol", scope: !6238, file: !2155, line: 894, baseType: !2037, size: 16)
!6241 = !DIDerivedType(tag: DW_TAG_member, name: "inner_ipproto", scope: !6238, file: !2155, line: 895, baseType: !1404, size: 8)
!6242 = !DIDerivedType(tag: DW_TAG_member, name: "inner_transport_header", scope: !2154, file: !2155, line: 898, baseType: !745, size: 16, offset: 1232)
!6243 = !DIDerivedType(tag: DW_TAG_member, name: "inner_network_header", scope: !2154, file: !2155, line: 899, baseType: !745, size: 16, offset: 1248)
!6244 = !DIDerivedType(tag: DW_TAG_member, name: "inner_mac_header", scope: !2154, file: !2155, line: 900, baseType: !745, size: 16, offset: 1264)
!6245 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !2154, file: !2155, line: 902, baseType: !2037, size: 16, offset: 1280)
!6246 = !DIDerivedType(tag: DW_TAG_member, name: "transport_header", scope: !2154, file: !2155, line: 903, baseType: !745, size: 16, offset: 1296)
!6247 = !DIDerivedType(tag: DW_TAG_member, name: "network_header", scope: !2154, file: !2155, line: 904, baseType: !745, size: 16, offset: 1312)
!6248 = !DIDerivedType(tag: DW_TAG_member, name: "mac_header", scope: !2154, file: !2155, line: 905, baseType: !745, size: 16, offset: 1328)
!6249 = !DIDerivedType(tag: DW_TAG_member, name: "headers_end", scope: !2154, file: !2155, line: 908, baseType: !4618, offset: 1344)
!6250 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2154, file: !2155, line: 912, baseType: !6251, size: 32, offset: 1344)
!6251 = !DIDerivedType(tag: DW_TAG_typedef, name: "sk_buff_data_t", file: !2155, line: 606, baseType: !199)
!6252 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !2154, file: !2155, line: 913, baseType: !6251, size: 32, offset: 1376)
!6253 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2154, file: !2155, line: 914, baseType: !5412, size: 64, offset: 1408)
!6254 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2154, file: !2155, line: 915, baseType: !5412, size: 64, offset: 1472)
!6255 = !DIDerivedType(tag: DW_TAG_member, name: "truesize", scope: !2154, file: !2155, line: 916, baseType: !199, size: 32, offset: 1536)
!6256 = !DIDerivedType(tag: DW_TAG_member, name: "users", scope: !2154, file: !2155, line: 917, baseType: !880, size: 32, offset: 1568)
!6257 = !DIDerivedType(tag: DW_TAG_member, name: "release_cb", scope: !2054, file: !2005, line: 1172, baseType: !2094, size: 64, offset: 1152)
!6258 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !2054, file: !2005, line: 1175, baseType: !2090, size: 64, offset: 1216)
!6259 = !DIDerivedType(tag: DW_TAG_member, name: "unhash", scope: !2054, file: !2005, line: 1176, baseType: !2094, size: 64, offset: 1280)
!6260 = !DIDerivedType(tag: DW_TAG_member, name: "rehash", scope: !2054, file: !2005, line: 1177, baseType: !2094, size: 64, offset: 1344)
!6261 = !DIDerivedType(tag: DW_TAG_member, name: "get_port", scope: !2054, file: !2005, line: 1178, baseType: !6262, size: 64, offset: 1408)
!6262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6263, size: 64)
!6263 = !DISubroutineType(types: !6264)
!6264 = !{!6, !2003, !127}
!6265 = !DIDerivedType(tag: DW_TAG_member, name: "inuse_idx", scope: !2054, file: !2005, line: 1182, baseType: !199, size: 32, offset: 1472)
!6266 = !DIDerivedType(tag: DW_TAG_member, name: "stream_memory_free", scope: !2054, file: !2005, line: 1185, baseType: !6267, size: 64, offset: 1536)
!6267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6268, size: 64)
!6268 = !DISubroutineType(types: !6269)
!6269 = !{!304, !6270, !6}
!6270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6271, size: 64)
!6271 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2004)
!6272 = !DIDerivedType(tag: DW_TAG_member, name: "stream_memory_read", scope: !2054, file: !2005, line: 1186, baseType: !6273, size: 64, offset: 1600)
!6273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6274, size: 64)
!6274 = !DISubroutineType(types: !6275)
!6275 = !{!304, !6270}
!6276 = !DIDerivedType(tag: DW_TAG_member, name: "enter_memory_pressure", scope: !2054, file: !2005, line: 1188, baseType: !2094, size: 64, offset: 1664)
!6277 = !DIDerivedType(tag: DW_TAG_member, name: "leave_memory_pressure", scope: !2054, file: !2005, line: 1189, baseType: !2094, size: 64, offset: 1728)
!6278 = !DIDerivedType(tag: DW_TAG_member, name: "memory_allocated", scope: !2054, file: !2005, line: 1190, baseType: !6279, size: 64, offset: 1792)
!6279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !562, size: 64)
!6280 = !DIDerivedType(tag: DW_TAG_member, name: "sockets_allocated", scope: !2054, file: !2005, line: 1191, baseType: !6281, size: 64, offset: 1856)
!6281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5157, size: 64)
!6282 = !DIDerivedType(tag: DW_TAG_member, name: "memory_pressure", scope: !2054, file: !2005, line: 1198, baseType: !5582, size: 64, offset: 1920)
!6283 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_mem", scope: !2054, file: !2005, line: 1199, baseType: !6284, size: 64, offset: 1984)
!6284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !120, size: 64)
!6285 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_wmem", scope: !2054, file: !2005, line: 1201, baseType: !540, size: 64, offset: 2048)
!6286 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_rmem", scope: !2054, file: !2005, line: 1202, baseType: !540, size: 64, offset: 2112)
!6287 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_wmem_offset", scope: !2054, file: !2005, line: 1203, baseType: !229, size: 32, offset: 2176)
!6288 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_rmem_offset", scope: !2054, file: !2005, line: 1204, baseType: !229, size: 32, offset: 2208)
!6289 = !DIDerivedType(tag: DW_TAG_member, name: "max_header", scope: !2054, file: !2005, line: 1206, baseType: !6, size: 32, offset: 2240)
!6290 = !DIDerivedType(tag: DW_TAG_member, name: "no_autobind", scope: !2054, file: !2005, line: 1207, baseType: !304, size: 8, offset: 2272)
!6291 = !DIDerivedType(tag: DW_TAG_member, name: "slab", scope: !2054, file: !2005, line: 1209, baseType: !985, size: 64, offset: 2304)
!6292 = !DIDerivedType(tag: DW_TAG_member, name: "obj_size", scope: !2054, file: !2005, line: 1210, baseType: !199, size: 32, offset: 2368)
!6293 = !DIDerivedType(tag: DW_TAG_member, name: "slab_flags", scope: !2054, file: !2005, line: 1211, baseType: !6294, size: 32, offset: 2400)
!6294 = !DIDerivedType(tag: DW_TAG_typedef, name: "slab_flags_t", file: !31, line: 149, baseType: !199)
!6295 = !DIDerivedType(tag: DW_TAG_member, name: "useroffset", scope: !2054, file: !2005, line: 1212, baseType: !199, size: 32, offset: 2432)
!6296 = !DIDerivedType(tag: DW_TAG_member, name: "usersize", scope: !2054, file: !2005, line: 1213, baseType: !199, size: 32, offset: 2464)
!6297 = !DIDerivedType(tag: DW_TAG_member, name: "orphan_count", scope: !2054, file: !2005, line: 1215, baseType: !6281, size: 64, offset: 2496)
!6298 = !DIDerivedType(tag: DW_TAG_member, name: "rsk_prot", scope: !2054, file: !2005, line: 1217, baseType: !6299, size: 64, offset: 2560)
!6299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6300, size: 64)
!6300 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "request_sock_ops", file: !6301, line: 27, size: 512, elements: !6302)
!6301 = !DIFile(filename: "./include/net/request_sock.h", directory: "/home/lizy2001/genbc/linux")
!6302 = !{!6303, !6304, !6305, !6306, !6307, !6336, !6340, !6344, !6348}
!6303 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !6300, file: !6301, line: 28, baseType: !6, size: 32)
!6304 = !DIDerivedType(tag: DW_TAG_member, name: "obj_size", scope: !6300, file: !6301, line: 29, baseType: !199, size: 32, offset: 32)
!6305 = !DIDerivedType(tag: DW_TAG_member, name: "slab", scope: !6300, file: !6301, line: 30, baseType: !985, size: 64, offset: 64)
!6306 = !DIDerivedType(tag: DW_TAG_member, name: "slab_name", scope: !6300, file: !6301, line: 31, baseType: !85, size: 64, offset: 128)
!6307 = !DIDerivedType(tag: DW_TAG_member, name: "rtx_syn_ack", scope: !6300, file: !6301, line: 32, baseType: !6308, size: 64, offset: 192)
!6308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6309, size: 64)
!6309 = !DISubroutineType(types: !6310)
!6310 = !{!6, !6270, !6311}
!6311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6312, size: 64)
!6312 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "request_sock", file: !6301, line: 53, size: 1792, elements: !6313)
!6313 = !{!6314, !6315, !6316, !6317, !6318, !6319, !6320, !6321, !6322, !6325, !6326, !6334, !6335}
!6314 = !DIDerivedType(tag: DW_TAG_member, name: "__req_common", scope: !6312, file: !6301, line: 54, baseType: !2008, size: 1088)
!6315 = !DIDerivedType(tag: DW_TAG_member, name: "dl_next", scope: !6312, file: !6301, line: 61, baseType: !6311, size: 64, offset: 1088)
!6316 = !DIDerivedType(tag: DW_TAG_member, name: "mss", scope: !6312, file: !6301, line: 62, baseType: !744, size: 16, offset: 1152)
!6317 = !DIDerivedType(tag: DW_TAG_member, name: "num_retrans", scope: !6312, file: !6301, line: 63, baseType: !1403, size: 8, offset: 1168)
!6318 = !DIDerivedType(tag: DW_TAG_member, name: "syncookie", scope: !6312, file: !6301, line: 64, baseType: !1403, size: 1, offset: 1176, flags: DIFlagBitField, extraData: i64 1176)
!6319 = !DIDerivedType(tag: DW_TAG_member, name: "num_timeout", scope: !6312, file: !6301, line: 65, baseType: !1403, size: 7, offset: 1177, flags: DIFlagBitField, extraData: i64 1176)
!6320 = !DIDerivedType(tag: DW_TAG_member, name: "ts_recent", scope: !6312, file: !6301, line: 66, baseType: !229, size: 32, offset: 1184)
!6321 = !DIDerivedType(tag: DW_TAG_member, name: "rsk_timer", scope: !6312, file: !6301, line: 67, baseType: !2566, size: 320, offset: 1216)
!6322 = !DIDerivedType(tag: DW_TAG_member, name: "rsk_ops", scope: !6312, file: !6301, line: 68, baseType: !6323, size: 64, offset: 1536)
!6323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6324, size: 64)
!6324 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6300)
!6325 = !DIDerivedType(tag: DW_TAG_member, name: "sk", scope: !6312, file: !6301, line: 69, baseType: !2003, size: 64, offset: 1600)
!6326 = !DIDerivedType(tag: DW_TAG_member, name: "saved_syn", scope: !6312, file: !6301, line: 70, baseType: !6327, size: 64, offset: 1664)
!6327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6328, size: 64)
!6328 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "saved_syn", file: !6301, line: 44, size: 96, elements: !6329)
!6329 = !{!6330, !6331, !6332, !6333}
!6330 = !DIDerivedType(tag: DW_TAG_member, name: "mac_hdrlen", scope: !6328, file: !6301, line: 45, baseType: !229, size: 32)
!6331 = !DIDerivedType(tag: DW_TAG_member, name: "network_hdrlen", scope: !6328, file: !6301, line: 46, baseType: !229, size: 32, offset: 32)
!6332 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_hdrlen", scope: !6328, file: !6301, line: 47, baseType: !229, size: 32, offset: 64)
!6333 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6328, file: !6301, line: 48, baseType: !2479, offset: 96)
!6334 = !DIDerivedType(tag: DW_TAG_member, name: "secid", scope: !6312, file: !6301, line: 71, baseType: !229, size: 32, offset: 1728)
!6335 = !DIDerivedType(tag: DW_TAG_member, name: "peer_secid", scope: !6312, file: !6301, line: 72, baseType: !229, size: 32, offset: 1760)
!6336 = !DIDerivedType(tag: DW_TAG_member, name: "send_ack", scope: !6300, file: !6301, line: 34, baseType: !6337, size: 64, offset: 256)
!6337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6338, size: 64)
!6338 = !DISubroutineType(types: !6339)
!6339 = !{null, !6270, !2153, !6311}
!6340 = !DIDerivedType(tag: DW_TAG_member, name: "send_reset", scope: !6300, file: !6301, line: 36, baseType: !6341, size: 64, offset: 320)
!6341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6342, size: 64)
!6342 = !DISubroutineType(types: !6343)
!6343 = !{null, !6270, !2153}
!6344 = !DIDerivedType(tag: DW_TAG_member, name: "destructor", scope: !6300, file: !6301, line: 38, baseType: !6345, size: 64, offset: 384)
!6345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6346, size: 64)
!6346 = !DISubroutineType(types: !6347)
!6347 = !{null, !6311}
!6348 = !DIDerivedType(tag: DW_TAG_member, name: "syn_ack_timeout", scope: !6300, file: !6301, line: 39, baseType: !6349, size: 64, offset: 448)
!6349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6350, size: 64)
!6350 = !DISubroutineType(types: !6351)
!6351 = !{null, !6352}
!6352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6353, size: 64)
!6353 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6312)
!6354 = !DIDerivedType(tag: DW_TAG_member, name: "twsk_prot", scope: !2054, file: !2005, line: 1218, baseType: !6355, size: 64, offset: 2624)
!6355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6356, size: 64)
!6356 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timewait_sock_ops", file: !6357, line: 14, size: 320, elements: !6358)
!6357 = !DIFile(filename: "./include/net/timewait_sock.h", directory: "/home/lizy2001/genbc/linux")
!6358 = !{!6359, !6360, !6361, !6362, !6366}
!6359 = !DIDerivedType(tag: DW_TAG_member, name: "twsk_slab", scope: !6356, file: !6357, line: 15, baseType: !985, size: 64)
!6360 = !DIDerivedType(tag: DW_TAG_member, name: "twsk_slab_name", scope: !6356, file: !6357, line: 16, baseType: !85, size: 64, offset: 64)
!6361 = !DIDerivedType(tag: DW_TAG_member, name: "twsk_obj_size", scope: !6356, file: !6357, line: 17, baseType: !199, size: 32, offset: 128)
!6362 = !DIDerivedType(tag: DW_TAG_member, name: "twsk_unique", scope: !6356, file: !6357, line: 18, baseType: !6363, size: 64, offset: 192)
!6363 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6364, size: 64)
!6364 = !DISubroutineType(types: !6365)
!6365 = !{!6, !2003, !2003, !159}
!6366 = !DIDerivedType(tag: DW_TAG_member, name: "twsk_destructor", scope: !6356, file: !6357, line: 20, baseType: !2094, size: 64, offset: 256)
!6367 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !2054, file: !2005, line: 1225, baseType: !6368, size: 64, offset: 2688)
!6368 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2054, file: !2005, line: 1220, size: 64, elements: !6369)
!6369 = !{!6370, !6374, !6389, !6392}
!6370 = !DIDerivedType(tag: DW_TAG_member, name: "hashinfo", scope: !6368, file: !2005, line: 1221, baseType: !6371, size: 64)
!6371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6372, size: 64)
!6372 = !DICompositeType(tag: DW_TAG_structure_type, name: "inet_hashinfo", file: !6373, line: 32, flags: DIFlagFwdDecl)
!6373 = !DIFile(filename: "./include/net/netns/ipv4.h", directory: "/home/lizy2001/genbc/linux")
!6374 = !DIDerivedType(tag: DW_TAG_member, name: "udp_table", scope: !6368, file: !2005, line: 1222, baseType: !6375, size: 64)
!6375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6376, size: 64)
!6376 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "udp_table", file: !6377, line: 72, size: 192, elements: !6378)
!6377 = !DIFile(filename: "./include/net/udp.h", directory: "/home/lizy2001/genbc/linux")
!6378 = !{!6379, !6386, !6387, !6388}
!6379 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !6376, file: !6377, line: 73, baseType: !6380, size: 64)
!6380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6381, size: 64)
!6381 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "udp_hslot", file: !6377, line: 58, size: 128, align: 128, elements: !6382)
!6382 = !{!6383, !6384, !6385}
!6383 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !6381, file: !6377, line: 59, baseType: !451, size: 64)
!6384 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !6381, file: !6377, line: 60, baseType: !6, size: 32, offset: 64)
!6385 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6381, file: !6377, line: 61, baseType: !44, offset: 96)
!6386 = !DIDerivedType(tag: DW_TAG_member, name: "hash2", scope: !6376, file: !6377, line: 74, baseType: !6380, size: 64, offset: 64)
!6387 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !6376, file: !6377, line: 75, baseType: !199, size: 32, offset: 128)
!6388 = !DIDerivedType(tag: DW_TAG_member, name: "log", scope: !6376, file: !6377, line: 76, baseType: !199, size: 32, offset: 160)
!6389 = !DIDerivedType(tag: DW_TAG_member, name: "raw_hash", scope: !6368, file: !2005, line: 1223, baseType: !6390, size: 64)
!6390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6391, size: 64)
!6391 = !DICompositeType(tag: DW_TAG_structure_type, name: "raw_hashinfo", file: !2005, line: 1108, flags: DIFlagFwdDecl)
!6392 = !DIDerivedType(tag: DW_TAG_member, name: "smc_hash", scope: !6368, file: !2005, line: 1224, baseType: !6393, size: 64)
!6393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6394, size: 64)
!6394 = !DICompositeType(tag: DW_TAG_structure_type, name: "smc_hashinfo", file: !2005, line: 1109, flags: DIFlagFwdDecl)
!6395 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2054, file: !2005, line: 1227, baseType: !446, size: 64, offset: 2752)
!6396 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2054, file: !2005, line: 1229, baseType: !4272, size: 256, offset: 2816)
!6397 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2054, file: !2005, line: 1231, baseType: !30, size: 128, offset: 3072)
!6398 = !DIDerivedType(tag: DW_TAG_member, name: "diag_destroy", scope: !2054, file: !2005, line: 1235, baseType: !2078, size: 64, offset: 3200)
!6399 = !DIDerivedType(tag: DW_TAG_member, name: "skc_net", scope: !2008, file: !2005, line: 198, baseType: !2428, size: 64, offset: 384)
!6400 = !DIDerivedType(tag: DW_TAG_member, name: "skc_v6_daddr", scope: !2008, file: !2005, line: 201, baseType: !4883, size: 128, offset: 448)
!6401 = !DIDerivedType(tag: DW_TAG_member, name: "skc_v6_rcv_saddr", scope: !2008, file: !2005, line: 202, baseType: !4883, size: 128, offset: 576)
!6402 = !DIDerivedType(tag: DW_TAG_member, name: "skc_cookie", scope: !2008, file: !2005, line: 205, baseType: !564, size: 64, offset: 704)
!6403 = !DIDerivedType(tag: DW_TAG_member, scope: !2008, file: !2005, line: 212, baseType: !6404, size: 64, offset: 768)
!6404 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2008, file: !2005, line: 212, size: 64, elements: !6405)
!6405 = !{!6406, !6407, !6408}
!6406 = !DIDerivedType(tag: DW_TAG_member, name: "skc_flags", scope: !6404, file: !2005, line: 213, baseType: !135, size: 64)
!6407 = !DIDerivedType(tag: DW_TAG_member, name: "skc_listener", scope: !6404, file: !2005, line: 214, baseType: !2003, size: 64)
!6408 = !DIDerivedType(tag: DW_TAG_member, name: "skc_tw_dr", scope: !6404, file: !2005, line: 215, baseType: !6409, size: 64)
!6409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6410, size: 64)
!6410 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inet_timewait_death_row", file: !6373, line: 34, size: 192, elements: !6411)
!6411 = !{!6412, !6413, !6414}
!6412 = !DIDerivedType(tag: DW_TAG_member, name: "tw_count", scope: !6410, file: !6373, line: 35, baseType: !632, size: 32)
!6413 = !DIDerivedType(tag: DW_TAG_member, name: "hashinfo", scope: !6410, file: !6373, line: 37, baseType: !6371, size: 64, offset: 64)
!6414 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_max_tw_buckets", scope: !6410, file: !6373, line: 38, baseType: !6, size: 32, offset: 128)
!6415 = !DIDerivedType(tag: DW_TAG_member, name: "skc_dontcopy_begin", scope: !2008, file: !2005, line: 222, baseType: !6416, offset: 832)
!6416 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6, elements: !1932)
!6417 = !DIDerivedType(tag: DW_TAG_member, scope: !2008, file: !2005, line: 224, baseType: !6418, size: 128, offset: 832)
!6418 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2008, file: !2005, line: 224, size: 128, elements: !6419)
!6419 = !{!6420, !6421}
!6420 = !DIDerivedType(tag: DW_TAG_member, name: "skc_node", scope: !6418, file: !2005, line: 225, baseType: !455, size: 128)
!6421 = !DIDerivedType(tag: DW_TAG_member, name: "skc_nulls_node", scope: !6418, file: !2005, line: 226, baseType: !6422, size: 128)
!6422 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_nulls_node", file: !6423, line: 25, size: 128, elements: !6424)
!6423 = !DIFile(filename: "./include/linux/list_nulls.h", directory: "/home/lizy2001/genbc/linux")
!6424 = !{!6425, !6427}
!6425 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6422, file: !6423, line: 26, baseType: !6426, size: 64)
!6426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6422, size: 64)
!6427 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !6422, file: !6423, line: 26, baseType: !6428, size: 64, offset: 64)
!6428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6426, size: 64)
!6429 = !DIDerivedType(tag: DW_TAG_member, name: "skc_tx_queue_mapping", scope: !2008, file: !2005, line: 228, baseType: !127, size: 16, offset: 960)
!6430 = !DIDerivedType(tag: DW_TAG_member, scope: !2008, file: !2005, line: 232, baseType: !6431, size: 32, offset: 992)
!6431 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2008, file: !2005, line: 232, size: 32, elements: !6432)
!6432 = !{!6433, !6434, !6435}
!6433 = !DIDerivedType(tag: DW_TAG_member, name: "skc_incoming_cpu", scope: !6431, file: !2005, line: 233, baseType: !6, size: 32)
!6434 = !DIDerivedType(tag: DW_TAG_member, name: "skc_rcv_wnd", scope: !6431, file: !2005, line: 234, baseType: !229, size: 32)
!6435 = !DIDerivedType(tag: DW_TAG_member, name: "skc_tw_rcv_nxt", scope: !6431, file: !2005, line: 235, baseType: !229, size: 32)
!6436 = !DIDerivedType(tag: DW_TAG_member, name: "skc_refcnt", scope: !2008, file: !2005, line: 238, baseType: !880, size: 32, offset: 1024)
!6437 = !DIDerivedType(tag: DW_TAG_member, name: "skc_dontcopy_end", scope: !2008, file: !2005, line: 240, baseType: !6416, offset: 1056)
!6438 = !DIDerivedType(tag: DW_TAG_member, scope: !2008, file: !2005, line: 241, baseType: !6439, size: 32, offset: 1056)
!6439 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2008, file: !2005, line: 241, size: 32, elements: !6440)
!6440 = !{!6441, !6442, !6443}
!6441 = !DIDerivedType(tag: DW_TAG_member, name: "skc_rxhash", scope: !6439, file: !2005, line: 242, baseType: !229, size: 32)
!6442 = !DIDerivedType(tag: DW_TAG_member, name: "skc_window_clamp", scope: !6439, file: !2005, line: 243, baseType: !229, size: 32)
!6443 = !DIDerivedType(tag: DW_TAG_member, name: "skc_tw_snd_nxt", scope: !6439, file: !2005, line: 244, baseType: !229, size: 32)
!6444 = !DIDerivedType(tag: DW_TAG_member, name: "sk_lock", scope: !2004, file: !2005, line: 387, baseType: !6445, size: 192, offset: 1088)
!6445 = !DIDerivedType(tag: DW_TAG_typedef, name: "socket_lock_t", file: !2005, line: 108, baseType: !6446)
!6446 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2005, line: 95, size: 192, elements: !6447)
!6447 = !{!6448, !6449, !6450}
!6448 = !DIDerivedType(tag: DW_TAG_member, name: "slock", scope: !6446, file: !2005, line: 96, baseType: !44)
!6449 = !DIDerivedType(tag: DW_TAG_member, name: "owned", scope: !6446, file: !2005, line: 97, baseType: !6, size: 32)
!6450 = !DIDerivedType(tag: DW_TAG_member, name: "wq", scope: !6446, file: !2005, line: 98, baseType: !812, size: 128, offset: 64)
!6451 = !DIDerivedType(tag: DW_TAG_member, name: "sk_drops", scope: !2004, file: !2005, line: 388, baseType: !632, size: 32, offset: 1280)
!6452 = !DIDerivedType(tag: DW_TAG_member, name: "sk_rcvlowat", scope: !2004, file: !2005, line: 389, baseType: !6, size: 32, offset: 1312)
!6453 = !DIDerivedType(tag: DW_TAG_member, name: "sk_error_queue", scope: !2004, file: !2005, line: 390, baseType: !2583, size: 192, offset: 1344)
!6454 = !DIDerivedType(tag: DW_TAG_member, name: "sk_rx_skb_cache", scope: !2004, file: !2005, line: 391, baseType: !2153, size: 64, offset: 1536)
!6455 = !DIDerivedType(tag: DW_TAG_member, name: "sk_receive_queue", scope: !2004, file: !2005, line: 392, baseType: !2583, size: 192, offset: 1600)
!6456 = !DIDerivedType(tag: DW_TAG_member, name: "sk_backlog", scope: !2004, file: !2005, line: 406, baseType: !6457, size: 192, offset: 1792)
!6457 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2004, file: !2005, line: 401, size: 192, elements: !6458)
!6458 = !{!6459, !6460, !6461, !6462}
!6459 = !DIDerivedType(tag: DW_TAG_member, name: "rmem_alloc", scope: !6457, file: !2005, line: 402, baseType: !632, size: 32)
!6460 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !6457, file: !2005, line: 403, baseType: !6, size: 32, offset: 32)
!6461 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !6457, file: !2005, line: 404, baseType: !2153, size: 64, offset: 64)
!6462 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !6457, file: !2005, line: 405, baseType: !2153, size: 64, offset: 128)
!6463 = !DIDerivedType(tag: DW_TAG_member, name: "sk_forward_alloc", scope: !2004, file: !2005, line: 409, baseType: !6, size: 32, offset: 1984)
!6464 = !DIDerivedType(tag: DW_TAG_member, name: "sk_ll_usec", scope: !2004, file: !2005, line: 411, baseType: !199, size: 32, offset: 2016)
!6465 = !DIDerivedType(tag: DW_TAG_member, name: "sk_napi_id", scope: !2004, file: !2005, line: 413, baseType: !199, size: 32, offset: 2048)
!6466 = !DIDerivedType(tag: DW_TAG_member, name: "sk_rcvbuf", scope: !2004, file: !2005, line: 415, baseType: !6, size: 32, offset: 2080)
!6467 = !DIDerivedType(tag: DW_TAG_member, name: "sk_filter", scope: !2004, file: !2005, line: 417, baseType: !6468, size: 64, offset: 2112)
!6468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6469, size: 64)
!6469 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sk_filter", file: !3034, line: 552, size: 256, elements: !6470)
!6470 = !{!6471, !6472, !6473}
!6471 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !6469, file: !3034, line: 553, baseType: !880, size: 32)
!6472 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !6469, file: !3034, line: 554, baseType: !178, size: 128, align: 64, offset: 64)
!6473 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !6469, file: !3034, line: 555, baseType: !3032, size: 64, offset: 192)
!6474 = !DIDerivedType(tag: DW_TAG_member, scope: !2004, file: !2005, line: 418, baseType: !6475, size: 64, offset: 2176)
!6475 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2004, file: !2005, line: 418, size: 64, elements: !6476)
!6476 = !{!6477, !6486}
!6477 = !DIDerivedType(tag: DW_TAG_member, name: "sk_wq", scope: !6475, file: !2005, line: 419, baseType: !6478, size: 64)
!6478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6479, size: 64)
!6479 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "socket_wq", file: !6480, line: 98, size: 384, elements: !6481)
!6480 = !DIFile(filename: "./include/linux/net.h", directory: "/home/lizy2001/genbc/linux")
!6481 = !{!6482, !6483, !6484, !6485}
!6482 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !6479, file: !6480, line: 100, baseType: !812, size: 128)
!6483 = !DIDerivedType(tag: DW_TAG_member, name: "fasync_list", scope: !6479, file: !6480, line: 101, baseType: !830, size: 64, offset: 128)
!6484 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6479, file: !6480, line: 102, baseType: !135, size: 64, offset: 192)
!6485 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !6479, file: !6480, line: 103, baseType: !178, size: 128, align: 64, offset: 256)
!6486 = !DIDerivedType(tag: DW_TAG_member, name: "sk_wq_raw", scope: !6475, file: !2005, line: 421, baseType: !6478, size: 64)
!6487 = !DIDerivedType(tag: DW_TAG_member, name: "sk_rx_dst", scope: !2004, file: !2005, line: 427, baseType: !5113, size: 64, offset: 2240)
!6488 = !DIDerivedType(tag: DW_TAG_member, name: "sk_dst_cache", scope: !2004, file: !2005, line: 428, baseType: !5113, size: 64, offset: 2304)
!6489 = !DIDerivedType(tag: DW_TAG_member, name: "sk_omem_alloc", scope: !2004, file: !2005, line: 429, baseType: !632, size: 32, offset: 2368)
!6490 = !DIDerivedType(tag: DW_TAG_member, name: "sk_sndbuf", scope: !2004, file: !2005, line: 430, baseType: !6, size: 32, offset: 2400)
!6491 = !DIDerivedType(tag: DW_TAG_member, name: "sk_wmem_queued", scope: !2004, file: !2005, line: 433, baseType: !6, size: 32, offset: 2432)
!6492 = !DIDerivedType(tag: DW_TAG_member, name: "sk_wmem_alloc", scope: !2004, file: !2005, line: 434, baseType: !880, size: 32, offset: 2464)
!6493 = !DIDerivedType(tag: DW_TAG_member, name: "sk_tsq_flags", scope: !2004, file: !2005, line: 435, baseType: !135, size: 64, offset: 2496)
!6494 = !DIDerivedType(tag: DW_TAG_member, scope: !2004, file: !2005, line: 436, baseType: !6495, size: 64, offset: 2560)
!6495 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2004, file: !2005, line: 436, size: 64, elements: !6496)
!6496 = !{!6497, !6498}
!6497 = !DIDerivedType(tag: DW_TAG_member, name: "sk_send_head", scope: !6495, file: !2005, line: 437, baseType: !2153, size: 64)
!6498 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_rtx_queue", scope: !6495, file: !2005, line: 438, baseType: !641, size: 64)
!6499 = !DIDerivedType(tag: DW_TAG_member, name: "sk_tx_skb_cache", scope: !2004, file: !2005, line: 440, baseType: !2153, size: 64, offset: 2624)
!6500 = !DIDerivedType(tag: DW_TAG_member, name: "sk_write_queue", scope: !2004, file: !2005, line: 441, baseType: !2583, size: 192, offset: 2688)
!6501 = !DIDerivedType(tag: DW_TAG_member, name: "sk_peek_off", scope: !2004, file: !2005, line: 442, baseType: !1502, size: 32, offset: 2880)
!6502 = !DIDerivedType(tag: DW_TAG_member, name: "sk_write_pending", scope: !2004, file: !2005, line: 443, baseType: !6, size: 32, offset: 2912)
!6503 = !DIDerivedType(tag: DW_TAG_member, name: "sk_dst_pending_confirm", scope: !2004, file: !2005, line: 444, baseType: !231, size: 32, offset: 2944)
!6504 = !DIDerivedType(tag: DW_TAG_member, name: "sk_pacing_status", scope: !2004, file: !2005, line: 445, baseType: !229, size: 32, offset: 2976)
!6505 = !DIDerivedType(tag: DW_TAG_member, name: "sk_sndtimeo", scope: !2004, file: !2005, line: 446, baseType: !120, size: 64, offset: 3008)
!6506 = !DIDerivedType(tag: DW_TAG_member, name: "sk_timer", scope: !2004, file: !2005, line: 447, baseType: !2566, size: 320, offset: 3072)
!6507 = !DIDerivedType(tag: DW_TAG_member, name: "sk_priority", scope: !2004, file: !2005, line: 448, baseType: !231, size: 32, offset: 3392)
!6508 = !DIDerivedType(tag: DW_TAG_member, name: "sk_mark", scope: !2004, file: !2005, line: 449, baseType: !231, size: 32, offset: 3424)
!6509 = !DIDerivedType(tag: DW_TAG_member, name: "sk_pacing_rate", scope: !2004, file: !2005, line: 450, baseType: !135, size: 64, offset: 3456)
!6510 = !DIDerivedType(tag: DW_TAG_member, name: "sk_max_pacing_rate", scope: !2004, file: !2005, line: 451, baseType: !135, size: 64, offset: 3520)
!6511 = !DIDerivedType(tag: DW_TAG_member, name: "sk_frag", scope: !2004, file: !2005, line: 452, baseType: !6512, size: 128, offset: 3584)
!6512 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page_frag", file: !1208, line: 64, size: 128, elements: !6513)
!6513 = !{!6514, !6515, !6516}
!6514 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !6512, file: !1208, line: 65, baseType: !605, size: 64)
!6515 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !6512, file: !1208, line: 67, baseType: !231, size: 32, offset: 64)
!6516 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6512, file: !1208, line: 68, baseType: !231, size: 32, offset: 96)
!6517 = !DIDerivedType(tag: DW_TAG_member, name: "sk_route_caps", scope: !2004, file: !2005, line: 453, baseType: !2208, size: 64, offset: 3712)
!6518 = !DIDerivedType(tag: DW_TAG_member, name: "sk_route_nocaps", scope: !2004, file: !2005, line: 454, baseType: !2208, size: 64, offset: 3776)
!6519 = !DIDerivedType(tag: DW_TAG_member, name: "sk_route_forced_caps", scope: !2004, file: !2005, line: 455, baseType: !2208, size: 64, offset: 3840)
!6520 = !DIDerivedType(tag: DW_TAG_member, name: "sk_gso_type", scope: !2004, file: !2005, line: 456, baseType: !6, size: 32, offset: 3904)
!6521 = !DIDerivedType(tag: DW_TAG_member, name: "sk_gso_max_size", scope: !2004, file: !2005, line: 457, baseType: !199, size: 32, offset: 3936)
!6522 = !DIDerivedType(tag: DW_TAG_member, name: "sk_allocation", scope: !2004, file: !2005, line: 458, baseType: !628, size: 32, offset: 3968)
!6523 = !DIDerivedType(tag: DW_TAG_member, name: "sk_txhash", scope: !2004, file: !2005, line: 459, baseType: !231, size: 32, offset: 4000)
!6524 = !DIDerivedType(tag: DW_TAG_member, name: "sk_padding", scope: !2004, file: !2005, line: 465, baseType: !1403, size: 1, offset: 4032, flags: DIFlagBitField, extraData: i64 4032)
!6525 = !DIDerivedType(tag: DW_TAG_member, name: "sk_kern_sock", scope: !2004, file: !2005, line: 466, baseType: !1403, size: 1, offset: 4033, flags: DIFlagBitField, extraData: i64 4032)
!6526 = !DIDerivedType(tag: DW_TAG_member, name: "sk_no_check_tx", scope: !2004, file: !2005, line: 467, baseType: !1403, size: 1, offset: 4034, flags: DIFlagBitField, extraData: i64 4032)
!6527 = !DIDerivedType(tag: DW_TAG_member, name: "sk_no_check_rx", scope: !2004, file: !2005, line: 468, baseType: !1403, size: 1, offset: 4035, flags: DIFlagBitField, extraData: i64 4032)
!6528 = !DIDerivedType(tag: DW_TAG_member, name: "sk_userlocks", scope: !2004, file: !2005, line: 469, baseType: !1403, size: 4, offset: 4036, flags: DIFlagBitField, extraData: i64 4032)
!6529 = !DIDerivedType(tag: DW_TAG_member, name: "sk_pacing_shift", scope: !2004, file: !2005, line: 470, baseType: !1403, size: 8, offset: 4040)
!6530 = !DIDerivedType(tag: DW_TAG_member, name: "sk_type", scope: !2004, file: !2005, line: 471, baseType: !744, size: 16, offset: 4048)
!6531 = !DIDerivedType(tag: DW_TAG_member, name: "sk_protocol", scope: !2004, file: !2005, line: 472, baseType: !744, size: 16, offset: 4064)
!6532 = !DIDerivedType(tag: DW_TAG_member, name: "sk_gso_max_segs", scope: !2004, file: !2005, line: 473, baseType: !744, size: 16, offset: 4080)
!6533 = !DIDerivedType(tag: DW_TAG_member, name: "sk_lingertime", scope: !2004, file: !2005, line: 474, baseType: !135, size: 64, offset: 4096)
!6534 = !DIDerivedType(tag: DW_TAG_member, name: "sk_prot_creator", scope: !2004, file: !2005, line: 475, baseType: !2053, size: 64, offset: 4160)
!6535 = !DIDerivedType(tag: DW_TAG_member, name: "sk_callback_lock", scope: !2004, file: !2005, line: 476, baseType: !834, offset: 4224)
!6536 = !DIDerivedType(tag: DW_TAG_member, name: "sk_err", scope: !2004, file: !2005, line: 477, baseType: !6, size: 32, offset: 4224)
!6537 = !DIDerivedType(tag: DW_TAG_member, name: "sk_err_soft", scope: !2004, file: !2005, line: 478, baseType: !6, size: 32, offset: 4256)
!6538 = !DIDerivedType(tag: DW_TAG_member, name: "sk_ack_backlog", scope: !2004, file: !2005, line: 479, baseType: !229, size: 32, offset: 4288)
!6539 = !DIDerivedType(tag: DW_TAG_member, name: "sk_max_ack_backlog", scope: !2004, file: !2005, line: 480, baseType: !229, size: 32, offset: 4320)
!6540 = !DIDerivedType(tag: DW_TAG_member, name: "sk_uid", scope: !2004, file: !2005, line: 481, baseType: !249, size: 32, offset: 4352)
!6541 = !DIDerivedType(tag: DW_TAG_member, name: "sk_peer_pid", scope: !2004, file: !2005, line: 482, baseType: !1533, size: 64, offset: 4416)
!6542 = !DIDerivedType(tag: DW_TAG_member, name: "sk_peer_cred", scope: !2004, file: !2005, line: 483, baseType: !1889, size: 64, offset: 4480)
!6543 = !DIDerivedType(tag: DW_TAG_member, name: "sk_rcvtimeo", scope: !2004, file: !2005, line: 484, baseType: !120, size: 64, offset: 4544)
!6544 = !DIDerivedType(tag: DW_TAG_member, name: "sk_stamp", scope: !2004, file: !2005, line: 485, baseType: !1347, size: 64, offset: 4608)
!6545 = !DIDerivedType(tag: DW_TAG_member, name: "sk_tsflags", scope: !2004, file: !2005, line: 489, baseType: !744, size: 16, offset: 4672)
!6546 = !DIDerivedType(tag: DW_TAG_member, name: "sk_shutdown", scope: !2004, file: !2005, line: 490, baseType: !1403, size: 8, offset: 4688)
!6547 = !DIDerivedType(tag: DW_TAG_member, name: "sk_tskey", scope: !2004, file: !2005, line: 491, baseType: !229, size: 32, offset: 4704)
!6548 = !DIDerivedType(tag: DW_TAG_member, name: "sk_zckey", scope: !2004, file: !2005, line: 492, baseType: !632, size: 32, offset: 4736)
!6549 = !DIDerivedType(tag: DW_TAG_member, name: "sk_clockid", scope: !2004, file: !2005, line: 494, baseType: !1403, size: 8, offset: 4768)
!6550 = !DIDerivedType(tag: DW_TAG_member, name: "sk_txtime_deadline_mode", scope: !2004, file: !2005, line: 495, baseType: !1403, size: 1, offset: 4776, flags: DIFlagBitField, extraData: i64 4776)
!6551 = !DIDerivedType(tag: DW_TAG_member, name: "sk_txtime_report_errors", scope: !2004, file: !2005, line: 496, baseType: !1403, size: 1, offset: 4777, flags: DIFlagBitField, extraData: i64 4776)
!6552 = !DIDerivedType(tag: DW_TAG_member, name: "sk_txtime_unused", scope: !2004, file: !2005, line: 497, baseType: !1403, size: 6, offset: 4778, flags: DIFlagBitField, extraData: i64 4776)
!6553 = !DIDerivedType(tag: DW_TAG_member, name: "sk_socket", scope: !2004, file: !2005, line: 499, baseType: !6554, size: 64, offset: 4800)
!6554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6555, size: 64)
!6555 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "socket", file: !6480, line: 116, size: 704, elements: !6556)
!6556 = !{!6557, !6567, !6568, !6569, !6570, !6571, !6674}
!6557 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !6555, file: !6480, line: 117, baseType: !6558, size: 32)
!6558 = !DIDerivedType(tag: DW_TAG_typedef, name: "socket_state", file: !6559, line: 54, baseType: !6560)
!6559 = !DIFile(filename: "./include/uapi/linux/net.h", directory: "/home/lizy2001/genbc/linux")
!6560 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !6559, line: 48, baseType: !199, size: 32, elements: !6561)
!6561 = !{!6562, !6563, !6564, !6565, !6566}
!6562 = !DIEnumerator(name: "SS_FREE", value: 0, isUnsigned: true)
!6563 = !DIEnumerator(name: "SS_UNCONNECTED", value: 1, isUnsigned: true)
!6564 = !DIEnumerator(name: "SS_CONNECTING", value: 2, isUnsigned: true)
!6565 = !DIEnumerator(name: "SS_CONNECTED", value: 3, isUnsigned: true)
!6566 = !DIEnumerator(name: "SS_DISCONNECTING", value: 4, isUnsigned: true)
!6567 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !6555, file: !6480, line: 119, baseType: !1256, size: 16, offset: 32)
!6568 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6555, file: !6480, line: 121, baseType: !135, size: 64, offset: 64)
!6569 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !6555, file: !6480, line: 123, baseType: !164, size: 64, offset: 128)
!6570 = !DIDerivedType(tag: DW_TAG_member, name: "sk", scope: !6555, file: !6480, line: 124, baseType: !2003, size: 64, offset: 192)
!6571 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !6555, file: !6480, line: 125, baseType: !6572, size: 64, offset: 256)
!6572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6573, size: 64)
!6573 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6574)
!6574 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "proto_ops", file: !6480, line: 139, size: 1728, elements: !6575)
!6575 = !{!6576, !6577, !6578, !6579, !6583, !6587, !6591, !6595, !6599, !6600, !6604, !6608, !6612, !6616, !6617, !6621, !6625, !6629, !6633, !6637, !6641, !6645, !6649, !6650, !6651, !6671, !6672, !6673}
!6576 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !6574, file: !6480, line: 140, baseType: !6, size: 32)
!6577 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6574, file: !6480, line: 141, baseType: !199, size: 32, offset: 32)
!6578 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !6574, file: !6480, line: 142, baseType: !446, size: 64, offset: 64)
!6579 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !6574, file: !6480, line: 143, baseType: !6580, size: 64, offset: 128)
!6580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6581, size: 64)
!6581 = !DISubroutineType(types: !6582)
!6582 = !{!6, !6554}
!6583 = !DIDerivedType(tag: DW_TAG_member, name: "bind", scope: !6574, file: !6480, line: 144, baseType: !6584, size: 64, offset: 192)
!6584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6585, size: 64)
!6585 = !DISubroutineType(types: !6586)
!6586 = !{!6, !6554, !2064, !6}
!6587 = !DIDerivedType(tag: DW_TAG_member, name: "connect", scope: !6574, file: !6480, line: 147, baseType: !6588, size: 64, offset: 256)
!6588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6589, size: 64)
!6589 = !DISubroutineType(types: !6590)
!6590 = !{!6, !6554, !2064, !6, !6}
!6591 = !DIDerivedType(tag: DW_TAG_member, name: "socketpair", scope: !6574, file: !6480, line: 150, baseType: !6592, size: 64, offset: 320)
!6592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6593, size: 64)
!6593 = !DISubroutineType(types: !6594)
!6594 = !{!6, !6554, !6554}
!6595 = !DIDerivedType(tag: DW_TAG_member, name: "accept", scope: !6574, file: !6480, line: 152, baseType: !6596, size: 64, offset: 384)
!6596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6597, size: 64)
!6597 = !DISubroutineType(types: !6598)
!6598 = !{!6, !6554, !6554, !6, !304}
!6599 = !DIDerivedType(tag: DW_TAG_member, name: "getname", scope: !6574, file: !6480, line: 154, baseType: !6584, size: 64, offset: 448)
!6600 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !6574, file: !6480, line: 157, baseType: !6601, size: 64, offset: 512)
!6601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6602, size: 64)
!6602 = !DISubroutineType(types: !6603)
!6603 = !{!3585, !164, !6554, !3586}
!6604 = !DIDerivedType(tag: DW_TAG_member, name: "ioctl", scope: !6574, file: !6480, line: 159, baseType: !6605, size: 64, offset: 576)
!6605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6606, size: 64)
!6606 = !DISubroutineType(types: !6607)
!6607 = !{!6, !6554, !199, !135}
!6608 = !DIDerivedType(tag: DW_TAG_member, name: "gettstamp", scope: !6574, file: !6480, line: 165, baseType: !6609, size: 64, offset: 640)
!6609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6610, size: 64)
!6610 = !DISubroutineType(types: !6611)
!6611 = !{!6, !6554, !159, !304, !304}
!6612 = !DIDerivedType(tag: DW_TAG_member, name: "listen", scope: !6574, file: !6480, line: 167, baseType: !6613, size: 64, offset: 704)
!6613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6614, size: 64)
!6614 = !DISubroutineType(types: !6615)
!6615 = !{!6, !6554, !6}
!6616 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !6574, file: !6480, line: 168, baseType: !6613, size: 64, offset: 768)
!6617 = !DIDerivedType(tag: DW_TAG_member, name: "setsockopt", scope: !6574, file: !6480, line: 169, baseType: !6618, size: 64, offset: 832)
!6618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6619, size: 64)
!6619 = !DISubroutineType(types: !6620)
!6620 = !{!6, !6554, !6, !6, !2105, !199}
!6621 = !DIDerivedType(tag: DW_TAG_member, name: "getsockopt", scope: !6574, file: !6480, line: 172, baseType: !6622, size: 64, offset: 896)
!6622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6623, size: 64)
!6623 = !DISubroutineType(types: !6624)
!6624 = !{!6, !6554, !6, !6, !85, !540}
!6625 = !DIDerivedType(tag: DW_TAG_member, name: "show_fdinfo", scope: !6574, file: !6480, line: 174, baseType: !6626, size: 64, offset: 960)
!6626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6627, size: 64)
!6627 = !DISubroutineType(types: !6628)
!6628 = !{null, !546, !6554}
!6629 = !DIDerivedType(tag: DW_TAG_member, name: "sendmsg", scope: !6574, file: !6480, line: 175, baseType: !6630, size: 64, offset: 1024)
!6630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6631, size: 64)
!6631 = !DISubroutineType(types: !6632)
!6632 = !{!6, !6554, !2124, !132}
!6633 = !DIDerivedType(tag: DW_TAG_member, name: "recvmsg", scope: !6574, file: !6480, line: 185, baseType: !6634, size: 64, offset: 1088)
!6634 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6635, size: 64)
!6635 = !DISubroutineType(types: !6636)
!6636 = !{!6, !6554, !2124, !132, !6}
!6637 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !6574, file: !6480, line: 187, baseType: !6638, size: 64, offset: 1152)
!6638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6639, size: 64)
!6639 = !DISubroutineType(types: !6640)
!6640 = !{!6, !164, !6554, !1032}
!6641 = !DIDerivedType(tag: DW_TAG_member, name: "sendpage", scope: !6574, file: !6480, line: 189, baseType: !6642, size: 64, offset: 1216)
!6642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6643, size: 64)
!6643 = !DISubroutineType(types: !6644)
!6644 = !{!116, !6554, !605, !6, !132, !6}
!6645 = !DIDerivedType(tag: DW_TAG_member, name: "splice_read", scope: !6574, file: !6480, line: 191, baseType: !6646, size: 64, offset: 1280)
!6646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6647, size: 64)
!6647 = !DISubroutineType(types: !6648)
!6648 = !{!116, !6554, !580, !806, !132, !199}
!6649 = !DIDerivedType(tag: DW_TAG_member, name: "set_peek_off", scope: !6574, file: !6480, line: 193, baseType: !2078, size: 64, offset: 1344)
!6650 = !DIDerivedType(tag: DW_TAG_member, name: "peek_len", scope: !6574, file: !6480, line: 194, baseType: !6580, size: 64, offset: 1408)
!6651 = !DIDerivedType(tag: DW_TAG_member, name: "read_sock", scope: !6574, file: !6480, line: 199, baseType: !6652, size: 64, offset: 1472)
!6652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6653, size: 64)
!6653 = !DISubroutineType(types: !6654)
!6654 = !{!6, !2003, !6655, !6667}
!6655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6656, size: 64)
!6656 = !DIDerivedType(tag: DW_TAG_typedef, name: "read_descriptor_t", file: !166, line: 362, baseType: !6657)
!6657 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !166, line: 354, size: 256, elements: !6658)
!6658 = !{!6659, !6660, !6661, !6666}
!6659 = !DIDerivedType(tag: DW_TAG_member, name: "written", scope: !6657, file: !166, line: 355, baseType: !132, size: 64)
!6660 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !6657, file: !166, line: 356, baseType: !132, size: 64, offset: 64)
!6661 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !6657, file: !166, line: 360, baseType: !6662, size: 64, offset: 128)
!6662 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6657, file: !166, line: 357, size: 64, elements: !6663)
!6663 = !{!6664, !6665}
!6664 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !6662, file: !166, line: 358, baseType: !85, size: 64)
!6665 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6662, file: !166, line: 359, baseType: !159, size: 64)
!6666 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !6657, file: !166, line: 361, baseType: !6, size: 32, offset: 192)
!6667 = !DIDerivedType(tag: DW_TAG_typedef, name: "sk_read_actor_t", file: !6480, line: 136, baseType: !6668)
!6668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6669, size: 64)
!6669 = !DISubroutineType(types: !6670)
!6670 = !{!6, !6655, !2153, !199, !132}
!6671 = !DIDerivedType(tag: DW_TAG_member, name: "sendpage_locked", scope: !6574, file: !6480, line: 201, baseType: !2144, size: 64, offset: 1536)
!6672 = !DIDerivedType(tag: DW_TAG_member, name: "sendmsg_locked", scope: !6574, file: !6480, line: 203, baseType: !2121, size: 64, offset: 1600)
!6673 = !DIDerivedType(tag: DW_TAG_member, name: "set_rcvlowat", scope: !6574, file: !6480, line: 205, baseType: !2078, size: 64, offset: 1664)
!6674 = !DIDerivedType(tag: DW_TAG_member, name: "wq", scope: !6555, file: !6480, line: 127, baseType: !6479, size: 384, offset: 320)
!6675 = !DIDerivedType(tag: DW_TAG_member, name: "sk_user_data", scope: !2004, file: !2005, line: 500, baseType: !159, size: 64, offset: 4864)
!6676 = !DIDerivedType(tag: DW_TAG_member, name: "sk_cgrp_data", scope: !2004, file: !2005, line: 504, baseType: !6677, offset: 4928)
!6677 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sock_cgroup_data", file: !6678, line: 871, elements: !58)
!6678 = !DIFile(filename: "./include/linux/cgroup-defs.h", directory: "/home/lizy2001/genbc/linux")
!6679 = !DIDerivedType(tag: DW_TAG_member, name: "sk_memcg", scope: !2004, file: !2005, line: 505, baseType: !6680, size: 64, offset: 4928)
!6680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6681, size: 64)
!6681 = !DICompositeType(tag: DW_TAG_structure_type, name: "mem_cgroup", file: !607, line: 27, flags: DIFlagFwdDecl)
!6682 = !DIDerivedType(tag: DW_TAG_member, name: "sk_state_change", scope: !2004, file: !2005, line: 506, baseType: !2094, size: 64, offset: 4992)
!6683 = !DIDerivedType(tag: DW_TAG_member, name: "sk_data_ready", scope: !2004, file: !2005, line: 507, baseType: !2094, size: 64, offset: 5056)
!6684 = !DIDerivedType(tag: DW_TAG_member, name: "sk_write_space", scope: !2004, file: !2005, line: 508, baseType: !2094, size: 64, offset: 5120)
!6685 = !DIDerivedType(tag: DW_TAG_member, name: "sk_error_report", scope: !2004, file: !2005, line: 509, baseType: !2094, size: 64, offset: 5184)
!6686 = !DIDerivedType(tag: DW_TAG_member, name: "sk_backlog_rcv", scope: !2004, file: !2005, line: 510, baseType: !2150, size: 64, offset: 5248)
!6687 = !DIDerivedType(tag: DW_TAG_member, name: "sk_destruct", scope: !2004, file: !2005, line: 517, baseType: !2094, size: 64, offset: 5312)
!6688 = !DIDerivedType(tag: DW_TAG_member, name: "sk_reuseport_cb", scope: !2004, file: !2005, line: 518, baseType: !6689, size: 64, offset: 5376)
!6689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6690, size: 64)
!6690 = !DICompositeType(tag: DW_TAG_structure_type, name: "sock_reuseport", file: !3034, line: 38, flags: DIFlagFwdDecl)
!6691 = !DIDerivedType(tag: DW_TAG_member, name: "sk_rcu", scope: !2004, file: !2005, line: 522, baseType: !178, size: 128, align: 64, offset: 5440)
!6692 = !DIDerivedType(tag: DW_TAG_member, name: "genl_sock", scope: !1976, file: !1977, line: 103, baseType: !2003, size: 64, offset: 2176)
!6693 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_sock", scope: !1976, file: !1977, line: 105, baseType: !6694, size: 64, offset: 2240)
!6694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6695, size: 64)
!6695 = !DICompositeType(tag: DW_TAG_structure_type, name: "uevent_sock", file: !1977, line: 48, flags: DIFlagFwdDecl)
!6696 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name_head", scope: !1976, file: !1977, line: 107, baseType: !6697, size: 64, offset: 2304)
!6697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !451, size: 64)
!6698 = !DIDerivedType(tag: DW_TAG_member, name: "dev_index_head", scope: !1976, file: !1977, line: 108, baseType: !6697, size: 64, offset: 2368)
!6699 = !DIDerivedType(tag: DW_TAG_member, name: "netdev_chain", scope: !1976, file: !1977, line: 109, baseType: !6700, size: 64, offset: 2432)
!6700 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raw_notifier_head", file: !6701, line: 70, size: 64, elements: !6702)
!6701 = !DIFile(filename: "./include/linux/notifier.h", directory: "/home/lizy2001/genbc/linux")
!6702 = !{!6703}
!6703 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !6700, file: !6701, line: 71, baseType: !6704, size: 64)
!6704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6705, size: 64)
!6705 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "notifier_block", file: !6701, line: 54, size: 192, elements: !6706)
!6706 = !{!6707, !6712, !6713}
!6707 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_call", scope: !6705, file: !6701, line: 55, baseType: !6708, size: 64)
!6708 = !DIDerivedType(tag: DW_TAG_typedef, name: "notifier_fn_t", file: !6701, line: 51, baseType: !6709)
!6709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6710, size: 64)
!6710 = !DISubroutineType(types: !6711)
!6711 = !{!6, !6704, !135, !159}
!6712 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6705, file: !6701, line: 56, baseType: !6704, size: 64, offset: 64)
!6713 = !DIDerivedType(tag: DW_TAG_member, name: "priority", scope: !6705, file: !6701, line: 57, baseType: !6, size: 32, offset: 128)
!6714 = !DIDerivedType(tag: DW_TAG_member, name: "hash_mix", scope: !1976, file: !1977, line: 114, baseType: !229, size: 32, offset: 2496)
!6715 = !DIDerivedType(tag: DW_TAG_member, name: "loopback_dev", scope: !1976, file: !1977, line: 116, baseType: !2169, size: 64, offset: 2560)
!6716 = !DIDerivedType(tag: DW_TAG_member, name: "rules_ops", scope: !1976, file: !1977, line: 119, baseType: !30, size: 128, offset: 2624)
!6717 = !DIDerivedType(tag: DW_TAG_member, name: "core", scope: !1976, file: !1977, line: 121, baseType: !6718, size: 256, offset: 2752)
!6718 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_core", file: !6719, line: 8, size: 256, elements: !6720)
!6719 = !DIFile(filename: "./include/net/netns/core.h", directory: "/home/lizy2001/genbc/linux")
!6720 = !{!6721, !6722, !6723, !6724}
!6721 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_hdr", scope: !6718, file: !6719, line: 10, baseType: !1813, size: 64)
!6722 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_somaxconn", scope: !6718, file: !6719, line: 12, baseType: !6, size: 32, offset: 64)
!6723 = !DIDerivedType(tag: DW_TAG_member, name: "sock_inuse", scope: !6718, file: !6719, line: 15, baseType: !540, size: 64, offset: 128)
!6724 = !DIDerivedType(tag: DW_TAG_member, name: "prot_inuse", scope: !6718, file: !6719, line: 16, baseType: !6725, size: 64, offset: 192)
!6725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6726, size: 64)
!6726 = !DICompositeType(tag: DW_TAG_structure_type, name: "prot_inuse", file: !6719, line: 6, flags: DIFlagFwdDecl)
!6727 = !DIDerivedType(tag: DW_TAG_member, name: "mib", scope: !1976, file: !1977, line: 122, baseType: !6728, size: 832, offset: 3008)
!6728 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_mib", file: !1999, line: 7, size: 832, elements: !6729)
!6729 = !{!6730, !6736, !6737, !6745, !6753, !6754, !6762, !6767, !6768, !6769, !6770, !6771, !6777}
!6730 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_statistics", scope: !6728, file: !1999, line: 8, baseType: !6731, size: 64)
!6731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6732, size: 64)
!6732 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tcp_mib", file: !5370, line: 92, size: 1024, elements: !6733)
!6733 = !{!6734}
!6734 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !6732, file: !5370, line: 93, baseType: !6735, size: 1024)
!6735 = !DICompositeType(tag: DW_TAG_array_type, baseType: !135, size: 1024, elements: !1944)
!6736 = !DIDerivedType(tag: DW_TAG_member, name: "ip_statistics", scope: !6728, file: !1999, line: 9, baseType: !5368, size: 64, offset: 64)
!6737 = !DIDerivedType(tag: DW_TAG_member, name: "net_statistics", scope: !6728, file: !1999, line: 10, baseType: !6738, size: 64, offset: 128)
!6738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6739, size: 64)
!6739 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "linux_mib", file: !5370, line: 104, size: 7936, elements: !6740)
!6740 = !{!6741}
!6741 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !6739, file: !5370, line: 105, baseType: !6742, size: 7936)
!6742 = !DICompositeType(tag: DW_TAG_array_type, baseType: !135, size: 7936, elements: !6743)
!6743 = !{!6744}
!6744 = !DISubrange(count: 124)
!6745 = !DIDerivedType(tag: DW_TAG_member, name: "udp_statistics", scope: !6728, file: !1999, line: 11, baseType: !6746, size: 64, offset: 192)
!6746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6747, size: 64)
!6747 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "udp_mib", file: !5370, line: 98, size: 576, elements: !6748)
!6748 = !{!6749}
!6749 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !6747, file: !5370, line: 99, baseType: !6750, size: 576)
!6750 = !DICompositeType(tag: DW_TAG_array_type, baseType: !135, size: 576, elements: !6751)
!6751 = !{!6752}
!6752 = !DISubrange(count: 9)
!6753 = !DIDerivedType(tag: DW_TAG_member, name: "udplite_statistics", scope: !6728, file: !1999, line: 12, baseType: !6746, size: 64, offset: 256)
!6754 = !DIDerivedType(tag: DW_TAG_member, name: "icmp_statistics", scope: !6728, file: !1999, line: 13, baseType: !6755, size: 64, offset: 320)
!6755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6756, size: 64)
!6756 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "icmp_mib", file: !5370, line: 59, size: 1792, elements: !6757)
!6757 = !{!6758}
!6758 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !6756, file: !5370, line: 60, baseType: !6759, size: 1792)
!6759 = !DICompositeType(tag: DW_TAG_array_type, baseType: !135, size: 1792, elements: !6760)
!6760 = !{!6761}
!6761 = !DISubrange(count: 28)
!6762 = !DIDerivedType(tag: DW_TAG_member, name: "icmpmsg_statistics", scope: !6728, file: !1999, line: 14, baseType: !6763, size: 64, offset: 384)
!6763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6764, size: 64)
!6764 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "icmpmsg_mib", file: !5370, line: 64, size: 32768, elements: !6765)
!6765 = !{!6766}
!6766 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !6764, file: !5370, line: 65, baseType: !5388, size: 32768)
!6767 = !DIDerivedType(tag: DW_TAG_member, name: "proc_net_devsnmp6", scope: !6728, file: !1999, line: 17, baseType: !1997, size: 64, offset: 448)
!6768 = !DIDerivedType(tag: DW_TAG_member, name: "udp_stats_in6", scope: !6728, file: !1999, line: 18, baseType: !6746, size: 64, offset: 512)
!6769 = !DIDerivedType(tag: DW_TAG_member, name: "udplite_stats_in6", scope: !6728, file: !1999, line: 19, baseType: !6746, size: 64, offset: 576)
!6770 = !DIDerivedType(tag: DW_TAG_member, name: "ipv6_statistics", scope: !6728, file: !1999, line: 20, baseType: !5368, size: 64, offset: 640)
!6771 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_statistics", scope: !6728, file: !1999, line: 21, baseType: !6772, size: 64, offset: 704)
!6772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6773, size: 64)
!6773 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "icmpv6_mib", file: !5370, line: 71, size: 384, elements: !6774)
!6774 = !{!6775}
!6775 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !6773, file: !5370, line: 72, baseType: !6776, size: 384)
!6776 = !DICompositeType(tag: DW_TAG_array_type, baseType: !135, size: 384, elements: !1668)
!6777 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6msg_statistics", scope: !6728, file: !1999, line: 22, baseType: !6778, size: 64, offset: 768)
!6778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6779, size: 64)
!6779 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "icmpv6msg_mib", file: !5370, line: 81, size: 32768, elements: !6780)
!6780 = !{!6781}
!6781 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !6779, file: !5370, line: 82, baseType: !5388, size: 32768)
!6782 = !DIDerivedType(tag: DW_TAG_member, name: "packet", scope: !1976, file: !1977, line: 123, baseType: !6783, size: 256, offset: 3840)
!6783 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_packet", file: !6784, line: 11, size: 256, elements: !6785)
!6784 = !DIFile(filename: "./include/net/netns/packet.h", directory: "/home/lizy2001/genbc/linux")
!6785 = !{!6786, !6787}
!6786 = !DIDerivedType(tag: DW_TAG_member, name: "sklist_lock", scope: !6783, file: !6784, line: 12, baseType: !558, size: 192)
!6787 = !DIDerivedType(tag: DW_TAG_member, name: "sklist", scope: !6783, file: !6784, line: 13, baseType: !451, size: 64, offset: 192)
!6788 = !DIDerivedType(tag: DW_TAG_member, name: "unx", scope: !1976, file: !1977, line: 124, baseType: !6789, size: 128, offset: 4096)
!6789 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_unix", file: !6790, line: 9, size: 128, elements: !6791)
!6790 = !DIFile(filename: "./include/net/netns/unix.h", directory: "/home/lizy2001/genbc/linux")
!6791 = !{!6792, !6793}
!6792 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_max_dgram_qlen", scope: !6789, file: !6790, line: 10, baseType: !6, size: 32)
!6793 = !DIDerivedType(tag: DW_TAG_member, name: "ctl", scope: !6789, file: !6790, line: 11, baseType: !1813, size: 64, offset: 64)
!6794 = !DIDerivedType(tag: DW_TAG_member, name: "nexthop", scope: !1976, file: !1977, line: 125, baseType: !6795, size: 512, offset: 4224)
!6795 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_nexthop", file: !6796, line: 11, size: 512, elements: !6797)
!6796 = !DIFile(filename: "./include/net/netns/nexthop.h", directory: "/home/lizy2001/genbc/linux")
!6797 = !{!6798, !6799, !6800, !6801, !6802}
!6798 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !6795, file: !6796, line: 12, baseType: !641, size: 64)
!6799 = !DIDerivedType(tag: DW_TAG_member, name: "devhash", scope: !6795, file: !6796, line: 13, baseType: !6697, size: 64, offset: 64)
!6800 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !6795, file: !6796, line: 15, baseType: !199, size: 32, offset: 128)
!6801 = !DIDerivedType(tag: DW_TAG_member, name: "last_id_allocated", scope: !6795, file: !6796, line: 16, baseType: !229, size: 32, offset: 160)
!6802 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_chain", scope: !6795, file: !6796, line: 17, baseType: !6803, size: 320, offset: 192)
!6803 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blocking_notifier_head", file: !6701, line: 65, size: 320, elements: !6804)
!6804 = !{!6805, !6806}
!6805 = !DIDerivedType(tag: DW_TAG_member, name: "rwsem", scope: !6803, file: !6701, line: 66, baseType: !652, size: 256)
!6806 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !6803, file: !6701, line: 67, baseType: !6704, size: 64, offset: 256)
!6807 = !DIDerivedType(tag: DW_TAG_member, name: "ipv4", scope: !1976, file: !1977, line: 126, baseType: !6808, size: 5440, offset: 4736)
!6808 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_ipv4", file: !6373, line: 43, size: 5440, elements: !6809)
!6809 = !{!6810, !6811, !6812, !6813, !6814, !6815, !6818, !6819, !6832, !6833, !6834, !6835, !6836, !6837, !6839, !6840, !6842, !6843, !6972, !6973, !6974, !6975, !6976, !6977, !6978, !6985, !6986, !6987, !6988, !6989, !6990, !6991, !6992, !6993, !6994, !6995, !6996, !6997, !6998, !6999, !7000, !7001, !7002, !7003, !7004, !7005, !7006, !7007, !7008, !7009, !7010, !7011, !7012, !7013, !7014, !7015, !7016, !7017, !7018, !7019, !7020, !7021, !7022, !7023, !7024, !7025, !7026, !7027, !7028, !7029, !7030, !7031, !7032, !7033, !7034, !7035, !7036, !7037, !7038, !7039, !7040, !7041, !7042, !7043, !7044, !7045, !7046, !7047, !7048, !7049, !7050, !7051, !7052, !7053, !7054, !7055, !7056, !7057, !7061, !7064, !7065, !7066, !7067, !7068, !7069, !7070, !7071, !7072, !7073, !7074, !7075, !7081, !7082, !7083, !7084, !7101, !7102, !7103, !7104, !7105}
!6810 = !DIDerivedType(tag: DW_TAG_member, name: "forw_hdr", scope: !6808, file: !6373, line: 45, baseType: !1813, size: 64)
!6811 = !DIDerivedType(tag: DW_TAG_member, name: "frags_hdr", scope: !6808, file: !6373, line: 46, baseType: !1813, size: 64, offset: 64)
!6812 = !DIDerivedType(tag: DW_TAG_member, name: "ipv4_hdr", scope: !6808, file: !6373, line: 47, baseType: !1813, size: 64, offset: 128)
!6813 = !DIDerivedType(tag: DW_TAG_member, name: "route_hdr", scope: !6808, file: !6373, line: 48, baseType: !1813, size: 64, offset: 192)
!6814 = !DIDerivedType(tag: DW_TAG_member, name: "xfrm4_hdr", scope: !6808, file: !6373, line: 49, baseType: !1813, size: 64, offset: 256)
!6815 = !DIDerivedType(tag: DW_TAG_member, name: "devconf_all", scope: !6808, file: !6373, line: 51, baseType: !6816, size: 64, offset: 320)
!6816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6817, size: 64)
!6817 = !DICompositeType(tag: DW_TAG_structure_type, name: "ipv4_devconf", file: !6373, line: 16, flags: DIFlagFwdDecl)
!6818 = !DIDerivedType(tag: DW_TAG_member, name: "devconf_dflt", scope: !6808, file: !6373, line: 52, baseType: !6816, size: 64, offset: 384)
!6819 = !DIDerivedType(tag: DW_TAG_member, name: "ra_chain", scope: !6808, file: !6373, line: 53, baseType: !6820, size: 64, offset: 448)
!6820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6821, size: 64)
!6821 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ip_ra_chain", file: !6822, line: 122, size: 320, elements: !6823)
!6822 = !DIFile(filename: "./include/net/ip.h", directory: "/home/lizy2001/genbc/linux")
!6823 = !{!6824, !6825, !6826, !6831}
!6824 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6821, file: !6822, line: 123, baseType: !6820, size: 64)
!6825 = !DIDerivedType(tag: DW_TAG_member, name: "sk", scope: !6821, file: !6822, line: 124, baseType: !2003, size: 64, offset: 64)
!6826 = !DIDerivedType(tag: DW_TAG_member, scope: !6821, file: !6822, line: 125, baseType: !6827, size: 64, offset: 128)
!6827 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6821, file: !6822, line: 125, size: 64, elements: !6828)
!6828 = !{!6829, !6830}
!6829 = !DIDerivedType(tag: DW_TAG_member, name: "destructor", scope: !6827, file: !6822, line: 126, baseType: !2094, size: 64)
!6830 = !DIDerivedType(tag: DW_TAG_member, name: "saved_sk", scope: !6827, file: !6822, line: 127, baseType: !2003, size: 64)
!6831 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !6821, file: !6822, line: 129, baseType: !178, size: 128, align: 64, offset: 192)
!6832 = !DIDerivedType(tag: DW_TAG_member, name: "ra_mutex", scope: !6808, file: !6373, line: 54, baseType: !558, size: 192, offset: 512)
!6833 = !DIDerivedType(tag: DW_TAG_member, name: "fib_has_custom_local_routes", scope: !6808, file: !6373, line: 62, baseType: !304, size: 8, offset: 704)
!6834 = !DIDerivedType(tag: DW_TAG_member, name: "fib_table_hash", scope: !6808, file: !6373, line: 66, baseType: !6697, size: 64, offset: 768)
!6835 = !DIDerivedType(tag: DW_TAG_member, name: "fib_offload_disabled", scope: !6808, file: !6373, line: 67, baseType: !304, size: 8, offset: 832)
!6836 = !DIDerivedType(tag: DW_TAG_member, name: "fibnl", scope: !6808, file: !6373, line: 68, baseType: !2003, size: 64, offset: 896)
!6837 = !DIDerivedType(tag: DW_TAG_member, name: "icmp_sk", scope: !6808, file: !6373, line: 70, baseType: !6838, size: 64, offset: 960)
!6838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2003, size: 64)
!6839 = !DIDerivedType(tag: DW_TAG_member, name: "mc_autojoin_sk", scope: !6808, file: !6373, line: 71, baseType: !2003, size: 64, offset: 1024)
!6840 = !DIDerivedType(tag: DW_TAG_member, name: "peers", scope: !6808, file: !6373, line: 73, baseType: !6841, size: 64, offset: 1088)
!6841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4972, size: 64)
!6842 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_sk", scope: !6808, file: !6373, line: 74, baseType: !6838, size: 64, offset: 1152)
!6843 = !DIDerivedType(tag: DW_TAG_member, name: "fqdir", scope: !6808, file: !6373, line: 75, baseType: !6844, size: 64, offset: 1216)
!6844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6845, size: 64)
!6845 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fqdir", file: !6846, line: 9, size: 1728, elements: !6847)
!6846 = !DIFile(filename: "./include/net/inet_frag.h", directory: "/home/lizy2001/genbc/linux")
!6847 = !{!6848, !6849, !6850, !6851, !6852, !6967, !6968, !6969, !6970, !6971}
!6848 = !DIDerivedType(tag: DW_TAG_member, name: "high_thresh", scope: !6845, file: !6846, line: 11, baseType: !120, size: 64)
!6849 = !DIDerivedType(tag: DW_TAG_member, name: "low_thresh", scope: !6845, file: !6846, line: 12, baseType: !120, size: 64, offset: 64)
!6850 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !6845, file: !6846, line: 13, baseType: !6, size: 32, offset: 128)
!6851 = !DIDerivedType(tag: DW_TAG_member, name: "max_dist", scope: !6845, file: !6846, line: 14, baseType: !6, size: 32, offset: 160)
!6852 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !6845, file: !6846, line: 15, baseType: !6853, size: 64, offset: 192)
!6853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6854, size: 64)
!6854 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inet_frags", file: !6846, line: 98, size: 960, elements: !6855)
!6855 = !{!6856, !6857, !6903, !6907, !6908, !6909, !6910, !6965, !6966}
!6856 = !DIDerivedType(tag: DW_TAG_member, name: "qsize", scope: !6854, file: !6846, line: 99, baseType: !199, size: 32)
!6857 = !DIDerivedType(tag: DW_TAG_member, name: "constructor", scope: !6854, file: !6846, line: 101, baseType: !6858, size: 64, offset: 64)
!6858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6859, size: 64)
!6859 = !DISubroutineType(types: !6860)
!6860 = !{null, !6861, !2454}
!6861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6862, size: 64)
!6862 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inet_frag_queue", file: !6846, line: 77, size: 1408, elements: !6863)
!6863 = !{!6864, !6870, !6890, !6891, !6892, !6893, !6894, !6895, !6896, !6897, !6898, !6899, !6900, !6901, !6902}
!6864 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !6862, file: !6846, line: 78, baseType: !6865, size: 64)
!6865 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rhash_head", file: !6866, line: 17, size: 64, elements: !6867)
!6866 = !DIFile(filename: "./include/linux/rhashtable-types.h", directory: "/home/lizy2001/genbc/linux")
!6867 = !{!6868}
!6868 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6865, file: !6866, line: 18, baseType: !6869, size: 64)
!6869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6865, size: 64)
!6870 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !6862, file: !6846, line: 82, baseType: !6871, size: 352, offset: 64)
!6871 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6862, file: !6846, line: 79, size: 352, elements: !6872)
!6872 = !{!6873, !6882}
!6873 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !6871, file: !6846, line: 80, baseType: !6874, size: 160)
!6874 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "frag_v4_compare_key", file: !6846, line: 41, size: 160, elements: !6875)
!6875 = !{!6876, !6877, !6878, !6879, !6880, !6881}
!6876 = !DIDerivedType(tag: DW_TAG_member, name: "saddr", scope: !6874, file: !6846, line: 42, baseType: !2019, size: 32)
!6877 = !DIDerivedType(tag: DW_TAG_member, name: "daddr", scope: !6874, file: !6846, line: 43, baseType: !2019, size: 32, offset: 32)
!6878 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !6874, file: !6846, line: 44, baseType: !229, size: 32, offset: 64)
!6879 = !DIDerivedType(tag: DW_TAG_member, name: "vif", scope: !6874, file: !6846, line: 45, baseType: !229, size: 32, offset: 96)
!6880 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !6874, file: !6846, line: 46, baseType: !2037, size: 16, offset: 128)
!6881 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !6874, file: !6846, line: 47, baseType: !744, size: 16, offset: 144)
!6882 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !6871, file: !6846, line: 81, baseType: !6883, size: 352)
!6883 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "frag_v6_compare_key", file: !6846, line: 50, size: 352, elements: !6884)
!6884 = !{!6885, !6886, !6887, !6888, !6889}
!6885 = !DIDerivedType(tag: DW_TAG_member, name: "saddr", scope: !6883, file: !6846, line: 51, baseType: !4883, size: 128)
!6886 = !DIDerivedType(tag: DW_TAG_member, name: "daddr", scope: !6883, file: !6846, line: 52, baseType: !4883, size: 128, offset: 128)
!6887 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !6883, file: !6846, line: 53, baseType: !229, size: 32, offset: 256)
!6888 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !6883, file: !6846, line: 54, baseType: !2019, size: 32, offset: 288)
!6889 = !DIDerivedType(tag: DW_TAG_member, name: "iif", scope: !6883, file: !6846, line: 55, baseType: !229, size: 32, offset: 320)
!6890 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !6862, file: !6846, line: 83, baseType: !2566, size: 320, offset: 448)
!6891 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6862, file: !6846, line: 84, baseType: !44, offset: 768)
!6892 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !6862, file: !6846, line: 85, baseType: !880, size: 32, offset: 768)
!6893 = !DIDerivedType(tag: DW_TAG_member, name: "rb_fragments", scope: !6862, file: !6846, line: 86, baseType: !641, size: 64, offset: 832)
!6894 = !DIDerivedType(tag: DW_TAG_member, name: "fragments_tail", scope: !6862, file: !6846, line: 87, baseType: !2153, size: 64, offset: 896)
!6895 = !DIDerivedType(tag: DW_TAG_member, name: "last_run_head", scope: !6862, file: !6846, line: 88, baseType: !2153, size: 64, offset: 960)
!6896 = !DIDerivedType(tag: DW_TAG_member, name: "stamp", scope: !6862, file: !6846, line: 89, baseType: !1347, size: 64, offset: 1024)
!6897 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !6862, file: !6846, line: 90, baseType: !6, size: 32, offset: 1088)
!6898 = !DIDerivedType(tag: DW_TAG_member, name: "meat", scope: !6862, file: !6846, line: 91, baseType: !6, size: 32, offset: 1120)
!6899 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6862, file: !6846, line: 92, baseType: !1404, size: 8, offset: 1152)
!6900 = !DIDerivedType(tag: DW_TAG_member, name: "max_size", scope: !6862, file: !6846, line: 93, baseType: !744, size: 16, offset: 1168)
!6901 = !DIDerivedType(tag: DW_TAG_member, name: "fqdir", scope: !6862, file: !6846, line: 94, baseType: !6844, size: 64, offset: 1216)
!6902 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !6862, file: !6846, line: 95, baseType: !178, size: 128, align: 64, offset: 1280)
!6903 = !DIDerivedType(tag: DW_TAG_member, name: "destructor", scope: !6854, file: !6846, line: 103, baseType: !6904, size: 64, offset: 128)
!6904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6905, size: 64)
!6905 = !DISubroutineType(types: !6906)
!6906 = !{null, !6861}
!6907 = !DIDerivedType(tag: DW_TAG_member, name: "frag_expire", scope: !6854, file: !6846, line: 104, baseType: !2572, size: 64, offset: 192)
!6908 = !DIDerivedType(tag: DW_TAG_member, name: "frags_cachep", scope: !6854, file: !6846, line: 105, baseType: !985, size: 64, offset: 256)
!6909 = !DIDerivedType(tag: DW_TAG_member, name: "frags_cache_name", scope: !6854, file: !6846, line: 106, baseType: !26, size: 64, offset: 320)
!6910 = !DIDerivedType(tag: DW_TAG_member, name: "rhash_params", scope: !6854, file: !6846, line: 107, baseType: !6911, size: 320, offset: 384)
!6911 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rhashtable_params", file: !6866, line: 56, size: 320, elements: !6912)
!6912 = !{!6913, !6914, !6915, !6916, !6917, !6918, !6919, !6920, !6925, !6927}
!6913 = !DIDerivedType(tag: DW_TAG_member, name: "nelem_hint", scope: !6911, file: !6866, line: 57, baseType: !744, size: 16)
!6914 = !DIDerivedType(tag: DW_TAG_member, name: "key_len", scope: !6911, file: !6866, line: 58, baseType: !744, size: 16, offset: 16)
!6915 = !DIDerivedType(tag: DW_TAG_member, name: "key_offset", scope: !6911, file: !6866, line: 59, baseType: !744, size: 16, offset: 32)
!6916 = !DIDerivedType(tag: DW_TAG_member, name: "head_offset", scope: !6911, file: !6866, line: 60, baseType: !744, size: 16, offset: 48)
!6917 = !DIDerivedType(tag: DW_TAG_member, name: "max_size", scope: !6911, file: !6866, line: 61, baseType: !199, size: 32, offset: 64)
!6918 = !DIDerivedType(tag: DW_TAG_member, name: "min_size", scope: !6911, file: !6866, line: 62, baseType: !744, size: 16, offset: 96)
!6919 = !DIDerivedType(tag: DW_TAG_member, name: "automatic_shrinking", scope: !6911, file: !6866, line: 63, baseType: !304, size: 8, offset: 112)
!6920 = !DIDerivedType(tag: DW_TAG_member, name: "hashfn", scope: !6911, file: !6866, line: 64, baseType: !6921, size: 64, offset: 128)
!6921 = !DIDerivedType(tag: DW_TAG_typedef, name: "rht_hashfn_t", file: !6866, line: 38, baseType: !6922)
!6922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6923, size: 64)
!6923 = !DISubroutineType(types: !6924)
!6924 = !{!229, !2454, !229, !229}
!6925 = !DIDerivedType(tag: DW_TAG_member, name: "obj_hashfn", scope: !6911, file: !6866, line: 65, baseType: !6926, size: 64, offset: 192)
!6926 = !DIDerivedType(tag: DW_TAG_typedef, name: "rht_obj_hashfn_t", file: !6866, line: 39, baseType: !6922)
!6927 = !DIDerivedType(tag: DW_TAG_member, name: "obj_cmpfn", scope: !6911, file: !6866, line: 66, baseType: !6928, size: 64, offset: 256)
!6928 = !DIDerivedType(tag: DW_TAG_typedef, name: "rht_obj_cmpfn_t", file: !6866, line: 40, baseType: !6929)
!6929 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6930, size: 64)
!6930 = !DISubroutineType(types: !6931)
!6931 = !{!6, !6932, !2454}
!6932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6933, size: 64)
!6933 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rhashtable_compare_arg", file: !6866, line: 33, size: 128, elements: !6934)
!6934 = !{!6935, !6964}
!6935 = !DIDerivedType(tag: DW_TAG_member, name: "ht", scope: !6933, file: !6866, line: 34, baseType: !6936, size: 64)
!6936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6937, size: 64)
!6937 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rhashtable", file: !6866, line: 81, size: 1024, elements: !6938)
!6938 = !{!6939, !6956, !6957, !6958, !6959, !6960, !6961, !6962, !6963}
!6939 = !DIDerivedType(tag: DW_TAG_member, name: "tbl", scope: !6937, file: !6866, line: 82, baseType: !6940, size: 64)
!6940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6941, size: 64)
!6941 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bucket_table", file: !6942, line: 76, size: 448, elements: !6943)
!6942 = !DIFile(filename: "./include/linux/rhashtable.h", directory: "/home/lizy2001/genbc/linux")
!6943 = !{!6944, !6945, !6946, !6947, !6948, !6949, !6950, !6952}
!6944 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6941, file: !6942, line: 77, baseType: !199, size: 32)
!6945 = !DIDerivedType(tag: DW_TAG_member, name: "nest", scope: !6941, file: !6942, line: 78, baseType: !199, size: 32, offset: 32)
!6946 = !DIDerivedType(tag: DW_TAG_member, name: "hash_rnd", scope: !6941, file: !6942, line: 79, baseType: !229, size: 32, offset: 64)
!6947 = !DIDerivedType(tag: DW_TAG_member, name: "walkers", scope: !6941, file: !6942, line: 80, baseType: !30, size: 128, offset: 128)
!6948 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !6941, file: !6942, line: 81, baseType: !178, size: 128, align: 64, offset: 256)
!6949 = !DIDerivedType(tag: DW_TAG_member, name: "future_tbl", scope: !6941, file: !6942, line: 83, baseType: !6940, size: 64, offset: 384)
!6950 = !DIDerivedType(tag: DW_TAG_member, name: "dep_map", scope: !6941, file: !6942, line: 85, baseType: !6951, offset: 448)
!6951 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lockdep_map", file: !462, line: 192, elements: !58)
!6952 = !DIDerivedType(tag: DW_TAG_member, name: "buckets", scope: !6941, file: !6942, line: 87, baseType: !6953, offset: 448)
!6953 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6954, elements: !2189)
!6954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6955, size: 64)
!6955 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rhash_lock_head", file: !6942, line: 47, elements: !58)
!6956 = !DIDerivedType(tag: DW_TAG_member, name: "key_len", scope: !6937, file: !6866, line: 83, baseType: !199, size: 32, offset: 64)
!6957 = !DIDerivedType(tag: DW_TAG_member, name: "max_elems", scope: !6937, file: !6866, line: 84, baseType: !199, size: 32, offset: 96)
!6958 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !6937, file: !6866, line: 85, baseType: !6911, size: 320, offset: 128)
!6959 = !DIDerivedType(tag: DW_TAG_member, name: "rhlist", scope: !6937, file: !6866, line: 86, baseType: !304, size: 8, offset: 448)
!6960 = !DIDerivedType(tag: DW_TAG_member, name: "run_work", scope: !6937, file: !6866, line: 87, baseType: !1728, size: 256, offset: 512)
!6961 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !6937, file: !6866, line: 88, baseType: !558, size: 192, offset: 768)
!6962 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6937, file: !6866, line: 89, baseType: !44, offset: 960)
!6963 = !DIDerivedType(tag: DW_TAG_member, name: "nelems", scope: !6937, file: !6866, line: 90, baseType: !632, size: 32, offset: 960)
!6964 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !6933, file: !6866, line: 35, baseType: !2454, size: 64, offset: 64)
!6965 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !6854, file: !6846, line: 108, baseType: !880, size: 32, offset: 704)
!6966 = !DIDerivedType(tag: DW_TAG_member, name: "completion", scope: !6854, file: !6846, line: 109, baseType: !1789, size: 192, offset: 768)
!6967 = !DIDerivedType(tag: DW_TAG_member, name: "net", scope: !6845, file: !6846, line: 16, baseType: !1975, size: 64, offset: 256)
!6968 = !DIDerivedType(tag: DW_TAG_member, name: "dead", scope: !6845, file: !6846, line: 17, baseType: !304, size: 8, offset: 320)
!6969 = !DIDerivedType(tag: DW_TAG_member, name: "rhashtable", scope: !6845, file: !6846, line: 19, baseType: !6937, size: 1024, offset: 384)
!6970 = !DIDerivedType(tag: DW_TAG_member, name: "mem", scope: !6845, file: !6846, line: 22, baseType: !562, size: 64, offset: 1408)
!6971 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_work", scope: !6845, file: !6846, line: 23, baseType: !1728, size: 256, offset: 1472)
!6972 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_echo_ignore_all", scope: !6808, file: !6373, line: 87, baseType: !6, size: 32, offset: 1280)
!6973 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_echo_ignore_broadcasts", scope: !6808, file: !6373, line: 88, baseType: !6, size: 32, offset: 1312)
!6974 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_ignore_bogus_error_responses", scope: !6808, file: !6373, line: 89, baseType: !6, size: 32, offset: 1344)
!6975 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_ratelimit", scope: !6808, file: !6373, line: 90, baseType: !6, size: 32, offset: 1376)
!6976 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_ratemask", scope: !6808, file: !6373, line: 91, baseType: !6, size: 32, offset: 1408)
!6977 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_errors_use_inbound_ifaddr", scope: !6808, file: !6373, line: 92, baseType: !6, size: 32, offset: 1440)
!6978 = !DIDerivedType(tag: DW_TAG_member, name: "ip_local_ports", scope: !6808, file: !6373, line: 94, baseType: !6979, size: 128, offset: 1472)
!6979 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "local_ports", file: !6373, line: 21, size: 128, elements: !6980)
!6980 = !{!6981, !6982, !6984}
!6981 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6979, file: !6373, line: 22, baseType: !2638, size: 32)
!6982 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !6979, file: !6373, line: 23, baseType: !6983, size: 64, offset: 32)
!6983 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6, size: 64, elements: !1911)
!6984 = !DIDerivedType(tag: DW_TAG_member, name: "warned", scope: !6979, file: !6373, line: 24, baseType: !304, size: 8, offset: 96)
!6985 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_ecn", scope: !6808, file: !6373, line: 96, baseType: !6, size: 32, offset: 1600)
!6986 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_ecn_fallback", scope: !6808, file: !6373, line: 97, baseType: !6, size: 32, offset: 1632)
!6987 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_default_ttl", scope: !6808, file: !6373, line: 99, baseType: !6, size: 32, offset: 1664)
!6988 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_no_pmtu_disc", scope: !6808, file: !6373, line: 100, baseType: !6, size: 32, offset: 1696)
!6989 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_fwd_use_pmtu", scope: !6808, file: !6373, line: 101, baseType: !6, size: 32, offset: 1728)
!6990 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_fwd_update_priority", scope: !6808, file: !6373, line: 102, baseType: !6, size: 32, offset: 1760)
!6991 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_nonlocal_bind", scope: !6808, file: !6373, line: 103, baseType: !6, size: 32, offset: 1792)
!6992 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_autobind_reuse", scope: !6808, file: !6373, line: 104, baseType: !6, size: 32, offset: 1824)
!6993 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_dynaddr", scope: !6808, file: !6373, line: 106, baseType: !6, size: 32, offset: 1856)
!6994 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_early_demux", scope: !6808, file: !6373, line: 107, baseType: !6, size: 32, offset: 1888)
!6995 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_early_demux", scope: !6808, file: !6373, line: 111, baseType: !6, size: 32, offset: 1920)
!6996 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_udp_early_demux", scope: !6808, file: !6373, line: 112, baseType: !6, size: 32, offset: 1952)
!6997 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_nexthop_compat_mode", scope: !6808, file: !6373, line: 114, baseType: !6, size: 32, offset: 1984)
!6998 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_fwmark_reflect", scope: !6808, file: !6373, line: 116, baseType: !6, size: 32, offset: 2016)
!6999 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_fwmark_accept", scope: !6808, file: !6373, line: 117, baseType: !6, size: 32, offset: 2048)
!7000 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_mtu_probing", scope: !6808, file: !6373, line: 121, baseType: !6, size: 32, offset: 2080)
!7001 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_mtu_probe_floor", scope: !6808, file: !6373, line: 122, baseType: !6, size: 32, offset: 2112)
!7002 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_base_mss", scope: !6808, file: !6373, line: 123, baseType: !6, size: 32, offset: 2144)
!7003 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_min_snd_mss", scope: !6808, file: !6373, line: 124, baseType: !6, size: 32, offset: 2176)
!7004 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_probe_threshold", scope: !6808, file: !6373, line: 125, baseType: !6, size: 32, offset: 2208)
!7005 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_probe_interval", scope: !6808, file: !6373, line: 126, baseType: !229, size: 32, offset: 2240)
!7006 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_keepalive_time", scope: !6808, file: !6373, line: 128, baseType: !6, size: 32, offset: 2272)
!7007 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_keepalive_probes", scope: !6808, file: !6373, line: 129, baseType: !6, size: 32, offset: 2304)
!7008 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_keepalive_intvl", scope: !6808, file: !6373, line: 130, baseType: !6, size: 32, offset: 2336)
!7009 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_syn_retries", scope: !6808, file: !6373, line: 132, baseType: !6, size: 32, offset: 2368)
!7010 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_synack_retries", scope: !6808, file: !6373, line: 133, baseType: !6, size: 32, offset: 2400)
!7011 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_syncookies", scope: !6808, file: !6373, line: 134, baseType: !6, size: 32, offset: 2432)
!7012 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_reordering", scope: !6808, file: !6373, line: 135, baseType: !6, size: 32, offset: 2464)
!7013 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_retries1", scope: !6808, file: !6373, line: 136, baseType: !6, size: 32, offset: 2496)
!7014 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_retries2", scope: !6808, file: !6373, line: 137, baseType: !6, size: 32, offset: 2528)
!7015 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_orphan_retries", scope: !6808, file: !6373, line: 138, baseType: !6, size: 32, offset: 2560)
!7016 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_fin_timeout", scope: !6808, file: !6373, line: 139, baseType: !6, size: 32, offset: 2592)
!7017 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_notsent_lowat", scope: !6808, file: !6373, line: 140, baseType: !199, size: 32, offset: 2624)
!7018 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_tw_reuse", scope: !6808, file: !6373, line: 141, baseType: !6, size: 32, offset: 2656)
!7019 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_sack", scope: !6808, file: !6373, line: 142, baseType: !6, size: 32, offset: 2688)
!7020 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_window_scaling", scope: !6808, file: !6373, line: 143, baseType: !6, size: 32, offset: 2720)
!7021 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_timestamps", scope: !6808, file: !6373, line: 144, baseType: !6, size: 32, offset: 2752)
!7022 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_early_retrans", scope: !6808, file: !6373, line: 145, baseType: !6, size: 32, offset: 2784)
!7023 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_recovery", scope: !6808, file: !6373, line: 146, baseType: !6, size: 32, offset: 2816)
!7024 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_thin_linear_timeouts", scope: !6808, file: !6373, line: 147, baseType: !6, size: 32, offset: 2848)
!7025 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_slow_start_after_idle", scope: !6808, file: !6373, line: 148, baseType: !6, size: 32, offset: 2880)
!7026 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_retrans_collapse", scope: !6808, file: !6373, line: 149, baseType: !6, size: 32, offset: 2912)
!7027 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_stdurg", scope: !6808, file: !6373, line: 150, baseType: !6, size: 32, offset: 2944)
!7028 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_rfc1337", scope: !6808, file: !6373, line: 151, baseType: !6, size: 32, offset: 2976)
!7029 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_abort_on_overflow", scope: !6808, file: !6373, line: 152, baseType: !6, size: 32, offset: 3008)
!7030 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_fack", scope: !6808, file: !6373, line: 153, baseType: !6, size: 32, offset: 3040)
!7031 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_max_reordering", scope: !6808, file: !6373, line: 154, baseType: !6, size: 32, offset: 3072)
!7032 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_dsack", scope: !6808, file: !6373, line: 155, baseType: !6, size: 32, offset: 3104)
!7033 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_app_win", scope: !6808, file: !6373, line: 156, baseType: !6, size: 32, offset: 3136)
!7034 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_adv_win_scale", scope: !6808, file: !6373, line: 157, baseType: !6, size: 32, offset: 3168)
!7035 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_frto", scope: !6808, file: !6373, line: 158, baseType: !6, size: 32, offset: 3200)
!7036 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_nometrics_save", scope: !6808, file: !6373, line: 159, baseType: !6, size: 32, offset: 3232)
!7037 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_no_ssthresh_metrics_save", scope: !6808, file: !6373, line: 160, baseType: !6, size: 32, offset: 3264)
!7038 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_moderate_rcvbuf", scope: !6808, file: !6373, line: 161, baseType: !6, size: 32, offset: 3296)
!7039 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_tso_win_divisor", scope: !6808, file: !6373, line: 162, baseType: !6, size: 32, offset: 3328)
!7040 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_workaround_signed_windows", scope: !6808, file: !6373, line: 163, baseType: !6, size: 32, offset: 3360)
!7041 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_limit_output_bytes", scope: !6808, file: !6373, line: 164, baseType: !6, size: 32, offset: 3392)
!7042 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_challenge_ack_limit", scope: !6808, file: !6373, line: 165, baseType: !6, size: 32, offset: 3424)
!7043 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_min_tso_segs", scope: !6808, file: !6373, line: 166, baseType: !6, size: 32, offset: 3456)
!7044 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_min_rtt_wlen", scope: !6808, file: !6373, line: 167, baseType: !6, size: 32, offset: 3488)
!7045 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_autocorking", scope: !6808, file: !6373, line: 168, baseType: !6, size: 32, offset: 3520)
!7046 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_invalid_ratelimit", scope: !6808, file: !6373, line: 169, baseType: !6, size: 32, offset: 3552)
!7047 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_pacing_ss_ratio", scope: !6808, file: !6373, line: 170, baseType: !6, size: 32, offset: 3584)
!7048 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_pacing_ca_ratio", scope: !6808, file: !6373, line: 171, baseType: !6, size: 32, offset: 3616)
!7049 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_wmem", scope: !6808, file: !6373, line: 172, baseType: !3211, size: 96, offset: 3648)
!7050 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_rmem", scope: !6808, file: !6373, line: 173, baseType: !3211, size: 96, offset: 3744)
!7051 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_comp_sack_nr", scope: !6808, file: !6373, line: 174, baseType: !6, size: 32, offset: 3840)
!7052 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_comp_sack_delay_ns", scope: !6808, file: !6373, line: 175, baseType: !135, size: 64, offset: 3904)
!7053 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_comp_sack_slack_ns", scope: !6808, file: !6373, line: 176, baseType: !135, size: 64, offset: 3968)
!7054 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_death_row", scope: !6808, file: !6373, line: 177, baseType: !6410, size: 192, offset: 4032)
!7055 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_max_syn_backlog", scope: !6808, file: !6373, line: 178, baseType: !6, size: 32, offset: 4224)
!7056 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_fastopen", scope: !6808, file: !6373, line: 179, baseType: !6, size: 32, offset: 4256)
!7057 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_congestion_control", scope: !6808, file: !6373, line: 180, baseType: !7058, size: 64, offset: 4288)
!7058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7059, size: 64)
!7059 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7060)
!7060 = !DICompositeType(tag: DW_TAG_structure_type, name: "tcp_congestion_ops", file: !6373, line: 180, flags: DIFlagFwdDecl)
!7061 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_fastopen_ctx", scope: !6808, file: !6373, line: 181, baseType: !7062, size: 64, offset: 4352)
!7062 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7063, size: 64)
!7063 = !DICompositeType(tag: DW_TAG_structure_type, name: "tcp_fastopen_context", file: !6373, line: 41, flags: DIFlagFwdDecl)
!7064 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_fastopen_ctx_lock", scope: !6808, file: !6373, line: 182, baseType: !44, offset: 4416)
!7065 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_fastopen_blackhole_timeout", scope: !6808, file: !6373, line: 183, baseType: !199, size: 32, offset: 4416)
!7066 = !DIDerivedType(tag: DW_TAG_member, name: "tfo_active_disable_times", scope: !6808, file: !6373, line: 184, baseType: !632, size: 32, offset: 4448)
!7067 = !DIDerivedType(tag: DW_TAG_member, name: "tfo_active_disable_stamp", scope: !6808, file: !6373, line: 185, baseType: !135, size: 64, offset: 4480)
!7068 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_reflect_tos", scope: !6808, file: !6373, line: 186, baseType: !6, size: 32, offset: 4544)
!7069 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_udp_wmem_min", scope: !6808, file: !6373, line: 188, baseType: !6, size: 32, offset: 4576)
!7070 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_udp_rmem_min", scope: !6808, file: !6373, line: 189, baseType: !6, size: 32, offset: 4608)
!7071 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_igmp_max_memberships", scope: !6808, file: !6373, line: 195, baseType: !6, size: 32, offset: 4640)
!7072 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_igmp_max_msf", scope: !6808, file: !6373, line: 196, baseType: !6, size: 32, offset: 4672)
!7073 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_igmp_llm_reports", scope: !6808, file: !6373, line: 197, baseType: !6, size: 32, offset: 4704)
!7074 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_igmp_qrv", scope: !6808, file: !6373, line: 198, baseType: !6, size: 32, offset: 4736)
!7075 = !DIDerivedType(tag: DW_TAG_member, name: "ping_group_range", scope: !6808, file: !6373, line: 200, baseType: !7076, size: 96, offset: 4768)
!7076 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ping_group_range", file: !6373, line: 27, size: 96, elements: !7077)
!7077 = !{!7078, !7079}
!7078 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !7076, file: !6373, line: 28, baseType: !2638, size: 32)
!7079 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !7076, file: !6373, line: 29, baseType: !7080, size: 64, offset: 32)
!7080 = !DICompositeType(tag: DW_TAG_array_type, baseType: !257, size: 64, elements: !1911)
!7081 = !DIDerivedType(tag: DW_TAG_member, name: "dev_addr_genid", scope: !6808, file: !6373, line: 202, baseType: !632, size: 32, offset: 4864)
!7082 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_local_reserved_ports", scope: !6808, file: !6373, line: 205, baseType: !5582, size: 64, offset: 4928)
!7083 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_prot_sock", scope: !6808, file: !6373, line: 206, baseType: !6, size: 32, offset: 4992)
!7084 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_ops", scope: !6808, file: !6373, line: 222, baseType: !7085, size: 64, offset: 5056)
!7085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7086, size: 64)
!7086 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fib_notifier_ops", file: !7087, line: 28, size: 512, elements: !7088)
!7087 = !DIFile(filename: "./include/net/fib_notifier.h", directory: "/home/lizy2001/genbc/linux")
!7088 = !{!7089, !7090, !7091, !7095, !7099, !7100}
!7089 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !7086, file: !7087, line: 29, baseType: !6, size: 32)
!7090 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !7086, file: !7087, line: 30, baseType: !30, size: 128, offset: 64)
!7091 = !DIDerivedType(tag: DW_TAG_member, name: "fib_seq_read", scope: !7086, file: !7087, line: 31, baseType: !7092, size: 64, offset: 192)
!7092 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7093, size: 64)
!7093 = !DISubroutineType(types: !7094)
!7094 = !{!199, !1975}
!7095 = !DIDerivedType(tag: DW_TAG_member, name: "fib_dump", scope: !7086, file: !7087, line: 32, baseType: !7096, size: 64, offset: 256)
!7096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7097, size: 64)
!7097 = !DISubroutineType(types: !7098)
!7098 = !{!6, !1975, !6704, !2496}
!7099 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !7086, file: !7087, line: 34, baseType: !446, size: 64, offset: 320)
!7100 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !7086, file: !7087, line: 35, baseType: !178, size: 128, align: 64, offset: 384)
!7101 = !DIDerivedType(tag: DW_TAG_member, name: "fib_seq", scope: !6808, file: !6373, line: 223, baseType: !199, size: 32, offset: 5120)
!7102 = !DIDerivedType(tag: DW_TAG_member, name: "ipmr_notifier_ops", scope: !6808, file: !6373, line: 225, baseType: !7085, size: 64, offset: 5184)
!7103 = !DIDerivedType(tag: DW_TAG_member, name: "ipmr_seq", scope: !6808, file: !6373, line: 226, baseType: !199, size: 32, offset: 5248)
!7104 = !DIDerivedType(tag: DW_TAG_member, name: "rt_genid", scope: !6808, file: !6373, line: 228, baseType: !632, size: 32, offset: 5280)
!7105 = !DIDerivedType(tag: DW_TAG_member, name: "ip_id_key", scope: !6808, file: !6373, line: 229, baseType: !7106, size: 128, offset: 5312)
!7106 = !DIDerivedType(tag: DW_TAG_typedef, name: "siphash_key_t", file: !7107, line: 22, baseType: !7108)
!7107 = !DIFile(filename: "./include/linux/siphash.h", directory: "/home/lizy2001/genbc/linux")
!7108 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !7107, line: 20, size: 128, elements: !7109)
!7109 = !{!7110}
!7110 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !7108, file: !7107, line: 21, baseType: !7111, size: 128)
!7111 = !DICompositeType(tag: DW_TAG_array_type, baseType: !235, size: 128, elements: !1911)
!7112 = !DIDerivedType(tag: DW_TAG_member, name: "ipv6", scope: !1976, file: !1977, line: 128, baseType: !7113, size: 4608, offset: 10176)
!7113 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_ipv6", file: !7114, line: 56, size: 4608, elements: !7115)
!7114 = !DIFile(filename: "./include/net/netns/ipv6.h", directory: "/home/lizy2001/genbc/linux")
!7115 = !{!7116, !7156, !7158, !7159, !7160, !7161, !7162, !7163, !7174, !7175, !7176, !7177, !7178, !7179, !7180, !7181, !7182, !7183, !7184, !7185, !7186, !7187, !7188, !7189, !7190, !7193, !7194, !7195, !7196}
!7116 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl", scope: !7113, file: !7114, line: 57, baseType: !7117, size: 1600)
!7117 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_sysctl_ipv6", file: !7114, line: 15, size: 1600, elements: !7118)
!7118 = !{!7119, !7120, !7121, !7122, !7123, !7124, !7125, !7126, !7127, !7128, !7129, !7130, !7131, !7132, !7133, !7134, !7135, !7136, !7137, !7138, !7139, !7140, !7142, !7143, !7144, !7145, !7146, !7147, !7148, !7149, !7150, !7151, !7152, !7153, !7154, !7155}
!7119 = !DIDerivedType(tag: DW_TAG_member, name: "hdr", scope: !7117, file: !7114, line: 17, baseType: !1813, size: 64)
!7120 = !DIDerivedType(tag: DW_TAG_member, name: "route_hdr", scope: !7117, file: !7114, line: 18, baseType: !1813, size: 64, offset: 64)
!7121 = !DIDerivedType(tag: DW_TAG_member, name: "icmp_hdr", scope: !7117, file: !7114, line: 19, baseType: !1813, size: 64, offset: 128)
!7122 = !DIDerivedType(tag: DW_TAG_member, name: "frags_hdr", scope: !7117, file: !7114, line: 20, baseType: !1813, size: 64, offset: 192)
!7123 = !DIDerivedType(tag: DW_TAG_member, name: "xfrm6_hdr", scope: !7117, file: !7114, line: 21, baseType: !1813, size: 64, offset: 256)
!7124 = !DIDerivedType(tag: DW_TAG_member, name: "bindv6only", scope: !7117, file: !7114, line: 23, baseType: !6, size: 32, offset: 320)
!7125 = !DIDerivedType(tag: DW_TAG_member, name: "flush_delay", scope: !7117, file: !7114, line: 24, baseType: !6, size: 32, offset: 352)
!7126 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_max_size", scope: !7117, file: !7114, line: 25, baseType: !6, size: 32, offset: 384)
!7127 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_gc_min_interval", scope: !7117, file: !7114, line: 26, baseType: !6, size: 32, offset: 416)
!7128 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_gc_timeout", scope: !7117, file: !7114, line: 27, baseType: !6, size: 32, offset: 448)
!7129 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_gc_interval", scope: !7117, file: !7114, line: 28, baseType: !6, size: 32, offset: 480)
!7130 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_gc_elasticity", scope: !7117, file: !7114, line: 29, baseType: !6, size: 32, offset: 512)
!7131 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_mtu_expires", scope: !7117, file: !7114, line: 30, baseType: !6, size: 32, offset: 544)
!7132 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_min_advmss", scope: !7117, file: !7114, line: 31, baseType: !6, size: 32, offset: 576)
!7133 = !DIDerivedType(tag: DW_TAG_member, name: "multipath_hash_policy", scope: !7117, file: !7114, line: 32, baseType: !6, size: 32, offset: 608)
!7134 = !DIDerivedType(tag: DW_TAG_member, name: "flowlabel_consistency", scope: !7117, file: !7114, line: 33, baseType: !6, size: 32, offset: 640)
!7135 = !DIDerivedType(tag: DW_TAG_member, name: "auto_flowlabels", scope: !7117, file: !7114, line: 34, baseType: !6, size: 32, offset: 672)
!7136 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_time", scope: !7117, file: !7114, line: 35, baseType: !6, size: 32, offset: 704)
!7137 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_echo_ignore_all", scope: !7117, file: !7114, line: 36, baseType: !6, size: 32, offset: 736)
!7138 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_echo_ignore_multicast", scope: !7117, file: !7114, line: 37, baseType: !6, size: 32, offset: 768)
!7139 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_echo_ignore_anycast", scope: !7117, file: !7114, line: 38, baseType: !6, size: 32, offset: 800)
!7140 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_ratemask", scope: !7117, file: !7114, line: 39, baseType: !7141, size: 256, offset: 832)
!7141 = !DICompositeType(tag: DW_TAG_array_type, baseType: !135, size: 256, elements: !1212)
!7142 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_ratemask_ptr", scope: !7117, file: !7114, line: 40, baseType: !5582, size: 64, offset: 1088)
!7143 = !DIDerivedType(tag: DW_TAG_member, name: "anycast_src_echo_reply", scope: !7117, file: !7114, line: 41, baseType: !6, size: 32, offset: 1152)
!7144 = !DIDerivedType(tag: DW_TAG_member, name: "ip_nonlocal_bind", scope: !7117, file: !7114, line: 42, baseType: !6, size: 32, offset: 1184)
!7145 = !DIDerivedType(tag: DW_TAG_member, name: "fwmark_reflect", scope: !7117, file: !7114, line: 43, baseType: !6, size: 32, offset: 1216)
!7146 = !DIDerivedType(tag: DW_TAG_member, name: "idgen_retries", scope: !7117, file: !7114, line: 44, baseType: !6, size: 32, offset: 1248)
!7147 = !DIDerivedType(tag: DW_TAG_member, name: "idgen_delay", scope: !7117, file: !7114, line: 45, baseType: !6, size: 32, offset: 1280)
!7148 = !DIDerivedType(tag: DW_TAG_member, name: "flowlabel_state_ranges", scope: !7117, file: !7114, line: 46, baseType: !6, size: 32, offset: 1312)
!7149 = !DIDerivedType(tag: DW_TAG_member, name: "flowlabel_reflect", scope: !7117, file: !7114, line: 47, baseType: !6, size: 32, offset: 1344)
!7150 = !DIDerivedType(tag: DW_TAG_member, name: "max_dst_opts_cnt", scope: !7117, file: !7114, line: 48, baseType: !6, size: 32, offset: 1376)
!7151 = !DIDerivedType(tag: DW_TAG_member, name: "max_hbh_opts_cnt", scope: !7117, file: !7114, line: 49, baseType: !6, size: 32, offset: 1408)
!7152 = !DIDerivedType(tag: DW_TAG_member, name: "max_dst_opts_len", scope: !7117, file: !7114, line: 50, baseType: !6, size: 32, offset: 1440)
!7153 = !DIDerivedType(tag: DW_TAG_member, name: "max_hbh_opts_len", scope: !7117, file: !7114, line: 51, baseType: !6, size: 32, offset: 1472)
!7154 = !DIDerivedType(tag: DW_TAG_member, name: "seg6_flowlabel", scope: !7117, file: !7114, line: 52, baseType: !6, size: 32, offset: 1504)
!7155 = !DIDerivedType(tag: DW_TAG_member, name: "skip_notify_on_dev_down", scope: !7117, file: !7114, line: 53, baseType: !304, size: 8, offset: 1536)
!7156 = !DIDerivedType(tag: DW_TAG_member, name: "devconf_all", scope: !7113, file: !7114, line: 58, baseType: !7157, size: 64, offset: 1600)
!7157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5311, size: 64)
!7158 = !DIDerivedType(tag: DW_TAG_member, name: "devconf_dflt", scope: !7113, file: !7114, line: 59, baseType: !7157, size: 64, offset: 1664)
!7159 = !DIDerivedType(tag: DW_TAG_member, name: "peers", scope: !7113, file: !7114, line: 60, baseType: !6841, size: 64, offset: 1728)
!7160 = !DIDerivedType(tag: DW_TAG_member, name: "fqdir", scope: !7113, file: !7114, line: 61, baseType: !6844, size: 64, offset: 1792)
!7161 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_null_entry", scope: !7113, file: !7114, line: 71, baseType: !4947, size: 64, offset: 1856)
!7162 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_null_entry", scope: !7113, file: !7114, line: 72, baseType: !5255, size: 64, offset: 1920)
!7163 = !DIDerivedType(tag: DW_TAG_member, name: "rt6_stats", scope: !7113, file: !7114, line: 73, baseType: !7164, size: 64, offset: 1984)
!7164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7165, size: 64)
!7165 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rt6_statistics", file: !4949, line: 368, size: 224, elements: !7166)
!7166 = !{!7167, !7168, !7169, !7170, !7171, !7172, !7173}
!7167 = !DIDerivedType(tag: DW_TAG_member, name: "fib_nodes", scope: !7165, file: !4949, line: 369, baseType: !231, size: 32)
!7168 = !DIDerivedType(tag: DW_TAG_member, name: "fib_route_nodes", scope: !7165, file: !4949, line: 370, baseType: !231, size: 32, offset: 32)
!7169 = !DIDerivedType(tag: DW_TAG_member, name: "fib_rt_entries", scope: !7165, file: !4949, line: 371, baseType: !231, size: 32, offset: 64)
!7170 = !DIDerivedType(tag: DW_TAG_member, name: "fib_rt_cache", scope: !7165, file: !4949, line: 372, baseType: !231, size: 32, offset: 96)
!7171 = !DIDerivedType(tag: DW_TAG_member, name: "fib_discarded_routes", scope: !7165, file: !4949, line: 373, baseType: !231, size: 32, offset: 128)
!7172 = !DIDerivedType(tag: DW_TAG_member, name: "fib_rt_alloc", scope: !7165, file: !4949, line: 376, baseType: !632, size: 32, offset: 160)
!7173 = !DIDerivedType(tag: DW_TAG_member, name: "fib_rt_uncache", scope: !7165, file: !4949, line: 377, baseType: !632, size: 32, offset: 192)
!7174 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_fib_timer", scope: !7113, file: !7114, line: 74, baseType: !2566, size: 320, offset: 2048)
!7175 = !DIDerivedType(tag: DW_TAG_member, name: "fib_table_hash", scope: !7113, file: !7114, line: 75, baseType: !6697, size: 64, offset: 2368)
!7176 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_main_tbl", scope: !7113, file: !7114, line: 76, baseType: !4952, size: 64, offset: 2432)
!7177 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_walkers", scope: !7113, file: !7114, line: 77, baseType: !30, size: 128, offset: 2496)
!7178 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_dst_ops", scope: !7113, file: !7114, line: 78, baseType: !5100, size: 1088, offset: 2624)
!7179 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_walker_lock", scope: !7113, file: !7114, line: 79, baseType: !834, offset: 3712)
!7180 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_gc_lock", scope: !7113, file: !7114, line: 80, baseType: !44, offset: 3712)
!7181 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_gc_expire", scope: !7113, file: !7114, line: 81, baseType: !199, size: 32, offset: 3712)
!7182 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_last_gc", scope: !7113, file: !7114, line: 82, baseType: !135, size: 64, offset: 3776)
!7183 = !DIDerivedType(tag: DW_TAG_member, name: "icmp_sk", scope: !7113, file: !7114, line: 94, baseType: !6838, size: 64, offset: 3840)
!7184 = !DIDerivedType(tag: DW_TAG_member, name: "ndisc_sk", scope: !7113, file: !7114, line: 95, baseType: !2003, size: 64, offset: 3904)
!7185 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_sk", scope: !7113, file: !7114, line: 96, baseType: !2003, size: 64, offset: 3968)
!7186 = !DIDerivedType(tag: DW_TAG_member, name: "igmp_sk", scope: !7113, file: !7114, line: 97, baseType: !2003, size: 64, offset: 4032)
!7187 = !DIDerivedType(tag: DW_TAG_member, name: "mc_autojoin_sk", scope: !7113, file: !7114, line: 98, baseType: !2003, size: 64, offset: 4096)
!7188 = !DIDerivedType(tag: DW_TAG_member, name: "dev_addr_genid", scope: !7113, file: !7114, line: 107, baseType: !632, size: 32, offset: 4160)
!7189 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_sernum", scope: !7113, file: !7114, line: 108, baseType: !632, size: 32, offset: 4192)
!7190 = !DIDerivedType(tag: DW_TAG_member, name: "seg6_data", scope: !7113, file: !7114, line: 109, baseType: !7191, size: 64, offset: 4224)
!7191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7192, size: 64)
!7192 = !DICompositeType(tag: DW_TAG_structure_type, name: "seg6_pernet_data", file: !7114, line: 109, flags: DIFlagFwdDecl)
!7193 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_ops", scope: !7113, file: !7114, line: 110, baseType: !7085, size: 64, offset: 4288)
!7194 = !DIDerivedType(tag: DW_TAG_member, name: "ip6mr_notifier_ops", scope: !7113, file: !7114, line: 111, baseType: !7085, size: 64, offset: 4352)
!7195 = !DIDerivedType(tag: DW_TAG_member, name: "ipmr_seq", scope: !7113, file: !7114, line: 112, baseType: !199, size: 32, offset: 4416)
!7196 = !DIDerivedType(tag: DW_TAG_member, name: "ip6addrlbl_table", scope: !7113, file: !7114, line: 117, baseType: !7197, size: 128, offset: 4480)
!7197 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7113, file: !7114, line: 113, size: 128, elements: !7198)
!7198 = !{!7199, !7200, !7201}
!7199 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7197, file: !7114, line: 114, baseType: !451, size: 64)
!7200 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !7197, file: !7114, line: 115, baseType: !44, offset: 64)
!7201 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !7197, file: !7114, line: 116, baseType: !229, size: 32, offset: 64)
!7202 = !DIDerivedType(tag: DW_TAG_member, name: "wext_nlevents", scope: !1976, file: !1977, line: 162, baseType: !2583, size: 192, offset: 14784)
!7203 = !DIDerivedType(tag: DW_TAG_member, name: "gen", scope: !1976, file: !1977, line: 164, baseType: !7204, size: 64, offset: 14976)
!7204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7205, size: 64)
!7205 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "net_generic", file: !7206, line: 28, size: 192, elements: !7207)
!7206 = !DIFile(filename: "./include/net/netns/generic.h", directory: "/home/lizy2001/genbc/linux")
!7207 = !{!7208}
!7208 = !DIDerivedType(tag: DW_TAG_member, scope: !7205, file: !7206, line: 29, baseType: !7209, size: 192)
!7209 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7205, file: !7206, line: 29, size: 192, elements: !7210)
!7210 = !{!7211, !7216}
!7211 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !7209, file: !7206, line: 33, baseType: !7212, size: 192)
!7212 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7209, file: !7206, line: 30, size: 192, elements: !7213)
!7213 = !{!7214, !7215}
!7214 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !7212, file: !7206, line: 31, baseType: !199, size: 32)
!7215 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !7212, file: !7206, line: 32, baseType: !178, size: 128, align: 64, offset: 64)
!7216 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !7209, file: !7206, line: 35, baseType: !4751)
!7217 = !DIDerivedType(tag: DW_TAG_member, name: "bpf", scope: !1976, file: !1977, line: 167, baseType: !7218, size: 512, offset: 15040)
!7218 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_bpf", file: !7219, line: 14, size: 512, elements: !7220)
!7219 = !DIFile(filename: "./include/net/netns/bpf.h", directory: "/home/lizy2001/genbc/linux")
!7220 = !{!7221, !7236, !7238}
!7221 = !DIDerivedType(tag: DW_TAG_member, name: "run_array", scope: !7218, file: !7219, line: 16, baseType: !7222, size: 128)
!7222 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7223, size: 128, elements: !1911)
!7223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7224, size: 64)
!7224 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_array", file: !3132, line: 1037, size: 128, elements: !7225)
!7225 = !{!7226, !7227}
!7226 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !7224, file: !3132, line: 1038, baseType: !178, size: 128, align: 64)
!7227 = !DIDerivedType(tag: DW_TAG_member, name: "items", scope: !7224, file: !3132, line: 1039, baseType: !7228, offset: 128)
!7228 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7229, elements: !2189)
!7229 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_array_item", file: !3132, line: 1032, size: 192, elements: !7230)
!7230 = !{!7231, !7232}
!7231 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !7229, file: !3132, line: 1033, baseType: !3032, size: 64)
!7232 = !DIDerivedType(tag: DW_TAG_member, name: "cgroup_storage", scope: !7229, file: !3132, line: 1034, baseType: !7233, size: 128, offset: 64)
!7233 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7234, size: 128, elements: !1911)
!7234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7235, size: 64)
!7235 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_cgroup_storage", file: !3132, line: 1034, flags: DIFlagFwdDecl)
!7236 = !DIDerivedType(tag: DW_TAG_member, name: "progs", scope: !7218, file: !7219, line: 17, baseType: !7237, size: 128, offset: 128)
!7237 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3032, size: 128, elements: !1911)
!7238 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !7218, file: !7219, line: 18, baseType: !7239, size: 256, offset: 256)
!7239 = !DICompositeType(tag: DW_TAG_array_type, baseType: !30, size: 256, elements: !1911)
!7240 = !DIDerivedType(tag: DW_TAG_member, name: "net_cookie", scope: !1976, file: !1977, line: 174, baseType: !564, size: 64, offset: 15552)
!7241 = !DIDerivedType(tag: DW_TAG_member, name: "can", scope: !1976, file: !1977, line: 183, baseType: !7242, size: 1216, offset: 15616)
!7242 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_can", file: !7243, line: 15, size: 1216, elements: !7244)
!7243 = !DIFile(filename: "./include/net/netns/can.h", directory: "/home/lizy2001/genbc/linux")
!7244 = !{!7245, !7246, !7247, !7248, !7249, !7250, !7251, !7252, !7253, !7254, !7255, !7258, !7259, !7260, !7263, !7266}
!7245 = !DIDerivedType(tag: DW_TAG_member, name: "proc_dir", scope: !7242, file: !7243, line: 17, baseType: !1997, size: 64)
!7246 = !DIDerivedType(tag: DW_TAG_member, name: "pde_stats", scope: !7242, file: !7243, line: 18, baseType: !1997, size: 64, offset: 64)
!7247 = !DIDerivedType(tag: DW_TAG_member, name: "pde_reset_stats", scope: !7242, file: !7243, line: 19, baseType: !1997, size: 64, offset: 128)
!7248 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_all", scope: !7242, file: !7243, line: 20, baseType: !1997, size: 64, offset: 192)
!7249 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_fil", scope: !7242, file: !7243, line: 21, baseType: !1997, size: 64, offset: 256)
!7250 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_inv", scope: !7242, file: !7243, line: 22, baseType: !1997, size: 64, offset: 320)
!7251 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_sff", scope: !7242, file: !7243, line: 23, baseType: !1997, size: 64, offset: 384)
!7252 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_eff", scope: !7242, file: !7243, line: 24, baseType: !1997, size: 64, offset: 448)
!7253 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_err", scope: !7242, file: !7243, line: 25, baseType: !1997, size: 64, offset: 512)
!7254 = !DIDerivedType(tag: DW_TAG_member, name: "bcmproc_dir", scope: !7242, file: !7243, line: 26, baseType: !1997, size: 64, offset: 576)
!7255 = !DIDerivedType(tag: DW_TAG_member, name: "rx_alldev_list", scope: !7242, file: !7243, line: 30, baseType: !7256, size: 64, offset: 640)
!7256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7257, size: 64)
!7257 = !DICompositeType(tag: DW_TAG_structure_type, name: "can_dev_rcv_lists", file: !7243, line: 11, flags: DIFlagFwdDecl)
!7258 = !DIDerivedType(tag: DW_TAG_member, name: "rcvlists_lock", scope: !7242, file: !7243, line: 31, baseType: !44, offset: 704)
!7259 = !DIDerivedType(tag: DW_TAG_member, name: "stattimer", scope: !7242, file: !7243, line: 32, baseType: !2566, size: 320, offset: 704)
!7260 = !DIDerivedType(tag: DW_TAG_member, name: "pkg_stats", scope: !7242, file: !7243, line: 33, baseType: !7261, size: 64, offset: 1024)
!7261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7262, size: 64)
!7262 = !DICompositeType(tag: DW_TAG_structure_type, name: "can_pkg_stats", file: !7243, line: 12, flags: DIFlagFwdDecl)
!7263 = !DIDerivedType(tag: DW_TAG_member, name: "rcv_lists_stats", scope: !7242, file: !7243, line: 34, baseType: !7264, size: 64, offset: 1088)
!7264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7265, size: 64)
!7265 = !DICompositeType(tag: DW_TAG_structure_type, name: "can_rcv_lists_stats", file: !7243, line: 13, flags: DIFlagFwdDecl)
!7266 = !DIDerivedType(tag: DW_TAG_member, name: "cgw_list", scope: !7242, file: !7243, line: 37, baseType: !451, size: 64, offset: 1152)
!7267 = !DIDerivedType(tag: DW_TAG_member, name: "diag_nlsk", scope: !1976, file: !1977, line: 191, baseType: !2003, size: 64, offset: 16832)
!7268 = !DIDerivedType(tag: DW_TAG_member, name: "time_ns", scope: !1960, file: !1961, line: 38, baseType: !7269, size: 64, offset: 384)
!7269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7270, size: 64)
!7270 = !DICompositeType(tag: DW_TAG_structure_type, name: "time_namespace", file: !1961, line: 38, flags: DIFlagFwdDecl)
!7271 = !DIDerivedType(tag: DW_TAG_member, name: "time_ns_for_children", scope: !1960, file: !1961, line: 39, baseType: !7269, size: 64, offset: 448)
!7272 = !DIDerivedType(tag: DW_TAG_member, name: "cgroup_ns", scope: !1960, file: !1961, line: 40, baseType: !7273, size: 64, offset: 512)
!7273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7274, size: 64)
!7274 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgroup_namespace", file: !7275, line: 856, size: 448, elements: !7276)
!7275 = !DIFile(filename: "./include/linux/cgroup.h", directory: "/home/lizy2001/genbc/linux")
!7276 = !{!7277, !7278, !7279, !7280, !7281}
!7277 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !7274, file: !7275, line: 857, baseType: !880, size: 32)
!7278 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !7274, file: !7275, line: 858, baseType: !1608, size: 192, offset: 64)
!7279 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !7274, file: !7275, line: 859, baseType: !1574, size: 64, offset: 256)
!7280 = !DIDerivedType(tag: DW_TAG_member, name: "ucounts", scope: !7274, file: !7275, line: 860, baseType: !1833, size: 64, offset: 320)
!7281 = !DIDerivedType(tag: DW_TAG_member, name: "root_cset", scope: !7274, file: !7275, line: 861, baseType: !7282, size: 64, offset: 384)
!7282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7283, size: 64)
!7283 = !DICompositeType(tag: DW_TAG_structure_type, name: "css_set", file: !7284, line: 16, flags: DIFlagFwdDecl)
!7284 = !DIFile(filename: "./include/linux/sched/task.h", directory: "/home/lizy2001/genbc/linux")
!7285 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !1268, file: !1269, line: 969, baseType: !7286, size: 64, offset: 9216)
!7286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7287, size: 64)
!7287 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "signal_struct", file: !7288, line: 82, size: 7296, elements: !7289)
!7288 = !DIFile(filename: "./include/linux/sched/signal.h", directory: "/home/lizy2001/genbc/linux")
!7289 = !{!7290, !7291, !7292, !7293, !7294, !7295, !7296, !7307, !7308, !7309, !7310, !7311, !7312, !7313, !7314, !7315, !7316, !7317, !7318, !7319, !7325, !7334, !7335, !7337, !7338, !7339, !7342, !7343, !7344, !7345, !7346, !7347, !7348, !7349, !7350, !7351, !7352, !7353, !7354, !7355, !7356, !7357, !7358, !7359, !7360, !7361, !7362, !7363, !7364, !7367, !7368, !7375, !7376, !7377, !7378, !7379, !7380}
!7290 = !DIDerivedType(tag: DW_TAG_member, name: "sigcnt", scope: !7287, file: !7288, line: 83, baseType: !880, size: 32)
!7291 = !DIDerivedType(tag: DW_TAG_member, name: "live", scope: !7287, file: !7288, line: 84, baseType: !632, size: 32, offset: 32)
!7292 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !7287, file: !7288, line: 85, baseType: !6, size: 32, offset: 64)
!7293 = !DIDerivedType(tag: DW_TAG_member, name: "thread_head", scope: !7287, file: !7288, line: 86, baseType: !30, size: 128, offset: 128)
!7294 = !DIDerivedType(tag: DW_TAG_member, name: "wait_chldexit", scope: !7287, file: !7288, line: 88, baseType: !812, size: 128, offset: 256)
!7295 = !DIDerivedType(tag: DW_TAG_member, name: "curr_target", scope: !7287, file: !7288, line: 91, baseType: !1267, size: 64, offset: 384)
!7296 = !DIDerivedType(tag: DW_TAG_member, name: "shared_pending", scope: !7287, file: !7288, line: 94, baseType: !7297, size: 192, offset: 448)
!7297 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigpending", file: !7298, line: 30, size: 192, elements: !7299)
!7298 = !DIFile(filename: "./include/linux/signal_types.h", directory: "/home/lizy2001/genbc/linux")
!7299 = !{!7300, !7301}
!7300 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !7297, file: !7298, line: 31, baseType: !30, size: 128)
!7301 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !7297, file: !7298, line: 32, baseType: !7302, size: 64, offset: 128)
!7302 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigset_t", file: !7303, line: 25, baseType: !7304)
!7303 = !DIFile(filename: "./arch/x86/include/asm/signal.h", directory: "/home/lizy2001/genbc/linux")
!7304 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !7303, line: 23, size: 64, elements: !7305)
!7305 = !{!7306}
!7306 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !7304, file: !7303, line: 24, baseType: !1421, size: 64)
!7307 = !DIDerivedType(tag: DW_TAG_member, name: "multiprocess", scope: !7287, file: !7288, line: 97, baseType: !451, size: 64, offset: 640)
!7308 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_code", scope: !7287, file: !7288, line: 100, baseType: !6, size: 32, offset: 704)
!7309 = !DIDerivedType(tag: DW_TAG_member, name: "notify_count", scope: !7287, file: !7288, line: 106, baseType: !6, size: 32, offset: 736)
!7310 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_task", scope: !7287, file: !7288, line: 107, baseType: !1267, size: 64, offset: 768)
!7311 = !DIDerivedType(tag: DW_TAG_member, name: "group_stop_count", scope: !7287, file: !7288, line: 110, baseType: !6, size: 32, offset: 832)
!7312 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !7287, file: !7288, line: 111, baseType: !199, size: 32, offset: 864)
!7313 = !DIDerivedType(tag: DW_TAG_member, name: "is_child_subreaper", scope: !7287, file: !7288, line: 122, baseType: !199, size: 1, offset: 896, flags: DIFlagBitField, extraData: i64 896)
!7314 = !DIDerivedType(tag: DW_TAG_member, name: "has_child_subreaper", scope: !7287, file: !7288, line: 123, baseType: !199, size: 1, offset: 897, flags: DIFlagBitField, extraData: i64 896)
!7315 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timer_id", scope: !7287, file: !7288, line: 128, baseType: !6, size: 32, offset: 928)
!7316 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timers", scope: !7287, file: !7288, line: 129, baseType: !30, size: 128, offset: 960)
!7317 = !DIDerivedType(tag: DW_TAG_member, name: "real_timer", scope: !7287, file: !7288, line: 132, baseType: !1338, size: 512, offset: 1088)
!7318 = !DIDerivedType(tag: DW_TAG_member, name: "it_real_incr", scope: !7287, file: !7288, line: 133, baseType: !1347, size: 64, offset: 1600)
!7319 = !DIDerivedType(tag: DW_TAG_member, name: "it", scope: !7287, file: !7288, line: 140, baseType: !7320, size: 256, offset: 1664)
!7320 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7321, size: 256, elements: !1911)
!7321 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpu_itimer", file: !7288, line: 38, size: 128, elements: !7322)
!7322 = !{!7323, !7324}
!7323 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !7321, file: !7288, line: 39, baseType: !235, size: 64)
!7324 = !DIDerivedType(tag: DW_TAG_member, name: "incr", scope: !7321, file: !7288, line: 40, baseType: !235, size: 64, offset: 64)
!7325 = !DIDerivedType(tag: DW_TAG_member, name: "cputimer", scope: !7287, file: !7288, line: 146, baseType: !7326, size: 192, offset: 1920)
!7326 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_group_cputimer", file: !7288, line: 66, size: 192, elements: !7327)
!7327 = !{!7328}
!7328 = !DIDerivedType(tag: DW_TAG_member, name: "cputime_atomic", scope: !7326, file: !7288, line: 67, baseType: !7329, size: 192)
!7329 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_cputime_atomic", file: !7288, line: 47, size: 192, elements: !7330)
!7330 = !{!7331, !7332, !7333}
!7331 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !7329, file: !7288, line: 48, baseType: !564, size: 64)
!7332 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !7329, file: !7288, line: 49, baseType: !564, size: 64, offset: 64)
!7333 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !7329, file: !7288, line: 50, baseType: !564, size: 64, offset: 128)
!7334 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !7287, file: !7288, line: 150, baseType: !1872, size: 640, offset: 2112)
!7335 = !DIDerivedType(tag: DW_TAG_member, name: "pids", scope: !7287, file: !7288, line: 153, baseType: !7336, size: 256, offset: 2752)
!7336 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1533, size: 256, elements: !1212)
!7337 = !DIDerivedType(tag: DW_TAG_member, name: "tty_old_pgrp", scope: !7287, file: !7288, line: 159, baseType: !1533, size: 64, offset: 3008)
!7338 = !DIDerivedType(tag: DW_TAG_member, name: "leader", scope: !7287, file: !7288, line: 162, baseType: !6, size: 32, offset: 3072)
!7339 = !DIDerivedType(tag: DW_TAG_member, name: "tty", scope: !7287, file: !7288, line: 164, baseType: !7340, size: 64, offset: 3136)
!7340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7341, size: 64)
!7341 = !DICompositeType(tag: DW_TAG_structure_type, name: "tty_struct", file: !7288, line: 164, flags: DIFlagFwdDecl)
!7342 = !DIDerivedType(tag: DW_TAG_member, name: "stats_lock", scope: !7287, file: !7288, line: 175, baseType: !2638, size: 32, offset: 3200)
!7343 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !7287, file: !7288, line: 176, baseType: !235, size: 64, offset: 3264)
!7344 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !7287, file: !7288, line: 176, baseType: !235, size: 64, offset: 3328)
!7345 = !DIDerivedType(tag: DW_TAG_member, name: "cutime", scope: !7287, file: !7288, line: 176, baseType: !235, size: 64, offset: 3392)
!7346 = !DIDerivedType(tag: DW_TAG_member, name: "cstime", scope: !7287, file: !7288, line: 176, baseType: !235, size: 64, offset: 3456)
!7347 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !7287, file: !7288, line: 177, baseType: !235, size: 64, offset: 3520)
!7348 = !DIDerivedType(tag: DW_TAG_member, name: "cgtime", scope: !7287, file: !7288, line: 178, baseType: !235, size: 64, offset: 3584)
!7349 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !7287, file: !7288, line: 179, baseType: !1860, size: 128, offset: 3648)
!7350 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !7287, file: !7288, line: 180, baseType: !135, size: 64, offset: 3776)
!7351 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !7287, file: !7288, line: 180, baseType: !135, size: 64, offset: 3840)
!7352 = !DIDerivedType(tag: DW_TAG_member, name: "cnvcsw", scope: !7287, file: !7288, line: 180, baseType: !135, size: 64, offset: 3904)
!7353 = !DIDerivedType(tag: DW_TAG_member, name: "cnivcsw", scope: !7287, file: !7288, line: 180, baseType: !135, size: 64, offset: 3968)
!7354 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !7287, file: !7288, line: 181, baseType: !135, size: 64, offset: 4032)
!7355 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !7287, file: !7288, line: 181, baseType: !135, size: 64, offset: 4096)
!7356 = !DIDerivedType(tag: DW_TAG_member, name: "cmin_flt", scope: !7287, file: !7288, line: 181, baseType: !135, size: 64, offset: 4160)
!7357 = !DIDerivedType(tag: DW_TAG_member, name: "cmaj_flt", scope: !7287, file: !7288, line: 181, baseType: !135, size: 64, offset: 4224)
!7358 = !DIDerivedType(tag: DW_TAG_member, name: "inblock", scope: !7287, file: !7288, line: 182, baseType: !135, size: 64, offset: 4288)
!7359 = !DIDerivedType(tag: DW_TAG_member, name: "oublock", scope: !7287, file: !7288, line: 182, baseType: !135, size: 64, offset: 4352)
!7360 = !DIDerivedType(tag: DW_TAG_member, name: "cinblock", scope: !7287, file: !7288, line: 182, baseType: !135, size: 64, offset: 4416)
!7361 = !DIDerivedType(tag: DW_TAG_member, name: "coublock", scope: !7287, file: !7288, line: 182, baseType: !135, size: 64, offset: 4480)
!7362 = !DIDerivedType(tag: DW_TAG_member, name: "maxrss", scope: !7287, file: !7288, line: 183, baseType: !135, size: 64, offset: 4544)
!7363 = !DIDerivedType(tag: DW_TAG_member, name: "cmaxrss", scope: !7287, file: !7288, line: 183, baseType: !135, size: 64, offset: 4608)
!7364 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !7287, file: !7288, line: 184, baseType: !7365, offset: 4672)
!7365 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_io_accounting", file: !7366, line: 12, elements: !58)
!7366 = !DIFile(filename: "./include/linux/task_io_accounting.h", directory: "/home/lizy2001/genbc/linux")
!7367 = !DIDerivedType(tag: DW_TAG_member, name: "sum_sched_runtime", scope: !7287, file: !7288, line: 192, baseType: !237, size: 64, offset: 4672)
!7368 = !DIDerivedType(tag: DW_TAG_member, name: "rlim", scope: !7287, file: !7288, line: 203, baseType: !7369, size: 2048, offset: 4736)
!7369 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7370, size: 2048, elements: !1944)
!7370 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rlimit", file: !7371, line: 43, size: 128, elements: !7372)
!7371 = !DIFile(filename: "./include/uapi/linux/resource.h", directory: "/home/lizy2001/genbc/linux")
!7372 = !{!7373, !7374}
!7373 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_cur", scope: !7370, file: !7371, line: 44, baseType: !134, size: 64)
!7374 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_max", scope: !7370, file: !7371, line: 45, baseType: !134, size: 64, offset: 64)
!7375 = !DIDerivedType(tag: DW_TAG_member, name: "oom_flag_origin", scope: !7287, file: !7288, line: 220, baseType: !304, size: 8, offset: 6784)
!7376 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj", scope: !7287, file: !7288, line: 221, baseType: !1256, size: 16, offset: 6800)
!7377 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj_min", scope: !7287, file: !7288, line: 222, baseType: !1256, size: 16, offset: 6816)
!7378 = !DIDerivedType(tag: DW_TAG_member, name: "oom_mm", scope: !7287, file: !7288, line: 224, baseType: !1025, size: 64, offset: 6848)
!7379 = !DIDerivedType(tag: DW_TAG_member, name: "cred_guard_mutex", scope: !7287, file: !7288, line: 227, baseType: !558, size: 192, offset: 6912)
!7380 = !DIDerivedType(tag: DW_TAG_member, name: "exec_update_mutex", scope: !7287, file: !7288, line: 233, baseType: !558, size: 192, offset: 7104)
!7381 = !DIDerivedType(tag: DW_TAG_member, name: "sighand", scope: !1268, file: !1269, line: 970, baseType: !7382, size: 64, offset: 9280)
!7382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7383, size: 64)
!7383 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sighand_struct", file: !7288, line: 20, size: 16576, elements: !7384)
!7384 = !{!7385, !7386, !7387, !7388}
!7385 = !DIDerivedType(tag: DW_TAG_member, name: "siglock", scope: !7383, file: !7288, line: 21, baseType: !44)
!7386 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !7383, file: !7288, line: 22, baseType: !880, size: 32)
!7387 = !DIDerivedType(tag: DW_TAG_member, name: "signalfd_wqh", scope: !7383, file: !7288, line: 23, baseType: !812, size: 128, offset: 64)
!7388 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !7383, file: !7288, line: 24, baseType: !7389, size: 16384, offset: 192)
!7389 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7390, size: 16384, elements: !90)
!7390 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sigaction", file: !7298, line: 49, size: 256, elements: !7391)
!7391 = !{!7392}
!7392 = !DIDerivedType(tag: DW_TAG_member, name: "sa", scope: !7390, file: !7298, line: 50, baseType: !7393, size: 256)
!7393 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigaction", file: !7298, line: 35, size: 256, elements: !7394)
!7394 = !{!7395, !7402, !7403, !7409}
!7395 = !DIDerivedType(tag: DW_TAG_member, name: "sa_handler", scope: !7393, file: !7298, line: 37, baseType: !7396, size: 64)
!7396 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sighandler_t", file: !7397, line: 19, baseType: !7398)
!7397 = !DIFile(filename: "./include/uapi/asm-generic/signal-defs.h", directory: "/home/lizy2001/genbc/linux")
!7398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7399, size: 64)
!7399 = !DIDerivedType(tag: DW_TAG_typedef, name: "__signalfn_t", file: !7397, line: 18, baseType: !7400)
!7400 = !DISubroutineType(types: !7401)
!7401 = !{null, !6}
!7402 = !DIDerivedType(tag: DW_TAG_member, name: "sa_flags", scope: !7393, file: !7298, line: 38, baseType: !135, size: 64, offset: 64)
!7403 = !DIDerivedType(tag: DW_TAG_member, name: "sa_restorer", scope: !7393, file: !7298, line: 44, baseType: !7404, size: 64, offset: 128)
!7404 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sigrestore_t", file: !7397, line: 22, baseType: !7405)
!7405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7406, size: 64)
!7406 = !DIDerivedType(tag: DW_TAG_typedef, name: "__restorefn_t", file: !7397, line: 21, baseType: !7407)
!7407 = !DISubroutineType(types: !7408)
!7408 = !{null}
!7409 = !DIDerivedType(tag: DW_TAG_member, name: "sa_mask", scope: !7393, file: !7298, line: 46, baseType: !7302, size: 64, offset: 192)
!7410 = !DIDerivedType(tag: DW_TAG_member, name: "blocked", scope: !1268, file: !1269, line: 971, baseType: !7302, size: 64, offset: 9344)
!7411 = !DIDerivedType(tag: DW_TAG_member, name: "real_blocked", scope: !1268, file: !1269, line: 972, baseType: !7302, size: 64, offset: 9408)
!7412 = !DIDerivedType(tag: DW_TAG_member, name: "saved_sigmask", scope: !1268, file: !1269, line: 974, baseType: !7302, size: 64, offset: 9472)
!7413 = !DIDerivedType(tag: DW_TAG_member, name: "pending", scope: !1268, file: !1269, line: 975, baseType: !7297, size: 192, offset: 9536)
!7414 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_sp", scope: !1268, file: !1269, line: 976, baseType: !135, size: 64, offset: 9728)
!7415 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_size", scope: !1268, file: !1269, line: 977, baseType: !132, size: 64, offset: 9792)
!7416 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_flags", scope: !1268, file: !1269, line: 978, baseType: !199, size: 32, offset: 9856)
!7417 = !DIDerivedType(tag: DW_TAG_member, name: "task_works", scope: !1268, file: !1269, line: 980, baseType: !181, size: 64, offset: 9920)
!7418 = !DIDerivedType(tag: DW_TAG_member, name: "seccomp", scope: !1268, file: !1269, line: 989, baseType: !7419, size: 128, offset: 9984)
!7419 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp", file: !7420, line: 35, size: 128, elements: !7421)
!7420 = !DIFile(filename: "./include/linux/seccomp.h", directory: "/home/lizy2001/genbc/linux")
!7421 = !{!7422, !7423, !7424}
!7422 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !7419, file: !7420, line: 36, baseType: !6, size: 32)
!7423 = !DIDerivedType(tag: DW_TAG_member, name: "filter_count", scope: !7419, file: !7420, line: 37, baseType: !632, size: 32, offset: 32)
!7424 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !7419, file: !7420, line: 38, baseType: !7425, size: 64, offset: 64)
!7425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7426, size: 64)
!7426 = !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp_filter", file: !7420, line: 23, flags: DIFlagFwdDecl)
!7427 = !DIDerivedType(tag: DW_TAG_member, name: "parent_exec_id", scope: !1268, file: !1269, line: 992, baseType: !235, size: 64, offset: 10112)
!7428 = !DIDerivedType(tag: DW_TAG_member, name: "self_exec_id", scope: !1268, file: !1269, line: 993, baseType: !235, size: 64, offset: 10176)
!7429 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_lock", scope: !1268, file: !1269, line: 996, baseType: !44, offset: 10240)
!7430 = !DIDerivedType(tag: DW_TAG_member, name: "pi_lock", scope: !1268, file: !1269, line: 999, baseType: !658, offset: 10240)
!7431 = !DIDerivedType(tag: DW_TAG_member, name: "wake_q", scope: !1268, file: !1269, line: 1001, baseType: !7432, size: 64, offset: 10240)
!7432 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wake_q_node", file: !1269, line: 636, size: 64, elements: !7433)
!7433 = !{!7434}
!7434 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7432, file: !1269, line: 637, baseType: !7435, size: 64)
!7435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7432, size: 64)
!7436 = !DIDerivedType(tag: DW_TAG_member, name: "pi_waiters", scope: !1268, file: !1269, line: 1005, baseType: !637, size: 128, offset: 10304)
!7437 = !DIDerivedType(tag: DW_TAG_member, name: "pi_top_task", scope: !1268, file: !1269, line: 1007, baseType: !1267, size: 64, offset: 10432)
!7438 = !DIDerivedType(tag: DW_TAG_member, name: "pi_blocked_on", scope: !1268, file: !1269, line: 1009, baseType: !7439, size: 64, offset: 10496)
!7439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7440, size: 64)
!7440 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt_mutex_waiter", file: !1269, line: 1009, flags: DIFlagFwdDecl)
!7441 = !DIDerivedType(tag: DW_TAG_member, name: "journal_info", scope: !1268, file: !1269, line: 1043, baseType: !159, size: 64, offset: 10560)
!7442 = !DIDerivedType(tag: DW_TAG_member, name: "bio_list", scope: !1268, file: !1269, line: 1046, baseType: !7443, size: 64, offset: 10624)
!7443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7444, size: 64)
!7444 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_list", file: !7445, line: 554, size: 128, elements: !7446)
!7445 = !DIFile(filename: "./include/linux/bio.h", directory: "/home/lizy2001/genbc/linux")
!7446 = !{!7447, !8281}
!7447 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7444, file: !7445, line: 555, baseType: !7448, size: 64)
!7448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7449, size: 64)
!7449 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio", file: !7450, line: 203, size: 832, elements: !7451)
!7450 = !DIFile(filename: "./include/linux/blk_types.h", directory: "/home/lizy2001/genbc/linux")
!7451 = !{!7452, !7453, !8235, !8236, !8237, !8238, !8239, !8240, !8241, !8242, !8249, !8254, !8255, !8274, !8275, !8276, !8277, !8278, !8280}
!7452 = !DIDerivedType(tag: DW_TAG_member, name: "bi_next", scope: !7449, file: !7450, line: 204, baseType: !7448, size: 64)
!7453 = !DIDerivedType(tag: DW_TAG_member, name: "bi_disk", scope: !7449, file: !7450, line: 205, baseType: !7454, size: 64, offset: 64)
!7454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7455, size: 64)
!7455 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gendisk", file: !7456, line: 167, size: 8512, elements: !7457)
!7456 = !DIFile(filename: "./include/linux/genhd.h", directory: "/home/lizy2001/genbc/linux")
!7457 = !{!7458, !7459, !7460, !7461, !7462, !7463, !7464, !7521, !7522, !7699, !8217, !8218, !8219, !8220, !8221, !8222, !8225, !8226, !8229, !8230, !8231, !8234}
!7458 = !DIDerivedType(tag: DW_TAG_member, name: "major", scope: !7455, file: !7456, line: 171, baseType: !6, size: 32)
!7459 = !DIDerivedType(tag: DW_TAG_member, name: "first_minor", scope: !7455, file: !7456, line: 172, baseType: !6, size: 32, offset: 32)
!7460 = !DIDerivedType(tag: DW_TAG_member, name: "minors", scope: !7455, file: !7456, line: 173, baseType: !6, size: 32, offset: 64)
!7461 = !DIDerivedType(tag: DW_TAG_member, name: "disk_name", scope: !7455, file: !7456, line: 176, baseType: !4272, size: 256, offset: 96)
!7462 = !DIDerivedType(tag: DW_TAG_member, name: "events", scope: !7455, file: !7456, line: 178, baseType: !127, size: 16, offset: 352)
!7463 = !DIDerivedType(tag: DW_TAG_member, name: "event_flags", scope: !7455, file: !7456, line: 179, baseType: !127, size: 16, offset: 368)
!7464 = !DIDerivedType(tag: DW_TAG_member, name: "part_tbl", scope: !7455, file: !7456, line: 186, baseType: !7465, size: 64, offset: 384)
!7465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7466, size: 64)
!7466 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "disk_part_tbl", file: !7456, line: 149, size: 256, elements: !7467)
!7467 = !{!7468, !7469, !7470, !7519}
!7468 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !7466, file: !7456, line: 150, baseType: !178, size: 128, align: 64)
!7469 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !7466, file: !7456, line: 151, baseType: !6, size: 32, offset: 128)
!7470 = !DIDerivedType(tag: DW_TAG_member, name: "last_lookup", scope: !7466, file: !7456, line: 152, baseType: !7471, size: 64, offset: 192)
!7471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7472, size: 64)
!7472 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hd_struct", file: !7456, line: 53, size: 6592, elements: !7473)
!7473 = !{!7474, !7475, !7476, !7477, !7480, !7501, !7502, !7503, !7504, !7505, !7513}
!7474 = !DIDerivedType(tag: DW_TAG_member, name: "start_sect", scope: !7472, file: !7456, line: 54, baseType: !715, size: 64)
!7475 = !DIDerivedType(tag: DW_TAG_member, name: "nr_sects", scope: !7472, file: !7456, line: 60, baseType: !715, size: 64, offset: 64)
!7476 = !DIDerivedType(tag: DW_TAG_member, name: "stamp", scope: !7472, file: !7456, line: 64, baseType: !135, size: 64, offset: 128)
!7477 = !DIDerivedType(tag: DW_TAG_member, name: "dkstats", scope: !7472, file: !7456, line: 65, baseType: !7478, size: 64, offset: 192)
!7478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7479, size: 64)
!7479 = !DICompositeType(tag: DW_TAG_structure_type, name: "disk_stats", file: !7456, line: 65, flags: DIFlagFwdDecl)
!7480 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !7472, file: !7456, line: 66, baseType: !7481, size: 128, offset: 256)
!7481 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref", file: !7482, line: 105, size: 128, elements: !7483)
!7482 = !DIFile(filename: "./include/linux/percpu-refcount.h", directory: "/home/lizy2001/genbc/linux")
!7483 = !{!7484, !7485}
!7484 = !DIDerivedType(tag: DW_TAG_member, name: "percpu_count_ptr", scope: !7481, file: !7482, line: 110, baseType: !135, size: 64)
!7485 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !7481, file: !7482, line: 118, baseType: !7486, size: 64, offset: 64)
!7486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7487, size: 64)
!7487 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref_data", file: !7482, line: 95, size: 448, elements: !7488)
!7488 = !{!7489, !7490, !7496, !7497, !7498, !7499, !7500}
!7489 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !7487, file: !7482, line: 96, baseType: !562, size: 64)
!7490 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !7487, file: !7482, line: 97, baseType: !7491, size: 64, offset: 64)
!7491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7492, size: 64)
!7492 = !DIDerivedType(tag: DW_TAG_typedef, name: "percpu_ref_func_t", file: !7482, line: 60, baseType: !7493)
!7493 = !DISubroutineType(types: !7494)
!7494 = !{null, !7495}
!7495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7481, size: 64)
!7496 = !DIDerivedType(tag: DW_TAG_member, name: "confirm_switch", scope: !7487, file: !7482, line: 98, baseType: !7491, size: 64, offset: 128)
!7497 = !DIDerivedType(tag: DW_TAG_member, name: "force_atomic", scope: !7487, file: !7482, line: 99, baseType: !304, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!7498 = !DIDerivedType(tag: DW_TAG_member, name: "allow_reinit", scope: !7487, file: !7482, line: 100, baseType: !304, size: 1, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!7499 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !7487, file: !7482, line: 101, baseType: !178, size: 128, align: 64, offset: 256)
!7500 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !7487, file: !7482, line: 102, baseType: !7495, size: 64, offset: 384)
!7501 = !DIDerivedType(tag: DW_TAG_member, name: "__dev", scope: !7472, file: !7456, line: 68, baseType: !18, size: 5568, offset: 384)
!7502 = !DIDerivedType(tag: DW_TAG_member, name: "holder_dir", scope: !7472, file: !7456, line: 69, baseType: !37, size: 64, offset: 5952)
!7503 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !7472, file: !7456, line: 70, baseType: !6, size: 32, offset: 6016)
!7504 = !DIDerivedType(tag: DW_TAG_member, name: "partno", scope: !7472, file: !7456, line: 70, baseType: !6, size: 32, offset: 6048)
!7505 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !7472, file: !7456, line: 71, baseType: !7506, size: 64, offset: 6080)
!7506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7507, size: 64)
!7507 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "partition_meta_info", file: !7456, line: 48, size: 808, elements: !7508)
!7508 = !{!7509, !7511}
!7509 = !DIDerivedType(tag: DW_TAG_member, name: "uuid", scope: !7507, file: !7456, line: 49, baseType: !7510, size: 296)
!7510 = !DICompositeType(tag: DW_TAG_array_type, baseType: !28, size: 296, elements: !5374)
!7511 = !DIDerivedType(tag: DW_TAG_member, name: "volname", scope: !7507, file: !7456, line: 50, baseType: !7512, size: 512, offset: 296)
!7512 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1403, size: 512, elements: !90)
!7513 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_work", scope: !7472, file: !7456, line: 75, baseType: !7514, size: 448, offset: 6144)
!7514 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcu_work", file: !1729, line: 124, size: 448, elements: !7515)
!7515 = !{!7516, !7517, !7518}
!7516 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !7514, file: !1729, line: 125, baseType: !1728, size: 256)
!7517 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !7514, file: !1729, line: 126, baseType: !178, size: 128, align: 64, offset: 256)
!7518 = !DIDerivedType(tag: DW_TAG_member, name: "wq", scope: !7514, file: !1729, line: 129, baseType: !2578, size: 64, offset: 384)
!7519 = !DIDerivedType(tag: DW_TAG_member, name: "part", scope: !7466, file: !7456, line: 153, baseType: !7520, offset: 256)
!7520 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7471, elements: !2189)
!7521 = !DIDerivedType(tag: DW_TAG_member, name: "part0", scope: !7455, file: !7456, line: 187, baseType: !7472, size: 6592, offset: 448)
!7522 = !DIDerivedType(tag: DW_TAG_member, name: "fops", scope: !7455, file: !7456, line: 189, baseType: !7523, size: 64, offset: 7040)
!7523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7524, size: 64)
!7524 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7525)
!7525 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_device_operations", file: !7526, line: 1844, size: 960, elements: !7527)
!7526 = !DIFile(filename: "./include/linux/blkdev.h", directory: "/home/lizy2001/genbc/linux")
!7527 = !{!7528, !7533, !7628, !7632, !7636, !7640, !7641, !7645, !7649, !7653, !7659, !7663, !7689, !7694, !7695}
!7528 = !DIDerivedType(tag: DW_TAG_member, name: "submit_bio", scope: !7525, file: !7526, line: 1845, baseType: !7529, size: 64)
!7529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7530, size: 64)
!7530 = !DISubroutineType(types: !7531)
!7531 = !{!7532, !7448}
!7532 = !DIDerivedType(tag: DW_TAG_typedef, name: "blk_qc_t", file: !7450, line: 515, baseType: !199)
!7533 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !7525, file: !7526, line: 1846, baseType: !7534, size: 64, offset: 64)
!7534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7535, size: 64)
!7535 = !DISubroutineType(types: !7536)
!7536 = !{!6, !7537, !7627}
!7537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7538, size: 64)
!7538 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_device", file: !7450, line: 22, size: 1344, elements: !7539)
!7539 = !{!7540, !7541, !7542, !7543, !7544, !7545, !7546, !7547, !7548, !7549, !7550, !7551, !7552, !7553, !7554, !7555, !7556, !7625, !7626}
!7540 = !DIDerivedType(tag: DW_TAG_member, name: "bd_dev", scope: !7538, file: !7450, line: 23, baseType: !327, size: 32)
!7541 = !DIDerivedType(tag: DW_TAG_member, name: "bd_openers", scope: !7538, file: !7450, line: 24, baseType: !6, size: 32, offset: 32)
!7542 = !DIDerivedType(tag: DW_TAG_member, name: "bd_inode", scope: !7538, file: !7450, line: 25, baseType: !243, size: 64, offset: 64)
!7543 = !DIDerivedType(tag: DW_TAG_member, name: "bd_super", scope: !7538, file: !7450, line: 26, baseType: !413, size: 64, offset: 128)
!7544 = !DIDerivedType(tag: DW_TAG_member, name: "bd_mutex", scope: !7538, file: !7450, line: 27, baseType: !558, size: 192, offset: 192)
!7545 = !DIDerivedType(tag: DW_TAG_member, name: "bd_claiming", scope: !7538, file: !7450, line: 28, baseType: !159, size: 64, offset: 384)
!7546 = !DIDerivedType(tag: DW_TAG_member, name: "bd_holder", scope: !7538, file: !7450, line: 29, baseType: !159, size: 64, offset: 448)
!7547 = !DIDerivedType(tag: DW_TAG_member, name: "bd_holders", scope: !7538, file: !7450, line: 30, baseType: !6, size: 32, offset: 512)
!7548 = !DIDerivedType(tag: DW_TAG_member, name: "bd_write_holder", scope: !7538, file: !7450, line: 31, baseType: !304, size: 8, offset: 544)
!7549 = !DIDerivedType(tag: DW_TAG_member, name: "bd_holder_disks", scope: !7538, file: !7450, line: 33, baseType: !30, size: 128, offset: 576)
!7550 = !DIDerivedType(tag: DW_TAG_member, name: "bd_contains", scope: !7538, file: !7450, line: 35, baseType: !7537, size: 64, offset: 704)
!7551 = !DIDerivedType(tag: DW_TAG_member, name: "bd_partno", scope: !7538, file: !7450, line: 36, baseType: !1403, size: 8, offset: 768)
!7552 = !DIDerivedType(tag: DW_TAG_member, name: "bd_part", scope: !7538, file: !7450, line: 37, baseType: !7471, size: 64, offset: 832)
!7553 = !DIDerivedType(tag: DW_TAG_member, name: "bd_part_count", scope: !7538, file: !7450, line: 39, baseType: !199, size: 32, offset: 896)
!7554 = !DIDerivedType(tag: DW_TAG_member, name: "bd_size_lock", scope: !7538, file: !7450, line: 41, baseType: !44, offset: 928)
!7555 = !DIDerivedType(tag: DW_TAG_member, name: "bd_disk", scope: !7538, file: !7450, line: 42, baseType: !7454, size: 64, offset: 960)
!7556 = !DIDerivedType(tag: DW_TAG_member, name: "bd_bdi", scope: !7538, file: !7450, line: 43, baseType: !7557, size: 64, offset: 1024)
!7557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7558, size: 64)
!7558 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "backing_dev_info", file: !7559, line: 165, size: 4672, elements: !7560)
!7559 = !DIFile(filename: "./include/linux/backing-dev-defs.h", directory: "/home/lizy2001/genbc/linux")
!7560 = !{!7561, !7562, !7563, !7564, !7565, !7566, !7567, !7568, !7569, !7570, !7571, !7572, !7618, !7619, !7620, !7621, !7623, !7624}
!7561 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !7558, file: !7559, line: 166, baseType: !235, size: 64)
!7562 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !7558, file: !7559, line: 167, baseType: !645, size: 192, align: 64, offset: 64)
!7563 = !DIDerivedType(tag: DW_TAG_member, name: "bdi_list", scope: !7558, file: !7559, line: 168, baseType: !30, size: 128, offset: 256)
!7564 = !DIDerivedType(tag: DW_TAG_member, name: "ra_pages", scope: !7558, file: !7559, line: 169, baseType: !135, size: 64, offset: 384)
!7565 = !DIDerivedType(tag: DW_TAG_member, name: "io_pages", scope: !7558, file: !7559, line: 170, baseType: !135, size: 64, offset: 448)
!7566 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !7558, file: !7559, line: 172, baseType: !1556, size: 32, offset: 512)
!7567 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !7558, file: !7559, line: 173, baseType: !199, size: 32, offset: 544)
!7568 = !DIDerivedType(tag: DW_TAG_member, name: "min_ratio", scope: !7558, file: !7559, line: 174, baseType: !199, size: 32, offset: 576)
!7569 = !DIDerivedType(tag: DW_TAG_member, name: "max_ratio", scope: !7558, file: !7559, line: 175, baseType: !199, size: 32, offset: 608)
!7570 = !DIDerivedType(tag: DW_TAG_member, name: "max_prop_frac", scope: !7558, file: !7559, line: 175, baseType: !199, size: 32, offset: 640)
!7571 = !DIDerivedType(tag: DW_TAG_member, name: "tot_write_bandwidth", scope: !7558, file: !7559, line: 181, baseType: !562, size: 64, offset: 704)
!7572 = !DIDerivedType(tag: DW_TAG_member, name: "wb", scope: !7558, file: !7559, line: 183, baseType: !7573, size: 2688, offset: 768)
!7573 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bdi_writeback", file: !7559, line: 107, size: 2688, elements: !7574)
!7574 = !{!7575, !7576, !7577, !7578, !7579, !7580, !7581, !7582, !7583, !7585, !7586, !7587, !7588, !7589, !7590, !7591, !7592, !7593, !7600, !7601, !7613, !7614, !7615, !7616, !7617}
!7575 = !DIDerivedType(tag: DW_TAG_member, name: "bdi", scope: !7573, file: !7559, line: 108, baseType: !7557, size: 64)
!7576 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !7573, file: !7559, line: 110, baseType: !135, size: 64, offset: 64)
!7577 = !DIDerivedType(tag: DW_TAG_member, name: "last_old_flush", scope: !7573, file: !7559, line: 111, baseType: !135, size: 64, offset: 128)
!7578 = !DIDerivedType(tag: DW_TAG_member, name: "b_dirty", scope: !7573, file: !7559, line: 113, baseType: !30, size: 128, offset: 192)
!7579 = !DIDerivedType(tag: DW_TAG_member, name: "b_io", scope: !7573, file: !7559, line: 114, baseType: !30, size: 128, offset: 320)
!7580 = !DIDerivedType(tag: DW_TAG_member, name: "b_more_io", scope: !7573, file: !7559, line: 115, baseType: !30, size: 128, offset: 448)
!7581 = !DIDerivedType(tag: DW_TAG_member, name: "b_dirty_time", scope: !7573, file: !7559, line: 116, baseType: !30, size: 128, offset: 576)
!7582 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !7573, file: !7559, line: 117, baseType: !44, offset: 704)
!7583 = !DIDerivedType(tag: DW_TAG_member, name: "stat", scope: !7573, file: !7559, line: 119, baseType: !7584, size: 256, offset: 704)
!7584 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5157, size: 256, elements: !1212)
!7585 = !DIDerivedType(tag: DW_TAG_member, name: "congested", scope: !7573, file: !7559, line: 121, baseType: !135, size: 64, offset: 960)
!7586 = !DIDerivedType(tag: DW_TAG_member, name: "bw_time_stamp", scope: !7573, file: !7559, line: 123, baseType: !135, size: 64, offset: 1024)
!7587 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_stamp", scope: !7573, file: !7559, line: 124, baseType: !135, size: 64, offset: 1088)
!7588 = !DIDerivedType(tag: DW_TAG_member, name: "written_stamp", scope: !7573, file: !7559, line: 125, baseType: !135, size: 64, offset: 1152)
!7589 = !DIDerivedType(tag: DW_TAG_member, name: "write_bandwidth", scope: !7573, file: !7559, line: 126, baseType: !135, size: 64, offset: 1216)
!7590 = !DIDerivedType(tag: DW_TAG_member, name: "avg_write_bandwidth", scope: !7573, file: !7559, line: 127, baseType: !135, size: 64, offset: 1280)
!7591 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_ratelimit", scope: !7573, file: !7559, line: 135, baseType: !135, size: 64, offset: 1344)
!7592 = !DIDerivedType(tag: DW_TAG_member, name: "balanced_dirty_ratelimit", scope: !7573, file: !7559, line: 136, baseType: !135, size: 64, offset: 1408)
!7593 = !DIDerivedType(tag: DW_TAG_member, name: "completions", scope: !7573, file: !7559, line: 138, baseType: !7594, size: 128, offset: 1472)
!7594 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fprop_local_percpu", file: !7595, line: 76, size: 128, elements: !7596)
!7595 = !DIFile(filename: "./include/linux/flex_proportions.h", directory: "/home/lizy2001/genbc/linux")
!7596 = !{!7597, !7598, !7599}
!7597 = !DIDerivedType(tag: DW_TAG_member, name: "events", scope: !7594, file: !7595, line: 78, baseType: !5157, size: 64)
!7598 = !DIDerivedType(tag: DW_TAG_member, name: "period", scope: !7594, file: !7595, line: 80, baseType: !199, size: 32, offset: 64)
!7599 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !7594, file: !7595, line: 81, baseType: !658, offset: 96)
!7600 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_exceeded", scope: !7573, file: !7559, line: 139, baseType: !6, size: 32, offset: 1600)
!7601 = !DIDerivedType(tag: DW_TAG_member, name: "start_all_reason", scope: !7573, file: !7559, line: 140, baseType: !7602, size: 32, offset: 1632)
!7602 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "wb_reason", file: !7559, line: 49, baseType: !199, size: 32, elements: !7603)
!7603 = !{!7604, !7605, !7606, !7607, !7608, !7609, !7610, !7611, !7612}
!7604 = !DIEnumerator(name: "WB_REASON_BACKGROUND", value: 0, isUnsigned: true)
!7605 = !DIEnumerator(name: "WB_REASON_VMSCAN", value: 1, isUnsigned: true)
!7606 = !DIEnumerator(name: "WB_REASON_SYNC", value: 2, isUnsigned: true)
!7607 = !DIEnumerator(name: "WB_REASON_PERIODIC", value: 3, isUnsigned: true)
!7608 = !DIEnumerator(name: "WB_REASON_LAPTOP_TIMER", value: 4, isUnsigned: true)
!7609 = !DIEnumerator(name: "WB_REASON_FS_FREE_SPACE", value: 5, isUnsigned: true)
!7610 = !DIEnumerator(name: "WB_REASON_FORKER_THREAD", value: 6, isUnsigned: true)
!7611 = !DIEnumerator(name: "WB_REASON_FOREIGN_FLUSH", value: 7, isUnsigned: true)
!7612 = !DIEnumerator(name: "WB_REASON_MAX", value: 8, isUnsigned: true)
!7613 = !DIDerivedType(tag: DW_TAG_member, name: "work_lock", scope: !7573, file: !7559, line: 142, baseType: !44, offset: 1664)
!7614 = !DIDerivedType(tag: DW_TAG_member, name: "work_list", scope: !7573, file: !7559, line: 143, baseType: !30, size: 128, offset: 1664)
!7615 = !DIDerivedType(tag: DW_TAG_member, name: "dwork", scope: !7573, file: !7559, line: 144, baseType: !2562, size: 704, offset: 1792)
!7616 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_sleep", scope: !7573, file: !7559, line: 146, baseType: !135, size: 64, offset: 2496)
!7617 = !DIDerivedType(tag: DW_TAG_member, name: "bdi_node", scope: !7573, file: !7559, line: 148, baseType: !30, size: 128, offset: 2560)
!7618 = !DIDerivedType(tag: DW_TAG_member, name: "wb_list", scope: !7558, file: !7559, line: 184, baseType: !30, size: 128, offset: 3456)
!7619 = !DIDerivedType(tag: DW_TAG_member, name: "wb_waitq", scope: !7558, file: !7559, line: 190, baseType: !812, size: 128, offset: 3584)
!7620 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !7558, file: !7559, line: 192, baseType: !17, size: 64, offset: 3712)
!7621 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name", scope: !7558, file: !7559, line: 193, baseType: !7622, size: 512, offset: 3776)
!7622 = !DICompositeType(tag: DW_TAG_array_type, baseType: !28, size: 512, elements: !90)
!7623 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !7558, file: !7559, line: 194, baseType: !17, size: 64, offset: 4288)
!7624 = !DIDerivedType(tag: DW_TAG_member, name: "laptop_mode_wb_timer", scope: !7558, file: !7559, line: 196, baseType: !2566, size: 320, offset: 4352)
!7625 = !DIDerivedType(tag: DW_TAG_member, name: "bd_fsfreeze_count", scope: !7538, file: !7450, line: 46, baseType: !6, size: 32, offset: 1088)
!7626 = !DIDerivedType(tag: DW_TAG_member, name: "bd_fsfreeze_mutex", scope: !7538, file: !7450, line: 48, baseType: !558, size: 192, offset: 1152)
!7627 = !DIDerivedType(tag: DW_TAG_typedef, name: "fmode_t", file: !31, line: 150, baseType: !199)
!7628 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !7525, file: !7526, line: 1847, baseType: !7629, size: 64, offset: 128)
!7629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7630, size: 64)
!7630 = !DISubroutineType(types: !7631)
!7631 = !{null, !7454, !7627}
!7632 = !DIDerivedType(tag: DW_TAG_member, name: "rw_page", scope: !7525, file: !7526, line: 1848, baseType: !7633, size: 64, offset: 192)
!7633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7634, size: 64)
!7634 = !DISubroutineType(types: !7635)
!7635 = !{!6, !7537, !715, !605, !199}
!7636 = !DIDerivedType(tag: DW_TAG_member, name: "ioctl", scope: !7525, file: !7526, line: 1849, baseType: !7637, size: 64, offset: 256)
!7637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7638, size: 64)
!7638 = !DISubroutineType(types: !7639)
!7639 = !{!6, !7537, !7627, !199, !135}
!7640 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !7525, file: !7526, line: 1850, baseType: !7637, size: 64, offset: 320)
!7641 = !DIDerivedType(tag: DW_TAG_member, name: "check_events", scope: !7525, file: !7526, line: 1851, baseType: !7642, size: 64, offset: 384)
!7642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7643, size: 64)
!7643 = !DISubroutineType(types: !7644)
!7644 = !{!199, !7454, !199}
!7645 = !DIDerivedType(tag: DW_TAG_member, name: "unlock_native_capacity", scope: !7525, file: !7526, line: 1853, baseType: !7646, size: 64, offset: 448)
!7646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7647, size: 64)
!7647 = !DISubroutineType(types: !7648)
!7648 = !{null, !7454}
!7649 = !DIDerivedType(tag: DW_TAG_member, name: "revalidate_disk", scope: !7525, file: !7526, line: 1854, baseType: !7650, size: 64, offset: 512)
!7650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7651, size: 64)
!7651 = !DISubroutineType(types: !7652)
!7652 = !{!6, !7454}
!7653 = !DIDerivedType(tag: DW_TAG_member, name: "getgeo", scope: !7525, file: !7526, line: 1855, baseType: !7654, size: 64, offset: 576)
!7654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7655, size: 64)
!7655 = !DISubroutineType(types: !7656)
!7656 = !{!6, !7537, !7657}
!7657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7658, size: 64)
!7658 = !DICompositeType(tag: DW_TAG_structure_type, name: "hd_geometry", file: !166, line: 51, flags: DIFlagFwdDecl)
!7659 = !DIDerivedType(tag: DW_TAG_member, name: "swap_slot_free_notify", scope: !7525, file: !7526, line: 1857, baseType: !7660, size: 64, offset: 640)
!7660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7661, size: 64)
!7661 = !DISubroutineType(types: !7662)
!7662 = !{null, !7537, !135}
!7663 = !DIDerivedType(tag: DW_TAG_member, name: "report_zones", scope: !7525, file: !7526, line: 1858, baseType: !7664, size: 64, offset: 704)
!7664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7665, size: 64)
!7665 = !DISubroutineType(types: !7666)
!7666 = !{!6, !7454, !715, !199, !7667, !159}
!7667 = !DIDerivedType(tag: DW_TAG_typedef, name: "report_zones_cb", file: !7526, line: 354, baseType: !7668)
!7668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7669, size: 64)
!7669 = !DISubroutineType(types: !7670)
!7670 = !{!6, !7671, !199, !159}
!7671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7672, size: 64)
!7672 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_zone", file: !7673, line: 106, size: 512, elements: !7674)
!7673 = !DIFile(filename: "./include/uapi/linux/blkzoned.h", directory: "/home/lizy2001/genbc/linux")
!7674 = !{!7675, !7676, !7677, !7678, !7679, !7680, !7681, !7682, !7684, !7685}
!7675 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !7672, file: !7673, line: 107, baseType: !236, size: 64)
!7676 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !7672, file: !7673, line: 108, baseType: !236, size: 64, offset: 64)
!7677 = !DIDerivedType(tag: DW_TAG_member, name: "wp", scope: !7672, file: !7673, line: 109, baseType: !236, size: 64, offset: 128)
!7678 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !7672, file: !7673, line: 110, baseType: !1404, size: 8, offset: 192)
!7679 = !DIDerivedType(tag: DW_TAG_member, name: "cond", scope: !7672, file: !7673, line: 111, baseType: !1404, size: 8, offset: 200)
!7680 = !DIDerivedType(tag: DW_TAG_member, name: "non_seq", scope: !7672, file: !7673, line: 112, baseType: !1404, size: 8, offset: 208)
!7681 = !DIDerivedType(tag: DW_TAG_member, name: "reset", scope: !7672, file: !7673, line: 113, baseType: !1404, size: 8, offset: 216)
!7682 = !DIDerivedType(tag: DW_TAG_member, name: "resv", scope: !7672, file: !7673, line: 114, baseType: !7683, size: 32, offset: 224)
!7683 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1404, size: 32, elements: !1212)
!7684 = !DIDerivedType(tag: DW_TAG_member, name: "capacity", scope: !7672, file: !7673, line: 115, baseType: !236, size: 64, offset: 256)
!7685 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !7672, file: !7673, line: 116, baseType: !7686, size: 192, offset: 320)
!7686 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1404, size: 192, elements: !7687)
!7687 = !{!7688}
!7688 = !DISubrange(count: 24)
!7689 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !7525, file: !7526, line: 1860, baseType: !7690, size: 64, offset: 768)
!7690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7691, size: 64)
!7691 = !DISubroutineType(types: !7692)
!7692 = !{!85, !7454, !7693}
!7693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !126, size: 64)
!7694 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !7525, file: !7526, line: 1861, baseType: !446, size: 64, offset: 832)
!7695 = !DIDerivedType(tag: DW_TAG_member, name: "pr_ops", scope: !7525, file: !7526, line: 1862, baseType: !7696, size: 64, offset: 896)
!7696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7697, size: 64)
!7697 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7698)
!7698 = !DICompositeType(tag: DW_TAG_structure_type, name: "pr_ops", file: !7526, line: 41, flags: DIFlagFwdDecl)
!7699 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !7455, file: !7456, line: 190, baseType: !7700, size: 64, offset: 7104)
!7700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7701, size: 64)
!7701 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "request_queue", file: !7526, line: 399, size: 14464, elements: !7702)
!7702 = !{!7703, !7838, !7967, !7968, !7971, !7974, !7978, !7979, !7980, !7982, !7983, !7984, !7985, !7986, !7987, !7988, !7989, !7990, !7991, !7992, !8028, !8029, !8037, !8038, !8039, !8040, !8041, !8042, !8043, !8046, !8055, !8056, !8057, !8058, !8059, !8094, !8095, !8096, !8097, !8098, !8099, !8102, !8103, !8104, !8105, !8106, !8107, !8108, !8109, !8110, !8172, !8173, !8174, !8175, !8178, !8179, !8212, !8213, !8214, !8215}
!7703 = !DIDerivedType(tag: DW_TAG_member, name: "last_merge", scope: !7701, file: !7526, line: 400, baseType: !7704, size: 64)
!7704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7705, size: 64)
!7705 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "request", file: !7526, line: 130, size: 2176, elements: !7706)
!7706 = !{!7707, !7708, !7711, !7714, !7715, !7717, !7718, !7719, !7720, !7721, !7722, !7723, !7724, !7729, !7736, !7785, !7786, !7787, !7788, !7789, !7790, !7791, !7792, !7793, !7794, !7800, !7801, !7802, !7803, !7836, !7837}
!7707 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !7705, file: !7526, line: 131, baseType: !7700, size: 64)
!7708 = !DIDerivedType(tag: DW_TAG_member, name: "mq_ctx", scope: !7705, file: !7526, line: 132, baseType: !7709, size: 64, offset: 64)
!7709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7710, size: 64)
!7710 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_ctx", file: !7526, line: 132, flags: DIFlagFwdDecl)
!7711 = !DIDerivedType(tag: DW_TAG_member, name: "mq_hctx", scope: !7705, file: !7526, line: 133, baseType: !7712, size: 64, offset: 128)
!7712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7713, size: 64)
!7713 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_hw_ctx", file: !7526, line: 133, flags: DIFlagFwdDecl)
!7714 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_flags", scope: !7705, file: !7526, line: 135, baseType: !199, size: 32, offset: 192)
!7715 = !DIDerivedType(tag: DW_TAG_member, name: "rq_flags", scope: !7705, file: !7526, line: 136, baseType: !7716, size: 32, offset: 224)
!7716 = !DIDerivedType(tag: DW_TAG_typedef, name: "req_flags_t", file: !7526, line: 66, baseType: !231)
!7717 = !DIDerivedType(tag: DW_TAG_member, name: "tag", scope: !7705, file: !7526, line: 138, baseType: !6, size: 32, offset: 256)
!7718 = !DIDerivedType(tag: DW_TAG_member, name: "internal_tag", scope: !7705, file: !7526, line: 139, baseType: !6, size: 32, offset: 288)
!7719 = !DIDerivedType(tag: DW_TAG_member, name: "__data_len", scope: !7705, file: !7526, line: 142, baseType: !199, size: 32, offset: 320)
!7720 = !DIDerivedType(tag: DW_TAG_member, name: "__sector", scope: !7705, file: !7526, line: 143, baseType: !715, size: 64, offset: 384)
!7721 = !DIDerivedType(tag: DW_TAG_member, name: "bio", scope: !7705, file: !7526, line: 145, baseType: !7448, size: 64, offset: 448)
!7722 = !DIDerivedType(tag: DW_TAG_member, name: "biotail", scope: !7705, file: !7526, line: 146, baseType: !7448, size: 64, offset: 512)
!7723 = !DIDerivedType(tag: DW_TAG_member, name: "queuelist", scope: !7705, file: !7526, line: 148, baseType: !30, size: 128, offset: 576)
!7724 = !DIDerivedType(tag: DW_TAG_member, scope: !7705, file: !7526, line: 157, baseType: !7725, size: 128, offset: 704)
!7725 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7705, file: !7526, line: 157, size: 128, elements: !7726)
!7726 = !{!7727, !7728}
!7727 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !7725, file: !7526, line: 158, baseType: !455, size: 128)
!7728 = !DIDerivedType(tag: DW_TAG_member, name: "ipi_list", scope: !7725, file: !7526, line: 159, baseType: !30, size: 128)
!7729 = !DIDerivedType(tag: DW_TAG_member, scope: !7705, file: !7526, line: 167, baseType: !7730, size: 192, offset: 832)
!7730 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7705, file: !7526, line: 167, size: 192, elements: !7731)
!7731 = !{!7732, !7733, !7734, !7735}
!7732 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !7730, file: !7526, line: 168, baseType: !645, size: 192, align: 64)
!7733 = !DIDerivedType(tag: DW_TAG_member, name: "special_vec", scope: !7730, file: !7526, line: 169, baseType: !799, size: 128)
!7734 = !DIDerivedType(tag: DW_TAG_member, name: "completion_data", scope: !7730, file: !7526, line: 170, baseType: !159, size: 64)
!7735 = !DIDerivedType(tag: DW_TAG_member, name: "error_count", scope: !7730, file: !7526, line: 171, baseType: !6, size: 32)
!7736 = !DIDerivedType(tag: DW_TAG_member, scope: !7705, file: !7526, line: 180, baseType: !7737, size: 256, offset: 1024)
!7737 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7705, file: !7526, line: 180, size: 256, elements: !7738)
!7738 = !{!7739, !7774}
!7739 = !DIDerivedType(tag: DW_TAG_member, name: "elv", scope: !7737, file: !7526, line: 184, baseType: !7740, size: 192)
!7740 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7737, file: !7526, line: 181, size: 192, elements: !7741)
!7741 = !{!7742, !7772}
!7742 = !DIDerivedType(tag: DW_TAG_member, name: "icq", scope: !7740, file: !7526, line: 182, baseType: !7743, size: 64)
!7743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7744, size: 64)
!7744 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_cq", file: !7745, line: 73, size: 448, elements: !7746)
!7745 = !DIFile(filename: "./include/linux/iocontext.h", directory: "/home/lizy2001/genbc/linux")
!7746 = !{!7747, !7748, !7761, !7766, !7771}
!7747 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !7744, file: !7745, line: 74, baseType: !7700, size: 64)
!7748 = !DIDerivedType(tag: DW_TAG_member, name: "ioc", scope: !7744, file: !7745, line: 75, baseType: !7749, size: 64, offset: 64)
!7749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7750, size: 64)
!7750 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_context", file: !7745, line: 99, size: 704, elements: !7751)
!7751 = !{!7752, !7753, !7754, !7755, !7756, !7757, !7758, !7759, !7760}
!7752 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !7750, file: !7745, line: 100, baseType: !562, size: 64)
!7753 = !DIDerivedType(tag: DW_TAG_member, name: "active_ref", scope: !7750, file: !7745, line: 101, baseType: !632, size: 32, offset: 64)
!7754 = !DIDerivedType(tag: DW_TAG_member, name: "nr_tasks", scope: !7750, file: !7745, line: 102, baseType: !632, size: 32, offset: 96)
!7755 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !7750, file: !7745, line: 105, baseType: !44, offset: 128)
!7756 = !DIDerivedType(tag: DW_TAG_member, name: "ioprio", scope: !7750, file: !7745, line: 107, baseType: !127, size: 16, offset: 128)
!7757 = !DIDerivedType(tag: DW_TAG_member, name: "icq_tree", scope: !7750, file: !7745, line: 109, baseType: !623, size: 128, offset: 192)
!7758 = !DIDerivedType(tag: DW_TAG_member, name: "icq_hint", scope: !7750, file: !7745, line: 110, baseType: !7743, size: 64, offset: 320)
!7759 = !DIDerivedType(tag: DW_TAG_member, name: "icq_list", scope: !7750, file: !7745, line: 111, baseType: !451, size: 64, offset: 384)
!7760 = !DIDerivedType(tag: DW_TAG_member, name: "release_work", scope: !7750, file: !7745, line: 113, baseType: !1728, size: 256, offset: 448)
!7761 = !DIDerivedType(tag: DW_TAG_member, scope: !7744, file: !7745, line: 83, baseType: !7762, size: 128, offset: 128)
!7762 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7744, file: !7745, line: 83, size: 128, elements: !7763)
!7763 = !{!7764, !7765}
!7764 = !DIDerivedType(tag: DW_TAG_member, name: "q_node", scope: !7762, file: !7745, line: 84, baseType: !30, size: 128)
!7765 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_icq_cache", scope: !7762, file: !7745, line: 85, baseType: !985, size: 64)
!7766 = !DIDerivedType(tag: DW_TAG_member, scope: !7744, file: !7745, line: 87, baseType: !7767, size: 128, offset: 256)
!7767 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7744, file: !7745, line: 87, size: 128, elements: !7768)
!7768 = !{!7769, !7770}
!7769 = !DIDerivedType(tag: DW_TAG_member, name: "ioc_node", scope: !7767, file: !7745, line: 88, baseType: !455, size: 128)
!7770 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_head", scope: !7767, file: !7745, line: 89, baseType: !178, size: 128, align: 64)
!7771 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !7744, file: !7745, line: 92, baseType: !199, size: 32, offset: 384)
!7772 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !7740, file: !7526, line: 183, baseType: !7773, size: 128, offset: 64)
!7773 = !DICompositeType(tag: DW_TAG_array_type, baseType: !159, size: 128, elements: !1911)
!7774 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !7737, file: !7526, line: 190, baseType: !7775, size: 256)
!7775 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7737, file: !7526, line: 186, size: 256, elements: !7776)
!7776 = !{!7777, !7778, !7779}
!7777 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !7775, file: !7526, line: 187, baseType: !199, size: 32)
!7778 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !7775, file: !7526, line: 188, baseType: !30, size: 128, offset: 64)
!7779 = !DIDerivedType(tag: DW_TAG_member, name: "saved_end_io", scope: !7775, file: !7526, line: 189, baseType: !7780, size: 64, offset: 192)
!7780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7781, size: 64)
!7781 = !DIDerivedType(tag: DW_TAG_typedef, name: "rq_end_io_fn", file: !7526, line: 62, baseType: !7782)
!7782 = !DISubroutineType(types: !7783)
!7783 = !{null, !7704, !7784}
!7784 = !DIDerivedType(tag: DW_TAG_typedef, name: "blk_status_t", file: !7450, line: 58, baseType: !1403)
!7785 = !DIDerivedType(tag: DW_TAG_member, name: "rq_disk", scope: !7705, file: !7526, line: 193, baseType: !7454, size: 64, offset: 1280)
!7786 = !DIDerivedType(tag: DW_TAG_member, name: "part", scope: !7705, file: !7526, line: 194, baseType: !7471, size: 64, offset: 1344)
!7787 = !DIDerivedType(tag: DW_TAG_member, name: "start_time_ns", scope: !7705, file: !7526, line: 200, baseType: !235, size: 64, offset: 1408)
!7788 = !DIDerivedType(tag: DW_TAG_member, name: "io_start_time_ns", scope: !7705, file: !7526, line: 202, baseType: !235, size: 64, offset: 1472)
!7789 = !DIDerivedType(tag: DW_TAG_member, name: "stats_sectors", scope: !7705, file: !7526, line: 212, baseType: !127, size: 16, offset: 1536)
!7790 = !DIDerivedType(tag: DW_TAG_member, name: "nr_phys_segments", scope: !7705, file: !7526, line: 218, baseType: !127, size: 16, offset: 1552)
!7791 = !DIDerivedType(tag: DW_TAG_member, name: "nr_integrity_segments", scope: !7705, file: !7526, line: 221, baseType: !127, size: 16, offset: 1568)
!7792 = !DIDerivedType(tag: DW_TAG_member, name: "write_hint", scope: !7705, file: !7526, line: 229, baseType: !127, size: 16, offset: 1584)
!7793 = !DIDerivedType(tag: DW_TAG_member, name: "ioprio", scope: !7705, file: !7526, line: 230, baseType: !127, size: 16, offset: 1600)
!7794 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !7705, file: !7526, line: 232, baseType: !7795, size: 32, offset: 1632)
!7795 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mq_rq_state", file: !7526, line: 118, baseType: !199, size: 32, elements: !7796)
!7796 = !{!7797, !7798, !7799}
!7797 = !DIEnumerator(name: "MQ_RQ_IDLE", value: 0, isUnsigned: true)
!7798 = !DIEnumerator(name: "MQ_RQ_IN_FLIGHT", value: 1, isUnsigned: true)
!7799 = !DIEnumerator(name: "MQ_RQ_COMPLETE", value: 2, isUnsigned: true)
!7800 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !7705, file: !7526, line: 233, baseType: !880, size: 32, offset: 1664)
!7801 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !7705, file: !7526, line: 235, baseType: !199, size: 32, offset: 1696)
!7802 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", scope: !7705, file: !7526, line: 236, baseType: !135, size: 64, offset: 1728)
!7803 = !DIDerivedType(tag: DW_TAG_member, scope: !7705, file: !7526, line: 238, baseType: !7804, size: 256, offset: 1792)
!7804 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7705, file: !7526, line: 238, size: 256, elements: !7805)
!7805 = !{!7806, !7835}
!7806 = !DIDerivedType(tag: DW_TAG_member, name: "csd", scope: !7804, file: !7526, line: 239, baseType: !7807, size: 256)
!7807 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__call_single_data", file: !7808, line: 23, size: 256, elements: !7809)
!7808 = !DIFile(filename: "./include/linux/smp.h", directory: "/home/lizy2001/genbc/linux")
!7809 = !{!7810, !7832, !7834}
!7810 = !DIDerivedType(tag: DW_TAG_member, scope: !7807, file: !7808, line: 24, baseType: !7811, size: 128)
!7811 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7807, file: !7808, line: 24, size: 128, elements: !7812)
!7812 = !{!7813, !7825}
!7813 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !7811, file: !7808, line: 25, baseType: !7814, size: 128)
!7814 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__call_single_node", file: !7815, line: 58, size: 128, elements: !7816)
!7815 = !DIFile(filename: "./include/linux/smp_types.h", directory: "/home/lizy2001/genbc/linux")
!7816 = !{!7817, !7818, !7823, !7824}
!7817 = !DIDerivedType(tag: DW_TAG_member, name: "llist", scope: !7814, file: !7815, line: 59, baseType: !172, size: 64)
!7818 = !DIDerivedType(tag: DW_TAG_member, scope: !7814, file: !7815, line: 60, baseType: !7819, size: 32, offset: 64)
!7819 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7814, file: !7815, line: 60, size: 32, elements: !7820)
!7820 = !{!7821, !7822}
!7821 = !DIDerivedType(tag: DW_TAG_member, name: "u_flags", scope: !7819, file: !7815, line: 61, baseType: !199, size: 32)
!7822 = !DIDerivedType(tag: DW_TAG_member, name: "a_flags", scope: !7819, file: !7815, line: 62, baseType: !632, size: 32)
!7823 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !7814, file: !7815, line: 65, baseType: !744, size: 16, offset: 96)
!7824 = !DIDerivedType(tag: DW_TAG_member, name: "dst", scope: !7814, file: !7815, line: 65, baseType: !744, size: 16, offset: 112)
!7825 = !DIDerivedType(tag: DW_TAG_member, scope: !7811, file: !7808, line: 26, baseType: !7826, size: 128)
!7826 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7811, file: !7808, line: 26, size: 128, elements: !7827)
!7827 = !{!7828, !7829, !7830, !7831}
!7828 = !DIDerivedType(tag: DW_TAG_member, name: "llist", scope: !7826, file: !7808, line: 27, baseType: !172, size: 64)
!7829 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !7826, file: !7808, line: 28, baseType: !199, size: 32, offset: 64)
!7830 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !7826, file: !7808, line: 30, baseType: !744, size: 16, offset: 96)
!7831 = !DIDerivedType(tag: DW_TAG_member, name: "dst", scope: !7826, file: !7808, line: 30, baseType: !744, size: 16, offset: 112)
!7832 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !7807, file: !7808, line: 34, baseType: !7833, size: 64, offset: 128)
!7833 = !DIDerivedType(tag: DW_TAG_typedef, name: "smp_call_func_t", file: !7808, line: 17, baseType: !282)
!7834 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !7807, file: !7808, line: 35, baseType: !159, size: 64, offset: 192)
!7835 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_time", scope: !7804, file: !7526, line: 240, baseType: !235, size: 64)
!7836 = !DIDerivedType(tag: DW_TAG_member, name: "end_io", scope: !7705, file: !7526, line: 246, baseType: !7780, size: 64, offset: 2048)
!7837 = !DIDerivedType(tag: DW_TAG_member, name: "end_io_data", scope: !7705, file: !7526, line: 247, baseType: !159, size: 64, offset: 2112)
!7838 = !DIDerivedType(tag: DW_TAG_member, name: "elevator", scope: !7701, file: !7526, line: 401, baseType: !7839, size: 64, offset: 64)
!7839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7840, size: 64)
!7840 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elevator_queue", file: !7841, line: 101, size: 4992, elements: !7842)
!7841 = !DIFile(filename: "./include/linux/elevator.h", directory: "/home/lizy2001/genbc/linux")
!7842 = !{!7843, !7961, !7962, !7963, !7964, !7965}
!7843 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !7840, file: !7841, line: 103, baseType: !7844, size: 64)
!7844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7845, size: 64)
!7845 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elevator_type", file: !7841, line: 66, size: 2240, elements: !7846)
!7846 = !{!7847, !7848, !7936, !7937, !7938, !7951, !7952, !7953, !7955, !7956, !7960}
!7847 = !DIDerivedType(tag: DW_TAG_member, name: "icq_cache", scope: !7845, file: !7841, line: 69, baseType: !985, size: 64)
!7848 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !7845, file: !7841, line: 72, baseType: !7849, size: 1408, offset: 64)
!7849 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elevator_mq_ops", file: !7841, line: 29, size: 1408, elements: !7850)
!7850 = !{!7851, !7855, !7859, !7863, !7867, !7871, !7875, !7879, !7884, !7894, !7898, !7904, !7908, !7909, !7913, !7917, !7921, !7925, !7926, !7930, !7931, !7935}
!7851 = !DIDerivedType(tag: DW_TAG_member, name: "init_sched", scope: !7849, file: !7841, line: 30, baseType: !7852, size: 64)
!7852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7853, size: 64)
!7853 = !DISubroutineType(types: !7854)
!7854 = !{!6, !7700, !7844}
!7855 = !DIDerivedType(tag: DW_TAG_member, name: "exit_sched", scope: !7849, file: !7841, line: 31, baseType: !7856, size: 64, offset: 64)
!7856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7857, size: 64)
!7857 = !DISubroutineType(types: !7858)
!7858 = !{null, !7839}
!7859 = !DIDerivedType(tag: DW_TAG_member, name: "init_hctx", scope: !7849, file: !7841, line: 32, baseType: !7860, size: 64, offset: 128)
!7860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7861, size: 64)
!7861 = !DISubroutineType(types: !7862)
!7862 = !{!6, !7712, !199}
!7863 = !DIDerivedType(tag: DW_TAG_member, name: "exit_hctx", scope: !7849, file: !7841, line: 33, baseType: !7864, size: 64, offset: 192)
!7864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7865, size: 64)
!7865 = !DISubroutineType(types: !7866)
!7866 = !{null, !7712, !199}
!7867 = !DIDerivedType(tag: DW_TAG_member, name: "depth_updated", scope: !7849, file: !7841, line: 34, baseType: !7868, size: 64, offset: 256)
!7868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7869, size: 64)
!7869 = !DISubroutineType(types: !7870)
!7870 = !{null, !7712}
!7871 = !DIDerivedType(tag: DW_TAG_member, name: "allow_merge", scope: !7849, file: !7841, line: 36, baseType: !7872, size: 64, offset: 320)
!7872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7873, size: 64)
!7873 = !DISubroutineType(types: !7874)
!7874 = !{!304, !7700, !7704, !7448}
!7875 = !DIDerivedType(tag: DW_TAG_member, name: "bio_merge", scope: !7849, file: !7841, line: 37, baseType: !7876, size: 64, offset: 384)
!7876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7877, size: 64)
!7877 = !DISubroutineType(types: !7878)
!7878 = !{!304, !7712, !7448, !199}
!7879 = !DIDerivedType(tag: DW_TAG_member, name: "request_merge", scope: !7849, file: !7841, line: 38, baseType: !7880, size: 64, offset: 448)
!7880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7881, size: 64)
!7881 = !DISubroutineType(types: !7882)
!7882 = !{!6, !7700, !7883, !7448}
!7883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7704, size: 64)
!7884 = !DIDerivedType(tag: DW_TAG_member, name: "request_merged", scope: !7849, file: !7841, line: 39, baseType: !7885, size: 64, offset: 512)
!7885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7886, size: 64)
!7886 = !DISubroutineType(types: !7887)
!7887 = !{null, !7700, !7704, !7888}
!7888 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "elv_merge", file: !7841, line: 19, baseType: !199, size: 32, elements: !7889)
!7889 = !{!7890, !7891, !7892, !7893}
!7890 = !DIEnumerator(name: "ELEVATOR_NO_MERGE", value: 0, isUnsigned: true)
!7891 = !DIEnumerator(name: "ELEVATOR_FRONT_MERGE", value: 1, isUnsigned: true)
!7892 = !DIEnumerator(name: "ELEVATOR_BACK_MERGE", value: 2, isUnsigned: true)
!7893 = !DIEnumerator(name: "ELEVATOR_DISCARD_MERGE", value: 3, isUnsigned: true)
!7894 = !DIDerivedType(tag: DW_TAG_member, name: "requests_merged", scope: !7849, file: !7841, line: 40, baseType: !7895, size: 64, offset: 576)
!7895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7896, size: 64)
!7896 = !DISubroutineType(types: !7897)
!7897 = !{null, !7700, !7704, !7704}
!7898 = !DIDerivedType(tag: DW_TAG_member, name: "limit_depth", scope: !7849, file: !7841, line: 41, baseType: !7899, size: 64, offset: 640)
!7899 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7900, size: 64)
!7900 = !DISubroutineType(types: !7901)
!7901 = !{null, !199, !7902}
!7902 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7903, size: 64)
!7903 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_alloc_data", file: !7841, line: 26, flags: DIFlagFwdDecl)
!7904 = !DIDerivedType(tag: DW_TAG_member, name: "prepare_request", scope: !7849, file: !7841, line: 42, baseType: !7905, size: 64, offset: 704)
!7905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7906, size: 64)
!7906 = !DISubroutineType(types: !7907)
!7907 = !{null, !7704}
!7908 = !DIDerivedType(tag: DW_TAG_member, name: "finish_request", scope: !7849, file: !7841, line: 43, baseType: !7905, size: 64, offset: 768)
!7909 = !DIDerivedType(tag: DW_TAG_member, name: "insert_requests", scope: !7849, file: !7841, line: 44, baseType: !7910, size: 64, offset: 832)
!7910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7911, size: 64)
!7911 = !DISubroutineType(types: !7912)
!7912 = !{null, !7712, !34, !304}
!7913 = !DIDerivedType(tag: DW_TAG_member, name: "dispatch_request", scope: !7849, file: !7841, line: 45, baseType: !7914, size: 64, offset: 896)
!7914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7915, size: 64)
!7915 = !DISubroutineType(types: !7916)
!7916 = !{!7704, !7712}
!7917 = !DIDerivedType(tag: DW_TAG_member, name: "has_work", scope: !7849, file: !7841, line: 46, baseType: !7918, size: 64, offset: 960)
!7918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7919, size: 64)
!7919 = !DISubroutineType(types: !7920)
!7920 = !{!304, !7712}
!7921 = !DIDerivedType(tag: DW_TAG_member, name: "completed_request", scope: !7849, file: !7841, line: 47, baseType: !7922, size: 64, offset: 1024)
!7922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7923, size: 64)
!7923 = !DISubroutineType(types: !7924)
!7924 = !{null, !7704, !235}
!7925 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_request", scope: !7849, file: !7841, line: 48, baseType: !7905, size: 64, offset: 1088)
!7926 = !DIDerivedType(tag: DW_TAG_member, name: "former_request", scope: !7849, file: !7841, line: 49, baseType: !7927, size: 64, offset: 1152)
!7927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7928, size: 64)
!7928 = !DISubroutineType(types: !7929)
!7929 = !{!7704, !7700, !7704}
!7930 = !DIDerivedType(tag: DW_TAG_member, name: "next_request", scope: !7849, file: !7841, line: 50, baseType: !7927, size: 64, offset: 1216)
!7931 = !DIDerivedType(tag: DW_TAG_member, name: "init_icq", scope: !7849, file: !7841, line: 51, baseType: !7932, size: 64, offset: 1280)
!7932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7933, size: 64)
!7933 = !DISubroutineType(types: !7934)
!7934 = !{null, !7743}
!7935 = !DIDerivedType(tag: DW_TAG_member, name: "exit_icq", scope: !7849, file: !7841, line: 52, baseType: !7932, size: 64, offset: 1344)
!7936 = !DIDerivedType(tag: DW_TAG_member, name: "icq_size", scope: !7845, file: !7841, line: 74, baseType: !132, size: 64, offset: 1472)
!7937 = !DIDerivedType(tag: DW_TAG_member, name: "icq_align", scope: !7845, file: !7841, line: 75, baseType: !132, size: 64, offset: 1536)
!7938 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_attrs", scope: !7845, file: !7841, line: 76, baseType: !7939, size: 64, offset: 1600)
!7939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7940, size: 64)
!7940 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elv_fs_entry", file: !7841, line: 57, size: 256, elements: !7941)
!7941 = !{!7942, !7943, !7947}
!7942 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !7940, file: !7841, line: 58, baseType: !122, size: 128)
!7943 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !7940, file: !7841, line: 59, baseType: !7944, size: 64, offset: 128)
!7944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7945, size: 64)
!7945 = !DISubroutineType(types: !7946)
!7946 = !{!116, !7839, !85}
!7947 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !7940, file: !7841, line: 60, baseType: !7948, size: 64, offset: 192)
!7948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7949, size: 64)
!7949 = !DISubroutineType(types: !7950)
!7950 = !{!116, !7839, !26, !132}
!7951 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_name", scope: !7845, file: !7841, line: 77, baseType: !26, size: 64, offset: 1664)
!7952 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_alias", scope: !7845, file: !7841, line: 78, baseType: !26, size: 64, offset: 1728)
!7953 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_features", scope: !7845, file: !7841, line: 79, baseType: !7954, size: 32, offset: 1792)
!7954 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !199)
!7955 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_owner", scope: !7845, file: !7841, line: 80, baseType: !446, size: 64, offset: 1856)
!7956 = !DIDerivedType(tag: DW_TAG_member, name: "icq_cache_name", scope: !7845, file: !7841, line: 87, baseType: !7957, size: 176, offset: 1920)
!7957 = !DICompositeType(tag: DW_TAG_array_type, baseType: !28, size: 176, elements: !7958)
!7958 = !{!7959}
!7959 = !DISubrange(count: 22)
!7960 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !7845, file: !7841, line: 88, baseType: !30, size: 128, offset: 2112)
!7961 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_data", scope: !7840, file: !7841, line: 104, baseType: !159, size: 64, offset: 64)
!7962 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !7840, file: !7841, line: 105, baseType: !22, size: 512, offset: 128)
!7963 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_lock", scope: !7840, file: !7841, line: 106, baseType: !558, size: 192, offset: 640)
!7964 = !DIDerivedType(tag: DW_TAG_member, name: "registered", scope: !7840, file: !7841, line: 107, baseType: !199, size: 1, offset: 832, flags: DIFlagBitField, extraData: i64 832)
!7965 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !7840, file: !7841, line: 108, baseType: !7966, size: 4096, offset: 896)
!7966 = !DICompositeType(tag: DW_TAG_array_type, baseType: !451, size: 4096, elements: !90)
!7967 = !DIDerivedType(tag: DW_TAG_member, name: "q_usage_counter", scope: !7701, file: !7526, line: 403, baseType: !7481, size: 128, offset: 128)
!7968 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !7701, file: !7526, line: 405, baseType: !7969, size: 64, offset: 256)
!7969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7970, size: 64)
!7970 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_queue_stats", file: !7526, line: 43, flags: DIFlagFwdDecl)
!7971 = !DIDerivedType(tag: DW_TAG_member, name: "rq_qos", scope: !7701, file: !7526, line: 406, baseType: !7972, size: 64, offset: 320)
!7972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7973, size: 64)
!7973 = !DICompositeType(tag: DW_TAG_structure_type, name: "rq_qos", file: !7526, line: 42, flags: DIFlagFwdDecl)
!7974 = !DIDerivedType(tag: DW_TAG_member, name: "mq_ops", scope: !7701, file: !7526, line: 408, baseType: !7975, size: 64, offset: 384)
!7975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7976, size: 64)
!7976 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7977)
!7977 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_ops", file: !7526, line: 408, flags: DIFlagFwdDecl)
!7978 = !DIDerivedType(tag: DW_TAG_member, name: "queue_ctx", scope: !7701, file: !7526, line: 411, baseType: !7709, size: 64, offset: 448)
!7979 = !DIDerivedType(tag: DW_TAG_member, name: "queue_depth", scope: !7701, file: !7526, line: 413, baseType: !199, size: 32, offset: 512)
!7980 = !DIDerivedType(tag: DW_TAG_member, name: "queue_hw_ctx", scope: !7701, file: !7526, line: 416, baseType: !7981, size: 64, offset: 576)
!7981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7712, size: 64)
!7982 = !DIDerivedType(tag: DW_TAG_member, name: "nr_hw_queues", scope: !7701, file: !7526, line: 417, baseType: !199, size: 32, offset: 640)
!7983 = !DIDerivedType(tag: DW_TAG_member, name: "backing_dev_info", scope: !7701, file: !7526, line: 419, baseType: !7557, size: 64, offset: 704)
!7984 = !DIDerivedType(tag: DW_TAG_member, name: "queuedata", scope: !7701, file: !7526, line: 425, baseType: !159, size: 64, offset: 768)
!7985 = !DIDerivedType(tag: DW_TAG_member, name: "queue_flags", scope: !7701, file: !7526, line: 430, baseType: !135, size: 64, offset: 832)
!7986 = !DIDerivedType(tag: DW_TAG_member, name: "pm_only", scope: !7701, file: !7526, line: 436, baseType: !632, size: 32, offset: 896)
!7987 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !7701, file: !7526, line: 442, baseType: !6, size: 32, offset: 928)
!7988 = !DIDerivedType(tag: DW_TAG_member, name: "bounce_gfp", scope: !7701, file: !7526, line: 447, baseType: !628, size: 32, offset: 960)
!7989 = !DIDerivedType(tag: DW_TAG_member, name: "queue_lock", scope: !7701, file: !7526, line: 449, baseType: !44, offset: 992)
!7990 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !7701, file: !7526, line: 454, baseType: !22, size: 512, offset: 1024)
!7991 = !DIDerivedType(tag: DW_TAG_member, name: "mq_kobj", scope: !7701, file: !7526, line: 459, baseType: !37, size: 64, offset: 1536)
!7992 = !DIDerivedType(tag: DW_TAG_member, name: "integrity", scope: !7701, file: !7526, line: 462, baseType: !7993, size: 128, offset: 1600)
!7993 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_integrity", file: !7456, line: 159, size: 128, elements: !7994)
!7994 = !{!7995, !8024, !8025, !8026, !8027}
!7995 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !7993, file: !7456, line: 160, baseType: !7996, size: 64)
!7996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7997, size: 64)
!7997 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7998)
!7998 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_integrity_profile", file: !7526, line: 1664, size: 320, elements: !7999)
!7999 = !{!8000, !8014, !8015, !8018, !8023}
!8000 = !DIDerivedType(tag: DW_TAG_member, name: "generate_fn", scope: !7998, file: !7526, line: 1665, baseType: !8001, size: 64)
!8001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8002, size: 64)
!8002 = !DIDerivedType(tag: DW_TAG_typedef, name: "integrity_processing_fn", file: !7526, line: 1660, baseType: !8003)
!8003 = !DISubroutineType(types: !8004)
!8004 = !{!7784, !8005}
!8005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8006, size: 64)
!8006 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_integrity_iter", file: !7526, line: 1651, size: 320, elements: !8007)
!8007 = !{!8008, !8009, !8010, !8011, !8012, !8013}
!8008 = !DIDerivedType(tag: DW_TAG_member, name: "prot_buf", scope: !8006, file: !7526, line: 1652, baseType: !159, size: 64)
!8009 = !DIDerivedType(tag: DW_TAG_member, name: "data_buf", scope: !8006, file: !7526, line: 1653, baseType: !159, size: 64, offset: 64)
!8010 = !DIDerivedType(tag: DW_TAG_member, name: "seed", scope: !8006, file: !7526, line: 1654, baseType: !715, size: 64, offset: 128)
!8011 = !DIDerivedType(tag: DW_TAG_member, name: "data_size", scope: !8006, file: !7526, line: 1655, baseType: !199, size: 32, offset: 192)
!8012 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !8006, file: !7526, line: 1656, baseType: !127, size: 16, offset: 224)
!8013 = !DIDerivedType(tag: DW_TAG_member, name: "disk_name", scope: !8006, file: !7526, line: 1657, baseType: !26, size: 64, offset: 256)
!8014 = !DIDerivedType(tag: DW_TAG_member, name: "verify_fn", scope: !7998, file: !7526, line: 1666, baseType: !8001, size: 64, offset: 64)
!8015 = !DIDerivedType(tag: DW_TAG_member, name: "prepare_fn", scope: !7998, file: !7526, line: 1667, baseType: !8016, size: 64, offset: 128)
!8016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8017, size: 64)
!8017 = !DIDerivedType(tag: DW_TAG_typedef, name: "integrity_prepare_fn", file: !7526, line: 1661, baseType: !7906)
!8018 = !DIDerivedType(tag: DW_TAG_member, name: "complete_fn", scope: !7998, file: !7526, line: 1668, baseType: !8019, size: 64, offset: 192)
!8019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8020, size: 64)
!8020 = !DIDerivedType(tag: DW_TAG_typedef, name: "integrity_complete_fn", file: !7526, line: 1662, baseType: !8021)
!8021 = !DISubroutineType(types: !8022)
!8022 = !{null, !7704, !199}
!8023 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !7998, file: !7526, line: 1669, baseType: !26, size: 64, offset: 256)
!8024 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !7993, file: !7456, line: 161, baseType: !241, size: 8, offset: 64)
!8025 = !DIDerivedType(tag: DW_TAG_member, name: "tuple_size", scope: !7993, file: !7456, line: 162, baseType: !241, size: 8, offset: 72)
!8026 = !DIDerivedType(tag: DW_TAG_member, name: "interval_exp", scope: !7993, file: !7456, line: 163, baseType: !241, size: 8, offset: 80)
!8027 = !DIDerivedType(tag: DW_TAG_member, name: "tag_size", scope: !7993, file: !7456, line: 164, baseType: !241, size: 8, offset: 88)
!8028 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !7701, file: !7526, line: 466, baseType: !17, size: 64, offset: 1728)
!8029 = !DIDerivedType(tag: DW_TAG_member, name: "rpm_status", scope: !7701, file: !7526, line: 467, baseType: !8030, size: 32, offset: 1792)
!8030 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_status", file: !8031, line: 502, baseType: !199, size: 32, elements: !8032)
!8031 = !DIFile(filename: "./include/linux/pm.h", directory: "/home/lizy2001/genbc/linux")
!8032 = !{!8033, !8034, !8035, !8036}
!8033 = !DIEnumerator(name: "RPM_ACTIVE", value: 0, isUnsigned: true)
!8034 = !DIEnumerator(name: "RPM_RESUMING", value: 1, isUnsigned: true)
!8035 = !DIEnumerator(name: "RPM_SUSPENDED", value: 2, isUnsigned: true)
!8036 = !DIEnumerator(name: "RPM_SUSPENDING", value: 3, isUnsigned: true)
!8037 = !DIDerivedType(tag: DW_TAG_member, name: "nr_pending", scope: !7701, file: !7526, line: 468, baseType: !199, size: 32, offset: 1824)
!8038 = !DIDerivedType(tag: DW_TAG_member, name: "nr_requests", scope: !7701, file: !7526, line: 474, baseType: !135, size: 64, offset: 1856)
!8039 = !DIDerivedType(tag: DW_TAG_member, name: "dma_pad_mask", scope: !7701, file: !7526, line: 476, baseType: !199, size: 32, offset: 1920)
!8040 = !DIDerivedType(tag: DW_TAG_member, name: "dma_alignment", scope: !7701, file: !7526, line: 477, baseType: !199, size: 32, offset: 1952)
!8041 = !DIDerivedType(tag: DW_TAG_member, name: "rq_timeout", scope: !7701, file: !7526, line: 484, baseType: !199, size: 32, offset: 1984)
!8042 = !DIDerivedType(tag: DW_TAG_member, name: "poll_nsec", scope: !7701, file: !7526, line: 485, baseType: !6, size: 32, offset: 2016)
!8043 = !DIDerivedType(tag: DW_TAG_member, name: "poll_cb", scope: !7701, file: !7526, line: 487, baseType: !8044, size: 64, offset: 2048)
!8044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8045, size: 64)
!8045 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_stat_callback", file: !7526, line: 44, flags: DIFlagFwdDecl)
!8046 = !DIDerivedType(tag: DW_TAG_member, name: "poll_stat", scope: !7701, file: !7526, line: 488, baseType: !8047, size: 5120, offset: 2112)
!8047 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8048, size: 5120, elements: !1944)
!8048 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_rq_stat", file: !7450, line: 540, size: 320, elements: !8049)
!8049 = !{!8050, !8051, !8052, !8053, !8054}
!8050 = !DIDerivedType(tag: DW_TAG_member, name: "mean", scope: !8048, file: !7450, line: 541, baseType: !235, size: 64)
!8051 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !8048, file: !7450, line: 542, baseType: !235, size: 64, offset: 64)
!8052 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !8048, file: !7450, line: 543, baseType: !235, size: 64, offset: 128)
!8053 = !DIDerivedType(tag: DW_TAG_member, name: "nr_samples", scope: !8048, file: !7450, line: 544, baseType: !229, size: 32, offset: 192)
!8054 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !8048, file: !7450, line: 545, baseType: !235, size: 64, offset: 256)
!8055 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !7701, file: !7526, line: 490, baseType: !2566, size: 320, offset: 7232)
!8056 = !DIDerivedType(tag: DW_TAG_member, name: "timeout_work", scope: !7701, file: !7526, line: 491, baseType: !1728, size: 256, offset: 7552)
!8057 = !DIDerivedType(tag: DW_TAG_member, name: "nr_active_requests_shared_sbitmap", scope: !7701, file: !7526, line: 493, baseType: !632, size: 32, offset: 7808)
!8058 = !DIDerivedType(tag: DW_TAG_member, name: "icq_list", scope: !7701, file: !7526, line: 495, baseType: !30, size: 128, offset: 7872)
!8059 = !DIDerivedType(tag: DW_TAG_member, name: "limits", scope: !7701, file: !7526, line: 502, baseType: !8060, size: 896, offset: 8000)
!8060 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "queue_limits", file: !7526, line: 321, size: 896, elements: !8061)
!8061 = !{!8062, !8063, !8064, !8065, !8066, !8067, !8068, !8069, !8070, !8071, !8072, !8073, !8074, !8075, !8076, !8077, !8078, !8079, !8080, !8081, !8082, !8083, !8084, !8085, !8086, !8087, !8088}
!8062 = !DIDerivedType(tag: DW_TAG_member, name: "bounce_pfn", scope: !8060, file: !7526, line: 322, baseType: !135, size: 64)
!8063 = !DIDerivedType(tag: DW_TAG_member, name: "seg_boundary_mask", scope: !8060, file: !7526, line: 323, baseType: !135, size: 64, offset: 64)
!8064 = !DIDerivedType(tag: DW_TAG_member, name: "virt_boundary_mask", scope: !8060, file: !7526, line: 324, baseType: !135, size: 64, offset: 128)
!8065 = !DIDerivedType(tag: DW_TAG_member, name: "max_hw_sectors", scope: !8060, file: !7526, line: 326, baseType: !199, size: 32, offset: 192)
!8066 = !DIDerivedType(tag: DW_TAG_member, name: "max_dev_sectors", scope: !8060, file: !7526, line: 327, baseType: !199, size: 32, offset: 224)
!8067 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_sectors", scope: !8060, file: !7526, line: 328, baseType: !199, size: 32, offset: 256)
!8068 = !DIDerivedType(tag: DW_TAG_member, name: "max_sectors", scope: !8060, file: !7526, line: 329, baseType: !199, size: 32, offset: 288)
!8069 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !8060, file: !7526, line: 330, baseType: !199, size: 32, offset: 320)
!8070 = !DIDerivedType(tag: DW_TAG_member, name: "physical_block_size", scope: !8060, file: !7526, line: 331, baseType: !199, size: 32, offset: 352)
!8071 = !DIDerivedType(tag: DW_TAG_member, name: "logical_block_size", scope: !8060, file: !7526, line: 332, baseType: !199, size: 32, offset: 384)
!8072 = !DIDerivedType(tag: DW_TAG_member, name: "alignment_offset", scope: !8060, file: !7526, line: 333, baseType: !199, size: 32, offset: 416)
!8073 = !DIDerivedType(tag: DW_TAG_member, name: "io_min", scope: !8060, file: !7526, line: 334, baseType: !199, size: 32, offset: 448)
!8074 = !DIDerivedType(tag: DW_TAG_member, name: "io_opt", scope: !8060, file: !7526, line: 335, baseType: !199, size: 32, offset: 480)
!8075 = !DIDerivedType(tag: DW_TAG_member, name: "max_discard_sectors", scope: !8060, file: !7526, line: 336, baseType: !199, size: 32, offset: 512)
!8076 = !DIDerivedType(tag: DW_TAG_member, name: "max_hw_discard_sectors", scope: !8060, file: !7526, line: 337, baseType: !199, size: 32, offset: 544)
!8077 = !DIDerivedType(tag: DW_TAG_member, name: "max_write_same_sectors", scope: !8060, file: !7526, line: 338, baseType: !199, size: 32, offset: 576)
!8078 = !DIDerivedType(tag: DW_TAG_member, name: "max_write_zeroes_sectors", scope: !8060, file: !7526, line: 339, baseType: !199, size: 32, offset: 608)
!8079 = !DIDerivedType(tag: DW_TAG_member, name: "max_zone_append_sectors", scope: !8060, file: !7526, line: 340, baseType: !199, size: 32, offset: 640)
!8080 = !DIDerivedType(tag: DW_TAG_member, name: "discard_granularity", scope: !8060, file: !7526, line: 341, baseType: !199, size: 32, offset: 672)
!8081 = !DIDerivedType(tag: DW_TAG_member, name: "discard_alignment", scope: !8060, file: !7526, line: 342, baseType: !199, size: 32, offset: 704)
!8082 = !DIDerivedType(tag: DW_TAG_member, name: "max_segments", scope: !8060, file: !7526, line: 344, baseType: !127, size: 16, offset: 736)
!8083 = !DIDerivedType(tag: DW_TAG_member, name: "max_integrity_segments", scope: !8060, file: !7526, line: 345, baseType: !127, size: 16, offset: 752)
!8084 = !DIDerivedType(tag: DW_TAG_member, name: "max_discard_segments", scope: !8060, file: !7526, line: 346, baseType: !127, size: 16, offset: 768)
!8085 = !DIDerivedType(tag: DW_TAG_member, name: "misaligned", scope: !8060, file: !7526, line: 348, baseType: !241, size: 8, offset: 784)
!8086 = !DIDerivedType(tag: DW_TAG_member, name: "discard_misaligned", scope: !8060, file: !7526, line: 349, baseType: !241, size: 8, offset: 792)
!8087 = !DIDerivedType(tag: DW_TAG_member, name: "raid_partial_stripes_expensive", scope: !8060, file: !7526, line: 350, baseType: !241, size: 8, offset: 800)
!8088 = !DIDerivedType(tag: DW_TAG_member, name: "zoned", scope: !8060, file: !7526, line: 351, baseType: !8089, size: 32, offset: 832)
!8089 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "blk_zoned_model", file: !7526, line: 315, baseType: !199, size: 32, elements: !8090)
!8090 = !{!8091, !8092, !8093}
!8091 = !DIEnumerator(name: "BLK_ZONED_NONE", value: 0, isUnsigned: true)
!8092 = !DIEnumerator(name: "BLK_ZONED_HA", value: 1, isUnsigned: true)
!8093 = !DIEnumerator(name: "BLK_ZONED_HM", value: 2, isUnsigned: true)
!8094 = !DIDerivedType(tag: DW_TAG_member, name: "required_elevator_features", scope: !7701, file: !7526, line: 504, baseType: !199, size: 32, offset: 8896)
!8095 = !DIDerivedType(tag: DW_TAG_member, name: "sg_timeout", scope: !7701, file: !7526, line: 534, baseType: !199, size: 32, offset: 8928)
!8096 = !DIDerivedType(tag: DW_TAG_member, name: "sg_reserved_size", scope: !7701, file: !7526, line: 535, baseType: !199, size: 32, offset: 8960)
!8097 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !7701, file: !7526, line: 536, baseType: !6, size: 32, offset: 8992)
!8098 = !DIDerivedType(tag: DW_TAG_member, name: "debugfs_mutex", scope: !7701, file: !7526, line: 537, baseType: !558, size: 192, offset: 9024)
!8099 = !DIDerivedType(tag: DW_TAG_member, name: "fq", scope: !7701, file: !7526, line: 544, baseType: !8100, size: 64, offset: 9216)
!8100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8101, size: 64)
!8101 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_flush_queue", file: !7526, line: 40, flags: DIFlagFwdDecl)
!8102 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_list", scope: !7701, file: !7526, line: 546, baseType: !30, size: 128, offset: 9280)
!8103 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_lock", scope: !7701, file: !7526, line: 547, baseType: !44, offset: 9408)
!8104 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_work", scope: !7701, file: !7526, line: 548, baseType: !2562, size: 704, offset: 9408)
!8105 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_lock", scope: !7701, file: !7526, line: 550, baseType: !558, size: 192, offset: 10112)
!8106 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_dir_lock", scope: !7701, file: !7526, line: 551, baseType: !558, size: 192, offset: 10304)
!8107 = !DIDerivedType(tag: DW_TAG_member, name: "unused_hctx_list", scope: !7701, file: !7526, line: 557, baseType: !30, size: 128, offset: 10496)
!8108 = !DIDerivedType(tag: DW_TAG_member, name: "unused_hctx_lock", scope: !7701, file: !7526, line: 558, baseType: !44, offset: 10624)
!8109 = !DIDerivedType(tag: DW_TAG_member, name: "mq_freeze_depth", scope: !7701, file: !7526, line: 560, baseType: !6, size: 32, offset: 10624)
!8110 = !DIDerivedType(tag: DW_TAG_member, name: "bsg_dev", scope: !7701, file: !7526, line: 563, baseType: !8111, size: 256, offset: 10688)
!8111 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bsg_class_device", file: !8112, line: 18, size: 256, elements: !8113)
!8112 = !DIFile(filename: "./include/linux/bsg.h", directory: "/home/lizy2001/genbc/linux")
!8113 = !{!8114, !8115, !8116, !8117}
!8114 = !DIDerivedType(tag: DW_TAG_member, name: "class_dev", scope: !8111, file: !8112, line: 19, baseType: !17, size: 64)
!8115 = !DIDerivedType(tag: DW_TAG_member, name: "minor", scope: !8111, file: !8112, line: 20, baseType: !6, size: 32, offset: 64)
!8116 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !8111, file: !8112, line: 21, baseType: !7700, size: 64, offset: 128)
!8117 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !8111, file: !8112, line: 22, baseType: !8118, size: 64, offset: 192)
!8118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8119, size: 64)
!8119 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8120)
!8120 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bsg_ops", file: !8112, line: 10, size: 256, elements: !8121)
!8121 = !{!8122, !8163, !8167, !8171}
!8122 = !DIDerivedType(tag: DW_TAG_member, name: "check_proto", scope: !8120, file: !8112, line: 11, baseType: !8123, size: 64)
!8123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8124, size: 64)
!8124 = !DISubroutineType(types: !8125)
!8125 = !{!6, !8126}
!8126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8127, size: 64)
!8127 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sg_io_v4", file: !8128, line: 22, size: 1280, elements: !8129)
!8128 = !DIFile(filename: "./include/uapi/linux/bsg.h", directory: "/home/lizy2001/genbc/linux")
!8129 = !{!8130, !8131, !8132, !8133, !8134, !8135, !8136, !8137, !8138, !8139, !8140, !8141, !8142, !8143, !8144, !8145, !8146, !8147, !8148, !8149, !8150, !8151, !8152, !8153, !8154, !8155, !8156, !8157, !8158, !8159, !8160, !8161, !8162}
!8130 = !DIDerivedType(tag: DW_TAG_member, name: "guard", scope: !8127, file: !8128, line: 23, baseType: !1502, size: 32)
!8131 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !8127, file: !8128, line: 24, baseType: !231, size: 32, offset: 32)
!8132 = !DIDerivedType(tag: DW_TAG_member, name: "subprotocol", scope: !8127, file: !8128, line: 25, baseType: !231, size: 32, offset: 64)
!8133 = !DIDerivedType(tag: DW_TAG_member, name: "request_len", scope: !8127, file: !8128, line: 28, baseType: !231, size: 32, offset: 96)
!8134 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !8127, file: !8128, line: 29, baseType: !236, size: 64, offset: 128)
!8135 = !DIDerivedType(tag: DW_TAG_member, name: "request_tag", scope: !8127, file: !8128, line: 30, baseType: !236, size: 64, offset: 192)
!8136 = !DIDerivedType(tag: DW_TAG_member, name: "request_attr", scope: !8127, file: !8128, line: 31, baseType: !231, size: 32, offset: 256)
!8137 = !DIDerivedType(tag: DW_TAG_member, name: "request_priority", scope: !8127, file: !8128, line: 32, baseType: !231, size: 32, offset: 288)
!8138 = !DIDerivedType(tag: DW_TAG_member, name: "request_extra", scope: !8127, file: !8128, line: 33, baseType: !231, size: 32, offset: 320)
!8139 = !DIDerivedType(tag: DW_TAG_member, name: "max_response_len", scope: !8127, file: !8128, line: 34, baseType: !231, size: 32, offset: 352)
!8140 = !DIDerivedType(tag: DW_TAG_member, name: "response", scope: !8127, file: !8128, line: 35, baseType: !236, size: 64, offset: 384)
!8141 = !DIDerivedType(tag: DW_TAG_member, name: "dout_iovec_count", scope: !8127, file: !8128, line: 38, baseType: !231, size: 32, offset: 448)
!8142 = !DIDerivedType(tag: DW_TAG_member, name: "dout_xfer_len", scope: !8127, file: !8128, line: 40, baseType: !231, size: 32, offset: 480)
!8143 = !DIDerivedType(tag: DW_TAG_member, name: "din_iovec_count", scope: !8127, file: !8128, line: 41, baseType: !231, size: 32, offset: 512)
!8144 = !DIDerivedType(tag: DW_TAG_member, name: "din_xfer_len", scope: !8127, file: !8128, line: 42, baseType: !231, size: 32, offset: 544)
!8145 = !DIDerivedType(tag: DW_TAG_member, name: "dout_xferp", scope: !8127, file: !8128, line: 43, baseType: !236, size: 64, offset: 576)
!8146 = !DIDerivedType(tag: DW_TAG_member, name: "din_xferp", scope: !8127, file: !8128, line: 44, baseType: !236, size: 64, offset: 640)
!8147 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !8127, file: !8128, line: 46, baseType: !231, size: 32, offset: 704)
!8148 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !8127, file: !8128, line: 47, baseType: !231, size: 32, offset: 736)
!8149 = !DIDerivedType(tag: DW_TAG_member, name: "usr_ptr", scope: !8127, file: !8128, line: 48, baseType: !236, size: 64, offset: 768)
!8150 = !DIDerivedType(tag: DW_TAG_member, name: "spare_in", scope: !8127, file: !8128, line: 49, baseType: !231, size: 32, offset: 832)
!8151 = !DIDerivedType(tag: DW_TAG_member, name: "driver_status", scope: !8127, file: !8128, line: 51, baseType: !231, size: 32, offset: 864)
!8152 = !DIDerivedType(tag: DW_TAG_member, name: "transport_status", scope: !8127, file: !8128, line: 52, baseType: !231, size: 32, offset: 896)
!8153 = !DIDerivedType(tag: DW_TAG_member, name: "device_status", scope: !8127, file: !8128, line: 53, baseType: !231, size: 32, offset: 928)
!8154 = !DIDerivedType(tag: DW_TAG_member, name: "retry_delay", scope: !8127, file: !8128, line: 54, baseType: !231, size: 32, offset: 960)
!8155 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !8127, file: !8128, line: 55, baseType: !231, size: 32, offset: 992)
!8156 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !8127, file: !8128, line: 56, baseType: !231, size: 32, offset: 1024)
!8157 = !DIDerivedType(tag: DW_TAG_member, name: "response_len", scope: !8127, file: !8128, line: 57, baseType: !231, size: 32, offset: 1056)
!8158 = !DIDerivedType(tag: DW_TAG_member, name: "din_resid", scope: !8127, file: !8128, line: 58, baseType: !1502, size: 32, offset: 1088)
!8159 = !DIDerivedType(tag: DW_TAG_member, name: "dout_resid", scope: !8127, file: !8128, line: 59, baseType: !1502, size: 32, offset: 1120)
!8160 = !DIDerivedType(tag: DW_TAG_member, name: "generated_tag", scope: !8127, file: !8128, line: 60, baseType: !236, size: 64, offset: 1152)
!8161 = !DIDerivedType(tag: DW_TAG_member, name: "spare_out", scope: !8127, file: !8128, line: 61, baseType: !231, size: 32, offset: 1216)
!8162 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !8127, file: !8128, line: 63, baseType: !231, size: 32, offset: 1248)
!8163 = !DIDerivedType(tag: DW_TAG_member, name: "fill_hdr", scope: !8120, file: !8112, line: 12, baseType: !8164, size: 64, offset: 64)
!8164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8165, size: 64)
!8165 = !DISubroutineType(types: !8166)
!8166 = !{!6, !7704, !8126, !7627}
!8167 = !DIDerivedType(tag: DW_TAG_member, name: "complete_rq", scope: !8120, file: !8112, line: 14, baseType: !8168, size: 64, offset: 128)
!8168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8169, size: 64)
!8169 = !DISubroutineType(types: !8170)
!8170 = !{!6, !7704, !8126}
!8171 = !DIDerivedType(tag: DW_TAG_member, name: "free_rq", scope: !8120, file: !8112, line: 15, baseType: !7905, size: 64, offset: 192)
!8172 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !7701, file: !7526, line: 570, baseType: !178, size: 128, align: 64, offset: 10944)
!8173 = !DIDerivedType(tag: DW_TAG_member, name: "mq_freeze_wq", scope: !7701, file: !7526, line: 571, baseType: !812, size: 128, offset: 11072)
!8174 = !DIDerivedType(tag: DW_TAG_member, name: "mq_freeze_lock", scope: !7701, file: !7526, line: 576, baseType: !558, size: 192, offset: 11200)
!8175 = !DIDerivedType(tag: DW_TAG_member, name: "tag_set", scope: !7701, file: !7526, line: 578, baseType: !8176, size: 64, offset: 11392)
!8176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8177, size: 64)
!8177 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_tag_set", file: !7526, line: 578, flags: DIFlagFwdDecl)
!8178 = !DIDerivedType(tag: DW_TAG_member, name: "tag_set_list", scope: !7701, file: !7526, line: 579, baseType: !30, size: 128, offset: 11456)
!8179 = !DIDerivedType(tag: DW_TAG_member, name: "bio_split", scope: !7701, file: !7526, line: 580, baseType: !8180, size: 2368, offset: 11584)
!8180 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_set", file: !7445, line: 682, size: 2368, elements: !8181)
!8181 = !{!8182, !8183, !8184, !8205, !8206, !8207, !8208, !8209, !8210, !8211}
!8182 = !DIDerivedType(tag: DW_TAG_member, name: "bio_slab", scope: !8180, file: !7445, line: 683, baseType: !985, size: 64)
!8183 = !DIDerivedType(tag: DW_TAG_member, name: "front_pad", scope: !8180, file: !7445, line: 684, baseType: !199, size: 32, offset: 64)
!8184 = !DIDerivedType(tag: DW_TAG_member, name: "bio_pool", scope: !8180, file: !7445, line: 686, baseType: !8185, size: 448, offset: 128)
!8185 = !DIDerivedType(tag: DW_TAG_typedef, name: "mempool_t", file: !8186, line: 26, baseType: !8187)
!8186 = !DIFile(filename: "./include/linux/mempool.h", directory: "/home/lizy2001/genbc/linux")
!8187 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mempool_s", file: !8186, line: 16, size: 448, elements: !8188)
!8188 = !{!8189, !8190, !8191, !8192, !8193, !8194, !8199, !8204}
!8189 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !8187, file: !8186, line: 17, baseType: !44)
!8190 = !DIDerivedType(tag: DW_TAG_member, name: "min_nr", scope: !8187, file: !8186, line: 18, baseType: !6, size: 32)
!8191 = !DIDerivedType(tag: DW_TAG_member, name: "curr_nr", scope: !8187, file: !8186, line: 19, baseType: !6, size: 32, offset: 32)
!8192 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !8187, file: !8186, line: 20, baseType: !706, size: 64, offset: 64)
!8193 = !DIDerivedType(tag: DW_TAG_member, name: "pool_data", scope: !8187, file: !8186, line: 22, baseType: !159, size: 64, offset: 128)
!8194 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !8187, file: !8186, line: 23, baseType: !8195, size: 64, offset: 192)
!8195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8196, size: 64)
!8196 = !DIDerivedType(tag: DW_TAG_typedef, name: "mempool_alloc_t", file: !8186, line: 13, baseType: !8197)
!8197 = !DISubroutineType(types: !8198)
!8198 = !{!159, !628, !159}
!8199 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !8187, file: !8186, line: 24, baseType: !8200, size: 64, offset: 256)
!8200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8201, size: 64)
!8201 = !DIDerivedType(tag: DW_TAG_typedef, name: "mempool_free_t", file: !8186, line: 14, baseType: !8202)
!8202 = !DISubroutineType(types: !8203)
!8203 = !{null, !159, !159}
!8204 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !8187, file: !8186, line: 25, baseType: !812, size: 128, offset: 320)
!8205 = !DIDerivedType(tag: DW_TAG_member, name: "bvec_pool", scope: !8180, file: !7445, line: 687, baseType: !8185, size: 448, offset: 576)
!8206 = !DIDerivedType(tag: DW_TAG_member, name: "bio_integrity_pool", scope: !8180, file: !7445, line: 689, baseType: !8185, size: 448, offset: 1024)
!8207 = !DIDerivedType(tag: DW_TAG_member, name: "bvec_integrity_pool", scope: !8180, file: !7445, line: 690, baseType: !8185, size: 448, offset: 1472)
!8208 = !DIDerivedType(tag: DW_TAG_member, name: "rescue_lock", scope: !8180, file: !7445, line: 697, baseType: !44, offset: 1920)
!8209 = !DIDerivedType(tag: DW_TAG_member, name: "rescue_list", scope: !8180, file: !7445, line: 698, baseType: !7444, size: 128, offset: 1920)
!8210 = !DIDerivedType(tag: DW_TAG_member, name: "rescue_work", scope: !8180, file: !7445, line: 699, baseType: !1728, size: 256, offset: 2048)
!8211 = !DIDerivedType(tag: DW_TAG_member, name: "rescue_workqueue", scope: !8180, file: !7445, line: 700, baseType: !2578, size: 64, offset: 2304)
!8212 = !DIDerivedType(tag: DW_TAG_member, name: "debugfs_dir", scope: !7701, file: !7526, line: 582, baseType: !195, size: 64, offset: 13952)
!8213 = !DIDerivedType(tag: DW_TAG_member, name: "mq_sysfs_init_done", scope: !7701, file: !7526, line: 589, baseType: !304, size: 8, offset: 14016)
!8214 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_size", scope: !7701, file: !7526, line: 591, baseType: !132, size: 64, offset: 14080)
!8215 = !DIDerivedType(tag: DW_TAG_member, name: "write_hints", scope: !7701, file: !7526, line: 594, baseType: !8216, size: 320, offset: 14144)
!8216 = !DICompositeType(tag: DW_TAG_array_type, baseType: !235, size: 320, elements: !1592)
!8217 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !7455, file: !7456, line: 191, baseType: !159, size: 64, offset: 7168)
!8218 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !7455, file: !7456, line: 193, baseType: !6, size: 32, offset: 7232)
!8219 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !7455, file: !7456, line: 194, baseType: !135, size: 64, offset: 7296)
!8220 = !DIDerivedType(tag: DW_TAG_member, name: "lookup_sem", scope: !7455, file: !7456, line: 196, baseType: !652, size: 256, offset: 7360)
!8221 = !DIDerivedType(tag: DW_TAG_member, name: "slave_dir", scope: !7455, file: !7456, line: 197, baseType: !37, size: 64, offset: 7616)
!8222 = !DIDerivedType(tag: DW_TAG_member, name: "random", scope: !7455, file: !7456, line: 199, baseType: !8223, size: 64, offset: 7680)
!8223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8224, size: 64)
!8224 = !DICompositeType(tag: DW_TAG_structure_type, name: "timer_rand_state", file: !7456, line: 199, flags: DIFlagFwdDecl)
!8225 = !DIDerivedType(tag: DW_TAG_member, name: "sync_io", scope: !7455, file: !7456, line: 200, baseType: !632, size: 32, offset: 7744)
!8226 = !DIDerivedType(tag: DW_TAG_member, name: "ev", scope: !7455, file: !7456, line: 201, baseType: !8227, size: 64, offset: 7808)
!8227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8228, size: 64)
!8228 = !DICompositeType(tag: DW_TAG_structure_type, name: "disk_events", file: !7456, line: 156, flags: DIFlagFwdDecl)
!8229 = !DIDerivedType(tag: DW_TAG_member, name: "integrity_kobj", scope: !7455, file: !7456, line: 203, baseType: !22, size: 512, offset: 7872)
!8230 = !DIDerivedType(tag: DW_TAG_member, name: "node_id", scope: !7455, file: !7456, line: 208, baseType: !6, size: 32, offset: 8384)
!8231 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !7455, file: !7456, line: 209, baseType: !8232, size: 64, offset: 8448)
!8232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8233, size: 64)
!8233 = !DICompositeType(tag: DW_TAG_structure_type, name: "badblocks", file: !7456, line: 157, flags: DIFlagFwdDecl)
!8234 = !DIDerivedType(tag: DW_TAG_member, name: "lockdep_map", scope: !7455, file: !7456, line: 210, baseType: !6951, offset: 8512)
!8235 = !DIDerivedType(tag: DW_TAG_member, name: "bi_opf", scope: !7449, file: !7450, line: 206, baseType: !199, size: 32, offset: 128)
!8236 = !DIDerivedType(tag: DW_TAG_member, name: "bi_flags", scope: !7449, file: !7450, line: 210, baseType: !127, size: 16, offset: 160)
!8237 = !DIDerivedType(tag: DW_TAG_member, name: "bi_ioprio", scope: !7449, file: !7450, line: 211, baseType: !127, size: 16, offset: 176)
!8238 = !DIDerivedType(tag: DW_TAG_member, name: "bi_write_hint", scope: !7449, file: !7450, line: 212, baseType: !127, size: 16, offset: 192)
!8239 = !DIDerivedType(tag: DW_TAG_member, name: "bi_status", scope: !7449, file: !7450, line: 213, baseType: !7784, size: 8, offset: 208)
!8240 = !DIDerivedType(tag: DW_TAG_member, name: "bi_partno", scope: !7449, file: !7450, line: 214, baseType: !1403, size: 8, offset: 216)
!8241 = !DIDerivedType(tag: DW_TAG_member, name: "__bi_remaining", scope: !7449, file: !7450, line: 215, baseType: !632, size: 32, offset: 224)
!8242 = !DIDerivedType(tag: DW_TAG_member, name: "bi_iter", scope: !7449, file: !7450, line: 217, baseType: !8243, size: 192, offset: 256)
!8243 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bvec_iter", file: !800, line: 37, size: 192, elements: !8244)
!8244 = !{!8245, !8246, !8247, !8248}
!8245 = !DIDerivedType(tag: DW_TAG_member, name: "bi_sector", scope: !8243, file: !800, line: 38, baseType: !715, size: 64)
!8246 = !DIDerivedType(tag: DW_TAG_member, name: "bi_size", scope: !8243, file: !800, line: 40, baseType: !199, size: 32, offset: 64)
!8247 = !DIDerivedType(tag: DW_TAG_member, name: "bi_idx", scope: !8243, file: !800, line: 42, baseType: !199, size: 32, offset: 96)
!8248 = !DIDerivedType(tag: DW_TAG_member, name: "bi_bvec_done", scope: !8243, file: !800, line: 44, baseType: !199, size: 32, offset: 128)
!8249 = !DIDerivedType(tag: DW_TAG_member, name: "bi_end_io", scope: !7449, file: !7450, line: 219, baseType: !8250, size: 64, offset: 448)
!8250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8251, size: 64)
!8251 = !DIDerivedType(tag: DW_TAG_typedef, name: "bio_end_io_t", file: !7450, line: 19, baseType: !8252)
!8252 = !DISubroutineType(types: !8253)
!8253 = !{null, !7448}
!8254 = !DIDerivedType(tag: DW_TAG_member, name: "bi_private", scope: !7449, file: !7450, line: 221, baseType: !159, size: 64, offset: 512)
!8255 = !DIDerivedType(tag: DW_TAG_member, scope: !7449, file: !7450, line: 240, baseType: !8256, size: 64, offset: 576)
!8256 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7449, file: !7450, line: 240, size: 64, elements: !8257)
!8257 = !{!8258}
!8258 = !DIDerivedType(tag: DW_TAG_member, name: "bi_integrity", scope: !8256, file: !7450, line: 242, baseType: !8259, size: 64)
!8259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8260, size: 64)
!8260 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_integrity_payload", file: !7445, line: 313, size: 832, elements: !8261)
!8261 = !{!8262, !8263, !8264, !8265, !8266, !8267, !8268, !8269, !8270, !8272}
!8262 = !DIDerivedType(tag: DW_TAG_member, name: "bip_bio", scope: !8260, file: !7445, line: 314, baseType: !7448, size: 64)
!8263 = !DIDerivedType(tag: DW_TAG_member, name: "bip_iter", scope: !8260, file: !7445, line: 316, baseType: !8243, size: 192, offset: 64)
!8264 = !DIDerivedType(tag: DW_TAG_member, name: "bip_slab", scope: !8260, file: !7445, line: 318, baseType: !127, size: 16, offset: 256)
!8265 = !DIDerivedType(tag: DW_TAG_member, name: "bip_vcnt", scope: !8260, file: !7445, line: 319, baseType: !127, size: 16, offset: 272)
!8266 = !DIDerivedType(tag: DW_TAG_member, name: "bip_max_vcnt", scope: !8260, file: !7445, line: 320, baseType: !127, size: 16, offset: 288)
!8267 = !DIDerivedType(tag: DW_TAG_member, name: "bip_flags", scope: !8260, file: !7445, line: 321, baseType: !127, size: 16, offset: 304)
!8268 = !DIDerivedType(tag: DW_TAG_member, name: "bio_iter", scope: !8260, file: !7445, line: 323, baseType: !8243, size: 192, offset: 320)
!8269 = !DIDerivedType(tag: DW_TAG_member, name: "bip_work", scope: !8260, file: !7445, line: 325, baseType: !1728, size: 256, offset: 512)
!8270 = !DIDerivedType(tag: DW_TAG_member, name: "bip_vec", scope: !8260, file: !7445, line: 327, baseType: !8271, size: 64, offset: 768)
!8271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !799, size: 64)
!8272 = !DIDerivedType(tag: DW_TAG_member, name: "bip_inline_vecs", scope: !8260, file: !7445, line: 328, baseType: !8273, offset: 832)
!8273 = !DICompositeType(tag: DW_TAG_array_type, baseType: !799, elements: !2189)
!8274 = !DIDerivedType(tag: DW_TAG_member, name: "bi_vcnt", scope: !7449, file: !7450, line: 246, baseType: !127, size: 16, offset: 640)
!8275 = !DIDerivedType(tag: DW_TAG_member, name: "bi_max_vecs", scope: !7449, file: !7450, line: 252, baseType: !127, size: 16, offset: 656)
!8276 = !DIDerivedType(tag: DW_TAG_member, name: "__bi_cnt", scope: !7449, file: !7450, line: 254, baseType: !632, size: 32, offset: 672)
!8277 = !DIDerivedType(tag: DW_TAG_member, name: "bi_io_vec", scope: !7449, file: !7450, line: 256, baseType: !8271, size: 64, offset: 704)
!8278 = !DIDerivedType(tag: DW_TAG_member, name: "bi_pool", scope: !7449, file: !7450, line: 258, baseType: !8279, size: 64, offset: 768)
!8279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8180, size: 64)
!8280 = !DIDerivedType(tag: DW_TAG_member, name: "bi_inline_vecs", scope: !7449, file: !7450, line: 265, baseType: !8273, offset: 832)
!8281 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !7444, file: !7445, line: 556, baseType: !7448, size: 64, offset: 64)
!8282 = !DIDerivedType(tag: DW_TAG_member, name: "plug", scope: !1268, file: !1269, line: 1050, baseType: !8283, size: 64, offset: 10688)
!8283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8284, size: 64)
!8284 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_plug", file: !7526, line: 1236, size: 320, elements: !8285)
!8285 = !{!8286, !8287, !8288, !8289, !8290}
!8286 = !DIDerivedType(tag: DW_TAG_member, name: "mq_list", scope: !8284, file: !7526, line: 1237, baseType: !30, size: 128)
!8287 = !DIDerivedType(tag: DW_TAG_member, name: "cb_list", scope: !8284, file: !7526, line: 1238, baseType: !30, size: 128, offset: 128)
!8288 = !DIDerivedType(tag: DW_TAG_member, name: "rq_count", scope: !8284, file: !7526, line: 1239, baseType: !127, size: 16, offset: 256)
!8289 = !DIDerivedType(tag: DW_TAG_member, name: "multiple_queues", scope: !8284, file: !7526, line: 1240, baseType: !304, size: 8, offset: 272)
!8290 = !DIDerivedType(tag: DW_TAG_member, name: "nowait", scope: !8284, file: !7526, line: 1241, baseType: !304, size: 8, offset: 280)
!8291 = !DIDerivedType(tag: DW_TAG_member, name: "reclaim_state", scope: !1268, file: !1269, line: 1054, baseType: !8292, size: 64, offset: 10752)
!8292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8293, size: 64)
!8293 = !DICompositeType(tag: DW_TAG_structure_type, name: "reclaim_state", file: !1269, line: 55, flags: DIFlagFwdDecl)
!8294 = !DIDerivedType(tag: DW_TAG_member, name: "backing_dev_info", scope: !1268, file: !1269, line: 1056, baseType: !7557, size: 64, offset: 10816)
!8295 = !DIDerivedType(tag: DW_TAG_member, name: "io_context", scope: !1268, file: !1269, line: 1058, baseType: !7749, size: 64, offset: 10880)
!8296 = !DIDerivedType(tag: DW_TAG_member, name: "capture_control", scope: !1268, file: !1269, line: 1061, baseType: !8297, size: 64, offset: 10944)
!8297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8298, size: 64)
!8298 = !DICompositeType(tag: DW_TAG_structure_type, name: "capture_control", file: !1269, line: 43, flags: DIFlagFwdDecl)
!8299 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_message", scope: !1268, file: !1269, line: 1064, baseType: !135, size: 64, offset: 11008)
!8300 = !DIDerivedType(tag: DW_TAG_member, name: "last_siginfo", scope: !1268, file: !1269, line: 1065, baseType: !8301, size: 64, offset: 11072)
!8301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8302, size: 64)
!8302 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_siginfo_t", file: !7298, line: 14, baseType: !8303)
!8303 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_siginfo", file: !7298, line: 12, size: 384, elements: !8304)
!8304 = !{!8305}
!8305 = !DIDerivedType(tag: DW_TAG_member, scope: !8303, file: !7298, line: 13, baseType: !8306, size: 384)
!8306 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8303, file: !7298, line: 13, size: 384, elements: !8307)
!8307 = !{!8308, !8309, !8310, !8311}
!8308 = !DIDerivedType(tag: DW_TAG_member, name: "si_signo", scope: !8306, file: !7298, line: 13, baseType: !6, size: 32)
!8309 = !DIDerivedType(tag: DW_TAG_member, name: "si_errno", scope: !8306, file: !7298, line: 13, baseType: !6, size: 32, offset: 32)
!8310 = !DIDerivedType(tag: DW_TAG_member, name: "si_code", scope: !8306, file: !7298, line: 13, baseType: !6, size: 32, offset: 64)
!8311 = !DIDerivedType(tag: DW_TAG_member, name: "_sifields", scope: !8306, file: !7298, line: 13, baseType: !8312, size: 256, offset: 128)
!8312 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "__sifields", file: !8313, line: 32, size: 256, elements: !8314)
!8313 = !DIFile(filename: "./include/uapi/asm-generic/siginfo.h", directory: "/home/lizy2001/genbc/linux")
!8314 = !{!8315, !8320, !8333, !8339, !8348, !8368, !8373}
!8315 = !DIDerivedType(tag: DW_TAG_member, name: "_kill", scope: !8312, file: !8313, line: 37, baseType: !8316, size: 64)
!8316 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8312, file: !8313, line: 34, size: 64, elements: !8317)
!8317 = !{!8318, !8319}
!8318 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !8316, file: !8313, line: 35, baseType: !1522, size: 32)
!8319 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !8316, file: !8313, line: 36, baseType: !255, size: 32, offset: 32)
!8320 = !DIDerivedType(tag: DW_TAG_member, name: "_timer", scope: !8312, file: !8313, line: 45, baseType: !8321, size: 192)
!8321 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8312, file: !8313, line: 40, size: 192, elements: !8322)
!8322 = !{!8323, !8325, !8326, !8332}
!8323 = !DIDerivedType(tag: DW_TAG_member, name: "_tid", scope: !8321, file: !8313, line: 41, baseType: !8324, size: 32)
!8324 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_timer_t", file: !118, line: 95, baseType: !6)
!8325 = !DIDerivedType(tag: DW_TAG_member, name: "_overrun", scope: !8321, file: !8313, line: 42, baseType: !6, size: 32, offset: 32)
!8326 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !8321, file: !8313, line: 43, baseType: !8327, size: 64, offset: 64)
!8327 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigval_t", file: !8313, line: 11, baseType: !8328)
!8328 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "sigval", file: !8313, line: 8, size: 64, elements: !8329)
!8329 = !{!8330, !8331}
!8330 = !DIDerivedType(tag: DW_TAG_member, name: "sival_int", scope: !8328, file: !8313, line: 9, baseType: !6, size: 32)
!8331 = !DIDerivedType(tag: DW_TAG_member, name: "sival_ptr", scope: !8328, file: !8313, line: 10, baseType: !159, size: 64)
!8332 = !DIDerivedType(tag: DW_TAG_member, name: "_sys_private", scope: !8321, file: !8313, line: 44, baseType: !6, size: 32, offset: 128)
!8333 = !DIDerivedType(tag: DW_TAG_member, name: "_rt", scope: !8312, file: !8313, line: 52, baseType: !8334, size: 128)
!8334 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8312, file: !8313, line: 48, size: 128, elements: !8335)
!8335 = !{!8336, !8337, !8338}
!8336 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !8334, file: !8313, line: 49, baseType: !1522, size: 32)
!8337 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !8334, file: !8313, line: 50, baseType: !255, size: 32, offset: 32)
!8338 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !8334, file: !8313, line: 51, baseType: !8327, size: 64, offset: 64)
!8339 = !DIDerivedType(tag: DW_TAG_member, name: "_sigchld", scope: !8312, file: !8313, line: 61, baseType: !8340, size: 256)
!8340 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8312, file: !8313, line: 55, size: 256, elements: !8341)
!8341 = !{!8342, !8343, !8344, !8345, !8347}
!8342 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !8340, file: !8313, line: 56, baseType: !1522, size: 32)
!8343 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !8340, file: !8313, line: 57, baseType: !255, size: 32, offset: 32)
!8344 = !DIDerivedType(tag: DW_TAG_member, name: "_status", scope: !8340, file: !8313, line: 58, baseType: !6, size: 32, offset: 64)
!8345 = !DIDerivedType(tag: DW_TAG_member, name: "_utime", scope: !8340, file: !8313, line: 59, baseType: !8346, size: 64, offset: 128)
!8346 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clock_t", file: !118, line: 94, baseType: !119)
!8347 = !DIDerivedType(tag: DW_TAG_member, name: "_stime", scope: !8340, file: !8313, line: 60, baseType: !8346, size: 64, offset: 192)
!8348 = !DIDerivedType(tag: DW_TAG_member, name: "_sigfault", scope: !8312, file: !8313, line: 95, baseType: !8349, size: 256)
!8349 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8312, file: !8313, line: 64, size: 256, elements: !8350)
!8350 = !{!8351, !8352}
!8351 = !DIDerivedType(tag: DW_TAG_member, name: "_addr", scope: !8349, file: !8313, line: 65, baseType: !159, size: 64)
!8352 = !DIDerivedType(tag: DW_TAG_member, scope: !8349, file: !8313, line: 77, baseType: !8353, size: 192, offset: 64)
!8353 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8349, file: !8313, line: 77, size: 192, elements: !8354)
!8354 = !{!8355, !8356, !8363}
!8355 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_lsb", scope: !8353, file: !8313, line: 82, baseType: !1256, size: 16)
!8356 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_bnd", scope: !8353, file: !8313, line: 88, baseType: !8357, size: 192)
!8357 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8353, file: !8313, line: 84, size: 192, elements: !8358)
!8358 = !{!8359, !8361, !8362}
!8359 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_bnd", scope: !8357, file: !8313, line: 85, baseType: !8360, size: 64)
!8360 = !DICompositeType(tag: DW_TAG_array_type, baseType: !28, size: 64, elements: !1381)
!8361 = !DIDerivedType(tag: DW_TAG_member, name: "_lower", scope: !8357, file: !8313, line: 86, baseType: !159, size: 64, offset: 64)
!8362 = !DIDerivedType(tag: DW_TAG_member, name: "_upper", scope: !8357, file: !8313, line: 87, baseType: !159, size: 64, offset: 128)
!8363 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_pkey", scope: !8353, file: !8313, line: 93, baseType: !8364, size: 96)
!8364 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8353, file: !8313, line: 90, size: 96, elements: !8365)
!8365 = !{!8366, !8367}
!8366 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_pkey", scope: !8364, file: !8313, line: 91, baseType: !8360, size: 64)
!8367 = !DIDerivedType(tag: DW_TAG_member, name: "_pkey", scope: !8364, file: !8313, line: 92, baseType: !231, size: 32, offset: 64)
!8368 = !DIDerivedType(tag: DW_TAG_member, name: "_sigpoll", scope: !8312, file: !8313, line: 101, baseType: !8369, size: 128)
!8369 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8312, file: !8313, line: 98, size: 128, elements: !8370)
!8370 = !{!8371, !8372}
!8371 = !DIDerivedType(tag: DW_TAG_member, name: "_band", scope: !8369, file: !8313, line: 99, baseType: !120, size: 64)
!8372 = !DIDerivedType(tag: DW_TAG_member, name: "_fd", scope: !8369, file: !8313, line: 100, baseType: !6, size: 32, offset: 64)
!8373 = !DIDerivedType(tag: DW_TAG_member, name: "_sigsys", scope: !8312, file: !8313, line: 108, baseType: !8374, size: 128)
!8374 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8312, file: !8313, line: 104, size: 128, elements: !8375)
!8375 = !{!8376, !8377, !8378}
!8376 = !DIDerivedType(tag: DW_TAG_member, name: "_call_addr", scope: !8374, file: !8313, line: 105, baseType: !159, size: 64)
!8377 = !DIDerivedType(tag: DW_TAG_member, name: "_syscall", scope: !8374, file: !8313, line: 106, baseType: !6, size: 32, offset: 64)
!8378 = !DIDerivedType(tag: DW_TAG_member, name: "_arch", scope: !8374, file: !8313, line: 107, baseType: !199, size: 32, offset: 96)
!8379 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !1268, file: !1269, line: 1067, baseType: !7365, offset: 11136)
!8380 = !DIDerivedType(tag: DW_TAG_member, name: "robust_list", scope: !1268, file: !1269, line: 1099, baseType: !8381, size: 64, offset: 11136)
!8381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8382, size: 64)
!8382 = !DICompositeType(tag: DW_TAG_structure_type, name: "robust_list_head", file: !1269, line: 56, flags: DIFlagFwdDecl)
!8383 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_list", scope: !1268, file: !1269, line: 1103, baseType: !30, size: 128, offset: 11200)
!8384 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_cache", scope: !1268, file: !1269, line: 1104, baseType: !8385, size: 64, offset: 11328)
!8385 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8386, size: 64)
!8386 = !DICompositeType(tag: DW_TAG_structure_type, name: "futex_pi_state", file: !1269, line: 46, flags: DIFlagFwdDecl)
!8387 = !DIDerivedType(tag: DW_TAG_member, name: "futex_exit_mutex", scope: !1268, file: !1269, line: 1105, baseType: !558, size: 192, offset: 11392)
!8388 = !DIDerivedType(tag: DW_TAG_member, name: "futex_state", scope: !1268, file: !1269, line: 1106, baseType: !199, size: 32, offset: 11584)
!8389 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_ctxp", scope: !1268, file: !1269, line: 1109, baseType: !8390, size: 128, offset: 11648)
!8390 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8391, size: 128, elements: !1911)
!8391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8392, size: 64)
!8392 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event_context", file: !1269, line: 51, flags: DIFlagFwdDecl)
!8393 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_mutex", scope: !1268, file: !1269, line: 1110, baseType: !558, size: 192, offset: 11776)
!8394 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_list", scope: !1268, file: !1269, line: 1111, baseType: !30, size: 128, offset: 11968)
!8395 = !DIDerivedType(tag: DW_TAG_member, name: "rseq", scope: !1268, file: !1269, line: 1173, baseType: !8396, size: 64, offset: 12096)
!8396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8397, size: 64)
!8397 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rseq", file: !8398, line: 62, size: 256, align: 256, elements: !8399)
!8398 = !DIFile(filename: "./include/uapi/linux/rseq.h", directory: "/home/lizy2001/genbc/linux")
!8399 = !{!8400, !8401, !8402, !8407}
!8400 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id_start", scope: !8397, file: !8398, line: 75, baseType: !231, size: 32)
!8401 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id", scope: !8397, file: !8398, line: 90, baseType: !231, size: 32, offset: 32)
!8402 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_cs", scope: !8397, file: !8398, line: 124, baseType: !8403, size: 64, offset: 64)
!8403 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8397, file: !8398, line: 109, size: 64, elements: !8404)
!8404 = !{!8405, !8406}
!8405 = !DIDerivedType(tag: DW_TAG_member, name: "ptr64", scope: !8403, file: !8398, line: 110, baseType: !236, size: 64)
!8406 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !8403, file: !8398, line: 112, baseType: !236, size: 64)
!8407 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !8397, file: !8398, line: 144, baseType: !231, size: 32, offset: 128)
!8408 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_sig", scope: !1268, file: !1269, line: 1174, baseType: !229, size: 32, offset: 12160)
!8409 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_event_mask", scope: !1268, file: !1269, line: 1179, baseType: !135, size: 64, offset: 12224)
!8410 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_ubc", scope: !1268, file: !1269, line: 1182, baseType: !8411, size: 128, offset: 12288)
!8411 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tlbflush_unmap_batch", file: !1208, line: 76, size: 128, elements: !8412)
!8412 = !{!8413, !8418, !8419}
!8413 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !8411, file: !1208, line: 85, baseType: !8414, size: 64)
!8414 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arch_tlbflush_unmap_batch", file: !8415, line: 7, size: 64, elements: !8416)
!8415 = !DIFile(filename: "./arch/x86/include/asm/tlbbatch.h", directory: "/home/lizy2001/genbc/linux")
!8416 = !{!8417}
!8417 = !DIDerivedType(tag: DW_TAG_member, name: "cpumask", scope: !8414, file: !8415, line: 12, baseType: !1418, size: 64)
!8418 = !DIDerivedType(tag: DW_TAG_member, name: "flush_required", scope: !8411, file: !1208, line: 88, baseType: !304, size: 8, offset: 64)
!8419 = !DIDerivedType(tag: DW_TAG_member, name: "writable", scope: !8411, file: !1208, line: 95, baseType: !304, size: 8, offset: 72)
!8420 = !DIDerivedType(tag: DW_TAG_member, scope: !1268, file: !1269, line: 1184, baseType: !8421, size: 128, offset: 12416)
!8421 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1268, file: !1269, line: 1184, size: 128, elements: !8422)
!8422 = !{!8423, !8424}
!8423 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_users", scope: !8421, file: !1269, line: 1185, baseType: !880, size: 32)
!8424 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !8421, file: !1269, line: 1186, baseType: !178, size: 128, align: 64)
!8425 = !DIDerivedType(tag: DW_TAG_member, name: "splice_pipe", scope: !1268, file: !1269, line: 1190, baseType: !806, size: 64, offset: 12544)
!8426 = !DIDerivedType(tag: DW_TAG_member, name: "task_frag", scope: !1268, file: !1269, line: 1192, baseType: !6512, size: 128, offset: 12608)
!8427 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied", scope: !1268, file: !1269, line: 1206, baseType: !6, size: 32, offset: 12736)
!8428 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied_pause", scope: !1268, file: !1269, line: 1207, baseType: !6, size: 32, offset: 12768)
!8429 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_paused_when", scope: !1268, file: !1269, line: 1209, baseType: !135, size: 64, offset: 12800)
!8430 = !DIDerivedType(tag: DW_TAG_member, name: "timer_slack_ns", scope: !1268, file: !1269, line: 1219, baseType: !235, size: 64, offset: 12864)
!8431 = !DIDerivedType(tag: DW_TAG_member, name: "default_timer_slack_ns", scope: !1268, file: !1269, line: 1220, baseType: !235, size: 64, offset: 12928)
!8432 = !DIDerivedType(tag: DW_TAG_member, name: "pagefault_disabled", scope: !1268, file: !1269, line: 1317, baseType: !6, size: 32, offset: 12992)
!8433 = !DIDerivedType(tag: DW_TAG_member, name: "oom_reaper_list", scope: !1268, file: !1269, line: 1319, baseType: !1267, size: 64, offset: 13056)
!8434 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm_area", scope: !1268, file: !1269, line: 1322, baseType: !8435, size: 64, offset: 13120)
!8435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8436, size: 64)
!8436 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_struct", file: !8437, line: 56, size: 512, elements: !8438)
!8437 = !DIFile(filename: "./include/linux/vmalloc.h", directory: "/home/lizy2001/genbc/linux")
!8438 = !{!8439, !8440, !8441, !8442, !8443, !8444, !8445, !8447}
!8439 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !8436, file: !8437, line: 57, baseType: !8435, size: 64)
!8440 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !8436, file: !8437, line: 58, baseType: !159, size: 64, offset: 64)
!8441 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !8436, file: !8437, line: 59, baseType: !135, size: 64, offset: 128)
!8442 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !8436, file: !8437, line: 60, baseType: !135, size: 64, offset: 192)
!8443 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !8436, file: !8437, line: 61, baseType: !705, size: 64, offset: 256)
!8444 = !DIDerivedType(tag: DW_TAG_member, name: "nr_pages", scope: !8436, file: !8437, line: 62, baseType: !199, size: 32, offset: 320)
!8445 = !DIDerivedType(tag: DW_TAG_member, name: "phys_addr", scope: !8436, file: !8437, line: 63, baseType: !8446, size: 64, offset: 384)
!8446 = !DIDerivedType(tag: DW_TAG_typedef, name: "phys_addr_t", file: !31, line: 153, baseType: !235)
!8447 = !DIDerivedType(tag: DW_TAG_member, name: "caller", scope: !8436, file: !8437, line: 64, baseType: !2454, size: 64, offset: 448)
!8448 = !DIDerivedType(tag: DW_TAG_member, name: "stack_refcount", scope: !1268, file: !1269, line: 1326, baseType: !880, size: 32, offset: 13184)
!8449 = !DIDerivedType(tag: DW_TAG_member, name: "mce_vaddr", scope: !1268, file: !1269, line: 1342, baseType: !159, size: 64, offset: 13248)
!8450 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kflags", scope: !1268, file: !1269, line: 1343, baseType: !236, size: 64, offset: 13312)
!8451 = !DIDerivedType(tag: DW_TAG_member, name: "mce_addr", scope: !1268, file: !1269, line: 1344, baseType: !235, size: 64, offset: 13376)
!8452 = !DIDerivedType(tag: DW_TAG_member, name: "mce_ripv", scope: !1268, file: !1269, line: 1345, baseType: !236, size: 1, offset: 13440, flags: DIFlagBitField, extraData: i64 13440)
!8453 = !DIDerivedType(tag: DW_TAG_member, name: "mce_whole_page", scope: !1268, file: !1269, line: 1346, baseType: !236, size: 1, offset: 13441, flags: DIFlagBitField, extraData: i64 13440)
!8454 = !DIDerivedType(tag: DW_TAG_member, name: "__mce_reserved", scope: !1268, file: !1269, line: 1347, baseType: !236, size: 62, offset: 13442, flags: DIFlagBitField, extraData: i64 13440)
!8455 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kill_me", scope: !1268, file: !1269, line: 1348, baseType: !178, size: 128, align: 64, offset: 13504)
!8456 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !1268, file: !1269, line: 1358, baseType: !8457, size: 34816, offset: 13824)
!8457 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_struct", file: !8458, line: 485, size: 34816, elements: !8459)
!8458 = !DIFile(filename: "./arch/x86/include/asm/processor.h", directory: "/home/lizy2001/genbc/linux")
!8459 = !{!8460, !8478, !8479, !8480, !8481, !8482, !8483, !8484, !8485, !8489, !8490, !8491, !8492, !8493, !8494, !8497, !8498, !8499}
!8460 = !DIDerivedType(tag: DW_TAG_member, name: "tls_array", scope: !8457, file: !8458, line: 487, baseType: !8461, size: 192)
!8461 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8462, size: 192, elements: !86)
!8462 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "desc_struct", file: !8463, line: 16, size: 64, elements: !8464)
!8463 = !DIFile(filename: "./arch/x86/include/asm/desc_defs.h", directory: "/home/lizy2001/genbc/linux")
!8464 = !{!8465, !8466, !8467, !8468, !8469, !8470, !8471, !8472, !8473, !8474, !8475, !8476, !8477}
!8465 = !DIDerivedType(tag: DW_TAG_member, name: "limit0", scope: !8462, file: !8463, line: 17, baseType: !744, size: 16)
!8466 = !DIDerivedType(tag: DW_TAG_member, name: "base0", scope: !8462, file: !8463, line: 18, baseType: !744, size: 16, offset: 16)
!8467 = !DIDerivedType(tag: DW_TAG_member, name: "base1", scope: !8462, file: !8463, line: 19, baseType: !744, size: 8, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!8468 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !8462, file: !8463, line: 19, baseType: !744, size: 4, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!8469 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !8462, file: !8463, line: 19, baseType: !744, size: 1, offset: 44, flags: DIFlagBitField, extraData: i64 32)
!8470 = !DIDerivedType(tag: DW_TAG_member, name: "dpl", scope: !8462, file: !8463, line: 19, baseType: !744, size: 2, offset: 45, flags: DIFlagBitField, extraData: i64 32)
!8471 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !8462, file: !8463, line: 19, baseType: !744, size: 1, offset: 47, flags: DIFlagBitField, extraData: i64 32)
!8472 = !DIDerivedType(tag: DW_TAG_member, name: "limit1", scope: !8462, file: !8463, line: 20, baseType: !744, size: 4, offset: 48, flags: DIFlagBitField, extraData: i64 32)
!8473 = !DIDerivedType(tag: DW_TAG_member, name: "avl", scope: !8462, file: !8463, line: 20, baseType: !744, size: 1, offset: 52, flags: DIFlagBitField, extraData: i64 32)
!8474 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !8462, file: !8463, line: 20, baseType: !744, size: 1, offset: 53, flags: DIFlagBitField, extraData: i64 32)
!8475 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !8462, file: !8463, line: 20, baseType: !744, size: 1, offset: 54, flags: DIFlagBitField, extraData: i64 32)
!8476 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !8462, file: !8463, line: 20, baseType: !744, size: 1, offset: 55, flags: DIFlagBitField, extraData: i64 32)
!8477 = !DIDerivedType(tag: DW_TAG_member, name: "base2", scope: !8462, file: !8463, line: 20, baseType: !744, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 32)
!8478 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !8457, file: !8458, line: 491, baseType: !135, size: 64, offset: 192)
!8479 = !DIDerivedType(tag: DW_TAG_member, name: "es", scope: !8457, file: !8458, line: 495, baseType: !127, size: 16, offset: 256)
!8480 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !8457, file: !8458, line: 496, baseType: !127, size: 16, offset: 272)
!8481 = !DIDerivedType(tag: DW_TAG_member, name: "fsindex", scope: !8457, file: !8458, line: 497, baseType: !127, size: 16, offset: 288)
!8482 = !DIDerivedType(tag: DW_TAG_member, name: "gsindex", scope: !8457, file: !8458, line: 498, baseType: !127, size: 16, offset: 304)
!8483 = !DIDerivedType(tag: DW_TAG_member, name: "fsbase", scope: !8457, file: !8458, line: 502, baseType: !135, size: 64, offset: 320)
!8484 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !8457, file: !8458, line: 503, baseType: !135, size: 64, offset: 384)
!8485 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_bps", scope: !8457, file: !8458, line: 514, baseType: !8486, size: 256, offset: 448)
!8486 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8487, size: 256, elements: !1212)
!8487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8488, size: 64)
!8488 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event", file: !8458, line: 483, flags: DIFlagFwdDecl)
!8489 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_dr6", scope: !8457, file: !8458, line: 516, baseType: !135, size: 64, offset: 704)
!8490 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_dr7", scope: !8457, file: !8458, line: 518, baseType: !135, size: 64, offset: 768)
!8491 = !DIDerivedType(tag: DW_TAG_member, name: "cr2", scope: !8457, file: !8458, line: 520, baseType: !135, size: 64, offset: 832)
!8492 = !DIDerivedType(tag: DW_TAG_member, name: "trap_nr", scope: !8457, file: !8458, line: 521, baseType: !135, size: 64, offset: 896)
!8493 = !DIDerivedType(tag: DW_TAG_member, name: "error_code", scope: !8457, file: !8458, line: 522, baseType: !135, size: 64, offset: 960)
!8494 = !DIDerivedType(tag: DW_TAG_member, name: "io_bitmap", scope: !8457, file: !8458, line: 528, baseType: !8495, size: 64, offset: 1024)
!8495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8496, size: 64)
!8496 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_bitmap", file: !8458, line: 10, flags: DIFlagFwdDecl)
!8497 = !DIDerivedType(tag: DW_TAG_member, name: "iopl_emul", scope: !8457, file: !8458, line: 535, baseType: !135, size: 64, offset: 1088)
!8498 = !DIDerivedType(tag: DW_TAG_member, name: "sig_on_uaccess_err", scope: !8457, file: !8458, line: 537, baseType: !199, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!8499 = !DIDerivedType(tag: DW_TAG_member, name: "fpu", scope: !8457, file: !8458, line: 540, baseType: !8500, size: 33280, offset: 1536)
!8500 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fpu", file: !8501, line: 317, size: 33280, elements: !8502)
!8501 = !DIFile(filename: "./arch/x86/include/asm/fpu/types.h", directory: "/home/lizy2001/genbc/linux")
!8502 = !{!8503, !8504, !8505}
!8503 = !DIDerivedType(tag: DW_TAG_member, name: "last_cpu", scope: !8500, file: !8501, line: 330, baseType: !199, size: 32)
!8504 = !DIDerivedType(tag: DW_TAG_member, name: "avx512_timestamp", scope: !8500, file: !8501, line: 337, baseType: !135, size: 64, offset: 64)
!8505 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !8500, file: !8501, line: 348, baseType: !8506, size: 32768, offset: 512)
!8506 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "fpregs_state", file: !8501, line: 304, size: 32768, elements: !8507)
!8507 = !{!8508, !8521, !8556, !8606, !8618}
!8508 = !DIDerivedType(tag: DW_TAG_member, name: "fsave", scope: !8506, file: !8501, line: 305, baseType: !8509, size: 896)
!8509 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fregs_state", file: !8501, line: 12, size: 896, elements: !8510)
!8510 = !{!8511, !8512, !8513, !8514, !8515, !8516, !8517, !8518, !8520}
!8511 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !8509, file: !8501, line: 13, baseType: !229, size: 32)
!8512 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !8509, file: !8501, line: 14, baseType: !229, size: 32, offset: 32)
!8513 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !8509, file: !8501, line: 15, baseType: !229, size: 32, offset: 64)
!8514 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !8509, file: !8501, line: 16, baseType: !229, size: 32, offset: 96)
!8515 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !8509, file: !8501, line: 17, baseType: !229, size: 32, offset: 128)
!8516 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !8509, file: !8501, line: 18, baseType: !229, size: 32, offset: 160)
!8517 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !8509, file: !8501, line: 19, baseType: !229, size: 32, offset: 192)
!8518 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !8509, file: !8501, line: 22, baseType: !8519, size: 640, offset: 224)
!8519 = !DICompositeType(tag: DW_TAG_array_type, baseType: !229, size: 640, elements: !2550)
!8520 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !8509, file: !8501, line: 25, baseType: !229, size: 32, offset: 864)
!8521 = !DIDerivedType(tag: DW_TAG_member, name: "fxsave", scope: !8506, file: !8501, line: 306, baseType: !8522, size: 4096, align: 128)
!8522 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fxregs_state", file: !8501, line: 34, size: 4096, align: 128, elements: !8523)
!8523 = !{!8524, !8525, !8526, !8527, !8528, !8543, !8544, !8545, !8547, !8549, !8551}
!8524 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !8522, file: !8501, line: 35, baseType: !744, size: 16)
!8525 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !8522, file: !8501, line: 36, baseType: !744, size: 16, offset: 16)
!8526 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !8522, file: !8501, line: 37, baseType: !744, size: 16, offset: 32)
!8527 = !DIDerivedType(tag: DW_TAG_member, name: "fop", scope: !8522, file: !8501, line: 38, baseType: !744, size: 16, offset: 48)
!8528 = !DIDerivedType(tag: DW_TAG_member, scope: !8522, file: !8501, line: 39, baseType: !8529, size: 128, offset: 64)
!8529 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8522, file: !8501, line: 39, size: 128, elements: !8530)
!8530 = !{!8531, !8536}
!8531 = !DIDerivedType(tag: DW_TAG_member, scope: !8529, file: !8501, line: 40, baseType: !8532, size: 128)
!8532 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8529, file: !8501, line: 40, size: 128, elements: !8533)
!8533 = !{!8534, !8535}
!8534 = !DIDerivedType(tag: DW_TAG_member, name: "rip", scope: !8532, file: !8501, line: 41, baseType: !235, size: 64)
!8535 = !DIDerivedType(tag: DW_TAG_member, name: "rdp", scope: !8532, file: !8501, line: 42, baseType: !235, size: 64, offset: 64)
!8536 = !DIDerivedType(tag: DW_TAG_member, scope: !8529, file: !8501, line: 44, baseType: !8537, size: 128)
!8537 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8529, file: !8501, line: 44, size: 128, elements: !8538)
!8538 = !{!8539, !8540, !8541, !8542}
!8539 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !8537, file: !8501, line: 45, baseType: !229, size: 32)
!8540 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !8537, file: !8501, line: 46, baseType: !229, size: 32, offset: 32)
!8541 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !8537, file: !8501, line: 47, baseType: !229, size: 32, offset: 64)
!8542 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !8537, file: !8501, line: 48, baseType: !229, size: 32, offset: 96)
!8543 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr", scope: !8522, file: !8501, line: 51, baseType: !229, size: 32, offset: 192)
!8544 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr_mask", scope: !8522, file: !8501, line: 52, baseType: !229, size: 32, offset: 224)
!8545 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !8522, file: !8501, line: 55, baseType: !8546, size: 1024, offset: 256)
!8546 = !DICompositeType(tag: DW_TAG_array_type, baseType: !229, size: 1024, elements: !2645)
!8547 = !DIDerivedType(tag: DW_TAG_member, name: "xmm_space", scope: !8522, file: !8501, line: 58, baseType: !8548, size: 2048, offset: 1280)
!8548 = !DICompositeType(tag: DW_TAG_array_type, baseType: !229, size: 2048, elements: !90)
!8549 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !8522, file: !8501, line: 60, baseType: !8550, size: 384, offset: 3328)
!8550 = !DICompositeType(tag: DW_TAG_array_type, baseType: !229, size: 384, elements: !2654)
!8551 = !DIDerivedType(tag: DW_TAG_member, scope: !8522, file: !8501, line: 62, baseType: !8552, size: 384, offset: 3712)
!8552 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8522, file: !8501, line: 62, size: 384, elements: !8553)
!8553 = !{!8554, !8555}
!8554 = !DIDerivedType(tag: DW_TAG_member, name: "padding1", scope: !8552, file: !8501, line: 63, baseType: !8550, size: 384)
!8555 = !DIDerivedType(tag: DW_TAG_member, name: "sw_reserved", scope: !8552, file: !8501, line: 64, baseType: !8550, size: 384)
!8556 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !8506, file: !8501, line: 307, baseType: !8557, size: 1088)
!8557 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swregs_state", file: !8501, line: 79, size: 1088, elements: !8558)
!8558 = !{!8559, !8560, !8561, !8562, !8563, !8564, !8565, !8566, !8567, !8568, !8569, !8570, !8571, !8572, !8573, !8605}
!8559 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !8557, file: !8501, line: 80, baseType: !229, size: 32)
!8560 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !8557, file: !8501, line: 81, baseType: !229, size: 32, offset: 32)
!8561 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !8557, file: !8501, line: 82, baseType: !229, size: 32, offset: 64)
!8562 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !8557, file: !8501, line: 83, baseType: !229, size: 32, offset: 96)
!8563 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !8557, file: !8501, line: 84, baseType: !229, size: 32, offset: 128)
!8564 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !8557, file: !8501, line: 85, baseType: !229, size: 32, offset: 160)
!8565 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !8557, file: !8501, line: 86, baseType: !229, size: 32, offset: 192)
!8566 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !8557, file: !8501, line: 88, baseType: !8519, size: 640, offset: 224)
!8567 = !DIDerivedType(tag: DW_TAG_member, name: "ftop", scope: !8557, file: !8501, line: 89, baseType: !1403, size: 8, offset: 864)
!8568 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !8557, file: !8501, line: 90, baseType: !1403, size: 8, offset: 872)
!8569 = !DIDerivedType(tag: DW_TAG_member, name: "lookahead", scope: !8557, file: !8501, line: 91, baseType: !1403, size: 8, offset: 880)
!8570 = !DIDerivedType(tag: DW_TAG_member, name: "no_update", scope: !8557, file: !8501, line: 92, baseType: !1403, size: 8, offset: 888)
!8571 = !DIDerivedType(tag: DW_TAG_member, name: "rm", scope: !8557, file: !8501, line: 93, baseType: !1403, size: 8, offset: 896)
!8572 = !DIDerivedType(tag: DW_TAG_member, name: "alimit", scope: !8557, file: !8501, line: 94, baseType: !1403, size: 8, offset: 904)
!8573 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !8557, file: !8501, line: 95, baseType: !8574, size: 64, offset: 960)
!8574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8575, size: 64)
!8575 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "math_emu_info", file: !8576, line: 11, size: 128, elements: !8577)
!8576 = !DIFile(filename: "./arch/x86/include/asm/math_emu.h", directory: "/home/lizy2001/genbc/linux")
!8577 = !{!8578, !8579}
!8578 = !DIDerivedType(tag: DW_TAG_member, name: "___orig_eip", scope: !8575, file: !8576, line: 12, baseType: !120, size: 64)
!8579 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !8575, file: !8576, line: 13, baseType: !8580, size: 64, offset: 64)
!8580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8581, size: 64)
!8581 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pt_regs", file: !8582, line: 56, size: 1344, elements: !8583)
!8582 = !DIFile(filename: "./arch/x86/include/asm/ptrace.h", directory: "/home/lizy2001/genbc/linux")
!8583 = !{!8584, !8585, !8586, !8587, !8588, !8589, !8590, !8591, !8592, !8593, !8594, !8595, !8596, !8597, !8598, !8599, !8600, !8601, !8602, !8603, !8604}
!8584 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !8581, file: !8582, line: 61, baseType: !135, size: 64)
!8585 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !8581, file: !8582, line: 62, baseType: !135, size: 64, offset: 64)
!8586 = !DIDerivedType(tag: DW_TAG_member, name: "r13", scope: !8581, file: !8582, line: 63, baseType: !135, size: 64, offset: 128)
!8587 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !8581, file: !8582, line: 64, baseType: !135, size: 64, offset: 192)
!8588 = !DIDerivedType(tag: DW_TAG_member, name: "bp", scope: !8581, file: !8582, line: 65, baseType: !135, size: 64, offset: 256)
!8589 = !DIDerivedType(tag: DW_TAG_member, name: "bx", scope: !8581, file: !8582, line: 66, baseType: !135, size: 64, offset: 320)
!8590 = !DIDerivedType(tag: DW_TAG_member, name: "r11", scope: !8581, file: !8582, line: 68, baseType: !135, size: 64, offset: 384)
!8591 = !DIDerivedType(tag: DW_TAG_member, name: "r10", scope: !8581, file: !8582, line: 69, baseType: !135, size: 64, offset: 448)
!8592 = !DIDerivedType(tag: DW_TAG_member, name: "r9", scope: !8581, file: !8582, line: 70, baseType: !135, size: 64, offset: 512)
!8593 = !DIDerivedType(tag: DW_TAG_member, name: "r8", scope: !8581, file: !8582, line: 71, baseType: !135, size: 64, offset: 576)
!8594 = !DIDerivedType(tag: DW_TAG_member, name: "ax", scope: !8581, file: !8582, line: 72, baseType: !135, size: 64, offset: 640)
!8595 = !DIDerivedType(tag: DW_TAG_member, name: "cx", scope: !8581, file: !8582, line: 73, baseType: !135, size: 64, offset: 704)
!8596 = !DIDerivedType(tag: DW_TAG_member, name: "dx", scope: !8581, file: !8582, line: 74, baseType: !135, size: 64, offset: 768)
!8597 = !DIDerivedType(tag: DW_TAG_member, name: "si", scope: !8581, file: !8582, line: 75, baseType: !135, size: 64, offset: 832)
!8598 = !DIDerivedType(tag: DW_TAG_member, name: "di", scope: !8581, file: !8582, line: 76, baseType: !135, size: 64, offset: 896)
!8599 = !DIDerivedType(tag: DW_TAG_member, name: "orig_ax", scope: !8581, file: !8582, line: 81, baseType: !135, size: 64, offset: 960)
!8600 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !8581, file: !8582, line: 83, baseType: !135, size: 64, offset: 1024)
!8601 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !8581, file: !8582, line: 84, baseType: !135, size: 64, offset: 1088)
!8602 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !8581, file: !8582, line: 85, baseType: !135, size: 64, offset: 1152)
!8603 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !8581, file: !8582, line: 86, baseType: !135, size: 64, offset: 1216)
!8604 = !DIDerivedType(tag: DW_TAG_member, name: "ss", scope: !8581, file: !8582, line: 87, baseType: !135, size: 64, offset: 1280)
!8605 = !DIDerivedType(tag: DW_TAG_member, name: "entry_eip", scope: !8557, file: !8501, line: 96, baseType: !229, size: 32, offset: 1024)
!8606 = !DIDerivedType(tag: DW_TAG_member, name: "xsave", scope: !8506, file: !8501, line: 308, baseType: !8607, size: 4608, align: 512)
!8607 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xregs_state", file: !8501, line: 289, size: 4608, align: 512, elements: !8608)
!8608 = !{!8609, !8610, !8617}
!8609 = !DIDerivedType(tag: DW_TAG_member, name: "i387", scope: !8607, file: !8501, line: 290, baseType: !8522, size: 4096, align: 128)
!8610 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !8607, file: !8501, line: 291, baseType: !8611, size: 512, offset: 4096)
!8611 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xstate_header", file: !8501, line: 268, size: 512, elements: !8612)
!8612 = !{!8613, !8614, !8615}
!8613 = !DIDerivedType(tag: DW_TAG_member, name: "xfeatures", scope: !8611, file: !8501, line: 269, baseType: !235, size: 64)
!8614 = !DIDerivedType(tag: DW_TAG_member, name: "xcomp_bv", scope: !8611, file: !8501, line: 270, baseType: !235, size: 64, offset: 64)
!8615 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !8611, file: !8501, line: 271, baseType: !8616, size: 384, offset: 128)
!8616 = !DICompositeType(tag: DW_TAG_array_type, baseType: !235, size: 384, elements: !1668)
!8617 = !DIDerivedType(tag: DW_TAG_member, name: "extended_state_area", scope: !8607, file: !8501, line: 292, baseType: !2677, offset: 4608)
!8618 = !DIDerivedType(tag: DW_TAG_member, name: "__padding", scope: !8506, file: !8501, line: 309, baseType: !8619, size: 32768)
!8619 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1403, size: 32768, elements: !8620)
!8620 = !{!8621}
!8621 = !DISubrange(count: 4096)
!8622 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1264, file: !607, line: 378, baseType: !8623, size: 64, offset: 64)
!8623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1264, size: 64)
!8624 = !DIDerivedType(tag: DW_TAG_member, name: "startup", scope: !1260, file: !607, line: 384, baseType: !1789, size: 192, offset: 192)
!8625 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_lock", scope: !1029, file: !607, line: 500, baseType: !44, offset: 6656)
!8626 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_table", scope: !1029, file: !607, line: 501, baseType: !8627, size: 64, offset: 6656)
!8627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8628, size: 64)
!8628 = !DICompositeType(tag: DW_TAG_structure_type, name: "kioctx_table", file: !607, line: 387, flags: DIFlagFwdDecl)
!8629 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1029, file: !607, line: 516, baseType: !1574, size: 64, offset: 6720)
!8630 = !DIDerivedType(tag: DW_TAG_member, name: "exe_file", scope: !1029, file: !607, line: 519, baseType: !164, size: 64, offset: 6784)
!8631 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_subscriptions", scope: !1029, file: !607, line: 521, baseType: !8632, size: 64, offset: 6848)
!8632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8633, size: 64)
!8633 = !DICompositeType(tag: DW_TAG_structure_type, name: "mmu_notifier_subscriptions", file: !607, line: 521, flags: DIFlagFwdDecl)
!8634 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_pending", scope: !1029, file: !607, line: 545, baseType: !632, size: 32, offset: 6912)
!8635 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_batched", scope: !1029, file: !607, line: 548, baseType: !304, size: 8, offset: 6944)
!8636 = !DIDerivedType(tag: DW_TAG_member, name: "uprobes_state", scope: !1029, file: !607, line: 550, baseType: !8637, offset: 6952)
!8637 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uprobes_state", file: !8638, line: 142, elements: !58)
!8638 = !DIFile(filename: "./include/linux/uprobes.h", directory: "/home/lizy2001/genbc/linux")
!8639 = !DIDerivedType(tag: DW_TAG_member, name: "async_put_work", scope: !1029, file: !607, line: 554, baseType: !1728, size: 256, offset: 6976)
!8640 = !DIDerivedType(tag: DW_TAG_member, name: "pasid", scope: !1029, file: !607, line: 557, baseType: !229, size: 32, offset: 7232)
!8641 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_bitmap", scope: !1026, file: !607, line: 565, baseType: !8642, offset: 7296)
!8642 = !DICompositeType(tag: DW_TAG_array_type, baseType: !135, elements: !2189)
!8643 = !DIDerivedType(tag: DW_TAG_member, name: "pt_frag_refcount", scope: !1022, file: !607, line: 151, baseType: !632, size: 32)
!8644 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !1014, file: !607, line: 156, baseType: !44, offset: 256)
!8645 = !DIDerivedType(tag: DW_TAG_member, scope: !611, file: !607, line: 159, baseType: !8646, size: 128)
!8646 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !611, file: !607, line: 159, size: 128, elements: !8647)
!8647 = !{!8648, !8699}
!8648 = !DIDerivedType(tag: DW_TAG_member, name: "pgmap", scope: !8646, file: !607, line: 161, baseType: !8649, size: 64)
!8649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8650, size: 64)
!8650 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap", file: !8651, line: 110, size: 1152, elements: !8652)
!8651 = !DIFile(filename: "./include/linux/memremap.h", directory: "/home/lizy2001/genbc/linux")
!8652 = !{!8653, !8663, !8664, !8665, !8666, !8673, !8674, !8686, !8687, !8688}
!8653 = !DIDerivedType(tag: DW_TAG_member, name: "altmap", scope: !8650, file: !8651, line: 111, baseType: !8654, size: 384)
!8654 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmem_altmap", file: !8651, line: 19, size: 384, elements: !8655)
!8655 = !{!8656, !8658, !8659, !8660, !8661, !8662}
!8656 = !DIDerivedType(tag: DW_TAG_member, name: "base_pfn", scope: !8654, file: !8651, line: 20, baseType: !8657, size: 64)
!8657 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !135)
!8658 = !DIDerivedType(tag: DW_TAG_member, name: "end_pfn", scope: !8654, file: !8651, line: 21, baseType: !8657, size: 64, offset: 64)
!8659 = !DIDerivedType(tag: DW_TAG_member, name: "reserve", scope: !8654, file: !8651, line: 22, baseType: !8657, size: 64, offset: 128)
!8660 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !8654, file: !8651, line: 23, baseType: !135, size: 64, offset: 192)
!8661 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !8654, file: !8651, line: 24, baseType: !135, size: 64, offset: 256)
!8662 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !8654, file: !8651, line: 25, baseType: !135, size: 64, offset: 320)
!8663 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !8650, file: !8651, line: 112, baseType: !7495, size: 64, offset: 384)
!8664 = !DIDerivedType(tag: DW_TAG_member, name: "internal_ref", scope: !8650, file: !8651, line: 113, baseType: !7481, size: 128, offset: 448)
!8665 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !8650, file: !8651, line: 114, baseType: !1789, size: 192, offset: 576)
!8666 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !8650, file: !8651, line: 115, baseType: !8667, size: 32, offset: 768)
!8667 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "memory_type", file: !8651, line: 59, baseType: !199, size: 32, elements: !8668)
!8668 = !{!8669, !8670, !8671, !8672}
!8669 = !DIEnumerator(name: "MEMORY_DEVICE_PRIVATE", value: 1, isUnsigned: true)
!8670 = !DIEnumerator(name: "MEMORY_DEVICE_FS_DAX", value: 2, isUnsigned: true)
!8671 = !DIEnumerator(name: "MEMORY_DEVICE_GENERIC", value: 3, isUnsigned: true)
!8672 = !DIEnumerator(name: "MEMORY_DEVICE_PCI_P2PDMA", value: 4, isUnsigned: true)
!8673 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !8650, file: !8651, line: 116, baseType: !199, size: 32, offset: 800)
!8674 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !8650, file: !8651, line: 117, baseType: !8675, size: 64, offset: 832)
!8675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8676, size: 64)
!8676 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8677)
!8677 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap_ops", file: !8651, line: 67, size: 256, elements: !8678)
!8678 = !{!8679, !8680, !8684, !8685}
!8679 = !DIDerivedType(tag: DW_TAG_member, name: "page_free", scope: !8677, file: !8651, line: 73, baseType: !725, size: 64)
!8680 = !DIDerivedType(tag: DW_TAG_member, name: "kill", scope: !8677, file: !8651, line: 78, baseType: !8681, size: 64, offset: 64)
!8681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8682, size: 64)
!8682 = !DISubroutineType(types: !8683)
!8683 = !{null, !8649}
!8684 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !8677, file: !8651, line: 83, baseType: !8681, size: 64, offset: 128)
!8685 = !DIDerivedType(tag: DW_TAG_member, name: "migrate_to_ram", scope: !8677, file: !8651, line: 89, baseType: !1079, size: 64, offset: 192)
!8686 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !8650, file: !8651, line: 118, baseType: !159, size: 64, offset: 896)
!8687 = !DIDerivedType(tag: DW_TAG_member, name: "nr_range", scope: !8650, file: !8651, line: 119, baseType: !6, size: 32, offset: 960)
!8688 = !DIDerivedType(tag: DW_TAG_member, scope: !8650, file: !8651, line: 120, baseType: !8689, size: 128, offset: 1024)
!8689 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8650, file: !8651, line: 120, size: 128, elements: !8690)
!8690 = !{!8691, !8697}
!8691 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !8689, file: !8651, line: 121, baseType: !8692, size: 128)
!8692 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "range", file: !8693, line: 6, size: 128, elements: !8694)
!8693 = !DIFile(filename: "./include/linux/range.h", directory: "/home/lizy2001/genbc/linux")
!8694 = !{!8695, !8696}
!8695 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !8692, file: !8693, line: 7, baseType: !235, size: 64)
!8696 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !8692, file: !8693, line: 8, baseType: !235, size: 64, offset: 64)
!8697 = !DIDerivedType(tag: DW_TAG_member, name: "ranges", scope: !8689, file: !8651, line: 122, baseType: !8698)
!8698 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8692, elements: !1932)
!8699 = !DIDerivedType(tag: DW_TAG_member, name: "zone_device_data", scope: !8646, file: !607, line: 162, baseType: !159, size: 64, offset: 64)
!8700 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !611, file: !607, line: 176, baseType: !178, size: 128, align: 64)
!8701 = !DIDerivedType(tag: DW_TAG_member, scope: !606, file: !607, line: 179, baseType: !8702, size: 32, offset: 384)
!8702 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !606, file: !607, line: 179, size: 32, elements: !8703)
!8703 = !{!8704, !8705, !8706, !8707}
!8704 = !DIDerivedType(tag: DW_TAG_member, name: "_mapcount", scope: !8702, file: !607, line: 184, baseType: !632, size: 32)
!8705 = !DIDerivedType(tag: DW_TAG_member, name: "page_type", scope: !8702, file: !607, line: 192, baseType: !199, size: 32)
!8706 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !8702, file: !607, line: 194, baseType: !199, size: 32)
!8707 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !8702, file: !607, line: 195, baseType: !6, size: 32)
!8708 = !DIDerivedType(tag: DW_TAG_member, name: "_refcount", scope: !606, file: !607, line: 199, baseType: !632, size: 32, offset: 416)
!8709 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cached_objects", scope: !473, file: !166, line: 1964, baseType: !8710, size: 64, offset: 1344)
!8710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8711, size: 64)
!8711 = !DISubroutineType(types: !8712)
!8712 = !{!120, !413, !8713}
!8713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8714, size: 64)
!8714 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrink_control", file: !8715, line: 12, size: 256, elements: !8716)
!8715 = !DIFile(filename: "./include/linux/shrinker.h", directory: "/home/lizy2001/genbc/linux")
!8716 = !{!8717, !8718, !8719, !8720, !8721}
!8717 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !8714, file: !8715, line: 13, baseType: !628, size: 32)
!8718 = !DIDerivedType(tag: DW_TAG_member, name: "nid", scope: !8714, file: !8715, line: 16, baseType: !6, size: 32, offset: 32)
!8719 = !DIDerivedType(tag: DW_TAG_member, name: "nr_to_scan", scope: !8714, file: !8715, line: 23, baseType: !135, size: 64, offset: 64)
!8720 = !DIDerivedType(tag: DW_TAG_member, name: "nr_scanned", scope: !8714, file: !8715, line: 30, baseType: !135, size: 64, offset: 128)
!8721 = !DIDerivedType(tag: DW_TAG_member, name: "memcg", scope: !8714, file: !8715, line: 33, baseType: !6680, size: 64, offset: 192)
!8722 = !DIDerivedType(tag: DW_TAG_member, name: "free_cached_objects", scope: !473, file: !166, line: 1966, baseType: !8710, size: 64, offset: 1408)
!8723 = !DIDerivedType(tag: DW_TAG_member, name: "dq_op", scope: !414, file: !166, line: 1424, baseType: !8724, size: 64, offset: 448)
!8724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8725, size: 64)
!8725 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8726)
!8726 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot_operations", file: !8727, line: 322, size: 704, elements: !8728)
!8727 = !DIFile(filename: "./include/linux/quota.h", directory: "/home/lizy2001/genbc/linux")
!8728 = !{!8729, !8780, !8784, !8788, !8789, !8790, !8791, !8792, !8797, !8802, !8806}
!8729 = !DIDerivedType(tag: DW_TAG_member, name: "write_dquot", scope: !8726, file: !8727, line: 323, baseType: !8730, size: 64)
!8730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8731, size: 64)
!8731 = !DISubroutineType(types: !8732)
!8732 = !{!6, !8733}
!8733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8734, size: 64)
!8734 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot", file: !8727, line: 294, size: 1600, elements: !8735)
!8735 = !{!8736, !8737, !8738, !8739, !8740, !8741, !8742, !8743, !8744, !8765, !8766, !8767}
!8736 = !DIDerivedType(tag: DW_TAG_member, name: "dq_hash", scope: !8734, file: !8727, line: 295, baseType: !455, size: 128)
!8737 = !DIDerivedType(tag: DW_TAG_member, name: "dq_inuse", scope: !8734, file: !8727, line: 296, baseType: !30, size: 128, offset: 128)
!8738 = !DIDerivedType(tag: DW_TAG_member, name: "dq_free", scope: !8734, file: !8727, line: 297, baseType: !30, size: 128, offset: 256)
!8739 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dirty", scope: !8734, file: !8727, line: 298, baseType: !30, size: 128, offset: 384)
!8740 = !DIDerivedType(tag: DW_TAG_member, name: "dq_lock", scope: !8734, file: !8727, line: 299, baseType: !558, size: 192, offset: 512)
!8741 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb_lock", scope: !8734, file: !8727, line: 300, baseType: !44, offset: 704)
!8742 = !DIDerivedType(tag: DW_TAG_member, name: "dq_count", scope: !8734, file: !8727, line: 301, baseType: !632, size: 32, offset: 704)
!8743 = !DIDerivedType(tag: DW_TAG_member, name: "dq_sb", scope: !8734, file: !8727, line: 302, baseType: !413, size: 64, offset: 768)
!8744 = !DIDerivedType(tag: DW_TAG_member, name: "dq_id", scope: !8734, file: !8727, line: 303, baseType: !8745, size: 64, offset: 832)
!8745 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kqid", file: !8727, line: 68, size: 64, elements: !8746)
!8746 = !{!8747, !8759}
!8747 = !DIDerivedType(tag: DW_TAG_member, scope: !8745, file: !8727, line: 69, baseType: !8748, size: 32)
!8748 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8745, file: !8727, line: 69, size: 32, elements: !8749)
!8749 = !{!8750, !8751, !8752}
!8750 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !8748, file: !8727, line: 70, baseType: !249, size: 32)
!8751 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !8748, file: !8727, line: 71, baseType: !257, size: 32)
!8752 = !DIDerivedType(tag: DW_TAG_member, name: "projid", scope: !8748, file: !8727, line: 72, baseType: !8753, size: 32)
!8753 = !DIDerivedType(tag: DW_TAG_typedef, name: "kprojid_t", file: !8754, line: 24, baseType: !8755)
!8754 = !DIFile(filename: "./include/linux/projid.h", directory: "/home/lizy2001/genbc/linux")
!8755 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !8754, line: 22, size: 32, elements: !8756)
!8756 = !{!8757}
!8757 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !8755, file: !8754, line: 23, baseType: !8758, size: 32)
!8758 = !DIDerivedType(tag: DW_TAG_typedef, name: "projid_t", file: !8754, line: 20, baseType: !255)
!8759 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !8745, file: !8727, line: 74, baseType: !8760, size: 32, offset: 32)
!8760 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "quota_type", file: !8727, line: 54, baseType: !199, size: 32, elements: !8761)
!8761 = !{!8762, !8763, !8764}
!8762 = !DIEnumerator(name: "USRQUOTA", value: 0, isUnsigned: true)
!8763 = !DIEnumerator(name: "GRPQUOTA", value: 1, isUnsigned: true)
!8764 = !DIEnumerator(name: "PRJQUOTA", value: 2, isUnsigned: true)
!8765 = !DIDerivedType(tag: DW_TAG_member, name: "dq_off", scope: !8734, file: !8727, line: 304, baseType: !345, size: 64, offset: 896)
!8766 = !DIDerivedType(tag: DW_TAG_member, name: "dq_flags", scope: !8734, file: !8727, line: 305, baseType: !135, size: 64, offset: 960)
!8767 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb", scope: !8734, file: !8727, line: 306, baseType: !8768, size: 576, offset: 1024)
!8768 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqblk", file: !8727, line: 205, size: 576, elements: !8769)
!8769 = !{!8770, !8772, !8773, !8774, !8775, !8776, !8777, !8778, !8779}
!8770 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bhardlimit", scope: !8768, file: !8727, line: 206, baseType: !8771, size: 64)
!8771 = !DIDerivedType(tag: DW_TAG_typedef, name: "qsize_t", file: !8727, line: 66, baseType: !347)
!8772 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bsoftlimit", scope: !8768, file: !8727, line: 207, baseType: !8771, size: 64, offset: 64)
!8773 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curspace", scope: !8768, file: !8727, line: 208, baseType: !8771, size: 64, offset: 128)
!8774 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_rsvspace", scope: !8768, file: !8727, line: 209, baseType: !8771, size: 64, offset: 192)
!8775 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_ihardlimit", scope: !8768, file: !8727, line: 210, baseType: !8771, size: 64, offset: 256)
!8776 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_isoftlimit", scope: !8768, file: !8727, line: 211, baseType: !8771, size: 64, offset: 320)
!8777 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curinodes", scope: !8768, file: !8727, line: 212, baseType: !8771, size: 64, offset: 384)
!8778 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_btime", scope: !8768, file: !8727, line: 213, baseType: !353, size: 64, offset: 448)
!8779 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_itime", scope: !8768, file: !8727, line: 214, baseType: !353, size: 64, offset: 512)
!8780 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_dquot", scope: !8726, file: !8727, line: 324, baseType: !8781, size: 64, offset: 64)
!8781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8782, size: 64)
!8782 = !DISubroutineType(types: !8783)
!8783 = !{!8733, !413, !6}
!8784 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_dquot", scope: !8726, file: !8727, line: 325, baseType: !8785, size: 64, offset: 128)
!8785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8786, size: 64)
!8786 = !DISubroutineType(types: !8787)
!8787 = !{null, !8733}
!8788 = !DIDerivedType(tag: DW_TAG_member, name: "acquire_dquot", scope: !8726, file: !8727, line: 326, baseType: !8730, size: 64, offset: 192)
!8789 = !DIDerivedType(tag: DW_TAG_member, name: "release_dquot", scope: !8726, file: !8727, line: 327, baseType: !8730, size: 64, offset: 256)
!8790 = !DIDerivedType(tag: DW_TAG_member, name: "mark_dirty", scope: !8726, file: !8727, line: 328, baseType: !8730, size: 64, offset: 320)
!8791 = !DIDerivedType(tag: DW_TAG_member, name: "write_info", scope: !8726, file: !8727, line: 329, baseType: !520, size: 64, offset: 384)
!8792 = !DIDerivedType(tag: DW_TAG_member, name: "get_reserved_space", scope: !8726, file: !8727, line: 332, baseType: !8793, size: 64, offset: 448)
!8793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8794, size: 64)
!8794 = !DISubroutineType(types: !8795)
!8795 = !{!8796, !243}
!8796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8771, size: 64)
!8797 = !DIDerivedType(tag: DW_TAG_member, name: "get_projid", scope: !8726, file: !8727, line: 333, baseType: !8798, size: 64, offset: 512)
!8798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8799, size: 64)
!8799 = !DISubroutineType(types: !8800)
!8800 = !{!6, !243, !8801}
!8801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8753, size: 64)
!8802 = !DIDerivedType(tag: DW_TAG_member, name: "get_inode_usage", scope: !8726, file: !8727, line: 335, baseType: !8803, size: 64, offset: 576)
!8803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8804, size: 64)
!8804 = !DISubroutineType(types: !8805)
!8805 = !{!6, !243, !8796}
!8806 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !8726, file: !8727, line: 337, baseType: !8807, size: 64, offset: 640)
!8807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8808, size: 64)
!8808 = !DISubroutineType(types: !8809)
!8809 = !{!6, !413, !8810}
!8810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8745, size: 64)
!8811 = !DIDerivedType(tag: DW_TAG_member, name: "s_qcop", scope: !414, file: !166, line: 1425, baseType: !8812, size: 64, offset: 512)
!8812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8813, size: 64)
!8813 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8814)
!8814 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quotactl_ops", file: !8727, line: 428, size: 704, elements: !8815)
!8815 = !{!8816, !8820, !8821, !8825, !8826, !8827, !8842, !8865, !8869, !8870, !8893}
!8816 = !DIDerivedType(tag: DW_TAG_member, name: "quota_on", scope: !8814, file: !8727, line: 429, baseType: !8817, size: 64)
!8817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8818, size: 64)
!8818 = !DISubroutineType(types: !8819)
!8819 = !{!6, !413, !6, !6, !363}
!8820 = !DIDerivedType(tag: DW_TAG_member, name: "quota_off", scope: !8814, file: !8727, line: 430, baseType: !520, size: 64, offset: 64)
!8821 = !DIDerivedType(tag: DW_TAG_member, name: "quota_enable", scope: !8814, file: !8727, line: 431, baseType: !8822, size: 64, offset: 128)
!8822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8823, size: 64)
!8823 = !DISubroutineType(types: !8824)
!8824 = !{!6, !413, !199}
!8825 = !DIDerivedType(tag: DW_TAG_member, name: "quota_disable", scope: !8814, file: !8727, line: 432, baseType: !8822, size: 64, offset: 192)
!8826 = !DIDerivedType(tag: DW_TAG_member, name: "quota_sync", scope: !8814, file: !8727, line: 433, baseType: !520, size: 64, offset: 256)
!8827 = !DIDerivedType(tag: DW_TAG_member, name: "set_info", scope: !8814, file: !8727, line: 434, baseType: !8828, size: 64, offset: 320)
!8828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8829, size: 64)
!8829 = !DISubroutineType(types: !8830)
!8830 = !{!6, !413, !6, !8831}
!8831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8832, size: 64)
!8832 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_info", file: !8727, line: 415, size: 256, elements: !8833)
!8833 = !{!8834, !8835, !8836, !8837, !8838, !8839, !8840, !8841}
!8834 = !DIDerivedType(tag: DW_TAG_member, name: "i_fieldmask", scope: !8832, file: !8727, line: 416, baseType: !6, size: 32)
!8835 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !8832, file: !8727, line: 417, baseType: !199, size: 32, offset: 32)
!8836 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_timelimit", scope: !8832, file: !8727, line: 418, baseType: !199, size: 32, offset: 64)
!8837 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_timelimit", scope: !8832, file: !8727, line: 420, baseType: !199, size: 32, offset: 96)
!8838 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_timelimit", scope: !8832, file: !8727, line: 421, baseType: !199, size: 32, offset: 128)
!8839 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_warnlimit", scope: !8832, file: !8727, line: 422, baseType: !199, size: 32, offset: 160)
!8840 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_warnlimit", scope: !8832, file: !8727, line: 423, baseType: !199, size: 32, offset: 192)
!8841 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_warnlimit", scope: !8832, file: !8727, line: 424, baseType: !199, size: 32, offset: 224)
!8842 = !DIDerivedType(tag: DW_TAG_member, name: "get_dqblk", scope: !8814, file: !8727, line: 435, baseType: !8843, size: 64, offset: 384)
!8843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8844, size: 64)
!8844 = !DISubroutineType(types: !8845)
!8845 = !{!6, !413, !8745, !8846}
!8846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8847, size: 64)
!8847 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_dqblk", file: !8727, line: 343, size: 960, elements: !8848)
!8848 = !{!8849, !8850, !8851, !8852, !8853, !8854, !8855, !8856, !8857, !8858, !8859, !8860, !8861, !8862, !8863, !8864}
!8849 = !DIDerivedType(tag: DW_TAG_member, name: "d_fieldmask", scope: !8847, file: !8727, line: 344, baseType: !6, size: 32)
!8850 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_hardlimit", scope: !8847, file: !8727, line: 345, baseType: !235, size: 64, offset: 64)
!8851 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_softlimit", scope: !8847, file: !8727, line: 346, baseType: !235, size: 64, offset: 128)
!8852 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_hardlimit", scope: !8847, file: !8727, line: 347, baseType: !235, size: 64, offset: 192)
!8853 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_softlimit", scope: !8847, file: !8727, line: 348, baseType: !235, size: 64, offset: 256)
!8854 = !DIDerivedType(tag: DW_TAG_member, name: "d_space", scope: !8847, file: !8727, line: 349, baseType: !235, size: 64, offset: 320)
!8855 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_count", scope: !8847, file: !8727, line: 350, baseType: !235, size: 64, offset: 384)
!8856 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_timer", scope: !8847, file: !8727, line: 351, baseType: !568, size: 64, offset: 448)
!8857 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_timer", scope: !8847, file: !8727, line: 353, baseType: !568, size: 64, offset: 512)
!8858 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_warns", scope: !8847, file: !8727, line: 354, baseType: !6, size: 32, offset: 576)
!8859 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_warns", scope: !8847, file: !8727, line: 355, baseType: !6, size: 32, offset: 608)
!8860 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_hardlimit", scope: !8847, file: !8727, line: 356, baseType: !235, size: 64, offset: 640)
!8861 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_softlimit", scope: !8847, file: !8727, line: 357, baseType: !235, size: 64, offset: 704)
!8862 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_space", scope: !8847, file: !8727, line: 358, baseType: !235, size: 64, offset: 768)
!8863 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_timer", scope: !8847, file: !8727, line: 359, baseType: !568, size: 64, offset: 832)
!8864 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_warns", scope: !8847, file: !8727, line: 360, baseType: !6, size: 32, offset: 896)
!8865 = !DIDerivedType(tag: DW_TAG_member, name: "get_nextdqblk", scope: !8814, file: !8727, line: 436, baseType: !8866, size: 64, offset: 448)
!8866 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8867, size: 64)
!8867 = !DISubroutineType(types: !8868)
!8868 = !{!6, !413, !8810, !8846}
!8869 = !DIDerivedType(tag: DW_TAG_member, name: "set_dqblk", scope: !8814, file: !8727, line: 438, baseType: !8843, size: 64, offset: 512)
!8870 = !DIDerivedType(tag: DW_TAG_member, name: "get_state", scope: !8814, file: !8727, line: 439, baseType: !8871, size: 64, offset: 576)
!8871 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8872, size: 64)
!8872 = !DISubroutineType(types: !8873)
!8873 = !{!6, !413, !8874}
!8874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8875, size: 64)
!8875 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_state", file: !8727, line: 409, size: 1408, elements: !8876)
!8876 = !{!8877, !8878}
!8877 = !DIDerivedType(tag: DW_TAG_member, name: "s_incoredqs", scope: !8875, file: !8727, line: 410, baseType: !199, size: 32)
!8878 = !DIDerivedType(tag: DW_TAG_member, name: "s_state", scope: !8875, file: !8727, line: 411, baseType: !8879, size: 1344, offset: 64)
!8879 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8880, size: 1344, elements: !86)
!8880 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_type_state", file: !8727, line: 395, size: 448, elements: !8881)
!8881 = !{!8882, !8883, !8884, !8885, !8886, !8887, !8888, !8889, !8890, !8892}
!8882 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !8880, file: !8727, line: 396, baseType: !199, size: 32)
!8883 = !DIDerivedType(tag: DW_TAG_member, name: "spc_timelimit", scope: !8880, file: !8727, line: 397, baseType: !199, size: 32, offset: 32)
!8884 = !DIDerivedType(tag: DW_TAG_member, name: "ino_timelimit", scope: !8880, file: !8727, line: 399, baseType: !199, size: 32, offset: 64)
!8885 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_timelimit", scope: !8880, file: !8727, line: 400, baseType: !199, size: 32, offset: 96)
!8886 = !DIDerivedType(tag: DW_TAG_member, name: "spc_warnlimit", scope: !8880, file: !8727, line: 401, baseType: !199, size: 32, offset: 128)
!8887 = !DIDerivedType(tag: DW_TAG_member, name: "ino_warnlimit", scope: !8880, file: !8727, line: 402, baseType: !199, size: 32, offset: 160)
!8888 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_warnlimit", scope: !8880, file: !8727, line: 403, baseType: !199, size: 32, offset: 192)
!8889 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !8880, file: !8727, line: 404, baseType: !237, size: 64, offset: 256)
!8890 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !8880, file: !8727, line: 405, baseType: !8891, size: 64, offset: 320)
!8891 = !DIDerivedType(tag: DW_TAG_typedef, name: "blkcnt_t", file: !31, line: 126, baseType: !235)
!8892 = !DIDerivedType(tag: DW_TAG_member, name: "nextents", scope: !8880, file: !8727, line: 406, baseType: !8891, size: 64, offset: 384)
!8893 = !DIDerivedType(tag: DW_TAG_member, name: "rm_xquota", scope: !8814, file: !8727, line: 440, baseType: !8822, size: 64, offset: 640)
!8894 = !DIDerivedType(tag: DW_TAG_member, name: "s_export_op", scope: !414, file: !166, line: 1426, baseType: !8895, size: 64, offset: 576)
!8895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8896, size: 64)
!8896 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8897)
!8897 = !DICompositeType(tag: DW_TAG_structure_type, name: "export_operations", file: !166, line: 49, flags: DIFlagFwdDecl)
!8898 = !DIDerivedType(tag: DW_TAG_member, name: "s_flags", scope: !414, file: !166, line: 1427, baseType: !135, size: 64, offset: 640)
!8899 = !DIDerivedType(tag: DW_TAG_member, name: "s_iflags", scope: !414, file: !166, line: 1428, baseType: !135, size: 64, offset: 704)
!8900 = !DIDerivedType(tag: DW_TAG_member, name: "s_magic", scope: !414, file: !166, line: 1429, baseType: !135, size: 64, offset: 768)
!8901 = !DIDerivedType(tag: DW_TAG_member, name: "s_root", scope: !414, file: !166, line: 1430, baseType: !195, size: 64, offset: 832)
!8902 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount", scope: !414, file: !166, line: 1431, baseType: !652, size: 256, offset: 896)
!8903 = !DIDerivedType(tag: DW_TAG_member, name: "s_count", scope: !414, file: !166, line: 1432, baseType: !6, size: 32, offset: 1152)
!8904 = !DIDerivedType(tag: DW_TAG_member, name: "s_active", scope: !414, file: !166, line: 1433, baseType: !632, size: 32, offset: 1184)
!8905 = !DIDerivedType(tag: DW_TAG_member, name: "s_xattr", scope: !414, file: !166, line: 1437, baseType: !8906, size: 64, offset: 1216)
!8906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8907, size: 64)
!8907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8908, size: 64)
!8908 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8909)
!8909 = !DICompositeType(tag: DW_TAG_structure_type, name: "xattr_handler", file: !166, line: 1437, flags: DIFlagFwdDecl)
!8910 = !DIDerivedType(tag: DW_TAG_member, name: "s_roots", scope: !414, file: !166, line: 1449, baseType: !8911, size: 64, offset: 1280)
!8911 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_head", file: !212, line: 34, size: 64, elements: !8912)
!8912 = !{!8913}
!8913 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !8911, file: !212, line: 35, baseType: !215, size: 64)
!8914 = !DIDerivedType(tag: DW_TAG_member, name: "s_mounts", scope: !414, file: !166, line: 1450, baseType: !30, size: 128, offset: 1344)
!8915 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdev", scope: !414, file: !166, line: 1451, baseType: !7537, size: 64, offset: 1472)
!8916 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdi", scope: !414, file: !166, line: 1452, baseType: !7557, size: 64, offset: 1536)
!8917 = !DIDerivedType(tag: DW_TAG_member, name: "s_mtd", scope: !414, file: !166, line: 1453, baseType: !8918, size: 64, offset: 1600)
!8918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8919, size: 64)
!8919 = !DICompositeType(tag: DW_TAG_structure_type, name: "mtd_info", file: !166, line: 1453, flags: DIFlagFwdDecl)
!8920 = !DIDerivedType(tag: DW_TAG_member, name: "s_instances", scope: !414, file: !166, line: 1454, baseType: !455, size: 128, offset: 1664)
!8921 = !DIDerivedType(tag: DW_TAG_member, name: "s_quota_types", scope: !414, file: !166, line: 1455, baseType: !199, size: 32, offset: 1792)
!8922 = !DIDerivedType(tag: DW_TAG_member, name: "s_dquot", scope: !414, file: !166, line: 1456, baseType: !8923, size: 2432, offset: 1856)
!8923 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_info", file: !8727, line: 518, size: 2432, elements: !8924)
!8924 = !{!8925, !8926, !8927, !8929, !8961}
!8925 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !8923, file: !8727, line: 519, baseType: !199, size: 32)
!8926 = !DIDerivedType(tag: DW_TAG_member, name: "dqio_sem", scope: !8923, file: !8727, line: 520, baseType: !652, size: 256, offset: 64)
!8927 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !8923, file: !8727, line: 521, baseType: !8928, size: 192, offset: 320)
!8928 = !DICompositeType(tag: DW_TAG_array_type, baseType: !243, size: 192, elements: !86)
!8929 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !8923, file: !8727, line: 522, baseType: !8930, size: 1728, offset: 512)
!8930 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8931, size: 1728, elements: !86)
!8931 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqinfo", file: !8727, line: 222, size: 576, elements: !8932)
!8932 = !{!8933, !8953, !8954, !8955, !8956, !8957, !8958, !8959, !8960}
!8933 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_format", scope: !8931, file: !8727, line: 223, baseType: !8934, size: 64)
!8934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8935, size: 64)
!8935 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_type", file: !8727, line: 443, size: 256, elements: !8936)
!8936 = !{!8937, !8938, !8951, !8952}
!8937 = !DIDerivedType(tag: DW_TAG_member, name: "qf_fmt_id", scope: !8935, file: !8727, line: 444, baseType: !6, size: 32)
!8938 = !DIDerivedType(tag: DW_TAG_member, name: "qf_ops", scope: !8935, file: !8727, line: 445, baseType: !8939, size: 64, offset: 64)
!8939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8940, size: 64)
!8940 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8941)
!8941 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_ops", file: !8727, line: 310, size: 512, elements: !8942)
!8942 = !{!8943, !8944, !8945, !8946, !8947, !8948, !8949, !8950}
!8943 = !DIDerivedType(tag: DW_TAG_member, name: "check_quota_file", scope: !8941, file: !8727, line: 311, baseType: !520, size: 64)
!8944 = !DIDerivedType(tag: DW_TAG_member, name: "read_file_info", scope: !8941, file: !8727, line: 312, baseType: !520, size: 64, offset: 64)
!8945 = !DIDerivedType(tag: DW_TAG_member, name: "write_file_info", scope: !8941, file: !8727, line: 313, baseType: !520, size: 64, offset: 128)
!8946 = !DIDerivedType(tag: DW_TAG_member, name: "free_file_info", scope: !8941, file: !8727, line: 314, baseType: !520, size: 64, offset: 192)
!8947 = !DIDerivedType(tag: DW_TAG_member, name: "read_dqblk", scope: !8941, file: !8727, line: 315, baseType: !8730, size: 64, offset: 256)
!8948 = !DIDerivedType(tag: DW_TAG_member, name: "commit_dqblk", scope: !8941, file: !8727, line: 316, baseType: !8730, size: 64, offset: 320)
!8949 = !DIDerivedType(tag: DW_TAG_member, name: "release_dqblk", scope: !8941, file: !8727, line: 317, baseType: !8730, size: 64, offset: 384)
!8950 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !8941, file: !8727, line: 318, baseType: !8807, size: 64, offset: 448)
!8951 = !DIDerivedType(tag: DW_TAG_member, name: "qf_owner", scope: !8935, file: !8727, line: 446, baseType: !446, size: 64, offset: 128)
!8952 = !DIDerivedType(tag: DW_TAG_member, name: "qf_next", scope: !8935, file: !8727, line: 447, baseType: !8934, size: 64, offset: 192)
!8953 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_fmt_id", scope: !8931, file: !8727, line: 224, baseType: !6, size: 32, offset: 64)
!8954 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_dirty_list", scope: !8931, file: !8727, line: 226, baseType: !30, size: 128, offset: 128)
!8955 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_flags", scope: !8931, file: !8727, line: 227, baseType: !135, size: 64, offset: 256)
!8956 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_bgrace", scope: !8931, file: !8727, line: 228, baseType: !199, size: 32, offset: 320)
!8957 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_igrace", scope: !8931, file: !8727, line: 229, baseType: !199, size: 32, offset: 352)
!8958 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_spc_limit", scope: !8931, file: !8727, line: 230, baseType: !8771, size: 64, offset: 384)
!8959 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_ino_limit", scope: !8931, file: !8727, line: 231, baseType: !8771, size: 64, offset: 448)
!8960 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_priv", scope: !8931, file: !8727, line: 232, baseType: !159, size: 64, offset: 512)
!8961 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !8923, file: !8727, line: 523, baseType: !8962, size: 192, offset: 2240)
!8962 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8939, size: 192, elements: !86)
!8963 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers", scope: !414, file: !166, line: 1458, baseType: !8964, size: 2112, offset: 4288)
!8964 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sb_writers", file: !166, line: 1410, size: 2112, elements: !8965)
!8965 = !{!8966, !8967, !8968}
!8966 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !8964, file: !166, line: 1411, baseType: !6, size: 32)
!8967 = !DIDerivedType(tag: DW_TAG_member, name: "wait_unfrozen", scope: !8964, file: !166, line: 1412, baseType: !812, size: 128, offset: 64)
!8968 = !DIDerivedType(tag: DW_TAG_member, name: "rw_sem", scope: !8964, file: !166, line: 1413, baseType: !8969, size: 1920, offset: 192)
!8969 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8970, size: 1920, elements: !86)
!8970 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_rw_semaphore", file: !8971, line: 12, size: 640, elements: !8972)
!8971 = !DIFile(filename: "./include/linux/percpu-rwsem.h", directory: "/home/lizy2001/genbc/linux")
!8972 = !{!8973, !8981, !8983, !8988, !8989}
!8973 = !DIDerivedType(tag: DW_TAG_member, name: "rss", scope: !8970, file: !8971, line: 13, baseType: !8974, size: 320)
!8974 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcu_sync", file: !8975, line: 17, size: 320, elements: !8976)
!8975 = !DIFile(filename: "./include/linux/rcu_sync.h", directory: "/home/lizy2001/genbc/linux")
!8976 = !{!8977, !8978, !8979, !8980}
!8977 = !DIDerivedType(tag: DW_TAG_member, name: "gp_state", scope: !8974, file: !8975, line: 18, baseType: !6, size: 32)
!8978 = !DIDerivedType(tag: DW_TAG_member, name: "gp_count", scope: !8974, file: !8975, line: 19, baseType: !6, size: 32, offset: 32)
!8979 = !DIDerivedType(tag: DW_TAG_member, name: "gp_wait", scope: !8974, file: !8975, line: 20, baseType: !812, size: 128, offset: 64)
!8980 = !DIDerivedType(tag: DW_TAG_member, name: "cb_head", scope: !8974, file: !8975, line: 22, baseType: !178, size: 128, align: 64, offset: 192)
!8981 = !DIDerivedType(tag: DW_TAG_member, name: "read_count", scope: !8970, file: !8971, line: 14, baseType: !8982, size: 64, offset: 320)
!8982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !199, size: 64)
!8983 = !DIDerivedType(tag: DW_TAG_member, name: "writer", scope: !8970, file: !8971, line: 15, baseType: !8984, size: 64, offset: 384)
!8984 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcuwait", file: !8985, line: 16, size: 64, elements: !8986)
!8985 = !DIFile(filename: "./include/linux/rcuwait.h", directory: "/home/lizy2001/genbc/linux")
!8986 = !{!8987}
!8987 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !8984, file: !8985, line: 17, baseType: !1267, size: 64)
!8988 = !DIDerivedType(tag: DW_TAG_member, name: "waiters", scope: !8970, file: !8971, line: 16, baseType: !812, size: 128, offset: 448)
!8989 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !8970, file: !8971, line: 17, baseType: !632, size: 32, offset: 576)
!8990 = !DIDerivedType(tag: DW_TAG_member, name: "s_fs_info", scope: !414, file: !166, line: 1465, baseType: !159, size: 64, offset: 6400)
!8991 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_gran", scope: !414, file: !166, line: 1468, baseType: !229, size: 32, offset: 6464)
!8992 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_min", scope: !414, file: !166, line: 1470, baseType: !353, size: 64, offset: 6528)
!8993 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_max", scope: !414, file: !166, line: 1471, baseType: !353, size: 64, offset: 6592)
!8994 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_mask", scope: !414, file: !166, line: 1473, baseType: !231, size: 32, offset: 6656)
!8995 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_marks", scope: !414, file: !166, line: 1474, baseType: !8996, size: 64, offset: 6720)
!8996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8997, size: 64)
!8997 = !DICompositeType(tag: DW_TAG_structure_type, name: "fsnotify_mark_connector", file: !166, line: 603, flags: DIFlagFwdDecl)
!8998 = !DIDerivedType(tag: DW_TAG_member, name: "s_id", scope: !414, file: !166, line: 1477, baseType: !4272, size: 256, offset: 6784)
!8999 = !DIDerivedType(tag: DW_TAG_member, name: "s_uuid", scope: !414, file: !166, line: 1478, baseType: !9000, size: 128, offset: 7040)
!9000 = !DIDerivedType(tag: DW_TAG_typedef, name: "uuid_t", file: !9001, line: 18, baseType: !9002)
!9001 = !DIFile(filename: "./include/linux/uuid.h", directory: "/home/lizy2001/genbc/linux")
!9002 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !9001, line: 16, size: 128, elements: !9003)
!9003 = !{!9004}
!9004 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !9002, file: !9001, line: 17, baseType: !4890, size: 128)
!9005 = !DIDerivedType(tag: DW_TAG_member, name: "s_max_links", scope: !414, file: !166, line: 1480, baseType: !199, size: 32, offset: 7168)
!9006 = !DIDerivedType(tag: DW_TAG_member, name: "s_mode", scope: !414, file: !166, line: 1481, baseType: !7627, size: 32, offset: 7200)
!9007 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_mutex", scope: !414, file: !166, line: 1487, baseType: !558, size: 192, offset: 7232)
!9008 = !DIDerivedType(tag: DW_TAG_member, name: "s_subtype", scope: !414, file: !166, line: 1493, baseType: !26, size: 64, offset: 7424)
!9009 = !DIDerivedType(tag: DW_TAG_member, name: "s_d_op", scope: !414, file: !166, line: 1495, baseType: !9010, size: 64, offset: 7488)
!9010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9011, size: 64)
!9011 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9012)
!9012 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry_operations", file: !193, line: 135, size: 1024, align: 512, elements: !9013)
!9013 = !{!9014, !9018, !9019, !9026, !9032, !9036, !9040, !9044, !9045, !9049, !9053, !9058, !9062}
!9014 = !DIDerivedType(tag: DW_TAG_member, name: "d_revalidate", scope: !9012, file: !193, line: 136, baseType: !9015, size: 64)
!9015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9016, size: 64)
!9016 = !DISubroutineType(types: !9017)
!9017 = !{!6, !195, !199}
!9018 = !DIDerivedType(tag: DW_TAG_member, name: "d_weak_revalidate", scope: !9012, file: !193, line: 137, baseType: !9015, size: 64, offset: 64)
!9019 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !9012, file: !193, line: 138, baseType: !9020, size: 64, offset: 128)
!9020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9021, size: 64)
!9021 = !DISubroutineType(types: !9022)
!9022 = !{!6, !9023, !9025}
!9023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9024, size: 64)
!9024 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !196)
!9025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !220, size: 64)
!9026 = !DIDerivedType(tag: DW_TAG_member, name: "d_compare", scope: !9012, file: !193, line: 139, baseType: !9027, size: 64, offset: 192)
!9027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9028, size: 64)
!9028 = !DISubroutineType(types: !9029)
!9029 = !{!6, !9023, !199, !26, !9030}
!9030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9031, size: 64)
!9031 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !220)
!9032 = !DIDerivedType(tag: DW_TAG_member, name: "d_delete", scope: !9012, file: !193, line: 141, baseType: !9033, size: 64, offset: 256)
!9033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9034, size: 64)
!9034 = !DISubroutineType(types: !9035)
!9035 = !{!6, !9023}
!9036 = !DIDerivedType(tag: DW_TAG_member, name: "d_init", scope: !9012, file: !193, line: 142, baseType: !9037, size: 64, offset: 320)
!9037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9038, size: 64)
!9038 = !DISubroutineType(types: !9039)
!9039 = !{!6, !195}
!9040 = !DIDerivedType(tag: DW_TAG_member, name: "d_release", scope: !9012, file: !193, line: 143, baseType: !9041, size: 64, offset: 384)
!9041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9042, size: 64)
!9042 = !DISubroutineType(types: !9043)
!9043 = !{null, !195}
!9044 = !DIDerivedType(tag: DW_TAG_member, name: "d_prune", scope: !9012, file: !193, line: 144, baseType: !9041, size: 64, offset: 448)
!9045 = !DIDerivedType(tag: DW_TAG_member, name: "d_iput", scope: !9012, file: !193, line: 145, baseType: !9046, size: 64, offset: 512)
!9046 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9047, size: 64)
!9047 = !DISubroutineType(types: !9048)
!9048 = !{null, !195, !243}
!9049 = !DIDerivedType(tag: DW_TAG_member, name: "d_dname", scope: !9012, file: !193, line: 146, baseType: !9050, size: 64, offset: 576)
!9050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9051, size: 64)
!9051 = !DISubroutineType(types: !9052)
!9052 = !{!85, !195, !85, !6}
!9053 = !DIDerivedType(tag: DW_TAG_member, name: "d_automount", scope: !9012, file: !193, line: 147, baseType: !9054, size: 64, offset: 640)
!9054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9055, size: 64)
!9055 = !DISubroutineType(types: !9056)
!9056 = !{!191, !9057}
!9057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !187, size: 64)
!9058 = !DIDerivedType(tag: DW_TAG_member, name: "d_manage", scope: !9012, file: !193, line: 148, baseType: !9059, size: 64, offset: 704)
!9059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9060, size: 64)
!9060 = !DISubroutineType(types: !9061)
!9061 = !{!6, !363, !304}
!9062 = !DIDerivedType(tag: DW_TAG_member, name: "d_real", scope: !9012, file: !193, line: 149, baseType: !9063, size: 64, offset: 768)
!9063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9064, size: 64)
!9064 = !DISubroutineType(types: !9065)
!9065 = !{!195, !195, !9066}
!9066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9067, size: 64)
!9067 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !244)
!9068 = !DIDerivedType(tag: DW_TAG_member, name: "cleancache_poolid", scope: !414, file: !166, line: 1500, baseType: !6, size: 32, offset: 7552)
!9069 = !DIDerivedType(tag: DW_TAG_member, name: "s_shrink", scope: !414, file: !166, line: 1502, baseType: !9070, size: 448, offset: 7616)
!9070 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrinker", file: !8715, line: 60, size: 448, elements: !9071)
!9071 = !{!9072, !9077, !9078, !9079, !9080, !9081, !9082}
!9072 = !DIDerivedType(tag: DW_TAG_member, name: "count_objects", scope: !9070, file: !8715, line: 61, baseType: !9073, size: 64)
!9073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9074, size: 64)
!9074 = !DISubroutineType(types: !9075)
!9075 = !{!135, !9076, !8713}
!9076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9070, size: 64)
!9077 = !DIDerivedType(tag: DW_TAG_member, name: "scan_objects", scope: !9070, file: !8715, line: 63, baseType: !9073, size: 64, offset: 64)
!9078 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !9070, file: !8715, line: 66, baseType: !120, size: 64, offset: 128)
!9079 = !DIDerivedType(tag: DW_TAG_member, name: "seeks", scope: !9070, file: !8715, line: 67, baseType: !6, size: 32, offset: 192)
!9080 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !9070, file: !8715, line: 68, baseType: !199, size: 32, offset: 224)
!9081 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !9070, file: !8715, line: 71, baseType: !30, size: 128, offset: 256)
!9082 = !DIDerivedType(tag: DW_TAG_member, name: "nr_deferred", scope: !9070, file: !8715, line: 77, baseType: !6279, size: 64, offset: 384)
!9083 = !DIDerivedType(tag: DW_TAG_member, name: "s_remove_count", scope: !414, file: !166, line: 1505, baseType: !562, size: 64, offset: 8064)
!9084 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_inode_refs", scope: !414, file: !166, line: 1508, baseType: !562, size: 64, offset: 8128)
!9085 = !DIDerivedType(tag: DW_TAG_member, name: "s_readonly_remount", scope: !414, file: !166, line: 1511, baseType: !6, size: 32, offset: 8192)
!9086 = !DIDerivedType(tag: DW_TAG_member, name: "s_wb_err", scope: !414, file: !166, line: 1514, baseType: !959, size: 32, offset: 8224)
!9087 = !DIDerivedType(tag: DW_TAG_member, name: "s_dio_done_wq", scope: !414, file: !166, line: 1517, baseType: !2578, size: 64, offset: 8256)
!9088 = !DIDerivedType(tag: DW_TAG_member, name: "s_pins", scope: !414, file: !166, line: 1518, baseType: !451, size: 64, offset: 8320)
!9089 = !DIDerivedType(tag: DW_TAG_member, name: "s_user_ns", scope: !414, file: !166, line: 1525, baseType: !1574, size: 64, offset: 8384)
!9090 = !DIDerivedType(tag: DW_TAG_member, name: "s_dentry_lru", scope: !414, file: !166, line: 1532, baseType: !9091, size: 64, offset: 8448)
!9091 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru", file: !9092, line: 52, size: 64, elements: !9093)
!9092 = !DIFile(filename: "./include/linux/list_lru.h", directory: "/home/lizy2001/genbc/linux")
!9093 = !{!9094}
!9094 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !9091, file: !9092, line: 53, baseType: !9095, size: 64)
!9095 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9096, size: 64)
!9096 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_node", file: !9092, line: 40, size: 256, elements: !9097)
!9097 = !{!9098, !9099, !9104}
!9098 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !9096, file: !9092, line: 42, baseType: !44)
!9099 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !9096, file: !9092, line: 44, baseType: !9100, size: 192)
!9100 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_one", file: !9092, line: 28, size: 192, elements: !9101)
!9101 = !{!9102, !9103}
!9102 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !9100, file: !9092, line: 29, baseType: !30, size: 128)
!9103 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !9100, file: !9092, line: 31, baseType: !120, size: 64, offset: 128)
!9104 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !9096, file: !9092, line: 49, baseType: !120, size: 64, offset: 192)
!9105 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_lru", scope: !414, file: !166, line: 1533, baseType: !9091, size: 64, offset: 8512)
!9106 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !414, file: !166, line: 1534, baseType: !178, size: 128, align: 64, offset: 8576)
!9107 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_work", scope: !414, file: !166, line: 1535, baseType: !1728, size: 256, offset: 8704)
!9108 = !DIDerivedType(tag: DW_TAG_member, name: "s_sync_lock", scope: !414, file: !166, line: 1537, baseType: !558, size: 192, offset: 8960)
!9109 = !DIDerivedType(tag: DW_TAG_member, name: "s_stack_depth", scope: !414, file: !166, line: 1542, baseType: !6, size: 32, offset: 9152)
!9110 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_list_lock", scope: !414, file: !166, line: 1545, baseType: !44, offset: 9184)
!9111 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes", scope: !414, file: !166, line: 1546, baseType: !30, size: 128, offset: 9216)
!9112 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_wblist_lock", scope: !414, file: !166, line: 1548, baseType: !44, offset: 9344)
!9113 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes_wb", scope: !414, file: !166, line: 1549, baseType: !30, size: 128, offset: 9344)
!9114 = !DIDerivedType(tag: DW_TAG_member, name: "i_mapping", scope: !244, file: !166, line: 624, baseType: !618, size: 64, offset: 256)
!9115 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino", scope: !244, file: !166, line: 631, baseType: !135, size: 64, offset: 320)
!9116 = !DIDerivedType(tag: DW_TAG_member, scope: !244, file: !166, line: 639, baseType: !9117, size: 32, offset: 384)
!9117 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !244, file: !166, line: 639, size: 32, elements: !9118)
!9118 = !{!9119, !9120}
!9119 = !DIDerivedType(tag: DW_TAG_member, name: "i_nlink", scope: !9117, file: !166, line: 640, baseType: !7954, size: 32)
!9120 = !DIDerivedType(tag: DW_TAG_member, name: "__i_nlink", scope: !9117, file: !166, line: 641, baseType: !199, size: 32)
!9121 = !DIDerivedType(tag: DW_TAG_member, name: "i_rdev", scope: !244, file: !166, line: 643, baseType: !327, size: 32, offset: 416)
!9122 = !DIDerivedType(tag: DW_TAG_member, name: "i_size", scope: !244, file: !166, line: 644, baseType: !345, size: 64, offset: 448)
!9123 = !DIDerivedType(tag: DW_TAG_member, name: "i_atime", scope: !244, file: !166, line: 645, baseType: !349, size: 128, offset: 512)
!9124 = !DIDerivedType(tag: DW_TAG_member, name: "i_mtime", scope: !244, file: !166, line: 646, baseType: !349, size: 128, offset: 640)
!9125 = !DIDerivedType(tag: DW_TAG_member, name: "i_ctime", scope: !244, file: !166, line: 647, baseType: !349, size: 128, offset: 768)
!9126 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock", scope: !244, file: !166, line: 648, baseType: !44, offset: 896)
!9127 = !DIDerivedType(tag: DW_TAG_member, name: "i_bytes", scope: !244, file: !166, line: 649, baseType: !127, size: 16, offset: 896)
!9128 = !DIDerivedType(tag: DW_TAG_member, name: "i_blkbits", scope: !244, file: !166, line: 650, baseType: !1403, size: 8, offset: 912)
!9129 = !DIDerivedType(tag: DW_TAG_member, name: "i_write_hint", scope: !244, file: !166, line: 651, baseType: !1403, size: 8, offset: 920)
!9130 = !DIDerivedType(tag: DW_TAG_member, name: "i_blocks", scope: !244, file: !166, line: 652, baseType: !8891, size: 64, offset: 960)
!9131 = !DIDerivedType(tag: DW_TAG_member, name: "i_state", scope: !244, file: !166, line: 659, baseType: !135, size: 64, offset: 1024)
!9132 = !DIDerivedType(tag: DW_TAG_member, name: "i_rwsem", scope: !244, file: !166, line: 660, baseType: !652, size: 256, offset: 1088)
!9133 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_when", scope: !244, file: !166, line: 662, baseType: !135, size: 64, offset: 1344)
!9134 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_time_when", scope: !244, file: !166, line: 663, baseType: !135, size: 64, offset: 1408)
!9135 = !DIDerivedType(tag: DW_TAG_member, name: "i_hash", scope: !244, file: !166, line: 665, baseType: !455, size: 128, offset: 1472)
!9136 = !DIDerivedType(tag: DW_TAG_member, name: "i_io_list", scope: !244, file: !166, line: 666, baseType: !30, size: 128, offset: 1600)
!9137 = !DIDerivedType(tag: DW_TAG_member, name: "i_lru", scope: !244, file: !166, line: 675, baseType: !30, size: 128, offset: 1728)
!9138 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb_list", scope: !244, file: !166, line: 676, baseType: !30, size: 128, offset: 1856)
!9139 = !DIDerivedType(tag: DW_TAG_member, name: "i_wb_list", scope: !244, file: !166, line: 677, baseType: !30, size: 128, offset: 1984)
!9140 = !DIDerivedType(tag: DW_TAG_member, scope: !244, file: !166, line: 678, baseType: !9141, size: 128, offset: 2112)
!9141 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !244, file: !166, line: 678, size: 128, elements: !9142)
!9142 = !{!9143, !9144}
!9143 = !DIDerivedType(tag: DW_TAG_member, name: "i_dentry", scope: !9141, file: !166, line: 679, baseType: !451, size: 64)
!9144 = !DIDerivedType(tag: DW_TAG_member, name: "i_rcu", scope: !9141, file: !166, line: 680, baseType: !178, size: 128, align: 64)
!9145 = !DIDerivedType(tag: DW_TAG_member, name: "i_version", scope: !244, file: !166, line: 682, baseType: !564, size: 64, offset: 2240)
!9146 = !DIDerivedType(tag: DW_TAG_member, name: "i_sequence", scope: !244, file: !166, line: 683, baseType: !564, size: 64, offset: 2304)
!9147 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !244, file: !166, line: 684, baseType: !632, size: 32, offset: 2368)
!9148 = !DIDerivedType(tag: DW_TAG_member, name: "i_dio_count", scope: !244, file: !166, line: 685, baseType: !632, size: 32, offset: 2400)
!9149 = !DIDerivedType(tag: DW_TAG_member, name: "i_writecount", scope: !244, file: !166, line: 686, baseType: !632, size: 32, offset: 2432)
!9150 = !DIDerivedType(tag: DW_TAG_member, name: "i_readcount", scope: !244, file: !166, line: 688, baseType: !632, size: 32, offset: 2464)
!9151 = !DIDerivedType(tag: DW_TAG_member, scope: !244, file: !166, line: 690, baseType: !9152, size: 64, offset: 2496)
!9152 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !244, file: !166, line: 690, size: 64, elements: !9153)
!9153 = !{!9154, !9356}
!9154 = !DIDerivedType(tag: DW_TAG_member, name: "i_fop", scope: !9152, file: !166, line: 691, baseType: !9155, size: 64)
!9155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9156, size: 64)
!9156 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9157)
!9157 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_operations", file: !166, line: 1822, size: 2048, elements: !9158)
!9158 = !{!9159, !9160, !9164, !9168, !9172, !9173, !9174, !9178, !9191, !9192, !9196, !9200, !9201, !9205, !9206, !9210, !9215, !9216, !9220, !9224, !9316, !9320, !9321, !9325, !9326, !9330, !9334, !9339, !9343, !9347, !9351, !9355}
!9159 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !9157, file: !166, line: 1823, baseType: !446, size: 64)
!9160 = !DIDerivedType(tag: DW_TAG_member, name: "llseek", scope: !9157, file: !166, line: 1824, baseType: !9161, size: 64, offset: 64)
!9161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9162, size: 64)
!9162 = !DISubroutineType(types: !9163)
!9163 = !{!345, !164, !345, !6}
!9164 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !9157, file: !166, line: 1825, baseType: !9165, size: 64, offset: 128)
!9165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9166, size: 64)
!9166 = !DISubroutineType(types: !9167)
!9167 = !{!116, !164, !85, !132, !580}
!9168 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !9157, file: !166, line: 1826, baseType: !9169, size: 64, offset: 192)
!9169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9170, size: 64)
!9170 = !DISubroutineType(types: !9171)
!9171 = !{!116, !164, !26, !132, !580}
!9172 = !DIDerivedType(tag: DW_TAG_member, name: "read_iter", scope: !9157, file: !166, line: 1827, baseType: !729, size: 64, offset: 256)
!9173 = !DIDerivedType(tag: DW_TAG_member, name: "write_iter", scope: !9157, file: !166, line: 1828, baseType: !729, size: 64, offset: 320)
!9174 = !DIDerivedType(tag: DW_TAG_member, name: "iopoll", scope: !9157, file: !166, line: 1829, baseType: !9175, size: 64, offset: 384)
!9175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9176, size: 64)
!9176 = !DISubroutineType(types: !9177)
!9177 = !{!6, !732, !304}
!9178 = !DIDerivedType(tag: DW_TAG_member, name: "iterate", scope: !9157, file: !166, line: 1830, baseType: !9179, size: 64, offset: 448)
!9179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9180, size: 64)
!9180 = !DISubroutineType(types: !9181)
!9181 = !{!6, !164, !9182}
!9182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9183, size: 64)
!9183 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dir_context", file: !166, line: 1776, size: 128, elements: !9184)
!9184 = !{!9185, !9190}
!9185 = !DIDerivedType(tag: DW_TAG_member, name: "actor", scope: !9183, file: !166, line: 1777, baseType: !9186, size: 64)
!9186 = !DIDerivedType(tag: DW_TAG_typedef, name: "filldir_t", file: !166, line: 1773, baseType: !9187)
!9187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9188, size: 64)
!9188 = !DISubroutineType(types: !9189)
!9189 = !{!6, !9182, !26, !6, !345, !235, !199}
!9190 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !9183, file: !166, line: 1778, baseType: !345, size: 64, offset: 64)
!9191 = !DIDerivedType(tag: DW_TAG_member, name: "iterate_shared", scope: !9157, file: !166, line: 1831, baseType: !9179, size: 64, offset: 512)
!9192 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !9157, file: !166, line: 1832, baseType: !9193, size: 64, offset: 576)
!9193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9194, size: 64)
!9194 = !DISubroutineType(types: !9195)
!9195 = !{!3585, !164, !3586}
!9196 = !DIDerivedType(tag: DW_TAG_member, name: "unlocked_ioctl", scope: !9157, file: !166, line: 1833, baseType: !9197, size: 64, offset: 640)
!9197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9198, size: 64)
!9198 = !DISubroutineType(types: !9199)
!9199 = !{!120, !164, !199, !135}
!9200 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !9157, file: !166, line: 1834, baseType: !9197, size: 64, offset: 704)
!9201 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !9157, file: !166, line: 1835, baseType: !9202, size: 64, offset: 768)
!9202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9203, size: 64)
!9203 = !DISubroutineType(types: !9204)
!9204 = !{!6, !164, !1032}
!9205 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_supported_flags", scope: !9157, file: !166, line: 1836, baseType: !135, size: 64, offset: 832)
!9206 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !9157, file: !166, line: 1837, baseType: !9207, size: 64, offset: 896)
!9207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9208, size: 64)
!9208 = !DISubroutineType(types: !9209)
!9209 = !{!6, !243, !164}
!9210 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !9157, file: !166, line: 1838, baseType: !9211, size: 64, offset: 960)
!9211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9212, size: 64)
!9212 = !DISubroutineType(types: !9213)
!9213 = !{!6, !164, !9214}
!9214 = !DIDerivedType(tag: DW_TAG_typedef, name: "fl_owner_t", file: !166, line: 1007, baseType: !159)
!9215 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !9157, file: !166, line: 1839, baseType: !9207, size: 64, offset: 1024)
!9216 = !DIDerivedType(tag: DW_TAG_member, name: "fsync", scope: !9157, file: !166, line: 1840, baseType: !9217, size: 64, offset: 1088)
!9217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9218, size: 64)
!9218 = !DISubroutineType(types: !9219)
!9219 = !{!6, !164, !345, !345, !6}
!9220 = !DIDerivedType(tag: DW_TAG_member, name: "fasync", scope: !9157, file: !166, line: 1841, baseType: !9221, size: 64, offset: 1152)
!9221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9222, size: 64)
!9222 = !DISubroutineType(types: !9223)
!9223 = !{!6, !6, !164, !6}
!9224 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !9157, file: !166, line: 1842, baseType: !9225, size: 64, offset: 1216)
!9225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9226, size: 64)
!9226 = !DISubroutineType(types: !9227)
!9227 = !{!6, !164, !6, !9228}
!9228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9229, size: 64)
!9229 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock", file: !166, line: 1062, size: 1664, elements: !9230)
!9230 = !{!9231, !9232, !9233, !9234, !9235, !9236, !9237, !9238, !9239, !9240, !9241, !9242, !9243, !9244, !9245, !9246, !9247, !9248, !9261, !9292}
!9231 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocker", scope: !9229, file: !166, line: 1063, baseType: !9228, size: 64)
!9232 = !DIDerivedType(tag: DW_TAG_member, name: "fl_list", scope: !9229, file: !166, line: 1064, baseType: !30, size: 128, offset: 64)
!9233 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link", scope: !9229, file: !166, line: 1065, baseType: !455, size: 128, offset: 192)
!9234 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_requests", scope: !9229, file: !166, line: 1066, baseType: !30, size: 128, offset: 320)
!9235 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_member", scope: !9229, file: !166, line: 1069, baseType: !30, size: 128, offset: 448)
!9236 = !DIDerivedType(tag: DW_TAG_member, name: "fl_owner", scope: !9229, file: !166, line: 1072, baseType: !9214, size: 64, offset: 576)
!9237 = !DIDerivedType(tag: DW_TAG_member, name: "fl_flags", scope: !9229, file: !166, line: 1073, baseType: !199, size: 32, offset: 640)
!9238 = !DIDerivedType(tag: DW_TAG_member, name: "fl_type", scope: !9229, file: !166, line: 1074, baseType: !241, size: 8, offset: 672)
!9239 = !DIDerivedType(tag: DW_TAG_member, name: "fl_pid", scope: !9229, file: !166, line: 1075, baseType: !199, size: 32, offset: 704)
!9240 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link_cpu", scope: !9229, file: !166, line: 1076, baseType: !6, size: 32, offset: 736)
!9241 = !DIDerivedType(tag: DW_TAG_member, name: "fl_wait", scope: !9229, file: !166, line: 1077, baseType: !812, size: 128, offset: 768)
!9242 = !DIDerivedType(tag: DW_TAG_member, name: "fl_file", scope: !9229, file: !166, line: 1078, baseType: !164, size: 64, offset: 896)
!9243 = !DIDerivedType(tag: DW_TAG_member, name: "fl_start", scope: !9229, file: !166, line: 1079, baseType: !345, size: 64, offset: 960)
!9244 = !DIDerivedType(tag: DW_TAG_member, name: "fl_end", scope: !9229, file: !166, line: 1080, baseType: !345, size: 64, offset: 1024)
!9245 = !DIDerivedType(tag: DW_TAG_member, name: "fl_fasync", scope: !9229, file: !166, line: 1082, baseType: !830, size: 64, offset: 1088)
!9246 = !DIDerivedType(tag: DW_TAG_member, name: "fl_break_time", scope: !9229, file: !166, line: 1084, baseType: !135, size: 64, offset: 1152)
!9247 = !DIDerivedType(tag: DW_TAG_member, name: "fl_downgrade_time", scope: !9229, file: !166, line: 1085, baseType: !135, size: 64, offset: 1216)
!9248 = !DIDerivedType(tag: DW_TAG_member, name: "fl_ops", scope: !9229, file: !166, line: 1087, baseType: !9249, size: 64, offset: 1280)
!9249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9250, size: 64)
!9250 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9251)
!9251 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_operations", file: !166, line: 1011, size: 128, elements: !9252)
!9252 = !{!9253, !9257}
!9253 = !DIDerivedType(tag: DW_TAG_member, name: "fl_copy_lock", scope: !9251, file: !166, line: 1012, baseType: !9254, size: 64)
!9254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9255, size: 64)
!9255 = !DISubroutineType(types: !9256)
!9256 = !{null, !9228, !9228}
!9257 = !DIDerivedType(tag: DW_TAG_member, name: "fl_release_private", scope: !9251, file: !166, line: 1013, baseType: !9258, size: 64, offset: 64)
!9258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9259, size: 64)
!9259 = !DISubroutineType(types: !9260)
!9260 = !{null, !9228}
!9261 = !DIDerivedType(tag: DW_TAG_member, name: "fl_lmops", scope: !9229, file: !166, line: 1088, baseType: !9262, size: 64, offset: 1344)
!9262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9263, size: 64)
!9263 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9264)
!9264 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_manager_operations", file: !166, line: 1016, size: 512, elements: !9265)
!9265 = !{!9266, !9270, !9274, !9275, !9279, !9283, !9287, !9291}
!9266 = !DIDerivedType(tag: DW_TAG_member, name: "lm_get_owner", scope: !9264, file: !166, line: 1017, baseType: !9267, size: 64)
!9267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9268, size: 64)
!9268 = !DISubroutineType(types: !9269)
!9269 = !{!9214, !9214}
!9270 = !DIDerivedType(tag: DW_TAG_member, name: "lm_put_owner", scope: !9264, file: !166, line: 1018, baseType: !9271, size: 64, offset: 64)
!9271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9272, size: 64)
!9272 = !DISubroutineType(types: !9273)
!9273 = !{null, !9214}
!9274 = !DIDerivedType(tag: DW_TAG_member, name: "lm_notify", scope: !9264, file: !166, line: 1019, baseType: !9258, size: 64, offset: 128)
!9275 = !DIDerivedType(tag: DW_TAG_member, name: "lm_grant", scope: !9264, file: !166, line: 1020, baseType: !9276, size: 64, offset: 192)
!9276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9277, size: 64)
!9277 = !DISubroutineType(types: !9278)
!9278 = !{!6, !9228, !6}
!9279 = !DIDerivedType(tag: DW_TAG_member, name: "lm_break", scope: !9264, file: !166, line: 1021, baseType: !9280, size: 64, offset: 256)
!9280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9281, size: 64)
!9281 = !DISubroutineType(types: !9282)
!9282 = !{!304, !9228}
!9283 = !DIDerivedType(tag: DW_TAG_member, name: "lm_change", scope: !9264, file: !166, line: 1022, baseType: !9284, size: 64, offset: 320)
!9284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9285, size: 64)
!9285 = !DISubroutineType(types: !9286)
!9286 = !{!6, !9228, !6, !34}
!9287 = !DIDerivedType(tag: DW_TAG_member, name: "lm_setup", scope: !9264, file: !166, line: 1023, baseType: !9288, size: 64, offset: 384)
!9288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9289, size: 64)
!9289 = !DISubroutineType(types: !9290)
!9290 = !{null, !9228, !706}
!9291 = !DIDerivedType(tag: DW_TAG_member, name: "lm_breaker_owns_lease", scope: !9264, file: !166, line: 1024, baseType: !9280, size: 64, offset: 448)
!9292 = !DIDerivedType(tag: DW_TAG_member, name: "fl_u", scope: !9229, file: !166, line: 1097, baseType: !9293, size: 256, offset: 1408)
!9293 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9229, file: !166, line: 1089, size: 256, elements: !9294)
!9294 = !{!9295, !9304, !9310}
!9295 = !DIDerivedType(tag: DW_TAG_member, name: "nfs_fl", scope: !9293, file: !166, line: 1090, baseType: !9296, size: 256)
!9296 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs_lock_info", file: !9297, line: 10, size: 256, elements: !9298)
!9297 = !DIFile(filename: "./include/linux/nfs_fs_i.h", directory: "/home/lizy2001/genbc/linux")
!9298 = !{!9299, !9300, !9303}
!9299 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !9296, file: !9297, line: 11, baseType: !229, size: 32)
!9300 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !9296, file: !9297, line: 12, baseType: !9301, size: 64, offset: 64)
!9301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9302, size: 64)
!9302 = !DICompositeType(tag: DW_TAG_structure_type, name: "nlm_lockowner", file: !9297, line: 5, flags: DIFlagFwdDecl)
!9303 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !9296, file: !9297, line: 13, baseType: !30, size: 128, offset: 128)
!9304 = !DIDerivedType(tag: DW_TAG_member, name: "nfs4_fl", scope: !9293, file: !166, line: 1091, baseType: !9305, size: 64)
!9305 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_info", file: !9297, line: 17, size: 64, elements: !9306)
!9306 = !{!9307}
!9307 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !9305, file: !9297, line: 18, baseType: !9308, size: 64)
!9308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9309, size: 64)
!9309 = !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_state", file: !9297, line: 16, flags: DIFlagFwdDecl)
!9310 = !DIDerivedType(tag: DW_TAG_member, name: "afs", scope: !9293, file: !166, line: 1096, baseType: !9311, size: 192)
!9311 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !9293, file: !166, line: 1092, size: 192, elements: !9312)
!9312 = !{!9313, !9314, !9315}
!9313 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !9311, file: !166, line: 1093, baseType: !30, size: 128)
!9314 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !9311, file: !166, line: 1094, baseType: !6, size: 32, offset: 128)
!9315 = !DIDerivedType(tag: DW_TAG_member, name: "debug_id", scope: !9311, file: !166, line: 1095, baseType: !199, size: 32, offset: 160)
!9316 = !DIDerivedType(tag: DW_TAG_member, name: "sendpage", scope: !9157, file: !166, line: 1843, baseType: !9317, size: 64, offset: 1280)
!9317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9318, size: 64)
!9318 = !DISubroutineType(types: !9319)
!9319 = !{!116, !164, !605, !6, !132, !580, !6}
!9320 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !9157, file: !166, line: 1844, baseType: !1158, size: 64, offset: 1344)
!9321 = !DIDerivedType(tag: DW_TAG_member, name: "check_flags", scope: !9157, file: !166, line: 1845, baseType: !9322, size: 64, offset: 1408)
!9322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9323, size: 64)
!9323 = !DISubroutineType(types: !9324)
!9324 = !{!6, !6}
!9325 = !DIDerivedType(tag: DW_TAG_member, name: "flock", scope: !9157, file: !166, line: 1846, baseType: !9225, size: 64, offset: 1472)
!9326 = !DIDerivedType(tag: DW_TAG_member, name: "splice_write", scope: !9157, file: !166, line: 1847, baseType: !9327, size: 64, offset: 1536)
!9327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9328, size: 64)
!9328 = !DISubroutineType(types: !9329)
!9329 = !{!116, !806, !164, !580, !132, !199}
!9330 = !DIDerivedType(tag: DW_TAG_member, name: "splice_read", scope: !9157, file: !166, line: 1848, baseType: !9331, size: 64, offset: 1600)
!9331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9332, size: 64)
!9332 = !DISubroutineType(types: !9333)
!9333 = !{!116, !164, !580, !806, !132, !199}
!9334 = !DIDerivedType(tag: DW_TAG_member, name: "setlease", scope: !9157, file: !166, line: 1849, baseType: !9335, size: 64, offset: 1664)
!9335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9336, size: 64)
!9336 = !DISubroutineType(types: !9337)
!9337 = !{!6, !164, !120, !9338, !706}
!9338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9228, size: 64)
!9339 = !DIDerivedType(tag: DW_TAG_member, name: "fallocate", scope: !9157, file: !166, line: 1850, baseType: !9340, size: 64, offset: 1728)
!9340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9341, size: 64)
!9341 = !DISubroutineType(types: !9342)
!9342 = !{!120, !164, !6, !345, !345}
!9343 = !DIDerivedType(tag: DW_TAG_member, name: "show_fdinfo", scope: !9157, file: !166, line: 1852, baseType: !9344, size: 64, offset: 1792)
!9344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9345, size: 64)
!9345 = !DISubroutineType(types: !9346)
!9346 = !{null, !546, !164}
!9347 = !DIDerivedType(tag: DW_TAG_member, name: "copy_file_range", scope: !9157, file: !166, line: 1856, baseType: !9348, size: 64, offset: 1856)
!9348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9349, size: 64)
!9349 = !DISubroutineType(types: !9350)
!9350 = !{!116, !164, !345, !164, !345, !132, !199}
!9351 = !DIDerivedType(tag: DW_TAG_member, name: "remap_file_range", scope: !9157, file: !166, line: 1858, baseType: !9352, size: 64, offset: 1920)
!9352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9353, size: 64)
!9353 = !DISubroutineType(types: !9354)
!9354 = !{!345, !164, !345, !164, !345, !345, !199}
!9355 = !DIDerivedType(tag: DW_TAG_member, name: "fadvise", scope: !9157, file: !166, line: 1861, baseType: !9217, size: 64, offset: 1984)
!9356 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !9152, file: !166, line: 692, baseType: !480, size: 64)
!9357 = !DIDerivedType(tag: DW_TAG_member, name: "i_flctx", scope: !244, file: !166, line: 694, baseType: !9358, size: 64, offset: 2560)
!9358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9359, size: 64)
!9359 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_context", file: !166, line: 1100, size: 384, elements: !9360)
!9360 = !{!9361, !9362, !9363, !9364}
!9361 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lock", scope: !9359, file: !166, line: 1101, baseType: !44)
!9362 = !DIDerivedType(tag: DW_TAG_member, name: "flc_flock", scope: !9359, file: !166, line: 1102, baseType: !30, size: 128)
!9363 = !DIDerivedType(tag: DW_TAG_member, name: "flc_posix", scope: !9359, file: !166, line: 1103, baseType: !30, size: 128, offset: 128)
!9364 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lease", scope: !9359, file: !166, line: 1104, baseType: !30, size: 128, offset: 256)
!9365 = !DIDerivedType(tag: DW_TAG_member, name: "i_data", scope: !244, file: !166, line: 695, baseType: !619, size: 1216, align: 64, offset: 2624)
!9366 = !DIDerivedType(tag: DW_TAG_member, name: "i_devices", scope: !244, file: !166, line: 696, baseType: !30, size: 128, offset: 3840)
!9367 = !DIDerivedType(tag: DW_TAG_member, scope: !244, file: !166, line: 697, baseType: !9368, size: 64, offset: 3968)
!9368 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !244, file: !166, line: 697, size: 64, elements: !9369)
!9369 = !{!9370, !9371, !9372, !9383, !9384}
!9370 = !DIDerivedType(tag: DW_TAG_member, name: "i_pipe", scope: !9368, file: !166, line: 698, baseType: !806, size: 64)
!9371 = !DIDerivedType(tag: DW_TAG_member, name: "i_bdev", scope: !9368, file: !166, line: 699, baseType: !7537, size: 64)
!9372 = !DIDerivedType(tag: DW_TAG_member, name: "i_cdev", scope: !9368, file: !166, line: 700, baseType: !9373, size: 64)
!9373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9374, size: 64)
!9374 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cdev", file: !9375, line: 14, size: 832, elements: !9376)
!9375 = !DIFile(filename: "./include/linux/cdev.h", directory: "/home/lizy2001/genbc/linux")
!9376 = !{!9377, !9378, !9379, !9380, !9381, !9382}
!9377 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !9374, file: !9375, line: 15, baseType: !22, size: 512)
!9378 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !9374, file: !9375, line: 16, baseType: !446, size: 64, offset: 512)
!9379 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !9374, file: !9375, line: 17, baseType: !9155, size: 64, offset: 576)
!9380 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !9374, file: !9375, line: 18, baseType: !30, size: 128, offset: 640)
!9381 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !9374, file: !9375, line: 19, baseType: !327, size: 32, offset: 768)
!9382 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !9374, file: !9375, line: 20, baseType: !199, size: 32, offset: 800)
!9383 = !DIDerivedType(tag: DW_TAG_member, name: "i_link", scope: !9368, file: !166, line: 701, baseType: !85, size: 64)
!9384 = !DIDerivedType(tag: DW_TAG_member, name: "i_dir_seq", scope: !9368, file: !166, line: 702, baseType: !199, size: 32)
!9385 = !DIDerivedType(tag: DW_TAG_member, name: "i_generation", scope: !244, file: !166, line: 705, baseType: !231, size: 32, offset: 4032)
!9386 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_mask", scope: !244, file: !166, line: 708, baseType: !231, size: 32, offset: 4064)
!9387 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_marks", scope: !244, file: !166, line: 709, baseType: !8996, size: 64, offset: 4096)
!9388 = !DIDerivedType(tag: DW_TAG_member, name: "i_private", scope: !244, file: !166, line: 720, baseType: !159, size: 64, offset: 4160)
!9389 = !DIDerivedType(tag: DW_TAG_member, name: "d_iname", scope: !196, file: !193, line: 98, baseType: !2644, size: 256, offset: 448)
!9390 = !DIDerivedType(tag: DW_TAG_member, name: "d_lockref", scope: !196, file: !193, line: 101, baseType: !9391, size: 32, offset: 704)
!9391 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lockref", file: !9392, line: 25, size: 32, elements: !9393)
!9392 = !DIFile(filename: "./include/linux/lockref.h", directory: "/home/lizy2001/genbc/linux")
!9393 = !{!9394}
!9394 = !DIDerivedType(tag: DW_TAG_member, scope: !9391, file: !9392, line: 26, baseType: !9395, size: 32)
!9395 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9391, file: !9392, line: 26, size: 32, elements: !9396)
!9396 = !{!9397}
!9397 = !DIDerivedType(tag: DW_TAG_member, scope: !9395, file: !9392, line: 30, baseType: !9398, size: 32)
!9398 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !9395, file: !9392, line: 30, size: 32, elements: !9399)
!9399 = !{!9400, !9401}
!9400 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !9398, file: !9392, line: 31, baseType: !44)
!9401 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !9398, file: !9392, line: 32, baseType: !6, size: 32)
!9402 = !DIDerivedType(tag: DW_TAG_member, name: "d_op", scope: !196, file: !193, line: 102, baseType: !9010, size: 64, offset: 768)
!9403 = !DIDerivedType(tag: DW_TAG_member, name: "d_sb", scope: !196, file: !193, line: 103, baseType: !413, size: 64, offset: 832)
!9404 = !DIDerivedType(tag: DW_TAG_member, name: "d_time", scope: !196, file: !193, line: 104, baseType: !135, size: 64, offset: 896)
!9405 = !DIDerivedType(tag: DW_TAG_member, name: "d_fsdata", scope: !196, file: !193, line: 105, baseType: !159, size: 64, offset: 960)
!9406 = !DIDerivedType(tag: DW_TAG_member, scope: !196, file: !193, line: 107, baseType: !9407, size: 128, offset: 1024)
!9407 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !196, file: !193, line: 107, size: 128, elements: !9408)
!9408 = !{!9409, !9410}
!9409 = !DIDerivedType(tag: DW_TAG_member, name: "d_lru", scope: !9407, file: !193, line: 108, baseType: !30, size: 128)
!9410 = !DIDerivedType(tag: DW_TAG_member, name: "d_wait", scope: !9407, file: !193, line: 109, baseType: !3595, size: 64)
!9411 = !DIDerivedType(tag: DW_TAG_member, name: "d_child", scope: !196, file: !193, line: 111, baseType: !30, size: 128, offset: 1152)
!9412 = !DIDerivedType(tag: DW_TAG_member, name: "d_subdirs", scope: !196, file: !193, line: 112, baseType: !30, size: 128, offset: 1280)
!9413 = !DIDerivedType(tag: DW_TAG_member, name: "d_u", scope: !196, file: !193, line: 120, baseType: !9414, size: 128, offset: 1408)
!9414 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !196, file: !193, line: 116, size: 128, elements: !9415)
!9415 = !{!9416, !9417, !9418}
!9416 = !DIDerivedType(tag: DW_TAG_member, name: "d_alias", scope: !9414, file: !193, line: 117, baseType: !455, size: 128)
!9417 = !DIDerivedType(tag: DW_TAG_member, name: "d_in_lookup_hash", scope: !9414, file: !193, line: 118, baseType: !211, size: 128)
!9418 = !DIDerivedType(tag: DW_TAG_member, name: "d_rcu", scope: !9414, file: !193, line: 119, baseType: !178, size: 128, align: 64)
!9419 = !DIDerivedType(tag: DW_TAG_member, name: "f_inode", scope: !165, file: !166, line: 922, baseType: !243, size: 64, offset: 256)
!9420 = !DIDerivedType(tag: DW_TAG_member, name: "f_op", scope: !165, file: !166, line: 923, baseType: !9155, size: 64, offset: 320)
!9421 = !DIDerivedType(tag: DW_TAG_member, name: "f_lock", scope: !165, file: !166, line: 929, baseType: !44, offset: 384)
!9422 = !DIDerivedType(tag: DW_TAG_member, name: "f_write_hint", scope: !165, file: !166, line: 930, baseType: !9423, size: 32, offset: 384)
!9423 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rw_hint", file: !166, line: 296, baseType: !199, size: 32, elements: !9424)
!9424 = !{!9425, !9426, !9427, !9428, !9429, !9430}
!9425 = !DIEnumerator(name: "WRITE_LIFE_NOT_SET", value: 0, isUnsigned: true)
!9426 = !DIEnumerator(name: "WRITE_LIFE_NONE", value: 1, isUnsigned: true)
!9427 = !DIEnumerator(name: "WRITE_LIFE_SHORT", value: 2, isUnsigned: true)
!9428 = !DIEnumerator(name: "WRITE_LIFE_MEDIUM", value: 3, isUnsigned: true)
!9429 = !DIEnumerator(name: "WRITE_LIFE_LONG", value: 4, isUnsigned: true)
!9430 = !DIEnumerator(name: "WRITE_LIFE_EXTREME", value: 5, isUnsigned: true)
!9431 = !DIDerivedType(tag: DW_TAG_member, name: "f_count", scope: !165, file: !166, line: 931, baseType: !562, size: 64, offset: 448)
!9432 = !DIDerivedType(tag: DW_TAG_member, name: "f_flags", scope: !165, file: !166, line: 932, baseType: !199, size: 32, offset: 512)
!9433 = !DIDerivedType(tag: DW_TAG_member, name: "f_mode", scope: !165, file: !166, line: 933, baseType: !7627, size: 32, offset: 544)
!9434 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos_lock", scope: !165, file: !166, line: 934, baseType: !558, size: 192, offset: 576)
!9435 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos", scope: !165, file: !166, line: 935, baseType: !345, size: 64, offset: 768)
!9436 = !DIDerivedType(tag: DW_TAG_member, name: "f_owner", scope: !165, file: !166, line: 936, baseType: !9437, size: 192, offset: 832)
!9437 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fown_struct", file: !166, line: 885, size: 192, elements: !9438)
!9438 = !{!9439, !9440, !9441, !9449, !9450, !9451}
!9439 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !9437, file: !166, line: 886, baseType: !834)
!9440 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !9437, file: !166, line: 887, baseType: !1533, size: 64)
!9441 = !DIDerivedType(tag: DW_TAG_member, name: "pid_type", scope: !9437, file: !166, line: 888, baseType: !9442, size: 32, offset: 64)
!9442 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pid_type", file: !1535, line: 9, baseType: !199, size: 32, elements: !9443)
!9443 = !{!9444, !9445, !9446, !9447, !9448}
!9444 = !DIEnumerator(name: "PIDTYPE_PID", value: 0, isUnsigned: true)
!9445 = !DIEnumerator(name: "PIDTYPE_TGID", value: 1, isUnsigned: true)
!9446 = !DIEnumerator(name: "PIDTYPE_PGID", value: 2, isUnsigned: true)
!9447 = !DIEnumerator(name: "PIDTYPE_SID", value: 3, isUnsigned: true)
!9448 = !DIEnumerator(name: "PIDTYPE_MAX", value: 4, isUnsigned: true)
!9449 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !9437, file: !166, line: 889, baseType: !249, size: 32, offset: 96)
!9450 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !9437, file: !166, line: 889, baseType: !249, size: 32, offset: 128)
!9451 = !DIDerivedType(tag: DW_TAG_member, name: "signum", scope: !9437, file: !166, line: 890, baseType: !6, size: 32, offset: 160)
!9452 = !DIDerivedType(tag: DW_TAG_member, name: "f_cred", scope: !165, file: !166, line: 937, baseType: !1889, size: 64, offset: 1024)
!9453 = !DIDerivedType(tag: DW_TAG_member, name: "f_ra", scope: !165, file: !166, line: 938, baseType: !9454, size: 256, offset: 1088)
!9454 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_ra_state", file: !166, line: 896, size: 256, elements: !9455)
!9455 = !{!9456, !9457, !9458, !9459, !9460, !9461}
!9456 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !9454, file: !166, line: 897, baseType: !135, size: 64)
!9457 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !9454, file: !166, line: 898, baseType: !199, size: 32, offset: 64)
!9458 = !DIDerivedType(tag: DW_TAG_member, name: "async_size", scope: !9454, file: !166, line: 899, baseType: !199, size: 32, offset: 96)
!9459 = !DIDerivedType(tag: DW_TAG_member, name: "ra_pages", scope: !9454, file: !166, line: 902, baseType: !199, size: 32, offset: 128)
!9460 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_miss", scope: !9454, file: !166, line: 903, baseType: !199, size: 32, offset: 160)
!9461 = !DIDerivedType(tag: DW_TAG_member, name: "prev_pos", scope: !9454, file: !166, line: 904, baseType: !345, size: 64, offset: 192)
!9462 = !DIDerivedType(tag: DW_TAG_member, name: "f_version", scope: !165, file: !166, line: 940, baseType: !235, size: 64, offset: 1344)
!9463 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !165, file: !166, line: 945, baseType: !159, size: 64, offset: 1408)
!9464 = !DIDerivedType(tag: DW_TAG_member, name: "f_ep_links", scope: !165, file: !166, line: 949, baseType: !30, size: 128, offset: 1472)
!9465 = !DIDerivedType(tag: DW_TAG_member, name: "f_tfile_llink", scope: !165, file: !166, line: 950, baseType: !30, size: 128, offset: 1600)
!9466 = !DIDerivedType(tag: DW_TAG_member, name: "f_mapping", scope: !165, file: !166, line: 952, baseType: !618, size: 64, offset: 1728)
!9467 = !DIDerivedType(tag: DW_TAG_member, name: "f_wb_err", scope: !165, file: !166, line: 953, baseType: !959, size: 32, offset: 1792)
!9468 = !DIDerivedType(tag: DW_TAG_member, name: "f_sb_err", scope: !165, file: !166, line: 954, baseType: !959, size: 32, offset: 1824)
!9469 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !154, file: !110, line: 174, baseType: !161, size: 64, offset: 320)
!9470 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !154, file: !110, line: 176, baseType: !9471, size: 64, offset: 384)
!9471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9472, size: 64)
!9472 = !DISubroutineType(types: !9473)
!9473 = !{!6, !164, !37, !153, !1032}
!9474 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !142, file: !110, line: 90, baseType: !137, size: 64, offset: 192)
!9475 = !DIDerivedType(tag: DW_TAG_member, name: "bin_attrs", scope: !142, file: !110, line: 91, baseType: !9476, size: 64, offset: 256)
!9476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !153, size: 64)
!9477 = !DIDerivedType(tag: DW_TAG_member, name: "child_ns_type", scope: !100, file: !23, line: 143, baseType: !9478, size: 64, offset: 256)
!9478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9479, size: 64)
!9479 = !DISubroutineType(types: !9480)
!9480 = !{!9481, !37}
!9481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9482, size: 64)
!9482 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9483)
!9483 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_ns_type_operations", file: !9484, line: 39, size: 384, elements: !9485)
!9484 = !DIFile(filename: "./include/linux/kobject_ns.h", directory: "/home/lizy2001/genbc/linux")
!9485 = !{!9486, !9492, !9496, !9500, !9504, !9508}
!9486 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !9483, file: !9484, line: 40, baseType: !9487, size: 32)
!9487 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kobj_ns_type", file: !9484, line: 26, baseType: !199, size: 32, elements: !9488)
!9488 = !{!9489, !9490, !9491}
!9489 = !DIEnumerator(name: "KOBJ_NS_TYPE_NONE", value: 0, isUnsigned: true)
!9490 = !DIEnumerator(name: "KOBJ_NS_TYPE_NET", value: 1, isUnsigned: true)
!9491 = !DIEnumerator(name: "KOBJ_NS_TYPES", value: 2, isUnsigned: true)
!9492 = !DIDerivedType(tag: DW_TAG_member, name: "current_may_mount", scope: !9483, file: !9484, line: 41, baseType: !9493, size: 64, offset: 64)
!9493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9494, size: 64)
!9494 = !DISubroutineType(types: !9495)
!9495 = !{!304}
!9496 = !DIDerivedType(tag: DW_TAG_member, name: "grab_current_ns", scope: !9483, file: !9484, line: 42, baseType: !9497, size: 64, offset: 128)
!9497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9498, size: 64)
!9498 = !DISubroutineType(types: !9499)
!9499 = !{!159}
!9500 = !DIDerivedType(tag: DW_TAG_member, name: "netlink_ns", scope: !9483, file: !9484, line: 43, baseType: !9501, size: 64, offset: 192)
!9501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9502, size: 64)
!9502 = !DISubroutineType(types: !9503)
!9503 = !{!2454, !2003}
!9504 = !DIDerivedType(tag: DW_TAG_member, name: "initial_ns", scope: !9483, file: !9484, line: 44, baseType: !9505, size: 64, offset: 256)
!9505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9506, size: 64)
!9506 = !DISubroutineType(types: !9507)
!9507 = !{!2454}
!9508 = !DIDerivedType(tag: DW_TAG_member, name: "drop_ns", scope: !9483, file: !9484, line: 45, baseType: !282, size: 64, offset: 320)
!9509 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !100, file: !23, line: 144, baseType: !9510, size: 64, offset: 320)
!9510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9511, size: 64)
!9511 = !DISubroutineType(types: !9512)
!9512 = !{!2454, !37}
!9513 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !100, file: !23, line: 145, baseType: !9514, size: 64, offset: 384)
!9514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9515, size: 64)
!9515 = !DISubroutineType(types: !9516)
!9516 = !{null, !37, !1814, !1815}
!9517 = !DIDerivedType(tag: DW_TAG_member, name: "sd", scope: !22, file: !23, line: 70, baseType: !9518, size: 64, offset: 384)
!9518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9519, size: 64)
!9519 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_node", file: !9520, line: 123, size: 1024, elements: !9521)
!9520 = !DIFile(filename: "./include/linux/kernfs.h", directory: "/home/lizy2001/genbc/linux")
!9521 = !{!9522, !9523, !9524, !9525, !9526, !9527, !9528, !9529, !9632, !9633, !9634, !9635, !9636}
!9522 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !9519, file: !9520, line: 124, baseType: !632, size: 32)
!9523 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !9519, file: !9520, line: 125, baseType: !632, size: 32, offset: 32)
!9524 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !9519, file: !9520, line: 135, baseType: !9518, size: 64, offset: 64)
!9525 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !9519, file: !9520, line: 136, baseType: !26, size: 64, offset: 128)
!9526 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !9519, file: !9520, line: 138, baseType: !645, size: 192, align: 64, offset: 192)
!9527 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !9519, file: !9520, line: 140, baseType: !2454, size: 64, offset: 384)
!9528 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !9519, file: !9520, line: 141, baseType: !199, size: 32, offset: 448)
!9529 = !DIDerivedType(tag: DW_TAG_member, scope: !9519, file: !9520, line: 142, baseType: !9530, size: 256, offset: 512)
!9530 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9519, file: !9520, line: 142, size: 256, elements: !9531)
!9531 = !{!9532, !9572, !9576}
!9532 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !9530, file: !9520, line: 143, baseType: !9533, size: 192)
!9533 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_dir", file: !9520, line: 91, size: 192, elements: !9534)
!9534 = !{!9535, !9536, !9537}
!9535 = !DIDerivedType(tag: DW_TAG_member, name: "subdirs", scope: !9533, file: !9520, line: 92, baseType: !135, size: 64)
!9536 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !9533, file: !9520, line: 94, baseType: !641, size: 64, offset: 64)
!9537 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !9533, file: !9520, line: 100, baseType: !9538, size: 64, offset: 128)
!9538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9539, size: 64)
!9539 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_root", file: !9520, line: 180, size: 704, elements: !9540)
!9540 = !{!9541, !9542, !9543, !9544, !9545, !9546, !9570, !9571}
!9541 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !9539, file: !9520, line: 182, baseType: !9518, size: 64)
!9542 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !9539, file: !9520, line: 183, baseType: !199, size: 32, offset: 64)
!9543 = !DIDerivedType(tag: DW_TAG_member, name: "ino_idr", scope: !9539, file: !9520, line: 186, baseType: !1561, size: 192, offset: 128)
!9544 = !DIDerivedType(tag: DW_TAG_member, name: "last_id_lowbits", scope: !9539, file: !9520, line: 187, baseType: !229, size: 32, offset: 320)
!9545 = !DIDerivedType(tag: DW_TAG_member, name: "id_highbits", scope: !9539, file: !9520, line: 188, baseType: !229, size: 32, offset: 352)
!9546 = !DIDerivedType(tag: DW_TAG_member, name: "syscall_ops", scope: !9539, file: !9520, line: 189, baseType: !9547, size: 64, offset: 384)
!9547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9548, size: 64)
!9548 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_syscall_ops", file: !9520, line: 168, size: 320, elements: !9549)
!9549 = !{!9550, !9554, !9558, !9562, !9566}
!9550 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !9548, file: !9520, line: 169, baseType: !9551, size: 64)
!9551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9552, size: 64)
!9552 = !DISubroutineType(types: !9553)
!9553 = !{!6, !546, !9538}
!9554 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !9548, file: !9520, line: 171, baseType: !9555, size: 64, offset: 64)
!9555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9556, size: 64)
!9556 = !DISubroutineType(types: !9557)
!9557 = !{!6, !9518, !26, !126}
!9558 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !9548, file: !9520, line: 173, baseType: !9559, size: 64, offset: 128)
!9559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9560, size: 64)
!9560 = !DISubroutineType(types: !9561)
!9561 = !{!6, !9518}
!9562 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !9548, file: !9520, line: 174, baseType: !9563, size: 64, offset: 192)
!9563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9564, size: 64)
!9564 = !DISubroutineType(types: !9565)
!9565 = !{!6, !9518, !9518, !26}
!9566 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !9548, file: !9520, line: 176, baseType: !9567, size: 64, offset: 256)
!9567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9568, size: 64)
!9568 = !DISubroutineType(types: !9569)
!9569 = !{!6, !546, !9518, !9538}
!9570 = !DIDerivedType(tag: DW_TAG_member, name: "supers", scope: !9539, file: !9520, line: 192, baseType: !30, size: 128, offset: 448)
!9571 = !DIDerivedType(tag: DW_TAG_member, name: "deactivate_waitq", scope: !9539, file: !9520, line: 194, baseType: !812, size: 128, offset: 576)
!9572 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !9530, file: !9520, line: 144, baseType: !9573, size: 64)
!9573 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_symlink", file: !9520, line: 103, size: 64, elements: !9574)
!9574 = !{!9575}
!9575 = !DIDerivedType(tag: DW_TAG_member, name: "target_kn", scope: !9573, file: !9520, line: 104, baseType: !9518, size: 64)
!9576 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !9530, file: !9520, line: 145, baseType: !9577, size: 256)
!9577 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_attr", file: !9520, line: 107, size: 256, elements: !9578)
!9578 = !{!9579, !9627, !9630, !9631}
!9579 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !9577, file: !9520, line: 108, baseType: !9580, size: 64)
!9580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9581, size: 64)
!9581 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9582)
!9582 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_ops", file: !9520, line: 217, size: 768, elements: !9583)
!9583 = !{!9584, !9604, !9608, !9609, !9610, !9611, !9612, !9616, !9617, !9618, !9619, !9623}
!9584 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !9582, file: !9520, line: 222, baseType: !9585, size: 64)
!9585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9586, size: 64)
!9586 = !DISubroutineType(types: !9587)
!9587 = !{!6, !9588}
!9588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9589, size: 64)
!9589 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_file", file: !9520, line: 197, size: 1088, elements: !9590)
!9590 = !{!9591, !9592, !9593, !9594, !9595, !9596, !9597, !9598, !9599, !9600, !9601, !9602, !9603}
!9591 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !9589, file: !9520, line: 199, baseType: !9518, size: 64)
!9592 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !9589, file: !9520, line: 200, baseType: !164, size: 64, offset: 64)
!9593 = !DIDerivedType(tag: DW_TAG_member, name: "seq_file", scope: !9589, file: !9520, line: 201, baseType: !546, size: 64, offset: 128)
!9594 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !9589, file: !9520, line: 202, baseType: !159, size: 64, offset: 192)
!9595 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !9589, file: !9520, line: 205, baseType: !558, size: 192, offset: 256)
!9596 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_mutex", scope: !9589, file: !9520, line: 206, baseType: !558, size: 192, offset: 448)
!9597 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !9589, file: !9520, line: 207, baseType: !6, size: 32, offset: 640)
!9598 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !9589, file: !9520, line: 208, baseType: !30, size: 128, offset: 704)
!9599 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_buf", scope: !9589, file: !9520, line: 209, baseType: !85, size: 64, offset: 832)
!9600 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !9589, file: !9520, line: 211, baseType: !132, size: 64, offset: 896)
!9601 = !DIDerivedType(tag: DW_TAG_member, name: "mmapped", scope: !9589, file: !9520, line: 212, baseType: !304, size: 1, offset: 960, flags: DIFlagBitField, extraData: i64 960)
!9602 = !DIDerivedType(tag: DW_TAG_member, name: "released", scope: !9589, file: !9520, line: 213, baseType: !304, size: 1, offset: 961, flags: DIFlagBitField, extraData: i64 960)
!9603 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !9589, file: !9520, line: 214, baseType: !1060, size: 64, offset: 1024)
!9604 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !9582, file: !9520, line: 223, baseType: !9605, size: 64, offset: 64)
!9605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9606, size: 64)
!9606 = !DISubroutineType(types: !9607)
!9607 = !{null, !9588}
!9608 = !DIDerivedType(tag: DW_TAG_member, name: "seq_show", scope: !9582, file: !9520, line: 236, baseType: !590, size: 64, offset: 128)
!9609 = !DIDerivedType(tag: DW_TAG_member, name: "seq_start", scope: !9582, file: !9520, line: 238, baseType: !577, size: 64, offset: 192)
!9610 = !DIDerivedType(tag: DW_TAG_member, name: "seq_next", scope: !9582, file: !9520, line: 239, baseType: !586, size: 64, offset: 256)
!9611 = !DIDerivedType(tag: DW_TAG_member, name: "seq_stop", scope: !9582, file: !9520, line: 240, baseType: !582, size: 64, offset: 320)
!9612 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !9582, file: !9520, line: 242, baseType: !9613, size: 64, offset: 384)
!9613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9614, size: 64)
!9614 = !DISubroutineType(types: !9615)
!9615 = !{!116, !9588, !85, !132, !345}
!9616 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !9582, file: !9520, line: 252, baseType: !132, size: 64, offset: 448)
!9617 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc", scope: !9582, file: !9520, line: 259, baseType: !304, size: 8, offset: 512)
!9618 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !9582, file: !9520, line: 260, baseType: !9613, size: 64, offset: 576)
!9619 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !9582, file: !9520, line: 263, baseType: !9620, size: 64, offset: 640)
!9620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9621, size: 64)
!9621 = !DISubroutineType(types: !9622)
!9622 = !{!3585, !9588, !3586}
!9623 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !9582, file: !9520, line: 266, baseType: !9624, size: 64, offset: 704)
!9624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9625, size: 64)
!9625 = !DISubroutineType(types: !9626)
!9626 = !{!6, !9588, !1032}
!9627 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !9577, file: !9520, line: 109, baseType: !9628, size: 64, offset: 64)
!9628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9629, size: 64)
!9629 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_node", file: !9520, line: 31, flags: DIFlagFwdDecl)
!9630 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !9577, file: !9520, line: 110, baseType: !345, size: 64, offset: 128)
!9631 = !DIDerivedType(tag: DW_TAG_member, name: "notify_next", scope: !9577, file: !9520, line: 111, baseType: !9518, size: 64, offset: 192)
!9632 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !9519, file: !9520, line: 148, baseType: !159, size: 64, offset: 768)
!9633 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !9519, file: !9520, line: 154, baseType: !235, size: 64, offset: 832)
!9634 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !9519, file: !9520, line: 156, baseType: !127, size: 16, offset: 896)
!9635 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !9519, file: !9520, line: 157, baseType: !126, size: 16, offset: 912)
!9636 = !DIDerivedType(tag: DW_TAG_member, name: "iattr", scope: !9519, file: !9520, line: 158, baseType: !9637, size: 64, offset: 960)
!9637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9638, size: 64)
!9638 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_iattrs", file: !9520, line: 32, flags: DIFlagFwdDecl)
!9639 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !22, file: !23, line: 71, baseType: !1556, size: 32, offset: 448)
!9640 = !DIDerivedType(tag: DW_TAG_member, name: "state_initialized", scope: !22, file: !23, line: 75, baseType: !199, size: 1, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!9641 = !DIDerivedType(tag: DW_TAG_member, name: "state_in_sysfs", scope: !22, file: !23, line: 76, baseType: !199, size: 1, offset: 481, flags: DIFlagBitField, extraData: i64 480)
!9642 = !DIDerivedType(tag: DW_TAG_member, name: "state_add_uevent_sent", scope: !22, file: !23, line: 77, baseType: !199, size: 1, offset: 482, flags: DIFlagBitField, extraData: i64 480)
!9643 = !DIDerivedType(tag: DW_TAG_member, name: "state_remove_uevent_sent", scope: !22, file: !23, line: 78, baseType: !199, size: 1, offset: 483, flags: DIFlagBitField, extraData: i64 480)
!9644 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_suppress", scope: !22, file: !23, line: 79, baseType: !199, size: 1, offset: 484, flags: DIFlagBitField, extraData: i64 480)
!9645 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !18, file: !19, line: 463, baseType: !17, size: 64, offset: 512)
!9646 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !18, file: !19, line: 465, baseType: !9647, size: 64, offset: 576)
!9647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9648, size: 64)
!9648 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_private", file: !19, line: 36, flags: DIFlagFwdDecl)
!9649 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !18, file: !19, line: 467, baseType: !26, size: 64, offset: 640)
!9650 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !18, file: !19, line: 468, baseType: !9651, size: 64, offset: 704)
!9651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9652, size: 64)
!9652 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9653)
!9653 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_type", file: !19, line: 87, size: 384, elements: !9654)
!9654 = !{!9655, !9656, !9657, !9661, !9665, !9669}
!9655 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !9653, file: !19, line: 88, baseType: !26, size: 64)
!9656 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !9653, file: !19, line: 89, baseType: !139, size: 64, offset: 64)
!9657 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !9653, file: !19, line: 90, baseType: !9658, size: 64, offset: 128)
!9658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9659, size: 64)
!9659 = !DISubroutineType(types: !9660)
!9660 = !{!6, !17, !80}
!9661 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !9653, file: !19, line: 91, baseType: !9662, size: 64, offset: 192)
!9662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9663, size: 64)
!9663 = !DISubroutineType(types: !9664)
!9664 = !{!85, !17, !7693, !1814, !1815}
!9665 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !9653, file: !19, line: 93, baseType: !9666, size: 64, offset: 256)
!9666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9667, size: 64)
!9667 = !DISubroutineType(types: !9668)
!9668 = !{null, !17}
!9669 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !9653, file: !19, line: 95, baseType: !9670, size: 64, offset: 320)
!9670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9671, size: 64)
!9671 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9672)
!9672 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_ops", file: !8031, line: 278, size: 1472, elements: !9673)
!9673 = !{!9674, !9678, !9679, !9680, !9681, !9682, !9683, !9684, !9685, !9686, !9687, !9688, !9689, !9690, !9691, !9692, !9693, !9694, !9695, !9696, !9697, !9698, !9699}
!9674 = !DIDerivedType(tag: DW_TAG_member, name: "prepare", scope: !9672, file: !8031, line: 279, baseType: !9675, size: 64)
!9675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9676, size: 64)
!9676 = !DISubroutineType(types: !9677)
!9677 = !{!6, !17}
!9678 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !9672, file: !8031, line: 280, baseType: !9666, size: 64, offset: 64)
!9679 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !9672, file: !8031, line: 281, baseType: !9675, size: 64, offset: 128)
!9680 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !9672, file: !8031, line: 282, baseType: !9675, size: 64, offset: 192)
!9681 = !DIDerivedType(tag: DW_TAG_member, name: "freeze", scope: !9672, file: !8031, line: 283, baseType: !9675, size: 64, offset: 256)
!9682 = !DIDerivedType(tag: DW_TAG_member, name: "thaw", scope: !9672, file: !8031, line: 284, baseType: !9675, size: 64, offset: 320)
!9683 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff", scope: !9672, file: !8031, line: 285, baseType: !9675, size: 64, offset: 384)
!9684 = !DIDerivedType(tag: DW_TAG_member, name: "restore", scope: !9672, file: !8031, line: 286, baseType: !9675, size: 64, offset: 448)
!9685 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_late", scope: !9672, file: !8031, line: 287, baseType: !9675, size: 64, offset: 512)
!9686 = !DIDerivedType(tag: DW_TAG_member, name: "resume_early", scope: !9672, file: !8031, line: 288, baseType: !9675, size: 64, offset: 576)
!9687 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_late", scope: !9672, file: !8031, line: 289, baseType: !9675, size: 64, offset: 640)
!9688 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_early", scope: !9672, file: !8031, line: 290, baseType: !9675, size: 64, offset: 704)
!9689 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_late", scope: !9672, file: !8031, line: 291, baseType: !9675, size: 64, offset: 768)
!9690 = !DIDerivedType(tag: DW_TAG_member, name: "restore_early", scope: !9672, file: !8031, line: 292, baseType: !9675, size: 64, offset: 832)
!9691 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_noirq", scope: !9672, file: !8031, line: 293, baseType: !9675, size: 64, offset: 896)
!9692 = !DIDerivedType(tag: DW_TAG_member, name: "resume_noirq", scope: !9672, file: !8031, line: 294, baseType: !9675, size: 64, offset: 960)
!9693 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_noirq", scope: !9672, file: !8031, line: 295, baseType: !9675, size: 64, offset: 1024)
!9694 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_noirq", scope: !9672, file: !8031, line: 296, baseType: !9675, size: 64, offset: 1088)
!9695 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_noirq", scope: !9672, file: !8031, line: 297, baseType: !9675, size: 64, offset: 1152)
!9696 = !DIDerivedType(tag: DW_TAG_member, name: "restore_noirq", scope: !9672, file: !8031, line: 298, baseType: !9675, size: 64, offset: 1216)
!9697 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_suspend", scope: !9672, file: !8031, line: 299, baseType: !9675, size: 64, offset: 1280)
!9698 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_resume", scope: !9672, file: !8031, line: 300, baseType: !9675, size: 64, offset: 1344)
!9699 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_idle", scope: !9672, file: !8031, line: 301, baseType: !9675, size: 64, offset: 1408)
!9700 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !18, file: !19, line: 470, baseType: !9701, size: 64, offset: 768)
!9701 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9702, size: 64)
!9702 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bus_type", file: !9703, line: 82, size: 1408, elements: !9704)
!9703 = !DIFile(filename: "./include/linux/device/bus.h", directory: "/home/lizy2001/genbc/linux")
!9704 = !{!9705, !9706, !9707, !9708, !9709, !9710, !9711, !9771, !9772, !9773, !9774, !9775, !9776, !9777, !9778, !9779, !9780, !9781, !9782, !9783, !9787, !9790, !9791}
!9705 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !9702, file: !9703, line: 83, baseType: !26, size: 64)
!9706 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name", scope: !9702, file: !9703, line: 84, baseType: !26, size: 64, offset: 64)
!9707 = !DIDerivedType(tag: DW_TAG_member, name: "dev_root", scope: !9702, file: !9703, line: 85, baseType: !17, size: 64, offset: 128)
!9708 = !DIDerivedType(tag: DW_TAG_member, name: "bus_groups", scope: !9702, file: !9703, line: 86, baseType: !139, size: 64, offset: 192)
!9709 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !9702, file: !9703, line: 87, baseType: !139, size: 64, offset: 256)
!9710 = !DIDerivedType(tag: DW_TAG_member, name: "drv_groups", scope: !9702, file: !9703, line: 88, baseType: !139, size: 64, offset: 320)
!9711 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !9702, file: !9703, line: 90, baseType: !9712, size: 64, offset: 384)
!9712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9713, size: 64)
!9713 = !DISubroutineType(types: !9714)
!9714 = !{!6, !17, !9715}
!9715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9716, size: 64)
!9716 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_driver", file: !9717, line: 95, size: 1152, elements: !9718)
!9717 = !DIFile(filename: "./include/linux/device/driver.h", directory: "/home/lizy2001/genbc/linux")
!9718 = !{!9719, !9720, !9721, !9722, !9723, !9724, !9730, !9740, !9751, !9752, !9753, !9754, !9755, !9763, !9764, !9765, !9766, !9767, !9768}
!9719 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !9716, file: !9717, line: 96, baseType: !26, size: 64)
!9720 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !9716, file: !9717, line: 97, baseType: !9701, size: 64, offset: 64)
!9721 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !9716, file: !9717, line: 99, baseType: !446, size: 64, offset: 128)
!9722 = !DIDerivedType(tag: DW_TAG_member, name: "mod_name", scope: !9716, file: !9717, line: 100, baseType: !26, size: 64, offset: 192)
!9723 = !DIDerivedType(tag: DW_TAG_member, name: "suppress_bind_attrs", scope: !9716, file: !9717, line: 102, baseType: !304, size: 8, offset: 256)
!9724 = !DIDerivedType(tag: DW_TAG_member, name: "probe_type", scope: !9716, file: !9717, line: 103, baseType: !9725, size: 32, offset: 288)
!9725 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "probe_type", file: !9717, line: 44, baseType: !199, size: 32, elements: !9726)
!9726 = !{!9727, !9728, !9729}
!9727 = !DIEnumerator(name: "PROBE_DEFAULT_STRATEGY", value: 0, isUnsigned: true)
!9728 = !DIEnumerator(name: "PROBE_PREFER_ASYNCHRONOUS", value: 1, isUnsigned: true)
!9729 = !DIEnumerator(name: "PROBE_FORCE_SYNCHRONOUS", value: 2, isUnsigned: true)
!9730 = !DIDerivedType(tag: DW_TAG_member, name: "of_match_table", scope: !9716, file: !9717, line: 105, baseType: !9731, size: 64, offset: 320)
!9731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9732, size: 64)
!9732 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9733)
!9733 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "of_device_id", file: !9734, line: 262, size: 1600, elements: !9735)
!9734 = !DIFile(filename: "./include/linux/mod_devicetable.h", directory: "/home/lizy2001/genbc/linux")
!9735 = !{!9736, !9737, !9738, !9739}
!9736 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !9733, file: !9734, line: 263, baseType: !4272, size: 256)
!9737 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !9733, file: !9734, line: 264, baseType: !4272, size: 256, offset: 256)
!9738 = !DIDerivedType(tag: DW_TAG_member, name: "compatible", scope: !9733, file: !9734, line: 265, baseType: !3220, size: 1024, offset: 512)
!9739 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !9733, file: !9734, line: 266, baseType: !2454, size: 64, offset: 1536)
!9740 = !DIDerivedType(tag: DW_TAG_member, name: "acpi_match_table", scope: !9716, file: !9717, line: 106, baseType: !9741, size: 64, offset: 384)
!9741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9742, size: 64)
!9742 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9743)
!9743 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_id", file: !9734, line: 210, size: 256, elements: !9744)
!9744 = !{!9745, !9747, !9749, !9750}
!9745 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !9743, file: !9734, line: 211, baseType: !9746, size: 72)
!9746 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1404, size: 72, elements: !6751)
!9747 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !9743, file: !9734, line: 212, baseType: !9748, size: 64, offset: 128)
!9748 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_ulong_t", file: !9734, line: 14, baseType: !135)
!9749 = !DIDerivedType(tag: DW_TAG_member, name: "cls", scope: !9743, file: !9734, line: 213, baseType: !231, size: 32, offset: 192)
!9750 = !DIDerivedType(tag: DW_TAG_member, name: "cls_msk", scope: !9743, file: !9734, line: 214, baseType: !231, size: 32, offset: 224)
!9751 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !9716, file: !9717, line: 108, baseType: !9675, size: 64, offset: 448)
!9752 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !9716, file: !9717, line: 109, baseType: !9666, size: 64, offset: 512)
!9753 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !9716, file: !9717, line: 110, baseType: !9675, size: 64, offset: 576)
!9754 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !9716, file: !9717, line: 111, baseType: !9666, size: 64, offset: 640)
!9755 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !9716, file: !9717, line: 112, baseType: !9756, size: 64, offset: 704)
!9756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9757, size: 64)
!9757 = !DISubroutineType(types: !9758)
!9758 = !{!6, !17, !9759}
!9759 = !DIDerivedType(tag: DW_TAG_typedef, name: "pm_message_t", file: !8031, line: 52, baseType: !9760)
!9760 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_message", file: !8031, line: 50, size: 32, elements: !9761)
!9761 = !{!9762}
!9762 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !9760, file: !8031, line: 51, baseType: !6, size: 32)
!9763 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !9716, file: !9717, line: 113, baseType: !9675, size: 64, offset: 768)
!9764 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !9716, file: !9717, line: 114, baseType: !139, size: 64, offset: 832)
!9765 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !9716, file: !9717, line: 115, baseType: !139, size: 64, offset: 896)
!9766 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !9716, file: !9717, line: 117, baseType: !9670, size: 64, offset: 960)
!9767 = !DIDerivedType(tag: DW_TAG_member, name: "coredump", scope: !9716, file: !9717, line: 118, baseType: !9666, size: 64, offset: 1024)
!9768 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !9716, file: !9717, line: 120, baseType: !9769, size: 64, offset: 1088)
!9769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9770, size: 64)
!9770 = !DICompositeType(tag: DW_TAG_structure_type, name: "driver_private", file: !9717, line: 120, flags: DIFlagFwdDecl)
!9771 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !9702, file: !9703, line: 91, baseType: !9658, size: 64, offset: 448)
!9772 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !9702, file: !9703, line: 92, baseType: !9675, size: 64, offset: 512)
!9773 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !9702, file: !9703, line: 93, baseType: !9666, size: 64, offset: 576)
!9774 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !9702, file: !9703, line: 94, baseType: !9675, size: 64, offset: 640)
!9775 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !9702, file: !9703, line: 95, baseType: !9666, size: 64, offset: 704)
!9776 = !DIDerivedType(tag: DW_TAG_member, name: "online", scope: !9702, file: !9703, line: 97, baseType: !9675, size: 64, offset: 768)
!9777 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !9702, file: !9703, line: 98, baseType: !9675, size: 64, offset: 832)
!9778 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !9702, file: !9703, line: 100, baseType: !9756, size: 64, offset: 896)
!9779 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !9702, file: !9703, line: 101, baseType: !9675, size: 64, offset: 960)
!9780 = !DIDerivedType(tag: DW_TAG_member, name: "num_vf", scope: !9702, file: !9703, line: 103, baseType: !9675, size: 64, offset: 1024)
!9781 = !DIDerivedType(tag: DW_TAG_member, name: "dma_configure", scope: !9702, file: !9703, line: 105, baseType: !9675, size: 64, offset: 1088)
!9782 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !9702, file: !9703, line: 107, baseType: !9670, size: 64, offset: 1152)
!9783 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_ops", scope: !9702, file: !9703, line: 109, baseType: !9784, size: 64, offset: 1216)
!9784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9785, size: 64)
!9785 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9786)
!9786 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_ops", file: !9703, line: 109, flags: DIFlagFwdDecl)
!9787 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !9702, file: !9703, line: 111, baseType: !9788, size: 64, offset: 1280)
!9788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9789, size: 64)
!9789 = !DICompositeType(tag: DW_TAG_structure_type, name: "subsys_private", file: !9703, line: 111, flags: DIFlagFwdDecl)
!9790 = !DIDerivedType(tag: DW_TAG_member, name: "lock_key", scope: !9702, file: !9703, line: 112, baseType: !461, offset: 1344)
!9791 = !DIDerivedType(tag: DW_TAG_member, name: "need_parent_lock", scope: !9702, file: !9703, line: 114, baseType: !304, size: 8, offset: 1344)
!9792 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !18, file: !19, line: 471, baseType: !9715, size: 64, offset: 832)
!9793 = !DIDerivedType(tag: DW_TAG_member, name: "platform_data", scope: !18, file: !19, line: 473, baseType: !159, size: 64, offset: 896)
!9794 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !18, file: !19, line: 475, baseType: !159, size: 64, offset: 960)
!9795 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !18, file: !19, line: 480, baseType: !558, size: 192, offset: 1024)
!9796 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !18, file: !19, line: 484, baseType: !9797, size: 576, offset: 1216)
!9797 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_links_info", file: !19, line: 361, size: 576, elements: !9798)
!9798 = !{!9799, !9800, !9801, !9802, !9803, !9804}
!9799 = !DIDerivedType(tag: DW_TAG_member, name: "suppliers", scope: !9797, file: !19, line: 362, baseType: !30, size: 128)
!9800 = !DIDerivedType(tag: DW_TAG_member, name: "consumers", scope: !9797, file: !19, line: 363, baseType: !30, size: 128, offset: 128)
!9801 = !DIDerivedType(tag: DW_TAG_member, name: "needs_suppliers", scope: !9797, file: !19, line: 364, baseType: !30, size: 128, offset: 256)
!9802 = !DIDerivedType(tag: DW_TAG_member, name: "defer_hook", scope: !9797, file: !19, line: 365, baseType: !30, size: 128, offset: 384)
!9803 = !DIDerivedType(tag: DW_TAG_member, name: "need_for_probe", scope: !9797, file: !19, line: 366, baseType: !304, size: 8, offset: 512)
!9804 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !9797, file: !19, line: 367, baseType: !9805, size: 32, offset: 544)
!9805 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dl_dev_state", file: !19, line: 343, baseType: !199, size: 32, elements: !9806)
!9806 = !{!9807, !9808, !9809, !9810}
!9807 = !DIEnumerator(name: "DL_DEV_NO_DRIVER", value: 0, isUnsigned: true)
!9808 = !DIEnumerator(name: "DL_DEV_PROBING", value: 1, isUnsigned: true)
!9809 = !DIEnumerator(name: "DL_DEV_DRIVER_BOUND", value: 2, isUnsigned: true)
!9810 = !DIEnumerator(name: "DL_DEV_UNBINDING", value: 3, isUnsigned: true)
!9811 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !18, file: !19, line: 485, baseType: !9812, size: 2304, offset: 1792)
!9812 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_info", file: !8031, line: 565, size: 2304, elements: !9813)
!9813 = !{!9814, !9815, !9816, !9817, !9818, !9819, !9820, !9821, !9822, !9823, !9824, !9825, !9826, !9827, !9828, !9829, !9856, !9857, !9858, !9859, !9860, !9861, !9862, !9863, !9864, !9865, !9866, !9867, !9868, !9869, !9870, !9871, !9872, !9873, !9874, !9875, !9876, !9877, !9878, !9879, !9880, !9888, !9889, !9890, !9891, !9892, !9893, !9894, !9895, !9905, !9909}
!9814 = !DIDerivedType(tag: DW_TAG_member, name: "power_state", scope: !9812, file: !8031, line: 566, baseType: !9759, size: 32)
!9815 = !DIDerivedType(tag: DW_TAG_member, name: "can_wakeup", scope: !9812, file: !8031, line: 567, baseType: !199, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!9816 = !DIDerivedType(tag: DW_TAG_member, name: "async_suspend", scope: !9812, file: !8031, line: 568, baseType: !199, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 32)
!9817 = !DIDerivedType(tag: DW_TAG_member, name: "in_dpm_list", scope: !9812, file: !8031, line: 569, baseType: !304, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 32)
!9818 = !DIDerivedType(tag: DW_TAG_member, name: "is_prepared", scope: !9812, file: !8031, line: 570, baseType: !304, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 32)
!9819 = !DIDerivedType(tag: DW_TAG_member, name: "is_suspended", scope: !9812, file: !8031, line: 571, baseType: !304, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 32)
!9820 = !DIDerivedType(tag: DW_TAG_member, name: "is_noirq_suspended", scope: !9812, file: !8031, line: 572, baseType: !304, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 32)
!9821 = !DIDerivedType(tag: DW_TAG_member, name: "is_late_suspended", scope: !9812, file: !8031, line: 573, baseType: !304, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 32)
!9822 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm", scope: !9812, file: !8031, line: 574, baseType: !304, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 32)
!9823 = !DIDerivedType(tag: DW_TAG_member, name: "early_init", scope: !9812, file: !8031, line: 575, baseType: !304, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!9824 = !DIDerivedType(tag: DW_TAG_member, name: "direct_complete", scope: !9812, file: !8031, line: 576, baseType: !304, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 32)
!9825 = !DIDerivedType(tag: DW_TAG_member, name: "driver_flags", scope: !9812, file: !8031, line: 577, baseType: !229, size: 32, offset: 64)
!9826 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !9812, file: !8031, line: 578, baseType: !44, offset: 96)
!9827 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !9812, file: !8031, line: 580, baseType: !30, size: 128, offset: 128)
!9828 = !DIDerivedType(tag: DW_TAG_member, name: "completion", scope: !9812, file: !8031, line: 581, baseType: !1789, size: 192, offset: 256)
!9829 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup", scope: !9812, file: !8031, line: 582, baseType: !9830, size: 64, offset: 448)
!9830 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9831, size: 64)
!9831 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wakeup_source", file: !9832, line: 43, size: 1472, elements: !9833)
!9832 = !DIFile(filename: "./include/linux/pm_wakeup.h", directory: "/home/lizy2001/genbc/linux")
!9833 = !{!9834, !9835, !9836, !9837, !9838, !9841, !9842, !9843, !9844, !9845, !9846, !9847, !9848, !9849, !9850, !9851, !9852, !9853, !9854, !9855}
!9834 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !9831, file: !9832, line: 44, baseType: !26, size: 64)
!9835 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !9831, file: !9832, line: 45, baseType: !6, size: 32, offset: 64)
!9836 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !9831, file: !9832, line: 46, baseType: !30, size: 128, offset: 128)
!9837 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !9831, file: !9832, line: 47, baseType: !44, offset: 256)
!9838 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !9831, file: !9832, line: 48, baseType: !9839, size: 64, offset: 256)
!9839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9840, size: 64)
!9840 = !DICompositeType(tag: DW_TAG_structure_type, name: "wake_irq", file: !8031, line: 533, flags: DIFlagFwdDecl)
!9841 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !9831, file: !9832, line: 49, baseType: !2566, size: 320, offset: 320)
!9842 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !9831, file: !9832, line: 50, baseType: !135, size: 64, offset: 640)
!9843 = !DIDerivedType(tag: DW_TAG_member, name: "total_time", scope: !9831, file: !9832, line: 51, baseType: !1347, size: 64, offset: 704)
!9844 = !DIDerivedType(tag: DW_TAG_member, name: "max_time", scope: !9831, file: !9832, line: 52, baseType: !1347, size: 64, offset: 768)
!9845 = !DIDerivedType(tag: DW_TAG_member, name: "last_time", scope: !9831, file: !9832, line: 53, baseType: !1347, size: 64, offset: 832)
!9846 = !DIDerivedType(tag: DW_TAG_member, name: "start_prevent_time", scope: !9831, file: !9832, line: 54, baseType: !1347, size: 64, offset: 896)
!9847 = !DIDerivedType(tag: DW_TAG_member, name: "prevent_sleep_time", scope: !9831, file: !9832, line: 55, baseType: !1347, size: 64, offset: 960)
!9848 = !DIDerivedType(tag: DW_TAG_member, name: "event_count", scope: !9831, file: !9832, line: 56, baseType: !135, size: 64, offset: 1024)
!9849 = !DIDerivedType(tag: DW_TAG_member, name: "active_count", scope: !9831, file: !9832, line: 57, baseType: !135, size: 64, offset: 1088)
!9850 = !DIDerivedType(tag: DW_TAG_member, name: "relax_count", scope: !9831, file: !9832, line: 58, baseType: !135, size: 64, offset: 1152)
!9851 = !DIDerivedType(tag: DW_TAG_member, name: "expire_count", scope: !9831, file: !9832, line: 59, baseType: !135, size: 64, offset: 1216)
!9852 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_count", scope: !9831, file: !9832, line: 60, baseType: !135, size: 64, offset: 1280)
!9853 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !9831, file: !9832, line: 61, baseType: !17, size: 64, offset: 1344)
!9854 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !9831, file: !9832, line: 62, baseType: !304, size: 1, offset: 1408, flags: DIFlagBitField, extraData: i64 1408)
!9855 = !DIDerivedType(tag: DW_TAG_member, name: "autosleep_enabled", scope: !9831, file: !9832, line: 63, baseType: !304, size: 1, offset: 1409, flags: DIFlagBitField, extraData: i64 1408)
!9856 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_path", scope: !9812, file: !8031, line: 583, baseType: !304, size: 1, offset: 512, flags: DIFlagBitField, extraData: i64 512)
!9857 = !DIDerivedType(tag: DW_TAG_member, name: "syscore", scope: !9812, file: !8031, line: 584, baseType: !304, size: 1, offset: 513, flags: DIFlagBitField, extraData: i64 512)
!9858 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm_callbacks", scope: !9812, file: !8031, line: 585, baseType: !304, size: 1, offset: 514, flags: DIFlagBitField, extraData: i64 512)
!9859 = !DIDerivedType(tag: DW_TAG_member, name: "must_resume", scope: !9812, file: !8031, line: 586, baseType: !199, size: 1, offset: 515, flags: DIFlagBitField, extraData: i64 512)
!9860 = !DIDerivedType(tag: DW_TAG_member, name: "may_skip_resume", scope: !9812, file: !8031, line: 587, baseType: !199, size: 1, offset: 516, flags: DIFlagBitField, extraData: i64 512)
!9861 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_timer", scope: !9812, file: !8031, line: 592, baseType: !1338, size: 512, offset: 576)
!9862 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !9812, file: !8031, line: 593, baseType: !235, size: 64, offset: 1088)
!9863 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !9812, file: !8031, line: 594, baseType: !1728, size: 256, offset: 1152)
!9864 = !DIDerivedType(tag: DW_TAG_member, name: "wait_queue", scope: !9812, file: !8031, line: 595, baseType: !812, size: 128, offset: 1408)
!9865 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !9812, file: !8031, line: 596, baseType: !9839, size: 64, offset: 1536)
!9866 = !DIDerivedType(tag: DW_TAG_member, name: "usage_count", scope: !9812, file: !8031, line: 597, baseType: !632, size: 32, offset: 1600)
!9867 = !DIDerivedType(tag: DW_TAG_member, name: "child_count", scope: !9812, file: !8031, line: 598, baseType: !632, size: 32, offset: 1632)
!9868 = !DIDerivedType(tag: DW_TAG_member, name: "disable_depth", scope: !9812, file: !8031, line: 599, baseType: !199, size: 3, offset: 1664, flags: DIFlagBitField, extraData: i64 1664)
!9869 = !DIDerivedType(tag: DW_TAG_member, name: "idle_notification", scope: !9812, file: !8031, line: 600, baseType: !199, size: 1, offset: 1667, flags: DIFlagBitField, extraData: i64 1664)
!9870 = !DIDerivedType(tag: DW_TAG_member, name: "request_pending", scope: !9812, file: !8031, line: 601, baseType: !199, size: 1, offset: 1668, flags: DIFlagBitField, extraData: i64 1664)
!9871 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_resume", scope: !9812, file: !8031, line: 602, baseType: !199, size: 1, offset: 1669, flags: DIFlagBitField, extraData: i64 1664)
!9872 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_auto", scope: !9812, file: !8031, line: 603, baseType: !199, size: 1, offset: 1670, flags: DIFlagBitField, extraData: i64 1664)
!9873 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_children", scope: !9812, file: !8031, line: 604, baseType: !304, size: 1, offset: 1671, flags: DIFlagBitField, extraData: i64 1664)
!9874 = !DIDerivedType(tag: DW_TAG_member, name: "no_callbacks", scope: !9812, file: !8031, line: 605, baseType: !199, size: 1, offset: 1672, flags: DIFlagBitField, extraData: i64 1664)
!9875 = !DIDerivedType(tag: DW_TAG_member, name: "irq_safe", scope: !9812, file: !8031, line: 606, baseType: !199, size: 1, offset: 1673, flags: DIFlagBitField, extraData: i64 1664)
!9876 = !DIDerivedType(tag: DW_TAG_member, name: "use_autosuspend", scope: !9812, file: !8031, line: 607, baseType: !199, size: 1, offset: 1674, flags: DIFlagBitField, extraData: i64 1664)
!9877 = !DIDerivedType(tag: DW_TAG_member, name: "timer_autosuspends", scope: !9812, file: !8031, line: 608, baseType: !199, size: 1, offset: 1675, flags: DIFlagBitField, extraData: i64 1664)
!9878 = !DIDerivedType(tag: DW_TAG_member, name: "memalloc_noio", scope: !9812, file: !8031, line: 609, baseType: !199, size: 1, offset: 1676, flags: DIFlagBitField, extraData: i64 1664)
!9879 = !DIDerivedType(tag: DW_TAG_member, name: "links_count", scope: !9812, file: !8031, line: 610, baseType: !199, size: 32, offset: 1696)
!9880 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !9812, file: !8031, line: 611, baseType: !9881, size: 32, offset: 1728)
!9881 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_request", file: !8031, line: 524, baseType: !199, size: 32, elements: !9882)
!9882 = !{!9883, !9884, !9885, !9886, !9887}
!9883 = !DIEnumerator(name: "RPM_REQ_NONE", value: 0, isUnsigned: true)
!9884 = !DIEnumerator(name: "RPM_REQ_IDLE", value: 1, isUnsigned: true)
!9885 = !DIEnumerator(name: "RPM_REQ_SUSPEND", value: 2, isUnsigned: true)
!9886 = !DIEnumerator(name: "RPM_REQ_AUTOSUSPEND", value: 3, isUnsigned: true)
!9887 = !DIEnumerator(name: "RPM_REQ_RESUME", value: 4, isUnsigned: true)
!9888 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_status", scope: !9812, file: !8031, line: 612, baseType: !8030, size: 32, offset: 1760)
!9889 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_error", scope: !9812, file: !8031, line: 613, baseType: !6, size: 32, offset: 1792)
!9890 = !DIDerivedType(tag: DW_TAG_member, name: "autosuspend_delay", scope: !9812, file: !8031, line: 614, baseType: !6, size: 32, offset: 1824)
!9891 = !DIDerivedType(tag: DW_TAG_member, name: "last_busy", scope: !9812, file: !8031, line: 615, baseType: !235, size: 64, offset: 1856)
!9892 = !DIDerivedType(tag: DW_TAG_member, name: "active_time", scope: !9812, file: !8031, line: 616, baseType: !235, size: 64, offset: 1920)
!9893 = !DIDerivedType(tag: DW_TAG_member, name: "suspended_time", scope: !9812, file: !8031, line: 617, baseType: !235, size: 64, offset: 1984)
!9894 = !DIDerivedType(tag: DW_TAG_member, name: "accounting_timestamp", scope: !9812, file: !8031, line: 618, baseType: !235, size: 64, offset: 2048)
!9895 = !DIDerivedType(tag: DW_TAG_member, name: "subsys_data", scope: !9812, file: !8031, line: 620, baseType: !9896, size: 64, offset: 2112)
!9896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9897, size: 64)
!9897 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_subsys_data", file: !8031, line: 536, size: 256, elements: !9898)
!9898 = !{!9899, !9900, !9901, !9902}
!9899 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !9897, file: !8031, line: 537, baseType: !44)
!9900 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !9897, file: !8031, line: 538, baseType: !199, size: 32)
!9901 = !DIDerivedType(tag: DW_TAG_member, name: "clock_list", scope: !9897, file: !8031, line: 540, baseType: !30, size: 128, offset: 64)
!9902 = !DIDerivedType(tag: DW_TAG_member, name: "domain_data", scope: !9897, file: !8031, line: 543, baseType: !9903, size: 64, offset: 192)
!9903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9904, size: 64)
!9904 = !DICompositeType(tag: DW_TAG_structure_type, name: "pm_domain_data", file: !8031, line: 534, flags: DIFlagFwdDecl)
!9905 = !DIDerivedType(tag: DW_TAG_member, name: "set_latency_tolerance", scope: !9812, file: !8031, line: 621, baseType: !9906, size: 64, offset: 2176)
!9906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9907, size: 64)
!9907 = !DISubroutineType(types: !9908)
!9908 = !{null, !17, !1501}
!9909 = !DIDerivedType(tag: DW_TAG_member, name: "qos", scope: !9812, file: !8031, line: 622, baseType: !9910, size: 64, offset: 2240)
!9910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9911, size: 64)
!9911 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_qos", file: !8031, line: 622, flags: DIFlagFwdDecl)
!9912 = !DIDerivedType(tag: DW_TAG_member, name: "pm_domain", scope: !18, file: !19, line: 486, baseType: !9913, size: 64, offset: 4096)
!9913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9914, size: 64)
!9914 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_domain", file: !8031, line: 642, size: 1792, elements: !9915)
!9915 = !{!9916, !9917, !9918, !9922, !9923, !9924}
!9916 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !9914, file: !8031, line: 643, baseType: !9672, size: 1472)
!9917 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !9914, file: !8031, line: 644, baseType: !9675, size: 64, offset: 1472)
!9918 = !DIDerivedType(tag: DW_TAG_member, name: "detach", scope: !9914, file: !8031, line: 645, baseType: !9919, size: 64, offset: 1536)
!9919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9920, size: 64)
!9920 = !DISubroutineType(types: !9921)
!9921 = !{null, !17, !304}
!9922 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !9914, file: !8031, line: 646, baseType: !9675, size: 64, offset: 1600)
!9923 = !DIDerivedType(tag: DW_TAG_member, name: "sync", scope: !9914, file: !8031, line: 647, baseType: !9666, size: 64, offset: 1664)
!9924 = !DIDerivedType(tag: DW_TAG_member, name: "dismiss", scope: !9914, file: !8031, line: 648, baseType: !9666, size: 64, offset: 1728)
!9925 = !DIDerivedType(tag: DW_TAG_member, name: "msi_domain", scope: !18, file: !19, line: 493, baseType: !9926, size: 64, offset: 4160)
!9926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9927, size: 64)
!9927 = !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain", file: !9928, line: 13, flags: DIFlagFwdDecl)
!9928 = !DIFile(filename: "./arch/x86/include/asm/x86_init.h", directory: "/home/lizy2001/genbc/linux")
!9929 = !DIDerivedType(tag: DW_TAG_member, name: "msi_list", scope: !18, file: !19, line: 499, baseType: !30, size: 128, offset: 4224)
!9930 = !DIDerivedType(tag: DW_TAG_member, name: "dma_ops", scope: !18, file: !19, line: 502, baseType: !9931, size: 64, offset: 4352)
!9931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9932, size: 64)
!9932 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9933)
!9933 = !DICompositeType(tag: DW_TAG_structure_type, name: "dma_map_ops", file: !19, line: 502, flags: DIFlagFwdDecl)
!9934 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !18, file: !19, line: 504, baseType: !3572, size: 64, offset: 4416)
!9935 = !DIDerivedType(tag: DW_TAG_member, name: "coherent_dma_mask", scope: !18, file: !19, line: 505, baseType: !235, size: 64, offset: 4480)
!9936 = !DIDerivedType(tag: DW_TAG_member, name: "bus_dma_limit", scope: !18, file: !19, line: 510, baseType: !235, size: 64, offset: 4544)
!9937 = !DIDerivedType(tag: DW_TAG_member, name: "dma_range_map", scope: !18, file: !19, line: 511, baseType: !9938, size: 64, offset: 4608)
!9938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9939, size: 64)
!9939 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9940)
!9940 = !DICompositeType(tag: DW_TAG_structure_type, name: "bus_dma_region", file: !19, line: 511, flags: DIFlagFwdDecl)
!9941 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !18, file: !19, line: 513, baseType: !9942, size: 64, offset: 4672)
!9942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9943, size: 64)
!9943 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_dma_parameters", file: !19, line: 288, size: 128, elements: !9944)
!9944 = !{!9945, !9946}
!9945 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !9943, file: !19, line: 293, baseType: !199, size: 32)
!9946 = !DIDerivedType(tag: DW_TAG_member, name: "segment_boundary_mask", scope: !9943, file: !19, line: 294, baseType: !135, size: 64, offset: 64)
!9947 = !DIDerivedType(tag: DW_TAG_member, name: "dma_pools", scope: !18, file: !19, line: 515, baseType: !30, size: 128, offset: 4736)
!9948 = !DIDerivedType(tag: DW_TAG_member, name: "archdata", scope: !18, file: !19, line: 526, baseType: !9949, offset: 4864)
!9949 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_archdata", file: !9950, line: 5, elements: !58)
!9950 = !DIFile(filename: "./arch/x86/include/asm/device.h", directory: "/home/lizy2001/genbc/linux")
!9951 = !DIDerivedType(tag: DW_TAG_member, name: "of_node", scope: !18, file: !19, line: 528, baseType: !9952, size: 64, offset: 4864)
!9952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9953, size: 64)
!9953 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_node", file: !9954, line: 14, flags: DIFlagFwdDecl)
!9954 = !DIFile(filename: "./include/linux/arch_topology.h", directory: "/home/lizy2001/genbc/linux")
!9955 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !18, file: !19, line: 529, baseType: !9956, size: 64, offset: 4928)
!9956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9957, size: 64)
!9957 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_handle", file: !9958, line: 17, size: 192, elements: !9959)
!9958 = !DIFile(filename: "./include/linux/fwnode.h", directory: "/home/lizy2001/genbc/linux")
!9959 = !{!9960, !9961, !10044}
!9960 = !DIDerivedType(tag: DW_TAG_member, name: "secondary", scope: !9957, file: !9958, line: 18, baseType: !9956, size: 64)
!9961 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !9957, file: !9958, line: 19, baseType: !9962, size: 64, offset: 64)
!9962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9963, size: 64)
!9963 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9964)
!9964 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_operations", file: !9958, line: 110, size: 1152, elements: !9965)
!9965 = !{!9966, !9970, !9974, !9980, !9986, !9990, !9994, !9999, !10003, !10004, !10008, !10012, !10016, !10027, !10028, !10029, !10030, !10040}
!9966 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !9964, file: !9958, line: 111, baseType: !9967, size: 64)
!9967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9968, size: 64)
!9968 = !DISubroutineType(types: !9969)
!9969 = !{!9956, !9956}
!9970 = !DIDerivedType(tag: DW_TAG_member, name: "put", scope: !9964, file: !9958, line: 112, baseType: !9971, size: 64, offset: 64)
!9971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9972, size: 64)
!9972 = !DISubroutineType(types: !9973)
!9973 = !{null, !9956}
!9974 = !DIDerivedType(tag: DW_TAG_member, name: "device_is_available", scope: !9964, file: !9958, line: 113, baseType: !9975, size: 64, offset: 128)
!9975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9976, size: 64)
!9976 = !DISubroutineType(types: !9977)
!9977 = !{!304, !9978}
!9978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9979, size: 64)
!9979 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9957)
!9980 = !DIDerivedType(tag: DW_TAG_member, name: "device_get_match_data", scope: !9964, file: !9958, line: 114, baseType: !9981, size: 64, offset: 192)
!9981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9982, size: 64)
!9982 = !DISubroutineType(types: !9983)
!9983 = !{!2454, !9978, !9984}
!9984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9985, size: 64)
!9985 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !18)
!9986 = !DIDerivedType(tag: DW_TAG_member, name: "property_present", scope: !9964, file: !9958, line: 116, baseType: !9987, size: 64, offset: 256)
!9987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9988, size: 64)
!9988 = !DISubroutineType(types: !9989)
!9989 = !{!304, !9978, !26}
!9990 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_int_array", scope: !9964, file: !9958, line: 118, baseType: !9991, size: 64, offset: 320)
!9991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9992, size: 64)
!9992 = !DISubroutineType(types: !9993)
!9993 = !{!6, !9978, !26, !199, !159, !132}
!9994 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_string_array", scope: !9964, file: !9958, line: 123, baseType: !9995, size: 64, offset: 384)
!9995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9996, size: 64)
!9996 = !DISubroutineType(types: !9997)
!9997 = !{!6, !9978, !26, !9998, !132}
!9998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !26, size: 64)
!9999 = !DIDerivedType(tag: DW_TAG_member, name: "get_name", scope: !9964, file: !9958, line: 126, baseType: !10000, size: 64, offset: 448)
!10000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10001, size: 64)
!10001 = !DISubroutineType(types: !10002)
!10002 = !{!26, !9978}
!10003 = !DIDerivedType(tag: DW_TAG_member, name: "get_name_prefix", scope: !9964, file: !9958, line: 127, baseType: !10000, size: 64, offset: 512)
!10004 = !DIDerivedType(tag: DW_TAG_member, name: "get_parent", scope: !9964, file: !9958, line: 128, baseType: !10005, size: 64, offset: 576)
!10005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10006, size: 64)
!10006 = !DISubroutineType(types: !10007)
!10007 = !{!9956, !9978}
!10008 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_child_node", scope: !9964, file: !9958, line: 130, baseType: !10009, size: 64, offset: 640)
!10009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10010, size: 64)
!10010 = !DISubroutineType(types: !10011)
!10011 = !{!9956, !9978, !9956}
!10012 = !DIDerivedType(tag: DW_TAG_member, name: "get_named_child_node", scope: !9964, file: !9958, line: 133, baseType: !10013, size: 64, offset: 704)
!10013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10014, size: 64)
!10014 = !DISubroutineType(types: !10015)
!10015 = !{!9956, !9978, !26}
!10016 = !DIDerivedType(tag: DW_TAG_member, name: "get_reference_args", scope: !9964, file: !9958, line: 135, baseType: !10017, size: 64, offset: 768)
!10017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10018, size: 64)
!10018 = !DISubroutineType(types: !10019)
!10019 = !{!6, !9978, !26, !26, !199, !199, !10020}
!10020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10021, size: 64)
!10021 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_reference_args", file: !9958, line: 43, size: 640, elements: !10022)
!10022 = !{!10023, !10024, !10025}
!10023 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !10021, file: !9958, line: 44, baseType: !9956, size: 64)
!10024 = !DIDerivedType(tag: DW_TAG_member, name: "nargs", scope: !10021, file: !9958, line: 45, baseType: !199, size: 32, offset: 64)
!10025 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !10021, file: !9958, line: 46, baseType: !10026, size: 512, offset: 128)
!10026 = !DICompositeType(tag: DW_TAG_array_type, baseType: !235, size: 512, elements: !1381)
!10027 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_next_endpoint", scope: !9964, file: !9958, line: 140, baseType: !10009, size: 64, offset: 832)
!10028 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_remote_endpoint", scope: !9964, file: !9958, line: 143, baseType: !10005, size: 64, offset: 896)
!10029 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_port_parent", scope: !9964, file: !9958, line: 145, baseType: !9967, size: 64, offset: 960)
!10030 = !DIDerivedType(tag: DW_TAG_member, name: "graph_parse_endpoint", scope: !9964, file: !9958, line: 146, baseType: !10031, size: 64, offset: 1024)
!10031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10032, size: 64)
!10032 = !DISubroutineType(types: !10033)
!10033 = !{!6, !9978, !10034}
!10034 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10035, size: 64)
!10035 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_endpoint", file: !9958, line: 29, size: 128, elements: !10036)
!10036 = !{!10037, !10038, !10039}
!10037 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !10035, file: !9958, line: 30, baseType: !199, size: 32)
!10038 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !10035, file: !9958, line: 31, baseType: !199, size: 32, offset: 32)
!10039 = !DIDerivedType(tag: DW_TAG_member, name: "local_fwnode", scope: !10035, file: !9958, line: 32, baseType: !9978, size: 64, offset: 64)
!10040 = !DIDerivedType(tag: DW_TAG_member, name: "add_links", scope: !9964, file: !9958, line: 148, baseType: !10041, size: 64, offset: 1088)
!10041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10042, size: 64)
!10042 = !DISubroutineType(types: !10043)
!10043 = !{!6, !9978, !17}
!10044 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !9957, file: !9958, line: 20, baseType: !17, size: 64, offset: 128)
!10045 = !DIDerivedType(tag: DW_TAG_member, name: "devt", scope: !18, file: !19, line: 534, baseType: !327, size: 32, offset: 4992)
!10046 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !18, file: !19, line: 535, baseType: !229, size: 32, offset: 5024)
!10047 = !DIDerivedType(tag: DW_TAG_member, name: "devres_lock", scope: !18, file: !19, line: 537, baseType: !44, offset: 5056)
!10048 = !DIDerivedType(tag: DW_TAG_member, name: "devres_head", scope: !18, file: !19, line: 538, baseType: !30, size: 128, offset: 5056)
!10049 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !18, file: !19, line: 540, baseType: !10050, size: 64, offset: 5184)
!10050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10051, size: 64)
!10051 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "class", file: !10052, line: 54, size: 960, elements: !10053)
!10052 = !DIFile(filename: "./include/linux/device/class.h", directory: "/home/lizy2001/genbc/linux")
!10053 = !{!10054, !10055, !10056, !10057, !10058, !10059, !10060, !10064, !10068, !10069, !10070, !10071, !10075, !10079, !10080}
!10054 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !10051, file: !10052, line: 55, baseType: !26, size: 64)
!10055 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !10051, file: !10052, line: 56, baseType: !446, size: 64, offset: 64)
!10056 = !DIDerivedType(tag: DW_TAG_member, name: "class_groups", scope: !10051, file: !10052, line: 58, baseType: !139, size: 64, offset: 128)
!10057 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !10051, file: !10052, line: 59, baseType: !139, size: 64, offset: 192)
!10058 = !DIDerivedType(tag: DW_TAG_member, name: "dev_kobj", scope: !10051, file: !10052, line: 60, baseType: !37, size: 64, offset: 256)
!10059 = !DIDerivedType(tag: DW_TAG_member, name: "dev_uevent", scope: !10051, file: !10052, line: 62, baseType: !9658, size: 64, offset: 320)
!10060 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !10051, file: !10052, line: 63, baseType: !10061, size: 64, offset: 384)
!10061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10062, size: 64)
!10062 = !DISubroutineType(types: !10063)
!10063 = !{!85, !17, !7693}
!10064 = !DIDerivedType(tag: DW_TAG_member, name: "class_release", scope: !10051, file: !10052, line: 65, baseType: !10065, size: 64, offset: 448)
!10065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10066, size: 64)
!10066 = !DISubroutineType(types: !10067)
!10067 = !{null, !10050}
!10068 = !DIDerivedType(tag: DW_TAG_member, name: "dev_release", scope: !10051, file: !10052, line: 66, baseType: !9666, size: 64, offset: 512)
!10069 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown_pre", scope: !10051, file: !10052, line: 68, baseType: !9675, size: 64, offset: 576)
!10070 = !DIDerivedType(tag: DW_TAG_member, name: "ns_type", scope: !10051, file: !10052, line: 70, baseType: !9481, size: 64, offset: 640)
!10071 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !10051, file: !10052, line: 71, baseType: !10072, size: 64, offset: 704)
!10072 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10073, size: 64)
!10073 = !DISubroutineType(types: !10074)
!10074 = !{!2454, !17}
!10075 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !10051, file: !10052, line: 73, baseType: !10076, size: 64, offset: 768)
!10076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10077, size: 64)
!10077 = !DISubroutineType(types: !10078)
!10078 = !{null, !17, !1814, !1815}
!10079 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !10051, file: !10052, line: 75, baseType: !9670, size: 64, offset: 832)
!10080 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !10051, file: !10052, line: 77, baseType: !9788, size: 64, offset: 896)
!10081 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !18, file: !19, line: 541, baseType: !139, size: 64, offset: 5248)
!10082 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !18, file: !19, line: 543, baseType: !9666, size: 64, offset: 5312)
!10083 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_group", scope: !18, file: !19, line: 544, baseType: !10084, size: 64, offset: 5376)
!10084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10085, size: 64)
!10085 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_group", file: !19, line: 45, flags: DIFlagFwdDecl)
!10086 = !DIDerivedType(tag: DW_TAG_member, name: "iommu", scope: !18, file: !19, line: 545, baseType: !10087, size: 64, offset: 5440)
!10087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10088, size: 64)
!10088 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_iommu", file: !19, line: 47, flags: DIFlagFwdDecl)
!10089 = !DIDerivedType(tag: DW_TAG_member, name: "offline_disabled", scope: !18, file: !19, line: 547, baseType: !304, size: 1, offset: 5504, flags: DIFlagBitField, extraData: i64 5504)
!10090 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !18, file: !19, line: 548, baseType: !304, size: 1, offset: 5505, flags: DIFlagBitField, extraData: i64 5504)
!10091 = !DIDerivedType(tag: DW_TAG_member, name: "of_node_reused", scope: !18, file: !19, line: 549, baseType: !304, size: 1, offset: 5506, flags: DIFlagBitField, extraData: i64 5504)
!10092 = !DIDerivedType(tag: DW_TAG_member, name: "state_synced", scope: !18, file: !19, line: 550, baseType: !304, size: 1, offset: 5507, flags: DIFlagBitField, extraData: i64 5504)
!10093 = !DIDerivedType(tag: DW_TAG_member, name: "coredev_type", scope: !13, file: !14, line: 672, baseType: !10094, size: 32, offset: 64)
!10094 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mlx5_coredev_type", file: !14, line: 191, baseType: !199, size: 32, elements: !10095)
!10095 = !{!10096, !10097}
!10096 = !DIEnumerator(name: "MLX5_COREDEV_PF", value: 0, isUnsigned: true)
!10097 = !DIEnumerator(name: "MLX5_COREDEV_VF", value: 1, isUnsigned: true)
!10098 = !DIDerivedType(tag: DW_TAG_member, name: "pdev", scope: !13, file: !14, line: 673, baseType: !10099, size: 64, offset: 128)
!10099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10100, size: 64)
!10100 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_dev", file: !10101, line: 309, size: 19264, elements: !10102)
!10101 = !DIFile(filename: "./include/linux/pci.h", directory: "/home/lizy2001/genbc/linux")
!10102 = !{!10103, !10104, !10173, !10174, !10175, !10176, !10187, !10188, !10189, !10190, !10191, !10192, !10193, !10194, !10195, !10196, !10197, !10198, !10199, !10200, !10201, !10202, !10203, !10268, !10269, !10270, !10272, !10273, !10274, !10275, !10276, !10277, !10278, !10279, !10280, !10281, !10282, !10283, !10284, !10285, !10286, !10287, !10288, !10289, !10290, !10291, !10294, !10295, !10296, !10297, !10298, !10299, !10300, !10301, !10303, !10304, !10305, !10306, !10307, !10308, !10309, !10310, !10311, !10312, !10313, !10314, !10315, !10316, !10317, !10318, !10319, !10320, !10321, !10322, !10323, !10324, !10325, !10326, !10327, !10328, !10329, !10330, !10331, !10332, !10333, !10334, !10335, !10336, !10337, !10338, !10339, !10340, !10342, !10343, !10345, !10346, !10347, !10348, !10350, !10351, !10352, !10355, !10362, !10363, !10364, !10365, !10366, !10367, !10368}
!10103 = !DIDerivedType(tag: DW_TAG_member, name: "bus_list", scope: !10100, file: !10101, line: 310, baseType: !30, size: 128)
!10104 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !10100, file: !10101, line: 311, baseType: !10105, size: 64, offset: 128)
!10105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10106, size: 64)
!10106 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_bus", file: !10101, line: 605, size: 8064, elements: !10107)
!10107 = !{!10108, !10109, !10110, !10111, !10112, !10113, !10114, !10129, !10130, !10131, !10155, !10158, !10159, !10160, !10161, !10162, !10163, !10164, !10165, !10166, !10168, !10169, !10170, !10171, !10172}
!10108 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !10106, file: !10101, line: 606, baseType: !30, size: 128)
!10109 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !10106, file: !10101, line: 607, baseType: !10105, size: 64, offset: 128)
!10110 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !10106, file: !10101, line: 608, baseType: !30, size: 128, offset: 192)
!10111 = !DIDerivedType(tag: DW_TAG_member, name: "devices", scope: !10106, file: !10101, line: 609, baseType: !30, size: 128, offset: 320)
!10112 = !DIDerivedType(tag: DW_TAG_member, name: "self", scope: !10106, file: !10101, line: 610, baseType: !10099, size: 64, offset: 448)
!10113 = !DIDerivedType(tag: DW_TAG_member, name: "slots", scope: !10106, file: !10101, line: 611, baseType: !30, size: 128, offset: 512)
!10114 = !DIDerivedType(tag: DW_TAG_member, name: "resource", scope: !10106, file: !10101, line: 613, baseType: !10115, size: 256, offset: 640)
!10115 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10116, size: 256, elements: !1212)
!10116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10117, size: 64)
!10117 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "resource", file: !10118, line: 20, size: 512, elements: !10119)
!10118 = !DIFile(filename: "./include/linux/ioport.h", directory: "/home/lizy2001/genbc/linux")
!10119 = !{!10120, !10122, !10123, !10124, !10125, !10126, !10127, !10128}
!10120 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !10117, file: !10118, line: 21, baseType: !10121, size: 64)
!10121 = !DIDerivedType(tag: DW_TAG_typedef, name: "resource_size_t", file: !31, line: 158, baseType: !8446)
!10122 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !10117, file: !10118, line: 22, baseType: !10121, size: 64, offset: 64)
!10123 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !10117, file: !10118, line: 23, baseType: !26, size: 64, offset: 128)
!10124 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !10117, file: !10118, line: 24, baseType: !135, size: 64, offset: 192)
!10125 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !10117, file: !10118, line: 25, baseType: !135, size: 64, offset: 256)
!10126 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !10117, file: !10118, line: 26, baseType: !10116, size: 64, offset: 320)
!10127 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !10117, file: !10118, line: 26, baseType: !10116, size: 64, offset: 384)
!10128 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !10117, file: !10118, line: 26, baseType: !10116, size: 64, offset: 448)
!10129 = !DIDerivedType(tag: DW_TAG_member, name: "resources", scope: !10106, file: !10101, line: 614, baseType: !30, size: 128, offset: 896)
!10130 = !DIDerivedType(tag: DW_TAG_member, name: "busn_res", scope: !10106, file: !10101, line: 615, baseType: !10117, size: 512, offset: 1024)
!10131 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !10106, file: !10101, line: 617, baseType: !10132, size: 64, offset: 1536)
!10132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10133, size: 64)
!10133 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_ops", file: !10101, line: 731, size: 320, elements: !10134)
!10134 = !{!10135, !10139, !10143, !10147, !10151}
!10135 = !DIDerivedType(tag: DW_TAG_member, name: "add_bus", scope: !10133, file: !10101, line: 732, baseType: !10136, size: 64)
!10136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10137, size: 64)
!10137 = !DISubroutineType(types: !10138)
!10138 = !{!6, !10105}
!10139 = !DIDerivedType(tag: DW_TAG_member, name: "remove_bus", scope: !10133, file: !10101, line: 733, baseType: !10140, size: 64, offset: 64)
!10140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10141, size: 64)
!10141 = !DISubroutineType(types: !10142)
!10142 = !{null, !10105}
!10143 = !DIDerivedType(tag: DW_TAG_member, name: "map_bus", scope: !10133, file: !10101, line: 734, baseType: !10144, size: 64, offset: 128)
!10144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10145, size: 64)
!10145 = !DISubroutineType(types: !10146)
!10146 = !{!159, !10105, !199, !6}
!10147 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !10133, file: !10101, line: 735, baseType: !10148, size: 64, offset: 192)
!10148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10149, size: 64)
!10149 = !DISubroutineType(types: !10150)
!10150 = !{!6, !10105, !199, !6, !6, !1467}
!10151 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !10133, file: !10101, line: 736, baseType: !10152, size: 64, offset: 256)
!10152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10153, size: 64)
!10153 = !DISubroutineType(types: !10154)
!10154 = !{!6, !10105, !199, !6, !6, !229}
!10155 = !DIDerivedType(tag: DW_TAG_member, name: "msi", scope: !10106, file: !10101, line: 618, baseType: !10156, size: 64, offset: 1600)
!10156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10157, size: 64)
!10157 = !DICompositeType(tag: DW_TAG_structure_type, name: "msi_controller", file: !10101, line: 537, flags: DIFlagFwdDecl)
!10158 = !DIDerivedType(tag: DW_TAG_member, name: "sysdata", scope: !10106, file: !10101, line: 619, baseType: !159, size: 64, offset: 1664)
!10159 = !DIDerivedType(tag: DW_TAG_member, name: "procdir", scope: !10106, file: !10101, line: 620, baseType: !1997, size: 64, offset: 1728)
!10160 = !DIDerivedType(tag: DW_TAG_member, name: "number", scope: !10106, file: !10101, line: 622, baseType: !241, size: 8, offset: 1792)
!10161 = !DIDerivedType(tag: DW_TAG_member, name: "primary", scope: !10106, file: !10101, line: 623, baseType: !241, size: 8, offset: 1800)
!10162 = !DIDerivedType(tag: DW_TAG_member, name: "max_bus_speed", scope: !10106, file: !10101, line: 624, baseType: !241, size: 8, offset: 1808)
!10163 = !DIDerivedType(tag: DW_TAG_member, name: "cur_bus_speed", scope: !10106, file: !10101, line: 625, baseType: !241, size: 8, offset: 1816)
!10164 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !10106, file: !10101, line: 630, baseType: !6163, size: 384, offset: 1824)
!10165 = !DIDerivedType(tag: DW_TAG_member, name: "bridge_ctl", scope: !10106, file: !10101, line: 632, baseType: !127, size: 16, offset: 2208)
!10166 = !DIDerivedType(tag: DW_TAG_member, name: "bus_flags", scope: !10106, file: !10101, line: 633, baseType: !10167, size: 16, offset: 2224)
!10167 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_bus_flags_t", file: !10101, line: 237, baseType: !127)
!10168 = !DIDerivedType(tag: DW_TAG_member, name: "bridge", scope: !10106, file: !10101, line: 634, baseType: !17, size: 64, offset: 2240)
!10169 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !10106, file: !10101, line: 635, baseType: !18, size: 5568, offset: 2304)
!10170 = !DIDerivedType(tag: DW_TAG_member, name: "legacy_io", scope: !10106, file: !10101, line: 636, baseType: !153, size: 64, offset: 7872)
!10171 = !DIDerivedType(tag: DW_TAG_member, name: "legacy_mem", scope: !10106, file: !10101, line: 637, baseType: !153, size: 64, offset: 7936)
!10172 = !DIDerivedType(tag: DW_TAG_member, name: "is_added", scope: !10106, file: !10101, line: 638, baseType: !199, size: 1, offset: 8000, flags: DIFlagBitField, extraData: i64 8000)
!10173 = !DIDerivedType(tag: DW_TAG_member, name: "subordinate", scope: !10100, file: !10101, line: 312, baseType: !10105, size: 64, offset: 192)
!10174 = !DIDerivedType(tag: DW_TAG_member, name: "sysdata", scope: !10100, file: !10101, line: 314, baseType: !159, size: 64, offset: 256)
!10175 = !DIDerivedType(tag: DW_TAG_member, name: "procent", scope: !10100, file: !10101, line: 315, baseType: !1997, size: 64, offset: 320)
!10176 = !DIDerivedType(tag: DW_TAG_member, name: "slot", scope: !10100, file: !10101, line: 316, baseType: !10177, size: 64, offset: 384)
!10177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10178, size: 64)
!10178 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_slot", file: !10101, line: 69, size: 832, elements: !10179)
!10179 = !{!10180, !10181, !10182, !10185, !10186}
!10180 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !10178, file: !10101, line: 70, baseType: !10105, size: 64)
!10181 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !10178, file: !10101, line: 71, baseType: !30, size: 128, offset: 64)
!10182 = !DIDerivedType(tag: DW_TAG_member, name: "hotplug", scope: !10178, file: !10101, line: 72, baseType: !10183, size: 64, offset: 192)
!10183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10184, size: 64)
!10184 = !DICompositeType(tag: DW_TAG_structure_type, name: "hotplug_slot", file: !10101, line: 72, flags: DIFlagFwdDecl)
!10185 = !DIDerivedType(tag: DW_TAG_member, name: "number", scope: !10178, file: !10101, line: 73, baseType: !241, size: 8, offset: 256)
!10186 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !10178, file: !10101, line: 74, baseType: !22, size: 512, offset: 320)
!10187 = !DIDerivedType(tag: DW_TAG_member, name: "devfn", scope: !10100, file: !10101, line: 318, baseType: !199, size: 32, offset: 448)
!10188 = !DIDerivedType(tag: DW_TAG_member, name: "vendor", scope: !10100, file: !10101, line: 319, baseType: !127, size: 16, offset: 480)
!10189 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !10100, file: !10101, line: 320, baseType: !127, size: 16, offset: 496)
!10190 = !DIDerivedType(tag: DW_TAG_member, name: "subsystem_vendor", scope: !10100, file: !10101, line: 321, baseType: !127, size: 16, offset: 512)
!10191 = !DIDerivedType(tag: DW_TAG_member, name: "subsystem_device", scope: !10100, file: !10101, line: 322, baseType: !127, size: 16, offset: 528)
!10192 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !10100, file: !10101, line: 323, baseType: !199, size: 32, offset: 544)
!10193 = !DIDerivedType(tag: DW_TAG_member, name: "revision", scope: !10100, file: !10101, line: 324, baseType: !1403, size: 8, offset: 576)
!10194 = !DIDerivedType(tag: DW_TAG_member, name: "hdr_type", scope: !10100, file: !10101, line: 325, baseType: !1403, size: 8, offset: 584)
!10195 = !DIDerivedType(tag: DW_TAG_member, name: "pcie_cap", scope: !10100, file: !10101, line: 330, baseType: !1403, size: 8, offset: 592)
!10196 = !DIDerivedType(tag: DW_TAG_member, name: "msi_cap", scope: !10100, file: !10101, line: 331, baseType: !1403, size: 8, offset: 600)
!10197 = !DIDerivedType(tag: DW_TAG_member, name: "msix_cap", scope: !10100, file: !10101, line: 332, baseType: !1403, size: 8, offset: 608)
!10198 = !DIDerivedType(tag: DW_TAG_member, name: "pcie_mpss", scope: !10100, file: !10101, line: 333, baseType: !1403, size: 3, offset: 616, flags: DIFlagBitField, extraData: i64 616)
!10199 = !DIDerivedType(tag: DW_TAG_member, name: "rom_base_reg", scope: !10100, file: !10101, line: 334, baseType: !1403, size: 8, offset: 624)
!10200 = !DIDerivedType(tag: DW_TAG_member, name: "pin", scope: !10100, file: !10101, line: 335, baseType: !1403, size: 8, offset: 632)
!10201 = !DIDerivedType(tag: DW_TAG_member, name: "pcie_flags_reg", scope: !10100, file: !10101, line: 336, baseType: !744, size: 16, offset: 640)
!10202 = !DIDerivedType(tag: DW_TAG_member, name: "dma_alias_mask", scope: !10100, file: !10101, line: 337, baseType: !5582, size: 64, offset: 704)
!10203 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !10100, file: !10101, line: 339, baseType: !10204, size: 64, offset: 768)
!10204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10205, size: 64)
!10205 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_driver", file: !10101, line: 858, size: 2048, elements: !10206)
!10206 = !{!10207, !10208, !10209, !10221, !10225, !10229, !10233, !10237, !10238, !10242, !10261, !10262, !10263}
!10207 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !10205, file: !10101, line: 859, baseType: !30, size: 128)
!10208 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !10205, file: !10101, line: 860, baseType: !26, size: 64, offset: 128)
!10209 = !DIDerivedType(tag: DW_TAG_member, name: "id_table", scope: !10205, file: !10101, line: 861, baseType: !10210, size: 64, offset: 192)
!10210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10211, size: 64)
!10211 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10212)
!10212 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_device_id", file: !9734, line: 38, size: 256, elements: !10213)
!10213 = !{!10214, !10215, !10216, !10217, !10218, !10219, !10220}
!10214 = !DIDerivedType(tag: DW_TAG_member, name: "vendor", scope: !10212, file: !9734, line: 39, baseType: !231, size: 32)
!10215 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !10212, file: !9734, line: 39, baseType: !231, size: 32, offset: 32)
!10216 = !DIDerivedType(tag: DW_TAG_member, name: "subvendor", scope: !10212, file: !9734, line: 40, baseType: !231, size: 32, offset: 64)
!10217 = !DIDerivedType(tag: DW_TAG_member, name: "subdevice", scope: !10212, file: !9734, line: 40, baseType: !231, size: 32, offset: 96)
!10218 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !10212, file: !9734, line: 41, baseType: !231, size: 32, offset: 128)
!10219 = !DIDerivedType(tag: DW_TAG_member, name: "class_mask", scope: !10212, file: !9734, line: 41, baseType: !231, size: 32, offset: 160)
!10220 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !10212, file: !9734, line: 42, baseType: !9748, size: 64, offset: 192)
!10221 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !10205, file: !10101, line: 862, baseType: !10222, size: 64, offset: 256)
!10222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10223, size: 64)
!10223 = !DISubroutineType(types: !10224)
!10224 = !{!6, !10099, !10210}
!10225 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !10205, file: !10101, line: 863, baseType: !10226, size: 64, offset: 320)
!10226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10227, size: 64)
!10227 = !DISubroutineType(types: !10228)
!10228 = !{null, !10099}
!10229 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !10205, file: !10101, line: 864, baseType: !10230, size: 64, offset: 384)
!10230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10231, size: 64)
!10231 = !DISubroutineType(types: !10232)
!10232 = !{!6, !10099, !9759}
!10233 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !10205, file: !10101, line: 865, baseType: !10234, size: 64, offset: 448)
!10234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10235, size: 64)
!10235 = !DISubroutineType(types: !10236)
!10236 = !{!6, !10099}
!10237 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !10205, file: !10101, line: 866, baseType: !10226, size: 64, offset: 512)
!10238 = !DIDerivedType(tag: DW_TAG_member, name: "sriov_configure", scope: !10205, file: !10101, line: 867, baseType: !10239, size: 64, offset: 576)
!10239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10240, size: 64)
!10240 = !DISubroutineType(types: !10241)
!10241 = !{!6, !10099, !6}
!10242 = !DIDerivedType(tag: DW_TAG_member, name: "err_handler", scope: !10205, file: !10101, line: 868, baseType: !10243, size: 64, offset: 640)
!10243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10244, size: 64)
!10244 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10245)
!10245 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_error_handlers", file: !10101, line: 795, size: 384, elements: !10246)
!10246 = !{!10247, !10253, !10257, !10258, !10259, !10260}
!10247 = !DIDerivedType(tag: DW_TAG_member, name: "error_detected", scope: !10245, file: !10101, line: 797, baseType: !10248, size: 64)
!10248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10249, size: 64)
!10249 = !DISubroutineType(types: !10250)
!10250 = !{!10251, !10099, !10252}
!10251 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_ers_result_t", file: !10101, line: 772, baseType: !199)
!10252 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_channel_state_t", file: !10101, line: 180, baseType: !199)
!10253 = !DIDerivedType(tag: DW_TAG_member, name: "mmio_enabled", scope: !10245, file: !10101, line: 801, baseType: !10254, size: 64, offset: 64)
!10254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10255, size: 64)
!10255 = !DISubroutineType(types: !10256)
!10256 = !{!10251, !10099}
!10257 = !DIDerivedType(tag: DW_TAG_member, name: "slot_reset", scope: !10245, file: !10101, line: 804, baseType: !10254, size: 64, offset: 128)
!10258 = !DIDerivedType(tag: DW_TAG_member, name: "reset_prepare", scope: !10245, file: !10101, line: 807, baseType: !10226, size: 64, offset: 192)
!10259 = !DIDerivedType(tag: DW_TAG_member, name: "reset_done", scope: !10245, file: !10101, line: 808, baseType: !10226, size: 64, offset: 256)
!10260 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !10245, file: !10101, line: 811, baseType: !10226, size: 64, offset: 320)
!10261 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !10205, file: !10101, line: 869, baseType: !139, size: 64, offset: 704)
!10262 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !10205, file: !10101, line: 870, baseType: !9716, size: 1152, offset: 768)
!10263 = !DIDerivedType(tag: DW_TAG_member, name: "dynids", scope: !10205, file: !10101, line: 871, baseType: !10264, size: 128, offset: 1920)
!10264 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_dynids", file: !10101, line: 759, size: 128, elements: !10265)
!10265 = !{!10266, !10267}
!10266 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !10264, file: !10101, line: 760, baseType: !44)
!10267 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !10264, file: !10101, line: 761, baseType: !30, size: 128)
!10268 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !10100, file: !10101, line: 340, baseType: !235, size: 64, offset: 832)
!10269 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !10100, file: !10101, line: 346, baseType: !9943, size: 128, offset: 896)
!10270 = !DIDerivedType(tag: DW_TAG_member, name: "current_state", scope: !10100, file: !10101, line: 348, baseType: !10271, size: 32, offset: 1024)
!10271 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_power_t", file: !10101, line: 155, baseType: !6)
!10272 = !DIDerivedType(tag: DW_TAG_member, name: "imm_ready", scope: !10100, file: !10101, line: 351, baseType: !199, size: 1, offset: 1056, flags: DIFlagBitField, extraData: i64 1056)
!10273 = !DIDerivedType(tag: DW_TAG_member, name: "pm_cap", scope: !10100, file: !10101, line: 352, baseType: !1403, size: 8, offset: 1064)
!10274 = !DIDerivedType(tag: DW_TAG_member, name: "pme_support", scope: !10100, file: !10101, line: 353, baseType: !199, size: 5, offset: 1072, flags: DIFlagBitField, extraData: i64 1072)
!10275 = !DIDerivedType(tag: DW_TAG_member, name: "pme_poll", scope: !10100, file: !10101, line: 355, baseType: !199, size: 1, offset: 1077, flags: DIFlagBitField, extraData: i64 1072)
!10276 = !DIDerivedType(tag: DW_TAG_member, name: "d1_support", scope: !10100, file: !10101, line: 356, baseType: !199, size: 1, offset: 1078, flags: DIFlagBitField, extraData: i64 1072)
!10277 = !DIDerivedType(tag: DW_TAG_member, name: "d2_support", scope: !10100, file: !10101, line: 357, baseType: !199, size: 1, offset: 1079, flags: DIFlagBitField, extraData: i64 1072)
!10278 = !DIDerivedType(tag: DW_TAG_member, name: "no_d1d2", scope: !10100, file: !10101, line: 358, baseType: !199, size: 1, offset: 1080, flags: DIFlagBitField, extraData: i64 1072)
!10279 = !DIDerivedType(tag: DW_TAG_member, name: "no_d3cold", scope: !10100, file: !10101, line: 359, baseType: !199, size: 1, offset: 1081, flags: DIFlagBitField, extraData: i64 1072)
!10280 = !DIDerivedType(tag: DW_TAG_member, name: "bridge_d3", scope: !10100, file: !10101, line: 360, baseType: !199, size: 1, offset: 1082, flags: DIFlagBitField, extraData: i64 1072)
!10281 = !DIDerivedType(tag: DW_TAG_member, name: "d3cold_allowed", scope: !10100, file: !10101, line: 361, baseType: !199, size: 1, offset: 1083, flags: DIFlagBitField, extraData: i64 1072)
!10282 = !DIDerivedType(tag: DW_TAG_member, name: "mmio_always_on", scope: !10100, file: !10101, line: 362, baseType: !199, size: 1, offset: 1084, flags: DIFlagBitField, extraData: i64 1072)
!10283 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_prepared", scope: !10100, file: !10101, line: 364, baseType: !199, size: 1, offset: 1085, flags: DIFlagBitField, extraData: i64 1072)
!10284 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_d3cold", scope: !10100, file: !10101, line: 365, baseType: !199, size: 1, offset: 1086, flags: DIFlagBitField, extraData: i64 1072)
!10285 = !DIDerivedType(tag: DW_TAG_member, name: "skip_bus_pm", scope: !10100, file: !10101, line: 369, baseType: !199, size: 1, offset: 1087, flags: DIFlagBitField, extraData: i64 1072)
!10286 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_hotplug", scope: !10100, file: !10101, line: 370, baseType: !199, size: 1, offset: 1088, flags: DIFlagBitField, extraData: i64 1072)
!10287 = !DIDerivedType(tag: DW_TAG_member, name: "hotplug_user_indicators", scope: !10100, file: !10101, line: 371, baseType: !199, size: 1, offset: 1089, flags: DIFlagBitField, extraData: i64 1072)
!10288 = !DIDerivedType(tag: DW_TAG_member, name: "clear_retrain_link", scope: !10100, file: !10101, line: 374, baseType: !199, size: 1, offset: 1090, flags: DIFlagBitField, extraData: i64 1072)
!10289 = !DIDerivedType(tag: DW_TAG_member, name: "d3hot_delay", scope: !10100, file: !10101, line: 376, baseType: !199, size: 32, offset: 1120)
!10290 = !DIDerivedType(tag: DW_TAG_member, name: "d3cold_delay", scope: !10100, file: !10101, line: 377, baseType: !199, size: 32, offset: 1152)
!10291 = !DIDerivedType(tag: DW_TAG_member, name: "link_state", scope: !10100, file: !10101, line: 380, baseType: !10292, size: 64, offset: 1216)
!10292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10293, size: 64)
!10293 = !DICompositeType(tag: DW_TAG_structure_type, name: "pcie_link_state", file: !10101, line: 303, flags: DIFlagFwdDecl)
!10294 = !DIDerivedType(tag: DW_TAG_member, name: "ltr_path", scope: !10100, file: !10101, line: 381, baseType: !199, size: 1, offset: 1280, flags: DIFlagBitField, extraData: i64 1280)
!10295 = !DIDerivedType(tag: DW_TAG_member, name: "l1ss", scope: !10100, file: !10101, line: 383, baseType: !6, size: 32, offset: 1312)
!10296 = !DIDerivedType(tag: DW_TAG_member, name: "eetlp_prefix_path", scope: !10100, file: !10101, line: 385, baseType: !199, size: 1, offset: 1344, flags: DIFlagBitField, extraData: i64 1344)
!10297 = !DIDerivedType(tag: DW_TAG_member, name: "error_state", scope: !10100, file: !10101, line: 387, baseType: !10252, size: 32, offset: 1376)
!10298 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !10100, file: !10101, line: 388, baseType: !18, size: 5568, offset: 1408)
!10299 = !DIDerivedType(tag: DW_TAG_member, name: "cfg_size", scope: !10100, file: !10101, line: 390, baseType: !6, size: 32, offset: 6976)
!10300 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !10100, file: !10101, line: 396, baseType: !199, size: 32, offset: 7008)
!10301 = !DIDerivedType(tag: DW_TAG_member, name: "resource", scope: !10100, file: !10101, line: 397, baseType: !10302, size: 8704, offset: 7040)
!10302 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10117, size: 8704, elements: !4997)
!10303 = !DIDerivedType(tag: DW_TAG_member, name: "match_driver", scope: !10100, file: !10101, line: 399, baseType: !304, size: 8, offset: 15744)
!10304 = !DIDerivedType(tag: DW_TAG_member, name: "transparent", scope: !10100, file: !10101, line: 401, baseType: !199, size: 1, offset: 15752, flags: DIFlagBitField, extraData: i64 15752)
!10305 = !DIDerivedType(tag: DW_TAG_member, name: "io_window", scope: !10100, file: !10101, line: 402, baseType: !199, size: 1, offset: 15753, flags: DIFlagBitField, extraData: i64 15752)
!10306 = !DIDerivedType(tag: DW_TAG_member, name: "pref_window", scope: !10100, file: !10101, line: 403, baseType: !199, size: 1, offset: 15754, flags: DIFlagBitField, extraData: i64 15752)
!10307 = !DIDerivedType(tag: DW_TAG_member, name: "pref_64_window", scope: !10100, file: !10101, line: 404, baseType: !199, size: 1, offset: 15755, flags: DIFlagBitField, extraData: i64 15752)
!10308 = !DIDerivedType(tag: DW_TAG_member, name: "multifunction", scope: !10100, file: !10101, line: 405, baseType: !199, size: 1, offset: 15756, flags: DIFlagBitField, extraData: i64 15752)
!10309 = !DIDerivedType(tag: DW_TAG_member, name: "is_busmaster", scope: !10100, file: !10101, line: 407, baseType: !199, size: 1, offset: 15757, flags: DIFlagBitField, extraData: i64 15752)
!10310 = !DIDerivedType(tag: DW_TAG_member, name: "no_msi", scope: !10100, file: !10101, line: 408, baseType: !199, size: 1, offset: 15758, flags: DIFlagBitField, extraData: i64 15752)
!10311 = !DIDerivedType(tag: DW_TAG_member, name: "no_64bit_msi", scope: !10100, file: !10101, line: 409, baseType: !199, size: 1, offset: 15759, flags: DIFlagBitField, extraData: i64 15752)
!10312 = !DIDerivedType(tag: DW_TAG_member, name: "block_cfg_access", scope: !10100, file: !10101, line: 410, baseType: !199, size: 1, offset: 15760, flags: DIFlagBitField, extraData: i64 15752)
!10313 = !DIDerivedType(tag: DW_TAG_member, name: "broken_parity_status", scope: !10100, file: !10101, line: 411, baseType: !199, size: 1, offset: 15761, flags: DIFlagBitField, extraData: i64 15752)
!10314 = !DIDerivedType(tag: DW_TAG_member, name: "irq_reroute_variant", scope: !10100, file: !10101, line: 412, baseType: !199, size: 2, offset: 15762, flags: DIFlagBitField, extraData: i64 15752)
!10315 = !DIDerivedType(tag: DW_TAG_member, name: "msi_enabled", scope: !10100, file: !10101, line: 413, baseType: !199, size: 1, offset: 15764, flags: DIFlagBitField, extraData: i64 15752)
!10316 = !DIDerivedType(tag: DW_TAG_member, name: "msix_enabled", scope: !10100, file: !10101, line: 414, baseType: !199, size: 1, offset: 15765, flags: DIFlagBitField, extraData: i64 15752)
!10317 = !DIDerivedType(tag: DW_TAG_member, name: "ari_enabled", scope: !10100, file: !10101, line: 415, baseType: !199, size: 1, offset: 15766, flags: DIFlagBitField, extraData: i64 15752)
!10318 = !DIDerivedType(tag: DW_TAG_member, name: "ats_enabled", scope: !10100, file: !10101, line: 416, baseType: !199, size: 1, offset: 15767, flags: DIFlagBitField, extraData: i64 15752)
!10319 = !DIDerivedType(tag: DW_TAG_member, name: "pasid_enabled", scope: !10100, file: !10101, line: 417, baseType: !199, size: 1, offset: 15768, flags: DIFlagBitField, extraData: i64 15752)
!10320 = !DIDerivedType(tag: DW_TAG_member, name: "pri_enabled", scope: !10100, file: !10101, line: 418, baseType: !199, size: 1, offset: 15769, flags: DIFlagBitField, extraData: i64 15752)
!10321 = !DIDerivedType(tag: DW_TAG_member, name: "is_managed", scope: !10100, file: !10101, line: 419, baseType: !199, size: 1, offset: 15770, flags: DIFlagBitField, extraData: i64 15752)
!10322 = !DIDerivedType(tag: DW_TAG_member, name: "needs_freset", scope: !10100, file: !10101, line: 420, baseType: !199, size: 1, offset: 15771, flags: DIFlagBitField, extraData: i64 15752)
!10323 = !DIDerivedType(tag: DW_TAG_member, name: "state_saved", scope: !10100, file: !10101, line: 421, baseType: !199, size: 1, offset: 15772, flags: DIFlagBitField, extraData: i64 15752)
!10324 = !DIDerivedType(tag: DW_TAG_member, name: "is_physfn", scope: !10100, file: !10101, line: 422, baseType: !199, size: 1, offset: 15773, flags: DIFlagBitField, extraData: i64 15752)
!10325 = !DIDerivedType(tag: DW_TAG_member, name: "is_virtfn", scope: !10100, file: !10101, line: 423, baseType: !199, size: 1, offset: 15774, flags: DIFlagBitField, extraData: i64 15752)
!10326 = !DIDerivedType(tag: DW_TAG_member, name: "reset_fn", scope: !10100, file: !10101, line: 424, baseType: !199, size: 1, offset: 15775, flags: DIFlagBitField, extraData: i64 15752)
!10327 = !DIDerivedType(tag: DW_TAG_member, name: "is_hotplug_bridge", scope: !10100, file: !10101, line: 425, baseType: !199, size: 1, offset: 15776, flags: DIFlagBitField, extraData: i64 15752)
!10328 = !DIDerivedType(tag: DW_TAG_member, name: "shpc_managed", scope: !10100, file: !10101, line: 426, baseType: !199, size: 1, offset: 15777, flags: DIFlagBitField, extraData: i64 15752)
!10329 = !DIDerivedType(tag: DW_TAG_member, name: "is_thunderbolt", scope: !10100, file: !10101, line: 427, baseType: !199, size: 1, offset: 15778, flags: DIFlagBitField, extraData: i64 15752)
!10330 = !DIDerivedType(tag: DW_TAG_member, name: "untrusted", scope: !10100, file: !10101, line: 435, baseType: !199, size: 1, offset: 15779, flags: DIFlagBitField, extraData: i64 15752)
!10331 = !DIDerivedType(tag: DW_TAG_member, name: "external_facing", scope: !10100, file: !10101, line: 441, baseType: !199, size: 1, offset: 15780, flags: DIFlagBitField, extraData: i64 15752)
!10332 = !DIDerivedType(tag: DW_TAG_member, name: "broken_intx_masking", scope: !10100, file: !10101, line: 442, baseType: !199, size: 1, offset: 15781, flags: DIFlagBitField, extraData: i64 15752)
!10333 = !DIDerivedType(tag: DW_TAG_member, name: "io_window_1k", scope: !10100, file: !10101, line: 443, baseType: !199, size: 1, offset: 15782, flags: DIFlagBitField, extraData: i64 15752)
!10334 = !DIDerivedType(tag: DW_TAG_member, name: "irq_managed", scope: !10100, file: !10101, line: 444, baseType: !199, size: 1, offset: 15783, flags: DIFlagBitField, extraData: i64 15752)
!10335 = !DIDerivedType(tag: DW_TAG_member, name: "non_compliant_bars", scope: !10100, file: !10101, line: 445, baseType: !199, size: 1, offset: 15784, flags: DIFlagBitField, extraData: i64 15752)
!10336 = !DIDerivedType(tag: DW_TAG_member, name: "is_probed", scope: !10100, file: !10101, line: 446, baseType: !199, size: 1, offset: 15785, flags: DIFlagBitField, extraData: i64 15752)
!10337 = !DIDerivedType(tag: DW_TAG_member, name: "link_active_reporting", scope: !10100, file: !10101, line: 447, baseType: !199, size: 1, offset: 15786, flags: DIFlagBitField, extraData: i64 15752)
!10338 = !DIDerivedType(tag: DW_TAG_member, name: "no_vf_scan", scope: !10100, file: !10101, line: 448, baseType: !199, size: 1, offset: 15787, flags: DIFlagBitField, extraData: i64 15752)
!10339 = !DIDerivedType(tag: DW_TAG_member, name: "no_command_memory", scope: !10100, file: !10101, line: 449, baseType: !199, size: 1, offset: 15788, flags: DIFlagBitField, extraData: i64 15752)
!10340 = !DIDerivedType(tag: DW_TAG_member, name: "dev_flags", scope: !10100, file: !10101, line: 450, baseType: !10341, size: 16, offset: 15792)
!10341 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_dev_flags_t", file: !10101, line: 206, baseType: !127)
!10342 = !DIDerivedType(tag: DW_TAG_member, name: "enable_cnt", scope: !10100, file: !10101, line: 451, baseType: !632, size: 32, offset: 15808)
!10343 = !DIDerivedType(tag: DW_TAG_member, name: "saved_config_space", scope: !10100, file: !10101, line: 453, baseType: !10344, size: 512, offset: 15840)
!10344 = !DICompositeType(tag: DW_TAG_array_type, baseType: !229, size: 512, elements: !1944)
!10345 = !DIDerivedType(tag: DW_TAG_member, name: "saved_cap_space", scope: !10100, file: !10101, line: 454, baseType: !451, size: 64, offset: 16384)
!10346 = !DIDerivedType(tag: DW_TAG_member, name: "rom_attr", scope: !10100, file: !10101, line: 455, baseType: !153, size: 64, offset: 16448)
!10347 = !DIDerivedType(tag: DW_TAG_member, name: "rom_attr_enabled", scope: !10100, file: !10101, line: 456, baseType: !6, size: 32, offset: 16512)
!10348 = !DIDerivedType(tag: DW_TAG_member, name: "res_attr", scope: !10100, file: !10101, line: 457, baseType: !10349, size: 1088, offset: 16576)
!10349 = !DICompositeType(tag: DW_TAG_array_type, baseType: !153, size: 1088, elements: !4997)
!10350 = !DIDerivedType(tag: DW_TAG_member, name: "res_attr_wc", scope: !10100, file: !10101, line: 458, baseType: !10349, size: 1088, offset: 17664)
!10351 = !DIDerivedType(tag: DW_TAG_member, name: "msi_irq_groups", scope: !10100, file: !10101, line: 469, baseType: !139, size: 64, offset: 18752)
!10352 = !DIDerivedType(tag: DW_TAG_member, name: "vpd", scope: !10100, file: !10101, line: 471, baseType: !10353, size: 64, offset: 18816)
!10353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10354, size: 64)
!10354 = !DICompositeType(tag: DW_TAG_structure_type, name: "pci_vpd", file: !10101, line: 304, flags: DIFlagFwdDecl)
!10355 = !DIDerivedType(tag: DW_TAG_member, scope: !10100, file: !10101, line: 478, baseType: !10356, size: 64, offset: 18880)
!10356 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10100, file: !10101, line: 478, size: 64, elements: !10357)
!10357 = !{!10358, !10361}
!10358 = !DIDerivedType(tag: DW_TAG_member, name: "sriov", scope: !10356, file: !10101, line: 479, baseType: !10359, size: 64)
!10359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10360, size: 64)
!10360 = !DICompositeType(tag: DW_TAG_structure_type, name: "pci_sriov", file: !10101, line: 305, flags: DIFlagFwdDecl)
!10361 = !DIDerivedType(tag: DW_TAG_member, name: "physfn", scope: !10356, file: !10101, line: 480, baseType: !10099, size: 64)
!10362 = !DIDerivedType(tag: DW_TAG_member, name: "ats_cap", scope: !10100, file: !10101, line: 482, baseType: !744, size: 16, offset: 18944)
!10363 = !DIDerivedType(tag: DW_TAG_member, name: "ats_stu", scope: !10100, file: !10101, line: 483, baseType: !1403, size: 8, offset: 18960)
!10364 = !DIDerivedType(tag: DW_TAG_member, name: "acs_cap", scope: !10100, file: !10101, line: 497, baseType: !744, size: 16, offset: 18976)
!10365 = !DIDerivedType(tag: DW_TAG_member, name: "rom", scope: !10100, file: !10101, line: 498, baseType: !8446, size: 64, offset: 19008)
!10366 = !DIDerivedType(tag: DW_TAG_member, name: "romlen", scope: !10100, file: !10101, line: 499, baseType: !132, size: 64, offset: 19072)
!10367 = !DIDerivedType(tag: DW_TAG_member, name: "driver_override", scope: !10100, file: !10101, line: 500, baseType: !85, size: 64, offset: 19136)
!10368 = !DIDerivedType(tag: DW_TAG_member, name: "priv_flags", scope: !10100, file: !10101, line: 502, baseType: !135, size: 64, offset: 19200)
!10369 = !DIDerivedType(tag: DW_TAG_member, name: "pci_status_mutex", scope: !13, file: !14, line: 675, baseType: !558, size: 192, offset: 192)
!10370 = !DIDerivedType(tag: DW_TAG_member, name: "pci_status", scope: !13, file: !14, line: 676, baseType: !10371, size: 32, offset: 384)
!10371 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mlx5_pci_status", file: !14, line: 601, baseType: !199, size: 32, elements: !10372)
!10372 = !{!10373, !10374}
!10373 = !DIEnumerator(name: "MLX5_PCI_STATUS_DISABLED", value: 0, isUnsigned: true)
!10374 = !DIEnumerator(name: "MLX5_PCI_STATUS_ENABLED", value: 1, isUnsigned: true)
!10375 = !DIDerivedType(tag: DW_TAG_member, name: "rev_id", scope: !13, file: !14, line: 677, baseType: !1403, size: 8, offset: 416)
!10376 = !DIDerivedType(tag: DW_TAG_member, name: "board_id", scope: !13, file: !14, line: 678, baseType: !7622, size: 512, offset: 424)
!10377 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !13, file: !14, line: 679, baseType: !10378, size: 5184, offset: 960)
!10378 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_cmd", file: !14, line: 266, size: 5184, elements: !10379)
!10379 = !{!10380, !10386, !10392, !10393, !10394, !10395, !10396, !10397, !10398, !10399, !10400, !10401, !10402, !10403, !10404, !10405, !10406, !10407, !10408, !10409, !10416, !10417, !10418, !10419, !10494, !10498, !10507, !10509, !10510}
!10380 = !DIDerivedType(tag: DW_TAG_member, name: "nb", scope: !10378, file: !14, line: 267, baseType: !10381, size: 256)
!10381 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_nb", file: !10382, line: 50, size: 256, elements: !10383)
!10382 = !DIFile(filename: "./include/linux/mlx5/eq.h", directory: "/home/lizy2001/genbc/linux")
!10383 = !{!10384, !10385}
!10384 = !DIDerivedType(tag: DW_TAG_member, name: "nb", scope: !10381, file: !10382, line: 51, baseType: !6705, size: 192)
!10385 = !DIDerivedType(tag: DW_TAG_member, name: "event_type", scope: !10381, file: !10382, line: 52, baseType: !1403, size: 8, offset: 192)
!10386 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !10378, file: !14, line: 269, baseType: !10387, size: 32, offset: 256)
!10387 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mlx5_cmdif_state", file: !14, line: 218, baseType: !199, size: 32, elements: !10388)
!10388 = !{!10389, !10390, !10391}
!10389 = !DIEnumerator(name: "MLX5_CMDIF_STATE_UNINITIALIZED", value: 0, isUnsigned: true)
!10390 = !DIEnumerator(name: "MLX5_CMDIF_STATE_UP", value: 1, isUnsigned: true)
!10391 = !DIEnumerator(name: "MLX5_CMDIF_STATE_DOWN", value: 2, isUnsigned: true)
!10392 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_alloc_buf", scope: !10378, file: !14, line: 270, baseType: !159, size: 64, offset: 320)
!10393 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_dma", scope: !10378, file: !14, line: 271, baseType: !970, size: 64, offset: 384)
!10394 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_size", scope: !10378, file: !14, line: 272, baseType: !6, size: 32, offset: 448)
!10395 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_buf", scope: !10378, file: !14, line: 273, baseType: !159, size: 64, offset: 512)
!10396 = !DIDerivedType(tag: DW_TAG_member, name: "dma", scope: !10378, file: !14, line: 274, baseType: !970, size: 64, offset: 576)
!10397 = !DIDerivedType(tag: DW_TAG_member, name: "cmdif_rev", scope: !10378, file: !14, line: 275, baseType: !744, size: 16, offset: 640)
!10398 = !DIDerivedType(tag: DW_TAG_member, name: "log_sz", scope: !10378, file: !14, line: 276, baseType: !1403, size: 8, offset: 656)
!10399 = !DIDerivedType(tag: DW_TAG_member, name: "log_stride", scope: !10378, file: !14, line: 277, baseType: !1403, size: 8, offset: 664)
!10400 = !DIDerivedType(tag: DW_TAG_member, name: "max_reg_cmds", scope: !10378, file: !14, line: 278, baseType: !6, size: 32, offset: 672)
!10401 = !DIDerivedType(tag: DW_TAG_member, name: "events", scope: !10378, file: !14, line: 279, baseType: !6, size: 32, offset: 704)
!10402 = !DIDerivedType(tag: DW_TAG_member, name: "vector", scope: !10378, file: !14, line: 280, baseType: !1467, size: 64, offset: 768)
!10403 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_lock", scope: !10378, file: !14, line: 284, baseType: !44, offset: 832)
!10404 = !DIDerivedType(tag: DW_TAG_member, name: "token_lock", scope: !10378, file: !14, line: 288, baseType: !44, offset: 832)
!10405 = !DIDerivedType(tag: DW_TAG_member, name: "token", scope: !10378, file: !14, line: 289, baseType: !1403, size: 8, offset: 832)
!10406 = !DIDerivedType(tag: DW_TAG_member, name: "bitmask", scope: !10378, file: !14, line: 290, baseType: !135, size: 64, offset: 896)
!10407 = !DIDerivedType(tag: DW_TAG_member, name: "wq_name", scope: !10378, file: !14, line: 291, baseType: !4272, size: 256, offset: 960)
!10408 = !DIDerivedType(tag: DW_TAG_member, name: "wq", scope: !10378, file: !14, line: 292, baseType: !2578, size: 64, offset: 1216)
!10409 = !DIDerivedType(tag: DW_TAG_member, name: "sem", scope: !10378, file: !14, line: 293, baseType: !10410, size: 192, offset: 1280)
!10410 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "semaphore", file: !10411, line: 15, size: 192, elements: !10412)
!10411 = !DIFile(filename: "./include/linux/semaphore.h", directory: "/home/lizy2001/genbc/linux")
!10412 = !{!10413, !10414, !10415}
!10413 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !10410, file: !10411, line: 16, baseType: !658)
!10414 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !10410, file: !10411, line: 17, baseType: !199, size: 32)
!10415 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !10410, file: !10411, line: 18, baseType: !30, size: 128, offset: 64)
!10416 = !DIDerivedType(tag: DW_TAG_member, name: "pages_sem", scope: !10378, file: !14, line: 294, baseType: !10410, size: 192, offset: 1472)
!10417 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !10378, file: !14, line: 295, baseType: !6, size: 32, offset: 1664)
!10418 = !DIDerivedType(tag: DW_TAG_member, name: "allowed_opcode", scope: !10378, file: !14, line: 296, baseType: !744, size: 16, offset: 1696)
!10419 = !DIDerivedType(tag: DW_TAG_member, name: "ent_arr", scope: !10378, file: !14, line: 297, baseType: !10420, size: 2048, offset: 1728)
!10420 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10421, size: 2048, elements: !2645)
!10421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10422, size: 64)
!10422 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_cmd_work_ent", file: !14, line: 748, size: 2304, elements: !10423)
!10423 = !{!10424, !10425, !10450, !10451, !10452, !10453, !10458, !10459, !10460, !10461, !10462, !10463, !10465, !10466, !10485, !10486, !10487, !10488, !10489, !10490, !10491, !10492, !10493}
!10424 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !10422, file: !14, line: 749, baseType: !135, size: 64)
!10425 = !DIDerivedType(tag: DW_TAG_member, name: "in", scope: !10422, file: !14, line: 750, baseType: !10426, size: 64, offset: 64)
!10426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10427, size: 64)
!10427 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_cmd_msg", file: !14, line: 228, size: 448, elements: !10428)
!10428 = !{!10429, !10430, !10438, !10439, !10443}
!10429 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !10427, file: !14, line: 229, baseType: !30, size: 128)
!10430 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !10427, file: !14, line: 230, baseType: !10431, size: 64, offset: 128)
!10431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10432, size: 64)
!10432 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cmd_msg_cache", file: !14, line: 245, size: 192, elements: !10433)
!10433 = !{!10434, !10435, !10436, !10437}
!10434 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !10432, file: !14, line: 248, baseType: !44)
!10435 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !10432, file: !14, line: 249, baseType: !30, size: 128)
!10436 = !DIDerivedType(tag: DW_TAG_member, name: "max_inbox_size", scope: !10432, file: !14, line: 250, baseType: !199, size: 32, offset: 128)
!10437 = !DIDerivedType(tag: DW_TAG_member, name: "num_ent", scope: !10432, file: !14, line: 251, baseType: !199, size: 32, offset: 160)
!10438 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !10427, file: !14, line: 231, baseType: !229, size: 32, offset: 192)
!10439 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !10427, file: !14, line: 232, baseType: !10440, size: 128, offset: 224)
!10440 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_cmd_first", file: !14, line: 224, size: 128, elements: !10441)
!10441 = !{!10442}
!10442 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !10440, file: !14, line: 225, baseType: !4563, size: 128)
!10443 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !10427, file: !14, line: 233, baseType: !10444, size: 64, offset: 384)
!10444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10445, size: 64)
!10445 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_cmd_mailbox", file: !14, line: 312, size: 192, elements: !10446)
!10446 = !{!10447, !10448, !10449}
!10447 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !10445, file: !14, line: 313, baseType: !159, size: 64)
!10448 = !DIDerivedType(tag: DW_TAG_member, name: "dma", scope: !10445, file: !14, line: 314, baseType: !970, size: 64, offset: 64)
!10449 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !10445, file: !14, line: 315, baseType: !10444, size: 64, offset: 128)
!10450 = !DIDerivedType(tag: DW_TAG_member, name: "out", scope: !10422, file: !14, line: 751, baseType: !10426, size: 64, offset: 128)
!10451 = !DIDerivedType(tag: DW_TAG_member, name: "uout", scope: !10422, file: !14, line: 752, baseType: !159, size: 64, offset: 192)
!10452 = !DIDerivedType(tag: DW_TAG_member, name: "uout_size", scope: !10422, file: !14, line: 753, baseType: !6, size: 32, offset: 256)
!10453 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !10422, file: !14, line: 754, baseType: !10454, size: 64, offset: 320)
!10454 = !DIDerivedType(tag: DW_TAG_typedef, name: "mlx5_cmd_cbk_t", file: !14, line: 742, baseType: !10455)
!10455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10456, size: 64)
!10456 = !DISubroutineType(types: !10457)
!10457 = !{null, !6, !159}
!10458 = !DIDerivedType(tag: DW_TAG_member, name: "cb_timeout_work", scope: !10422, file: !14, line: 755, baseType: !2562, size: 704, offset: 384)
!10459 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !10422, file: !14, line: 756, baseType: !159, size: 64, offset: 1088)
!10460 = !DIDerivedType(tag: DW_TAG_member, name: "idx", scope: !10422, file: !14, line: 757, baseType: !6, size: 32, offset: 1152)
!10461 = !DIDerivedType(tag: DW_TAG_member, name: "handling", scope: !10422, file: !14, line: 758, baseType: !1789, size: 192, offset: 1216)
!10462 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !10422, file: !14, line: 759, baseType: !1789, size: 192, offset: 1408)
!10463 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !10422, file: !14, line: 760, baseType: !10464, size: 64, offset: 1600)
!10464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10378, size: 64)
!10465 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !10422, file: !14, line: 761, baseType: !1728, size: 256, offset: 1664)
!10466 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !10422, file: !14, line: 762, baseType: !10467, size: 64, offset: 1920)
!10467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10468, size: 64)
!10468 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_cmd_layout", file: !10469, line: 524, size: 512, elements: !10470)
!10469 = !DIFile(filename: "./include/linux/mlx5/device.h", directory: "/home/lizy2001/genbc/linux")
!10470 = !{!10471, !10472, !10474, !10475, !10477, !10478, !10479, !10480, !10481, !10482, !10483, !10484}
!10471 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !10468, file: !10469, line: 525, baseType: !1403, size: 8)
!10472 = !DIDerivedType(tag: DW_TAG_member, name: "rsvd0", scope: !10468, file: !10469, line: 526, baseType: !10473, size: 24, offset: 8)
!10473 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1403, size: 24, elements: !86)
!10474 = !DIDerivedType(tag: DW_TAG_member, name: "inlen", scope: !10468, file: !10469, line: 527, baseType: !2019, size: 32, offset: 32)
!10475 = !DIDerivedType(tag: DW_TAG_member, name: "in_ptr", scope: !10468, file: !10469, line: 528, baseType: !10476, size: 64, offset: 64)
!10476 = !DIDerivedType(tag: DW_TAG_typedef, name: "__be64", file: !2020, line: 34, baseType: !236)
!10477 = !DIDerivedType(tag: DW_TAG_member, name: "in", scope: !10468, file: !10469, line: 529, baseType: !4563, size: 128, offset: 128)
!10478 = !DIDerivedType(tag: DW_TAG_member, name: "out", scope: !10468, file: !10469, line: 530, baseType: !4563, size: 128, offset: 256)
!10479 = !DIDerivedType(tag: DW_TAG_member, name: "out_ptr", scope: !10468, file: !10469, line: 531, baseType: !10476, size: 64, offset: 384)
!10480 = !DIDerivedType(tag: DW_TAG_member, name: "outlen", scope: !10468, file: !10469, line: 532, baseType: !2019, size: 32, offset: 448)
!10481 = !DIDerivedType(tag: DW_TAG_member, name: "token", scope: !10468, file: !10469, line: 533, baseType: !1403, size: 8, offset: 480)
!10482 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !10468, file: !10469, line: 534, baseType: !1403, size: 8, offset: 488)
!10483 = !DIDerivedType(tag: DW_TAG_member, name: "rsvd1", scope: !10468, file: !10469, line: 535, baseType: !1403, size: 8, offset: 496)
!10484 = !DIDerivedType(tag: DW_TAG_member, name: "status_own", scope: !10468, file: !10469, line: 536, baseType: !1403, size: 8, offset: 504)
!10485 = !DIDerivedType(tag: DW_TAG_member, name: "ret", scope: !10422, file: !14, line: 763, baseType: !6, size: 32, offset: 1984)
!10486 = !DIDerivedType(tag: DW_TAG_member, name: "page_queue", scope: !10422, file: !14, line: 764, baseType: !6, size: 32, offset: 2016)
!10487 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !10422, file: !14, line: 765, baseType: !1403, size: 8, offset: 2048)
!10488 = !DIDerivedType(tag: DW_TAG_member, name: "token", scope: !10422, file: !14, line: 766, baseType: !1403, size: 8, offset: 2056)
!10489 = !DIDerivedType(tag: DW_TAG_member, name: "ts1", scope: !10422, file: !14, line: 767, baseType: !235, size: 64, offset: 2112)
!10490 = !DIDerivedType(tag: DW_TAG_member, name: "ts2", scope: !10422, file: !14, line: 768, baseType: !235, size: 64, offset: 2176)
!10491 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !10422, file: !14, line: 769, baseType: !744, size: 16, offset: 2240)
!10492 = !DIDerivedType(tag: DW_TAG_member, name: "polling", scope: !10422, file: !14, line: 770, baseType: !304, size: 8, offset: 2256)
!10493 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !10422, file: !14, line: 772, baseType: !880, size: 32, offset: 2272)
!10494 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !10378, file: !14, line: 298, baseType: !10495, size: 64, offset: 3776)
!10495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10496, size: 64)
!10496 = !DICompositeType(tag: DW_TAG_structure_type, name: "dma_pool", file: !10497, line: 21, flags: DIFlagFwdDecl)
!10497 = !DIFile(filename: "./include/linux/dmapool.h", directory: "/home/lizy2001/genbc/linux")
!10498 = !DIDerivedType(tag: DW_TAG_member, name: "dbg", scope: !10378, file: !14, line: 299, baseType: !10499, size: 256, offset: 3840)
!10499 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_cmd_debug", file: !14, line: 236, size: 256, elements: !10500)
!10500 = !{!10501, !10502, !10503, !10504, !10505, !10506}
!10501 = !DIDerivedType(tag: DW_TAG_member, name: "dbg_root", scope: !10499, file: !14, line: 237, baseType: !195, size: 64)
!10502 = !DIDerivedType(tag: DW_TAG_member, name: "in_msg", scope: !10499, file: !14, line: 238, baseType: !159, size: 64, offset: 64)
!10503 = !DIDerivedType(tag: DW_TAG_member, name: "out_msg", scope: !10499, file: !14, line: 239, baseType: !159, size: 64, offset: 128)
!10504 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !10499, file: !14, line: 240, baseType: !1403, size: 8, offset: 192)
!10505 = !DIDerivedType(tag: DW_TAG_member, name: "inlen", scope: !10499, file: !14, line: 241, baseType: !744, size: 16, offset: 208)
!10506 = !DIDerivedType(tag: DW_TAG_member, name: "outlen", scope: !10499, file: !14, line: 242, baseType: !744, size: 16, offset: 224)
!10507 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !10378, file: !14, line: 300, baseType: !10508, size: 960, offset: 4096)
!10508 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10432, size: 960, elements: !1592)
!10509 = !DIDerivedType(tag: DW_TAG_member, name: "checksum_disabled", scope: !10378, file: !14, line: 301, baseType: !6, size: 32, offset: 5056)
!10510 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !10378, file: !14, line: 302, baseType: !10511, size: 64, offset: 5120)
!10511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10512, size: 64)
!10512 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_cmd_stats", file: !14, line: 258, size: 192, elements: !10513)
!10513 = !{!10514, !10515, !10516, !10517}
!10514 = !DIDerivedType(tag: DW_TAG_member, name: "sum", scope: !10512, file: !14, line: 259, baseType: !235, size: 64)
!10515 = !DIDerivedType(tag: DW_TAG_member, name: "n", scope: !10512, file: !14, line: 260, baseType: !235, size: 64, offset: 64)
!10516 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !10512, file: !14, line: 261, baseType: !195, size: 64, offset: 128)
!10517 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !10512, file: !14, line: 263, baseType: !44, offset: 192)
!10518 = !DIDerivedType(tag: DW_TAG_member, name: "port_caps", scope: !13, file: !14, line: 680, baseType: !10519, size: 192, offset: 6144)
!10519 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10520, size: 192, elements: !1911)
!10520 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_port_caps", file: !14, line: 305, size: 96, elements: !10521)
!10521 = !{!10522, !10523, !10524, !10525}
!10522 = !DIDerivedType(tag: DW_TAG_member, name: "gid_table_len", scope: !10520, file: !14, line: 306, baseType: !6, size: 32)
!10523 = !DIDerivedType(tag: DW_TAG_member, name: "pkey_table_len", scope: !10520, file: !14, line: 307, baseType: !6, size: 32, offset: 32)
!10524 = !DIDerivedType(tag: DW_TAG_member, name: "ext_port_cap", scope: !10520, file: !14, line: 308, baseType: !1403, size: 8, offset: 64)
!10525 = !DIDerivedType(tag: DW_TAG_member, name: "has_smi", scope: !10520, file: !14, line: 309, baseType: !304, size: 8, offset: 72)
!10526 = !DIDerivedType(tag: DW_TAG_member, name: "caps", scope: !13, file: !14, line: 689, baseType: !10527, size: 1446816, offset: 6336)
!10527 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !13, file: !14, line: 681, size: 1446816, elements: !10528)
!10528 = !{!10529, !10533, !10534, !10535, !10539, !10540, !10543}
!10529 = !DIDerivedType(tag: DW_TAG_member, name: "hca_cur", scope: !10527, file: !14, line: 682, baseType: !10530, size: 720896)
!10530 = !DICompositeType(tag: DW_TAG_array_type, baseType: !229, size: 720896, elements: !10531)
!10531 = !{!7959, !10532}
!10532 = !DISubrange(count: 1024)
!10533 = !DIDerivedType(tag: DW_TAG_member, name: "hca_max", scope: !10527, file: !14, line: 683, baseType: !10530, size: 720896, offset: 720896)
!10534 = !DIDerivedType(tag: DW_TAG_member, name: "pcam", scope: !10527, file: !14, line: 684, baseType: !8519, size: 640, offset: 1441792)
!10535 = !DIDerivedType(tag: DW_TAG_member, name: "mcam", scope: !10527, file: !14, line: 685, baseType: !10536, size: 1728, offset: 1442432)
!10536 = !DICompositeType(tag: DW_TAG_array_type, baseType: !229, size: 1728, elements: !10537)
!10537 = !{!87, !10538}
!10538 = !DISubrange(count: 18)
!10539 = !DIDerivedType(tag: DW_TAG_member, name: "fpga", scope: !10527, file: !14, line: 686, baseType: !8548, size: 2048, offset: 1444160)
!10540 = !DIDerivedType(tag: DW_TAG_member, name: "qcam", scope: !10527, file: !14, line: 687, baseType: !10541, size: 576, offset: 1446208)
!10541 = !DICompositeType(tag: DW_TAG_array_type, baseType: !229, size: 576, elements: !10542)
!10542 = !{!10538}
!10543 = !DIDerivedType(tag: DW_TAG_member, name: "embedded_cpu", scope: !10527, file: !14, line: 688, baseType: !1403, size: 8, offset: 1446784)
!10544 = !DIDerivedType(tag: DW_TAG_member, name: "sys_image_guid", scope: !13, file: !14, line: 690, baseType: !235, size: 64, offset: 1453184)
!10545 = !DIDerivedType(tag: DW_TAG_member, name: "iseg_base", scope: !13, file: !14, line: 691, baseType: !8446, size: 64, offset: 1453248)
!10546 = !DIDerivedType(tag: DW_TAG_member, name: "iseg", scope: !13, file: !14, line: 692, baseType: !10547, size: 64, offset: 1453312)
!10547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10548, size: 64)
!10548 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_init_seg", file: !10469, line: 565, size: 65664, elements: !10549)
!10549 = !{!10550, !10551, !10552, !10553, !10554, !10555, !10556, !10560, !10561, !10577, !10581, !10582, !10583, !10584, !10585, !10589, !10590, !10591}
!10550 = !DIDerivedType(tag: DW_TAG_member, name: "fw_rev", scope: !10548, file: !10469, line: 566, baseType: !2019, size: 32)
!10551 = !DIDerivedType(tag: DW_TAG_member, name: "cmdif_rev_fw_sub", scope: !10548, file: !10469, line: 567, baseType: !2019, size: 32, offset: 32)
!10552 = !DIDerivedType(tag: DW_TAG_member, name: "rsvd0", scope: !10548, file: !10469, line: 568, baseType: !4607, size: 64, offset: 64)
!10553 = !DIDerivedType(tag: DW_TAG_member, name: "cmdq_addr_h", scope: !10548, file: !10469, line: 569, baseType: !2019, size: 32, offset: 128)
!10554 = !DIDerivedType(tag: DW_TAG_member, name: "cmdq_addr_l_sz", scope: !10548, file: !10469, line: 570, baseType: !2019, size: 32, offset: 160)
!10555 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_dbell", scope: !10548, file: !10469, line: 571, baseType: !2019, size: 32, offset: 192)
!10556 = !DIDerivedType(tag: DW_TAG_member, name: "rsvd1", scope: !10548, file: !10469, line: 572, baseType: !10557, size: 3840, offset: 224)
!10557 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2019, size: 3840, elements: !10558)
!10558 = !{!10559}
!10559 = !DISubrange(count: 120)
!10560 = !DIDerivedType(tag: DW_TAG_member, name: "initializing", scope: !10548, file: !10469, line: 573, baseType: !2019, size: 32, offset: 4064)
!10561 = !DIDerivedType(tag: DW_TAG_member, name: "health", scope: !10548, file: !10469, line: 574, baseType: !10562, size: 512, offset: 4096)
!10562 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "health_buffer", file: !10469, line: 543, size: 512, elements: !10563)
!10563 = !{!10564, !10566, !10568, !10569, !10570, !10571, !10572, !10573, !10574, !10575, !10576}
!10564 = !DIDerivedType(tag: DW_TAG_member, name: "assert_var", scope: !10562, file: !10469, line: 544, baseType: !10565, size: 160)
!10565 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2019, size: 160, elements: !1592)
!10566 = !DIDerivedType(tag: DW_TAG_member, name: "rsvd0", scope: !10562, file: !10469, line: 545, baseType: !10567, size: 96, offset: 160)
!10567 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2019, size: 96, elements: !86)
!10568 = !DIDerivedType(tag: DW_TAG_member, name: "assert_exit_ptr", scope: !10562, file: !10469, line: 546, baseType: !2019, size: 32, offset: 256)
!10569 = !DIDerivedType(tag: DW_TAG_member, name: "assert_callra", scope: !10562, file: !10469, line: 547, baseType: !2019, size: 32, offset: 288)
!10570 = !DIDerivedType(tag: DW_TAG_member, name: "rsvd1", scope: !10562, file: !10469, line: 548, baseType: !4607, size: 64, offset: 320)
!10571 = !DIDerivedType(tag: DW_TAG_member, name: "fw_ver", scope: !10562, file: !10469, line: 549, baseType: !2019, size: 32, offset: 384)
!10572 = !DIDerivedType(tag: DW_TAG_member, name: "hw_id", scope: !10562, file: !10469, line: 550, baseType: !2019, size: 32, offset: 416)
!10573 = !DIDerivedType(tag: DW_TAG_member, name: "rfr", scope: !10562, file: !10469, line: 551, baseType: !2019, size: 32, offset: 448)
!10574 = !DIDerivedType(tag: DW_TAG_member, name: "irisc_index", scope: !10562, file: !10469, line: 552, baseType: !1403, size: 8, offset: 480)
!10575 = !DIDerivedType(tag: DW_TAG_member, name: "synd", scope: !10562, file: !10469, line: 553, baseType: !1403, size: 8, offset: 488)
!10576 = !DIDerivedType(tag: DW_TAG_member, name: "ext_synd", scope: !10562, file: !10469, line: 554, baseType: !2037, size: 16, offset: 496)
!10577 = !DIDerivedType(tag: DW_TAG_member, name: "rsvd2", scope: !10548, file: !10469, line: 575, baseType: !10578, size: 28160, offset: 4608)
!10578 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2019, size: 28160, elements: !10579)
!10579 = !{!10580}
!10580 = !DISubrange(count: 880)
!10581 = !DIDerivedType(tag: DW_TAG_member, name: "internal_timer_h", scope: !10548, file: !10469, line: 576, baseType: !2019, size: 32, offset: 32768)
!10582 = !DIDerivedType(tag: DW_TAG_member, name: "internal_timer_l", scope: !10548, file: !10469, line: 577, baseType: !2019, size: 32, offset: 32800)
!10583 = !DIDerivedType(tag: DW_TAG_member, name: "rsvd3", scope: !10548, file: !10469, line: 578, baseType: !4607, size: 64, offset: 32832)
!10584 = !DIDerivedType(tag: DW_TAG_member, name: "health_counter", scope: !10548, file: !10469, line: 579, baseType: !2019, size: 32, offset: 32896)
!10585 = !DIDerivedType(tag: DW_TAG_member, name: "rsvd4", scope: !10548, file: !10469, line: 580, baseType: !10586, size: 32608, offset: 32928)
!10586 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2019, size: 32608, elements: !10587)
!10587 = !{!10588}
!10588 = !DISubrange(count: 1019)
!10589 = !DIDerivedType(tag: DW_TAG_member, name: "ieee1588_clk", scope: !10548, file: !10469, line: 581, baseType: !10476, size: 64, offset: 65536)
!10590 = !DIDerivedType(tag: DW_TAG_member, name: "ieee1588_clk_type", scope: !10548, file: !10469, line: 582, baseType: !2019, size: 32, offset: 65600)
!10591 = !DIDerivedType(tag: DW_TAG_member, name: "clr_intx", scope: !10548, file: !10469, line: 583, baseType: !2019, size: 32, offset: 65632)
!10592 = !DIDerivedType(tag: DW_TAG_member, name: "bar_addr", scope: !13, file: !14, line: 693, baseType: !8446, size: 64, offset: 1453376)
!10593 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !13, file: !14, line: 694, baseType: !10594, size: 32, offset: 1453440)
!10594 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mlx5_device_state", file: !14, line: 591, baseType: !199, size: 32, elements: !10595)
!10595 = !{!10596, !10597, !10598}
!10596 = !DIEnumerator(name: "MLX5_DEVICE_STATE_UNINITIALIZED", value: 0, isUnsigned: true)
!10597 = !DIEnumerator(name: "MLX5_DEVICE_STATE_UP", value: 1, isUnsigned: true)
!10598 = !DIEnumerator(name: "MLX5_DEVICE_STATE_INTERNAL_ERROR", value: 2, isUnsigned: true)
!10599 = !DIDerivedType(tag: DW_TAG_member, name: "intf_state_mutex", scope: !13, file: !14, line: 696, baseType: !558, size: 192, offset: 1453504)
!10600 = !DIDerivedType(tag: DW_TAG_member, name: "intf_state", scope: !13, file: !14, line: 697, baseType: !135, size: 64, offset: 1453696)
!10601 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !13, file: !14, line: 698, baseType: !10602, size: 8128, offset: 1453760)
!10602 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_priv", file: !14, line: 537, size: 8128, elements: !10603)
!10603 = !{!10604, !10607, !10610, !10611, !10612, !10613, !10614, !10615, !10616, !10617, !10618, !10641, !10642, !10643, !10644, !10645, !10646, !10647, !10648, !10649, !10650, !10651, !10652, !10653, !10656, !10792, !10795, !10796, !10817, !10820, !10823, !10826, !10936, !10963, !10979, !10988}
!10604 = !DIDerivedType(tag: DW_TAG_member, name: "irq_table", scope: !10602, file: !14, line: 539, baseType: !10605, size: 64)
!10605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10606, size: 64)
!10606 = !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_irq_table", file: !14, line: 506, flags: DIFlagFwdDecl)
!10607 = !DIDerivedType(tag: DW_TAG_member, name: "eq_table", scope: !10602, file: !14, line: 540, baseType: !10608, size: 64, offset: 64)
!10608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10609, size: 64)
!10609 = !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_eq_table", file: !14, line: 505, flags: DIFlagFwdDecl)
!10610 = !DIDerivedType(tag: DW_TAG_member, name: "pg_nb", scope: !10602, file: !14, line: 543, baseType: !10381, size: 256, offset: 128)
!10611 = !DIDerivedType(tag: DW_TAG_member, name: "pg_wq", scope: !10602, file: !14, line: 544, baseType: !2578, size: 64, offset: 384)
!10612 = !DIDerivedType(tag: DW_TAG_member, name: "page_root_xa", scope: !10602, file: !14, line: 545, baseType: !623, size: 128, offset: 448)
!10613 = !DIDerivedType(tag: DW_TAG_member, name: "fw_pages", scope: !10602, file: !14, line: 546, baseType: !6, size: 32, offset: 576)
!10614 = !DIDerivedType(tag: DW_TAG_member, name: "reg_pages", scope: !10602, file: !14, line: 547, baseType: !632, size: 32, offset: 608)
!10615 = !DIDerivedType(tag: DW_TAG_member, name: "free_list", scope: !10602, file: !14, line: 548, baseType: !30, size: 128, offset: 640)
!10616 = !DIDerivedType(tag: DW_TAG_member, name: "vfs_pages", scope: !10602, file: !14, line: 549, baseType: !6, size: 32, offset: 768)
!10617 = !DIDerivedType(tag: DW_TAG_member, name: "peer_pf_pages", scope: !10602, file: !14, line: 550, baseType: !6, size: 32, offset: 800)
!10618 = !DIDerivedType(tag: DW_TAG_member, name: "health", scope: !10602, file: !14, line: 552, baseType: !10619, size: 2112, offset: 832)
!10619 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_core_health", file: !14, line: 426, size: 2112, elements: !10620)
!10620 = !{!10621, !10623, !10625, !10626, !10627, !10628, !10629, !10630, !10631, !10632, !10633, !10634, !10635, !10636, !10637, !10640}
!10621 = !DIDerivedType(tag: DW_TAG_member, name: "health", scope: !10619, file: !14, line: 427, baseType: !10622, size: 64)
!10622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10562, size: 64)
!10623 = !DIDerivedType(tag: DW_TAG_member, name: "health_counter", scope: !10619, file: !14, line: 428, baseType: !10624, size: 64, offset: 64)
!10624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2019, size: 64)
!10625 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !10619, file: !14, line: 429, baseType: !2566, size: 320, offset: 128)
!10626 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !10619, file: !14, line: 430, baseType: !229, size: 32, offset: 448)
!10627 = !DIDerivedType(tag: DW_TAG_member, name: "miss_counter", scope: !10619, file: !14, line: 431, baseType: !6, size: 32, offset: 480)
!10628 = !DIDerivedType(tag: DW_TAG_member, name: "synd", scope: !10619, file: !14, line: 432, baseType: !1403, size: 8, offset: 512)
!10629 = !DIDerivedType(tag: DW_TAG_member, name: "fatal_error", scope: !10619, file: !14, line: 433, baseType: !229, size: 32, offset: 544)
!10630 = !DIDerivedType(tag: DW_TAG_member, name: "crdump_size", scope: !10619, file: !14, line: 434, baseType: !229, size: 32, offset: 576)
!10631 = !DIDerivedType(tag: DW_TAG_member, name: "wq_lock", scope: !10619, file: !14, line: 436, baseType: !44, offset: 608)
!10632 = !DIDerivedType(tag: DW_TAG_member, name: "wq", scope: !10619, file: !14, line: 437, baseType: !2578, size: 64, offset: 640)
!10633 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !10619, file: !14, line: 438, baseType: !135, size: 64, offset: 704)
!10634 = !DIDerivedType(tag: DW_TAG_member, name: "fatal_report_work", scope: !10619, file: !14, line: 439, baseType: !1728, size: 256, offset: 768)
!10635 = !DIDerivedType(tag: DW_TAG_member, name: "report_work", scope: !10619, file: !14, line: 440, baseType: !1728, size: 256, offset: 1024)
!10636 = !DIDerivedType(tag: DW_TAG_member, name: "recover_work", scope: !10619, file: !14, line: 441, baseType: !2562, size: 704, offset: 1280)
!10637 = !DIDerivedType(tag: DW_TAG_member, name: "fw_reporter", scope: !10619, file: !14, line: 442, baseType: !10638, size: 64, offset: 1984)
!10638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10639, size: 64)
!10639 = !DICompositeType(tag: DW_TAG_structure_type, name: "devlink_health_reporter", file: !3874, line: 629, flags: DIFlagFwdDecl)
!10640 = !DIDerivedType(tag: DW_TAG_member, name: "fw_fatal_reporter", scope: !10619, file: !14, line: 443, baseType: !10638, size: 64, offset: 2048)
!10641 = !DIDerivedType(tag: DW_TAG_member, name: "qp_debugfs", scope: !10602, file: !14, line: 555, baseType: !195, size: 64, offset: 2944)
!10642 = !DIDerivedType(tag: DW_TAG_member, name: "eq_debugfs", scope: !10602, file: !14, line: 556, baseType: !195, size: 64, offset: 3008)
!10643 = !DIDerivedType(tag: DW_TAG_member, name: "cq_debugfs", scope: !10602, file: !14, line: 557, baseType: !195, size: 64, offset: 3072)
!10644 = !DIDerivedType(tag: DW_TAG_member, name: "cmdif_debugfs", scope: !10602, file: !14, line: 558, baseType: !195, size: 64, offset: 3136)
!10645 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_mutex", scope: !10602, file: !14, line: 563, baseType: !558, size: 192, offset: 3200)
!10646 = !DIDerivedType(tag: DW_TAG_member, name: "numa_node", scope: !10602, file: !14, line: 564, baseType: !6, size: 32, offset: 3392)
!10647 = !DIDerivedType(tag: DW_TAG_member, name: "pgdir_mutex", scope: !10602, file: !14, line: 566, baseType: !558, size: 192, offset: 3456)
!10648 = !DIDerivedType(tag: DW_TAG_member, name: "pgdir_list", scope: !10602, file: !14, line: 567, baseType: !30, size: 128, offset: 3648)
!10649 = !DIDerivedType(tag: DW_TAG_member, name: "dbg_root", scope: !10602, file: !14, line: 569, baseType: !195, size: 64, offset: 3776)
!10650 = !DIDerivedType(tag: DW_TAG_member, name: "dev_list", scope: !10602, file: !14, line: 571, baseType: !30, size: 128, offset: 3840)
!10651 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_list", scope: !10602, file: !14, line: 572, baseType: !30, size: 128, offset: 3968)
!10652 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_lock", scope: !10602, file: !14, line: 573, baseType: !44, offset: 4096)
!10653 = !DIDerivedType(tag: DW_TAG_member, name: "events", scope: !10602, file: !14, line: 574, baseType: !10654, size: 64, offset: 4096)
!10654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10655, size: 64)
!10655 = !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_events", file: !14, line: 499, flags: DIFlagFwdDecl)
!10656 = !DIDerivedType(tag: DW_TAG_member, name: "steering", scope: !10602, file: !14, line: 576, baseType: !10657, size: 64, offset: 4160)
!10657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10658, size: 64)
!10658 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_flow_steering", file: !10659, line: 117, size: 896, elements: !10660)
!10659 = !DIFile(filename: "drivers/net/ethernet/mellanox/mlx5/core/fs_core.h", directory: "/home/lizy2001/genbc/linux")
!10660 = !{!10661, !10662, !10667, !10668, !10669, !10781, !10782, !10784, !10786, !10787, !10788, !10789, !10790, !10791}
!10661 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !10658, file: !10659, line: 118, baseType: !12, size: 64)
!10662 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !10658, file: !10659, line: 119, baseType: !10663, size: 32, offset: 64)
!10663 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mlx5_flow_steering_mode", file: !10659, line: 112, baseType: !199, size: 32, elements: !10664)
!10664 = !{!10665, !10666}
!10665 = !DIEnumerator(name: "MLX5_FLOW_STEERING_MODE_DMFS", value: 0, isUnsigned: true)
!10666 = !DIEnumerator(name: "MLX5_FLOW_STEERING_MODE_SMFS", value: 1, isUnsigned: true)
!10667 = !DIDerivedType(tag: DW_TAG_member, name: "fgs_cache", scope: !10658, file: !10659, line: 120, baseType: !985, size: 64, offset: 128)
!10668 = !DIDerivedType(tag: DW_TAG_member, name: "ftes_cache", scope: !10658, file: !10659, line: 121, baseType: !985, size: 64, offset: 192)
!10669 = !DIDerivedType(tag: DW_TAG_member, name: "root_ns", scope: !10658, file: !10659, line: 122, baseType: !10670, size: 64, offset: 256)
!10670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10671, size: 64)
!10671 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_flow_root_namespace", file: !10659, line: 258, size: 1728, elements: !10672)
!10672 = !{!10673, !10710, !10711, !10719, !10732, !10733, !10775, !10776, !10777}
!10673 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !10671, file: !10659, line: 259, baseType: !10674, size: 1024)
!10674 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_flow_namespace", file: !10659, line: 234, size: 1024, elements: !10675)
!10675 = !{!10676, !10703}
!10676 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !10674, file: !10659, line: 236, baseType: !10677, size: 960)
!10677 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fs_node", file: !10659, line: 134, size: 960, elements: !10678)
!10678 = !{!10679, !10680, !10681, !10691, !10693, !10694, !10695, !10696, !10697, !10701, !10702}
!10679 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !10677, file: !10659, line: 135, baseType: !30, size: 128)
!10680 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !10677, file: !10659, line: 136, baseType: !30, size: 128, offset: 128)
!10681 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !10677, file: !10659, line: 137, baseType: !10682, size: 32, offset: 256)
!10682 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "fs_node_type", file: !10659, line: 80, baseType: !199, size: 32, elements: !10683)
!10683 = !{!10684, !10685, !10686, !10687, !10688, !10689, !10690}
!10684 = !DIEnumerator(name: "FS_TYPE_NAMESPACE", value: 0, isUnsigned: true)
!10685 = !DIEnumerator(name: "FS_TYPE_PRIO", value: 1, isUnsigned: true)
!10686 = !DIEnumerator(name: "FS_TYPE_PRIO_CHAINS", value: 2, isUnsigned: true)
!10687 = !DIEnumerator(name: "FS_TYPE_FLOW_TABLE", value: 3, isUnsigned: true)
!10688 = !DIEnumerator(name: "FS_TYPE_FLOW_GROUP", value: 4, isUnsigned: true)
!10689 = !DIEnumerator(name: "FS_TYPE_FLOW_ENTRY", value: 5, isUnsigned: true)
!10690 = !DIEnumerator(name: "FS_TYPE_FLOW_DEST", value: 6, isUnsigned: true)
!10691 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !10677, file: !10659, line: 138, baseType: !10692, size: 64, offset: 320)
!10692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10677, size: 64)
!10693 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !10677, file: !10659, line: 139, baseType: !10692, size: 64, offset: 384)
!10694 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !10677, file: !10659, line: 141, baseType: !652, size: 256, offset: 448)
!10695 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !10677, file: !10659, line: 142, baseType: !880, size: 32, offset: 704)
!10696 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !10677, file: !10659, line: 143, baseType: !304, size: 8, offset: 736)
!10697 = !DIDerivedType(tag: DW_TAG_member, name: "del_hw_func", scope: !10677, file: !10659, line: 144, baseType: !10698, size: 64, offset: 768)
!10698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10699, size: 64)
!10699 = !DISubroutineType(types: !10700)
!10700 = !{null, !10692}
!10701 = !DIDerivedType(tag: DW_TAG_member, name: "del_sw_func", scope: !10677, file: !10659, line: 145, baseType: !10698, size: 64, offset: 832)
!10702 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !10677, file: !10659, line: 146, baseType: !632, size: 32, offset: 896)
!10703 = !DIDerivedType(tag: DW_TAG_member, name: "def_miss_action", scope: !10674, file: !10659, line: 237, baseType: !10704, size: 32, offset: 960)
!10704 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mlx5_flow_table_miss_action", file: !10705, line: 1632, baseType: !199, size: 32, elements: !10706)
!10705 = !DIFile(filename: "./include/linux/mlx5/mlx5_ifc.h", directory: "/home/lizy2001/genbc/linux")
!10706 = !{!10707, !10708, !10709}
!10707 = !DIEnumerator(name: "MLX5_FLOW_TABLE_MISS_ACTION_DEF", value: 0, isUnsigned: true)
!10708 = !DIEnumerator(name: "MLX5_FLOW_TABLE_MISS_ACTION_FWD", value: 1, isUnsigned: true)
!10709 = !DIEnumerator(name: "MLX5_FLOW_TABLE_MISS_ACTION_SWITCH_DOMAIN", value: 2, isUnsigned: true)
!10710 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !10671, file: !10659, line: 260, baseType: !10663, size: 32, offset: 1024)
!10711 = !DIDerivedType(tag: DW_TAG_member, name: "fs_dr_domain", scope: !10671, file: !10659, line: 261, baseType: !10712, size: 64, offset: 1088)
!10712 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_fs_dr_domain", file: !10713, line: 28, size: 64, elements: !10714)
!10713 = !DIFile(filename: "drivers/net/ethernet/mellanox/mlx5/core/steering/fs_dr.h", directory: "/home/lizy2001/genbc/linux")
!10714 = !{!10715}
!10715 = !DIDerivedType(tag: DW_TAG_member, name: "dr_domain", scope: !10712, file: !10713, line: 29, baseType: !10716, size: 64)
!10716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10717, size: 64)
!10717 = !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5dr_domain", file: !10718, line: 7, flags: DIFlagFwdDecl)
!10718 = !DIFile(filename: "drivers/net/ethernet/mellanox/mlx5/core/steering/mlx5dr.h", directory: "/home/lizy2001/genbc/linux")
!10719 = !DIDerivedType(tag: DW_TAG_member, name: "table_type", scope: !10671, file: !10659, line: 262, baseType: !10720, size: 32, offset: 1152)
!10720 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "fs_flow_table_type", file: !10659, line: 90, baseType: !199, size: 32, elements: !10721)
!10721 = !{!10722, !10723, !10724, !10725, !10726, !10727, !10728, !10729, !10730, !10731}
!10722 = !DIEnumerator(name: "FS_FT_NIC_RX", value: 0, isUnsigned: true)
!10723 = !DIEnumerator(name: "FS_FT_NIC_TX", value: 1, isUnsigned: true)
!10724 = !DIEnumerator(name: "FS_FT_ESW_EGRESS_ACL", value: 2, isUnsigned: true)
!10725 = !DIEnumerator(name: "FS_FT_ESW_INGRESS_ACL", value: 3, isUnsigned: true)
!10726 = !DIEnumerator(name: "FS_FT_FDB", value: 4, isUnsigned: true)
!10727 = !DIEnumerator(name: "FS_FT_SNIFFER_RX", value: 5, isUnsigned: true)
!10728 = !DIEnumerator(name: "FS_FT_SNIFFER_TX", value: 6, isUnsigned: true)
!10729 = !DIEnumerator(name: "FS_FT_RDMA_RX", value: 7, isUnsigned: true)
!10730 = !DIEnumerator(name: "FS_FT_RDMA_TX", value: 8, isUnsigned: true)
!10731 = !DIEnumerator(name: "FS_FT_MAX_TYPE", value: 8, isUnsigned: true)
!10732 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !10671, file: !10659, line: 263, baseType: !12, size: 64, offset: 1216)
!10733 = !DIDerivedType(tag: DW_TAG_member, name: "root_ft", scope: !10671, file: !10659, line: 264, baseType: !10734, size: 64, offset: 1280)
!10734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10735, size: 64)
!10735 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_flow_table", file: !10659, line: 166, size: 3008, elements: !10736)
!10736 = !{!10737, !10738, !10747, !10748, !10749, !10750, !10751, !10752, !10757, !10765, !10766, !10767, !10768, !10772, !10773}
!10737 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !10735, file: !10659, line: 167, baseType: !10677, size: 960)
!10738 = !DIDerivedType(tag: DW_TAG_member, name: "fs_dr_table", scope: !10735, file: !10659, line: 168, baseType: !10739, size: 128, offset: 960)
!10739 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_fs_dr_table", file: !10713, line: 36, size: 128, elements: !10740)
!10740 = !{!10741, !10744}
!10741 = !DIDerivedType(tag: DW_TAG_member, name: "dr_table", scope: !10739, file: !10713, line: 37, baseType: !10742, size: 64)
!10742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10743, size: 64)
!10743 = !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5dr_table", file: !10718, line: 8, flags: DIFlagFwdDecl)
!10744 = !DIDerivedType(tag: DW_TAG_member, name: "miss_action", scope: !10739, file: !10713, line: 38, baseType: !10745, size: 64, offset: 64)
!10745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10746, size: 64)
!10746 = !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5dr_action", file: !10718, line: 11, flags: DIFlagFwdDecl)
!10747 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !10735, file: !10659, line: 169, baseType: !229, size: 32, offset: 1088)
!10748 = !DIDerivedType(tag: DW_TAG_member, name: "vport", scope: !10735, file: !10659, line: 170, baseType: !744, size: 16, offset: 1120)
!10749 = !DIDerivedType(tag: DW_TAG_member, name: "max_fte", scope: !10735, file: !10659, line: 171, baseType: !199, size: 32, offset: 1152)
!10750 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !10735, file: !10659, line: 172, baseType: !199, size: 32, offset: 1184)
!10751 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !10735, file: !10659, line: 173, baseType: !10720, size: 32, offset: 1216)
!10752 = !DIDerivedType(tag: DW_TAG_member, name: "op_mod", scope: !10735, file: !10659, line: 174, baseType: !10753, size: 32, offset: 1248)
!10753 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "fs_flow_table_op_mod", file: !10659, line: 103, baseType: !199, size: 32, elements: !10754)
!10754 = !{!10755, !10756}
!10755 = !DIEnumerator(name: "FS_FT_OP_MOD_NORMAL", value: 0, isUnsigned: true)
!10756 = !DIEnumerator(name: "FS_FT_OP_MOD_LAG_DEMUX", value: 1, isUnsigned: true)
!10757 = !DIDerivedType(tag: DW_TAG_member, name: "autogroup", scope: !10735, file: !10659, line: 181, baseType: !10758, size: 160, offset: 1280)
!10758 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !10735, file: !10659, line: 175, size: 160, elements: !10759)
!10759 = !{!10760, !10761, !10762, !10763, !10764}
!10760 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !10758, file: !10659, line: 176, baseType: !304, size: 8)
!10761 = !DIDerivedType(tag: DW_TAG_member, name: "required_groups", scope: !10758, file: !10659, line: 177, baseType: !199, size: 32, offset: 32)
!10762 = !DIDerivedType(tag: DW_TAG_member, name: "group_size", scope: !10758, file: !10659, line: 178, baseType: !199, size: 32, offset: 64)
!10763 = !DIDerivedType(tag: DW_TAG_member, name: "num_groups", scope: !10758, file: !10659, line: 179, baseType: !199, size: 32, offset: 96)
!10764 = !DIDerivedType(tag: DW_TAG_member, name: "max_fte", scope: !10758, file: !10659, line: 180, baseType: !199, size: 32, offset: 128)
!10765 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !10735, file: !10659, line: 183, baseType: !558, size: 192, offset: 1472)
!10766 = !DIDerivedType(tag: DW_TAG_member, name: "fwd_rules", scope: !10735, file: !10659, line: 185, baseType: !30, size: 128, offset: 1664)
!10767 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !10735, file: !10659, line: 186, baseType: !229, size: 32, offset: 1792)
!10768 = !DIDerivedType(tag: DW_TAG_member, name: "fgs_hash", scope: !10735, file: !10659, line: 187, baseType: !10769, size: 1024, offset: 1856)
!10769 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rhltable", file: !6866, line: 97, size: 1024, elements: !10770)
!10770 = !{!10771}
!10771 = !DIDerivedType(tag: DW_TAG_member, name: "ht", scope: !10769, file: !6866, line: 98, baseType: !6937, size: 1024)
!10772 = !DIDerivedType(tag: DW_TAG_member, name: "def_miss_action", scope: !10735, file: !10659, line: 188, baseType: !10704, size: 32, offset: 2880)
!10773 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !10735, file: !10659, line: 189, baseType: !10774, size: 64, offset: 2944)
!10774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10674, size: 64)
!10775 = !DIDerivedType(tag: DW_TAG_member, name: "chain_lock", scope: !10671, file: !10659, line: 266, baseType: !558, size: 192, offset: 1344)
!10776 = !DIDerivedType(tag: DW_TAG_member, name: "underlay_qpns", scope: !10671, file: !10659, line: 267, baseType: !30, size: 128, offset: 1536)
!10777 = !DIDerivedType(tag: DW_TAG_member, name: "cmds", scope: !10671, file: !10659, line: 268, baseType: !10778, size: 64, offset: 1664)
!10778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10779, size: 64)
!10779 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10780)
!10780 = !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_flow_cmds", file: !10713, line: 45, flags: DIFlagFwdDecl)
!10781 = !DIDerivedType(tag: DW_TAG_member, name: "fdb_root_ns", scope: !10658, file: !10659, line: 123, baseType: !10670, size: 64, offset: 320)
!10782 = !DIDerivedType(tag: DW_TAG_member, name: "fdb_sub_ns", scope: !10658, file: !10659, line: 124, baseType: !10783, size: 64, offset: 384)
!10783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10774, size: 64)
!10784 = !DIDerivedType(tag: DW_TAG_member, name: "esw_egress_root_ns", scope: !10658, file: !10659, line: 125, baseType: !10785, size: 64, offset: 448)
!10785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10670, size: 64)
!10786 = !DIDerivedType(tag: DW_TAG_member, name: "esw_ingress_root_ns", scope: !10658, file: !10659, line: 126, baseType: !10785, size: 64, offset: 512)
!10787 = !DIDerivedType(tag: DW_TAG_member, name: "sniffer_tx_root_ns", scope: !10658, file: !10659, line: 127, baseType: !10670, size: 64, offset: 576)
!10788 = !DIDerivedType(tag: DW_TAG_member, name: "sniffer_rx_root_ns", scope: !10658, file: !10659, line: 128, baseType: !10670, size: 64, offset: 640)
!10789 = !DIDerivedType(tag: DW_TAG_member, name: "rdma_rx_root_ns", scope: !10658, file: !10659, line: 129, baseType: !10670, size: 64, offset: 704)
!10790 = !DIDerivedType(tag: DW_TAG_member, name: "rdma_tx_root_ns", scope: !10658, file: !10659, line: 130, baseType: !10670, size: 64, offset: 768)
!10791 = !DIDerivedType(tag: DW_TAG_member, name: "egress_root_ns", scope: !10658, file: !10659, line: 131, baseType: !10670, size: 64, offset: 832)
!10792 = !DIDerivedType(tag: DW_TAG_member, name: "mpfs", scope: !10602, file: !14, line: 577, baseType: !10793, size: 64, offset: 4224)
!10793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10794, size: 64)
!10794 = !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_mpfs", file: !14, line: 500, flags: DIFlagFwdDecl)
!10795 = !DIDerivedType(tag: DW_TAG_member, name: "eswitch", scope: !10602, file: !14, line: 578, baseType: !7, size: 64, offset: 4288)
!10796 = !DIDerivedType(tag: DW_TAG_member, name: "sriov", scope: !10602, file: !14, line: 579, baseType: !10797, size: 128, offset: 4352)
!10797 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_core_sriov", file: !14, line: 467, size: 128, elements: !10798)
!10798 = !{!10799, !10815, !10816}
!10799 = !DIDerivedType(tag: DW_TAG_member, name: "vfs_ctx", scope: !10797, file: !14, line: 468, baseType: !10800, size: 64)
!10800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10801, size: 64)
!10801 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_vf_context", file: !14, line: 455, size: 256, elements: !10802)
!10802 = !{!10803, !10804, !10805, !10806, !10807, !10808}
!10803 = !DIDerivedType(tag: DW_TAG_member, name: "enabled", scope: !10801, file: !14, line: 456, baseType: !6, size: 32)
!10804 = !DIDerivedType(tag: DW_TAG_member, name: "port_guid", scope: !10801, file: !14, line: 457, baseType: !235, size: 64, offset: 64)
!10805 = !DIDerivedType(tag: DW_TAG_member, name: "node_guid", scope: !10801, file: !14, line: 458, baseType: !235, size: 64, offset: 128)
!10806 = !DIDerivedType(tag: DW_TAG_member, name: "port_guid_valid", scope: !10801, file: !14, line: 462, baseType: !1403, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!10807 = !DIDerivedType(tag: DW_TAG_member, name: "node_guid_valid", scope: !10801, file: !14, line: 463, baseType: !1403, size: 1, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!10808 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !10801, file: !14, line: 464, baseType: !10809, size: 32, offset: 224)
!10809 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "port_state_policy", file: !14, line: 184, baseType: !199, size: 32, elements: !10810)
!10810 = !{!10811, !10812, !10813, !10814}
!10811 = !DIEnumerator(name: "MLX5_POLICY_DOWN", value: 0, isUnsigned: true)
!10812 = !DIEnumerator(name: "MLX5_POLICY_UP", value: 1, isUnsigned: true)
!10813 = !DIEnumerator(name: "MLX5_POLICY_FOLLOW", value: 2, isUnsigned: true)
!10814 = !DIEnumerator(name: "MLX5_POLICY_INVALID", value: 4294967295, isUnsigned: true)
!10815 = !DIDerivedType(tag: DW_TAG_member, name: "num_vfs", scope: !10797, file: !14, line: 469, baseType: !6, size: 32, offset: 64)
!10816 = !DIDerivedType(tag: DW_TAG_member, name: "max_vfs", scope: !10797, file: !14, line: 470, baseType: !744, size: 16, offset: 96)
!10817 = !DIDerivedType(tag: DW_TAG_member, name: "lag", scope: !10602, file: !14, line: 580, baseType: !10818, size: 64, offset: 4480)
!10818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10819, size: 64)
!10819 = !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_lag", file: !14, line: 502, flags: DIFlagFwdDecl)
!10820 = !DIDerivedType(tag: DW_TAG_member, name: "devcom", scope: !10602, file: !14, line: 581, baseType: !10821, size: 64, offset: 4544)
!10821 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10822, size: 64)
!10822 = !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_devcom", file: !14, line: 503, flags: DIFlagFwdDecl)
!10823 = !DIDerivedType(tag: DW_TAG_member, name: "fw_reset", scope: !10602, file: !14, line: 582, baseType: !10824, size: 64, offset: 4608)
!10824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10825, size: 64)
!10825 = !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_fw_reset", file: !14, line: 504, flags: DIFlagFwdDecl)
!10826 = !DIDerivedType(tag: DW_TAG_member, name: "roce", scope: !10602, file: !14, line: 583, baseType: !10827, size: 192, offset: 4672)
!10827 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_core_roce", file: !14, line: 531, size: 192, elements: !10828)
!10828 = !{!10829, !10830, !10863}
!10829 = !DIDerivedType(tag: DW_TAG_member, name: "ft", scope: !10827, file: !14, line: 532, baseType: !10734, size: 64)
!10830 = !DIDerivedType(tag: DW_TAG_member, name: "fg", scope: !10827, file: !14, line: 533, baseType: !10831, size: 64, offset: 64)
!10831 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10832, size: 64)
!10832 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_flow_group", file: !10659, line: 246, size: 5056, elements: !10833)
!10833 = !{!10834, !10835, !10841, !10849, !10850, !10851, !10855, !10856, !10857}
!10834 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !10832, file: !10659, line: 247, baseType: !10677, size: 960)
!10835 = !DIDerivedType(tag: DW_TAG_member, name: "fs_dr_matcher", scope: !10832, file: !10659, line: 248, baseType: !10836, size: 64, offset: 960)
!10836 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_fs_dr_matcher", file: !10713, line: 32, size: 64, elements: !10837)
!10837 = !{!10838}
!10838 = !DIDerivedType(tag: DW_TAG_member, name: "dr_matcher", scope: !10836, file: !10713, line: 33, baseType: !10839, size: 64)
!10839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10840, size: 64)
!10840 = !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5dr_matcher", file: !10718, line: 9, flags: DIFlagFwdDecl)
!10841 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !10832, file: !10659, line: 249, baseType: !10842, size: 2592, offset: 1024)
!10842 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_flow_group_mask", file: !10659, line: 240, size: 2592, elements: !10843)
!10843 = !{!10844, !10845}
!10844 = !DIDerivedType(tag: DW_TAG_member, name: "match_criteria_enable", scope: !10842, file: !10659, line: 241, baseType: !1403, size: 8)
!10845 = !DIDerivedType(tag: DW_TAG_member, name: "match_criteria", scope: !10842, file: !10659, line: 242, baseType: !10846, size: 2560, offset: 32)
!10846 = !DICompositeType(tag: DW_TAG_array_type, baseType: !229, size: 2560, elements: !10847)
!10847 = !{!10848}
!10848 = !DISubrange(count: 80)
!10849 = !DIDerivedType(tag: DW_TAG_member, name: "start_index", scope: !10832, file: !10659, line: 250, baseType: !229, size: 32, offset: 3616)
!10850 = !DIDerivedType(tag: DW_TAG_member, name: "max_ftes", scope: !10832, file: !10659, line: 251, baseType: !229, size: 32, offset: 3648)
!10851 = !DIDerivedType(tag: DW_TAG_member, name: "fte_allocator", scope: !10832, file: !10659, line: 252, baseType: !10852, size: 128, offset: 3712)
!10852 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ida", file: !1562, line: 244, size: 128, elements: !10853)
!10853 = !{!10854}
!10854 = !DIDerivedType(tag: DW_TAG_member, name: "xa", scope: !10852, file: !1562, line: 245, baseType: !623, size: 128)
!10855 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !10832, file: !10659, line: 253, baseType: !229, size: 32, offset: 3840)
!10856 = !DIDerivedType(tag: DW_TAG_member, name: "ftes_hash", scope: !10832, file: !10659, line: 254, baseType: !6937, size: 1024, offset: 3904)
!10857 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !10832, file: !10659, line: 255, baseType: !10858, size: 128, offset: 4928)
!10858 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rhlist_head", file: !6866, line: 21, size: 128, elements: !10859)
!10859 = !{!10860, !10861}
!10860 = !DIDerivedType(tag: DW_TAG_member, name: "rhead", scope: !10858, file: !6866, line: 22, baseType: !6865, size: 64)
!10861 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !10858, file: !6866, line: 23, baseType: !10862, size: 64, offset: 64)
!10862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10858, size: 64)
!10863 = !DIDerivedType(tag: DW_TAG_member, name: "allow_rule", scope: !10827, file: !14, line: 534, baseType: !10864, size: 64, offset: 128)
!10864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10865, size: 64)
!10865 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_flow_handle", file: !10659, line: 160, size: 64, elements: !10866)
!10866 = !{!10867, !10868}
!10867 = !DIDerivedType(tag: DW_TAG_member, name: "num_rules", scope: !10865, file: !10659, line: 161, baseType: !6, size: 32)
!10868 = !DIDerivedType(tag: DW_TAG_member, name: "rule", scope: !10865, file: !10659, line: 162, baseType: !10869, offset: 64)
!10869 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10870, elements: !2189)
!10870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10871, size: 64)
!10871 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_flow_rule", file: !10659, line: 149, size: 1472, elements: !10872)
!10872 = !{!10873, !10874, !10875, !10934, !10935}
!10873 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !10871, file: !10659, line: 150, baseType: !10677, size: 960)
!10874 = !DIDerivedType(tag: DW_TAG_member, name: "ft", scope: !10871, file: !10659, line: 151, baseType: !10734, size: 64, offset: 960)
!10875 = !DIDerivedType(tag: DW_TAG_member, name: "dest_attr", scope: !10871, file: !10659, line: 152, baseType: !10876, size: 256, offset: 1024)
!10876 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_flow_destination", file: !10877, line: 122, size: 256, elements: !10878)
!10877 = !DIFile(filename: "./include/linux/mlx5/fs.h", directory: "/home/lizy2001/genbc/linux")
!10878 = !{!10879, !10888}
!10879 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !10876, file: !10877, line: 123, baseType: !10880, size: 32)
!10880 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mlx5_flow_destination_type", file: !10705, line: 1622, baseType: !199, size: 32, elements: !10881)
!10881 = !{!10882, !10883, !10884, !10885, !10886, !10887}
!10882 = !DIEnumerator(name: "MLX5_FLOW_DESTINATION_TYPE_VPORT", value: 0, isUnsigned: true)
!10883 = !DIEnumerator(name: "MLX5_FLOW_DESTINATION_TYPE_FLOW_TABLE", value: 1, isUnsigned: true)
!10884 = !DIEnumerator(name: "MLX5_FLOW_DESTINATION_TYPE_TIR", value: 2, isUnsigned: true)
!10885 = !DIEnumerator(name: "MLX5_FLOW_DESTINATION_TYPE_PORT", value: 153, isUnsigned: true)
!10886 = !DIEnumerator(name: "MLX5_FLOW_DESTINATION_TYPE_COUNTER", value: 256, isUnsigned: true)
!10887 = !DIEnumerator(name: "MLX5_FLOW_DESTINATION_TYPE_FLOW_TABLE_NUM", value: 257, isUnsigned: true)
!10888 = !DIDerivedType(tag: DW_TAG_member, scope: !10876, file: !10877, line: 124, baseType: !10889, size: 192, offset: 64)
!10889 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10876, file: !10877, line: 124, size: 192, elements: !10890)
!10890 = !{!10891, !10892, !10893, !10894, !10895}
!10891 = !DIDerivedType(tag: DW_TAG_member, name: "tir_num", scope: !10889, file: !10877, line: 125, baseType: !229, size: 32)
!10892 = !DIDerivedType(tag: DW_TAG_member, name: "ft_num", scope: !10889, file: !10877, line: 126, baseType: !229, size: 32)
!10893 = !DIDerivedType(tag: DW_TAG_member, name: "ft", scope: !10889, file: !10877, line: 127, baseType: !10734, size: 64)
!10894 = !DIDerivedType(tag: DW_TAG_member, name: "counter_id", scope: !10889, file: !10877, line: 128, baseType: !229, size: 32)
!10895 = !DIDerivedType(tag: DW_TAG_member, name: "vport", scope: !10889, file: !10877, line: 134, baseType: !10896, size: 192)
!10896 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !10889, file: !10877, line: 129, size: 192, elements: !10897)
!10897 = !{!10898, !10899, !10900, !10933}
!10898 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !10896, file: !10877, line: 130, baseType: !744, size: 16)
!10899 = !DIDerivedType(tag: DW_TAG_member, name: "vhca_id", scope: !10896, file: !10877, line: 131, baseType: !744, size: 16, offset: 16)
!10900 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_reformat", scope: !10896, file: !10877, line: 132, baseType: !10901, size: 64, offset: 64)
!10901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10902, size: 64)
!10902 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_pkt_reformat", file: !10659, line: 60, size: 128, elements: !10903)
!10903 = !{!10904, !10924, !10925}
!10904 = !DIDerivedType(tag: DW_TAG_member, name: "ns_type", scope: !10902, file: !10659, line: 61, baseType: !10905, size: 32)
!10905 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mlx5_flow_namespace_type", file: !10877, line: 65, baseType: !199, size: 32, elements: !10906)
!10906 = !{!10907, !10908, !10909, !10910, !10911, !10912, !10913, !10914, !10915, !10916, !10917, !10918, !10919, !10920, !10921, !10922, !10923}
!10907 = !DIEnumerator(name: "MLX5_FLOW_NAMESPACE_BYPASS", value: 0, isUnsigned: true)
!10908 = !DIEnumerator(name: "MLX5_FLOW_NAMESPACE_LAG", value: 1, isUnsigned: true)
!10909 = !DIEnumerator(name: "MLX5_FLOW_NAMESPACE_OFFLOADS", value: 2, isUnsigned: true)
!10910 = !DIEnumerator(name: "MLX5_FLOW_NAMESPACE_ETHTOOL", value: 3, isUnsigned: true)
!10911 = !DIEnumerator(name: "MLX5_FLOW_NAMESPACE_KERNEL", value: 4, isUnsigned: true)
!10912 = !DIEnumerator(name: "MLX5_FLOW_NAMESPACE_LEFTOVERS", value: 5, isUnsigned: true)
!10913 = !DIEnumerator(name: "MLX5_FLOW_NAMESPACE_ANCHOR", value: 6, isUnsigned: true)
!10914 = !DIEnumerator(name: "MLX5_FLOW_NAMESPACE_FDB", value: 7, isUnsigned: true)
!10915 = !DIEnumerator(name: "MLX5_FLOW_NAMESPACE_ESW_EGRESS", value: 8, isUnsigned: true)
!10916 = !DIEnumerator(name: "MLX5_FLOW_NAMESPACE_ESW_INGRESS", value: 9, isUnsigned: true)
!10917 = !DIEnumerator(name: "MLX5_FLOW_NAMESPACE_SNIFFER_RX", value: 10, isUnsigned: true)
!10918 = !DIEnumerator(name: "MLX5_FLOW_NAMESPACE_SNIFFER_TX", value: 11, isUnsigned: true)
!10919 = !DIEnumerator(name: "MLX5_FLOW_NAMESPACE_EGRESS", value: 12, isUnsigned: true)
!10920 = !DIEnumerator(name: "MLX5_FLOW_NAMESPACE_EGRESS_KERNEL", value: 13, isUnsigned: true)
!10921 = !DIEnumerator(name: "MLX5_FLOW_NAMESPACE_RDMA_RX", value: 14, isUnsigned: true)
!10922 = !DIEnumerator(name: "MLX5_FLOW_NAMESPACE_RDMA_RX_KERNEL", value: 15, isUnsigned: true)
!10923 = !DIEnumerator(name: "MLX5_FLOW_NAMESPACE_RDMA_TX", value: 16, isUnsigned: true)
!10924 = !DIDerivedType(tag: DW_TAG_member, name: "reformat_type", scope: !10902, file: !10659, line: 62, baseType: !6, size: 32, offset: 32)
!10925 = !DIDerivedType(tag: DW_TAG_member, scope: !10902, file: !10659, line: 63, baseType: !10926, size: 64, offset: 64)
!10926 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10902, file: !10659, line: 63, size: 64, elements: !10927)
!10927 = !{!10928, !10932}
!10928 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !10926, file: !10659, line: 64, baseType: !10929, size: 64)
!10929 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_fs_dr_action", file: !10713, line: 13, size: 64, elements: !10930)
!10930 = !{!10931}
!10931 = !DIDerivedType(tag: DW_TAG_member, name: "dr_action", scope: !10929, file: !10713, line: 14, baseType: !10745, size: 64)
!10932 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !10926, file: !10659, line: 65, baseType: !229, size: 32)
!10933 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !10896, file: !10877, line: 133, baseType: !1403, size: 8, offset: 128)
!10934 = !DIDerivedType(tag: DW_TAG_member, name: "next_ft", scope: !10871, file: !10659, line: 156, baseType: !30, size: 128, offset: 1280)
!10935 = !DIDerivedType(tag: DW_TAG_member, name: "sw_action", scope: !10871, file: !10659, line: 157, baseType: !229, size: 32, offset: 1408)
!10936 = !DIDerivedType(tag: DW_TAG_member, name: "fc_stats", scope: !10602, file: !14, line: 584, baseType: !10937, size: 2176, offset: 4864)
!10937 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_fc_stats", file: !14, line: 484, size: 2176, elements: !10938)
!10938 = !{!10939, !10940, !10941, !10942, !10946, !10947, !10948, !10949, !10950, !10951, !10952}
!10939 = !DIDerivedType(tag: DW_TAG_member, name: "counters_idr_lock", scope: !10937, file: !14, line: 485, baseType: !44)
!10940 = !DIDerivedType(tag: DW_TAG_member, name: "counters_idr", scope: !10937, file: !14, line: 486, baseType: !1561, size: 192)
!10941 = !DIDerivedType(tag: DW_TAG_member, name: "counters", scope: !10937, file: !14, line: 487, baseType: !30, size: 128, offset: 192)
!10942 = !DIDerivedType(tag: DW_TAG_member, name: "addlist", scope: !10937, file: !14, line: 488, baseType: !10943, size: 64, offset: 320)
!10943 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "llist_head", file: !173, line: 54, size: 64, elements: !10944)
!10944 = !{!10945}
!10945 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !10943, file: !173, line: 55, baseType: !176, size: 64)
!10946 = !DIDerivedType(tag: DW_TAG_member, name: "dellist", scope: !10937, file: !14, line: 489, baseType: !10943, size: 64, offset: 384)
!10947 = !DIDerivedType(tag: DW_TAG_member, name: "wq", scope: !10937, file: !14, line: 491, baseType: !2578, size: 64, offset: 448)
!10948 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !10937, file: !14, line: 492, baseType: !2562, size: 704, offset: 512)
!10949 = !DIDerivedType(tag: DW_TAG_member, name: "next_query", scope: !10937, file: !14, line: 493, baseType: !135, size: 64, offset: 1216)
!10950 = !DIDerivedType(tag: DW_TAG_member, name: "sampling_interval", scope: !10937, file: !14, line: 494, baseType: !135, size: 64, offset: 1280)
!10951 = !DIDerivedType(tag: DW_TAG_member, name: "bulk_query_out", scope: !10937, file: !14, line: 495, baseType: !1467, size: 64, offset: 1344)
!10952 = !DIDerivedType(tag: DW_TAG_member, name: "fc_pool", scope: !10937, file: !14, line: 496, baseType: !10953, size: 768, offset: 1408)
!10953 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_fc_pool", file: !14, line: 473, size: 768, elements: !10954)
!10954 = !{!10955, !10956, !10957, !10958, !10959, !10960, !10961, !10962}
!10955 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !10953, file: !14, line: 474, baseType: !12, size: 64)
!10956 = !DIDerivedType(tag: DW_TAG_member, name: "pool_lock", scope: !10953, file: !14, line: 475, baseType: !558, size: 192, offset: 64)
!10957 = !DIDerivedType(tag: DW_TAG_member, name: "fully_used", scope: !10953, file: !14, line: 476, baseType: !30, size: 128, offset: 256)
!10958 = !DIDerivedType(tag: DW_TAG_member, name: "partially_used", scope: !10953, file: !14, line: 477, baseType: !30, size: 128, offset: 384)
!10959 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !10953, file: !14, line: 478, baseType: !30, size: 128, offset: 512)
!10960 = !DIDerivedType(tag: DW_TAG_member, name: "available_fcs", scope: !10953, file: !14, line: 479, baseType: !6, size: 32, offset: 640)
!10961 = !DIDerivedType(tag: DW_TAG_member, name: "used_fcs", scope: !10953, file: !14, line: 480, baseType: !6, size: 32, offset: 672)
!10962 = !DIDerivedType(tag: DW_TAG_member, name: "threshold", scope: !10953, file: !14, line: 481, baseType: !6, size: 32, offset: 704)
!10963 = !DIDerivedType(tag: DW_TAG_member, name: "rl_table", scope: !10602, file: !14, line: 585, baseType: !10964, size: 384, offset: 7040)
!10964 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_rl_table", file: !14, line: 522, size: 384, elements: !10965)
!10965 = !{!10966, !10967, !10968, !10969, !10970}
!10966 = !DIDerivedType(tag: DW_TAG_member, name: "rl_lock", scope: !10964, file: !14, line: 524, baseType: !558, size: 192)
!10967 = !DIDerivedType(tag: DW_TAG_member, name: "max_size", scope: !10964, file: !14, line: 525, baseType: !744, size: 16, offset: 192)
!10968 = !DIDerivedType(tag: DW_TAG_member, name: "max_rate", scope: !10964, file: !14, line: 526, baseType: !229, size: 32, offset: 224)
!10969 = !DIDerivedType(tag: DW_TAG_member, name: "min_rate", scope: !10964, file: !14, line: 527, baseType: !229, size: 32, offset: 256)
!10970 = !DIDerivedType(tag: DW_TAG_member, name: "rl_entry", scope: !10964, file: !14, line: 528, baseType: !10971, size: 64, offset: 320)
!10971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10972, size: 64)
!10972 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_rl_entry", file: !14, line: 514, size: 576, elements: !10973)
!10973 = !{!10974, !10975, !10976, !10977, !10978}
!10974 = !DIDerivedType(tag: DW_TAG_member, name: "rl_raw", scope: !10972, file: !14, line: 515, baseType: !2934, size: 384)
!10975 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !10972, file: !14, line: 516, baseType: !744, size: 16, offset: 384)
!10976 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !10972, file: !14, line: 517, baseType: !235, size: 64, offset: 448)
!10977 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !10972, file: !14, line: 518, baseType: !744, size: 16, offset: 512)
!10978 = !DIDerivedType(tag: DW_TAG_member, name: "dedicated", scope: !10972, file: !14, line: 519, baseType: !1403, size: 1, offset: 528, flags: DIFlagBitField, extraData: i64 528)
!10979 = !DIDerivedType(tag: DW_TAG_member, name: "bfregs", scope: !10602, file: !14, line: 587, baseType: !10980, size: 640, offset: 7424)
!10980 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_bfreg_data", file: !14, line: 413, size: 640, elements: !10981)
!10981 = !{!10982, !10987}
!10982 = !DIDerivedType(tag: DW_TAG_member, name: "reg_head", scope: !10980, file: !14, line: 414, baseType: !10983, size: 320)
!10983 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_bfreg_head", file: !14, line: 407, size: 320, elements: !10984)
!10984 = !{!10985, !10986}
!10985 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !10983, file: !14, line: 409, baseType: !558, size: 192)
!10986 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !10983, file: !14, line: 410, baseType: !30, size: 128, offset: 192)
!10987 = !DIDerivedType(tag: DW_TAG_member, name: "wc_head", scope: !10980, file: !14, line: 415, baseType: !10983, size: 320, offset: 320)
!10988 = !DIDerivedType(tag: DW_TAG_member, name: "uar", scope: !10602, file: !14, line: 588, baseType: !10989, size: 64, offset: 8064)
!10989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10990, size: 64)
!10990 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_uars_page", file: !14, line: 393, size: 640, elements: !10991)
!10991 = !{!10992, !10993, !10994, !10995, !10996, !10997, !10998, !10999, !11000, !11001, !11002}
!10992 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !10990, file: !14, line: 394, baseType: !159, size: 64)
!10993 = !DIDerivedType(tag: DW_TAG_member, name: "wc", scope: !10990, file: !14, line: 395, baseType: !304, size: 8, offset: 64)
!10994 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !10990, file: !14, line: 396, baseType: !229, size: 32, offset: 96)
!10995 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !10990, file: !14, line: 397, baseType: !30, size: 128, offset: 128)
!10996 = !DIDerivedType(tag: DW_TAG_member, name: "bfregs", scope: !10990, file: !14, line: 398, baseType: !199, size: 32, offset: 256)
!10997 = !DIDerivedType(tag: DW_TAG_member, name: "reg_bitmap", scope: !10990, file: !14, line: 399, baseType: !5582, size: 64, offset: 320)
!10998 = !DIDerivedType(tag: DW_TAG_member, name: "fp_bitmap", scope: !10990, file: !14, line: 400, baseType: !5582, size: 64, offset: 384)
!10999 = !DIDerivedType(tag: DW_TAG_member, name: "reg_avail", scope: !10990, file: !14, line: 401, baseType: !199, size: 32, offset: 448)
!11000 = !DIDerivedType(tag: DW_TAG_member, name: "fp_avail", scope: !10990, file: !14, line: 402, baseType: !199, size: 32, offset: 480)
!11001 = !DIDerivedType(tag: DW_TAG_member, name: "ref_count", scope: !10990, file: !14, line: 403, baseType: !1556, size: 32, offset: 512)
!11002 = !DIDerivedType(tag: DW_TAG_member, name: "mdev", scope: !10990, file: !14, line: 404, baseType: !12, size: 64, offset: 576)
!11003 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !13, file: !14, line: 699, baseType: !11004, size: 64, offset: 1461888)
!11004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11005, size: 64)
!11005 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_profile", file: !14, line: 1117, size: 1600, elements: !11006)
!11006 = !{!11007, !11008, !11009}
!11007 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !11005, file: !14, line: 1118, baseType: !235, size: 64)
!11008 = !DIDerivedType(tag: DW_TAG_member, name: "log_max_qp", scope: !11005, file: !14, line: 1119, baseType: !1403, size: 8, offset: 64)
!11009 = !DIDerivedType(tag: DW_TAG_member, name: "mr_cache", scope: !11005, file: !14, line: 1123, baseType: !11010, size: 1472, offset: 96)
!11010 = !DICompositeType(tag: DW_TAG_array_type, baseType: !11011, size: 1472, elements: !11015)
!11011 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !11005, file: !14, line: 1120, size: 64, elements: !11012)
!11012 = !{!11013, !11014}
!11013 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !11011, file: !14, line: 1121, baseType: !6, size: 32)
!11014 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !11011, file: !14, line: 1122, baseType: !6, size: 32, offset: 32)
!11015 = !{!11016}
!11016 = !DISubrange(count: 23)
!11017 = !DIDerivedType(tag: DW_TAG_member, name: "issi", scope: !13, file: !14, line: 700, baseType: !229, size: 32, offset: 1461952)
!11018 = !DIDerivedType(tag: DW_TAG_member, name: "mlx5e_res", scope: !13, file: !14, line: 701, baseType: !11019, size: 960, offset: 1462016)
!11019 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5e_resources", file: !14, line: 619, size: 960, elements: !11020)
!11020 = !{!11021, !11022, !11028, !11036}
!11021 = !DIDerivedType(tag: DW_TAG_member, name: "pdn", scope: !11019, file: !14, line: 620, baseType: !229, size: 32)
!11022 = !DIDerivedType(tag: DW_TAG_member, name: "td", scope: !11019, file: !14, line: 621, baseType: !11023, size: 384, offset: 64)
!11023 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_td", file: !14, line: 612, size: 384, elements: !11024)
!11024 = !{!11025, !11026, !11027}
!11025 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !11023, file: !14, line: 614, baseType: !558, size: 192)
!11026 = !DIDerivedType(tag: DW_TAG_member, name: "tirs_list", scope: !11023, file: !14, line: 615, baseType: !30, size: 128, offset: 192)
!11027 = !DIDerivedType(tag: DW_TAG_member, name: "tdn", scope: !11023, file: !14, line: 616, baseType: !229, size: 32, offset: 320)
!11028 = !DIDerivedType(tag: DW_TAG_member, name: "mkey", scope: !11019, file: !14, line: 622, baseType: !11029, size: 256, offset: 448)
!11029 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_core_mkey", file: !14, line: 367, size: 256, elements: !11030)
!11030 = !{!11031, !11032, !11033, !11034, !11035}
!11031 = !DIDerivedType(tag: DW_TAG_member, name: "iova", scope: !11029, file: !14, line: 368, baseType: !235, size: 64)
!11032 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !11029, file: !14, line: 369, baseType: !235, size: 64, offset: 64)
!11033 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !11029, file: !14, line: 370, baseType: !229, size: 32, offset: 128)
!11034 = !DIDerivedType(tag: DW_TAG_member, name: "pd", scope: !11029, file: !14, line: 371, baseType: !229, size: 32, offset: 160)
!11035 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !11029, file: !14, line: 372, baseType: !229, size: 32, offset: 192)
!11036 = !DIDerivedType(tag: DW_TAG_member, name: "bfreg", scope: !11019, file: !14, line: 623, baseType: !11037, size: 256, offset: 704)
!11037 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_sq_bfreg", file: !14, line: 418, size: 256, elements: !11038)
!11038 = !{!11039, !11040, !11041, !11042, !11043}
!11039 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !11037, file: !14, line: 419, baseType: !159, size: 64)
!11040 = !DIDerivedType(tag: DW_TAG_member, name: "up", scope: !11037, file: !14, line: 420, baseType: !10989, size: 64, offset: 64)
!11041 = !DIDerivedType(tag: DW_TAG_member, name: "wc", scope: !11037, file: !14, line: 421, baseType: !304, size: 8, offset: 128)
!11042 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !11037, file: !14, line: 422, baseType: !229, size: 32, offset: 160)
!11043 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !11037, file: !14, line: 423, baseType: !199, size: 32, offset: 192)
!11044 = !DIDerivedType(tag: DW_TAG_member, name: "dm", scope: !13, file: !14, line: 702, baseType: !11045, size: 64, offset: 1462976)
!11045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11046, size: 64)
!11046 = !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_dm", file: !14, line: 661, flags: DIFlagFwdDecl)
!11047 = !DIDerivedType(tag: DW_TAG_member, name: "vxlan", scope: !13, file: !14, line: 703, baseType: !11048, size: 64, offset: 1463040)
!11048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11049, size: 64)
!11049 = !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_vxlan", file: !14, line: 663, flags: DIFlagFwdDecl)
!11050 = !DIDerivedType(tag: DW_TAG_member, name: "geneve", scope: !13, file: !14, line: 704, baseType: !11051, size: 64, offset: 1463104)
!11051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11052, size: 64)
!11052 = !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_geneve", file: !14, line: 664, flags: DIFlagFwdDecl)
!11053 = !DIDerivedType(tag: DW_TAG_member, name: "roce", scope: !13, file: !14, line: 708, baseType: !11054, size: 256, offset: 1463168)
!11054 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !13, file: !14, line: 705, size: 256, elements: !11055)
!11055 = !{!11056, !11062}
!11056 = !DIDerivedType(tag: DW_TAG_member, name: "reserved_gids", scope: !11054, file: !14, line: 706, baseType: !11057, size: 192)
!11057 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_rsvd_gids", file: !14, line: 633, size: 192, elements: !11058)
!11058 = !{!11059, !11060, !11061}
!11059 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !11057, file: !14, line: 634, baseType: !199, size: 32)
!11060 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !11057, file: !14, line: 635, baseType: !199, size: 32, offset: 32)
!11061 = !DIDerivedType(tag: DW_TAG_member, name: "ida", scope: !11057, file: !14, line: 636, baseType: !10852, size: 128, offset: 64)
!11062 = !DIDerivedType(tag: DW_TAG_member, name: "roce_en", scope: !11054, file: !14, line: 707, baseType: !229, size: 32, offset: 192)
!11063 = !DIDerivedType(tag: DW_TAG_member, name: "clock", scope: !13, file: !14, line: 715, baseType: !11064, size: 3840, offset: 1463424)
!11064 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_clock", file: !14, line: 647, size: 3840, elements: !11065)
!11065 = !{!11066, !11067, !11068, !11081, !11089, !11096, !11097, !11098, !11099, !11103, !11228}
!11066 = !DIDerivedType(tag: DW_TAG_member, name: "pps_nb", scope: !11064, file: !14, line: 648, baseType: !10381, size: 256)
!11067 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !11064, file: !14, line: 649, baseType: !2638, size: 32, offset: 256)
!11068 = !DIDerivedType(tag: DW_TAG_member, name: "cycles", scope: !11064, file: !14, line: 650, baseType: !11069, size: 192, offset: 320)
!11069 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cyclecounter", file: !11070, line: 30, size: 192, elements: !11071)
!11070 = !DIFile(filename: "./include/linux/timecounter.h", directory: "/home/lizy2001/genbc/linux")
!11071 = !{!11072, !11078, !11079, !11080}
!11072 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !11069, file: !11070, line: 31, baseType: !11073, size: 64)
!11073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11074, size: 64)
!11074 = !DISubroutineType(types: !11075)
!11075 = !{!235, !11076}
!11076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11077, size: 64)
!11077 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11069)
!11078 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !11069, file: !11070, line: 32, baseType: !235, size: 64, offset: 64)
!11079 = !DIDerivedType(tag: DW_TAG_member, name: "mult", scope: !11069, file: !11070, line: 33, baseType: !229, size: 32, offset: 128)
!11080 = !DIDerivedType(tag: DW_TAG_member, name: "shift", scope: !11069, file: !11070, line: 34, baseType: !229, size: 32, offset: 160)
!11081 = !DIDerivedType(tag: DW_TAG_member, name: "tc", scope: !11064, file: !14, line: 651, baseType: !11082, size: 320, offset: 512)
!11082 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timecounter", file: !11070, line: 55, size: 320, elements: !11083)
!11083 = !{!11084, !11085, !11086, !11087, !11088}
!11084 = !DIDerivedType(tag: DW_TAG_member, name: "cc", scope: !11082, file: !11070, line: 56, baseType: !11076, size: 64)
!11085 = !DIDerivedType(tag: DW_TAG_member, name: "cycle_last", scope: !11082, file: !11070, line: 57, baseType: !235, size: 64, offset: 64)
!11086 = !DIDerivedType(tag: DW_TAG_member, name: "nsec", scope: !11082, file: !11070, line: 58, baseType: !235, size: 64, offset: 128)
!11087 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !11082, file: !11070, line: 59, baseType: !235, size: 64, offset: 192)
!11088 = !DIDerivedType(tag: DW_TAG_member, name: "frac", scope: !11082, file: !11070, line: 60, baseType: !235, size: 64, offset: 256)
!11089 = !DIDerivedType(tag: DW_TAG_member, name: "hwtstamp_config", scope: !11064, file: !14, line: 652, baseType: !11090, size: 96, offset: 832)
!11090 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hwtstamp_config", file: !11091, line: 62, size: 96, elements: !11092)
!11091 = !DIFile(filename: "./include/uapi/linux/net_tstamp.h", directory: "/home/lizy2001/genbc/linux")
!11092 = !{!11093, !11094, !11095}
!11093 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !11090, file: !11091, line: 63, baseType: !6, size: 32)
!11094 = !DIDerivedType(tag: DW_TAG_member, name: "tx_type", scope: !11090, file: !11091, line: 64, baseType: !6, size: 32, offset: 32)
!11095 = !DIDerivedType(tag: DW_TAG_member, name: "rx_filter", scope: !11090, file: !11091, line: 65, baseType: !6, size: 32, offset: 64)
!11096 = !DIDerivedType(tag: DW_TAG_member, name: "nominal_c_mult", scope: !11064, file: !14, line: 653, baseType: !229, size: 32, offset: 928)
!11097 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_period", scope: !11064, file: !14, line: 654, baseType: !135, size: 64, offset: 960)
!11098 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_work", scope: !11064, file: !14, line: 655, baseType: !2562, size: 704, offset: 1024)
!11099 = !DIDerivedType(tag: DW_TAG_member, name: "ptp", scope: !11064, file: !14, line: 656, baseType: !11100, size: 64, offset: 1728)
!11100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11101, size: 64)
!11101 = !DICompositeType(tag: DW_TAG_structure_type, name: "ptp_clock", file: !11102, line: 149, flags: DIFlagFwdDecl)
!11102 = !DIFile(filename: "./include/linux/ptp_clock_kernel.h", directory: "/home/lizy2001/genbc/linux")
!11103 = !DIDerivedType(tag: DW_TAG_member, name: "ptp_info", scope: !11064, file: !14, line: 657, baseType: !11104, size: 1152, offset: 1792)
!11104 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ptp_clock_info", file: !11102, line: 122, size: 1152, elements: !11105)
!11105 = !{!11106, !11107, !11108, !11109, !11110, !11111, !11112, !11113, !11114, !11125, !11130, !11134, !11135, !11139, !11143, !11152, !11163, !11169, !11214, !11224}
!11106 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !11104, file: !11102, line: 123, baseType: !446, size: 64)
!11107 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !11104, file: !11102, line: 124, baseType: !1943, size: 128, offset: 64)
!11108 = !DIDerivedType(tag: DW_TAG_member, name: "max_adj", scope: !11104, file: !11102, line: 125, baseType: !1501, size: 32, offset: 192)
!11109 = !DIDerivedType(tag: DW_TAG_member, name: "n_alarm", scope: !11104, file: !11102, line: 126, baseType: !6, size: 32, offset: 224)
!11110 = !DIDerivedType(tag: DW_TAG_member, name: "n_ext_ts", scope: !11104, file: !11102, line: 127, baseType: !6, size: 32, offset: 256)
!11111 = !DIDerivedType(tag: DW_TAG_member, name: "n_per_out", scope: !11104, file: !11102, line: 128, baseType: !6, size: 32, offset: 288)
!11112 = !DIDerivedType(tag: DW_TAG_member, name: "n_pins", scope: !11104, file: !11102, line: 129, baseType: !6, size: 32, offset: 320)
!11113 = !DIDerivedType(tag: DW_TAG_member, name: "pps", scope: !11104, file: !11102, line: 130, baseType: !6, size: 32, offset: 352)
!11114 = !DIDerivedType(tag: DW_TAG_member, name: "pin_config", scope: !11104, file: !11102, line: 131, baseType: !11115, size: 64, offset: 384)
!11115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11116, size: 64)
!11116 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ptp_pin_desc", file: !11117, line: 174, size: 768, elements: !11118)
!11117 = !DIFile(filename: "./include/uapi/linux/ptp_clock.h", directory: "/home/lizy2001/genbc/linux")
!11118 = !{!11119, !11120, !11121, !11122, !11123}
!11119 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !11116, file: !11117, line: 180, baseType: !7622, size: 512)
!11120 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !11116, file: !11117, line: 184, baseType: !199, size: 32, offset: 512)
!11121 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !11116, file: !11117, line: 188, baseType: !199, size: 32, offset: 544)
!11122 = !DIDerivedType(tag: DW_TAG_member, name: "chan", scope: !11116, file: !11117, line: 194, baseType: !199, size: 32, offset: 576)
!11123 = !DIDerivedType(tag: DW_TAG_member, name: "rsv", scope: !11116, file: !11117, line: 198, baseType: !11124, size: 160, offset: 608)
!11124 = !DICompositeType(tag: DW_TAG_array_type, baseType: !199, size: 160, elements: !1592)
!11125 = !DIDerivedType(tag: DW_TAG_member, name: "adjfine", scope: !11104, file: !11102, line: 132, baseType: !11126, size: 64, offset: 448)
!11126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11127, size: 64)
!11127 = !DISubroutineType(types: !11128)
!11128 = !{!6, !11129, !120}
!11129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11104, size: 64)
!11130 = !DIDerivedType(tag: DW_TAG_member, name: "adjfreq", scope: !11104, file: !11102, line: 133, baseType: !11131, size: 64, offset: 512)
!11131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11132, size: 64)
!11132 = !DISubroutineType(types: !11133)
!11133 = !{!6, !11129, !1501}
!11134 = !DIDerivedType(tag: DW_TAG_member, name: "adjphase", scope: !11104, file: !11102, line: 134, baseType: !11131, size: 64, offset: 576)
!11135 = !DIDerivedType(tag: DW_TAG_member, name: "adjtime", scope: !11104, file: !11102, line: 135, baseType: !11136, size: 64, offset: 640)
!11136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11137, size: 64)
!11137 = !DISubroutineType(types: !11138)
!11138 = !{!6, !11129, !568}
!11139 = !DIDerivedType(tag: DW_TAG_member, name: "gettime64", scope: !11104, file: !11102, line: 136, baseType: !11140, size: 64, offset: 704)
!11140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11141, size: 64)
!11141 = !DISubroutineType(types: !11142)
!11142 = !{!6, !11129, !402}
!11143 = !DIDerivedType(tag: DW_TAG_member, name: "gettimex64", scope: !11104, file: !11102, line: 137, baseType: !11144, size: 64, offset: 768)
!11144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11145, size: 64)
!11145 = !DISubroutineType(types: !11146)
!11146 = !{!6, !11129, !402, !11147}
!11147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11148, size: 64)
!11148 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ptp_system_timestamp", file: !11102, line: 33, size: 256, elements: !11149)
!11149 = !{!11150, !11151}
!11150 = !DIDerivedType(tag: DW_TAG_member, name: "pre_ts", scope: !11148, file: !11102, line: 34, baseType: !349, size: 128)
!11151 = !DIDerivedType(tag: DW_TAG_member, name: "post_ts", scope: !11148, file: !11102, line: 35, baseType: !349, size: 128, offset: 128)
!11152 = !DIDerivedType(tag: DW_TAG_member, name: "getcrosststamp", scope: !11104, file: !11102, line: 139, baseType: !11153, size: 64, offset: 832)
!11153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11154, size: 64)
!11154 = !DISubroutineType(types: !11155)
!11155 = !{!6, !11129, !11156}
!11156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11157, size: 64)
!11157 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "system_device_crosststamp", file: !11158, line: 261, size: 192, elements: !11159)
!11158 = !DIFile(filename: "./include/linux/timekeeping.h", directory: "/home/lizy2001/genbc/linux")
!11159 = !{!11160, !11161, !11162}
!11160 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !11157, file: !11158, line: 262, baseType: !1347, size: 64)
!11161 = !DIDerivedType(tag: DW_TAG_member, name: "sys_realtime", scope: !11157, file: !11158, line: 263, baseType: !1347, size: 64, offset: 64)
!11162 = !DIDerivedType(tag: DW_TAG_member, name: "sys_monoraw", scope: !11157, file: !11158, line: 264, baseType: !1347, size: 64, offset: 128)
!11163 = !DIDerivedType(tag: DW_TAG_member, name: "settime64", scope: !11104, file: !11102, line: 141, baseType: !11164, size: 64, offset: 896)
!11164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11165, size: 64)
!11165 = !DISubroutineType(types: !11166)
!11166 = !{!6, !11129, !11167}
!11167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11168, size: 64)
!11168 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !349)
!11169 = !DIDerivedType(tag: DW_TAG_member, name: "enable", scope: !11104, file: !11102, line: 142, baseType: !11170, size: 64, offset: 960)
!11170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11171, size: 64)
!11171 = !DISubroutineType(types: !11172)
!11172 = !{!6, !11129, !11173, !6}
!11173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11174, size: 64)
!11174 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ptp_clock_request", file: !11102, line: 16, size: 512, elements: !11175)
!11175 = !{!11176, !11182}
!11176 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !11174, file: !11102, line: 21, baseType: !11177, size: 32)
!11177 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !11174, file: !11102, line: 17, baseType: !199, size: 32, elements: !11178)
!11178 = !{!11179, !11180, !11181}
!11179 = !DIEnumerator(name: "PTP_CLK_REQ_EXTTS", value: 0, isUnsigned: true)
!11180 = !DIEnumerator(name: "PTP_CLK_REQ_PEROUT", value: 1, isUnsigned: true)
!11181 = !DIEnumerator(name: "PTP_CLK_REQ_PPS", value: 2, isUnsigned: true)
!11182 = !DIDerivedType(tag: DW_TAG_member, scope: !11174, file: !11102, line: 22, baseType: !11183, size: 448, offset: 64)
!11183 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11174, file: !11102, line: 22, size: 448, elements: !11184)
!11184 = !{!11185, !11192}
!11185 = !DIDerivedType(tag: DW_TAG_member, name: "extts", scope: !11183, file: !11102, line: 23, baseType: !11186, size: 128)
!11186 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ptp_extts_request", file: !11117, line: 101, size: 128, elements: !11187)
!11187 = !{!11188, !11189, !11190}
!11188 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !11186, file: !11117, line: 102, baseType: !199, size: 32)
!11189 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !11186, file: !11117, line: 103, baseType: !199, size: 32, offset: 32)
!11190 = !DIDerivedType(tag: DW_TAG_member, name: "rsv", scope: !11186, file: !11117, line: 104, baseType: !11191, size: 64, offset: 64)
!11191 = !DICompositeType(tag: DW_TAG_array_type, baseType: !199, size: 64, elements: !1911)
!11192 = !DIDerivedType(tag: DW_TAG_member, name: "perout", scope: !11183, file: !11102, line: 24, baseType: !11193, size: 448)
!11193 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ptp_perout_request", file: !11117, line: 107, size: 448, elements: !11194)
!11194 = !{!11195, !11205, !11206, !11207, !11208}
!11195 = !DIDerivedType(tag: DW_TAG_member, scope: !11193, file: !11117, line: 108, baseType: !11196, size: 128)
!11196 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11193, file: !11117, line: 108, size: 128, elements: !11197)
!11197 = !{!11198, !11204}
!11198 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !11196, file: !11117, line: 113, baseType: !11199, size: 128)
!11199 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ptp_clock_time", file: !11117, line: 81, size: 128, elements: !11200)
!11200 = !{!11201, !11202, !11203}
!11201 = !DIDerivedType(tag: DW_TAG_member, name: "sec", scope: !11199, file: !11117, line: 82, baseType: !354, size: 64)
!11202 = !DIDerivedType(tag: DW_TAG_member, name: "nsec", scope: !11199, file: !11117, line: 83, baseType: !231, size: 32, offset: 64)
!11203 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !11199, file: !11117, line: 84, baseType: !231, size: 32, offset: 96)
!11204 = !DIDerivedType(tag: DW_TAG_member, name: "phase", scope: !11196, file: !11117, line: 120, baseType: !11199, size: 128)
!11205 = !DIDerivedType(tag: DW_TAG_member, name: "period", scope: !11193, file: !11117, line: 122, baseType: !11199, size: 128, offset: 128)
!11206 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !11193, file: !11117, line: 123, baseType: !199, size: 32, offset: 256)
!11207 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !11193, file: !11117, line: 124, baseType: !199, size: 32, offset: 288)
!11208 = !DIDerivedType(tag: DW_TAG_member, scope: !11193, file: !11117, line: 125, baseType: !11209, size: 128, offset: 320)
!11209 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11193, file: !11117, line: 125, size: 128, elements: !11210)
!11210 = !{!11211, !11212}
!11211 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !11209, file: !11117, line: 131, baseType: !11199, size: 128)
!11212 = !DIDerivedType(tag: DW_TAG_member, name: "rsv", scope: !11209, file: !11117, line: 133, baseType: !11213, size: 128)
!11213 = !DICompositeType(tag: DW_TAG_array_type, baseType: !199, size: 128, elements: !1212)
!11214 = !DIDerivedType(tag: DW_TAG_member, name: "verify", scope: !11104, file: !11102, line: 144, baseType: !11215, size: 64, offset: 1024)
!11215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11216, size: 64)
!11216 = !DISubroutineType(types: !11217)
!11217 = !{!6, !11129, !199, !11218, !199}
!11218 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ptp_pin_function", file: !11117, line: 167, baseType: !199, size: 32, elements: !11219)
!11219 = !{!11220, !11221, !11222, !11223}
!11220 = !DIEnumerator(name: "PTP_PF_NONE", value: 0, isUnsigned: true)
!11221 = !DIEnumerator(name: "PTP_PF_EXTTS", value: 1, isUnsigned: true)
!11222 = !DIEnumerator(name: "PTP_PF_PEROUT", value: 2, isUnsigned: true)
!11223 = !DIEnumerator(name: "PTP_PF_PHYSYNC", value: 3, isUnsigned: true)
!11224 = !DIDerivedType(tag: DW_TAG_member, name: "do_aux_work", scope: !11104, file: !11102, line: 146, baseType: !11225, size: 64, offset: 1088)
!11225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11226, size: 64)
!11226 = !DISubroutineType(types: !11227)
!11227 = !{!120, !11129}
!11228 = !DIDerivedType(tag: DW_TAG_member, name: "pps_info", scope: !11064, file: !14, line: 658, baseType: !11229, size: 896, offset: 2944)
!11229 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_pps", file: !14, line: 640, size: 896, elements: !11230)
!11230 = !{!11231, !11232, !11233, !11234}
!11231 = !DIDerivedType(tag: DW_TAG_member, name: "pin_caps", scope: !11229, file: !14, line: 641, baseType: !3128, size: 64)
!11232 = !DIDerivedType(tag: DW_TAG_member, name: "out_work", scope: !11229, file: !14, line: 642, baseType: !1728, size: 256, offset: 64)
!11233 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !11229, file: !14, line: 643, baseType: !10026, size: 512, offset: 320)
!11234 = !DIDerivedType(tag: DW_TAG_member, name: "enabled", scope: !11229, file: !14, line: 644, baseType: !1403, size: 8, offset: 832)
!11235 = !DIDerivedType(tag: DW_TAG_member, name: "clock_info", scope: !13, file: !14, line: 716, baseType: !11236, size: 64, offset: 1467264)
!11236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11237, size: 64)
!11237 = !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_ib_clock_info", file: !14, line: 716, flags: DIFlagFwdDecl)
!11238 = !DIDerivedType(tag: DW_TAG_member, name: "tracer", scope: !13, file: !14, line: 717, baseType: !11239, size: 64, offset: 1467328)
!11239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11240, size: 64)
!11240 = !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_fw_tracer", file: !14, line: 662, flags: DIFlagFwdDecl)
!11241 = !DIDerivedType(tag: DW_TAG_member, name: "rsc_dump", scope: !13, file: !14, line: 718, baseType: !11242, size: 64, offset: 1467392)
!11242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11243, size: 64)
!11243 = !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_rsc_dump", file: !14, line: 718, flags: DIFlagFwdDecl)
!11244 = !DIDerivedType(tag: DW_TAG_member, name: "vsc_addr", scope: !13, file: !14, line: 719, baseType: !229, size: 32, offset: 1467456)
!11245 = !DIDerivedType(tag: DW_TAG_member, name: "hv_vhca", scope: !13, file: !14, line: 720, baseType: !11246, size: 64, offset: 1467520)
!11246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11247, size: 64)
!11247 = !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_hv_vhca", file: !14, line: 665, flags: DIFlagFwdDecl)
!11248 = !DIDerivedType(tag: DW_TAG_member, name: "nb", scope: !8, file: !9, line: 246, baseType: !10381, size: 256, offset: 64)
!11249 = !DIDerivedType(tag: DW_TAG_member, name: "fdb_table", scope: !8, file: !9, line: 247, baseType: !11250, size: 17280, offset: 320)
!11250 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_eswitch_fdb", file: !9, line: 162, size: 17280, elements: !11251)
!11251 = !{!11252, !11290}
!11252 = !DIDerivedType(tag: DW_TAG_member, scope: !11250, file: !9, line: 163, baseType: !11253, size: 17216)
!11253 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11250, file: !9, line: 163, size: 17216, elements: !11254)
!11254 = !{!11255, !11265}
!11255 = !DIDerivedType(tag: DW_TAG_member, name: "legacy", scope: !11253, file: !9, line: 172, baseType: !11256, size: 448)
!11256 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "legacy_fdb", file: !9, line: 164, size: 448, elements: !11257)
!11257 = !{!11258, !11259, !11260, !11261, !11262, !11263, !11264}
!11258 = !DIDerivedType(tag: DW_TAG_member, name: "fdb", scope: !11256, file: !9, line: 165, baseType: !10734, size: 64)
!11259 = !DIDerivedType(tag: DW_TAG_member, name: "addr_grp", scope: !11256, file: !9, line: 166, baseType: !10831, size: 64, offset: 64)
!11260 = !DIDerivedType(tag: DW_TAG_member, name: "allmulti_grp", scope: !11256, file: !9, line: 167, baseType: !10831, size: 64, offset: 128)
!11261 = !DIDerivedType(tag: DW_TAG_member, name: "promisc_grp", scope: !11256, file: !9, line: 168, baseType: !10831, size: 64, offset: 192)
!11262 = !DIDerivedType(tag: DW_TAG_member, name: "vepa_fdb", scope: !11256, file: !9, line: 169, baseType: !10734, size: 64, offset: 256)
!11263 = !DIDerivedType(tag: DW_TAG_member, name: "vepa_uplink_rule", scope: !11256, file: !9, line: 170, baseType: !10864, size: 64, offset: 320)
!11264 = !DIDerivedType(tag: DW_TAG_member, name: "vepa_star_rule", scope: !11256, file: !9, line: 171, baseType: !10864, size: 64, offset: 384)
!11265 = !DIDerivedType(tag: DW_TAG_member, name: "offloads", scope: !11253, file: !9, line: 192, baseType: !11266, size: 17216)
!11266 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "offloads_fdb", file: !9, line: 174, size: 17216, elements: !11267)
!11267 = !{!11268, !11269, !11270, !11271, !11272, !11274, !11275, !11276, !11277, !11278, !11282}
!11268 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !11266, file: !9, line: 175, baseType: !10774, size: 64)
!11269 = !DIDerivedType(tag: DW_TAG_member, name: "slow_fdb", scope: !11266, file: !9, line: 176, baseType: !10734, size: 64, offset: 64)
!11270 = !DIDerivedType(tag: DW_TAG_member, name: "send_to_vport_grp", scope: !11266, file: !9, line: 177, baseType: !10831, size: 64, offset: 128)
!11271 = !DIDerivedType(tag: DW_TAG_member, name: "peer_miss_grp", scope: !11266, file: !9, line: 178, baseType: !10831, size: 64, offset: 192)
!11272 = !DIDerivedType(tag: DW_TAG_member, name: "peer_miss_rules", scope: !11266, file: !9, line: 179, baseType: !11273, size: 64, offset: 256)
!11273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10864, size: 64)
!11274 = !DIDerivedType(tag: DW_TAG_member, name: "miss_grp", scope: !11266, file: !9, line: 180, baseType: !10831, size: 64, offset: 320)
!11275 = !DIDerivedType(tag: DW_TAG_member, name: "miss_rule_uni", scope: !11266, file: !9, line: 181, baseType: !10864, size: 64, offset: 384)
!11276 = !DIDerivedType(tag: DW_TAG_member, name: "miss_rule_multi", scope: !11266, file: !9, line: 182, baseType: !10864, size: 64, offset: 448)
!11277 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_push_pop_refcount", scope: !11266, file: !9, line: 183, baseType: !6, size: 32, offset: 512)
!11278 = !DIDerivedType(tag: DW_TAG_member, name: "esw_chains_priv", scope: !11266, file: !9, line: 185, baseType: !11279, size: 64, offset: 576)
!11279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11280, size: 64)
!11280 = !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_fs_chains", file: !11281, line: 9, flags: DIFlagFwdDecl)
!11281 = !DIFile(filename: "drivers/net/ethernet/mellanox/mlx5/core/lib/fs_chains.h", directory: "/home/lizy2001/genbc/linux")
!11282 = !DIDerivedType(tag: DW_TAG_member, name: "vports", scope: !11266, file: !9, line: 190, baseType: !11283, size: 16576, offset: 640)
!11283 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !11266, file: !9, line: 186, size: 16576, elements: !11284)
!11284 = !{!11285, !11289}
!11285 = !DIDerivedType(tag: DW_TAG_member, name: "table", scope: !11283, file: !9, line: 187, baseType: !11286, size: 16384)
!11286 = !DICompositeType(tag: DW_TAG_array_type, baseType: !451, size: 16384, elements: !11287)
!11287 = !{!11288}
!11288 = !DISubrange(count: 256)
!11289 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !11283, file: !9, line: 189, baseType: !558, size: 192, offset: 16384)
!11290 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !11250, file: !9, line: 194, baseType: !229, size: 32, offset: 17216)
!11291 = !DIDerivedType(tag: DW_TAG_member, name: "mc_table", scope: !8, file: !9, line: 249, baseType: !11286, size: 16384, offset: 17600)
!11292 = !DIDerivedType(tag: DW_TAG_member, name: "mc_promisc", scope: !8, file: !9, line: 250, baseType: !11293, size: 320, offset: 33984)
!11293 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "esw_mc_addr", file: !9, line: 223, size: 320, elements: !11294)
!11294 = !{!11295, !11302, !11303}
!11295 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !11293, file: !9, line: 224, baseType: !11296, size: 192)
!11296 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "l2addr_node", file: !11297, line: 43, size: 192, elements: !11298)
!11297 = !DIFile(filename: "drivers/net/ethernet/mellanox/mlx5/core/lib/mpfs.h", directory: "/home/lizy2001/genbc/linux")
!11298 = !{!11299, !11300}
!11299 = !DIDerivedType(tag: DW_TAG_member, name: "hlist", scope: !11296, file: !11297, line: 44, baseType: !455, size: 128)
!11300 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !11296, file: !11297, line: 45, baseType: !11301, size: 48, offset: 128)
!11301 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1403, size: 48, elements: !1668)
!11302 = !DIDerivedType(tag: DW_TAG_member, name: "uplink_rule", scope: !11293, file: !9, line: 225, baseType: !10864, size: 64, offset: 192)
!11303 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !11293, file: !9, line: 226, baseType: !229, size: 32, offset: 256)
!11304 = !DIDerivedType(tag: DW_TAG_member, name: "work_queue", scope: !8, file: !9, line: 252, baseType: !2578, size: 64, offset: 34304)
!11305 = !DIDerivedType(tag: DW_TAG_member, name: "vports", scope: !8, file: !9, line: 253, baseType: !11306, size: 64, offset: 34368)
!11306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11307, size: 64)
!11307 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_vport", file: !9, line: 135, size: 35072, elements: !11308)
!11308 = !{!11309, !11310, !11311, !11312, !11313, !11314, !11315, !11316, !11348, !11368, !11369, !11370, !11382, !11388, !11389, !11395}
!11309 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !11307, file: !9, line: 136, baseType: !12, size: 64)
!11310 = !DIDerivedType(tag: DW_TAG_member, name: "vport", scope: !11307, file: !9, line: 137, baseType: !6, size: 32, offset: 64)
!11311 = !DIDerivedType(tag: DW_TAG_member, name: "uc_list", scope: !11307, file: !9, line: 138, baseType: !11286, size: 16384, offset: 128)
!11312 = !DIDerivedType(tag: DW_TAG_member, name: "mc_list", scope: !11307, file: !9, line: 139, baseType: !11286, size: 16384, offset: 16512)
!11313 = !DIDerivedType(tag: DW_TAG_member, name: "promisc_rule", scope: !11307, file: !9, line: 140, baseType: !10864, size: 64, offset: 32896)
!11314 = !DIDerivedType(tag: DW_TAG_member, name: "allmulti_rule", scope: !11307, file: !9, line: 141, baseType: !10864, size: 64, offset: 32960)
!11315 = !DIDerivedType(tag: DW_TAG_member, name: "vport_change_handler", scope: !11307, file: !9, line: 142, baseType: !1728, size: 256, offset: 33024)
!11316 = !DIDerivedType(tag: DW_TAG_member, name: "ingress", scope: !11307, file: !9, line: 144, baseType: !11317, size: 768, offset: 33280)
!11317 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vport_ingress", file: !9, line: 69, size: 768, elements: !11318)
!11318 = !{!11319, !11320, !11321, !11332}
!11319 = !DIDerivedType(tag: DW_TAG_member, name: "acl", scope: !11317, file: !9, line: 70, baseType: !10734, size: 64)
!11320 = !DIDerivedType(tag: DW_TAG_member, name: "allow_rule", scope: !11317, file: !9, line: 71, baseType: !10864, size: 64, offset: 64)
!11321 = !DIDerivedType(tag: DW_TAG_member, name: "legacy", scope: !11317, file: !9, line: 79, baseType: !11322, size: 384, offset: 128)
!11322 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !11317, file: !9, line: 72, size: 384, elements: !11323)
!11323 = !{!11324, !11325, !11326, !11327, !11328, !11329}
!11324 = !DIDerivedType(tag: DW_TAG_member, name: "allow_spoofchk_only_grp", scope: !11322, file: !9, line: 73, baseType: !10831, size: 64)
!11325 = !DIDerivedType(tag: DW_TAG_member, name: "allow_untagged_spoofchk_grp", scope: !11322, file: !9, line: 74, baseType: !10831, size: 64, offset: 64)
!11326 = !DIDerivedType(tag: DW_TAG_member, name: "allow_untagged_only_grp", scope: !11322, file: !9, line: 75, baseType: !10831, size: 64, offset: 128)
!11327 = !DIDerivedType(tag: DW_TAG_member, name: "drop_grp", scope: !11322, file: !9, line: 76, baseType: !10831, size: 64, offset: 192)
!11328 = !DIDerivedType(tag: DW_TAG_member, name: "drop_rule", scope: !11322, file: !9, line: 77, baseType: !10864, size: 64, offset: 256)
!11329 = !DIDerivedType(tag: DW_TAG_member, name: "drop_counter", scope: !11322, file: !9, line: 78, baseType: !11330, size: 64, offset: 320)
!11330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11331, size: 64)
!11331 = !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_fc", file: !10877, line: 239, flags: DIFlagFwdDecl)
!11332 = !DIDerivedType(tag: DW_TAG_member, name: "offloads", scope: !11317, file: !9, line: 91, baseType: !11333, size: 256, offset: 512)
!11333 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !11317, file: !9, line: 80, size: 256, elements: !11334)
!11334 = !{!11335, !11336, !11337, !11347}
!11335 = !DIDerivedType(tag: DW_TAG_member, name: "metadata_prio_tag_grp", scope: !11333, file: !9, line: 84, baseType: !10831, size: 64)
!11336 = !DIDerivedType(tag: DW_TAG_member, name: "metadata_allmatch_grp", scope: !11333, file: !9, line: 88, baseType: !10831, size: 64, offset: 64)
!11337 = !DIDerivedType(tag: DW_TAG_member, name: "modify_metadata", scope: !11333, file: !9, line: 89, baseType: !11338, size: 64, offset: 128)
!11338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11339, size: 64)
!11339 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_modify_hdr", file: !10659, line: 52, size: 128, elements: !11340)
!11340 = !{!11341, !11342}
!11341 = !DIDerivedType(tag: DW_TAG_member, name: "ns_type", scope: !11339, file: !10659, line: 53, baseType: !10905, size: 32)
!11342 = !DIDerivedType(tag: DW_TAG_member, scope: !11339, file: !10659, line: 54, baseType: !11343, size: 64, offset: 64)
!11343 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11339, file: !10659, line: 54, size: 64, elements: !11344)
!11344 = !{!11345, !11346}
!11345 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !11343, file: !10659, line: 55, baseType: !10929, size: 64)
!11346 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !11343, file: !10659, line: 56, baseType: !229, size: 32)
!11347 = !DIDerivedType(tag: DW_TAG_member, name: "modify_metadata_rule", scope: !11333, file: !9, line: 90, baseType: !10864, size: 64, offset: 192)
!11348 = !DIDerivedType(tag: DW_TAG_member, name: "egress", scope: !11307, file: !9, line: 145, baseType: !11349, size: 384, offset: 34048)
!11349 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vport_egress", file: !9, line: 94, size: 384, elements: !11350)
!11350 = !{!11351, !11352, !11353, !11354}
!11351 = !DIDerivedType(tag: DW_TAG_member, name: "acl", scope: !11349, file: !9, line: 95, baseType: !10734, size: 64)
!11352 = !DIDerivedType(tag: DW_TAG_member, name: "allowed_vlan", scope: !11349, file: !9, line: 96, baseType: !10864, size: 64, offset: 64)
!11353 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_grp", scope: !11349, file: !9, line: 97, baseType: !10831, size: 64, offset: 128)
!11354 = !DIDerivedType(tag: DW_TAG_member, scope: !11349, file: !9, line: 98, baseType: !11355, size: 192, offset: 192)
!11355 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !11349, file: !9, line: 98, size: 192, elements: !11356)
!11356 = !{!11357, !11363}
!11357 = !DIDerivedType(tag: DW_TAG_member, name: "legacy", scope: !11355, file: !9, line: 103, baseType: !11358, size: 192)
!11358 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !11355, file: !9, line: 99, size: 192, elements: !11359)
!11359 = !{!11360, !11361, !11362}
!11360 = !DIDerivedType(tag: DW_TAG_member, name: "drop_grp", scope: !11358, file: !9, line: 100, baseType: !10831, size: 64)
!11361 = !DIDerivedType(tag: DW_TAG_member, name: "drop_rule", scope: !11358, file: !9, line: 101, baseType: !10864, size: 64, offset: 64)
!11362 = !DIDerivedType(tag: DW_TAG_member, name: "drop_counter", scope: !11358, file: !9, line: 102, baseType: !11330, size: 64, offset: 128)
!11363 = !DIDerivedType(tag: DW_TAG_member, name: "offloads", scope: !11355, file: !9, line: 107, baseType: !11364, size: 128)
!11364 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !11355, file: !9, line: 104, size: 128, elements: !11365)
!11365 = !{!11366, !11367}
!11366 = !DIDerivedType(tag: DW_TAG_member, name: "fwd_grp", scope: !11364, file: !9, line: 105, baseType: !10831, size: 64)
!11367 = !DIDerivedType(tag: DW_TAG_member, name: "fwd_rule", scope: !11364, file: !9, line: 106, baseType: !10864, size: 64, offset: 64)
!11368 = !DIDerivedType(tag: DW_TAG_member, name: "default_metadata", scope: !11307, file: !9, line: 146, baseType: !229, size: 32, offset: 34432)
!11369 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !11307, file: !9, line: 147, baseType: !229, size: 32, offset: 34464)
!11370 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !11307, file: !9, line: 149, baseType: !11371, size: 320, offset: 34496)
!11371 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_vport_info", file: !9, line: 116, size: 320, elements: !11372)
!11372 = !{!11373, !11374, !11375, !11376, !11377, !11378, !11379, !11380, !11381}
!11373 = !DIDerivedType(tag: DW_TAG_member, name: "mac", scope: !11371, file: !9, line: 117, baseType: !11301, size: 48)
!11374 = !DIDerivedType(tag: DW_TAG_member, name: "vlan", scope: !11371, file: !9, line: 118, baseType: !744, size: 16, offset: 48)
!11375 = !DIDerivedType(tag: DW_TAG_member, name: "qos", scope: !11371, file: !9, line: 119, baseType: !1403, size: 8, offset: 64)
!11376 = !DIDerivedType(tag: DW_TAG_member, name: "node_guid", scope: !11371, file: !9, line: 120, baseType: !235, size: 64, offset: 128)
!11377 = !DIDerivedType(tag: DW_TAG_member, name: "link_state", scope: !11371, file: !9, line: 121, baseType: !6, size: 32, offset: 192)
!11378 = !DIDerivedType(tag: DW_TAG_member, name: "min_rate", scope: !11371, file: !9, line: 122, baseType: !229, size: 32, offset: 224)
!11379 = !DIDerivedType(tag: DW_TAG_member, name: "max_rate", scope: !11371, file: !9, line: 123, baseType: !229, size: 32, offset: 256)
!11380 = !DIDerivedType(tag: DW_TAG_member, name: "spoofchk", scope: !11371, file: !9, line: 124, baseType: !304, size: 8, offset: 288)
!11381 = !DIDerivedType(tag: DW_TAG_member, name: "trusted", scope: !11371, file: !9, line: 125, baseType: !304, size: 8, offset: 296)
!11382 = !DIDerivedType(tag: DW_TAG_member, name: "qos", scope: !11307, file: !9, line: 155, baseType: !11383, size: 96, offset: 34816)
!11383 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !11307, file: !9, line: 151, size: 96, elements: !11384)
!11384 = !{!11385, !11386, !11387}
!11385 = !DIDerivedType(tag: DW_TAG_member, name: "enabled", scope: !11383, file: !9, line: 152, baseType: !304, size: 8)
!11386 = !DIDerivedType(tag: DW_TAG_member, name: "esw_tsar_ix", scope: !11383, file: !9, line: 153, baseType: !229, size: 32, offset: 32)
!11387 = !DIDerivedType(tag: DW_TAG_member, name: "bw_share", scope: !11383, file: !9, line: 154, baseType: !229, size: 32, offset: 64)
!11388 = !DIDerivedType(tag: DW_TAG_member, name: "enabled", scope: !11307, file: !9, line: 157, baseType: !304, size: 8, offset: 34912)
!11389 = !DIDerivedType(tag: DW_TAG_member, name: "enabled_events", scope: !11307, file: !9, line: 158, baseType: !11390, size: 32, offset: 34944)
!11390 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mlx5_eswitch_vport_event", file: !9, line: 129, baseType: !199, size: 32, elements: !11391)
!11391 = !{!11392, !11393, !11394}
!11392 = !DIEnumerator(name: "MLX5_VPORT_UC_ADDR_CHANGE", value: 1, isUnsigned: true)
!11393 = !DIEnumerator(name: "MLX5_VPORT_MC_ADDR_CHANGE", value: 2, isUnsigned: true)
!11394 = !DIEnumerator(name: "MLX5_VPORT_PROMISC_CHANGE", value: 8, isUnsigned: true)
!11395 = !DIDerivedType(tag: DW_TAG_member, name: "dl_port", scope: !11307, file: !9, line: 159, baseType: !3872, size: 64, offset: 35008)
!11396 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !8, file: !9, line: 254, baseType: !229, size: 32, offset: 34432)
!11397 = !DIDerivedType(tag: DW_TAG_member, name: "total_vports", scope: !8, file: !9, line: 255, baseType: !6, size: 32, offset: 34464)
!11398 = !DIDerivedType(tag: DW_TAG_member, name: "enabled_vports", scope: !8, file: !9, line: 256, baseType: !6, size: 32, offset: 34496)
!11399 = !DIDerivedType(tag: DW_TAG_member, name: "state_lock", scope: !8, file: !9, line: 260, baseType: !558, size: 192, offset: 34560)
!11400 = !DIDerivedType(tag: DW_TAG_member, name: "mode_lock", scope: !8, file: !9, line: 265, baseType: !558, size: 192, offset: 34752)
!11401 = !DIDerivedType(tag: DW_TAG_member, name: "qos", scope: !8, file: !9, line: 270, baseType: !11402, size: 64, offset: 34944)
!11402 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8, file: !9, line: 267, size: 64, elements: !11403)
!11403 = !{!11404, !11405}
!11404 = !DIDerivedType(tag: DW_TAG_member, name: "enabled", scope: !11402, file: !9, line: 268, baseType: !304, size: 8)
!11405 = !DIDerivedType(tag: DW_TAG_member, name: "root_tsar_id", scope: !11402, file: !9, line: 269, baseType: !229, size: 32, offset: 32)
!11406 = !DIDerivedType(tag: DW_TAG_member, name: "offloads", scope: !8, file: !9, line: 272, baseType: !11407, size: 67520, offset: 35008)
!11407 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_esw_offload", file: !9, line: 197, size: 67520, elements: !11408)
!11408 = !{!11409, !11410, !11411, !11412, !11413, !11414, !11429, !11430, !11431, !11432, !11433, !11434, !11435, !11440, !11441, !11442, !11460, !11461, !11462, !11463, !11464}
!11409 = !DIDerivedType(tag: DW_TAG_member, name: "ft_offloads_restore", scope: !11407, file: !9, line: 198, baseType: !10734, size: 64)
!11410 = !DIDerivedType(tag: DW_TAG_member, name: "restore_group", scope: !11407, file: !9, line: 199, baseType: !10831, size: 64, offset: 64)
!11411 = !DIDerivedType(tag: DW_TAG_member, name: "restore_copy_hdr_id", scope: !11407, file: !9, line: 200, baseType: !11338, size: 64, offset: 128)
!11412 = !DIDerivedType(tag: DW_TAG_member, name: "ft_offloads", scope: !11407, file: !9, line: 202, baseType: !10734, size: 64, offset: 192)
!11413 = !DIDerivedType(tag: DW_TAG_member, name: "vport_rx_group", scope: !11407, file: !9, line: 203, baseType: !10831, size: 64, offset: 256)
!11414 = !DIDerivedType(tag: DW_TAG_member, name: "vport_reps", scope: !11407, file: !9, line: 204, baseType: !11415, size: 64, offset: 320)
!11415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11416, size: 64)
!11416 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_eswitch_rep", file: !11417, line: 44, size: 384, elements: !11418)
!11417 = !DIFile(filename: "./include/linux/mlx5/eswitch.h", directory: "/home/lizy2001/genbc/linux")
!11418 = !{!11419, !11425, !11426, !11427, !11428}
!11419 = !DIDerivedType(tag: DW_TAG_member, name: "rep_data", scope: !11416, file: !11417, line: 45, baseType: !11420, size: 256)
!11420 = !DICompositeType(tag: DW_TAG_array_type, baseType: !11421, size: 256, elements: !1911)
!11421 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_eswitch_rep_data", file: !11417, line: 39, size: 128, elements: !11422)
!11422 = !{!11423, !11424}
!11423 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !11421, file: !11417, line: 40, baseType: !159, size: 64)
!11424 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !11421, file: !11417, line: 41, baseType: !632, size: 32, offset: 64)
!11425 = !DIDerivedType(tag: DW_TAG_member, name: "vport", scope: !11416, file: !11417, line: 46, baseType: !744, size: 16, offset: 256)
!11426 = !DIDerivedType(tag: DW_TAG_member, name: "vlan", scope: !11416, file: !11417, line: 47, baseType: !744, size: 16, offset: 272)
!11427 = !DIDerivedType(tag: DW_TAG_member, name: "vport_index", scope: !11416, file: !11417, line: 49, baseType: !744, size: 16, offset: 288)
!11428 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_refcount", scope: !11416, file: !11417, line: 50, baseType: !229, size: 32, offset: 320)
!11429 = !DIDerivedType(tag: DW_TAG_member, name: "peer_flows", scope: !11407, file: !9, line: 205, baseType: !30, size: 128, offset: 384)
!11430 = !DIDerivedType(tag: DW_TAG_member, name: "peer_mutex", scope: !11407, file: !9, line: 206, baseType: !558, size: 192, offset: 512)
!11431 = !DIDerivedType(tag: DW_TAG_member, name: "encap_tbl_lock", scope: !11407, file: !9, line: 207, baseType: !558, size: 192, offset: 704)
!11432 = !DIDerivedType(tag: DW_TAG_member, name: "encap_tbl", scope: !11407, file: !9, line: 208, baseType: !11286, size: 16384, offset: 896)
!11433 = !DIDerivedType(tag: DW_TAG_member, name: "decap_tbl_lock", scope: !11407, file: !9, line: 209, baseType: !558, size: 192, offset: 17280)
!11434 = !DIDerivedType(tag: DW_TAG_member, name: "decap_tbl", scope: !11407, file: !9, line: 210, baseType: !11286, size: 16384, offset: 17472)
!11435 = !DIDerivedType(tag: DW_TAG_member, name: "mod_hdr", scope: !11407, file: !9, line: 211, baseType: !11436, size: 16576, offset: 33856)
!11436 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mod_hdr_tbl", file: !10877, line: 138, size: 16576, elements: !11437)
!11437 = !{!11438, !11439}
!11438 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !11436, file: !10877, line: 139, baseType: !558, size: 192)
!11439 = !DIDerivedType(tag: DW_TAG_member, name: "hlist", scope: !11436, file: !10877, line: 140, baseType: !11286, size: 16384, offset: 192)
!11440 = !DIDerivedType(tag: DW_TAG_member, name: "termtbl_tbl", scope: !11407, file: !9, line: 212, baseType: !11286, size: 16384, offset: 50432)
!11441 = !DIDerivedType(tag: DW_TAG_member, name: "termtbl_mutex", scope: !11407, file: !9, line: 213, baseType: !558, size: 192, offset: 66816)
!11442 = !DIDerivedType(tag: DW_TAG_member, name: "rep_ops", scope: !11407, file: !9, line: 214, baseType: !11443, size: 128, offset: 67008)
!11443 = !DICompositeType(tag: DW_TAG_array_type, baseType: !11444, size: 128, elements: !1911)
!11444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11445, size: 64)
!11445 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11446)
!11446 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_eswitch_rep_ops", file: !11417, line: 33, size: 192, elements: !11447)
!11447 = !{!11448, !11452, !11456}
!11448 = !DIDerivedType(tag: DW_TAG_member, name: "load", scope: !11446, file: !11417, line: 34, baseType: !11449, size: 64)
!11449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11450, size: 64)
!11450 = !DISubroutineType(types: !11451)
!11451 = !{!6, !12, !11415}
!11452 = !DIDerivedType(tag: DW_TAG_member, name: "unload", scope: !11446, file: !11417, line: 35, baseType: !11453, size: 64, offset: 64)
!11453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11454, size: 64)
!11454 = !DISubroutineType(types: !11455)
!11455 = !{null, !11415}
!11456 = !DIDerivedType(tag: DW_TAG_member, name: "get_proto_dev", scope: !11446, file: !11417, line: 36, baseType: !11457, size: 64, offset: 128)
!11457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11458, size: 64)
!11458 = !DISubroutineType(types: !11459)
!11459 = !{!159, !11415}
!11460 = !DIDerivedType(tag: DW_TAG_member, name: "inline_mode", scope: !11407, file: !9, line: 215, baseType: !1403, size: 8, offset: 67136)
!11461 = !DIDerivedType(tag: DW_TAG_member, name: "num_flows", scope: !11407, file: !9, line: 216, baseType: !564, size: 64, offset: 67200)
!11462 = !DIDerivedType(tag: DW_TAG_member, name: "encap", scope: !11407, file: !9, line: 217, baseType: !4043, size: 32, offset: 67264)
!11463 = !DIDerivedType(tag: DW_TAG_member, name: "vport_metadata_ida", scope: !11407, file: !9, line: 218, baseType: !10852, size: 128, offset: 67328)
!11464 = !DIDerivedType(tag: DW_TAG_member, name: "host_number", scope: !11407, file: !9, line: 219, baseType: !199, size: 32, offset: 67456)
!11465 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !8, file: !9, line: 273, baseType: !6, size: 32, offset: 102528)
!11466 = !DIDerivedType(tag: DW_TAG_member, name: "manager_vport", scope: !8, file: !9, line: 274, baseType: !744, size: 16, offset: 102560)
!11467 = !DIDerivedType(tag: DW_TAG_member, name: "first_host_vport", scope: !8, file: !9, line: 275, baseType: !744, size: 16, offset: 102576)
!11468 = !DIDerivedType(tag: DW_TAG_member, name: "esw_funcs", scope: !8, file: !9, line: 276, baseType: !11469, size: 320, offset: 102592)
!11469 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_esw_functions", file: !9, line: 234, size: 320, elements: !11470)
!11470 = !{!11471, !11472}
!11471 = !DIDerivedType(tag: DW_TAG_member, name: "nb", scope: !11469, file: !9, line: 235, baseType: !10381, size: 256)
!11472 = !DIDerivedType(tag: DW_TAG_member, name: "num_vfs", scope: !11469, file: !9, line: 236, baseType: !744, size: 16, offset: 256)
!11473 = !DIDerivedType(tag: DW_TAG_member, name: "params", scope: !8, file: !9, line: 279, baseType: !11474, size: 32, offset: 102912)
!11474 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8, file: !9, line: 277, size: 32, elements: !11475)
!11475 = !{!11476}
!11476 = !DIDerivedType(tag: DW_TAG_member, name: "large_group_num", scope: !11474, file: !9, line: 278, baseType: !229, size: 32)
!11477 = distinct !DICompileUnit(language: DW_LANG_C89, file: !3, producer: "clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !11478, retainedTypes: !12230, globals: !12275, splitDebugInlining: false, nameTableKind: None)
!11478 = !{!501, !918, !1122, !1354, !1478, !2276, !2828, !3017, !3049, !3084, !3154, !3240, !3639, !3911, !3934, !3941, !3955, !3977, !3983, !4043, !4076, !4082, !4185, !4331, !4347, !4356, !4363, !4371, !4376, !4491, !5505, !5961, !5971, !6560, !7602, !7795, !7888, !8030, !8089, !8667, !8760, !9423, !9442, !9487, !9725, !9805, !9881, !10094, !10371, !10387, !10594, !10663, !10682, !10704, !10720, !10753, !10809, !10880, !10905, !11177, !11218, !11390, !11479, !11486, !11508, !11519, !11528, !11533, !11537, !11542, !11547, !11550, !11572, !11579, !11603, !11618, !11624, !11648, !11653, !11660, !11664, !11692, !11698, !11703, !11711, !11718, !11723, !11727, !11733, !11737, !11741, !11750, !11755, !11760, !11765, !11769, !11775, !11792, !11796, !11799, !11803, !11808, !11823, !11827, !11832, !11856, !11860, !11864, !11870, !11877, !11882, !11886, !11889, !11894, !11899, !11930, !11934, !11939, !11943, !11949, !11956, !11961, !11971, !11978, !12169, !12174, !12213, !12218, !12224}
!11479 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !11480, line: 59, baseType: !199, size: 32, elements: !11481)
!11480 = !DIFile(filename: "./include/linux/mlx5/vport.h", directory: "/home/lizy2001/genbc/linux")
!11481 = !{!11482, !11483, !11484, !11485}
!11482 = !DIEnumerator(name: "MLX5_VPORT_PF", value: 0, isUnsigned: true)
!11483 = !DIEnumerator(name: "MLX5_VPORT_FIRST_VF", value: 1, isUnsigned: true)
!11484 = !DIEnumerator(name: "MLX5_VPORT_ECPF", value: 65534, isUnsigned: true)
!11485 = !DIEnumerator(name: "MLX5_VPORT_UPLINK", value: 65535, isUnsigned: true)
!11486 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rdma_driver_id", file: !11487, line: 232, baseType: !199, size: 32, elements: !11488)
!11487 = !DIFile(filename: "./include/uapi/rdma/ib_user_ioctl_verbs.h", directory: "/home/lizy2001/genbc/linux")
!11488 = !{!11489, !11490, !11491, !11492, !11493, !11494, !11495, !11496, !11497, !11498, !11499, !11500, !11501, !11502, !11503, !11504, !11505, !11506, !11507}
!11489 = !DIEnumerator(name: "RDMA_DRIVER_UNKNOWN", value: 0, isUnsigned: true)
!11490 = !DIEnumerator(name: "RDMA_DRIVER_MLX5", value: 1, isUnsigned: true)
!11491 = !DIEnumerator(name: "RDMA_DRIVER_MLX4", value: 2, isUnsigned: true)
!11492 = !DIEnumerator(name: "RDMA_DRIVER_CXGB3", value: 3, isUnsigned: true)
!11493 = !DIEnumerator(name: "RDMA_DRIVER_CXGB4", value: 4, isUnsigned: true)
!11494 = !DIEnumerator(name: "RDMA_DRIVER_MTHCA", value: 5, isUnsigned: true)
!11495 = !DIEnumerator(name: "RDMA_DRIVER_BNXT_RE", value: 6, isUnsigned: true)
!11496 = !DIEnumerator(name: "RDMA_DRIVER_OCRDMA", value: 7, isUnsigned: true)
!11497 = !DIEnumerator(name: "RDMA_DRIVER_NES", value: 8, isUnsigned: true)
!11498 = !DIEnumerator(name: "RDMA_DRIVER_I40IW", value: 9, isUnsigned: true)
!11499 = !DIEnumerator(name: "RDMA_DRIVER_VMW_PVRDMA", value: 10, isUnsigned: true)
!11500 = !DIEnumerator(name: "RDMA_DRIVER_QEDR", value: 11, isUnsigned: true)
!11501 = !DIEnumerator(name: "RDMA_DRIVER_HNS", value: 12, isUnsigned: true)
!11502 = !DIEnumerator(name: "RDMA_DRIVER_USNIC", value: 13, isUnsigned: true)
!11503 = !DIEnumerator(name: "RDMA_DRIVER_RXE", value: 14, isUnsigned: true)
!11504 = !DIEnumerator(name: "RDMA_DRIVER_HFI1", value: 15, isUnsigned: true)
!11505 = !DIEnumerator(name: "RDMA_DRIVER_QIB", value: 16, isUnsigned: true)
!11506 = !DIEnumerator(name: "RDMA_DRIVER_EFA", value: 17, isUnsigned: true)
!11507 = !DIEnumerator(name: "RDMA_DRIVER_SIW", value: 18, isUnsigned: true)
!11508 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rdma_restrack_type", file: !11509, line: 23, baseType: !199, size: 32, elements: !11510)
!11509 = !DIFile(filename: "./include/rdma/restrack.h", directory: "/home/lizy2001/genbc/linux")
!11510 = !{!11511, !11512, !11513, !11514, !11515, !11516, !11517, !11518}
!11511 = !DIEnumerator(name: "RDMA_RESTRACK_PD", value: 0, isUnsigned: true)
!11512 = !DIEnumerator(name: "RDMA_RESTRACK_CQ", value: 1, isUnsigned: true)
!11513 = !DIEnumerator(name: "RDMA_RESTRACK_QP", value: 2, isUnsigned: true)
!11514 = !DIEnumerator(name: "RDMA_RESTRACK_CM_ID", value: 3, isUnsigned: true)
!11515 = !DIEnumerator(name: "RDMA_RESTRACK_MR", value: 4, isUnsigned: true)
!11516 = !DIEnumerator(name: "RDMA_RESTRACK_CTX", value: 5, isUnsigned: true)
!11517 = !DIEnumerator(name: "RDMA_RESTRACK_COUNTER", value: 6, isUnsigned: true)
!11518 = !DIEnumerator(name: "RDMA_RESTRACK_MAX", value: 7, isUnsigned: true)
!11519 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ib_mr_type", file: !11520, line: 856, baseType: !199, size: 32, elements: !11521)
!11520 = !DIFile(filename: "./include/rdma/ib_verbs.h", directory: "/home/lizy2001/genbc/linux")
!11521 = !{!11522, !11523, !11524, !11525, !11526, !11527}
!11522 = !DIEnumerator(name: "IB_MR_TYPE_MEM_REG", value: 0, isUnsigned: true)
!11523 = !DIEnumerator(name: "IB_MR_TYPE_SG_GAPS", value: 1, isUnsigned: true)
!11524 = !DIEnumerator(name: "IB_MR_TYPE_DM", value: 2, isUnsigned: true)
!11525 = !DIEnumerator(name: "IB_MR_TYPE_USER", value: 3, isUnsigned: true)
!11526 = !DIEnumerator(name: "IB_MR_TYPE_DMA", value: 4, isUnsigned: true)
!11527 = !DIEnumerator(name: "IB_MR_TYPE_INTEGRITY", value: 5, isUnsigned: true)
!11528 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ib_signature_type", file: !11529, line: 27, baseType: !199, size: 32, elements: !11530)
!11529 = !DIFile(filename: "./include/rdma/signature.h", directory: "/home/lizy2001/genbc/linux")
!11530 = !{!11531, !11532}
!11531 = !DIEnumerator(name: "IB_SIG_TYPE_NONE", value: 0, isUnsigned: true)
!11532 = !DIEnumerator(name: "IB_SIG_TYPE_T10_DIF", value: 1, isUnsigned: true)
!11533 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ib_t10_dif_bg_type", file: !11529, line: 37, baseType: !199, size: 32, elements: !11534)
!11534 = !{!11535, !11536}
!11535 = !DIEnumerator(name: "IB_T10DIF_CRC", value: 0, isUnsigned: true)
!11536 = !DIEnumerator(name: "IB_T10DIF_CSUM", value: 1, isUnsigned: true)
!11537 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ib_srq_type", file: !11520, line: 1021, baseType: !199, size: 32, elements: !11538)
!11538 = !{!11539, !11540, !11541}
!11539 = !DIEnumerator(name: "IB_SRQT_BASIC", value: 0, isUnsigned: true)
!11540 = !DIEnumerator(name: "IB_SRQT_XRC", value: 1, isUnsigned: true)
!11541 = !DIEnumerator(name: "IB_SRQT_TM", value: 2, isUnsigned: true)
!11542 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ib_wq_state", file: !11520, line: 1632, baseType: !199, size: 32, elements: !11543)
!11543 = !{!11544, !11545, !11546}
!11544 = !DIEnumerator(name: "IB_WQS_RESET", value: 0, isUnsigned: true)
!11545 = !DIEnumerator(name: "IB_WQS_RDY", value: 1, isUnsigned: true)
!11546 = !DIEnumerator(name: "IB_WQS_ERR", value: 2, isUnsigned: true)
!11547 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ib_wq_type", file: !11520, line: 1628, baseType: !199, size: 32, elements: !11548)
!11548 = !{!11549}
!11549 = !DIEnumerator(name: "IB_WQT_RQ", value: 0, isUnsigned: true)
!11550 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ib_event_type", file: !11520, line: 706, baseType: !199, size: 32, elements: !11551)
!11551 = !{!11552, !11553, !11554, !11555, !11556, !11557, !11558, !11559, !11560, !11561, !11562, !11563, !11564, !11565, !11566, !11567, !11568, !11569, !11570, !11571}
!11552 = !DIEnumerator(name: "IB_EVENT_CQ_ERR", value: 0, isUnsigned: true)
!11553 = !DIEnumerator(name: "IB_EVENT_QP_FATAL", value: 1, isUnsigned: true)
!11554 = !DIEnumerator(name: "IB_EVENT_QP_REQ_ERR", value: 2, isUnsigned: true)
!11555 = !DIEnumerator(name: "IB_EVENT_QP_ACCESS_ERR", value: 3, isUnsigned: true)
!11556 = !DIEnumerator(name: "IB_EVENT_COMM_EST", value: 4, isUnsigned: true)
!11557 = !DIEnumerator(name: "IB_EVENT_SQ_DRAINED", value: 5, isUnsigned: true)
!11558 = !DIEnumerator(name: "IB_EVENT_PATH_MIG", value: 6, isUnsigned: true)
!11559 = !DIEnumerator(name: "IB_EVENT_PATH_MIG_ERR", value: 7, isUnsigned: true)
!11560 = !DIEnumerator(name: "IB_EVENT_DEVICE_FATAL", value: 8, isUnsigned: true)
!11561 = !DIEnumerator(name: "IB_EVENT_PORT_ACTIVE", value: 9, isUnsigned: true)
!11562 = !DIEnumerator(name: "IB_EVENT_PORT_ERR", value: 10, isUnsigned: true)
!11563 = !DIEnumerator(name: "IB_EVENT_LID_CHANGE", value: 11, isUnsigned: true)
!11564 = !DIEnumerator(name: "IB_EVENT_PKEY_CHANGE", value: 12, isUnsigned: true)
!11565 = !DIEnumerator(name: "IB_EVENT_SM_CHANGE", value: 13, isUnsigned: true)
!11566 = !DIEnumerator(name: "IB_EVENT_SRQ_ERR", value: 14, isUnsigned: true)
!11567 = !DIEnumerator(name: "IB_EVENT_SRQ_LIMIT_REACHED", value: 15, isUnsigned: true)
!11568 = !DIEnumerator(name: "IB_EVENT_QP_LAST_WQE_REACHED", value: 16, isUnsigned: true)
!11569 = !DIEnumerator(name: "IB_EVENT_CLIENT_REREGISTER", value: 17, isUnsigned: true)
!11570 = !DIEnumerator(name: "IB_EVENT_GID_CHANGE", value: 18, isUnsigned: true)
!11571 = !DIEnumerator(name: "IB_EVENT_WQ_FATAL", value: 19, isUnsigned: true)
!11572 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ib_poll_context", file: !11520, line: 1552, baseType: !199, size: 32, elements: !11573)
!11573 = !{!11574, !11575, !11576, !11577, !11578}
!11574 = !DIEnumerator(name: "IB_POLL_SOFTIRQ", value: 0, isUnsigned: true)
!11575 = !DIEnumerator(name: "IB_POLL_WORKQUEUE", value: 1, isUnsigned: true)
!11576 = !DIEnumerator(name: "IB_POLL_UNBOUND_WORKQUEUE", value: 2, isUnsigned: true)
!11577 = !DIEnumerator(name: "IB_POLL_LAST_POOL_TYPE", value: 2, isUnsigned: true)
!11578 = !DIEnumerator(name: "IB_POLL_DIRECT", value: 3, isUnsigned: true)
!11579 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ib_wc_status", file: !11520, line: 931, baseType: !199, size: 32, elements: !11580)
!11580 = !{!11581, !11582, !11583, !11584, !11585, !11586, !11587, !11588, !11589, !11590, !11591, !11592, !11593, !11594, !11595, !11596, !11597, !11598, !11599, !11600, !11601, !11602}
!11581 = !DIEnumerator(name: "IB_WC_SUCCESS", value: 0, isUnsigned: true)
!11582 = !DIEnumerator(name: "IB_WC_LOC_LEN_ERR", value: 1, isUnsigned: true)
!11583 = !DIEnumerator(name: "IB_WC_LOC_QP_OP_ERR", value: 2, isUnsigned: true)
!11584 = !DIEnumerator(name: "IB_WC_LOC_EEC_OP_ERR", value: 3, isUnsigned: true)
!11585 = !DIEnumerator(name: "IB_WC_LOC_PROT_ERR", value: 4, isUnsigned: true)
!11586 = !DIEnumerator(name: "IB_WC_WR_FLUSH_ERR", value: 5, isUnsigned: true)
!11587 = !DIEnumerator(name: "IB_WC_MW_BIND_ERR", value: 6, isUnsigned: true)
!11588 = !DIEnumerator(name: "IB_WC_BAD_RESP_ERR", value: 7, isUnsigned: true)
!11589 = !DIEnumerator(name: "IB_WC_LOC_ACCESS_ERR", value: 8, isUnsigned: true)
!11590 = !DIEnumerator(name: "IB_WC_REM_INV_REQ_ERR", value: 9, isUnsigned: true)
!11591 = !DIEnumerator(name: "IB_WC_REM_ACCESS_ERR", value: 10, isUnsigned: true)
!11592 = !DIEnumerator(name: "IB_WC_REM_OP_ERR", value: 11, isUnsigned: true)
!11593 = !DIEnumerator(name: "IB_WC_RETRY_EXC_ERR", value: 12, isUnsigned: true)
!11594 = !DIEnumerator(name: "IB_WC_RNR_RETRY_EXC_ERR", value: 13, isUnsigned: true)
!11595 = !DIEnumerator(name: "IB_WC_LOC_RDD_VIOL_ERR", value: 14, isUnsigned: true)
!11596 = !DIEnumerator(name: "IB_WC_REM_INV_RD_REQ_ERR", value: 15, isUnsigned: true)
!11597 = !DIEnumerator(name: "IB_WC_REM_ABORT_ERR", value: 16, isUnsigned: true)
!11598 = !DIEnumerator(name: "IB_WC_INV_EECN_ERR", value: 17, isUnsigned: true)
!11599 = !DIEnumerator(name: "IB_WC_INV_EEC_STATE_ERR", value: 18, isUnsigned: true)
!11600 = !DIEnumerator(name: "IB_WC_FATAL_ERR", value: 19, isUnsigned: true)
!11601 = !DIEnumerator(name: "IB_WC_RESP_TIMEOUT_ERR", value: 20, isUnsigned: true)
!11602 = !DIEnumerator(name: "IB_WC_GENERAL_ERR", value: 21, isUnsigned: true)
!11603 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ib_wc_opcode", file: !11520, line: 958, baseType: !199, size: 32, elements: !11604)
!11604 = !{!11605, !11606, !11607, !11608, !11609, !11610, !11611, !11612, !11613, !11614, !11615, !11616, !11617}
!11605 = !DIEnumerator(name: "IB_WC_SEND", value: 0, isUnsigned: true)
!11606 = !DIEnumerator(name: "IB_WC_RDMA_WRITE", value: 1, isUnsigned: true)
!11607 = !DIEnumerator(name: "IB_WC_RDMA_READ", value: 2, isUnsigned: true)
!11608 = !DIEnumerator(name: "IB_WC_COMP_SWAP", value: 3, isUnsigned: true)
!11609 = !DIEnumerator(name: "IB_WC_FETCH_ADD", value: 4, isUnsigned: true)
!11610 = !DIEnumerator(name: "IB_WC_BIND_MW", value: 5, isUnsigned: true)
!11611 = !DIEnumerator(name: "IB_WC_LOCAL_INV", value: 6, isUnsigned: true)
!11612 = !DIEnumerator(name: "IB_WC_LSO", value: 7, isUnsigned: true)
!11613 = !DIEnumerator(name: "IB_WC_REG_MR", value: 8, isUnsigned: true)
!11614 = !DIEnumerator(name: "IB_WC_MASKED_COMP_SWAP", value: 9, isUnsigned: true)
!11615 = !DIEnumerator(name: "IB_WC_MASKED_FETCH_ADD", value: 10, isUnsigned: true)
!11616 = !DIEnumerator(name: "IB_WC_RECV", value: 128, isUnsigned: true)
!11617 = !DIEnumerator(name: "IB_WC_RECV_RDMA_WITH_IMM", value: 129, isUnsigned: true)
!11618 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ib_gid_type", file: !11520, line: 140, baseType: !199, size: 32, elements: !11619)
!11619 = !{!11620, !11621, !11622, !11623}
!11620 = !DIEnumerator(name: "IB_GID_TYPE_IB", value: 0, isUnsigned: true)
!11621 = !DIEnumerator(name: "IB_GID_TYPE_ROCE", value: 1, isUnsigned: true)
!11622 = !DIEnumerator(name: "IB_GID_TYPE_ROCE_UDP_ENCAP", value: 2, isUnsigned: true)
!11623 = !DIEnumerator(name: "IB_GID_TYPE_SIZE", value: 3, isUnsigned: true)
!11624 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ib_qp_type", file: !11520, line: 1084, baseType: !199, size: 32, elements: !11625)
!11625 = !{!11626, !11627, !11628, !11629, !11630, !11631, !11632, !11633, !11634, !11635, !11636, !11637, !11638, !11639, !11640, !11641, !11642, !11643, !11644, !11645, !11646, !11647}
!11626 = !DIEnumerator(name: "IB_QPT_SMI", value: 0, isUnsigned: true)
!11627 = !DIEnumerator(name: "IB_QPT_GSI", value: 1, isUnsigned: true)
!11628 = !DIEnumerator(name: "IB_QPT_RC", value: 2, isUnsigned: true)
!11629 = !DIEnumerator(name: "IB_QPT_UC", value: 3, isUnsigned: true)
!11630 = !DIEnumerator(name: "IB_QPT_UD", value: 4, isUnsigned: true)
!11631 = !DIEnumerator(name: "IB_QPT_RAW_IPV6", value: 5, isUnsigned: true)
!11632 = !DIEnumerator(name: "IB_QPT_RAW_ETHERTYPE", value: 6, isUnsigned: true)
!11633 = !DIEnumerator(name: "IB_QPT_RAW_PACKET", value: 8, isUnsigned: true)
!11634 = !DIEnumerator(name: "IB_QPT_XRC_INI", value: 9, isUnsigned: true)
!11635 = !DIEnumerator(name: "IB_QPT_XRC_TGT", value: 10, isUnsigned: true)
!11636 = !DIEnumerator(name: "IB_QPT_MAX", value: 11, isUnsigned: true)
!11637 = !DIEnumerator(name: "IB_QPT_DRIVER", value: 255, isUnsigned: true)
!11638 = !DIEnumerator(name: "IB_QPT_RESERVED1", value: 4096, isUnsigned: true)
!11639 = !DIEnumerator(name: "IB_QPT_RESERVED2", value: 4097, isUnsigned: true)
!11640 = !DIEnumerator(name: "IB_QPT_RESERVED3", value: 4098, isUnsigned: true)
!11641 = !DIEnumerator(name: "IB_QPT_RESERVED4", value: 4099, isUnsigned: true)
!11642 = !DIEnumerator(name: "IB_QPT_RESERVED5", value: 4100, isUnsigned: true)
!11643 = !DIEnumerator(name: "IB_QPT_RESERVED6", value: 4101, isUnsigned: true)
!11644 = !DIEnumerator(name: "IB_QPT_RESERVED7", value: 4102, isUnsigned: true)
!11645 = !DIEnumerator(name: "IB_QPT_RESERVED8", value: 4103, isUnsigned: true)
!11646 = !DIEnumerator(name: "IB_QPT_RESERVED9", value: 4104, isUnsigned: true)
!11647 = !DIEnumerator(name: "IB_QPT_RESERVED10", value: 4105, isUnsigned: true)
!11648 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "port_pkey_state", file: !11520, line: 1697, baseType: !199, size: 32, elements: !11649)
!11649 = !{!11650, !11651, !11652}
!11650 = !DIEnumerator(name: "IB_PORT_PKEY_NOT_VALID", value: 0, isUnsigned: true)
!11651 = !DIEnumerator(name: "IB_PORT_PKEY_VALID", value: 1, isUnsigned: true)
!11652 = !DIEnumerator(name: "IB_PORT_PKEY_LISTED", value: 2, isUnsigned: true)
!11653 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rdma_nl_counter_mode", file: !11654, line: 545, baseType: !199, size: 32, elements: !11655)
!11654 = !DIFile(filename: "./include/uapi/rdma/rdma_netlink.h", directory: "/home/lizy2001/genbc/linux")
!11655 = !{!11656, !11657, !11658, !11659}
!11656 = !DIEnumerator(name: "RDMA_COUNTER_MODE_NONE", value: 0, isUnsigned: true)
!11657 = !DIEnumerator(name: "RDMA_COUNTER_MODE_AUTO", value: 1, isUnsigned: true)
!11658 = !DIEnumerator(name: "RDMA_COUNTER_MODE_MANUAL", value: 2, isUnsigned: true)
!11659 = !DIEnumerator(name: "RDMA_COUNTER_MODE_MAX", value: 3, isUnsigned: true)
!11660 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rdma_nl_counter_mask", file: !11654, line: 570, baseType: !199, size: 32, elements: !11661)
!11661 = !{!11662, !11663}
!11662 = !DIEnumerator(name: "RDMA_COUNTER_MASK_QP_TYPE", value: 1, isUnsigned: true)
!11663 = !DIEnumerator(name: "RDMA_COUNTER_MASK_PID", value: 2, isUnsigned: true)
!11664 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ib_wr_opcode", file: !11520, line: 1290, baseType: !199, size: 32, elements: !11665)
!11665 = !{!11666, !11667, !11668, !11669, !11670, !11671, !11672, !11673, !11674, !11675, !11676, !11677, !11678, !11679, !11680, !11681, !11682, !11683, !11684, !11685, !11686, !11687, !11688, !11689, !11690, !11691}
!11666 = !DIEnumerator(name: "IB_WR_RDMA_WRITE", value: 0, isUnsigned: true)
!11667 = !DIEnumerator(name: "IB_WR_RDMA_WRITE_WITH_IMM", value: 1, isUnsigned: true)
!11668 = !DIEnumerator(name: "IB_WR_SEND", value: 2, isUnsigned: true)
!11669 = !DIEnumerator(name: "IB_WR_SEND_WITH_IMM", value: 3, isUnsigned: true)
!11670 = !DIEnumerator(name: "IB_WR_RDMA_READ", value: 4, isUnsigned: true)
!11671 = !DIEnumerator(name: "IB_WR_ATOMIC_CMP_AND_SWP", value: 5, isUnsigned: true)
!11672 = !DIEnumerator(name: "IB_WR_ATOMIC_FETCH_AND_ADD", value: 6, isUnsigned: true)
!11673 = !DIEnumerator(name: "IB_WR_BIND_MW", value: 8, isUnsigned: true)
!11674 = !DIEnumerator(name: "IB_WR_LSO", value: 10, isUnsigned: true)
!11675 = !DIEnumerator(name: "IB_WR_SEND_WITH_INV", value: 9, isUnsigned: true)
!11676 = !DIEnumerator(name: "IB_WR_RDMA_READ_WITH_INV", value: 11, isUnsigned: true)
!11677 = !DIEnumerator(name: "IB_WR_LOCAL_INV", value: 7, isUnsigned: true)
!11678 = !DIEnumerator(name: "IB_WR_MASKED_ATOMIC_CMP_AND_SWP", value: 12, isUnsigned: true)
!11679 = !DIEnumerator(name: "IB_WR_MASKED_ATOMIC_FETCH_AND_ADD", value: 13, isUnsigned: true)
!11680 = !DIEnumerator(name: "IB_WR_REG_MR", value: 32, isUnsigned: true)
!11681 = !DIEnumerator(name: "IB_WR_REG_MR_INTEGRITY", value: 33, isUnsigned: true)
!11682 = !DIEnumerator(name: "IB_WR_RESERVED1", value: 240, isUnsigned: true)
!11683 = !DIEnumerator(name: "IB_WR_RESERVED2", value: 241, isUnsigned: true)
!11684 = !DIEnumerator(name: "IB_WR_RESERVED3", value: 242, isUnsigned: true)
!11685 = !DIEnumerator(name: "IB_WR_RESERVED4", value: 243, isUnsigned: true)
!11686 = !DIEnumerator(name: "IB_WR_RESERVED5", value: 244, isUnsigned: true)
!11687 = !DIEnumerator(name: "IB_WR_RESERVED6", value: 245, isUnsigned: true)
!11688 = !DIEnumerator(name: "IB_WR_RESERVED7", value: 246, isUnsigned: true)
!11689 = !DIEnumerator(name: "IB_WR_RESERVED8", value: 247, isUnsigned: true)
!11690 = !DIEnumerator(name: "IB_WR_RESERVED9", value: 248, isUnsigned: true)
!11691 = !DIEnumerator(name: "IB_WR_RESERVED10", value: 249, isUnsigned: true)
!11692 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ib_cq_notify_flags", file: !11520, line: 1014, baseType: !199, size: 32, elements: !11693)
!11693 = !{!11694, !11695, !11696, !11697}
!11694 = !DIEnumerator(name: "IB_CQ_SOLICITED", value: 1, isUnsigned: true)
!11695 = !DIEnumerator(name: "IB_CQ_NEXT_COMP", value: 2, isUnsigned: true)
!11696 = !DIEnumerator(name: "IB_CQ_SOLICITED_MASK", value: 3, isUnsigned: true)
!11697 = !DIEnumerator(name: "IB_CQ_REPORT_MISSED_EVENTS", value: 4, isUnsigned: true)
!11698 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ib_atomic_cap", file: !11520, line: 293, baseType: !199, size: 32, elements: !11699)
!11699 = !{!11700, !11701, !11702}
!11700 = !DIEnumerator(name: "IB_ATOMIC_NONE", value: 0, isUnsigned: true)
!11701 = !DIEnumerator(name: "IB_ATOMIC_HCA", value: 1, isUnsigned: true)
!11702 = !DIEnumerator(name: "IB_ATOMIC_GLOB", value: 2, isUnsigned: true)
!11703 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ib_port_state", file: !11520, line: 495, baseType: !199, size: 32, elements: !11704)
!11704 = !{!11705, !11706, !11707, !11708, !11709, !11710}
!11705 = !DIEnumerator(name: "IB_PORT_NOP", value: 0, isUnsigned: true)
!11706 = !DIEnumerator(name: "IB_PORT_DOWN", value: 1, isUnsigned: true)
!11707 = !DIEnumerator(name: "IB_PORT_INIT", value: 2, isUnsigned: true)
!11708 = !DIEnumerator(name: "IB_PORT_ARMED", value: 3, isUnsigned: true)
!11709 = !DIEnumerator(name: "IB_PORT_ACTIVE", value: 4, isUnsigned: true)
!11710 = !DIEnumerator(name: "IB_PORT_ACTIVE_DEFER", value: 5, isUnsigned: true)
!11711 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ib_mtu", file: !11520, line: 434, baseType: !199, size: 32, elements: !11712)
!11712 = !{!11713, !11714, !11715, !11716, !11717}
!11713 = !DIEnumerator(name: "IB_MTU_256", value: 1, isUnsigned: true)
!11714 = !DIEnumerator(name: "IB_MTU_512", value: 2, isUnsigned: true)
!11715 = !DIEnumerator(name: "IB_MTU_1024", value: 3, isUnsigned: true)
!11716 = !DIEnumerator(name: "IB_MTU_2048", value: 4, isUnsigned: true)
!11717 = !DIEnumerator(name: "IB_MTU_4096", value: 5, isUnsigned: true)
!11718 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rdma_link_layer", file: !11520, line: 213, baseType: !199, size: 32, elements: !11719)
!11719 = !{!11720, !11721, !11722}
!11720 = !DIEnumerator(name: "IB_LINK_LAYER_UNSPECIFIED", value: 0, isUnsigned: true)
!11721 = !DIEnumerator(name: "IB_LINK_LAYER_INFINIBAND", value: 1, isUnsigned: true)
!11722 = !DIEnumerator(name: "IB_LINK_LAYER_ETHERNET", value: 2, isUnsigned: true)
!11723 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rdma_netdev_t", file: !11520, line: 2182, baseType: !199, size: 32, elements: !11724)
!11724 = !{!11725, !11726}
!11725 = !DIEnumerator(name: "RDMA_NETDEV_OPA_VNIC", value: 0, isUnsigned: true)
!11726 = !DIEnumerator(name: "RDMA_NETDEV_IPOIB", value: 1, isUnsigned: true)
!11727 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rdma_ah_attr_type", file: !11520, line: 895, baseType: !199, size: 32, elements: !11728)
!11728 = !{!11729, !11730, !11731, !11732}
!11729 = !DIEnumerator(name: "RDMA_AH_ATTR_TYPE_UNDEFINED", value: 0, isUnsigned: true)
!11730 = !DIEnumerator(name: "RDMA_AH_ATTR_TYPE_IB", value: 1, isUnsigned: true)
!11731 = !DIEnumerator(name: "RDMA_AH_ATTR_TYPE_ROCE", value: 2, isUnsigned: true)
!11732 = !DIEnumerator(name: "RDMA_AH_ATTR_TYPE_OPA", value: 3, isUnsigned: true)
!11733 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ib_srq_attr_mask", file: !11520, line: 1033, baseType: !199, size: 32, elements: !11734)
!11734 = !{!11735, !11736}
!11735 = !DIEnumerator(name: "IB_SRQ_MAX_WR", value: 1, isUnsigned: true)
!11736 = !DIEnumerator(name: "IB_SRQ_LIMIT", value: 2, isUnsigned: true)
!11737 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ib_sig_type", file: !11520, line: 1079, baseType: !199, size: 32, elements: !11738)
!11738 = !{!11739, !11740}
!11739 = !DIEnumerator(name: "IB_SIGNAL_ALL_WR", value: 0, isUnsigned: true)
!11740 = !DIEnumerator(name: "IB_SIGNAL_REQ_WR", value: 1, isUnsigned: true)
!11741 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ib_qp_state", file: !11520, line: 1239, baseType: !199, size: 32, elements: !11742)
!11742 = !{!11743, !11744, !11745, !11746, !11747, !11748, !11749}
!11743 = !DIEnumerator(name: "IB_QPS_RESET", value: 0, isUnsigned: true)
!11744 = !DIEnumerator(name: "IB_QPS_INIT", value: 1, isUnsigned: true)
!11745 = !DIEnumerator(name: "IB_QPS_RTR", value: 2, isUnsigned: true)
!11746 = !DIEnumerator(name: "IB_QPS_RTS", value: 3, isUnsigned: true)
!11747 = !DIEnumerator(name: "IB_QPS_SQD", value: 4, isUnsigned: true)
!11748 = !DIEnumerator(name: "IB_QPS_SQE", value: 5, isUnsigned: true)
!11749 = !DIEnumerator(name: "IB_QPS_ERR", value: 6, isUnsigned: true)
!11750 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ib_mig_state", file: !11520, line: 1249, baseType: !199, size: 32, elements: !11751)
!11751 = !{!11752, !11753, !11754}
!11752 = !DIEnumerator(name: "IB_MIG_MIGRATED", value: 0, isUnsigned: true)
!11753 = !DIEnumerator(name: "IB_MIG_REARM", value: 1, isUnsigned: true)
!11754 = !DIEnumerator(name: "IB_MIG_ARMED", value: 2, isUnsigned: true)
!11755 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ib_uverbs_advise_mr_advice", file: !11487, line: 208, baseType: !199, size: 32, elements: !11756)
!11756 = !{!11757, !11758, !11759}
!11757 = !DIEnumerator(name: "IB_UVERBS_ADVISE_MR_ADVICE_PREFETCH", value: 0, isUnsigned: true)
!11758 = !DIEnumerator(name: "IB_UVERBS_ADVISE_MR_ADVICE_PREFETCH_WRITE", value: 1, isUnsigned: true)
!11759 = !DIEnumerator(name: "IB_UVERBS_ADVISE_MR_ADVICE_PREFETCH_NO_FAULT", value: 2, isUnsigned: true)
!11760 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ib_sig_err_type", file: !11529, line: 94, baseType: !199, size: 32, elements: !11761)
!11761 = !{!11762, !11763, !11764}
!11762 = !DIEnumerator(name: "IB_SIG_BAD_GUARD", value: 0, isUnsigned: true)
!11763 = !DIEnumerator(name: "IB_SIG_BAD_REFTAG", value: 1, isUnsigned: true)
!11764 = !DIEnumerator(name: "IB_SIG_BAD_APPTAG", value: 2, isUnsigned: true)
!11765 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ib_mw_type", file: !11520, line: 1255, baseType: !199, size: 32, elements: !11766)
!11766 = !{!11767, !11768}
!11767 = !DIEnumerator(name: "IB_MW_TYPE_1", value: 1, isUnsigned: true)
!11768 = !DIEnumerator(name: "IB_MW_TYPE_2", value: 2, isUnsigned: true)
!11769 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ib_flow_attr_type", file: !11520, line: 1821, baseType: !199, size: 32, elements: !11770)
!11770 = !{!11771, !11772, !11773, !11774}
!11771 = !DIEnumerator(name: "IB_FLOW_ATTR_NORMAL", value: 0, isUnsigned: true)
!11772 = !DIEnumerator(name: "IB_FLOW_ATTR_ALL_DEFAULT", value: 1, isUnsigned: true)
!11773 = !DIEnumerator(name: "IB_FLOW_ATTR_MC_DEFAULT", value: 2, isUnsigned: true)
!11774 = !DIEnumerator(name: "IB_FLOW_ATTR_SNIFFER", value: 3, isUnsigned: true)
!11775 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ib_flow_spec_type", file: !11520, line: 1837, baseType: !199, size: 32, elements: !11776)
!11776 = !{!11777, !11778, !11779, !11780, !11781, !11782, !11783, !11784, !11785, !11786, !11787, !11788, !11789, !11790, !11791}
!11777 = !DIEnumerator(name: "IB_FLOW_SPEC_ETH", value: 32, isUnsigned: true)
!11778 = !DIEnumerator(name: "IB_FLOW_SPEC_IB", value: 34, isUnsigned: true)
!11779 = !DIEnumerator(name: "IB_FLOW_SPEC_IPV4", value: 48, isUnsigned: true)
!11780 = !DIEnumerator(name: "IB_FLOW_SPEC_IPV6", value: 49, isUnsigned: true)
!11781 = !DIEnumerator(name: "IB_FLOW_SPEC_ESP", value: 52, isUnsigned: true)
!11782 = !DIEnumerator(name: "IB_FLOW_SPEC_TCP", value: 64, isUnsigned: true)
!11783 = !DIEnumerator(name: "IB_FLOW_SPEC_UDP", value: 65, isUnsigned: true)
!11784 = !DIEnumerator(name: "IB_FLOW_SPEC_VXLAN_TUNNEL", value: 80, isUnsigned: true)
!11785 = !DIEnumerator(name: "IB_FLOW_SPEC_GRE", value: 81, isUnsigned: true)
!11786 = !DIEnumerator(name: "IB_FLOW_SPEC_MPLS", value: 96, isUnsigned: true)
!11787 = !DIEnumerator(name: "IB_FLOW_SPEC_INNER", value: 256, isUnsigned: true)
!11788 = !DIEnumerator(name: "IB_FLOW_SPEC_ACTION_TAG", value: 4096, isUnsigned: true)
!11789 = !DIEnumerator(name: "IB_FLOW_SPEC_ACTION_DROP", value: 4097, isUnsigned: true)
!11790 = !DIEnumerator(name: "IB_FLOW_SPEC_ACTION_HANDLE", value: 4098, isUnsigned: true)
!11791 = !DIEnumerator(name: "IB_FLOW_SPEC_ACTION_COUNT", value: 4099, isUnsigned: true)
!11792 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ib_flow_action_type", file: !11520, line: 2075, baseType: !199, size: 32, elements: !11793)
!11793 = !{!11794, !11795}
!11794 = !DIEnumerator(name: "IB_FLOW_ACTION_UNSPECIFIED", value: 0, isUnsigned: true)
!11795 = !DIEnumerator(name: "IB_FLOW_ACTION_ESP", value: 1, isUnsigned: true)
!11796 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ib_uverbs_flow_action_esp_keymat", file: !11487, line: 144, baseType: !199, size: 32, elements: !11797)
!11797 = !{!11798}
!11798 = !DIEnumerator(name: "IB_UVERBS_FLOW_ACTION_ESP_KEYMAT_AES_GCM", value: 0, isUnsigned: true)
!11799 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ib_uverbs_flow_action_esp_replay", file: !11487, line: 163, baseType: !199, size: 32, elements: !11800)
!11800 = !{!11801, !11802}
!11801 = !DIEnumerator(name: "IB_UVERBS_FLOW_ACTION_ESP_REPLAY_NONE", value: 0, isUnsigned: true)
!11802 = !DIEnumerator(name: "IB_UVERBS_FLOW_ACTION_ESP_REPLAY_BMP", value: 1, isUnsigned: true)
!11803 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !11417, line: 14, baseType: !199, size: 32, elements: !11804)
!11804 = !{!11805, !11806, !11807}
!11805 = !DIEnumerator(name: "MLX5_ESWITCH_NONE", value: 0, isUnsigned: true)
!11806 = !DIEnumerator(name: "MLX5_ESWITCH_LEGACY", value: 1, isUnsigned: true)
!11807 = !DIEnumerator(name: "MLX5_ESWITCH_OFFLOADS", value: 2, isUnsigned: true)
!11808 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !10705, line: 3000, baseType: !199, size: 32, elements: !11809)
!11809 = !{!11810, !11811, !11812, !11813, !11814, !11815, !11816, !11817, !11818, !11819, !11820, !11821, !11822}
!11810 = !DIEnumerator(name: "MLX5_FLOW_CONTEXT_ACTION_ALLOW", value: 1, isUnsigned: true)
!11811 = !DIEnumerator(name: "MLX5_FLOW_CONTEXT_ACTION_DROP", value: 2, isUnsigned: true)
!11812 = !DIEnumerator(name: "MLX5_FLOW_CONTEXT_ACTION_FWD_DEST", value: 4, isUnsigned: true)
!11813 = !DIEnumerator(name: "MLX5_FLOW_CONTEXT_ACTION_COUNT", value: 8, isUnsigned: true)
!11814 = !DIEnumerator(name: "MLX5_FLOW_CONTEXT_ACTION_PACKET_REFORMAT", value: 16, isUnsigned: true)
!11815 = !DIEnumerator(name: "MLX5_FLOW_CONTEXT_ACTION_DECAP", value: 32, isUnsigned: true)
!11816 = !DIEnumerator(name: "MLX5_FLOW_CONTEXT_ACTION_MOD_HDR", value: 64, isUnsigned: true)
!11817 = !DIEnumerator(name: "MLX5_FLOW_CONTEXT_ACTION_VLAN_POP", value: 128, isUnsigned: true)
!11818 = !DIEnumerator(name: "MLX5_FLOW_CONTEXT_ACTION_VLAN_PUSH", value: 256, isUnsigned: true)
!11819 = !DIEnumerator(name: "MLX5_FLOW_CONTEXT_ACTION_VLAN_POP_2", value: 1024, isUnsigned: true)
!11820 = !DIEnumerator(name: "MLX5_FLOW_CONTEXT_ACTION_VLAN_PUSH_2", value: 2048, isUnsigned: true)
!11821 = !DIEnumerator(name: "MLX5_FLOW_CONTEXT_ACTION_IPSEC_DECRYPT", value: 4096, isUnsigned: true)
!11822 = !DIEnumerator(name: "MLX5_FLOW_CONTEXT_ACTION_IPSEC_ENCRYPT", value: 8192, isUnsigned: true)
!11823 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !10877, line: 202, baseType: !199, size: 32, elements: !11824)
!11824 = !{!11825, !11826}
!11825 = !DIEnumerator(name: "FLOW_ACT_NO_APPEND", value: 1, isUnsigned: true)
!11826 = !DIEnumerator(name: "FLOW_ACT_IGNORE_FLOW_LEVEL", value: 2, isUnsigned: true)
!11827 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !9, line: 390, baseType: !199, size: 32, elements: !11828)
!11828 = !{!11829, !11830, !11831}
!11829 = !DIEnumerator(name: "MLX5_ESW_ATTR_FLAG_VLAN_HANDLED", value: 1, isUnsigned: true)
!11830 = !DIEnumerator(name: "MLX5_ESW_ATTR_FLAG_SLOW_PATH", value: 2, isUnsigned: true)
!11831 = !DIEnumerator(name: "MLX5_ESW_ATTR_FLAG_NO_IN_PORT", value: 4, isUnsigned: true)
!11832 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mlx5_cap_type", file: !10469, line: 1135, baseType: !199, size: 32, elements: !11833)
!11833 = !{!11834, !11835, !11836, !11837, !11838, !11839, !11840, !11841, !11842, !11843, !11844, !11845, !11846, !11847, !11848, !11849, !11850, !11851, !11852, !11853, !11854, !11855}
!11834 = !DIEnumerator(name: "MLX5_CAP_GENERAL", value: 0, isUnsigned: true)
!11835 = !DIEnumerator(name: "MLX5_CAP_ETHERNET_OFFLOADS", value: 1, isUnsigned: true)
!11836 = !DIEnumerator(name: "MLX5_CAP_ODP", value: 2, isUnsigned: true)
!11837 = !DIEnumerator(name: "MLX5_CAP_ATOMIC", value: 3, isUnsigned: true)
!11838 = !DIEnumerator(name: "MLX5_CAP_ROCE", value: 4, isUnsigned: true)
!11839 = !DIEnumerator(name: "MLX5_CAP_IPOIB_OFFLOADS", value: 5, isUnsigned: true)
!11840 = !DIEnumerator(name: "MLX5_CAP_IPOIB_ENHANCED_OFFLOADS", value: 6, isUnsigned: true)
!11841 = !DIEnumerator(name: "MLX5_CAP_FLOW_TABLE", value: 7, isUnsigned: true)
!11842 = !DIEnumerator(name: "MLX5_CAP_ESWITCH_FLOW_TABLE", value: 8, isUnsigned: true)
!11843 = !DIEnumerator(name: "MLX5_CAP_ESWITCH", value: 9, isUnsigned: true)
!11844 = !DIEnumerator(name: "MLX5_CAP_RESERVED", value: 10, isUnsigned: true)
!11845 = !DIEnumerator(name: "MLX5_CAP_VECTOR_CALC", value: 11, isUnsigned: true)
!11846 = !DIEnumerator(name: "MLX5_CAP_QOS", value: 12, isUnsigned: true)
!11847 = !DIEnumerator(name: "MLX5_CAP_DEBUG", value: 13, isUnsigned: true)
!11848 = !DIEnumerator(name: "MLX5_CAP_RESERVED_14", value: 14, isUnsigned: true)
!11849 = !DIEnumerator(name: "MLX5_CAP_DEV_MEM", value: 15, isUnsigned: true)
!11850 = !DIEnumerator(name: "MLX5_CAP_RESERVED_16", value: 16, isUnsigned: true)
!11851 = !DIEnumerator(name: "MLX5_CAP_TLS", value: 17, isUnsigned: true)
!11852 = !DIEnumerator(name: "MLX5_CAP_VDPA_EMULATION", value: 19, isUnsigned: true)
!11853 = !DIEnumerator(name: "MLX5_CAP_DEV_EVENT", value: 20, isUnsigned: true)
!11854 = !DIEnumerator(name: "MLX5_CAP_IPSEC", value: 21, isUnsigned: true)
!11855 = !DIEnumerator(name: "MLX5_CAP_NUM", value: 22, isUnsigned: true)
!11856 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !10877, line: 117, baseType: !199, size: 32, elements: !11857)
!11857 = !{!11858, !11859}
!11858 = !DIEnumerator(name: "MLX5_FLOW_DEST_VPORT_VHCA_ID", value: 1, isUnsigned: true)
!11859 = !DIEnumerator(name: "MLX5_FLOW_DEST_VPORT_REFORMAT_ID", value: 2, isUnsigned: true)
!11860 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !9, line: 385, baseType: !199, size: 32, elements: !11861)
!11861 = !{!11862, !11863}
!11862 = !DIEnumerator(name: "MLX5_ESW_DEST_ENCAP", value: 1, isUnsigned: true)
!11863 = !DIEnumerator(name: "MLX5_ESW_DEST_ENCAP_VALID", value: 2, isUnsigned: true)
!11864 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mlx5_flow_match_level", file: !9, line: 375, baseType: !199, size: 32, elements: !11865)
!11865 = !{!11866, !11867, !11868, !11869}
!11866 = !DIEnumerator(name: "MLX5_MATCH_NONE", value: 0, isUnsigned: true)
!11867 = !DIEnumerator(name: "MLX5_MATCH_L2", value: 1, isUnsigned: true)
!11868 = !DIEnumerator(name: "MLX5_MATCH_L3", value: 2, isUnsigned: true)
!11869 = !DIEnumerator(name: "MLX5_MATCH_L4", value: 3, isUnsigned: true)
!11870 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !10469, line: 1073, baseType: !199, size: 32, elements: !11871)
!11871 = !{!11872, !11873, !11874, !11875, !11876}
!11872 = !DIEnumerator(name: "MLX5_MATCH_OUTER_HEADERS", value: 1, isUnsigned: true)
!11873 = !DIEnumerator(name: "MLX5_MATCH_MISC_PARAMETERS", value: 2, isUnsigned: true)
!11874 = !DIEnumerator(name: "MLX5_MATCH_INNER_HEADERS", value: 4, isUnsigned: true)
!11875 = !DIEnumerator(name: "MLX5_MATCH_MISC_PARAMETERS_2", value: 8, isUnsigned: true)
!11876 = !DIEnumerator(name: "MLX5_MATCH_MISC_PARAMETERS_3", value: 16, isUnsigned: true)
!11877 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !11878, line: 10, baseType: !199, size: 32, elements: !11879)
!11878 = !DIFile(filename: "./include/linux/stddef.h", directory: "/home/lizy2001/genbc/linux")
!11879 = !{!11880, !11881}
!11880 = !DIEnumerator(name: "false", value: 0, isUnsigned: true)
!11881 = !DIEnumerator(name: "true", value: 1, isUnsigned: true)
!11882 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !9, line: 370, baseType: !199, size: 32, elements: !11883)
!11883 = !{!11884, !11885}
!11884 = !DIEnumerator(name: "SET_VLAN_STRIP", value: 1, isUnsigned: true)
!11885 = !DIEnumerator(name: "SET_VLAN_INSERT", value: 2, isUnsigned: true)
!11886 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !10877, line: 100, baseType: !199, size: 32, elements: !11887)
!11887 = !{!11888}
!11888 = !DIEnumerator(name: "FLOW_CONTEXT_HAS_TAG", value: 1, isUnsigned: true)
!11889 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !11417, line: 20, baseType: !199, size: 32, elements: !11890)
!11890 = !{!11891, !11892, !11893}
!11891 = !DIEnumerator(name: "REP_ETH", value: 0, isUnsigned: true)
!11892 = !DIEnumerator(name: "REP_IB", value: 1, isUnsigned: true)
!11893 = !DIEnumerator(name: "NUM_REP_TYPES", value: 2, isUnsigned: true)
!11894 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !11417, line: 26, baseType: !199, size: 32, elements: !11895)
!11895 = !{!11896, !11897, !11898}
!11896 = !DIEnumerator(name: "REP_UNREGISTERED", value: 0, isUnsigned: true)
!11897 = !DIEnumerator(name: "REP_REGISTERED", value: 1, isUnsigned: true)
!11898 = !DIEnumerator(name: "REP_LOADED", value: 2, isUnsigned: true)
!11899 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1729, line: 30, baseType: !120, size: 64, elements: !11900)
!11900 = !{!11901, !11902, !11903, !11904, !11905, !11906, !11907, !11908, !11909, !11910, !11911, !11912, !11913, !11914, !11915, !11916, !11917, !11918, !11919, !11920, !11921, !11922, !11923, !11924, !11925, !11926, !11927, !11928, !11929}
!11901 = !DIEnumerator(name: "WORK_STRUCT_PENDING_BIT", value: 0)
!11902 = !DIEnumerator(name: "WORK_STRUCT_DELAYED_BIT", value: 1)
!11903 = !DIEnumerator(name: "WORK_STRUCT_PWQ_BIT", value: 2)
!11904 = !DIEnumerator(name: "WORK_STRUCT_LINKED_BIT", value: 3)
!11905 = !DIEnumerator(name: "WORK_STRUCT_COLOR_SHIFT", value: 4)
!11906 = !DIEnumerator(name: "WORK_STRUCT_COLOR_BITS", value: 4)
!11907 = !DIEnumerator(name: "WORK_STRUCT_PENDING", value: 1)
!11908 = !DIEnumerator(name: "WORK_STRUCT_DELAYED", value: 2)
!11909 = !DIEnumerator(name: "WORK_STRUCT_PWQ", value: 4)
!11910 = !DIEnumerator(name: "WORK_STRUCT_LINKED", value: 8)
!11911 = !DIEnumerator(name: "WORK_STRUCT_STATIC", value: 0)
!11912 = !DIEnumerator(name: "WORK_NR_COLORS", value: 15)
!11913 = !DIEnumerator(name: "WORK_NO_COLOR", value: 15)
!11914 = !DIEnumerator(name: "WORK_CPU_UNBOUND", value: 1)
!11915 = !DIEnumerator(name: "WORK_STRUCT_FLAG_BITS", value: 8)
!11916 = !DIEnumerator(name: "WORK_OFFQ_FLAG_BASE", value: 4)
!11917 = !DIEnumerator(name: "__WORK_OFFQ_CANCELING", value: 4)
!11918 = !DIEnumerator(name: "WORK_OFFQ_CANCELING", value: 16)
!11919 = !DIEnumerator(name: "WORK_OFFQ_FLAG_BITS", value: 1)
!11920 = !DIEnumerator(name: "WORK_OFFQ_POOL_SHIFT", value: 5)
!11921 = !DIEnumerator(name: "WORK_OFFQ_LEFT", value: 59)
!11922 = !DIEnumerator(name: "WORK_OFFQ_POOL_BITS", value: 31)
!11923 = !DIEnumerator(name: "WORK_OFFQ_POOL_NONE", value: 2147483647)
!11924 = !DIEnumerator(name: "WORK_STRUCT_FLAG_MASK", value: 255)
!11925 = !DIEnumerator(name: "WORK_STRUCT_WQ_DATA_MASK", value: -256)
!11926 = !DIEnumerator(name: "WORK_STRUCT_NO_POOL", value: 68719476704)
!11927 = !DIEnumerator(name: "WORK_BUSY_PENDING", value: 1)
!11928 = !DIEnumerator(name: "WORK_BUSY_RUNNING", value: 2)
!11929 = !DIEnumerator(name: "WORKER_DESC_LEN", value: 24)
!11930 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !9, line: 239, baseType: !199, size: 32, elements: !11931)
!11931 = !{!11932, !11933}
!11932 = !DIEnumerator(name: "MLX5_ESWITCH_VPORT_MATCH_METADATA", value: 1, isUnsigned: true)
!11933 = !DIEnumerator(name: "MLX5_ESWITCH_REG_C1_LOOPBACK_ENABLED", value: 2, isUnsigned: true)
!11934 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !10469, line: 1049, baseType: !199, size: 32, elements: !11935)
!11935 = !{!11936, !11937, !11938}
!11936 = !DIEnumerator(name: "MLX5_VPORT_ADMIN_STATE_DOWN", value: 0, isUnsigned: true)
!11937 = !DIEnumerator(name: "MLX5_VPORT_ADMIN_STATE_UP", value: 1, isUnsigned: true)
!11938 = !DIEnumerator(name: "MLX5_VPORT_ADMIN_STATE_AUTO", value: 2, isUnsigned: true)
!11939 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "devlink_eswitch_mode", file: !3912, line: 166, baseType: !199, size: 32, elements: !11940)
!11940 = !{!11941, !11942}
!11941 = !DIEnumerator(name: "DEVLINK_ESWITCH_MODE_LEGACY", value: 0, isUnsigned: true)
!11942 = !DIEnumerator(name: "DEVLINK_ESWITCH_MODE_SWITCHDEV", value: 1, isUnsigned: true)
!11943 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "devlink_eswitch_inline_mode", file: !3912, line: 171, baseType: !199, size: 32, elements: !11944)
!11944 = !{!11945, !11946, !11947, !11948}
!11945 = !DIEnumerator(name: "DEVLINK_ESWITCH_INLINE_MODE_NONE", value: 0, isUnsigned: true)
!11946 = !DIEnumerator(name: "DEVLINK_ESWITCH_INLINE_MODE_LINK", value: 1, isUnsigned: true)
!11947 = !DIEnumerator(name: "DEVLINK_ESWITCH_INLINE_MODE_NETWORK", value: 2, isUnsigned: true)
!11948 = !DIEnumerator(name: "DEVLINK_ESWITCH_INLINE_MODE_TRANSPORT", value: 3, isUnsigned: true)
!11949 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !10877, line: 85, baseType: !199, size: 32, elements: !11950)
!11950 = !{!11951, !11952, !11953, !11954, !11955}
!11951 = !DIEnumerator(name: "FDB_BYPASS_PATH", value: 0, isUnsigned: true)
!11952 = !DIEnumerator(name: "FDB_TC_OFFLOAD", value: 1, isUnsigned: true)
!11953 = !DIEnumerator(name: "FDB_FT_OFFLOAD", value: 2, isUnsigned: true)
!11954 = !DIEnumerator(name: "FDB_SLOW_PATH", value: 3, isUnsigned: true)
!11955 = !DIEnumerator(name: "FDB_PER_VPORT", value: 4, isUnsigned: true)
!11956 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !10705, line: 3016, baseType: !199, size: 32, elements: !11957)
!11957 = !{!11958, !11959, !11960}
!11958 = !DIEnumerator(name: "MLX5_FLOW_CONTEXT_FLOW_SOURCE_ANY_VPORT", value: 0, isUnsigned: true)
!11959 = !DIEnumerator(name: "MLX5_FLOW_CONTEXT_FLOW_SOURCE_UPLINK", value: 1, isUnsigned: true)
!11960 = !DIEnumerator(name: "MLX5_FLOW_CONTEXT_FLOW_SOURCE_LOCAL_VPORT", value: 2, isUnsigned: true)
!11961 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !10705, line: 732, baseType: !199, size: 32, elements: !11962)
!11962 = !{!11963, !11964, !11965, !11966, !11967, !11968, !11969, !11970}
!11963 = !DIEnumerator(name: "MLX5_FDB_TO_VPORT_REG_C_0", value: 1, isUnsigned: true)
!11964 = !DIEnumerator(name: "MLX5_FDB_TO_VPORT_REG_C_1", value: 2, isUnsigned: true)
!11965 = !DIEnumerator(name: "MLX5_FDB_TO_VPORT_REG_C_2", value: 4, isUnsigned: true)
!11966 = !DIEnumerator(name: "MLX5_FDB_TO_VPORT_REG_C_3", value: 8, isUnsigned: true)
!11967 = !DIEnumerator(name: "MLX5_FDB_TO_VPORT_REG_C_4", value: 16, isUnsigned: true)
!11968 = !DIEnumerator(name: "MLX5_FDB_TO_VPORT_REG_C_5", value: 32, isUnsigned: true)
!11969 = !DIEnumerator(name: "MLX5_FDB_TO_VPORT_REG_C_6", value: 64, isUnsigned: true)
!11970 = !DIEnumerator(name: "MLX5_FDB_TO_VPORT_REG_C_7", value: 128, isUnsigned: true)
!11971 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kmalloc_cache_type", file: !11972, line: 305, baseType: !199, size: 32, elements: !11973)
!11972 = !DIFile(filename: "./include/linux/slab.h", directory: "/home/lizy2001/genbc/linux")
!11973 = !{!11974, !11975, !11976, !11977}
!11974 = !DIEnumerator(name: "KMALLOC_NORMAL", value: 0, isUnsigned: true)
!11975 = !DIEnumerator(name: "KMALLOC_RECLAIM", value: 1, isUnsigned: true)
!11976 = !DIEnumerator(name: "KMALLOC_DMA", value: 2, isUnsigned: true)
!11977 = !DIEnumerator(name: "NR_KMALLOC_TYPES", value: 3, isUnsigned: true)
!11978 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !10705, line: 113, baseType: !199, size: 32, elements: !11979)
!11979 = !{!11980, !11981, !11982, !11983, !11984, !11985, !11986, !11987, !11988, !11989, !11990, !11991, !11992, !11993, !11994, !11995, !11996, !11997, !11998, !11999, !12000, !12001, !12002, !12003, !12004, !12005, !12006, !12007, !12008, !12009, !12010, !12011, !12012, !12013, !12014, !12015, !12016, !12017, !12018, !12019, !12020, !12021, !12022, !12023, !12024, !12025, !12026, !12027, !12028, !12029, !12030, !12031, !12032, !12033, !12034, !12035, !12036, !12037, !12038, !12039, !12040, !12041, !12042, !12043, !12044, !12045, !12046, !12047, !12048, !12049, !12050, !12051, !12052, !12053, !12054, !12055, !12056, !12057, !12058, !12059, !12060, !12061, !12062, !12063, !12064, !12065, !12066, !12067, !12068, !12069, !12070, !12071, !12072, !12073, !12074, !12075, !12076, !12077, !12078, !12079, !12080, !12081, !12082, !12083, !12084, !12085, !12086, !12087, !12088, !12089, !12090, !12091, !12092, !12093, !12094, !12095, !12096, !12097, !12098, !12099, !12100, !12101, !12102, !12103, !12104, !12105, !12106, !12107, !12108, !12109, !12110, !12111, !12112, !12113, !12114, !12115, !12116, !12117, !12118, !12119, !12120, !12121, !12122, !12123, !12124, !12125, !12126, !12127, !12128, !12129, !12130, !12131, !12132, !12133, !12134, !12135, !12136, !12137, !12138, !12139, !12140, !12141, !12142, !12143, !12144, !12145, !12146, !12147, !12148, !12149, !12150, !12151, !12152, !12153, !12154, !12155, !12156, !12157, !12158, !12159, !12160, !12161, !12162, !12163, !12164, !12165, !12166, !12167, !12168}
!11980 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_HCA_CAP", value: 256, isUnsigned: true)
!11981 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_ADAPTER", value: 257, isUnsigned: true)
!11982 = !DIEnumerator(name: "MLX5_CMD_OP_INIT_HCA", value: 258, isUnsigned: true)
!11983 = !DIEnumerator(name: "MLX5_CMD_OP_TEARDOWN_HCA", value: 259, isUnsigned: true)
!11984 = !DIEnumerator(name: "MLX5_CMD_OP_ENABLE_HCA", value: 260, isUnsigned: true)
!11985 = !DIEnumerator(name: "MLX5_CMD_OP_DISABLE_HCA", value: 261, isUnsigned: true)
!11986 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_PAGES", value: 263, isUnsigned: true)
!11987 = !DIEnumerator(name: "MLX5_CMD_OP_MANAGE_PAGES", value: 264, isUnsigned: true)
!11988 = !DIEnumerator(name: "MLX5_CMD_OP_SET_HCA_CAP", value: 265, isUnsigned: true)
!11989 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_ISSI", value: 266, isUnsigned: true)
!11990 = !DIEnumerator(name: "MLX5_CMD_OP_SET_ISSI", value: 267, isUnsigned: true)
!11991 = !DIEnumerator(name: "MLX5_CMD_OP_SET_DRIVER_VERSION", value: 269, isUnsigned: true)
!11992 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_SF_PARTITION", value: 273, isUnsigned: true)
!11993 = !DIEnumerator(name: "MLX5_CMD_OP_ALLOC_SF", value: 275, isUnsigned: true)
!11994 = !DIEnumerator(name: "MLX5_CMD_OP_DEALLOC_SF", value: 276, isUnsigned: true)
!11995 = !DIEnumerator(name: "MLX5_CMD_OP_CREATE_MKEY", value: 512, isUnsigned: true)
!11996 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_MKEY", value: 513, isUnsigned: true)
!11997 = !DIEnumerator(name: "MLX5_CMD_OP_DESTROY_MKEY", value: 514, isUnsigned: true)
!11998 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_SPECIAL_CONTEXTS", value: 515, isUnsigned: true)
!11999 = !DIEnumerator(name: "MLX5_CMD_OP_PAGE_FAULT_RESUME", value: 516, isUnsigned: true)
!12000 = !DIEnumerator(name: "MLX5_CMD_OP_ALLOC_MEMIC", value: 517, isUnsigned: true)
!12001 = !DIEnumerator(name: "MLX5_CMD_OP_DEALLOC_MEMIC", value: 518, isUnsigned: true)
!12002 = !DIEnumerator(name: "MLX5_CMD_OP_CREATE_EQ", value: 769, isUnsigned: true)
!12003 = !DIEnumerator(name: "MLX5_CMD_OP_DESTROY_EQ", value: 770, isUnsigned: true)
!12004 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_EQ", value: 771, isUnsigned: true)
!12005 = !DIEnumerator(name: "MLX5_CMD_OP_GEN_EQE", value: 772, isUnsigned: true)
!12006 = !DIEnumerator(name: "MLX5_CMD_OP_CREATE_CQ", value: 1024, isUnsigned: true)
!12007 = !DIEnumerator(name: "MLX5_CMD_OP_DESTROY_CQ", value: 1025, isUnsigned: true)
!12008 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_CQ", value: 1026, isUnsigned: true)
!12009 = !DIEnumerator(name: "MLX5_CMD_OP_MODIFY_CQ", value: 1027, isUnsigned: true)
!12010 = !DIEnumerator(name: "MLX5_CMD_OP_CREATE_QP", value: 1280, isUnsigned: true)
!12011 = !DIEnumerator(name: "MLX5_CMD_OP_DESTROY_QP", value: 1281, isUnsigned: true)
!12012 = !DIEnumerator(name: "MLX5_CMD_OP_RST2INIT_QP", value: 1282, isUnsigned: true)
!12013 = !DIEnumerator(name: "MLX5_CMD_OP_INIT2RTR_QP", value: 1283, isUnsigned: true)
!12014 = !DIEnumerator(name: "MLX5_CMD_OP_RTR2RTS_QP", value: 1284, isUnsigned: true)
!12015 = !DIEnumerator(name: "MLX5_CMD_OP_RTS2RTS_QP", value: 1285, isUnsigned: true)
!12016 = !DIEnumerator(name: "MLX5_CMD_OP_SQERR2RTS_QP", value: 1286, isUnsigned: true)
!12017 = !DIEnumerator(name: "MLX5_CMD_OP_2ERR_QP", value: 1287, isUnsigned: true)
!12018 = !DIEnumerator(name: "MLX5_CMD_OP_2RST_QP", value: 1290, isUnsigned: true)
!12019 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_QP", value: 1291, isUnsigned: true)
!12020 = !DIEnumerator(name: "MLX5_CMD_OP_SQD_RTS_QP", value: 1292, isUnsigned: true)
!12021 = !DIEnumerator(name: "MLX5_CMD_OP_INIT2INIT_QP", value: 1294, isUnsigned: true)
!12022 = !DIEnumerator(name: "MLX5_CMD_OP_CREATE_PSV", value: 1536, isUnsigned: true)
!12023 = !DIEnumerator(name: "MLX5_CMD_OP_DESTROY_PSV", value: 1537, isUnsigned: true)
!12024 = !DIEnumerator(name: "MLX5_CMD_OP_CREATE_SRQ", value: 1792, isUnsigned: true)
!12025 = !DIEnumerator(name: "MLX5_CMD_OP_DESTROY_SRQ", value: 1793, isUnsigned: true)
!12026 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_SRQ", value: 1794, isUnsigned: true)
!12027 = !DIEnumerator(name: "MLX5_CMD_OP_ARM_RQ", value: 1795, isUnsigned: true)
!12028 = !DIEnumerator(name: "MLX5_CMD_OP_CREATE_XRC_SRQ", value: 1797, isUnsigned: true)
!12029 = !DIEnumerator(name: "MLX5_CMD_OP_DESTROY_XRC_SRQ", value: 1798, isUnsigned: true)
!12030 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_XRC_SRQ", value: 1799, isUnsigned: true)
!12031 = !DIEnumerator(name: "MLX5_CMD_OP_ARM_XRC_SRQ", value: 1800, isUnsigned: true)
!12032 = !DIEnumerator(name: "MLX5_CMD_OP_CREATE_DCT", value: 1808, isUnsigned: true)
!12033 = !DIEnumerator(name: "MLX5_CMD_OP_DESTROY_DCT", value: 1809, isUnsigned: true)
!12034 = !DIEnumerator(name: "MLX5_CMD_OP_DRAIN_DCT", value: 1810, isUnsigned: true)
!12035 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_DCT", value: 1811, isUnsigned: true)
!12036 = !DIEnumerator(name: "MLX5_CMD_OP_ARM_DCT_FOR_KEY_VIOLATION", value: 1812, isUnsigned: true)
!12037 = !DIEnumerator(name: "MLX5_CMD_OP_CREATE_XRQ", value: 1815, isUnsigned: true)
!12038 = !DIEnumerator(name: "MLX5_CMD_OP_DESTROY_XRQ", value: 1816, isUnsigned: true)
!12039 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_XRQ", value: 1817, isUnsigned: true)
!12040 = !DIEnumerator(name: "MLX5_CMD_OP_ARM_XRQ", value: 1818, isUnsigned: true)
!12041 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_XRQ_DC_PARAMS_ENTRY", value: 1829, isUnsigned: true)
!12042 = !DIEnumerator(name: "MLX5_CMD_OP_SET_XRQ_DC_PARAMS_ENTRY", value: 1830, isUnsigned: true)
!12043 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_XRQ_ERROR_PARAMS", value: 1831, isUnsigned: true)
!12044 = !DIEnumerator(name: "MLX5_CMD_OP_RELEASE_XRQ_ERROR", value: 1833, isUnsigned: true)
!12045 = !DIEnumerator(name: "MLX5_CMD_OP_MODIFY_XRQ", value: 1834, isUnsigned: true)
!12046 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_ESW_FUNCTIONS", value: 1856, isUnsigned: true)
!12047 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_VPORT_STATE", value: 1872, isUnsigned: true)
!12048 = !DIEnumerator(name: "MLX5_CMD_OP_MODIFY_VPORT_STATE", value: 1873, isUnsigned: true)
!12049 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_ESW_VPORT_CONTEXT", value: 1874, isUnsigned: true)
!12050 = !DIEnumerator(name: "MLX5_CMD_OP_MODIFY_ESW_VPORT_CONTEXT", value: 1875, isUnsigned: true)
!12051 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_NIC_VPORT_CONTEXT", value: 1876, isUnsigned: true)
!12052 = !DIEnumerator(name: "MLX5_CMD_OP_MODIFY_NIC_VPORT_CONTEXT", value: 1877, isUnsigned: true)
!12053 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_ROCE_ADDRESS", value: 1888, isUnsigned: true)
!12054 = !DIEnumerator(name: "MLX5_CMD_OP_SET_ROCE_ADDRESS", value: 1889, isUnsigned: true)
!12055 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_HCA_VPORT_CONTEXT", value: 1890, isUnsigned: true)
!12056 = !DIEnumerator(name: "MLX5_CMD_OP_MODIFY_HCA_VPORT_CONTEXT", value: 1891, isUnsigned: true)
!12057 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_HCA_VPORT_GID", value: 1892, isUnsigned: true)
!12058 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_HCA_VPORT_PKEY", value: 1893, isUnsigned: true)
!12059 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_VNIC_ENV", value: 1903, isUnsigned: true)
!12060 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_VPORT_COUNTER", value: 1904, isUnsigned: true)
!12061 = !DIEnumerator(name: "MLX5_CMD_OP_ALLOC_Q_COUNTER", value: 1905, isUnsigned: true)
!12062 = !DIEnumerator(name: "MLX5_CMD_OP_DEALLOC_Q_COUNTER", value: 1906, isUnsigned: true)
!12063 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_Q_COUNTER", value: 1907, isUnsigned: true)
!12064 = !DIEnumerator(name: "MLX5_CMD_OP_SET_MONITOR_COUNTER", value: 1908, isUnsigned: true)
!12065 = !DIEnumerator(name: "MLX5_CMD_OP_ARM_MONITOR_COUNTER", value: 1909, isUnsigned: true)
!12066 = !DIEnumerator(name: "MLX5_CMD_OP_SET_PP_RATE_LIMIT", value: 1920, isUnsigned: true)
!12067 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_RATE_LIMIT", value: 1921, isUnsigned: true)
!12068 = !DIEnumerator(name: "MLX5_CMD_OP_CREATE_SCHEDULING_ELEMENT", value: 1922, isUnsigned: true)
!12069 = !DIEnumerator(name: "MLX5_CMD_OP_DESTROY_SCHEDULING_ELEMENT", value: 1923, isUnsigned: true)
!12070 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_SCHEDULING_ELEMENT", value: 1924, isUnsigned: true)
!12071 = !DIEnumerator(name: "MLX5_CMD_OP_MODIFY_SCHEDULING_ELEMENT", value: 1925, isUnsigned: true)
!12072 = !DIEnumerator(name: "MLX5_CMD_OP_CREATE_QOS_PARA_VPORT", value: 1926, isUnsigned: true)
!12073 = !DIEnumerator(name: "MLX5_CMD_OP_DESTROY_QOS_PARA_VPORT", value: 1927, isUnsigned: true)
!12074 = !DIEnumerator(name: "MLX5_CMD_OP_ALLOC_PD", value: 2048, isUnsigned: true)
!12075 = !DIEnumerator(name: "MLX5_CMD_OP_DEALLOC_PD", value: 2049, isUnsigned: true)
!12076 = !DIEnumerator(name: "MLX5_CMD_OP_ALLOC_UAR", value: 2050, isUnsigned: true)
!12077 = !DIEnumerator(name: "MLX5_CMD_OP_DEALLOC_UAR", value: 2051, isUnsigned: true)
!12078 = !DIEnumerator(name: "MLX5_CMD_OP_CONFIG_INT_MODERATION", value: 2052, isUnsigned: true)
!12079 = !DIEnumerator(name: "MLX5_CMD_OP_ACCESS_REG", value: 2053, isUnsigned: true)
!12080 = !DIEnumerator(name: "MLX5_CMD_OP_ATTACH_TO_MCG", value: 2054, isUnsigned: true)
!12081 = !DIEnumerator(name: "MLX5_CMD_OP_DETACH_FROM_MCG", value: 2055, isUnsigned: true)
!12082 = !DIEnumerator(name: "MLX5_CMD_OP_GET_DROPPED_PACKET_LOG", value: 2058, isUnsigned: true)
!12083 = !DIEnumerator(name: "MLX5_CMD_OP_MAD_IFC", value: 1293, isUnsigned: true)
!12084 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_MAD_DEMUX", value: 2059, isUnsigned: true)
!12085 = !DIEnumerator(name: "MLX5_CMD_OP_SET_MAD_DEMUX", value: 2060, isUnsigned: true)
!12086 = !DIEnumerator(name: "MLX5_CMD_OP_NOP", value: 2061, isUnsigned: true)
!12087 = !DIEnumerator(name: "MLX5_CMD_OP_ALLOC_XRCD", value: 2062, isUnsigned: true)
!12088 = !DIEnumerator(name: "MLX5_CMD_OP_DEALLOC_XRCD", value: 2063, isUnsigned: true)
!12089 = !DIEnumerator(name: "MLX5_CMD_OP_ALLOC_TRANSPORT_DOMAIN", value: 2070, isUnsigned: true)
!12090 = !DIEnumerator(name: "MLX5_CMD_OP_DEALLOC_TRANSPORT_DOMAIN", value: 2071, isUnsigned: true)
!12091 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_CONG_STATUS", value: 2082, isUnsigned: true)
!12092 = !DIEnumerator(name: "MLX5_CMD_OP_MODIFY_CONG_STATUS", value: 2083, isUnsigned: true)
!12093 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_CONG_PARAMS", value: 2084, isUnsigned: true)
!12094 = !DIEnumerator(name: "MLX5_CMD_OP_MODIFY_CONG_PARAMS", value: 2085, isUnsigned: true)
!12095 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_CONG_STATISTICS", value: 2086, isUnsigned: true)
!12096 = !DIEnumerator(name: "MLX5_CMD_OP_ADD_VXLAN_UDP_DPORT", value: 2087, isUnsigned: true)
!12097 = !DIEnumerator(name: "MLX5_CMD_OP_DELETE_VXLAN_UDP_DPORT", value: 2088, isUnsigned: true)
!12098 = !DIEnumerator(name: "MLX5_CMD_OP_SET_L2_TABLE_ENTRY", value: 2089, isUnsigned: true)
!12099 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_L2_TABLE_ENTRY", value: 2090, isUnsigned: true)
!12100 = !DIEnumerator(name: "MLX5_CMD_OP_DELETE_L2_TABLE_ENTRY", value: 2091, isUnsigned: true)
!12101 = !DIEnumerator(name: "MLX5_CMD_OP_SET_WOL_ROL", value: 2096, isUnsigned: true)
!12102 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_WOL_ROL", value: 2097, isUnsigned: true)
!12103 = !DIEnumerator(name: "MLX5_CMD_OP_CREATE_LAG", value: 2112, isUnsigned: true)
!12104 = !DIEnumerator(name: "MLX5_CMD_OP_MODIFY_LAG", value: 2113, isUnsigned: true)
!12105 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_LAG", value: 2114, isUnsigned: true)
!12106 = !DIEnumerator(name: "MLX5_CMD_OP_DESTROY_LAG", value: 2115, isUnsigned: true)
!12107 = !DIEnumerator(name: "MLX5_CMD_OP_CREATE_VPORT_LAG", value: 2116, isUnsigned: true)
!12108 = !DIEnumerator(name: "MLX5_CMD_OP_DESTROY_VPORT_LAG", value: 2117, isUnsigned: true)
!12109 = !DIEnumerator(name: "MLX5_CMD_OP_CREATE_TIR", value: 2304, isUnsigned: true)
!12110 = !DIEnumerator(name: "MLX5_CMD_OP_MODIFY_TIR", value: 2305, isUnsigned: true)
!12111 = !DIEnumerator(name: "MLX5_CMD_OP_DESTROY_TIR", value: 2306, isUnsigned: true)
!12112 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_TIR", value: 2307, isUnsigned: true)
!12113 = !DIEnumerator(name: "MLX5_CMD_OP_CREATE_SQ", value: 2308, isUnsigned: true)
!12114 = !DIEnumerator(name: "MLX5_CMD_OP_MODIFY_SQ", value: 2309, isUnsigned: true)
!12115 = !DIEnumerator(name: "MLX5_CMD_OP_DESTROY_SQ", value: 2310, isUnsigned: true)
!12116 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_SQ", value: 2311, isUnsigned: true)
!12117 = !DIEnumerator(name: "MLX5_CMD_OP_CREATE_RQ", value: 2312, isUnsigned: true)
!12118 = !DIEnumerator(name: "MLX5_CMD_OP_MODIFY_RQ", value: 2313, isUnsigned: true)
!12119 = !DIEnumerator(name: "MLX5_CMD_OP_SET_DELAY_DROP_PARAMS", value: 2320, isUnsigned: true)
!12120 = !DIEnumerator(name: "MLX5_CMD_OP_DESTROY_RQ", value: 2314, isUnsigned: true)
!12121 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_RQ", value: 2315, isUnsigned: true)
!12122 = !DIEnumerator(name: "MLX5_CMD_OP_CREATE_RMP", value: 2316, isUnsigned: true)
!12123 = !DIEnumerator(name: "MLX5_CMD_OP_MODIFY_RMP", value: 2317, isUnsigned: true)
!12124 = !DIEnumerator(name: "MLX5_CMD_OP_DESTROY_RMP", value: 2318, isUnsigned: true)
!12125 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_RMP", value: 2319, isUnsigned: true)
!12126 = !DIEnumerator(name: "MLX5_CMD_OP_CREATE_TIS", value: 2322, isUnsigned: true)
!12127 = !DIEnumerator(name: "MLX5_CMD_OP_MODIFY_TIS", value: 2323, isUnsigned: true)
!12128 = !DIEnumerator(name: "MLX5_CMD_OP_DESTROY_TIS", value: 2324, isUnsigned: true)
!12129 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_TIS", value: 2325, isUnsigned: true)
!12130 = !DIEnumerator(name: "MLX5_CMD_OP_CREATE_RQT", value: 2326, isUnsigned: true)
!12131 = !DIEnumerator(name: "MLX5_CMD_OP_MODIFY_RQT", value: 2327, isUnsigned: true)
!12132 = !DIEnumerator(name: "MLX5_CMD_OP_DESTROY_RQT", value: 2328, isUnsigned: true)
!12133 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_RQT", value: 2329, isUnsigned: true)
!12134 = !DIEnumerator(name: "MLX5_CMD_OP_SET_FLOW_TABLE_ROOT", value: 2351, isUnsigned: true)
!12135 = !DIEnumerator(name: "MLX5_CMD_OP_CREATE_FLOW_TABLE", value: 2352, isUnsigned: true)
!12136 = !DIEnumerator(name: "MLX5_CMD_OP_DESTROY_FLOW_TABLE", value: 2353, isUnsigned: true)
!12137 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_FLOW_TABLE", value: 2354, isUnsigned: true)
!12138 = !DIEnumerator(name: "MLX5_CMD_OP_CREATE_FLOW_GROUP", value: 2355, isUnsigned: true)
!12139 = !DIEnumerator(name: "MLX5_CMD_OP_DESTROY_FLOW_GROUP", value: 2356, isUnsigned: true)
!12140 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_FLOW_GROUP", value: 2357, isUnsigned: true)
!12141 = !DIEnumerator(name: "MLX5_CMD_OP_SET_FLOW_TABLE_ENTRY", value: 2358, isUnsigned: true)
!12142 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_FLOW_TABLE_ENTRY", value: 2359, isUnsigned: true)
!12143 = !DIEnumerator(name: "MLX5_CMD_OP_DELETE_FLOW_TABLE_ENTRY", value: 2360, isUnsigned: true)
!12144 = !DIEnumerator(name: "MLX5_CMD_OP_ALLOC_FLOW_COUNTER", value: 2361, isUnsigned: true)
!12145 = !DIEnumerator(name: "MLX5_CMD_OP_DEALLOC_FLOW_COUNTER", value: 2362, isUnsigned: true)
!12146 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_FLOW_COUNTER", value: 2363, isUnsigned: true)
!12147 = !DIEnumerator(name: "MLX5_CMD_OP_MODIFY_FLOW_TABLE", value: 2364, isUnsigned: true)
!12148 = !DIEnumerator(name: "MLX5_CMD_OP_ALLOC_PACKET_REFORMAT_CONTEXT", value: 2365, isUnsigned: true)
!12149 = !DIEnumerator(name: "MLX5_CMD_OP_DEALLOC_PACKET_REFORMAT_CONTEXT", value: 2366, isUnsigned: true)
!12150 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_PACKET_REFORMAT_CONTEXT", value: 2367, isUnsigned: true)
!12151 = !DIEnumerator(name: "MLX5_CMD_OP_ALLOC_MODIFY_HEADER_CONTEXT", value: 2368, isUnsigned: true)
!12152 = !DIEnumerator(name: "MLX5_CMD_OP_DEALLOC_MODIFY_HEADER_CONTEXT", value: 2369, isUnsigned: true)
!12153 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_MODIFY_HEADER_CONTEXT", value: 2370, isUnsigned: true)
!12154 = !DIEnumerator(name: "MLX5_CMD_OP_FPGA_CREATE_QP", value: 2400, isUnsigned: true)
!12155 = !DIEnumerator(name: "MLX5_CMD_OP_FPGA_MODIFY_QP", value: 2401, isUnsigned: true)
!12156 = !DIEnumerator(name: "MLX5_CMD_OP_FPGA_QUERY_QP", value: 2402, isUnsigned: true)
!12157 = !DIEnumerator(name: "MLX5_CMD_OP_FPGA_DESTROY_QP", value: 2403, isUnsigned: true)
!12158 = !DIEnumerator(name: "MLX5_CMD_OP_FPGA_QUERY_QP_COUNTERS", value: 2404, isUnsigned: true)
!12159 = !DIEnumerator(name: "MLX5_CMD_OP_CREATE_GENERAL_OBJECT", value: 2560, isUnsigned: true)
!12160 = !DIEnumerator(name: "MLX5_CMD_OP_MODIFY_GENERAL_OBJECT", value: 2561, isUnsigned: true)
!12161 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_GENERAL_OBJECT", value: 2562, isUnsigned: true)
!12162 = !DIEnumerator(name: "MLX5_CMD_OP_DESTROY_GENERAL_OBJECT", value: 2563, isUnsigned: true)
!12163 = !DIEnumerator(name: "MLX5_CMD_OP_CREATE_UCTX", value: 2564, isUnsigned: true)
!12164 = !DIEnumerator(name: "MLX5_CMD_OP_DESTROY_UCTX", value: 2566, isUnsigned: true)
!12165 = !DIEnumerator(name: "MLX5_CMD_OP_CREATE_UMEM", value: 2568, isUnsigned: true)
!12166 = !DIEnumerator(name: "MLX5_CMD_OP_DESTROY_UMEM", value: 2570, isUnsigned: true)
!12167 = !DIEnumerator(name: "MLX5_CMD_OP_SYNC_STEERING", value: 2816, isUnsigned: true)
!12168 = !DIEnumerator(name: "MLX5_CMD_OP_MAX", value: 2817, isUnsigned: true)
!12169 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !10705, line: 5763, baseType: !199, size: 32, elements: !12170)
!12170 = !{!12171, !12172, !12173}
!12171 = !DIEnumerator(name: "MLX5_ACTION_TYPE_SET", value: 1, isUnsigned: true)
!12172 = !DIEnumerator(name: "MLX5_ACTION_TYPE_ADD", value: 2, isUnsigned: true)
!12173 = !DIEnumerator(name: "MLX5_ACTION_TYPE_COPY", value: 3, isUnsigned: true)
!12174 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !10705, line: 5769, baseType: !199, size: 32, elements: !12175)
!12175 = !{!12176, !12177, !12178, !12179, !12180, !12181, !12182, !12183, !12184, !12185, !12186, !12187, !12188, !12189, !12190, !12191, !12192, !12193, !12194, !12195, !12196, !12197, !12198, !12199, !12200, !12201, !12202, !12203, !12204, !12205, !12206, !12207, !12208, !12209, !12210, !12211, !12212}
!12176 = !DIEnumerator(name: "MLX5_ACTION_IN_FIELD_OUT_SMAC_47_16", value: 1, isUnsigned: true)
!12177 = !DIEnumerator(name: "MLX5_ACTION_IN_FIELD_OUT_SMAC_15_0", value: 2, isUnsigned: true)
!12178 = !DIEnumerator(name: "MLX5_ACTION_IN_FIELD_OUT_ETHERTYPE", value: 3, isUnsigned: true)
!12179 = !DIEnumerator(name: "MLX5_ACTION_IN_FIELD_OUT_DMAC_47_16", value: 4, isUnsigned: true)
!12180 = !DIEnumerator(name: "MLX5_ACTION_IN_FIELD_OUT_DMAC_15_0", value: 5, isUnsigned: true)
!12181 = !DIEnumerator(name: "MLX5_ACTION_IN_FIELD_OUT_IP_DSCP", value: 6, isUnsigned: true)
!12182 = !DIEnumerator(name: "MLX5_ACTION_IN_FIELD_OUT_TCP_FLAGS", value: 7, isUnsigned: true)
!12183 = !DIEnumerator(name: "MLX5_ACTION_IN_FIELD_OUT_TCP_SPORT", value: 8, isUnsigned: true)
!12184 = !DIEnumerator(name: "MLX5_ACTION_IN_FIELD_OUT_TCP_DPORT", value: 9, isUnsigned: true)
!12185 = !DIEnumerator(name: "MLX5_ACTION_IN_FIELD_OUT_IP_TTL", value: 10, isUnsigned: true)
!12186 = !DIEnumerator(name: "MLX5_ACTION_IN_FIELD_OUT_UDP_SPORT", value: 11, isUnsigned: true)
!12187 = !DIEnumerator(name: "MLX5_ACTION_IN_FIELD_OUT_UDP_DPORT", value: 12, isUnsigned: true)
!12188 = !DIEnumerator(name: "MLX5_ACTION_IN_FIELD_OUT_SIPV6_127_96", value: 13, isUnsigned: true)
!12189 = !DIEnumerator(name: "MLX5_ACTION_IN_FIELD_OUT_SIPV6_95_64", value: 14, isUnsigned: true)
!12190 = !DIEnumerator(name: "MLX5_ACTION_IN_FIELD_OUT_SIPV6_63_32", value: 15, isUnsigned: true)
!12191 = !DIEnumerator(name: "MLX5_ACTION_IN_FIELD_OUT_SIPV6_31_0", value: 16, isUnsigned: true)
!12192 = !DIEnumerator(name: "MLX5_ACTION_IN_FIELD_OUT_DIPV6_127_96", value: 17, isUnsigned: true)
!12193 = !DIEnumerator(name: "MLX5_ACTION_IN_FIELD_OUT_DIPV6_95_64", value: 18, isUnsigned: true)
!12194 = !DIEnumerator(name: "MLX5_ACTION_IN_FIELD_OUT_DIPV6_63_32", value: 19, isUnsigned: true)
!12195 = !DIEnumerator(name: "MLX5_ACTION_IN_FIELD_OUT_DIPV6_31_0", value: 20, isUnsigned: true)
!12196 = !DIEnumerator(name: "MLX5_ACTION_IN_FIELD_OUT_SIPV4", value: 21, isUnsigned: true)
!12197 = !DIEnumerator(name: "MLX5_ACTION_IN_FIELD_OUT_DIPV4", value: 22, isUnsigned: true)
!12198 = !DIEnumerator(name: "MLX5_ACTION_IN_FIELD_OUT_FIRST_VID", value: 23, isUnsigned: true)
!12199 = !DIEnumerator(name: "MLX5_ACTION_IN_FIELD_OUT_IPV6_HOPLIMIT", value: 71, isUnsigned: true)
!12200 = !DIEnumerator(name: "MLX5_ACTION_IN_FIELD_METADATA_REG_A", value: 73, isUnsigned: true)
!12201 = !DIEnumerator(name: "MLX5_ACTION_IN_FIELD_METADATA_REG_B", value: 80, isUnsigned: true)
!12202 = !DIEnumerator(name: "MLX5_ACTION_IN_FIELD_METADATA_REG_C_0", value: 81, isUnsigned: true)
!12203 = !DIEnumerator(name: "MLX5_ACTION_IN_FIELD_METADATA_REG_C_1", value: 82, isUnsigned: true)
!12204 = !DIEnumerator(name: "MLX5_ACTION_IN_FIELD_METADATA_REG_C_2", value: 83, isUnsigned: true)
!12205 = !DIEnumerator(name: "MLX5_ACTION_IN_FIELD_METADATA_REG_C_3", value: 84, isUnsigned: true)
!12206 = !DIEnumerator(name: "MLX5_ACTION_IN_FIELD_METADATA_REG_C_4", value: 85, isUnsigned: true)
!12207 = !DIEnumerator(name: "MLX5_ACTION_IN_FIELD_METADATA_REG_C_5", value: 86, isUnsigned: true)
!12208 = !DIEnumerator(name: "MLX5_ACTION_IN_FIELD_METADATA_REG_C_6", value: 87, isUnsigned: true)
!12209 = !DIEnumerator(name: "MLX5_ACTION_IN_FIELD_METADATA_REG_C_7", value: 88, isUnsigned: true)
!12210 = !DIEnumerator(name: "MLX5_ACTION_IN_FIELD_OUT_TCP_SEQ_NUM", value: 89, isUnsigned: true)
!12211 = !DIEnumerator(name: "MLX5_ACTION_IN_FIELD_OUT_TCP_ACK_NUM", value: 91, isUnsigned: true)
!12212 = !DIEnumerator(name: "MLX5_ACTION_IN_FIELD_IPSEC_SYNDROME", value: 93, isUnsigned: true)
!12213 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mlx5_devcom_components", file: !12214, line: 9, baseType: !199, size: 32, elements: !12215)
!12214 = !DIFile(filename: "drivers/net/ethernet/mellanox/mlx5/core/lib/devcom.h", directory: "/home/lizy2001/genbc/linux")
!12215 = !{!12216, !12217}
!12216 = !DIEnumerator(name: "MLX5_DEVCOM_ESW_OFFLOADS", value: 0, isUnsigned: true)
!12217 = !DIEnumerator(name: "MLX5_DEVCOM_NUM_COMPONENTS", value: 1, isUnsigned: true)
!12218 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mlx5_inline_modes", file: !10469, line: 164, baseType: !199, size: 32, elements: !12219)
!12219 = !{!12220, !12221, !12222, !12223}
!12220 = !DIEnumerator(name: "MLX5_INLINE_MODE_NONE", value: 0, isUnsigned: true)
!12221 = !DIEnumerator(name: "MLX5_INLINE_MODE_L2", value: 1, isUnsigned: true)
!12222 = !DIEnumerator(name: "MLX5_INLINE_MODE_IP", value: 2, isUnsigned: true)
!12223 = !DIEnumerator(name: "MLX5_INLINE_MODE_TCP_UDP", value: 3, isUnsigned: true)
!12224 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !10877, line: 48, baseType: !199, size: 32, elements: !12225)
!12225 = !{!12226, !12227, !12228, !12229}
!12226 = !DIEnumerator(name: "MLX5_FLOW_TABLE_TUNNEL_EN_REFORMAT", value: 1, isUnsigned: true)
!12227 = !DIEnumerator(name: "MLX5_FLOW_TABLE_TUNNEL_EN_DECAP", value: 2, isUnsigned: true)
!12228 = !DIEnumerator(name: "MLX5_FLOW_TABLE_TERMINATION", value: 4, isUnsigned: true)
!12229 = !DIEnumerator(name: "MLX5_FLOW_TABLE_UNMANAGED", value: 8, isUnsigned: true)
!12230 = !{!745, !2037, !231, !2019, !10624, !229, !628, !159, !12231, !6, !12233, !12234, !7, !135, !12235, !12241, !12254, !12256, !120, !12258, !12260, !12262, !12264, !12269, !1267, !12270, !12273}
!12231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12232, size: 64)
!12232 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !31, line: 102, baseType: !1403)
!12233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10381, size: 64)
!12234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11469, size: 64)
!12235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12236, size: 64)
!12236 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12237)
!12237 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__una_u32", file: !12238, line: 7, size: 32, elements: !12239)
!12238 = !DIFile(filename: "./include/linux/unaligned/packed_struct.h", directory: "/home/lizy2001/genbc/linux")
!12239 = !{!12240}
!12240 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !12237, file: !12238, line: 7, baseType: !229, size: 32)
!12241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12242, size: 64)
!12242 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_vport_table", file: !3, line: 76, size: 320, elements: !12243)
!12243 = !{!12244, !12245, !12246, !12247}
!12244 = !DIDerivedType(tag: DW_TAG_member, name: "hlist", scope: !12242, file: !3, line: 77, baseType: !455, size: 128)
!12245 = !DIDerivedType(tag: DW_TAG_member, name: "fdb", scope: !12242, file: !3, line: 78, baseType: !10734, size: 64, offset: 128)
!12246 = !DIDerivedType(tag: DW_TAG_member, name: "num_rules", scope: !12242, file: !3, line: 79, baseType: !229, size: 32, offset: 192)
!12247 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !12242, file: !3, line: 80, baseType: !12248, size: 80, offset: 224)
!12248 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_vport_key", file: !3, line: 63, size: 80, elements: !12249)
!12249 = !{!12250, !12251, !12252, !12253}
!12250 = !DIDerivedType(tag: DW_TAG_member, name: "chain", scope: !12248, file: !3, line: 64, baseType: !229, size: 32)
!12251 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !12248, file: !3, line: 65, baseType: !744, size: 16, offset: 32)
!12252 = !DIDerivedType(tag: DW_TAG_member, name: "vport", scope: !12248, file: !3, line: 66, baseType: !744, size: 16, offset: 48)
!12253 = !DIDerivedType(tag: DW_TAG_member, name: "vhca_id", scope: !12248, file: !3, line: 67, baseType: !744, size: 16, offset: 64)
!12254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12255, size: 64)
!12255 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !454)
!12256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12257, size: 64)
!12257 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !459)
!12258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12259, size: 64)
!12259 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !6)
!12260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12261, size: 64)
!12261 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !229)
!12262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12263, size: 64)
!12263 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !34)
!12264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12265, size: 64)
!12265 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_host_work", file: !9, line: 229, size: 320, elements: !12266)
!12266 = !{!12267, !12268}
!12267 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !12265, file: !9, line: 230, baseType: !1728, size: 256)
!12268 = !DIDerivedType(tag: DW_TAG_member, name: "esw", scope: !12265, file: !9, line: 231, baseType: !7, size: 64, offset: 256)
!12269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1267, size: 64)
!12270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12271, size: 64)
!12271 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12272)
!12272 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !347)
!12273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12274, size: 64)
!12274 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12259)
!12275 = !{!0, !12276, !12282, !12287, !12292, !12298, !12300, !12303, !12308, !12316, !12321, !12326, !12330}
!12276 = !DIGlobalVariableExpression(var: !12277, expr: !DIExpression())
!12277 = distinct !DIGlobalVariable(name: "__msg", scope: !12278, file: !3, line: 2571, type: !12279, isLocal: true, isDefinition: true)
!12278 = distinct !DISubprogram(name: "mlx5_devlink_eswitch_inline_mode_set", scope: !3, file: !3, line: 2548, type: !4036, scopeLine: 2550, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!12279 = !DICompositeType(tag: DW_TAG_array_type, baseType: !27, size: 288, elements: !12280)
!12280 = !{!12281}
!12281 = !DISubrange(count: 36)
!12282 = !DIGlobalVariableExpression(var: !12283, expr: !DIExpression())
!12283 = distinct !DIGlobalVariable(name: "__msg", scope: !12278, file: !3, line: 2579, type: !12284, isLocal: true, isDefinition: true)
!12284 = !DICompositeType(tag: DW_TAG_array_type, baseType: !27, size: 472, elements: !12285)
!12285 = !{!12286}
!12286 = !DISubrange(count: 59)
!12287 = !DIGlobalVariableExpression(var: !12288, expr: !DIExpression())
!12288 = distinct !DIGlobalVariable(name: "__msg", scope: !12278, file: !3, line: 2592, type: !12289, isLocal: true, isDefinition: true)
!12289 = !DICompositeType(tag: DW_TAG_array_type, baseType: !27, size: 360, elements: !12290)
!12290 = !{!12291}
!12291 = !DISubrange(count: 45)
!12292 = !DIGlobalVariableExpression(var: !12293, expr: !DIExpression())
!12293 = distinct !DIGlobalVariable(name: "__msg", scope: !12294, file: !3, line: 2671, type: !12295, isLocal: true, isDefinition: true)
!12294 = distinct !DISubprogram(name: "mlx5_devlink_eswitch_encap_mode_set", scope: !3, file: !3, line: 2633, type: !4049, scopeLine: 2636, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!12295 = !DICompositeType(tag: DW_TAG_array_type, baseType: !27, size: 488, elements: !12296)
!12296 = !{!12297}
!12297 = !DISubrange(count: 61)
!12298 = !DIGlobalVariableExpression(var: !12299, expr: !DIExpression())
!12299 = distinct !DIGlobalVariable(name: "__msg", scope: !12294, file: !3, line: 2684, type: !12289, isLocal: true, isDefinition: true)
!12300 = !DIGlobalVariableExpression(var: !12301, expr: !DIExpression())
!12301 = distinct !DIGlobalVariable(name: "__key", scope: !12302, file: !3, line: 2178, type: !461, isLocal: true, isDefinition: true)
!12302 = distinct !DISubprogram(name: "esw_offloads_steering_init", scope: !3, file: !3, line: 2173, type: !4, scopeLine: 2174, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!12303 = !DIGlobalVariableExpression(var: !12304, expr: !DIExpression())
!12304 = distinct !DIGlobalVariable(name: "__key", scope: !12305, file: !3, line: 1999, type: !461, isLocal: true, isDefinition: true)
!12305 = distinct !DISubprogram(name: "esw_offloads_devcom_init", scope: !3, file: !3, line: 1994, type: !12306, scopeLine: 1995, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!12306 = !DISubroutineType(types: !12307)
!12307 = !{null, !7}
!12308 = !DIGlobalVariableExpression(var: !12309, expr: !DIExpression())
!12309 = distinct !DIGlobalVariable(name: "__msg", scope: !12310, file: !3, line: 1746, type: !12313, isLocal: true, isDefinition: true)
!12310 = distinct !DISubprogram(name: "esw_offloads_start", scope: !3, file: !3, line: 1737, type: !12311, scopeLine: 1739, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!12311 = !DISubroutineType(types: !12312)
!12312 = !{!6, !7, !2496}
!12313 = !DICompositeType(tag: DW_TAG_array_type, baseType: !27, size: 368, elements: !12314)
!12314 = !{!12315}
!12315 = !DISubrange(count: 46)
!12316 = !DIGlobalVariableExpression(var: !12317, expr: !DIExpression())
!12317 = distinct !DIGlobalVariable(name: "__msg", scope: !12310, file: !3, line: 1751, type: !12318, isLocal: true, isDefinition: true)
!12318 = !DICompositeType(tag: DW_TAG_array_type, baseType: !27, size: 392, elements: !12319)
!12319 = !{!12320}
!12320 = !DISubrange(count: 49)
!12321 = !DIGlobalVariableExpression(var: !12322, expr: !DIExpression())
!12322 = distinct !DIGlobalVariable(name: "__msg", scope: !12310, file: !3, line: 1759, type: !12323, isLocal: true, isDefinition: true)
!12323 = !DICompositeType(tag: DW_TAG_array_type, baseType: !27, size: 408, elements: !12324)
!12324 = !{!12325}
!12325 = !DISubrange(count: 51)
!12326 = !DIGlobalVariableExpression(var: !12327, expr: !DIExpression())
!12327 = distinct !DIGlobalVariable(name: "__msg", scope: !12328, file: !3, line: 2386, type: !12329, isLocal: true, isDefinition: true)
!12328 = distinct !DISubprogram(name: "esw_offloads_stop", scope: !3, file: !3, line: 2377, type: !12311, scopeLine: 2379, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!12329 = !DICompositeType(tag: DW_TAG_array_type, baseType: !27, size: 352, elements: !1204)
!12330 = !DIGlobalVariableExpression(var: !12331, expr: !DIExpression())
!12331 = distinct !DIGlobalVariable(name: "__msg", scope: !12328, file: !3, line: 2390, type: !12323, isLocal: true, isDefinition: true)
!12332 = !{i32 7, !"Dwarf Version", i32 4}
!12333 = !{i32 2, !"Debug Info Version", i32 3}
!12334 = !{i32 1, !"wchar_size", i32 2}
!12335 = !{i32 1, !"Code Model", i32 2}
!12336 = !{!"clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)"}
!12337 = distinct !DISubprogram(name: "mlx5_esw_vport_tbl_get", scope: !3, file: !3, line: 197, type: !4, scopeLine: 198, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!12338 = !DILocalVariable(name: "esw", arg: 1, scope: !12337, file: !3, line: 197, type: !7)
!12339 = !DILocation(line: 197, column: 49, scope: !12337)
!12340 = !DILocalVariable(name: "attr", scope: !12337, file: !3, line: 199, type: !12341)
!12341 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_vport_tbl_attr", file: !3, line: 70, size: 48, elements: !12342)
!12342 = !{!12343, !12344, !12345}
!12343 = !DIDerivedType(tag: DW_TAG_member, name: "chain", scope: !12341, file: !3, line: 71, baseType: !744, size: 16)
!12344 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !12341, file: !3, line: 72, baseType: !744, size: 16, offset: 16)
!12345 = !DIDerivedType(tag: DW_TAG_member, name: "vport", scope: !12341, file: !3, line: 73, baseType: !744, size: 16, offset: 32)
!12346 = !DILocation(line: 199, column: 29, scope: !12337)
!12347 = !DILocalVariable(name: "fdb", scope: !12337, file: !3, line: 200, type: !10734)
!12348 = !DILocation(line: 200, column: 26, scope: !12337)
!12349 = !DILocalVariable(name: "vport", scope: !12337, file: !3, line: 201, type: !11306)
!12350 = !DILocation(line: 201, column: 21, scope: !12337)
!12351 = !DILocalVariable(name: "i", scope: !12337, file: !3, line: 202, type: !6)
!12352 = !DILocation(line: 202, column: 6, scope: !12337)
!12353 = !DILocation(line: 204, column: 7, scope: !12337)
!12354 = !DILocation(line: 204, column: 13, scope: !12337)
!12355 = !DILocation(line: 205, column: 7, scope: !12337)
!12356 = !DILocation(line: 205, column: 12, scope: !12337)
!12357 = !DILocation(line: 206, column: 2, scope: !12358)
!12358 = distinct !DILexicalBlock(scope: !12337, file: !3, line: 206, column: 2)
!12359 = !DILocation(line: 206, column: 2, scope: !12360)
!12360 = distinct !DILexicalBlock(scope: !12358, file: !3, line: 206, column: 2)
!12361 = !DILocation(line: 207, column: 16, scope: !12362)
!12362 = distinct !DILexicalBlock(scope: !12360, file: !3, line: 206, column: 41)
!12363 = !DILocation(line: 207, column: 23, scope: !12362)
!12364 = !DILocation(line: 207, column: 8, scope: !12362)
!12365 = !DILocation(line: 207, column: 14, scope: !12362)
!12366 = !DILocation(line: 208, column: 27, scope: !12362)
!12367 = !DILocation(line: 208, column: 9, scope: !12362)
!12368 = !DILocation(line: 208, column: 7, scope: !12362)
!12369 = !DILocation(line: 209, column: 14, scope: !12370)
!12370 = distinct !DILexicalBlock(scope: !12362, file: !3, line: 209, column: 7)
!12371 = !DILocation(line: 209, column: 7, scope: !12370)
!12372 = !DILocation(line: 209, column: 7, scope: !12362)
!12373 = !DILocation(line: 210, column: 4, scope: !12370)
!12374 = !DILocation(line: 211, column: 2, scope: !12362)
!12375 = distinct !{!12375, !12357, !12376}
!12376 = !DILocation(line: 211, column: 2, scope: !12358)
!12377 = !DILocation(line: 212, column: 2, scope: !12337)
!12378 = !DILabel(scope: !12337, name: "out", file: !3, line: 214)
!12379 = !DILocation(line: 214, column: 1, scope: !12337)
!12380 = !DILocation(line: 215, column: 25, scope: !12337)
!12381 = !DILocation(line: 215, column: 2, scope: !12337)
!12382 = !DILocation(line: 216, column: 17, scope: !12337)
!12383 = !DILocation(line: 216, column: 9, scope: !12337)
!12384 = !DILocation(line: 216, column: 2, scope: !12337)
!12385 = !DILocation(line: 217, column: 1, scope: !12337)
!12386 = distinct !DISubprogram(name: "esw_vport_tbl_get", scope: !3, file: !3, line: 148, type: !12387, scopeLine: 149, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!12387 = !DISubroutineType(types: !12388)
!12388 = !{!10734, !7, !12389}
!12389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12341, size: 64)
!12390 = !DILocalVariable(name: "esw", arg: 1, scope: !12386, file: !3, line: 148, type: !7)
!12391 = !DILocation(line: 148, column: 40, scope: !12386)
!12392 = !DILocalVariable(name: "attr", arg: 2, scope: !12386, file: !3, line: 148, type: !12389)
!12393 = !DILocation(line: 148, column: 73, scope: !12386)
!12394 = !DILocalVariable(name: "dev", scope: !12386, file: !3, line: 150, type: !12)
!12395 = !DILocation(line: 150, column: 24, scope: !12386)
!12396 = !DILocation(line: 150, column: 30, scope: !12386)
!12397 = !DILocation(line: 150, column: 35, scope: !12386)
!12398 = !DILocalVariable(name: "ns", scope: !12386, file: !3, line: 151, type: !10774)
!12399 = !DILocation(line: 151, column: 30, scope: !12386)
!12400 = !DILocalVariable(name: "fdb", scope: !12386, file: !3, line: 152, type: !10734)
!12401 = !DILocation(line: 152, column: 26, scope: !12386)
!12402 = !DILocalVariable(name: "e", scope: !12386, file: !3, line: 153, type: !12241)
!12403 = !DILocation(line: 153, column: 27, scope: !12386)
!12404 = !DILocalVariable(name: "skey", scope: !12386, file: !3, line: 154, type: !12248)
!12405 = !DILocation(line: 154, column: 24, scope: !12386)
!12406 = !DILocalVariable(name: "hkey", scope: !12386, file: !3, line: 155, type: !229)
!12407 = !DILocation(line: 155, column: 6, scope: !12386)
!12408 = !DILocation(line: 157, column: 14, scope: !12386)
!12409 = !DILocation(line: 157, column: 19, scope: !12386)
!12410 = !DILocation(line: 157, column: 29, scope: !12386)
!12411 = !DILocation(line: 157, column: 38, scope: !12386)
!12412 = !DILocation(line: 157, column: 45, scope: !12386)
!12413 = !DILocation(line: 157, column: 2, scope: !12386)
!12414 = !DILocation(line: 158, column: 32, scope: !12386)
!12415 = !DILocation(line: 158, column: 37, scope: !12386)
!12416 = !DILocation(line: 158, column: 9, scope: !12386)
!12417 = !DILocation(line: 158, column: 7, scope: !12386)
!12418 = !DILocation(line: 159, column: 27, scope: !12386)
!12419 = !DILocation(line: 159, column: 39, scope: !12386)
!12420 = !DILocation(line: 159, column: 6, scope: !12386)
!12421 = !DILocation(line: 159, column: 4, scope: !12386)
!12422 = !DILocation(line: 160, column: 6, scope: !12423)
!12423 = distinct !DILexicalBlock(scope: !12386, file: !3, line: 160, column: 6)
!12424 = !DILocation(line: 160, column: 6, scope: !12386)
!12425 = !DILocation(line: 161, column: 3, scope: !12426)
!12426 = distinct !DILexicalBlock(scope: !12423, file: !3, line: 160, column: 9)
!12427 = !DILocation(line: 161, column: 6, scope: !12426)
!12428 = !DILocation(line: 161, column: 15, scope: !12426)
!12429 = !DILocation(line: 162, column: 3, scope: !12426)
!12430 = !DILocation(line: 165, column: 6, scope: !12386)
!12431 = !DILocation(line: 165, column: 4, scope: !12386)
!12432 = !DILocation(line: 166, column: 7, scope: !12433)
!12433 = distinct !DILexicalBlock(scope: !12386, file: !3, line: 166, column: 6)
!12434 = !DILocation(line: 166, column: 6, scope: !12386)
!12435 = !DILocation(line: 167, column: 9, scope: !12436)
!12436 = distinct !DILexicalBlock(scope: !12433, file: !3, line: 166, column: 10)
!12437 = !DILocation(line: 167, column: 7, scope: !12436)
!12438 = !DILocation(line: 168, column: 3, scope: !12436)
!12439 = !DILocation(line: 171, column: 31, scope: !12386)
!12440 = !DILocation(line: 171, column: 7, scope: !12386)
!12441 = !DILocation(line: 171, column: 5, scope: !12386)
!12442 = !DILocation(line: 172, column: 7, scope: !12443)
!12443 = distinct !DILexicalBlock(scope: !12386, file: !3, line: 172, column: 6)
!12444 = !DILocation(line: 172, column: 6, scope: !12386)
!12445 = !DILocation(line: 173, column: 3, scope: !12446)
!12446 = distinct !DILexicalBlock(scope: !12443, file: !3, line: 172, column: 11)
!12447 = !DILocation(line: 174, column: 9, scope: !12446)
!12448 = !DILocation(line: 174, column: 7, scope: !12446)
!12449 = !DILocation(line: 175, column: 3, scope: !12446)
!12450 = !DILocation(line: 178, column: 29, scope: !12386)
!12451 = !DILocation(line: 178, column: 34, scope: !12386)
!12452 = !DILocation(line: 178, column: 8, scope: !12386)
!12453 = !DILocation(line: 178, column: 6, scope: !12386)
!12454 = !DILocation(line: 179, column: 13, scope: !12455)
!12455 = distinct !DILexicalBlock(scope: !12386, file: !3, line: 179, column: 6)
!12456 = !DILocation(line: 179, column: 6, scope: !12455)
!12457 = !DILocation(line: 179, column: 6, scope: !12386)
!12458 = !DILocation(line: 180, column: 3, scope: !12455)
!12459 = !DILocation(line: 182, column: 11, scope: !12386)
!12460 = !DILocation(line: 182, column: 2, scope: !12386)
!12461 = !DILocation(line: 182, column: 5, scope: !12386)
!12462 = !DILocation(line: 182, column: 9, scope: !12386)
!12463 = !DILocation(line: 183, column: 2, scope: !12386)
!12464 = !DILocation(line: 183, column: 5, scope: !12386)
!12465 = !DILocation(line: 183, column: 15, scope: !12386)
!12466 = !DILocation(line: 184, column: 2, scope: !12386)
!12467 = !DILocation(line: 184, column: 5, scope: !12386)
!12468 = !DILocation(line: 184, column: 11, scope: !12386)
!12469 = !DILocation(line: 185, column: 2, scope: !12386)
!12470 = !DILabel(scope: !12386, name: "out", file: !3, line: 186)
!12471 = !DILocation(line: 186, column: 1, scope: !12386)
!12472 = !DILocation(line: 187, column: 16, scope: !12386)
!12473 = !DILocation(line: 187, column: 21, scope: !12386)
!12474 = !DILocation(line: 187, column: 31, scope: !12386)
!12475 = !DILocation(line: 187, column: 40, scope: !12386)
!12476 = !DILocation(line: 187, column: 47, scope: !12386)
!12477 = !DILocation(line: 187, column: 2, scope: !12386)
!12478 = !DILocation(line: 188, column: 9, scope: !12386)
!12479 = !DILocation(line: 188, column: 12, scope: !12386)
!12480 = !DILocation(line: 188, column: 2, scope: !12386)
!12481 = !DILabel(scope: !12386, name: "err_ns", file: !3, line: 190)
!12482 = !DILocation(line: 190, column: 1, scope: !12386)
!12483 = !DILocation(line: 191, column: 8, scope: !12386)
!12484 = !DILocation(line: 191, column: 2, scope: !12386)
!12485 = !DILabel(scope: !12386, name: "err_alloc", file: !3, line: 192)
!12486 = !DILocation(line: 192, column: 1, scope: !12386)
!12487 = !DILocation(line: 193, column: 16, scope: !12386)
!12488 = !DILocation(line: 193, column: 21, scope: !12386)
!12489 = !DILocation(line: 193, column: 31, scope: !12386)
!12490 = !DILocation(line: 193, column: 40, scope: !12386)
!12491 = !DILocation(line: 193, column: 47, scope: !12386)
!12492 = !DILocation(line: 193, column: 2, scope: !12386)
!12493 = !DILocation(line: 194, column: 9, scope: !12386)
!12494 = !DILocation(line: 194, column: 2, scope: !12386)
!12495 = !DILocation(line: 195, column: 1, scope: !12386)
!12496 = distinct !DISubprogram(name: "IS_ERR", scope: !12497, file: !12497, line: 34, type: !12498, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!12497 = !DIFile(filename: "./include/linux/err.h", directory: "/home/lizy2001/genbc/linux")
!12498 = !DISubroutineType(types: !12499)
!12499 = !{!304, !2454}
!12500 = !DILocalVariable(name: "ptr", arg: 1, scope: !12496, file: !12497, line: 34, type: !2454)
!12501 = !DILocation(line: 34, column: 60, scope: !12496)
!12502 = !DILocation(line: 36, column: 9, scope: !12496)
!12503 = !DILocation(line: 36, column: 2, scope: !12496)
!12504 = distinct !DISubprogram(name: "mlx5_esw_vport_tbl_put", scope: !3, file: !3, line: 219, type: !12306, scopeLine: 220, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!12505 = !DILocalVariable(name: "esw", arg: 1, scope: !12504, file: !3, line: 219, type: !7)
!12506 = !DILocation(line: 219, column: 50, scope: !12504)
!12507 = !DILocalVariable(name: "attr", scope: !12504, file: !3, line: 221, type: !12341)
!12508 = !DILocation(line: 221, column: 29, scope: !12504)
!12509 = !DILocalVariable(name: "vport", scope: !12504, file: !3, line: 222, type: !11306)
!12510 = !DILocation(line: 222, column: 21, scope: !12504)
!12511 = !DILocalVariable(name: "i", scope: !12504, file: !3, line: 223, type: !6)
!12512 = !DILocation(line: 223, column: 6, scope: !12504)
!12513 = !DILocation(line: 225, column: 7, scope: !12504)
!12514 = !DILocation(line: 225, column: 13, scope: !12504)
!12515 = !DILocation(line: 226, column: 7, scope: !12504)
!12516 = !DILocation(line: 226, column: 12, scope: !12504)
!12517 = !DILocation(line: 227, column: 2, scope: !12518)
!12518 = distinct !DILexicalBlock(scope: !12504, file: !3, line: 227, column: 2)
!12519 = !DILocation(line: 227, column: 2, scope: !12520)
!12520 = distinct !DILexicalBlock(scope: !12518, file: !3, line: 227, column: 2)
!12521 = !DILocation(line: 228, column: 16, scope: !12522)
!12522 = distinct !DILexicalBlock(scope: !12520, file: !3, line: 227, column: 41)
!12523 = !DILocation(line: 228, column: 23, scope: !12522)
!12524 = !DILocation(line: 228, column: 8, scope: !12522)
!12525 = !DILocation(line: 228, column: 14, scope: !12522)
!12526 = !DILocation(line: 229, column: 21, scope: !12522)
!12527 = !DILocation(line: 229, column: 3, scope: !12522)
!12528 = !DILocation(line: 230, column: 2, scope: !12522)
!12529 = distinct !{!12529, !12517, !12530}
!12530 = !DILocation(line: 230, column: 2, scope: !12518)
!12531 = !DILocation(line: 231, column: 1, scope: !12504)
!12532 = distinct !DISubprogram(name: "PTR_ERR", scope: !12497, file: !12497, line: 29, type: !12533, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!12533 = !DISubroutineType(types: !12534)
!12534 = !{!120, !2454}
!12535 = !DILocalVariable(name: "ptr", arg: 1, scope: !12532, file: !12497, line: 29, type: !2454)
!12536 = !DILocation(line: 29, column: 61, scope: !12532)
!12537 = !DILocation(line: 31, column: 16, scope: !12532)
!12538 = !DILocation(line: 31, column: 9, scope: !12532)
!12539 = !DILocation(line: 31, column: 2, scope: !12532)
!12540 = distinct !DISubprogram(name: "esw_vport_tbl_put", scope: !3, file: !3, line: 128, type: !12541, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!12541 = !DISubroutineType(types: !12542)
!12542 = !{null, !7, !12389}
!12543 = !DILocalVariable(name: "esw", arg: 1, scope: !12540, file: !3, line: 128, type: !7)
!12544 = !DILocation(line: 128, column: 40, scope: !12540)
!12545 = !DILocalVariable(name: "attr", arg: 2, scope: !12540, file: !3, line: 128, type: !12389)
!12546 = !DILocation(line: 128, column: 73, scope: !12540)
!12547 = !DILocalVariable(name: "e", scope: !12540, file: !3, line: 130, type: !12241)
!12548 = !DILocation(line: 130, column: 27, scope: !12540)
!12549 = !DILocalVariable(name: "key", scope: !12540, file: !3, line: 131, type: !12248)
!12550 = !DILocation(line: 131, column: 24, scope: !12540)
!12551 = !DILocalVariable(name: "hkey", scope: !12540, file: !3, line: 132, type: !229)
!12552 = !DILocation(line: 132, column: 6, scope: !12540)
!12553 = !DILocation(line: 134, column: 14, scope: !12540)
!12554 = !DILocation(line: 134, column: 19, scope: !12540)
!12555 = !DILocation(line: 134, column: 29, scope: !12540)
!12556 = !DILocation(line: 134, column: 38, scope: !12540)
!12557 = !DILocation(line: 134, column: 45, scope: !12540)
!12558 = !DILocation(line: 134, column: 2, scope: !12540)
!12559 = !DILocation(line: 135, column: 32, scope: !12540)
!12560 = !DILocation(line: 135, column: 37, scope: !12540)
!12561 = !DILocation(line: 135, column: 9, scope: !12540)
!12562 = !DILocation(line: 135, column: 7, scope: !12540)
!12563 = !DILocation(line: 136, column: 27, scope: !12540)
!12564 = !DILocation(line: 136, column: 38, scope: !12540)
!12565 = !DILocation(line: 136, column: 6, scope: !12540)
!12566 = !DILocation(line: 136, column: 4, scope: !12540)
!12567 = !DILocation(line: 137, column: 7, scope: !12568)
!12568 = distinct !DILexicalBlock(scope: !12540, file: !3, line: 137, column: 6)
!12569 = !DILocation(line: 137, column: 9, scope: !12568)
!12570 = !DILocation(line: 137, column: 14, scope: !12568)
!12571 = !DILocation(line: 137, column: 17, scope: !12568)
!12572 = !DILocation(line: 137, column: 12, scope: !12568)
!12573 = !DILocation(line: 137, column: 6, scope: !12540)
!12574 = !DILocation(line: 138, column: 3, scope: !12568)
!12575 = !DILocation(line: 140, column: 12, scope: !12540)
!12576 = !DILocation(line: 140, column: 15, scope: !12540)
!12577 = !DILocation(line: 140, column: 2, scope: !12540)
!12578 = !DILocation(line: 141, column: 26, scope: !12540)
!12579 = !DILocation(line: 141, column: 29, scope: !12540)
!12580 = !DILocation(line: 141, column: 2, scope: !12540)
!12581 = !DILocation(line: 142, column: 8, scope: !12540)
!12582 = !DILocation(line: 142, column: 2, scope: !12540)
!12583 = !DILabel(scope: !12540, name: "out", file: !3, line: 143)
!12584 = !DILocation(line: 143, column: 1, scope: !12540)
!12585 = !DILocation(line: 144, column: 16, scope: !12540)
!12586 = !DILocation(line: 144, column: 21, scope: !12540)
!12587 = !DILocation(line: 144, column: 31, scope: !12540)
!12588 = !DILocation(line: 144, column: 40, scope: !12540)
!12589 = !DILocation(line: 144, column: 47, scope: !12540)
!12590 = !DILocation(line: 144, column: 2, scope: !12540)
!12591 = !DILocation(line: 145, column: 1, scope: !12540)
!12592 = distinct !DISubprogram(name: "mlx5_eswitch_add_offloaded_rule", scope: !3, file: !3, line: 299, type: !12593, scopeLine: 302, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!12593 = !DISubroutineType(types: !12594)
!12594 = !{!10864, !7, !12595, !12608}
!12595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12596, size: 64)
!12596 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_flow_spec", file: !10877, line: 110, size: 8320, elements: !12597)
!12597 = !{!12598, !12599, !12601, !12602}
!12598 = !DIDerivedType(tag: DW_TAG_member, name: "match_criteria_enable", scope: !12596, file: !10877, line: 111, baseType: !1403, size: 8)
!12599 = !DIDerivedType(tag: DW_TAG_member, name: "match_criteria", scope: !12596, file: !10877, line: 112, baseType: !12600, size: 4096, offset: 32)
!12600 = !DICompositeType(tag: DW_TAG_array_type, baseType: !229, size: 4096, elements: !3221)
!12601 = !DIDerivedType(tag: DW_TAG_member, name: "match_value", scope: !12596, file: !10877, line: 113, baseType: !12600, size: 4096, offset: 4128)
!12602 = !DIDerivedType(tag: DW_TAG_member, name: "flow_context", scope: !12596, file: !10877, line: 114, baseType: !12603, size: 96, offset: 8224)
!12603 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_flow_context", file: !10877, line: 104, size: 96, elements: !12604)
!12604 = !{!12605, !12606, !12607}
!12605 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !12603, file: !10877, line: 105, baseType: !229, size: 32)
!12606 = !DIDerivedType(tag: DW_TAG_member, name: "flow_tag", scope: !12603, file: !10877, line: 106, baseType: !229, size: 32, offset: 32)
!12607 = !DIDerivedType(tag: DW_TAG_member, name: "flow_source", scope: !12603, file: !10877, line: 107, baseType: !229, size: 32, offset: 64)
!12608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12609, size: 64)
!12609 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_flow_attr", file: !12610, line: 66, size: 832, elements: !12611)
!12610 = !DIFile(filename: "drivers/net/ethernet/mellanox/mlx5/core/en_tc.h", directory: "/home/lizy2001/genbc/linux")
!12611 = !{!12612, !12613, !12614, !12615, !12628, !12631, !12632, !12633, !12634, !12635, !12636, !12637, !12638, !12639}
!12612 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !12609, file: !12610, line: 67, baseType: !229, size: 32)
!12613 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !12609, file: !12610, line: 68, baseType: !11330, size: 64, offset: 64)
!12614 = !DIDerivedType(tag: DW_TAG_member, name: "modify_hdr", scope: !12609, file: !12610, line: 69, baseType: !11338, size: 64, offset: 128)
!12615 = !DIDerivedType(tag: DW_TAG_member, name: "ct_attr", scope: !12609, file: !12610, line: 70, baseType: !12616, size: 256, offset: 192)
!12616 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_ct_attr", file: !12617, line: 25, size: 256, elements: !12618)
!12617 = !DIFile(filename: "drivers/net/ethernet/mellanox/mlx5/core/en/tc_ct.h", directory: "/home/lizy2001/genbc/linux")
!12618 = !{!12619, !12620, !12621, !12624, !12627}
!12619 = !DIDerivedType(tag: DW_TAG_member, name: "zone", scope: !12616, file: !12617, line: 26, baseType: !744, size: 16)
!12620 = !DIDerivedType(tag: DW_TAG_member, name: "ct_action", scope: !12616, file: !12617, line: 27, baseType: !744, size: 16, offset: 16)
!12621 = !DIDerivedType(tag: DW_TAG_member, name: "ct_flow", scope: !12616, file: !12617, line: 28, baseType: !12622, size: 64, offset: 64)
!12622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12623, size: 64)
!12623 = !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_ct_flow", file: !12617, line: 21, flags: DIFlagFwdDecl)
!12624 = !DIDerivedType(tag: DW_TAG_member, name: "nf_ft", scope: !12616, file: !12617, line: 29, baseType: !12625, size: 64, offset: 128)
!12625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12626, size: 64)
!12626 = !DICompositeType(tag: DW_TAG_structure_type, name: "nf_flowtable", file: !5619, line: 242, flags: DIFlagFwdDecl)
!12627 = !DIDerivedType(tag: DW_TAG_member, name: "ct_labels_id", scope: !12616, file: !12617, line: 30, baseType: !229, size: 32, offset: 192)
!12628 = !DIDerivedType(tag: DW_TAG_member, name: "parse_attr", scope: !12609, file: !12610, line: 71, baseType: !12629, size: 64, offset: 448)
!12629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12630, size: 64)
!12630 = !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5e_tc_flow_parse_attr", file: !12610, line: 71, flags: DIFlagFwdDecl)
!12631 = !DIDerivedType(tag: DW_TAG_member, name: "chain", scope: !12609, file: !12610, line: 72, baseType: !229, size: 32, offset: 512)
!12632 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !12609, file: !12610, line: 73, baseType: !744, size: 16, offset: 544)
!12633 = !DIDerivedType(tag: DW_TAG_member, name: "dest_chain", scope: !12609, file: !12610, line: 74, baseType: !229, size: 32, offset: 576)
!12634 = !DIDerivedType(tag: DW_TAG_member, name: "ft", scope: !12609, file: !12610, line: 75, baseType: !10734, size: 64, offset: 640)
!12635 = !DIDerivedType(tag: DW_TAG_member, name: "dest_ft", scope: !12609, file: !12610, line: 76, baseType: !10734, size: 64, offset: 704)
!12636 = !DIDerivedType(tag: DW_TAG_member, name: "inner_match_level", scope: !12609, file: !12610, line: 77, baseType: !1403, size: 8, offset: 768)
!12637 = !DIDerivedType(tag: DW_TAG_member, name: "outer_match_level", scope: !12609, file: !12610, line: 78, baseType: !1403, size: 8, offset: 776)
!12638 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !12609, file: !12610, line: 79, baseType: !229, size: 32, offset: 800)
!12639 = !DIDerivedType(tag: DW_TAG_member, scope: !12609, file: !12610, line: 80, baseType: !12640, offset: 832)
!12640 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12609, file: !12610, line: 80, elements: !12641)
!12641 = !{!12642, !12670}
!12642 = !DIDerivedType(tag: DW_TAG_member, name: "esw_attr", scope: !12640, file: !12610, line: 81, baseType: !12643)
!12643 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12644, elements: !1932)
!12644 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_esw_flow_attr", file: !9, line: 396, size: 1088, elements: !12645)
!12645 = !{!12646, !12647, !12648, !12649, !12650, !12651, !12653, !12655, !12657, !12658, !12669}
!12646 = !DIDerivedType(tag: DW_TAG_member, name: "in_rep", scope: !12644, file: !9, line: 397, baseType: !11415, size: 64)
!12647 = !DIDerivedType(tag: DW_TAG_member, name: "in_mdev", scope: !12644, file: !9, line: 398, baseType: !12, size: 64, offset: 64)
!12648 = !DIDerivedType(tag: DW_TAG_member, name: "counter_dev", scope: !12644, file: !9, line: 399, baseType: !12, size: 64, offset: 128)
!12649 = !DIDerivedType(tag: DW_TAG_member, name: "split_count", scope: !12644, file: !9, line: 401, baseType: !6, size: 32, offset: 192)
!12650 = !DIDerivedType(tag: DW_TAG_member, name: "out_count", scope: !12644, file: !9, line: 402, baseType: !6, size: 32, offset: 224)
!12651 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_proto", scope: !12644, file: !9, line: 404, baseType: !12652, size: 32, offset: 256)
!12652 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2037, size: 32, elements: !1911)
!12653 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_vid", scope: !12644, file: !9, line: 405, baseType: !12654, size: 32, offset: 288)
!12654 = !DICompositeType(tag: DW_TAG_array_type, baseType: !744, size: 32, elements: !1911)
!12655 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_prio", scope: !12644, file: !9, line: 406, baseType: !12656, size: 16, offset: 320)
!12656 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1403, size: 16, elements: !1911)
!12657 = !DIDerivedType(tag: DW_TAG_member, name: "total_vlan", scope: !12644, file: !9, line: 407, baseType: !1403, size: 8, offset: 336)
!12658 = !DIDerivedType(tag: DW_TAG_member, name: "dests", scope: !12644, file: !9, line: 414, baseType: !12659, size: 640, offset: 384)
!12659 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12660, size: 640, elements: !1911)
!12660 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !12644, file: !9, line: 408, size: 320, elements: !12661)
!12661 = !{!12662, !12663, !12664, !12665, !12666}
!12662 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !12660, file: !9, line: 409, baseType: !229, size: 32)
!12663 = !DIDerivedType(tag: DW_TAG_member, name: "rep", scope: !12660, file: !9, line: 410, baseType: !11415, size: 64, offset: 64)
!12664 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_reformat", scope: !12660, file: !9, line: 411, baseType: !10901, size: 64, offset: 128)
!12665 = !DIDerivedType(tag: DW_TAG_member, name: "mdev", scope: !12660, file: !9, line: 412, baseType: !12, size: 64, offset: 192)
!12666 = !DIDerivedType(tag: DW_TAG_member, name: "termtbl", scope: !12660, file: !9, line: 413, baseType: !12667, size: 64, offset: 256)
!12667 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12668, size: 64)
!12668 = !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_termtbl_handle", file: !9, line: 328, flags: DIFlagFwdDecl)
!12669 = !DIDerivedType(tag: DW_TAG_member, name: "decap_pkt_reformat", scope: !12644, file: !9, line: 415, baseType: !10901, size: 64, offset: 1024)
!12670 = !DIDerivedType(tag: DW_TAG_member, name: "nic_attr", scope: !12640, file: !12610, line: 82, baseType: !12671)
!12671 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12672, elements: !1932)
!12672 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_nic_flow_attr", file: !12610, line: 60, size: 128, elements: !12673)
!12673 = !{!12674, !12675, !12676}
!12674 = !DIDerivedType(tag: DW_TAG_member, name: "flow_tag", scope: !12672, file: !12610, line: 61, baseType: !229, size: 32)
!12675 = !DIDerivedType(tag: DW_TAG_member, name: "hairpin_tirn", scope: !12672, file: !12610, line: 62, baseType: !229, size: 32, offset: 32)
!12676 = !DIDerivedType(tag: DW_TAG_member, name: "hairpin_ft", scope: !12672, file: !12610, line: 63, baseType: !10734, size: 64, offset: 64)
!12677 = !DILocalVariable(name: "v", arg: 1, scope: !12678, file: !12679, line: 86, type: !12682)
!12678 = distinct !DISubprogram(name: "arch_atomic64_inc", scope: !12679, file: !12679, line: 86, type: !12680, scopeLine: 87, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!12679 = !DIFile(filename: "./arch/x86/include/asm/atomic64_64.h", directory: "/home/lizy2001/genbc/linux")
!12680 = !DISubroutineType(types: !12681)
!12681 = !{null, !12682}
!12682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !564, size: 64)
!12683 = !DILocation(line: 86, column: 59, scope: !12678, inlinedAt: !12684)
!12684 = distinct !DILocation(line: 1051, column: 2, scope: !12685, inlinedAt: !12687)
!12685 = distinct !DISubprogram(name: "atomic64_inc", scope: !12686, file: !12686, line: 1048, type: !12680, scopeLine: 1049, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!12686 = !DIFile(filename: "./include/asm-generic/atomic-instrumented.h", directory: "/home/lizy2001/genbc/linux")
!12687 = distinct !DILocation(line: 427, column: 3, scope: !12688)
!12688 = distinct !DILexicalBlock(scope: !12592, file: !3, line: 424, column: 6)
!12689 = !DILocalVariable(name: "v", arg: 1, scope: !12690, file: !12691, line: 99, type: !12694)
!12690 = distinct !DISubprogram(name: "instrument_atomic_read_write", scope: !12691, file: !12691, line: 99, type: !12692, scopeLine: 100, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!12691 = !DIFile(filename: "./include/linux/instrumented.h", directory: "/home/lizy2001/genbc/linux")
!12692 = !DISubroutineType(types: !12693)
!12693 = !{null, !12694, !132}
!12694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12695, size: 64)
!12695 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12696)
!12696 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: null)
!12697 = !DILocation(line: 99, column: 79, scope: !12690, inlinedAt: !12698)
!12698 = distinct !DILocation(line: 1050, column: 2, scope: !12685, inlinedAt: !12687)
!12699 = !DILocalVariable(name: "size", arg: 2, scope: !12690, file: !12691, line: 99, type: !132)
!12700 = !DILocation(line: 99, column: 89, scope: !12690, inlinedAt: !12698)
!12701 = !DILocalVariable(name: "v", arg: 1, scope: !12685, file: !12686, line: 1048, type: !12682)
!12702 = !DILocation(line: 1048, column: 26, scope: !12685, inlinedAt: !12687)
!12703 = !DILocalVariable(name: "esw", arg: 1, scope: !12592, file: !3, line: 299, type: !7)
!12704 = !DILocation(line: 299, column: 54, scope: !12592)
!12705 = !DILocalVariable(name: "spec", arg: 2, scope: !12592, file: !3, line: 300, type: !12595)
!12706 = !DILocation(line: 300, column: 28, scope: !12592)
!12707 = !DILocalVariable(name: "attr", arg: 3, scope: !12592, file: !3, line: 301, type: !12608)
!12708 = !DILocation(line: 301, column: 28, scope: !12592)
!12709 = !DILocalVariable(name: "dest", scope: !12592, file: !3, line: 303, type: !12710)
!12710 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10876, size: 768, elements: !86)
!12711 = !DILocation(line: 303, column: 31, scope: !12592)
!12712 = !DILocalVariable(name: "flow_act", scope: !12592, file: !3, line: 304, type: !12713)
!12713 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_flow_act", file: !10877, line: 207, size: 448, elements: !12714)
!12714 = !{!12715, !12716, !12717, !12718, !12724, !12725, !12732}
!12715 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !12713, file: !10877, line: 208, baseType: !229, size: 32)
!12716 = !DIDerivedType(tag: DW_TAG_member, name: "modify_hdr", scope: !12713, file: !10877, line: 209, baseType: !11338, size: 64, offset: 64)
!12717 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_reformat", scope: !12713, file: !10877, line: 210, baseType: !10901, size: 64, offset: 128)
!12718 = !DIDerivedType(tag: DW_TAG_member, scope: !12713, file: !10877, line: 211, baseType: !12719, size: 64, offset: 192)
!12719 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12713, file: !10877, line: 211, size: 64, elements: !12720)
!12720 = !{!12721, !12722}
!12721 = !DIDerivedType(tag: DW_TAG_member, name: "ipsec_obj_id", scope: !12719, file: !10877, line: 212, baseType: !229, size: 32)
!12722 = !DIDerivedType(tag: DW_TAG_member, name: "esp_id", scope: !12719, file: !10877, line: 213, baseType: !12723, size: 64)
!12723 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !31, line: 37, baseType: !135)
!12724 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !12713, file: !10877, line: 215, baseType: !229, size: 32, offset: 256)
!12725 = !DIDerivedType(tag: DW_TAG_member, name: "vlan", scope: !12713, file: !10877, line: 216, baseType: !12726, size: 96, offset: 288)
!12726 = !DICompositeType(tag: DW_TAG_array_type, baseType: !12727, size: 96, elements: !1911)
!12727 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_fs_vlan", file: !10877, line: 194, size: 48, elements: !12728)
!12728 = !{!12729, !12730, !12731}
!12729 = !DIDerivedType(tag: DW_TAG_member, name: "ethtype", scope: !12727, file: !10877, line: 195, baseType: !744, size: 16)
!12730 = !DIDerivedType(tag: DW_TAG_member, name: "vid", scope: !12727, file: !10877, line: 196, baseType: !744, size: 16, offset: 16)
!12731 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !12727, file: !10877, line: 197, baseType: !1403, size: 8, offset: 32)
!12732 = !DIDerivedType(tag: DW_TAG_member, name: "counters", scope: !12713, file: !10877, line: 217, baseType: !12733, size: 64, offset: 384)
!12733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12734, size: 64)
!12734 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_counters", file: !11520, line: 2233, size: 192, elements: !12735)
!12735 = !{!12736, !14294, !14295}
!12736 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !12734, file: !11520, line: 2234, baseType: !12737, size: 64)
!12737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12738, size: 64)
!12738 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_device", file: !11520, line: 2629, size: 20736, elements: !12739)
!12739 = !{!12740, !12741, !14194, !14195, !14196, !14197, !14198, !14199, !14200, !14201, !14202, !14203, !14234, !14235, !14247, !14249, !14250, !14251, !14252, !14253, !14254, !14255, !14256, !14257, !14258, !14259, !14260, !14262, !14263, !14264, !14265, !14267, !14270, !14274, !14275, !14276, !14277, !14289, !14290, !14291, !14292, !14293}
!12740 = !DIDerivedType(tag: DW_TAG_member, name: "dma_device", scope: !12738, file: !11520, line: 2631, baseType: !17, size: 64)
!12741 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !12738, file: !11520, line: 2632, baseType: !12742, size: 7936, offset: 64)
!12742 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_device_ops", file: !11520, line: 2286, size: 7936, elements: !12743)
!12743 = !{!12744, !12745, !12746, !12747, !12748, !13173, !13191, !13195, !13196, !13200, !13204, !13208, !13209, !13213, !13233, !13326, !13335, !13339, !13345, !13375, !13385, !13396, !13400, !13404, !13408, !13423, !13428, !13432, !13433, !13437, !13441, !13445, !13449, !13461, !13462, !13466, !13467, !13520, !13524, !13525, !13529, !13560, !13565, !13569, !13573, !13601, !13635, !13639, !13643, !13654, !13658, !13662, !13666, !13670, !13674, !13678, !13682, !13686, !13690, !13696, !13709, !13725, !13737, !13741, !13745, !13746, !13750, !13751, !13926, !13930, !13979, !13983, !13987, !13991, !13995, !13999, !14003, !14007, !14021, !14025, !14036, !14045, !14049, !14059, !14063, !14073, !14077, !14081, !14091, !14095, !14099, !14103, !14107, !14111, !14112, !14116, !14117, !14121, !14122, !14128, !14132, !14136, !14137, !14138, !14142, !14150, !14151, !14155, !14159, !14163, !14167, !14171, !14175, !14179, !14180, !14181, !14185, !14186, !14187, !14188, !14189, !14190, !14191, !14192, !14193}
!12744 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !12742, file: !11520, line: 2287, baseType: !446, size: 64)
!12745 = !DIDerivedType(tag: DW_TAG_member, name: "driver_id", scope: !12742, file: !11520, line: 2288, baseType: !11486, size: 32, offset: 64)
!12746 = !DIDerivedType(tag: DW_TAG_member, name: "uverbs_abi_ver", scope: !12742, file: !11520, line: 2289, baseType: !229, size: 32, offset: 96)
!12747 = !DIDerivedType(tag: DW_TAG_member, name: "uverbs_no_driver_id_binding", scope: !12742, file: !11520, line: 2290, baseType: !199, size: 1, offset: 128, flags: DIFlagBitField, extraData: i64 128)
!12748 = !DIDerivedType(tag: DW_TAG_member, name: "post_send", scope: !12742, file: !11520, line: 2292, baseType: !12749, size: 64, offset: 192)
!12749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12750, size: 64)
!12750 = !DISubroutineType(types: !12751)
!12751 = !{!6, !12752, !13146, !13172}
!12752 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12753, size: 64)
!12753 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_qp", file: !11520, line: 1740, size: 2304, elements: !12754)
!12754 = !{!12755, !12756, !12860, !13033, !13034, !13035, !13036, !13037, !13038, !13039, !13040, !13041, !13042, !13043, !13044, !13047, !13048, !13049, !13068, !13069, !13070, !13071, !13072, !13073, !13084, !13111, !13112, !13113, !13114}
!12755 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !12753, file: !11520, line: 1741, baseType: !12737, size: 64)
!12756 = !DIDerivedType(tag: DW_TAG_member, name: "pd", scope: !12753, file: !11520, line: 1742, baseType: !12757, size: 64, offset: 64)
!12757 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12758, size: 64)
!12758 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_pd", file: !11520, line: 1518, size: 832, elements: !12759)
!12759 = !{!12760, !12761, !12762, !12763, !12803, !12804, !12805, !12859}
!12760 = !DIDerivedType(tag: DW_TAG_member, name: "local_dma_lkey", scope: !12758, file: !11520, line: 1519, baseType: !229, size: 32)
!12761 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !12758, file: !11520, line: 1520, baseType: !229, size: 32, offset: 32)
!12762 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !12758, file: !11520, line: 1521, baseType: !12737, size: 64, offset: 64)
!12763 = !DIDerivedType(tag: DW_TAG_member, name: "uobject", scope: !12758, file: !11520, line: 1522, baseType: !12764, size: 64, offset: 128)
!12764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12765, size: 64)
!12765 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_uobject", file: !11520, line: 1494, size: 704, elements: !12766)
!12766 = !{!12767, !12768, !12771, !12792, !12793, !12794, !12795, !12796, !12797, !12798, !12799}
!12767 = !DIDerivedType(tag: DW_TAG_member, name: "user_handle", scope: !12765, file: !11520, line: 1495, baseType: !235, size: 64)
!12768 = !DIDerivedType(tag: DW_TAG_member, name: "ufile", scope: !12765, file: !11520, line: 1497, baseType: !12769, size: 64, offset: 64)
!12769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12770, size: 64)
!12770 = !DICompositeType(tag: DW_TAG_structure_type, name: "ib_uverbs_file", file: !11520, line: 1482, flags: DIFlagFwdDecl)
!12771 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !12765, file: !11520, line: 1499, baseType: !12772, size: 64, offset: 128)
!12772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12773, size: 64)
!12773 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_ucontext", file: !11520, line: 1480, size: 832, elements: !12774)
!12774 = !{!12775, !12776, !12777, !12778, !12780, !12791}
!12775 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !12773, file: !11520, line: 1481, baseType: !12737, size: 64)
!12776 = !DIDerivedType(tag: DW_TAG_member, name: "ufile", scope: !12773, file: !11520, line: 1482, baseType: !12769, size: 64, offset: 64)
!12777 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup_retryable", scope: !12773, file: !11520, line: 1484, baseType: !304, size: 8, offset: 128)
!12778 = !DIDerivedType(tag: DW_TAG_member, name: "cg_obj", scope: !12773, file: !11520, line: 1486, baseType: !12779, offset: 136)
!12779 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_rdmacg_object", file: !11520, line: 1474, elements: !58)
!12780 = !DIDerivedType(tag: DW_TAG_member, name: "res", scope: !12773, file: !11520, line: 1490, baseType: !12781, size: 512, offset: 192)
!12781 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rdma_restrack_entry", file: !11509, line: 61, size: 512, elements: !12782)
!12782 = !{!12783, !12784, !12785, !12786, !12787, !12788, !12789, !12790}
!12783 = !DIDerivedType(tag: DW_TAG_member, name: "valid", scope: !12781, file: !11509, line: 70, baseType: !304, size: 8)
!12784 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !12781, file: !11509, line: 74, baseType: !1556, size: 32, offset: 32)
!12785 = !DIDerivedType(tag: DW_TAG_member, name: "comp", scope: !12781, file: !11509, line: 78, baseType: !1789, size: 192, offset: 64)
!12786 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !12781, file: !11509, line: 88, baseType: !1267, size: 64, offset: 256)
!12787 = !DIDerivedType(tag: DW_TAG_member, name: "kern_name", scope: !12781, file: !11509, line: 92, baseType: !26, size: 64, offset: 320)
!12788 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !12781, file: !11509, line: 96, baseType: !11508, size: 32, offset: 384)
!12789 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !12781, file: !11509, line: 100, baseType: !304, size: 8, offset: 416)
!12790 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !12781, file: !11509, line: 104, baseType: !229, size: 32, offset: 448)
!12791 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_xa", scope: !12773, file: !11520, line: 1491, baseType: !623, size: 128, offset: 704)
!12792 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !12765, file: !11520, line: 1500, baseType: !159, size: 64, offset: 192)
!12793 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !12765, file: !11520, line: 1501, baseType: !30, size: 128, offset: 256)
!12794 = !DIDerivedType(tag: DW_TAG_member, name: "cg_obj", scope: !12765, file: !11520, line: 1502, baseType: !12779, offset: 384)
!12795 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !12765, file: !11520, line: 1503, baseType: !6, size: 32, offset: 384)
!12796 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !12765, file: !11520, line: 1504, baseType: !1556, size: 32, offset: 416)
!12797 = !DIDerivedType(tag: DW_TAG_member, name: "usecnt", scope: !12765, file: !11520, line: 1505, baseType: !632, size: 32, offset: 448)
!12798 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !12765, file: !11520, line: 1506, baseType: !178, size: 128, align: 64, offset: 512)
!12799 = !DIDerivedType(tag: DW_TAG_member, name: "uapi_object", scope: !12765, file: !11520, line: 1508, baseType: !12800, size: 64, offset: 640)
!12800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12801, size: 64)
!12801 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12802)
!12802 = !DICompositeType(tag: DW_TAG_structure_type, name: "uverbs_api_object", file: !11520, line: 1508, flags: DIFlagFwdDecl)
!12803 = !DIDerivedType(tag: DW_TAG_member, name: "usecnt", scope: !12758, file: !11520, line: 1523, baseType: !632, size: 32, offset: 192)
!12804 = !DIDerivedType(tag: DW_TAG_member, name: "unsafe_global_rkey", scope: !12758, file: !11520, line: 1525, baseType: !229, size: 32, offset: 224)
!12805 = !DIDerivedType(tag: DW_TAG_member, name: "__internal_mr", scope: !12758, file: !11520, line: 1530, baseType: !12806, size: 64, offset: 256)
!12806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12807, size: 64)
!12807 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_mr", file: !11520, line: 1789, size: 1216, elements: !12808)
!12808 = !{!12809, !12810, !12811, !12812, !12813, !12814, !12815, !12816, !12817, !12818, !12823, !12832, !12858}
!12809 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !12807, file: !11520, line: 1790, baseType: !12737, size: 64)
!12810 = !DIDerivedType(tag: DW_TAG_member, name: "pd", scope: !12807, file: !11520, line: 1791, baseType: !12757, size: 64, offset: 64)
!12811 = !DIDerivedType(tag: DW_TAG_member, name: "lkey", scope: !12807, file: !11520, line: 1792, baseType: !229, size: 32, offset: 128)
!12812 = !DIDerivedType(tag: DW_TAG_member, name: "rkey", scope: !12807, file: !11520, line: 1793, baseType: !229, size: 32, offset: 160)
!12813 = !DIDerivedType(tag: DW_TAG_member, name: "iova", scope: !12807, file: !11520, line: 1794, baseType: !235, size: 64, offset: 192)
!12814 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !12807, file: !11520, line: 1795, baseType: !235, size: 64, offset: 256)
!12815 = !DIDerivedType(tag: DW_TAG_member, name: "page_size", scope: !12807, file: !11520, line: 1796, baseType: !199, size: 32, offset: 320)
!12816 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !12807, file: !11520, line: 1797, baseType: !11519, size: 32, offset: 352)
!12817 = !DIDerivedType(tag: DW_TAG_member, name: "need_inval", scope: !12807, file: !11520, line: 1798, baseType: !304, size: 8, offset: 384)
!12818 = !DIDerivedType(tag: DW_TAG_member, scope: !12807, file: !11520, line: 1799, baseType: !12819, size: 128, offset: 448)
!12819 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12807, file: !11520, line: 1799, size: 128, elements: !12820)
!12820 = !{!12821, !12822}
!12821 = !DIDerivedType(tag: DW_TAG_member, name: "uobject", scope: !12819, file: !11520, line: 1800, baseType: !12764, size: 64)
!12822 = !DIDerivedType(tag: DW_TAG_member, name: "qp_entry", scope: !12819, file: !11520, line: 1801, baseType: !30, size: 128)
!12823 = !DIDerivedType(tag: DW_TAG_member, name: "dm", scope: !12807, file: !11520, line: 1804, baseType: !12824, size: 64, offset: 576)
!12824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12825, size: 64)
!12825 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_dm", file: !11520, line: 1781, size: 256, elements: !12826)
!12826 = !{!12827, !12828, !12829, !12830, !12831}
!12827 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !12825, file: !11520, line: 1782, baseType: !12737, size: 64)
!12828 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !12825, file: !11520, line: 1783, baseType: !229, size: 32, offset: 64)
!12829 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !12825, file: !11520, line: 1784, baseType: !229, size: 32, offset: 96)
!12830 = !DIDerivedType(tag: DW_TAG_member, name: "uobject", scope: !12825, file: !11520, line: 1785, baseType: !12764, size: 64, offset: 128)
!12831 = !DIDerivedType(tag: DW_TAG_member, name: "usecnt", scope: !12825, file: !11520, line: 1786, baseType: !632, size: 32, offset: 192)
!12832 = !DIDerivedType(tag: DW_TAG_member, name: "sig_attrs", scope: !12807, file: !11520, line: 1805, baseType: !12833, size: 64, offset: 640)
!12833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12834, size: 64)
!12834 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_sig_attrs", file: !11529, line: 87, size: 512, elements: !12835)
!12835 = !{!12836, !12837, !12856, !12857}
!12836 = !DIDerivedType(tag: DW_TAG_member, name: "check_mask", scope: !12834, file: !11529, line: 88, baseType: !1403, size: 8)
!12837 = !DIDerivedType(tag: DW_TAG_member, name: "mem", scope: !12834, file: !11529, line: 89, baseType: !12838, size: 224, offset: 32)
!12838 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_sig_domain", file: !11529, line: 73, size: 224, elements: !12839)
!12839 = !{!12840, !12841}
!12840 = !DIDerivedType(tag: DW_TAG_member, name: "sig_type", scope: !12838, file: !11529, line: 74, baseType: !11528, size: 32)
!12841 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !12838, file: !11529, line: 77, baseType: !12842, size: 192, offset: 32)
!12842 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12838, file: !11529, line: 75, size: 192, elements: !12843)
!12843 = !{!12844}
!12844 = !DIDerivedType(tag: DW_TAG_member, name: "dif", scope: !12842, file: !11529, line: 76, baseType: !12845, size: 192)
!12845 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_t10_dif_domain", file: !11529, line: 55, size: 192, elements: !12846)
!12846 = !{!12847, !12848, !12849, !12850, !12851, !12852, !12853, !12854, !12855}
!12847 = !DIDerivedType(tag: DW_TAG_member, name: "bg_type", scope: !12845, file: !11529, line: 56, baseType: !11533, size: 32)
!12848 = !DIDerivedType(tag: DW_TAG_member, name: "pi_interval", scope: !12845, file: !11529, line: 57, baseType: !744, size: 16, offset: 32)
!12849 = !DIDerivedType(tag: DW_TAG_member, name: "bg", scope: !12845, file: !11529, line: 58, baseType: !744, size: 16, offset: 48)
!12850 = !DIDerivedType(tag: DW_TAG_member, name: "app_tag", scope: !12845, file: !11529, line: 59, baseType: !744, size: 16, offset: 64)
!12851 = !DIDerivedType(tag: DW_TAG_member, name: "ref_tag", scope: !12845, file: !11529, line: 60, baseType: !229, size: 32, offset: 96)
!12852 = !DIDerivedType(tag: DW_TAG_member, name: "ref_remap", scope: !12845, file: !11529, line: 61, baseType: !304, size: 8, offset: 128)
!12853 = !DIDerivedType(tag: DW_TAG_member, name: "app_escape", scope: !12845, file: !11529, line: 62, baseType: !304, size: 8, offset: 136)
!12854 = !DIDerivedType(tag: DW_TAG_member, name: "ref_escape", scope: !12845, file: !11529, line: 63, baseType: !304, size: 8, offset: 144)
!12855 = !DIDerivedType(tag: DW_TAG_member, name: "apptag_check_mask", scope: !12845, file: !11529, line: 64, baseType: !744, size: 16, offset: 160)
!12856 = !DIDerivedType(tag: DW_TAG_member, name: "wire", scope: !12834, file: !11529, line: 90, baseType: !12838, size: 224, offset: 256)
!12857 = !DIDerivedType(tag: DW_TAG_member, name: "meta_length", scope: !12834, file: !11529, line: 91, baseType: !6, size: 32, offset: 480)
!12858 = !DIDerivedType(tag: DW_TAG_member, name: "res", scope: !12807, file: !11520, line: 1809, baseType: !12781, size: 512, offset: 704)
!12859 = !DIDerivedType(tag: DW_TAG_member, name: "res", scope: !12758, file: !11520, line: 1531, baseType: !12781, size: 512, offset: 320)
!12860 = !DIDerivedType(tag: DW_TAG_member, name: "send_cq", scope: !12753, file: !11520, line: 1743, baseType: !12861, size: 64, offset: 128)
!12861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12862, size: 64)
!12862 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_cq", file: !11520, line: 1561, size: 1728, elements: !12863)
!12863 = !{!12864, !12865, !12868, !12873, !12937, !12938, !12939, !12940, !12941, !12942, !12978, !12979, !12996, !12997, !13028, !13029, !13030, !13031, !13032}
!12864 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !12862, file: !11520, line: 1562, baseType: !12737, size: 64)
!12865 = !DIDerivedType(tag: DW_TAG_member, name: "uobject", scope: !12862, file: !11520, line: 1563, baseType: !12866, size: 64, offset: 64)
!12866 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12867, size: 64)
!12867 = !DICompositeType(tag: DW_TAG_structure_type, name: "ib_ucq_object", file: !11520, line: 57, flags: DIFlagFwdDecl)
!12868 = !DIDerivedType(tag: DW_TAG_member, name: "comp_handler", scope: !12862, file: !11520, line: 1564, baseType: !12869, size: 64, offset: 128)
!12869 = !DIDerivedType(tag: DW_TAG_typedef, name: "ib_comp_handler", file: !11520, line: 1550, baseType: !12870)
!12870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12871, size: 64)
!12871 = !DISubroutineType(types: !12872)
!12872 = !{null, !12861, !159}
!12873 = !DIDerivedType(tag: DW_TAG_member, name: "event_handler", scope: !12862, file: !11520, line: 1565, baseType: !12874, size: 64, offset: 192)
!12874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12875, size: 64)
!12875 = !DISubroutineType(types: !12876)
!12876 = !{null, !12877, !159}
!12877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12878, size: 64)
!12878 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_event", file: !11520, line: 731, size: 192, elements: !12879)
!12879 = !{!12880, !12881, !12936}
!12880 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !12878, file: !11520, line: 732, baseType: !12737, size: 64)
!12881 = !DIDerivedType(tag: DW_TAG_member, name: "element", scope: !12878, file: !11520, line: 739, baseType: !12882, size: 64, offset: 64)
!12882 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12878, file: !11520, line: 733, size: 64, elements: !12883)
!12883 = !{!12884, !12885, !12886, !12919, !12935}
!12884 = !DIDerivedType(tag: DW_TAG_member, name: "cq", scope: !12882, file: !11520, line: 734, baseType: !12861, size: 64)
!12885 = !DIDerivedType(tag: DW_TAG_member, name: "qp", scope: !12882, file: !11520, line: 735, baseType: !12752, size: 64)
!12886 = !DIDerivedType(tag: DW_TAG_member, name: "srq", scope: !12882, file: !11520, line: 736, baseType: !12887, size: 64)
!12887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12888, size: 64)
!12888 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_srq", file: !11520, line: 1592, size: 576, elements: !12889)
!12889 = !{!12890, !12891, !12892, !12895, !12896, !12897, !12898, !12899}
!12890 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !12888, file: !11520, line: 1593, baseType: !12737, size: 64)
!12891 = !DIDerivedType(tag: DW_TAG_member, name: "pd", scope: !12888, file: !11520, line: 1594, baseType: !12757, size: 64, offset: 64)
!12892 = !DIDerivedType(tag: DW_TAG_member, name: "uobject", scope: !12888, file: !11520, line: 1595, baseType: !12893, size: 64, offset: 128)
!12893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12894, size: 64)
!12894 = !DICompositeType(tag: DW_TAG_structure_type, name: "ib_usrq_object", file: !11520, line: 49, flags: DIFlagFwdDecl)
!12895 = !DIDerivedType(tag: DW_TAG_member, name: "event_handler", scope: !12888, file: !11520, line: 1596, baseType: !12874, size: 64, offset: 192)
!12896 = !DIDerivedType(tag: DW_TAG_member, name: "srq_context", scope: !12888, file: !11520, line: 1597, baseType: !159, size: 64, offset: 256)
!12897 = !DIDerivedType(tag: DW_TAG_member, name: "srq_type", scope: !12888, file: !11520, line: 1598, baseType: !11537, size: 32, offset: 320)
!12898 = !DIDerivedType(tag: DW_TAG_member, name: "usecnt", scope: !12888, file: !11520, line: 1599, baseType: !632, size: 32, offset: 352)
!12899 = !DIDerivedType(tag: DW_TAG_member, name: "ext", scope: !12888, file: !11520, line: 1609, baseType: !12900, size: 192, offset: 384)
!12900 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !12888, file: !11520, line: 1601, size: 192, elements: !12901)
!12901 = !{!12902, !12903}
!12902 = !DIDerivedType(tag: DW_TAG_member, name: "cq", scope: !12900, file: !11520, line: 1602, baseType: !12861, size: 64)
!12903 = !DIDerivedType(tag: DW_TAG_member, scope: !12900, file: !11520, line: 1603, baseType: !12904, size: 128, offset: 64)
!12904 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12900, file: !11520, line: 1603, size: 128, elements: !12905)
!12905 = !{!12906}
!12906 = !DIDerivedType(tag: DW_TAG_member, name: "xrc", scope: !12904, file: !11520, line: 1607, baseType: !12907, size: 128)
!12907 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !12904, file: !11520, line: 1604, size: 128, elements: !12908)
!12908 = !{!12909, !12918}
!12909 = !DIDerivedType(tag: DW_TAG_member, name: "xrcd", scope: !12907, file: !11520, line: 1605, baseType: !12910, size: 64)
!12910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12911, size: 64)
!12911 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_xrcd", file: !11520, line: 1534, size: 576, elements: !12912)
!12912 = !{!12913, !12914, !12915, !12916, !12917}
!12913 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !12911, file: !11520, line: 1535, baseType: !12737, size: 64)
!12914 = !DIDerivedType(tag: DW_TAG_member, name: "usecnt", scope: !12911, file: !11520, line: 1536, baseType: !632, size: 32, offset: 64)
!12915 = !DIDerivedType(tag: DW_TAG_member, name: "inode", scope: !12911, file: !11520, line: 1537, baseType: !243, size: 64, offset: 128)
!12916 = !DIDerivedType(tag: DW_TAG_member, name: "tgt_qps_rwsem", scope: !12911, file: !11520, line: 1538, baseType: !652, size: 256, offset: 192)
!12917 = !DIDerivedType(tag: DW_TAG_member, name: "tgt_qps", scope: !12911, file: !11520, line: 1539, baseType: !623, size: 128, offset: 448)
!12918 = !DIDerivedType(tag: DW_TAG_member, name: "srq_num", scope: !12907, file: !11520, line: 1606, baseType: !229, size: 32, offset: 64)
!12919 = !DIDerivedType(tag: DW_TAG_member, name: "wq", scope: !12882, file: !11520, line: 737, baseType: !12920, size: 64)
!12920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12921, size: 64)
!12921 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_wq", file: !11520, line: 1638, size: 512, elements: !12922)
!12922 = !{!12923, !12924, !12927, !12928, !12929, !12930, !12931, !12932, !12933, !12934}
!12923 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !12921, file: !11520, line: 1639, baseType: !12737, size: 64)
!12924 = !DIDerivedType(tag: DW_TAG_member, name: "uobject", scope: !12921, file: !11520, line: 1640, baseType: !12925, size: 64, offset: 64)
!12925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12926, size: 64)
!12926 = !DICompositeType(tag: DW_TAG_structure_type, name: "ib_uwq_object", file: !11520, line: 50, flags: DIFlagFwdDecl)
!12927 = !DIDerivedType(tag: DW_TAG_member, name: "wq_context", scope: !12921, file: !11520, line: 1641, baseType: !159, size: 64, offset: 128)
!12928 = !DIDerivedType(tag: DW_TAG_member, name: "event_handler", scope: !12921, file: !11520, line: 1642, baseType: !12874, size: 64, offset: 192)
!12929 = !DIDerivedType(tag: DW_TAG_member, name: "pd", scope: !12921, file: !11520, line: 1643, baseType: !12757, size: 64, offset: 256)
!12930 = !DIDerivedType(tag: DW_TAG_member, name: "cq", scope: !12921, file: !11520, line: 1644, baseType: !12861, size: 64, offset: 320)
!12931 = !DIDerivedType(tag: DW_TAG_member, name: "wq_num", scope: !12921, file: !11520, line: 1645, baseType: !229, size: 32, offset: 384)
!12932 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !12921, file: !11520, line: 1646, baseType: !11542, size: 32, offset: 416)
!12933 = !DIDerivedType(tag: DW_TAG_member, name: "wq_type", scope: !12921, file: !11520, line: 1647, baseType: !11547, size: 32, offset: 448)
!12934 = !DIDerivedType(tag: DW_TAG_member, name: "usecnt", scope: !12921, file: !11520, line: 1648, baseType: !632, size: 32, offset: 480)
!12935 = !DIDerivedType(tag: DW_TAG_member, name: "port_num", scope: !12882, file: !11520, line: 738, baseType: !1403, size: 8)
!12936 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !12878, file: !11520, line: 740, baseType: !11550, size: 32, offset: 128)
!12937 = !DIDerivedType(tag: DW_TAG_member, name: "cq_context", scope: !12862, file: !11520, line: 1566, baseType: !159, size: 64, offset: 256)
!12938 = !DIDerivedType(tag: DW_TAG_member, name: "cqe", scope: !12862, file: !11520, line: 1567, baseType: !6, size: 32, offset: 320)
!12939 = !DIDerivedType(tag: DW_TAG_member, name: "cqe_used", scope: !12862, file: !11520, line: 1568, baseType: !199, size: 32, offset: 352)
!12940 = !DIDerivedType(tag: DW_TAG_member, name: "usecnt", scope: !12862, file: !11520, line: 1569, baseType: !632, size: 32, offset: 384)
!12941 = !DIDerivedType(tag: DW_TAG_member, name: "poll_ctx", scope: !12862, file: !11520, line: 1570, baseType: !11572, size: 32, offset: 416)
!12942 = !DIDerivedType(tag: DW_TAG_member, name: "wc", scope: !12862, file: !11520, line: 1571, baseType: !12943, size: 64, offset: 448)
!12943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12944, size: 64)
!12944 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_wc", file: !11520, line: 988, size: 512, elements: !12945)
!12945 = !{!12946, !12958, !12959, !12960, !12961, !12962, !12963, !12968, !12969, !12970, !12971, !12972, !12973, !12974, !12975, !12976, !12977}
!12946 = !DIDerivedType(tag: DW_TAG_member, scope: !12944, file: !11520, line: 989, baseType: !12947, size: 64)
!12947 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12944, file: !11520, line: 989, size: 64, elements: !12948)
!12948 = !{!12949, !12950}
!12949 = !DIDerivedType(tag: DW_TAG_member, name: "wr_id", scope: !12947, file: !11520, line: 990, baseType: !235, size: 64)
!12950 = !DIDerivedType(tag: DW_TAG_member, name: "wr_cqe", scope: !12947, file: !11520, line: 991, baseType: !12951, size: 64)
!12951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12952, size: 64)
!12952 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_cqe", file: !11520, line: 1346, size: 64, elements: !12953)
!12953 = !{!12954}
!12954 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !12952, file: !11520, line: 1347, baseType: !12955, size: 64)
!12955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12956, size: 64)
!12956 = !DISubroutineType(types: !12957)
!12957 = !{null, !12861, !12943}
!12958 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !12944, file: !11520, line: 993, baseType: !11579, size: 32, offset: 64)
!12959 = !DIDerivedType(tag: DW_TAG_member, name: "opcode", scope: !12944, file: !11520, line: 994, baseType: !11603, size: 32, offset: 96)
!12960 = !DIDerivedType(tag: DW_TAG_member, name: "vendor_err", scope: !12944, file: !11520, line: 995, baseType: !229, size: 32, offset: 128)
!12961 = !DIDerivedType(tag: DW_TAG_member, name: "byte_len", scope: !12944, file: !11520, line: 996, baseType: !229, size: 32, offset: 160)
!12962 = !DIDerivedType(tag: DW_TAG_member, name: "qp", scope: !12944, file: !11520, line: 997, baseType: !12752, size: 64, offset: 192)
!12963 = !DIDerivedType(tag: DW_TAG_member, name: "ex", scope: !12944, file: !11520, line: 1001, baseType: !12964, size: 32, offset: 256)
!12964 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12944, file: !11520, line: 998, size: 32, elements: !12965)
!12965 = !{!12966, !12967}
!12966 = !DIDerivedType(tag: DW_TAG_member, name: "imm_data", scope: !12964, file: !11520, line: 999, baseType: !2019, size: 32)
!12967 = !DIDerivedType(tag: DW_TAG_member, name: "invalidate_rkey", scope: !12964, file: !11520, line: 1000, baseType: !229, size: 32)
!12968 = !DIDerivedType(tag: DW_TAG_member, name: "src_qp", scope: !12944, file: !11520, line: 1002, baseType: !229, size: 32, offset: 288)
!12969 = !DIDerivedType(tag: DW_TAG_member, name: "slid", scope: !12944, file: !11520, line: 1003, baseType: !229, size: 32, offset: 320)
!12970 = !DIDerivedType(tag: DW_TAG_member, name: "wc_flags", scope: !12944, file: !11520, line: 1004, baseType: !6, size: 32, offset: 352)
!12971 = !DIDerivedType(tag: DW_TAG_member, name: "pkey_index", scope: !12944, file: !11520, line: 1005, baseType: !744, size: 16, offset: 384)
!12972 = !DIDerivedType(tag: DW_TAG_member, name: "sl", scope: !12944, file: !11520, line: 1006, baseType: !1403, size: 8, offset: 400)
!12973 = !DIDerivedType(tag: DW_TAG_member, name: "dlid_path_bits", scope: !12944, file: !11520, line: 1007, baseType: !1403, size: 8, offset: 408)
!12974 = !DIDerivedType(tag: DW_TAG_member, name: "port_num", scope: !12944, file: !11520, line: 1008, baseType: !1403, size: 8, offset: 416)
!12975 = !DIDerivedType(tag: DW_TAG_member, name: "smac", scope: !12944, file: !11520, line: 1009, baseType: !11301, size: 48, offset: 424)
!12976 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_id", scope: !12944, file: !11520, line: 1010, baseType: !744, size: 16, offset: 480)
!12977 = !DIDerivedType(tag: DW_TAG_member, name: "network_hdr_type", scope: !12944, file: !11520, line: 1011, baseType: !1403, size: 8, offset: 496)
!12978 = !DIDerivedType(tag: DW_TAG_member, name: "pool_entry", scope: !12862, file: !11520, line: 1572, baseType: !30, size: 128, offset: 512)
!12979 = !DIDerivedType(tag: DW_TAG_member, scope: !12862, file: !11520, line: 1573, baseType: !12980, size: 320, offset: 640)
!12980 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12862, file: !11520, line: 1573, size: 320, elements: !12981)
!12981 = !{!12982, !12995}
!12982 = !DIDerivedType(tag: DW_TAG_member, name: "iop", scope: !12980, file: !11520, line: 1574, baseType: !12983, size: 320)
!12983 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_poll", file: !12984, line: 8, size: 320, elements: !12985)
!12984 = !DIFile(filename: "./include/linux/irq_poll.h", directory: "/home/lizy2001/genbc/linux")
!12985 = !{!12986, !12987, !12988, !12989}
!12986 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !12983, file: !12984, line: 9, baseType: !30, size: 128)
!12987 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !12983, file: !12984, line: 10, baseType: !135, size: 64, offset: 128)
!12988 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !12983, file: !12984, line: 11, baseType: !6, size: 32, offset: 192)
!12989 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !12983, file: !12984, line: 12, baseType: !12990, size: 64, offset: 256)
!12990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12991, size: 64)
!12991 = !DIDerivedType(tag: DW_TAG_typedef, name: "irq_poll_fn", file: !12984, line: 6, baseType: !12992)
!12992 = !DISubroutineType(types: !12993)
!12993 = !{!6, !12994, !6}
!12994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12983, size: 64)
!12995 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !12980, file: !11520, line: 1575, baseType: !1728, size: 256)
!12996 = !DIDerivedType(tag: DW_TAG_member, name: "comp_wq", scope: !12862, file: !11520, line: 1577, baseType: !2578, size: 64, offset: 960)
!12997 = !DIDerivedType(tag: DW_TAG_member, name: "dim", scope: !12862, file: !11520, line: 1578, baseType: !12998, size: 64, offset: 1024)
!12998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12999, size: 64)
!12999 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dim", file: !13000, line: 102, size: 960, elements: !13001)
!13000 = !DIFile(filename: "./include/linux/dim.h", directory: "/home/lizy2001/genbc/linux")
!13001 = !{!13002, !13003, !13011, !13019, !13020, !13021, !13022, !13023, !13024, !13025, !13026, !13027}
!13002 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !12999, file: !13000, line: 103, baseType: !1403, size: 8)
!13003 = !DIDerivedType(tag: DW_TAG_member, name: "prev_stats", scope: !12999, file: !13000, line: 104, baseType: !13004, size: 160, offset: 32)
!13004 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dim_stats", file: !13000, line: 77, size: 160, elements: !13005)
!13005 = !{!13006, !13007, !13008, !13009, !13010}
!13006 = !DIDerivedType(tag: DW_TAG_member, name: "ppms", scope: !13004, file: !13000, line: 78, baseType: !6, size: 32)
!13007 = !DIDerivedType(tag: DW_TAG_member, name: "bpms", scope: !13004, file: !13000, line: 79, baseType: !6, size: 32, offset: 32)
!13008 = !DIDerivedType(tag: DW_TAG_member, name: "epms", scope: !13004, file: !13000, line: 80, baseType: !6, size: 32, offset: 64)
!13009 = !DIDerivedType(tag: DW_TAG_member, name: "cpms", scope: !13004, file: !13000, line: 81, baseType: !6, size: 32, offset: 96)
!13010 = !DIDerivedType(tag: DW_TAG_member, name: "cpe_ratio", scope: !13004, file: !13000, line: 82, baseType: !6, size: 32, offset: 128)
!13011 = !DIDerivedType(tag: DW_TAG_member, name: "start_sample", scope: !12999, file: !13000, line: 105, baseType: !13012, size: 192, offset: 192)
!13012 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dim_sample", file: !13000, line: 59, size: 192, elements: !13013)
!13013 = !{!13014, !13015, !13016, !13017, !13018}
!13014 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !13012, file: !13000, line: 60, baseType: !1347, size: 64)
!13015 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_ctr", scope: !13012, file: !13000, line: 61, baseType: !229, size: 32, offset: 64)
!13016 = !DIDerivedType(tag: DW_TAG_member, name: "byte_ctr", scope: !13012, file: !13000, line: 62, baseType: !229, size: 32, offset: 96)
!13017 = !DIDerivedType(tag: DW_TAG_member, name: "event_ctr", scope: !13012, file: !13000, line: 63, baseType: !744, size: 16, offset: 128)
!13018 = !DIDerivedType(tag: DW_TAG_member, name: "comp_ctr", scope: !13012, file: !13000, line: 64, baseType: !229, size: 32, offset: 160)
!13019 = !DIDerivedType(tag: DW_TAG_member, name: "measuring_sample", scope: !12999, file: !13000, line: 106, baseType: !13012, size: 192, offset: 384)
!13020 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !12999, file: !13000, line: 107, baseType: !1728, size: 256, offset: 576)
!13021 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !12999, file: !13000, line: 108, baseType: !159, size: 64, offset: 832)
!13022 = !DIDerivedType(tag: DW_TAG_member, name: "profile_ix", scope: !12999, file: !13000, line: 109, baseType: !1403, size: 8, offset: 896)
!13023 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !12999, file: !13000, line: 110, baseType: !1403, size: 8, offset: 904)
!13024 = !DIDerivedType(tag: DW_TAG_member, name: "tune_state", scope: !12999, file: !13000, line: 111, baseType: !1403, size: 8, offset: 912)
!13025 = !DIDerivedType(tag: DW_TAG_member, name: "steps_right", scope: !12999, file: !13000, line: 112, baseType: !1403, size: 8, offset: 920)
!13026 = !DIDerivedType(tag: DW_TAG_member, name: "steps_left", scope: !12999, file: !13000, line: 113, baseType: !1403, size: 8, offset: 928)
!13027 = !DIDerivedType(tag: DW_TAG_member, name: "tired", scope: !12999, file: !13000, line: 114, baseType: !1403, size: 8, offset: 936)
!13028 = !DIDerivedType(tag: DW_TAG_member, name: "timestamp", scope: !12862, file: !11520, line: 1581, baseType: !1347, size: 64, offset: 1088)
!13029 = !DIDerivedType(tag: DW_TAG_member, name: "interrupt", scope: !12862, file: !11520, line: 1582, baseType: !1403, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!13030 = !DIDerivedType(tag: DW_TAG_member, name: "shared", scope: !12862, file: !11520, line: 1583, baseType: !1403, size: 1, offset: 1153, flags: DIFlagBitField, extraData: i64 1152)
!13031 = !DIDerivedType(tag: DW_TAG_member, name: "comp_vector", scope: !12862, file: !11520, line: 1584, baseType: !199, size: 32, offset: 1184)
!13032 = !DIDerivedType(tag: DW_TAG_member, name: "res", scope: !12862, file: !11520, line: 1589, baseType: !12781, size: 512, offset: 1216)
!13033 = !DIDerivedType(tag: DW_TAG_member, name: "recv_cq", scope: !12753, file: !11520, line: 1744, baseType: !12861, size: 64, offset: 192)
!13034 = !DIDerivedType(tag: DW_TAG_member, name: "mr_lock", scope: !12753, file: !11520, line: 1745, baseType: !44, offset: 256)
!13035 = !DIDerivedType(tag: DW_TAG_member, name: "mrs_used", scope: !12753, file: !11520, line: 1746, baseType: !6, size: 32, offset: 256)
!13036 = !DIDerivedType(tag: DW_TAG_member, name: "rdma_mrs", scope: !12753, file: !11520, line: 1747, baseType: !30, size: 128, offset: 320)
!13037 = !DIDerivedType(tag: DW_TAG_member, name: "sig_mrs", scope: !12753, file: !11520, line: 1748, baseType: !30, size: 128, offset: 448)
!13038 = !DIDerivedType(tag: DW_TAG_member, name: "srq", scope: !12753, file: !11520, line: 1749, baseType: !12887, size: 64, offset: 576)
!13039 = !DIDerivedType(tag: DW_TAG_member, name: "xrcd", scope: !12753, file: !11520, line: 1750, baseType: !12910, size: 64, offset: 640)
!13040 = !DIDerivedType(tag: DW_TAG_member, name: "xrcd_list", scope: !12753, file: !11520, line: 1751, baseType: !30, size: 128, offset: 704)
!13041 = !DIDerivedType(tag: DW_TAG_member, name: "usecnt", scope: !12753, file: !11520, line: 1754, baseType: !632, size: 32, offset: 832)
!13042 = !DIDerivedType(tag: DW_TAG_member, name: "open_list", scope: !12753, file: !11520, line: 1755, baseType: !30, size: 128, offset: 896)
!13043 = !DIDerivedType(tag: DW_TAG_member, name: "real_qp", scope: !12753, file: !11520, line: 1756, baseType: !12752, size: 64, offset: 1024)
!13044 = !DIDerivedType(tag: DW_TAG_member, name: "uobject", scope: !12753, file: !11520, line: 1757, baseType: !13045, size: 64, offset: 1088)
!13045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13046, size: 64)
!13046 = !DICompositeType(tag: DW_TAG_structure_type, name: "ib_uqp_object", file: !11520, line: 48, flags: DIFlagFwdDecl)
!13047 = !DIDerivedType(tag: DW_TAG_member, name: "event_handler", scope: !12753, file: !11520, line: 1758, baseType: !12874, size: 64, offset: 1152)
!13048 = !DIDerivedType(tag: DW_TAG_member, name: "qp_context", scope: !12753, file: !11520, line: 1759, baseType: !159, size: 64, offset: 1216)
!13049 = !DIDerivedType(tag: DW_TAG_member, name: "av_sgid_attr", scope: !12753, file: !11520, line: 1761, baseType: !13050, size: 64, offset: 1280)
!13050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13051, size: 64)
!13051 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13052)
!13052 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_gid_attr", file: !11520, line: 148, size: 320, elements: !13053)
!13053 = !{!13054, !13055, !13056, !13065, !13066, !13067}
!13054 = !DIDerivedType(tag: DW_TAG_member, name: "ndev", scope: !13052, file: !11520, line: 149, baseType: !2169, size: 64)
!13055 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !13052, file: !11520, line: 150, baseType: !12737, size: 64, offset: 64)
!13056 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !13052, file: !11520, line: 151, baseType: !13057, size: 128, offset: 128)
!13057 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "ib_gid", file: !11520, line: 130, size: 128, elements: !13058)
!13058 = !{!13059, !13060}
!13059 = !DIDerivedType(tag: DW_TAG_member, name: "raw", scope: !13057, file: !11520, line: 131, baseType: !6098, size: 128)
!13060 = !DIDerivedType(tag: DW_TAG_member, name: "global", scope: !13057, file: !11520, line: 135, baseType: !13061, size: 128)
!13061 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !13057, file: !11520, line: 132, size: 128, elements: !13062)
!13062 = !{!13063, !13064}
!13063 = !DIDerivedType(tag: DW_TAG_member, name: "subnet_prefix", scope: !13061, file: !11520, line: 133, baseType: !10476, size: 64)
!13064 = !DIDerivedType(tag: DW_TAG_member, name: "interface_id", scope: !13061, file: !11520, line: 134, baseType: !10476, size: 64, offset: 64)
!13065 = !DIDerivedType(tag: DW_TAG_member, name: "gid_type", scope: !13052, file: !11520, line: 152, baseType: !11618, size: 32, offset: 256)
!13066 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !13052, file: !11520, line: 153, baseType: !744, size: 16, offset: 288)
!13067 = !DIDerivedType(tag: DW_TAG_member, name: "port_num", scope: !13052, file: !11520, line: 154, baseType: !1403, size: 8, offset: 304)
!13068 = !DIDerivedType(tag: DW_TAG_member, name: "alt_path_sgid_attr", scope: !12753, file: !11520, line: 1762, baseType: !13050, size: 64, offset: 1344)
!13069 = !DIDerivedType(tag: DW_TAG_member, name: "qp_num", scope: !12753, file: !11520, line: 1763, baseType: !229, size: 32, offset: 1408)
!13070 = !DIDerivedType(tag: DW_TAG_member, name: "max_write_sge", scope: !12753, file: !11520, line: 1764, baseType: !229, size: 32, offset: 1440)
!13071 = !DIDerivedType(tag: DW_TAG_member, name: "max_read_sge", scope: !12753, file: !11520, line: 1765, baseType: !229, size: 32, offset: 1472)
!13072 = !DIDerivedType(tag: DW_TAG_member, name: "qp_type", scope: !12753, file: !11520, line: 1766, baseType: !11624, size: 32, offset: 1504)
!13073 = !DIDerivedType(tag: DW_TAG_member, name: "rwq_ind_tbl", scope: !12753, file: !11520, line: 1767, baseType: !13074, size: 64, offset: 1536)
!13074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13075, size: 64)
!13075 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_rwq_ind_table", file: !11520, line: 1682, size: 320, elements: !13076)
!13076 = !{!13077, !13078, !13079, !13080, !13081, !13082}
!13077 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !13075, file: !11520, line: 1683, baseType: !12737, size: 64)
!13078 = !DIDerivedType(tag: DW_TAG_member, name: "uobject", scope: !13075, file: !11520, line: 1684, baseType: !12764, size: 64, offset: 64)
!13079 = !DIDerivedType(tag: DW_TAG_member, name: "usecnt", scope: !13075, file: !11520, line: 1685, baseType: !632, size: 32, offset: 128)
!13080 = !DIDerivedType(tag: DW_TAG_member, name: "ind_tbl_num", scope: !13075, file: !11520, line: 1686, baseType: !229, size: 32, offset: 160)
!13081 = !DIDerivedType(tag: DW_TAG_member, name: "log_ind_tbl_size", scope: !13075, file: !11520, line: 1687, baseType: !229, size: 32, offset: 192)
!13082 = !DIDerivedType(tag: DW_TAG_member, name: "ind_tbl", scope: !13075, file: !11520, line: 1688, baseType: !13083, size: 64, offset: 256)
!13083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12920, size: 64)
!13084 = !DIDerivedType(tag: DW_TAG_member, name: "qp_sec", scope: !12753, file: !11520, line: 1768, baseType: !13085, size: 64, offset: 1600)
!13085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13086, size: 64)
!13086 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_qp_security", file: !11520, line: 1719, size: 896, elements: !13087)
!13087 = !{!13088, !13089, !13090, !13091, !13105, !13106, !13107, !13108, !13109, !13110}
!13088 = !DIDerivedType(tag: DW_TAG_member, name: "qp", scope: !13086, file: !11520, line: 1720, baseType: !12752, size: 64)
!13089 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !13086, file: !11520, line: 1721, baseType: !12737, size: 64, offset: 64)
!13090 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !13086, file: !11520, line: 1723, baseType: !558, size: 192, offset: 128)
!13091 = !DIDerivedType(tag: DW_TAG_member, name: "ports_pkeys", scope: !13086, file: !11520, line: 1724, baseType: !13092, size: 64, offset: 320)
!13092 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13093, size: 64)
!13093 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_ports_pkeys", file: !11520, line: 1714, size: 768, elements: !13094)
!13094 = !{!13095, !13104}
!13095 = !DIDerivedType(tag: DW_TAG_member, name: "main", scope: !13093, file: !11520, line: 1715, baseType: !13096, size: 384)
!13096 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_port_pkey", file: !11520, line: 1705, size: 384, elements: !13097)
!13097 = !{!13098, !13099, !13100, !13101, !13102, !13103}
!13098 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !13096, file: !11520, line: 1706, baseType: !11648, size: 32)
!13099 = !DIDerivedType(tag: DW_TAG_member, name: "pkey_index", scope: !13096, file: !11520, line: 1707, baseType: !744, size: 16, offset: 32)
!13100 = !DIDerivedType(tag: DW_TAG_member, name: "port_num", scope: !13096, file: !11520, line: 1708, baseType: !1403, size: 8, offset: 48)
!13101 = !DIDerivedType(tag: DW_TAG_member, name: "qp_list", scope: !13096, file: !11520, line: 1709, baseType: !30, size: 128, offset: 64)
!13102 = !DIDerivedType(tag: DW_TAG_member, name: "to_error_list", scope: !13096, file: !11520, line: 1710, baseType: !30, size: 128, offset: 192)
!13103 = !DIDerivedType(tag: DW_TAG_member, name: "sec", scope: !13096, file: !11520, line: 1711, baseType: !13085, size: 64, offset: 320)
!13104 = !DIDerivedType(tag: DW_TAG_member, name: "alt", scope: !13093, file: !11520, line: 1716, baseType: !13096, size: 384, offset: 384)
!13105 = !DIDerivedType(tag: DW_TAG_member, name: "shared_qp_list", scope: !13086, file: !11520, line: 1728, baseType: !30, size: 128, offset: 384)
!13106 = !DIDerivedType(tag: DW_TAG_member, name: "security", scope: !13086, file: !11520, line: 1729, baseType: !159, size: 64, offset: 512)
!13107 = !DIDerivedType(tag: DW_TAG_member, name: "destroying", scope: !13086, file: !11520, line: 1730, baseType: !304, size: 8, offset: 576)
!13108 = !DIDerivedType(tag: DW_TAG_member, name: "error_list_count", scope: !13086, file: !11520, line: 1731, baseType: !632, size: 32, offset: 608)
!13109 = !DIDerivedType(tag: DW_TAG_member, name: "error_complete", scope: !13086, file: !11520, line: 1732, baseType: !1789, size: 192, offset: 640)
!13110 = !DIDerivedType(tag: DW_TAG_member, name: "error_comps_pending", scope: !13086, file: !11520, line: 1733, baseType: !6, size: 32, offset: 832)
!13111 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !12753, file: !11520, line: 1769, baseType: !1403, size: 8, offset: 1664)
!13112 = !DIDerivedType(tag: DW_TAG_member, name: "integrity_en", scope: !12753, file: !11520, line: 1771, baseType: !304, size: 8, offset: 1672)
!13113 = !DIDerivedType(tag: DW_TAG_member, name: "res", scope: !12753, file: !11520, line: 1775, baseType: !12781, size: 512, offset: 1728)
!13114 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !12753, file: !11520, line: 1778, baseType: !13115, size: 64, offset: 2240)
!13115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13116, size: 64)
!13116 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rdma_counter", file: !13117, line: 35, size: 1088, elements: !13118)
!13117 = !DIFile(filename: "./include/rdma/rdma_counter.h", directory: "/home/lizy2001/genbc/linux")
!13118 = !{!13119, !13120, !13121, !13122, !13123, !13132, !13133, !13145}
!13119 = !DIDerivedType(tag: DW_TAG_member, name: "res", scope: !13116, file: !13117, line: 36, baseType: !12781, size: 512)
!13120 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !13116, file: !13117, line: 37, baseType: !12737, size: 64, offset: 512)
!13121 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !13116, file: !13117, line: 38, baseType: !373, size: 32, offset: 576)
!13122 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !13116, file: !13117, line: 39, baseType: !1556, size: 32, offset: 608)
!13123 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !13116, file: !13117, line: 40, baseType: !13124, size: 96, offset: 640)
!13124 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rdma_counter_mode", file: !13117, line: 22, size: 96, elements: !13125)
!13125 = !{!13126, !13127, !13128}
!13126 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !13124, file: !13117, line: 23, baseType: !11653, size: 32)
!13127 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !13124, file: !13117, line: 24, baseType: !11660, size: 32, offset: 32)
!13128 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !13124, file: !13117, line: 25, baseType: !13129, size: 32, offset: 64)
!13129 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "auto_mode_param", file: !13117, line: 18, size: 32, elements: !13130)
!13130 = !{!13131}
!13131 = !DIDerivedType(tag: DW_TAG_member, name: "qp_type", scope: !13129, file: !13117, line: 19, baseType: !6, size: 32)
!13132 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !13116, file: !13117, line: 41, baseType: !558, size: 192, offset: 768)
!13133 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !13116, file: !13117, line: 42, baseType: !13134, size: 64, offset: 960)
!13134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13135, size: 64)
!13135 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rdma_hw_stats", file: !11520, line: 564, size: 448, elements: !13136)
!13136 = !{!13137, !13138, !13139, !13140, !13142, !13143}
!13137 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !13135, file: !11520, line: 565, baseType: !558, size: 192)
!13138 = !DIDerivedType(tag: DW_TAG_member, name: "timestamp", scope: !13135, file: !11520, line: 566, baseType: !135, size: 64, offset: 192)
!13139 = !DIDerivedType(tag: DW_TAG_member, name: "lifespan", scope: !13135, file: !11520, line: 567, baseType: !135, size: 64, offset: 256)
!13140 = !DIDerivedType(tag: DW_TAG_member, name: "names", scope: !13135, file: !11520, line: 568, baseType: !13141, size: 64, offset: 320)
!13141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3619, size: 64)
!13142 = !DIDerivedType(tag: DW_TAG_member, name: "num_counters", scope: !13135, file: !11520, line: 569, baseType: !6, size: 32, offset: 384)
!13143 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !13135, file: !11520, line: 570, baseType: !13144, offset: 448)
!13144 = !DICompositeType(tag: DW_TAG_array_type, baseType: !235, elements: !2189)
!13145 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !13116, file: !13117, line: 43, baseType: !1403, size: 8, offset: 1024)
!13146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13147, size: 64)
!13147 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13148)
!13148 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_send_wr", file: !11520, line: 1350, size: 320, elements: !13149)
!13149 = !{!13150, !13152, !13157, !13164, !13165, !13166, !13167}
!13150 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !13148, file: !11520, line: 1351, baseType: !13151, size: 64)
!13151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13148, size: 64)
!13152 = !DIDerivedType(tag: DW_TAG_member, scope: !13148, file: !11520, line: 1352, baseType: !13153, size: 64, offset: 64)
!13153 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13148, file: !11520, line: 1352, size: 64, elements: !13154)
!13154 = !{!13155, !13156}
!13155 = !DIDerivedType(tag: DW_TAG_member, name: "wr_id", scope: !13153, file: !11520, line: 1353, baseType: !235, size: 64)
!13156 = !DIDerivedType(tag: DW_TAG_member, name: "wr_cqe", scope: !13153, file: !11520, line: 1354, baseType: !12951, size: 64)
!13157 = !DIDerivedType(tag: DW_TAG_member, name: "sg_list", scope: !13148, file: !11520, line: 1356, baseType: !13158, size: 64, offset: 128)
!13158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13159, size: 64)
!13159 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_sge", file: !11520, line: 1340, size: 128, elements: !13160)
!13160 = !{!13161, !13162, !13163}
!13161 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !13159, file: !11520, line: 1341, baseType: !235, size: 64)
!13162 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !13159, file: !11520, line: 1342, baseType: !229, size: 32, offset: 64)
!13163 = !DIDerivedType(tag: DW_TAG_member, name: "lkey", scope: !13159, file: !11520, line: 1343, baseType: !229, size: 32, offset: 96)
!13164 = !DIDerivedType(tag: DW_TAG_member, name: "num_sge", scope: !13148, file: !11520, line: 1357, baseType: !6, size: 32, offset: 192)
!13165 = !DIDerivedType(tag: DW_TAG_member, name: "opcode", scope: !13148, file: !11520, line: 1358, baseType: !11664, size: 32, offset: 224)
!13166 = !DIDerivedType(tag: DW_TAG_member, name: "send_flags", scope: !13148, file: !11520, line: 1359, baseType: !6, size: 32, offset: 256)
!13167 = !DIDerivedType(tag: DW_TAG_member, name: "ex", scope: !13148, file: !11520, line: 1363, baseType: !13168, size: 32, offset: 288)
!13168 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13148, file: !11520, line: 1360, size: 32, elements: !13169)
!13169 = !{!13170, !13171}
!13170 = !DIDerivedType(tag: DW_TAG_member, name: "imm_data", scope: !13168, file: !11520, line: 1361, baseType: !2019, size: 32)
!13171 = !DIDerivedType(tag: DW_TAG_member, name: "invalidate_rkey", scope: !13168, file: !11520, line: 1362, baseType: !229, size: 32)
!13172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13146, size: 64)
!13173 = !DIDerivedType(tag: DW_TAG_member, name: "post_recv", scope: !12742, file: !11520, line: 2294, baseType: !13174, size: 64, offset: 256)
!13174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13175, size: 64)
!13175 = !DISubroutineType(types: !13176)
!13176 = !{!6, !12752, !13177, !13190}
!13177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13178, size: 64)
!13178 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13179)
!13179 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_recv_wr", file: !11520, line: 1421, size: 256, elements: !13180)
!13180 = !{!13181, !13183, !13188, !13189}
!13181 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !13179, file: !11520, line: 1422, baseType: !13182, size: 64)
!13182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13179, size: 64)
!13183 = !DIDerivedType(tag: DW_TAG_member, scope: !13179, file: !11520, line: 1423, baseType: !13184, size: 64, offset: 64)
!13184 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13179, file: !11520, line: 1423, size: 64, elements: !13185)
!13185 = !{!13186, !13187}
!13186 = !DIDerivedType(tag: DW_TAG_member, name: "wr_id", scope: !13184, file: !11520, line: 1424, baseType: !235, size: 64)
!13187 = !DIDerivedType(tag: DW_TAG_member, name: "wr_cqe", scope: !13184, file: !11520, line: 1425, baseType: !12951, size: 64)
!13188 = !DIDerivedType(tag: DW_TAG_member, name: "sg_list", scope: !13179, file: !11520, line: 1427, baseType: !13158, size: 64, offset: 128)
!13189 = !DIDerivedType(tag: DW_TAG_member, name: "num_sge", scope: !13179, file: !11520, line: 1428, baseType: !6, size: 32, offset: 192)
!13190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13177, size: 64)
!13191 = !DIDerivedType(tag: DW_TAG_member, name: "drain_rq", scope: !12742, file: !11520, line: 2296, baseType: !13192, size: 64, offset: 320)
!13192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13193, size: 64)
!13193 = !DISubroutineType(types: !13194)
!13194 = !{null, !12752}
!13195 = !DIDerivedType(tag: DW_TAG_member, name: "drain_sq", scope: !12742, file: !11520, line: 2297, baseType: !13192, size: 64, offset: 384)
!13196 = !DIDerivedType(tag: DW_TAG_member, name: "poll_cq", scope: !12742, file: !11520, line: 2298, baseType: !13197, size: 64, offset: 448)
!13197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13198, size: 64)
!13198 = !DISubroutineType(types: !13199)
!13199 = !{!6, !12861, !6, !12943}
!13200 = !DIDerivedType(tag: DW_TAG_member, name: "peek_cq", scope: !12742, file: !11520, line: 2299, baseType: !13201, size: 64, offset: 512)
!13201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13202, size: 64)
!13202 = !DISubroutineType(types: !13203)
!13203 = !{!6, !12861, !6}
!13204 = !DIDerivedType(tag: DW_TAG_member, name: "req_notify_cq", scope: !12742, file: !11520, line: 2300, baseType: !13205, size: 64, offset: 576)
!13205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13206, size: 64)
!13206 = !DISubroutineType(types: !13207)
!13207 = !{!6, !12861, !11692}
!13208 = !DIDerivedType(tag: DW_TAG_member, name: "req_ncomp_notif", scope: !12742, file: !11520, line: 2301, baseType: !13201, size: 64, offset: 640)
!13209 = !DIDerivedType(tag: DW_TAG_member, name: "post_srq_recv", scope: !12742, file: !11520, line: 2302, baseType: !13210, size: 64, offset: 704)
!13210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13211, size: 64)
!13211 = !DISubroutineType(types: !13212)
!13212 = !{!6, !12887, !13177, !13190}
!13213 = !DIDerivedType(tag: DW_TAG_member, name: "process_mad", scope: !12742, file: !11520, line: 2305, baseType: !13214, size: 64, offset: 768)
!13214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13215, size: 64)
!13215 = !DISubroutineType(types: !13216)
!13216 = !{!6, !12737, !6, !1403, !13217, !13219, !13229, !13232, !1774, !4004}
!13217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13218, size: 64)
!13218 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12944)
!13219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13220, size: 64)
!13220 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13221)
!13221 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_grh", file: !11520, line: 765, size: 320, elements: !13222)
!13222 = !{!13223, !13224, !13225, !13226, !13227, !13228}
!13223 = !DIDerivedType(tag: DW_TAG_member, name: "version_tclass_flow", scope: !13221, file: !11520, line: 766, baseType: !2019, size: 32)
!13224 = !DIDerivedType(tag: DW_TAG_member, name: "paylen", scope: !13221, file: !11520, line: 767, baseType: !2037, size: 16, offset: 32)
!13225 = !DIDerivedType(tag: DW_TAG_member, name: "next_hdr", scope: !13221, file: !11520, line: 768, baseType: !1403, size: 8, offset: 48)
!13226 = !DIDerivedType(tag: DW_TAG_member, name: "hop_limit", scope: !13221, file: !11520, line: 769, baseType: !1403, size: 8, offset: 56)
!13227 = !DIDerivedType(tag: DW_TAG_member, name: "sgid", scope: !13221, file: !11520, line: 770, baseType: !13057, size: 128, offset: 64)
!13228 = !DIDerivedType(tag: DW_TAG_member, name: "dgid", scope: !13221, file: !11520, line: 771, baseType: !13057, size: 128, offset: 192)
!13229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13230, size: 64)
!13230 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13231)
!13231 = !DICompositeType(tag: DW_TAG_structure_type, name: "ib_mad", file: !11520, line: 2133, flags: DIFlagFwdDecl)
!13232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13231, size: 64)
!13233 = !DIDerivedType(tag: DW_TAG_member, name: "query_device", scope: !12742, file: !11520, line: 2310, baseType: !13234, size: 64, offset: 832)
!13234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13235, size: 64)
!13235 = !DISubroutineType(types: !13236)
!13236 = !{!6, !12737, !13237, !13319}
!13237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13238, size: 64)
!13238 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_device_attr", file: !11520, line: 378, size: 2368, elements: !13239)
!13239 = !{!13240, !13241, !13242, !13243, !13244, !13245, !13246, !13247, !13248, !13249, !13250, !13251, !13252, !13253, !13254, !13255, !13256, !13257, !13258, !13259, !13260, !13261, !13262, !13263, !13264, !13265, !13266, !13267, !13268, !13269, !13270, !13271, !13272, !13273, !13274, !13275, !13276, !13277, !13278, !13279, !13280, !13281, !13282, !13294, !13295, !13296, !13302, !13303, !13304, !13312, !13317, !13318}
!13240 = !DIDerivedType(tag: DW_TAG_member, name: "fw_ver", scope: !13238, file: !11520, line: 379, baseType: !235, size: 64)
!13241 = !DIDerivedType(tag: DW_TAG_member, name: "sys_image_guid", scope: !13238, file: !11520, line: 380, baseType: !10476, size: 64, offset: 64)
!13242 = !DIDerivedType(tag: DW_TAG_member, name: "max_mr_size", scope: !13238, file: !11520, line: 381, baseType: !235, size: 64, offset: 128)
!13243 = !DIDerivedType(tag: DW_TAG_member, name: "page_size_cap", scope: !13238, file: !11520, line: 382, baseType: !235, size: 64, offset: 192)
!13244 = !DIDerivedType(tag: DW_TAG_member, name: "vendor_id", scope: !13238, file: !11520, line: 383, baseType: !229, size: 32, offset: 256)
!13245 = !DIDerivedType(tag: DW_TAG_member, name: "vendor_part_id", scope: !13238, file: !11520, line: 384, baseType: !229, size: 32, offset: 288)
!13246 = !DIDerivedType(tag: DW_TAG_member, name: "hw_ver", scope: !13238, file: !11520, line: 385, baseType: !229, size: 32, offset: 320)
!13247 = !DIDerivedType(tag: DW_TAG_member, name: "max_qp", scope: !13238, file: !11520, line: 386, baseType: !6, size: 32, offset: 352)
!13248 = !DIDerivedType(tag: DW_TAG_member, name: "max_qp_wr", scope: !13238, file: !11520, line: 387, baseType: !6, size: 32, offset: 384)
!13249 = !DIDerivedType(tag: DW_TAG_member, name: "device_cap_flags", scope: !13238, file: !11520, line: 388, baseType: !235, size: 64, offset: 448)
!13250 = !DIDerivedType(tag: DW_TAG_member, name: "max_send_sge", scope: !13238, file: !11520, line: 389, baseType: !6, size: 32, offset: 512)
!13251 = !DIDerivedType(tag: DW_TAG_member, name: "max_recv_sge", scope: !13238, file: !11520, line: 390, baseType: !6, size: 32, offset: 544)
!13252 = !DIDerivedType(tag: DW_TAG_member, name: "max_sge_rd", scope: !13238, file: !11520, line: 391, baseType: !6, size: 32, offset: 576)
!13253 = !DIDerivedType(tag: DW_TAG_member, name: "max_cq", scope: !13238, file: !11520, line: 392, baseType: !6, size: 32, offset: 608)
!13254 = !DIDerivedType(tag: DW_TAG_member, name: "max_cqe", scope: !13238, file: !11520, line: 393, baseType: !6, size: 32, offset: 640)
!13255 = !DIDerivedType(tag: DW_TAG_member, name: "max_mr", scope: !13238, file: !11520, line: 394, baseType: !6, size: 32, offset: 672)
!13256 = !DIDerivedType(tag: DW_TAG_member, name: "max_pd", scope: !13238, file: !11520, line: 395, baseType: !6, size: 32, offset: 704)
!13257 = !DIDerivedType(tag: DW_TAG_member, name: "max_qp_rd_atom", scope: !13238, file: !11520, line: 396, baseType: !6, size: 32, offset: 736)
!13258 = !DIDerivedType(tag: DW_TAG_member, name: "max_ee_rd_atom", scope: !13238, file: !11520, line: 397, baseType: !6, size: 32, offset: 768)
!13259 = !DIDerivedType(tag: DW_TAG_member, name: "max_res_rd_atom", scope: !13238, file: !11520, line: 398, baseType: !6, size: 32, offset: 800)
!13260 = !DIDerivedType(tag: DW_TAG_member, name: "max_qp_init_rd_atom", scope: !13238, file: !11520, line: 399, baseType: !6, size: 32, offset: 832)
!13261 = !DIDerivedType(tag: DW_TAG_member, name: "max_ee_init_rd_atom", scope: !13238, file: !11520, line: 400, baseType: !6, size: 32, offset: 864)
!13262 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_cap", scope: !13238, file: !11520, line: 401, baseType: !11698, size: 32, offset: 896)
!13263 = !DIDerivedType(tag: DW_TAG_member, name: "masked_atomic_cap", scope: !13238, file: !11520, line: 402, baseType: !11698, size: 32, offset: 928)
!13264 = !DIDerivedType(tag: DW_TAG_member, name: "max_ee", scope: !13238, file: !11520, line: 403, baseType: !6, size: 32, offset: 960)
!13265 = !DIDerivedType(tag: DW_TAG_member, name: "max_rdd", scope: !13238, file: !11520, line: 404, baseType: !6, size: 32, offset: 992)
!13266 = !DIDerivedType(tag: DW_TAG_member, name: "max_mw", scope: !13238, file: !11520, line: 405, baseType: !6, size: 32, offset: 1024)
!13267 = !DIDerivedType(tag: DW_TAG_member, name: "max_raw_ipv6_qp", scope: !13238, file: !11520, line: 406, baseType: !6, size: 32, offset: 1056)
!13268 = !DIDerivedType(tag: DW_TAG_member, name: "max_raw_ethy_qp", scope: !13238, file: !11520, line: 407, baseType: !6, size: 32, offset: 1088)
!13269 = !DIDerivedType(tag: DW_TAG_member, name: "max_mcast_grp", scope: !13238, file: !11520, line: 408, baseType: !6, size: 32, offset: 1120)
!13270 = !DIDerivedType(tag: DW_TAG_member, name: "max_mcast_qp_attach", scope: !13238, file: !11520, line: 409, baseType: !6, size: 32, offset: 1152)
!13271 = !DIDerivedType(tag: DW_TAG_member, name: "max_total_mcast_qp_attach", scope: !13238, file: !11520, line: 410, baseType: !6, size: 32, offset: 1184)
!13272 = !DIDerivedType(tag: DW_TAG_member, name: "max_ah", scope: !13238, file: !11520, line: 411, baseType: !6, size: 32, offset: 1216)
!13273 = !DIDerivedType(tag: DW_TAG_member, name: "max_srq", scope: !13238, file: !11520, line: 412, baseType: !6, size: 32, offset: 1248)
!13274 = !DIDerivedType(tag: DW_TAG_member, name: "max_srq_wr", scope: !13238, file: !11520, line: 413, baseType: !6, size: 32, offset: 1280)
!13275 = !DIDerivedType(tag: DW_TAG_member, name: "max_srq_sge", scope: !13238, file: !11520, line: 414, baseType: !6, size: 32, offset: 1312)
!13276 = !DIDerivedType(tag: DW_TAG_member, name: "max_fast_reg_page_list_len", scope: !13238, file: !11520, line: 415, baseType: !199, size: 32, offset: 1344)
!13277 = !DIDerivedType(tag: DW_TAG_member, name: "max_pi_fast_reg_page_list_len", scope: !13238, file: !11520, line: 416, baseType: !199, size: 32, offset: 1376)
!13278 = !DIDerivedType(tag: DW_TAG_member, name: "max_pkeys", scope: !13238, file: !11520, line: 417, baseType: !744, size: 16, offset: 1408)
!13279 = !DIDerivedType(tag: DW_TAG_member, name: "local_ca_ack_delay", scope: !13238, file: !11520, line: 418, baseType: !1403, size: 8, offset: 1424)
!13280 = !DIDerivedType(tag: DW_TAG_member, name: "sig_prot_cap", scope: !13238, file: !11520, line: 419, baseType: !6, size: 32, offset: 1440)
!13281 = !DIDerivedType(tag: DW_TAG_member, name: "sig_guard_cap", scope: !13238, file: !11520, line: 420, baseType: !6, size: 32, offset: 1472)
!13282 = !DIDerivedType(tag: DW_TAG_member, name: "odp_caps", scope: !13238, file: !11520, line: 421, baseType: !13283, size: 192, offset: 1536)
!13283 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_odp_caps", file: !11520, line: 313, size: 192, elements: !13284)
!13284 = !{!13285, !13287}
!13285 = !DIDerivedType(tag: DW_TAG_member, name: "general_caps", scope: !13283, file: !11520, line: 314, baseType: !13286, size: 64)
!13286 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !31, line: 107, baseType: !235)
!13287 = !DIDerivedType(tag: DW_TAG_member, name: "per_transport_caps", scope: !13283, file: !11520, line: 320, baseType: !13288, size: 128, offset: 64)
!13288 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !13283, file: !11520, line: 315, size: 128, elements: !13289)
!13289 = !{!13290, !13291, !13292, !13293}
!13290 = !DIDerivedType(tag: DW_TAG_member, name: "rc_odp_caps", scope: !13288, file: !11520, line: 316, baseType: !373, size: 32)
!13291 = !DIDerivedType(tag: DW_TAG_member, name: "uc_odp_caps", scope: !13288, file: !11520, line: 317, baseType: !373, size: 32, offset: 32)
!13292 = !DIDerivedType(tag: DW_TAG_member, name: "ud_odp_caps", scope: !13288, file: !11520, line: 318, baseType: !373, size: 32, offset: 64)
!13293 = !DIDerivedType(tag: DW_TAG_member, name: "xrc_odp_caps", scope: !13288, file: !11520, line: 319, baseType: !373, size: 32, offset: 96)
!13294 = !DIDerivedType(tag: DW_TAG_member, name: "timestamp_mask", scope: !13238, file: !11520, line: 422, baseType: !13286, size: 64, offset: 1728)
!13295 = !DIDerivedType(tag: DW_TAG_member, name: "hca_core_clock", scope: !13238, file: !11520, line: 423, baseType: !13286, size: 64, offset: 1792)
!13296 = !DIDerivedType(tag: DW_TAG_member, name: "rss_caps", scope: !13238, file: !11520, line: 424, baseType: !13297, size: 96, offset: 1856)
!13297 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_rss_caps", file: !11520, line: 323, size: 96, elements: !13298)
!13298 = !{!13299, !13300, !13301}
!13299 = !DIDerivedType(tag: DW_TAG_member, name: "supported_qpts", scope: !13297, file: !11520, line: 328, baseType: !229, size: 32)
!13300 = !DIDerivedType(tag: DW_TAG_member, name: "max_rwq_indirection_tables", scope: !13297, file: !11520, line: 329, baseType: !229, size: 32, offset: 32)
!13301 = !DIDerivedType(tag: DW_TAG_member, name: "max_rwq_indirection_table_size", scope: !13297, file: !11520, line: 330, baseType: !229, size: 32, offset: 64)
!13302 = !DIDerivedType(tag: DW_TAG_member, name: "max_wq_type_rq", scope: !13238, file: !11520, line: 425, baseType: !229, size: 32, offset: 1952)
!13303 = !DIDerivedType(tag: DW_TAG_member, name: "raw_packet_caps", scope: !13238, file: !11520, line: 426, baseType: !229, size: 32, offset: 1984)
!13304 = !DIDerivedType(tag: DW_TAG_member, name: "tm_caps", scope: !13238, file: !11520, line: 427, baseType: !13305, size: 160, offset: 2016)
!13305 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_tm_caps", file: !11520, line: 338, size: 160, elements: !13306)
!13306 = !{!13307, !13308, !13309, !13310, !13311}
!13307 = !DIDerivedType(tag: DW_TAG_member, name: "max_rndv_hdr_size", scope: !13305, file: !11520, line: 340, baseType: !229, size: 32)
!13308 = !DIDerivedType(tag: DW_TAG_member, name: "max_num_tags", scope: !13305, file: !11520, line: 342, baseType: !229, size: 32, offset: 32)
!13309 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !13305, file: !11520, line: 344, baseType: !229, size: 32, offset: 64)
!13310 = !DIDerivedType(tag: DW_TAG_member, name: "max_ops", scope: !13305, file: !11520, line: 346, baseType: !229, size: 32, offset: 96)
!13311 = !DIDerivedType(tag: DW_TAG_member, name: "max_sge", scope: !13305, file: !11520, line: 348, baseType: !229, size: 32, offset: 128)
!13312 = !DIDerivedType(tag: DW_TAG_member, name: "cq_caps", scope: !13238, file: !11520, line: 428, baseType: !13313, size: 32, offset: 2176)
!13313 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_cq_caps", file: !11520, line: 361, size: 32, elements: !13314)
!13314 = !{!13315, !13316}
!13315 = !DIDerivedType(tag: DW_TAG_member, name: "max_cq_moderation_count", scope: !13313, file: !11520, line: 362, baseType: !744, size: 16)
!13316 = !DIDerivedType(tag: DW_TAG_member, name: "max_cq_moderation_period", scope: !13313, file: !11520, line: 363, baseType: !744, size: 16, offset: 16)
!13317 = !DIDerivedType(tag: DW_TAG_member, name: "max_dm_size", scope: !13238, file: !11520, line: 429, baseType: !235, size: 64, offset: 2240)
!13318 = !DIDerivedType(tag: DW_TAG_member, name: "max_sgl_rd", scope: !13238, file: !11520, line: 431, baseType: !229, size: 32, offset: 2304)
!13319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13320, size: 64)
!13320 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_udata", file: !11520, line: 1511, size: 256, elements: !13321)
!13321 = !{!13322, !13323, !13324, !13325}
!13322 = !DIDerivedType(tag: DW_TAG_member, name: "inbuf", scope: !13320, file: !11520, line: 1512, baseType: !2454, size: 64)
!13323 = !DIDerivedType(tag: DW_TAG_member, name: "outbuf", scope: !13320, file: !11520, line: 1513, baseType: !159, size: 64, offset: 64)
!13324 = !DIDerivedType(tag: DW_TAG_member, name: "inlen", scope: !13320, file: !11520, line: 1514, baseType: !132, size: 64, offset: 128)
!13325 = !DIDerivedType(tag: DW_TAG_member, name: "outlen", scope: !13320, file: !11520, line: 1515, baseType: !132, size: 64, offset: 192)
!13326 = !DIDerivedType(tag: DW_TAG_member, name: "modify_device", scope: !12742, file: !11520, line: 2313, baseType: !13327, size: 64, offset: 896)
!13327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13328, size: 64)
!13328 = !DISubroutineType(types: !13329)
!13329 = !{!6, !12737, !6, !13330}
!13330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13331, size: 64)
!13331 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_device_modify", file: !11520, line: 688, size: 576, elements: !13332)
!13332 = !{!13333, !13334}
!13333 = !DIDerivedType(tag: DW_TAG_member, name: "sys_image_guid", scope: !13331, file: !11520, line: 689, baseType: !235, size: 64)
!13334 = !DIDerivedType(tag: DW_TAG_member, name: "node_desc", scope: !13331, file: !11520, line: 690, baseType: !7622, size: 512, offset: 64)
!13335 = !DIDerivedType(tag: DW_TAG_member, name: "get_dev_fw_str", scope: !12742, file: !11520, line: 2315, baseType: !13336, size: 64, offset: 960)
!13336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13337, size: 64)
!13337 = !DISubroutineType(types: !13338)
!13338 = !{null, !12737, !85}
!13339 = !DIDerivedType(tag: DW_TAG_member, name: "get_vector_affinity", scope: !12742, file: !11520, line: 2316, baseType: !13340, size: 64, offset: 1024)
!13340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13341, size: 64)
!13341 = !DISubroutineType(types: !13342)
!13342 = !{!13343, !12737, !6}
!13343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13344, size: 64)
!13344 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1418)
!13345 = !DIDerivedType(tag: DW_TAG_member, name: "query_port", scope: !12742, file: !11520, line: 2318, baseType: !13346, size: 64, offset: 1088)
!13346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13347, size: 64)
!13347 = !DISubroutineType(types: !13348)
!13348 = !{!6, !12737, !1403, !13349}
!13349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13350, size: 64)
!13350 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_port_attr", file: !11520, line: 654, size: 576, elements: !13351)
!13351 = !{!13352, !13353, !13354, !13355, !13356, !13357, !13358, !13359, !13360, !13361, !13362, !13363, !13364, !13365, !13366, !13367, !13368, !13369, !13370, !13371, !13372, !13373, !13374}
!13352 = !DIDerivedType(tag: DW_TAG_member, name: "subnet_prefix", scope: !13350, file: !11520, line: 655, baseType: !235, size: 64)
!13353 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !13350, file: !11520, line: 656, baseType: !11703, size: 32, offset: 64)
!13354 = !DIDerivedType(tag: DW_TAG_member, name: "max_mtu", scope: !13350, file: !11520, line: 657, baseType: !11711, size: 32, offset: 96)
!13355 = !DIDerivedType(tag: DW_TAG_member, name: "active_mtu", scope: !13350, file: !11520, line: 658, baseType: !11711, size: 32, offset: 128)
!13356 = !DIDerivedType(tag: DW_TAG_member, name: "phys_mtu", scope: !13350, file: !11520, line: 659, baseType: !229, size: 32, offset: 160)
!13357 = !DIDerivedType(tag: DW_TAG_member, name: "gid_tbl_len", scope: !13350, file: !11520, line: 660, baseType: !6, size: 32, offset: 192)
!13358 = !DIDerivedType(tag: DW_TAG_member, name: "ip_gids", scope: !13350, file: !11520, line: 661, baseType: !199, size: 1, offset: 224, flags: DIFlagBitField, extraData: i64 224)
!13359 = !DIDerivedType(tag: DW_TAG_member, name: "port_cap_flags", scope: !13350, file: !11520, line: 663, baseType: !229, size: 32, offset: 256)
!13360 = !DIDerivedType(tag: DW_TAG_member, name: "max_msg_sz", scope: !13350, file: !11520, line: 664, baseType: !229, size: 32, offset: 288)
!13361 = !DIDerivedType(tag: DW_TAG_member, name: "bad_pkey_cntr", scope: !13350, file: !11520, line: 665, baseType: !229, size: 32, offset: 320)
!13362 = !DIDerivedType(tag: DW_TAG_member, name: "qkey_viol_cntr", scope: !13350, file: !11520, line: 666, baseType: !229, size: 32, offset: 352)
!13363 = !DIDerivedType(tag: DW_TAG_member, name: "pkey_tbl_len", scope: !13350, file: !11520, line: 667, baseType: !744, size: 16, offset: 384)
!13364 = !DIDerivedType(tag: DW_TAG_member, name: "sm_lid", scope: !13350, file: !11520, line: 668, baseType: !229, size: 32, offset: 416)
!13365 = !DIDerivedType(tag: DW_TAG_member, name: "lid", scope: !13350, file: !11520, line: 669, baseType: !229, size: 32, offset: 448)
!13366 = !DIDerivedType(tag: DW_TAG_member, name: "lmc", scope: !13350, file: !11520, line: 670, baseType: !1403, size: 8, offset: 480)
!13367 = !DIDerivedType(tag: DW_TAG_member, name: "max_vl_num", scope: !13350, file: !11520, line: 671, baseType: !1403, size: 8, offset: 488)
!13368 = !DIDerivedType(tag: DW_TAG_member, name: "sm_sl", scope: !13350, file: !11520, line: 672, baseType: !1403, size: 8, offset: 496)
!13369 = !DIDerivedType(tag: DW_TAG_member, name: "subnet_timeout", scope: !13350, file: !11520, line: 673, baseType: !1403, size: 8, offset: 504)
!13370 = !DIDerivedType(tag: DW_TAG_member, name: "init_type_reply", scope: !13350, file: !11520, line: 674, baseType: !1403, size: 8, offset: 512)
!13371 = !DIDerivedType(tag: DW_TAG_member, name: "active_width", scope: !13350, file: !11520, line: 675, baseType: !1403, size: 8, offset: 520)
!13372 = !DIDerivedType(tag: DW_TAG_member, name: "active_speed", scope: !13350, file: !11520, line: 676, baseType: !744, size: 16, offset: 528)
!13373 = !DIDerivedType(tag: DW_TAG_member, name: "phys_state", scope: !13350, file: !11520, line: 677, baseType: !1403, size: 8, offset: 544)
!13374 = !DIDerivedType(tag: DW_TAG_member, name: "port_cap_flags2", scope: !13350, file: !11520, line: 678, baseType: !744, size: 16, offset: 560)
!13375 = !DIDerivedType(tag: DW_TAG_member, name: "modify_port", scope: !12742, file: !11520, line: 2320, baseType: !13376, size: 64, offset: 1152)
!13376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13377, size: 64)
!13377 = !DISubroutineType(types: !13378)
!13378 = !{!6, !12737, !1403, !6, !13379}
!13379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13380, size: 64)
!13380 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_port_modify", file: !11520, line: 700, size: 96, elements: !13381)
!13381 = !{!13382, !13383, !13384}
!13382 = !DIDerivedType(tag: DW_TAG_member, name: "set_port_cap_mask", scope: !13380, file: !11520, line: 701, baseType: !229, size: 32)
!13383 = !DIDerivedType(tag: DW_TAG_member, name: "clr_port_cap_mask", scope: !13380, file: !11520, line: 702, baseType: !229, size: 32, offset: 32)
!13384 = !DIDerivedType(tag: DW_TAG_member, name: "init_type", scope: !13380, file: !11520, line: 703, baseType: !1403, size: 8, offset: 64)
!13385 = !DIDerivedType(tag: DW_TAG_member, name: "get_port_immutable", scope: !12742, file: !11520, line: 2329, baseType: !13386, size: 64, offset: 1216)
!13386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13387, size: 64)
!13387 = !DISubroutineType(types: !13388)
!13388 = !{!6, !12737, !1403, !13389}
!13389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13390, size: 64)
!13390 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_port_immutable", file: !11520, line: 2157, size: 128, elements: !13391)
!13391 = !{!13392, !13393, !13394, !13395}
!13392 = !DIDerivedType(tag: DW_TAG_member, name: "pkey_tbl_len", scope: !13390, file: !11520, line: 2158, baseType: !6, size: 32)
!13393 = !DIDerivedType(tag: DW_TAG_member, name: "gid_tbl_len", scope: !13390, file: !11520, line: 2159, baseType: !6, size: 32, offset: 32)
!13394 = !DIDerivedType(tag: DW_TAG_member, name: "core_cap_flags", scope: !13390, file: !11520, line: 2160, baseType: !229, size: 32, offset: 64)
!13395 = !DIDerivedType(tag: DW_TAG_member, name: "max_mad_size", scope: !13390, file: !11520, line: 2161, baseType: !229, size: 32, offset: 96)
!13396 = !DIDerivedType(tag: DW_TAG_member, name: "get_link_layer", scope: !12742, file: !11520, line: 2331, baseType: !13397, size: 64, offset: 1280)
!13397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13398, size: 64)
!13398 = !DISubroutineType(types: !13399)
!13399 = !{!11718, !12737, !1403}
!13400 = !DIDerivedType(tag: DW_TAG_member, name: "get_netdev", scope: !12742, file: !11520, line: 2341, baseType: !13401, size: 64, offset: 1344)
!13401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13402, size: 64)
!13402 = !DISubroutineType(types: !13403)
!13403 = !{!2169, !12737, !1403}
!13404 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_rdma_netdev", scope: !12742, file: !11520, line: 2348, baseType: !13405, size: 64, offset: 1408)
!13405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13406, size: 64)
!13406 = !DISubroutineType(types: !13407)
!13407 = !{!2169, !12737, !1403, !11723, !26, !241, !2266}
!13408 = !DIDerivedType(tag: DW_TAG_member, name: "rdma_netdev_get_params", scope: !12742, file: !11520, line: 2353, baseType: !13409, size: 64, offset: 1472)
!13409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13410, size: 64)
!13410 = !DISubroutineType(types: !13411)
!13411 = !{!6, !12737, !1403, !11723, !13412}
!13412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13413, size: 64)
!13413 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rdma_netdev_alloc_params", file: !11520, line: 2217, size: 256, elements: !13414)
!13414 = !{!13415, !13416, !13417, !13418, !13419}
!13415 = !DIDerivedType(tag: DW_TAG_member, name: "sizeof_priv", scope: !13413, file: !11520, line: 2218, baseType: !132, size: 64)
!13416 = !DIDerivedType(tag: DW_TAG_member, name: "txqs", scope: !13413, file: !11520, line: 2219, baseType: !199, size: 32, offset: 64)
!13417 = !DIDerivedType(tag: DW_TAG_member, name: "rxqs", scope: !13413, file: !11520, line: 2220, baseType: !199, size: 32, offset: 96)
!13418 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !13413, file: !11520, line: 2221, baseType: !159, size: 64, offset: 128)
!13419 = !DIDerivedType(tag: DW_TAG_member, name: "initialize_rdma_netdev", scope: !13413, file: !11520, line: 2223, baseType: !13420, size: 64, offset: 192)
!13420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13421, size: 64)
!13421 = !DISubroutineType(types: !13422)
!13422 = !{!6, !12737, !1403, !2169, !159}
!13423 = !DIDerivedType(tag: DW_TAG_member, name: "query_gid", scope: !12742, file: !11520, line: 2361, baseType: !13424, size: 64, offset: 1536)
!13424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13425, size: 64)
!13425 = !DISubroutineType(types: !13426)
!13426 = !{!6, !12737, !1403, !6, !13427}
!13427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13057, size: 64)
!13428 = !DIDerivedType(tag: DW_TAG_member, name: "add_gid", scope: !12742, file: !11520, line: 2376, baseType: !13429, size: 64, offset: 1600)
!13429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13430, size: 64)
!13430 = !DISubroutineType(types: !13431)
!13431 = !{!6, !13050, !706}
!13432 = !DIDerivedType(tag: DW_TAG_member, name: "del_gid", scope: !12742, file: !11520, line: 2385, baseType: !13429, size: 64, offset: 1664)
!13433 = !DIDerivedType(tag: DW_TAG_member, name: "query_pkey", scope: !12742, file: !11520, line: 2386, baseType: !13434, size: 64, offset: 1728)
!13434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13435, size: 64)
!13435 = !DISubroutineType(types: !13436)
!13436 = !{!6, !12737, !1403, !744, !4004}
!13437 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_ucontext", scope: !12742, file: !11520, line: 2388, baseType: !13438, size: 64, offset: 1792)
!13438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13439, size: 64)
!13439 = !DISubroutineType(types: !13440)
!13440 = !{!6, !12772, !13319}
!13441 = !DIDerivedType(tag: DW_TAG_member, name: "dealloc_ucontext", scope: !12742, file: !11520, line: 2390, baseType: !13442, size: 64, offset: 1856)
!13442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13443, size: 64)
!13443 = !DISubroutineType(types: !13444)
!13444 = !{null, !12772}
!13445 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !12742, file: !11520, line: 2391, baseType: !13446, size: 64, offset: 1920)
!13446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13447, size: 64)
!13447 = !DISubroutineType(types: !13448)
!13448 = !{!6, !12772, !1032}
!13449 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_free", scope: !12742, file: !11520, line: 2398, baseType: !13450, size: 64, offset: 1984)
!13450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13451, size: 64)
!13451 = !DISubroutineType(types: !13452)
!13452 = !{null, !13453}
!13453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13454, size: 64)
!13454 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rdma_user_mmap_entry", file: !11520, line: 2266, size: 320, elements: !13455)
!13455 = !{!13456, !13457, !13458, !13459, !13460}
!13456 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !13454, file: !11520, line: 2267, baseType: !1556, size: 32)
!13457 = !DIDerivedType(tag: DW_TAG_member, name: "ucontext", scope: !13454, file: !11520, line: 2268, baseType: !12772, size: 64, offset: 64)
!13458 = !DIDerivedType(tag: DW_TAG_member, name: "start_pgoff", scope: !13454, file: !11520, line: 2269, baseType: !135, size: 64, offset: 128)
!13459 = !DIDerivedType(tag: DW_TAG_member, name: "npages", scope: !13454, file: !11520, line: 2270, baseType: !132, size: 64, offset: 192)
!13460 = !DIDerivedType(tag: DW_TAG_member, name: "driver_removed", scope: !13454, file: !11520, line: 2271, baseType: !304, size: 8, offset: 256)
!13461 = !DIDerivedType(tag: DW_TAG_member, name: "disassociate_ucontext", scope: !12742, file: !11520, line: 2399, baseType: !13442, size: 64, offset: 2048)
!13462 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_pd", scope: !12742, file: !11520, line: 2400, baseType: !13463, size: 64, offset: 2112)
!13463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13464, size: 64)
!13464 = !DISubroutineType(types: !13465)
!13465 = !{!6, !12757, !13319}
!13466 = !DIDerivedType(tag: DW_TAG_member, name: "dealloc_pd", scope: !12742, file: !11520, line: 2401, baseType: !13463, size: 64, offset: 2176)
!13467 = !DIDerivedType(tag: DW_TAG_member, name: "create_ah", scope: !12742, file: !11520, line: 2402, baseType: !13468, size: 64, offset: 2240)
!13468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13469, size: 64)
!13469 = !DISubroutineType(types: !13470)
!13470 = !{!6, !13471, !13479, !13319}
!13471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13472, size: 64)
!13472 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_ah", file: !11520, line: 1542, size: 320, elements: !13473)
!13473 = !{!13474, !13475, !13476, !13477, !13478}
!13474 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !13472, file: !11520, line: 1543, baseType: !12737, size: 64)
!13475 = !DIDerivedType(tag: DW_TAG_member, name: "pd", scope: !13472, file: !11520, line: 1544, baseType: !12757, size: 64, offset: 64)
!13476 = !DIDerivedType(tag: DW_TAG_member, name: "uobject", scope: !13472, file: !11520, line: 1545, baseType: !12764, size: 64, offset: 128)
!13477 = !DIDerivedType(tag: DW_TAG_member, name: "sgid_attr", scope: !13472, file: !11520, line: 1546, baseType: !13050, size: 64, offset: 192)
!13478 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !13472, file: !11520, line: 1547, baseType: !11727, size: 32, offset: 256)
!13479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13480, size: 64)
!13480 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rdma_ah_init_attr", file: !11520, line: 889, size: 192, elements: !13481)
!13481 = !{!13482, !13518, !13519}
!13482 = !DIDerivedType(tag: DW_TAG_member, name: "ah_attr", scope: !13480, file: !11520, line: 890, baseType: !13483, size: 64)
!13483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13484, size: 64)
!13484 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rdma_ah_attr", file: !11520, line: 917, size: 384, elements: !13485)
!13485 = !{!13486, !13495, !13496, !13497, !13498, !13499, !13500}
!13486 = !DIDerivedType(tag: DW_TAG_member, name: "grh", scope: !13484, file: !11520, line: 918, baseType: !13487, size: 256)
!13487 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_global_route", file: !11520, line: 756, size: 256, elements: !13488)
!13488 = !{!13489, !13490, !13491, !13492, !13493, !13494}
!13489 = !DIDerivedType(tag: DW_TAG_member, name: "sgid_attr", scope: !13487, file: !11520, line: 757, baseType: !13050, size: 64)
!13490 = !DIDerivedType(tag: DW_TAG_member, name: "dgid", scope: !13487, file: !11520, line: 758, baseType: !13057, size: 128, offset: 64)
!13491 = !DIDerivedType(tag: DW_TAG_member, name: "flow_label", scope: !13487, file: !11520, line: 759, baseType: !229, size: 32, offset: 192)
!13492 = !DIDerivedType(tag: DW_TAG_member, name: "sgid_index", scope: !13487, file: !11520, line: 760, baseType: !1403, size: 8, offset: 224)
!13493 = !DIDerivedType(tag: DW_TAG_member, name: "hop_limit", scope: !13487, file: !11520, line: 761, baseType: !1403, size: 8, offset: 232)
!13494 = !DIDerivedType(tag: DW_TAG_member, name: "traffic_class", scope: !13487, file: !11520, line: 762, baseType: !1403, size: 8, offset: 240)
!13495 = !DIDerivedType(tag: DW_TAG_member, name: "sl", scope: !13484, file: !11520, line: 919, baseType: !1403, size: 8, offset: 256)
!13496 = !DIDerivedType(tag: DW_TAG_member, name: "static_rate", scope: !13484, file: !11520, line: 920, baseType: !1403, size: 8, offset: 264)
!13497 = !DIDerivedType(tag: DW_TAG_member, name: "port_num", scope: !13484, file: !11520, line: 921, baseType: !1403, size: 8, offset: 272)
!13498 = !DIDerivedType(tag: DW_TAG_member, name: "ah_flags", scope: !13484, file: !11520, line: 922, baseType: !1403, size: 8, offset: 280)
!13499 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !13484, file: !11520, line: 923, baseType: !11727, size: 32, offset: 288)
!13500 = !DIDerivedType(tag: DW_TAG_member, scope: !13484, file: !11520, line: 924, baseType: !13501, size: 64, offset: 320)
!13501 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13484, file: !11520, line: 924, size: 64, elements: !13502)
!13502 = !{!13503, !13508, !13512}
!13503 = !DIDerivedType(tag: DW_TAG_member, name: "ib", scope: !13501, file: !11520, line: 925, baseType: !13504, size: 32)
!13504 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_ah_attr", file: !11520, line: 902, size: 32, elements: !13505)
!13505 = !{!13506, !13507}
!13506 = !DIDerivedType(tag: DW_TAG_member, name: "dlid", scope: !13504, file: !11520, line: 903, baseType: !744, size: 16)
!13507 = !DIDerivedType(tag: DW_TAG_member, name: "src_path_bits", scope: !13504, file: !11520, line: 904, baseType: !1403, size: 8, offset: 16)
!13508 = !DIDerivedType(tag: DW_TAG_member, name: "roce", scope: !13501, file: !11520, line: 926, baseType: !13509, size: 48)
!13509 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "roce_ah_attr", file: !11520, line: 907, size: 48, elements: !13510)
!13510 = !{!13511}
!13511 = !DIDerivedType(tag: DW_TAG_member, name: "dmac", scope: !13509, file: !11520, line: 908, baseType: !11301, size: 48)
!13512 = !DIDerivedType(tag: DW_TAG_member, name: "opa", scope: !13501, file: !11520, line: 927, baseType: !13513, size: 64)
!13513 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "opa_ah_attr", file: !11520, line: 911, size: 64, elements: !13514)
!13514 = !{!13515, !13516, !13517}
!13515 = !DIDerivedType(tag: DW_TAG_member, name: "dlid", scope: !13513, file: !11520, line: 912, baseType: !229, size: 32)
!13516 = !DIDerivedType(tag: DW_TAG_member, name: "src_path_bits", scope: !13513, file: !11520, line: 913, baseType: !1403, size: 8, offset: 32)
!13517 = !DIDerivedType(tag: DW_TAG_member, name: "make_grd", scope: !13513, file: !11520, line: 914, baseType: !304, size: 8, offset: 40)
!13518 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !13480, file: !11520, line: 891, baseType: !229, size: 32, offset: 64)
!13519 = !DIDerivedType(tag: DW_TAG_member, name: "xmit_slave", scope: !13480, file: !11520, line: 892, baseType: !2169, size: 64, offset: 128)
!13520 = !DIDerivedType(tag: DW_TAG_member, name: "modify_ah", scope: !12742, file: !11520, line: 2404, baseType: !13521, size: 64, offset: 2304)
!13521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13522, size: 64)
!13522 = !DISubroutineType(types: !13523)
!13523 = !{!6, !13471, !13483}
!13524 = !DIDerivedType(tag: DW_TAG_member, name: "query_ah", scope: !12742, file: !11520, line: 2405, baseType: !13521, size: 64, offset: 2368)
!13525 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_ah", scope: !12742, file: !11520, line: 2406, baseType: !13526, size: 64, offset: 2432)
!13526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13527, size: 64)
!13527 = !DISubroutineType(types: !13528)
!13528 = !{!6, !13471, !229}
!13529 = !DIDerivedType(tag: DW_TAG_member, name: "create_srq", scope: !12742, file: !11520, line: 2407, baseType: !13530, size: 64, offset: 2496)
!13530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13531, size: 64)
!13531 = !DISubroutineType(types: !13532)
!13532 = !{!6, !12887, !13533, !13319}
!13533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13534, size: 64)
!13534 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_srq_init_attr", file: !11520, line: 1044, size: 384, elements: !13535)
!13535 = !{!13536, !13537, !13538, !13544, !13545}
!13536 = !DIDerivedType(tag: DW_TAG_member, name: "event_handler", scope: !13534, file: !11520, line: 1045, baseType: !12874, size: 64)
!13537 = !DIDerivedType(tag: DW_TAG_member, name: "srq_context", scope: !13534, file: !11520, line: 1046, baseType: !159, size: 64, offset: 64)
!13538 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !13534, file: !11520, line: 1047, baseType: !13539, size: 96, offset: 128)
!13539 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_srq_attr", file: !11520, line: 1038, size: 96, elements: !13540)
!13540 = !{!13541, !13542, !13543}
!13541 = !DIDerivedType(tag: DW_TAG_member, name: "max_wr", scope: !13539, file: !11520, line: 1039, baseType: !229, size: 32)
!13542 = !DIDerivedType(tag: DW_TAG_member, name: "max_sge", scope: !13539, file: !11520, line: 1040, baseType: !229, size: 32, offset: 32)
!13543 = !DIDerivedType(tag: DW_TAG_member, name: "srq_limit", scope: !13539, file: !11520, line: 1041, baseType: !229, size: 32, offset: 64)
!13544 = !DIDerivedType(tag: DW_TAG_member, name: "srq_type", scope: !13534, file: !11520, line: 1048, baseType: !11537, size: 32, offset: 224)
!13545 = !DIDerivedType(tag: DW_TAG_member, name: "ext", scope: !13534, file: !11520, line: 1061, baseType: !13546, size: 128, offset: 256)
!13546 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !13534, file: !11520, line: 1050, size: 128, elements: !13547)
!13547 = !{!13548, !13549}
!13548 = !DIDerivedType(tag: DW_TAG_member, name: "cq", scope: !13546, file: !11520, line: 1051, baseType: !12861, size: 64)
!13549 = !DIDerivedType(tag: DW_TAG_member, scope: !13546, file: !11520, line: 1052, baseType: !13550, size: 64, offset: 64)
!13550 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13546, file: !11520, line: 1052, size: 64, elements: !13551)
!13551 = !{!13552, !13556}
!13552 = !DIDerivedType(tag: DW_TAG_member, name: "xrc", scope: !13550, file: !11520, line: 1055, baseType: !13553, size: 64)
!13553 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !13550, file: !11520, line: 1053, size: 64, elements: !13554)
!13554 = !{!13555}
!13555 = !DIDerivedType(tag: DW_TAG_member, name: "xrcd", scope: !13553, file: !11520, line: 1054, baseType: !12910, size: 64)
!13556 = !DIDerivedType(tag: DW_TAG_member, name: "tag_matching", scope: !13550, file: !11520, line: 1059, baseType: !13557, size: 32)
!13557 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !13550, file: !11520, line: 1057, size: 32, elements: !13558)
!13558 = !{!13559}
!13559 = !DIDerivedType(tag: DW_TAG_member, name: "max_num_tags", scope: !13557, file: !11520, line: 1058, baseType: !229, size: 32)
!13560 = !DIDerivedType(tag: DW_TAG_member, name: "modify_srq", scope: !12742, file: !11520, line: 2410, baseType: !13561, size: 64, offset: 2560)
!13561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13562, size: 64)
!13562 = !DISubroutineType(types: !13563)
!13563 = !{!6, !12887, !13564, !11733, !13319}
!13564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13539, size: 64)
!13565 = !DIDerivedType(tag: DW_TAG_member, name: "query_srq", scope: !12742, file: !11520, line: 2413, baseType: !13566, size: 64, offset: 2624)
!13566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13567, size: 64)
!13567 = !DISubroutineType(types: !13568)
!13568 = !{!6, !12887, !13564}
!13569 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_srq", scope: !12742, file: !11520, line: 2414, baseType: !13570, size: 64, offset: 2688)
!13570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13571, size: 64)
!13571 = !DISubroutineType(types: !13572)
!13572 = !{!6, !12887, !13319}
!13573 = !DIDerivedType(tag: DW_TAG_member, name: "create_qp", scope: !12742, file: !11520, line: 2415, baseType: !13574, size: 64, offset: 2752)
!13574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13575, size: 64)
!13575 = !DISubroutineType(types: !13576)
!13576 = !{!12752, !12757, !13577, !13319}
!13577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13578, size: 64)
!13578 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_qp_init_attr", file: !11520, line: 1146, size: 832, elements: !13579)
!13579 = !{!13580, !13581, !13582, !13583, !13584, !13585, !13586, !13595, !13596, !13597, !13598, !13599, !13600}
!13580 = !DIDerivedType(tag: DW_TAG_member, name: "event_handler", scope: !13578, file: !11520, line: 1148, baseType: !12874, size: 64)
!13581 = !DIDerivedType(tag: DW_TAG_member, name: "qp_context", scope: !13578, file: !11520, line: 1150, baseType: !159, size: 64, offset: 64)
!13582 = !DIDerivedType(tag: DW_TAG_member, name: "send_cq", scope: !13578, file: !11520, line: 1151, baseType: !12861, size: 64, offset: 128)
!13583 = !DIDerivedType(tag: DW_TAG_member, name: "recv_cq", scope: !13578, file: !11520, line: 1152, baseType: !12861, size: 64, offset: 192)
!13584 = !DIDerivedType(tag: DW_TAG_member, name: "srq", scope: !13578, file: !11520, line: 1153, baseType: !12887, size: 64, offset: 256)
!13585 = !DIDerivedType(tag: DW_TAG_member, name: "xrcd", scope: !13578, file: !11520, line: 1154, baseType: !12910, size: 64, offset: 320)
!13586 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !13578, file: !11520, line: 1155, baseType: !13587, size: 192, offset: 384)
!13587 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_qp_cap", file: !11520, line: 1064, size: 192, elements: !13588)
!13588 = !{!13589, !13590, !13591, !13592, !13593, !13594}
!13589 = !DIDerivedType(tag: DW_TAG_member, name: "max_send_wr", scope: !13587, file: !11520, line: 1065, baseType: !229, size: 32)
!13590 = !DIDerivedType(tag: DW_TAG_member, name: "max_recv_wr", scope: !13587, file: !11520, line: 1066, baseType: !229, size: 32, offset: 32)
!13591 = !DIDerivedType(tag: DW_TAG_member, name: "max_send_sge", scope: !13587, file: !11520, line: 1067, baseType: !229, size: 32, offset: 64)
!13592 = !DIDerivedType(tag: DW_TAG_member, name: "max_recv_sge", scope: !13587, file: !11520, line: 1068, baseType: !229, size: 32, offset: 96)
!13593 = !DIDerivedType(tag: DW_TAG_member, name: "max_inline_data", scope: !13587, file: !11520, line: 1069, baseType: !229, size: 32, offset: 128)
!13594 = !DIDerivedType(tag: DW_TAG_member, name: "max_rdma_ctxs", scope: !13587, file: !11520, line: 1076, baseType: !229, size: 32, offset: 160)
!13595 = !DIDerivedType(tag: DW_TAG_member, name: "sq_sig_type", scope: !13578, file: !11520, line: 1156, baseType: !11737, size: 32, offset: 576)
!13596 = !DIDerivedType(tag: DW_TAG_member, name: "qp_type", scope: !13578, file: !11520, line: 1157, baseType: !11624, size: 32, offset: 608)
!13597 = !DIDerivedType(tag: DW_TAG_member, name: "create_flags", scope: !13578, file: !11520, line: 1158, baseType: !229, size: 32, offset: 640)
!13598 = !DIDerivedType(tag: DW_TAG_member, name: "port_num", scope: !13578, file: !11520, line: 1163, baseType: !1403, size: 8, offset: 672)
!13599 = !DIDerivedType(tag: DW_TAG_member, name: "rwq_ind_tbl", scope: !13578, file: !11520, line: 1164, baseType: !13074, size: 64, offset: 704)
!13600 = !DIDerivedType(tag: DW_TAG_member, name: "source_qpn", scope: !13578, file: !11520, line: 1165, baseType: !229, size: 32, offset: 768)
!13601 = !DIDerivedType(tag: DW_TAG_member, name: "modify_qp", scope: !12742, file: !11520, line: 2418, baseType: !13602, size: 64, offset: 2816)
!13602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13603, size: 64)
!13603 = !DISubroutineType(types: !13604)
!13604 = !{!6, !12752, !13605, !6, !13319}
!13605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13606, size: 64)
!13606 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_qp_attr", file: !11520, line: 1260, size: 1536, elements: !13607)
!13607 = !{!13608, !13609, !13610, !13611, !13612, !13613, !13614, !13615, !13616, !13617, !13618, !13619, !13620, !13621, !13622, !13623, !13624, !13625, !13626, !13627, !13628, !13629, !13630, !13631, !13632, !13633, !13634}
!13608 = !DIDerivedType(tag: DW_TAG_member, name: "qp_state", scope: !13606, file: !11520, line: 1261, baseType: !11741, size: 32)
!13609 = !DIDerivedType(tag: DW_TAG_member, name: "cur_qp_state", scope: !13606, file: !11520, line: 1262, baseType: !11741, size: 32, offset: 32)
!13610 = !DIDerivedType(tag: DW_TAG_member, name: "path_mtu", scope: !13606, file: !11520, line: 1263, baseType: !11711, size: 32, offset: 64)
!13611 = !DIDerivedType(tag: DW_TAG_member, name: "path_mig_state", scope: !13606, file: !11520, line: 1264, baseType: !11750, size: 32, offset: 96)
!13612 = !DIDerivedType(tag: DW_TAG_member, name: "qkey", scope: !13606, file: !11520, line: 1265, baseType: !229, size: 32, offset: 128)
!13613 = !DIDerivedType(tag: DW_TAG_member, name: "rq_psn", scope: !13606, file: !11520, line: 1266, baseType: !229, size: 32, offset: 160)
!13614 = !DIDerivedType(tag: DW_TAG_member, name: "sq_psn", scope: !13606, file: !11520, line: 1267, baseType: !229, size: 32, offset: 192)
!13615 = !DIDerivedType(tag: DW_TAG_member, name: "dest_qp_num", scope: !13606, file: !11520, line: 1268, baseType: !229, size: 32, offset: 224)
!13616 = !DIDerivedType(tag: DW_TAG_member, name: "qp_access_flags", scope: !13606, file: !11520, line: 1269, baseType: !6, size: 32, offset: 256)
!13617 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !13606, file: !11520, line: 1270, baseType: !13587, size: 192, offset: 288)
!13618 = !DIDerivedType(tag: DW_TAG_member, name: "ah_attr", scope: !13606, file: !11520, line: 1271, baseType: !13484, size: 384, offset: 512)
!13619 = !DIDerivedType(tag: DW_TAG_member, name: "alt_ah_attr", scope: !13606, file: !11520, line: 1272, baseType: !13484, size: 384, offset: 896)
!13620 = !DIDerivedType(tag: DW_TAG_member, name: "pkey_index", scope: !13606, file: !11520, line: 1273, baseType: !744, size: 16, offset: 1280)
!13621 = !DIDerivedType(tag: DW_TAG_member, name: "alt_pkey_index", scope: !13606, file: !11520, line: 1274, baseType: !744, size: 16, offset: 1296)
!13622 = !DIDerivedType(tag: DW_TAG_member, name: "en_sqd_async_notify", scope: !13606, file: !11520, line: 1275, baseType: !1403, size: 8, offset: 1312)
!13623 = !DIDerivedType(tag: DW_TAG_member, name: "sq_draining", scope: !13606, file: !11520, line: 1276, baseType: !1403, size: 8, offset: 1320)
!13624 = !DIDerivedType(tag: DW_TAG_member, name: "max_rd_atomic", scope: !13606, file: !11520, line: 1277, baseType: !1403, size: 8, offset: 1328)
!13625 = !DIDerivedType(tag: DW_TAG_member, name: "max_dest_rd_atomic", scope: !13606, file: !11520, line: 1278, baseType: !1403, size: 8, offset: 1336)
!13626 = !DIDerivedType(tag: DW_TAG_member, name: "min_rnr_timer", scope: !13606, file: !11520, line: 1279, baseType: !1403, size: 8, offset: 1344)
!13627 = !DIDerivedType(tag: DW_TAG_member, name: "port_num", scope: !13606, file: !11520, line: 1280, baseType: !1403, size: 8, offset: 1352)
!13628 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !13606, file: !11520, line: 1281, baseType: !1403, size: 8, offset: 1360)
!13629 = !DIDerivedType(tag: DW_TAG_member, name: "retry_cnt", scope: !13606, file: !11520, line: 1282, baseType: !1403, size: 8, offset: 1368)
!13630 = !DIDerivedType(tag: DW_TAG_member, name: "rnr_retry", scope: !13606, file: !11520, line: 1283, baseType: !1403, size: 8, offset: 1376)
!13631 = !DIDerivedType(tag: DW_TAG_member, name: "alt_port_num", scope: !13606, file: !11520, line: 1284, baseType: !1403, size: 8, offset: 1384)
!13632 = !DIDerivedType(tag: DW_TAG_member, name: "alt_timeout", scope: !13606, file: !11520, line: 1285, baseType: !1403, size: 8, offset: 1392)
!13633 = !DIDerivedType(tag: DW_TAG_member, name: "rate_limit", scope: !13606, file: !11520, line: 1286, baseType: !229, size: 32, offset: 1408)
!13634 = !DIDerivedType(tag: DW_TAG_member, name: "xmit_slave", scope: !13606, file: !11520, line: 1287, baseType: !2169, size: 64, offset: 1472)
!13635 = !DIDerivedType(tag: DW_TAG_member, name: "query_qp", scope: !12742, file: !11520, line: 2420, baseType: !13636, size: 64, offset: 2880)
!13636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13637, size: 64)
!13637 = !DISubroutineType(types: !13638)
!13638 = !{!6, !12752, !13605, !6, !13577}
!13639 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_qp", scope: !12742, file: !11520, line: 2422, baseType: !13640, size: 64, offset: 2944)
!13640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13641, size: 64)
!13641 = !DISubroutineType(types: !13642)
!13642 = !{!6, !12752, !13319}
!13643 = !DIDerivedType(tag: DW_TAG_member, name: "create_cq", scope: !12742, file: !11520, line: 2423, baseType: !13644, size: 64, offset: 3008)
!13644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13645, size: 64)
!13645 = !DISubroutineType(types: !13646)
!13646 = !{!6, !12861, !13647, !13319}
!13647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13648, size: 64)
!13648 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13649)
!13649 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_cq_init_attr", file: !11520, line: 351, size: 96, elements: !13650)
!13650 = !{!13651, !13652, !13653}
!13651 = !DIDerivedType(tag: DW_TAG_member, name: "cqe", scope: !13649, file: !11520, line: 352, baseType: !199, size: 32)
!13652 = !DIDerivedType(tag: DW_TAG_member, name: "comp_vector", scope: !13649, file: !11520, line: 353, baseType: !229, size: 32, offset: 32)
!13653 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !13649, file: !11520, line: 354, baseType: !229, size: 32, offset: 64)
!13654 = !DIDerivedType(tag: DW_TAG_member, name: "modify_cq", scope: !12742, file: !11520, line: 2425, baseType: !13655, size: 64, offset: 3072)
!13655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13656, size: 64)
!13656 = !DISubroutineType(types: !13657)
!13657 = !{!6, !12861, !744, !744}
!13658 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_cq", scope: !12742, file: !11520, line: 2426, baseType: !13659, size: 64, offset: 3136)
!13659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13660, size: 64)
!13660 = !DISubroutineType(types: !13661)
!13661 = !{!6, !12861, !13319}
!13662 = !DIDerivedType(tag: DW_TAG_member, name: "resize_cq", scope: !12742, file: !11520, line: 2427, baseType: !13663, size: 64, offset: 3200)
!13663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13664, size: 64)
!13664 = !DISubroutineType(types: !13665)
!13665 = !{!6, !12861, !6, !13319}
!13666 = !DIDerivedType(tag: DW_TAG_member, name: "get_dma_mr", scope: !12742, file: !11520, line: 2428, baseType: !13667, size: 64, offset: 3264)
!13667 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13668, size: 64)
!13668 = !DISubroutineType(types: !13669)
!13669 = !{!12806, !12757, !6}
!13670 = !DIDerivedType(tag: DW_TAG_member, name: "reg_user_mr", scope: !12742, file: !11520, line: 2429, baseType: !13671, size: 64, offset: 3328)
!13671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13672, size: 64)
!13672 = !DISubroutineType(types: !13673)
!13673 = !{!12806, !12757, !235, !235, !235, !6, !13319}
!13674 = !DIDerivedType(tag: DW_TAG_member, name: "rereg_user_mr", scope: !12742, file: !11520, line: 2432, baseType: !13675, size: 64, offset: 3392)
!13675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13676, size: 64)
!13676 = !DISubroutineType(types: !13677)
!13677 = !{!6, !12806, !6, !235, !235, !235, !6, !12757, !13319}
!13678 = !DIDerivedType(tag: DW_TAG_member, name: "dereg_mr", scope: !12742, file: !11520, line: 2435, baseType: !13679, size: 64, offset: 3456)
!13679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13680, size: 64)
!13680 = !DISubroutineType(types: !13681)
!13681 = !{!6, !12806, !13319}
!13682 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_mr", scope: !12742, file: !11520, line: 2436, baseType: !13683, size: 64, offset: 3520)
!13683 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13684, size: 64)
!13684 = !DISubroutineType(types: !13685)
!13685 = !{!12806, !12757, !11519, !229}
!13686 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_mr_integrity", scope: !12742, file: !11520, line: 2438, baseType: !13687, size: 64, offset: 3584)
!13687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13688, size: 64)
!13688 = !DISubroutineType(types: !13689)
!13689 = !{!12806, !12757, !229, !229}
!13690 = !DIDerivedType(tag: DW_TAG_member, name: "advise_mr", scope: !12742, file: !11520, line: 2441, baseType: !13691, size: 64, offset: 3648)
!13691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13692, size: 64)
!13692 = !DISubroutineType(types: !13693)
!13693 = !{!6, !12757, !11755, !229, !13158, !229, !13694}
!13694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13695, size: 64)
!13695 = !DICompositeType(tag: DW_TAG_structure_type, name: "uverbs_attr_bundle", file: !11520, line: 2246, flags: DIFlagFwdDecl)
!13696 = !DIDerivedType(tag: DW_TAG_member, name: "map_mr_sg", scope: !12742, file: !11520, line: 2445, baseType: !13697, size: 64, offset: 3712)
!13697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13698, size: 64)
!13698 = !DISubroutineType(types: !13699)
!13699 = !{!6, !12806, !13700, !6, !8982}
!13700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13701, size: 64)
!13701 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scatterlist", file: !13702, line: 11, size: 256, elements: !13703)
!13702 = !DIFile(filename: "./include/linux/scatterlist.h", directory: "/home/lizy2001/genbc/linux")
!13703 = !{!13704, !13705, !13706, !13707, !13708}
!13704 = !DIDerivedType(tag: DW_TAG_member, name: "page_link", scope: !13701, file: !13702, line: 12, baseType: !135, size: 64)
!13705 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !13701, file: !13702, line: 13, baseType: !199, size: 32, offset: 64)
!13706 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !13701, file: !13702, line: 14, baseType: !199, size: 32, offset: 96)
!13707 = !DIDerivedType(tag: DW_TAG_member, name: "dma_address", scope: !13701, file: !13702, line: 15, baseType: !970, size: 64, offset: 128)
!13708 = !DIDerivedType(tag: DW_TAG_member, name: "dma_length", scope: !13701, file: !13702, line: 17, baseType: !199, size: 32, offset: 192)
!13709 = !DIDerivedType(tag: DW_TAG_member, name: "check_mr_status", scope: !12742, file: !11520, line: 2447, baseType: !13710, size: 64, offset: 3776)
!13710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13711, size: 64)
!13711 = !DISubroutineType(types: !13712)
!13712 = !{!6, !12806, !229, !13713}
!13713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13714, size: 64)
!13714 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_mr_status", file: !11520, line: 877, size: 320, elements: !13715)
!13715 = !{!13716, !13717}
!13716 = !DIDerivedType(tag: DW_TAG_member, name: "fail_status", scope: !13714, file: !11520, line: 878, baseType: !229, size: 32)
!13717 = !DIDerivedType(tag: DW_TAG_member, name: "sig_err", scope: !13714, file: !11520, line: 879, baseType: !13718, size: 256, offset: 64)
!13718 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_sig_err", file: !11529, line: 116, size: 256, elements: !13719)
!13719 = !{!13720, !13721, !13722, !13723, !13724}
!13720 = !DIDerivedType(tag: DW_TAG_member, name: "err_type", scope: !13718, file: !11529, line: 117, baseType: !11760, size: 32)
!13721 = !DIDerivedType(tag: DW_TAG_member, name: "expected", scope: !13718, file: !11529, line: 118, baseType: !229, size: 32, offset: 32)
!13722 = !DIDerivedType(tag: DW_TAG_member, name: "actual", scope: !13718, file: !11529, line: 119, baseType: !229, size: 32, offset: 64)
!13723 = !DIDerivedType(tag: DW_TAG_member, name: "sig_err_offset", scope: !13718, file: !11529, line: 120, baseType: !235, size: 64, offset: 128)
!13724 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !13718, file: !11529, line: 121, baseType: !229, size: 32, offset: 192)
!13725 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_mw", scope: !12742, file: !11520, line: 2449, baseType: !13726, size: 64, offset: 3840)
!13726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13727, size: 64)
!13727 = !DISubroutineType(types: !13728)
!13728 = !{!6, !13729, !13319}
!13729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13730, size: 64)
!13730 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_mw", file: !11520, line: 1812, size: 256, elements: !13731)
!13731 = !{!13732, !13733, !13734, !13735, !13736}
!13732 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !13730, file: !11520, line: 1813, baseType: !12737, size: 64)
!13733 = !DIDerivedType(tag: DW_TAG_member, name: "pd", scope: !13730, file: !11520, line: 1814, baseType: !12757, size: 64, offset: 64)
!13734 = !DIDerivedType(tag: DW_TAG_member, name: "uobject", scope: !13730, file: !11520, line: 1815, baseType: !12764, size: 64, offset: 128)
!13735 = !DIDerivedType(tag: DW_TAG_member, name: "rkey", scope: !13730, file: !11520, line: 1816, baseType: !229, size: 32, offset: 192)
!13736 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !13730, file: !11520, line: 1817, baseType: !11765, size: 32, offset: 224)
!13737 = !DIDerivedType(tag: DW_TAG_member, name: "dealloc_mw", scope: !12742, file: !11520, line: 2450, baseType: !13738, size: 64, offset: 3904)
!13738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13739, size: 64)
!13739 = !DISubroutineType(types: !13740)
!13740 = !{!6, !13729}
!13741 = !DIDerivedType(tag: DW_TAG_member, name: "attach_mcast", scope: !12742, file: !11520, line: 2451, baseType: !13742, size: 64, offset: 3968)
!13742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13743, size: 64)
!13743 = !DISubroutineType(types: !13744)
!13744 = !{!6, !12752, !13427, !744}
!13745 = !DIDerivedType(tag: DW_TAG_member, name: "detach_mcast", scope: !12742, file: !11520, line: 2452, baseType: !13742, size: 64, offset: 4032)
!13746 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_xrcd", scope: !12742, file: !11520, line: 2453, baseType: !13747, size: 64, offset: 4096)
!13747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13748, size: 64)
!13748 = !DISubroutineType(types: !13749)
!13749 = !{!6, !12910, !13319}
!13750 = !DIDerivedType(tag: DW_TAG_member, name: "dealloc_xrcd", scope: !12742, file: !11520, line: 2454, baseType: !13747, size: 64, offset: 4160)
!13751 = !DIDerivedType(tag: DW_TAG_member, name: "create_flow", scope: !12742, file: !11520, line: 2455, baseType: !13752, size: 64, offset: 4224)
!13752 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13753, size: 64)
!13753 = !DISubroutineType(types: !13754)
!13754 = !{!13755, !12752, !13761, !13319}
!13755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13756, size: 64)
!13756 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_flow", file: !11520, line: 2069, size: 192, elements: !13757)
!13757 = !{!13758, !13759, !13760}
!13758 = !DIDerivedType(tag: DW_TAG_member, name: "qp", scope: !13756, file: !11520, line: 2070, baseType: !12752, size: 64)
!13759 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !13756, file: !11520, line: 2071, baseType: !12737, size: 64, offset: 64)
!13760 = !DIDerivedType(tag: DW_TAG_member, name: "uobject", scope: !13756, file: !11520, line: 2072, baseType: !12764, size: 64, offset: 128)
!13761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13762, size: 64)
!13762 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_flow_attr", file: !11520, line: 2059, size: 128, elements: !13763)
!13763 = !{!13764, !13765, !13766, !13767, !13768, !13769, !13770}
!13764 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !13762, file: !11520, line: 2060, baseType: !11769, size: 32)
!13765 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !13762, file: !11520, line: 2061, baseType: !744, size: 16, offset: 32)
!13766 = !DIDerivedType(tag: DW_TAG_member, name: "priority", scope: !13762, file: !11520, line: 2062, baseType: !744, size: 16, offset: 48)
!13767 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !13762, file: !11520, line: 2063, baseType: !229, size: 32, offset: 64)
!13768 = !DIDerivedType(tag: DW_TAG_member, name: "num_of_specs", scope: !13762, file: !11520, line: 2064, baseType: !1403, size: 8, offset: 96)
!13769 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !13762, file: !11520, line: 2065, baseType: !1403, size: 8, offset: 104)
!13770 = !DIDerivedType(tag: DW_TAG_member, name: "flows", scope: !13762, file: !11520, line: 2066, baseType: !13771, offset: 128)
!13771 = !DICompositeType(tag: DW_TAG_array_type, baseType: !13772, elements: !2189)
!13772 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "ib_flow_spec", file: !11520, line: 2039, size: 704, elements: !13773)
!13773 = !{!13774, !13779, !13793, !13805, !13821, !13833, !13849, !13860, !13872, !13885, !13896, !13902, !13907, !13920}
!13774 = !DIDerivedType(tag: DW_TAG_member, scope: !13772, file: !11520, line: 2040, baseType: !13775, size: 64)
!13775 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !13772, file: !11520, line: 2040, size: 64, elements: !13776)
!13776 = !{!13777, !13778}
!13777 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !13775, file: !11520, line: 2041, baseType: !229, size: 32)
!13778 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !13775, file: !11520, line: 2042, baseType: !744, size: 16, offset: 32)
!13779 = !DIDerivedType(tag: DW_TAG_member, name: "eth", scope: !13772, file: !11520, line: 2044, baseType: !13780, size: 320)
!13780 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_flow_spec_eth", file: !11520, line: 1876, size: 320, elements: !13781)
!13781 = !{!13782, !13783, !13784, !13792}
!13782 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !13780, file: !11520, line: 1877, baseType: !229, size: 32)
!13783 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !13780, file: !11520, line: 1878, baseType: !744, size: 16, offset: 32)
!13784 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !13780, file: !11520, line: 1879, baseType: !13785, size: 128, offset: 48)
!13785 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_flow_eth_filter", file: !11520, line: 1867, size: 128, elements: !13786)
!13786 = !{!13787, !13788, !13789, !13790, !13791}
!13787 = !DIDerivedType(tag: DW_TAG_member, name: "dst_mac", scope: !13785, file: !11520, line: 1868, baseType: !11301, size: 48)
!13788 = !DIDerivedType(tag: DW_TAG_member, name: "src_mac", scope: !13785, file: !11520, line: 1869, baseType: !11301, size: 48, offset: 48)
!13789 = !DIDerivedType(tag: DW_TAG_member, name: "ether_type", scope: !13785, file: !11520, line: 1870, baseType: !2037, size: 16, offset: 96)
!13790 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_tag", scope: !13785, file: !11520, line: 1871, baseType: !2037, size: 16, offset: 112)
!13791 = !DIDerivedType(tag: DW_TAG_member, name: "real_sz", scope: !13785, file: !11520, line: 1873, baseType: !2479, offset: 128)
!13792 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !13780, file: !11520, line: 1880, baseType: !13785, size: 128, offset: 176)
!13793 = !DIDerivedType(tag: DW_TAG_member, name: "ib", scope: !13772, file: !11520, line: 2045, baseType: !13794, size: 128)
!13794 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_flow_spec_ib", file: !11520, line: 1890, size: 128, elements: !13795)
!13795 = !{!13796, !13797, !13798, !13804}
!13796 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !13794, file: !11520, line: 1891, baseType: !229, size: 32)
!13797 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !13794, file: !11520, line: 1892, baseType: !744, size: 16, offset: 32)
!13798 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !13794, file: !11520, line: 1893, baseType: !13799, size: 32, offset: 48)
!13799 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_flow_ib_filter", file: !11520, line: 1883, size: 32, elements: !13800)
!13800 = !{!13801, !13802, !13803}
!13801 = !DIDerivedType(tag: DW_TAG_member, name: "dlid", scope: !13799, file: !11520, line: 1884, baseType: !2037, size: 16)
!13802 = !DIDerivedType(tag: DW_TAG_member, name: "sl", scope: !13799, file: !11520, line: 1885, baseType: !1404, size: 8, offset: 16)
!13803 = !DIDerivedType(tag: DW_TAG_member, name: "real_sz", scope: !13799, file: !11520, line: 1887, baseType: !2479, offset: 24)
!13804 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !13794, file: !11520, line: 1894, baseType: !13799, size: 32, offset: 80)
!13805 = !DIDerivedType(tag: DW_TAG_member, name: "ipv4", scope: !13772, file: !11520, line: 2046, baseType: !13806, size: 256)
!13806 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_flow_spec_ipv4", file: !11520, line: 1915, size: 256, elements: !13807)
!13807 = !{!13808, !13809, !13810, !13820}
!13808 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !13806, file: !11520, line: 1916, baseType: !229, size: 32)
!13809 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !13806, file: !11520, line: 1917, baseType: !744, size: 16, offset: 32)
!13810 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !13806, file: !11520, line: 1918, baseType: !13811, size: 96, offset: 64)
!13811 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_flow_ipv4_filter", file: !11520, line: 1904, size: 96, elements: !13812)
!13812 = !{!13813, !13814, !13815, !13816, !13817, !13818, !13819}
!13813 = !DIDerivedType(tag: DW_TAG_member, name: "src_ip", scope: !13811, file: !11520, line: 1905, baseType: !2019, size: 32)
!13814 = !DIDerivedType(tag: DW_TAG_member, name: "dst_ip", scope: !13811, file: !11520, line: 1906, baseType: !2019, size: 32, offset: 32)
!13815 = !DIDerivedType(tag: DW_TAG_member, name: "proto", scope: !13811, file: !11520, line: 1907, baseType: !1403, size: 8, offset: 64)
!13816 = !DIDerivedType(tag: DW_TAG_member, name: "tos", scope: !13811, file: !11520, line: 1908, baseType: !1403, size: 8, offset: 72)
!13817 = !DIDerivedType(tag: DW_TAG_member, name: "ttl", scope: !13811, file: !11520, line: 1909, baseType: !1403, size: 8, offset: 80)
!13818 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !13811, file: !11520, line: 1910, baseType: !1403, size: 8, offset: 88)
!13819 = !DIDerivedType(tag: DW_TAG_member, name: "real_sz", scope: !13811, file: !11520, line: 1912, baseType: !2479, offset: 96)
!13820 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !13806, file: !11520, line: 1919, baseType: !13811, size: 96, offset: 160)
!13821 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_udp", scope: !13772, file: !11520, line: 2047, baseType: !13822, size: 128)
!13822 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_flow_spec_tcp_udp", file: !11520, line: 1947, size: 128, elements: !13823)
!13823 = !{!13824, !13825, !13826, !13832}
!13824 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !13822, file: !11520, line: 1948, baseType: !229, size: 32)
!13825 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !13822, file: !11520, line: 1949, baseType: !744, size: 16, offset: 32)
!13826 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !13822, file: !11520, line: 1950, baseType: !13827, size: 32, offset: 48)
!13827 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_flow_tcp_udp_filter", file: !11520, line: 1940, size: 32, elements: !13828)
!13828 = !{!13829, !13830, !13831}
!13829 = !DIDerivedType(tag: DW_TAG_member, name: "dst_port", scope: !13827, file: !11520, line: 1941, baseType: !2037, size: 16)
!13830 = !DIDerivedType(tag: DW_TAG_member, name: "src_port", scope: !13827, file: !11520, line: 1942, baseType: !2037, size: 16, offset: 16)
!13831 = !DIDerivedType(tag: DW_TAG_member, name: "real_sz", scope: !13827, file: !11520, line: 1944, baseType: !2479, offset: 32)
!13832 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !13822, file: !11520, line: 1951, baseType: !13827, size: 32, offset: 80)
!13833 = !DIDerivedType(tag: DW_TAG_member, name: "ipv6", scope: !13772, file: !11520, line: 2048, baseType: !13834, size: 704)
!13834 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_flow_spec_ipv6", file: !11520, line: 1933, size: 704, elements: !13835)
!13835 = !{!13836, !13837, !13838, !13848}
!13836 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !13834, file: !11520, line: 1934, baseType: !229, size: 32)
!13837 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !13834, file: !11520, line: 1935, baseType: !744, size: 16, offset: 32)
!13838 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !13834, file: !11520, line: 1936, baseType: !13839, size: 320, offset: 64)
!13839 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_flow_ipv6_filter", file: !11520, line: 1922, size: 320, elements: !13840)
!13840 = !{!13841, !13842, !13843, !13844, !13845, !13846, !13847}
!13841 = !DIDerivedType(tag: DW_TAG_member, name: "src_ip", scope: !13839, file: !11520, line: 1923, baseType: !6098, size: 128)
!13842 = !DIDerivedType(tag: DW_TAG_member, name: "dst_ip", scope: !13839, file: !11520, line: 1924, baseType: !6098, size: 128, offset: 128)
!13843 = !DIDerivedType(tag: DW_TAG_member, name: "flow_label", scope: !13839, file: !11520, line: 1925, baseType: !2019, size: 32, offset: 256)
!13844 = !DIDerivedType(tag: DW_TAG_member, name: "next_hdr", scope: !13839, file: !11520, line: 1926, baseType: !1403, size: 8, offset: 288)
!13845 = !DIDerivedType(tag: DW_TAG_member, name: "traffic_class", scope: !13839, file: !11520, line: 1927, baseType: !1403, size: 8, offset: 296)
!13846 = !DIDerivedType(tag: DW_TAG_member, name: "hop_limit", scope: !13839, file: !11520, line: 1928, baseType: !1403, size: 8, offset: 304)
!13847 = !DIDerivedType(tag: DW_TAG_member, name: "real_sz", scope: !13839, file: !11520, line: 1930, baseType: !2479, offset: 312)
!13848 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !13834, file: !11520, line: 1937, baseType: !13839, size: 320, offset: 384)
!13849 = !DIDerivedType(tag: DW_TAG_member, name: "tunnel", scope: !13772, file: !11520, line: 2049, baseType: !13850, size: 128)
!13850 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_flow_spec_tunnel", file: !11520, line: 1962, size: 128, elements: !13851)
!13851 = !{!13852, !13853, !13854, !13859}
!13852 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !13850, file: !11520, line: 1963, baseType: !229, size: 32)
!13853 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !13850, file: !11520, line: 1964, baseType: !744, size: 16, offset: 32)
!13854 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !13850, file: !11520, line: 1965, baseType: !13855, size: 32, offset: 64)
!13855 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_flow_tunnel_filter", file: !11520, line: 1954, size: 32, elements: !13856)
!13856 = !{!13857, !13858}
!13857 = !DIDerivedType(tag: DW_TAG_member, name: "tunnel_id", scope: !13855, file: !11520, line: 1955, baseType: !2019, size: 32)
!13858 = !DIDerivedType(tag: DW_TAG_member, name: "real_sz", scope: !13855, file: !11520, line: 1956, baseType: !2479, offset: 32)
!13859 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !13850, file: !11520, line: 1966, baseType: !13855, size: 32, offset: 96)
!13860 = !DIDerivedType(tag: DW_TAG_member, name: "esp", scope: !13772, file: !11520, line: 2050, baseType: !13861, size: 192)
!13861 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_flow_spec_esp", file: !11520, line: 1976, size: 192, elements: !13862)
!13862 = !{!13863, !13864, !13865, !13871}
!13863 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !13861, file: !11520, line: 1977, baseType: !229, size: 32)
!13864 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !13861, file: !11520, line: 1978, baseType: !744, size: 16, offset: 32)
!13865 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !13861, file: !11520, line: 1979, baseType: !13866, size: 64, offset: 64)
!13866 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_flow_esp_filter", file: !11520, line: 1969, size: 64, elements: !13867)
!13867 = !{!13868, !13869, !13870}
!13868 = !DIDerivedType(tag: DW_TAG_member, name: "spi", scope: !13866, file: !11520, line: 1970, baseType: !2019, size: 32)
!13869 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !13866, file: !11520, line: 1971, baseType: !2019, size: 32, offset: 32)
!13870 = !DIDerivedType(tag: DW_TAG_member, name: "real_sz", scope: !13866, file: !11520, line: 1973, baseType: !2479, offset: 64)
!13871 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !13861, file: !11520, line: 1980, baseType: !13866, size: 64, offset: 128)
!13872 = !DIDerivedType(tag: DW_TAG_member, name: "gre", scope: !13772, file: !11520, line: 2051, baseType: !13873, size: 192)
!13873 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_flow_spec_gre", file: !11520, line: 1991, size: 192, elements: !13874)
!13874 = !{!13875, !13876, !13877, !13884}
!13875 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !13873, file: !11520, line: 1992, baseType: !229, size: 32)
!13876 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !13873, file: !11520, line: 1993, baseType: !744, size: 16, offset: 32)
!13877 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !13873, file: !11520, line: 1994, baseType: !13878, size: 64, offset: 64)
!13878 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_flow_gre_filter", file: !11520, line: 1983, size: 64, elements: !13879)
!13879 = !{!13880, !13881, !13882, !13883}
!13880 = !DIDerivedType(tag: DW_TAG_member, name: "c_ks_res0_ver", scope: !13878, file: !11520, line: 1984, baseType: !2037, size: 16)
!13881 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !13878, file: !11520, line: 1985, baseType: !2037, size: 16, offset: 16)
!13882 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !13878, file: !11520, line: 1986, baseType: !2019, size: 32, offset: 32)
!13883 = !DIDerivedType(tag: DW_TAG_member, name: "real_sz", scope: !13878, file: !11520, line: 1988, baseType: !2479, offset: 64)
!13884 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !13873, file: !11520, line: 1995, baseType: !13878, size: 64, offset: 128)
!13885 = !DIDerivedType(tag: DW_TAG_member, name: "mpls", scope: !13772, file: !11520, line: 2052, baseType: !13886, size: 128)
!13886 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_flow_spec_mpls", file: !11520, line: 2004, size: 128, elements: !13887)
!13887 = !{!13888, !13889, !13890, !13895}
!13888 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !13886, file: !11520, line: 2005, baseType: !229, size: 32)
!13889 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !13886, file: !11520, line: 2006, baseType: !744, size: 16, offset: 32)
!13890 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !13886, file: !11520, line: 2007, baseType: !13891, size: 32, offset: 64)
!13891 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_flow_mpls_filter", file: !11520, line: 1998, size: 32, elements: !13892)
!13892 = !{!13893, !13894}
!13893 = !DIDerivedType(tag: DW_TAG_member, name: "tag", scope: !13891, file: !11520, line: 1999, baseType: !2019, size: 32)
!13894 = !DIDerivedType(tag: DW_TAG_member, name: "real_sz", scope: !13891, file: !11520, line: 2001, baseType: !2479, offset: 32)
!13895 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !13886, file: !11520, line: 2008, baseType: !13891, size: 32, offset: 96)
!13896 = !DIDerivedType(tag: DW_TAG_member, name: "flow_tag", scope: !13772, file: !11520, line: 2053, baseType: !13897, size: 96)
!13897 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_flow_spec_action_tag", file: !11520, line: 2011, size: 96, elements: !13898)
!13898 = !{!13899, !13900, !13901}
!13899 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !13897, file: !11520, line: 2012, baseType: !11775, size: 32)
!13900 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !13897, file: !11520, line: 2013, baseType: !744, size: 16, offset: 32)
!13901 = !DIDerivedType(tag: DW_TAG_member, name: "tag_id", scope: !13897, file: !11520, line: 2014, baseType: !229, size: 32, offset: 64)
!13902 = !DIDerivedType(tag: DW_TAG_member, name: "drop", scope: !13772, file: !11520, line: 2054, baseType: !13903, size: 64)
!13903 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_flow_spec_action_drop", file: !11520, line: 2017, size: 64, elements: !13904)
!13904 = !{!13905, !13906}
!13905 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !13903, file: !11520, line: 2018, baseType: !11775, size: 32)
!13906 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !13903, file: !11520, line: 2019, baseType: !744, size: 16, offset: 32)
!13907 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !13772, file: !11520, line: 2055, baseType: !13908, size: 128)
!13908 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_flow_spec_action_handle", file: !11520, line: 2022, size: 128, elements: !13909)
!13909 = !{!13910, !13911, !13912}
!13910 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !13908, file: !11520, line: 2023, baseType: !11775, size: 32)
!13911 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !13908, file: !11520, line: 2024, baseType: !744, size: 16, offset: 32)
!13912 = !DIDerivedType(tag: DW_TAG_member, name: "act", scope: !13908, file: !11520, line: 2025, baseType: !13913, size: 64, offset: 64)
!13913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13914, size: 64)
!13914 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_flow_action", file: !11520, line: 2126, size: 192, elements: !13915)
!13915 = !{!13916, !13917, !13918, !13919}
!13916 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !13914, file: !11520, line: 2127, baseType: !12737, size: 64)
!13917 = !DIDerivedType(tag: DW_TAG_member, name: "uobject", scope: !13914, file: !11520, line: 2128, baseType: !12764, size: 64, offset: 64)
!13918 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !13914, file: !11520, line: 2129, baseType: !11792, size: 32, offset: 128)
!13919 = !DIDerivedType(tag: DW_TAG_member, name: "usecnt", scope: !13914, file: !11520, line: 2130, baseType: !632, size: 32, offset: 160)
!13920 = !DIDerivedType(tag: DW_TAG_member, name: "flow_count", scope: !13772, file: !11520, line: 2056, baseType: !13921, size: 128)
!13921 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_flow_spec_action_count", file: !11520, line: 2033, size: 128, elements: !13922)
!13922 = !{!13923, !13924, !13925}
!13923 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !13921, file: !11520, line: 2034, baseType: !11775, size: 32)
!13924 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !13921, file: !11520, line: 2035, baseType: !744, size: 16, offset: 32)
!13925 = !DIDerivedType(tag: DW_TAG_member, name: "counters", scope: !13921, file: !11520, line: 2036, baseType: !12733, size: 64, offset: 64)
!13926 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_flow", scope: !12742, file: !11520, line: 2458, baseType: !13927, size: 64, offset: 4288)
!13927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13928, size: 64)
!13928 = !DISubroutineType(types: !13929)
!13929 = !{!6, !13755}
!13930 = !DIDerivedType(tag: DW_TAG_member, name: "create_flow_action_esp", scope: !12742, file: !11520, line: 2459, baseType: !13931, size: 64, offset: 4352)
!13931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13932, size: 64)
!13932 = !DISubroutineType(types: !13933)
!13933 = !{!13913, !12737, !13934, !13694}
!13934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13935, size: 64)
!13935 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13936)
!13936 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_flow_action_attrs_esp", file: !11520, line: 2110, size: 448, elements: !13937)
!13937 = !{!13938, !13955, !13967, !13973, !13974, !13975, !13976, !13977, !13978}
!13938 = !DIDerivedType(tag: DW_TAG_member, name: "keymat", scope: !13936, file: !11520, line: 2111, baseType: !13939, size: 64)
!13939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13940, size: 64)
!13940 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_flow_action_attrs_esp_keymats", file: !11520, line: 2080, size: 512, elements: !13941)
!13941 = !{!13942, !13943}
!13942 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !13940, file: !11520, line: 2081, baseType: !11796, size: 32)
!13943 = !DIDerivedType(tag: DW_TAG_member, name: "keymat", scope: !13940, file: !11520, line: 2084, baseType: !13944, size: 448, offset: 64)
!13944 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13940, file: !11520, line: 2082, size: 448, elements: !13945)
!13945 = !{!13946}
!13946 = !DIDerivedType(tag: DW_TAG_member, name: "aes_gcm", scope: !13944, file: !11520, line: 2083, baseType: !13947, size: 448)
!13947 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_uverbs_flow_action_esp_keymat_aes_gcm", file: !11487, line: 152, size: 448, elements: !13948)
!13948 = !{!13949, !13950, !13951, !13952, !13953, !13954}
!13949 = !DIDerivedType(tag: DW_TAG_member, name: "iv", scope: !13947, file: !11487, line: 153, baseType: !236, size: 64, align: 64)
!13950 = !DIDerivedType(tag: DW_TAG_member, name: "iv_algo", scope: !13947, file: !11487, line: 154, baseType: !231, size: 32, offset: 64)
!13951 = !DIDerivedType(tag: DW_TAG_member, name: "salt", scope: !13947, file: !11487, line: 156, baseType: !231, size: 32, offset: 96)
!13952 = !DIDerivedType(tag: DW_TAG_member, name: "icv_len", scope: !13947, file: !11487, line: 157, baseType: !231, size: 32, offset: 128)
!13953 = !DIDerivedType(tag: DW_TAG_member, name: "key_len", scope: !13947, file: !11487, line: 159, baseType: !231, size: 32, offset: 160)
!13954 = !DIDerivedType(tag: DW_TAG_member, name: "aes_key", scope: !13947, file: !11487, line: 160, baseType: !4719, size: 256, offset: 192)
!13955 = !DIDerivedType(tag: DW_TAG_member, name: "replay", scope: !13936, file: !11520, line: 2112, baseType: !13956, size: 64, offset: 64)
!13956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13957, size: 64)
!13957 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_flow_action_attrs_esp_replays", file: !11520, line: 2087, size: 64, elements: !13958)
!13958 = !{!13959, !13960}
!13959 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !13957, file: !11520, line: 2088, baseType: !11799, size: 32)
!13960 = !DIDerivedType(tag: DW_TAG_member, name: "replay", scope: !13957, file: !11520, line: 2091, baseType: !13961, size: 32, offset: 32)
!13961 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !13957, file: !11520, line: 2089, size: 32, elements: !13962)
!13962 = !{!13963}
!13963 = !DIDerivedType(tag: DW_TAG_member, name: "bmp", scope: !13961, file: !11520, line: 2090, baseType: !13964, size: 32)
!13964 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_uverbs_flow_action_esp_replay_bmp", file: !11487, line: 168, size: 32, elements: !13965)
!13965 = !{!13966}
!13966 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !13964, file: !11487, line: 169, baseType: !231, size: 32)
!13967 = !DIDerivedType(tag: DW_TAG_member, name: "encap", scope: !13936, file: !11520, line: 2113, baseType: !13968, size: 64, offset: 128)
!13968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13969, size: 64)
!13969 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_flow_spec_list", file: !11520, line: 2105, size: 768, elements: !13970)
!13970 = !{!13971, !13972}
!13971 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !13969, file: !11520, line: 2106, baseType: !13968, size: 64)
!13972 = !DIDerivedType(tag: DW_TAG_member, name: "spec", scope: !13969, file: !11520, line: 2107, baseType: !13772, size: 704, offset: 64)
!13973 = !DIDerivedType(tag: DW_TAG_member, name: "esn", scope: !13936, file: !11520, line: 2117, baseType: !229, size: 32, offset: 192)
!13974 = !DIDerivedType(tag: DW_TAG_member, name: "spi", scope: !13936, file: !11520, line: 2118, baseType: !229, size: 32, offset: 224)
!13975 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !13936, file: !11520, line: 2119, baseType: !229, size: 32, offset: 256)
!13976 = !DIDerivedType(tag: DW_TAG_member, name: "tfc_pad", scope: !13936, file: !11520, line: 2120, baseType: !229, size: 32, offset: 288)
!13977 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !13936, file: !11520, line: 2122, baseType: !235, size: 64, offset: 320)
!13978 = !DIDerivedType(tag: DW_TAG_member, name: "hard_limit_pkts", scope: !13936, file: !11520, line: 2123, baseType: !235, size: 64, offset: 384)
!13979 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_flow_action", scope: !12742, file: !11520, line: 2463, baseType: !13980, size: 64, offset: 4416)
!13980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13981, size: 64)
!13981 = !DISubroutineType(types: !13982)
!13982 = !{!6, !13913}
!13983 = !DIDerivedType(tag: DW_TAG_member, name: "modify_flow_action_esp", scope: !12742, file: !11520, line: 2464, baseType: !13984, size: 64, offset: 4480)
!13984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13985, size: 64)
!13985 = !DISubroutineType(types: !13986)
!13986 = !{!6, !13913, !13934, !13694}
!13987 = !DIDerivedType(tag: DW_TAG_member, name: "set_vf_link_state", scope: !12742, file: !11520, line: 2468, baseType: !13988, size: 64, offset: 4544)
!13988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13989, size: 64)
!13989 = !DISubroutineType(types: !13990)
!13990 = !{!6, !12737, !6, !1403, !6}
!13991 = !DIDerivedType(tag: DW_TAG_member, name: "get_vf_config", scope: !12742, file: !11520, line: 2470, baseType: !13992, size: 64, offset: 4608)
!13992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13993, size: 64)
!13993 = !DISubroutineType(types: !13994)
!13994 = !{!6, !12737, !6, !1403, !2765}
!13995 = !DIDerivedType(tag: DW_TAG_member, name: "get_vf_stats", scope: !12742, file: !11520, line: 2472, baseType: !13996, size: 64, offset: 4672)
!13996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13997, size: 64)
!13997 = !DISubroutineType(types: !13998)
!13998 = !{!6, !12737, !6, !1403, !2789}
!13999 = !DIDerivedType(tag: DW_TAG_member, name: "get_vf_guid", scope: !12742, file: !11520, line: 2474, baseType: !14000, size: 64, offset: 4736)
!14000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14001, size: 64)
!14001 = !DISubroutineType(types: !14002)
!14002 = !{!6, !12737, !6, !1403, !2814, !2814}
!14003 = !DIDerivedType(tag: DW_TAG_member, name: "set_vf_guid", scope: !12742, file: !11520, line: 2477, baseType: !14004, size: 64, offset: 4800)
!14004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14005, size: 64)
!14005 = !DISubroutineType(types: !14006)
!14006 = !{!6, !12737, !6, !1403, !235, !6}
!14007 = !DIDerivedType(tag: DW_TAG_member, name: "create_wq", scope: !12742, file: !11520, line: 2479, baseType: !14008, size: 64, offset: 4864)
!14008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14009, size: 64)
!14009 = !DISubroutineType(types: !14010)
!14010 = !{!12920, !12757, !14011, !13319}
!14011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14012, size: 64)
!14012 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_wq_init_attr", file: !11520, line: 1659, size: 384, elements: !14013)
!14013 = !{!14014, !14015, !14016, !14017, !14018, !14019, !14020}
!14014 = !DIDerivedType(tag: DW_TAG_member, name: "wq_context", scope: !14012, file: !11520, line: 1660, baseType: !159, size: 64)
!14015 = !DIDerivedType(tag: DW_TAG_member, name: "wq_type", scope: !14012, file: !11520, line: 1661, baseType: !11547, size: 32, offset: 64)
!14016 = !DIDerivedType(tag: DW_TAG_member, name: "max_wr", scope: !14012, file: !11520, line: 1662, baseType: !229, size: 32, offset: 96)
!14017 = !DIDerivedType(tag: DW_TAG_member, name: "max_sge", scope: !14012, file: !11520, line: 1663, baseType: !229, size: 32, offset: 128)
!14018 = !DIDerivedType(tag: DW_TAG_member, name: "cq", scope: !14012, file: !11520, line: 1664, baseType: !12861, size: 64, offset: 192)
!14019 = !DIDerivedType(tag: DW_TAG_member, name: "event_handler", scope: !14012, file: !11520, line: 1665, baseType: !12874, size: 64, offset: 256)
!14020 = !DIDerivedType(tag: DW_TAG_member, name: "create_flags", scope: !14012, file: !11520, line: 1666, baseType: !229, size: 32, offset: 320)
!14021 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_wq", scope: !12742, file: !11520, line: 2482, baseType: !14022, size: 64, offset: 4928)
!14022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14023, size: 64)
!14023 = !DISubroutineType(types: !14024)
!14024 = !{!6, !12920, !13319}
!14025 = !DIDerivedType(tag: DW_TAG_member, name: "modify_wq", scope: !12742, file: !11520, line: 2483, baseType: !14026, size: 64, offset: 4992)
!14026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14027, size: 64)
!14027 = !DISubroutineType(types: !14028)
!14028 = !{!6, !12920, !14029, !229, !13319}
!14029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14030, size: 64)
!14030 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_wq_attr", file: !11520, line: 1675, size: 128, elements: !14031)
!14031 = !{!14032, !14033, !14034, !14035}
!14032 = !DIDerivedType(tag: DW_TAG_member, name: "wq_state", scope: !14030, file: !11520, line: 1676, baseType: !11542, size: 32)
!14033 = !DIDerivedType(tag: DW_TAG_member, name: "curr_wq_state", scope: !14030, file: !11520, line: 1677, baseType: !11542, size: 32, offset: 32)
!14034 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !14030, file: !11520, line: 1678, baseType: !229, size: 32, offset: 64)
!14035 = !DIDerivedType(tag: DW_TAG_member, name: "flags_mask", scope: !14030, file: !11520, line: 1679, baseType: !229, size: 32, offset: 96)
!14036 = !DIDerivedType(tag: DW_TAG_member, name: "create_rwq_ind_table", scope: !12742, file: !11520, line: 2485, baseType: !14037, size: 64, offset: 5056)
!14037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14038, size: 64)
!14038 = !DISubroutineType(types: !14039)
!14039 = !{!6, !13074, !14040, !13319}
!14040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14041, size: 64)
!14041 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_rwq_ind_table_init_attr", file: !11520, line: 1691, size: 128, elements: !14042)
!14042 = !{!14043, !14044}
!14043 = !DIDerivedType(tag: DW_TAG_member, name: "log_ind_tbl_size", scope: !14041, file: !11520, line: 1692, baseType: !229, size: 32)
!14044 = !DIDerivedType(tag: DW_TAG_member, name: "ind_tbl", scope: !14041, file: !11520, line: 1694, baseType: !13083, size: 64, offset: 64)
!14045 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_rwq_ind_table", scope: !12742, file: !11520, line: 2488, baseType: !14046, size: 64, offset: 5120)
!14046 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14047, size: 64)
!14047 = !DISubroutineType(types: !14048)
!14048 = !{!6, !13074}
!14049 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_dm", scope: !12742, file: !11520, line: 2489, baseType: !14050, size: 64, offset: 5184)
!14050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14051, size: 64)
!14051 = !DISubroutineType(types: !14052)
!14052 = !{!12824, !12737, !12772, !14053, !13694}
!14053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14054, size: 64)
!14054 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_dm_alloc_attr", file: !11520, line: 372, size: 128, elements: !14055)
!14055 = !{!14056, !14057, !14058}
!14056 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !14054, file: !11520, line: 373, baseType: !235, size: 64)
!14057 = !DIDerivedType(tag: DW_TAG_member, name: "alignment", scope: !14054, file: !11520, line: 374, baseType: !229, size: 32, offset: 64)
!14058 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !14054, file: !11520, line: 375, baseType: !229, size: 32, offset: 96)
!14059 = !DIDerivedType(tag: DW_TAG_member, name: "dealloc_dm", scope: !12742, file: !11520, line: 2493, baseType: !14060, size: 64, offset: 5248)
!14060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14061, size: 64)
!14061 = !DISubroutineType(types: !14062)
!14062 = !{!6, !12824, !13694}
!14063 = !DIDerivedType(tag: DW_TAG_member, name: "reg_dm_mr", scope: !12742, file: !11520, line: 2494, baseType: !14064, size: 64, offset: 5312)
!14064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14065, size: 64)
!14065 = !DISubroutineType(types: !14066)
!14066 = !{!12806, !12757, !12824, !14067, !13694}
!14067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14068, size: 64)
!14068 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_dm_mr_attr", file: !11520, line: 366, size: 192, elements: !14069)
!14069 = !{!14070, !14071, !14072}
!14070 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !14068, file: !11520, line: 367, baseType: !235, size: 64)
!14071 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !14068, file: !11520, line: 368, baseType: !235, size: 64, offset: 64)
!14072 = !DIDerivedType(tag: DW_TAG_member, name: "access_flags", scope: !14068, file: !11520, line: 369, baseType: !229, size: 32, offset: 128)
!14073 = !DIDerivedType(tag: DW_TAG_member, name: "create_counters", scope: !12742, file: !11520, line: 2497, baseType: !14074, size: 64, offset: 5376)
!14074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14075, size: 64)
!14075 = !DISubroutineType(types: !14076)
!14076 = !{!6, !12733, !13694}
!14077 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_counters", scope: !12742, file: !11520, line: 2499, baseType: !14078, size: 64, offset: 5440)
!14078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14079, size: 64)
!14079 = !DISubroutineType(types: !14080)
!14080 = !{!6, !12733}
!14081 = !DIDerivedType(tag: DW_TAG_member, name: "read_counters", scope: !12742, file: !11520, line: 2500, baseType: !14082, size: 64, offset: 5504)
!14082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14083, size: 64)
!14083 = !DISubroutineType(types: !14084)
!14084 = !{!6, !12733, !14085, !13694}
!14085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14086, size: 64)
!14086 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_counters_read_attr", file: !11520, line: 2240, size: 128, elements: !14087)
!14087 = !{!14088, !14089, !14090}
!14088 = !DIDerivedType(tag: DW_TAG_member, name: "counters_buff", scope: !14086, file: !11520, line: 2241, baseType: !3572, size: 64)
!14089 = !DIDerivedType(tag: DW_TAG_member, name: "ncounters", scope: !14086, file: !11520, line: 2242, baseType: !229, size: 32, offset: 64)
!14090 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !14086, file: !11520, line: 2243, baseType: !229, size: 32, offset: 96)
!14091 = !DIDerivedType(tag: DW_TAG_member, name: "map_mr_sg_pi", scope: !12742, file: !11520, line: 2503, baseType: !14092, size: 64, offset: 5568)
!14092 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14093, size: 64)
!14093 = !DISubroutineType(types: !14094)
!14094 = !{!6, !12806, !13700, !6, !8982, !13700, !6, !8982}
!14095 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_hw_stats", scope: !12742, file: !11520, line: 2514, baseType: !14096, size: 64, offset: 5632)
!14096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14097, size: 64)
!14097 = !DISubroutineType(types: !14098)
!14098 = !{!13134, !12737, !1403}
!14099 = !DIDerivedType(tag: DW_TAG_member, name: "get_hw_stats", scope: !12742, file: !11520, line: 2528, baseType: !14100, size: 64, offset: 5696)
!14100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14101, size: 64)
!14101 = !DISubroutineType(types: !14102)
!14102 = !{!6, !12737, !13134, !1403, !6}
!14103 = !DIDerivedType(tag: DW_TAG_member, name: "init_port", scope: !12742, file: !11520, line: 2534, baseType: !14104, size: 64, offset: 5760)
!14104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14105, size: 64)
!14105 = !DISubroutineType(types: !14106)
!14106 = !{!6, !12737, !1403, !37}
!14107 = !DIDerivedType(tag: DW_TAG_member, name: "fill_res_mr_entry", scope: !12742, file: !11520, line: 2539, baseType: !14108, size: 64, offset: 5824)
!14108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14109, size: 64)
!14109 = !DISubroutineType(types: !14110)
!14110 = !{!6, !2153, !12806}
!14111 = !DIDerivedType(tag: DW_TAG_member, name: "fill_res_mr_entry_raw", scope: !12742, file: !11520, line: 2540, baseType: !14108, size: 64, offset: 5888)
!14112 = !DIDerivedType(tag: DW_TAG_member, name: "fill_res_cq_entry", scope: !12742, file: !11520, line: 2541, baseType: !14113, size: 64, offset: 5952)
!14113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14114, size: 64)
!14114 = !DISubroutineType(types: !14115)
!14115 = !{!6, !2153, !12861}
!14116 = !DIDerivedType(tag: DW_TAG_member, name: "fill_res_cq_entry_raw", scope: !12742, file: !11520, line: 2542, baseType: !14113, size: 64, offset: 6016)
!14117 = !DIDerivedType(tag: DW_TAG_member, name: "fill_res_qp_entry", scope: !12742, file: !11520, line: 2543, baseType: !14118, size: 64, offset: 6080)
!14118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14119, size: 64)
!14119 = !DISubroutineType(types: !14120)
!14120 = !{!6, !2153, !12752}
!14121 = !DIDerivedType(tag: DW_TAG_member, name: "fill_res_qp_entry_raw", scope: !12742, file: !11520, line: 2544, baseType: !14118, size: 64, offset: 6144)
!14122 = !DIDerivedType(tag: DW_TAG_member, name: "fill_res_cm_id_entry", scope: !12742, file: !11520, line: 2545, baseType: !14123, size: 64, offset: 6208)
!14123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14124, size: 64)
!14124 = !DISubroutineType(types: !14125)
!14125 = !{!6, !2153, !14126}
!14126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14127, size: 64)
!14127 = !DICompositeType(tag: DW_TAG_structure_type, name: "rdma_cm_id", file: !11520, line: 51, flags: DIFlagFwdDecl)
!14128 = !DIDerivedType(tag: DW_TAG_member, name: "enable_driver", scope: !12742, file: !11520, line: 2552, baseType: !14129, size: 64, offset: 6272)
!14129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14130, size: 64)
!14130 = !DISubroutineType(types: !14131)
!14131 = !{!6, !12737}
!14132 = !DIDerivedType(tag: DW_TAG_member, name: "dealloc_driver", scope: !12742, file: !11520, line: 2556, baseType: !14133, size: 64, offset: 6336)
!14133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14134, size: 64)
!14134 = !DISubroutineType(types: !14135)
!14135 = !{null, !12737}
!14136 = !DIDerivedType(tag: DW_TAG_member, name: "iw_add_ref", scope: !12742, file: !11520, line: 2559, baseType: !13192, size: 64, offset: 6400)
!14137 = !DIDerivedType(tag: DW_TAG_member, name: "iw_rem_ref", scope: !12742, file: !11520, line: 2560, baseType: !13192, size: 64, offset: 6464)
!14138 = !DIDerivedType(tag: DW_TAG_member, name: "iw_get_qp", scope: !12742, file: !11520, line: 2561, baseType: !14139, size: 64, offset: 6528)
!14139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14140, size: 64)
!14140 = !DISubroutineType(types: !14141)
!14141 = !{!12752, !12737, !6}
!14142 = !DIDerivedType(tag: DW_TAG_member, name: "iw_connect", scope: !12742, file: !11520, line: 2562, baseType: !14143, size: 64, offset: 6592)
!14143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14144, size: 64)
!14144 = !DISubroutineType(types: !14145)
!14145 = !{!6, !14146, !14148}
!14146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14147, size: 64)
!14147 = !DICompositeType(tag: DW_TAG_structure_type, name: "iw_cm_id", file: !11520, line: 2247, flags: DIFlagFwdDecl)
!14148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14149, size: 64)
!14149 = !DICompositeType(tag: DW_TAG_structure_type, name: "iw_cm_conn_param", file: !11520, line: 2248, flags: DIFlagFwdDecl)
!14150 = !DIDerivedType(tag: DW_TAG_member, name: "iw_accept", scope: !12742, file: !11520, line: 2564, baseType: !14143, size: 64, offset: 6656)
!14151 = !DIDerivedType(tag: DW_TAG_member, name: "iw_reject", scope: !12742, file: !11520, line: 2566, baseType: !14152, size: 64, offset: 6720)
!14152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14153, size: 64)
!14153 = !DISubroutineType(types: !14154)
!14154 = !{!6, !14146, !2454, !1403}
!14155 = !DIDerivedType(tag: DW_TAG_member, name: "iw_create_listen", scope: !12742, file: !11520, line: 2568, baseType: !14156, size: 64, offset: 6784)
!14156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14157, size: 64)
!14157 = !DISubroutineType(types: !14158)
!14158 = !{!6, !14146, !6}
!14159 = !DIDerivedType(tag: DW_TAG_member, name: "iw_destroy_listen", scope: !12742, file: !11520, line: 2569, baseType: !14160, size: 64, offset: 6848)
!14160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14161, size: 64)
!14161 = !DISubroutineType(types: !14162)
!14162 = !{!6, !14146}
!14163 = !DIDerivedType(tag: DW_TAG_member, name: "counter_bind_qp", scope: !12742, file: !11520, line: 2575, baseType: !14164, size: 64, offset: 6912)
!14164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14165, size: 64)
!14165 = !DISubroutineType(types: !14166)
!14166 = !{!6, !13115, !12752}
!14167 = !DIDerivedType(tag: DW_TAG_member, name: "counter_unbind_qp", scope: !12742, file: !11520, line: 2580, baseType: !14168, size: 64, offset: 6976)
!14168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14169, size: 64)
!14169 = !DISubroutineType(types: !14170)
!14170 = !{!6, !12752}
!14171 = !DIDerivedType(tag: DW_TAG_member, name: "counter_dealloc", scope: !12742, file: !11520, line: 2584, baseType: !14172, size: 64, offset: 7040)
!14172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14173, size: 64)
!14173 = !DISubroutineType(types: !14174)
!14174 = !{!6, !13115}
!14175 = !DIDerivedType(tag: DW_TAG_member, name: "counter_alloc_stats", scope: !12742, file: !11520, line: 2589, baseType: !14176, size: 64, offset: 7104)
!14176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14177, size: 64)
!14177 = !DISubroutineType(types: !14178)
!14178 = !{!13134, !13115}
!14179 = !DIDerivedType(tag: DW_TAG_member, name: "counter_update_stats", scope: !12742, file: !11520, line: 2594, baseType: !14172, size: 64, offset: 7168)
!14180 = !DIDerivedType(tag: DW_TAG_member, name: "fill_stat_mr_entry", scope: !12742, file: !11520, line: 2600, baseType: !14108, size: 64, offset: 7232)
!14181 = !DIDerivedType(tag: DW_TAG_member, name: "query_ucontext", scope: !12742, file: !11520, line: 2603, baseType: !14182, size: 64, offset: 7296)
!14182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14183, size: 64)
!14183 = !DISubroutineType(types: !14184)
!14184 = !{!6, !12772, !13694}
!14185 = !DIDerivedType(tag: DW_TAG_member, name: "size_ib_ah", scope: !12742, file: !11520, line: 2606, baseType: !132, size: 64, offset: 7360)
!14186 = !DIDerivedType(tag: DW_TAG_member, name: "size_ib_counters", scope: !12742, file: !11520, line: 2607, baseType: !132, size: 64, offset: 7424)
!14187 = !DIDerivedType(tag: DW_TAG_member, name: "size_ib_cq", scope: !12742, file: !11520, line: 2608, baseType: !132, size: 64, offset: 7488)
!14188 = !DIDerivedType(tag: DW_TAG_member, name: "size_ib_mw", scope: !12742, file: !11520, line: 2609, baseType: !132, size: 64, offset: 7552)
!14189 = !DIDerivedType(tag: DW_TAG_member, name: "size_ib_pd", scope: !12742, file: !11520, line: 2610, baseType: !132, size: 64, offset: 7616)
!14190 = !DIDerivedType(tag: DW_TAG_member, name: "size_ib_rwq_ind_table", scope: !12742, file: !11520, line: 2611, baseType: !132, size: 64, offset: 7680)
!14191 = !DIDerivedType(tag: DW_TAG_member, name: "size_ib_srq", scope: !12742, file: !11520, line: 2612, baseType: !132, size: 64, offset: 7744)
!14192 = !DIDerivedType(tag: DW_TAG_member, name: "size_ib_ucontext", scope: !12742, file: !11520, line: 2613, baseType: !132, size: 64, offset: 7808)
!14193 = !DIDerivedType(tag: DW_TAG_member, name: "size_ib_xrcd", scope: !12742, file: !11520, line: 2614, baseType: !132, size: 64, offset: 7872)
!14194 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !12738, file: !11520, line: 2633, baseType: !7622, size: 512, offset: 8000)
!14195 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !12738, file: !11520, line: 2634, baseType: !178, size: 128, align: 64, offset: 8512)
!14196 = !DIDerivedType(tag: DW_TAG_member, name: "event_handler_list", scope: !12738, file: !11520, line: 2636, baseType: !30, size: 128, offset: 8640)
!14197 = !DIDerivedType(tag: DW_TAG_member, name: "event_handler_rwsem", scope: !12738, file: !11520, line: 2638, baseType: !652, size: 256, offset: 8768)
!14198 = !DIDerivedType(tag: DW_TAG_member, name: "qp_open_list_lock", scope: !12738, file: !11520, line: 2641, baseType: !44, offset: 9024)
!14199 = !DIDerivedType(tag: DW_TAG_member, name: "client_data_rwsem", scope: !12738, file: !11520, line: 2643, baseType: !652, size: 256, offset: 9024)
!14200 = !DIDerivedType(tag: DW_TAG_member, name: "client_data", scope: !12738, file: !11520, line: 2644, baseType: !623, size: 128, offset: 9280)
!14201 = !DIDerivedType(tag: DW_TAG_member, name: "unregistration_lock", scope: !12738, file: !11520, line: 2645, baseType: !558, size: 192, offset: 9408)
!14202 = !DIDerivedType(tag: DW_TAG_member, name: "cache_lock", scope: !12738, file: !11520, line: 2648, baseType: !834, offset: 9600)
!14203 = !DIDerivedType(tag: DW_TAG_member, name: "port_data", scope: !12738, file: !11520, line: 2652, baseType: !14204, size: 64, offset: 9600)
!14204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14205, size: 64)
!14205 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_port_data", file: !11520, line: 2164, size: 1280, elements: !14206)
!14206 = !{!14207, !14208, !14209, !14210, !14211, !14223, !14224, !14225, !14226, !14233}
!14207 = !DIDerivedType(tag: DW_TAG_member, name: "ib_dev", scope: !14205, file: !11520, line: 2165, baseType: !12737, size: 64)
!14208 = !DIDerivedType(tag: DW_TAG_member, name: "immutable", scope: !14205, file: !11520, line: 2167, baseType: !13390, size: 128, offset: 64)
!14209 = !DIDerivedType(tag: DW_TAG_member, name: "pkey_list_lock", scope: !14205, file: !11520, line: 2169, baseType: !44, offset: 192)
!14210 = !DIDerivedType(tag: DW_TAG_member, name: "pkey_list", scope: !14205, file: !11520, line: 2170, baseType: !30, size: 128, offset: 192)
!14211 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !14205, file: !11520, line: 2172, baseType: !14212, size: 256, offset: 320)
!14212 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_port_cache", file: !11520, line: 2149, size: 256, elements: !14213)
!14213 = !{!14214, !14215, !14218, !14221, !14222}
!14214 = !DIDerivedType(tag: DW_TAG_member, name: "subnet_prefix", scope: !14212, file: !11520, line: 2150, baseType: !235, size: 64)
!14215 = !DIDerivedType(tag: DW_TAG_member, name: "pkey", scope: !14212, file: !11520, line: 2151, baseType: !14216, size: 64, offset: 64)
!14216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14217, size: 64)
!14217 = !DICompositeType(tag: DW_TAG_structure_type, name: "ib_pkey_cache", file: !11520, line: 2151, flags: DIFlagFwdDecl)
!14218 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !14212, file: !11520, line: 2152, baseType: !14219, size: 64, offset: 128)
!14219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14220, size: 64)
!14220 = !DICompositeType(tag: DW_TAG_structure_type, name: "ib_gid_table", file: !11520, line: 2152, flags: DIFlagFwdDecl)
!14221 = !DIDerivedType(tag: DW_TAG_member, name: "lmc", scope: !14212, file: !11520, line: 2153, baseType: !1403, size: 8, offset: 192)
!14222 = !DIDerivedType(tag: DW_TAG_member, name: "port_state", scope: !14212, file: !11520, line: 2154, baseType: !11703, size: 32, offset: 224)
!14223 = !DIDerivedType(tag: DW_TAG_member, name: "netdev_lock", scope: !14205, file: !11520, line: 2174, baseType: !44, offset: 576)
!14224 = !DIDerivedType(tag: DW_TAG_member, name: "netdev", scope: !14205, file: !11520, line: 2175, baseType: !2169, size: 64, offset: 576)
!14225 = !DIDerivedType(tag: DW_TAG_member, name: "ndev_hash_link", scope: !14205, file: !11520, line: 2176, baseType: !455, size: 128, offset: 640)
!14226 = !DIDerivedType(tag: DW_TAG_member, name: "port_counter", scope: !14205, file: !11520, line: 2177, baseType: !14227, size: 448, offset: 768)
!14227 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rdma_port_counter", file: !13117, line: 28, size: 448, elements: !14228)
!14228 = !{!14229, !14230, !14231, !14232}
!14229 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !14227, file: !13117, line: 29, baseType: !13124, size: 96)
!14230 = !DIDerivedType(tag: DW_TAG_member, name: "hstats", scope: !14227, file: !13117, line: 30, baseType: !13134, size: 64, offset: 128)
!14231 = !DIDerivedType(tag: DW_TAG_member, name: "num_counters", scope: !14227, file: !13117, line: 31, baseType: !199, size: 32, offset: 192)
!14232 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !14227, file: !13117, line: 32, baseType: !558, size: 192, offset: 256)
!14233 = !DIDerivedType(tag: DW_TAG_member, name: "hw_stats", scope: !14205, file: !11520, line: 2178, baseType: !13134, size: 64, offset: 1216)
!14234 = !DIDerivedType(tag: DW_TAG_member, name: "num_comp_vectors", scope: !12738, file: !11520, line: 2654, baseType: !6, size: 32, offset: 9664)
!14235 = !DIDerivedType(tag: DW_TAG_member, scope: !12738, file: !11520, line: 2656, baseType: !14236, size: 5888, offset: 9728)
!14236 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !12738, file: !11520, line: 2656, size: 5888, elements: !14237)
!14237 = !{!14238, !14239}
!14238 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !14236, file: !11520, line: 2657, baseType: !18, size: 5568)
!14239 = !DIDerivedType(tag: DW_TAG_member, name: "coredev", scope: !14236, file: !11520, line: 2658, baseType: !14240, size: 5888)
!14240 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ib_core_device", file: !11520, line: 2617, size: 5888, elements: !14241)
!14241 = !{!14242, !14243, !14244, !14245, !14246}
!14242 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !14240, file: !11520, line: 2621, baseType: !18, size: 5568)
!14243 = !DIDerivedType(tag: DW_TAG_member, name: "rdma_net", scope: !14240, file: !11520, line: 2622, baseType: !2428, size: 64, offset: 5568)
!14244 = !DIDerivedType(tag: DW_TAG_member, name: "ports_kobj", scope: !14240, file: !11520, line: 2623, baseType: !37, size: 64, offset: 5632)
!14245 = !DIDerivedType(tag: DW_TAG_member, name: "port_list", scope: !14240, file: !11520, line: 2624, baseType: !30, size: 128, offset: 5696)
!14246 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !14240, file: !11520, line: 2625, baseType: !12737, size: 64, offset: 5824)
!14247 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !12738, file: !11520, line: 2665, baseType: !14248, size: 192, offset: 15616)
!14248 = !DICompositeType(tag: DW_TAG_array_type, baseType: !140, size: 192, elements: !86)
!14249 = !DIDerivedType(tag: DW_TAG_member, name: "uverbs_cmd_mask", scope: !12738, file: !11520, line: 2667, baseType: !235, size: 64, offset: 15808)
!14250 = !DIDerivedType(tag: DW_TAG_member, name: "uverbs_ex_cmd_mask", scope: !12738, file: !11520, line: 2668, baseType: !235, size: 64, offset: 15872)
!14251 = !DIDerivedType(tag: DW_TAG_member, name: "node_desc", scope: !12738, file: !11520, line: 2670, baseType: !7622, size: 512, offset: 15936)
!14252 = !DIDerivedType(tag: DW_TAG_member, name: "node_guid", scope: !12738, file: !11520, line: 2671, baseType: !10476, size: 64, offset: 16448)
!14253 = !DIDerivedType(tag: DW_TAG_member, name: "local_dma_lkey", scope: !12738, file: !11520, line: 2672, baseType: !229, size: 32, offset: 16512)
!14254 = !DIDerivedType(tag: DW_TAG_member, name: "is_switch", scope: !12738, file: !11520, line: 2673, baseType: !744, size: 1, offset: 16544, flags: DIFlagBitField, extraData: i64 16544)
!14255 = !DIDerivedType(tag: DW_TAG_member, name: "kverbs_provider", scope: !12738, file: !11520, line: 2675, baseType: !744, size: 1, offset: 16545, flags: DIFlagBitField, extraData: i64 16544)
!14256 = !DIDerivedType(tag: DW_TAG_member, name: "use_cq_dim", scope: !12738, file: !11520, line: 2677, baseType: !744, size: 1, offset: 16546, flags: DIFlagBitField, extraData: i64 16544)
!14257 = !DIDerivedType(tag: DW_TAG_member, name: "node_type", scope: !12738, file: !11520, line: 2678, baseType: !1403, size: 8, offset: 16552)
!14258 = !DIDerivedType(tag: DW_TAG_member, name: "phys_port_cnt", scope: !12738, file: !11520, line: 2679, baseType: !1403, size: 8, offset: 16560)
!14259 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !12738, file: !11520, line: 2680, baseType: !13238, size: 2368, offset: 16576)
!14260 = !DIDerivedType(tag: DW_TAG_member, name: "hw_stats_ag", scope: !12738, file: !11520, line: 2681, baseType: !14261, size: 64, offset: 18944)
!14261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !142, size: 64)
!14262 = !DIDerivedType(tag: DW_TAG_member, name: "hw_stats", scope: !12738, file: !11520, line: 2682, baseType: !13134, size: 64, offset: 19008)
!14263 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !12738, file: !11520, line: 2688, baseType: !229, size: 32, offset: 19072)
!14264 = !DIDerivedType(tag: DW_TAG_member, name: "cq_pools_lock", scope: !12738, file: !11520, line: 2690, baseType: !44, offset: 19104)
!14265 = !DIDerivedType(tag: DW_TAG_member, name: "cq_pools", scope: !12738, file: !11520, line: 2691, baseType: !14266, size: 384, offset: 19136)
!14266 = !DICompositeType(tag: DW_TAG_array_type, baseType: !30, size: 384, elements: !86)
!14267 = !DIDerivedType(tag: DW_TAG_member, name: "res", scope: !12738, file: !11520, line: 2693, baseType: !14268, size: 64, offset: 19520)
!14268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14269, size: 64)
!14269 = !DICompositeType(tag: DW_TAG_structure_type, name: "rdma_restrack_root", file: !11520, line: 2628, flags: DIFlagFwdDecl)
!14270 = !DIDerivedType(tag: DW_TAG_member, name: "driver_def", scope: !12738, file: !11520, line: 2695, baseType: !14271, size: 64, offset: 19584)
!14271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14272, size: 64)
!14272 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !14273)
!14273 = !DICompositeType(tag: DW_TAG_structure_type, name: "uapi_definition", file: !11520, line: 2695, flags: DIFlagFwdDecl)
!14274 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !12738, file: !11520, line: 2701, baseType: !880, size: 32, offset: 19648)
!14275 = !DIDerivedType(tag: DW_TAG_member, name: "unreg_completion", scope: !12738, file: !11520, line: 2702, baseType: !1789, size: 192, offset: 19712)
!14276 = !DIDerivedType(tag: DW_TAG_member, name: "unregistration_work", scope: !12738, file: !11520, line: 2703, baseType: !1728, size: 256, offset: 19904)
!14277 = !DIDerivedType(tag: DW_TAG_member, name: "link_ops", scope: !12738, file: !11520, line: 2705, baseType: !14278, size: 64, offset: 20160)
!14278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14279, size: 64)
!14279 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !14280)
!14280 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rdma_link_ops", file: !14281, line: 113, size: 256, elements: !14282)
!14281 = !DIFile(filename: "./include/rdma/rdma_netlink.h", directory: "/home/lizy2001/genbc/linux")
!14282 = !{!14283, !14284, !14285}
!14283 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !14280, file: !14281, line: 114, baseType: !30, size: 128)
!14284 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !14280, file: !14281, line: 115, baseType: !26, size: 64, offset: 128)
!14285 = !DIDerivedType(tag: DW_TAG_member, name: "newlink", scope: !14280, file: !14281, line: 116, baseType: !14286, size: 64, offset: 192)
!14286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14287, size: 64)
!14287 = !DISubroutineType(types: !14288)
!14288 = !{!6, !26, !2169}
!14289 = !DIDerivedType(tag: DW_TAG_member, name: "compat_devs_mutex", scope: !12738, file: !11520, line: 2708, baseType: !558, size: 192, offset: 20224)
!14290 = !DIDerivedType(tag: DW_TAG_member, name: "compat_devs", scope: !12738, file: !11520, line: 2710, baseType: !623, size: 128, offset: 20416)
!14291 = !DIDerivedType(tag: DW_TAG_member, name: "iw_ifname", scope: !12738, file: !11520, line: 2713, baseType: !1943, size: 128, offset: 20544)
!14292 = !DIDerivedType(tag: DW_TAG_member, name: "iw_driver_flags", scope: !12738, file: !11520, line: 2714, baseType: !229, size: 32, offset: 20672)
!14293 = !DIDerivedType(tag: DW_TAG_member, name: "lag_flags", scope: !12738, file: !11520, line: 2715, baseType: !229, size: 32, offset: 20704)
!14294 = !DIDerivedType(tag: DW_TAG_member, name: "uobject", scope: !12734, file: !11520, line: 2235, baseType: !12764, size: 64, offset: 64)
!14295 = !DIDerivedType(tag: DW_TAG_member, name: "usecnt", scope: !12734, file: !11520, line: 2237, baseType: !632, size: 32, offset: 128)
!14296 = !DILocation(line: 304, column: 23, scope: !12592)
!14297 = !DILocalVariable(name: "esw_attr", scope: !12592, file: !3, line: 305, type: !14298)
!14298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12644, size: 64)
!14299 = !DILocation(line: 305, column: 29, scope: !12592)
!14300 = !DILocation(line: 305, column: 40, scope: !12592)
!14301 = !DILocation(line: 305, column: 46, scope: !12592)
!14302 = !DILocalVariable(name: "chains", scope: !12592, file: !3, line: 306, type: !11279)
!14303 = !DILocation(line: 306, column: 25, scope: !12592)
!14304 = !DILocation(line: 306, column: 34, scope: !12592)
!14305 = !DILocalVariable(name: "split", scope: !12592, file: !3, line: 307, type: !304)
!14306 = !DILocation(line: 307, column: 7, scope: !12592)
!14307 = !DILocation(line: 307, column: 18, scope: !12592)
!14308 = !DILocation(line: 307, column: 28, scope: !12592)
!14309 = !DILocation(line: 307, column: 16, scope: !12592)
!14310 = !DILocation(line: 307, column: 15, scope: !12592)
!14311 = !DILocalVariable(name: "fwd_attr", scope: !12592, file: !3, line: 308, type: !12341)
!14312 = !DILocation(line: 308, column: 29, scope: !12592)
!14313 = !DILocalVariable(name: "rule", scope: !12592, file: !3, line: 309, type: !10864)
!14314 = !DILocation(line: 309, column: 27, scope: !12592)
!14315 = !DILocalVariable(name: "fdb", scope: !12592, file: !3, line: 310, type: !10734)
!14316 = !DILocation(line: 310, column: 26, scope: !12592)
!14317 = !DILocalVariable(name: "j", scope: !12592, file: !3, line: 311, type: !6)
!14318 = !DILocation(line: 311, column: 6, scope: !12592)
!14319 = !DILocalVariable(name: "i", scope: !12592, file: !3, line: 311, type: !6)
!14320 = !DILocation(line: 311, column: 9, scope: !12592)
!14321 = !DILocation(line: 313, column: 6, scope: !14322)
!14322 = distinct !DILexicalBlock(scope: !12592, file: !3, line: 313, column: 6)
!14323 = !DILocation(line: 313, column: 11, scope: !14322)
!14324 = !DILocation(line: 313, column: 16, scope: !14322)
!14325 = !DILocation(line: 313, column: 6, scope: !12592)
!14326 = !DILocation(line: 314, column: 10, scope: !14322)
!14327 = !DILocation(line: 314, column: 3, scope: !14322)
!14328 = !DILocation(line: 316, column: 20, scope: !12592)
!14329 = !DILocation(line: 316, column: 26, scope: !12592)
!14330 = !DILocation(line: 316, column: 11, scope: !12592)
!14331 = !DILocation(line: 316, column: 18, scope: !12592)
!14332 = !DILocation(line: 318, column: 43, scope: !14333)
!14333 = distinct !DILexicalBlock(scope: !12592, file: !3, line: 318, column: 6)
!14334 = !DILocation(line: 318, column: 48, scope: !14333)
!14335 = !DILocation(line: 318, column: 7, scope: !14333)
!14336 = !DILocation(line: 318, column: 6, scope: !12592)
!14337 = !DILocation(line: 319, column: 12, scope: !14333)
!14338 = !DILocation(line: 319, column: 19, scope: !14333)
!14339 = !DILocation(line: 319, column: 3, scope: !14333)
!14340 = !DILocation(line: 321, column: 20, scope: !14341)
!14341 = distinct !DILexicalBlock(scope: !14333, file: !3, line: 321, column: 11)
!14342 = !DILocation(line: 321, column: 27, scope: !14341)
!14343 = !DILocation(line: 321, column: 11, scope: !14333)
!14344 = !DILocation(line: 322, column: 30, scope: !14345)
!14345 = distinct !DILexicalBlock(scope: !14341, file: !3, line: 321, column: 65)
!14346 = !DILocation(line: 322, column: 12, scope: !14345)
!14347 = !DILocation(line: 322, column: 3, scope: !14345)
!14348 = !DILocation(line: 322, column: 20, scope: !14345)
!14349 = !DILocation(line: 322, column: 28, scope: !14345)
!14350 = !DILocation(line: 323, column: 26, scope: !14345)
!14351 = !DILocation(line: 323, column: 36, scope: !14345)
!14352 = !DILocation(line: 323, column: 12, scope: !14345)
!14353 = !DILocation(line: 323, column: 3, scope: !14345)
!14354 = !DILocation(line: 323, column: 20, scope: !14345)
!14355 = !DILocation(line: 323, column: 24, scope: !14345)
!14356 = !DILocation(line: 324, column: 27, scope: !14345)
!14357 = !DILocation(line: 324, column: 37, scope: !14345)
!14358 = !DILocation(line: 324, column: 12, scope: !14345)
!14359 = !DILocation(line: 324, column: 3, scope: !14345)
!14360 = !DILocation(line: 324, column: 20, scope: !14345)
!14361 = !DILocation(line: 324, column: 25, scope: !14345)
!14362 = !DILocation(line: 325, column: 16, scope: !14363)
!14363 = distinct !DILexicalBlock(scope: !14345, file: !3, line: 325, column: 7)
!14364 = !DILocation(line: 325, column: 23, scope: !14363)
!14365 = !DILocation(line: 325, column: 7, scope: !14345)
!14366 = !DILocation(line: 326, column: 31, scope: !14367)
!14367 = distinct !DILexicalBlock(scope: !14363, file: !3, line: 325, column: 63)
!14368 = !DILocation(line: 326, column: 13, scope: !14367)
!14369 = !DILocation(line: 326, column: 4, scope: !14367)
!14370 = !DILocation(line: 326, column: 21, scope: !14367)
!14371 = !DILocation(line: 326, column: 29, scope: !14367)
!14372 = !DILocation(line: 327, column: 27, scope: !14367)
!14373 = !DILocation(line: 327, column: 37, scope: !14367)
!14374 = !DILocation(line: 327, column: 13, scope: !14367)
!14375 = !DILocation(line: 327, column: 4, scope: !14367)
!14376 = !DILocation(line: 327, column: 21, scope: !14367)
!14377 = !DILocation(line: 327, column: 25, scope: !14367)
!14378 = !DILocation(line: 328, column: 28, scope: !14367)
!14379 = !DILocation(line: 328, column: 38, scope: !14367)
!14380 = !DILocation(line: 328, column: 13, scope: !14367)
!14381 = !DILocation(line: 328, column: 4, scope: !14367)
!14382 = !DILocation(line: 328, column: 21, scope: !14367)
!14383 = !DILocation(line: 328, column: 26, scope: !14367)
!14384 = !DILocation(line: 329, column: 3, scope: !14367)
!14385 = !DILocation(line: 330, column: 2, scope: !14345)
!14386 = !DILocation(line: 332, column: 15, scope: !14387)
!14387 = distinct !DILexicalBlock(scope: !12592, file: !3, line: 332, column: 6)
!14388 = !DILocation(line: 332, column: 22, scope: !14387)
!14389 = !DILocation(line: 332, column: 6, scope: !12592)
!14390 = !DILocalVariable(name: "ft", scope: !14391, file: !3, line: 333, type: !10734)
!14391 = distinct !DILexicalBlock(scope: !14387, file: !3, line: 332, column: 59)
!14392 = !DILocation(line: 333, column: 27, scope: !14391)
!14393 = !DILocation(line: 335, column: 7, scope: !14394)
!14394 = distinct !DILexicalBlock(scope: !14391, file: !3, line: 335, column: 7)
!14395 = !DILocation(line: 335, column: 13, scope: !14394)
!14396 = !DILocation(line: 335, column: 7, scope: !14391)
!14397 = !DILocation(line: 336, column: 13, scope: !14398)
!14398 = distinct !DILexicalBlock(scope: !14394, file: !3, line: 335, column: 22)
!14399 = !DILocation(line: 336, column: 19, scope: !14398)
!14400 = !DILocation(line: 337, column: 9, scope: !14398)
!14401 = !DILocation(line: 337, column: 4, scope: !14398)
!14402 = !DILocation(line: 337, column: 12, scope: !14398)
!14403 = !DILocation(line: 337, column: 17, scope: !14398)
!14404 = !DILocation(line: 338, column: 17, scope: !14398)
!14405 = !DILocation(line: 338, column: 23, scope: !14398)
!14406 = !DILocation(line: 338, column: 9, scope: !14398)
!14407 = !DILocation(line: 338, column: 4, scope: !14398)
!14408 = !DILocation(line: 338, column: 12, scope: !14398)
!14409 = !DILocation(line: 338, column: 15, scope: !14398)
!14410 = !DILocation(line: 339, column: 5, scope: !14398)
!14411 = !DILocation(line: 340, column: 3, scope: !14398)
!14412 = !DILocation(line: 340, column: 14, scope: !14413)
!14413 = distinct !DILexicalBlock(scope: !14394, file: !3, line: 340, column: 14)
!14414 = !DILocation(line: 340, column: 20, scope: !14413)
!14415 = !DILocation(line: 340, column: 26, scope: !14413)
!14416 = !DILocation(line: 340, column: 14, scope: !14394)
!14417 = !DILocation(line: 341, column: 13, scope: !14418)
!14418 = distinct !DILexicalBlock(scope: !14413, file: !3, line: 340, column: 58)
!14419 = !DILocation(line: 341, column: 19, scope: !14418)
!14420 = !DILocation(line: 342, column: 9, scope: !14418)
!14421 = !DILocation(line: 342, column: 4, scope: !14418)
!14422 = !DILocation(line: 342, column: 12, scope: !14418)
!14423 = !DILocation(line: 342, column: 17, scope: !14418)
!14424 = !DILocation(line: 343, column: 43, scope: !14418)
!14425 = !DILocation(line: 343, column: 17, scope: !14418)
!14426 = !DILocation(line: 343, column: 9, scope: !14418)
!14427 = !DILocation(line: 343, column: 4, scope: !14418)
!14428 = !DILocation(line: 343, column: 12, scope: !14418)
!14429 = !DILocation(line: 343, column: 15, scope: !14418)
!14430 = !DILocation(line: 344, column: 5, scope: !14418)
!14431 = !DILocation(line: 345, column: 3, scope: !14418)
!14432 = !DILocation(line: 345, column: 14, scope: !14433)
!14433 = distinct !DILexicalBlock(scope: !14413, file: !3, line: 345, column: 14)
!14434 = !DILocation(line: 345, column: 20, scope: !14433)
!14435 = !DILocation(line: 345, column: 14, scope: !14413)
!14436 = !DILocation(line: 346, column: 13, scope: !14437)
!14437 = distinct !DILexicalBlock(scope: !14433, file: !3, line: 345, column: 32)
!14438 = !DILocation(line: 346, column: 19, scope: !14437)
!14439 = !DILocation(line: 347, column: 31, scope: !14437)
!14440 = !DILocation(line: 347, column: 39, scope: !14437)
!14441 = !DILocation(line: 347, column: 45, scope: !14437)
!14442 = !DILocation(line: 347, column: 9, scope: !14437)
!14443 = !DILocation(line: 347, column: 7, scope: !14437)
!14444 = !DILocation(line: 349, column: 15, scope: !14445)
!14445 = distinct !DILexicalBlock(scope: !14437, file: !3, line: 349, column: 8)
!14446 = !DILocation(line: 349, column: 8, scope: !14445)
!14447 = !DILocation(line: 349, column: 8, scope: !14437)
!14448 = !DILocation(line: 350, column: 21, scope: !14449)
!14449 = distinct !DILexicalBlock(scope: !14445, file: !3, line: 349, column: 20)
!14450 = !DILocation(line: 350, column: 12, scope: !14449)
!14451 = !DILocation(line: 350, column: 10, scope: !14449)
!14452 = !DILocation(line: 351, column: 5, scope: !14449)
!14453 = !DILocation(line: 354, column: 9, scope: !14437)
!14454 = !DILocation(line: 354, column: 4, scope: !14437)
!14455 = !DILocation(line: 354, column: 12, scope: !14437)
!14456 = !DILocation(line: 354, column: 17, scope: !14437)
!14457 = !DILocation(line: 355, column: 17, scope: !14437)
!14458 = !DILocation(line: 355, column: 9, scope: !14437)
!14459 = !DILocation(line: 355, column: 4, scope: !14437)
!14460 = !DILocation(line: 355, column: 12, scope: !14437)
!14461 = !DILocation(line: 355, column: 15, scope: !14437)
!14462 = !DILocation(line: 356, column: 5, scope: !14437)
!14463 = !DILocation(line: 357, column: 3, scope: !14437)
!14464 = !DILocation(line: 358, column: 13, scope: !14465)
!14465 = distinct !DILexicalBlock(scope: !14466, file: !3, line: 358, column: 4)
!14466 = distinct !DILexicalBlock(scope: !14433, file: !3, line: 357, column: 10)
!14467 = !DILocation(line: 358, column: 23, scope: !14465)
!14468 = !DILocation(line: 358, column: 11, scope: !14465)
!14469 = !DILocation(line: 358, column: 9, scope: !14465)
!14470 = !DILocation(line: 358, column: 36, scope: !14471)
!14471 = distinct !DILexicalBlock(scope: !14465, file: !3, line: 358, column: 4)
!14472 = !DILocation(line: 358, column: 40, scope: !14471)
!14473 = !DILocation(line: 358, column: 50, scope: !14471)
!14474 = !DILocation(line: 358, column: 38, scope: !14471)
!14475 = !DILocation(line: 358, column: 4, scope: !14465)
!14476 = !DILocation(line: 359, column: 10, scope: !14477)
!14477 = distinct !DILexicalBlock(scope: !14471, file: !3, line: 358, column: 66)
!14478 = !DILocation(line: 359, column: 5, scope: !14477)
!14479 = !DILocation(line: 359, column: 13, scope: !14477)
!14480 = !DILocation(line: 359, column: 18, scope: !14477)
!14481 = !DILocation(line: 360, column: 25, scope: !14477)
!14482 = !DILocation(line: 360, column: 35, scope: !14477)
!14483 = !DILocation(line: 360, column: 41, scope: !14477)
!14484 = !DILocation(line: 360, column: 44, scope: !14477)
!14485 = !DILocation(line: 360, column: 49, scope: !14477)
!14486 = !DILocation(line: 360, column: 10, scope: !14477)
!14487 = !DILocation(line: 360, column: 5, scope: !14477)
!14488 = !DILocation(line: 360, column: 13, scope: !14477)
!14489 = !DILocation(line: 360, column: 19, scope: !14477)
!14490 = !DILocation(line: 360, column: 23, scope: !14477)
!14491 = !DILocation(line: 362, column: 6, scope: !14477)
!14492 = !DILocation(line: 361, column: 10, scope: !14477)
!14493 = !DILocation(line: 361, column: 5, scope: !14477)
!14494 = !DILocation(line: 361, column: 13, scope: !14477)
!14495 = !DILocation(line: 361, column: 19, scope: !14477)
!14496 = !DILocation(line: 361, column: 27, scope: !14477)
!14497 = !DILocation(line: 363, column: 9, scope: !14498)
!14498 = distinct !DILexicalBlock(scope: !14477, file: !3, line: 363, column: 9)
!14499 = !DILocation(line: 363, column: 9, scope: !14477)
!14500 = !DILocation(line: 364, column: 11, scope: !14498)
!14501 = !DILocation(line: 364, column: 6, scope: !14498)
!14502 = !DILocation(line: 364, column: 14, scope: !14498)
!14503 = !DILocation(line: 364, column: 20, scope: !14498)
!14504 = !DILocation(line: 364, column: 26, scope: !14498)
!14505 = !DILocation(line: 366, column: 9, scope: !14506)
!14506 = distinct !DILexicalBlock(scope: !14477, file: !3, line: 366, column: 9)
!14507 = !DILocation(line: 366, column: 19, scope: !14506)
!14508 = !DILocation(line: 366, column: 25, scope: !14506)
!14509 = !DILocation(line: 366, column: 28, scope: !14506)
!14510 = !DILocation(line: 366, column: 34, scope: !14506)
!14511 = !DILocation(line: 366, column: 9, scope: !14477)
!14512 = !DILocation(line: 367, column: 15, scope: !14513)
!14513 = distinct !DILexicalBlock(scope: !14506, file: !3, line: 366, column: 57)
!14514 = !DILocation(line: 367, column: 22, scope: !14513)
!14515 = !DILocation(line: 369, column: 8, scope: !14513)
!14516 = !DILocation(line: 369, column: 18, scope: !14513)
!14517 = !DILocation(line: 369, column: 24, scope: !14513)
!14518 = !DILocation(line: 369, column: 27, scope: !14513)
!14519 = !DILocation(line: 368, column: 15, scope: !14513)
!14520 = !DILocation(line: 368, column: 28, scope: !14513)
!14521 = !DILocation(line: 370, column: 11, scope: !14513)
!14522 = !DILocation(line: 370, column: 6, scope: !14513)
!14523 = !DILocation(line: 370, column: 14, scope: !14513)
!14524 = !DILocation(line: 370, column: 20, scope: !14513)
!14525 = !DILocation(line: 370, column: 26, scope: !14513)
!14526 = !DILocation(line: 372, column: 7, scope: !14513)
!14527 = !DILocation(line: 372, column: 17, scope: !14513)
!14528 = !DILocation(line: 372, column: 23, scope: !14513)
!14529 = !DILocation(line: 372, column: 26, scope: !14513)
!14530 = !DILocation(line: 371, column: 11, scope: !14513)
!14531 = !DILocation(line: 371, column: 6, scope: !14513)
!14532 = !DILocation(line: 371, column: 14, scope: !14513)
!14533 = !DILocation(line: 371, column: 20, scope: !14513)
!14534 = !DILocation(line: 371, column: 33, scope: !14513)
!14535 = !DILocation(line: 373, column: 5, scope: !14513)
!14536 = !DILocation(line: 374, column: 6, scope: !14477)
!14537 = !DILocation(line: 375, column: 4, scope: !14477)
!14538 = !DILocation(line: 358, column: 62, scope: !14471)
!14539 = !DILocation(line: 358, column: 4, scope: !14471)
!14540 = distinct !{!14540, !14475, !14541}
!14541 = !DILocation(line: 375, column: 4, scope: !14465)
!14542 = !DILocation(line: 377, column: 2, scope: !14391)
!14543 = !DILocation(line: 379, column: 6, scope: !14544)
!14544 = distinct !DILexicalBlock(scope: !12592, file: !3, line: 379, column: 6)
!14545 = !DILocation(line: 379, column: 16, scope: !14544)
!14546 = !DILocation(line: 379, column: 6, scope: !12592)
!14547 = !DILocation(line: 380, column: 27, scope: !14544)
!14548 = !DILocation(line: 380, column: 37, scope: !14544)
!14549 = !DILocation(line: 380, column: 12, scope: !14544)
!14550 = !DILocation(line: 380, column: 25, scope: !14544)
!14551 = !DILocation(line: 380, column: 3, scope: !14544)
!14552 = !DILocation(line: 382, column: 15, scope: !14553)
!14553 = distinct !DILexicalBlock(scope: !12592, file: !3, line: 382, column: 6)
!14554 = !DILocation(line: 382, column: 22, scope: !14553)
!14555 = !DILocation(line: 382, column: 6, scope: !12592)
!14556 = !DILocation(line: 383, column: 8, scope: !14557)
!14557 = distinct !DILexicalBlock(scope: !14553, file: !3, line: 382, column: 56)
!14558 = !DILocation(line: 383, column: 3, scope: !14557)
!14559 = !DILocation(line: 383, column: 11, scope: !14557)
!14560 = !DILocation(line: 383, column: 16, scope: !14557)
!14561 = !DILocation(line: 384, column: 35, scope: !14557)
!14562 = !DILocation(line: 384, column: 41, scope: !14557)
!14563 = !DILocation(line: 384, column: 24, scope: !14557)
!14564 = !DILocation(line: 384, column: 8, scope: !14557)
!14565 = !DILocation(line: 384, column: 3, scope: !14557)
!14566 = !DILocation(line: 384, column: 11, scope: !14557)
!14567 = !DILocation(line: 384, column: 22, scope: !14557)
!14568 = !DILocation(line: 385, column: 4, scope: !14557)
!14569 = !DILocation(line: 386, column: 2, scope: !14557)
!14570 = !DILocation(line: 388, column: 6, scope: !14571)
!14571 = distinct !DILexicalBlock(scope: !12592, file: !3, line: 388, column: 6)
!14572 = !DILocation(line: 388, column: 12, scope: !14571)
!14573 = !DILocation(line: 388, column: 30, scope: !14571)
!14574 = !DILocation(line: 388, column: 6, scope: !12592)
!14575 = !DILocation(line: 389, column: 3, scope: !14571)
!14576 = !DILocation(line: 389, column: 9, scope: !14571)
!14577 = !DILocation(line: 389, column: 31, scope: !14571)
!14578 = !DILocation(line: 390, column: 6, scope: !14579)
!14579 = distinct !DILexicalBlock(scope: !12592, file: !3, line: 390, column: 6)
!14580 = !DILocation(line: 390, column: 12, scope: !14579)
!14581 = !DILocation(line: 390, column: 30, scope: !14579)
!14582 = !DILocation(line: 390, column: 6, scope: !12592)
!14583 = !DILocation(line: 391, column: 3, scope: !14579)
!14584 = !DILocation(line: 391, column: 9, scope: !14579)
!14585 = !DILocation(line: 391, column: 31, scope: !14579)
!14586 = !DILocation(line: 393, column: 15, scope: !14587)
!14587 = distinct !DILexicalBlock(scope: !12592, file: !3, line: 393, column: 6)
!14588 = !DILocation(line: 393, column: 22, scope: !14587)
!14589 = !DILocation(line: 393, column: 6, scope: !12592)
!14590 = !DILocation(line: 394, column: 25, scope: !14587)
!14591 = !DILocation(line: 394, column: 31, scope: !14587)
!14592 = !DILocation(line: 394, column: 12, scope: !14587)
!14593 = !DILocation(line: 394, column: 23, scope: !14587)
!14594 = !DILocation(line: 394, column: 3, scope: !14587)
!14595 = !DILocation(line: 396, column: 6, scope: !14596)
!14596 = distinct !DILexicalBlock(scope: !12592, file: !3, line: 396, column: 6)
!14597 = !DILocation(line: 396, column: 6, scope: !12592)
!14598 = !DILocation(line: 397, column: 20, scope: !14599)
!14599 = distinct !DILexicalBlock(scope: !14596, file: !3, line: 396, column: 13)
!14600 = !DILocation(line: 397, column: 26, scope: !14599)
!14601 = !DILocation(line: 397, column: 12, scope: !14599)
!14602 = !DILocation(line: 397, column: 18, scope: !14599)
!14603 = !DILocation(line: 398, column: 19, scope: !14599)
!14604 = !DILocation(line: 398, column: 25, scope: !14599)
!14605 = !DILocation(line: 398, column: 12, scope: !14599)
!14606 = !DILocation(line: 398, column: 17, scope: !14599)
!14607 = !DILocation(line: 399, column: 20, scope: !14599)
!14608 = !DILocation(line: 399, column: 30, scope: !14599)
!14609 = !DILocation(line: 399, column: 38, scope: !14599)
!14610 = !DILocation(line: 399, column: 12, scope: !14599)
!14611 = !DILocation(line: 399, column: 18, scope: !14599)
!14612 = !DILocation(line: 401, column: 27, scope: !14599)
!14613 = !DILocation(line: 401, column: 9, scope: !14599)
!14614 = !DILocation(line: 401, column: 7, scope: !14599)
!14615 = !DILocation(line: 402, column: 2, scope: !14599)
!14616 = !DILocation(line: 403, column: 7, scope: !14617)
!14617 = distinct !DILexicalBlock(scope: !14618, file: !3, line: 403, column: 7)
!14618 = distinct !DILexicalBlock(scope: !14596, file: !3, line: 402, column: 9)
!14619 = !DILocation(line: 403, column: 13, scope: !14617)
!14620 = !DILocation(line: 403, column: 19, scope: !14617)
!14621 = !DILocation(line: 403, column: 22, scope: !14617)
!14622 = !DILocation(line: 403, column: 28, scope: !14617)
!14623 = !DILocation(line: 403, column: 7, scope: !14618)
!14624 = !DILocation(line: 404, column: 32, scope: !14617)
!14625 = !DILocation(line: 404, column: 40, scope: !14617)
!14626 = !DILocation(line: 404, column: 46, scope: !14617)
!14627 = !DILocation(line: 405, column: 11, scope: !14617)
!14628 = !DILocation(line: 405, column: 17, scope: !14617)
!14629 = !DILocation(line: 404, column: 10, scope: !14617)
!14630 = !DILocation(line: 404, column: 8, scope: !14617)
!14631 = !DILocation(line: 404, column: 4, scope: !14617)
!14632 = !DILocation(line: 407, column: 10, scope: !14617)
!14633 = !DILocation(line: 407, column: 16, scope: !14617)
!14634 = !DILocation(line: 407, column: 8, scope: !14617)
!14635 = !DILocation(line: 409, column: 9, scope: !14636)
!14636 = distinct !DILexicalBlock(scope: !14618, file: !3, line: 409, column: 7)
!14637 = !DILocation(line: 409, column: 15, scope: !14636)
!14638 = !DILocation(line: 409, column: 21, scope: !14636)
!14639 = !DILocation(line: 409, column: 7, scope: !14618)
!14640 = !DILocation(line: 410, column: 38, scope: !14636)
!14641 = !DILocation(line: 410, column: 43, scope: !14636)
!14642 = !DILocation(line: 410, column: 49, scope: !14636)
!14643 = !DILocation(line: 410, column: 4, scope: !14636)
!14644 = !DILocation(line: 412, column: 13, scope: !14645)
!14645 = distinct !DILexicalBlock(scope: !12592, file: !3, line: 412, column: 6)
!14646 = !DILocation(line: 412, column: 6, scope: !14645)
!14647 = !DILocation(line: 412, column: 6, scope: !12592)
!14648 = !DILocation(line: 413, column: 19, scope: !14649)
!14649 = distinct !DILexicalBlock(scope: !14645, file: !3, line: 412, column: 19)
!14650 = !DILocation(line: 413, column: 10, scope: !14649)
!14651 = !DILocation(line: 413, column: 8, scope: !14649)
!14652 = !DILocation(line: 414, column: 3, scope: !14649)
!14653 = !DILocation(line: 417, column: 36, scope: !12592)
!14654 = !DILocation(line: 417, column: 41, scope: !12592)
!14655 = !DILocation(line: 417, column: 47, scope: !12592)
!14656 = !DILocation(line: 417, column: 2, scope: !12592)
!14657 = !DILocation(line: 419, column: 36, scope: !14658)
!14658 = distinct !DILexicalBlock(scope: !12592, file: !3, line: 419, column: 6)
!14659 = !DILocation(line: 419, column: 41, scope: !14658)
!14660 = !DILocation(line: 419, column: 58, scope: !14658)
!14661 = !DILocation(line: 419, column: 6, scope: !14658)
!14662 = !DILocation(line: 419, column: 6, scope: !12592)
!14663 = !DILocation(line: 420, column: 40, scope: !14658)
!14664 = !DILocation(line: 420, column: 45, scope: !14658)
!14665 = !DILocation(line: 420, column: 50, scope: !14658)
!14666 = !DILocation(line: 420, column: 56, scope: !14658)
!14667 = !DILocation(line: 421, column: 23, scope: !14658)
!14668 = !DILocation(line: 421, column: 29, scope: !14658)
!14669 = !DILocation(line: 420, column: 10, scope: !14658)
!14670 = !DILocation(line: 420, column: 8, scope: !14658)
!14671 = !DILocation(line: 420, column: 3, scope: !14658)
!14672 = !DILocation(line: 423, column: 30, scope: !14658)
!14673 = !DILocation(line: 423, column: 35, scope: !14658)
!14674 = !DILocation(line: 423, column: 52, scope: !14658)
!14675 = !DILocation(line: 423, column: 58, scope: !14658)
!14676 = !DILocation(line: 423, column: 10, scope: !14658)
!14677 = !DILocation(line: 423, column: 8, scope: !14658)
!14678 = !DILocation(line: 424, column: 13, scope: !12688)
!14679 = !DILocation(line: 424, column: 6, scope: !12688)
!14680 = !DILocation(line: 424, column: 6, scope: !12592)
!14681 = !DILocation(line: 425, column: 3, scope: !12688)
!14682 = !DILocation(line: 427, column: 17, scope: !12688)
!14683 = !DILocation(line: 427, column: 22, scope: !12688)
!14684 = !DILocation(line: 427, column: 31, scope: !12688)
!14685 = !DILocation(line: 1050, column: 31, scope: !12685, inlinedAt: !12687)
!14686 = !DILocation(line: 101, column: 20, scope: !12690, inlinedAt: !12698)
!14687 = !DILocation(line: 101, column: 23, scope: !12690, inlinedAt: !12698)
!14688 = !DILocation(line: 101, column: 2, scope: !12690, inlinedAt: !12698)
!14689 = !DILocation(line: 102, column: 2, scope: !12690, inlinedAt: !12698)
!14690 = !DILocation(line: 1051, column: 20, scope: !12685, inlinedAt: !12687)
!14691 = !DILocation(line: 89, column: 16, scope: !12678, inlinedAt: !12684)
!14692 = !DILocation(line: 89, column: 19, scope: !12678, inlinedAt: !12684)
!14693 = !DILocation(line: 90, column: 15, scope: !12678, inlinedAt: !12684)
!14694 = !DILocation(line: 90, column: 18, scope: !12678, inlinedAt: !12684)
!14695 = !DILocation(line: 88, column: 2, scope: !12678, inlinedAt: !12684)
!14696 = !{i32 -2146490132}
!14697 = !DILocation(line: 429, column: 9, scope: !12592)
!14698 = !DILocation(line: 429, column: 2, scope: !12592)
!14699 = !DILabel(scope: !12592, name: "err_add_rule", file: !3, line: 431)
!14700 = !DILocation(line: 431, column: 1, scope: !12592)
!14701 = !DILocation(line: 432, column: 6, scope: !14702)
!14702 = distinct !DILexicalBlock(scope: !12592, file: !3, line: 432, column: 6)
!14703 = !DILocation(line: 432, column: 6, scope: !12592)
!14704 = !DILocation(line: 433, column: 21, scope: !14702)
!14705 = !DILocation(line: 433, column: 3, scope: !14702)
!14706 = !DILocation(line: 434, column: 11, scope: !14707)
!14707 = distinct !DILexicalBlock(scope: !14702, file: !3, line: 434, column: 11)
!14708 = !DILocation(line: 434, column: 17, scope: !14707)
!14709 = !DILocation(line: 434, column: 23, scope: !14707)
!14710 = !DILocation(line: 434, column: 26, scope: !14707)
!14711 = !DILocation(line: 434, column: 32, scope: !14707)
!14712 = !DILocation(line: 434, column: 11, scope: !14702)
!14713 = !DILocation(line: 435, column: 25, scope: !14707)
!14714 = !DILocation(line: 435, column: 33, scope: !14707)
!14715 = !DILocation(line: 435, column: 39, scope: !14707)
!14716 = !DILocation(line: 435, column: 46, scope: !14707)
!14717 = !DILocation(line: 435, column: 52, scope: !14707)
!14718 = !DILocation(line: 435, column: 3, scope: !14707)
!14719 = !DILabel(scope: !12592, name: "err_esw_get", file: !3, line: 436)
!14720 = !DILocation(line: 436, column: 1, scope: !12592)
!14721 = !DILocation(line: 437, column: 8, scope: !14722)
!14722 = distinct !DILexicalBlock(scope: !12592, file: !3, line: 437, column: 6)
!14723 = !DILocation(line: 437, column: 14, scope: !14722)
!14724 = !DILocation(line: 437, column: 20, scope: !14722)
!14725 = !DILocation(line: 437, column: 52, scope: !14722)
!14726 = !DILocation(line: 437, column: 55, scope: !14722)
!14727 = !DILocation(line: 437, column: 61, scope: !14722)
!14728 = !DILocation(line: 437, column: 6, scope: !12592)
!14729 = !DILocation(line: 438, column: 25, scope: !14722)
!14730 = !DILocation(line: 438, column: 33, scope: !14722)
!14731 = !DILocation(line: 438, column: 39, scope: !14722)
!14732 = !DILocation(line: 438, column: 3, scope: !14722)
!14733 = !DILabel(scope: !12592, name: "err_create_goto_table", file: !3, line: 439)
!14734 = !DILocation(line: 439, column: 1, scope: !12592)
!14735 = !DILocation(line: 440, column: 9, scope: !12592)
!14736 = !DILocation(line: 440, column: 2, scope: !12592)
!14737 = !DILocation(line: 441, column: 1, scope: !12592)
!14738 = distinct !DISubprogram(name: "ERR_PTR", scope: !12497, file: !12497, line: 24, type: !14739, scopeLine: 25, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!14739 = !DISubroutineType(types: !14740)
!14740 = !{!159, !120}
!14741 = !DILocalVariable(name: "error", arg: 1, scope: !14738, file: !12497, line: 24, type: !120)
!14742 = !DILocation(line: 24, column: 48, scope: !14738)
!14743 = !DILocation(line: 26, column: 18, scope: !14738)
!14744 = !DILocation(line: 26, column: 9, scope: !14738)
!14745 = !DILocation(line: 26, column: 2, scope: !14738)
!14746 = distinct !DISubprogram(name: "mlx5_eswitch_vlan_actions_supported", scope: !9, file: !9, line: 452, type: !14747, scopeLine: 454, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!14747 = !DISubroutineType(types: !14748)
!14748 = !{!304, !12, !1403}
!14749 = !DILocalVariable(name: "dev", arg: 1, scope: !14746, file: !9, line: 452, type: !12)
!14750 = !DILocation(line: 452, column: 78, scope: !14746)
!14751 = !DILocalVariable(name: "vlan_depth", arg: 2, scope: !14746, file: !9, line: 453, type: !1403)
!14752 = !DILocation(line: 453, column: 17, scope: !14746)
!14753 = !DILocalVariable(name: "ret", scope: !14746, file: !9, line: 455, type: !304)
!14754 = !DILocation(line: 455, column: 7, scope: !14746)
!14755 = !DILocation(line: 455, column: 13, scope: !14746)
!14756 = !DILocation(line: 455, column: 55, scope: !14746)
!14757 = !DILocation(line: 456, column: 6, scope: !14746)
!14758 = !DILocation(line: 0, scope: !14746)
!14759 = !DILocation(line: 458, column: 6, scope: !14760)
!14760 = distinct !DILexicalBlock(scope: !14746, file: !9, line: 458, column: 6)
!14761 = !DILocation(line: 458, column: 17, scope: !14760)
!14762 = !DILocation(line: 458, column: 6, scope: !14746)
!14763 = !DILocation(line: 459, column: 10, scope: !14760)
!14764 = !DILocation(line: 459, column: 3, scope: !14760)
!14765 = !DILocation(line: 461, column: 10, scope: !14746)
!14766 = !DILocation(line: 461, column: 14, scope: !14746)
!14767 = !DILocation(line: 461, column: 17, scope: !14746)
!14768 = !DILocation(line: 461, column: 61, scope: !14746)
!14769 = !DILocation(line: 462, column: 3, scope: !14746)
!14770 = !DILocation(line: 461, column: 2, scope: !14746)
!14771 = !DILocation(line: 463, column: 1, scope: !14746)
!14772 = distinct !DISubprogram(name: "__fswab16", scope: !14773, file: !14773, line: 48, type: !14774, scopeLine: 49, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!14773 = !DIFile(filename: "./include/uapi/linux/swab.h", directory: "/home/lizy2001/genbc/linux")
!14774 = !DISubroutineType(types: !14775)
!14775 = !{!745, !745}
!14776 = !DILocalVariable(name: "val", arg: 1, scope: !14772, file: !14773, line: 48, type: !745)
!14777 = !DILocation(line: 48, column: 57, scope: !14772)
!14778 = !DILocation(line: 53, column: 9, scope: !14772)
!14779 = !DILocation(line: 53, column: 2, scope: !14772)
!14780 = distinct !DISubprogram(name: "mlx5_chains_get_tc_end_ft", scope: !11281, file: !11281, line: 83, type: !14781, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!14781 = !DISubroutineType(types: !14782)
!14782 = !{!10734, !11279}
!14783 = !DILocalVariable(name: "chains", arg: 1, scope: !14780, file: !11281, line: 83, type: !11279)
!14784 = !DILocation(line: 83, column: 50, scope: !14780)
!14785 = !DILocation(line: 83, column: 67, scope: !14780)
!14786 = !DILocation(line: 83, column: 60, scope: !14780)
!14787 = distinct !DISubprogram(name: "mlx5_chains_get_table", scope: !11281, file: !11281, line: 76, type: !14788, scopeLine: 77, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!14788 = !DISubroutineType(types: !14789)
!14789 = !{!10734, !11279, !229, !229, !229}
!14790 = !DILocalVariable(name: "chains", arg: 1, scope: !14787, file: !11281, line: 76, type: !11279)
!14791 = !DILocation(line: 76, column: 46, scope: !14787)
!14792 = !DILocalVariable(name: "chain", arg: 2, scope: !14787, file: !11281, line: 76, type: !229)
!14793 = !DILocation(line: 76, column: 58, scope: !14787)
!14794 = !DILocalVariable(name: "prio", arg: 3, scope: !14787, file: !11281, line: 76, type: !229)
!14795 = !DILocation(line: 76, column: 69, scope: !14787)
!14796 = !DILocalVariable(name: "level", arg: 4, scope: !14787, file: !11281, line: 77, type: !229)
!14797 = !DILocation(line: 77, column: 13, scope: !14787)
!14798 = !DILocation(line: 77, column: 29, scope: !14787)
!14799 = !DILocation(line: 77, column: 22, scope: !14787)
!14800 = distinct !DISubprogram(name: "ERR_CAST", scope: !12497, file: !12497, line: 51, type: !14801, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!14801 = !DISubroutineType(types: !14802)
!14802 = !{!159, !2454}
!14803 = !DILocalVariable(name: "ptr", arg: 1, scope: !14800, file: !12497, line: 51, type: !2454)
!14804 = !DILocation(line: 51, column: 64, scope: !14800)
!14805 = !DILocation(line: 54, column: 18, scope: !14800)
!14806 = !DILocation(line: 54, column: 2, scope: !14800)
!14807 = distinct !DISubprogram(name: "__fswab32", scope: !14773, file: !14773, line: 57, type: !14808, scopeLine: 58, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!14808 = !DISubroutineType(types: !14809)
!14809 = !{!231, !231}
!14810 = !DILocalVariable(name: "val", arg: 1, scope: !14807, file: !14773, line: 57, type: !231)
!14811 = !DILocation(line: 57, column: 57, scope: !14807)
!14812 = !DILocation(line: 60, column: 23, scope: !14807)
!14813 = !DILocation(line: 60, column: 9, scope: !14807)
!14814 = !DILocation(line: 60, column: 2, scope: !14807)
!14815 = distinct !DISubprogram(name: "mlx5_eswitch_set_rule_source_port", scope: !3, file: !3, line: 258, type: !14816, scopeLine: 261, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!14816 = !DISubroutineType(types: !14817)
!14817 = !{null, !7, !12595, !14298}
!14818 = !DILocalVariable(name: "esw", arg: 1, scope: !14815, file: !3, line: 258, type: !7)
!14819 = !DILocation(line: 258, column: 56, scope: !14815)
!14820 = !DILocalVariable(name: "spec", arg: 2, scope: !14815, file: !3, line: 259, type: !12595)
!14821 = !DILocation(line: 259, column: 30, scope: !14815)
!14822 = !DILocalVariable(name: "attr", arg: 3, scope: !14815, file: !3, line: 260, type: !14298)
!14823 = !DILocation(line: 260, column: 34, scope: !14815)
!14824 = !DILocalVariable(name: "misc2", scope: !14815, file: !3, line: 262, type: !159)
!14825 = !DILocation(line: 262, column: 8, scope: !14815)
!14826 = !DILocalVariable(name: "misc", scope: !14815, file: !3, line: 263, type: !159)
!14827 = !DILocation(line: 263, column: 8, scope: !14815)
!14828 = !DILocation(line: 268, column: 48, scope: !14829)
!14829 = distinct !DILexicalBlock(scope: !14815, file: !3, line: 268, column: 6)
!14830 = !DILocation(line: 268, column: 6, scope: !14829)
!14831 = !DILocation(line: 268, column: 6, scope: !14815)
!14832 = !DILocation(line: 269, column: 11, scope: !14833)
!14833 = distinct !DILexicalBlock(scope: !14829, file: !3, line: 268, column: 54)
!14834 = !DILocation(line: 269, column: 9, scope: !14833)
!14835 = !DILocation(line: 270, column: 3, scope: !14833)
!14836 = !DILocalVariable(name: "_v", scope: !14837, file: !3, line: 270, type: !229)
!14837 = distinct !DILexicalBlock(scope: !14833, file: !3, line: 270, column: 3)
!14838 = !DILocation(line: 270, column: 3, scope: !14837)
!14839 = !DILocation(line: 270, column: 3, scope: !14840)
!14840 = distinct !DILexicalBlock(scope: !14837, file: !3, line: 270, column: 3)
!14841 = !DILocation(line: 274, column: 11, scope: !14833)
!14842 = !DILocation(line: 274, column: 9, scope: !14833)
!14843 = !DILocation(line: 275, column: 3, scope: !14833)
!14844 = !DILocalVariable(name: "_v", scope: !14845, file: !3, line: 275, type: !229)
!14845 = distinct !DILexicalBlock(scope: !14833, file: !3, line: 275, column: 3)
!14846 = !DILocation(line: 275, column: 3, scope: !14845)
!14847 = !DILocation(line: 275, column: 3, scope: !14848)
!14848 = distinct !DILexicalBlock(scope: !14845, file: !3, line: 275, column: 3)
!14849 = !DILocation(line: 278, column: 3, scope: !14833)
!14850 = !DILocation(line: 278, column: 9, scope: !14833)
!14851 = !DILocation(line: 278, column: 31, scope: !14833)
!14852 = !DILocation(line: 279, column: 2, scope: !14833)
!14853 = !DILocation(line: 280, column: 10, scope: !14854)
!14854 = distinct !DILexicalBlock(scope: !14829, file: !3, line: 279, column: 9)
!14855 = !DILocation(line: 280, column: 8, scope: !14854)
!14856 = !DILocation(line: 281, column: 3, scope: !14854)
!14857 = !DILocalVariable(name: "_v", scope: !14858, file: !3, line: 281, type: !229)
!14858 = distinct !DILexicalBlock(scope: !14854, file: !3, line: 281, column: 3)
!14859 = !DILocation(line: 281, column: 3, scope: !14858)
!14860 = !DILocation(line: 281, column: 3, scope: !14861)
!14861 = distinct !DILexicalBlock(scope: !14858, file: !3, line: 281, column: 3)
!14862 = !DILocation(line: 283, column: 7, scope: !14863)
!14863 = distinct !DILexicalBlock(scope: !14854, file: !3, line: 283, column: 7)
!14864 = !DILocation(line: 283, column: 7, scope: !14854)
!14865 = !DILocation(line: 284, column: 4, scope: !14863)
!14866 = !DILocalVariable(name: "_v", scope: !14867, file: !3, line: 284, type: !229)
!14867 = distinct !DILexicalBlock(scope: !14863, file: !3, line: 284, column: 4)
!14868 = !DILocation(line: 284, column: 4, scope: !14867)
!14869 = !DILocation(line: 284, column: 4, scope: !14870)
!14870 = distinct !DILexicalBlock(scope: !14867, file: !3, line: 284, column: 4)
!14871 = !DILocation(line: 288, column: 10, scope: !14854)
!14872 = !DILocation(line: 288, column: 8, scope: !14854)
!14873 = !DILocation(line: 289, column: 3, scope: !14854)
!14874 = !DILocation(line: 289, column: 3, scope: !14875)
!14875 = distinct !DILexicalBlock(scope: !14854, file: !3, line: 289, column: 3)
!14876 = !DILocation(line: 289, column: 3, scope: !14877)
!14877 = distinct !DILexicalBlock(scope: !14875, file: !3, line: 289, column: 3)
!14878 = !DILocation(line: 290, column: 7, scope: !14879)
!14879 = distinct !DILexicalBlock(scope: !14854, file: !3, line: 290, column: 7)
!14880 = !DILocation(line: 290, column: 7, scope: !14854)
!14881 = !DILocation(line: 291, column: 4, scope: !14879)
!14882 = !DILocation(line: 291, column: 4, scope: !14883)
!14883 = distinct !DILexicalBlock(scope: !14879, file: !3, line: 291, column: 4)
!14884 = !DILocation(line: 291, column: 4, scope: !14885)
!14885 = distinct !DILexicalBlock(scope: !14883, file: !3, line: 291, column: 4)
!14886 = !DILocation(line: 294, column: 3, scope: !14854)
!14887 = !DILocation(line: 294, column: 9, scope: !14854)
!14888 = !DILocation(line: 294, column: 31, scope: !14854)
!14889 = !DILocation(line: 296, column: 1, scope: !14815)
!14890 = distinct !DISubprogram(name: "mlx5_eswitch_set_rule_flow_source", scope: !3, file: !3, line: 245, type: !14816, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!14891 = !DILocalVariable(name: "esw", arg: 1, scope: !14890, file: !3, line: 245, type: !7)
!14892 = !DILocation(line: 245, column: 56, scope: !14890)
!14893 = !DILocalVariable(name: "spec", arg: 2, scope: !14890, file: !3, line: 246, type: !12595)
!14894 = !DILocation(line: 246, column: 30, scope: !14890)
!14895 = !DILocalVariable(name: "attr", arg: 3, scope: !14890, file: !3, line: 247, type: !14298)
!14896 = !DILocation(line: 247, column: 34, scope: !14890)
!14897 = !DILocation(line: 249, column: 6, scope: !14898)
!14898 = distinct !DILexicalBlock(scope: !14890, file: !3, line: 249, column: 6)
!14899 = !DILocation(line: 249, column: 52, scope: !14898)
!14900 = !DILocation(line: 250, column: 6, scope: !14898)
!14901 = !DILocation(line: 250, column: 11, scope: !14898)
!14902 = !DILocation(line: 250, column: 14, scope: !14898)
!14903 = !DILocation(line: 250, column: 20, scope: !14898)
!14904 = !DILocation(line: 249, column: 6, scope: !14890)
!14905 = !DILocation(line: 252, column: 4, scope: !14898)
!14906 = !DILocation(line: 252, column: 10, scope: !14898)
!14907 = !DILocation(line: 252, column: 18, scope: !14898)
!14908 = !DILocation(line: 252, column: 24, scope: !14898)
!14909 = !DILocation(line: 251, column: 3, scope: !14898)
!14910 = !DILocation(line: 251, column: 9, scope: !14898)
!14911 = !DILocation(line: 251, column: 22, scope: !14898)
!14912 = !DILocation(line: 251, column: 34, scope: !14898)
!14913 = !DILocation(line: 255, column: 1, scope: !14890)
!14914 = distinct !DISubprogram(name: "mlx5_chains_put_table", scope: !11281, file: !11281, line: 79, type: !14915, scopeLine: 80, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!14915 = !DISubroutineType(types: !14916)
!14916 = !{null, !11279, !229, !229, !229}
!14917 = !DILocalVariable(name: "chains", arg: 1, scope: !14914, file: !11281, line: 79, type: !11279)
!14918 = !DILocation(line: 79, column: 46, scope: !14914)
!14919 = !DILocalVariable(name: "chain", arg: 2, scope: !14914, file: !11281, line: 79, type: !229)
!14920 = !DILocation(line: 79, column: 58, scope: !14914)
!14921 = !DILocalVariable(name: "prio", arg: 3, scope: !14914, file: !11281, line: 79, type: !229)
!14922 = !DILocation(line: 79, column: 69, scope: !14914)
!14923 = !DILocalVariable(name: "level", arg: 4, scope: !14914, file: !11281, line: 80, type: !229)
!14924 = !DILocation(line: 80, column: 13, scope: !14914)
!14925 = !DILocation(line: 80, column: 21, scope: !14914)
!14926 = distinct !DISubprogram(name: "mlx5_eswitch_add_fwd_rule", scope: !3, file: !3, line: 444, type: !12593, scopeLine: 447, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!14927 = !DILocation(line: 86, column: 59, scope: !12678, inlinedAt: !14928)
!14928 = distinct !DILocation(line: 1051, column: 2, scope: !12685, inlinedAt: !14929)
!14929 = distinct !DILocation(line: 501, column: 2, scope: !14926)
!14930 = !DILocation(line: 99, column: 79, scope: !12690, inlinedAt: !14931)
!14931 = distinct !DILocation(line: 1050, column: 2, scope: !12685, inlinedAt: !14929)
!14932 = !DILocation(line: 99, column: 89, scope: !12690, inlinedAt: !14931)
!14933 = !DILocation(line: 1048, column: 26, scope: !12685, inlinedAt: !14929)
!14934 = !DILocalVariable(name: "esw", arg: 1, scope: !14926, file: !3, line: 444, type: !7)
!14935 = !DILocation(line: 444, column: 48, scope: !14926)
!14936 = !DILocalVariable(name: "spec", arg: 2, scope: !14926, file: !3, line: 445, type: !12595)
!14937 = !DILocation(line: 445, column: 29, scope: !14926)
!14938 = !DILocalVariable(name: "attr", arg: 3, scope: !14926, file: !3, line: 446, type: !12608)
!14939 = !DILocation(line: 446, column: 29, scope: !14926)
!14940 = !DILocalVariable(name: "dest", scope: !14926, file: !3, line: 448, type: !12710)
!14941 = !DILocation(line: 448, column: 31, scope: !14926)
!14942 = !DILocalVariable(name: "flow_act", scope: !14926, file: !3, line: 449, type: !12713)
!14943 = !DILocation(line: 449, column: 23, scope: !14926)
!14944 = !DILocalVariable(name: "esw_attr", scope: !14926, file: !3, line: 450, type: !14298)
!14945 = !DILocation(line: 450, column: 29, scope: !14926)
!14946 = !DILocation(line: 450, column: 40, scope: !14926)
!14947 = !DILocation(line: 450, column: 46, scope: !14926)
!14948 = !DILocalVariable(name: "chains", scope: !14926, file: !3, line: 451, type: !11279)
!14949 = !DILocation(line: 451, column: 25, scope: !14926)
!14950 = !DILocation(line: 451, column: 34, scope: !14926)
!14951 = !DILocalVariable(name: "fwd_attr", scope: !14926, file: !3, line: 452, type: !12341)
!14952 = !DILocation(line: 452, column: 29, scope: !14926)
!14953 = !DILocalVariable(name: "fast_fdb", scope: !14926, file: !3, line: 453, type: !10734)
!14954 = !DILocation(line: 453, column: 26, scope: !14926)
!14955 = !DILocalVariable(name: "fwd_fdb", scope: !14926, file: !3, line: 454, type: !10734)
!14956 = !DILocation(line: 454, column: 26, scope: !14926)
!14957 = !DILocalVariable(name: "rule", scope: !14926, file: !3, line: 455, type: !10864)
!14958 = !DILocation(line: 455, column: 27, scope: !14926)
!14959 = !DILocalVariable(name: "i", scope: !14926, file: !3, line: 456, type: !6)
!14960 = !DILocation(line: 456, column: 6, scope: !14926)
!14961 = !DILocation(line: 458, column: 35, scope: !14926)
!14962 = !DILocation(line: 458, column: 43, scope: !14926)
!14963 = !DILocation(line: 458, column: 49, scope: !14926)
!14964 = !DILocation(line: 458, column: 56, scope: !14926)
!14965 = !DILocation(line: 458, column: 62, scope: !14926)
!14966 = !DILocation(line: 458, column: 13, scope: !14926)
!14967 = !DILocation(line: 458, column: 11, scope: !14926)
!14968 = !DILocation(line: 459, column: 13, scope: !14969)
!14969 = distinct !DILexicalBlock(scope: !14926, file: !3, line: 459, column: 6)
!14970 = !DILocation(line: 459, column: 6, scope: !14969)
!14971 = !DILocation(line: 459, column: 6, scope: !14926)
!14972 = !DILocation(line: 460, column: 19, scope: !14973)
!14973 = distinct !DILexicalBlock(scope: !14969, file: !3, line: 459, column: 24)
!14974 = !DILocation(line: 460, column: 10, scope: !14973)
!14975 = !DILocation(line: 460, column: 8, scope: !14973)
!14976 = !DILocation(line: 461, column: 3, scope: !14973)
!14977 = !DILocation(line: 464, column: 19, scope: !14926)
!14978 = !DILocation(line: 464, column: 25, scope: !14926)
!14979 = !DILocation(line: 464, column: 11, scope: !14926)
!14980 = !DILocation(line: 464, column: 17, scope: !14926)
!14981 = !DILocation(line: 465, column: 18, scope: !14926)
!14982 = !DILocation(line: 465, column: 24, scope: !14926)
!14983 = !DILocation(line: 465, column: 11, scope: !14926)
!14984 = !DILocation(line: 465, column: 16, scope: !14926)
!14985 = !DILocation(line: 466, column: 19, scope: !14926)
!14986 = !DILocation(line: 466, column: 29, scope: !14926)
!14987 = !DILocation(line: 466, column: 37, scope: !14926)
!14988 = !DILocation(line: 466, column: 11, scope: !14926)
!14989 = !DILocation(line: 466, column: 17, scope: !14926)
!14990 = !DILocation(line: 467, column: 30, scope: !14926)
!14991 = !DILocation(line: 467, column: 12, scope: !14926)
!14992 = !DILocation(line: 467, column: 10, scope: !14926)
!14993 = !DILocation(line: 468, column: 13, scope: !14994)
!14994 = distinct !DILexicalBlock(scope: !14926, file: !3, line: 468, column: 6)
!14995 = !DILocation(line: 468, column: 6, scope: !14994)
!14996 = !DILocation(line: 468, column: 6, scope: !14926)
!14997 = !DILocation(line: 469, column: 19, scope: !14998)
!14998 = distinct !DILexicalBlock(scope: !14994, file: !3, line: 468, column: 23)
!14999 = !DILocation(line: 469, column: 10, scope: !14998)
!15000 = !DILocation(line: 469, column: 8, scope: !14998)
!15001 = !DILocation(line: 470, column: 3, scope: !14998)
!15002 = !DILocation(line: 473, column: 11, scope: !14926)
!15003 = !DILocation(line: 473, column: 18, scope: !14926)
!15004 = !DILocation(line: 474, column: 9, scope: !15005)
!15005 = distinct !DILexicalBlock(scope: !14926, file: !3, line: 474, column: 2)
!15006 = !DILocation(line: 474, column: 7, scope: !15005)
!15007 = !DILocation(line: 474, column: 14, scope: !15008)
!15008 = distinct !DILexicalBlock(scope: !15005, file: !3, line: 474, column: 2)
!15009 = !DILocation(line: 474, column: 18, scope: !15008)
!15010 = !DILocation(line: 474, column: 28, scope: !15008)
!15011 = !DILocation(line: 474, column: 16, scope: !15008)
!15012 = !DILocation(line: 474, column: 2, scope: !15005)
!15013 = !DILocation(line: 475, column: 8, scope: !15014)
!15014 = distinct !DILexicalBlock(scope: !15008, file: !3, line: 474, column: 46)
!15015 = !DILocation(line: 475, column: 3, scope: !15014)
!15016 = !DILocation(line: 475, column: 11, scope: !15014)
!15017 = !DILocation(line: 475, column: 16, scope: !15014)
!15018 = !DILocation(line: 476, column: 23, scope: !15014)
!15019 = !DILocation(line: 476, column: 33, scope: !15014)
!15020 = !DILocation(line: 476, column: 39, scope: !15014)
!15021 = !DILocation(line: 476, column: 42, scope: !15014)
!15022 = !DILocation(line: 476, column: 47, scope: !15014)
!15023 = !DILocation(line: 476, column: 8, scope: !15014)
!15024 = !DILocation(line: 476, column: 3, scope: !15014)
!15025 = !DILocation(line: 476, column: 11, scope: !15014)
!15026 = !DILocation(line: 476, column: 17, scope: !15014)
!15027 = !DILocation(line: 476, column: 21, scope: !15014)
!15028 = !DILocation(line: 478, column: 4, scope: !15014)
!15029 = !DILocation(line: 477, column: 8, scope: !15014)
!15030 = !DILocation(line: 477, column: 3, scope: !15014)
!15031 = !DILocation(line: 477, column: 11, scope: !15014)
!15032 = !DILocation(line: 477, column: 17, scope: !15014)
!15033 = !DILocation(line: 477, column: 25, scope: !15014)
!15034 = !DILocation(line: 479, column: 7, scope: !15035)
!15035 = distinct !DILexicalBlock(scope: !15014, file: !3, line: 479, column: 7)
!15036 = !DILocation(line: 479, column: 7, scope: !15014)
!15037 = !DILocation(line: 480, column: 9, scope: !15035)
!15038 = !DILocation(line: 480, column: 4, scope: !15035)
!15039 = !DILocation(line: 480, column: 12, scope: !15035)
!15040 = !DILocation(line: 480, column: 18, scope: !15035)
!15041 = !DILocation(line: 480, column: 24, scope: !15035)
!15042 = !DILocation(line: 481, column: 7, scope: !15043)
!15043 = distinct !DILexicalBlock(scope: !15014, file: !3, line: 481, column: 7)
!15044 = !DILocation(line: 481, column: 17, scope: !15043)
!15045 = !DILocation(line: 481, column: 23, scope: !15043)
!15046 = !DILocation(line: 481, column: 26, scope: !15043)
!15047 = !DILocation(line: 481, column: 32, scope: !15043)
!15048 = !DILocation(line: 481, column: 7, scope: !15014)
!15049 = !DILocation(line: 482, column: 9, scope: !15050)
!15050 = distinct !DILexicalBlock(scope: !15043, file: !3, line: 481, column: 55)
!15051 = !DILocation(line: 482, column: 4, scope: !15050)
!15052 = !DILocation(line: 482, column: 12, scope: !15050)
!15053 = !DILocation(line: 482, column: 18, scope: !15050)
!15054 = !DILocation(line: 482, column: 24, scope: !15050)
!15055 = !DILocation(line: 483, column: 33, scope: !15050)
!15056 = !DILocation(line: 483, column: 43, scope: !15050)
!15057 = !DILocation(line: 483, column: 49, scope: !15050)
!15058 = !DILocation(line: 483, column: 52, scope: !15050)
!15059 = !DILocation(line: 483, column: 9, scope: !15050)
!15060 = !DILocation(line: 483, column: 4, scope: !15050)
!15061 = !DILocation(line: 483, column: 12, scope: !15050)
!15062 = !DILocation(line: 483, column: 18, scope: !15050)
!15063 = !DILocation(line: 483, column: 31, scope: !15050)
!15064 = !DILocation(line: 484, column: 3, scope: !15050)
!15065 = !DILocation(line: 485, column: 2, scope: !15014)
!15066 = !DILocation(line: 474, column: 42, scope: !15008)
!15067 = !DILocation(line: 474, column: 2, scope: !15008)
!15068 = distinct !{!15068, !15012, !15069}
!15069 = !DILocation(line: 485, column: 2, scope: !15005)
!15070 = !DILocation(line: 486, column: 7, scope: !14926)
!15071 = !DILocation(line: 486, column: 2, scope: !14926)
!15072 = !DILocation(line: 486, column: 10, scope: !14926)
!15073 = !DILocation(line: 486, column: 15, scope: !14926)
!15074 = !DILocation(line: 487, column: 15, scope: !14926)
!15075 = !DILocation(line: 487, column: 7, scope: !14926)
!15076 = !DILocation(line: 487, column: 2, scope: !14926)
!15077 = !DILocation(line: 487, column: 10, scope: !14926)
!15078 = !DILocation(line: 487, column: 13, scope: !14926)
!15079 = !DILocation(line: 488, column: 3, scope: !14926)
!15080 = !DILocation(line: 490, column: 36, scope: !14926)
!15081 = !DILocation(line: 490, column: 41, scope: !14926)
!15082 = !DILocation(line: 490, column: 47, scope: !14926)
!15083 = !DILocation(line: 490, column: 2, scope: !14926)
!15084 = !DILocation(line: 492, column: 6, scope: !15085)
!15085 = distinct !DILexicalBlock(scope: !14926, file: !3, line: 492, column: 6)
!15086 = !DILocation(line: 492, column: 12, scope: !15085)
!15087 = !DILocation(line: 492, column: 30, scope: !15085)
!15088 = !DILocation(line: 492, column: 6, scope: !14926)
!15089 = !DILocation(line: 493, column: 3, scope: !15085)
!15090 = !DILocation(line: 493, column: 9, scope: !15085)
!15091 = !DILocation(line: 493, column: 31, scope: !15085)
!15092 = !DILocation(line: 495, column: 11, scope: !14926)
!15093 = !DILocation(line: 495, column: 17, scope: !14926)
!15094 = !DILocation(line: 496, column: 29, scope: !14926)
!15095 = !DILocation(line: 496, column: 39, scope: !14926)
!15096 = !DILocation(line: 496, column: 56, scope: !14926)
!15097 = !DILocation(line: 496, column: 62, scope: !14926)
!15098 = !DILocation(line: 496, column: 9, scope: !14926)
!15099 = !DILocation(line: 496, column: 7, scope: !14926)
!15100 = !DILocation(line: 498, column: 13, scope: !15101)
!15101 = distinct !DILexicalBlock(scope: !14926, file: !3, line: 498, column: 6)
!15102 = !DILocation(line: 498, column: 6, scope: !15101)
!15103 = !DILocation(line: 498, column: 6, scope: !14926)
!15104 = !DILocation(line: 499, column: 3, scope: !15101)
!15105 = !DILocation(line: 501, column: 16, scope: !14926)
!15106 = !DILocation(line: 501, column: 21, scope: !14926)
!15107 = !DILocation(line: 501, column: 30, scope: !14926)
!15108 = !DILocation(line: 1050, column: 31, scope: !12685, inlinedAt: !14929)
!15109 = !DILocation(line: 101, column: 20, scope: !12690, inlinedAt: !14931)
!15110 = !DILocation(line: 101, column: 23, scope: !12690, inlinedAt: !14931)
!15111 = !DILocation(line: 101, column: 2, scope: !12690, inlinedAt: !14931)
!15112 = !DILocation(line: 102, column: 2, scope: !12690, inlinedAt: !14931)
!15113 = !DILocation(line: 1051, column: 20, scope: !12685, inlinedAt: !14929)
!15114 = !DILocation(line: 89, column: 16, scope: !12678, inlinedAt: !14928)
!15115 = !DILocation(line: 89, column: 19, scope: !12678, inlinedAt: !14928)
!15116 = !DILocation(line: 90, column: 15, scope: !12678, inlinedAt: !14928)
!15117 = !DILocation(line: 90, column: 18, scope: !12678, inlinedAt: !14928)
!15118 = !DILocation(line: 88, column: 2, scope: !12678, inlinedAt: !14928)
!15119 = !DILocation(line: 503, column: 9, scope: !14926)
!15120 = !DILocation(line: 503, column: 2, scope: !14926)
!15121 = !DILabel(scope: !14926, name: "add_err", file: !3, line: 504)
!15122 = !DILocation(line: 504, column: 1, scope: !14926)
!15123 = !DILocation(line: 505, column: 20, scope: !14926)
!15124 = !DILocation(line: 505, column: 2, scope: !14926)
!15125 = !DILabel(scope: !14926, name: "err_get_fwd", file: !3, line: 506)
!15126 = !DILocation(line: 506, column: 1, scope: !14926)
!15127 = !DILocation(line: 507, column: 24, scope: !14926)
!15128 = !DILocation(line: 507, column: 32, scope: !14926)
!15129 = !DILocation(line: 507, column: 38, scope: !14926)
!15130 = !DILocation(line: 507, column: 45, scope: !14926)
!15131 = !DILocation(line: 507, column: 51, scope: !14926)
!15132 = !DILocation(line: 507, column: 2, scope: !14926)
!15133 = !DILabel(scope: !14926, name: "err_get_fast", file: !3, line: 508)
!15134 = !DILocation(line: 508, column: 1, scope: !14926)
!15135 = !DILocation(line: 509, column: 9, scope: !14926)
!15136 = !DILocation(line: 509, column: 2, scope: !14926)
!15137 = !DILocation(line: 510, column: 1, scope: !14926)
!15138 = distinct !DISubprogram(name: "mlx5_eswitch_del_offloaded_rule", scope: !3, file: !3, line: 556, type: !15139, scopeLine: 559, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!15139 = !DISubroutineType(types: !15140)
!15140 = !{null, !7, !10864, !12608}
!15141 = !DILocalVariable(name: "esw", arg: 1, scope: !15138, file: !3, line: 556, type: !7)
!15142 = !DILocation(line: 556, column: 54, scope: !15138)
!15143 = !DILocalVariable(name: "rule", arg: 2, scope: !15138, file: !3, line: 557, type: !10864)
!15144 = !DILocation(line: 557, column: 30, scope: !15138)
!15145 = !DILocalVariable(name: "attr", arg: 3, scope: !15138, file: !3, line: 558, type: !12608)
!15146 = !DILocation(line: 558, column: 28, scope: !15138)
!15147 = !DILocation(line: 560, column: 26, scope: !15138)
!15148 = !DILocation(line: 560, column: 31, scope: !15138)
!15149 = !DILocation(line: 560, column: 37, scope: !15138)
!15150 = !DILocation(line: 560, column: 2, scope: !15138)
!15151 = !DILocation(line: 561, column: 1, scope: !15138)
!15152 = distinct !DISubprogram(name: "__mlx5_eswitch_del_rule", scope: !3, file: !3, line: 513, type: !15153, scopeLine: 517, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!15153 = !DISubroutineType(types: !15154)
!15154 = !{null, !7, !10864, !12608, !304}
!15155 = !DILocalVariable(name: "v", arg: 1, scope: !15156, file: !12679, line: 100, type: !12682)
!15156 = distinct !DISubprogram(name: "arch_atomic64_dec", scope: !12679, file: !12679, line: 100, type: !12680, scopeLine: 101, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!15157 = !DILocation(line: 100, column: 59, scope: !15156, inlinedAt: !15158)
!15158 = distinct !DILocation(line: 1141, column: 2, scope: !15159, inlinedAt: !15160)
!15159 = distinct !DISubprogram(name: "atomic64_dec", scope: !12686, file: !12686, line: 1138, type: !12680, scopeLine: 1139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!15160 = distinct !DILocation(line: 534, column: 2, scope: !15152)
!15161 = !DILocation(line: 99, column: 79, scope: !12690, inlinedAt: !15162)
!15162 = distinct !DILocation(line: 1140, column: 2, scope: !15159, inlinedAt: !15160)
!15163 = !DILocation(line: 99, column: 89, scope: !12690, inlinedAt: !15162)
!15164 = !DILocalVariable(name: "v", arg: 1, scope: !15159, file: !12686, line: 1138, type: !12682)
!15165 = !DILocation(line: 1138, column: 26, scope: !15159, inlinedAt: !15160)
!15166 = !DILocalVariable(name: "esw", arg: 1, scope: !15152, file: !3, line: 513, type: !7)
!15167 = !DILocation(line: 513, column: 46, scope: !15152)
!15168 = !DILocalVariable(name: "rule", arg: 2, scope: !15152, file: !3, line: 514, type: !10864)
!15169 = !DILocation(line: 514, column: 29, scope: !15152)
!15170 = !DILocalVariable(name: "attr", arg: 3, scope: !15152, file: !3, line: 515, type: !12608)
!15171 = !DILocation(line: 515, column: 27, scope: !15152)
!15172 = !DILocalVariable(name: "fwd_rule", arg: 4, scope: !15152, file: !3, line: 516, type: !304)
!15173 = !DILocation(line: 516, column: 9, scope: !15152)
!15174 = !DILocalVariable(name: "esw_attr", scope: !15152, file: !3, line: 518, type: !14298)
!15175 = !DILocation(line: 518, column: 29, scope: !15152)
!15176 = !DILocation(line: 518, column: 40, scope: !15152)
!15177 = !DILocation(line: 518, column: 46, scope: !15152)
!15178 = !DILocalVariable(name: "chains", scope: !15152, file: !3, line: 519, type: !11279)
!15179 = !DILocation(line: 519, column: 25, scope: !15152)
!15180 = !DILocation(line: 519, column: 34, scope: !15152)
!15181 = !DILocalVariable(name: "split", scope: !15152, file: !3, line: 520, type: !304)
!15182 = !DILocation(line: 520, column: 7, scope: !15152)
!15183 = !DILocation(line: 520, column: 16, scope: !15152)
!15184 = !DILocation(line: 520, column: 26, scope: !15152)
!15185 = !DILocation(line: 520, column: 38, scope: !15152)
!15186 = !DILocalVariable(name: "fwd_attr", scope: !15152, file: !3, line: 521, type: !12341)
!15187 = !DILocation(line: 521, column: 29, scope: !15152)
!15188 = !DILocalVariable(name: "i", scope: !15152, file: !3, line: 522, type: !6)
!15189 = !DILocation(line: 522, column: 6, scope: !15152)
!15190 = !DILocation(line: 524, column: 22, scope: !15152)
!15191 = !DILocation(line: 524, column: 2, scope: !15152)
!15192 = !DILocation(line: 526, column: 8, scope: !15193)
!15193 = distinct !DILexicalBlock(scope: !15152, file: !3, line: 526, column: 6)
!15194 = !DILocation(line: 526, column: 14, scope: !15193)
!15195 = !DILocation(line: 526, column: 20, scope: !15193)
!15196 = !DILocation(line: 526, column: 6, scope: !15152)
!15197 = !DILocation(line: 528, column: 10, scope: !15198)
!15198 = distinct !DILexicalBlock(scope: !15199, file: !3, line: 528, column: 3)
!15199 = distinct !DILexicalBlock(scope: !15193, file: !3, line: 526, column: 53)
!15200 = !DILocation(line: 528, column: 8, scope: !15198)
!15201 = !DILocation(line: 528, column: 15, scope: !15202)
!15202 = distinct !DILexicalBlock(scope: !15198, file: !3, line: 528, column: 3)
!15203 = !DILocation(line: 528, column: 17, scope: !15202)
!15204 = !DILocation(line: 528, column: 3, scope: !15198)
!15205 = !DILocation(line: 529, column: 8, scope: !15206)
!15206 = distinct !DILexicalBlock(scope: !15207, file: !3, line: 529, column: 8)
!15207 = distinct !DILexicalBlock(scope: !15202, file: !3, line: 528, column: 50)
!15208 = !DILocation(line: 529, column: 18, scope: !15206)
!15209 = !DILocation(line: 529, column: 24, scope: !15206)
!15210 = !DILocation(line: 529, column: 27, scope: !15206)
!15211 = !DILocation(line: 529, column: 8, scope: !15207)
!15212 = !DILocation(line: 530, column: 30, scope: !15206)
!15213 = !DILocation(line: 530, column: 35, scope: !15206)
!15214 = !DILocation(line: 530, column: 45, scope: !15206)
!15215 = !DILocation(line: 530, column: 51, scope: !15206)
!15216 = !DILocation(line: 530, column: 54, scope: !15206)
!15217 = !DILocation(line: 530, column: 5, scope: !15206)
!15218 = !DILocation(line: 531, column: 3, scope: !15207)
!15219 = !DILocation(line: 528, column: 46, scope: !15202)
!15220 = !DILocation(line: 528, column: 3, scope: !15202)
!15221 = distinct !{!15221, !15204, !15222}
!15222 = !DILocation(line: 531, column: 3, scope: !15198)
!15223 = !DILocation(line: 532, column: 2, scope: !15199)
!15224 = !DILocation(line: 534, column: 16, scope: !15152)
!15225 = !DILocation(line: 534, column: 21, scope: !15152)
!15226 = !DILocation(line: 534, column: 30, scope: !15152)
!15227 = !DILocation(line: 1140, column: 31, scope: !15159, inlinedAt: !15160)
!15228 = !DILocation(line: 101, column: 20, scope: !12690, inlinedAt: !15162)
!15229 = !DILocation(line: 101, column: 23, scope: !12690, inlinedAt: !15162)
!15230 = !DILocation(line: 101, column: 2, scope: !12690, inlinedAt: !15162)
!15231 = !DILocation(line: 102, column: 2, scope: !12690, inlinedAt: !15162)
!15232 = !DILocation(line: 1141, column: 20, scope: !15159, inlinedAt: !15160)
!15233 = !DILocation(line: 103, column: 16, scope: !15156, inlinedAt: !15158)
!15234 = !DILocation(line: 103, column: 19, scope: !15156, inlinedAt: !15158)
!15235 = !DILocation(line: 104, column: 15, scope: !15156, inlinedAt: !15158)
!15236 = !DILocation(line: 104, column: 18, scope: !15156, inlinedAt: !15158)
!15237 = !DILocation(line: 102, column: 2, scope: !15156, inlinedAt: !15158)
!15238 = !{i32 -2146489922}
!15239 = !DILocation(line: 536, column: 6, scope: !15240)
!15240 = distinct !DILexicalBlock(scope: !15152, file: !3, line: 536, column: 6)
!15241 = !DILocation(line: 536, column: 15, scope: !15240)
!15242 = !DILocation(line: 536, column: 18, scope: !15240)
!15243 = !DILocation(line: 536, column: 6, scope: !15152)
!15244 = !DILocation(line: 537, column: 20, scope: !15245)
!15245 = distinct !DILexicalBlock(scope: !15240, file: !3, line: 536, column: 25)
!15246 = !DILocation(line: 537, column: 26, scope: !15245)
!15247 = !DILocation(line: 537, column: 12, scope: !15245)
!15248 = !DILocation(line: 537, column: 18, scope: !15245)
!15249 = !DILocation(line: 538, column: 19, scope: !15245)
!15250 = !DILocation(line: 538, column: 25, scope: !15245)
!15251 = !DILocation(line: 538, column: 12, scope: !15245)
!15252 = !DILocation(line: 538, column: 17, scope: !15245)
!15253 = !DILocation(line: 539, column: 20, scope: !15245)
!15254 = !DILocation(line: 539, column: 30, scope: !15245)
!15255 = !DILocation(line: 539, column: 38, scope: !15245)
!15256 = !DILocation(line: 539, column: 12, scope: !15245)
!15257 = !DILocation(line: 539, column: 18, scope: !15245)
!15258 = !DILocation(line: 540, column: 2, scope: !15245)
!15259 = !DILocation(line: 542, column: 6, scope: !15260)
!15260 = distinct !DILexicalBlock(scope: !15152, file: !3, line: 542, column: 6)
!15261 = !DILocation(line: 542, column: 6, scope: !15152)
!15262 = !DILocation(line: 543, column: 21, scope: !15263)
!15263 = distinct !DILexicalBlock(scope: !15260, file: !3, line: 542, column: 17)
!15264 = !DILocation(line: 543, column: 3, scope: !15263)
!15265 = !DILocation(line: 544, column: 25, scope: !15263)
!15266 = !DILocation(line: 544, column: 33, scope: !15263)
!15267 = !DILocation(line: 544, column: 39, scope: !15263)
!15268 = !DILocation(line: 544, column: 46, scope: !15263)
!15269 = !DILocation(line: 544, column: 52, scope: !15263)
!15270 = !DILocation(line: 544, column: 3, scope: !15263)
!15271 = !DILocation(line: 545, column: 2, scope: !15263)
!15272 = !DILocation(line: 546, column: 7, scope: !15273)
!15273 = distinct !DILexicalBlock(scope: !15274, file: !3, line: 546, column: 7)
!15274 = distinct !DILexicalBlock(scope: !15260, file: !3, line: 545, column: 9)
!15275 = !DILocation(line: 546, column: 7, scope: !15274)
!15276 = !DILocation(line: 547, column: 22, scope: !15273)
!15277 = !DILocation(line: 547, column: 4, scope: !15273)
!15278 = !DILocation(line: 548, column: 12, scope: !15279)
!15279 = distinct !DILexicalBlock(scope: !15273, file: !3, line: 548, column: 12)
!15280 = !DILocation(line: 548, column: 18, scope: !15279)
!15281 = !DILocation(line: 548, column: 24, scope: !15279)
!15282 = !DILocation(line: 548, column: 27, scope: !15279)
!15283 = !DILocation(line: 548, column: 33, scope: !15279)
!15284 = !DILocation(line: 548, column: 12, scope: !15273)
!15285 = !DILocation(line: 549, column: 26, scope: !15279)
!15286 = !DILocation(line: 549, column: 34, scope: !15279)
!15287 = !DILocation(line: 549, column: 40, scope: !15279)
!15288 = !DILocation(line: 549, column: 47, scope: !15279)
!15289 = !DILocation(line: 549, column: 53, scope: !15279)
!15290 = !DILocation(line: 549, column: 4, scope: !15279)
!15291 = !DILocation(line: 550, column: 7, scope: !15292)
!15292 = distinct !DILexicalBlock(scope: !15274, file: !3, line: 550, column: 7)
!15293 = !DILocation(line: 550, column: 13, scope: !15292)
!15294 = !DILocation(line: 550, column: 7, scope: !15274)
!15295 = !DILocation(line: 551, column: 26, scope: !15292)
!15296 = !DILocation(line: 551, column: 34, scope: !15292)
!15297 = !DILocation(line: 551, column: 40, scope: !15292)
!15298 = !DILocation(line: 551, column: 4, scope: !15292)
!15299 = !DILocation(line: 553, column: 1, scope: !15152)
!15300 = distinct !DISubprogram(name: "mlx5_eswitch_del_fwd_rule", scope: !3, file: !3, line: 564, type: !15139, scopeLine: 567, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!15301 = !DILocalVariable(name: "esw", arg: 1, scope: !15300, file: !3, line: 564, type: !7)
!15302 = !DILocation(line: 564, column: 48, scope: !15300)
!15303 = !DILocalVariable(name: "rule", arg: 2, scope: !15300, file: !3, line: 565, type: !10864)
!15304 = !DILocation(line: 565, column: 31, scope: !15300)
!15305 = !DILocalVariable(name: "attr", arg: 3, scope: !15300, file: !3, line: 566, type: !12608)
!15306 = !DILocation(line: 566, column: 29, scope: !15300)
!15307 = !DILocation(line: 568, column: 26, scope: !15300)
!15308 = !DILocation(line: 568, column: 31, scope: !15300)
!15309 = !DILocation(line: 568, column: 37, scope: !15300)
!15310 = !DILocation(line: 568, column: 2, scope: !15300)
!15311 = !DILocation(line: 569, column: 1, scope: !15300)
!15312 = distinct !DISubprogram(name: "mlx5_eswitch_add_vlan_action", scope: !3, file: !3, line: 642, type: !15313, scopeLine: 644, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!15313 = !DISubroutineType(types: !15314)
!15314 = !{!6, !7, !12608}
!15315 = !DILocalVariable(name: "esw", arg: 1, scope: !15312, file: !3, line: 642, type: !7)
!15316 = !DILocation(line: 642, column: 55, scope: !15312)
!15317 = !DILocalVariable(name: "attr", arg: 2, scope: !15312, file: !3, line: 643, type: !12608)
!15318 = !DILocation(line: 643, column: 29, scope: !15312)
!15319 = !DILocalVariable(name: "offloads", scope: !15312, file: !3, line: 645, type: !15320)
!15320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11266, size: 64)
!15321 = !DILocation(line: 645, column: 23, scope: !15312)
!15322 = !DILocation(line: 645, column: 35, scope: !15312)
!15323 = !DILocation(line: 645, column: 40, scope: !15312)
!15324 = !DILocation(line: 645, column: 50, scope: !15312)
!15325 = !DILocalVariable(name: "esw_attr", scope: !15312, file: !3, line: 646, type: !14298)
!15326 = !DILocation(line: 646, column: 29, scope: !15312)
!15327 = !DILocation(line: 646, column: 40, scope: !15312)
!15328 = !DILocation(line: 646, column: 46, scope: !15312)
!15329 = !DILocalVariable(name: "vport", scope: !15312, file: !3, line: 647, type: !11415)
!15330 = !DILocation(line: 647, column: 27, scope: !15312)
!15331 = !DILocalVariable(name: "push", scope: !15312, file: !3, line: 648, type: !304)
!15332 = !DILocation(line: 648, column: 7, scope: !15312)
!15333 = !DILocalVariable(name: "pop", scope: !15312, file: !3, line: 648, type: !304)
!15334 = !DILocation(line: 648, column: 13, scope: !15312)
!15335 = !DILocalVariable(name: "fwd", scope: !15312, file: !3, line: 648, type: !304)
!15336 = !DILocation(line: 648, column: 18, scope: !15312)
!15337 = !DILocalVariable(name: "err", scope: !15312, file: !3, line: 649, type: !6)
!15338 = !DILocation(line: 649, column: 6, scope: !15312)
!15339 = !DILocation(line: 652, column: 42, scope: !15340)
!15340 = distinct !DILexicalBlock(scope: !15312, file: !3, line: 652, column: 6)
!15341 = !DILocation(line: 652, column: 47, scope: !15340)
!15342 = !DILocation(line: 652, column: 6, scope: !15340)
!15343 = !DILocation(line: 652, column: 6, scope: !15312)
!15344 = !DILocation(line: 653, column: 3, scope: !15340)
!15345 = !DILocation(line: 655, column: 12, scope: !15312)
!15346 = !DILocation(line: 655, column: 18, scope: !15312)
!15347 = !DILocation(line: 655, column: 25, scope: !15312)
!15348 = !DILocation(line: 655, column: 10, scope: !15312)
!15349 = !DILocation(line: 655, column: 9, scope: !15312)
!15350 = !DILocation(line: 655, column: 7, scope: !15312)
!15351 = !DILocation(line: 656, column: 12, scope: !15312)
!15352 = !DILocation(line: 656, column: 18, scope: !15312)
!15353 = !DILocation(line: 656, column: 25, scope: !15312)
!15354 = !DILocation(line: 656, column: 10, scope: !15312)
!15355 = !DILocation(line: 656, column: 9, scope: !15312)
!15356 = !DILocation(line: 656, column: 7, scope: !15312)
!15357 = !DILocation(line: 657, column: 13, scope: !15312)
!15358 = !DILocation(line: 657, column: 19, scope: !15312)
!15359 = !DILocation(line: 657, column: 26, scope: !15312)
!15360 = !DILocation(line: 657, column: 63, scope: !15312)
!15361 = !DILocation(line: 658, column: 7, scope: !15312)
!15362 = !DILocation(line: 658, column: 13, scope: !15312)
!15363 = !DILocation(line: 658, column: 6, scope: !15312)
!15364 = !DILocation(line: 0, scope: !15312)
!15365 = !DILocation(line: 657, column: 10, scope: !15312)
!15366 = !DILocation(line: 657, column: 9, scope: !15312)
!15367 = !DILocation(line: 657, column: 7, scope: !15312)
!15368 = !DILocation(line: 660, column: 14, scope: !15312)
!15369 = !DILocation(line: 660, column: 19, scope: !15312)
!15370 = !DILocation(line: 660, column: 2, scope: !15312)
!15371 = !DILocation(line: 662, column: 34, scope: !15312)
!15372 = !DILocation(line: 662, column: 44, scope: !15312)
!15373 = !DILocation(line: 662, column: 50, scope: !15312)
!15374 = !DILocation(line: 662, column: 55, scope: !15312)
!15375 = !DILocation(line: 662, column: 8, scope: !15312)
!15376 = !DILocation(line: 662, column: 6, scope: !15312)
!15377 = !DILocation(line: 663, column: 6, scope: !15378)
!15378 = distinct !DILexicalBlock(scope: !15312, file: !3, line: 663, column: 6)
!15379 = !DILocation(line: 663, column: 6, scope: !15312)
!15380 = !DILocation(line: 664, column: 3, scope: !15378)
!15381 = !DILocation(line: 666, column: 2, scope: !15312)
!15382 = !DILocation(line: 666, column: 8, scope: !15312)
!15383 = !DILocation(line: 666, column: 14, scope: !15312)
!15384 = !DILocation(line: 668, column: 36, scope: !15312)
!15385 = !DILocation(line: 668, column: 46, scope: !15312)
!15386 = !DILocation(line: 668, column: 52, scope: !15312)
!15387 = !DILocation(line: 668, column: 10, scope: !15312)
!15388 = !DILocation(line: 668, column: 8, scope: !15312)
!15389 = !DILocation(line: 670, column: 7, scope: !15390)
!15390 = distinct !DILexicalBlock(scope: !15312, file: !3, line: 670, column: 6)
!15391 = !DILocation(line: 670, column: 12, scope: !15390)
!15392 = !DILocation(line: 670, column: 16, scope: !15390)
!15393 = !DILocation(line: 670, column: 20, scope: !15390)
!15394 = !DILocation(line: 670, column: 23, scope: !15390)
!15395 = !DILocation(line: 670, column: 6, scope: !15312)
!15396 = !DILocation(line: 672, column: 7, scope: !15397)
!15397 = distinct !DILexicalBlock(scope: !15398, file: !3, line: 672, column: 7)
!15398 = distinct !DILexicalBlock(scope: !15390, file: !3, line: 670, column: 28)
!15399 = !DILocation(line: 672, column: 17, scope: !15397)
!15400 = !DILocation(line: 672, column: 26, scope: !15397)
!15401 = !DILocation(line: 672, column: 31, scope: !15397)
!15402 = !DILocation(line: 672, column: 37, scope: !15397)
!15403 = !DILocation(line: 672, column: 7, scope: !15398)
!15404 = !DILocation(line: 673, column: 4, scope: !15405)
!15405 = distinct !DILexicalBlock(scope: !15397, file: !3, line: 672, column: 59)
!15406 = !DILocation(line: 673, column: 11, scope: !15405)
!15407 = !DILocation(line: 673, column: 24, scope: !15405)
!15408 = !DILocation(line: 674, column: 4, scope: !15405)
!15409 = !DILocation(line: 674, column: 10, scope: !15405)
!15410 = !DILocation(line: 674, column: 16, scope: !15405)
!15411 = !DILocation(line: 675, column: 3, scope: !15405)
!15412 = !DILocation(line: 677, column: 3, scope: !15398)
!15413 = !DILocation(line: 680, column: 7, scope: !15414)
!15414 = distinct !DILexicalBlock(scope: !15312, file: !3, line: 680, column: 6)
!15415 = !DILocation(line: 680, column: 12, scope: !15414)
!15416 = !DILocation(line: 680, column: 16, scope: !15414)
!15417 = !DILocation(line: 680, column: 6, scope: !15312)
!15418 = !DILocation(line: 681, column: 3, scope: !15414)
!15419 = !DILocation(line: 683, column: 8, scope: !15420)
!15420 = distinct !DILexicalBlock(scope: !15312, file: !3, line: 683, column: 6)
!15421 = !DILocation(line: 683, column: 18, scope: !15420)
!15422 = !DILocation(line: 683, column: 7, scope: !15420)
!15423 = !DILocation(line: 683, column: 6, scope: !15312)
!15424 = !DILocation(line: 685, column: 33, scope: !15425)
!15425 = distinct !DILexicalBlock(scope: !15420, file: !3, line: 683, column: 43)
!15426 = !DILocation(line: 685, column: 9, scope: !15425)
!15427 = !DILocation(line: 685, column: 7, scope: !15425)
!15428 = !DILocation(line: 686, column: 7, scope: !15429)
!15429 = distinct !DILexicalBlock(scope: !15425, file: !3, line: 686, column: 7)
!15430 = !DILocation(line: 686, column: 7, scope: !15425)
!15431 = !DILocation(line: 687, column: 4, scope: !15429)
!15432 = !DILocation(line: 688, column: 2, scope: !15425)
!15433 = !DILocation(line: 689, column: 2, scope: !15312)
!15434 = !DILocation(line: 689, column: 12, scope: !15312)
!15435 = !DILocation(line: 689, column: 34, scope: !15312)
!15436 = !DILocation(line: 691, column: 6, scope: !15437)
!15437 = distinct !DILexicalBlock(scope: !15312, file: !3, line: 691, column: 6)
!15438 = !DILocation(line: 691, column: 6, scope: !15312)
!15439 = !DILocation(line: 692, column: 7, scope: !15440)
!15440 = distinct !DILexicalBlock(scope: !15441, file: !3, line: 692, column: 7)
!15441 = distinct !DILexicalBlock(scope: !15437, file: !3, line: 691, column: 12)
!15442 = !DILocation(line: 692, column: 14, scope: !15440)
!15443 = !DILocation(line: 692, column: 7, scope: !15441)
!15444 = !DILocation(line: 693, column: 4, scope: !15440)
!15445 = !DILocation(line: 695, column: 39, scope: !15441)
!15446 = !DILocation(line: 695, column: 44, scope: !15441)
!15447 = !DILocation(line: 695, column: 51, scope: !15441)
!15448 = !DILocation(line: 695, column: 58, scope: !15441)
!15449 = !DILocation(line: 695, column: 68, scope: !15441)
!15450 = !DILocation(line: 695, column: 9, scope: !15441)
!15451 = !DILocation(line: 695, column: 7, scope: !15441)
!15452 = !DILocation(line: 697, column: 7, scope: !15453)
!15453 = distinct !DILexicalBlock(scope: !15441, file: !3, line: 697, column: 7)
!15454 = !DILocation(line: 697, column: 7, scope: !15441)
!15455 = !DILocation(line: 698, column: 4, scope: !15453)
!15456 = !DILocation(line: 699, column: 17, scope: !15441)
!15457 = !DILocation(line: 699, column: 27, scope: !15441)
!15458 = !DILocation(line: 699, column: 3, scope: !15441)
!15459 = !DILocation(line: 699, column: 10, scope: !15441)
!15460 = !DILocation(line: 699, column: 15, scope: !15441)
!15461 = !DILabel(scope: !15441, name: "skip_set_push", file: !3, line: 700)
!15462 = !DILocation(line: 700, column: 1, scope: !15441)
!15463 = !DILocation(line: 701, column: 3, scope: !15441)
!15464 = !DILocation(line: 701, column: 10, scope: !15441)
!15465 = !DILocation(line: 701, column: 23, scope: !15441)
!15466 = !DILocation(line: 702, column: 2, scope: !15441)
!15467 = !DILabel(scope: !15312, name: "out", file: !3, line: 703)
!15468 = !DILocation(line: 703, column: 1, scope: !15312)
!15469 = !DILocation(line: 704, column: 7, scope: !15470)
!15470 = distinct !DILexicalBlock(scope: !15312, file: !3, line: 704, column: 6)
!15471 = !DILocation(line: 704, column: 6, scope: !15312)
!15472 = !DILocation(line: 705, column: 3, scope: !15470)
!15473 = !DILocation(line: 705, column: 9, scope: !15470)
!15474 = !DILocation(line: 705, column: 15, scope: !15470)
!15475 = !DILabel(scope: !15312, name: "unlock", file: !3, line: 706)
!15476 = !DILocation(line: 706, column: 1, scope: !15312)
!15477 = !DILocation(line: 707, column: 16, scope: !15312)
!15478 = !DILocation(line: 707, column: 21, scope: !15312)
!15479 = !DILocation(line: 707, column: 2, scope: !15312)
!15480 = !DILocation(line: 708, column: 9, scope: !15312)
!15481 = !DILocation(line: 708, column: 2, scope: !15312)
!15482 = !DILocation(line: 709, column: 1, scope: !15312)
!15483 = distinct !DISubprogram(name: "esw_add_vlan_action_check", scope: !3, file: !3, line: 608, type: !15484, scopeLine: 610, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!15484 = !DISubroutineType(types: !15485)
!15485 = !{!6, !14298, !304, !304, !304}
!15486 = !DILocalVariable(name: "attr", arg: 1, scope: !15483, file: !3, line: 608, type: !14298)
!15487 = !DILocation(line: 608, column: 65, scope: !15483)
!15488 = !DILocalVariable(name: "push", arg: 2, scope: !15483, file: !3, line: 609, type: !304)
!15489 = !DILocation(line: 609, column: 15, scope: !15483)
!15490 = !DILocalVariable(name: "pop", arg: 3, scope: !15483, file: !3, line: 609, type: !304)
!15491 = !DILocation(line: 609, column: 26, scope: !15483)
!15492 = !DILocalVariable(name: "fwd", arg: 4, scope: !15483, file: !3, line: 609, type: !304)
!15493 = !DILocation(line: 609, column: 36, scope: !15483)
!15494 = !DILocalVariable(name: "in_rep", scope: !15483, file: !3, line: 611, type: !11415)
!15495 = !DILocation(line: 611, column: 27, scope: !15483)
!15496 = !DILocalVariable(name: "out_rep", scope: !15483, file: !3, line: 611, type: !11415)
!15497 = !DILocation(line: 611, column: 36, scope: !15483)
!15498 = !DILocation(line: 613, column: 7, scope: !15499)
!15499 = distinct !DILexicalBlock(scope: !15483, file: !3, line: 613, column: 6)
!15500 = !DILocation(line: 613, column: 12, scope: !15499)
!15501 = !DILocation(line: 613, column: 15, scope: !15499)
!15502 = !DILocation(line: 613, column: 20, scope: !15499)
!15503 = !DILocation(line: 613, column: 24, scope: !15499)
!15504 = !DILocation(line: 613, column: 6, scope: !15483)
!15505 = !DILocation(line: 614, column: 3, scope: !15499)
!15506 = !DILocation(line: 616, column: 12, scope: !15483)
!15507 = !DILocation(line: 616, column: 18, scope: !15483)
!15508 = !DILocation(line: 616, column: 10, scope: !15483)
!15509 = !DILocation(line: 617, column: 12, scope: !15483)
!15510 = !DILocation(line: 617, column: 18, scope: !15483)
!15511 = !DILocation(line: 617, column: 27, scope: !15483)
!15512 = !DILocation(line: 617, column: 10, scope: !15483)
!15513 = !DILocation(line: 619, column: 6, scope: !15514)
!15514 = distinct !DILexicalBlock(scope: !15483, file: !3, line: 619, column: 6)
!15515 = !DILocation(line: 619, column: 11, scope: !15514)
!15516 = !DILocation(line: 619, column: 14, scope: !15514)
!15517 = !DILocation(line: 619, column: 22, scope: !15514)
!15518 = !DILocation(line: 619, column: 28, scope: !15514)
!15519 = !DILocation(line: 619, column: 6, scope: !15483)
!15520 = !DILocation(line: 620, column: 3, scope: !15514)
!15521 = !DILocation(line: 622, column: 6, scope: !15522)
!15522 = distinct !DILexicalBlock(scope: !15483, file: !3, line: 622, column: 6)
!15523 = !DILocation(line: 622, column: 10, scope: !15522)
!15524 = !DILocation(line: 622, column: 13, scope: !15522)
!15525 = !DILocation(line: 622, column: 22, scope: !15522)
!15526 = !DILocation(line: 622, column: 28, scope: !15522)
!15527 = !DILocation(line: 622, column: 6, scope: !15483)
!15528 = !DILocation(line: 623, column: 3, scope: !15522)
!15529 = !DILocation(line: 626, column: 7, scope: !15530)
!15530 = distinct !DILexicalBlock(scope: !15483, file: !3, line: 626, column: 6)
!15531 = !DILocation(line: 626, column: 12, scope: !15530)
!15532 = !DILocation(line: 626, column: 16, scope: !15530)
!15533 = !DILocation(line: 626, column: 20, scope: !15530)
!15534 = !DILocation(line: 626, column: 23, scope: !15530)
!15535 = !DILocation(line: 626, column: 6, scope: !15483)
!15536 = !DILocation(line: 627, column: 7, scope: !15537)
!15537 = distinct !DILexicalBlock(scope: !15530, file: !3, line: 627, column: 7)
!15538 = !DILocation(line: 627, column: 15, scope: !15537)
!15539 = !DILocation(line: 627, column: 20, scope: !15537)
!15540 = !DILocation(line: 627, column: 23, scope: !15537)
!15541 = !DILocation(line: 627, column: 32, scope: !15537)
!15542 = !DILocation(line: 627, column: 38, scope: !15537)
!15543 = !DILocation(line: 627, column: 7, scope: !15530)
!15544 = !DILocation(line: 628, column: 4, scope: !15537)
!15545 = !DILocation(line: 627, column: 41, scope: !15537)
!15546 = !DILocation(line: 633, column: 6, scope: !15547)
!15547 = distinct !DILexicalBlock(scope: !15483, file: !3, line: 633, column: 6)
!15548 = !DILocation(line: 633, column: 11, scope: !15547)
!15549 = !DILocation(line: 633, column: 14, scope: !15547)
!15550 = !DILocation(line: 633, column: 22, scope: !15547)
!15551 = !DILocation(line: 633, column: 36, scope: !15547)
!15552 = !DILocation(line: 633, column: 40, scope: !15547)
!15553 = !DILocation(line: 633, column: 48, scope: !15547)
!15554 = !DILocation(line: 633, column: 56, scope: !15547)
!15555 = !DILocation(line: 633, column: 62, scope: !15547)
!15556 = !DILocation(line: 633, column: 53, scope: !15547)
!15557 = !DILocation(line: 633, column: 6, scope: !15483)
!15558 = !DILocation(line: 634, column: 3, scope: !15547)
!15559 = !DILocation(line: 636, column: 2, scope: !15483)
!15560 = !DILabel(scope: !15483, name: "out_notsupp", file: !3, line: 638)
!15561 = !DILocation(line: 638, column: 1, scope: !15483)
!15562 = !DILocation(line: 639, column: 2, scope: !15483)
!15563 = !DILocation(line: 640, column: 1, scope: !15483)
!15564 = distinct !DISubprogram(name: "esw_vlan_action_get_vport", scope: !3, file: !3, line: 591, type: !15565, scopeLine: 592, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!15565 = !DISubroutineType(types: !15566)
!15566 = !{!11415, !14298, !304, !304}
!15567 = !DILocalVariable(name: "attr", arg: 1, scope: !15564, file: !3, line: 591, type: !14298)
!15568 = !DILocation(line: 591, column: 54, scope: !15564)
!15569 = !DILocalVariable(name: "push", arg: 2, scope: !15564, file: !3, line: 591, type: !304)
!15570 = !DILocation(line: 591, column: 65, scope: !15564)
!15571 = !DILocalVariable(name: "pop", arg: 3, scope: !15564, file: !3, line: 591, type: !304)
!15572 = !DILocation(line: 591, column: 76, scope: !15564)
!15573 = !DILocalVariable(name: "in_rep", scope: !15564, file: !3, line: 593, type: !11415)
!15574 = !DILocation(line: 593, column: 27, scope: !15564)
!15575 = !DILocalVariable(name: "out_rep", scope: !15564, file: !3, line: 593, type: !11415)
!15576 = !DILocation(line: 593, column: 36, scope: !15564)
!15577 = !DILocalVariable(name: "vport", scope: !15564, file: !3, line: 593, type: !11415)
!15578 = !DILocation(line: 593, column: 46, scope: !15564)
!15579 = !DILocation(line: 595, column: 12, scope: !15564)
!15580 = !DILocation(line: 595, column: 18, scope: !15564)
!15581 = !DILocation(line: 595, column: 10, scope: !15564)
!15582 = !DILocation(line: 596, column: 12, scope: !15564)
!15583 = !DILocation(line: 596, column: 18, scope: !15564)
!15584 = !DILocation(line: 596, column: 27, scope: !15564)
!15585 = !DILocation(line: 596, column: 10, scope: !15564)
!15586 = !DILocation(line: 598, column: 6, scope: !15587)
!15587 = distinct !DILexicalBlock(scope: !15564, file: !3, line: 598, column: 6)
!15588 = !DILocation(line: 598, column: 6, scope: !15564)
!15589 = !DILocation(line: 599, column: 11, scope: !15587)
!15590 = !DILocation(line: 599, column: 9, scope: !15587)
!15591 = !DILocation(line: 599, column: 3, scope: !15587)
!15592 = !DILocation(line: 600, column: 11, scope: !15593)
!15593 = distinct !DILexicalBlock(scope: !15587, file: !3, line: 600, column: 11)
!15594 = !DILocation(line: 600, column: 11, scope: !15587)
!15595 = !DILocation(line: 601, column: 11, scope: !15593)
!15596 = !DILocation(line: 601, column: 9, scope: !15593)
!15597 = !DILocation(line: 601, column: 3, scope: !15593)
!15598 = !DILocation(line: 603, column: 11, scope: !15593)
!15599 = !DILocation(line: 603, column: 9, scope: !15593)
!15600 = !DILocation(line: 605, column: 9, scope: !15564)
!15601 = !DILocation(line: 605, column: 2, scope: !15564)
!15602 = distinct !DISubprogram(name: "esw_set_global_vlan_pop", scope: !3, file: !3, line: 571, type: !15603, scopeLine: 572, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!15603 = !DISubroutineType(types: !15604)
!15604 = !{!6, !7, !1403}
!15605 = !DILocalVariable(name: "v", arg: 1, scope: !15606, file: !15607, line: 23, type: !15610)
!15606 = distinct !DISubprogram(name: "arch_atomic_read", scope: !15607, file: !15607, line: 23, type: !15608, scopeLine: 24, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!15607 = !DIFile(filename: "./arch/x86/include/asm/atomic.h", directory: "/home/lizy2001/genbc/linux")
!15608 = !DISubroutineType(types: !15609)
!15609 = !{!6, !15610}
!15610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15611, size: 64)
!15611 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !632)
!15612 = !DILocation(line: 23, column: 61, scope: !15606, inlinedAt: !15613)
!15613 = distinct !DILocation(line: 28, column: 9, scope: !15614, inlinedAt: !15615)
!15614 = distinct !DISubprogram(name: "atomic_read", scope: !12686, file: !12686, line: 25, type: !15608, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!15615 = distinct !DILocation(line: 578, column: 7, scope: !15616)
!15616 = distinct !DILexicalBlock(scope: !15617, file: !3, line: 578, column: 7)
!15617 = distinct !DILexicalBlock(scope: !15618, file: !3, line: 577, column: 71)
!15618 = distinct !DILexicalBlock(scope: !15619, file: !3, line: 577, column: 2)
!15619 = distinct !DILexicalBlock(scope: !15602, file: !3, line: 577, column: 2)
!15620 = !DILocalVariable(name: "v", arg: 1, scope: !15621, file: !12691, line: 69, type: !12694)
!15621 = distinct !DISubprogram(name: "instrument_atomic_read", scope: !12691, file: !12691, line: 69, type: !12692, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!15622 = !DILocation(line: 69, column: 73, scope: !15621, inlinedAt: !15623)
!15623 = distinct !DILocation(line: 27, column: 2, scope: !15614, inlinedAt: !15615)
!15624 = !DILocalVariable(name: "size", arg: 2, scope: !15621, file: !12691, line: 69, type: !132)
!15625 = !DILocation(line: 69, column: 83, scope: !15621, inlinedAt: !15623)
!15626 = !DILocalVariable(name: "v", arg: 1, scope: !15614, file: !12686, line: 25, type: !15610)
!15627 = !DILocation(line: 25, column: 29, scope: !15614, inlinedAt: !15615)
!15628 = !DILocalVariable(name: "esw", arg: 1, scope: !15602, file: !3, line: 571, type: !7)
!15629 = !DILocation(line: 571, column: 57, scope: !15602)
!15630 = !DILocalVariable(name: "val", arg: 2, scope: !15602, file: !3, line: 571, type: !1403)
!15631 = !DILocation(line: 571, column: 65, scope: !15602)
!15632 = !DILocalVariable(name: "rep", scope: !15602, file: !3, line: 573, type: !11415)
!15633 = !DILocation(line: 573, column: 27, scope: !15602)
!15634 = !DILocalVariable(name: "i", scope: !15602, file: !3, line: 574, type: !6)
!15635 = !DILocation(line: 574, column: 6, scope: !15602)
!15636 = !DILocalVariable(name: "err", scope: !15602, file: !3, line: 574, type: !6)
!15637 = !DILocation(line: 574, column: 9, scope: !15602)
!15638 = !DILocation(line: 576, column: 2, scope: !15602)
!15639 = !DILocation(line: 576, column: 2, scope: !15640)
!15640 = distinct !DILexicalBlock(scope: !15641, file: !3, line: 576, column: 2)
!15641 = distinct !DILexicalBlock(scope: !15602, file: !3, line: 576, column: 2)
!15642 = !DILocation(line: 576, column: 2, scope: !15641)
!15643 = !DILocation(line: 577, column: 2, scope: !15619)
!15644 = !DILocation(line: 577, column: 2, scope: !15618)
!15645 = !DILocation(line: 578, column: 20, scope: !15616)
!15646 = !DILocation(line: 578, column: 25, scope: !15616)
!15647 = !DILocation(line: 578, column: 43, scope: !15616)
!15648 = !DILocation(line: 27, column: 25, scope: !15614, inlinedAt: !15615)
!15649 = !DILocation(line: 71, column: 19, scope: !15621, inlinedAt: !15623)
!15650 = !DILocation(line: 71, column: 22, scope: !15621, inlinedAt: !15623)
!15651 = !DILocation(line: 71, column: 2, scope: !15621, inlinedAt: !15623)
!15652 = !DILocation(line: 72, column: 2, scope: !15621, inlinedAt: !15623)
!15653 = !DILocation(line: 28, column: 26, scope: !15614, inlinedAt: !15615)
!15654 = !DILocation(line: 29, column: 9, scope: !15606, inlinedAt: !15613)
!15655 = !DILocation(line: 578, column: 50, scope: !15616)
!15656 = !DILocation(line: 578, column: 7, scope: !15617)
!15657 = !DILocation(line: 579, column: 4, scope: !15616)
!15658 = !DILocation(line: 581, column: 39, scope: !15617)
!15659 = !DILocation(line: 581, column: 44, scope: !15617)
!15660 = !DILocation(line: 581, column: 49, scope: !15617)
!15661 = !DILocation(line: 581, column: 62, scope: !15617)
!15662 = !DILocation(line: 581, column: 9, scope: !15617)
!15663 = !DILocation(line: 581, column: 7, scope: !15617)
!15664 = !DILocation(line: 582, column: 7, scope: !15665)
!15665 = distinct !DILexicalBlock(scope: !15617, file: !3, line: 582, column: 7)
!15666 = !DILocation(line: 582, column: 7, scope: !15617)
!15667 = !DILocation(line: 583, column: 4, scope: !15665)
!15668 = !DILocation(line: 584, column: 2, scope: !15617)
!15669 = distinct !{!15669, !15643, !15670}
!15670 = !DILocation(line: 584, column: 2, scope: !15619)
!15671 = !DILabel(scope: !15602, name: "out", file: !3, line: 586)
!15672 = !DILocation(line: 586, column: 1, scope: !15602)
!15673 = !DILocation(line: 587, column: 9, scope: !15602)
!15674 = !DILocation(line: 587, column: 2, scope: !15602)
!15675 = distinct !DISubprogram(name: "mlx5_eswitch_del_vlan_action", scope: !3, file: !3, line: 711, type: !15313, scopeLine: 713, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!15676 = !DILocalVariable(name: "esw", arg: 1, scope: !15675, file: !3, line: 711, type: !7)
!15677 = !DILocation(line: 711, column: 55, scope: !15675)
!15678 = !DILocalVariable(name: "attr", arg: 2, scope: !15675, file: !3, line: 712, type: !12608)
!15679 = !DILocation(line: 712, column: 29, scope: !15675)
!15680 = !DILocalVariable(name: "offloads", scope: !15675, file: !3, line: 714, type: !15320)
!15681 = !DILocation(line: 714, column: 23, scope: !15675)
!15682 = !DILocation(line: 714, column: 35, scope: !15675)
!15683 = !DILocation(line: 714, column: 40, scope: !15675)
!15684 = !DILocation(line: 714, column: 50, scope: !15675)
!15685 = !DILocalVariable(name: "esw_attr", scope: !15675, file: !3, line: 715, type: !14298)
!15686 = !DILocation(line: 715, column: 29, scope: !15675)
!15687 = !DILocation(line: 715, column: 40, scope: !15675)
!15688 = !DILocation(line: 715, column: 46, scope: !15675)
!15689 = !DILocalVariable(name: "vport", scope: !15675, file: !3, line: 716, type: !11415)
!15690 = !DILocation(line: 716, column: 27, scope: !15675)
!15691 = !DILocalVariable(name: "push", scope: !15675, file: !3, line: 717, type: !304)
!15692 = !DILocation(line: 717, column: 7, scope: !15675)
!15693 = !DILocalVariable(name: "pop", scope: !15675, file: !3, line: 717, type: !304)
!15694 = !DILocation(line: 717, column: 13, scope: !15675)
!15695 = !DILocalVariable(name: "fwd", scope: !15675, file: !3, line: 717, type: !304)
!15696 = !DILocation(line: 717, column: 18, scope: !15675)
!15697 = !DILocalVariable(name: "err", scope: !15675, file: !3, line: 718, type: !6)
!15698 = !DILocation(line: 718, column: 6, scope: !15675)
!15699 = !DILocation(line: 721, column: 42, scope: !15700)
!15700 = distinct !DILexicalBlock(scope: !15675, file: !3, line: 721, column: 6)
!15701 = !DILocation(line: 721, column: 47, scope: !15700)
!15702 = !DILocation(line: 721, column: 6, scope: !15700)
!15703 = !DILocation(line: 721, column: 6, scope: !15675)
!15704 = !DILocation(line: 722, column: 3, scope: !15700)
!15705 = !DILocation(line: 724, column: 8, scope: !15706)
!15706 = distinct !DILexicalBlock(scope: !15675, file: !3, line: 724, column: 6)
!15707 = !DILocation(line: 724, column: 14, scope: !15706)
!15708 = !DILocation(line: 724, column: 20, scope: !15706)
!15709 = !DILocation(line: 724, column: 6, scope: !15675)
!15710 = !DILocation(line: 725, column: 3, scope: !15706)
!15711 = !DILocation(line: 727, column: 12, scope: !15675)
!15712 = !DILocation(line: 727, column: 18, scope: !15675)
!15713 = !DILocation(line: 727, column: 25, scope: !15675)
!15714 = !DILocation(line: 727, column: 10, scope: !15675)
!15715 = !DILocation(line: 727, column: 9, scope: !15675)
!15716 = !DILocation(line: 727, column: 7, scope: !15675)
!15717 = !DILocation(line: 728, column: 12, scope: !15675)
!15718 = !DILocation(line: 728, column: 18, scope: !15675)
!15719 = !DILocation(line: 728, column: 25, scope: !15675)
!15720 = !DILocation(line: 728, column: 10, scope: !15675)
!15721 = !DILocation(line: 728, column: 9, scope: !15675)
!15722 = !DILocation(line: 728, column: 7, scope: !15675)
!15723 = !DILocation(line: 729, column: 12, scope: !15675)
!15724 = !DILocation(line: 729, column: 18, scope: !15675)
!15725 = !DILocation(line: 729, column: 25, scope: !15675)
!15726 = !DILocation(line: 729, column: 10, scope: !15675)
!15727 = !DILocation(line: 729, column: 9, scope: !15675)
!15728 = !DILocation(line: 729, column: 7, scope: !15675)
!15729 = !DILocation(line: 731, column: 14, scope: !15675)
!15730 = !DILocation(line: 731, column: 19, scope: !15675)
!15731 = !DILocation(line: 731, column: 2, scope: !15675)
!15732 = !DILocation(line: 733, column: 36, scope: !15675)
!15733 = !DILocation(line: 733, column: 46, scope: !15675)
!15734 = !DILocation(line: 733, column: 52, scope: !15675)
!15735 = !DILocation(line: 733, column: 10, scope: !15675)
!15736 = !DILocation(line: 733, column: 8, scope: !15675)
!15737 = !DILocation(line: 735, column: 7, scope: !15738)
!15738 = distinct !DILexicalBlock(scope: !15675, file: !3, line: 735, column: 6)
!15739 = !DILocation(line: 735, column: 12, scope: !15738)
!15740 = !DILocation(line: 735, column: 16, scope: !15738)
!15741 = !DILocation(line: 735, column: 20, scope: !15738)
!15742 = !DILocation(line: 735, column: 23, scope: !15738)
!15743 = !DILocation(line: 735, column: 6, scope: !15675)
!15744 = !DILocation(line: 737, column: 7, scope: !15745)
!15745 = distinct !DILexicalBlock(scope: !15746, file: !3, line: 737, column: 7)
!15746 = distinct !DILexicalBlock(scope: !15738, file: !3, line: 735, column: 28)
!15747 = !DILocation(line: 737, column: 17, scope: !15745)
!15748 = !DILocation(line: 737, column: 26, scope: !15745)
!15749 = !DILocation(line: 737, column: 31, scope: !15745)
!15750 = !DILocation(line: 737, column: 37, scope: !15745)
!15751 = !DILocation(line: 737, column: 7, scope: !15746)
!15752 = !DILocation(line: 738, column: 4, scope: !15745)
!15753 = !DILocation(line: 738, column: 11, scope: !15745)
!15754 = !DILocation(line: 738, column: 24, scope: !15745)
!15755 = !DILocation(line: 740, column: 3, scope: !15746)
!15756 = !DILocation(line: 743, column: 6, scope: !15757)
!15757 = distinct !DILexicalBlock(scope: !15675, file: !3, line: 743, column: 6)
!15758 = !DILocation(line: 743, column: 6, scope: !15675)
!15759 = !DILocation(line: 744, column: 3, scope: !15760)
!15760 = distinct !DILexicalBlock(scope: !15757, file: !3, line: 743, column: 12)
!15761 = !DILocation(line: 744, column: 10, scope: !15760)
!15762 = !DILocation(line: 744, column: 23, scope: !15760)
!15763 = !DILocation(line: 745, column: 7, scope: !15764)
!15764 = distinct !DILexicalBlock(scope: !15760, file: !3, line: 745, column: 7)
!15765 = !DILocation(line: 745, column: 14, scope: !15764)
!15766 = !DILocation(line: 745, column: 7, scope: !15760)
!15767 = !DILocation(line: 746, column: 4, scope: !15764)
!15768 = !DILocation(line: 748, column: 3, scope: !15760)
!15769 = !DILocation(line: 748, column: 10, scope: !15760)
!15770 = !DILocation(line: 748, column: 15, scope: !15760)
!15771 = !DILocation(line: 749, column: 39, scope: !15760)
!15772 = !DILocation(line: 749, column: 44, scope: !15760)
!15773 = !DILocation(line: 749, column: 51, scope: !15760)
!15774 = !DILocation(line: 749, column: 9, scope: !15760)
!15775 = !DILocation(line: 749, column: 7, scope: !15760)
!15776 = !DILocation(line: 751, column: 7, scope: !15777)
!15777 = distinct !DILexicalBlock(scope: !15760, file: !3, line: 751, column: 7)
!15778 = !DILocation(line: 751, column: 7, scope: !15760)
!15779 = !DILocation(line: 752, column: 4, scope: !15777)
!15780 = !DILocation(line: 753, column: 2, scope: !15760)
!15781 = !DILabel(scope: !15675, name: "skip_unset_push", file: !3, line: 755)
!15782 = !DILocation(line: 755, column: 1, scope: !15675)
!15783 = !DILocation(line: 756, column: 2, scope: !15675)
!15784 = !DILocation(line: 756, column: 12, scope: !15675)
!15785 = !DILocation(line: 756, column: 34, scope: !15675)
!15786 = !DILocation(line: 757, column: 6, scope: !15787)
!15787 = distinct !DILexicalBlock(scope: !15675, file: !3, line: 757, column: 6)
!15788 = !DILocation(line: 757, column: 16, scope: !15787)
!15789 = !DILocation(line: 757, column: 6, scope: !15675)
!15790 = !DILocation(line: 758, column: 3, scope: !15787)
!15791 = !DILocation(line: 761, column: 32, scope: !15675)
!15792 = !DILocation(line: 761, column: 8, scope: !15675)
!15793 = !DILocation(line: 761, column: 6, scope: !15675)
!15794 = !DILocation(line: 761, column: 2, scope: !15675)
!15795 = !DILabel(scope: !15675, name: "out", file: !3, line: 763)
!15796 = !DILocation(line: 763, column: 1, scope: !15675)
!15797 = !DILocation(line: 764, column: 16, scope: !15675)
!15798 = !DILocation(line: 764, column: 21, scope: !15675)
!15799 = !DILocation(line: 764, column: 2, scope: !15675)
!15800 = !DILocation(line: 765, column: 9, scope: !15675)
!15801 = !DILocation(line: 765, column: 2, scope: !15675)
!15802 = !DILocation(line: 766, column: 1, scope: !15675)
!15803 = distinct !DISubprogram(name: "mlx5_eswitch_add_send_to_vport_rule", scope: !3, file: !3, line: 769, type: !15804, scopeLine: 771, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!15804 = !DISubroutineType(types: !15805)
!15805 = !{!10864, !7, !744, !229}
!15806 = !DILocalVariable(name: "esw", arg: 1, scope: !15803, file: !3, line: 769, type: !7)
!15807 = !DILocation(line: 769, column: 58, scope: !15803)
!15808 = !DILocalVariable(name: "vport", arg: 2, scope: !15803, file: !3, line: 769, type: !744)
!15809 = !DILocation(line: 769, column: 67, scope: !15803)
!15810 = !DILocalVariable(name: "sqn", arg: 3, scope: !15803, file: !3, line: 770, type: !229)
!15811 = !DILocation(line: 770, column: 13, scope: !15803)
!15812 = !DILocalVariable(name: "flow_act", scope: !15803, file: !3, line: 772, type: !12713)
!15813 = !DILocation(line: 772, column: 23, scope: !15803)
!15814 = !DILocalVariable(name: "dest", scope: !15803, file: !3, line: 773, type: !10876)
!15815 = !DILocation(line: 773, column: 31, scope: !15803)
!15816 = !DILocalVariable(name: "flow_rule", scope: !15803, file: !3, line: 774, type: !10864)
!15817 = !DILocation(line: 774, column: 27, scope: !15803)
!15818 = !DILocalVariable(name: "spec", scope: !15803, file: !3, line: 775, type: !12595)
!15819 = !DILocation(line: 775, column: 25, scope: !15803)
!15820 = !DILocalVariable(name: "misc", scope: !15803, file: !3, line: 776, type: !159)
!15821 = !DILocation(line: 776, column: 8, scope: !15803)
!15822 = !DILocation(line: 778, column: 9, scope: !15803)
!15823 = !DILocation(line: 778, column: 7, scope: !15803)
!15824 = !DILocation(line: 779, column: 7, scope: !15825)
!15825 = distinct !DILexicalBlock(scope: !15803, file: !3, line: 779, column: 6)
!15826 = !DILocation(line: 779, column: 6, scope: !15803)
!15827 = !DILocation(line: 780, column: 15, scope: !15828)
!15828 = distinct !DILexicalBlock(scope: !15825, file: !3, line: 779, column: 13)
!15829 = !DILocation(line: 780, column: 13, scope: !15828)
!15830 = !DILocation(line: 781, column: 3, scope: !15828)
!15831 = !DILocation(line: 784, column: 9, scope: !15803)
!15832 = !DILocation(line: 784, column: 7, scope: !15803)
!15833 = !DILocation(line: 785, column: 2, scope: !15803)
!15834 = !DILocalVariable(name: "_v", scope: !15835, file: !3, line: 785, type: !229)
!15835 = distinct !DILexicalBlock(scope: !15803, file: !3, line: 785, column: 2)
!15836 = !DILocation(line: 785, column: 2, scope: !15835)
!15837 = !DILocation(line: 785, column: 2, scope: !15838)
!15838 = distinct !DILexicalBlock(scope: !15835, file: !3, line: 785, column: 2)
!15839 = !DILocation(line: 787, column: 2, scope: !15803)
!15840 = !DILocalVariable(name: "_v", scope: !15841, file: !3, line: 787, type: !229)
!15841 = distinct !DILexicalBlock(scope: !15803, file: !3, line: 787, column: 2)
!15842 = !DILocation(line: 787, column: 2, scope: !15841)
!15843 = !DILocation(line: 787, column: 2, scope: !15844)
!15844 = distinct !DILexicalBlock(scope: !15841, file: !3, line: 787, column: 2)
!15845 = !DILocation(line: 789, column: 9, scope: !15803)
!15846 = !DILocation(line: 789, column: 7, scope: !15803)
!15847 = !DILocation(line: 790, column: 2, scope: !15803)
!15848 = !DILocation(line: 790, column: 2, scope: !15849)
!15849 = distinct !DILexicalBlock(scope: !15803, file: !3, line: 790, column: 2)
!15850 = !DILocation(line: 790, column: 2, scope: !15851)
!15851 = distinct !DILexicalBlock(scope: !15849, file: !3, line: 790, column: 2)
!15852 = !DILocation(line: 791, column: 2, scope: !15803)
!15853 = !DILocation(line: 791, column: 2, scope: !15854)
!15854 = distinct !DILexicalBlock(scope: !15803, file: !3, line: 791, column: 2)
!15855 = !DILocation(line: 791, column: 2, scope: !15856)
!15856 = distinct !DILexicalBlock(scope: !15854, file: !3, line: 791, column: 2)
!15857 = !DILocation(line: 793, column: 2, scope: !15803)
!15858 = !DILocation(line: 793, column: 8, scope: !15803)
!15859 = !DILocation(line: 793, column: 30, scope: !15803)
!15860 = !DILocation(line: 794, column: 7, scope: !15803)
!15861 = !DILocation(line: 794, column: 12, scope: !15803)
!15862 = !DILocation(line: 795, column: 19, scope: !15803)
!15863 = !DILocation(line: 795, column: 7, scope: !15803)
!15864 = !DILocation(line: 795, column: 13, scope: !15803)
!15865 = !DILocation(line: 795, column: 17, scope: !15803)
!15866 = !DILocation(line: 796, column: 11, scope: !15803)
!15867 = !DILocation(line: 796, column: 18, scope: !15803)
!15868 = !DILocation(line: 798, column: 34, scope: !15803)
!15869 = !DILocation(line: 798, column: 39, scope: !15803)
!15870 = !DILocation(line: 798, column: 49, scope: !15803)
!15871 = !DILocation(line: 798, column: 58, scope: !15803)
!15872 = !DILocation(line: 799, column: 6, scope: !15803)
!15873 = !DILocation(line: 798, column: 14, scope: !15803)
!15874 = !DILocation(line: 798, column: 12, scope: !15803)
!15875 = !DILocation(line: 800, column: 13, scope: !15876)
!15876 = distinct !DILexicalBlock(scope: !15803, file: !3, line: 800, column: 6)
!15877 = !DILocation(line: 800, column: 6, scope: !15876)
!15878 = !DILocation(line: 800, column: 6, scope: !15803)
!15879 = !DILocation(line: 801, column: 3, scope: !15876)
!15880 = !DILocation(line: 800, column: 22, scope: !15876)
!15881 = !DILabel(scope: !15803, name: "out", file: !3, line: 802)
!15882 = !DILocation(line: 802, column: 1, scope: !15803)
!15883 = !DILocation(line: 803, column: 9, scope: !15803)
!15884 = !DILocation(line: 803, column: 2, scope: !15803)
!15885 = !DILocation(line: 804, column: 9, scope: !15803)
!15886 = !DILocation(line: 804, column: 2, scope: !15803)
!15887 = distinct !DISubprogram(name: "kvzalloc", scope: !1063, file: !1063, line: 771, type: !15888, scopeLine: 772, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!15888 = !DISubroutineType(types: !15889)
!15889 = !{!159, !132, !628}
!15890 = !DILocalVariable(name: "size", arg: 1, scope: !15887, file: !1063, line: 771, type: !132)
!15891 = !DILocation(line: 771, column: 37, scope: !15887)
!15892 = !DILocalVariable(name: "flags", arg: 2, scope: !15887, file: !1063, line: 771, type: !628)
!15893 = !DILocation(line: 771, column: 49, scope: !15887)
!15894 = !DILocation(line: 773, column: 18, scope: !15887)
!15895 = !DILocation(line: 773, column: 24, scope: !15887)
!15896 = !DILocation(line: 773, column: 30, scope: !15887)
!15897 = !DILocation(line: 773, column: 9, scope: !15887)
!15898 = !DILocation(line: 773, column: 2, scope: !15887)
!15899 = distinct !DISubprogram(name: "mlx5_eswitch_del_send_to_vport_rule", scope: !3, file: !3, line: 808, type: !15900, scopeLine: 809, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!15900 = !DISubroutineType(types: !15901)
!15901 = !{null, !10864}
!15902 = !DILocalVariable(name: "rule", arg: 1, scope: !15899, file: !3, line: 808, type: !10864)
!15903 = !DILocation(line: 808, column: 67, scope: !15899)
!15904 = !DILocation(line: 810, column: 22, scope: !15899)
!15905 = !DILocation(line: 810, column: 2, scope: !15899)
!15906 = !DILocation(line: 811, column: 1, scope: !15899)
!15907 = distinct !DISubprogram(name: "esw_add_restore_rule", scope: !3, file: !3, line: 1091, type: !15908, scopeLine: 1092, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!15908 = !DISubroutineType(types: !15909)
!15909 = !{!10864, !7, !229}
!15910 = !DILocalVariable(name: "esw", arg: 1, scope: !15907, file: !3, line: 1091, type: !7)
!15911 = !DILocation(line: 1091, column: 43, scope: !15907)
!15912 = !DILocalVariable(name: "tag", arg: 2, scope: !15907, file: !3, line: 1091, type: !229)
!15913 = !DILocation(line: 1091, column: 52, scope: !15907)
!15914 = !DILocalVariable(name: "flow_act", scope: !15907, file: !3, line: 1093, type: !12713)
!15915 = !DILocation(line: 1093, column: 23, scope: !15907)
!15916 = !DILocalVariable(name: "ft", scope: !15907, file: !3, line: 1094, type: !10734)
!15917 = !DILocation(line: 1094, column: 26, scope: !15907)
!15918 = !DILocation(line: 1094, column: 31, scope: !15907)
!15919 = !DILocation(line: 1094, column: 36, scope: !15907)
!15920 = !DILocation(line: 1094, column: 45, scope: !15907)
!15921 = !DILocalVariable(name: "flow_context", scope: !15907, file: !3, line: 1095, type: !15922)
!15922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12603, size: 64)
!15923 = !DILocation(line: 1095, column: 28, scope: !15907)
!15924 = !DILocalVariable(name: "flow_rule", scope: !15907, file: !3, line: 1096, type: !10864)
!15925 = !DILocation(line: 1096, column: 27, scope: !15907)
!15926 = !DILocalVariable(name: "dest", scope: !15907, file: !3, line: 1097, type: !10876)
!15927 = !DILocation(line: 1097, column: 31, scope: !15907)
!15928 = !DILocalVariable(name: "spec", scope: !15907, file: !3, line: 1098, type: !12595)
!15929 = !DILocation(line: 1098, column: 25, scope: !15907)
!15930 = !DILocalVariable(name: "misc", scope: !15907, file: !3, line: 1099, type: !159)
!15931 = !DILocation(line: 1099, column: 8, scope: !15907)
!15932 = !DILocation(line: 1101, column: 46, scope: !15933)
!15933 = distinct !DILexicalBlock(scope: !15907, file: !3, line: 1101, column: 6)
!15934 = !DILocation(line: 1101, column: 7, scope: !15933)
!15935 = !DILocation(line: 1101, column: 6, scope: !15907)
!15936 = !DILocation(line: 1102, column: 10, scope: !15933)
!15937 = !DILocation(line: 1102, column: 3, scope: !15933)
!15938 = !DILocation(line: 1104, column: 9, scope: !15907)
!15939 = !DILocation(line: 1104, column: 7, scope: !15907)
!15940 = !DILocation(line: 1105, column: 7, scope: !15941)
!15941 = distinct !DILexicalBlock(scope: !15907, file: !3, line: 1105, column: 6)
!15942 = !DILocation(line: 1105, column: 6, scope: !15907)
!15943 = !DILocation(line: 1106, column: 10, scope: !15941)
!15944 = !DILocation(line: 1106, column: 3, scope: !15941)
!15945 = !DILocation(line: 1108, column: 9, scope: !15907)
!15946 = !DILocation(line: 1108, column: 7, scope: !15907)
!15947 = !DILocation(line: 1110, column: 2, scope: !15907)
!15948 = !DILocalVariable(name: "_v", scope: !15949, file: !3, line: 1110, type: !229)
!15949 = distinct !DILexicalBlock(scope: !15907, file: !3, line: 1110, column: 2)
!15950 = !DILocation(line: 1110, column: 2, scope: !15949)
!15951 = !DILocation(line: 1110, column: 2, scope: !15952)
!15952 = distinct !DILexicalBlock(scope: !15949, file: !3, line: 1110, column: 2)
!15953 = !DILocation(line: 1112, column: 9, scope: !15907)
!15954 = !DILocation(line: 1112, column: 7, scope: !15907)
!15955 = !DILocation(line: 1114, column: 2, scope: !15907)
!15956 = !DILocalVariable(name: "_v", scope: !15957, file: !3, line: 1114, type: !229)
!15957 = distinct !DILexicalBlock(scope: !15907, file: !3, line: 1114, column: 2)
!15958 = !DILocation(line: 1114, column: 2, scope: !15957)
!15959 = !DILocation(line: 1114, column: 2, scope: !15960)
!15960 = distinct !DILexicalBlock(scope: !15957, file: !3, line: 1114, column: 2)
!15961 = !DILocation(line: 1115, column: 2, scope: !15907)
!15962 = !DILocation(line: 1115, column: 8, scope: !15907)
!15963 = !DILocation(line: 1115, column: 30, scope: !15907)
!15964 = !DILocation(line: 1116, column: 11, scope: !15907)
!15965 = !DILocation(line: 1116, column: 18, scope: !15907)
!15966 = !DILocation(line: 1118, column: 24, scope: !15907)
!15967 = !DILocation(line: 1118, column: 29, scope: !15907)
!15968 = !DILocation(line: 1118, column: 38, scope: !15907)
!15969 = !DILocation(line: 1118, column: 11, scope: !15907)
!15970 = !DILocation(line: 1118, column: 22, scope: !15907)
!15971 = !DILocation(line: 1120, column: 18, scope: !15907)
!15972 = !DILocation(line: 1120, column: 24, scope: !15907)
!15973 = !DILocation(line: 1120, column: 15, scope: !15907)
!15974 = !DILocation(line: 1121, column: 2, scope: !15907)
!15975 = !DILocation(line: 1121, column: 16, scope: !15907)
!15976 = !DILocation(line: 1121, column: 22, scope: !15907)
!15977 = !DILocation(line: 1122, column: 27, scope: !15907)
!15978 = !DILocation(line: 1122, column: 2, scope: !15907)
!15979 = !DILocation(line: 1122, column: 16, scope: !15907)
!15980 = !DILocation(line: 1122, column: 25, scope: !15907)
!15981 = !DILocation(line: 1123, column: 7, scope: !15907)
!15982 = !DILocation(line: 1123, column: 12, scope: !15907)
!15983 = !DILocation(line: 1124, column: 12, scope: !15907)
!15984 = !DILocation(line: 1124, column: 17, scope: !15907)
!15985 = !DILocation(line: 1124, column: 26, scope: !15907)
!15986 = !DILocation(line: 1124, column: 7, scope: !15907)
!15987 = !DILocation(line: 1124, column: 10, scope: !15907)
!15988 = !DILocation(line: 1126, column: 34, scope: !15907)
!15989 = !DILocation(line: 1126, column: 38, scope: !15907)
!15990 = !DILocation(line: 1126, column: 14, scope: !15907)
!15991 = !DILocation(line: 1126, column: 12, scope: !15907)
!15992 = !DILocation(line: 1127, column: 8, scope: !15907)
!15993 = !DILocation(line: 1127, column: 2, scope: !15907)
!15994 = !DILocation(line: 1129, column: 13, scope: !15995)
!15995 = distinct !DILexicalBlock(scope: !15907, file: !3, line: 1129, column: 6)
!15996 = !DILocation(line: 1129, column: 6, scope: !15995)
!15997 = !DILocation(line: 1129, column: 6, scope: !15907)
!15998 = !DILocation(line: 1130, column: 3, scope: !15995)
!15999 = !DILocation(line: 1134, column: 9, scope: !15907)
!16000 = !DILocation(line: 1134, column: 2, scope: !15907)
!16001 = !DILocation(line: 1135, column: 1, scope: !15907)
!16002 = distinct !DISubprogram(name: "mlx5_eswitch_reg_c1_loopback_supported", scope: !3, file: !3, line: 813, type: !16003, scopeLine: 814, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!16003 = !DISubroutineType(types: !16004)
!16004 = !{!304, !7}
!16005 = !DILocalVariable(name: "esw", arg: 1, scope: !16002, file: !3, line: 813, type: !7)
!16006 = !DILocation(line: 813, column: 73, scope: !16002)
!16007 = !DILocation(line: 815, column: 9, scope: !16002)
!16008 = !DILocation(line: 815, column: 65, scope: !16002)
!16009 = !DILocation(line: 815, column: 2, scope: !16002)
!16010 = distinct !DISubprogram(name: "kzalloc", scope: !11972, file: !11972, line: 662, type: !15888, scopeLine: 663, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!16011 = !DILocalVariable(name: "s", arg: 1, scope: !16012, file: !11972, line: 445, type: !985)
!16012 = distinct !DISubprogram(name: "kmem_cache_alloc_trace", scope: !11972, file: !11972, line: 445, type: !16013, scopeLine: 447, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!16013 = !DISubroutineType(types: !16014)
!16014 = !{!159, !985, !628, !132}
!16015 = !DILocation(line: 445, column: 72, scope: !16012, inlinedAt: !16016)
!16016 = distinct !DILocation(line: 552, column: 10, scope: !16017, inlinedAt: !16020)
!16017 = distinct !DILexicalBlock(scope: !16018, file: !11972, line: 540, column: 34)
!16018 = distinct !DILexicalBlock(scope: !16019, file: !11972, line: 540, column: 6)
!16019 = distinct !DISubprogram(name: "kmalloc", scope: !11972, file: !11972, line: 538, type: !15888, scopeLine: 539, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!16020 = distinct !DILocation(line: 664, column: 9, scope: !16010)
!16021 = !DILocalVariable(name: "flags", arg: 2, scope: !16012, file: !11972, line: 446, type: !628)
!16022 = !DILocation(line: 446, column: 9, scope: !16012, inlinedAt: !16016)
!16023 = !DILocalVariable(name: "size", arg: 3, scope: !16012, file: !11972, line: 446, type: !132)
!16024 = !DILocation(line: 446, column: 23, scope: !16012, inlinedAt: !16016)
!16025 = !DILocalVariable(name: "ret", scope: !16012, file: !11972, line: 448, type: !159)
!16026 = !DILocation(line: 448, column: 8, scope: !16012, inlinedAt: !16016)
!16027 = !DILocalVariable(name: "flags", arg: 1, scope: !16028, file: !11972, line: 318, type: !628)
!16028 = distinct !DISubprogram(name: "kmalloc_type", scope: !11972, file: !11972, line: 318, type: !16029, scopeLine: 319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!16029 = !DISubroutineType(types: !16030)
!16030 = !{!11971, !628}
!16031 = !DILocation(line: 318, column: 67, scope: !16028, inlinedAt: !16032)
!16032 = distinct !DILocation(line: 553, column: 20, scope: !16017, inlinedAt: !16020)
!16033 = !DILocalVariable(name: "size", arg: 1, scope: !16034, file: !11972, line: 346, type: !132)
!16034 = distinct !DISubprogram(name: "kmalloc_index", scope: !11972, file: !11972, line: 346, type: !16035, scopeLine: 347, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!16035 = !DISubroutineType(types: !16036)
!16036 = !{!199, !132}
!16037 = !DILocation(line: 346, column: 58, scope: !16034, inlinedAt: !16038)
!16038 = distinct !DILocation(line: 547, column: 11, scope: !16017, inlinedAt: !16020)
!16039 = !DILocalVariable(name: "size", arg: 1, scope: !16040, file: !11972, line: 472, type: !132)
!16040 = distinct !DISubprogram(name: "kmalloc_order_trace", scope: !11972, file: !11972, line: 472, type: !16041, scopeLine: 473, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!16041 = !DISubroutineType(types: !16042)
!16042 = !{!159, !132, !628, !199}
!16043 = !DILocation(line: 472, column: 28, scope: !16040, inlinedAt: !16044)
!16044 = distinct !DILocation(line: 481, column: 9, scope: !16045, inlinedAt: !16046)
!16045 = distinct !DISubprogram(name: "kmalloc_large", scope: !11972, file: !11972, line: 478, type: !15888, scopeLine: 479, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!16046 = distinct !DILocation(line: 545, column: 11, scope: !16047, inlinedAt: !16020)
!16047 = distinct !DILexicalBlock(scope: !16017, file: !11972, line: 544, column: 7)
!16048 = !DILocalVariable(name: "flags", arg: 2, scope: !16040, file: !11972, line: 472, type: !628)
!16049 = !DILocation(line: 472, column: 40, scope: !16040, inlinedAt: !16044)
!16050 = !DILocalVariable(name: "order", arg: 3, scope: !16040, file: !11972, line: 472, type: !199)
!16051 = !DILocation(line: 472, column: 60, scope: !16040, inlinedAt: !16044)
!16052 = !DILocalVariable(name: "size", arg: 1, scope: !16045, file: !11972, line: 478, type: !132)
!16053 = !DILocation(line: 478, column: 51, scope: !16045, inlinedAt: !16046)
!16054 = !DILocalVariable(name: "flags", arg: 2, scope: !16045, file: !11972, line: 478, type: !628)
!16055 = !DILocation(line: 478, column: 63, scope: !16045, inlinedAt: !16046)
!16056 = !DILocalVariable(name: "order", scope: !16045, file: !11972, line: 480, type: !199)
!16057 = !DILocation(line: 480, column: 15, scope: !16045, inlinedAt: !16046)
!16058 = !DILocalVariable(name: "size", arg: 1, scope: !16019, file: !11972, line: 538, type: !132)
!16059 = !DILocation(line: 538, column: 45, scope: !16019, inlinedAt: !16020)
!16060 = !DILocalVariable(name: "flags", arg: 2, scope: !16019, file: !11972, line: 538, type: !628)
!16061 = !DILocation(line: 538, column: 57, scope: !16019, inlinedAt: !16020)
!16062 = !DILocalVariable(name: "index", scope: !16017, file: !11972, line: 542, type: !199)
!16063 = !DILocation(line: 542, column: 16, scope: !16017, inlinedAt: !16020)
!16064 = !DILocalVariable(name: "size", arg: 1, scope: !16010, file: !11972, line: 662, type: !132)
!16065 = !DILocation(line: 662, column: 36, scope: !16010)
!16066 = !DILocalVariable(name: "flags", arg: 2, scope: !16010, file: !11972, line: 662, type: !628)
!16067 = !DILocation(line: 662, column: 48, scope: !16010)
!16068 = !DILocation(line: 664, column: 17, scope: !16010)
!16069 = !DILocation(line: 664, column: 23, scope: !16010)
!16070 = !DILocation(line: 664, column: 29, scope: !16010)
!16071 = !DILocation(line: 540, column: 27, scope: !16018, inlinedAt: !16020)
!16072 = !DILocation(line: 540, column: 6, scope: !16018, inlinedAt: !16020)
!16073 = !DILocation(line: 540, column: 6, scope: !16019, inlinedAt: !16020)
!16074 = !DILocation(line: 544, column: 7, scope: !16047, inlinedAt: !16020)
!16075 = !DILocation(line: 544, column: 12, scope: !16047, inlinedAt: !16020)
!16076 = !DILocation(line: 544, column: 7, scope: !16017, inlinedAt: !16020)
!16077 = !DILocation(line: 545, column: 25, scope: !16047, inlinedAt: !16020)
!16078 = !DILocation(line: 545, column: 31, scope: !16047, inlinedAt: !16020)
!16079 = !DILocation(line: 480, column: 33, scope: !16045, inlinedAt: !16046)
!16080 = !DILocation(line: 480, column: 23, scope: !16045, inlinedAt: !16046)
!16081 = !DILocation(line: 481, column: 29, scope: !16045, inlinedAt: !16046)
!16082 = !DILocation(line: 481, column: 35, scope: !16045, inlinedAt: !16046)
!16083 = !DILocation(line: 481, column: 42, scope: !16045, inlinedAt: !16046)
!16084 = !DILocation(line: 474, column: 23, scope: !16040, inlinedAt: !16044)
!16085 = !DILocation(line: 474, column: 29, scope: !16040, inlinedAt: !16044)
!16086 = !DILocation(line: 474, column: 36, scope: !16040, inlinedAt: !16044)
!16087 = !DILocation(line: 474, column: 9, scope: !16040, inlinedAt: !16044)
!16088 = !DILocation(line: 545, column: 4, scope: !16047, inlinedAt: !16020)
!16089 = !DILocation(line: 547, column: 25, scope: !16017, inlinedAt: !16020)
!16090 = !DILocation(line: 348, column: 7, scope: !16091, inlinedAt: !16038)
!16091 = distinct !DILexicalBlock(scope: !16034, file: !11972, line: 348, column: 6)
!16092 = !DILocation(line: 348, column: 6, scope: !16034, inlinedAt: !16038)
!16093 = !DILocation(line: 349, column: 3, scope: !16091, inlinedAt: !16038)
!16094 = !DILocation(line: 351, column: 6, scope: !16095, inlinedAt: !16038)
!16095 = distinct !DILexicalBlock(scope: !16034, file: !11972, line: 351, column: 6)
!16096 = !DILocation(line: 351, column: 11, scope: !16095, inlinedAt: !16038)
!16097 = !DILocation(line: 351, column: 6, scope: !16034, inlinedAt: !16038)
!16098 = !DILocation(line: 352, column: 3, scope: !16095, inlinedAt: !16038)
!16099 = !DILocation(line: 354, column: 32, scope: !16100, inlinedAt: !16038)
!16100 = distinct !DILexicalBlock(scope: !16034, file: !11972, line: 354, column: 6)
!16101 = !DILocation(line: 354, column: 37, scope: !16100, inlinedAt: !16038)
!16102 = !DILocation(line: 354, column: 42, scope: !16100, inlinedAt: !16038)
!16103 = !DILocation(line: 354, column: 45, scope: !16100, inlinedAt: !16038)
!16104 = !DILocation(line: 354, column: 50, scope: !16100, inlinedAt: !16038)
!16105 = !DILocation(line: 354, column: 6, scope: !16034, inlinedAt: !16038)
!16106 = !DILocation(line: 355, column: 3, scope: !16100, inlinedAt: !16038)
!16107 = !DILocation(line: 356, column: 32, scope: !16108, inlinedAt: !16038)
!16108 = distinct !DILexicalBlock(scope: !16034, file: !11972, line: 356, column: 6)
!16109 = !DILocation(line: 356, column: 37, scope: !16108, inlinedAt: !16038)
!16110 = !DILocation(line: 356, column: 43, scope: !16108, inlinedAt: !16038)
!16111 = !DILocation(line: 356, column: 46, scope: !16108, inlinedAt: !16038)
!16112 = !DILocation(line: 356, column: 51, scope: !16108, inlinedAt: !16038)
!16113 = !DILocation(line: 356, column: 6, scope: !16034, inlinedAt: !16038)
!16114 = !DILocation(line: 357, column: 3, scope: !16108, inlinedAt: !16038)
!16115 = !DILocation(line: 358, column: 6, scope: !16116, inlinedAt: !16038)
!16116 = distinct !DILexicalBlock(scope: !16034, file: !11972, line: 358, column: 6)
!16117 = !DILocation(line: 358, column: 11, scope: !16116, inlinedAt: !16038)
!16118 = !DILocation(line: 358, column: 6, scope: !16034, inlinedAt: !16038)
!16119 = !DILocation(line: 358, column: 26, scope: !16116, inlinedAt: !16038)
!16120 = !DILocation(line: 359, column: 6, scope: !16121, inlinedAt: !16038)
!16121 = distinct !DILexicalBlock(scope: !16034, file: !11972, line: 359, column: 6)
!16122 = !DILocation(line: 359, column: 11, scope: !16121, inlinedAt: !16038)
!16123 = !DILocation(line: 359, column: 6, scope: !16034, inlinedAt: !16038)
!16124 = !DILocation(line: 359, column: 26, scope: !16121, inlinedAt: !16038)
!16125 = !DILocation(line: 360, column: 6, scope: !16126, inlinedAt: !16038)
!16126 = distinct !DILexicalBlock(scope: !16034, file: !11972, line: 360, column: 6)
!16127 = !DILocation(line: 360, column: 11, scope: !16126, inlinedAt: !16038)
!16128 = !DILocation(line: 360, column: 6, scope: !16034, inlinedAt: !16038)
!16129 = !DILocation(line: 360, column: 26, scope: !16126, inlinedAt: !16038)
!16130 = !DILocation(line: 361, column: 6, scope: !16131, inlinedAt: !16038)
!16131 = distinct !DILexicalBlock(scope: !16034, file: !11972, line: 361, column: 6)
!16132 = !DILocation(line: 361, column: 11, scope: !16131, inlinedAt: !16038)
!16133 = !DILocation(line: 361, column: 6, scope: !16034, inlinedAt: !16038)
!16134 = !DILocation(line: 361, column: 26, scope: !16131, inlinedAt: !16038)
!16135 = !DILocation(line: 362, column: 6, scope: !16136, inlinedAt: !16038)
!16136 = distinct !DILexicalBlock(scope: !16034, file: !11972, line: 362, column: 6)
!16137 = !DILocation(line: 362, column: 11, scope: !16136, inlinedAt: !16038)
!16138 = !DILocation(line: 362, column: 6, scope: !16034, inlinedAt: !16038)
!16139 = !DILocation(line: 362, column: 26, scope: !16136, inlinedAt: !16038)
!16140 = !DILocation(line: 363, column: 6, scope: !16141, inlinedAt: !16038)
!16141 = distinct !DILexicalBlock(scope: !16034, file: !11972, line: 363, column: 6)
!16142 = !DILocation(line: 363, column: 11, scope: !16141, inlinedAt: !16038)
!16143 = !DILocation(line: 363, column: 6, scope: !16034, inlinedAt: !16038)
!16144 = !DILocation(line: 363, column: 26, scope: !16141, inlinedAt: !16038)
!16145 = !DILocation(line: 364, column: 6, scope: !16146, inlinedAt: !16038)
!16146 = distinct !DILexicalBlock(scope: !16034, file: !11972, line: 364, column: 6)
!16147 = !DILocation(line: 364, column: 11, scope: !16146, inlinedAt: !16038)
!16148 = !DILocation(line: 364, column: 6, scope: !16034, inlinedAt: !16038)
!16149 = !DILocation(line: 364, column: 26, scope: !16146, inlinedAt: !16038)
!16150 = !DILocation(line: 365, column: 6, scope: !16151, inlinedAt: !16038)
!16151 = distinct !DILexicalBlock(scope: !16034, file: !11972, line: 365, column: 6)
!16152 = !DILocation(line: 365, column: 11, scope: !16151, inlinedAt: !16038)
!16153 = !DILocation(line: 365, column: 6, scope: !16034, inlinedAt: !16038)
!16154 = !DILocation(line: 365, column: 26, scope: !16151, inlinedAt: !16038)
!16155 = !DILocation(line: 366, column: 6, scope: !16156, inlinedAt: !16038)
!16156 = distinct !DILexicalBlock(scope: !16034, file: !11972, line: 366, column: 6)
!16157 = !DILocation(line: 366, column: 11, scope: !16156, inlinedAt: !16038)
!16158 = !DILocation(line: 366, column: 6, scope: !16034, inlinedAt: !16038)
!16159 = !DILocation(line: 366, column: 26, scope: !16156, inlinedAt: !16038)
!16160 = !DILocation(line: 367, column: 6, scope: !16161, inlinedAt: !16038)
!16161 = distinct !DILexicalBlock(scope: !16034, file: !11972, line: 367, column: 6)
!16162 = !DILocation(line: 367, column: 11, scope: !16161, inlinedAt: !16038)
!16163 = !DILocation(line: 367, column: 6, scope: !16034, inlinedAt: !16038)
!16164 = !DILocation(line: 367, column: 26, scope: !16161, inlinedAt: !16038)
!16165 = !DILocation(line: 368, column: 6, scope: !16166, inlinedAt: !16038)
!16166 = distinct !DILexicalBlock(scope: !16034, file: !11972, line: 368, column: 6)
!16167 = !DILocation(line: 368, column: 11, scope: !16166, inlinedAt: !16038)
!16168 = !DILocation(line: 368, column: 6, scope: !16034, inlinedAt: !16038)
!16169 = !DILocation(line: 368, column: 26, scope: !16166, inlinedAt: !16038)
!16170 = !DILocation(line: 369, column: 6, scope: !16171, inlinedAt: !16038)
!16171 = distinct !DILexicalBlock(scope: !16034, file: !11972, line: 369, column: 6)
!16172 = !DILocation(line: 369, column: 11, scope: !16171, inlinedAt: !16038)
!16173 = !DILocation(line: 369, column: 6, scope: !16034, inlinedAt: !16038)
!16174 = !DILocation(line: 369, column: 26, scope: !16171, inlinedAt: !16038)
!16175 = !DILocation(line: 370, column: 6, scope: !16176, inlinedAt: !16038)
!16176 = distinct !DILexicalBlock(scope: !16034, file: !11972, line: 370, column: 6)
!16177 = !DILocation(line: 370, column: 11, scope: !16176, inlinedAt: !16038)
!16178 = !DILocation(line: 370, column: 6, scope: !16034, inlinedAt: !16038)
!16179 = !DILocation(line: 370, column: 26, scope: !16176, inlinedAt: !16038)
!16180 = !DILocation(line: 371, column: 6, scope: !16181, inlinedAt: !16038)
!16181 = distinct !DILexicalBlock(scope: !16034, file: !11972, line: 371, column: 6)
!16182 = !DILocation(line: 371, column: 11, scope: !16181, inlinedAt: !16038)
!16183 = !DILocation(line: 371, column: 6, scope: !16034, inlinedAt: !16038)
!16184 = !DILocation(line: 371, column: 26, scope: !16181, inlinedAt: !16038)
!16185 = !DILocation(line: 372, column: 6, scope: !16186, inlinedAt: !16038)
!16186 = distinct !DILexicalBlock(scope: !16034, file: !11972, line: 372, column: 6)
!16187 = !DILocation(line: 372, column: 11, scope: !16186, inlinedAt: !16038)
!16188 = !DILocation(line: 372, column: 6, scope: !16034, inlinedAt: !16038)
!16189 = !DILocation(line: 372, column: 26, scope: !16186, inlinedAt: !16038)
!16190 = !DILocation(line: 373, column: 6, scope: !16191, inlinedAt: !16038)
!16191 = distinct !DILexicalBlock(scope: !16034, file: !11972, line: 373, column: 6)
!16192 = !DILocation(line: 373, column: 11, scope: !16191, inlinedAt: !16038)
!16193 = !DILocation(line: 373, column: 6, scope: !16034, inlinedAt: !16038)
!16194 = !DILocation(line: 373, column: 26, scope: !16191, inlinedAt: !16038)
!16195 = !DILocation(line: 374, column: 6, scope: !16196, inlinedAt: !16038)
!16196 = distinct !DILexicalBlock(scope: !16034, file: !11972, line: 374, column: 6)
!16197 = !DILocation(line: 374, column: 11, scope: !16196, inlinedAt: !16038)
!16198 = !DILocation(line: 374, column: 6, scope: !16034, inlinedAt: !16038)
!16199 = !DILocation(line: 374, column: 26, scope: !16196, inlinedAt: !16038)
!16200 = !DILocation(line: 375, column: 6, scope: !16201, inlinedAt: !16038)
!16201 = distinct !DILexicalBlock(scope: !16034, file: !11972, line: 375, column: 6)
!16202 = !DILocation(line: 375, column: 11, scope: !16201, inlinedAt: !16038)
!16203 = !DILocation(line: 375, column: 6, scope: !16034, inlinedAt: !16038)
!16204 = !DILocation(line: 375, column: 27, scope: !16201, inlinedAt: !16038)
!16205 = !DILocation(line: 376, column: 6, scope: !16206, inlinedAt: !16038)
!16206 = distinct !DILexicalBlock(scope: !16034, file: !11972, line: 376, column: 6)
!16207 = !DILocation(line: 376, column: 11, scope: !16206, inlinedAt: !16038)
!16208 = !DILocation(line: 376, column: 6, scope: !16034, inlinedAt: !16038)
!16209 = !DILocation(line: 376, column: 32, scope: !16206, inlinedAt: !16038)
!16210 = !DILocation(line: 377, column: 6, scope: !16211, inlinedAt: !16038)
!16211 = distinct !DILexicalBlock(scope: !16034, file: !11972, line: 377, column: 6)
!16212 = !DILocation(line: 377, column: 11, scope: !16211, inlinedAt: !16038)
!16213 = !DILocation(line: 377, column: 6, scope: !16034, inlinedAt: !16038)
!16214 = !DILocation(line: 377, column: 32, scope: !16211, inlinedAt: !16038)
!16215 = !DILocation(line: 378, column: 6, scope: !16216, inlinedAt: !16038)
!16216 = distinct !DILexicalBlock(scope: !16034, file: !11972, line: 378, column: 6)
!16217 = !DILocation(line: 378, column: 11, scope: !16216, inlinedAt: !16038)
!16218 = !DILocation(line: 378, column: 6, scope: !16034, inlinedAt: !16038)
!16219 = !DILocation(line: 378, column: 32, scope: !16216, inlinedAt: !16038)
!16220 = !DILocation(line: 379, column: 6, scope: !16221, inlinedAt: !16038)
!16221 = distinct !DILexicalBlock(scope: !16034, file: !11972, line: 379, column: 6)
!16222 = !DILocation(line: 379, column: 11, scope: !16221, inlinedAt: !16038)
!16223 = !DILocation(line: 379, column: 6, scope: !16034, inlinedAt: !16038)
!16224 = !DILocation(line: 379, column: 33, scope: !16221, inlinedAt: !16038)
!16225 = !DILocation(line: 380, column: 6, scope: !16226, inlinedAt: !16038)
!16226 = distinct !DILexicalBlock(scope: !16034, file: !11972, line: 380, column: 6)
!16227 = !DILocation(line: 380, column: 11, scope: !16226, inlinedAt: !16038)
!16228 = !DILocation(line: 380, column: 6, scope: !16034, inlinedAt: !16038)
!16229 = !DILocation(line: 380, column: 33, scope: !16226, inlinedAt: !16038)
!16230 = !DILocation(line: 381, column: 6, scope: !16231, inlinedAt: !16038)
!16231 = distinct !DILexicalBlock(scope: !16034, file: !11972, line: 381, column: 6)
!16232 = !DILocation(line: 381, column: 11, scope: !16231, inlinedAt: !16038)
!16233 = !DILocation(line: 381, column: 6, scope: !16034, inlinedAt: !16038)
!16234 = !DILocation(line: 381, column: 33, scope: !16231, inlinedAt: !16038)
!16235 = !DILocation(line: 382, column: 2, scope: !16236, inlinedAt: !16038)
!16236 = distinct !DILexicalBlock(scope: !16237, file: !11972, line: 382, column: 2)
!16237 = distinct !DILexicalBlock(scope: !16034, file: !11972, line: 382, column: 2)
!16238 = !{i32 -2142321464, i32 -2142321435, i32 -2142321389, i32 -2142321331, i32 -2142321277, i32 -2142321223, i32 -2142321168, i32 -2142321137}
!16239 = !DILocation(line: 382, column: 2, scope: !16240, inlinedAt: !16038)
!16240 = distinct !DILexicalBlock(scope: !16241, file: !11972, line: 382, column: 2)
!16241 = distinct !DILexicalBlock(scope: !16237, file: !11972, line: 382, column: 2)
!16242 = !{i32 -2142320694, i32 -2142320687, i32 -2142320633, i32 -2142320602, i32 -2142320572}
!16243 = !DILocation(line: 382, column: 2, scope: !16241, inlinedAt: !16038)
!16244 = !DILocation(line: 386, column: 1, scope: !16034, inlinedAt: !16038)
!16245 = !DILocation(line: 547, column: 9, scope: !16017, inlinedAt: !16020)
!16246 = !DILocation(line: 549, column: 8, scope: !16247, inlinedAt: !16020)
!16247 = distinct !DILexicalBlock(scope: !16017, file: !11972, line: 549, column: 7)
!16248 = !DILocation(line: 549, column: 7, scope: !16017, inlinedAt: !16020)
!16249 = !DILocation(line: 550, column: 4, scope: !16247, inlinedAt: !16020)
!16250 = !DILocation(line: 553, column: 33, scope: !16017, inlinedAt: !16020)
!16251 = !DILocation(line: 325, column: 6, scope: !16252, inlinedAt: !16032)
!16252 = distinct !DILexicalBlock(scope: !16028, file: !11972, line: 325, column: 6)
!16253 = !DILocation(line: 325, column: 6, scope: !16028, inlinedAt: !16032)
!16254 = !DILocation(line: 326, column: 3, scope: !16252, inlinedAt: !16032)
!16255 = !DILocation(line: 332, column: 9, scope: !16028, inlinedAt: !16032)
!16256 = !DILocation(line: 332, column: 15, scope: !16028, inlinedAt: !16032)
!16257 = !DILocation(line: 332, column: 2, scope: !16028, inlinedAt: !16032)
!16258 = !DILocation(line: 336, column: 1, scope: !16028, inlinedAt: !16032)
!16259 = !DILocation(line: 553, column: 5, scope: !16017, inlinedAt: !16020)
!16260 = !DILocation(line: 553, column: 41, scope: !16017, inlinedAt: !16020)
!16261 = !DILocation(line: 554, column: 5, scope: !16017, inlinedAt: !16020)
!16262 = !DILocation(line: 554, column: 12, scope: !16017, inlinedAt: !16020)
!16263 = !DILocation(line: 448, column: 31, scope: !16012, inlinedAt: !16016)
!16264 = !DILocation(line: 448, column: 34, scope: !16012, inlinedAt: !16016)
!16265 = !DILocation(line: 448, column: 14, scope: !16012, inlinedAt: !16016)
!16266 = !DILocation(line: 450, column: 22, scope: !16012, inlinedAt: !16016)
!16267 = !DILocation(line: 450, column: 25, scope: !16012, inlinedAt: !16016)
!16268 = !DILocation(line: 450, column: 30, scope: !16012, inlinedAt: !16016)
!16269 = !DILocation(line: 450, column: 36, scope: !16012, inlinedAt: !16016)
!16270 = !DILocation(line: 450, column: 8, scope: !16012, inlinedAt: !16016)
!16271 = !DILocation(line: 450, column: 6, scope: !16012, inlinedAt: !16016)
!16272 = !DILocation(line: 451, column: 9, scope: !16012, inlinedAt: !16016)
!16273 = !DILocation(line: 552, column: 3, scope: !16017, inlinedAt: !16020)
!16274 = !DILocation(line: 557, column: 19, scope: !16019, inlinedAt: !16020)
!16275 = !DILocation(line: 557, column: 25, scope: !16019, inlinedAt: !16020)
!16276 = !DILocation(line: 557, column: 9, scope: !16019, inlinedAt: !16020)
!16277 = !DILocation(line: 557, column: 2, scope: !16019, inlinedAt: !16020)
!16278 = !DILocation(line: 558, column: 1, scope: !16019, inlinedAt: !16020)
!16279 = !DILocation(line: 664, column: 2, scope: !16010)
!16280 = distinct !DISubprogram(name: "esw_get_max_restore_tag", scope: !3, file: !3, line: 1138, type: !16281, scopeLine: 1139, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!16281 = !DISubroutineType(types: !16282)
!16282 = !{!229, !7}
!16283 = !DILocalVariable(name: "esw", arg: 1, scope: !16280, file: !3, line: 1138, type: !7)
!16284 = !DILocation(line: 1138, column: 46, scope: !16280)
!16285 = !DILocation(line: 1140, column: 2, scope: !16280)
!16286 = distinct !DISubprogram(name: "mlx5_eswitch_create_vport_rx_rule", scope: !3, file: !3, line: 1548, type: !16287, scopeLine: 1550, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!16287 = !DISubroutineType(types: !16288)
!16288 = !{!10864, !7, !744, !16289}
!16289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10876, size: 64)
!16290 = !DILocalVariable(name: "esw", arg: 1, scope: !16286, file: !3, line: 1548, type: !7)
!16291 = !DILocation(line: 1548, column: 56, scope: !16286)
!16292 = !DILocalVariable(name: "vport", arg: 2, scope: !16286, file: !3, line: 1548, type: !744)
!16293 = !DILocation(line: 1548, column: 65, scope: !16286)
!16294 = !DILocalVariable(name: "dest", arg: 3, scope: !16286, file: !3, line: 1549, type: !16289)
!16295 = !DILocation(line: 1549, column: 37, scope: !16286)
!16296 = !DILocalVariable(name: "flow_act", scope: !16286, file: !3, line: 1551, type: !12713)
!16297 = !DILocation(line: 1551, column: 23, scope: !16286)
!16298 = !DILocalVariable(name: "flow_rule", scope: !16286, file: !3, line: 1552, type: !10864)
!16299 = !DILocation(line: 1552, column: 27, scope: !16286)
!16300 = !DILocalVariable(name: "spec", scope: !16286, file: !3, line: 1553, type: !12595)
!16301 = !DILocation(line: 1553, column: 25, scope: !16286)
!16302 = !DILocalVariable(name: "misc", scope: !16286, file: !3, line: 1554, type: !159)
!16303 = !DILocation(line: 1554, column: 8, scope: !16286)
!16304 = !DILocation(line: 1556, column: 9, scope: !16286)
!16305 = !DILocation(line: 1556, column: 7, scope: !16286)
!16306 = !DILocation(line: 1557, column: 7, scope: !16307)
!16307 = distinct !DILexicalBlock(scope: !16286, file: !3, line: 1557, column: 6)
!16308 = !DILocation(line: 1557, column: 6, scope: !16286)
!16309 = !DILocation(line: 1558, column: 15, scope: !16310)
!16310 = distinct !DILexicalBlock(scope: !16307, file: !3, line: 1557, column: 13)
!16311 = !DILocation(line: 1558, column: 13, scope: !16310)
!16312 = !DILocation(line: 1559, column: 3, scope: !16310)
!16313 = !DILocation(line: 1562, column: 48, scope: !16314)
!16314 = distinct !DILexicalBlock(scope: !16286, file: !3, line: 1562, column: 6)
!16315 = !DILocation(line: 1562, column: 6, scope: !16314)
!16316 = !DILocation(line: 1562, column: 6, scope: !16286)
!16317 = !DILocation(line: 1563, column: 10, scope: !16318)
!16318 = distinct !DILexicalBlock(scope: !16314, file: !3, line: 1562, column: 54)
!16319 = !DILocation(line: 1563, column: 8, scope: !16318)
!16320 = !DILocation(line: 1564, column: 3, scope: !16318)
!16321 = !DILocalVariable(name: "_v", scope: !16322, file: !3, line: 1564, type: !229)
!16322 = distinct !DILexicalBlock(scope: !16318, file: !3, line: 1564, column: 3)
!16323 = !DILocation(line: 1564, column: 3, scope: !16322)
!16324 = !DILocation(line: 1564, column: 3, scope: !16325)
!16325 = distinct !DILexicalBlock(scope: !16322, file: !3, line: 1564, column: 3)
!16326 = !DILocation(line: 1567, column: 10, scope: !16318)
!16327 = !DILocation(line: 1567, column: 8, scope: !16318)
!16328 = !DILocation(line: 1568, column: 3, scope: !16318)
!16329 = !DILocalVariable(name: "_v", scope: !16330, file: !3, line: 1568, type: !229)
!16330 = distinct !DILexicalBlock(scope: !16318, file: !3, line: 1568, column: 3)
!16331 = !DILocation(line: 1568, column: 3, scope: !16330)
!16332 = !DILocation(line: 1568, column: 3, scope: !16333)
!16333 = distinct !DILexicalBlock(scope: !16330, file: !3, line: 1568, column: 3)
!16334 = !DILocation(line: 1571, column: 3, scope: !16318)
!16335 = !DILocation(line: 1571, column: 9, scope: !16318)
!16336 = !DILocation(line: 1571, column: 31, scope: !16318)
!16337 = !DILocation(line: 1572, column: 2, scope: !16318)
!16338 = !DILocation(line: 1573, column: 10, scope: !16339)
!16339 = distinct !DILexicalBlock(scope: !16314, file: !3, line: 1572, column: 9)
!16340 = !DILocation(line: 1573, column: 8, scope: !16339)
!16341 = !DILocation(line: 1574, column: 3, scope: !16339)
!16342 = !DILocalVariable(name: "_v", scope: !16343, file: !3, line: 1574, type: !229)
!16343 = distinct !DILexicalBlock(scope: !16339, file: !3, line: 1574, column: 3)
!16344 = !DILocation(line: 1574, column: 3, scope: !16343)
!16345 = !DILocation(line: 1574, column: 3, scope: !16346)
!16346 = distinct !DILexicalBlock(scope: !16343, file: !3, line: 1574, column: 3)
!16347 = !DILocation(line: 1576, column: 10, scope: !16339)
!16348 = !DILocation(line: 1576, column: 8, scope: !16339)
!16349 = !DILocation(line: 1577, column: 3, scope: !16339)
!16350 = !DILocation(line: 1577, column: 3, scope: !16351)
!16351 = distinct !DILexicalBlock(scope: !16339, file: !3, line: 1577, column: 3)
!16352 = !DILocation(line: 1577, column: 3, scope: !16353)
!16353 = distinct !DILexicalBlock(scope: !16351, file: !3, line: 1577, column: 3)
!16354 = !DILocation(line: 1579, column: 3, scope: !16339)
!16355 = !DILocation(line: 1579, column: 9, scope: !16339)
!16356 = !DILocation(line: 1579, column: 31, scope: !16339)
!16357 = !DILocation(line: 1582, column: 11, scope: !16286)
!16358 = !DILocation(line: 1582, column: 18, scope: !16286)
!16359 = !DILocation(line: 1583, column: 34, scope: !16286)
!16360 = !DILocation(line: 1583, column: 39, scope: !16286)
!16361 = !DILocation(line: 1583, column: 48, scope: !16286)
!16362 = !DILocation(line: 1583, column: 61, scope: !16286)
!16363 = !DILocation(line: 1584, column: 17, scope: !16286)
!16364 = !DILocation(line: 1583, column: 14, scope: !16286)
!16365 = !DILocation(line: 1583, column: 12, scope: !16286)
!16366 = !DILocation(line: 1585, column: 13, scope: !16367)
!16367 = distinct !DILexicalBlock(scope: !16286, file: !3, line: 1585, column: 6)
!16368 = !DILocation(line: 1585, column: 6, scope: !16367)
!16369 = !DILocation(line: 1585, column: 6, scope: !16286)
!16370 = !DILocation(line: 1586, column: 3, scope: !16371)
!16371 = distinct !DILexicalBlock(scope: !16367, file: !3, line: 1585, column: 25)
!16372 = !DILocation(line: 1587, column: 3, scope: !16371)
!16373 = !DILocation(line: 1585, column: 22, scope: !16367)
!16374 = !DILabel(scope: !16286, name: "out", file: !3, line: 1590)
!16375 = !DILocation(line: 1590, column: 1, scope: !16286)
!16376 = !DILocation(line: 1591, column: 9, scope: !16286)
!16377 = !DILocation(line: 1591, column: 2, scope: !16286)
!16378 = !DILocation(line: 1592, column: 9, scope: !16286)
!16379 = !DILocation(line: 1592, column: 2, scope: !16286)
!16380 = distinct !DISubprogram(name: "mlx5_eswitch_vport_match_metadata_enabled", scope: !3, file: !3, line: 2811, type: !16381, scopeLine: 2812, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!16381 = !DISubroutineType(types: !16382)
!16382 = !{!304, !16383}
!16383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16384, size: 64)
!16384 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8)
!16385 = !DILocalVariable(name: "esw", arg: 1, scope: !16380, file: !3, line: 2811, type: !16383)
!16386 = !DILocation(line: 2811, column: 75, scope: !16380)
!16387 = !DILocation(line: 2813, column: 12, scope: !16380)
!16388 = !DILocation(line: 2813, column: 17, scope: !16380)
!16389 = !DILocation(line: 2813, column: 23, scope: !16380)
!16390 = !DILocation(line: 2813, column: 10, scope: !16380)
!16391 = !DILocation(line: 2813, column: 9, scope: !16380)
!16392 = !DILocation(line: 2813, column: 2, scope: !16380)
!16393 = distinct !DISubprogram(name: "mlx5_eswitch_get_vport_metadata_for_match", scope: !3, file: !3, line: 2817, type: !16394, scopeLine: 2819, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!16394 = !DISubroutineType(types: !16395)
!16395 = !{!229, !7, !744}
!16396 = !DILocalVariable(name: "esw", arg: 1, scope: !16393, file: !3, line: 2817, type: !7)
!16397 = !DILocation(line: 2817, column: 68, scope: !16393)
!16398 = !DILocalVariable(name: "vport_num", arg: 2, scope: !16393, file: !3, line: 2818, type: !744)
!16399 = !DILocation(line: 2818, column: 16, scope: !16393)
!16400 = !DILocalVariable(name: "vport", scope: !16393, file: !3, line: 2820, type: !11306)
!16401 = !DILocation(line: 2820, column: 21, scope: !16393)
!16402 = !DILocation(line: 2820, column: 52, scope: !16393)
!16403 = !DILocation(line: 2820, column: 57, scope: !16393)
!16404 = !DILocation(line: 2820, column: 29, scope: !16393)
!16405 = !DILocalVariable(name: "__ret_warn_on", scope: !16406, file: !3, line: 2822, type: !6)
!16406 = distinct !DILexicalBlock(scope: !16407, file: !3, line: 2822, column: 6)
!16407 = distinct !DILexicalBlock(scope: !16393, file: !3, line: 2822, column: 6)
!16408 = !DILocation(line: 2822, column: 6, scope: !16406)
!16409 = !DILocation(line: 2822, column: 6, scope: !16410)
!16410 = distinct !DILexicalBlock(scope: !16406, file: !3, line: 2822, column: 6)
!16411 = !DILocation(line: 2822, column: 6, scope: !16412)
!16412 = distinct !DILexicalBlock(scope: !16410, file: !3, line: 2822, column: 6)
!16413 = !DILocation(line: 2822, column: 6, scope: !16414)
!16414 = distinct !DILexicalBlock(scope: !16412, file: !3, line: 2822, column: 6)
!16415 = !DILocation(line: 2822, column: 6, scope: !16416)
!16416 = distinct !DILexicalBlock(scope: !16412, file: !3, line: 2822, column: 6)
!16417 = !{i32 -2134373390, i32 -2134373361, i32 -2134373315, i32 -2134373257, i32 -2134373203, i32 -2134373149, i32 -2134373094, i32 -2134373063}
!16418 = !DILocation(line: 2822, column: 6, scope: !16419)
!16419 = distinct !DILexicalBlock(scope: !16412, file: !3, line: 2822, column: 6)
!16420 = !{i32 -2134372611, i32 -2134372604, i32 -2134372552, i32 -2134372521, i32 -2134372491}
!16421 = !DILocation(line: 2822, column: 6, scope: !16422)
!16422 = distinct !DILexicalBlock(scope: !16412, file: !3, line: 2822, column: 6)
!16423 = !DILocation(line: 2822, column: 6, scope: !16407)
!16424 = !DILocation(line: 2822, column: 6, scope: !16393)
!16425 = !DILocation(line: 2823, column: 3, scope: !16407)
!16426 = !DILocation(line: 2825, column: 9, scope: !16393)
!16427 = !DILocation(line: 2825, column: 16, scope: !16393)
!16428 = !DILocation(line: 2825, column: 25, scope: !16393)
!16429 = !DILocation(line: 2825, column: 2, scope: !16393)
!16430 = !DILocation(line: 2826, column: 1, scope: !16393)
!16431 = distinct !DISubprogram(name: "mlx5_eswitch_get_vport_metadata_mask", scope: !11417, file: !11417, line: 92, type: !16432, scopeLine: 93, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!16432 = !DISubroutineType(types: !16433)
!16433 = !{!229}
!16434 = !DILocation(line: 94, column: 2, scope: !16431)
!16435 = distinct !DISubprogram(name: "esw_offloads_cleanup_reps", scope: !3, file: !3, line: 1766, type: !12306, scopeLine: 1767, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!16436 = !DILocalVariable(name: "esw", arg: 1, scope: !16435, file: !3, line: 1766, type: !7)
!16437 = !DILocation(line: 1766, column: 53, scope: !16435)
!16438 = !DILocation(line: 1768, column: 8, scope: !16435)
!16439 = !DILocation(line: 1768, column: 13, scope: !16435)
!16440 = !DILocation(line: 1768, column: 22, scope: !16435)
!16441 = !DILocation(line: 1768, column: 2, scope: !16435)
!16442 = !DILocation(line: 1769, column: 1, scope: !16435)
!16443 = distinct !DISubprogram(name: "esw_offloads_init_reps", scope: !3, file: !3, line: 1771, type: !4, scopeLine: 1772, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!16444 = !DILocalVariable(name: "v", arg: 1, scope: !16445, file: !15607, line: 39, type: !16448)
!16445 = distinct !DISubprogram(name: "arch_atomic_set", scope: !15607, file: !15607, line: 39, type: !16446, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!16446 = !DISubroutineType(types: !16447)
!16447 = !{null, !16448, !6}
!16448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !632, size: 64)
!16449 = !DILocation(line: 39, column: 55, scope: !16445, inlinedAt: !16450)
!16450 = distinct !DILocation(line: 46, column: 2, scope: !16451, inlinedAt: !16452)
!16451 = distinct !DISubprogram(name: "atomic_set", scope: !12686, file: !12686, line: 43, type: !16446, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!16452 = distinct !DILocation(line: 1789, column: 4, scope: !16453)
!16453 = distinct !DILexicalBlock(scope: !16454, file: !3, line: 1788, column: 3)
!16454 = distinct !DILexicalBlock(scope: !16455, file: !3, line: 1788, column: 3)
!16455 = distinct !DILexicalBlock(scope: !16456, file: !3, line: 1784, column: 47)
!16456 = distinct !DILexicalBlock(scope: !16457, file: !3, line: 1784, column: 2)
!16457 = distinct !DILexicalBlock(scope: !16443, file: !3, line: 1784, column: 2)
!16458 = !DILocalVariable(name: "i", arg: 2, scope: !16445, file: !15607, line: 39, type: !6)
!16459 = !DILocation(line: 39, column: 62, scope: !16445, inlinedAt: !16450)
!16460 = !DILocalVariable(name: "v", arg: 1, scope: !16461, file: !12691, line: 84, type: !12694)
!16461 = distinct !DISubprogram(name: "instrument_atomic_write", scope: !12691, file: !12691, line: 84, type: !12692, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!16462 = !DILocation(line: 84, column: 74, scope: !16461, inlinedAt: !16463)
!16463 = distinct !DILocation(line: 45, column: 2, scope: !16451, inlinedAt: !16452)
!16464 = !DILocalVariable(name: "size", arg: 2, scope: !16461, file: !12691, line: 84, type: !132)
!16465 = !DILocation(line: 84, column: 84, scope: !16461, inlinedAt: !16463)
!16466 = !DILocalVariable(name: "v", arg: 1, scope: !16451, file: !12686, line: 43, type: !16448)
!16467 = !DILocation(line: 43, column: 22, scope: !16451, inlinedAt: !16452)
!16468 = !DILocalVariable(name: "i", arg: 2, scope: !16451, file: !12686, line: 43, type: !6)
!16469 = !DILocation(line: 43, column: 29, scope: !16451, inlinedAt: !16452)
!16470 = !DILocalVariable(name: "esw", arg: 1, scope: !16443, file: !3, line: 1771, type: !7)
!16471 = !DILocation(line: 1771, column: 49, scope: !16443)
!16472 = !DILocalVariable(name: "total_vports", scope: !16443, file: !3, line: 1773, type: !6)
!16473 = !DILocation(line: 1773, column: 6, scope: !16443)
!16474 = !DILocation(line: 1773, column: 21, scope: !16443)
!16475 = !DILocation(line: 1773, column: 26, scope: !16443)
!16476 = !DILocalVariable(name: "rep", scope: !16443, file: !3, line: 1774, type: !11415)
!16477 = !DILocation(line: 1774, column: 27, scope: !16443)
!16478 = !DILocalVariable(name: "vport_index", scope: !16443, file: !3, line: 1775, type: !6)
!16479 = !DILocation(line: 1775, column: 6, scope: !16443)
!16480 = !DILocalVariable(name: "rep_type", scope: !16443, file: !3, line: 1776, type: !1403)
!16481 = !DILocation(line: 1776, column: 5, scope: !16443)
!16482 = !DILocation(line: 1778, column: 37, scope: !16443)
!16483 = !DILocation(line: 1778, column: 29, scope: !16443)
!16484 = !DILocation(line: 1778, column: 2, scope: !16443)
!16485 = !DILocation(line: 1778, column: 7, scope: !16443)
!16486 = !DILocation(line: 1778, column: 16, scope: !16443)
!16487 = !DILocation(line: 1778, column: 27, scope: !16443)
!16488 = !DILocation(line: 1781, column: 7, scope: !16489)
!16489 = distinct !DILexicalBlock(scope: !16443, file: !3, line: 1781, column: 6)
!16490 = !DILocation(line: 1781, column: 12, scope: !16489)
!16491 = !DILocation(line: 1781, column: 21, scope: !16489)
!16492 = !DILocation(line: 1781, column: 6, scope: !16443)
!16493 = !DILocation(line: 1782, column: 3, scope: !16489)
!16494 = !DILocation(line: 1784, column: 2, scope: !16457)
!16495 = !DILocation(line: 1784, column: 2, scope: !16456)
!16496 = !DILocation(line: 1785, column: 48, scope: !16455)
!16497 = !DILocation(line: 1785, column: 53, scope: !16455)
!16498 = !DILocation(line: 1785, column: 16, scope: !16455)
!16499 = !DILocation(line: 1785, column: 3, scope: !16455)
!16500 = !DILocation(line: 1785, column: 8, scope: !16455)
!16501 = !DILocation(line: 1785, column: 14, scope: !16455)
!16502 = !DILocation(line: 1786, column: 22, scope: !16455)
!16503 = !DILocation(line: 1786, column: 3, scope: !16455)
!16504 = !DILocation(line: 1786, column: 8, scope: !16455)
!16505 = !DILocation(line: 1786, column: 20, scope: !16455)
!16506 = !DILocation(line: 1788, column: 17, scope: !16454)
!16507 = !DILocation(line: 1788, column: 8, scope: !16454)
!16508 = !DILocation(line: 1788, column: 22, scope: !16453)
!16509 = !DILocation(line: 1788, column: 31, scope: !16453)
!16510 = !DILocation(line: 1788, column: 3, scope: !16454)
!16511 = !DILocation(line: 1789, column: 16, scope: !16453)
!16512 = !DILocation(line: 1789, column: 21, scope: !16453)
!16513 = !DILocation(line: 1789, column: 30, scope: !16453)
!16514 = !DILocation(line: 1789, column: 40, scope: !16453)
!16515 = !DILocation(line: 45, column: 26, scope: !16451, inlinedAt: !16452)
!16516 = !DILocation(line: 86, column: 20, scope: !16461, inlinedAt: !16463)
!16517 = !DILocation(line: 86, column: 23, scope: !16461, inlinedAt: !16463)
!16518 = !DILocation(line: 86, column: 2, scope: !16461, inlinedAt: !16463)
!16519 = !DILocation(line: 87, column: 2, scope: !16461, inlinedAt: !16463)
!16520 = !DILocation(line: 46, column: 18, scope: !16451, inlinedAt: !16452)
!16521 = !DILocation(line: 46, column: 21, scope: !16451, inlinedAt: !16452)
!16522 = !DILocation(line: 41, column: 2, scope: !16523, inlinedAt: !16450)
!16523 = distinct !DILexicalBlock(scope: !16445, file: !15607, line: 41, column: 2)
!16524 = !DILocation(line: 1789, column: 4, scope: !16453)
!16525 = !DILocation(line: 1788, column: 56, scope: !16453)
!16526 = !DILocation(line: 1788, column: 3, scope: !16453)
!16527 = distinct !{!16527, !16510, !16528}
!16528 = !DILocation(line: 1790, column: 24, scope: !16454)
!16529 = !DILocation(line: 1791, column: 2, scope: !16455)
!16530 = distinct !{!16530, !16494, !16531}
!16531 = !DILocation(line: 1791, column: 2, scope: !16457)
!16532 = !DILocation(line: 1793, column: 2, scope: !16443)
!16533 = !DILocation(line: 1794, column: 1, scope: !16443)
!16534 = distinct !DISubprogram(name: "kcalloc", scope: !11972, file: !11972, line: 601, type: !16535, scopeLine: 602, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!16535 = !DISubroutineType(types: !16536)
!16536 = !{!159, !132, !132, !628}
!16537 = !DILocalVariable(name: "n", arg: 1, scope: !16534, file: !11972, line: 601, type: !132)
!16538 = !DILocation(line: 601, column: 36, scope: !16534)
!16539 = !DILocalVariable(name: "size", arg: 2, scope: !16534, file: !11972, line: 601, type: !132)
!16540 = !DILocation(line: 601, column: 46, scope: !16534)
!16541 = !DILocalVariable(name: "flags", arg: 3, scope: !16534, file: !11972, line: 601, type: !628)
!16542 = !DILocation(line: 601, column: 58, scope: !16534)
!16543 = !DILocation(line: 603, column: 23, scope: !16534)
!16544 = !DILocation(line: 603, column: 26, scope: !16534)
!16545 = !DILocation(line: 603, column: 32, scope: !16534)
!16546 = !DILocation(line: 603, column: 38, scope: !16534)
!16547 = !DILocation(line: 603, column: 9, scope: !16534)
!16548 = !DILocation(line: 603, column: 2, scope: !16534)
!16549 = distinct !DISubprogram(name: "mlx5_eswitch_index_to_vport_num", scope: !9, file: !9, line: 533, type: !16550, scopeLine: 535, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!16550 = !DISubroutineType(types: !16551)
!16551 = !{!744, !7, !6}
!16552 = !DILocalVariable(name: "esw", arg: 1, scope: !16549, file: !9, line: 533, type: !7)
!16553 = !DILocation(line: 533, column: 72, scope: !16549)
!16554 = !DILocalVariable(name: "index", arg: 2, scope: !16549, file: !9, line: 534, type: !6)
!16555 = !DILocation(line: 534, column: 13, scope: !16549)
!16556 = !DILocation(line: 536, column: 6, scope: !16557)
!16557 = distinct !DILexicalBlock(scope: !16549, file: !9, line: 536, column: 6)
!16558 = !DILocation(line: 536, column: 37, scope: !16557)
!16559 = !DILocation(line: 536, column: 15, scope: !16557)
!16560 = !DILocation(line: 536, column: 12, scope: !16557)
!16561 = !DILocation(line: 536, column: 42, scope: !16557)
!16562 = !DILocation(line: 537, column: 29, scope: !16557)
!16563 = !DILocation(line: 537, column: 34, scope: !16557)
!16564 = !DILocation(line: 537, column: 6, scope: !16557)
!16565 = !DILocation(line: 536, column: 6, scope: !16549)
!16566 = !DILocation(line: 538, column: 3, scope: !16557)
!16567 = !DILocation(line: 540, column: 6, scope: !16568)
!16568 = distinct !DILexicalBlock(scope: !16549, file: !9, line: 540, column: 6)
!16569 = !DILocation(line: 540, column: 39, scope: !16568)
!16570 = !DILocation(line: 540, column: 15, scope: !16568)
!16571 = !DILocation(line: 540, column: 12, scope: !16568)
!16572 = !DILocation(line: 540, column: 6, scope: !16549)
!16573 = !DILocation(line: 541, column: 3, scope: !16568)
!16574 = !DILocation(line: 543, column: 9, scope: !16549)
!16575 = !DILocation(line: 543, column: 2, scope: !16549)
!16576 = !DILocation(line: 544, column: 1, scope: !16549)
!16577 = distinct !DISubprogram(name: "esw_offloads_load_rep", scope: !3, file: !3, line: 1860, type: !16578, scopeLine: 1861, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!16578 = !DISubroutineType(types: !16579)
!16579 = !{!6, !7, !744}
!16580 = !DILocalVariable(name: "esw", arg: 1, scope: !16577, file: !3, line: 1860, type: !7)
!16581 = !DILocation(line: 1860, column: 48, scope: !16577)
!16582 = !DILocalVariable(name: "vport_num", arg: 2, scope: !16577, file: !3, line: 1860, type: !744)
!16583 = !DILocation(line: 1860, column: 57, scope: !16577)
!16584 = !DILocalVariable(name: "err", scope: !16577, file: !3, line: 1862, type: !6)
!16585 = !DILocation(line: 1862, column: 6, scope: !16577)
!16586 = !DILocation(line: 1864, column: 6, scope: !16587)
!16587 = distinct !DILexicalBlock(scope: !16577, file: !3, line: 1864, column: 6)
!16588 = !DILocation(line: 1864, column: 11, scope: !16587)
!16589 = !DILocation(line: 1864, column: 16, scope: !16587)
!16590 = !DILocation(line: 1864, column: 6, scope: !16577)
!16591 = !DILocation(line: 1865, column: 3, scope: !16587)
!16592 = !DILocation(line: 1867, column: 48, scope: !16577)
!16593 = !DILocation(line: 1867, column: 53, scope: !16577)
!16594 = !DILocation(line: 1867, column: 8, scope: !16577)
!16595 = !DILocation(line: 1867, column: 6, scope: !16577)
!16596 = !DILocation(line: 1868, column: 6, scope: !16597)
!16597 = distinct !DILexicalBlock(scope: !16577, file: !3, line: 1868, column: 6)
!16598 = !DILocation(line: 1868, column: 6, scope: !16577)
!16599 = !DILocation(line: 1869, column: 10, scope: !16597)
!16600 = !DILocation(line: 1869, column: 3, scope: !16597)
!16601 = !DILocation(line: 1871, column: 35, scope: !16577)
!16602 = !DILocation(line: 1871, column: 40, scope: !16577)
!16603 = !DILocation(line: 1871, column: 8, scope: !16577)
!16604 = !DILocation(line: 1871, column: 6, scope: !16577)
!16605 = !DILocation(line: 1872, column: 6, scope: !16606)
!16606 = distinct !DILexicalBlock(scope: !16577, file: !3, line: 1872, column: 6)
!16607 = !DILocation(line: 1872, column: 6, scope: !16577)
!16608 = !DILocation(line: 1873, column: 3, scope: !16606)
!16609 = !DILocation(line: 1874, column: 9, scope: !16577)
!16610 = !DILocation(line: 1874, column: 2, scope: !16577)
!16611 = !DILabel(scope: !16577, name: "load_err", file: !3, line: 1876)
!16612 = !DILocation(line: 1876, column: 1, scope: !16577)
!16613 = !DILocation(line: 1877, column: 44, scope: !16577)
!16614 = !DILocation(line: 1877, column: 49, scope: !16577)
!16615 = !DILocation(line: 1877, column: 2, scope: !16577)
!16616 = !DILocation(line: 1878, column: 9, scope: !16577)
!16617 = !DILocation(line: 1878, column: 2, scope: !16577)
!16618 = !DILocation(line: 1879, column: 1, scope: !16577)
!16619 = distinct !DISubprogram(name: "mlx5_esw_offloads_rep_load", scope: !3, file: !3, line: 1826, type: !16578, scopeLine: 1827, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!16620 = !DILocation(line: 39, column: 55, scope: !16445, inlinedAt: !16621)
!16621 = distinct !DILocation(line: 46, column: 2, scope: !16451, inlinedAt: !16622)
!16622 = distinct !DILocation(line: 1844, column: 2, scope: !16619)
!16623 = !DILocation(line: 39, column: 62, scope: !16445, inlinedAt: !16621)
!16624 = !DILocation(line: 84, column: 74, scope: !16461, inlinedAt: !16625)
!16625 = distinct !DILocation(line: 45, column: 2, scope: !16451, inlinedAt: !16622)
!16626 = !DILocation(line: 84, column: 84, scope: !16461, inlinedAt: !16625)
!16627 = !DILocation(line: 43, column: 22, scope: !16451, inlinedAt: !16622)
!16628 = !DILocation(line: 43, column: 29, scope: !16451, inlinedAt: !16622)
!16629 = !DILocalVariable(name: "v", arg: 1, scope: !16630, file: !15607, line: 194, type: !16448)
!16630 = distinct !DISubprogram(name: "arch_atomic_cmpxchg", scope: !15607, file: !15607, line: 194, type: !16631, scopeLine: 195, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!16631 = !DISubroutineType(types: !16632)
!16632 = !{!6, !16448, !6, !6}
!16633 = !DILocation(line: 194, column: 58, scope: !16630, inlinedAt: !16634)
!16634 = distinct !DILocation(line: 655, column: 9, scope: !16635, inlinedAt: !16636)
!16635 = distinct !DISubprogram(name: "atomic_cmpxchg", scope: !12686, file: !12686, line: 652, type: !16631, scopeLine: 653, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!16636 = distinct !DILocation(line: 1834, column: 7, scope: !16637)
!16637 = distinct !DILexicalBlock(scope: !16638, file: !3, line: 1834, column: 7)
!16638 = distinct !DILexicalBlock(scope: !16639, file: !3, line: 1833, column: 2)
!16639 = distinct !DILexicalBlock(scope: !16619, file: !3, line: 1833, column: 2)
!16640 = !DILocalVariable(name: "old", arg: 2, scope: !16630, file: !15607, line: 194, type: !6)
!16641 = !DILocation(line: 194, column: 65, scope: !16630, inlinedAt: !16634)
!16642 = !DILocalVariable(name: "new", arg: 3, scope: !16630, file: !15607, line: 194, type: !6)
!16643 = !DILocation(line: 194, column: 74, scope: !16630, inlinedAt: !16634)
!16644 = !DILocalVariable(name: "__ret", scope: !16645, file: !15607, line: 196, type: !6)
!16645 = distinct !DILexicalBlock(scope: !16630, file: !15607, line: 196, column: 9)
!16646 = !DILocation(line: 196, column: 9, scope: !16645, inlinedAt: !16634)
!16647 = !DILocalVariable(name: "__old", scope: !16645, file: !15607, line: 196, type: !6)
!16648 = !DILocalVariable(name: "__new", scope: !16645, file: !15607, line: 196, type: !6)
!16649 = !DILocalVariable(name: "__ptr", scope: !16645, file: !15607, line: 196, type: !12260)
!16650 = !DILocation(line: 99, column: 79, scope: !12690, inlinedAt: !16651)
!16651 = distinct !DILocation(line: 654, column: 2, scope: !16635, inlinedAt: !16636)
!16652 = !DILocation(line: 99, column: 89, scope: !12690, inlinedAt: !16651)
!16653 = !DILocalVariable(name: "v", arg: 1, scope: !16635, file: !12686, line: 652, type: !16448)
!16654 = !DILocation(line: 652, column: 26, scope: !16635, inlinedAt: !16636)
!16655 = !DILocalVariable(name: "old", arg: 2, scope: !16635, file: !12686, line: 652, type: !6)
!16656 = !DILocation(line: 652, column: 33, scope: !16635, inlinedAt: !16636)
!16657 = !DILocalVariable(name: "new", arg: 3, scope: !16635, file: !12686, line: 652, type: !6)
!16658 = !DILocation(line: 652, column: 42, scope: !16635, inlinedAt: !16636)
!16659 = !DILocalVariable(name: "esw", arg: 1, scope: !16619, file: !3, line: 1826, type: !7)
!16660 = !DILocation(line: 1826, column: 60, scope: !16619)
!16661 = !DILocalVariable(name: "vport_num", arg: 2, scope: !16619, file: !3, line: 1826, type: !744)
!16662 = !DILocation(line: 1826, column: 69, scope: !16619)
!16663 = !DILocalVariable(name: "rep", scope: !16619, file: !3, line: 1828, type: !11415)
!16664 = !DILocation(line: 1828, column: 27, scope: !16619)
!16665 = !DILocalVariable(name: "rep_type", scope: !16619, file: !3, line: 1829, type: !6)
!16666 = !DILocation(line: 1829, column: 6, scope: !16619)
!16667 = !DILocalVariable(name: "err", scope: !16619, file: !3, line: 1830, type: !6)
!16668 = !DILocation(line: 1830, column: 6, scope: !16619)
!16669 = !DILocation(line: 1832, column: 29, scope: !16619)
!16670 = !DILocation(line: 1832, column: 34, scope: !16619)
!16671 = !DILocation(line: 1832, column: 8, scope: !16619)
!16672 = !DILocation(line: 1832, column: 6, scope: !16619)
!16673 = !DILocation(line: 1833, column: 16, scope: !16639)
!16674 = !DILocation(line: 1833, column: 7, scope: !16639)
!16675 = !DILocation(line: 1833, column: 21, scope: !16638)
!16676 = !DILocation(line: 1833, column: 30, scope: !16638)
!16677 = !DILocation(line: 1833, column: 2, scope: !16639)
!16678 = !DILocation(line: 1834, column: 23, scope: !16637)
!16679 = !DILocation(line: 1834, column: 28, scope: !16637)
!16680 = !DILocation(line: 1834, column: 37, scope: !16637)
!16681 = !DILocation(line: 1834, column: 47, scope: !16637)
!16682 = !DILocation(line: 654, column: 31, scope: !16635, inlinedAt: !16636)
!16683 = !DILocation(line: 101, column: 20, scope: !12690, inlinedAt: !16651)
!16684 = !DILocation(line: 101, column: 23, scope: !12690, inlinedAt: !16651)
!16685 = !DILocation(line: 101, column: 2, scope: !12690, inlinedAt: !16651)
!16686 = !DILocation(line: 102, column: 2, scope: !12690, inlinedAt: !16651)
!16687 = !DILocation(line: 655, column: 29, scope: !16635, inlinedAt: !16636)
!16688 = !DILocation(line: 655, column: 32, scope: !16635, inlinedAt: !16636)
!16689 = !DILocation(line: 655, column: 37, scope: !16635, inlinedAt: !16636)
!16690 = !{i32 -2146504724}
!16691 = !DILocation(line: 1835, column: 36, scope: !16637)
!16692 = !DILocation(line: 1834, column: 7, scope: !16638)
!16693 = !DILocation(line: 1836, column: 10, scope: !16694)
!16694 = distinct !DILexicalBlock(scope: !16637, file: !3, line: 1835, column: 55)
!16695 = !DILocation(line: 1836, column: 15, scope: !16694)
!16696 = !DILocation(line: 1836, column: 24, scope: !16694)
!16697 = !DILocation(line: 1836, column: 32, scope: !16694)
!16698 = !DILocation(line: 1836, column: 43, scope: !16694)
!16699 = !DILocation(line: 1836, column: 48, scope: !16694)
!16700 = !DILocation(line: 1836, column: 53, scope: !16694)
!16701 = !DILocation(line: 1836, column: 58, scope: !16694)
!16702 = !DILocation(line: 1836, column: 8, scope: !16694)
!16703 = !DILocation(line: 1837, column: 8, scope: !16704)
!16704 = distinct !DILexicalBlock(scope: !16694, file: !3, line: 1837, column: 8)
!16705 = !DILocation(line: 1837, column: 8, scope: !16694)
!16706 = !DILocation(line: 1838, column: 5, scope: !16704)
!16707 = !DILocation(line: 1839, column: 3, scope: !16694)
!16708 = !DILocation(line: 1835, column: 39, scope: !16637)
!16709 = !DILocation(line: 1833, column: 55, scope: !16638)
!16710 = !DILocation(line: 1833, column: 2, scope: !16638)
!16711 = distinct !{!16711, !16677, !16712}
!16712 = !DILocation(line: 1839, column: 3, scope: !16639)
!16713 = !DILocation(line: 1841, column: 2, scope: !16619)
!16714 = !DILabel(scope: !16619, name: "err_reps", file: !3, line: 1843)
!16715 = !DILocation(line: 1843, column: 1, scope: !16619)
!16716 = !DILocation(line: 1844, column: 14, scope: !16619)
!16717 = !DILocation(line: 1844, column: 19, scope: !16619)
!16718 = !DILocation(line: 1844, column: 28, scope: !16619)
!16719 = !DILocation(line: 1844, column: 38, scope: !16619)
!16720 = !DILocation(line: 45, column: 26, scope: !16451, inlinedAt: !16622)
!16721 = !DILocation(line: 86, column: 20, scope: !16461, inlinedAt: !16625)
!16722 = !DILocation(line: 86, column: 23, scope: !16461, inlinedAt: !16625)
!16723 = !DILocation(line: 86, column: 2, scope: !16461, inlinedAt: !16625)
!16724 = !DILocation(line: 87, column: 2, scope: !16461, inlinedAt: !16625)
!16725 = !DILocation(line: 46, column: 18, scope: !16451, inlinedAt: !16622)
!16726 = !DILocation(line: 46, column: 21, scope: !16451, inlinedAt: !16622)
!16727 = !DILocation(line: 41, column: 2, scope: !16523, inlinedAt: !16621)
!16728 = !DILocation(line: 1845, column: 7, scope: !16729)
!16729 = distinct !DILexicalBlock(scope: !16619, file: !3, line: 1845, column: 2)
!16730 = !DILocation(line: 1845, column: 19, scope: !16731)
!16731 = distinct !DILexicalBlock(scope: !16729, file: !3, line: 1845, column: 2)
!16732 = !DILocation(line: 1845, column: 28, scope: !16731)
!16733 = !DILocation(line: 1845, column: 2, scope: !16729)
!16734 = !DILocation(line: 1846, column: 29, scope: !16731)
!16735 = !DILocation(line: 1846, column: 34, scope: !16731)
!16736 = !DILocation(line: 1846, column: 39, scope: !16731)
!16737 = !DILocation(line: 1846, column: 3, scope: !16731)
!16738 = !DILocation(line: 1845, column: 42, scope: !16731)
!16739 = !DILocation(line: 1845, column: 2, scope: !16731)
!16740 = distinct !{!16740, !16733, !16741}
!16741 = !DILocation(line: 1846, column: 47, scope: !16729)
!16742 = !DILocation(line: 1847, column: 9, scope: !16619)
!16743 = !DILocation(line: 1847, column: 2, scope: !16619)
!16744 = !DILocation(line: 1848, column: 1, scope: !16619)
!16745 = distinct !DISubprogram(name: "esw_offloads_unload_rep", scope: !3, file: !3, line: 1881, type: !16746, scopeLine: 1882, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!16746 = !DISubroutineType(types: !16747)
!16747 = !{null, !7, !744}
!16748 = !DILocalVariable(name: "esw", arg: 1, scope: !16745, file: !3, line: 1881, type: !7)
!16749 = !DILocation(line: 1881, column: 51, scope: !16745)
!16750 = !DILocalVariable(name: "vport_num", arg: 2, scope: !16745, file: !3, line: 1881, type: !744)
!16751 = !DILocation(line: 1881, column: 60, scope: !16745)
!16752 = !DILocation(line: 1883, column: 6, scope: !16753)
!16753 = distinct !DILexicalBlock(scope: !16745, file: !3, line: 1883, column: 6)
!16754 = !DILocation(line: 1883, column: 11, scope: !16753)
!16755 = !DILocation(line: 1883, column: 16, scope: !16753)
!16756 = !DILocation(line: 1883, column: 6, scope: !16745)
!16757 = !DILocation(line: 1884, column: 3, scope: !16753)
!16758 = !DILocation(line: 1886, column: 31, scope: !16745)
!16759 = !DILocation(line: 1886, column: 36, scope: !16745)
!16760 = !DILocation(line: 1886, column: 2, scope: !16745)
!16761 = !DILocation(line: 1887, column: 44, scope: !16745)
!16762 = !DILocation(line: 1887, column: 49, scope: !16745)
!16763 = !DILocation(line: 1887, column: 2, scope: !16745)
!16764 = !DILocation(line: 1888, column: 1, scope: !16745)
!16765 = distinct !DISubprogram(name: "mlx5_esw_offloads_rep_unload", scope: !3, file: !3, line: 1850, type: !16746, scopeLine: 1851, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!16766 = !DILocalVariable(name: "esw", arg: 1, scope: !16765, file: !3, line: 1850, type: !7)
!16767 = !DILocation(line: 1850, column: 63, scope: !16765)
!16768 = !DILocalVariable(name: "vport_num", arg: 2, scope: !16765, file: !3, line: 1850, type: !744)
!16769 = !DILocation(line: 1850, column: 72, scope: !16765)
!16770 = !DILocalVariable(name: "rep", scope: !16765, file: !3, line: 1852, type: !11415)
!16771 = !DILocation(line: 1852, column: 27, scope: !16765)
!16772 = !DILocalVariable(name: "rep_type", scope: !16765, file: !3, line: 1853, type: !6)
!16773 = !DILocation(line: 1853, column: 6, scope: !16765)
!16774 = !DILocation(line: 1855, column: 29, scope: !16765)
!16775 = !DILocation(line: 1855, column: 34, scope: !16765)
!16776 = !DILocation(line: 1855, column: 8, scope: !16765)
!16777 = !DILocation(line: 1855, column: 6, scope: !16765)
!16778 = !DILocation(line: 1856, column: 16, scope: !16779)
!16779 = distinct !DILexicalBlock(scope: !16765, file: !3, line: 1856, column: 2)
!16780 = !DILocation(line: 1856, column: 7, scope: !16779)
!16781 = !DILocation(line: 1856, column: 37, scope: !16782)
!16782 = distinct !DILexicalBlock(scope: !16779, file: !3, line: 1856, column: 2)
!16783 = !DILocation(line: 1856, column: 46, scope: !16782)
!16784 = !DILocation(line: 1856, column: 2, scope: !16779)
!16785 = !DILocation(line: 1857, column: 29, scope: !16782)
!16786 = !DILocation(line: 1857, column: 34, scope: !16782)
!16787 = !DILocation(line: 1857, column: 39, scope: !16782)
!16788 = !DILocation(line: 1857, column: 3, scope: !16782)
!16789 = !DILocation(line: 1856, column: 60, scope: !16782)
!16790 = !DILocation(line: 1856, column: 2, scope: !16782)
!16791 = distinct !{!16791, !16784, !16792}
!16792 = !DILocation(line: 1857, column: 47, scope: !16779)
!16793 = !DILocation(line: 1858, column: 1, scope: !16765)
!16794 = distinct !DISubprogram(name: "mlx5_esw_match_metadata_alloc", scope: !3, file: !3, line: 2047, type: !16281, scopeLine: 2048, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!16795 = !DILocalVariable(name: "esw", arg: 1, scope: !16794, file: !3, line: 2047, type: !7)
!16796 = !DILocation(line: 2047, column: 56, scope: !16794)
!16797 = !DILocalVariable(name: "vport_end_ida", scope: !16794, file: !3, line: 2049, type: !229)
!16798 = !DILocation(line: 2049, column: 6, scope: !16794)
!16799 = !DILocalVariable(name: "max_pf_num", scope: !16794, file: !3, line: 2050, type: !229)
!16800 = !DILocation(line: 2050, column: 6, scope: !16794)
!16801 = !DILocalVariable(name: "pf_num", scope: !16794, file: !3, line: 2051, type: !229)
!16802 = !DILocation(line: 2051, column: 6, scope: !16794)
!16803 = !DILocalVariable(name: "id", scope: !16794, file: !3, line: 2052, type: !6)
!16804 = !DILocation(line: 2052, column: 6, scope: !16794)
!16805 = !DILocation(line: 2055, column: 11, scope: !16794)
!16806 = !DILocation(line: 2055, column: 9, scope: !16794)
!16807 = !DILocation(line: 2056, column: 6, scope: !16808)
!16808 = distinct !DILexicalBlock(scope: !16794, file: !3, line: 2056, column: 6)
!16809 = !DILocation(line: 2056, column: 15, scope: !16808)
!16810 = !DILocation(line: 2056, column: 13, scope: !16808)
!16811 = !DILocation(line: 2056, column: 6, scope: !16794)
!16812 = !DILocation(line: 2057, column: 3, scope: !16808)
!16813 = !DILocation(line: 2061, column: 24, scope: !16794)
!16814 = !DILocation(line: 2061, column: 29, scope: !16794)
!16815 = !DILocation(line: 2061, column: 38, scope: !16794)
!16816 = !DILocation(line: 2061, column: 61, scope: !16794)
!16817 = !DILocation(line: 2061, column: 7, scope: !16794)
!16818 = !DILocation(line: 2061, column: 5, scope: !16794)
!16819 = !DILocation(line: 2062, column: 6, scope: !16820)
!16820 = distinct !DILexicalBlock(scope: !16794, file: !3, line: 2062, column: 6)
!16821 = !DILocation(line: 2062, column: 9, scope: !16820)
!16822 = !DILocation(line: 2062, column: 6, scope: !16794)
!16823 = !DILocation(line: 2063, column: 3, scope: !16820)
!16824 = !DILocation(line: 2064, column: 8, scope: !16794)
!16825 = !DILocation(line: 2064, column: 15, scope: !16794)
!16826 = !DILocation(line: 2064, column: 36, scope: !16794)
!16827 = !DILocation(line: 2064, column: 34, scope: !16794)
!16828 = !DILocation(line: 2064, column: 5, scope: !16794)
!16829 = !DILocation(line: 2065, column: 9, scope: !16794)
!16830 = !DILocation(line: 2065, column: 2, scope: !16794)
!16831 = !DILocation(line: 2066, column: 1, scope: !16794)
!16832 = distinct !DISubprogram(name: "mlx5_esw_match_metadata_free", scope: !3, file: !3, line: 2068, type: !16833, scopeLine: 2069, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!16833 = !DISubroutineType(types: !16834)
!16834 = !{null, !7, !229}
!16835 = !DILocalVariable(name: "esw", arg: 1, scope: !16832, file: !3, line: 2068, type: !7)
!16836 = !DILocation(line: 2068, column: 56, scope: !16832)
!16837 = !DILocalVariable(name: "metadata", arg: 2, scope: !16832, file: !3, line: 2068, type: !229)
!16838 = !DILocation(line: 2068, column: 65, scope: !16832)
!16839 = !DILocalVariable(name: "vport_bit_mask", scope: !16832, file: !3, line: 2070, type: !229)
!16840 = !DILocation(line: 2070, column: 6, scope: !16832)
!16841 = !DILocation(line: 2073, column: 12, scope: !16832)
!16842 = !DILocation(line: 2073, column: 17, scope: !16832)
!16843 = !DILocation(line: 2073, column: 26, scope: !16832)
!16844 = !DILocation(line: 2073, column: 46, scope: !16832)
!16845 = !DILocation(line: 2073, column: 57, scope: !16832)
!16846 = !DILocation(line: 2073, column: 55, scope: !16832)
!16847 = !DILocation(line: 2073, column: 2, scope: !16832)
!16848 = !DILocation(line: 2074, column: 1, scope: !16832)
!16849 = distinct !DISubprogram(name: "esw_vport_create_offloads_acl_tables", scope: !3, file: !3, line: 2129, type: !16850, scopeLine: 2131, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!16850 = !DISubroutineType(types: !16851)
!16851 = !{!6, !7, !11306}
!16852 = !DILocalVariable(name: "esw", arg: 1, scope: !16849, file: !3, line: 2129, type: !7)
!16853 = !DILocation(line: 2129, column: 59, scope: !16849)
!16854 = !DILocalVariable(name: "vport", arg: 2, scope: !16849, file: !3, line: 2130, type: !11306)
!16855 = !DILocation(line: 2130, column: 29, scope: !16849)
!16856 = !DILocalVariable(name: "err", scope: !16849, file: !3, line: 2132, type: !6)
!16857 = !DILocation(line: 2132, column: 6, scope: !16849)
!16858 = !DILocation(line: 2134, column: 35, scope: !16849)
!16859 = !DILocation(line: 2134, column: 40, scope: !16849)
!16860 = !DILocation(line: 2134, column: 8, scope: !16849)
!16861 = !DILocation(line: 2134, column: 6, scope: !16849)
!16862 = !DILocation(line: 2135, column: 6, scope: !16863)
!16863 = distinct !DILexicalBlock(scope: !16849, file: !3, line: 2135, column: 6)
!16864 = !DILocation(line: 2135, column: 6, scope: !16849)
!16865 = !DILocation(line: 2136, column: 10, scope: !16863)
!16866 = !DILocation(line: 2136, column: 3, scope: !16863)
!16867 = !DILocation(line: 2138, column: 34, scope: !16849)
!16868 = !DILocation(line: 2138, column: 39, scope: !16849)
!16869 = !DILocation(line: 2138, column: 8, scope: !16849)
!16870 = !DILocation(line: 2138, column: 6, scope: !16849)
!16871 = !DILocation(line: 2139, column: 6, scope: !16872)
!16872 = distinct !DILexicalBlock(scope: !16849, file: !3, line: 2139, column: 6)
!16873 = !DILocation(line: 2139, column: 6, scope: !16849)
!16874 = !DILocation(line: 2140, column: 3, scope: !16872)
!16875 = !DILocation(line: 2142, column: 2, scope: !16849)
!16876 = !DILabel(scope: !16849, name: "egress_err", file: !3, line: 2144)
!16877 = !DILocation(line: 2144, column: 1, scope: !16849)
!16878 = !DILocation(line: 2145, column: 31, scope: !16849)
!16879 = !DILocation(line: 2145, column: 36, scope: !16849)
!16880 = !DILocation(line: 2145, column: 2, scope: !16849)
!16881 = !DILocation(line: 2146, column: 9, scope: !16849)
!16882 = !DILocation(line: 2146, column: 2, scope: !16849)
!16883 = !DILocation(line: 2147, column: 1, scope: !16849)
!16884 = distinct !DISubprogram(name: "esw_vport_destroy_offloads_acl_tables", scope: !3, file: !3, line: 2150, type: !16885, scopeLine: 2152, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!16885 = !DISubroutineType(types: !16886)
!16886 = !{null, !7, !11306}
!16887 = !DILocalVariable(name: "esw", arg: 1, scope: !16884, file: !3, line: 2150, type: !7)
!16888 = !DILocation(line: 2150, column: 60, scope: !16884)
!16889 = !DILocalVariable(name: "vport", arg: 2, scope: !16884, file: !3, line: 2151, type: !11306)
!16890 = !DILocation(line: 2151, column: 30, scope: !16884)
!16891 = !DILocation(line: 2153, column: 30, scope: !16884)
!16892 = !DILocation(line: 2153, column: 2, scope: !16884)
!16893 = !DILocation(line: 2154, column: 31, scope: !16884)
!16894 = !DILocation(line: 2154, column: 36, scope: !16884)
!16895 = !DILocation(line: 2154, column: 2, scope: !16884)
!16896 = !DILocation(line: 2155, column: 1, scope: !16884)
!16897 = distinct !DISubprogram(name: "mlx5_esw_funcs_changed_handler", scope: !3, file: !3, line: 2273, type: !6710, scopeLine: 2274, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!16898 = !DILocalVariable(name: "nb", arg: 1, scope: !16897, file: !3, line: 2273, type: !6704)
!16899 = !DILocation(line: 2273, column: 59, scope: !16897)
!16900 = !DILocalVariable(name: "type", arg: 2, scope: !16897, file: !3, line: 2273, type: !135)
!16901 = !DILocation(line: 2273, column: 77, scope: !16897)
!16902 = !DILocalVariable(name: "data", arg: 3, scope: !16897, file: !3, line: 2273, type: !159)
!16903 = !DILocation(line: 2273, column: 89, scope: !16897)
!16904 = !DILocalVariable(name: "esw_funcs", scope: !16897, file: !3, line: 2275, type: !12234)
!16905 = !DILocation(line: 2275, column: 29, scope: !16897)
!16906 = !DILocalVariable(name: "host_work", scope: !16897, file: !3, line: 2276, type: !12264)
!16907 = !DILocation(line: 2276, column: 25, scope: !16897)
!16908 = !DILocalVariable(name: "esw", scope: !16897, file: !3, line: 2277, type: !7)
!16909 = !DILocation(line: 2277, column: 23, scope: !16897)
!16910 = !DILocation(line: 2279, column: 14, scope: !16897)
!16911 = !DILocation(line: 2279, column: 12, scope: !16897)
!16912 = !DILocation(line: 2280, column: 7, scope: !16913)
!16913 = distinct !DILexicalBlock(scope: !16897, file: !3, line: 2280, column: 6)
!16914 = !DILocation(line: 2280, column: 6, scope: !16897)
!16915 = !DILocation(line: 2281, column: 3, scope: !16913)
!16916 = !DILocalVariable(name: "__mptr", scope: !16917, file: !3, line: 2283, type: !159)
!16917 = distinct !DILexicalBlock(scope: !16897, file: !3, line: 2283, column: 14)
!16918 = !DILocation(line: 2283, column: 14, scope: !16917)
!16919 = !DILocalVariable(name: "__mptr", scope: !16920, file: !3, line: 2283, type: !159)
!16920 = distinct !DILexicalBlock(scope: !16917, file: !3, line: 2283, column: 14)
!16921 = !DILocation(line: 2283, column: 14, scope: !16920)
!16922 = !DILocation(line: 2283, column: 14, scope: !16923)
!16923 = distinct !DILexicalBlock(scope: !16920, file: !3, line: 2283, column: 14)
!16924 = !DILocation(line: 2283, column: 14, scope: !16925)
!16925 = distinct !DILexicalBlock(scope: !16917, file: !3, line: 2283, column: 14)
!16926 = !DILocation(line: 2283, column: 12, scope: !16897)
!16927 = !DILocalVariable(name: "__mptr", scope: !16928, file: !3, line: 2284, type: !159)
!16928 = distinct !DILexicalBlock(scope: !16897, file: !3, line: 2284, column: 8)
!16929 = !DILocation(line: 2284, column: 8, scope: !16928)
!16930 = !DILocation(line: 2284, column: 8, scope: !16931)
!16931 = distinct !DILexicalBlock(scope: !16928, file: !3, line: 2284, column: 8)
!16932 = !DILocation(line: 2284, column: 6, scope: !16897)
!16933 = !DILocation(line: 2286, column: 19, scope: !16897)
!16934 = !DILocation(line: 2286, column: 2, scope: !16897)
!16935 = !DILocation(line: 2286, column: 13, scope: !16897)
!16936 = !DILocation(line: 2286, column: 17, scope: !16897)
!16937 = !DILocation(line: 2288, column: 2, scope: !16897)
!16938 = !DILocation(line: 2288, column: 2, scope: !16939)
!16939 = distinct !DILexicalBlock(scope: !16897, file: !3, line: 2288, column: 2)
!16940 = !DILocation(line: 2289, column: 13, scope: !16897)
!16941 = !DILocation(line: 2289, column: 18, scope: !16897)
!16942 = !DILocation(line: 2289, column: 31, scope: !16897)
!16943 = !DILocation(line: 2289, column: 42, scope: !16897)
!16944 = !DILocation(line: 2289, column: 2, scope: !16897)
!16945 = !DILocation(line: 2291, column: 2, scope: !16897)
!16946 = !DILocation(line: 2292, column: 1, scope: !16897)
!16947 = distinct !DISubprogram(name: "__init_work", scope: !1729, file: !1729, line: 215, type: !16948, scopeLine: 215, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!16948 = !DISubroutineType(types: !16949)
!16949 = !{null, !1738, !6}
!16950 = !DILocalVariable(name: "work", arg: 1, scope: !16947, file: !1729, line: 215, type: !1738)
!16951 = !DILocation(line: 215, column: 52, scope: !16947)
!16952 = !DILocalVariable(name: "onstack", arg: 2, scope: !16947, file: !1729, line: 215, type: !6)
!16953 = !DILocation(line: 215, column: 62, scope: !16947)
!16954 = !DILocation(line: 215, column: 73, scope: !16947)
!16955 = distinct !DISubprogram(name: "INIT_LIST_HEAD", scope: !16956, file: !16956, line: 33, type: !16957, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!16956 = !DIFile(filename: "./include/linux/list.h", directory: "/home/lizy2001/genbc/linux")
!16957 = !DISubroutineType(types: !16958)
!16958 = !{null, !34}
!16959 = !DILocalVariable(name: "list", arg: 1, scope: !16955, file: !16956, line: 33, type: !34)
!16960 = !DILocation(line: 33, column: 53, scope: !16955)
!16961 = !DILocation(line: 35, column: 2, scope: !16955)
!16962 = !DILocation(line: 35, column: 2, scope: !16963)
!16963 = distinct !DILexicalBlock(scope: !16955, file: !16956, line: 35, column: 2)
!16964 = !DILocation(line: 35, column: 2, scope: !16965)
!16965 = distinct !DILexicalBlock(scope: !16963, file: !16956, line: 35, column: 2)
!16966 = !DILocation(line: 35, column: 2, scope: !16967)
!16967 = distinct !DILexicalBlock(scope: !16963, file: !16956, line: 35, column: 2)
!16968 = !DILocation(line: 36, column: 15, scope: !16955)
!16969 = !DILocation(line: 36, column: 2, scope: !16955)
!16970 = !DILocation(line: 36, column: 8, scope: !16955)
!16971 = !DILocation(line: 36, column: 13, scope: !16955)
!16972 = !DILocation(line: 37, column: 1, scope: !16955)
!16973 = distinct !DISubprogram(name: "esw_functions_changed_event_handler", scope: !3, file: !3, line: 2254, type: !1736, scopeLine: 2255, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!16974 = !DILocalVariable(name: "work", arg: 1, scope: !16973, file: !3, line: 2254, type: !1738)
!16975 = !DILocation(line: 2254, column: 69, scope: !16973)
!16976 = !DILocalVariable(name: "host_work", scope: !16973, file: !3, line: 2256, type: !12264)
!16977 = !DILocation(line: 2256, column: 25, scope: !16973)
!16978 = !DILocalVariable(name: "esw", scope: !16973, file: !3, line: 2257, type: !7)
!16979 = !DILocation(line: 2257, column: 23, scope: !16973)
!16980 = !DILocalVariable(name: "out", scope: !16973, file: !3, line: 2258, type: !4647)
!16981 = !DILocation(line: 2258, column: 13, scope: !16973)
!16982 = !DILocalVariable(name: "__mptr", scope: !16983, file: !3, line: 2260, type: !159)
!16983 = distinct !DILexicalBlock(scope: !16973, file: !3, line: 2260, column: 14)
!16984 = !DILocation(line: 2260, column: 14, scope: !16983)
!16985 = !DILocation(line: 2260, column: 14, scope: !16986)
!16986 = distinct !DILexicalBlock(scope: !16983, file: !3, line: 2260, column: 14)
!16987 = !DILocation(line: 2260, column: 12, scope: !16973)
!16988 = !DILocation(line: 2261, column: 8, scope: !16973)
!16989 = !DILocation(line: 2261, column: 19, scope: !16973)
!16990 = !DILocation(line: 2261, column: 6, scope: !16973)
!16991 = !DILocation(line: 2263, column: 33, scope: !16973)
!16992 = !DILocation(line: 2263, column: 38, scope: !16973)
!16993 = !DILocation(line: 2263, column: 8, scope: !16973)
!16994 = !DILocation(line: 2263, column: 6, scope: !16973)
!16995 = !DILocation(line: 2264, column: 13, scope: !16996)
!16996 = distinct !DILexicalBlock(scope: !16973, file: !3, line: 2264, column: 6)
!16997 = !DILocation(line: 2264, column: 6, scope: !16996)
!16998 = !DILocation(line: 2264, column: 6, scope: !16973)
!16999 = !DILocation(line: 2265, column: 3, scope: !16996)
!17000 = !DILocation(line: 2267, column: 32, scope: !16973)
!17001 = !DILocation(line: 2267, column: 37, scope: !16973)
!17002 = !DILocation(line: 2267, column: 2, scope: !16973)
!17003 = !DILocation(line: 2268, column: 9, scope: !16973)
!17004 = !DILocation(line: 2268, column: 2, scope: !16973)
!17005 = !DILabel(scope: !16973, name: "out", file: !3, line: 2269)
!17006 = !DILocation(line: 2269, column: 1, scope: !16973)
!17007 = !DILocation(line: 2270, column: 8, scope: !16973)
!17008 = !DILocation(line: 2270, column: 2, scope: !16973)
!17009 = !DILocation(line: 2271, column: 1, scope: !16973)
!17010 = distinct !DISubprogram(name: "queue_work", scope: !1729, file: !1729, line: 504, type: !17011, scopeLine: 506, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!17011 = !DISubroutineType(types: !17012)
!17012 = !{!304, !2578, !1738}
!17013 = !DILocalVariable(name: "wq", arg: 1, scope: !17010, file: !1729, line: 504, type: !2578)
!17014 = !DILocation(line: 504, column: 56, scope: !17010)
!17015 = !DILocalVariable(name: "work", arg: 2, scope: !17010, file: !1729, line: 505, type: !1738)
!17016 = !DILocation(line: 505, column: 30, scope: !17010)
!17017 = !DILocation(line: 507, column: 41, scope: !17010)
!17018 = !DILocation(line: 507, column: 45, scope: !17010)
!17019 = !DILocation(line: 507, column: 9, scope: !17010)
!17020 = !DILocation(line: 507, column: 2, scope: !17010)
!17021 = !DILocalVariable(name: "esw", arg: 1, scope: !2, file: !3, line: 2312, type: !7)
!17022 = !DILocation(line: 2312, column: 46, scope: !2)
!17023 = !DILocalVariable(name: "vport", scope: !2, file: !3, line: 2314, type: !11306)
!17024 = !DILocation(line: 2314, column: 21, scope: !2)
!17025 = !DILocalVariable(name: "err", scope: !2, file: !3, line: 2315, type: !6)
!17026 = !DILocation(line: 2315, column: 6, scope: !2)
!17027 = !DILocalVariable(name: "i", scope: !2, file: !3, line: 2315, type: !6)
!17028 = !DILocation(line: 2315, column: 11, scope: !2)
!17029 = !DILocation(line: 2317, column: 6, scope: !17030)
!17030 = distinct !DILexicalBlock(scope: !2, file: !3, line: 2317, column: 6)
!17031 = !DILocation(line: 2317, column: 53, scope: !17030)
!17032 = !DILocation(line: 2318, column: 6, scope: !17030)
!17033 = !DILocation(line: 2317, column: 6, scope: !2)
!17034 = !DILocation(line: 2319, column: 3, scope: !17030)
!17035 = !DILocation(line: 2319, column: 8, scope: !17030)
!17036 = !DILocation(line: 2319, column: 17, scope: !17030)
!17037 = !DILocation(line: 2319, column: 23, scope: !17030)
!17038 = !DILocation(line: 2321, column: 3, scope: !17030)
!17039 = !DILocation(line: 2321, column: 8, scope: !17030)
!17040 = !DILocation(line: 2321, column: 17, scope: !17030)
!17041 = !DILocation(line: 2321, column: 23, scope: !17030)
!17042 = !DILocation(line: 2323, column: 2, scope: !2)
!17043 = !DILocation(line: 2323, column: 2, scope: !17044)
!17044 = distinct !DILexicalBlock(scope: !2, file: !3, line: 2323, column: 2)
!17045 = !DILocation(line: 2324, column: 24, scope: !2)
!17046 = !DILocation(line: 2324, column: 29, scope: !2)
!17047 = !DILocation(line: 2324, column: 2, scope: !2)
!17048 = !DILocation(line: 2326, column: 34, scope: !2)
!17049 = !DILocation(line: 2326, column: 8, scope: !2)
!17050 = !DILocation(line: 2326, column: 6, scope: !2)
!17051 = !DILocation(line: 2327, column: 6, scope: !17052)
!17052 = distinct !DILexicalBlock(scope: !2, file: !3, line: 2327, column: 6)
!17053 = !DILocation(line: 2327, column: 6, scope: !2)
!17054 = !DILocation(line: 2328, column: 3, scope: !17052)
!17055 = !DILocation(line: 2330, column: 47, scope: !17056)
!17056 = distinct !DILexicalBlock(scope: !2, file: !3, line: 2330, column: 6)
!17057 = !DILocation(line: 2330, column: 6, scope: !17056)
!17058 = !DILocation(line: 2330, column: 6, scope: !2)
!17059 = !DILocation(line: 2331, column: 3, scope: !17056)
!17060 = !DILocation(line: 2331, column: 8, scope: !17056)
!17061 = !DILocation(line: 2331, column: 14, scope: !17056)
!17062 = !DILocation(line: 2333, column: 35, scope: !2)
!17063 = !DILocation(line: 2333, column: 8, scope: !2)
!17064 = !DILocation(line: 2333, column: 6, scope: !2)
!17065 = !DILocation(line: 2334, column: 6, scope: !17066)
!17066 = distinct !DILexicalBlock(scope: !2, file: !3, line: 2334, column: 6)
!17067 = !DILocation(line: 2334, column: 6, scope: !2)
!17068 = !DILocation(line: 2335, column: 3, scope: !17066)
!17069 = !DILocation(line: 2337, column: 39, scope: !2)
!17070 = !DILocation(line: 2337, column: 8, scope: !2)
!17071 = !DILocation(line: 2337, column: 6, scope: !2)
!17072 = !DILocation(line: 2338, column: 6, scope: !17073)
!17073 = distinct !DILexicalBlock(scope: !2, file: !3, line: 2338, column: 6)
!17074 = !DILocation(line: 2338, column: 6, scope: !2)
!17075 = !DILocation(line: 2339, column: 3, scope: !17073)
!17076 = !DILocation(line: 2341, column: 35, scope: !2)
!17077 = !DILocation(line: 2341, column: 8, scope: !2)
!17078 = !DILocation(line: 2341, column: 6, scope: !2)
!17079 = !DILocation(line: 2342, column: 6, scope: !17080)
!17080 = distinct !DILexicalBlock(scope: !2, file: !3, line: 2342, column: 6)
!17081 = !DILocation(line: 2342, column: 6, scope: !2)
!17082 = !DILocation(line: 2343, column: 3, scope: !17080)
!17083 = !DILocation(line: 2346, column: 2, scope: !17084)
!17084 = distinct !DILexicalBlock(scope: !2, file: !3, line: 2346, column: 2)
!17085 = !DILocation(line: 2346, column: 2, scope: !17086)
!17086 = distinct !DILexicalBlock(scope: !17084, file: !3, line: 2346, column: 2)
!17087 = !DILocation(line: 2347, column: 3, scope: !17086)
!17088 = !DILocation(line: 2347, column: 10, scope: !17086)
!17089 = !DILocation(line: 2347, column: 15, scope: !17086)
!17090 = !DILocation(line: 2347, column: 26, scope: !17086)
!17091 = distinct !{!17091, !17083, !17092}
!17092 = !DILocation(line: 2347, column: 28, scope: !17084)
!17093 = !DILocation(line: 2350, column: 30, scope: !2)
!17094 = !DILocation(line: 2350, column: 8, scope: !2)
!17095 = !DILocation(line: 2350, column: 6, scope: !2)
!17096 = !DILocation(line: 2351, column: 6, scope: !17097)
!17097 = distinct !DILexicalBlock(scope: !2, file: !3, line: 2351, column: 6)
!17098 = !DILocation(line: 2351, column: 6, scope: !2)
!17099 = !DILocation(line: 2352, column: 3, scope: !17097)
!17100 = !DILocation(line: 2354, column: 41, scope: !2)
!17101 = !DILocation(line: 2354, column: 8, scope: !2)
!17102 = !DILocation(line: 2354, column: 6, scope: !2)
!17103 = !DILocation(line: 2355, column: 6, scope: !17104)
!17104 = distinct !DILexicalBlock(scope: !2, file: !3, line: 2355, column: 6)
!17105 = !DILocation(line: 2355, column: 6, scope: !2)
!17106 = !DILocation(line: 2356, column: 3, scope: !17104)
!17107 = !DILocation(line: 2358, column: 27, scope: !2)
!17108 = !DILocation(line: 2358, column: 2, scope: !2)
!17109 = !DILocation(line: 2360, column: 2, scope: !2)
!17110 = !DILabel(scope: !2, name: "err_vports", file: !3, line: 2362)
!17111 = !DILocation(line: 2362, column: 1, scope: !2)
!17112 = !DILocation(line: 2363, column: 26, scope: !2)
!17113 = !DILocation(line: 2363, column: 2, scope: !2)
!17114 = !DILabel(scope: !2, name: "err_uplink", file: !3, line: 2364)
!17115 = !DILocation(line: 2364, column: 1, scope: !2)
!17116 = !DILocation(line: 2365, column: 32, scope: !2)
!17117 = !DILocation(line: 2365, column: 2, scope: !2)
!17118 = !DILabel(scope: !2, name: "err_steering_init", file: !3, line: 2366)
!17119 = !DILocation(line: 2366, column: 1, scope: !2)
!17120 = !DILocation(line: 2367, column: 33, scope: !2)
!17121 = !DILocation(line: 2367, column: 2, scope: !2)
!17122 = !DILabel(scope: !2, name: "err_vport_metadata", file: !3, line: 2368)
!17123 = !DILocation(line: 2368, column: 1, scope: !2)
!17124 = !DILocation(line: 2369, column: 31, scope: !2)
!17125 = !DILocation(line: 2369, column: 2, scope: !2)
!17126 = !DILabel(scope: !2, name: "err_metadata", file: !3, line: 2370)
!17127 = !DILocation(line: 2370, column: 1, scope: !2)
!17128 = !DILocation(line: 2371, column: 2, scope: !2)
!17129 = !DILocation(line: 2371, column: 7, scope: !2)
!17130 = !DILocation(line: 2371, column: 13, scope: !2)
!17131 = !DILocation(line: 2372, column: 25, scope: !2)
!17132 = !DILocation(line: 2372, column: 30, scope: !2)
!17133 = !DILocation(line: 2372, column: 2, scope: !2)
!17134 = !DILocation(line: 2373, column: 17, scope: !2)
!17135 = !DILocation(line: 2373, column: 22, scope: !2)
!17136 = !DILocation(line: 2373, column: 31, scope: !2)
!17137 = !DILocation(line: 2373, column: 2, scope: !2)
!17138 = !DILocation(line: 2374, column: 9, scope: !2)
!17139 = !DILocation(line: 2374, column: 2, scope: !2)
!17140 = !DILocation(line: 2375, column: 1, scope: !2)
!17141 = distinct !DISubprogram(name: "mlx5_esw_host_number_init", scope: !3, file: !3, line: 2294, type: !4, scopeLine: 2295, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!17142 = !DILocalVariable(name: "esw", arg: 1, scope: !17141, file: !3, line: 2294, type: !7)
!17143 = !DILocation(line: 2294, column: 59, scope: !17141)
!17144 = !DILocalVariable(name: "query_host_out", scope: !17141, file: !3, line: 2296, type: !4647)
!17145 = !DILocation(line: 2296, column: 13, scope: !17141)
!17146 = !DILocation(line: 2298, column: 37, scope: !17147)
!17147 = distinct !DILexicalBlock(scope: !17141, file: !3, line: 2298, column: 6)
!17148 = !DILocation(line: 2298, column: 42, scope: !17147)
!17149 = !DILocation(line: 2298, column: 7, scope: !17147)
!17150 = !DILocation(line: 2298, column: 6, scope: !17141)
!17151 = !DILocation(line: 2299, column: 3, scope: !17147)
!17152 = !DILocation(line: 2301, column: 44, scope: !17141)
!17153 = !DILocation(line: 2301, column: 49, scope: !17141)
!17154 = !DILocation(line: 2301, column: 19, scope: !17141)
!17155 = !DILocation(line: 2301, column: 17, scope: !17141)
!17156 = !DILocation(line: 2302, column: 13, scope: !17157)
!17157 = distinct !DILexicalBlock(scope: !17141, file: !3, line: 2302, column: 6)
!17158 = !DILocation(line: 2302, column: 6, scope: !17157)
!17159 = !DILocation(line: 2302, column: 6, scope: !17141)
!17160 = !DILocation(line: 2303, column: 18, scope: !17157)
!17161 = !DILocation(line: 2303, column: 10, scope: !17157)
!17162 = !DILocation(line: 2303, column: 3, scope: !17157)
!17163 = !DILocation(line: 2306, column: 30, scope: !17141)
!17164 = !DILocation(line: 2306, column: 2, scope: !17141)
!17165 = !DILocation(line: 2306, column: 7, scope: !17141)
!17166 = !DILocation(line: 2306, column: 16, scope: !17141)
!17167 = !DILocation(line: 2306, column: 28, scope: !17141)
!17168 = !DILocation(line: 2308, column: 9, scope: !17141)
!17169 = !DILocation(line: 2308, column: 2, scope: !17141)
!17170 = !DILocation(line: 2309, column: 2, scope: !17141)
!17171 = !DILocation(line: 2310, column: 1, scope: !17141)
!17172 = distinct !DISubprogram(name: "esw_check_vport_match_metadata_supported", scope: !3, file: !3, line: 2028, type: !16381, scopeLine: 2029, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!17173 = !DILocalVariable(name: "esw", arg: 1, scope: !17172, file: !3, line: 2028, type: !16383)
!17174 = !DILocation(line: 2028, column: 69, scope: !17172)
!17175 = !DILocation(line: 2030, column: 7, scope: !17176)
!17176 = distinct !DILexicalBlock(scope: !17172, file: !3, line: 2030, column: 6)
!17177 = !DILocation(line: 2030, column: 6, scope: !17172)
!17178 = !DILocation(line: 2031, column: 3, scope: !17176)
!17179 = !DILocation(line: 2033, column: 8, scope: !17180)
!17180 = distinct !DILexicalBlock(scope: !17172, file: !3, line: 2033, column: 6)
!17181 = !DILocation(line: 2033, column: 64, scope: !17180)
!17182 = !DILocation(line: 2033, column: 6, scope: !17172)
!17183 = !DILocation(line: 2035, column: 3, scope: !17180)
!17184 = !DILocation(line: 2037, column: 7, scope: !17185)
!17185 = distinct !DILexicalBlock(scope: !17172, file: !3, line: 2037, column: 6)
!17186 = !DILocation(line: 2037, column: 6, scope: !17172)
!17187 = !DILocation(line: 2038, column: 3, scope: !17185)
!17188 = !DILocation(line: 2040, column: 36, scope: !17189)
!17189 = distinct !DILexicalBlock(scope: !17172, file: !3, line: 2040, column: 6)
!17190 = !DILocation(line: 2040, column: 41, scope: !17189)
!17191 = !DILocation(line: 2040, column: 6, scope: !17189)
!17192 = !DILocation(line: 2040, column: 46, scope: !17189)
!17193 = !DILocation(line: 2041, column: 29, scope: !17189)
!17194 = !DILocation(line: 2041, column: 34, scope: !17189)
!17195 = !DILocation(line: 2041, column: 6, scope: !17189)
!17196 = !DILocation(line: 2040, column: 6, scope: !17172)
!17197 = !DILocation(line: 2042, column: 3, scope: !17189)
!17198 = !DILocation(line: 2044, column: 2, scope: !17172)
!17199 = !DILocation(line: 2045, column: 1, scope: !17172)
!17200 = distinct !DISubprogram(name: "esw_offloads_metadata_init", scope: !3, file: !3, line: 2106, type: !4, scopeLine: 2107, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!17201 = !DILocalVariable(name: "esw", arg: 1, scope: !17200, file: !3, line: 2106, type: !7)
!17202 = !DILocation(line: 2106, column: 60, scope: !17200)
!17203 = !DILocalVariable(name: "vport", scope: !17200, file: !3, line: 2108, type: !11306)
!17204 = !DILocation(line: 2108, column: 21, scope: !17200)
!17205 = !DILocalVariable(name: "err", scope: !17200, file: !3, line: 2109, type: !6)
!17206 = !DILocation(line: 2109, column: 6, scope: !17200)
!17207 = !DILocalVariable(name: "i", scope: !17200, file: !3, line: 2110, type: !6)
!17208 = !DILocation(line: 2110, column: 6, scope: !17200)
!17209 = !DILocation(line: 2112, column: 49, scope: !17210)
!17210 = distinct !DILexicalBlock(scope: !17200, file: !3, line: 2112, column: 6)
!17211 = !DILocation(line: 2112, column: 7, scope: !17210)
!17212 = !DILocation(line: 2112, column: 6, scope: !17200)
!17213 = !DILocation(line: 2113, column: 3, scope: !17210)
!17214 = !DILocation(line: 2115, column: 2, scope: !17215)
!17215 = distinct !DILexicalBlock(scope: !17200, file: !3, line: 2115, column: 2)
!17216 = !DILocation(line: 2115, column: 2, scope: !17217)
!17217 = distinct !DILexicalBlock(scope: !17215, file: !3, line: 2115, column: 2)
!17218 = !DILocation(line: 2116, column: 43, scope: !17219)
!17219 = distinct !DILexicalBlock(scope: !17217, file: !3, line: 2115, column: 41)
!17220 = !DILocation(line: 2116, column: 48, scope: !17219)
!17221 = !DILocation(line: 2116, column: 9, scope: !17219)
!17222 = !DILocation(line: 2116, column: 7, scope: !17219)
!17223 = !DILocation(line: 2117, column: 7, scope: !17224)
!17224 = distinct !DILexicalBlock(scope: !17219, file: !3, line: 2117, column: 7)
!17225 = !DILocation(line: 2117, column: 7, scope: !17219)
!17226 = !DILocation(line: 2118, column: 4, scope: !17224)
!17227 = !DILocation(line: 2119, column: 2, scope: !17219)
!17228 = distinct !{!17228, !17214, !17229}
!17229 = !DILocation(line: 2119, column: 2, scope: !17215)
!17230 = !DILocation(line: 2121, column: 2, scope: !17200)
!17231 = !DILabel(scope: !17200, name: "metadata_err", file: !3, line: 2123)
!17232 = !DILocation(line: 2123, column: 1, scope: !17200)
!17233 = !DILocation(line: 2124, column: 31, scope: !17200)
!17234 = !DILocation(line: 2124, column: 2, scope: !17200)
!17235 = !DILocation(line: 2125, column: 9, scope: !17200)
!17236 = !DILocation(line: 2125, column: 2, scope: !17200)
!17237 = !DILocation(line: 2126, column: 1, scope: !17200)
!17238 = distinct !DISubprogram(name: "esw_set_passing_vport_metadata", scope: !3, file: !3, line: 819, type: !17239, scopeLine: 820, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!17239 = !DISubroutineType(types: !17240)
!17240 = !{!6, !7, !304}
!17241 = !DILocalVariable(name: "esw", arg: 1, scope: !17238, file: !3, line: 819, type: !7)
!17242 = !DILocation(line: 819, column: 64, scope: !17238)
!17243 = !DILocalVariable(name: "enable", arg: 2, scope: !17238, file: !3, line: 819, type: !304)
!17244 = !DILocation(line: 819, column: 74, scope: !17238)
!17245 = !DILocalVariable(name: "out", scope: !17238, file: !3, line: 821, type: !17246)
!17246 = !DICompositeType(tag: DW_TAG_array_type, baseType: !229, size: 2176, elements: !17247)
!17247 = !{!17248}
!17248 = !DISubrange(count: 68)
!17249 = !DILocation(line: 821, column: 6, scope: !17238)
!17250 = !DILocalVariable(name: "min", scope: !17238, file: !3, line: 822, type: !17246)
!17251 = !DILocation(line: 822, column: 6, scope: !17238)
!17252 = !DILocalVariable(name: "in", scope: !17238, file: !3, line: 823, type: !17253)
!17253 = !DICompositeType(tag: DW_TAG_array_type, baseType: !229, size: 128, elements: !1212)
!17254 = !DILocation(line: 823, column: 6, scope: !17238)
!17255 = !DILocalVariable(name: "curr", scope: !17238, file: !3, line: 824, type: !1403)
!17256 = !DILocation(line: 824, column: 5, scope: !17238)
!17257 = !DILocalVariable(name: "wanted", scope: !17238, file: !3, line: 824, type: !1403)
!17258 = !DILocation(line: 824, column: 11, scope: !17238)
!17259 = !DILocalVariable(name: "err", scope: !17238, file: !3, line: 825, type: !6)
!17260 = !DILocation(line: 825, column: 6, scope: !17238)
!17261 = !DILocation(line: 827, column: 46, scope: !17262)
!17262 = distinct !DILexicalBlock(scope: !17238, file: !3, line: 827, column: 6)
!17263 = !DILocation(line: 827, column: 7, scope: !17262)
!17264 = !DILocation(line: 827, column: 51, scope: !17262)
!17265 = !DILocation(line: 828, column: 49, scope: !17262)
!17266 = !DILocation(line: 828, column: 7, scope: !17262)
!17267 = !DILocation(line: 827, column: 6, scope: !17238)
!17268 = !DILocation(line: 829, column: 3, scope: !17262)
!17269 = !DILocation(line: 831, column: 2, scope: !17238)
!17270 = !DILocalVariable(name: "_v", scope: !17271, file: !3, line: 831, type: !229)
!17271 = distinct !DILexicalBlock(scope: !17238, file: !3, line: 831, column: 2)
!17272 = !DILocation(line: 831, column: 2, scope: !17271)
!17273 = !DILocation(line: 831, column: 2, scope: !17274)
!17274 = distinct !DILexicalBlock(scope: !17271, file: !3, line: 831, column: 2)
!17275 = !DILocation(line: 833, column: 8, scope: !17276)
!17276 = distinct !DILexicalBlock(scope: !17238, file: !3, line: 833, column: 8)
!17277 = !DILocation(line: 833, column: 8, scope: !17238)
!17278 = !DILocation(line: 833, column: 6, scope: !17238)
!17279 = !DILocation(line: 834, column: 6, scope: !17280)
!17280 = distinct !DILexicalBlock(scope: !17238, file: !3, line: 834, column: 6)
!17281 = !DILocation(line: 834, column: 6, scope: !17238)
!17282 = !DILocation(line: 835, column: 10, scope: !17280)
!17283 = !DILocation(line: 835, column: 3, scope: !17280)
!17284 = !DILocation(line: 837, column: 9, scope: !17238)
!17285 = !DILocation(line: 837, column: 7, scope: !17238)
!17286 = !DILocation(line: 839, column: 9, scope: !17238)
!17287 = !DILocation(line: 840, column: 45, scope: !17288)
!17288 = distinct !DILexicalBlock(scope: !17238, file: !3, line: 840, column: 6)
!17289 = !DILocation(line: 840, column: 6, scope: !17288)
!17290 = !DILocation(line: 840, column: 6, scope: !17238)
!17291 = !DILocation(line: 841, column: 10, scope: !17288)
!17292 = !DILocation(line: 841, column: 3, scope: !17288)
!17293 = !DILocation(line: 843, column: 6, scope: !17294)
!17294 = distinct !DILexicalBlock(scope: !17238, file: !3, line: 843, column: 6)
!17295 = !DILocation(line: 843, column: 6, scope: !17238)
!17296 = !DILocation(line: 844, column: 11, scope: !17294)
!17297 = !DILocation(line: 844, column: 8, scope: !17294)
!17298 = !DILocation(line: 844, column: 3, scope: !17294)
!17299 = !DILocation(line: 846, column: 12, scope: !17294)
!17300 = !DILocation(line: 846, column: 11, scope: !17294)
!17301 = !DILocation(line: 846, column: 8, scope: !17294)
!17302 = !DILocation(line: 848, column: 2, scope: !17238)
!17303 = !DILocalVariable(name: "_v", scope: !17304, file: !3, line: 848, type: !229)
!17304 = distinct !DILexicalBlock(scope: !17238, file: !3, line: 848, column: 2)
!17305 = !DILocation(line: 848, column: 2, scope: !17304)
!17306 = !DILocation(line: 848, column: 2, scope: !17307)
!17307 = distinct !DILexicalBlock(scope: !17304, file: !3, line: 848, column: 2)
!17308 = !DILocation(line: 850, column: 2, scope: !17238)
!17309 = !DILocalVariable(name: "_v", scope: !17310, file: !3, line: 850, type: !229)
!17310 = distinct !DILexicalBlock(scope: !17238, file: !3, line: 850, column: 2)
!17311 = !DILocation(line: 850, column: 2, scope: !17310)
!17312 = !DILocation(line: 850, column: 2, scope: !17313)
!17313 = distinct !DILexicalBlock(scope: !17310, file: !3, line: 850, column: 2)
!17314 = !DILocation(line: 853, column: 46, scope: !17238)
!17315 = !DILocation(line: 853, column: 51, scope: !17238)
!17316 = !DILocation(line: 853, column: 66, scope: !17238)
!17317 = !DILocation(line: 853, column: 8, scope: !17238)
!17318 = !DILocation(line: 853, column: 6, scope: !17238)
!17319 = !DILocation(line: 854, column: 7, scope: !17320)
!17320 = distinct !DILexicalBlock(scope: !17238, file: !3, line: 854, column: 6)
!17321 = !DILocation(line: 854, column: 6, scope: !17238)
!17322 = !DILocation(line: 855, column: 7, scope: !17323)
!17323 = distinct !DILexicalBlock(scope: !17324, file: !3, line: 855, column: 7)
!17324 = distinct !DILexicalBlock(scope: !17320, file: !3, line: 854, column: 12)
!17325 = !DILocation(line: 855, column: 14, scope: !17323)
!17326 = !DILocation(line: 855, column: 18, scope: !17323)
!17327 = !DILocation(line: 855, column: 23, scope: !17323)
!17328 = !DILocation(line: 855, column: 7, scope: !17324)
!17329 = !DILocation(line: 856, column: 4, scope: !17323)
!17330 = !DILocation(line: 856, column: 9, scope: !17323)
!17331 = !DILocation(line: 856, column: 15, scope: !17323)
!17332 = !DILocation(line: 858, column: 4, scope: !17323)
!17333 = !DILocation(line: 858, column: 9, scope: !17323)
!17334 = !DILocation(line: 858, column: 15, scope: !17323)
!17335 = !DILocation(line: 859, column: 2, scope: !17324)
!17336 = !DILocation(line: 861, column: 9, scope: !17238)
!17337 = !DILocation(line: 861, column: 2, scope: !17238)
!17338 = !DILocation(line: 862, column: 1, scope: !17238)
!17339 = !DILocalVariable(name: "esw", arg: 1, scope: !12302, file: !3, line: 2173, type: !7)
!17340 = !DILocation(line: 2173, column: 60, scope: !12302)
!17341 = !DILocalVariable(name: "err", scope: !12302, file: !3, line: 2175, type: !6)
!17342 = !DILocation(line: 2175, column: 6, scope: !12302)
!17343 = !DILocation(line: 2177, column: 10, scope: !12302)
!17344 = !DILocation(line: 2177, column: 15, scope: !12302)
!17345 = !DILocation(line: 2177, column: 25, scope: !12302)
!17346 = !DILocation(line: 2177, column: 2, scope: !12302)
!17347 = !DILocation(line: 2178, column: 2, scope: !12302)
!17348 = !DILocation(line: 2178, column: 2, scope: !17349)
!17349 = distinct !DILexicalBlock(scope: !12302, file: !3, line: 2178, column: 2)
!17350 = !DILocation(line: 2179, column: 2, scope: !12302)
!17351 = !DILocation(line: 2181, column: 46, scope: !12302)
!17352 = !DILocation(line: 2181, column: 8, scope: !12302)
!17353 = !DILocation(line: 2181, column: 6, scope: !12302)
!17354 = !DILocation(line: 2182, column: 6, scope: !17355)
!17355 = distinct !DILexicalBlock(scope: !12302, file: !3, line: 2182, column: 6)
!17356 = !DILocation(line: 2182, column: 6, scope: !12302)
!17357 = !DILocation(line: 2183, column: 3, scope: !17355)
!17358 = !DILocation(line: 2185, column: 34, scope: !12302)
!17359 = !DILocation(line: 2185, column: 8, scope: !12302)
!17360 = !DILocation(line: 2185, column: 6, scope: !12302)
!17361 = !DILocation(line: 2186, column: 6, scope: !17362)
!17362 = distinct !DILexicalBlock(scope: !12302, file: !3, line: 2186, column: 6)
!17363 = !DILocation(line: 2186, column: 6, scope: !12302)
!17364 = !DILocation(line: 2187, column: 3, scope: !17362)
!17365 = !DILocation(line: 2189, column: 33, scope: !12302)
!17366 = !DILocation(line: 2189, column: 8, scope: !12302)
!17367 = !DILocation(line: 2189, column: 6, scope: !12302)
!17368 = !DILocation(line: 2190, column: 6, scope: !17369)
!17369 = distinct !DILexicalBlock(scope: !12302, file: !3, line: 2190, column: 6)
!17370 = !DILocation(line: 2190, column: 6, scope: !12302)
!17371 = !DILocation(line: 2191, column: 3, scope: !17369)
!17372 = !DILocation(line: 2193, column: 39, scope: !12302)
!17373 = !DILocation(line: 2193, column: 8, scope: !12302)
!17374 = !DILocation(line: 2193, column: 6, scope: !12302)
!17375 = !DILocation(line: 2194, column: 6, scope: !17376)
!17376 = distinct !DILexicalBlock(scope: !12302, file: !3, line: 2194, column: 6)
!17377 = !DILocation(line: 2194, column: 6, scope: !12302)
!17378 = !DILocation(line: 2195, column: 3, scope: !17376)
!17379 = !DILocation(line: 2197, column: 34, scope: !12302)
!17380 = !DILocation(line: 2197, column: 8, scope: !12302)
!17381 = !DILocation(line: 2197, column: 6, scope: !12302)
!17382 = !DILocation(line: 2198, column: 6, scope: !17383)
!17383 = distinct !DILexicalBlock(scope: !12302, file: !3, line: 2198, column: 6)
!17384 = !DILocation(line: 2198, column: 6, scope: !12302)
!17385 = !DILocation(line: 2199, column: 3, scope: !17383)
!17386 = !DILocation(line: 2201, column: 2, scope: !12302)
!17387 = !DILabel(scope: !12302, name: "create_fg_err", file: !3, line: 2203)
!17388 = !DILocation(line: 2203, column: 1, scope: !12302)
!17389 = !DILocation(line: 2204, column: 34, scope: !12302)
!17390 = !DILocation(line: 2204, column: 2, scope: !12302)
!17391 = !DILabel(scope: !12302, name: "create_fdb_err", file: !3, line: 2205)
!17392 = !DILocation(line: 2205, column: 1, scope: !12302)
!17393 = !DILocation(line: 2206, column: 28, scope: !12302)
!17394 = !DILocation(line: 2206, column: 2, scope: !12302)
!17395 = !DILabel(scope: !12302, name: "create_restore_err", file: !3, line: 2207)
!17396 = !DILocation(line: 2207, column: 1, scope: !12302)
!17397 = !DILocation(line: 2208, column: 29, scope: !12302)
!17398 = !DILocation(line: 2208, column: 2, scope: !12302)
!17399 = !DILabel(scope: !12302, name: "create_offloads_err", file: !3, line: 2209)
!17400 = !DILocation(line: 2209, column: 1, scope: !12302)
!17401 = !DILocation(line: 2210, column: 41, scope: !12302)
!17402 = !DILocation(line: 2210, column: 2, scope: !12302)
!17403 = !DILabel(scope: !12302, name: "create_acl_err", file: !3, line: 2211)
!17404 = !DILocation(line: 2211, column: 1, scope: !12302)
!17405 = !DILocation(line: 2212, column: 17, scope: !12302)
!17406 = !DILocation(line: 2212, column: 22, scope: !12302)
!17407 = !DILocation(line: 2212, column: 32, scope: !12302)
!17408 = !DILocation(line: 2212, column: 41, scope: !12302)
!17409 = !DILocation(line: 2212, column: 48, scope: !12302)
!17410 = !DILocation(line: 2212, column: 2, scope: !12302)
!17411 = !DILocation(line: 2213, column: 9, scope: !12302)
!17412 = !DILocation(line: 2213, column: 2, scope: !12302)
!17413 = !DILocation(line: 2214, column: 1, scope: !12302)
!17414 = !DILocalVariable(name: "esw", arg: 1, scope: !12305, file: !3, line: 1994, type: !7)
!17415 = !DILocation(line: 1994, column: 59, scope: !12305)
!17416 = !DILocalVariable(name: "devcom", scope: !12305, file: !3, line: 1996, type: !10821)
!17417 = !DILocation(line: 1996, column: 22, scope: !12305)
!17418 = !DILocation(line: 1996, column: 31, scope: !12305)
!17419 = !DILocation(line: 1996, column: 36, scope: !12305)
!17420 = !DILocation(line: 1996, column: 41, scope: !12305)
!17421 = !DILocation(line: 1996, column: 46, scope: !12305)
!17422 = !DILocation(line: 1998, column: 18, scope: !12305)
!17423 = !DILocation(line: 1998, column: 23, scope: !12305)
!17424 = !DILocation(line: 1998, column: 32, scope: !12305)
!17425 = !DILocation(line: 1998, column: 2, scope: !12305)
!17426 = !DILocation(line: 1999, column: 2, scope: !12305)
!17427 = !DILocation(line: 1999, column: 2, scope: !17428)
!17428 = distinct !DILexicalBlock(scope: !12305, file: !3, line: 1999, column: 2)
!17429 = !DILocation(line: 2001, column: 7, scope: !17430)
!17430 = distinct !DILexicalBlock(scope: !12305, file: !3, line: 2001, column: 6)
!17431 = !DILocation(line: 2001, column: 6, scope: !12305)
!17432 = !DILocation(line: 2002, column: 3, scope: !17430)
!17433 = !DILocation(line: 2004, column: 33, scope: !12305)
!17434 = !DILocation(line: 2007, column: 12, scope: !12305)
!17435 = !DILocation(line: 2004, column: 2, scope: !12305)
!17436 = !DILocation(line: 2009, column: 25, scope: !12305)
!17437 = !DILocation(line: 2011, column: 37, scope: !12305)
!17438 = !DILocation(line: 2009, column: 2, scope: !12305)
!17439 = !DILocation(line: 2012, column: 1, scope: !12305)
!17440 = distinct !DISubprogram(name: "esw_offloads_steering_cleanup", scope: !3, file: !3, line: 2216, type: !12306, scopeLine: 2217, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!17441 = !DILocalVariable(name: "esw", arg: 1, scope: !17440, file: !3, line: 2216, type: !7)
!17442 = !DILocation(line: 2216, column: 64, scope: !17440)
!17443 = !DILocation(line: 2218, column: 29, scope: !17440)
!17444 = !DILocation(line: 2218, column: 2, scope: !17440)
!17445 = !DILocation(line: 2219, column: 34, scope: !17440)
!17446 = !DILocation(line: 2219, column: 2, scope: !17440)
!17447 = !DILocation(line: 2220, column: 28, scope: !17440)
!17448 = !DILocation(line: 2220, column: 2, scope: !17440)
!17449 = !DILocation(line: 2221, column: 29, scope: !17440)
!17450 = !DILocation(line: 2221, column: 2, scope: !17440)
!17451 = !DILocation(line: 2222, column: 41, scope: !17440)
!17452 = !DILocation(line: 2222, column: 2, scope: !17440)
!17453 = !DILocation(line: 2223, column: 17, scope: !17440)
!17454 = !DILocation(line: 2223, column: 22, scope: !17440)
!17455 = !DILocation(line: 2223, column: 32, scope: !17440)
!17456 = !DILocation(line: 2223, column: 41, scope: !17440)
!17457 = !DILocation(line: 2223, column: 48, scope: !17440)
!17458 = !DILocation(line: 2223, column: 2, scope: !17440)
!17459 = !DILocation(line: 2224, column: 1, scope: !17440)
!17460 = distinct !DISubprogram(name: "esw_offloads_metadata_uninit", scope: !3, file: !3, line: 2094, type: !12306, scopeLine: 2095, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!17461 = !DILocalVariable(name: "esw", arg: 1, scope: !17460, file: !3, line: 2094, type: !7)
!17462 = !DILocation(line: 2094, column: 63, scope: !17460)
!17463 = !DILocalVariable(name: "vport", scope: !17460, file: !3, line: 2096, type: !11306)
!17464 = !DILocation(line: 2096, column: 21, scope: !17460)
!17465 = !DILocalVariable(name: "i", scope: !17460, file: !3, line: 2097, type: !6)
!17466 = !DILocation(line: 2097, column: 6, scope: !17460)
!17467 = !DILocation(line: 2099, column: 49, scope: !17468)
!17468 = distinct !DILexicalBlock(scope: !17460, file: !3, line: 2099, column: 6)
!17469 = !DILocation(line: 2099, column: 7, scope: !17468)
!17470 = !DILocation(line: 2099, column: 6, scope: !17460)
!17471 = !DILocation(line: 2100, column: 3, scope: !17468)
!17472 = !DILocation(line: 2102, column: 2, scope: !17473)
!17473 = distinct !DILexicalBlock(scope: !17460, file: !3, line: 2102, column: 2)
!17474 = !DILocation(line: 2102, column: 2, scope: !17475)
!17475 = distinct !DILexicalBlock(scope: !17473, file: !3, line: 2102, column: 2)
!17476 = !DILocation(line: 2103, column: 39, scope: !17475)
!17477 = !DILocation(line: 2103, column: 44, scope: !17475)
!17478 = !DILocation(line: 2103, column: 3, scope: !17475)
!17479 = distinct !{!17479, !17472, !17480}
!17480 = !DILocation(line: 2103, column: 49, scope: !17473)
!17481 = !DILocation(line: 2104, column: 1, scope: !17460)
!17482 = distinct !DISubprogram(name: "mutex_destroy", scope: !559, file: !559, line: 103, type: !17483, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!17483 = !DISubroutineType(types: !17484)
!17484 = !{null, !17485}
!17485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !558, size: 64)
!17486 = !DILocalVariable(name: "lock", arg: 1, scope: !17482, file: !559, line: 103, type: !17485)
!17487 = !DILocation(line: 103, column: 48, scope: !17482)
!17488 = !DILocation(line: 103, column: 55, scope: !17482)
!17489 = distinct !DISubprogram(name: "esw_offloads_disable", scope: !3, file: !3, line: 2398, type: !12306, scopeLine: 2399, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!17490 = !DILocalVariable(name: "esw", arg: 1, scope: !17489, file: !3, line: 2398, type: !7)
!17491 = !DILocation(line: 2398, column: 48, scope: !17489)
!17492 = !DILocation(line: 2400, column: 30, scope: !17489)
!17493 = !DILocation(line: 2400, column: 2, scope: !17489)
!17494 = !DILocation(line: 2401, column: 36, scope: !17489)
!17495 = !DILocation(line: 2401, column: 2, scope: !17489)
!17496 = !DILocation(line: 2402, column: 26, scope: !17489)
!17497 = !DILocation(line: 2402, column: 2, scope: !17489)
!17498 = !DILocation(line: 2403, column: 33, scope: !17489)
!17499 = !DILocation(line: 2403, column: 2, scope: !17489)
!17500 = !DILocation(line: 2404, column: 32, scope: !17489)
!17501 = !DILocation(line: 2404, column: 2, scope: !17489)
!17502 = !DILocation(line: 2405, column: 31, scope: !17489)
!17503 = !DILocation(line: 2405, column: 2, scope: !17489)
!17504 = !DILocation(line: 2406, column: 2, scope: !17489)
!17505 = !DILocation(line: 2406, column: 7, scope: !17489)
!17506 = !DILocation(line: 2406, column: 13, scope: !17489)
!17507 = !DILocation(line: 2407, column: 25, scope: !17489)
!17508 = !DILocation(line: 2407, column: 30, scope: !17489)
!17509 = !DILocation(line: 2407, column: 2, scope: !17489)
!17510 = !DILocation(line: 2408, column: 17, scope: !17489)
!17511 = !DILocation(line: 2408, column: 22, scope: !17489)
!17512 = !DILocation(line: 2408, column: 31, scope: !17489)
!17513 = !DILocation(line: 2408, column: 2, scope: !17489)
!17514 = !DILocation(line: 2409, column: 2, scope: !17489)
!17515 = !DILocation(line: 2409, column: 7, scope: !17489)
!17516 = !DILocation(line: 2409, column: 16, scope: !17489)
!17517 = !DILocation(line: 2409, column: 22, scope: !17489)
!17518 = !DILocation(line: 2410, column: 1, scope: !17489)
!17519 = distinct !DISubprogram(name: "esw_offloads_devcom_cleanup", scope: !3, file: !3, line: 2014, type: !12306, scopeLine: 2015, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!17520 = !DILocalVariable(name: "esw", arg: 1, scope: !17519, file: !3, line: 2014, type: !7)
!17521 = !DILocation(line: 2014, column: 62, scope: !17519)
!17522 = !DILocalVariable(name: "devcom", scope: !17519, file: !3, line: 2016, type: !10821)
!17523 = !DILocation(line: 2016, column: 22, scope: !17519)
!17524 = !DILocation(line: 2016, column: 31, scope: !17519)
!17525 = !DILocation(line: 2016, column: 36, scope: !17519)
!17526 = !DILocation(line: 2016, column: 41, scope: !17519)
!17527 = !DILocation(line: 2016, column: 46, scope: !17519)
!17528 = !DILocation(line: 2018, column: 7, scope: !17529)
!17529 = distinct !DILexicalBlock(scope: !17519, file: !3, line: 2018, column: 6)
!17530 = !DILocation(line: 2018, column: 6, scope: !17519)
!17531 = !DILocation(line: 2019, column: 3, scope: !17529)
!17532 = !DILocation(line: 2021, column: 25, scope: !17519)
!17533 = !DILocation(line: 2022, column: 39, scope: !17519)
!17534 = !DILocation(line: 2021, column: 2, scope: !17519)
!17535 = !DILocation(line: 2024, column: 35, scope: !17519)
!17536 = !DILocation(line: 2024, column: 2, scope: !17519)
!17537 = !DILocation(line: 2025, column: 1, scope: !17519)
!17538 = distinct !DISubprogram(name: "mlx5_devlink_eswitch_mode_set", scope: !3, file: !3, line: 2497, type: !4028, scopeLine: 2499, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!17539 = !DILocalVariable(name: "devlink", arg: 1, scope: !17538, file: !3, line: 2497, type: !3880)
!17540 = !DILocation(line: 2497, column: 51, scope: !17538)
!17541 = !DILocalVariable(name: "mode", arg: 2, scope: !17538, file: !3, line: 2497, type: !744)
!17542 = !DILocation(line: 2497, column: 64, scope: !17538)
!17543 = !DILocalVariable(name: "extack", arg: 3, scope: !17538, file: !3, line: 2498, type: !2496)
!17544 = !DILocation(line: 2498, column: 31, scope: !17538)
!17545 = !DILocalVariable(name: "cur_mlx5_mode", scope: !17538, file: !3, line: 2500, type: !744)
!17546 = !DILocation(line: 2500, column: 6, scope: !17538)
!17547 = !DILocalVariable(name: "mlx5_mode", scope: !17538, file: !3, line: 2500, type: !744)
!17548 = !DILocation(line: 2500, column: 21, scope: !17538)
!17549 = !DILocalVariable(name: "esw", scope: !17538, file: !3, line: 2501, type: !7)
!17550 = !DILocation(line: 2501, column: 23, scope: !17538)
!17551 = !DILocalVariable(name: "err", scope: !17538, file: !3, line: 2502, type: !6)
!17552 = !DILocation(line: 2502, column: 6, scope: !17538)
!17553 = !DILocation(line: 2504, column: 33, scope: !17538)
!17554 = !DILocation(line: 2504, column: 8, scope: !17538)
!17555 = !DILocation(line: 2504, column: 6, scope: !17538)
!17556 = !DILocation(line: 2505, column: 13, scope: !17557)
!17557 = distinct !DILexicalBlock(scope: !17538, file: !3, line: 2505, column: 6)
!17558 = !DILocation(line: 2505, column: 6, scope: !17557)
!17559 = !DILocation(line: 2505, column: 6, scope: !17538)
!17560 = !DILocation(line: 2506, column: 18, scope: !17557)
!17561 = !DILocation(line: 2506, column: 10, scope: !17557)
!17562 = !DILocation(line: 2506, column: 3, scope: !17557)
!17563 = !DILocation(line: 2508, column: 28, scope: !17564)
!17564 = distinct !DILexicalBlock(scope: !17538, file: !3, line: 2508, column: 6)
!17565 = !DILocation(line: 2508, column: 6, scope: !17564)
!17566 = !DILocation(line: 2508, column: 6, scope: !17538)
!17567 = !DILocation(line: 2509, column: 3, scope: !17564)
!17568 = !DILocation(line: 2511, column: 14, scope: !17538)
!17569 = !DILocation(line: 2511, column: 19, scope: !17538)
!17570 = !DILocation(line: 2511, column: 2, scope: !17538)
!17571 = !DILocation(line: 2512, column: 18, scope: !17538)
!17572 = !DILocation(line: 2512, column: 23, scope: !17538)
!17573 = !DILocation(line: 2512, column: 16, scope: !17538)
!17574 = !DILocation(line: 2513, column: 6, scope: !17575)
!17575 = distinct !DILexicalBlock(scope: !17538, file: !3, line: 2513, column: 6)
!17576 = !DILocation(line: 2513, column: 23, scope: !17575)
!17577 = !DILocation(line: 2513, column: 20, scope: !17575)
!17578 = !DILocation(line: 2513, column: 6, scope: !17538)
!17579 = !DILocation(line: 2514, column: 3, scope: !17575)
!17580 = !DILocation(line: 2516, column: 6, scope: !17581)
!17581 = distinct !DILexicalBlock(scope: !17538, file: !3, line: 2516, column: 6)
!17582 = !DILocation(line: 2516, column: 11, scope: !17581)
!17583 = !DILocation(line: 2516, column: 6, scope: !17538)
!17584 = !DILocation(line: 2517, column: 28, scope: !17581)
!17585 = !DILocation(line: 2517, column: 33, scope: !17581)
!17586 = !DILocation(line: 2517, column: 9, scope: !17581)
!17587 = !DILocation(line: 2517, column: 7, scope: !17581)
!17588 = !DILocation(line: 2517, column: 3, scope: !17581)
!17589 = !DILocation(line: 2518, column: 11, scope: !17590)
!17590 = distinct !DILexicalBlock(scope: !17581, file: !3, line: 2518, column: 11)
!17591 = !DILocation(line: 2518, column: 16, scope: !17590)
!17592 = !DILocation(line: 2518, column: 11, scope: !17581)
!17593 = !DILocation(line: 2519, column: 27, scope: !17590)
!17594 = !DILocation(line: 2519, column: 32, scope: !17590)
!17595 = !DILocation(line: 2519, column: 9, scope: !17590)
!17596 = !DILocation(line: 2519, column: 7, scope: !17590)
!17597 = !DILocation(line: 2519, column: 3, scope: !17590)
!17598 = !DILocation(line: 2521, column: 7, scope: !17590)
!17599 = !DILocation(line: 2516, column: 14, scope: !17581)
!17600 = !DILabel(scope: !17538, name: "unlock", file: !3, line: 2523)
!17601 = !DILocation(line: 2523, column: 1, scope: !17538)
!17602 = !DILocation(line: 2524, column: 16, scope: !17538)
!17603 = !DILocation(line: 2524, column: 21, scope: !17538)
!17604 = !DILocation(line: 2524, column: 2, scope: !17538)
!17605 = !DILocation(line: 2525, column: 9, scope: !17538)
!17606 = !DILocation(line: 2525, column: 2, scope: !17538)
!17607 = !DILocation(line: 2526, column: 1, scope: !17538)
!17608 = distinct !DISubprogram(name: "esw_mode_from_devlink", scope: !3, file: !3, line: 2412, type: !17609, scopeLine: 2413, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!17609 = !DISubroutineType(types: !17610)
!17610 = !{!6, !744, !4004}
!17611 = !DILocalVariable(name: "mode", arg: 1, scope: !17608, file: !3, line: 2412, type: !744)
!17612 = !DILocation(line: 2412, column: 38, scope: !17608)
!17613 = !DILocalVariable(name: "mlx5_mode", arg: 2, scope: !17608, file: !3, line: 2412, type: !4004)
!17614 = !DILocation(line: 2412, column: 49, scope: !17608)
!17615 = !DILocation(line: 2414, column: 10, scope: !17608)
!17616 = !DILocation(line: 2414, column: 2, scope: !17608)
!17617 = !DILocation(line: 2416, column: 4, scope: !17618)
!17618 = distinct !DILexicalBlock(scope: !17608, file: !3, line: 2414, column: 16)
!17619 = !DILocation(line: 2416, column: 14, scope: !17618)
!17620 = !DILocation(line: 2417, column: 3, scope: !17618)
!17621 = !DILocation(line: 2419, column: 4, scope: !17618)
!17622 = !DILocation(line: 2419, column: 14, scope: !17618)
!17623 = !DILocation(line: 2420, column: 3, scope: !17618)
!17624 = !DILocation(line: 2422, column: 3, scope: !17618)
!17625 = !DILocation(line: 2425, column: 2, scope: !17608)
!17626 = !DILocation(line: 2426, column: 1, scope: !17608)
!17627 = !DILocalVariable(name: "esw", arg: 1, scope: !12310, file: !3, line: 1737, type: !7)
!17628 = !DILocation(line: 1737, column: 52, scope: !12310)
!17629 = !DILocalVariable(name: "extack", arg: 2, scope: !12310, file: !3, line: 1738, type: !2496)
!17630 = !DILocation(line: 1738, column: 34, scope: !12310)
!17631 = !DILocalVariable(name: "err", scope: !12310, file: !3, line: 1740, type: !6)
!17632 = !DILocation(line: 1740, column: 6, scope: !12310)
!17633 = !DILocalVariable(name: "err1", scope: !12310, file: !3, line: 1740, type: !6)
!17634 = !DILocation(line: 1740, column: 11, scope: !12310)
!17635 = !DILocation(line: 1742, column: 30, scope: !12310)
!17636 = !DILocation(line: 1742, column: 2, scope: !12310)
!17637 = !DILocation(line: 1743, column: 35, scope: !12310)
!17638 = !DILocation(line: 1744, column: 7, scope: !12310)
!17639 = !DILocation(line: 1744, column: 12, scope: !12310)
!17640 = !DILocation(line: 1744, column: 17, scope: !12310)
!17641 = !DILocation(line: 1744, column: 22, scope: !12310)
!17642 = !DILocation(line: 1744, column: 28, scope: !12310)
!17643 = !DILocation(line: 1743, column: 8, scope: !12310)
!17644 = !DILocation(line: 1743, column: 6, scope: !12310)
!17645 = !DILocation(line: 1745, column: 6, scope: !17646)
!17646 = distinct !DILexicalBlock(scope: !12310, file: !3, line: 1745, column: 6)
!17647 = !DILocation(line: 1745, column: 6, scope: !12310)
!17648 = !DILocation(line: 1746, column: 3, scope: !17649)
!17649 = distinct !DILexicalBlock(scope: !17646, file: !3, line: 1745, column: 11)
!17650 = !DILocalVariable(name: "__extack", scope: !17651, file: !3, line: 1746, type: !2496)
!17651 = distinct !DILexicalBlock(scope: !17649, file: !3, line: 1746, column: 3)
!17652 = !DILocation(line: 1746, column: 3, scope: !17651)
!17653 = !DILocation(line: 1746, column: 3, scope: !17654)
!17654 = distinct !DILexicalBlock(scope: !17651, file: !3, line: 1746, column: 3)
!17655 = !DILocation(line: 1748, column: 37, scope: !17649)
!17656 = !DILocation(line: 1748, column: 10, scope: !17649)
!17657 = !DILocation(line: 1748, column: 8, scope: !17649)
!17658 = !DILocation(line: 1750, column: 7, scope: !17659)
!17659 = distinct !DILexicalBlock(scope: !17649, file: !3, line: 1750, column: 7)
!17660 = !DILocation(line: 1750, column: 7, scope: !17649)
!17661 = !DILocation(line: 1751, column: 4, scope: !17662)
!17662 = distinct !DILexicalBlock(scope: !17659, file: !3, line: 1750, column: 13)
!17663 = !DILocalVariable(name: "__extack", scope: !17664, file: !3, line: 1751, type: !2496)
!17664 = distinct !DILexicalBlock(scope: !17662, file: !3, line: 1751, column: 4)
!17665 = !DILocation(line: 1751, column: 4, scope: !17664)
!17666 = !DILocation(line: 1751, column: 4, scope: !17667)
!17667 = distinct !DILexicalBlock(scope: !17664, file: !3, line: 1751, column: 4)
!17668 = !DILocation(line: 1753, column: 3, scope: !17662)
!17669 = !DILocation(line: 1754, column: 2, scope: !17649)
!17670 = !DILocation(line: 1755, column: 6, scope: !17671)
!17671 = distinct !DILexicalBlock(scope: !12310, file: !3, line: 1755, column: 6)
!17672 = !DILocation(line: 1755, column: 11, scope: !17671)
!17673 = !DILocation(line: 1755, column: 20, scope: !17671)
!17674 = !DILocation(line: 1755, column: 32, scope: !17671)
!17675 = !DILocation(line: 1755, column: 6, scope: !12310)
!17676 = !DILocation(line: 1756, column: 36, scope: !17677)
!17677 = distinct !DILexicalBlock(scope: !17678, file: !3, line: 1756, column: 7)
!17678 = distinct !DILexicalBlock(scope: !17671, file: !3, line: 1755, column: 58)
!17679 = !DILocation(line: 1757, column: 9, scope: !17677)
!17680 = !DILocation(line: 1757, column: 14, scope: !17677)
!17681 = !DILocation(line: 1757, column: 23, scope: !17677)
!17682 = !DILocation(line: 1756, column: 7, scope: !17677)
!17683 = !DILocation(line: 1756, column: 7, scope: !17678)
!17684 = !DILocation(line: 1758, column: 4, scope: !17685)
!17685 = distinct !DILexicalBlock(scope: !17677, file: !3, line: 1757, column: 37)
!17686 = !DILocation(line: 1758, column: 9, scope: !17685)
!17687 = !DILocation(line: 1758, column: 18, scope: !17685)
!17688 = !DILocation(line: 1758, column: 30, scope: !17685)
!17689 = !DILocation(line: 1759, column: 4, scope: !17685)
!17690 = !DILocalVariable(name: "__extack", scope: !17691, file: !3, line: 1759, type: !2496)
!17691 = distinct !DILexicalBlock(scope: !17685, file: !3, line: 1759, column: 4)
!17692 = !DILocation(line: 1759, column: 4, scope: !17691)
!17693 = !DILocation(line: 1759, column: 4, scope: !17694)
!17694 = distinct !DILexicalBlock(scope: !17691, file: !3, line: 1759, column: 4)
!17695 = !DILocation(line: 1761, column: 3, scope: !17685)
!17696 = !DILocation(line: 1762, column: 2, scope: !17678)
!17697 = !DILocation(line: 1763, column: 9, scope: !12310)
!17698 = !DILocation(line: 1763, column: 2, scope: !12310)
!17699 = !DILocalVariable(name: "esw", arg: 1, scope: !12328, file: !3, line: 2377, type: !7)
!17700 = !DILocation(line: 2377, column: 51, scope: !12328)
!17701 = !DILocalVariable(name: "extack", arg: 2, scope: !12328, file: !3, line: 2378, type: !2496)
!17702 = !DILocation(line: 2378, column: 33, scope: !12328)
!17703 = !DILocalVariable(name: "err", scope: !12328, file: !3, line: 2380, type: !6)
!17704 = !DILocation(line: 2380, column: 6, scope: !12328)
!17705 = !DILocalVariable(name: "err1", scope: !12328, file: !3, line: 2380, type: !6)
!17706 = !DILocation(line: 2380, column: 11, scope: !12328)
!17707 = !DILocation(line: 2382, column: 30, scope: !12328)
!17708 = !DILocation(line: 2382, column: 2, scope: !12328)
!17709 = !DILocation(line: 2383, column: 35, scope: !12328)
!17710 = !DILocation(line: 2383, column: 8, scope: !12328)
!17711 = !DILocation(line: 2383, column: 6, scope: !12328)
!17712 = !DILocation(line: 2385, column: 6, scope: !17713)
!17713 = distinct !DILexicalBlock(scope: !12328, file: !3, line: 2385, column: 6)
!17714 = !DILocation(line: 2385, column: 6, scope: !12328)
!17715 = !DILocation(line: 2386, column: 3, scope: !17716)
!17716 = distinct !DILexicalBlock(scope: !17713, file: !3, line: 2385, column: 11)
!17717 = !DILocalVariable(name: "__extack", scope: !17718, file: !3, line: 2386, type: !2496)
!17718 = distinct !DILexicalBlock(scope: !17716, file: !3, line: 2386, column: 3)
!17719 = !DILocation(line: 2386, column: 3, scope: !17718)
!17720 = !DILocation(line: 2386, column: 3, scope: !17721)
!17721 = distinct !DILexicalBlock(scope: !17718, file: !3, line: 2386, column: 3)
!17722 = !DILocation(line: 2387, column: 37, scope: !17716)
!17723 = !DILocation(line: 2387, column: 10, scope: !17716)
!17724 = !DILocation(line: 2387, column: 8, scope: !17716)
!17725 = !DILocation(line: 2389, column: 7, scope: !17726)
!17726 = distinct !DILexicalBlock(scope: !17716, file: !3, line: 2389, column: 7)
!17727 = !DILocation(line: 2389, column: 7, scope: !17716)
!17728 = !DILocation(line: 2390, column: 4, scope: !17729)
!17729 = distinct !DILexicalBlock(scope: !17726, file: !3, line: 2389, column: 13)
!17730 = !DILocalVariable(name: "__extack", scope: !17731, file: !3, line: 2390, type: !2496)
!17731 = distinct !DILexicalBlock(scope: !17729, file: !3, line: 2390, column: 4)
!17732 = !DILocation(line: 2390, column: 4, scope: !17731)
!17733 = !DILocation(line: 2390, column: 4, scope: !17734)
!17734 = distinct !DILexicalBlock(scope: !17731, file: !3, line: 2390, column: 4)
!17735 = !DILocation(line: 2392, column: 3, scope: !17729)
!17736 = !DILocation(line: 2393, column: 2, scope: !17716)
!17737 = !DILocation(line: 2395, column: 9, scope: !12328)
!17738 = !DILocation(line: 2395, column: 2, scope: !12328)
!17739 = distinct !DISubprogram(name: "mlx5_devlink_eswitch_mode_get", scope: !3, file: !3, line: 2528, type: !4024, scopeLine: 2529, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!17740 = !DILocalVariable(name: "devlink", arg: 1, scope: !17739, file: !3, line: 2528, type: !3880)
!17741 = !DILocation(line: 2528, column: 51, scope: !17739)
!17742 = !DILocalVariable(name: "mode", arg: 2, scope: !17739, file: !3, line: 2528, type: !4004)
!17743 = !DILocation(line: 2528, column: 65, scope: !17739)
!17744 = !DILocalVariable(name: "esw", scope: !17739, file: !3, line: 2530, type: !7)
!17745 = !DILocation(line: 2530, column: 23, scope: !17739)
!17746 = !DILocalVariable(name: "err", scope: !17739, file: !3, line: 2531, type: !6)
!17747 = !DILocation(line: 2531, column: 6, scope: !17739)
!17748 = !DILocation(line: 2533, column: 33, scope: !17739)
!17749 = !DILocation(line: 2533, column: 8, scope: !17739)
!17750 = !DILocation(line: 2533, column: 6, scope: !17739)
!17751 = !DILocation(line: 2534, column: 13, scope: !17752)
!17752 = distinct !DILexicalBlock(scope: !17739, file: !3, line: 2534, column: 6)
!17753 = !DILocation(line: 2534, column: 6, scope: !17752)
!17754 = !DILocation(line: 2534, column: 6, scope: !17739)
!17755 = !DILocation(line: 2535, column: 18, scope: !17752)
!17756 = !DILocation(line: 2535, column: 10, scope: !17752)
!17757 = !DILocation(line: 2535, column: 3, scope: !17752)
!17758 = !DILocation(line: 2537, column: 14, scope: !17739)
!17759 = !DILocation(line: 2537, column: 19, scope: !17739)
!17760 = !DILocation(line: 2537, column: 2, scope: !17739)
!17761 = !DILocation(line: 2538, column: 39, scope: !17739)
!17762 = !DILocation(line: 2538, column: 8, scope: !17739)
!17763 = !DILocation(line: 2538, column: 6, scope: !17739)
!17764 = !DILocation(line: 2539, column: 6, scope: !17765)
!17765 = distinct !DILexicalBlock(scope: !17739, file: !3, line: 2539, column: 6)
!17766 = !DILocation(line: 2539, column: 6, scope: !17739)
!17767 = !DILocation(line: 2540, column: 3, scope: !17765)
!17768 = !DILocation(line: 2542, column: 28, scope: !17739)
!17769 = !DILocation(line: 2542, column: 33, scope: !17739)
!17770 = !DILocation(line: 2542, column: 39, scope: !17739)
!17771 = !DILocation(line: 2542, column: 8, scope: !17739)
!17772 = !DILocation(line: 2542, column: 6, scope: !17739)
!17773 = !DILocation(line: 2542, column: 2, scope: !17739)
!17774 = !DILabel(scope: !17739, name: "unlock", file: !3, line: 2543)
!17775 = !DILocation(line: 2543, column: 1, scope: !17739)
!17776 = !DILocation(line: 2544, column: 16, scope: !17739)
!17777 = !DILocation(line: 2544, column: 21, scope: !17739)
!17778 = !DILocation(line: 2544, column: 2, scope: !17739)
!17779 = !DILocation(line: 2545, column: 9, scope: !17739)
!17780 = !DILocation(line: 2545, column: 2, scope: !17739)
!17781 = !DILocation(line: 2546, column: 1, scope: !17739)
!17782 = distinct !DISubprogram(name: "eswitch_devlink_esw_mode_check", scope: !3, file: !3, line: 2488, type: !17783, scopeLine: 2489, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!17783 = !DISubroutineType(types: !17784)
!17784 = !{!6, !16383}
!17785 = !DILocalVariable(name: "esw", arg: 1, scope: !17782, file: !3, line: 2488, type: !16383)
!17786 = !DILocation(line: 2488, column: 70, scope: !17782)
!17787 = !DILocation(line: 2493, column: 10, scope: !17782)
!17788 = !DILocation(line: 2493, column: 15, scope: !17782)
!17789 = !DILocation(line: 2493, column: 20, scope: !17782)
!17790 = !DILocation(line: 2493, column: 41, scope: !17782)
!17791 = !DILocation(line: 2494, column: 34, scope: !17782)
!17792 = !DILocation(line: 2494, column: 39, scope: !17782)
!17793 = !DILocation(line: 2494, column: 4, scope: !17782)
!17794 = !DILocation(line: 2494, column: 3, scope: !17782)
!17795 = !DILocation(line: 0, scope: !17782)
!17796 = !DILocation(line: 2493, column: 9, scope: !17782)
!17797 = !DILocation(line: 2493, column: 2, scope: !17782)
!17798 = distinct !DISubprogram(name: "esw_mode_to_devlink", scope: !3, file: !3, line: 2428, type: !17609, scopeLine: 2429, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!17799 = !DILocalVariable(name: "mlx5_mode", arg: 1, scope: !17798, file: !3, line: 2428, type: !744)
!17800 = !DILocation(line: 2428, column: 36, scope: !17798)
!17801 = !DILocalVariable(name: "mode", arg: 2, scope: !17798, file: !3, line: 2428, type: !4004)
!17802 = !DILocation(line: 2428, column: 52, scope: !17798)
!17803 = !DILocation(line: 2430, column: 10, scope: !17798)
!17804 = !DILocation(line: 2430, column: 2, scope: !17798)
!17805 = !DILocation(line: 2432, column: 4, scope: !17806)
!17806 = distinct !DILexicalBlock(scope: !17798, file: !3, line: 2430, column: 21)
!17807 = !DILocation(line: 2432, column: 9, scope: !17806)
!17808 = !DILocation(line: 2433, column: 3, scope: !17806)
!17809 = !DILocation(line: 2435, column: 4, scope: !17806)
!17810 = !DILocation(line: 2435, column: 9, scope: !17806)
!17811 = !DILocation(line: 2436, column: 3, scope: !17806)
!17812 = !DILocation(line: 2438, column: 3, scope: !17806)
!17813 = !DILocation(line: 2441, column: 2, scope: !17798)
!17814 = !DILocation(line: 2442, column: 1, scope: !17798)
!17815 = !DILocation(line: 69, column: 73, scope: !15621, inlinedAt: !17816)
!17816 = distinct !DILocation(line: 837, column: 2, scope: !17817, inlinedAt: !17822)
!17817 = distinct !DISubprogram(name: "atomic64_read", scope: !12686, file: !12686, line: 835, type: !17818, scopeLine: 836, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!17818 = !DISubroutineType(types: !17819)
!17819 = !{!568, !17820}
!17820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17821, size: 64)
!17821 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !564)
!17822 = distinct !DILocation(line: 2578, column: 6, scope: !17823)
!17823 = distinct !DILexicalBlock(scope: !12278, file: !3, line: 2578, column: 6)
!17824 = !DILocation(line: 69, column: 83, scope: !15621, inlinedAt: !17816)
!17825 = !DILocalVariable(name: "v", arg: 1, scope: !17817, file: !12686, line: 835, type: !17820)
!17826 = !DILocation(line: 835, column: 33, scope: !17817, inlinedAt: !17822)
!17827 = !DILocalVariable(name: "devlink", arg: 1, scope: !12278, file: !3, line: 2548, type: !3880)
!17828 = !DILocation(line: 2548, column: 58, scope: !12278)
!17829 = !DILocalVariable(name: "mode", arg: 2, scope: !12278, file: !3, line: 2548, type: !1403)
!17830 = !DILocation(line: 2548, column: 70, scope: !12278)
!17831 = !DILocalVariable(name: "extack", arg: 3, scope: !12278, file: !3, line: 2549, type: !2496)
!17832 = !DILocation(line: 2549, column: 31, scope: !12278)
!17833 = !DILocalVariable(name: "dev", scope: !12278, file: !3, line: 2551, type: !12)
!17834 = !DILocation(line: 2551, column: 24, scope: !12278)
!17835 = !DILocation(line: 2551, column: 43, scope: !12278)
!17836 = !DILocation(line: 2551, column: 30, scope: !12278)
!17837 = !DILocalVariable(name: "err", scope: !12278, file: !3, line: 2552, type: !6)
!17838 = !DILocation(line: 2552, column: 6, scope: !12278)
!17839 = !DILocalVariable(name: "vport", scope: !12278, file: !3, line: 2552, type: !6)
!17840 = !DILocation(line: 2552, column: 11, scope: !12278)
!17841 = !DILocalVariable(name: "num_vport", scope: !12278, file: !3, line: 2552, type: !6)
!17842 = !DILocation(line: 2552, column: 18, scope: !12278)
!17843 = !DILocalVariable(name: "esw", scope: !12278, file: !3, line: 2553, type: !7)
!17844 = !DILocation(line: 2553, column: 23, scope: !12278)
!17845 = !DILocalVariable(name: "mlx5_mode", scope: !12278, file: !3, line: 2554, type: !1403)
!17846 = !DILocation(line: 2554, column: 5, scope: !12278)
!17847 = !DILocation(line: 2556, column: 33, scope: !12278)
!17848 = !DILocation(line: 2556, column: 8, scope: !12278)
!17849 = !DILocation(line: 2556, column: 6, scope: !12278)
!17850 = !DILocation(line: 2557, column: 13, scope: !17851)
!17851 = distinct !DILexicalBlock(scope: !12278, file: !3, line: 2557, column: 6)
!17852 = !DILocation(line: 2557, column: 6, scope: !17851)
!17853 = !DILocation(line: 2557, column: 6, scope: !12278)
!17854 = !DILocation(line: 2558, column: 18, scope: !17851)
!17855 = !DILocation(line: 2558, column: 10, scope: !17851)
!17856 = !DILocation(line: 2558, column: 3, scope: !17851)
!17857 = !DILocation(line: 2560, column: 14, scope: !12278)
!17858 = !DILocation(line: 2560, column: 19, scope: !12278)
!17859 = !DILocation(line: 2560, column: 2, scope: !12278)
!17860 = !DILocation(line: 2561, column: 39, scope: !12278)
!17861 = !DILocation(line: 2561, column: 8, scope: !12278)
!17862 = !DILocation(line: 2561, column: 6, scope: !12278)
!17863 = !DILocation(line: 2562, column: 6, scope: !17864)
!17864 = distinct !DILexicalBlock(scope: !12278, file: !3, line: 2562, column: 6)
!17865 = !DILocation(line: 2562, column: 6, scope: !12278)
!17866 = !DILocation(line: 2563, column: 3, scope: !17864)
!17867 = !DILocation(line: 2565, column: 10, scope: !12278)
!17868 = !DILocation(line: 2565, column: 2, scope: !12278)
!17869 = !DILocation(line: 2567, column: 7, scope: !17870)
!17870 = distinct !DILexicalBlock(scope: !17871, file: !3, line: 2567, column: 7)
!17871 = distinct !DILexicalBlock(scope: !12278, file: !3, line: 2565, column: 46)
!17872 = !DILocation(line: 2567, column: 12, scope: !17870)
!17873 = !DILocation(line: 2567, column: 7, scope: !17871)
!17874 = !DILocation(line: 2568, column: 4, scope: !17870)
!17875 = !DILocation(line: 2567, column: 15, scope: !17870)
!17876 = !DILocation(line: 2571, column: 3, scope: !17871)
!17877 = !DILocalVariable(name: "__extack", scope: !17878, file: !3, line: 2571, type: !2496)
!17878 = distinct !DILexicalBlock(scope: !17871, file: !3, line: 2571, column: 3)
!17879 = !DILocation(line: 2571, column: 3, scope: !17878)
!17880 = !DILocation(line: 2571, column: 3, scope: !17881)
!17881 = distinct !DILexicalBlock(scope: !17878, file: !3, line: 2571, column: 3)
!17882 = !DILocation(line: 2572, column: 7, scope: !17871)
!17883 = !DILocation(line: 2573, column: 3, scope: !17871)
!17884 = !DILocation(line: 2575, column: 3, scope: !17871)
!17885 = !DILocation(line: 2578, column: 21, scope: !17823)
!17886 = !DILocation(line: 2578, column: 26, scope: !17823)
!17887 = !DILocation(line: 2578, column: 35, scope: !17823)
!17888 = !DILocation(line: 837, column: 25, scope: !17817, inlinedAt: !17822)
!17889 = !DILocation(line: 71, column: 19, scope: !15621, inlinedAt: !17816)
!17890 = !DILocation(line: 71, column: 22, scope: !15621, inlinedAt: !17816)
!17891 = !DILocation(line: 71, column: 2, scope: !15621, inlinedAt: !17816)
!17892 = !DILocation(line: 72, column: 2, scope: !15621, inlinedAt: !17816)
!17893 = !DILocation(line: 838, column: 28, scope: !17817, inlinedAt: !17822)
!17894 = !DILocation(line: 838, column: 9, scope: !17817, inlinedAt: !17822)
!17895 = !DILocation(line: 2578, column: 46, scope: !17823)
!17896 = !DILocation(line: 2578, column: 6, scope: !12278)
!17897 = !DILocation(line: 2579, column: 3, scope: !17898)
!17898 = distinct !DILexicalBlock(scope: !17823, file: !3, line: 2578, column: 51)
!17899 = !DILocalVariable(name: "__extack", scope: !17900, file: !3, line: 2579, type: !2496)
!17900 = distinct !DILexicalBlock(scope: !17898, file: !3, line: 2579, column: 3)
!17901 = !DILocation(line: 2579, column: 3, scope: !17900)
!17902 = !DILocation(line: 2579, column: 3, scope: !17903)
!17903 = distinct !DILexicalBlock(scope: !17900, file: !3, line: 2579, column: 3)
!17904 = !DILocation(line: 2581, column: 7, scope: !17898)
!17905 = !DILocation(line: 2582, column: 3, scope: !17898)
!17906 = !DILocation(line: 2585, column: 37, scope: !12278)
!17907 = !DILocation(line: 2585, column: 8, scope: !12278)
!17908 = !DILocation(line: 2585, column: 6, scope: !12278)
!17909 = !DILocation(line: 2586, column: 6, scope: !17910)
!17910 = distinct !DILexicalBlock(scope: !12278, file: !3, line: 2586, column: 6)
!17911 = !DILocation(line: 2586, column: 6, scope: !12278)
!17912 = !DILocation(line: 2587, column: 3, scope: !17910)
!17913 = !DILocation(line: 2589, column: 2, scope: !17914)
!17914 = distinct !DILexicalBlock(scope: !12278, file: !3, line: 2589, column: 2)
!17915 = !DILocation(line: 2589, column: 2, scope: !17916)
!17916 = distinct !DILexicalBlock(scope: !17914, file: !3, line: 2589, column: 2)
!17917 = !DILocation(line: 2590, column: 42, scope: !17918)
!17918 = distinct !DILexicalBlock(scope: !17916, file: !3, line: 2589, column: 72)
!17919 = !DILocation(line: 2590, column: 47, scope: !17918)
!17920 = !DILocation(line: 2590, column: 54, scope: !17918)
!17921 = !DILocation(line: 2590, column: 9, scope: !17918)
!17922 = !DILocation(line: 2590, column: 7, scope: !17918)
!17923 = !DILocation(line: 2591, column: 7, scope: !17924)
!17924 = distinct !DILexicalBlock(scope: !17918, file: !3, line: 2591, column: 7)
!17925 = !DILocation(line: 2591, column: 7, scope: !17918)
!17926 = !DILocation(line: 2592, column: 4, scope: !17927)
!17927 = distinct !DILexicalBlock(scope: !17924, file: !3, line: 2591, column: 12)
!17928 = !DILocalVariable(name: "__extack", scope: !17929, file: !3, line: 2592, type: !2496)
!17929 = distinct !DILexicalBlock(scope: !17927, file: !3, line: 2592, column: 4)
!17930 = !DILocation(line: 2592, column: 4, scope: !17929)
!17931 = !DILocation(line: 2592, column: 4, scope: !17932)
!17932 = distinct !DILexicalBlock(scope: !17929, file: !3, line: 2592, column: 4)
!17933 = !DILocation(line: 2594, column: 4, scope: !17927)
!17934 = !DILocation(line: 2596, column: 2, scope: !17918)
!17935 = distinct !{!17935, !17913, !17936}
!17936 = !DILocation(line: 2596, column: 2, scope: !17914)
!17937 = !DILocation(line: 2598, column: 30, scope: !12278)
!17938 = !DILocation(line: 2598, column: 2, scope: !12278)
!17939 = !DILocation(line: 2598, column: 7, scope: !12278)
!17940 = !DILocation(line: 2598, column: 16, scope: !12278)
!17941 = !DILocation(line: 2598, column: 28, scope: !12278)
!17942 = !DILocation(line: 2599, column: 16, scope: !12278)
!17943 = !DILocation(line: 2599, column: 21, scope: !12278)
!17944 = !DILocation(line: 2599, column: 2, scope: !12278)
!17945 = !DILocation(line: 2600, column: 2, scope: !12278)
!17946 = !DILabel(scope: !12278, name: "revert_inline_mode", file: !3, line: 2602)
!17947 = !DILocation(line: 2602, column: 1, scope: !12278)
!17948 = !DILocation(line: 2603, column: 14, scope: !12278)
!17949 = !DILocation(line: 2603, column: 12, scope: !12278)
!17950 = !DILocation(line: 2604, column: 2, scope: !17951)
!17951 = distinct !DILexicalBlock(scope: !12278, file: !3, line: 2604, column: 2)
!17952 = !DILocation(line: 2604, column: 2, scope: !17953)
!17953 = distinct !DILexicalBlock(scope: !17951, file: !3, line: 2604, column: 2)
!17954 = !DILocation(line: 2605, column: 36, scope: !17953)
!17955 = !DILocation(line: 2606, column: 8, scope: !17953)
!17956 = !DILocation(line: 2607, column: 8, scope: !17953)
!17957 = !DILocation(line: 2607, column: 13, scope: !17953)
!17958 = !DILocation(line: 2607, column: 22, scope: !17953)
!17959 = !DILocation(line: 2605, column: 3, scope: !17953)
!17960 = distinct !{!17960, !17950, !17961}
!17961 = !DILocation(line: 2607, column: 33, scope: !17951)
!17962 = !DILabel(scope: !12278, name: "out", file: !3, line: 2608)
!17963 = !DILocation(line: 2608, column: 1, scope: !12278)
!17964 = !DILocation(line: 2609, column: 16, scope: !12278)
!17965 = !DILocation(line: 2609, column: 21, scope: !12278)
!17966 = !DILocation(line: 2609, column: 2, scope: !12278)
!17967 = !DILocation(line: 2610, column: 9, scope: !12278)
!17968 = !DILocation(line: 2610, column: 2, scope: !12278)
!17969 = !DILocation(line: 2611, column: 1, scope: !12278)
!17970 = distinct !DISubprogram(name: "devlink_priv", scope: !3874, file: !3874, line: 1350, type: !17971, scopeLine: 1351, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!17971 = !DISubroutineType(types: !17972)
!17972 = !{!159, !3880}
!17973 = !DILocalVariable(name: "devlink", arg: 1, scope: !17970, file: !3874, line: 1350, type: !3880)
!17974 = !DILocation(line: 1350, column: 50, scope: !17970)
!17975 = !DILocation(line: 1352, column: 2, scope: !17970)
!17976 = !DILocation(line: 1352, column: 2, scope: !17977)
!17977 = distinct !DILexicalBlock(scope: !17978, file: !3874, line: 1352, column: 2)
!17978 = distinct !DILexicalBlock(scope: !17970, file: !3874, line: 1352, column: 2)
!17979 = !DILocation(line: 1352, column: 2, scope: !17978)
!17980 = !DILocation(line: 1352, column: 2, scope: !17981)
!17981 = distinct !DILexicalBlock(scope: !17977, file: !3874, line: 1352, column: 2)
!17982 = !DILocation(line: 1352, column: 2, scope: !17983)
!17983 = distinct !DILexicalBlock(scope: !17981, file: !3874, line: 1352, column: 2)
!17984 = !DILocation(line: 1352, column: 2, scope: !17985)
!17985 = distinct !DILexicalBlock(scope: !17981, file: !3874, line: 1352, column: 2)
!17986 = !{i32 -2137041149, i32 -2137041120, i32 -2137041074, i32 -2137041016, i32 -2137040962, i32 -2137040908, i32 -2137040853, i32 -2137040822}
!17987 = !DILocation(line: 1352, column: 2, scope: !17988)
!17988 = distinct !DILexicalBlock(scope: !17989, file: !3874, line: 1352, column: 2)
!17989 = distinct !DILexicalBlock(scope: !17981, file: !3874, line: 1352, column: 2)
!17990 = !{i32 -2137040377, i32 -2137040370, i32 -2137040316, i32 -2137040285, i32 -2137040255}
!17991 = !DILocation(line: 1352, column: 2, scope: !17989)
!17992 = !DILocation(line: 1353, column: 10, scope: !17970)
!17993 = !DILocation(line: 1353, column: 19, scope: !17970)
!17994 = !DILocation(line: 1353, column: 9, scope: !17970)
!17995 = !DILocation(line: 1353, column: 2, scope: !17970)
!17996 = distinct !DISubprogram(name: "esw_inline_mode_from_devlink", scope: !3, file: !3, line: 2444, type: !17997, scopeLine: 2445, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!17997 = !DISubroutineType(types: !17998)
!17998 = !{!6, !1403, !2747}
!17999 = !DILocalVariable(name: "mode", arg: 1, scope: !17996, file: !3, line: 2444, type: !1403)
!18000 = !DILocation(line: 2444, column: 44, scope: !17996)
!18001 = !DILocalVariable(name: "mlx5_mode", arg: 2, scope: !17996, file: !3, line: 2444, type: !2747)
!18002 = !DILocation(line: 2444, column: 54, scope: !17996)
!18003 = !DILocation(line: 2446, column: 10, scope: !17996)
!18004 = !DILocation(line: 2446, column: 2, scope: !17996)
!18005 = !DILocation(line: 2448, column: 4, scope: !18006)
!18006 = distinct !DILexicalBlock(scope: !17996, file: !3, line: 2446, column: 16)
!18007 = !DILocation(line: 2448, column: 14, scope: !18006)
!18008 = !DILocation(line: 2449, column: 3, scope: !18006)
!18009 = !DILocation(line: 2451, column: 4, scope: !18006)
!18010 = !DILocation(line: 2451, column: 14, scope: !18006)
!18011 = !DILocation(line: 2452, column: 3, scope: !18006)
!18012 = !DILocation(line: 2454, column: 4, scope: !18006)
!18013 = !DILocation(line: 2454, column: 14, scope: !18006)
!18014 = !DILocation(line: 2455, column: 3, scope: !18006)
!18015 = !DILocation(line: 2457, column: 4, scope: !18006)
!18016 = !DILocation(line: 2457, column: 14, scope: !18006)
!18017 = !DILocation(line: 2458, column: 3, scope: !18006)
!18018 = !DILocation(line: 2460, column: 3, scope: !18006)
!18019 = !DILocation(line: 2463, column: 2, scope: !17996)
!18020 = !DILocation(line: 2464, column: 1, scope: !17996)
!18021 = distinct !DISubprogram(name: "mlx5_devlink_eswitch_inline_mode_get", scope: !3, file: !3, line: 2613, type: !4032, scopeLine: 2614, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!18022 = !DILocalVariable(name: "devlink", arg: 1, scope: !18021, file: !3, line: 2613, type: !3880)
!18023 = !DILocation(line: 2613, column: 58, scope: !18021)
!18024 = !DILocalVariable(name: "mode", arg: 2, scope: !18021, file: !3, line: 2613, type: !2747)
!18025 = !DILocation(line: 2613, column: 71, scope: !18021)
!18026 = !DILocalVariable(name: "esw", scope: !18021, file: !3, line: 2615, type: !7)
!18027 = !DILocation(line: 2615, column: 23, scope: !18021)
!18028 = !DILocalVariable(name: "err", scope: !18021, file: !3, line: 2616, type: !6)
!18029 = !DILocation(line: 2616, column: 6, scope: !18021)
!18030 = !DILocation(line: 2618, column: 33, scope: !18021)
!18031 = !DILocation(line: 2618, column: 8, scope: !18021)
!18032 = !DILocation(line: 2618, column: 6, scope: !18021)
!18033 = !DILocation(line: 2619, column: 13, scope: !18034)
!18034 = distinct !DILexicalBlock(scope: !18021, file: !3, line: 2619, column: 6)
!18035 = !DILocation(line: 2619, column: 6, scope: !18034)
!18036 = !DILocation(line: 2619, column: 6, scope: !18021)
!18037 = !DILocation(line: 2620, column: 18, scope: !18034)
!18038 = !DILocation(line: 2620, column: 10, scope: !18034)
!18039 = !DILocation(line: 2620, column: 3, scope: !18034)
!18040 = !DILocation(line: 2622, column: 14, scope: !18021)
!18041 = !DILocation(line: 2622, column: 19, scope: !18021)
!18042 = !DILocation(line: 2622, column: 2, scope: !18021)
!18043 = !DILocation(line: 2623, column: 39, scope: !18021)
!18044 = !DILocation(line: 2623, column: 8, scope: !18021)
!18045 = !DILocation(line: 2623, column: 6, scope: !18021)
!18046 = !DILocation(line: 2624, column: 6, scope: !18047)
!18047 = distinct !DILexicalBlock(scope: !18021, file: !3, line: 2624, column: 6)
!18048 = !DILocation(line: 2624, column: 6, scope: !18021)
!18049 = !DILocation(line: 2625, column: 3, scope: !18047)
!18050 = !DILocation(line: 2627, column: 35, scope: !18021)
!18051 = !DILocation(line: 2627, column: 40, scope: !18021)
!18052 = !DILocation(line: 2627, column: 49, scope: !18021)
!18053 = !DILocation(line: 2627, column: 62, scope: !18021)
!18054 = !DILocation(line: 2627, column: 8, scope: !18021)
!18055 = !DILocation(line: 2627, column: 6, scope: !18021)
!18056 = !DILocation(line: 2627, column: 2, scope: !18021)
!18057 = !DILabel(scope: !18021, name: "unlock", file: !3, line: 2628)
!18058 = !DILocation(line: 2628, column: 1, scope: !18021)
!18059 = !DILocation(line: 2629, column: 16, scope: !18021)
!18060 = !DILocation(line: 2629, column: 21, scope: !18021)
!18061 = !DILocation(line: 2629, column: 2, scope: !18021)
!18062 = !DILocation(line: 2630, column: 9, scope: !18021)
!18063 = !DILocation(line: 2630, column: 2, scope: !18021)
!18064 = !DILocation(line: 2631, column: 1, scope: !18021)
!18065 = distinct !DISubprogram(name: "esw_inline_mode_to_devlink", scope: !3, file: !3, line: 2466, type: !17997, scopeLine: 2467, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!18066 = !DILocalVariable(name: "mlx5_mode", arg: 1, scope: !18065, file: !3, line: 2466, type: !1403)
!18067 = !DILocation(line: 2466, column: 42, scope: !18065)
!18068 = !DILocalVariable(name: "mode", arg: 2, scope: !18065, file: !3, line: 2466, type: !2747)
!18069 = !DILocation(line: 2466, column: 57, scope: !18065)
!18070 = !DILocation(line: 2468, column: 10, scope: !18065)
!18071 = !DILocation(line: 2468, column: 2, scope: !18065)
!18072 = !DILocation(line: 2470, column: 4, scope: !18073)
!18073 = distinct !DILexicalBlock(scope: !18065, file: !3, line: 2468, column: 21)
!18074 = !DILocation(line: 2470, column: 9, scope: !18073)
!18075 = !DILocation(line: 2471, column: 3, scope: !18073)
!18076 = !DILocation(line: 2473, column: 4, scope: !18073)
!18077 = !DILocation(line: 2473, column: 9, scope: !18073)
!18078 = !DILocation(line: 2474, column: 3, scope: !18073)
!18079 = !DILocation(line: 2476, column: 4, scope: !18073)
!18080 = !DILocation(line: 2476, column: 9, scope: !18073)
!18081 = !DILocation(line: 2477, column: 3, scope: !18073)
!18082 = !DILocation(line: 2479, column: 4, scope: !18073)
!18083 = !DILocation(line: 2479, column: 9, scope: !18073)
!18084 = !DILocation(line: 2480, column: 3, scope: !18073)
!18085 = !DILocation(line: 2482, column: 3, scope: !18073)
!18086 = !DILocation(line: 2485, column: 2, scope: !18065)
!18087 = !DILocation(line: 2486, column: 1, scope: !18065)
!18088 = !DILocation(line: 69, column: 73, scope: !15621, inlinedAt: !18089)
!18089 = distinct !DILocation(line: 837, column: 2, scope: !17817, inlinedAt: !18090)
!18090 = distinct !DILocation(line: 2670, column: 6, scope: !18091)
!18091 = distinct !DILexicalBlock(scope: !12294, file: !3, line: 2670, column: 6)
!18092 = !DILocation(line: 69, column: 83, scope: !15621, inlinedAt: !18089)
!18093 = !DILocation(line: 835, column: 33, scope: !17817, inlinedAt: !18090)
!18094 = !DILocalVariable(name: "devlink", arg: 1, scope: !12294, file: !3, line: 2633, type: !3880)
!18095 = !DILocation(line: 2633, column: 57, scope: !12294)
!18096 = !DILocalVariable(name: "encap", arg: 2, scope: !12294, file: !3, line: 2634, type: !4043)
!18097 = !DILocation(line: 2634, column: 38, scope: !12294)
!18098 = !DILocalVariable(name: "extack", arg: 3, scope: !12294, file: !3, line: 2635, type: !2496)
!18099 = !DILocation(line: 2635, column: 30, scope: !12294)
!18100 = !DILocalVariable(name: "dev", scope: !12294, file: !3, line: 2637, type: !12)
!18101 = !DILocation(line: 2637, column: 24, scope: !12294)
!18102 = !DILocation(line: 2637, column: 43, scope: !12294)
!18103 = !DILocation(line: 2637, column: 30, scope: !12294)
!18104 = !DILocalVariable(name: "esw", scope: !12294, file: !3, line: 2638, type: !7)
!18105 = !DILocation(line: 2638, column: 23, scope: !12294)
!18106 = !DILocalVariable(name: "err", scope: !12294, file: !3, line: 2639, type: !6)
!18107 = !DILocation(line: 2639, column: 6, scope: !12294)
!18108 = !DILocation(line: 2641, column: 33, scope: !12294)
!18109 = !DILocation(line: 2641, column: 8, scope: !12294)
!18110 = !DILocation(line: 2641, column: 6, scope: !12294)
!18111 = !DILocation(line: 2642, column: 13, scope: !18112)
!18112 = distinct !DILexicalBlock(scope: !12294, file: !3, line: 2642, column: 6)
!18113 = !DILocation(line: 2642, column: 6, scope: !18112)
!18114 = !DILocation(line: 2642, column: 6, scope: !12294)
!18115 = !DILocation(line: 2643, column: 18, scope: !18112)
!18116 = !DILocation(line: 2643, column: 10, scope: !18112)
!18117 = !DILocation(line: 2643, column: 3, scope: !18112)
!18118 = !DILocation(line: 2645, column: 14, scope: !12294)
!18119 = !DILocation(line: 2645, column: 19, scope: !12294)
!18120 = !DILocation(line: 2645, column: 2, scope: !12294)
!18121 = !DILocation(line: 2646, column: 39, scope: !12294)
!18122 = !DILocation(line: 2646, column: 8, scope: !12294)
!18123 = !DILocation(line: 2646, column: 6, scope: !12294)
!18124 = !DILocation(line: 2647, column: 6, scope: !18125)
!18125 = distinct !DILexicalBlock(scope: !12294, file: !3, line: 2647, column: 6)
!18126 = !DILocation(line: 2647, column: 6, scope: !12294)
!18127 = !DILocation(line: 2648, column: 3, scope: !18125)
!18128 = !DILocation(line: 2650, column: 6, scope: !18129)
!18129 = distinct !DILexicalBlock(scope: !12294, file: !3, line: 2650, column: 6)
!18130 = !DILocation(line: 2650, column: 12, scope: !18129)
!18131 = !DILocation(line: 2650, column: 47, scope: !18129)
!18132 = !DILocation(line: 2651, column: 8, scope: !18129)
!18133 = !DILocation(line: 2651, column: 50, scope: !18129)
!18134 = !DILocation(line: 2652, column: 8, scope: !18129)
!18135 = !DILocation(line: 2650, column: 6, scope: !12294)
!18136 = !DILocation(line: 2653, column: 7, scope: !18137)
!18137 = distinct !DILexicalBlock(scope: !18129, file: !3, line: 2652, column: 49)
!18138 = !DILocation(line: 2654, column: 3, scope: !18137)
!18139 = !DILocation(line: 2657, column: 6, scope: !18140)
!18140 = distinct !DILexicalBlock(scope: !12294, file: !3, line: 2657, column: 6)
!18141 = !DILocation(line: 2657, column: 12, scope: !18140)
!18142 = !DILocation(line: 2657, column: 15, scope: !18140)
!18143 = !DILocation(line: 2657, column: 21, scope: !18140)
!18144 = !DILocation(line: 2657, column: 6, scope: !12294)
!18145 = !DILocation(line: 2658, column: 7, scope: !18146)
!18146 = distinct !DILexicalBlock(scope: !18140, file: !3, line: 2657, column: 58)
!18147 = !DILocation(line: 2659, column: 3, scope: !18146)
!18148 = !DILocation(line: 2662, column: 6, scope: !18149)
!18149 = distinct !DILexicalBlock(scope: !12294, file: !3, line: 2662, column: 6)
!18150 = !DILocation(line: 2662, column: 11, scope: !18149)
!18151 = !DILocation(line: 2662, column: 16, scope: !18149)
!18152 = !DILocation(line: 2662, column: 6, scope: !12294)
!18153 = !DILocation(line: 2663, column: 25, scope: !18154)
!18154 = distinct !DILexicalBlock(scope: !18149, file: !3, line: 2662, column: 40)
!18155 = !DILocation(line: 2663, column: 3, scope: !18154)
!18156 = !DILocation(line: 2663, column: 8, scope: !18154)
!18157 = !DILocation(line: 2663, column: 17, scope: !18154)
!18158 = !DILocation(line: 2663, column: 23, scope: !18154)
!18159 = !DILocation(line: 2664, column: 3, scope: !18154)
!18160 = !DILocation(line: 2667, column: 6, scope: !18161)
!18161 = distinct !DILexicalBlock(scope: !12294, file: !3, line: 2667, column: 6)
!18162 = !DILocation(line: 2667, column: 11, scope: !18161)
!18163 = !DILocation(line: 2667, column: 20, scope: !18161)
!18164 = !DILocation(line: 2667, column: 29, scope: !18161)
!18165 = !DILocation(line: 2667, column: 26, scope: !18161)
!18166 = !DILocation(line: 2667, column: 6, scope: !12294)
!18167 = !DILocation(line: 2668, column: 3, scope: !18161)
!18168 = !DILocation(line: 2670, column: 21, scope: !18091)
!18169 = !DILocation(line: 2670, column: 26, scope: !18091)
!18170 = !DILocation(line: 2670, column: 35, scope: !18091)
!18171 = !DILocation(line: 837, column: 25, scope: !17817, inlinedAt: !18090)
!18172 = !DILocation(line: 71, column: 19, scope: !15621, inlinedAt: !18089)
!18173 = !DILocation(line: 71, column: 22, scope: !15621, inlinedAt: !18089)
!18174 = !DILocation(line: 71, column: 2, scope: !15621, inlinedAt: !18089)
!18175 = !DILocation(line: 72, column: 2, scope: !15621, inlinedAt: !18089)
!18176 = !DILocation(line: 838, column: 28, scope: !17817, inlinedAt: !18090)
!18177 = !DILocation(line: 838, column: 9, scope: !17817, inlinedAt: !18090)
!18178 = !DILocation(line: 2670, column: 46, scope: !18091)
!18179 = !DILocation(line: 2670, column: 6, scope: !12294)
!18180 = !DILocation(line: 2671, column: 3, scope: !18181)
!18181 = distinct !DILexicalBlock(scope: !18091, file: !3, line: 2670, column: 51)
!18182 = !DILocalVariable(name: "__extack", scope: !18183, file: !3, line: 2671, type: !2496)
!18183 = distinct !DILexicalBlock(scope: !18181, file: !3, line: 2671, column: 3)
!18184 = !DILocation(line: 2671, column: 3, scope: !18183)
!18185 = !DILocation(line: 2671, column: 3, scope: !18186)
!18186 = distinct !DILexicalBlock(scope: !18183, file: !3, line: 2671, column: 3)
!18187 = !DILocation(line: 2673, column: 7, scope: !18181)
!18188 = !DILocation(line: 2674, column: 3, scope: !18181)
!18189 = !DILocation(line: 2677, column: 34, scope: !12294)
!18190 = !DILocation(line: 2677, column: 2, scope: !12294)
!18191 = !DILocation(line: 2679, column: 24, scope: !12294)
!18192 = !DILocation(line: 2679, column: 2, scope: !12294)
!18193 = !DILocation(line: 2679, column: 7, scope: !12294)
!18194 = !DILocation(line: 2679, column: 16, scope: !12294)
!18195 = !DILocation(line: 2679, column: 22, scope: !12294)
!18196 = !DILocation(line: 2681, column: 39, scope: !12294)
!18197 = !DILocation(line: 2681, column: 8, scope: !12294)
!18198 = !DILocation(line: 2681, column: 6, scope: !12294)
!18199 = !DILocation(line: 2683, column: 6, scope: !18200)
!18200 = distinct !DILexicalBlock(scope: !12294, file: !3, line: 2683, column: 6)
!18201 = !DILocation(line: 2683, column: 6, scope: !12294)
!18202 = !DILocation(line: 2684, column: 3, scope: !18203)
!18203 = distinct !DILexicalBlock(scope: !18200, file: !3, line: 2683, column: 11)
!18204 = !DILocalVariable(name: "__extack", scope: !18205, file: !3, line: 2684, type: !2496)
!18205 = distinct !DILexicalBlock(scope: !18203, file: !3, line: 2684, column: 3)
!18206 = !DILocation(line: 2684, column: 3, scope: !18205)
!18207 = !DILocation(line: 2684, column: 3, scope: !18208)
!18208 = distinct !DILexicalBlock(scope: !18205, file: !3, line: 2684, column: 3)
!18209 = !DILocation(line: 2686, column: 26, scope: !18203)
!18210 = !DILocation(line: 2686, column: 25, scope: !18203)
!18211 = !DILocation(line: 2686, column: 3, scope: !18203)
!18212 = !DILocation(line: 2686, column: 8, scope: !18203)
!18213 = !DILocation(line: 2686, column: 17, scope: !18203)
!18214 = !DILocation(line: 2686, column: 23, scope: !18203)
!18215 = !DILocation(line: 2687, column: 40, scope: !18203)
!18216 = !DILocation(line: 2687, column: 9, scope: !18203)
!18217 = !DILocation(line: 2688, column: 2, scope: !18203)
!18218 = !DILabel(scope: !12294, name: "unlock", file: !3, line: 2690)
!18219 = !DILocation(line: 2690, column: 1, scope: !12294)
!18220 = !DILocation(line: 2691, column: 16, scope: !12294)
!18221 = !DILocation(line: 2691, column: 21, scope: !12294)
!18222 = !DILocation(line: 2691, column: 2, scope: !12294)
!18223 = !DILocation(line: 2692, column: 9, scope: !12294)
!18224 = !DILocation(line: 2692, column: 2, scope: !12294)
!18225 = !DILocation(line: 2693, column: 1, scope: !12294)
!18226 = distinct !DISubprogram(name: "esw_destroy_offloads_fdb_tables", scope: !3, file: !3, line: 1453, type: !12306, scopeLine: 1454, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!18227 = !DILocalVariable(name: "esw", arg: 1, scope: !18226, file: !3, line: 1453, type: !7)
!18228 = !DILocation(line: 1453, column: 66, scope: !18226)
!18229 = !DILocation(line: 1455, column: 7, scope: !18230)
!18230 = distinct !DILexicalBlock(scope: !18226, file: !3, line: 1455, column: 6)
!18231 = !DILocation(line: 1455, column: 12, scope: !18230)
!18232 = !DILocation(line: 1455, column: 22, scope: !18230)
!18233 = !DILocation(line: 1455, column: 31, scope: !18230)
!18234 = !DILocation(line: 1455, column: 6, scope: !18226)
!18235 = !DILocation(line: 1456, column: 3, scope: !18230)
!18236 = !DILocation(line: 1458, column: 2, scope: !18226)
!18237 = !DILocation(line: 1458, column: 2, scope: !18238)
!18238 = distinct !DILexicalBlock(scope: !18239, file: !3, line: 1458, column: 2)
!18239 = distinct !DILexicalBlock(scope: !18226, file: !3, line: 1458, column: 2)
!18240 = !DILocation(line: 1458, column: 2, scope: !18239)
!18241 = !DILocation(line: 1459, column: 22, scope: !18226)
!18242 = !DILocation(line: 1459, column: 27, scope: !18226)
!18243 = !DILocation(line: 1459, column: 37, scope: !18226)
!18244 = !DILocation(line: 1459, column: 46, scope: !18226)
!18245 = !DILocation(line: 1459, column: 2, scope: !18226)
!18246 = !DILocation(line: 1460, column: 22, scope: !18226)
!18247 = !DILocation(line: 1460, column: 27, scope: !18226)
!18248 = !DILocation(line: 1460, column: 37, scope: !18226)
!18249 = !DILocation(line: 1460, column: 46, scope: !18226)
!18250 = !DILocation(line: 1460, column: 2, scope: !18226)
!18251 = !DILocation(line: 1461, column: 26, scope: !18226)
!18252 = !DILocation(line: 1461, column: 31, scope: !18226)
!18253 = !DILocation(line: 1461, column: 41, scope: !18226)
!18254 = !DILocation(line: 1461, column: 50, scope: !18226)
!18255 = !DILocation(line: 1461, column: 2, scope: !18226)
!18256 = !DILocation(line: 1462, column: 6, scope: !18257)
!18257 = distinct !DILexicalBlock(scope: !18226, file: !3, line: 1462, column: 6)
!18258 = !DILocation(line: 1462, column: 6, scope: !18226)
!18259 = !DILocation(line: 1463, column: 27, scope: !18257)
!18260 = !DILocation(line: 1463, column: 32, scope: !18257)
!18261 = !DILocation(line: 1463, column: 42, scope: !18257)
!18262 = !DILocation(line: 1463, column: 51, scope: !18257)
!18263 = !DILocation(line: 1463, column: 3, scope: !18257)
!18264 = !DILocation(line: 1464, column: 26, scope: !18226)
!18265 = !DILocation(line: 1464, column: 31, scope: !18226)
!18266 = !DILocation(line: 1464, column: 41, scope: !18226)
!18267 = !DILocation(line: 1464, column: 50, scope: !18226)
!18268 = !DILocation(line: 1464, column: 2, scope: !18226)
!18269 = !DILocation(line: 1466, column: 21, scope: !18226)
!18270 = !DILocation(line: 1466, column: 26, scope: !18226)
!18271 = !DILocation(line: 1466, column: 2, scope: !18226)
!18272 = !DILocation(line: 1468, column: 26, scope: !18226)
!18273 = !DILocation(line: 1468, column: 31, scope: !18226)
!18274 = !DILocation(line: 1468, column: 41, scope: !18226)
!18275 = !DILocation(line: 1468, column: 50, scope: !18226)
!18276 = !DILocation(line: 1468, column: 2, scope: !18226)
!18277 = !DILocation(line: 1470, column: 31, scope: !18226)
!18278 = !DILocation(line: 1470, column: 36, scope: !18226)
!18279 = !DILocation(line: 1470, column: 46, scope: !18226)
!18280 = !DILocation(line: 1470, column: 55, scope: !18226)
!18281 = !DILocation(line: 1470, column: 2, scope: !18226)
!18282 = !DILocation(line: 1472, column: 1, scope: !18226)
!18283 = distinct !DISubprogram(name: "esw_create_offloads_fdb_tables", scope: !3, file: !3, line: 1291, type: !4, scopeLine: 1292, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!18284 = !DILocalVariable(name: "esw", arg: 1, scope: !18283, file: !3, line: 1291, type: !7)
!18285 = !DILocation(line: 1291, column: 64, scope: !18283)
!18286 = !DILocalVariable(name: "inlen", scope: !18283, file: !3, line: 1293, type: !6)
!18287 = !DILocation(line: 1293, column: 6, scope: !18283)
!18288 = !DILocalVariable(name: "ft_attr", scope: !18283, file: !3, line: 1294, type: !18289)
!18289 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_flow_table_attr", file: !10877, line: 153, size: 256, elements: !18290)
!18290 = !{!18291, !18292, !18293, !18294, !18295, !18296}
!18291 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !18289, file: !10877, line: 154, baseType: !6, size: 32)
!18292 = !DIDerivedType(tag: DW_TAG_member, name: "max_fte", scope: !18289, file: !10877, line: 155, baseType: !6, size: 32, offset: 32)
!18293 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !18289, file: !10877, line: 156, baseType: !229, size: 32, offset: 64)
!18294 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !18289, file: !10877, line: 157, baseType: !229, size: 32, offset: 96)
!18295 = !DIDerivedType(tag: DW_TAG_member, name: "next_ft", scope: !18289, file: !10877, line: 158, baseType: !10734, size: 64, offset: 128)
!18296 = !DIDerivedType(tag: DW_TAG_member, name: "autogroup", scope: !18289, file: !10877, line: 163, baseType: !18297, size: 64, offset: 192)
!18297 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !18289, file: !10877, line: 160, size: 64, elements: !18298)
!18298 = !{!18299, !18300}
!18299 = !DIDerivedType(tag: DW_TAG_member, name: "max_num_groups", scope: !18297, file: !10877, line: 161, baseType: !6, size: 32)
!18300 = !DIDerivedType(tag: DW_TAG_member, name: "num_reserved_entries", scope: !18297, file: !10877, line: 162, baseType: !6, size: 32, offset: 32)
!18301 = !DILocation(line: 1294, column: 30, scope: !18283)
!18302 = !DILocalVariable(name: "dev", scope: !18283, file: !3, line: 1295, type: !12)
!18303 = !DILocation(line: 1295, column: 24, scope: !18283)
!18304 = !DILocation(line: 1295, column: 30, scope: !18283)
!18305 = !DILocation(line: 1295, column: 35, scope: !18283)
!18306 = !DILocalVariable(name: "root_ns", scope: !18283, file: !3, line: 1296, type: !10774)
!18307 = !DILocation(line: 1296, column: 30, scope: !18283)
!18308 = !DILocalVariable(name: "fdb", scope: !18283, file: !3, line: 1297, type: !10734)
!18309 = !DILocation(line: 1297, column: 26, scope: !18283)
!18310 = !DILocalVariable(name: "flags", scope: !18283, file: !3, line: 1298, type: !229)
!18311 = !DILocation(line: 1298, column: 6, scope: !18283)
!18312 = !DILocalVariable(name: "flow_group_in", scope: !18283, file: !3, line: 1298, type: !1467)
!18313 = !DILocation(line: 1298, column: 18, scope: !18283)
!18314 = !DILocalVariable(name: "table_size", scope: !18283, file: !3, line: 1299, type: !6)
!18315 = !DILocation(line: 1299, column: 6, scope: !18283)
!18316 = !DILocalVariable(name: "ix", scope: !18283, file: !3, line: 1299, type: !6)
!18317 = !DILocation(line: 1299, column: 18, scope: !18283)
!18318 = !DILocalVariable(name: "err", scope: !18283, file: !3, line: 1299, type: !6)
!18319 = !DILocation(line: 1299, column: 22, scope: !18283)
!18320 = !DILocalVariable(name: "g", scope: !18283, file: !3, line: 1300, type: !10831)
!18321 = !DILocation(line: 1300, column: 26, scope: !18283)
!18322 = !DILocalVariable(name: "match_criteria", scope: !18283, file: !3, line: 1301, type: !159)
!18323 = !DILocation(line: 1301, column: 8, scope: !18283)
!18324 = !DILocalVariable(name: "dmac", scope: !18283, file: !3, line: 1302, type: !2747)
!18325 = !DILocation(line: 1302, column: 6, scope: !18283)
!18326 = !DILocation(line: 1304, column: 2, scope: !18283)
!18327 = !DILocation(line: 1304, column: 2, scope: !18328)
!18328 = distinct !DILexicalBlock(scope: !18329, file: !3, line: 1304, column: 2)
!18329 = distinct !DILexicalBlock(scope: !18283, file: !3, line: 1304, column: 2)
!18330 = !DILocation(line: 1304, column: 2, scope: !18329)
!18331 = !DILocation(line: 1306, column: 27, scope: !18283)
!18332 = !DILocation(line: 1306, column: 18, scope: !18283)
!18333 = !DILocation(line: 1306, column: 16, scope: !18283)
!18334 = !DILocation(line: 1307, column: 7, scope: !18335)
!18335 = distinct !DILexicalBlock(scope: !18283, file: !3, line: 1307, column: 6)
!18336 = !DILocation(line: 1307, column: 6, scope: !18283)
!18337 = !DILocation(line: 1308, column: 3, scope: !18335)
!18338 = !DILocation(line: 1310, column: 36, scope: !18283)
!18339 = !DILocation(line: 1310, column: 12, scope: !18283)
!18340 = !DILocation(line: 1310, column: 10, scope: !18283)
!18341 = !DILocation(line: 1311, column: 7, scope: !18342)
!18342 = distinct !DILexicalBlock(scope: !18283, file: !3, line: 1311, column: 6)
!18343 = !DILocation(line: 1311, column: 6, scope: !18283)
!18344 = !DILocation(line: 1312, column: 3, scope: !18345)
!18345 = distinct !DILexicalBlock(scope: !18342, file: !3, line: 1311, column: 16)
!18346 = !DILocation(line: 1313, column: 7, scope: !18345)
!18347 = !DILocation(line: 1314, column: 3, scope: !18345)
!18348 = !DILocation(line: 1316, column: 31, scope: !18283)
!18349 = !DILocation(line: 1316, column: 2, scope: !18283)
!18350 = !DILocation(line: 1316, column: 7, scope: !18283)
!18351 = !DILocation(line: 1316, column: 17, scope: !18283)
!18352 = !DILocation(line: 1316, column: 26, scope: !18283)
!18353 = !DILocation(line: 1316, column: 29, scope: !18283)
!18354 = !DILocation(line: 1317, column: 37, scope: !18283)
!18355 = !DILocation(line: 1318, column: 9, scope: !18283)
!18356 = !DILocation(line: 1318, column: 14, scope: !18283)
!18357 = !DILocation(line: 1318, column: 19, scope: !18283)
!18358 = !DILocation(line: 1318, column: 24, scope: !18283)
!18359 = !DILocation(line: 1318, column: 34, scope: !18283)
!18360 = !DILocation(line: 1317, column: 8, scope: !18283)
!18361 = !DILocation(line: 1317, column: 6, scope: !18283)
!18362 = !DILocation(line: 1319, column: 6, scope: !18363)
!18363 = distinct !DILexicalBlock(scope: !18283, file: !3, line: 1319, column: 6)
!18364 = !DILocation(line: 1319, column: 6, scope: !18283)
!18365 = !DILocation(line: 1320, column: 3, scope: !18366)
!18366 = distinct !DILexicalBlock(scope: !18363, file: !3, line: 1319, column: 11)
!18367 = !DILocation(line: 1321, column: 3, scope: !18366)
!18368 = !DILocation(line: 1324, column: 15, scope: !18283)
!18369 = !DILocation(line: 1324, column: 20, scope: !18283)
!18370 = !DILocation(line: 1324, column: 33, scope: !18283)
!18371 = !DILocation(line: 1324, column: 50, scope: !18283)
!18372 = !DILocation(line: 1324, column: 62, scope: !18283)
!18373 = !DILocation(line: 1325, column: 25, scope: !18283)
!18374 = !DILocation(line: 1325, column: 30, scope: !18283)
!18375 = !DILocation(line: 1325, column: 23, scope: !18283)
!18376 = !DILocation(line: 1324, column: 13, scope: !18283)
!18377 = !DILocation(line: 1330, column: 6, scope: !18378)
!18378 = distinct !DILexicalBlock(scope: !18283, file: !3, line: 1330, column: 6)
!18379 = !DILocation(line: 1330, column: 11, scope: !18378)
!18380 = !DILocation(line: 1330, column: 20, scope: !18378)
!18381 = !DILocation(line: 1330, column: 26, scope: !18378)
!18382 = !DILocation(line: 1330, column: 6, scope: !18283)
!18383 = !DILocation(line: 1331, column: 9, scope: !18378)
!18384 = !DILocation(line: 1331, column: 3, scope: !18378)
!18385 = !DILocation(line: 1334, column: 18, scope: !18283)
!18386 = !DILocation(line: 1334, column: 10, scope: !18283)
!18387 = !DILocation(line: 1334, column: 16, scope: !18283)
!18388 = !DILocation(line: 1335, column: 20, scope: !18283)
!18389 = !DILocation(line: 1335, column: 10, scope: !18283)
!18390 = !DILocation(line: 1335, column: 18, scope: !18283)
!18391 = !DILocation(line: 1336, column: 10, scope: !18283)
!18392 = !DILocation(line: 1336, column: 15, scope: !18283)
!18393 = !DILocation(line: 1338, column: 31, scope: !18283)
!18394 = !DILocation(line: 1338, column: 8, scope: !18283)
!18395 = !DILocation(line: 1338, column: 6, scope: !18283)
!18396 = !DILocation(line: 1339, column: 13, scope: !18397)
!18397 = distinct !DILexicalBlock(scope: !18283, file: !3, line: 1339, column: 6)
!18398 = !DILocation(line: 1339, column: 6, scope: !18397)
!18399 = !DILocation(line: 1339, column: 6, scope: !18283)
!18400 = !DILocation(line: 1340, column: 17, scope: !18401)
!18401 = distinct !DILexicalBlock(scope: !18397, file: !3, line: 1339, column: 19)
!18402 = !DILocation(line: 1340, column: 9, scope: !18401)
!18403 = !DILocation(line: 1340, column: 7, scope: !18401)
!18404 = !DILocation(line: 1341, column: 3, scope: !18401)
!18405 = !DILocation(line: 1342, column: 3, scope: !18401)
!18406 = !DILocation(line: 1344, column: 37, scope: !18283)
!18407 = !DILocation(line: 1344, column: 2, scope: !18283)
!18408 = !DILocation(line: 1344, column: 7, scope: !18283)
!18409 = !DILocation(line: 1344, column: 17, scope: !18283)
!18410 = !DILocation(line: 1344, column: 26, scope: !18283)
!18411 = !DILocation(line: 1344, column: 35, scope: !18283)
!18412 = !DILocation(line: 1346, column: 26, scope: !18283)
!18413 = !DILocation(line: 1346, column: 31, scope: !18283)
!18414 = !DILocation(line: 1346, column: 8, scope: !18283)
!18415 = !DILocation(line: 1346, column: 6, scope: !18283)
!18416 = !DILocation(line: 1347, column: 6, scope: !18417)
!18417 = distinct !DILexicalBlock(scope: !18283, file: !3, line: 1347, column: 6)
!18418 = !DILocation(line: 1347, column: 6, scope: !18283)
!18419 = !DILocation(line: 1348, column: 3, scope: !18420)
!18420 = distinct !DILexicalBlock(scope: !18417, file: !3, line: 1347, column: 11)
!18421 = !DILocation(line: 1349, column: 3, scope: !18420)
!18422 = !DILocation(line: 1353, column: 2, scope: !18283)
!18423 = !DILocalVariable(name: "_v", scope: !18424, file: !3, line: 1353, type: !229)
!18424 = distinct !DILexicalBlock(scope: !18283, file: !3, line: 1353, column: 2)
!18425 = !DILocation(line: 1353, column: 2, scope: !18424)
!18426 = !DILocation(line: 1353, column: 2, scope: !18427)
!18427 = distinct !DILexicalBlock(scope: !18424, file: !3, line: 1353, column: 2)
!18428 = !DILocation(line: 1356, column: 19, scope: !18283)
!18429 = !DILocation(line: 1356, column: 17, scope: !18283)
!18430 = !DILocation(line: 1358, column: 2, scope: !18283)
!18431 = !DILocation(line: 1358, column: 2, scope: !18432)
!18432 = distinct !DILexicalBlock(scope: !18283, file: !3, line: 1358, column: 2)
!18433 = !DILocation(line: 1358, column: 2, scope: !18434)
!18434 = distinct !DILexicalBlock(scope: !18432, file: !3, line: 1358, column: 2)
!18435 = !DILocation(line: 1359, column: 2, scope: !18283)
!18436 = !DILocation(line: 1359, column: 2, scope: !18437)
!18437 = distinct !DILexicalBlock(scope: !18283, file: !3, line: 1359, column: 2)
!18438 = !DILocation(line: 1359, column: 2, scope: !18439)
!18439 = distinct !DILexicalBlock(scope: !18437, file: !3, line: 1359, column: 2)
!18440 = !DILocation(line: 1361, column: 7, scope: !18283)
!18441 = !DILocation(line: 1361, column: 12, scope: !18283)
!18442 = !DILocation(line: 1361, column: 25, scope: !18283)
!18443 = !DILocation(line: 1361, column: 42, scope: !18283)
!18444 = !DILocation(line: 1361, column: 5, scope: !18283)
!18445 = !DILocation(line: 1362, column: 2, scope: !18283)
!18446 = !DILocalVariable(name: "_v", scope: !18447, file: !3, line: 1362, type: !229)
!18447 = distinct !DILexicalBlock(scope: !18283, file: !3, line: 1362, column: 2)
!18448 = !DILocation(line: 1362, column: 2, scope: !18447)
!18449 = !DILocation(line: 1362, column: 2, scope: !18450)
!18450 = distinct !DILexicalBlock(scope: !18447, file: !3, line: 1362, column: 2)
!18451 = !DILocation(line: 1363, column: 2, scope: !18283)
!18452 = !DILocalVariable(name: "_v", scope: !18453, file: !3, line: 1363, type: !229)
!18453 = distinct !DILexicalBlock(scope: !18283, file: !3, line: 1363, column: 2)
!18454 = !DILocation(line: 1363, column: 2, scope: !18453)
!18455 = !DILocation(line: 1363, column: 2, scope: !18456)
!18456 = distinct !DILexicalBlock(scope: !18453, file: !3, line: 1363, column: 2)
!18457 = !DILocation(line: 1365, column: 29, scope: !18283)
!18458 = !DILocation(line: 1365, column: 34, scope: !18283)
!18459 = !DILocation(line: 1365, column: 6, scope: !18283)
!18460 = !DILocation(line: 1365, column: 4, scope: !18283)
!18461 = !DILocation(line: 1366, column: 13, scope: !18462)
!18462 = distinct !DILexicalBlock(scope: !18283, file: !3, line: 1366, column: 6)
!18463 = !DILocation(line: 1366, column: 6, scope: !18462)
!18464 = !DILocation(line: 1366, column: 6, scope: !18283)
!18465 = !DILocation(line: 1367, column: 17, scope: !18466)
!18466 = distinct !DILexicalBlock(scope: !18462, file: !3, line: 1366, column: 17)
!18467 = !DILocation(line: 1367, column: 9, scope: !18466)
!18468 = !DILocation(line: 1367, column: 7, scope: !18466)
!18469 = !DILocation(line: 1368, column: 3, scope: !18466)
!18470 = !DILocation(line: 1369, column: 3, scope: !18466)
!18471 = !DILocation(line: 1371, column: 46, scope: !18283)
!18472 = !DILocation(line: 1371, column: 2, scope: !18283)
!18473 = !DILocation(line: 1371, column: 7, scope: !18283)
!18474 = !DILocation(line: 1371, column: 17, scope: !18283)
!18475 = !DILocation(line: 1371, column: 26, scope: !18283)
!18476 = !DILocation(line: 1371, column: 44, scope: !18283)
!18477 = !DILocation(line: 1373, column: 6, scope: !18478)
!18478 = distinct !DILexicalBlock(scope: !18283, file: !3, line: 1373, column: 6)
!18479 = !DILocation(line: 1373, column: 6, scope: !18283)
!18480 = !DILocation(line: 1375, column: 10, scope: !18481)
!18481 = distinct !DILexicalBlock(scope: !18478, file: !3, line: 1373, column: 46)
!18482 = !DILocation(line: 1375, column: 3, scope: !18481)
!18483 = !DILocation(line: 1375, column: 28, scope: !18481)
!18484 = !DILocation(line: 1377, column: 34, scope: !18481)
!18485 = !DILocation(line: 1377, column: 39, scope: !18481)
!18486 = !DILocation(line: 1377, column: 3, scope: !18481)
!18487 = !DILocation(line: 1379, column: 50, scope: !18488)
!18488 = distinct !DILexicalBlock(scope: !18481, file: !3, line: 1379, column: 7)
!18489 = !DILocation(line: 1379, column: 8, scope: !18488)
!18490 = !DILocation(line: 1379, column: 7, scope: !18481)
!18491 = !DILocation(line: 1380, column: 21, scope: !18492)
!18492 = distinct !DILexicalBlock(scope: !18488, file: !3, line: 1379, column: 56)
!18493 = !DILocation(line: 1380, column: 19, scope: !18492)
!18494 = !DILocation(line: 1384, column: 4, scope: !18492)
!18495 = !DILocation(line: 1384, column: 4, scope: !18496)
!18496 = distinct !DILexicalBlock(scope: !18492, file: !3, line: 1384, column: 4)
!18497 = !DILocation(line: 1384, column: 4, scope: !18498)
!18498 = distinct !DILexicalBlock(scope: !18496, file: !3, line: 1384, column: 4)
!18499 = !DILocation(line: 1387, column: 4, scope: !18492)
!18500 = !DILocalVariable(name: "_v", scope: !18501, file: !3, line: 1387, type: !229)
!18501 = distinct !DILexicalBlock(scope: !18492, file: !3, line: 1387, column: 4)
!18502 = !DILocation(line: 1387, column: 4, scope: !18501)
!18503 = !DILocation(line: 1387, column: 4, scope: !18504)
!18504 = distinct !DILexicalBlock(scope: !18501, file: !3, line: 1387, column: 4)
!18505 = !DILocation(line: 1389, column: 3, scope: !18492)
!18506 = !DILocation(line: 1391, column: 3, scope: !18481)
!18507 = !DILocalVariable(name: "_v", scope: !18508, file: !3, line: 1391, type: !229)
!18508 = distinct !DILexicalBlock(scope: !18481, file: !3, line: 1391, column: 3)
!18509 = !DILocation(line: 1391, column: 3, scope: !18508)
!18510 = !DILocation(line: 1391, column: 3, scope: !18511)
!18511 = distinct !DILexicalBlock(scope: !18508, file: !3, line: 1391, column: 3)
!18512 = !DILocation(line: 1392, column: 3, scope: !18481)
!18513 = !DILocalVariable(name: "_v", scope: !18514, file: !3, line: 1392, type: !229)
!18514 = distinct !DILexicalBlock(scope: !18481, file: !3, line: 1392, column: 3)
!18515 = !DILocation(line: 1392, column: 3, scope: !18514)
!18516 = !DILocation(line: 1392, column: 3, scope: !18517)
!18517 = distinct !DILexicalBlock(scope: !18514, file: !3, line: 1392, column: 3)
!18518 = !DILocation(line: 1394, column: 9, scope: !18481)
!18519 = !DILocation(line: 1394, column: 14, scope: !18481)
!18520 = !DILocation(line: 1394, column: 6, scope: !18481)
!18521 = !DILocation(line: 1396, column: 30, scope: !18481)
!18522 = !DILocation(line: 1396, column: 35, scope: !18481)
!18523 = !DILocation(line: 1396, column: 7, scope: !18481)
!18524 = !DILocation(line: 1396, column: 5, scope: !18481)
!18525 = !DILocation(line: 1397, column: 14, scope: !18526)
!18526 = distinct !DILexicalBlock(scope: !18481, file: !3, line: 1397, column: 7)
!18527 = !DILocation(line: 1397, column: 7, scope: !18526)
!18528 = !DILocation(line: 1397, column: 7, scope: !18481)
!18529 = !DILocation(line: 1398, column: 18, scope: !18530)
!18530 = distinct !DILexicalBlock(scope: !18526, file: !3, line: 1397, column: 18)
!18531 = !DILocation(line: 1398, column: 10, scope: !18530)
!18532 = !DILocation(line: 1398, column: 8, scope: !18530)
!18533 = !DILocation(line: 1399, column: 4, scope: !18530)
!18534 = !DILocation(line: 1400, column: 4, scope: !18530)
!18535 = !DILocation(line: 1402, column: 43, scope: !18481)
!18536 = !DILocation(line: 1402, column: 3, scope: !18481)
!18537 = !DILocation(line: 1402, column: 8, scope: !18481)
!18538 = !DILocation(line: 1402, column: 18, scope: !18481)
!18539 = !DILocation(line: 1402, column: 27, scope: !18481)
!18540 = !DILocation(line: 1402, column: 41, scope: !18481)
!18541 = !DILocation(line: 1403, column: 2, scope: !18481)
!18542 = !DILocation(line: 1406, column: 9, scope: !18283)
!18543 = !DILocation(line: 1406, column: 2, scope: !18283)
!18544 = !DILocation(line: 1406, column: 27, scope: !18283)
!18545 = !DILocation(line: 1407, column: 2, scope: !18283)
!18546 = !DILocalVariable(name: "_v", scope: !18547, file: !3, line: 1407, type: !229)
!18547 = distinct !DILexicalBlock(scope: !18283, file: !3, line: 1407, column: 2)
!18548 = !DILocation(line: 1407, column: 2, scope: !18547)
!18549 = !DILocation(line: 1407, column: 2, scope: !18550)
!18550 = distinct !DILexicalBlock(scope: !18547, file: !3, line: 1407, column: 2)
!18551 = !DILocation(line: 1409, column: 19, scope: !18283)
!18552 = !DILocation(line: 1409, column: 17, scope: !18283)
!18553 = !DILocation(line: 1411, column: 9, scope: !18283)
!18554 = !DILocation(line: 1411, column: 7, scope: !18283)
!18555 = !DILocation(line: 1413, column: 2, scope: !18283)
!18556 = !DILocation(line: 1413, column: 10, scope: !18283)
!18557 = !DILocation(line: 1415, column: 2, scope: !18283)
!18558 = !DILocalVariable(name: "_v", scope: !18559, file: !3, line: 1415, type: !229)
!18559 = distinct !DILexicalBlock(scope: !18283, file: !3, line: 1415, column: 2)
!18560 = !DILocation(line: 1415, column: 2, scope: !18559)
!18561 = !DILocation(line: 1415, column: 2, scope: !18562)
!18562 = distinct !DILexicalBlock(scope: !18559, file: !3, line: 1415, column: 2)
!18563 = !DILocation(line: 1416, column: 2, scope: !18283)
!18564 = !DILocalVariable(name: "_v", scope: !18565, file: !3, line: 1416, type: !229)
!18565 = distinct !DILexicalBlock(scope: !18283, file: !3, line: 1416, column: 2)
!18566 = !DILocation(line: 1416, column: 2, scope: !18565)
!18567 = !DILocation(line: 1416, column: 2, scope: !18568)
!18568 = distinct !DILexicalBlock(scope: !18565, file: !3, line: 1416, column: 2)
!18569 = !DILocation(line: 1419, column: 29, scope: !18283)
!18570 = !DILocation(line: 1419, column: 34, scope: !18283)
!18571 = !DILocation(line: 1419, column: 6, scope: !18283)
!18572 = !DILocation(line: 1419, column: 4, scope: !18283)
!18573 = !DILocation(line: 1420, column: 13, scope: !18574)
!18574 = distinct !DILexicalBlock(scope: !18283, file: !3, line: 1420, column: 6)
!18575 = !DILocation(line: 1420, column: 6, scope: !18574)
!18576 = !DILocation(line: 1420, column: 6, scope: !18283)
!18577 = !DILocation(line: 1421, column: 17, scope: !18578)
!18578 = distinct !DILexicalBlock(scope: !18574, file: !3, line: 1420, column: 17)
!18579 = !DILocation(line: 1421, column: 9, scope: !18578)
!18580 = !DILocation(line: 1421, column: 7, scope: !18578)
!18581 = !DILocation(line: 1422, column: 3, scope: !18578)
!18582 = !DILocation(line: 1423, column: 3, scope: !18578)
!18583 = !DILocation(line: 1425, column: 37, scope: !18283)
!18584 = !DILocation(line: 1425, column: 2, scope: !18283)
!18585 = !DILocation(line: 1425, column: 7, scope: !18283)
!18586 = !DILocation(line: 1425, column: 17, scope: !18283)
!18587 = !DILocation(line: 1425, column: 26, scope: !18283)
!18588 = !DILocation(line: 1425, column: 35, scope: !18283)
!18589 = !DILocation(line: 1427, column: 30, scope: !18283)
!18590 = !DILocation(line: 1427, column: 8, scope: !18283)
!18591 = !DILocation(line: 1427, column: 6, scope: !18283)
!18592 = !DILocation(line: 1428, column: 6, scope: !18593)
!18593 = distinct !DILexicalBlock(scope: !18283, file: !3, line: 1428, column: 6)
!18594 = !DILocation(line: 1428, column: 6, scope: !18283)
!18595 = !DILocation(line: 1429, column: 3, scope: !18593)
!18596 = !DILocation(line: 1431, column: 9, scope: !18283)
!18597 = !DILocation(line: 1431, column: 2, scope: !18283)
!18598 = !DILocation(line: 1432, column: 2, scope: !18283)
!18599 = !DILabel(scope: !18283, name: "miss_rule_err", file: !3, line: 1434)
!18600 = !DILocation(line: 1434, column: 1, scope: !18283)
!18601 = !DILocation(line: 1435, column: 26, scope: !18283)
!18602 = !DILocation(line: 1435, column: 31, scope: !18283)
!18603 = !DILocation(line: 1435, column: 41, scope: !18283)
!18604 = !DILocation(line: 1435, column: 50, scope: !18283)
!18605 = !DILocation(line: 1435, column: 2, scope: !18283)
!18606 = !DILabel(scope: !18283, name: "miss_err", file: !3, line: 1436)
!18607 = !DILocation(line: 1436, column: 1, scope: !18283)
!18608 = !DILocation(line: 1437, column: 6, scope: !18609)
!18609 = distinct !DILexicalBlock(scope: !18283, file: !3, line: 1437, column: 6)
!18610 = !DILocation(line: 1437, column: 6, scope: !18283)
!18611 = !DILocation(line: 1438, column: 27, scope: !18609)
!18612 = !DILocation(line: 1438, column: 32, scope: !18609)
!18613 = !DILocation(line: 1438, column: 42, scope: !18609)
!18614 = !DILocation(line: 1438, column: 51, scope: !18609)
!18615 = !DILocation(line: 1438, column: 3, scope: !18609)
!18616 = !DILabel(scope: !18283, name: "peer_miss_err", file: !3, line: 1439)
!18617 = !DILocation(line: 1439, column: 1, scope: !18283)
!18618 = !DILocation(line: 1440, column: 26, scope: !18283)
!18619 = !DILocation(line: 1440, column: 31, scope: !18283)
!18620 = !DILocation(line: 1440, column: 41, scope: !18283)
!18621 = !DILocation(line: 1440, column: 50, scope: !18283)
!18622 = !DILocation(line: 1440, column: 2, scope: !18283)
!18623 = !DILabel(scope: !18283, name: "send_vport_err", file: !3, line: 1441)
!18624 = !DILocation(line: 1441, column: 1, scope: !18283)
!18625 = !DILocation(line: 1442, column: 21, scope: !18283)
!18626 = !DILocation(line: 1442, column: 26, scope: !18283)
!18627 = !DILocation(line: 1442, column: 2, scope: !18283)
!18628 = !DILabel(scope: !18283, name: "fdb_chains_err", file: !3, line: 1443)
!18629 = !DILocation(line: 1443, column: 1, scope: !18283)
!18630 = !DILocation(line: 1444, column: 26, scope: !18283)
!18631 = !DILocation(line: 1444, column: 31, scope: !18283)
!18632 = !DILocation(line: 1444, column: 41, scope: !18283)
!18633 = !DILocation(line: 1444, column: 50, scope: !18283)
!18634 = !DILocation(line: 1444, column: 2, scope: !18283)
!18635 = !DILabel(scope: !18283, name: "slow_fdb_err", file: !3, line: 1445)
!18636 = !DILocation(line: 1445, column: 1, scope: !18283)
!18637 = !DILocation(line: 1447, column: 31, scope: !18283)
!18638 = !DILocation(line: 1447, column: 2, scope: !18283)
!18639 = !DILabel(scope: !18283, name: "ns_err", file: !3, line: 1448)
!18640 = !DILocation(line: 1448, column: 1, scope: !18283)
!18641 = !DILocation(line: 1449, column: 9, scope: !18283)
!18642 = !DILocation(line: 1449, column: 2, scope: !18283)
!18643 = !DILocation(line: 1450, column: 9, scope: !18283)
!18644 = !DILocation(line: 1450, column: 2, scope: !18283)
!18645 = !DILocation(line: 1451, column: 1, scope: !18283)
!18646 = distinct !DISubprogram(name: "mlx5_devlink_eswitch_encap_mode_get", scope: !3, file: !3, line: 2695, type: !4040, scopeLine: 2697, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!18647 = !DILocalVariable(name: "devlink", arg: 1, scope: !18646, file: !3, line: 2695, type: !3880)
!18648 = !DILocation(line: 2695, column: 57, scope: !18646)
!18649 = !DILocalVariable(name: "encap", arg: 2, scope: !18646, file: !3, line: 2696, type: !4042)
!18650 = !DILocation(line: 2696, column: 39, scope: !18646)
!18651 = !DILocalVariable(name: "esw", scope: !18646, file: !3, line: 2698, type: !7)
!18652 = !DILocation(line: 2698, column: 23, scope: !18646)
!18653 = !DILocalVariable(name: "err", scope: !18646, file: !3, line: 2699, type: !6)
!18654 = !DILocation(line: 2699, column: 6, scope: !18646)
!18655 = !DILocation(line: 2701, column: 33, scope: !18646)
!18656 = !DILocation(line: 2701, column: 8, scope: !18646)
!18657 = !DILocation(line: 2701, column: 6, scope: !18646)
!18658 = !DILocation(line: 2702, column: 13, scope: !18659)
!18659 = distinct !DILexicalBlock(scope: !18646, file: !3, line: 2702, column: 6)
!18660 = !DILocation(line: 2702, column: 6, scope: !18659)
!18661 = !DILocation(line: 2702, column: 6, scope: !18646)
!18662 = !DILocation(line: 2703, column: 18, scope: !18659)
!18663 = !DILocation(line: 2703, column: 10, scope: !18659)
!18664 = !DILocation(line: 2703, column: 3, scope: !18659)
!18665 = !DILocation(line: 2706, column: 14, scope: !18646)
!18666 = !DILocation(line: 2706, column: 19, scope: !18646)
!18667 = !DILocation(line: 2706, column: 2, scope: !18646)
!18668 = !DILocation(line: 2707, column: 39, scope: !18646)
!18669 = !DILocation(line: 2707, column: 8, scope: !18646)
!18670 = !DILocation(line: 2707, column: 6, scope: !18646)
!18671 = !DILocation(line: 2708, column: 6, scope: !18672)
!18672 = distinct !DILexicalBlock(scope: !18646, file: !3, line: 2708, column: 6)
!18673 = !DILocation(line: 2708, column: 6, scope: !18646)
!18674 = !DILocation(line: 2709, column: 3, scope: !18672)
!18675 = !DILocation(line: 2711, column: 11, scope: !18646)
!18676 = !DILocation(line: 2711, column: 16, scope: !18646)
!18677 = !DILocation(line: 2711, column: 25, scope: !18646)
!18678 = !DILocation(line: 2711, column: 3, scope: !18646)
!18679 = !DILocation(line: 2711, column: 9, scope: !18646)
!18680 = !DILocation(line: 2711, column: 2, scope: !18646)
!18681 = !DILabel(scope: !18646, name: "unlock", file: !3, line: 2712)
!18682 = !DILocation(line: 2712, column: 1, scope: !18646)
!18683 = !DILocation(line: 2713, column: 16, scope: !18646)
!18684 = !DILocation(line: 2713, column: 21, scope: !18646)
!18685 = !DILocation(line: 2713, column: 2, scope: !18646)
!18686 = !DILocation(line: 2714, column: 2, scope: !18646)
!18687 = !DILocation(line: 2715, column: 1, scope: !18646)
!18688 = distinct !DISubprogram(name: "mlx5_eswitch_register_vport_reps", scope: !3, file: !3, line: 2732, type: !18689, scopeLine: 2735, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!18689 = !DISubroutineType(types: !18690)
!18690 = !{null, !7, !11444, !1403}
!18691 = !DILocation(line: 39, column: 55, scope: !16445, inlinedAt: !18692)
!18692 = distinct !DILocation(line: 46, column: 2, scope: !16451, inlinedAt: !18693)
!18693 = distinct !DILocation(line: 2744, column: 4, scope: !18694)
!18694 = distinct !DILexicalBlock(scope: !18695, file: !3, line: 2742, column: 51)
!18695 = distinct !DILexicalBlock(scope: !18696, file: !3, line: 2742, column: 7)
!18696 = distinct !DILexicalBlock(scope: !18697, file: !3, line: 2741, column: 37)
!18697 = distinct !DILexicalBlock(scope: !18698, file: !3, line: 2741, column: 2)
!18698 = distinct !DILexicalBlock(scope: !18688, file: !3, line: 2741, column: 2)
!18699 = !DILocation(line: 39, column: 62, scope: !16445, inlinedAt: !18692)
!18700 = !DILocation(line: 84, column: 74, scope: !16461, inlinedAt: !18701)
!18701 = distinct !DILocation(line: 45, column: 2, scope: !16451, inlinedAt: !18693)
!18702 = !DILocation(line: 84, column: 84, scope: !16461, inlinedAt: !18701)
!18703 = !DILocation(line: 43, column: 22, scope: !16451, inlinedAt: !18693)
!18704 = !DILocation(line: 43, column: 29, scope: !16451, inlinedAt: !18693)
!18705 = !DILocalVariable(name: "esw", arg: 1, scope: !18688, file: !3, line: 2732, type: !7)
!18706 = !DILocation(line: 2732, column: 60, scope: !18688)
!18707 = !DILocalVariable(name: "ops", arg: 2, scope: !18688, file: !3, line: 2733, type: !11444)
!18708 = !DILocation(line: 2733, column: 46, scope: !18688)
!18709 = !DILocalVariable(name: "rep_type", arg: 3, scope: !18688, file: !3, line: 2734, type: !1403)
!18710 = !DILocation(line: 2734, column: 14, scope: !18688)
!18711 = !DILocalVariable(name: "rep_data", scope: !18688, file: !3, line: 2736, type: !18712)
!18712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11421, size: 64)
!18713 = !DILocation(line: 2736, column: 32, scope: !18688)
!18714 = !DILocalVariable(name: "rep", scope: !18688, file: !3, line: 2737, type: !11415)
!18715 = !DILocation(line: 2737, column: 27, scope: !18688)
!18716 = !DILocalVariable(name: "i", scope: !18688, file: !3, line: 2738, type: !6)
!18717 = !DILocation(line: 2738, column: 6, scope: !18688)
!18718 = !DILocation(line: 2740, column: 36, scope: !18688)
!18719 = !DILocation(line: 2740, column: 2, scope: !18688)
!18720 = !DILocation(line: 2740, column: 7, scope: !18688)
!18721 = !DILocation(line: 2740, column: 16, scope: !18688)
!18722 = !DILocation(line: 2740, column: 24, scope: !18688)
!18723 = !DILocation(line: 2740, column: 34, scope: !18688)
!18724 = !DILocation(line: 2741, column: 2, scope: !18698)
!18725 = !DILocation(line: 2741, column: 2, scope: !18697)
!18726 = !DILocation(line: 2742, column: 7, scope: !18695)
!18727 = !DILocation(line: 2742, column: 7, scope: !18696)
!18728 = !DILocation(line: 2743, column: 16, scope: !18694)
!18729 = !DILocation(line: 2743, column: 21, scope: !18694)
!18730 = !DILocation(line: 2743, column: 30, scope: !18694)
!18731 = !DILocation(line: 2743, column: 13, scope: !18694)
!18732 = !DILocation(line: 2744, column: 16, scope: !18694)
!18733 = !DILocation(line: 2744, column: 26, scope: !18694)
!18734 = !DILocation(line: 45, column: 26, scope: !16451, inlinedAt: !18693)
!18735 = !DILocation(line: 86, column: 20, scope: !16461, inlinedAt: !18701)
!18736 = !DILocation(line: 86, column: 23, scope: !16461, inlinedAt: !18701)
!18737 = !DILocation(line: 86, column: 2, scope: !16461, inlinedAt: !18701)
!18738 = !DILocation(line: 87, column: 2, scope: !16461, inlinedAt: !18701)
!18739 = !DILocation(line: 46, column: 18, scope: !16451, inlinedAt: !18693)
!18740 = !DILocation(line: 46, column: 21, scope: !16451, inlinedAt: !18693)
!18741 = !DILocation(line: 41, column: 2, scope: !16523, inlinedAt: !18692)
!18742 = !DILocation(line: 2745, column: 3, scope: !18694)
!18743 = !DILocation(line: 2746, column: 2, scope: !18696)
!18744 = distinct !{!18744, !18724, !18745}
!18745 = !DILocation(line: 2746, column: 2, scope: !18698)
!18746 = !DILocation(line: 2747, column: 1, scope: !18688)
!18747 = distinct !DISubprogram(name: "mlx5_eswitch_vport_has_rep", scope: !3, file: !3, line: 2718, type: !18748, scopeLine: 2719, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!18748 = !DISubroutineType(types: !18749)
!18749 = !{!304, !16383, !744}
!18750 = !DILocalVariable(name: "esw", arg: 1, scope: !18747, file: !3, line: 2718, type: !16383)
!18751 = !DILocation(line: 2718, column: 55, scope: !18747)
!18752 = !DILocalVariable(name: "vport_num", arg: 2, scope: !18747, file: !3, line: 2718, type: !744)
!18753 = !DILocation(line: 2718, column: 64, scope: !18747)
!18754 = !DILocation(line: 2721, column: 6, scope: !18755)
!18755 = distinct !DILexicalBlock(scope: !18747, file: !3, line: 2721, column: 6)
!18756 = !DILocation(line: 2721, column: 16, scope: !18755)
!18757 = !DILocation(line: 2721, column: 33, scope: !18755)
!18758 = !DILocation(line: 2722, column: 37, scope: !18755)
!18759 = !DILocation(line: 2722, column: 42, scope: !18755)
!18760 = !DILocation(line: 2722, column: 7, scope: !18755)
!18761 = !DILocation(line: 2721, column: 6, scope: !18747)
!18762 = !DILocation(line: 2723, column: 3, scope: !18755)
!18763 = !DILocation(line: 2725, column: 6, scope: !18764)
!18764 = distinct !DILexicalBlock(scope: !18747, file: !3, line: 2725, column: 6)
!18765 = !DILocation(line: 2725, column: 16, scope: !18764)
!18766 = !DILocation(line: 2725, column: 35, scope: !18764)
!18767 = !DILocation(line: 2726, column: 30, scope: !18764)
!18768 = !DILocation(line: 2726, column: 35, scope: !18764)
!18769 = !DILocation(line: 2726, column: 7, scope: !18764)
!18770 = !DILocation(line: 2725, column: 6, scope: !18747)
!18771 = !DILocation(line: 2727, column: 3, scope: !18764)
!18772 = !DILocation(line: 2729, column: 2, scope: !18747)
!18773 = !DILocation(line: 2730, column: 1, scope: !18747)
!18774 = distinct !DISubprogram(name: "mlx5_eswitch_unregister_vport_reps", scope: !3, file: !3, line: 2750, type: !18775, scopeLine: 2751, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!18775 = !DISubroutineType(types: !18776)
!18776 = !{null, !7, !1403}
!18777 = !DILocation(line: 39, column: 55, scope: !16445, inlinedAt: !18778)
!18778 = distinct !DILocation(line: 46, column: 2, scope: !16451, inlinedAt: !18779)
!18779 = distinct !DILocation(line: 2759, column: 3, scope: !18780)
!18780 = distinct !DILexicalBlock(scope: !18781, file: !3, line: 2758, column: 2)
!18781 = distinct !DILexicalBlock(scope: !18774, file: !3, line: 2758, column: 2)
!18782 = !DILocation(line: 39, column: 62, scope: !16445, inlinedAt: !18778)
!18783 = !DILocation(line: 84, column: 74, scope: !16461, inlinedAt: !18784)
!18784 = distinct !DILocation(line: 45, column: 2, scope: !16451, inlinedAt: !18779)
!18785 = !DILocation(line: 84, column: 84, scope: !16461, inlinedAt: !18784)
!18786 = !DILocation(line: 43, column: 22, scope: !16451, inlinedAt: !18779)
!18787 = !DILocation(line: 43, column: 29, scope: !16451, inlinedAt: !18779)
!18788 = !DILocalVariable(name: "esw", arg: 1, scope: !18774, file: !3, line: 2750, type: !7)
!18789 = !DILocation(line: 2750, column: 62, scope: !18774)
!18790 = !DILocalVariable(name: "rep_type", arg: 2, scope: !18774, file: !3, line: 2750, type: !1403)
!18791 = !DILocation(line: 2750, column: 70, scope: !18774)
!18792 = !DILocalVariable(name: "rep", scope: !18774, file: !3, line: 2752, type: !11415)
!18793 = !DILocation(line: 2752, column: 27, scope: !18774)
!18794 = !DILocalVariable(name: "i", scope: !18774, file: !3, line: 2753, type: !6)
!18795 = !DILocation(line: 2753, column: 6, scope: !18774)
!18796 = !DILocation(line: 2755, column: 6, scope: !18797)
!18797 = distinct !DILexicalBlock(scope: !18774, file: !3, line: 2755, column: 6)
!18798 = !DILocation(line: 2755, column: 11, scope: !18797)
!18799 = !DILocation(line: 2755, column: 16, scope: !18797)
!18800 = !DILocation(line: 2755, column: 6, scope: !18774)
!18801 = !DILocation(line: 2756, column: 27, scope: !18797)
!18802 = !DILocation(line: 2756, column: 32, scope: !18797)
!18803 = !DILocation(line: 2756, column: 3, scope: !18797)
!18804 = !DILocation(line: 2758, column: 2, scope: !18781)
!18805 = !DILocation(line: 2758, column: 2, scope: !18780)
!18806 = !DILocation(line: 2759, column: 15, scope: !18780)
!18807 = !DILocation(line: 2759, column: 20, scope: !18780)
!18808 = !DILocation(line: 2759, column: 29, scope: !18780)
!18809 = !DILocation(line: 2759, column: 39, scope: !18780)
!18810 = !DILocation(line: 45, column: 26, scope: !16451, inlinedAt: !18779)
!18811 = !DILocation(line: 86, column: 20, scope: !16461, inlinedAt: !18784)
!18812 = !DILocation(line: 86, column: 23, scope: !16461, inlinedAt: !18784)
!18813 = !DILocation(line: 86, column: 2, scope: !16461, inlinedAt: !18784)
!18814 = !DILocation(line: 87, column: 2, scope: !16461, inlinedAt: !18784)
!18815 = !DILocation(line: 46, column: 18, scope: !16451, inlinedAt: !18779)
!18816 = !DILocation(line: 46, column: 21, scope: !16451, inlinedAt: !18779)
!18817 = !DILocation(line: 41, column: 2, scope: !16523, inlinedAt: !18778)
!18818 = !DILocation(line: 2759, column: 3, scope: !18780)
!18819 = distinct !{!18819, !18804, !18820}
!18820 = !DILocation(line: 2759, column: 62, scope: !18781)
!18821 = !DILocation(line: 2760, column: 1, scope: !18774)
!18822 = distinct !DISubprogram(name: "__unload_reps_all_vport", scope: !3, file: !3, line: 1804, type: !18775, scopeLine: 1805, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!18823 = !DILocalVariable(name: "esw", arg: 1, scope: !18822, file: !3, line: 1804, type: !7)
!18824 = !DILocation(line: 1804, column: 58, scope: !18822)
!18825 = !DILocalVariable(name: "rep_type", arg: 2, scope: !18822, file: !3, line: 1804, type: !1403)
!18826 = !DILocation(line: 1804, column: 66, scope: !18822)
!18827 = !DILocalVariable(name: "rep", scope: !18822, file: !3, line: 1806, type: !11415)
!18828 = !DILocation(line: 1806, column: 27, scope: !18822)
!18829 = !DILocalVariable(name: "i", scope: !18822, file: !3, line: 1807, type: !6)
!18830 = !DILocation(line: 1807, column: 6, scope: !18822)
!18831 = !DILocation(line: 1809, column: 2, scope: !18832)
!18832 = distinct !DILexicalBlock(scope: !18822, file: !3, line: 1809, column: 2)
!18833 = !DILocation(line: 1809, column: 2, scope: !18834)
!18834 = distinct !DILexicalBlock(scope: !18832, file: !3, line: 1809, column: 2)
!18835 = !DILocation(line: 1810, column: 29, scope: !18834)
!18836 = !DILocation(line: 1810, column: 34, scope: !18834)
!18837 = !DILocation(line: 1810, column: 39, scope: !18834)
!18838 = !DILocation(line: 1810, column: 3, scope: !18834)
!18839 = distinct !{!18839, !18831, !18840}
!18840 = !DILocation(line: 1810, column: 47, scope: !18832)
!18841 = !DILocation(line: 1812, column: 29, scope: !18842)
!18842 = distinct !DILexicalBlock(scope: !18822, file: !3, line: 1812, column: 6)
!18843 = !DILocation(line: 1812, column: 34, scope: !18842)
!18844 = !DILocation(line: 1812, column: 6, scope: !18842)
!18845 = !DILocation(line: 1812, column: 6, scope: !18822)
!18846 = !DILocation(line: 1813, column: 30, scope: !18847)
!18847 = distinct !DILexicalBlock(scope: !18842, file: !3, line: 1812, column: 40)
!18848 = !DILocation(line: 1813, column: 9, scope: !18847)
!18849 = !DILocation(line: 1813, column: 7, scope: !18847)
!18850 = !DILocation(line: 1814, column: 29, scope: !18847)
!18851 = !DILocation(line: 1814, column: 34, scope: !18847)
!18852 = !DILocation(line: 1814, column: 39, scope: !18847)
!18853 = !DILocation(line: 1814, column: 3, scope: !18847)
!18854 = !DILocation(line: 1815, column: 2, scope: !18847)
!18855 = !DILocation(line: 1817, column: 36, scope: !18856)
!18856 = distinct !DILexicalBlock(scope: !18822, file: !3, line: 1817, column: 6)
!18857 = !DILocation(line: 1817, column: 41, scope: !18856)
!18858 = !DILocation(line: 1817, column: 6, scope: !18856)
!18859 = !DILocation(line: 1817, column: 6, scope: !18822)
!18860 = !DILocation(line: 1818, column: 30, scope: !18861)
!18861 = distinct !DILexicalBlock(scope: !18856, file: !3, line: 1817, column: 47)
!18862 = !DILocation(line: 1818, column: 9, scope: !18861)
!18863 = !DILocation(line: 1818, column: 7, scope: !18861)
!18864 = !DILocation(line: 1819, column: 29, scope: !18861)
!18865 = !DILocation(line: 1819, column: 34, scope: !18861)
!18866 = !DILocation(line: 1819, column: 39, scope: !18861)
!18867 = !DILocation(line: 1819, column: 3, scope: !18861)
!18868 = !DILocation(line: 1820, column: 2, scope: !18861)
!18869 = !DILocation(line: 1822, column: 29, scope: !18822)
!18870 = !DILocation(line: 1822, column: 8, scope: !18822)
!18871 = !DILocation(line: 1822, column: 6, scope: !18822)
!18872 = !DILocation(line: 1823, column: 28, scope: !18822)
!18873 = !DILocation(line: 1823, column: 33, scope: !18822)
!18874 = !DILocation(line: 1823, column: 38, scope: !18822)
!18875 = !DILocation(line: 1823, column: 2, scope: !18822)
!18876 = !DILocation(line: 1824, column: 1, scope: !18822)
!18877 = distinct !DISubprogram(name: "mlx5_eswitch_get_uplink_priv", scope: !3, file: !3, line: 2763, type: !18878, scopeLine: 2764, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!18878 = !DISubroutineType(types: !18879)
!18879 = !{!159, !7, !1403}
!18880 = !DILocalVariable(name: "esw", arg: 1, scope: !18877, file: !3, line: 2763, type: !7)
!18881 = !DILocation(line: 2763, column: 57, scope: !18877)
!18882 = !DILocalVariable(name: "rep_type", arg: 2, scope: !18877, file: !3, line: 2763, type: !1403)
!18883 = !DILocation(line: 2763, column: 65, scope: !18877)
!18884 = !DILocalVariable(name: "rep", scope: !18877, file: !3, line: 2765, type: !11415)
!18885 = !DILocation(line: 2765, column: 27, scope: !18877)
!18886 = !DILocation(line: 2767, column: 29, scope: !18877)
!18887 = !DILocation(line: 2767, column: 8, scope: !18877)
!18888 = !DILocation(line: 2767, column: 6, scope: !18877)
!18889 = !DILocation(line: 2768, column: 9, scope: !18877)
!18890 = !DILocation(line: 2768, column: 14, scope: !18877)
!18891 = !DILocation(line: 2768, column: 23, scope: !18877)
!18892 = !DILocation(line: 2768, column: 33, scope: !18877)
!18893 = !DILocation(line: 2768, column: 2, scope: !18877)
!18894 = distinct !DISubprogram(name: "mlx5_eswitch_get_rep", scope: !3, file: !3, line: 235, type: !18895, scopeLine: 237, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!18895 = !DISubroutineType(types: !18896)
!18896 = !{!11415, !7, !744}
!18897 = !DILocalVariable(name: "esw", arg: 1, scope: !18894, file: !3, line: 235, type: !7)
!18898 = !DILocation(line: 235, column: 75, scope: !18894)
!18899 = !DILocalVariable(name: "vport_num", arg: 2, scope: !18894, file: !3, line: 236, type: !744)
!18900 = !DILocation(line: 236, column: 16, scope: !18894)
!18901 = !DILocalVariable(name: "idx", scope: !18894, file: !3, line: 238, type: !6)
!18902 = !DILocation(line: 238, column: 6, scope: !18894)
!18903 = !DILocation(line: 238, column: 44, scope: !18894)
!18904 = !DILocation(line: 238, column: 49, scope: !18894)
!18905 = !DILocation(line: 238, column: 12, scope: !18894)
!18906 = !DILocalVariable(name: "__ret_warn_on", scope: !18907, file: !3, line: 240, type: !6)
!18907 = distinct !DILexicalBlock(scope: !18894, file: !3, line: 240, column: 2)
!18908 = !DILocation(line: 240, column: 2, scope: !18907)
!18909 = !DILocation(line: 240, column: 2, scope: !18910)
!18910 = distinct !DILexicalBlock(scope: !18907, file: !3, line: 240, column: 2)
!18911 = !DILocation(line: 240, column: 2, scope: !18912)
!18912 = distinct !DILexicalBlock(scope: !18910, file: !3, line: 240, column: 2)
!18913 = !DILocation(line: 240, column: 2, scope: !18914)
!18914 = distinct !DILexicalBlock(scope: !18912, file: !3, line: 240, column: 2)
!18915 = !DILocation(line: 240, column: 2, scope: !18916)
!18916 = distinct !DILexicalBlock(scope: !18912, file: !3, line: 240, column: 2)
!18917 = !{i32 -2135612643, i32 -2135612614, i32 -2135612568, i32 -2135612510, i32 -2135612456, i32 -2135612402, i32 -2135612347, i32 -2135612316}
!18918 = !DILocation(line: 240, column: 2, scope: !18919)
!18919 = distinct !DILexicalBlock(scope: !18912, file: !3, line: 240, column: 2)
!18920 = !{i32 -2135611876, i32 -2135611869, i32 -2135611817, i32 -2135611786, i32 -2135611756}
!18921 = !DILocation(line: 240, column: 2, scope: !18922)
!18922 = distinct !DILexicalBlock(scope: !18912, file: !3, line: 240, column: 2)
!18923 = !DILocation(line: 241, column: 10, scope: !18894)
!18924 = !DILocation(line: 241, column: 15, scope: !18894)
!18925 = !DILocation(line: 241, column: 24, scope: !18894)
!18926 = !DILocation(line: 241, column: 35, scope: !18894)
!18927 = !DILocation(line: 241, column: 2, scope: !18894)
!18928 = distinct !DISubprogram(name: "mlx5_eswitch_get_proto_dev", scope: !3, file: !3, line: 2771, type: !18929, scopeLine: 2774, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!18929 = !DISubroutineType(types: !18930)
!18930 = !{!159, !7, !744, !1403}
!18931 = !DILocation(line: 23, column: 61, scope: !15606, inlinedAt: !18932)
!18932 = distinct !DILocation(line: 28, column: 9, scope: !15614, inlinedAt: !18933)
!18933 = distinct !DILocation(line: 2779, column: 6, scope: !18934)
!18934 = distinct !DILexicalBlock(scope: !18928, file: !3, line: 2779, column: 6)
!18935 = !DILocation(line: 69, column: 73, scope: !15621, inlinedAt: !18936)
!18936 = distinct !DILocation(line: 27, column: 2, scope: !15614, inlinedAt: !18933)
!18937 = !DILocation(line: 69, column: 83, scope: !15621, inlinedAt: !18936)
!18938 = !DILocation(line: 25, column: 29, scope: !15614, inlinedAt: !18933)
!18939 = !DILocalVariable(name: "esw", arg: 1, scope: !18928, file: !3, line: 2771, type: !7)
!18940 = !DILocation(line: 2771, column: 55, scope: !18928)
!18941 = !DILocalVariable(name: "vport", arg: 2, scope: !18928, file: !3, line: 2772, type: !744)
!18942 = !DILocation(line: 2772, column: 10, scope: !18928)
!18943 = !DILocalVariable(name: "rep_type", arg: 3, scope: !18928, file: !3, line: 2773, type: !1403)
!18944 = !DILocation(line: 2773, column: 9, scope: !18928)
!18945 = !DILocalVariable(name: "rep", scope: !18928, file: !3, line: 2775, type: !11415)
!18946 = !DILocation(line: 2775, column: 27, scope: !18928)
!18947 = !DILocation(line: 2777, column: 29, scope: !18928)
!18948 = !DILocation(line: 2777, column: 34, scope: !18928)
!18949 = !DILocation(line: 2777, column: 8, scope: !18928)
!18950 = !DILocation(line: 2777, column: 6, scope: !18928)
!18951 = !DILocation(line: 2779, column: 19, scope: !18934)
!18952 = !DILocation(line: 2779, column: 24, scope: !18934)
!18953 = !DILocation(line: 2779, column: 33, scope: !18934)
!18954 = !DILocation(line: 2779, column: 43, scope: !18934)
!18955 = !DILocation(line: 27, column: 25, scope: !15614, inlinedAt: !18933)
!18956 = !DILocation(line: 71, column: 19, scope: !15621, inlinedAt: !18936)
!18957 = !DILocation(line: 71, column: 22, scope: !15621, inlinedAt: !18936)
!18958 = !DILocation(line: 71, column: 2, scope: !15621, inlinedAt: !18936)
!18959 = !DILocation(line: 72, column: 2, scope: !15621, inlinedAt: !18936)
!18960 = !DILocation(line: 28, column: 26, scope: !15614, inlinedAt: !18933)
!18961 = !DILocation(line: 29, column: 9, scope: !15606, inlinedAt: !18932)
!18962 = !DILocation(line: 2779, column: 50, scope: !18934)
!18963 = !DILocation(line: 2779, column: 64, scope: !18934)
!18964 = !DILocation(line: 2780, column: 6, scope: !18934)
!18965 = !DILocation(line: 2780, column: 11, scope: !18934)
!18966 = !DILocation(line: 2780, column: 20, scope: !18934)
!18967 = !DILocation(line: 2780, column: 28, scope: !18934)
!18968 = !DILocation(line: 2780, column: 39, scope: !18934)
!18969 = !DILocation(line: 2779, column: 6, scope: !18928)
!18970 = !DILocation(line: 2781, column: 10, scope: !18934)
!18971 = !DILocation(line: 2781, column: 15, scope: !18934)
!18972 = !DILocation(line: 2781, column: 24, scope: !18934)
!18973 = !DILocation(line: 2781, column: 32, scope: !18934)
!18974 = !DILocation(line: 2781, column: 43, scope: !18934)
!18975 = !DILocation(line: 2781, column: 57, scope: !18934)
!18976 = !DILocation(line: 2781, column: 3, scope: !18934)
!18977 = !DILocation(line: 2782, column: 2, scope: !18928)
!18978 = !DILocation(line: 2783, column: 1, scope: !18928)
!18979 = distinct !DISubprogram(name: "mlx5_eswitch_uplink_get_proto_dev", scope: !3, file: !3, line: 2786, type: !18878, scopeLine: 2787, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!18980 = !DILocalVariable(name: "esw", arg: 1, scope: !18979, file: !3, line: 2786, type: !7)
!18981 = !DILocation(line: 2786, column: 62, scope: !18979)
!18982 = !DILocalVariable(name: "rep_type", arg: 2, scope: !18979, file: !3, line: 2786, type: !1403)
!18983 = !DILocation(line: 2786, column: 70, scope: !18979)
!18984 = !DILocation(line: 2788, column: 36, scope: !18979)
!18985 = !DILocation(line: 2788, column: 60, scope: !18979)
!18986 = !DILocation(line: 2788, column: 9, scope: !18979)
!18987 = !DILocation(line: 2788, column: 2, scope: !18979)
!18988 = distinct !DISubprogram(name: "mlx5_eswitch_vport_rep", scope: !3, file: !3, line: 2792, type: !18895, scopeLine: 2794, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!18989 = !DILocalVariable(name: "esw", arg: 1, scope: !18988, file: !3, line: 2792, type: !7)
!18990 = !DILocation(line: 2792, column: 70, scope: !18988)
!18991 = !DILocalVariable(name: "vport", arg: 2, scope: !18988, file: !3, line: 2793, type: !744)
!18992 = !DILocation(line: 2793, column: 11, scope: !18988)
!18993 = !DILocation(line: 2795, column: 30, scope: !18988)
!18994 = !DILocation(line: 2795, column: 35, scope: !18988)
!18995 = !DILocation(line: 2795, column: 9, scope: !18988)
!18996 = !DILocation(line: 2795, column: 2, scope: !18988)
!18997 = distinct !DISubprogram(name: "mlx5_eswitch_is_vf_vport", scope: !3, file: !3, line: 2799, type: !18748, scopeLine: 2800, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!18998 = !DILocalVariable(name: "esw", arg: 1, scope: !18997, file: !3, line: 2799, type: !16383)
!18999 = !DILocation(line: 2799, column: 58, scope: !18997)
!19000 = !DILocalVariable(name: "vport_num", arg: 2, scope: !18997, file: !3, line: 2799, type: !744)
!19001 = !DILocation(line: 2799, column: 67, scope: !18997)
!19002 = !DILocation(line: 2801, column: 9, scope: !18997)
!19003 = !DILocation(line: 2801, column: 19, scope: !18997)
!19004 = !DILocation(line: 2801, column: 42, scope: !18997)
!19005 = !DILocation(line: 2802, column: 9, scope: !18997)
!19006 = !DILocation(line: 2802, column: 22, scope: !18997)
!19007 = !DILocation(line: 2802, column: 27, scope: !18997)
!19008 = !DILocation(line: 2802, column: 32, scope: !18997)
!19009 = !DILocation(line: 2802, column: 37, scope: !18997)
!19010 = !DILocation(line: 2802, column: 43, scope: !18997)
!19011 = !DILocation(line: 2802, column: 19, scope: !18997)
!19012 = !DILocation(line: 0, scope: !18997)
!19013 = !DILocation(line: 2801, column: 2, scope: !18997)
!19014 = distinct !DISubprogram(name: "mlx5_eswitch_reg_c1_loopback_enabled", scope: !3, file: !3, line: 2805, type: !16381, scopeLine: 2806, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!19015 = !DILocalVariable(name: "esw", arg: 1, scope: !19014, file: !3, line: 2805, type: !16383)
!19016 = !DILocation(line: 2805, column: 70, scope: !19014)
!19017 = !DILocation(line: 2807, column: 12, scope: !19014)
!19018 = !DILocation(line: 2807, column: 17, scope: !19014)
!19019 = !DILocation(line: 2807, column: 23, scope: !19014)
!19020 = !DILocation(line: 2807, column: 10, scope: !19014)
!19021 = !DILocation(line: 2807, column: 9, scope: !19014)
!19022 = !DILocation(line: 2807, column: 2, scope: !19014)
!19023 = distinct !DISubprogram(name: "flow_attr_to_vport_key", scope: !3, file: !3, line: 103, type: !19024, scopeLine: 106, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!19024 = !DISubroutineType(types: !19025)
!19025 = !{!229, !7, !12389, !19026}
!19026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12248, size: 64)
!19027 = !DILocalVariable(name: "esw", arg: 1, scope: !19023, file: !3, line: 103, type: !7)
!19028 = !DILocation(line: 103, column: 56, scope: !19023)
!19029 = !DILocalVariable(name: "attr", arg: 2, scope: !19023, file: !3, line: 104, type: !12389)
!19030 = !DILocation(line: 104, column: 35, scope: !19023)
!19031 = !DILocalVariable(name: "key", arg: 3, scope: !19023, file: !3, line: 105, type: !19026)
!19032 = !DILocation(line: 105, column: 30, scope: !19023)
!19033 = !DILocation(line: 107, column: 15, scope: !19023)
!19034 = !DILocation(line: 107, column: 21, scope: !19023)
!19035 = !DILocation(line: 107, column: 2, scope: !19023)
!19036 = !DILocation(line: 107, column: 7, scope: !19023)
!19037 = !DILocation(line: 107, column: 13, scope: !19023)
!19038 = !DILocation(line: 108, column: 15, scope: !19023)
!19039 = !DILocation(line: 108, column: 21, scope: !19023)
!19040 = !DILocation(line: 108, column: 2, scope: !19023)
!19041 = !DILocation(line: 108, column: 7, scope: !19023)
!19042 = !DILocation(line: 108, column: 13, scope: !19023)
!19043 = !DILocation(line: 109, column: 14, scope: !19023)
!19044 = !DILocation(line: 109, column: 20, scope: !19023)
!19045 = !DILocation(line: 109, column: 2, scope: !19023)
!19046 = !DILocation(line: 109, column: 7, scope: !19023)
!19047 = !DILocation(line: 109, column: 12, scope: !19023)
!19048 = !DILocation(line: 110, column: 17, scope: !19023)
!19049 = !DILocation(line: 110, column: 2, scope: !19023)
!19050 = !DILocation(line: 110, column: 7, scope: !19023)
!19051 = !DILocation(line: 110, column: 15, scope: !19023)
!19052 = !DILocation(line: 111, column: 15, scope: !19023)
!19053 = !DILocation(line: 111, column: 9, scope: !19023)
!19054 = !DILocation(line: 111, column: 2, scope: !19023)
!19055 = distinct !DISubprogram(name: "esw_vport_tbl_lookup", scope: !3, file: !3, line: 116, type: !19056, scopeLine: 117, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!19056 = !DISubroutineType(types: !19057)
!19057 = !{!12241, !7, !19026, !229}
!19058 = !DILocalVariable(name: "esw", arg: 1, scope: !19055, file: !3, line: 116, type: !7)
!19059 = !DILocation(line: 116, column: 43, scope: !19055)
!19060 = !DILocalVariable(name: "skey", arg: 2, scope: !19055, file: !3, line: 116, type: !19026)
!19061 = !DILocation(line: 116, column: 71, scope: !19055)
!19062 = !DILocalVariable(name: "key", arg: 3, scope: !19055, file: !3, line: 116, type: !229)
!19063 = !DILocation(line: 116, column: 81, scope: !19055)
!19064 = !DILocalVariable(name: "e", scope: !19055, file: !3, line: 118, type: !12241)
!19065 = !DILocation(line: 118, column: 27, scope: !19055)
!19066 = !DILocalVariable(name: "____ptr", scope: !19067, file: !3, line: 120, type: !454)
!19067 = distinct !DILexicalBlock(scope: !19068, file: !3, line: 120, column: 2)
!19068 = distinct !DILexicalBlock(scope: !19055, file: !3, line: 120, column: 2)
!19069 = !DILocation(line: 120, column: 2, scope: !19067)
!19070 = !DILocalVariable(name: "__mptr", scope: !19071, file: !3, line: 120, type: !159)
!19071 = distinct !DILexicalBlock(scope: !19067, file: !3, line: 120, column: 2)
!19072 = !DILocation(line: 120, column: 2, scope: !19071)
!19073 = !DILocation(line: 120, column: 2, scope: !19074)
!19074 = distinct !DILexicalBlock(scope: !19071, file: !3, line: 120, column: 2)
!19075 = !DILocation(line: 120, column: 2, scope: !19068)
!19076 = !DILocation(line: 120, column: 2, scope: !19077)
!19077 = distinct !DILexicalBlock(scope: !19068, file: !3, line: 120, column: 2)
!19078 = !DILocation(line: 121, column: 16, scope: !19079)
!19079 = distinct !DILexicalBlock(scope: !19077, file: !3, line: 121, column: 7)
!19080 = !DILocation(line: 121, column: 19, scope: !19079)
!19081 = !DILocation(line: 121, column: 15, scope: !19079)
!19082 = !DILocation(line: 121, column: 24, scope: !19079)
!19083 = !DILocation(line: 121, column: 8, scope: !19079)
!19084 = !DILocation(line: 121, column: 7, scope: !19077)
!19085 = !DILocation(line: 122, column: 11, scope: !19079)
!19086 = !DILocation(line: 122, column: 4, scope: !19079)
!19087 = !DILocation(line: 121, column: 43, scope: !19079)
!19088 = !DILocalVariable(name: "____ptr", scope: !19089, file: !3, line: 120, type: !454)
!19089 = distinct !DILexicalBlock(scope: !19077, file: !3, line: 120, column: 2)
!19090 = !DILocation(line: 120, column: 2, scope: !19089)
!19091 = !DILocalVariable(name: "__mptr", scope: !19092, file: !3, line: 120, type: !159)
!19092 = distinct !DILexicalBlock(scope: !19089, file: !3, line: 120, column: 2)
!19093 = !DILocation(line: 120, column: 2, scope: !19092)
!19094 = !DILocation(line: 120, column: 2, scope: !19095)
!19095 = distinct !DILexicalBlock(scope: !19092, file: !3, line: 120, column: 2)
!19096 = distinct !{!19096, !19075, !19097}
!19097 = !DILocation(line: 122, column: 11, scope: !19068)
!19098 = !DILocation(line: 124, column: 2, scope: !19055)
!19099 = !DILocation(line: 125, column: 1, scope: !19055)
!19100 = distinct !DISubprogram(name: "esw_vport_tbl_create", scope: !3, file: !3, line: 86, type: !19101, scopeLine: 87, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!19101 = !DISubroutineType(types: !19102)
!19102 = !{!10734, !7, !10774}
!19103 = !DILocalVariable(name: "esw", arg: 1, scope: !19100, file: !3, line: 86, type: !7)
!19104 = !DILocation(line: 86, column: 43, scope: !19100)
!19105 = !DILocalVariable(name: "ns", arg: 2, scope: !19100, file: !3, line: 86, type: !10774)
!19106 = !DILocation(line: 86, column: 76, scope: !19100)
!19107 = !DILocalVariable(name: "ft_attr", scope: !19100, file: !3, line: 88, type: !18289)
!19108 = !DILocation(line: 88, column: 30, scope: !19100)
!19109 = !DILocalVariable(name: "fdb", scope: !19100, file: !3, line: 89, type: !10734)
!19110 = !DILocation(line: 89, column: 26, scope: !19100)
!19111 = !DILocation(line: 91, column: 10, scope: !19100)
!19112 = !DILocation(line: 91, column: 20, scope: !19100)
!19113 = !DILocation(line: 91, column: 35, scope: !19100)
!19114 = !DILocation(line: 92, column: 10, scope: !19100)
!19115 = !DILocation(line: 92, column: 18, scope: !19100)
!19116 = !DILocation(line: 93, column: 10, scope: !19100)
!19117 = !DILocation(line: 93, column: 15, scope: !19100)
!19118 = !DILocation(line: 94, column: 44, scope: !19100)
!19119 = !DILocation(line: 94, column: 8, scope: !19100)
!19120 = !DILocation(line: 94, column: 6, scope: !19100)
!19121 = !DILocation(line: 95, column: 13, scope: !19122)
!19122 = distinct !DILexicalBlock(scope: !19100, file: !3, line: 95, column: 6)
!19123 = !DILocation(line: 95, column: 6, scope: !19122)
!19124 = !DILocation(line: 95, column: 6, scope: !19100)
!19125 = !DILocation(line: 96, column: 3, scope: !19126)
!19126 = distinct !DILexicalBlock(scope: !19122, file: !3, line: 95, column: 19)
!19127 = !DILocation(line: 98, column: 2, scope: !19126)
!19128 = !DILocation(line: 100, column: 9, scope: !19100)
!19129 = !DILocation(line: 100, column: 2, scope: !19100)
!19130 = distinct !DISubprogram(name: "hlist_add_head", scope: !16956, file: !16956, line: 879, type: !19131, scopeLine: 880, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!19131 = !DISubroutineType(types: !19132)
!19132 = !{null, !454, !6697}
!19133 = !DILocalVariable(name: "n", arg: 1, scope: !19130, file: !16956, line: 879, type: !454)
!19134 = !DILocation(line: 879, column: 54, scope: !19130)
!19135 = !DILocalVariable(name: "h", arg: 2, scope: !19130, file: !16956, line: 879, type: !6697)
!19136 = !DILocation(line: 879, column: 76, scope: !19130)
!19137 = !DILocalVariable(name: "first", scope: !19130, file: !16956, line: 881, type: !454)
!19138 = !DILocation(line: 881, column: 21, scope: !19130)
!19139 = !DILocation(line: 881, column: 29, scope: !19130)
!19140 = !DILocation(line: 881, column: 32, scope: !19130)
!19141 = !DILocation(line: 882, column: 2, scope: !19130)
!19142 = !DILocation(line: 882, column: 2, scope: !19143)
!19143 = distinct !DILexicalBlock(scope: !19130, file: !16956, line: 882, column: 2)
!19144 = !DILocation(line: 882, column: 2, scope: !19145)
!19145 = distinct !DILexicalBlock(scope: !19143, file: !16956, line: 882, column: 2)
!19146 = !DILocation(line: 882, column: 2, scope: !19147)
!19147 = distinct !DILexicalBlock(scope: !19143, file: !16956, line: 882, column: 2)
!19148 = !DILocation(line: 883, column: 6, scope: !19149)
!19149 = distinct !DILexicalBlock(scope: !19130, file: !16956, line: 883, column: 6)
!19150 = !DILocation(line: 883, column: 6, scope: !19130)
!19151 = !DILocation(line: 884, column: 3, scope: !19149)
!19152 = !DILocation(line: 884, column: 3, scope: !19153)
!19153 = distinct !DILexicalBlock(scope: !19149, file: !16956, line: 884, column: 3)
!19154 = !DILocation(line: 884, column: 3, scope: !19155)
!19155 = distinct !DILexicalBlock(scope: !19153, file: !16956, line: 884, column: 3)
!19156 = !DILocation(line: 884, column: 3, scope: !19157)
!19157 = distinct !DILexicalBlock(scope: !19153, file: !16956, line: 884, column: 3)
!19158 = !DILocation(line: 885, column: 2, scope: !19130)
!19159 = !DILocation(line: 885, column: 2, scope: !19160)
!19160 = distinct !DILexicalBlock(scope: !19130, file: !16956, line: 885, column: 2)
!19161 = !DILocation(line: 885, column: 2, scope: !19162)
!19162 = distinct !DILexicalBlock(scope: !19160, file: !16956, line: 885, column: 2)
!19163 = !DILocation(line: 885, column: 2, scope: !19164)
!19164 = distinct !DILexicalBlock(scope: !19160, file: !16956, line: 885, column: 2)
!19165 = !DILocation(line: 886, column: 2, scope: !19130)
!19166 = !DILocation(line: 886, column: 2, scope: !19167)
!19167 = distinct !DILexicalBlock(scope: !19130, file: !16956, line: 886, column: 2)
!19168 = !DILocation(line: 886, column: 2, scope: !19169)
!19169 = distinct !DILexicalBlock(scope: !19167, file: !16956, line: 886, column: 2)
!19170 = !DILocation(line: 886, column: 2, scope: !19171)
!19171 = distinct !DILexicalBlock(scope: !19167, file: !16956, line: 886, column: 2)
!19172 = !DILocation(line: 887, column: 1, scope: !19130)
!19173 = distinct !DISubprogram(name: "hash_32_generic", scope: !19174, file: !19174, line: 68, type: !19175, scopeLine: 69, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!19174 = !DIFile(filename: "./include/linux/hash.h", directory: "/home/lizy2001/genbc/linux")
!19175 = !DISubroutineType(types: !19176)
!19176 = !{!229, !229, !199}
!19177 = !DILocalVariable(name: "val", arg: 1, scope: !19173, file: !19174, line: 68, type: !229)
!19178 = !DILocation(line: 68, column: 39, scope: !19173)
!19179 = !DILocalVariable(name: "bits", arg: 2, scope: !19173, file: !19174, line: 68, type: !199)
!19180 = !DILocation(line: 68, column: 57, scope: !19173)
!19181 = !DILocation(line: 71, column: 19, scope: !19173)
!19182 = !DILocation(line: 71, column: 9, scope: !19173)
!19183 = !DILocation(line: 71, column: 33, scope: !19173)
!19184 = !DILocation(line: 71, column: 31, scope: !19173)
!19185 = !DILocation(line: 71, column: 24, scope: !19173)
!19186 = !DILocation(line: 71, column: 2, scope: !19173)
!19187 = distinct !DISubprogram(name: "jhash", scope: !19188, file: !19188, line: 70, type: !6923, scopeLine: 71, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!19188 = !DIFile(filename: "./include/linux/jhash.h", directory: "/home/lizy2001/genbc/linux")
!19189 = !DILocalVariable(name: "key", arg: 1, scope: !19187, file: !19188, line: 70, type: !2454)
!19190 = !DILocation(line: 70, column: 37, scope: !19187)
!19191 = !DILocalVariable(name: "length", arg: 2, scope: !19187, file: !19188, line: 70, type: !229)
!19192 = !DILocation(line: 70, column: 46, scope: !19187)
!19193 = !DILocalVariable(name: "initval", arg: 3, scope: !19187, file: !19188, line: 70, type: !229)
!19194 = !DILocation(line: 70, column: 58, scope: !19187)
!19195 = !DILocalVariable(name: "a", scope: !19187, file: !19188, line: 72, type: !229)
!19196 = !DILocation(line: 72, column: 6, scope: !19187)
!19197 = !DILocalVariable(name: "b", scope: !19187, file: !19188, line: 72, type: !229)
!19198 = !DILocation(line: 72, column: 9, scope: !19187)
!19199 = !DILocalVariable(name: "c", scope: !19187, file: !19188, line: 72, type: !229)
!19200 = !DILocation(line: 72, column: 12, scope: !19187)
!19201 = !DILocalVariable(name: "k", scope: !19187, file: !19188, line: 73, type: !4155)
!19202 = !DILocation(line: 73, column: 12, scope: !19187)
!19203 = !DILocation(line: 73, column: 16, scope: !19187)
!19204 = !DILocation(line: 76, column: 30, scope: !19187)
!19205 = !DILocation(line: 76, column: 28, scope: !19187)
!19206 = !DILocation(line: 76, column: 39, scope: !19187)
!19207 = !DILocation(line: 76, column: 37, scope: !19187)
!19208 = !DILocation(line: 76, column: 12, scope: !19187)
!19209 = !DILocation(line: 76, column: 8, scope: !19187)
!19210 = !DILocation(line: 76, column: 4, scope: !19187)
!19211 = !DILocation(line: 79, column: 2, scope: !19187)
!19212 = !DILocation(line: 79, column: 9, scope: !19187)
!19213 = !DILocation(line: 79, column: 16, scope: !19187)
!19214 = !DILocation(line: 80, column: 30, scope: !19215)
!19215 = distinct !DILexicalBlock(scope: !19187, file: !19188, line: 79, column: 22)
!19216 = !DILocation(line: 80, column: 8, scope: !19215)
!19217 = !DILocation(line: 80, column: 5, scope: !19215)
!19218 = !DILocation(line: 81, column: 30, scope: !19215)
!19219 = !DILocation(line: 81, column: 32, scope: !19215)
!19220 = !DILocation(line: 81, column: 8, scope: !19215)
!19221 = !DILocation(line: 81, column: 5, scope: !19215)
!19222 = !DILocation(line: 82, column: 30, scope: !19215)
!19223 = !DILocation(line: 82, column: 32, scope: !19215)
!19224 = !DILocation(line: 82, column: 8, scope: !19215)
!19225 = !DILocation(line: 82, column: 5, scope: !19215)
!19226 = !DILocation(line: 83, column: 3, scope: !19227)
!19227 = distinct !DILexicalBlock(scope: !19215, file: !19188, line: 83, column: 3)
!19228 = !DILocation(line: 84, column: 10, scope: !19215)
!19229 = !DILocation(line: 85, column: 5, scope: !19215)
!19230 = distinct !{!19230, !19211, !19231}
!19231 = !DILocation(line: 86, column: 2, scope: !19187)
!19232 = !DILocation(line: 88, column: 10, scope: !19187)
!19233 = !DILocation(line: 88, column: 2, scope: !19187)
!19234 = !DILocation(line: 89, column: 21, scope: !19235)
!19235 = distinct !DILexicalBlock(scope: !19187, file: !19188, line: 88, column: 18)
!19236 = !DILocation(line: 89, column: 16, scope: !19235)
!19237 = !DILocation(line: 89, column: 26, scope: !19235)
!19238 = !DILocation(line: 89, column: 13, scope: !19235)
!19239 = !DILocation(line: 89, column: 11, scope: !19235)
!19240 = !DILocation(line: 90, column: 21, scope: !19235)
!19241 = !DILocation(line: 90, column: 16, scope: !19235)
!19242 = !DILocation(line: 90, column: 26, scope: !19235)
!19243 = !DILocation(line: 90, column: 13, scope: !19235)
!19244 = !DILocation(line: 90, column: 11, scope: !19235)
!19245 = !DILocation(line: 91, column: 21, scope: !19235)
!19246 = !DILocation(line: 91, column: 16, scope: !19235)
!19247 = !DILocation(line: 91, column: 25, scope: !19235)
!19248 = !DILocation(line: 91, column: 13, scope: !19235)
!19249 = !DILocation(line: 91, column: 11, scope: !19235)
!19250 = !DILocation(line: 92, column: 16, scope: !19235)
!19251 = !DILocation(line: 92, column: 13, scope: !19235)
!19252 = !DILocation(line: 92, column: 11, scope: !19235)
!19253 = !DILocation(line: 93, column: 21, scope: !19235)
!19254 = !DILocation(line: 93, column: 16, scope: !19235)
!19255 = !DILocation(line: 93, column: 25, scope: !19235)
!19256 = !DILocation(line: 93, column: 13, scope: !19235)
!19257 = !DILocation(line: 93, column: 11, scope: !19235)
!19258 = !DILocation(line: 94, column: 21, scope: !19235)
!19259 = !DILocation(line: 94, column: 16, scope: !19235)
!19260 = !DILocation(line: 94, column: 25, scope: !19235)
!19261 = !DILocation(line: 94, column: 13, scope: !19235)
!19262 = !DILocation(line: 94, column: 11, scope: !19235)
!19263 = !DILocation(line: 95, column: 21, scope: !19235)
!19264 = !DILocation(line: 95, column: 16, scope: !19235)
!19265 = !DILocation(line: 95, column: 25, scope: !19235)
!19266 = !DILocation(line: 95, column: 13, scope: !19235)
!19267 = !DILocation(line: 95, column: 11, scope: !19235)
!19268 = !DILocation(line: 96, column: 16, scope: !19235)
!19269 = !DILocation(line: 96, column: 13, scope: !19235)
!19270 = !DILocation(line: 96, column: 11, scope: !19235)
!19271 = !DILocation(line: 97, column: 21, scope: !19235)
!19272 = !DILocation(line: 97, column: 16, scope: !19235)
!19273 = !DILocation(line: 97, column: 25, scope: !19235)
!19274 = !DILocation(line: 97, column: 13, scope: !19235)
!19275 = !DILocation(line: 97, column: 11, scope: !19235)
!19276 = !DILocation(line: 98, column: 21, scope: !19235)
!19277 = !DILocation(line: 98, column: 16, scope: !19235)
!19278 = !DILocation(line: 98, column: 25, scope: !19235)
!19279 = !DILocation(line: 98, column: 13, scope: !19235)
!19280 = !DILocation(line: 98, column: 11, scope: !19235)
!19281 = !DILocation(line: 99, column: 21, scope: !19235)
!19282 = !DILocation(line: 99, column: 16, scope: !19235)
!19283 = !DILocation(line: 99, column: 25, scope: !19235)
!19284 = !DILocation(line: 99, column: 13, scope: !19235)
!19285 = !DILocation(line: 99, column: 11, scope: !19235)
!19286 = !DILocation(line: 100, column: 16, scope: !19235)
!19287 = !DILocation(line: 100, column: 13, scope: !19235)
!19288 = !DILocation(line: 101, column: 4, scope: !19289)
!19289 = distinct !DILexicalBlock(scope: !19235, file: !19188, line: 101, column: 4)
!19290 = !DILocation(line: 102, column: 4, scope: !19235)
!19291 = !DILocation(line: 104, column: 3, scope: !19235)
!19292 = !DILocation(line: 107, column: 9, scope: !19187)
!19293 = !DILocation(line: 107, column: 2, scope: !19187)
!19294 = distinct !DISubprogram(name: "__get_unaligned_cpu32", scope: !12238, file: !12238, line: 16, type: !19295, scopeLine: 17, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!19295 = !DISubroutineType(types: !19296)
!19296 = !{!229, !2454}
!19297 = !DILocalVariable(name: "p", arg: 1, scope: !19294, file: !12238, line: 16, type: !2454)
!19298 = !DILocation(line: 16, column: 53, scope: !19294)
!19299 = !DILocalVariable(name: "ptr", scope: !19294, file: !12238, line: 18, type: !12235)
!19300 = !DILocation(line: 18, column: 26, scope: !19294)
!19301 = !DILocation(line: 18, column: 58, scope: !19294)
!19302 = !DILocation(line: 18, column: 32, scope: !19294)
!19303 = !DILocation(line: 19, column: 9, scope: !19294)
!19304 = !DILocation(line: 19, column: 14, scope: !19294)
!19305 = !DILocation(line: 19, column: 2, scope: !19294)
!19306 = distinct !DISubprogram(name: "rol32", scope: !19307, file: !19307, line: 103, type: !19308, scopeLine: 104, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!19307 = !DIFile(filename: "./include/linux/bitops.h", directory: "/home/lizy2001/genbc/linux")
!19308 = !DISubroutineType(types: !19309)
!19309 = !{!231, !231, !199}
!19310 = !DILocalVariable(name: "word", arg: 1, scope: !19306, file: !19307, line: 103, type: !231)
!19311 = !DILocation(line: 103, column: 33, scope: !19306)
!19312 = !DILocalVariable(name: "shift", arg: 2, scope: !19306, file: !19307, line: 103, type: !199)
!19313 = !DILocation(line: 103, column: 52, scope: !19306)
!19314 = !DILocation(line: 105, column: 10, scope: !19306)
!19315 = !DILocation(line: 105, column: 19, scope: !19306)
!19316 = !DILocation(line: 105, column: 25, scope: !19306)
!19317 = !DILocation(line: 105, column: 15, scope: !19306)
!19318 = !DILocation(line: 105, column: 35, scope: !19306)
!19319 = !DILocation(line: 105, column: 46, scope: !19306)
!19320 = !DILocation(line: 105, column: 45, scope: !19306)
!19321 = !DILocation(line: 105, column: 53, scope: !19306)
!19322 = !DILocation(line: 105, column: 40, scope: !19306)
!19323 = !DILocation(line: 105, column: 32, scope: !19306)
!19324 = !DILocation(line: 105, column: 2, scope: !19306)
!19325 = distinct !DISubprogram(name: "__hash_32_generic", scope: !19174, file: !19174, line: 60, type: !19326, scopeLine: 61, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!19326 = !DISubroutineType(types: !19327)
!19327 = !{!229, !229}
!19328 = !DILocalVariable(name: "val", arg: 1, scope: !19325, file: !19174, line: 60, type: !229)
!19329 = !DILocation(line: 60, column: 41, scope: !19325)
!19330 = !DILocation(line: 62, column: 9, scope: !19325)
!19331 = !DILocation(line: 62, column: 13, scope: !19325)
!19332 = !DILocation(line: 62, column: 2, scope: !19325)
!19333 = distinct !DISubprogram(name: "hash_del", scope: !19334, file: !19334, line: 105, type: !19335, scopeLine: 106, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!19334 = !DIFile(filename: "./include/linux/hashtable.h", directory: "/home/lizy2001/genbc/linux")
!19335 = !DISubroutineType(types: !19336)
!19336 = !{null, !454}
!19337 = !DILocalVariable(name: "node", arg: 1, scope: !19333, file: !19334, line: 105, type: !454)
!19338 = !DILocation(line: 105, column: 48, scope: !19333)
!19339 = !DILocation(line: 107, column: 17, scope: !19333)
!19340 = !DILocation(line: 107, column: 2, scope: !19333)
!19341 = !DILocation(line: 108, column: 1, scope: !19333)
!19342 = distinct !DISubprogram(name: "hlist_del_init", scope: !16956, file: !16956, line: 863, type: !19335, scopeLine: 864, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!19343 = !DILocalVariable(name: "n", arg: 1, scope: !19342, file: !16956, line: 863, type: !454)
!19344 = !DILocation(line: 863, column: 54, scope: !19342)
!19345 = !DILocation(line: 865, column: 22, scope: !19346)
!19346 = distinct !DILexicalBlock(scope: !19342, file: !16956, line: 865, column: 6)
!19347 = !DILocation(line: 865, column: 7, scope: !19346)
!19348 = !DILocation(line: 865, column: 6, scope: !19342)
!19349 = !DILocation(line: 866, column: 15, scope: !19350)
!19350 = distinct !DILexicalBlock(scope: !19346, file: !16956, line: 865, column: 26)
!19351 = !DILocation(line: 866, column: 3, scope: !19350)
!19352 = !DILocation(line: 867, column: 19, scope: !19350)
!19353 = !DILocation(line: 867, column: 3, scope: !19350)
!19354 = !DILocation(line: 868, column: 2, scope: !19350)
!19355 = !DILocation(line: 869, column: 1, scope: !19342)
!19356 = distinct !DISubprogram(name: "hlist_unhashed", scope: !16956, file: !16956, line: 806, type: !19357, scopeLine: 807, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!19357 = !DISubroutineType(types: !19358)
!19358 = !{!6, !19359}
!19359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19360, size: 64)
!19360 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !455)
!19361 = !DILocalVariable(name: "h", arg: 1, scope: !19356, file: !16956, line: 806, type: !19359)
!19362 = !DILocation(line: 806, column: 59, scope: !19356)
!19363 = !DILocation(line: 808, column: 10, scope: !19356)
!19364 = !DILocation(line: 808, column: 13, scope: !19356)
!19365 = !DILocation(line: 808, column: 9, scope: !19356)
!19366 = !DILocation(line: 808, column: 2, scope: !19356)
!19367 = distinct !DISubprogram(name: "__hlist_del", scope: !16956, file: !16956, line: 833, type: !19335, scopeLine: 834, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!19368 = !DILocalVariable(name: "n", arg: 1, scope: !19367, file: !16956, line: 833, type: !454)
!19369 = !DILocation(line: 833, column: 51, scope: !19367)
!19370 = !DILocalVariable(name: "next", scope: !19367, file: !16956, line: 835, type: !454)
!19371 = !DILocation(line: 835, column: 21, scope: !19367)
!19372 = !DILocation(line: 835, column: 28, scope: !19367)
!19373 = !DILocation(line: 835, column: 31, scope: !19367)
!19374 = !DILocalVariable(name: "pprev", scope: !19367, file: !16956, line: 836, type: !459)
!19375 = !DILocation(line: 836, column: 22, scope: !19367)
!19376 = !DILocation(line: 836, column: 30, scope: !19367)
!19377 = !DILocation(line: 836, column: 33, scope: !19367)
!19378 = !DILocation(line: 838, column: 2, scope: !19367)
!19379 = !DILocation(line: 838, column: 2, scope: !19380)
!19380 = distinct !DILexicalBlock(scope: !19367, file: !16956, line: 838, column: 2)
!19381 = !DILocation(line: 838, column: 2, scope: !19382)
!19382 = distinct !DILexicalBlock(scope: !19380, file: !16956, line: 838, column: 2)
!19383 = !DILocation(line: 838, column: 2, scope: !19384)
!19384 = distinct !DILexicalBlock(scope: !19380, file: !16956, line: 838, column: 2)
!19385 = !DILocation(line: 839, column: 6, scope: !19386)
!19386 = distinct !DILexicalBlock(scope: !19367, file: !16956, line: 839, column: 6)
!19387 = !DILocation(line: 839, column: 6, scope: !19367)
!19388 = !DILocation(line: 840, column: 3, scope: !19386)
!19389 = !DILocation(line: 840, column: 3, scope: !19390)
!19390 = distinct !DILexicalBlock(scope: !19386, file: !16956, line: 840, column: 3)
!19391 = !DILocation(line: 840, column: 3, scope: !19392)
!19392 = distinct !DILexicalBlock(scope: !19390, file: !16956, line: 840, column: 3)
!19393 = !DILocation(line: 840, column: 3, scope: !19394)
!19394 = distinct !DILexicalBlock(scope: !19390, file: !16956, line: 840, column: 3)
!19395 = !DILocation(line: 841, column: 1, scope: !19367)
!19396 = distinct !DISubprogram(name: "INIT_HLIST_NODE", scope: !16956, file: !16956, line: 792, type: !19335, scopeLine: 793, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!19397 = !DILocalVariable(name: "h", arg: 1, scope: !19396, file: !16956, line: 792, type: !454)
!19398 = !DILocation(line: 792, column: 55, scope: !19396)
!19399 = !DILocation(line: 794, column: 2, scope: !19396)
!19400 = !DILocation(line: 794, column: 5, scope: !19396)
!19401 = !DILocation(line: 794, column: 10, scope: !19396)
!19402 = !DILocation(line: 795, column: 2, scope: !19396)
!19403 = !DILocation(line: 795, column: 5, scope: !19396)
!19404 = !DILocation(line: 795, column: 11, scope: !19396)
!19405 = !DILocation(line: 796, column: 1, scope: !19396)
!19406 = distinct !DISubprogram(name: "__arch_swab32", scope: !19407, file: !19407, line: 8, type: !14808, scopeLine: 9, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!19407 = !DIFile(filename: "./arch/x86/include/uapi/asm/swab.h", directory: "/home/lizy2001/genbc/linux")
!19408 = !DILocalVariable(name: "val", arg: 1, scope: !19406, file: !19407, line: 8, type: !231)
!19409 = !DILocation(line: 8, column: 61, scope: !19406)
!19410 = !DILocation(line: 10, column: 38, scope: !19406)
!19411 = !DILocation(line: 10, column: 2, scope: !19406)
!19412 = !{i32 586944}
!19413 = !DILocation(line: 11, column: 9, scope: !19406)
!19414 = !DILocation(line: 11, column: 2, scope: !19406)
!19415 = distinct !DISubprogram(name: "kasan_check_write", scope: !19416, file: !19416, line: 38, type: !19417, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!19416 = !DIFile(filename: "./include/linux/kasan-checks.h", directory: "/home/lizy2001/genbc/linux")
!19417 = !DISubroutineType(types: !19418)
!19418 = !{!304, !12694, !199}
!19419 = !DILocalVariable(name: "p", arg: 1, scope: !19415, file: !19416, line: 38, type: !12694)
!19420 = !DILocation(line: 38, column: 59, scope: !19415)
!19421 = !DILocalVariable(name: "size", arg: 2, scope: !19415, file: !19416, line: 38, type: !199)
!19422 = !DILocation(line: 38, column: 75, scope: !19415)
!19423 = !DILocation(line: 40, column: 2, scope: !19415)
!19424 = distinct !DISubprogram(name: "kcsan_check_access", scope: !19425, file: !19425, line: 178, type: !19426, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!19425 = !DIFile(filename: "./include/linux/kcsan-checks.h", directory: "/home/lizy2001/genbc/linux")
!19426 = !DISubroutineType(types: !19427)
!19427 = !{null, !12694, !132, !6}
!19428 = !DILocalVariable(name: "ptr", arg: 1, scope: !19424, file: !19425, line: 178, type: !12694)
!19429 = !DILocation(line: 178, column: 60, scope: !19424)
!19430 = !DILocalVariable(name: "size", arg: 2, scope: !19424, file: !19425, line: 178, type: !132)
!19431 = !DILocation(line: 178, column: 72, scope: !19424)
!19432 = !DILocalVariable(name: "type", arg: 3, scope: !19424, file: !19425, line: 179, type: !6)
!19433 = !DILocation(line: 179, column: 15, scope: !19424)
!19434 = !DILocation(line: 179, column: 23, scope: !19424)
!19435 = distinct !DISubprogram(name: "kvmalloc", scope: !1063, file: !1063, line: 763, type: !15888, scopeLine: 764, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!19436 = !DILocalVariable(name: "size", arg: 1, scope: !19435, file: !1063, line: 763, type: !132)
!19437 = !DILocation(line: 763, column: 37, scope: !19435)
!19438 = !DILocalVariable(name: "flags", arg: 2, scope: !19435, file: !1063, line: 763, type: !628)
!19439 = !DILocation(line: 763, column: 49, scope: !19435)
!19440 = !DILocation(line: 765, column: 23, scope: !19435)
!19441 = !DILocation(line: 765, column: 29, scope: !19435)
!19442 = !DILocation(line: 765, column: 9, scope: !19435)
!19443 = !DILocation(line: 765, column: 2, scope: !19435)
!19444 = distinct !DISubprogram(name: "get_order", scope: !19445, file: !19445, line: 29, type: !19446, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!19445 = !DIFile(filename: "./include/asm-generic/getorder.h", directory: "/home/lizy2001/genbc/linux")
!19446 = !DISubroutineType(types: !19447)
!19447 = !{!6, !135}
!19448 = !DILocalVariable(name: "x", arg: 1, scope: !19449, file: !19450, line: 366, type: !236)
!19449 = distinct !DISubprogram(name: "fls64", scope: !19450, file: !19450, line: 366, type: !19451, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!19450 = !DIFile(filename: "./arch/x86/include/asm/bitops.h", directory: "/home/lizy2001/genbc/linux")
!19451 = !DISubroutineType(types: !19452)
!19452 = !{!6, !236}
!19453 = !DILocation(line: 366, column: 40, scope: !19449, inlinedAt: !19454)
!19454 = distinct !DILocation(line: 46, column: 9, scope: !19444)
!19455 = !DILocalVariable(name: "bitpos", scope: !19449, file: !19450, line: 368, type: !6)
!19456 = !DILocation(line: 368, column: 6, scope: !19449, inlinedAt: !19454)
!19457 = !DILocalVariable(name: "size", arg: 1, scope: !19444, file: !19445, line: 29, type: !135)
!19458 = !DILocation(line: 29, column: 63, scope: !19444)
!19459 = !DILocation(line: 31, column: 27, scope: !19460)
!19460 = distinct !DILexicalBlock(scope: !19444, file: !19445, line: 31, column: 6)
!19461 = !DILocation(line: 31, column: 6, scope: !19460)
!19462 = !DILocation(line: 31, column: 6, scope: !19444)
!19463 = !DILocation(line: 32, column: 8, scope: !19464)
!19464 = distinct !DILexicalBlock(scope: !19465, file: !19445, line: 32, column: 7)
!19465 = distinct !DILexicalBlock(scope: !19460, file: !19445, line: 31, column: 34)
!19466 = !DILocation(line: 32, column: 7, scope: !19465)
!19467 = !DILocation(line: 33, column: 4, scope: !19464)
!19468 = !DILocation(line: 35, column: 7, scope: !19469)
!19469 = distinct !DILexicalBlock(scope: !19465, file: !19445, line: 35, column: 7)
!19470 = !DILocation(line: 35, column: 12, scope: !19469)
!19471 = !DILocation(line: 35, column: 7, scope: !19465)
!19472 = !DILocation(line: 36, column: 4, scope: !19469)
!19473 = !DILocation(line: 38, column: 10, scope: !19465)
!19474 = !DILocation(line: 38, column: 28, scope: !19465)
!19475 = !DILocation(line: 38, column: 41, scope: !19465)
!19476 = !DILocation(line: 38, column: 3, scope: !19465)
!19477 = !DILocation(line: 41, column: 6, scope: !19444)
!19478 = !DILocation(line: 42, column: 7, scope: !19444)
!19479 = !DILocation(line: 46, column: 15, scope: !19444)
!19480 = !DILocation(line: 374, column: 2, scope: !19449, inlinedAt: !19454)
!19481 = !DILocation(line: 376, column: 14, scope: !19449, inlinedAt: !19454)
!19482 = !{i32 466720}
!19483 = !DILocation(line: 377, column: 9, scope: !19449, inlinedAt: !19454)
!19484 = !DILocation(line: 377, column: 16, scope: !19449, inlinedAt: !19454)
!19485 = !DILocation(line: 46, column: 2, scope: !19444)
!19486 = !DILocation(line: 48, column: 1, scope: !19444)
!19487 = distinct !DISubprogram(name: "__ilog2_u64", scope: !19488, file: !19488, line: 30, type: !19489, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!19488 = !DIFile(filename: "./include/linux/log2.h", directory: "/home/lizy2001/genbc/linux")
!19489 = !DISubroutineType(types: !19490)
!19490 = !{!6, !235}
!19491 = !DILocation(line: 366, column: 40, scope: !19449, inlinedAt: !19492)
!19492 = distinct !DILocation(line: 32, column: 9, scope: !19487)
!19493 = !DILocation(line: 368, column: 6, scope: !19449, inlinedAt: !19492)
!19494 = !DILocalVariable(name: "n", arg: 1, scope: !19487, file: !19488, line: 30, type: !235)
!19495 = !DILocation(line: 30, column: 21, scope: !19487)
!19496 = !DILocation(line: 32, column: 15, scope: !19487)
!19497 = !DILocation(line: 374, column: 2, scope: !19449, inlinedAt: !19492)
!19498 = !DILocation(line: 376, column: 14, scope: !19449, inlinedAt: !19492)
!19499 = !DILocation(line: 377, column: 9, scope: !19449, inlinedAt: !19492)
!19500 = !DILocation(line: 377, column: 16, scope: !19449, inlinedAt: !19492)
!19501 = !DILocation(line: 32, column: 18, scope: !19487)
!19502 = !DILocation(line: 32, column: 2, scope: !19487)
!19503 = distinct !DISubprogram(name: "kasan_kmalloc", scope: !19504, file: !19504, line: 137, type: !19505, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!19504 = !DIFile(filename: "./include/linux/kasan.h", directory: "/home/lizy2001/genbc/linux")
!19505 = !DISubroutineType(types: !19506)
!19506 = !{!159, !985, !2454, !132, !628}
!19507 = !DILocalVariable(name: "s", arg: 1, scope: !19503, file: !19504, line: 137, type: !985)
!19508 = !DILocation(line: 137, column: 54, scope: !19503)
!19509 = !DILocalVariable(name: "object", arg: 2, scope: !19503, file: !19504, line: 137, type: !2454)
!19510 = !DILocation(line: 137, column: 69, scope: !19503)
!19511 = !DILocalVariable(name: "size", arg: 3, scope: !19503, file: !19504, line: 138, type: !132)
!19512 = !DILocation(line: 138, column: 12, scope: !19503)
!19513 = !DILocalVariable(name: "flags", arg: 4, scope: !19503, file: !19504, line: 138, type: !628)
!19514 = !DILocation(line: 138, column: 24, scope: !19503)
!19515 = !DILocation(line: 140, column: 17, scope: !19503)
!19516 = !DILocation(line: 140, column: 2, scope: !19503)
!19517 = distinct !DISubprogram(name: "kmalloc_array", scope: !11972, file: !11972, line: 584, type: !16535, scopeLine: 585, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!19518 = !DILocation(line: 445, column: 72, scope: !16012, inlinedAt: !19519)
!19519 = distinct !DILocation(line: 552, column: 10, scope: !16017, inlinedAt: !19520)
!19520 = distinct !DILocation(line: 591, column: 10, scope: !19521)
!19521 = distinct !DILexicalBlock(scope: !19517, file: !11972, line: 590, column: 6)
!19522 = !DILocation(line: 446, column: 9, scope: !16012, inlinedAt: !19519)
!19523 = !DILocation(line: 446, column: 23, scope: !16012, inlinedAt: !19519)
!19524 = !DILocation(line: 448, column: 8, scope: !16012, inlinedAt: !19519)
!19525 = !DILocation(line: 318, column: 67, scope: !16028, inlinedAt: !19526)
!19526 = distinct !DILocation(line: 553, column: 20, scope: !16017, inlinedAt: !19520)
!19527 = !DILocation(line: 346, column: 58, scope: !16034, inlinedAt: !19528)
!19528 = distinct !DILocation(line: 547, column: 11, scope: !16017, inlinedAt: !19520)
!19529 = !DILocation(line: 472, column: 28, scope: !16040, inlinedAt: !19530)
!19530 = distinct !DILocation(line: 481, column: 9, scope: !16045, inlinedAt: !19531)
!19531 = distinct !DILocation(line: 545, column: 11, scope: !16047, inlinedAt: !19520)
!19532 = !DILocation(line: 472, column: 40, scope: !16040, inlinedAt: !19530)
!19533 = !DILocation(line: 472, column: 60, scope: !16040, inlinedAt: !19530)
!19534 = !DILocation(line: 478, column: 51, scope: !16045, inlinedAt: !19531)
!19535 = !DILocation(line: 478, column: 63, scope: !16045, inlinedAt: !19531)
!19536 = !DILocation(line: 480, column: 15, scope: !16045, inlinedAt: !19531)
!19537 = !DILocation(line: 538, column: 45, scope: !16019, inlinedAt: !19520)
!19538 = !DILocation(line: 538, column: 57, scope: !16019, inlinedAt: !19520)
!19539 = !DILocation(line: 542, column: 16, scope: !16017, inlinedAt: !19520)
!19540 = !DILocalVariable(name: "n", arg: 1, scope: !19517, file: !11972, line: 584, type: !132)
!19541 = !DILocation(line: 584, column: 42, scope: !19517)
!19542 = !DILocalVariable(name: "size", arg: 2, scope: !19517, file: !11972, line: 584, type: !132)
!19543 = !DILocation(line: 584, column: 52, scope: !19517)
!19544 = !DILocalVariable(name: "flags", arg: 3, scope: !19517, file: !11972, line: 584, type: !628)
!19545 = !DILocation(line: 584, column: 64, scope: !19517)
!19546 = !DILocalVariable(name: "bytes", scope: !19517, file: !11972, line: 586, type: !132)
!19547 = !DILocation(line: 586, column: 9, scope: !19517)
!19548 = !DILocalVariable(name: "__a", scope: !19549, file: !11972, line: 588, type: !132)
!19549 = distinct !DILexicalBlock(scope: !19550, file: !11972, line: 588, column: 6)
!19550 = distinct !DILexicalBlock(scope: !19517, file: !11972, line: 588, column: 6)
!19551 = !DILocation(line: 588, column: 6, scope: !19549)
!19552 = !DILocalVariable(name: "__b", scope: !19549, file: !11972, line: 588, type: !132)
!19553 = !DILocalVariable(name: "__d", scope: !19549, file: !11972, line: 588, type: !1774)
!19554 = !DILocation(line: 588, column: 6, scope: !19550)
!19555 = !DILocation(line: 588, column: 6, scope: !19517)
!19556 = !DILocation(line: 589, column: 3, scope: !19550)
!19557 = !DILocation(line: 590, column: 27, scope: !19521)
!19558 = !DILocation(line: 590, column: 6, scope: !19521)
!19559 = !DILocation(line: 590, column: 30, scope: !19521)
!19560 = !DILocation(line: 590, column: 54, scope: !19521)
!19561 = !DILocation(line: 590, column: 33, scope: !19521)
!19562 = !DILocation(line: 590, column: 6, scope: !19517)
!19563 = !DILocation(line: 591, column: 18, scope: !19521)
!19564 = !DILocation(line: 591, column: 25, scope: !19521)
!19565 = !DILocation(line: 540, column: 27, scope: !16018, inlinedAt: !19520)
!19566 = !DILocation(line: 540, column: 6, scope: !16018, inlinedAt: !19520)
!19567 = !DILocation(line: 540, column: 6, scope: !16019, inlinedAt: !19520)
!19568 = !DILocation(line: 544, column: 7, scope: !16047, inlinedAt: !19520)
!19569 = !DILocation(line: 544, column: 12, scope: !16047, inlinedAt: !19520)
!19570 = !DILocation(line: 544, column: 7, scope: !16017, inlinedAt: !19520)
!19571 = !DILocation(line: 545, column: 25, scope: !16047, inlinedAt: !19520)
!19572 = !DILocation(line: 545, column: 31, scope: !16047, inlinedAt: !19520)
!19573 = !DILocation(line: 480, column: 33, scope: !16045, inlinedAt: !19531)
!19574 = !DILocation(line: 480, column: 23, scope: !16045, inlinedAt: !19531)
!19575 = !DILocation(line: 481, column: 29, scope: !16045, inlinedAt: !19531)
!19576 = !DILocation(line: 481, column: 35, scope: !16045, inlinedAt: !19531)
!19577 = !DILocation(line: 481, column: 42, scope: !16045, inlinedAt: !19531)
!19578 = !DILocation(line: 474, column: 23, scope: !16040, inlinedAt: !19530)
!19579 = !DILocation(line: 474, column: 29, scope: !16040, inlinedAt: !19530)
!19580 = !DILocation(line: 474, column: 36, scope: !16040, inlinedAt: !19530)
!19581 = !DILocation(line: 474, column: 9, scope: !16040, inlinedAt: !19530)
!19582 = !DILocation(line: 545, column: 4, scope: !16047, inlinedAt: !19520)
!19583 = !DILocation(line: 547, column: 25, scope: !16017, inlinedAt: !19520)
!19584 = !DILocation(line: 348, column: 7, scope: !16091, inlinedAt: !19528)
!19585 = !DILocation(line: 348, column: 6, scope: !16034, inlinedAt: !19528)
!19586 = !DILocation(line: 349, column: 3, scope: !16091, inlinedAt: !19528)
!19587 = !DILocation(line: 351, column: 6, scope: !16095, inlinedAt: !19528)
!19588 = !DILocation(line: 351, column: 11, scope: !16095, inlinedAt: !19528)
!19589 = !DILocation(line: 351, column: 6, scope: !16034, inlinedAt: !19528)
!19590 = !DILocation(line: 352, column: 3, scope: !16095, inlinedAt: !19528)
!19591 = !DILocation(line: 354, column: 32, scope: !16100, inlinedAt: !19528)
!19592 = !DILocation(line: 354, column: 37, scope: !16100, inlinedAt: !19528)
!19593 = !DILocation(line: 354, column: 42, scope: !16100, inlinedAt: !19528)
!19594 = !DILocation(line: 354, column: 45, scope: !16100, inlinedAt: !19528)
!19595 = !DILocation(line: 354, column: 50, scope: !16100, inlinedAt: !19528)
!19596 = !DILocation(line: 354, column: 6, scope: !16034, inlinedAt: !19528)
!19597 = !DILocation(line: 355, column: 3, scope: !16100, inlinedAt: !19528)
!19598 = !DILocation(line: 356, column: 32, scope: !16108, inlinedAt: !19528)
!19599 = !DILocation(line: 356, column: 37, scope: !16108, inlinedAt: !19528)
!19600 = !DILocation(line: 356, column: 43, scope: !16108, inlinedAt: !19528)
!19601 = !DILocation(line: 356, column: 46, scope: !16108, inlinedAt: !19528)
!19602 = !DILocation(line: 356, column: 51, scope: !16108, inlinedAt: !19528)
!19603 = !DILocation(line: 356, column: 6, scope: !16034, inlinedAt: !19528)
!19604 = !DILocation(line: 357, column: 3, scope: !16108, inlinedAt: !19528)
!19605 = !DILocation(line: 358, column: 6, scope: !16116, inlinedAt: !19528)
!19606 = !DILocation(line: 358, column: 11, scope: !16116, inlinedAt: !19528)
!19607 = !DILocation(line: 358, column: 6, scope: !16034, inlinedAt: !19528)
!19608 = !DILocation(line: 358, column: 26, scope: !16116, inlinedAt: !19528)
!19609 = !DILocation(line: 359, column: 6, scope: !16121, inlinedAt: !19528)
!19610 = !DILocation(line: 359, column: 11, scope: !16121, inlinedAt: !19528)
!19611 = !DILocation(line: 359, column: 6, scope: !16034, inlinedAt: !19528)
!19612 = !DILocation(line: 359, column: 26, scope: !16121, inlinedAt: !19528)
!19613 = !DILocation(line: 360, column: 6, scope: !16126, inlinedAt: !19528)
!19614 = !DILocation(line: 360, column: 11, scope: !16126, inlinedAt: !19528)
!19615 = !DILocation(line: 360, column: 6, scope: !16034, inlinedAt: !19528)
!19616 = !DILocation(line: 360, column: 26, scope: !16126, inlinedAt: !19528)
!19617 = !DILocation(line: 361, column: 6, scope: !16131, inlinedAt: !19528)
!19618 = !DILocation(line: 361, column: 11, scope: !16131, inlinedAt: !19528)
!19619 = !DILocation(line: 361, column: 6, scope: !16034, inlinedAt: !19528)
!19620 = !DILocation(line: 361, column: 26, scope: !16131, inlinedAt: !19528)
!19621 = !DILocation(line: 362, column: 6, scope: !16136, inlinedAt: !19528)
!19622 = !DILocation(line: 362, column: 11, scope: !16136, inlinedAt: !19528)
!19623 = !DILocation(line: 362, column: 6, scope: !16034, inlinedAt: !19528)
!19624 = !DILocation(line: 362, column: 26, scope: !16136, inlinedAt: !19528)
!19625 = !DILocation(line: 363, column: 6, scope: !16141, inlinedAt: !19528)
!19626 = !DILocation(line: 363, column: 11, scope: !16141, inlinedAt: !19528)
!19627 = !DILocation(line: 363, column: 6, scope: !16034, inlinedAt: !19528)
!19628 = !DILocation(line: 363, column: 26, scope: !16141, inlinedAt: !19528)
!19629 = !DILocation(line: 364, column: 6, scope: !16146, inlinedAt: !19528)
!19630 = !DILocation(line: 364, column: 11, scope: !16146, inlinedAt: !19528)
!19631 = !DILocation(line: 364, column: 6, scope: !16034, inlinedAt: !19528)
!19632 = !DILocation(line: 364, column: 26, scope: !16146, inlinedAt: !19528)
!19633 = !DILocation(line: 365, column: 6, scope: !16151, inlinedAt: !19528)
!19634 = !DILocation(line: 365, column: 11, scope: !16151, inlinedAt: !19528)
!19635 = !DILocation(line: 365, column: 6, scope: !16034, inlinedAt: !19528)
!19636 = !DILocation(line: 365, column: 26, scope: !16151, inlinedAt: !19528)
!19637 = !DILocation(line: 366, column: 6, scope: !16156, inlinedAt: !19528)
!19638 = !DILocation(line: 366, column: 11, scope: !16156, inlinedAt: !19528)
!19639 = !DILocation(line: 366, column: 6, scope: !16034, inlinedAt: !19528)
!19640 = !DILocation(line: 366, column: 26, scope: !16156, inlinedAt: !19528)
!19641 = !DILocation(line: 367, column: 6, scope: !16161, inlinedAt: !19528)
!19642 = !DILocation(line: 367, column: 11, scope: !16161, inlinedAt: !19528)
!19643 = !DILocation(line: 367, column: 6, scope: !16034, inlinedAt: !19528)
!19644 = !DILocation(line: 367, column: 26, scope: !16161, inlinedAt: !19528)
!19645 = !DILocation(line: 368, column: 6, scope: !16166, inlinedAt: !19528)
!19646 = !DILocation(line: 368, column: 11, scope: !16166, inlinedAt: !19528)
!19647 = !DILocation(line: 368, column: 6, scope: !16034, inlinedAt: !19528)
!19648 = !DILocation(line: 368, column: 26, scope: !16166, inlinedAt: !19528)
!19649 = !DILocation(line: 369, column: 6, scope: !16171, inlinedAt: !19528)
!19650 = !DILocation(line: 369, column: 11, scope: !16171, inlinedAt: !19528)
!19651 = !DILocation(line: 369, column: 6, scope: !16034, inlinedAt: !19528)
!19652 = !DILocation(line: 369, column: 26, scope: !16171, inlinedAt: !19528)
!19653 = !DILocation(line: 370, column: 6, scope: !16176, inlinedAt: !19528)
!19654 = !DILocation(line: 370, column: 11, scope: !16176, inlinedAt: !19528)
!19655 = !DILocation(line: 370, column: 6, scope: !16034, inlinedAt: !19528)
!19656 = !DILocation(line: 370, column: 26, scope: !16176, inlinedAt: !19528)
!19657 = !DILocation(line: 371, column: 6, scope: !16181, inlinedAt: !19528)
!19658 = !DILocation(line: 371, column: 11, scope: !16181, inlinedAt: !19528)
!19659 = !DILocation(line: 371, column: 6, scope: !16034, inlinedAt: !19528)
!19660 = !DILocation(line: 371, column: 26, scope: !16181, inlinedAt: !19528)
!19661 = !DILocation(line: 372, column: 6, scope: !16186, inlinedAt: !19528)
!19662 = !DILocation(line: 372, column: 11, scope: !16186, inlinedAt: !19528)
!19663 = !DILocation(line: 372, column: 6, scope: !16034, inlinedAt: !19528)
!19664 = !DILocation(line: 372, column: 26, scope: !16186, inlinedAt: !19528)
!19665 = !DILocation(line: 373, column: 6, scope: !16191, inlinedAt: !19528)
!19666 = !DILocation(line: 373, column: 11, scope: !16191, inlinedAt: !19528)
!19667 = !DILocation(line: 373, column: 6, scope: !16034, inlinedAt: !19528)
!19668 = !DILocation(line: 373, column: 26, scope: !16191, inlinedAt: !19528)
!19669 = !DILocation(line: 374, column: 6, scope: !16196, inlinedAt: !19528)
!19670 = !DILocation(line: 374, column: 11, scope: !16196, inlinedAt: !19528)
!19671 = !DILocation(line: 374, column: 6, scope: !16034, inlinedAt: !19528)
!19672 = !DILocation(line: 374, column: 26, scope: !16196, inlinedAt: !19528)
!19673 = !DILocation(line: 375, column: 6, scope: !16201, inlinedAt: !19528)
!19674 = !DILocation(line: 375, column: 11, scope: !16201, inlinedAt: !19528)
!19675 = !DILocation(line: 375, column: 6, scope: !16034, inlinedAt: !19528)
!19676 = !DILocation(line: 375, column: 27, scope: !16201, inlinedAt: !19528)
!19677 = !DILocation(line: 376, column: 6, scope: !16206, inlinedAt: !19528)
!19678 = !DILocation(line: 376, column: 11, scope: !16206, inlinedAt: !19528)
!19679 = !DILocation(line: 376, column: 6, scope: !16034, inlinedAt: !19528)
!19680 = !DILocation(line: 376, column: 32, scope: !16206, inlinedAt: !19528)
!19681 = !DILocation(line: 377, column: 6, scope: !16211, inlinedAt: !19528)
!19682 = !DILocation(line: 377, column: 11, scope: !16211, inlinedAt: !19528)
!19683 = !DILocation(line: 377, column: 6, scope: !16034, inlinedAt: !19528)
!19684 = !DILocation(line: 377, column: 32, scope: !16211, inlinedAt: !19528)
!19685 = !DILocation(line: 378, column: 6, scope: !16216, inlinedAt: !19528)
!19686 = !DILocation(line: 378, column: 11, scope: !16216, inlinedAt: !19528)
!19687 = !DILocation(line: 378, column: 6, scope: !16034, inlinedAt: !19528)
!19688 = !DILocation(line: 378, column: 32, scope: !16216, inlinedAt: !19528)
!19689 = !DILocation(line: 379, column: 6, scope: !16221, inlinedAt: !19528)
!19690 = !DILocation(line: 379, column: 11, scope: !16221, inlinedAt: !19528)
!19691 = !DILocation(line: 379, column: 6, scope: !16034, inlinedAt: !19528)
!19692 = !DILocation(line: 379, column: 33, scope: !16221, inlinedAt: !19528)
!19693 = !DILocation(line: 380, column: 6, scope: !16226, inlinedAt: !19528)
!19694 = !DILocation(line: 380, column: 11, scope: !16226, inlinedAt: !19528)
!19695 = !DILocation(line: 380, column: 6, scope: !16034, inlinedAt: !19528)
!19696 = !DILocation(line: 380, column: 33, scope: !16226, inlinedAt: !19528)
!19697 = !DILocation(line: 381, column: 6, scope: !16231, inlinedAt: !19528)
!19698 = !DILocation(line: 381, column: 11, scope: !16231, inlinedAt: !19528)
!19699 = !DILocation(line: 381, column: 6, scope: !16034, inlinedAt: !19528)
!19700 = !DILocation(line: 381, column: 33, scope: !16231, inlinedAt: !19528)
!19701 = !DILocation(line: 382, column: 2, scope: !16236, inlinedAt: !19528)
!19702 = !DILocation(line: 382, column: 2, scope: !16240, inlinedAt: !19528)
!19703 = !DILocation(line: 382, column: 2, scope: !16241, inlinedAt: !19528)
!19704 = !DILocation(line: 386, column: 1, scope: !16034, inlinedAt: !19528)
!19705 = !DILocation(line: 547, column: 9, scope: !16017, inlinedAt: !19520)
!19706 = !DILocation(line: 549, column: 8, scope: !16247, inlinedAt: !19520)
!19707 = !DILocation(line: 549, column: 7, scope: !16017, inlinedAt: !19520)
!19708 = !DILocation(line: 550, column: 4, scope: !16247, inlinedAt: !19520)
!19709 = !DILocation(line: 553, column: 33, scope: !16017, inlinedAt: !19520)
!19710 = !DILocation(line: 325, column: 6, scope: !16252, inlinedAt: !19526)
!19711 = !DILocation(line: 325, column: 6, scope: !16028, inlinedAt: !19526)
!19712 = !DILocation(line: 326, column: 3, scope: !16252, inlinedAt: !19526)
!19713 = !DILocation(line: 332, column: 9, scope: !16028, inlinedAt: !19526)
!19714 = !DILocation(line: 332, column: 15, scope: !16028, inlinedAt: !19526)
!19715 = !DILocation(line: 332, column: 2, scope: !16028, inlinedAt: !19526)
!19716 = !DILocation(line: 336, column: 1, scope: !16028, inlinedAt: !19526)
!19717 = !DILocation(line: 553, column: 5, scope: !16017, inlinedAt: !19520)
!19718 = !DILocation(line: 553, column: 41, scope: !16017, inlinedAt: !19520)
!19719 = !DILocation(line: 554, column: 5, scope: !16017, inlinedAt: !19520)
!19720 = !DILocation(line: 554, column: 12, scope: !16017, inlinedAt: !19520)
!19721 = !DILocation(line: 448, column: 31, scope: !16012, inlinedAt: !19519)
!19722 = !DILocation(line: 448, column: 34, scope: !16012, inlinedAt: !19519)
!19723 = !DILocation(line: 448, column: 14, scope: !16012, inlinedAt: !19519)
!19724 = !DILocation(line: 450, column: 22, scope: !16012, inlinedAt: !19519)
!19725 = !DILocation(line: 450, column: 25, scope: !16012, inlinedAt: !19519)
!19726 = !DILocation(line: 450, column: 30, scope: !16012, inlinedAt: !19519)
!19727 = !DILocation(line: 450, column: 36, scope: !16012, inlinedAt: !19519)
!19728 = !DILocation(line: 450, column: 8, scope: !16012, inlinedAt: !19519)
!19729 = !DILocation(line: 450, column: 6, scope: !16012, inlinedAt: !19519)
!19730 = !DILocation(line: 451, column: 9, scope: !16012, inlinedAt: !19519)
!19731 = !DILocation(line: 552, column: 3, scope: !16017, inlinedAt: !19520)
!19732 = !DILocation(line: 557, column: 19, scope: !16019, inlinedAt: !19520)
!19733 = !DILocation(line: 557, column: 25, scope: !16019, inlinedAt: !19520)
!19734 = !DILocation(line: 557, column: 9, scope: !16019, inlinedAt: !19520)
!19735 = !DILocation(line: 557, column: 2, scope: !16019, inlinedAt: !19520)
!19736 = !DILocation(line: 558, column: 1, scope: !16019, inlinedAt: !19520)
!19737 = !DILocation(line: 591, column: 3, scope: !19521)
!19738 = !DILocation(line: 592, column: 19, scope: !19517)
!19739 = !DILocation(line: 592, column: 26, scope: !19517)
!19740 = !DILocation(line: 592, column: 9, scope: !19517)
!19741 = !DILocation(line: 592, column: 2, scope: !19517)
!19742 = !DILocation(line: 593, column: 1, scope: !19517)
!19743 = distinct !DISubprogram(name: "__must_check_overflow", scope: !19744, file: !19744, line: 52, type: !19745, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!19744 = !DIFile(filename: "./include/linux/overflow.h", directory: "/home/lizy2001/genbc/linux")
!19745 = !DISubroutineType(types: !19746)
!19746 = !{!304, !304}
!19747 = !DILocalVariable(name: "overflow", arg: 1, scope: !19743, file: !19744, line: 52, type: !304)
!19748 = !DILocation(line: 52, column: 60, scope: !19743)
!19749 = !DILocation(line: 54, column: 9, scope: !19743)
!19750 = !DILocation(line: 54, column: 2, scope: !19743)
!19751 = distinct !DISubprogram(name: "mlx5_eswitch_ecpf_idx", scope: !9, file: !9, line: 513, type: !4, scopeLine: 514, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!19752 = !DILocalVariable(name: "esw", arg: 1, scope: !19751, file: !9, line: 513, type: !7)
!19753 = !DILocation(line: 513, column: 62, scope: !19751)
!19754 = !DILocation(line: 515, column: 9, scope: !19751)
!19755 = !DILocation(line: 515, column: 14, scope: !19751)
!19756 = !DILocation(line: 515, column: 27, scope: !19751)
!19757 = !DILocation(line: 515, column: 2, scope: !19751)
!19758 = distinct !DISubprogram(name: "mlx5_ecpf_vport_exists", scope: !14, file: !14, line: 1151, type: !19759, scopeLine: 1152, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!19759 = !DISubroutineType(types: !19760)
!19760 = !{!304, !19761}
!19761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !19762, size: 64)
!19762 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13)
!19763 = !DILocalVariable(name: "dev", arg: 1, scope: !19758, file: !14, line: 1151, type: !19761)
!19764 = !DILocation(line: 1151, column: 71, scope: !19758)
!19765 = !DILocation(line: 1153, column: 25, scope: !19758)
!19766 = !DILocation(line: 1153, column: 9, scope: !19758)
!19767 = !DILocation(line: 1153, column: 30, scope: !19758)
!19768 = !DILocation(line: 1153, column: 33, scope: !19758)
!19769 = !DILocation(line: 0, scope: !19758)
!19770 = !DILocation(line: 1153, column: 2, scope: !19758)
!19771 = distinct !DISubprogram(name: "mlx5_eswitch_uplink_idx", scope: !9, file: !9, line: 507, type: !4, scopeLine: 508, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!19772 = !DILocalVariable(name: "esw", arg: 1, scope: !19771, file: !9, line: 507, type: !7)
!19773 = !DILocation(line: 507, column: 64, scope: !19771)
!19774 = !DILocation(line: 510, column: 9, scope: !19771)
!19775 = !DILocation(line: 510, column: 14, scope: !19771)
!19776 = !DILocation(line: 510, column: 27, scope: !19771)
!19777 = !DILocation(line: 510, column: 2, scope: !19771)
!19778 = distinct !DISubprogram(name: "mlx5_core_is_pf", scope: !14, file: !14, line: 1130, type: !19759, scopeLine: 1131, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!19779 = !DILocalVariable(name: "dev", arg: 1, scope: !19778, file: !14, line: 1130, type: !19761)
!19780 = !DILocation(line: 1130, column: 64, scope: !19778)
!19781 = !DILocation(line: 1132, column: 9, scope: !19778)
!19782 = !DILocation(line: 1132, column: 14, scope: !19778)
!19783 = !DILocation(line: 1132, column: 27, scope: !19778)
!19784 = !DILocation(line: 1132, column: 2, scope: !19778)
!19785 = distinct !DISubprogram(name: "__esw_offloads_unload_rep", scope: !3, file: !3, line: 1796, type: !19786, scopeLine: 1798, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!19786 = !DISubroutineType(types: !19787)
!19787 = !{null, !7, !11415, !1403}
!19788 = !DILocation(line: 194, column: 58, scope: !16630, inlinedAt: !19789)
!19789 = distinct !DILocation(line: 655, column: 9, scope: !16635, inlinedAt: !19790)
!19790 = distinct !DILocation(line: 1799, column: 6, scope: !19791)
!19791 = distinct !DILexicalBlock(scope: !19785, file: !3, line: 1799, column: 6)
!19792 = !DILocation(line: 194, column: 65, scope: !16630, inlinedAt: !19789)
!19793 = !DILocation(line: 194, column: 74, scope: !16630, inlinedAt: !19789)
!19794 = !DILocation(line: 196, column: 9, scope: !16645, inlinedAt: !19789)
!19795 = !DILocation(line: 99, column: 79, scope: !12690, inlinedAt: !19796)
!19796 = distinct !DILocation(line: 654, column: 2, scope: !16635, inlinedAt: !19790)
!19797 = !DILocation(line: 99, column: 89, scope: !12690, inlinedAt: !19796)
!19798 = !DILocation(line: 652, column: 26, scope: !16635, inlinedAt: !19790)
!19799 = !DILocation(line: 652, column: 33, scope: !16635, inlinedAt: !19790)
!19800 = !DILocation(line: 652, column: 42, scope: !16635, inlinedAt: !19790)
!19801 = !DILocalVariable(name: "esw", arg: 1, scope: !19785, file: !3, line: 1796, type: !7)
!19802 = !DILocation(line: 1796, column: 60, scope: !19785)
!19803 = !DILocalVariable(name: "rep", arg: 2, scope: !19785, file: !3, line: 1797, type: !11415)
!19804 = !DILocation(line: 1797, column: 36, scope: !19785)
!19805 = !DILocalVariable(name: "rep_type", arg: 3, scope: !19785, file: !3, line: 1797, type: !1403)
!19806 = !DILocation(line: 1797, column: 44, scope: !19785)
!19807 = !DILocation(line: 1799, column: 22, scope: !19791)
!19808 = !DILocation(line: 1799, column: 27, scope: !19791)
!19809 = !DILocation(line: 1799, column: 36, scope: !19791)
!19810 = !DILocation(line: 1799, column: 46, scope: !19791)
!19811 = !DILocation(line: 654, column: 31, scope: !16635, inlinedAt: !19790)
!19812 = !DILocation(line: 101, column: 20, scope: !12690, inlinedAt: !19796)
!19813 = !DILocation(line: 101, column: 23, scope: !12690, inlinedAt: !19796)
!19814 = !DILocation(line: 101, column: 2, scope: !12690, inlinedAt: !19796)
!19815 = !DILocation(line: 102, column: 2, scope: !12690, inlinedAt: !19796)
!19816 = !DILocation(line: 655, column: 29, scope: !16635, inlinedAt: !19790)
!19817 = !DILocation(line: 655, column: 32, scope: !16635, inlinedAt: !19790)
!19818 = !DILocation(line: 655, column: 37, scope: !16635, inlinedAt: !19790)
!19819 = !DILocation(line: 1800, column: 35, scope: !19791)
!19820 = !DILocation(line: 1799, column: 6, scope: !19785)
!19821 = !DILocation(line: 1801, column: 3, scope: !19791)
!19822 = !DILocation(line: 1801, column: 8, scope: !19791)
!19823 = !DILocation(line: 1801, column: 17, scope: !19791)
!19824 = !DILocation(line: 1801, column: 25, scope: !19791)
!19825 = !DILocation(line: 1801, column: 36, scope: !19791)
!19826 = !DILocation(line: 1801, column: 43, scope: !19791)
!19827 = !DILocation(line: 1802, column: 1, scope: !19785)
!19828 = distinct !DISubprogram(name: "esw_vfs_changed_event_handler", scope: !3, file: !3, line: 2227, type: !19829, scopeLine: 2228, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!19829 = !DISubroutineType(types: !19830)
!19830 = !{null, !7, !4647}
!19831 = !DILocalVariable(name: "esw", arg: 1, scope: !19828, file: !3, line: 2227, type: !7)
!19832 = !DILocation(line: 2227, column: 52, scope: !19828)
!19833 = !DILocalVariable(name: "out", arg: 2, scope: !19828, file: !3, line: 2227, type: !4647)
!19834 = !DILocation(line: 2227, column: 68, scope: !19828)
!19835 = !DILocalVariable(name: "host_pf_disabled", scope: !19828, file: !3, line: 2229, type: !304)
!19836 = !DILocation(line: 2229, column: 7, scope: !19828)
!19837 = !DILocalVariable(name: "new_num_vfs", scope: !19828, file: !3, line: 2230, type: !744)
!19838 = !DILocation(line: 2230, column: 6, scope: !19828)
!19839 = !DILocation(line: 2232, column: 16, scope: !19828)
!19840 = !DILocation(line: 2232, column: 14, scope: !19828)
!19841 = !DILocation(line: 2234, column: 21, scope: !19828)
!19842 = !DILocation(line: 2234, column: 19, scope: !19828)
!19843 = !DILocation(line: 2237, column: 6, scope: !19844)
!19844 = distinct !DILexicalBlock(scope: !19828, file: !3, line: 2237, column: 6)
!19845 = !DILocation(line: 2237, column: 21, scope: !19844)
!19846 = !DILocation(line: 2237, column: 26, scope: !19844)
!19847 = !DILocation(line: 2237, column: 36, scope: !19844)
!19848 = !DILocation(line: 2237, column: 18, scope: !19844)
!19849 = !DILocation(line: 2237, column: 44, scope: !19844)
!19850 = !DILocation(line: 2237, column: 47, scope: !19844)
!19851 = !DILocation(line: 2237, column: 6, scope: !19828)
!19852 = !DILocation(line: 2238, column: 3, scope: !19844)
!19853 = !DILocation(line: 2241, column: 6, scope: !19854)
!19854 = distinct !DILexicalBlock(scope: !19828, file: !3, line: 2241, column: 6)
!19855 = !DILocation(line: 2241, column: 11, scope: !19854)
!19856 = !DILocation(line: 2241, column: 21, scope: !19854)
!19857 = !DILocation(line: 2241, column: 29, scope: !19854)
!19858 = !DILocation(line: 2241, column: 6, scope: !19828)
!19859 = !DILocation(line: 2242, column: 33, scope: !19860)
!19860 = distinct !DILexicalBlock(scope: !19854, file: !3, line: 2241, column: 34)
!19861 = !DILocation(line: 2242, column: 38, scope: !19860)
!19862 = !DILocation(line: 2242, column: 43, scope: !19860)
!19863 = !DILocation(line: 2242, column: 53, scope: !19860)
!19864 = !DILocation(line: 2242, column: 3, scope: !19860)
!19865 = !DILocation(line: 2243, column: 2, scope: !19860)
!19866 = !DILocalVariable(name: "err", scope: !19867, file: !3, line: 2244, type: !6)
!19867 = distinct !DILexicalBlock(scope: !19854, file: !3, line: 2243, column: 9)
!19868 = !DILocation(line: 2244, column: 7, scope: !19867)
!19869 = !DILocation(line: 2246, column: 37, scope: !19867)
!19870 = !DILocation(line: 2246, column: 42, scope: !19867)
!19871 = !DILocation(line: 2246, column: 9, scope: !19867)
!19872 = !DILocation(line: 2246, column: 7, scope: !19867)
!19873 = !DILocation(line: 2248, column: 7, scope: !19874)
!19874 = distinct !DILexicalBlock(scope: !19867, file: !3, line: 2248, column: 7)
!19875 = !DILocation(line: 2248, column: 7, scope: !19867)
!19876 = !DILocation(line: 2249, column: 4, scope: !19874)
!19877 = !DILocation(line: 2251, column: 27, scope: !19828)
!19878 = !DILocation(line: 2251, column: 2, scope: !19828)
!19879 = !DILocation(line: 2251, column: 7, scope: !19828)
!19880 = !DILocation(line: 2251, column: 17, scope: !19828)
!19881 = !DILocation(line: 2251, column: 25, scope: !19828)
!19882 = !DILocation(line: 2252, column: 1, scope: !19828)
!19883 = distinct !DISubprogram(name: "mlx5_core_is_ecpf_esw_manager", scope: !14, file: !14, line: 1146, type: !19759, scopeLine: 1147, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!19884 = !DILocalVariable(name: "dev", arg: 1, scope: !19883, file: !14, line: 1146, type: !19761)
!19885 = !DILocation(line: 1146, column: 59, scope: !19883)
!19886 = !DILocation(line: 1148, column: 9, scope: !19883)
!19887 = !DILocation(line: 1148, column: 14, scope: !19883)
!19888 = !DILocation(line: 1148, column: 19, scope: !19883)
!19889 = !DILocation(line: 1148, column: 32, scope: !19883)
!19890 = !DILocation(line: 1148, column: 35, scope: !19883)
!19891 = !DILocation(line: 0, scope: !19883)
!19892 = !DILocation(line: 1148, column: 2, scope: !19883)
!19893 = distinct !DISubprogram(name: "esw_offloads_vport_metadata_setup", scope: !3, file: !3, line: 2076, type: !16850, scopeLine: 2078, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!19894 = !DILocalVariable(name: "esw", arg: 1, scope: !19893, file: !3, line: 2076, type: !7)
!19895 = !DILocation(line: 2076, column: 67, scope: !19893)
!19896 = !DILocalVariable(name: "vport", arg: 2, scope: !19893, file: !3, line: 2077, type: !11306)
!19897 = !DILocation(line: 2077, column: 30, scope: !19893)
!19898 = !DILocation(line: 2079, column: 58, scope: !19893)
!19899 = !DILocation(line: 2079, column: 28, scope: !19893)
!19900 = !DILocation(line: 2079, column: 2, scope: !19893)
!19901 = !DILocation(line: 2079, column: 9, scope: !19893)
!19902 = !DILocation(line: 2079, column: 26, scope: !19893)
!19903 = !DILocation(line: 2080, column: 20, scope: !19893)
!19904 = !DILocation(line: 2080, column: 27, scope: !19893)
!19905 = !DILocation(line: 2080, column: 2, scope: !19893)
!19906 = !DILocation(line: 2080, column: 9, scope: !19893)
!19907 = !DILocation(line: 2080, column: 18, scope: !19893)
!19908 = !DILocation(line: 2081, column: 9, scope: !19893)
!19909 = !DILocation(line: 2081, column: 16, scope: !19893)
!19910 = !DILocation(line: 2081, column: 2, scope: !19893)
!19911 = distinct !DISubprogram(name: "__hash_init", scope: !19334, file: !19334, line: 34, type: !19912, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!19912 = !DISubroutineType(types: !19913)
!19913 = !{null, !6697, !199}
!19914 = !DILocalVariable(name: "ht", arg: 1, scope: !19911, file: !19334, line: 34, type: !6697)
!19915 = !DILocation(line: 34, column: 51, scope: !19911)
!19916 = !DILocalVariable(name: "sz", arg: 2, scope: !19911, file: !19334, line: 34, type: !199)
!19917 = !DILocation(line: 34, column: 68, scope: !19911)
!19918 = !DILocalVariable(name: "i", scope: !19911, file: !19334, line: 36, type: !199)
!19919 = !DILocation(line: 36, column: 15, scope: !19911)
!19920 = !DILocation(line: 38, column: 9, scope: !19921)
!19921 = distinct !DILexicalBlock(scope: !19911, file: !19334, line: 38, column: 2)
!19922 = !DILocation(line: 38, column: 7, scope: !19921)
!19923 = !DILocation(line: 38, column: 14, scope: !19924)
!19924 = distinct !DILexicalBlock(scope: !19921, file: !19334, line: 38, column: 2)
!19925 = !DILocation(line: 38, column: 18, scope: !19924)
!19926 = !DILocation(line: 38, column: 16, scope: !19924)
!19927 = !DILocation(line: 38, column: 2, scope: !19921)
!19928 = !DILocation(line: 39, column: 3, scope: !19924)
!19929 = !DILocation(line: 38, column: 23, scope: !19924)
!19930 = !DILocation(line: 38, column: 2, scope: !19924)
!19931 = distinct !{!19931, !19927, !19932}
!19932 = !DILocation(line: 39, column: 3, scope: !19921)
!19933 = !DILocation(line: 40, column: 1, scope: !19911)
!19934 = distinct !DISubprogram(name: "esw_create_uplink_offloads_acl_tables", scope: !3, file: !3, line: 2157, type: !4, scopeLine: 2158, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!19935 = !DILocalVariable(name: "esw", arg: 1, scope: !19934, file: !3, line: 2157, type: !7)
!19936 = !DILocation(line: 2157, column: 71, scope: !19934)
!19937 = !DILocalVariable(name: "vport", scope: !19934, file: !3, line: 2159, type: !11306)
!19938 = !DILocation(line: 2159, column: 21, scope: !19934)
!19939 = !DILocation(line: 2161, column: 33, scope: !19934)
!19940 = !DILocation(line: 2161, column: 10, scope: !19934)
!19941 = !DILocation(line: 2161, column: 8, scope: !19934)
!19942 = !DILocation(line: 2162, column: 46, scope: !19934)
!19943 = !DILocation(line: 2162, column: 51, scope: !19934)
!19944 = !DILocation(line: 2162, column: 9, scope: !19934)
!19945 = !DILocation(line: 2162, column: 2, scope: !19934)
!19946 = distinct !DISubprogram(name: "esw_create_offloads_table", scope: !3, file: !3, line: 1474, type: !4, scopeLine: 1475, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!19947 = !DILocalVariable(name: "esw", arg: 1, scope: !19946, file: !3, line: 1474, type: !7)
!19948 = !DILocation(line: 1474, column: 59, scope: !19946)
!19949 = !DILocalVariable(name: "ft_attr", scope: !19946, file: !3, line: 1476, type: !18289)
!19950 = !DILocation(line: 1476, column: 30, scope: !19946)
!19951 = !DILocalVariable(name: "dev", scope: !19946, file: !3, line: 1477, type: !12)
!19952 = !DILocation(line: 1477, column: 24, scope: !19946)
!19953 = !DILocation(line: 1477, column: 30, scope: !19946)
!19954 = !DILocation(line: 1477, column: 35, scope: !19946)
!19955 = !DILocalVariable(name: "ft_offloads", scope: !19946, file: !3, line: 1478, type: !10734)
!19956 = !DILocation(line: 1478, column: 26, scope: !19946)
!19957 = !DILocalVariable(name: "ns", scope: !19946, file: !3, line: 1479, type: !10774)
!19958 = !DILocation(line: 1479, column: 30, scope: !19946)
!19959 = !DILocalVariable(name: "err", scope: !19946, file: !3, line: 1480, type: !6)
!19960 = !DILocation(line: 1480, column: 6, scope: !19946)
!19961 = !DILocation(line: 1482, column: 31, scope: !19946)
!19962 = !DILocation(line: 1482, column: 7, scope: !19946)
!19963 = !DILocation(line: 1482, column: 5, scope: !19946)
!19964 = !DILocation(line: 1483, column: 7, scope: !19965)
!19965 = distinct !DILexicalBlock(scope: !19946, file: !3, line: 1483, column: 6)
!19966 = !DILocation(line: 1483, column: 6, scope: !19946)
!19967 = !DILocation(line: 1484, column: 3, scope: !19968)
!19968 = distinct !DILexicalBlock(scope: !19965, file: !3, line: 1483, column: 11)
!19969 = !DILocation(line: 1485, column: 3, scope: !19968)
!19970 = !DILocation(line: 1488, column: 20, scope: !19946)
!19971 = !DILocation(line: 1488, column: 25, scope: !19946)
!19972 = !DILocation(line: 1488, column: 38, scope: !19946)
!19973 = !DILocation(line: 1488, column: 10, scope: !19946)
!19974 = !DILocation(line: 1488, column: 18, scope: !19946)
!19975 = !DILocation(line: 1489, column: 10, scope: !19946)
!19976 = !DILocation(line: 1489, column: 15, scope: !19946)
!19977 = !DILocation(line: 1491, column: 39, scope: !19946)
!19978 = !DILocation(line: 1491, column: 16, scope: !19946)
!19979 = !DILocation(line: 1491, column: 14, scope: !19946)
!19980 = !DILocation(line: 1492, column: 13, scope: !19981)
!19981 = distinct !DILexicalBlock(scope: !19946, file: !3, line: 1492, column: 6)
!19982 = !DILocation(line: 1492, column: 6, scope: !19981)
!19983 = !DILocation(line: 1492, column: 6, scope: !19946)
!19984 = !DILocation(line: 1493, column: 17, scope: !19985)
!19985 = distinct !DILexicalBlock(scope: !19981, file: !3, line: 1492, column: 27)
!19986 = !DILocation(line: 1493, column: 9, scope: !19985)
!19987 = !DILocation(line: 1493, column: 7, scope: !19985)
!19988 = !DILocation(line: 1494, column: 3, scope: !19985)
!19989 = !DILocation(line: 1495, column: 10, scope: !19985)
!19990 = !DILocation(line: 1495, column: 3, scope: !19985)
!19991 = !DILocation(line: 1498, column: 30, scope: !19946)
!19992 = !DILocation(line: 1498, column: 2, scope: !19946)
!19993 = !DILocation(line: 1498, column: 7, scope: !19946)
!19994 = !DILocation(line: 1498, column: 16, scope: !19946)
!19995 = !DILocation(line: 1498, column: 28, scope: !19946)
!19996 = !DILocation(line: 1499, column: 2, scope: !19946)
!19997 = !DILocation(line: 1500, column: 1, scope: !19946)
!19998 = distinct !DISubprogram(name: "esw_create_restore_table", scope: !3, file: !3, line: 1645, type: !4, scopeLine: 1646, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!19999 = !DILocalVariable(name: "esw", arg: 1, scope: !19998, file: !3, line: 1645, type: !7)
!20000 = !DILocation(line: 1645, column: 58, scope: !19998)
!20001 = !DILocalVariable(name: "modact", scope: !19998, file: !3, line: 1647, type: !3128)
!20002 = !DILocation(line: 1647, column: 5, scope: !19998)
!20003 = !DILocalVariable(name: "inlen", scope: !19998, file: !3, line: 1648, type: !6)
!20004 = !DILocation(line: 1648, column: 6, scope: !19998)
!20005 = !DILocalVariable(name: "ft_attr", scope: !19998, file: !3, line: 1649, type: !18289)
!20006 = !DILocation(line: 1649, column: 30, scope: !19998)
!20007 = !DILocalVariable(name: "dev", scope: !19998, file: !3, line: 1650, type: !12)
!20008 = !DILocation(line: 1650, column: 24, scope: !19998)
!20009 = !DILocation(line: 1650, column: 30, scope: !19998)
!20010 = !DILocation(line: 1650, column: 35, scope: !19998)
!20011 = !DILocalVariable(name: "ns", scope: !19998, file: !3, line: 1651, type: !10774)
!20012 = !DILocation(line: 1651, column: 30, scope: !19998)
!20013 = !DILocalVariable(name: "mod_hdr", scope: !19998, file: !3, line: 1652, type: !11338)
!20014 = !DILocation(line: 1652, column: 26, scope: !19998)
!20015 = !DILocalVariable(name: "match_criteria", scope: !19998, file: !3, line: 1653, type: !159)
!20016 = !DILocation(line: 1653, column: 8, scope: !19998)
!20017 = !DILocalVariable(name: "misc", scope: !19998, file: !3, line: 1653, type: !159)
!20018 = !DILocation(line: 1653, column: 25, scope: !19998)
!20019 = !DILocalVariable(name: "ft", scope: !19998, file: !3, line: 1654, type: !10734)
!20020 = !DILocation(line: 1654, column: 26, scope: !19998)
!20021 = !DILocalVariable(name: "g", scope: !19998, file: !3, line: 1655, type: !10831)
!20022 = !DILocation(line: 1655, column: 26, scope: !19998)
!20023 = !DILocalVariable(name: "flow_group_in", scope: !19998, file: !3, line: 1656, type: !1467)
!20024 = !DILocation(line: 1656, column: 7, scope: !19998)
!20025 = !DILocalVariable(name: "err", scope: !19998, file: !3, line: 1657, type: !6)
!20026 = !DILocation(line: 1657, column: 6, scope: !19998)
!20027 = !DILocation(line: 1659, column: 46, scope: !20028)
!20028 = distinct !DILexicalBlock(scope: !19998, file: !3, line: 1659, column: 6)
!20029 = !DILocation(line: 1659, column: 7, scope: !20028)
!20030 = !DILocation(line: 1659, column: 6, scope: !19998)
!20031 = !DILocation(line: 1660, column: 3, scope: !20028)
!20032 = !DILocation(line: 1662, column: 31, scope: !19998)
!20033 = !DILocation(line: 1662, column: 7, scope: !19998)
!20034 = !DILocation(line: 1662, column: 5, scope: !19998)
!20035 = !DILocation(line: 1663, column: 7, scope: !20036)
!20036 = distinct !DILexicalBlock(scope: !19998, file: !3, line: 1663, column: 6)
!20037 = !DILocation(line: 1663, column: 6, scope: !19998)
!20038 = !DILocation(line: 1664, column: 3, scope: !20039)
!20039 = distinct !DILexicalBlock(scope: !20036, file: !3, line: 1663, column: 11)
!20040 = !DILocation(line: 1665, column: 3, scope: !20039)
!20041 = !DILocation(line: 1668, column: 27, scope: !19998)
!20042 = !DILocation(line: 1668, column: 18, scope: !19998)
!20043 = !DILocation(line: 1668, column: 16, scope: !19998)
!20044 = !DILocation(line: 1669, column: 7, scope: !20045)
!20045 = distinct !DILexicalBlock(scope: !19998, file: !3, line: 1669, column: 6)
!20046 = !DILocation(line: 1669, column: 6, scope: !19998)
!20047 = !DILocation(line: 1670, column: 7, scope: !20048)
!20048 = distinct !DILexicalBlock(scope: !20045, file: !3, line: 1669, column: 22)
!20049 = !DILocation(line: 1671, column: 3, scope: !20048)
!20050 = !DILocation(line: 1674, column: 10, scope: !19998)
!20051 = !DILocation(line: 1674, column: 18, scope: !19998)
!20052 = !DILocation(line: 1675, column: 30, scope: !19998)
!20053 = !DILocation(line: 1675, column: 7, scope: !19998)
!20054 = !DILocation(line: 1675, column: 5, scope: !19998)
!20055 = !DILocation(line: 1676, column: 13, scope: !20056)
!20056 = distinct !DILexicalBlock(scope: !19998, file: !3, line: 1676, column: 6)
!20057 = !DILocation(line: 1676, column: 6, scope: !20056)
!20058 = !DILocation(line: 1676, column: 6, scope: !19998)
!20059 = !DILocation(line: 1677, column: 17, scope: !20060)
!20060 = distinct !DILexicalBlock(scope: !20056, file: !3, line: 1676, column: 18)
!20061 = !DILocation(line: 1677, column: 9, scope: !20060)
!20062 = !DILocation(line: 1677, column: 7, scope: !20060)
!20063 = !DILocation(line: 1678, column: 3, scope: !20060)
!20064 = !DILocation(line: 1680, column: 3, scope: !20060)
!20065 = !DILocation(line: 1683, column: 9, scope: !19998)
!20066 = !DILocation(line: 1683, column: 2, scope: !19998)
!20067 = !DILocation(line: 1683, column: 27, scope: !19998)
!20068 = !DILocation(line: 1684, column: 19, scope: !19998)
!20069 = !DILocation(line: 1684, column: 17, scope: !19998)
!20070 = !DILocation(line: 1686, column: 9, scope: !19998)
!20071 = !DILocation(line: 1686, column: 7, scope: !19998)
!20072 = !DILocation(line: 1689, column: 2, scope: !19998)
!20073 = !DILocalVariable(name: "_v", scope: !20074, file: !3, line: 1689, type: !229)
!20074 = distinct !DILexicalBlock(scope: !19998, file: !3, line: 1689, column: 2)
!20075 = !DILocation(line: 1689, column: 2, scope: !20074)
!20076 = !DILocation(line: 1689, column: 2, scope: !20077)
!20077 = distinct !DILexicalBlock(scope: !20074, file: !3, line: 1689, column: 2)
!20078 = !DILocation(line: 1691, column: 2, scope: !19998)
!20079 = !DILocalVariable(name: "_v", scope: !20080, file: !3, line: 1691, type: !229)
!20080 = distinct !DILexicalBlock(scope: !19998, file: !3, line: 1691, column: 2)
!20081 = !DILocation(line: 1691, column: 2, scope: !20080)
!20082 = !DILocation(line: 1691, column: 2, scope: !20083)
!20083 = distinct !DILexicalBlock(scope: !20080, file: !3, line: 1691, column: 2)
!20084 = !DILocation(line: 1692, column: 2, scope: !19998)
!20085 = !DILocalVariable(name: "_v", scope: !20086, file: !3, line: 1692, type: !229)
!20086 = distinct !DILexicalBlock(scope: !19998, file: !3, line: 1692, column: 2)
!20087 = !DILocation(line: 1692, column: 2, scope: !20086)
!20088 = !DILocation(line: 1692, column: 2, scope: !20089)
!20089 = distinct !DILexicalBlock(scope: !20086, file: !3, line: 1692, column: 2)
!20090 = !DILocation(line: 1694, column: 2, scope: !19998)
!20091 = !DILocalVariable(name: "_v", scope: !20092, file: !3, line: 1694, type: !229)
!20092 = distinct !DILexicalBlock(scope: !19998, file: !3, line: 1694, column: 2)
!20093 = !DILocation(line: 1694, column: 2, scope: !20092)
!20094 = !DILocation(line: 1694, column: 2, scope: !20095)
!20095 = distinct !DILexicalBlock(scope: !20092, file: !3, line: 1694, column: 2)
!20096 = !DILocation(line: 1696, column: 29, scope: !19998)
!20097 = !DILocation(line: 1696, column: 33, scope: !19998)
!20098 = !DILocation(line: 1696, column: 6, scope: !19998)
!20099 = !DILocation(line: 1696, column: 4, scope: !19998)
!20100 = !DILocation(line: 1697, column: 13, scope: !20101)
!20101 = distinct !DILexicalBlock(scope: !19998, file: !3, line: 1697, column: 6)
!20102 = !DILocation(line: 1697, column: 6, scope: !20101)
!20103 = !DILocation(line: 1697, column: 6, scope: !19998)
!20104 = !DILocation(line: 1698, column: 17, scope: !20105)
!20105 = distinct !DILexicalBlock(scope: !20101, file: !3, line: 1697, column: 17)
!20106 = !DILocation(line: 1698, column: 9, scope: !20105)
!20107 = !DILocation(line: 1698, column: 7, scope: !20105)
!20108 = !DILocation(line: 1699, column: 3, scope: !20105)
!20109 = !DILocation(line: 1701, column: 3, scope: !20105)
!20110 = !DILocation(line: 1704, column: 2, scope: !19998)
!20111 = !DILocalVariable(name: "_v", scope: !20112, file: !3, line: 1704, type: !229)
!20112 = distinct !DILexicalBlock(scope: !19998, file: !3, line: 1704, column: 2)
!20113 = !DILocation(line: 1704, column: 2, scope: !20112)
!20114 = !DILocation(line: 1704, column: 2, scope: !20115)
!20115 = distinct !DILexicalBlock(scope: !20112, file: !3, line: 1704, column: 2)
!20116 = !DILocation(line: 1705, column: 2, scope: !19998)
!20117 = !DILocalVariable(name: "_v", scope: !20118, file: !3, line: 1705, type: !229)
!20118 = distinct !DILexicalBlock(scope: !19998, file: !3, line: 1705, column: 2)
!20119 = !DILocation(line: 1705, column: 2, scope: !20118)
!20120 = !DILocation(line: 1705, column: 2, scope: !20121)
!20121 = distinct !DILexicalBlock(scope: !20118, file: !3, line: 1705, column: 2)
!20122 = !DILocation(line: 1707, column: 2, scope: !19998)
!20123 = !DILocalVariable(name: "_v", scope: !20124, file: !3, line: 1707, type: !229)
!20124 = distinct !DILexicalBlock(scope: !19998, file: !3, line: 1707, column: 2)
!20125 = !DILocation(line: 1707, column: 2, scope: !20124)
!20126 = !DILocation(line: 1707, column: 2, scope: !20127)
!20127 = distinct !DILexicalBlock(scope: !20124, file: !3, line: 1707, column: 2)
!20128 = !DILocation(line: 1709, column: 37, scope: !19998)
!20129 = !DILocation(line: 1709, column: 42, scope: !19998)
!20130 = !DILocation(line: 1711, column: 9, scope: !19998)
!20131 = !DILocation(line: 1709, column: 12, scope: !19998)
!20132 = !DILocation(line: 1709, column: 10, scope: !19998)
!20133 = !DILocation(line: 1712, column: 13, scope: !20134)
!20134 = distinct !DILexicalBlock(scope: !19998, file: !3, line: 1712, column: 6)
!20135 = !DILocation(line: 1712, column: 6, scope: !20134)
!20136 = !DILocation(line: 1712, column: 6, scope: !19998)
!20137 = !DILocation(line: 1713, column: 17, scope: !20138)
!20138 = distinct !DILexicalBlock(scope: !20134, file: !3, line: 1712, column: 23)
!20139 = !DILocation(line: 1713, column: 9, scope: !20138)
!20140 = !DILocation(line: 1713, column: 7, scope: !20138)
!20141 = !DILocation(line: 1714, column: 3, scope: !20138)
!20142 = !DILocation(line: 1716, column: 3, scope: !20138)
!20143 = !DILocation(line: 1719, column: 38, scope: !19998)
!20144 = !DILocation(line: 1719, column: 2, scope: !19998)
!20145 = !DILocation(line: 1719, column: 7, scope: !19998)
!20146 = !DILocation(line: 1719, column: 16, scope: !19998)
!20147 = !DILocation(line: 1719, column: 36, scope: !19998)
!20148 = !DILocation(line: 1720, column: 32, scope: !19998)
!20149 = !DILocation(line: 1720, column: 2, scope: !19998)
!20150 = !DILocation(line: 1720, column: 7, scope: !19998)
!20151 = !DILocation(line: 1720, column: 16, scope: !19998)
!20152 = !DILocation(line: 1720, column: 30, scope: !19998)
!20153 = !DILocation(line: 1721, column: 38, scope: !19998)
!20154 = !DILocation(line: 1721, column: 2, scope: !19998)
!20155 = !DILocation(line: 1721, column: 7, scope: !19998)
!20156 = !DILocation(line: 1721, column: 16, scope: !19998)
!20157 = !DILocation(line: 1721, column: 36, scope: !19998)
!20158 = !DILocation(line: 1723, column: 9, scope: !19998)
!20159 = !DILocation(line: 1723, column: 2, scope: !19998)
!20160 = !DILocation(line: 1725, column: 2, scope: !19998)
!20161 = !DILabel(scope: !19998, name: "err_mod_hdr", file: !3, line: 1727)
!20162 = !DILocation(line: 1727, column: 1, scope: !19998)
!20163 = !DILocation(line: 1728, column: 26, scope: !19998)
!20164 = !DILocation(line: 1728, column: 2, scope: !19998)
!20165 = !DILabel(scope: !19998, name: "err_group", file: !3, line: 1729)
!20166 = !DILocation(line: 1729, column: 1, scope: !19998)
!20167 = !DILocation(line: 1730, column: 26, scope: !19998)
!20168 = !DILocation(line: 1730, column: 2, scope: !19998)
!20169 = !DILabel(scope: !19998, name: "out_free", file: !3, line: 1731)
!20170 = !DILocation(line: 1731, column: 1, scope: !19998)
!20171 = !DILocation(line: 1732, column: 9, scope: !19998)
!20172 = !DILocation(line: 1732, column: 2, scope: !19998)
!20173 = !DILocation(line: 1734, column: 9, scope: !19998)
!20174 = !DILocation(line: 1734, column: 2, scope: !19998)
!20175 = !DILocation(line: 1735, column: 1, scope: !19998)
!20176 = distinct !DISubprogram(name: "esw_create_vport_rx_group", scope: !3, file: !3, line: 1509, type: !4, scopeLine: 1510, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!20177 = !DILocalVariable(name: "pscr_ret__", scope: !20178, file: !20179, line: 15, type: !1267)
!20178 = distinct !DILexicalBlock(scope: !20180, file: !20179, line: 15, column: 9)
!20179 = !DIFile(filename: "./arch/x86/include/asm/current.h", directory: "/home/lizy2001/genbc/linux")
!20180 = distinct !DISubprogram(name: "get_current", scope: !20179, file: !20179, line: 13, type: !20181, scopeLine: 14, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!20181 = !DISubroutineType(types: !20182)
!20182 = !{!1267}
!20183 = !DILocation(line: 15, column: 9, scope: !20178, inlinedAt: !20184)
!20184 = distinct !DILocation(line: 1532, column: 3, scope: !20185)
!20185 = distinct !DILexicalBlock(scope: !20186, file: !3, line: 1530, column: 17)
!20186 = distinct !DILexicalBlock(scope: !20176, file: !3, line: 1530, column: 6)
!20187 = !DILocalVariable(name: "__vpp_verify", scope: !20188, file: !20179, line: 15, type: !2454)
!20188 = distinct !DILexicalBlock(scope: !20178, file: !20179, line: 15, column: 9)
!20189 = !DILocation(line: 15, column: 9, scope: !20188, inlinedAt: !20184)
!20190 = !DILocalVariable(name: "pfo_val__", scope: !20191, file: !20179, line: 15, type: !235)
!20191 = distinct !DILexicalBlock(scope: !20178, file: !20179, line: 15, column: 9)
!20192 = !DILocation(line: 15, column: 9, scope: !20191, inlinedAt: !20184)
!20193 = !DILocalVariable(name: "esw", arg: 1, scope: !20176, file: !3, line: 1509, type: !7)
!20194 = !DILocation(line: 1509, column: 59, scope: !20176)
!20195 = !DILocalVariable(name: "inlen", scope: !20176, file: !3, line: 1511, type: !6)
!20196 = !DILocation(line: 1511, column: 6, scope: !20176)
!20197 = !DILocalVariable(name: "g", scope: !20176, file: !3, line: 1512, type: !10831)
!20198 = !DILocation(line: 1512, column: 26, scope: !20176)
!20199 = !DILocalVariable(name: "flow_group_in", scope: !20176, file: !3, line: 1513, type: !1467)
!20200 = !DILocation(line: 1513, column: 7, scope: !20176)
!20201 = !DILocalVariable(name: "nvports", scope: !20176, file: !3, line: 1514, type: !6)
!20202 = !DILocation(line: 1514, column: 6, scope: !20176)
!20203 = !DILocalVariable(name: "err", scope: !20176, file: !3, line: 1515, type: !6)
!20204 = !DILocation(line: 1515, column: 6, scope: !20176)
!20205 = !DILocation(line: 1517, column: 12, scope: !20176)
!20206 = !DILocation(line: 1517, column: 17, scope: !20176)
!20207 = !DILocation(line: 1517, column: 30, scope: !20176)
!20208 = !DILocation(line: 1517, column: 10, scope: !20176)
!20209 = !DILocation(line: 1518, column: 27, scope: !20176)
!20210 = !DILocation(line: 1518, column: 18, scope: !20176)
!20211 = !DILocation(line: 1518, column: 16, scope: !20176)
!20212 = !DILocation(line: 1519, column: 7, scope: !20213)
!20213 = distinct !DILexicalBlock(scope: !20176, file: !3, line: 1519, column: 6)
!20214 = !DILocation(line: 1519, column: 6, scope: !20176)
!20215 = !DILocation(line: 1520, column: 3, scope: !20213)
!20216 = !DILocation(line: 1523, column: 33, scope: !20176)
!20217 = !DILocation(line: 1523, column: 38, scope: !20176)
!20218 = !DILocation(line: 1523, column: 2, scope: !20176)
!20219 = !DILocation(line: 1525, column: 2, scope: !20176)
!20220 = !DILocalVariable(name: "_v", scope: !20221, file: !3, line: 1525, type: !229)
!20221 = distinct !DILexicalBlock(scope: !20176, file: !3, line: 1525, column: 2)
!20222 = !DILocation(line: 1525, column: 2, scope: !20221)
!20223 = !DILocation(line: 1525, column: 2, scope: !20224)
!20224 = distinct !DILexicalBlock(scope: !20221, file: !3, line: 1525, column: 2)
!20225 = !DILocation(line: 1526, column: 2, scope: !20176)
!20226 = !DILocalVariable(name: "_v", scope: !20227, file: !3, line: 1526, type: !229)
!20227 = distinct !DILexicalBlock(scope: !20176, file: !3, line: 1526, column: 2)
!20228 = !DILocation(line: 1526, column: 2, scope: !20227)
!20229 = !DILocation(line: 1526, column: 2, scope: !20230)
!20230 = distinct !DILexicalBlock(scope: !20227, file: !3, line: 1526, column: 2)
!20231 = !DILocation(line: 1528, column: 29, scope: !20176)
!20232 = !DILocation(line: 1528, column: 34, scope: !20176)
!20233 = !DILocation(line: 1528, column: 43, scope: !20176)
!20234 = !DILocation(line: 1528, column: 56, scope: !20176)
!20235 = !DILocation(line: 1528, column: 6, scope: !20176)
!20236 = !DILocation(line: 1528, column: 4, scope: !20176)
!20237 = !DILocation(line: 1530, column: 13, scope: !20186)
!20238 = !DILocation(line: 1530, column: 6, scope: !20186)
!20239 = !DILocation(line: 1530, column: 6, scope: !20176)
!20240 = !DILocation(line: 1531, column: 17, scope: !20185)
!20241 = !DILocation(line: 1531, column: 9, scope: !20185)
!20242 = !DILocation(line: 1531, column: 7, scope: !20185)
!20243 = !DILocation(line: 1532, column: 3, scope: !20185)
!20244 = !{i32 -2146114655}
!20245 = !DILocation(line: 1533, column: 3, scope: !20185)
!20246 = !DILocation(line: 1536, column: 33, scope: !20176)
!20247 = !DILocation(line: 1536, column: 2, scope: !20176)
!20248 = !DILocation(line: 1536, column: 7, scope: !20176)
!20249 = !DILocation(line: 1536, column: 16, scope: !20176)
!20250 = !DILocation(line: 1536, column: 31, scope: !20176)
!20251 = !DILabel(scope: !20176, name: "out", file: !3, line: 1537)
!20252 = !DILocation(line: 1537, column: 1, scope: !20176)
!20253 = !DILocation(line: 1538, column: 9, scope: !20176)
!20254 = !DILocation(line: 1538, column: 2, scope: !20176)
!20255 = !DILocation(line: 1539, column: 9, scope: !20176)
!20256 = !DILocation(line: 1539, column: 2, scope: !20176)
!20257 = !DILocation(line: 1540, column: 1, scope: !20176)
!20258 = distinct !DISubprogram(name: "esw_destroy_restore_table", scope: !3, file: !3, line: 1633, type: !12306, scopeLine: 1634, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!20259 = !DILocalVariable(name: "esw", arg: 1, scope: !20258, file: !3, line: 1633, type: !7)
!20260 = !DILocation(line: 1633, column: 60, scope: !20258)
!20261 = !DILocalVariable(name: "offloads", scope: !20258, file: !3, line: 1635, type: !20262)
!20262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11407, size: 64)
!20263 = !DILocation(line: 1635, column: 27, scope: !20258)
!20264 = !DILocation(line: 1635, column: 39, scope: !20258)
!20265 = !DILocation(line: 1635, column: 44, scope: !20258)
!20266 = !DILocation(line: 1637, column: 46, scope: !20267)
!20267 = distinct !DILexicalBlock(scope: !20258, file: !3, line: 1637, column: 6)
!20268 = !DILocation(line: 1637, column: 7, scope: !20267)
!20269 = !DILocation(line: 1637, column: 6, scope: !20258)
!20270 = !DILocation(line: 1638, column: 3, scope: !20267)
!20271 = !DILocation(line: 1640, column: 29, scope: !20258)
!20272 = !DILocation(line: 1640, column: 34, scope: !20258)
!20273 = !DILocation(line: 1640, column: 39, scope: !20258)
!20274 = !DILocation(line: 1640, column: 49, scope: !20258)
!20275 = !DILocation(line: 1640, column: 2, scope: !20258)
!20276 = !DILocation(line: 1641, column: 26, scope: !20258)
!20277 = !DILocation(line: 1641, column: 36, scope: !20258)
!20278 = !DILocation(line: 1641, column: 2, scope: !20258)
!20279 = !DILocation(line: 1642, column: 26, scope: !20258)
!20280 = !DILocation(line: 1642, column: 36, scope: !20258)
!20281 = !DILocation(line: 1642, column: 2, scope: !20258)
!20282 = !DILocation(line: 1643, column: 1, scope: !20258)
!20283 = distinct !DISubprogram(name: "esw_destroy_offloads_table", scope: !3, file: !3, line: 1502, type: !12306, scopeLine: 1503, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!20284 = !DILocalVariable(name: "esw", arg: 1, scope: !20283, file: !3, line: 1502, type: !7)
!20285 = !DILocation(line: 1502, column: 61, scope: !20283)
!20286 = !DILocalVariable(name: "offloads", scope: !20283, file: !3, line: 1504, type: !20262)
!20287 = !DILocation(line: 1504, column: 27, scope: !20283)
!20288 = !DILocation(line: 1504, column: 39, scope: !20283)
!20289 = !DILocation(line: 1504, column: 44, scope: !20283)
!20290 = !DILocation(line: 1506, column: 26, scope: !20283)
!20291 = !DILocation(line: 1506, column: 36, scope: !20283)
!20292 = !DILocation(line: 1506, column: 2, scope: !20283)
!20293 = !DILocation(line: 1507, column: 1, scope: !20283)
!20294 = distinct !DISubprogram(name: "esw_destroy_uplink_offloads_acl_tables", scope: !3, file: !3, line: 2165, type: !12306, scopeLine: 2166, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!20295 = !DILocalVariable(name: "esw", arg: 1, scope: !20294, file: !3, line: 2165, type: !7)
!20296 = !DILocation(line: 2165, column: 73, scope: !20294)
!20297 = !DILocalVariable(name: "vport", scope: !20294, file: !3, line: 2167, type: !11306)
!20298 = !DILocation(line: 2167, column: 21, scope: !20294)
!20299 = !DILocation(line: 2169, column: 33, scope: !20294)
!20300 = !DILocation(line: 2169, column: 10, scope: !20294)
!20301 = !DILocation(line: 2169, column: 8, scope: !20294)
!20302 = !DILocation(line: 2170, column: 40, scope: !20294)
!20303 = !DILocation(line: 2170, column: 45, scope: !20294)
!20304 = !DILocation(line: 2170, column: 2, scope: !20294)
!20305 = !DILocation(line: 2171, column: 1, scope: !20294)
!20306 = distinct !DISubprogram(name: "esw_set_flow_group_source_port", scope: !3, file: !3, line: 1146, type: !20307, scopeLine: 1148, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!20307 = !DISubroutineType(types: !20308)
!20308 = !{null, !7, !1467}
!20309 = !DILocalVariable(name: "esw", arg: 1, scope: !20306, file: !3, line: 1146, type: !7)
!20310 = !DILocation(line: 1146, column: 65, scope: !20306)
!20311 = !DILocalVariable(name: "flow_group_in", arg: 2, scope: !20306, file: !3, line: 1147, type: !1467)
!20312 = !DILocation(line: 1147, column: 14, scope: !20306)
!20313 = !DILocalVariable(name: "match_criteria", scope: !20306, file: !3, line: 1149, type: !159)
!20314 = !DILocation(line: 1149, column: 8, scope: !20306)
!20315 = !DILocation(line: 1149, column: 25, scope: !20306)
!20316 = !DILocation(line: 1153, column: 48, scope: !20317)
!20317 = distinct !DILexicalBlock(scope: !20306, file: !3, line: 1153, column: 6)
!20318 = !DILocation(line: 1153, column: 6, scope: !20317)
!20319 = !DILocation(line: 1153, column: 6, scope: !20306)
!20320 = !DILocation(line: 1154, column: 3, scope: !20321)
!20321 = distinct !DILexicalBlock(scope: !20317, file: !3, line: 1153, column: 54)
!20322 = !DILocalVariable(name: "_v", scope: !20323, file: !3, line: 1154, type: !229)
!20323 = distinct !DILexicalBlock(scope: !20321, file: !3, line: 1154, column: 3)
!20324 = !DILocation(line: 1154, column: 3, scope: !20323)
!20325 = !DILocation(line: 1154, column: 3, scope: !20326)
!20326 = distinct !DILexicalBlock(scope: !20323, file: !3, line: 1154, column: 3)
!20327 = !DILocation(line: 1158, column: 3, scope: !20321)
!20328 = !DILocalVariable(name: "_v", scope: !20329, file: !3, line: 1158, type: !229)
!20329 = distinct !DILexicalBlock(scope: !20321, file: !3, line: 1158, column: 3)
!20330 = !DILocation(line: 1158, column: 3, scope: !20329)
!20331 = !DILocation(line: 1158, column: 3, scope: !20332)
!20332 = distinct !DILexicalBlock(scope: !20329, file: !3, line: 1158, column: 3)
!20333 = !DILocation(line: 1161, column: 2, scope: !20321)
!20334 = !DILocation(line: 1162, column: 3, scope: !20335)
!20335 = distinct !DILexicalBlock(scope: !20317, file: !3, line: 1161, column: 9)
!20336 = !DILocalVariable(name: "_v", scope: !20337, file: !3, line: 1162, type: !229)
!20337 = distinct !DILexicalBlock(scope: !20335, file: !3, line: 1162, column: 3)
!20338 = !DILocation(line: 1162, column: 3, scope: !20337)
!20339 = !DILocation(line: 1162, column: 3, scope: !20340)
!20340 = distinct !DILexicalBlock(scope: !20337, file: !3, line: 1162, column: 3)
!20341 = !DILocation(line: 1166, column: 3, scope: !20335)
!20342 = !DILocation(line: 1166, column: 3, scope: !20343)
!20343 = distinct !DILexicalBlock(scope: !20335, file: !3, line: 1166, column: 3)
!20344 = !DILocation(line: 1166, column: 3, scope: !20345)
!20345 = distinct !DILexicalBlock(scope: !20343, file: !3, line: 1166, column: 3)
!20346 = !DILocation(line: 1169, column: 1, scope: !20306)
!20347 = distinct !DISubprogram(name: "mlx5_esw_offloads_devcom_event", scope: !3, file: !3, line: 1942, type: !20348, scopeLine: 1945, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!20348 = !DISubroutineType(types: !20349)
!20349 = !{!6, !6, !159, !159}
!20350 = !DILocation(line: 15, column: 9, scope: !20178, inlinedAt: !20351)
!20351 = distinct !DILocation(line: 1989, column: 2, scope: !20347)
!20352 = !DILocation(line: 15, column: 9, scope: !20188, inlinedAt: !20351)
!20353 = !DILocation(line: 15, column: 9, scope: !20191, inlinedAt: !20351)
!20354 = !DILocalVariable(name: "event", arg: 1, scope: !20347, file: !3, line: 1942, type: !6)
!20355 = !DILocation(line: 1942, column: 47, scope: !20347)
!20356 = !DILocalVariable(name: "my_data", arg: 2, scope: !20347, file: !3, line: 1943, type: !159)
!20357 = !DILocation(line: 1943, column: 14, scope: !20347)
!20358 = !DILocalVariable(name: "event_data", arg: 3, scope: !20347, file: !3, line: 1944, type: !159)
!20359 = !DILocation(line: 1944, column: 14, scope: !20347)
!20360 = !DILocalVariable(name: "esw", scope: !20347, file: !3, line: 1946, type: !7)
!20361 = !DILocation(line: 1946, column: 23, scope: !20347)
!20362 = !DILocation(line: 1946, column: 29, scope: !20347)
!20363 = !DILocalVariable(name: "devcom", scope: !20347, file: !3, line: 1947, type: !10821)
!20364 = !DILocation(line: 1947, column: 22, scope: !20347)
!20365 = !DILocation(line: 1947, column: 31, scope: !20347)
!20366 = !DILocation(line: 1947, column: 36, scope: !20347)
!20367 = !DILocation(line: 1947, column: 41, scope: !20347)
!20368 = !DILocation(line: 1947, column: 46, scope: !20347)
!20369 = !DILocalVariable(name: "peer_esw", scope: !20347, file: !3, line: 1948, type: !7)
!20370 = !DILocation(line: 1948, column: 23, scope: !20347)
!20371 = !DILocation(line: 1948, column: 34, scope: !20347)
!20372 = !DILocalVariable(name: "err", scope: !20347, file: !3, line: 1949, type: !6)
!20373 = !DILocation(line: 1949, column: 6, scope: !20347)
!20374 = !DILocation(line: 1951, column: 10, scope: !20347)
!20375 = !DILocation(line: 1951, column: 2, scope: !20347)
!20376 = !DILocation(line: 1953, column: 49, scope: !20377)
!20377 = distinct !DILexicalBlock(scope: !20378, file: !3, line: 1953, column: 7)
!20378 = distinct !DILexicalBlock(scope: !20347, file: !3, line: 1951, column: 17)
!20379 = !DILocation(line: 1953, column: 7, scope: !20377)
!20380 = !DILocation(line: 1954, column: 49, scope: !20377)
!20381 = !DILocation(line: 1954, column: 7, scope: !20377)
!20382 = !DILocation(line: 1953, column: 54, scope: !20377)
!20383 = !DILocation(line: 1953, column: 7, scope: !20378)
!20384 = !DILocation(line: 1955, column: 4, scope: !20377)
!20385 = !DILocation(line: 1957, column: 39, scope: !20378)
!20386 = !DILocation(line: 1957, column: 44, scope: !20378)
!20387 = !DILocation(line: 1957, column: 9, scope: !20378)
!20388 = !DILocation(line: 1957, column: 7, scope: !20378)
!20389 = !DILocation(line: 1958, column: 7, scope: !20390)
!20390 = distinct !DILexicalBlock(scope: !20378, file: !3, line: 1958, column: 7)
!20391 = !DILocation(line: 1958, column: 7, scope: !20378)
!20392 = !DILocation(line: 1959, column: 4, scope: !20390)
!20393 = !DILocation(line: 1960, column: 32, scope: !20378)
!20394 = !DILocation(line: 1960, column: 37, scope: !20378)
!20395 = !DILocation(line: 1960, column: 9, scope: !20378)
!20396 = !DILocation(line: 1960, column: 7, scope: !20378)
!20397 = !DILocation(line: 1961, column: 7, scope: !20398)
!20398 = distinct !DILexicalBlock(scope: !20378, file: !3, line: 1961, column: 7)
!20399 = !DILocation(line: 1961, column: 7, scope: !20378)
!20400 = !DILocation(line: 1962, column: 4, scope: !20398)
!20401 = !DILocation(line: 1964, column: 32, scope: !20378)
!20402 = !DILocation(line: 1964, column: 42, scope: !20378)
!20403 = !DILocation(line: 1964, column: 9, scope: !20378)
!20404 = !DILocation(line: 1964, column: 7, scope: !20378)
!20405 = !DILocation(line: 1965, column: 7, scope: !20406)
!20406 = distinct !DILexicalBlock(scope: !20378, file: !3, line: 1965, column: 7)
!20407 = !DILocation(line: 1965, column: 7, scope: !20378)
!20408 = !DILocation(line: 1966, column: 4, scope: !20406)
!20409 = !DILocation(line: 1968, column: 26, scope: !20378)
!20410 = !DILocation(line: 1968, column: 3, scope: !20378)
!20411 = !DILocation(line: 1969, column: 3, scope: !20378)
!20412 = !DILocation(line: 1972, column: 30, scope: !20413)
!20413 = distinct !DILexicalBlock(scope: !20378, file: !3, line: 1972, column: 7)
!20414 = !DILocation(line: 1972, column: 8, scope: !20413)
!20415 = !DILocation(line: 1972, column: 7, scope: !20378)
!20416 = !DILocation(line: 1973, column: 4, scope: !20413)
!20417 = !DILocation(line: 1975, column: 26, scope: !20378)
!20418 = !DILocation(line: 1975, column: 3, scope: !20378)
!20419 = !DILocation(line: 1976, column: 28, scope: !20378)
!20420 = !DILocation(line: 1976, column: 3, scope: !20378)
!20421 = !DILocation(line: 1977, column: 28, scope: !20378)
!20422 = !DILocation(line: 1977, column: 3, scope: !20378)
!20423 = !DILocation(line: 1978, column: 33, scope: !20378)
!20424 = !DILocation(line: 1978, column: 38, scope: !20378)
!20425 = !DILocation(line: 1978, column: 3, scope: !20378)
!20426 = !DILocation(line: 1979, column: 3, scope: !20378)
!20427 = !DILocation(line: 1982, column: 2, scope: !20347)
!20428 = !DILabel(scope: !20347, name: "err_pair", file: !3, line: 1984)
!20429 = !DILocation(line: 1984, column: 1, scope: !20347)
!20430 = !DILocation(line: 1985, column: 27, scope: !20347)
!20431 = !DILocation(line: 1985, column: 2, scope: !20347)
!20432 = !DILabel(scope: !20347, name: "err_peer", file: !3, line: 1986)
!20433 = !DILocation(line: 1986, column: 1, scope: !20347)
!20434 = !DILocation(line: 1987, column: 32, scope: !20347)
!20435 = !DILocation(line: 1987, column: 37, scope: !20347)
!20436 = !DILocation(line: 1987, column: 2, scope: !20347)
!20437 = !DILabel(scope: !20347, name: "err_out", file: !3, line: 1988)
!20438 = !DILocation(line: 1988, column: 1, scope: !20347)
!20439 = !DILocation(line: 1989, column: 2, scope: !20347)
!20440 = !DILocation(line: 1991, column: 9, scope: !20347)
!20441 = !DILocation(line: 1991, column: 2, scope: !20347)
!20442 = !DILocation(line: 1992, column: 1, scope: !20347)
!20443 = distinct !DISubprogram(name: "mlx5_esw_offloads_set_ns_peer", scope: !3, file: !3, line: 1913, type: !20444, scopeLine: 1916, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!20444 = !DISubroutineType(types: !20445)
!20445 = !{!6, !7, !7, !304}
!20446 = !DILocalVariable(name: "esw", arg: 1, scope: !20443, file: !3, line: 1913, type: !7)
!20447 = !DILocation(line: 1913, column: 63, scope: !20443)
!20448 = !DILocalVariable(name: "peer_esw", arg: 2, scope: !20443, file: !3, line: 1914, type: !7)
!20449 = !DILocation(line: 1914, column: 28, scope: !20443)
!20450 = !DILocalVariable(name: "pair", arg: 3, scope: !20443, file: !3, line: 1915, type: !304)
!20451 = !DILocation(line: 1915, column: 12, scope: !20443)
!20452 = !DILocalVariable(name: "peer_ns", scope: !20443, file: !3, line: 1917, type: !10670)
!20453 = !DILocation(line: 1917, column: 35, scope: !20443)
!20454 = !DILocalVariable(name: "ns", scope: !20443, file: !3, line: 1918, type: !10670)
!20455 = !DILocation(line: 1918, column: 35, scope: !20443)
!20456 = !DILocalVariable(name: "err", scope: !20443, file: !3, line: 1919, type: !6)
!20457 = !DILocation(line: 1919, column: 6, scope: !20443)
!20458 = !DILocation(line: 1921, column: 12, scope: !20443)
!20459 = !DILocation(line: 1921, column: 22, scope: !20443)
!20460 = !DILocation(line: 1921, column: 27, scope: !20443)
!20461 = !DILocation(line: 1921, column: 32, scope: !20443)
!20462 = !DILocation(line: 1921, column: 42, scope: !20443)
!20463 = !DILocation(line: 1921, column: 10, scope: !20443)
!20464 = !DILocation(line: 1922, column: 7, scope: !20443)
!20465 = !DILocation(line: 1922, column: 12, scope: !20443)
!20466 = !DILocation(line: 1922, column: 17, scope: !20443)
!20467 = !DILocation(line: 1922, column: 22, scope: !20443)
!20468 = !DILocation(line: 1922, column: 32, scope: !20443)
!20469 = !DILocation(line: 1922, column: 5, scope: !20443)
!20470 = !DILocation(line: 1924, column: 6, scope: !20471)
!20471 = distinct !DILexicalBlock(scope: !20443, file: !3, line: 1924, column: 6)
!20472 = !DILocation(line: 1924, column: 6, scope: !20443)
!20473 = !DILocation(line: 1925, column: 38, scope: !20474)
!20474 = distinct !DILexicalBlock(scope: !20471, file: !3, line: 1924, column: 12)
!20475 = !DILocation(line: 1925, column: 42, scope: !20474)
!20476 = !DILocation(line: 1925, column: 9, scope: !20474)
!20477 = !DILocation(line: 1925, column: 7, scope: !20474)
!20478 = !DILocation(line: 1926, column: 7, scope: !20479)
!20479 = distinct !DILexicalBlock(scope: !20474, file: !3, line: 1926, column: 7)
!20480 = !DILocation(line: 1926, column: 7, scope: !20474)
!20481 = !DILocation(line: 1927, column: 11, scope: !20479)
!20482 = !DILocation(line: 1927, column: 4, scope: !20479)
!20483 = !DILocation(line: 1929, column: 38, scope: !20474)
!20484 = !DILocation(line: 1929, column: 47, scope: !20474)
!20485 = !DILocation(line: 1929, column: 9, scope: !20474)
!20486 = !DILocation(line: 1929, column: 7, scope: !20474)
!20487 = !DILocation(line: 1930, column: 7, scope: !20488)
!20488 = distinct !DILexicalBlock(scope: !20474, file: !3, line: 1930, column: 7)
!20489 = !DILocation(line: 1930, column: 7, scope: !20474)
!20490 = !DILocation(line: 1931, column: 33, scope: !20491)
!20491 = distinct !DILexicalBlock(scope: !20488, file: !3, line: 1930, column: 12)
!20492 = !DILocation(line: 1931, column: 4, scope: !20491)
!20493 = !DILocation(line: 1932, column: 11, scope: !20491)
!20494 = !DILocation(line: 1932, column: 4, scope: !20491)
!20495 = !DILocation(line: 1934, column: 2, scope: !20474)
!20496 = !DILocation(line: 1935, column: 32, scope: !20497)
!20497 = distinct !DILexicalBlock(scope: !20471, file: !3, line: 1934, column: 9)
!20498 = !DILocation(line: 1935, column: 3, scope: !20497)
!20499 = !DILocation(line: 1936, column: 32, scope: !20497)
!20500 = !DILocation(line: 1936, column: 3, scope: !20497)
!20501 = !DILocation(line: 1939, column: 2, scope: !20443)
!20502 = !DILocation(line: 1940, column: 1, scope: !20443)
!20503 = distinct !DISubprogram(name: "mlx5_esw_offloads_pair", scope: !3, file: !3, line: 1893, type: !20504, scopeLine: 1895, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!20504 = !DISubroutineType(types: !20505)
!20505 = !{!6, !7, !7}
!20506 = !DILocalVariable(name: "esw", arg: 1, scope: !20503, file: !3, line: 1893, type: !7)
!20507 = !DILocation(line: 1893, column: 56, scope: !20503)
!20508 = !DILocalVariable(name: "peer_esw", arg: 2, scope: !20503, file: !3, line: 1894, type: !7)
!20509 = !DILocation(line: 1894, column: 28, scope: !20503)
!20510 = !DILocalVariable(name: "err", scope: !20503, file: !3, line: 1896, type: !6)
!20511 = !DILocation(line: 1896, column: 6, scope: !20503)
!20512 = !DILocation(line: 1898, column: 36, scope: !20503)
!20513 = !DILocation(line: 1898, column: 41, scope: !20503)
!20514 = !DILocation(line: 1898, column: 51, scope: !20503)
!20515 = !DILocation(line: 1898, column: 8, scope: !20503)
!20516 = !DILocation(line: 1898, column: 6, scope: !20503)
!20517 = !DILocation(line: 1899, column: 6, scope: !20518)
!20518 = distinct !DILexicalBlock(scope: !20503, file: !3, line: 1899, column: 6)
!20519 = !DILocation(line: 1899, column: 6, scope: !20503)
!20520 = !DILocation(line: 1900, column: 10, scope: !20518)
!20521 = !DILocation(line: 1900, column: 3, scope: !20518)
!20522 = !DILocation(line: 1902, column: 2, scope: !20503)
!20523 = !DILocation(line: 1903, column: 1, scope: !20503)
!20524 = distinct !DISubprogram(name: "mlx5_esw_offloads_unpair", scope: !3, file: !3, line: 1905, type: !12306, scopeLine: 1906, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!20525 = !DILocalVariable(name: "esw", arg: 1, scope: !20524, file: !3, line: 1905, type: !7)
!20526 = !DILocation(line: 1905, column: 59, scope: !20524)
!20527 = !DILocation(line: 1910, column: 30, scope: !20524)
!20528 = !DILocation(line: 1910, column: 2, scope: !20524)
!20529 = !DILocation(line: 1911, column: 1, scope: !20524)
!20530 = distinct !DISubprogram(name: "esw_add_fdb_peer_miss_rules", scope: !3, file: !3, line: 920, type: !20531, scopeLine: 922, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!20531 = !DISubroutineType(types: !20532)
!20532 = !{!6, !7, !12}
!20533 = !DILocalVariable(name: "esw", arg: 1, scope: !20530, file: !3, line: 920, type: !7)
!20534 = !DILocation(line: 920, column: 61, scope: !20530)
!20535 = !DILocalVariable(name: "peer_dev", arg: 2, scope: !20530, file: !3, line: 921, type: !12)
!20536 = !DILocation(line: 921, column: 34, scope: !20530)
!20537 = !DILocalVariable(name: "dest", scope: !20530, file: !3, line: 923, type: !10876)
!20538 = !DILocation(line: 923, column: 31, scope: !20530)
!20539 = !DILocalVariable(name: "flow_act", scope: !20530, file: !3, line: 924, type: !12713)
!20540 = !DILocation(line: 924, column: 23, scope: !20530)
!20541 = !DILocalVariable(name: "flows", scope: !20530, file: !3, line: 925, type: !11273)
!20542 = !DILocation(line: 925, column: 28, scope: !20530)
!20543 = !DILocalVariable(name: "flow", scope: !20530, file: !3, line: 926, type: !10864)
!20544 = !DILocation(line: 926, column: 27, scope: !20530)
!20545 = !DILocalVariable(name: "spec", scope: !20530, file: !3, line: 927, type: !12595)
!20546 = !DILocation(line: 927, column: 25, scope: !20530)
!20547 = !DILocalVariable(name: "nvports", scope: !20530, file: !3, line: 929, type: !6)
!20548 = !DILocation(line: 929, column: 6, scope: !20530)
!20549 = !DILocation(line: 929, column: 16, scope: !20530)
!20550 = !DILocation(line: 929, column: 21, scope: !20530)
!20551 = !DILocalVariable(name: "misc", scope: !20530, file: !3, line: 930, type: !159)
!20552 = !DILocation(line: 930, column: 8, scope: !20530)
!20553 = !DILocalVariable(name: "err", scope: !20530, file: !3, line: 931, type: !6)
!20554 = !DILocation(line: 931, column: 6, scope: !20530)
!20555 = !DILocalVariable(name: "i", scope: !20530, file: !3, line: 931, type: !6)
!20556 = !DILocation(line: 931, column: 11, scope: !20530)
!20557 = !DILocation(line: 933, column: 9, scope: !20530)
!20558 = !DILocation(line: 933, column: 7, scope: !20530)
!20559 = !DILocation(line: 934, column: 7, scope: !20560)
!20560 = distinct !DILexicalBlock(scope: !20530, file: !3, line: 934, column: 6)
!20561 = !DILocation(line: 934, column: 6, scope: !20530)
!20562 = !DILocation(line: 935, column: 3, scope: !20560)
!20563 = !DILocation(line: 937, column: 24, scope: !20530)
!20564 = !DILocation(line: 937, column: 29, scope: !20530)
!20565 = !DILocation(line: 937, column: 39, scope: !20530)
!20566 = !DILocation(line: 937, column: 2, scope: !20530)
!20567 = !DILocation(line: 939, column: 19, scope: !20530)
!20568 = !DILocation(line: 939, column: 27, scope: !20530)
!20569 = !DILocation(line: 939, column: 10, scope: !20530)
!20570 = !DILocation(line: 939, column: 8, scope: !20530)
!20571 = !DILocation(line: 940, column: 7, scope: !20572)
!20572 = distinct !DILexicalBlock(scope: !20530, file: !3, line: 940, column: 6)
!20573 = !DILocation(line: 940, column: 6, scope: !20530)
!20574 = !DILocation(line: 941, column: 7, scope: !20575)
!20575 = distinct !DILexicalBlock(scope: !20572, file: !3, line: 940, column: 14)
!20576 = !DILocation(line: 942, column: 3, scope: !20575)
!20577 = !DILocation(line: 945, column: 11, scope: !20530)
!20578 = !DILocation(line: 945, column: 18, scope: !20530)
!20579 = !DILocation(line: 946, column: 9, scope: !20530)
!20580 = !DILocation(line: 946, column: 7, scope: !20530)
!20581 = !DILocation(line: 949, column: 36, scope: !20582)
!20582 = distinct !DILexicalBlock(scope: !20530, file: !3, line: 949, column: 6)
!20583 = !DILocation(line: 949, column: 41, scope: !20582)
!20584 = !DILocation(line: 949, column: 6, scope: !20582)
!20585 = !DILocation(line: 949, column: 6, scope: !20530)
!20586 = !DILocation(line: 950, column: 38, scope: !20587)
!20587 = distinct !DILexicalBlock(scope: !20582, file: !3, line: 949, column: 47)
!20588 = !DILocation(line: 950, column: 43, scope: !20587)
!20589 = !DILocation(line: 950, column: 53, scope: !20587)
!20590 = !DILocation(line: 950, column: 58, scope: !20587)
!20591 = !DILocation(line: 951, column: 10, scope: !20587)
!20592 = !DILocation(line: 950, column: 3, scope: !20587)
!20593 = !DILocation(line: 953, column: 30, scope: !20587)
!20594 = !DILocation(line: 953, column: 35, scope: !20587)
!20595 = !DILocation(line: 953, column: 45, scope: !20587)
!20596 = !DILocation(line: 953, column: 54, scope: !20587)
!20597 = !DILocation(line: 954, column: 9, scope: !20587)
!20598 = !DILocation(line: 953, column: 10, scope: !20587)
!20599 = !DILocation(line: 953, column: 8, scope: !20587)
!20600 = !DILocation(line: 955, column: 14, scope: !20601)
!20601 = distinct !DILexicalBlock(scope: !20587, file: !3, line: 955, column: 7)
!20602 = !DILocation(line: 955, column: 7, scope: !20601)
!20603 = !DILocation(line: 955, column: 7, scope: !20587)
!20604 = !DILocation(line: 956, column: 18, scope: !20605)
!20605 = distinct !DILexicalBlock(scope: !20601, file: !3, line: 955, column: 21)
!20606 = !DILocation(line: 956, column: 10, scope: !20605)
!20607 = !DILocation(line: 956, column: 8, scope: !20605)
!20608 = !DILocation(line: 957, column: 4, scope: !20605)
!20609 = !DILocation(line: 959, column: 26, scope: !20587)
!20610 = !DILocation(line: 959, column: 3, scope: !20587)
!20611 = !DILocation(line: 959, column: 24, scope: !20587)
!20612 = !DILocation(line: 960, column: 2, scope: !20587)
!20613 = !DILocation(line: 962, column: 29, scope: !20614)
!20614 = distinct !DILexicalBlock(scope: !20530, file: !3, line: 962, column: 6)
!20615 = !DILocation(line: 962, column: 34, scope: !20614)
!20616 = !DILocation(line: 962, column: 6, scope: !20614)
!20617 = !DILocation(line: 962, column: 6, scope: !20530)
!20618 = !DILocation(line: 963, column: 3, scope: !20619)
!20619 = distinct !DILexicalBlock(scope: !20614, file: !3, line: 962, column: 40)
!20620 = !DILocalVariable(name: "_v", scope: !20621, file: !3, line: 963, type: !229)
!20621 = distinct !DILexicalBlock(scope: !20619, file: !3, line: 963, column: 3)
!20622 = !DILocation(line: 963, column: 3, scope: !20621)
!20623 = !DILocation(line: 963, column: 3, scope: !20624)
!20624 = distinct !DILexicalBlock(scope: !20621, file: !3, line: 963, column: 3)
!20625 = !DILocation(line: 964, column: 30, scope: !20619)
!20626 = !DILocation(line: 964, column: 35, scope: !20619)
!20627 = !DILocation(line: 964, column: 45, scope: !20619)
!20628 = !DILocation(line: 964, column: 54, scope: !20619)
!20629 = !DILocation(line: 965, column: 9, scope: !20619)
!20630 = !DILocation(line: 964, column: 10, scope: !20619)
!20631 = !DILocation(line: 964, column: 8, scope: !20619)
!20632 = !DILocation(line: 966, column: 14, scope: !20633)
!20633 = distinct !DILexicalBlock(scope: !20619, file: !3, line: 966, column: 7)
!20634 = !DILocation(line: 966, column: 7, scope: !20633)
!20635 = !DILocation(line: 966, column: 7, scope: !20619)
!20636 = !DILocation(line: 967, column: 18, scope: !20637)
!20637 = distinct !DILexicalBlock(scope: !20633, file: !3, line: 966, column: 21)
!20638 = !DILocation(line: 967, column: 10, scope: !20637)
!20639 = !DILocation(line: 967, column: 8, scope: !20637)
!20640 = !DILocation(line: 968, column: 4, scope: !20637)
!20641 = !DILocation(line: 970, column: 39, scope: !20619)
!20642 = !DILocation(line: 970, column: 3, scope: !20619)
!20643 = !DILocation(line: 970, column: 31, scope: !20619)
!20644 = !DILocation(line: 970, column: 9, scope: !20619)
!20645 = !DILocation(line: 970, column: 37, scope: !20619)
!20646 = !DILocation(line: 971, column: 2, scope: !20619)
!20647 = !DILocation(line: 973, column: 2, scope: !20648)
!20648 = distinct !DILexicalBlock(scope: !20530, file: !3, line: 973, column: 2)
!20649 = !DILocation(line: 973, column: 2, scope: !20650)
!20650 = distinct !DILexicalBlock(scope: !20648, file: !3, line: 973, column: 2)
!20651 = !DILocation(line: 974, column: 38, scope: !20652)
!20652 = distinct !DILexicalBlock(scope: !20650, file: !3, line: 973, column: 70)
!20653 = !DILocation(line: 975, column: 10, scope: !20652)
!20654 = !DILocation(line: 975, column: 20, scope: !20652)
!20655 = !DILocation(line: 975, column: 25, scope: !20652)
!20656 = !DILocation(line: 976, column: 10, scope: !20652)
!20657 = !DILocation(line: 976, column: 16, scope: !20652)
!20658 = !DILocation(line: 974, column: 3, scope: !20652)
!20659 = !DILocation(line: 978, column: 30, scope: !20652)
!20660 = !DILocation(line: 978, column: 35, scope: !20652)
!20661 = !DILocation(line: 978, column: 45, scope: !20652)
!20662 = !DILocation(line: 978, column: 54, scope: !20652)
!20663 = !DILocation(line: 979, column: 9, scope: !20652)
!20664 = !DILocation(line: 978, column: 10, scope: !20652)
!20665 = !DILocation(line: 978, column: 8, scope: !20652)
!20666 = !DILocation(line: 980, column: 14, scope: !20667)
!20667 = distinct !DILexicalBlock(scope: !20652, file: !3, line: 980, column: 7)
!20668 = !DILocation(line: 980, column: 7, scope: !20667)
!20669 = !DILocation(line: 980, column: 7, scope: !20652)
!20670 = !DILocation(line: 981, column: 18, scope: !20671)
!20671 = distinct !DILexicalBlock(scope: !20667, file: !3, line: 980, column: 21)
!20672 = !DILocation(line: 981, column: 10, scope: !20671)
!20673 = !DILocation(line: 981, column: 8, scope: !20671)
!20674 = !DILocation(line: 982, column: 4, scope: !20671)
!20675 = !DILocation(line: 984, column: 14, scope: !20652)
!20676 = !DILocation(line: 984, column: 3, scope: !20652)
!20677 = !DILocation(line: 984, column: 9, scope: !20652)
!20678 = !DILocation(line: 984, column: 12, scope: !20652)
!20679 = !DILocation(line: 985, column: 2, scope: !20652)
!20680 = distinct !{!20680, !20647, !20681}
!20681 = !DILocation(line: 985, column: 2, scope: !20648)
!20682 = !DILocation(line: 987, column: 44, scope: !20530)
!20683 = !DILocation(line: 987, column: 2, scope: !20530)
!20684 = !DILocation(line: 987, column: 7, scope: !20530)
!20685 = !DILocation(line: 987, column: 17, scope: !20530)
!20686 = !DILocation(line: 987, column: 26, scope: !20530)
!20687 = !DILocation(line: 987, column: 42, scope: !20530)
!20688 = !DILocation(line: 989, column: 9, scope: !20530)
!20689 = !DILocation(line: 989, column: 2, scope: !20530)
!20690 = !DILocation(line: 990, column: 2, scope: !20530)
!20691 = !DILabel(scope: !20530, name: "add_vf_flow_err", file: !3, line: 992)
!20692 = !DILocation(line: 992, column: 1, scope: !20530)
!20693 = !DILocation(line: 993, column: 12, scope: !20530)
!20694 = !DILocation(line: 993, column: 10, scope: !20530)
!20695 = !DILocation(line: 994, column: 2, scope: !20696)
!20696 = distinct !DILexicalBlock(scope: !20530, file: !3, line: 994, column: 2)
!20697 = !DILocation(line: 994, column: 2, scope: !20698)
!20698 = distinct !DILexicalBlock(scope: !20696, file: !3, line: 994, column: 2)
!20699 = !DILocation(line: 995, column: 23, scope: !20698)
!20700 = !DILocation(line: 995, column: 29, scope: !20698)
!20701 = !DILocation(line: 995, column: 3, scope: !20698)
!20702 = distinct !{!20702, !20695, !20703}
!20703 = !DILocation(line: 995, column: 31, scope: !20696)
!20704 = !DILocation(line: 997, column: 29, scope: !20705)
!20705 = distinct !DILexicalBlock(scope: !20530, file: !3, line: 997, column: 6)
!20706 = !DILocation(line: 997, column: 34, scope: !20705)
!20707 = !DILocation(line: 997, column: 6, scope: !20705)
!20708 = !DILocation(line: 997, column: 6, scope: !20530)
!20709 = !DILocation(line: 998, column: 23, scope: !20705)
!20710 = !DILocation(line: 998, column: 51, scope: !20705)
!20711 = !DILocation(line: 998, column: 29, scope: !20705)
!20712 = !DILocation(line: 998, column: 3, scope: !20705)
!20713 = !DILocation(line: 997, column: 37, scope: !20705)
!20714 = !DILabel(scope: !20530, name: "add_ecpf_flow_err", file: !3, line: 999)
!20715 = !DILocation(line: 999, column: 1, scope: !20530)
!20716 = !DILocation(line: 1000, column: 36, scope: !20717)
!20717 = distinct !DILexicalBlock(scope: !20530, file: !3, line: 1000, column: 6)
!20718 = !DILocation(line: 1000, column: 41, scope: !20717)
!20719 = !DILocation(line: 1000, column: 6, scope: !20717)
!20720 = !DILocation(line: 1000, column: 6, scope: !20530)
!20721 = !DILocation(line: 1001, column: 23, scope: !20717)
!20722 = !DILocation(line: 1001, column: 3, scope: !20717)
!20723 = !DILocation(line: 1000, column: 44, scope: !20717)
!20724 = !DILabel(scope: !20530, name: "add_pf_flow_err", file: !3, line: 1002)
!20725 = !DILocation(line: 1002, column: 1, scope: !20530)
!20726 = !DILocation(line: 1003, column: 2, scope: !20530)
!20727 = !DILocation(line: 1004, column: 9, scope: !20530)
!20728 = !DILocation(line: 1004, column: 2, scope: !20530)
!20729 = !DILabel(scope: !20530, name: "alloc_flows_err", file: !3, line: 1005)
!20730 = !DILocation(line: 1005, column: 1, scope: !20530)
!20731 = !DILocation(line: 1006, column: 9, scope: !20530)
!20732 = !DILocation(line: 1006, column: 2, scope: !20530)
!20733 = !DILocation(line: 1007, column: 9, scope: !20530)
!20734 = !DILocation(line: 1007, column: 2, scope: !20530)
!20735 = !DILocation(line: 1008, column: 1, scope: !20530)
!20736 = distinct !DISubprogram(name: "peer_miss_rules_setup", scope: !3, file: !3, line: 864, type: !20737, scopeLine: 868, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!20737 = !DISubroutineType(types: !20738)
!20738 = !{null, !7, !12, !12595, !16289}
!20739 = !DILocalVariable(name: "esw", arg: 1, scope: !20736, file: !3, line: 864, type: !7)
!20740 = !DILocation(line: 864, column: 56, scope: !20736)
!20741 = !DILocalVariable(name: "peer_dev", arg: 2, scope: !20736, file: !3, line: 865, type: !12)
!20742 = !DILocation(line: 865, column: 29, scope: !20736)
!20743 = !DILocalVariable(name: "spec", arg: 3, scope: !20736, file: !3, line: 866, type: !12595)
!20744 = !DILocation(line: 866, column: 30, scope: !20736)
!20745 = !DILocalVariable(name: "dest", arg: 4, scope: !20736, file: !3, line: 867, type: !16289)
!20746 = !DILocation(line: 867, column: 37, scope: !20736)
!20747 = !DILocalVariable(name: "misc", scope: !20736, file: !3, line: 869, type: !159)
!20748 = !DILocation(line: 869, column: 8, scope: !20736)
!20749 = !DILocation(line: 871, column: 48, scope: !20750)
!20750 = distinct !DILexicalBlock(scope: !20736, file: !3, line: 871, column: 6)
!20751 = !DILocation(line: 871, column: 6, scope: !20750)
!20752 = !DILocation(line: 871, column: 6, scope: !20736)
!20753 = !DILocation(line: 872, column: 10, scope: !20754)
!20754 = distinct !DILexicalBlock(scope: !20750, file: !3, line: 871, column: 54)
!20755 = !DILocation(line: 872, column: 8, scope: !20754)
!20756 = !DILocation(line: 874, column: 3, scope: !20754)
!20757 = !DILocalVariable(name: "_v", scope: !20758, file: !3, line: 874, type: !229)
!20758 = distinct !DILexicalBlock(scope: !20754, file: !3, line: 874, column: 3)
!20759 = !DILocation(line: 874, column: 3, scope: !20758)
!20760 = !DILocation(line: 874, column: 3, scope: !20761)
!20761 = distinct !DILexicalBlock(scope: !20758, file: !3, line: 874, column: 3)
!20762 = !DILocation(line: 877, column: 3, scope: !20754)
!20763 = !DILocation(line: 877, column: 9, scope: !20754)
!20764 = !DILocation(line: 877, column: 31, scope: !20754)
!20765 = !DILocation(line: 878, column: 2, scope: !20754)
!20766 = !DILocation(line: 879, column: 10, scope: !20767)
!20767 = distinct !DILexicalBlock(scope: !20750, file: !3, line: 878, column: 9)
!20768 = !DILocation(line: 879, column: 8, scope: !20767)
!20769 = !DILocation(line: 882, column: 3, scope: !20767)
!20770 = !DILocalVariable(name: "_v", scope: !20771, file: !3, line: 882, type: !229)
!20771 = distinct !DILexicalBlock(scope: !20767, file: !3, line: 882, column: 3)
!20772 = !DILocation(line: 882, column: 3, scope: !20771)
!20773 = !DILocation(line: 882, column: 3, scope: !20774)
!20774 = distinct !DILexicalBlock(scope: !20771, file: !3, line: 882, column: 3)
!20775 = !DILocation(line: 885, column: 3, scope: !20767)
!20776 = !DILocation(line: 885, column: 9, scope: !20767)
!20777 = !DILocation(line: 885, column: 31, scope: !20767)
!20778 = !DILocation(line: 887, column: 10, scope: !20767)
!20779 = !DILocation(line: 887, column: 8, scope: !20767)
!20780 = !DILocation(line: 889, column: 3, scope: !20767)
!20781 = !DILocation(line: 889, column: 3, scope: !20782)
!20782 = distinct !DILexicalBlock(scope: !20767, file: !3, line: 889, column: 3)
!20783 = !DILocation(line: 889, column: 3, scope: !20784)
!20784 = distinct !DILexicalBlock(scope: !20782, file: !3, line: 889, column: 3)
!20785 = !DILocation(line: 890, column: 3, scope: !20767)
!20786 = !DILocation(line: 890, column: 3, scope: !20787)
!20787 = distinct !DILexicalBlock(scope: !20767, file: !3, line: 890, column: 3)
!20788 = !DILocation(line: 890, column: 3, scope: !20789)
!20789 = distinct !DILexicalBlock(scope: !20787, file: !3, line: 890, column: 3)
!20790 = !DILocation(line: 894, column: 2, scope: !20736)
!20791 = !DILocation(line: 894, column: 8, scope: !20736)
!20792 = !DILocation(line: 894, column: 13, scope: !20736)
!20793 = !DILocation(line: 895, column: 20, scope: !20736)
!20794 = !DILocation(line: 895, column: 30, scope: !20736)
!20795 = !DILocation(line: 895, column: 35, scope: !20736)
!20796 = !DILocation(line: 895, column: 44, scope: !20736)
!20797 = !DILocation(line: 895, column: 2, scope: !20736)
!20798 = !DILocation(line: 895, column: 8, scope: !20736)
!20799 = !DILocation(line: 895, column: 14, scope: !20736)
!20800 = !DILocation(line: 895, column: 18, scope: !20736)
!20801 = !DILocation(line: 896, column: 24, scope: !20736)
!20802 = !DILocation(line: 896, column: 2, scope: !20736)
!20803 = !DILocation(line: 896, column: 8, scope: !20736)
!20804 = !DILocation(line: 896, column: 14, scope: !20736)
!20805 = !DILocation(line: 896, column: 22, scope: !20736)
!20806 = !DILocation(line: 897, column: 2, scope: !20736)
!20807 = !DILocation(line: 897, column: 8, scope: !20736)
!20808 = !DILocation(line: 897, column: 14, scope: !20736)
!20809 = !DILocation(line: 897, column: 20, scope: !20736)
!20810 = !DILocation(line: 898, column: 1, scope: !20736)
!20811 = distinct !DISubprogram(name: "esw_set_peer_miss_rule_source_port", scope: !3, file: !3, line: 900, type: !20812, scopeLine: 904, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!20812 = !DISubroutineType(types: !20813)
!20813 = !{null, !7, !7, !12595, !744}
!20814 = !DILocalVariable(name: "esw", arg: 1, scope: !20811, file: !3, line: 900, type: !7)
!20815 = !DILocation(line: 900, column: 69, scope: !20811)
!20816 = !DILocalVariable(name: "peer_esw", arg: 2, scope: !20811, file: !3, line: 901, type: !7)
!20817 = !DILocation(line: 901, column: 34, scope: !20811)
!20818 = !DILocalVariable(name: "spec", arg: 3, scope: !20811, file: !3, line: 902, type: !12595)
!20819 = !DILocation(line: 902, column: 36, scope: !20811)
!20820 = !DILocalVariable(name: "vport", arg: 4, scope: !20811, file: !3, line: 903, type: !744)
!20821 = !DILocation(line: 903, column: 17, scope: !20811)
!20822 = !DILocalVariable(name: "misc", scope: !20811, file: !3, line: 905, type: !159)
!20823 = !DILocation(line: 905, column: 8, scope: !20811)
!20824 = !DILocation(line: 907, column: 48, scope: !20825)
!20825 = distinct !DILexicalBlock(scope: !20811, file: !3, line: 907, column: 6)
!20826 = !DILocation(line: 907, column: 6, scope: !20825)
!20827 = !DILocation(line: 907, column: 6, scope: !20811)
!20828 = !DILocation(line: 908, column: 10, scope: !20829)
!20829 = distinct !DILexicalBlock(scope: !20825, file: !3, line: 907, column: 54)
!20830 = !DILocation(line: 908, column: 8, scope: !20829)
!20831 = !DILocation(line: 910, column: 3, scope: !20829)
!20832 = !DILocalVariable(name: "_v", scope: !20833, file: !3, line: 910, type: !229)
!20833 = distinct !DILexicalBlock(scope: !20829, file: !3, line: 910, column: 3)
!20834 = !DILocation(line: 910, column: 3, scope: !20833)
!20835 = !DILocation(line: 910, column: 3, scope: !20836)
!20836 = distinct !DILexicalBlock(scope: !20833, file: !3, line: 910, column: 3)
!20837 = !DILocation(line: 913, column: 2, scope: !20829)
!20838 = !DILocation(line: 914, column: 10, scope: !20839)
!20839 = distinct !DILexicalBlock(scope: !20825, file: !3, line: 913, column: 9)
!20840 = !DILocation(line: 914, column: 8, scope: !20839)
!20841 = !DILocation(line: 916, column: 3, scope: !20839)
!20842 = !DILocalVariable(name: "_v", scope: !20843, file: !3, line: 916, type: !229)
!20843 = distinct !DILexicalBlock(scope: !20839, file: !3, line: 916, column: 3)
!20844 = !DILocation(line: 916, column: 3, scope: !20843)
!20845 = !DILocation(line: 916, column: 3, scope: !20846)
!20846 = distinct !DILexicalBlock(scope: !20843, file: !3, line: 916, column: 3)
!20847 = !DILocation(line: 918, column: 1, scope: !20811)
!20848 = distinct !DISubprogram(name: "mlx5_core_max_vfs", scope: !14, file: !14, line: 1156, type: !20849, scopeLine: 1157, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!20849 = !DISubroutineType(types: !20850)
!20850 = !{!744, !19761}
!20851 = !DILocalVariable(name: "dev", arg: 1, scope: !20848, file: !14, line: 1156, type: !19761)
!20852 = !DILocation(line: 1156, column: 65, scope: !20848)
!20853 = !DILocation(line: 1158, column: 9, scope: !20848)
!20854 = !DILocation(line: 1158, column: 14, scope: !20848)
!20855 = !DILocation(line: 1158, column: 19, scope: !20848)
!20856 = !DILocation(line: 1158, column: 25, scope: !20848)
!20857 = !DILocation(line: 1158, column: 2, scope: !20848)
!20858 = distinct !DISubprogram(name: "esw_del_fdb_peer_miss_rules", scope: !3, file: !3, line: 1010, type: !12306, scopeLine: 1011, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!20859 = !DILocalVariable(name: "esw", arg: 1, scope: !20858, file: !3, line: 1010, type: !7)
!20860 = !DILocation(line: 1010, column: 62, scope: !20858)
!20861 = !DILocalVariable(name: "flows", scope: !20858, file: !3, line: 1012, type: !11273)
!20862 = !DILocation(line: 1012, column: 28, scope: !20858)
!20863 = !DILocalVariable(name: "i", scope: !20858, file: !3, line: 1013, type: !6)
!20864 = !DILocation(line: 1013, column: 6, scope: !20858)
!20865 = !DILocation(line: 1015, column: 10, scope: !20858)
!20866 = !DILocation(line: 1015, column: 15, scope: !20858)
!20867 = !DILocation(line: 1015, column: 25, scope: !20858)
!20868 = !DILocation(line: 1015, column: 34, scope: !20858)
!20869 = !DILocation(line: 1015, column: 8, scope: !20858)
!20870 = !DILocation(line: 1017, column: 2, scope: !20871)
!20871 = distinct !DILexicalBlock(scope: !20858, file: !3, line: 1017, column: 2)
!20872 = !DILocation(line: 1017, column: 2, scope: !20873)
!20873 = distinct !DILexicalBlock(scope: !20871, file: !3, line: 1017, column: 2)
!20874 = !DILocation(line: 1019, column: 23, scope: !20873)
!20875 = !DILocation(line: 1019, column: 29, scope: !20873)
!20876 = !DILocation(line: 1019, column: 3, scope: !20873)
!20877 = distinct !{!20877, !20870, !20878}
!20878 = !DILocation(line: 1019, column: 31, scope: !20871)
!20879 = !DILocation(line: 1021, column: 29, scope: !20880)
!20880 = distinct !DILexicalBlock(scope: !20858, file: !3, line: 1021, column: 6)
!20881 = !DILocation(line: 1021, column: 34, scope: !20880)
!20882 = !DILocation(line: 1021, column: 6, scope: !20880)
!20883 = !DILocation(line: 1021, column: 6, scope: !20858)
!20884 = !DILocation(line: 1022, column: 23, scope: !20880)
!20885 = !DILocation(line: 1022, column: 51, scope: !20880)
!20886 = !DILocation(line: 1022, column: 29, scope: !20880)
!20887 = !DILocation(line: 1022, column: 3, scope: !20880)
!20888 = !DILocation(line: 1024, column: 36, scope: !20889)
!20889 = distinct !DILexicalBlock(scope: !20858, file: !3, line: 1024, column: 6)
!20890 = !DILocation(line: 1024, column: 41, scope: !20889)
!20891 = !DILocation(line: 1024, column: 6, scope: !20889)
!20892 = !DILocation(line: 1024, column: 6, scope: !20858)
!20893 = !DILocation(line: 1025, column: 23, scope: !20889)
!20894 = !DILocation(line: 1025, column: 3, scope: !20889)
!20895 = !DILocation(line: 1027, column: 9, scope: !20858)
!20896 = !DILocation(line: 1027, column: 2, scope: !20858)
!20897 = !DILocation(line: 1028, column: 1, scope: !20858)
!20898 = distinct !DISubprogram(name: "esw_destroy_vport_rx_group", scope: !3, file: !3, line: 1542, type: !12306, scopeLine: 1543, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!20899 = !DILocalVariable(name: "esw", arg: 1, scope: !20898, file: !3, line: 1542, type: !7)
!20900 = !DILocation(line: 1542, column: 61, scope: !20898)
!20901 = !DILocation(line: 1544, column: 26, scope: !20898)
!20902 = !DILocation(line: 1544, column: 31, scope: !20898)
!20903 = !DILocation(line: 1544, column: 40, scope: !20898)
!20904 = !DILocation(line: 1544, column: 2, scope: !20898)
!20905 = !DILocation(line: 1545, column: 1, scope: !20898)
!20906 = distinct !DISubprogram(name: "esw_offloads_vport_metadata_cleanup", scope: !3, file: !3, line: 2084, type: !16885, scopeLine: 2086, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!20907 = !DILocalVariable(name: "esw", arg: 1, scope: !20906, file: !3, line: 2084, type: !7)
!20908 = !DILocation(line: 2084, column: 70, scope: !20906)
!20909 = !DILocalVariable(name: "vport", arg: 2, scope: !20906, file: !3, line: 2085, type: !11306)
!20910 = !DILocation(line: 2085, column: 26, scope: !20906)
!20911 = !DILocation(line: 2087, column: 7, scope: !20912)
!20912 = distinct !DILexicalBlock(scope: !20906, file: !3, line: 2087, column: 6)
!20913 = !DILocation(line: 2087, column: 14, scope: !20912)
!20914 = !DILocation(line: 2087, column: 6, scope: !20906)
!20915 = !DILocation(line: 2088, column: 3, scope: !20912)
!20916 = !DILocalVariable(name: "__ret_warn_on", scope: !20917, file: !3, line: 2090, type: !6)
!20917 = distinct !DILexicalBlock(scope: !20906, file: !3, line: 2090, column: 2)
!20918 = !DILocation(line: 2090, column: 2, scope: !20917)
!20919 = !DILocation(line: 2090, column: 2, scope: !20920)
!20920 = distinct !DILexicalBlock(scope: !20917, file: !3, line: 2090, column: 2)
!20921 = !DILocation(line: 2090, column: 2, scope: !20922)
!20922 = distinct !DILexicalBlock(scope: !20920, file: !3, line: 2090, column: 2)
!20923 = !DILocation(line: 2090, column: 2, scope: !20924)
!20924 = distinct !DILexicalBlock(scope: !20922, file: !3, line: 2090, column: 2)
!20925 = !DILocation(line: 2090, column: 2, scope: !20926)
!20926 = distinct !DILexicalBlock(scope: !20922, file: !3, line: 2090, column: 2)
!20927 = !{i32 -2134423915, i32 -2134423886, i32 -2134423840, i32 -2134423782, i32 -2134423728, i32 -2134423674, i32 -2134423619, i32 -2134423588}
!20928 = !DILocation(line: 2090, column: 2, scope: !20929)
!20929 = distinct !DILexicalBlock(scope: !20922, file: !3, line: 2090, column: 2)
!20930 = !{i32 -2134423147, i32 -2134423140, i32 -2134423088, i32 -2134423057, i32 -2134423027}
!20931 = !DILocation(line: 2090, column: 2, scope: !20932)
!20932 = distinct !DILexicalBlock(scope: !20922, file: !3, line: 2090, column: 2)
!20933 = !DILocation(line: 2091, column: 31, scope: !20906)
!20934 = !DILocation(line: 2091, column: 36, scope: !20906)
!20935 = !DILocation(line: 2091, column: 43, scope: !20906)
!20936 = !DILocation(line: 2091, column: 2, scope: !20906)
!20937 = !DILocation(line: 2092, column: 1, scope: !20906)
!20938 = distinct !DISubprogram(name: "mlx5_eswitch_inline_mode_get", scope: !3, file: !3, line: 1596, type: !20939, scopeLine: 1597, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!20939 = !DISubroutineType(types: !20940)
!20940 = !{!6, !16383, !2747}
!20941 = !DILocalVariable(name: "esw", arg: 1, scope: !20938, file: !3, line: 1596, type: !16383)
!20942 = !DILocation(line: 1596, column: 68, scope: !20938)
!20943 = !DILocalVariable(name: "mode", arg: 2, scope: !20938, file: !3, line: 1596, type: !2747)
!20944 = !DILocation(line: 1596, column: 77, scope: !20938)
!20945 = !DILocalVariable(name: "prev_mlx5_mode", scope: !20938, file: !3, line: 1598, type: !1403)
!20946 = !DILocation(line: 1598, column: 5, scope: !20938)
!20947 = !DILocalVariable(name: "mlx5_mode", scope: !20938, file: !3, line: 1598, type: !1403)
!20948 = !DILocation(line: 1598, column: 21, scope: !20938)
!20949 = !DILocalVariable(name: "dev", scope: !20938, file: !3, line: 1599, type: !12)
!20950 = !DILocation(line: 1599, column: 24, scope: !20938)
!20951 = !DILocation(line: 1599, column: 30, scope: !20938)
!20952 = !DILocation(line: 1599, column: 35, scope: !20938)
!20953 = !DILocalVariable(name: "vport", scope: !20938, file: !3, line: 1600, type: !6)
!20954 = !DILocation(line: 1600, column: 6, scope: !20938)
!20955 = !DILocation(line: 1602, column: 7, scope: !20956)
!20956 = distinct !DILexicalBlock(scope: !20938, file: !3, line: 1602, column: 6)
!20957 = !DILocation(line: 1602, column: 6, scope: !20938)
!20958 = !DILocation(line: 1603, column: 3, scope: !20956)
!20959 = !DILocation(line: 1605, column: 6, scope: !20960)
!20960 = distinct !DILexicalBlock(scope: !20938, file: !3, line: 1605, column: 6)
!20961 = !DILocation(line: 1605, column: 11, scope: !20960)
!20962 = !DILocation(line: 1605, column: 16, scope: !20960)
!20963 = !DILocation(line: 1605, column: 6, scope: !20938)
!20964 = !DILocation(line: 1606, column: 3, scope: !20960)
!20965 = !DILocation(line: 1608, column: 10, scope: !20938)
!20966 = !DILocation(line: 1608, column: 2, scope: !20938)
!20967 = !DILocation(line: 1610, column: 13, scope: !20968)
!20968 = distinct !DILexicalBlock(scope: !20938, file: !3, line: 1608, column: 46)
!20969 = !DILocation(line: 1611, column: 3, scope: !20968)
!20970 = !DILocation(line: 1613, column: 13, scope: !20968)
!20971 = !DILocation(line: 1614, column: 3, scope: !20968)
!20972 = !DILocation(line: 1616, column: 3, scope: !20968)
!20973 = !DILocation(line: 1617, column: 2, scope: !20968)
!20974 = !DILabel(scope: !20938, name: "query_vports", file: !3, line: 1619)
!20975 = !DILocation(line: 1619, column: 1, scope: !20938)
!20976 = !DILocation(line: 1620, column: 34, scope: !20938)
!20977 = !DILocation(line: 1620, column: 39, scope: !20938)
!20978 = !DILocation(line: 1620, column: 44, scope: !20938)
!20979 = !DILocation(line: 1620, column: 2, scope: !20938)
!20980 = !DILocation(line: 1621, column: 2, scope: !20981)
!20981 = distinct !DILexicalBlock(scope: !20938, file: !3, line: 1621, column: 2)
!20982 = !DILocation(line: 1621, column: 2, scope: !20983)
!20983 = distinct !DILexicalBlock(scope: !20981, file: !3, line: 1621, column: 2)
!20984 = !DILocation(line: 1622, column: 35, scope: !20985)
!20985 = distinct !DILexicalBlock(scope: !20983, file: !3, line: 1621, column: 72)
!20986 = !DILocation(line: 1622, column: 40, scope: !20985)
!20987 = !DILocation(line: 1622, column: 3, scope: !20985)
!20988 = !DILocation(line: 1623, column: 7, scope: !20989)
!20989 = distinct !DILexicalBlock(scope: !20985, file: !3, line: 1623, column: 7)
!20990 = !DILocation(line: 1623, column: 25, scope: !20989)
!20991 = !DILocation(line: 1623, column: 22, scope: !20989)
!20992 = !DILocation(line: 1623, column: 7, scope: !20985)
!20993 = !DILocation(line: 1624, column: 4, scope: !20989)
!20994 = !DILocation(line: 1625, column: 20, scope: !20985)
!20995 = !DILocation(line: 1625, column: 18, scope: !20985)
!20996 = !DILocation(line: 1626, column: 2, scope: !20985)
!20997 = distinct !{!20997, !20980, !20998}
!20998 = !DILocation(line: 1626, column: 2, scope: !20981)
!20999 = !DILabel(scope: !20938, name: "out", file: !3, line: 1628)
!21000 = !DILocation(line: 1628, column: 1, scope: !20938)
!21001 = !DILocation(line: 1629, column: 10, scope: !20938)
!21002 = !DILocation(line: 1629, column: 3, scope: !20938)
!21003 = !DILocation(line: 1629, column: 8, scope: !20938)
!21004 = !DILocation(line: 1630, column: 2, scope: !20938)
!21005 = !DILocation(line: 1631, column: 1, scope: !20938)
!21006 = distinct !DISubprogram(name: "arch_atomic64_read", scope: !12679, file: !12679, line: 20, type: !17818, scopeLine: 21, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!21007 = !DILocalVariable(name: "v", arg: 1, scope: !21006, file: !12679, line: 20, type: !17820)
!21008 = !DILocation(line: 20, column: 56, scope: !21006)
!21009 = !DILocation(line: 22, column: 9, scope: !21006)
!21010 = !DILocation(line: 22, column: 2, scope: !21006)
!21011 = distinct !DISubprogram(name: "kasan_check_read", scope: !19416, file: !19416, line: 34, type: !19417, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!21012 = !DILocalVariable(name: "p", arg: 1, scope: !21011, file: !19416, line: 34, type: !12694)
!21013 = !DILocation(line: 34, column: 58, scope: !21011)
!21014 = !DILocalVariable(name: "size", arg: 2, scope: !21011, file: !19416, line: 34, type: !199)
!21015 = !DILocation(line: 34, column: 74, scope: !21011)
!21016 = !DILocation(line: 36, column: 2, scope: !21011)
!21017 = distinct !DISubprogram(name: "esw_chains_destroy", scope: !3, file: !3, line: 1286, type: !21018, scopeLine: 1287, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!21018 = !DISubroutineType(types: !21019)
!21019 = !{null, !7, !11279}
!21020 = !DILocalVariable(name: "esw", arg: 1, scope: !21017, file: !3, line: 1286, type: !7)
!21021 = !DILocation(line: 1286, column: 41, scope: !21017)
!21022 = !DILocalVariable(name: "chains", arg: 2, scope: !21017, file: !3, line: 1286, type: !11279)
!21023 = !DILocation(line: 1286, column: 69, scope: !21017)
!21024 = !DILocation(line: 1287, column: 2, scope: !21017)
!21025 = distinct !DISubprogram(name: "esw_chains_create", scope: !3, file: !3, line: 1282, type: !21026, scopeLine: 1283, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!21026 = !DISubroutineType(types: !21027)
!21027 = !{!6, !7, !10734}
!21028 = !DILocalVariable(name: "esw", arg: 1, scope: !21025, file: !3, line: 1282, type: !7)
!21029 = !DILocation(line: 1282, column: 40, scope: !21025)
!21030 = !DILocalVariable(name: "miss_fdb", arg: 2, scope: !21025, file: !3, line: 1282, type: !10734)
!21031 = !DILocation(line: 1282, column: 69, scope: !21025)
!21032 = !DILocation(line: 1283, column: 3, scope: !21025)
!21033 = distinct !DISubprogram(name: "esw_add_fdb_miss_rule", scope: !3, file: !3, line: 1030, type: !4, scopeLine: 1031, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!21034 = !DILocalVariable(name: "esw", arg: 1, scope: !21033, file: !3, line: 1030, type: !7)
!21035 = !DILocation(line: 1030, column: 55, scope: !21033)
!21036 = !DILocalVariable(name: "flow_act", scope: !21033, file: !3, line: 1032, type: !12713)
!21037 = !DILocation(line: 1032, column: 23, scope: !21033)
!21038 = !DILocalVariable(name: "dest", scope: !21033, file: !3, line: 1033, type: !10876)
!21039 = !DILocation(line: 1033, column: 31, scope: !21033)
!21040 = !DILocalVariable(name: "flow_rule", scope: !21033, file: !3, line: 1034, type: !10864)
!21041 = !DILocation(line: 1034, column: 27, scope: !21033)
!21042 = !DILocalVariable(name: "spec", scope: !21033, file: !3, line: 1035, type: !12595)
!21043 = !DILocation(line: 1035, column: 25, scope: !21033)
!21044 = !DILocalVariable(name: "headers_c", scope: !21033, file: !3, line: 1036, type: !159)
!21045 = !DILocation(line: 1036, column: 8, scope: !21033)
!21046 = !DILocalVariable(name: "headers_v", scope: !21033, file: !3, line: 1037, type: !159)
!21047 = !DILocation(line: 1037, column: 8, scope: !21033)
!21048 = !DILocalVariable(name: "err", scope: !21033, file: !3, line: 1038, type: !6)
!21049 = !DILocation(line: 1038, column: 6, scope: !21033)
!21050 = !DILocalVariable(name: "dmac_c", scope: !21033, file: !3, line: 1039, type: !2747)
!21051 = !DILocation(line: 1039, column: 6, scope: !21033)
!21052 = !DILocalVariable(name: "dmac_v", scope: !21033, file: !3, line: 1040, type: !2747)
!21053 = !DILocation(line: 1040, column: 6, scope: !21033)
!21054 = !DILocation(line: 1042, column: 9, scope: !21033)
!21055 = !DILocation(line: 1042, column: 7, scope: !21033)
!21056 = !DILocation(line: 1043, column: 7, scope: !21057)
!21057 = distinct !DILexicalBlock(scope: !21033, file: !3, line: 1043, column: 6)
!21058 = !DILocation(line: 1043, column: 6, scope: !21033)
!21059 = !DILocation(line: 1044, column: 7, scope: !21060)
!21060 = distinct !DILexicalBlock(scope: !21057, file: !3, line: 1043, column: 13)
!21061 = !DILocation(line: 1045, column: 3, scope: !21060)
!21062 = !DILocation(line: 1048, column: 2, scope: !21033)
!21063 = !DILocation(line: 1048, column: 8, scope: !21033)
!21064 = !DILocation(line: 1048, column: 30, scope: !21033)
!21065 = !DILocation(line: 1049, column: 14, scope: !21033)
!21066 = !DILocation(line: 1049, column: 12, scope: !21033)
!21067 = !DILocation(line: 1051, column: 11, scope: !21033)
!21068 = !DILocation(line: 1051, column: 9, scope: !21033)
!21069 = !DILocation(line: 1053, column: 2, scope: !21033)
!21070 = !DILocation(line: 1053, column: 12, scope: !21033)
!21071 = !DILocation(line: 1055, column: 7, scope: !21033)
!21072 = !DILocation(line: 1055, column: 12, scope: !21033)
!21073 = !DILocation(line: 1056, column: 19, scope: !21033)
!21074 = !DILocation(line: 1056, column: 24, scope: !21033)
!21075 = !DILocation(line: 1056, column: 7, scope: !21033)
!21076 = !DILocation(line: 1056, column: 13, scope: !21033)
!21077 = !DILocation(line: 1056, column: 17, scope: !21033)
!21078 = !DILocation(line: 1057, column: 11, scope: !21033)
!21079 = !DILocation(line: 1057, column: 18, scope: !21033)
!21080 = !DILocation(line: 1059, column: 34, scope: !21033)
!21081 = !DILocation(line: 1059, column: 39, scope: !21033)
!21082 = !DILocation(line: 1059, column: 49, scope: !21033)
!21083 = !DILocation(line: 1059, column: 58, scope: !21033)
!21084 = !DILocation(line: 1060, column: 6, scope: !21033)
!21085 = !DILocation(line: 1059, column: 14, scope: !21033)
!21086 = !DILocation(line: 1059, column: 12, scope: !21033)
!21087 = !DILocation(line: 1061, column: 13, scope: !21088)
!21088 = distinct !DILexicalBlock(scope: !21033, file: !3, line: 1061, column: 6)
!21089 = !DILocation(line: 1061, column: 6, scope: !21088)
!21090 = !DILocation(line: 1061, column: 6, scope: !21033)
!21091 = !DILocation(line: 1062, column: 17, scope: !21092)
!21092 = distinct !DILexicalBlock(scope: !21088, file: !3, line: 1061, column: 25)
!21093 = !DILocation(line: 1062, column: 9, scope: !21092)
!21094 = !DILocation(line: 1062, column: 7, scope: !21092)
!21095 = !DILocation(line: 1063, column: 3, scope: !21092)
!21096 = !DILocation(line: 1064, column: 3, scope: !21092)
!21097 = !DILocation(line: 1067, column: 42, scope: !21033)
!21098 = !DILocation(line: 1067, column: 2, scope: !21033)
!21099 = !DILocation(line: 1067, column: 7, scope: !21033)
!21100 = !DILocation(line: 1067, column: 17, scope: !21033)
!21101 = !DILocation(line: 1067, column: 26, scope: !21033)
!21102 = !DILocation(line: 1067, column: 40, scope: !21033)
!21103 = !DILocation(line: 1069, column: 14, scope: !21033)
!21104 = !DILocation(line: 1069, column: 12, scope: !21033)
!21105 = !DILocation(line: 1071, column: 11, scope: !21033)
!21106 = !DILocation(line: 1071, column: 9, scope: !21033)
!21107 = !DILocation(line: 1073, column: 2, scope: !21033)
!21108 = !DILocation(line: 1073, column: 12, scope: !21033)
!21109 = !DILocation(line: 1074, column: 34, scope: !21033)
!21110 = !DILocation(line: 1074, column: 39, scope: !21033)
!21111 = !DILocation(line: 1074, column: 49, scope: !21033)
!21112 = !DILocation(line: 1074, column: 58, scope: !21033)
!21113 = !DILocation(line: 1075, column: 6, scope: !21033)
!21114 = !DILocation(line: 1074, column: 14, scope: !21033)
!21115 = !DILocation(line: 1074, column: 12, scope: !21033)
!21116 = !DILocation(line: 1076, column: 13, scope: !21117)
!21117 = distinct !DILexicalBlock(scope: !21033, file: !3, line: 1076, column: 6)
!21118 = !DILocation(line: 1076, column: 6, scope: !21117)
!21119 = !DILocation(line: 1076, column: 6, scope: !21033)
!21120 = !DILocation(line: 1077, column: 17, scope: !21121)
!21121 = distinct !DILexicalBlock(scope: !21117, file: !3, line: 1076, column: 25)
!21122 = !DILocation(line: 1077, column: 9, scope: !21121)
!21123 = !DILocation(line: 1077, column: 7, scope: !21121)
!21124 = !DILocation(line: 1078, column: 3, scope: !21121)
!21125 = !DILocation(line: 1079, column: 23, scope: !21121)
!21126 = !DILocation(line: 1079, column: 28, scope: !21121)
!21127 = !DILocation(line: 1079, column: 38, scope: !21121)
!21128 = !DILocation(line: 1079, column: 47, scope: !21121)
!21129 = !DILocation(line: 1079, column: 3, scope: !21121)
!21130 = !DILocation(line: 1080, column: 3, scope: !21121)
!21131 = !DILocation(line: 1083, column: 44, scope: !21033)
!21132 = !DILocation(line: 1083, column: 2, scope: !21033)
!21133 = !DILocation(line: 1083, column: 7, scope: !21033)
!21134 = !DILocation(line: 1083, column: 17, scope: !21033)
!21135 = !DILocation(line: 1083, column: 26, scope: !21033)
!21136 = !DILocation(line: 1083, column: 42, scope: !21033)
!21137 = !DILabel(scope: !21033, name: "out", file: !3, line: 1085)
!21138 = !DILocation(line: 1085, column: 1, scope: !21033)
!21139 = !DILocation(line: 1086, column: 9, scope: !21033)
!21140 = !DILocation(line: 1086, column: 2, scope: !21033)
!21141 = !DILocation(line: 1087, column: 9, scope: !21033)
!21142 = !DILocation(line: 1087, column: 2, scope: !21033)
!21143 = distinct !DISubprogram(name: "mlx5_eswitch_vport_num_to_index", scope: !9, file: !9, line: 518, type: !16578, scopeLine: 520, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !11477, retainedNodes: !58)
!21144 = !DILocalVariable(name: "esw", arg: 1, scope: !21143, file: !9, line: 518, type: !7)
!21145 = !DILocation(line: 518, column: 72, scope: !21143)
!21146 = !DILocalVariable(name: "vport_num", arg: 2, scope: !21143, file: !9, line: 519, type: !744)
!21147 = !DILocation(line: 519, column: 13, scope: !21143)
!21148 = !DILocation(line: 521, column: 6, scope: !21149)
!21149 = distinct !DILexicalBlock(scope: !21143, file: !9, line: 521, column: 6)
!21150 = !DILocation(line: 521, column: 16, scope: !21149)
!21151 = !DILocation(line: 521, column: 6, scope: !21143)
!21152 = !DILocation(line: 522, column: 31, scope: !21153)
!21153 = distinct !DILexicalBlock(scope: !21154, file: !9, line: 522, column: 7)
!21154 = distinct !DILexicalBlock(scope: !21149, file: !9, line: 521, column: 36)
!21155 = !DILocation(line: 522, column: 36, scope: !21153)
!21156 = !DILocation(line: 522, column: 8, scope: !21153)
!21157 = !DILocation(line: 522, column: 7, scope: !21154)
!21158 = !DILocation(line: 523, column: 4, scope: !21153)
!21159 = !DILocation(line: 524, column: 32, scope: !21154)
!21160 = !DILocation(line: 524, column: 10, scope: !21154)
!21161 = !DILocation(line: 524, column: 3, scope: !21154)
!21162 = !DILocation(line: 527, column: 6, scope: !21163)
!21163 = distinct !DILexicalBlock(scope: !21143, file: !9, line: 527, column: 6)
!21164 = !DILocation(line: 527, column: 16, scope: !21163)
!21165 = !DILocation(line: 527, column: 6, scope: !21143)
!21166 = !DILocation(line: 528, column: 34, scope: !21163)
!21167 = !DILocation(line: 528, column: 10, scope: !21163)
!21168 = !DILocation(line: 528, column: 3, scope: !21163)
!21169 = !DILocation(line: 530, column: 9, scope: !21143)
!21170 = !DILocation(line: 530, column: 2, scope: !21143)
!21171 = !DILocation(line: 531, column: 1, scope: !21143)
