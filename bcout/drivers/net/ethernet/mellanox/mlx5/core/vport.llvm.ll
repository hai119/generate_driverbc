; ModuleID = '../bcout/drivers/net/ethernet/mellanox/mlx5/core/vport.llvm.bc'
source_filename = "drivers/net/ethernet/mellanox/mlx5/core/vport.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64"

%struct.mutex = type { %struct.atomic64_t, %struct.spinlock, %struct.list_head }
%struct.atomic64_t = type { i64 }
%struct.spinlock = type { %union.anon.1 }
%union.anon.1 = type { %struct.raw_spinlock }
%struct.raw_spinlock = type { %struct.arch_spinlock_t }
%struct.arch_spinlock_t = type {}
%struct.list_head = type { %struct.list_head*, %struct.list_head* }
%struct.task_struct = type { %struct.thread_info, i64, i8*, %struct.refcount_struct, i32, i32, i32, i32, i32, i32, i32, %struct.sched_class*, %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, i32, i32, %struct.cpumask*, %struct.cpumask, %struct.sched_info, %struct.list_head, %struct.mm_struct*, %struct.mm_struct*, %struct.vmacache, i32, i32, i32, i32, i64, i32, i8, [3 x i8], i8, i64, %struct.restart_block, i32, i32, i64, %struct.task_struct*, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.pid*, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, %struct.completion*, i32*, i32*, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, %struct.posix_cputimers, %struct.posix_cputimers_work, %struct.cred*, %struct.cred*, %struct.cred*, %struct.key*, [16 x i8], %struct.nameidata*, %struct.fs_struct*, %struct.files_struct*, %struct.io_uring_task*, %struct.nsproxy*, %struct.signal_struct*, %struct.sighand_struct*, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i64, i64, i32, %struct.callback_head*, %struct.seccomp, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, %struct.task_struct*, %struct.rt_mutex_waiter*, i8*, %struct.bio_list*, %struct.blk_plug*, %struct.reclaim_state*, %struct.backing_dev_info*, %struct.io_context*, %struct.capture_control*, i64, %struct.kernel_siginfo*, %struct.task_io_accounting, %struct.robust_list_head*, %struct.list_head, %struct.futex_pi_state*, %struct.mutex, i32, [2 x %struct.perf_event_context*], %struct.mutex, %struct.list_head, %struct.rseq*, i32, i64, %struct.tlbflush_unmap_batch, %union.anon.116, %struct.pipe_inode_info*, %struct.page_frag, i32, i32, i64, i64, i64, i32, %struct.task_struct*, %struct.vm_struct*, %struct.refcount_struct, i8*, i64, i64, i64, %struct.callback_head, [24 x i8], %struct.thread_struct }
%struct.thread_info = type { i64, i32 }
%struct.sched_class = type opaque
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, %struct.sched_statistics }
%struct.load_weight = type { i64, i32 }
%struct.rb_node = type { i64, %struct.rb_node*, %struct.rb_node* }
%struct.sched_statistics = type {}
%struct.sched_rt_entity = type { %struct.list_head, i64, i64, i32, i16, i16, %struct.sched_rt_entity* }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, %struct.sched_dl_entity* }
%struct.hrtimer = type { %struct.timerqueue_node, i64, i32 (%struct.hrtimer*)*, %struct.hrtimer_clock_base*, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.hrtimer_clock_base = type { %struct.hrtimer_cpu_base*, i32, i32, %struct.seqcount_raw_spinlock, %struct.hrtimer*, %struct.timerqueue_head, i64 ()*, i64 }
%struct.hrtimer_cpu_base = type { %struct.raw_spinlock, i32, i32, i32, i8, i64, %struct.hrtimer*, i64, %struct.hrtimer*, [16 x i8], [8 x %struct.hrtimer_clock_base] }
%struct.seqcount_raw_spinlock = type { %struct.seqcount }
%struct.seqcount = type { i32 }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.cpumask = type { [1 x i64] }
%struct.sched_info = type {}
%struct.mm_struct = type { %struct.anon.18, [0 x i64] }
%struct.anon.18 = type { %struct.vm_area_struct*, %struct.rb_root, i64, i64 (%struct.file*, i64, i64, i64, i64)*, i64, i64, i64, i64, %struct.pgd_t*, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i32, %struct.spinlock, %struct.rw_semaphore, %struct.list_head, i64, i64, i64, i64, %struct.atomic64_t, i64, i64, i64, i64, %struct.spinlock, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [44 x i64], %struct.mm_rss_stat, %struct.linux_binfmt*, %struct.mm_context_t, i64, %struct.core_state*, %struct.spinlock, %struct.kioctx_table*, %struct.user_namespace*, %struct.file*, %struct.mmu_notifier_subscriptions*, %struct.atomic_t, i8, %struct.uprobes_state, %struct.work_struct, i32 }
%struct.vm_area_struct = type { i64, i64, %struct.vm_area_struct*, %struct.vm_area_struct*, %struct.rb_node, i64, %struct.mm_struct*, %struct.pgprot, i64, %struct.anon.19, %struct.list_head, %struct.anon_vma*, %struct.vm_operations_struct*, i64, %struct.file*, i8*, %struct.atomic64_t, %struct.vm_userfaultfd_ctx }
%struct.pgprot = type { i64 }
%struct.anon.19 = type { %struct.rb_node, i64 }
%struct.anon_vma = type opaque
%struct.vm_operations_struct = type { void (%struct.vm_area_struct*)*, void (%struct.vm_area_struct*)*, i32 (%struct.vm_area_struct*, i64)*, i32 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*, i32)*, void (%struct.vm_fault*, i64, i64)*, i64 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_area_struct*, i64, i8*, i32, i32)*, i8* (%struct.vm_area_struct*)*, %struct.page* (%struct.vm_area_struct*, i64)* }
%struct.vm_fault = type { %struct.vm_area_struct*, i32, i32, i64, i64, %struct.pmd_t*, %struct.pud_t*, %struct.pte_t, %struct.page*, %struct.page*, %struct.pte_t*, %struct.spinlock*, %struct.page* }
%struct.pmd_t = type { i64 }
%struct.pud_t = type { i64 }
%struct.pte_t = type { i64 }
%struct.page = type { i64, %union.anon.2, %union.anon.123, %struct.atomic_t, [8 x i8] }
%union.anon.2 = type { %struct.anon.3 }
%struct.anon.3 = type { %struct.list_head, %struct.address_space*, i64, i64 }
%struct.address_space = type { %struct.inode*, %struct.xarray, i32, %struct.atomic_t, %struct.rb_root_cached, %struct.rw_semaphore, i64, i64, i64, %struct.address_space_operations*, i64, i32, %struct.spinlock, %struct.list_head, i8* }
%struct.inode = type { i16, i16, %struct.kuid_t, %struct.kgid_t, i32, %struct.inode_operations*, %struct.super_block*, %struct.address_space*, i64, %union.anon.125, i32, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.spinlock, i16, i8, i8, i64, i64, %struct.rw_semaphore, i64, i64, %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %union.anon.126, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %union.anon.127, %struct.file_lock_context*, %struct.address_space, %struct.list_head, %union.anon.130, i32, i32, %struct.fsnotify_mark_connector*, i8* }
%struct.kuid_t = type { i32 }
%struct.kgid_t = type { i32 }
%struct.inode_operations = type { %struct.dentry* (%struct.inode*, %struct.dentry*, i32)*, i8* (%struct.dentry*, %struct.inode*, %struct.delayed_call*)*, i32 (%struct.inode*, i32)*, %struct.posix_acl* (%struct.inode*, i32)*, i32 (%struct.dentry*, i8*, i32)*, i32 (%struct.inode*, %struct.dentry*, i16, i1)*, i32 (%struct.dentry*, %struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i8*)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i16, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.inode*, %struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.iattr*)*, i32 (%struct.path*, %struct.kstat*, i32, i32)*, i64 (%struct.dentry*, i8*, i64)*, i32 (%struct.inode*, %struct.fiemap_extent_info*, i64, i64)*, i32 (%struct.inode*, %struct.timespec64*, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.file*, i32, i16)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.posix_acl*, i32)*, [24 x i8] }
%struct.dentry = type { i32, %struct.seqcount_spinlock, %struct.hlist_bl_node, %struct.dentry*, %struct.qstr, %struct.inode*, [32 x i8], %struct.lockref, %struct.dentry_operations*, %struct.super_block*, i64, i8*, %union.anon.133, %struct.list_head, %struct.list_head, %union.anon.134 }
%struct.seqcount_spinlock = type { %struct.seqcount }
%struct.hlist_bl_node = type { %struct.hlist_bl_node*, %struct.hlist_bl_node** }
%struct.qstr = type { %union.anon.0, i8* }
%union.anon.0 = type { i64 }
%struct.lockref = type { %union.anon.131 }
%union.anon.131 = type { %struct.anon.132 }
%struct.anon.132 = type { %struct.spinlock, i32 }
%struct.dentry_operations = type { i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.qstr*)*, i32 (%struct.dentry*, i32, i8*, %struct.qstr*)*, i32 (%struct.dentry*)*, i32 (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*, %struct.inode*)*, i8* (%struct.dentry*, i8*, i32)*, %struct.vfsmount* (%struct.path*)*, i32 (%struct.path*, i1)*, %struct.dentry* (%struct.dentry*, %struct.inode*)*, [24 x i8] }
%struct.vfsmount = type opaque
%struct.path = type { %struct.vfsmount*, %struct.dentry* }
%union.anon.133 = type { %struct.list_head }
%union.anon.134 = type { %struct.hlist_node }
%struct.delayed_call = type { void (i8*)*, i8* }
%struct.posix_acl = type opaque
%struct.iattr = type { i32, i16, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.file* }
%struct.kstat = type { i32, i16, i32, i32, i64, i64, i64, i32, i32, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.timespec64, i64, i64 }
%struct.fiemap_extent_info = type opaque
%struct.super_block = type { %struct.list_head, i32, i8, i64, i64, %struct.file_system_type*, %struct.super_operations*, %struct.dquot_operations*, %struct.quotactl_ops*, %struct.export_operations*, i64, i64, i64, %struct.dentry*, %struct.rw_semaphore, i32, %struct.atomic_t, %struct.xattr_handler**, %struct.hlist_bl_head, %struct.list_head, %struct.block_device*, %struct.backing_dev_info*, %struct.mtd_info*, %struct.hlist_node, i32, %struct.quota_info, %struct.sb_writers, i8*, i32, i64, i64, i32, %struct.fsnotify_mark_connector*, [32 x i8], %struct.uuid_t, i32, i32, %struct.mutex, i8*, %struct.dentry_operations*, i32, %struct.shrinker, %struct.atomic64_t, %struct.atomic64_t, i32, i32, %struct.workqueue_struct*, %struct.hlist_head, %struct.user_namespace*, %struct.list_lru, %struct.list_lru, %struct.callback_head, %struct.work_struct, %struct.mutex, i32, %struct.spinlock, %struct.list_head, %struct.spinlock, %struct.list_head }
%struct.file_system_type = type { i8*, i32, i32 (%struct.fs_context*)*, %struct.fs_parameter_spec*, %struct.dentry* (%struct.file_system_type*, i32, i8*, i8*)*, void (%struct.super_block*)*, %struct.module*, %struct.file_system_type*, %struct.hlist_head, %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key, [3 x %struct.lock_class_key], %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key }
%struct.fs_context = type opaque
%struct.fs_parameter_spec = type opaque
%struct.module = type opaque
%struct.lock_class_key = type {}
%struct.super_operations = type { %struct.inode* (%struct.super_block*)*, void (%struct.inode*)*, void (%struct.inode*)*, void (%struct.inode*, i32)*, i32 (%struct.inode*, %struct.writeback_control*)*, i32 (%struct.inode*)*, void (%struct.inode*)*, void (%struct.super_block*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.dentry*, %struct.kstatfs*)*, i32 (%struct.super_block*, i32*, i8*)*, void (%struct.super_block*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.super_block*, %struct.page*, i32)*, i64 (%struct.super_block*, %struct.shrink_control*)*, i64 (%struct.super_block*, %struct.shrink_control*)* }
%struct.writeback_control = type { i64, i64, i64, i64, i32, i8 }
%struct.kstatfs = type opaque
%struct.seq_file = type { i8*, i64, i64, i64, i64, i64, i64, %struct.mutex, %struct.seq_operations*, i32, %struct.file*, i8* }
%struct.seq_operations = type { i8* (%struct.seq_file*, i64*)*, void (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i8*, i64*)*, i32 (%struct.seq_file*, i8*)* }
%struct.shrink_control = type { i32, i32, i64, i64, %struct.mem_cgroup* }
%struct.mem_cgroup = type opaque
%struct.dquot_operations = type { i32 (%struct.dquot*)*, %struct.dquot* (%struct.super_block*, i32)*, void (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, i32)*, i64* (%struct.inode*)*, i32 (%struct.inode*, %struct.kprojid_t*)*, i32 (%struct.inode*, i64*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.dquot = type { %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.mutex, %struct.spinlock, %struct.atomic_t, %struct.super_block*, %struct.kqid, i64, i64, %struct.mem_dqblk }
%struct.kqid = type { %union.anon.124, i32 }
%union.anon.124 = type { %struct.kuid_t }
%struct.mem_dqblk = type { i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.kprojid_t = type { i32 }
%struct.quotactl_ops = type { i32 (%struct.super_block*, i32, i32, %struct.path*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32, %struct.qc_info*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.kqid*, %struct.qc_dqblk*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.qc_state*)*, i32 (%struct.super_block*, i32)* }
%struct.qc_info = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.qc_dqblk = type { i32, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, i64, i64, i64, i64, i32 }
%struct.qc_state = type { i32, [3 x %struct.qc_type_state] }
%struct.qc_type_state = type { i32, i32, i32, i32, i32, i32, i32, i64, i64, i64 }
%struct.export_operations = type opaque
%struct.xattr_handler = type opaque
%struct.hlist_bl_head = type { %struct.hlist_bl_node* }
%struct.block_device = type { i32, i32, %struct.inode*, %struct.super_block*, %struct.mutex, i8*, i8*, i32, i8, %struct.list_head, %struct.block_device*, i8, %struct.hd_struct*, i32, %struct.spinlock, %struct.gendisk*, %struct.backing_dev_info*, i32, %struct.mutex }
%struct.hd_struct = type { i64, i64, i64, %struct.disk_stats*, %struct.percpu_ref, %struct.device, %struct.kobject*, i32, i32, %struct.partition_meta_info*, %struct.rcu_work }
%struct.disk_stats = type opaque
%struct.percpu_ref = type { i64, %struct.percpu_ref_data* }
%struct.percpu_ref_data = type { %struct.atomic64_t, void (%struct.percpu_ref*)*, void (%struct.percpu_ref*)*, i8, %struct.callback_head, %struct.percpu_ref* }
%struct.device = type { %struct.kobject, %struct.device*, %struct.device_private*, i8*, %struct.device_type*, %struct.bus_type*, %struct.device_driver*, i8*, i8*, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, %struct.dev_pm_domain*, %struct.irq_domain*, %struct.list_head, %struct.dma_map_ops*, i64*, i64, i64, %struct.bus_dma_region*, %struct.device_dma_parameters*, %struct.list_head, %struct.dev_archdata, %struct.device_node*, %struct.fwnode_handle*, i32, i32, %struct.spinlock, %struct.list_head, %struct.class*, %struct.attribute_group**, void (%struct.device*)*, %struct.iommu_group*, %struct.dev_iommu*, i8 }
%struct.kobject = type { i8*, %struct.list_head, %struct.kobject*, %struct.kset*, %struct.kobj_type*, %struct.kernfs_node*, %struct.kref, i8 }
%struct.kset = type { %struct.list_head, %struct.spinlock, %struct.kobject, %struct.kset_uevent_ops* }
%struct.kset_uevent_ops = type { i32 (%struct.kset*, %struct.kobject*)*, i8* (%struct.kset*, %struct.kobject*)*, i32 (%struct.kset*, %struct.kobject*, %struct.kobj_uevent_env*)* }
%struct.kobj_uevent_env = type { [3 x i8*], [64 x i8*], i32, [2048 x i8], i32 }
%struct.kobj_type = type { void (%struct.kobject*)*, %struct.sysfs_ops*, %struct.attribute**, %struct.attribute_group**, %struct.kobj_ns_type_operations* (%struct.kobject*)*, i8* (%struct.kobject*)*, void (%struct.kobject*, %struct.kuid_t*, %struct.kgid_t*)* }
%struct.sysfs_ops = type { i64 (%struct.kobject*, %struct.attribute*, i8*)*, i64 (%struct.kobject*, %struct.attribute*, i8*, i64)* }
%struct.attribute = type { i8*, i16 }
%struct.kobj_ns_type_operations = type { i32, i1 ()*, i8* ()*, i8* (%struct.sock*)*, i8* ()*, void (i8*)* }
%struct.sock = type { %struct.sock_common, %struct.socket_lock_t, %struct.atomic_t, i32, %struct.sk_buff_head, %struct.sk_buff*, %struct.sk_buff_head, %struct.anon.64, i32, i32, i32, i32, %struct.sk_filter*, %union.anon.93, %struct.dst_entry*, %struct.dst_entry*, %struct.atomic_t, i32, i32, %struct.refcount_struct, i64, %union.anon.96, %struct.sk_buff*, %struct.sk_buff_head, i32, i32, i32, i32, i64, %struct.timer_list, i32, i32, i64, i64, %struct.page_frag, i64, i64, i64, i32, i32, i32, i32, i8, i8, i16, i16, i16, i64, %struct.proto*, %struct.rwlock_t, i32, i32, i32, i32, %struct.kuid_t, %struct.pid*, %struct.cred*, i64, i64, i16, i8, i32, %struct.atomic_t, i8, i8, %struct.socket*, i8*, %struct.sock_cgroup_data, %struct.mem_cgroup*, void (%struct.sock*)*, void (%struct.sock*)*, void (%struct.sock*)*, void (%struct.sock*)*, i32 (%struct.sock*, %struct.sk_buff*)*, void (%struct.sock*)*, %struct.sock_reuseport*, %struct.callback_head }
%struct.sock_common = type { %union.anon.38, %union.anon.40, %union.anon.41, i16, i8, i8, i32, %union.anon.43, %struct.proto*, %struct.possible_net_t, %struct.in6_addr, %struct.in6_addr, %struct.atomic64_t, %union.anon.60, [0 x i32], %union.anon.61, i16, %union.anon.62, %struct.refcount_struct, [0 x i32], %union.anon.63 }
%union.anon.38 = type { i64 }
%union.anon.40 = type { i32 }
%union.anon.41 = type { i32 }
%union.anon.43 = type { %struct.hlist_node }
%struct.possible_net_t = type { %struct.net* }
%struct.net = type { %struct.refcount_struct, %struct.refcount_struct, %struct.spinlock, i32, i32, i32, %struct.spinlock, %struct.atomic_t, %struct.list_head, %struct.list_head, %struct.llist_node, %struct.key_tag*, %struct.user_namespace*, %struct.ucounts*, %struct.idr, %struct.ns_common, %struct.list_head, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.ctl_table_set, %struct.sock*, %struct.sock*, %struct.uevent_sock*, %struct.hlist_head*, %struct.hlist_head*, %struct.raw_notifier_head, i32, %struct.net_device*, %struct.list_head, %struct.netns_core, %struct.netns_mib, %struct.netns_packet, %struct.netns_unix, %struct.netns_nexthop, %struct.netns_ipv4, %struct.netns_ipv6, %struct.sk_buff_head, %struct.net_generic*, %struct.netns_bpf, %struct.atomic64_t, %struct.netns_can, %struct.sock* }
%struct.llist_node = type { %struct.llist_node* }
%struct.key_tag = type { %struct.callback_head, %struct.refcount_struct, i8 }
%struct.ucounts = type { %struct.hlist_node, %struct.user_namespace*, %struct.kuid_t, i32, [10 x %struct.atomic_t] }
%struct.idr = type { %struct.xarray, i32, i32 }
%struct.ns_common = type { %struct.atomic64_t, %struct.proc_ns_operations*, i32 }
%struct.proc_ns_operations = type opaque
%struct.proc_dir_entry = type opaque
%struct.ctl_table_set = type { i32 (%struct.ctl_table_set*)*, %struct.ctl_dir }
%struct.ctl_dir = type { %struct.ctl_table_header, %struct.rb_root }
%struct.ctl_table_header = type { %union.anon.35, %struct.completion*, %struct.ctl_table*, %struct.ctl_table_root*, %struct.ctl_table_set*, %struct.ctl_dir*, %struct.ctl_node*, %struct.hlist_head }
%union.anon.35 = type { %struct.anon.36 }
%struct.anon.36 = type { %struct.ctl_table*, i32, i32, i32 }
%struct.ctl_table = type { i8*, i8*, i32, i16, %struct.ctl_table*, i32 (%struct.ctl_table*, i32, i8*, i64*, i64*)*, %struct.ctl_table_poll*, i8*, i8* }
%struct.ctl_table_poll = type { %struct.atomic_t, %struct.wait_queue_head }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.ctl_table_root = type { %struct.ctl_table_set, %struct.ctl_table_set* (%struct.ctl_table_root*)*, void (%struct.ctl_table_header*, %struct.ctl_table*, %struct.kuid_t*, %struct.kgid_t*)*, i32 (%struct.ctl_table_header*, %struct.ctl_table*)* }
%struct.ctl_node = type { %struct.rb_node, %struct.ctl_table_header* }
%struct.uevent_sock = type opaque
%struct.raw_notifier_head = type { %struct.notifier_block* }
%struct.notifier_block = type { i32 (%struct.notifier_block*, i64, i8*)*, %struct.notifier_block*, i32 }
%struct.net_device = type { [16 x i8], %struct.netdev_name_node*, %struct.dev_ifalias*, i64, i64, i64, i32, i64, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.anon.152, i64, i64, i64, i64, i64, i64, i64, i32, i32, %struct.net_device_stats, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.iw_handler_def*, %struct.iw_public_data*, %struct.net_device_ops*, %struct.ethtool_ops*, %struct.ndisc_ops*, %struct.header_ops*, i32, i32, i16, i16, i8, i8, i8, i8, i32, i32, i32, i16, i16, i8, i8, i16, i16, [32 x i8], i8, i8, i8, i8, i16, i16, i16, %struct.spinlock, %struct.netdev_hw_addr_list, %struct.netdev_hw_addr_list, %struct.netdev_hw_addr_list, %struct.kset*, i32, i32, i8, %struct.vlan_info*, %struct.in_device*, %struct.inet6_dev*, %struct.wireless_dev*, %struct.wpan_dev*, i8*, %struct.netdev_rx_queue*, i32, i32, %struct.bpf_prog*, i64, i32, i32 (%struct.sk_buff**)*, i8*, %struct.netdev_queue*, [32 x i8], %struct.hlist_node, %struct.netdev_queue*, i32, i32, %struct.Qdisc*, i32, %struct.spinlock, %struct.xdp_dev_bulk_queue*, %struct.timer_list, i32, i32, %struct.list_head, i32*, %struct.list_head, i8, i8, i16, i8, void (%struct.net_device*)*, %struct.possible_net_t, %union.anon.169, %struct.device, [4 x %struct.attribute_group*], %struct.attribute_group*, %struct.rtnl_link_ops*, i32, i16, i16, [16 x %struct.netdev_tc_txq], [16 x i8], %struct.phy_device*, %struct.sfp_bus*, %struct.lock_class_key*, %struct.lock_class_key*, i8, i8, %struct.list_head, %struct.udp_tunnel_nic_info*, %struct.udp_tunnel_nic*, [3 x %struct.bpf_xdp_entity] }
%struct.netdev_name_node = type { %struct.hlist_node, %struct.list_head, %struct.net_device*, i8* }
%struct.dev_ifalias = type { %struct.callback_head, [0 x i8] }
%struct.anon.152 = type { %struct.list_head, %struct.list_head }
%struct.net_device_stats = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.iw_handler_def = type opaque
%struct.iw_public_data = type opaque
%struct.net_device_ops = type { i32 (%struct.net_device*)*, void (%struct.net_device*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*)*, i32 (%struct.sk_buff*, %struct.net_device*)*, i64 (%struct.sk_buff*, %struct.net_device*, i64)*, i16 (%struct.net_device*, %struct.sk_buff*, %struct.net_device*)*, void (%struct.net_device*, i32)*, void (%struct.net_device*)*, i32 (%struct.net_device*, i8*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, %struct.ifreq*, i32)*, i32 (%struct.net_device*, %struct.ifmap*)*, i32 (%struct.net_device*, i32)*, i32 (%struct.net_device*, %struct.neigh_parms*)*, void (%struct.net_device*, i32)*, void (%struct.net_device*, %struct.rtnl_link_stats64*)*, i1 (%struct.net_device*, i32)*, i32 (i32, %struct.net_device*, i8*)*, %struct.net_device_stats* (%struct.net_device*)*, i32 (%struct.net_device*, i16, i16)*, i32 (%struct.net_device*, i16, i16)*, i32 (%struct.net_device*, i32, i8*)*, i32 (%struct.net_device*, i32, i16, i8, i16)*, i32 (%struct.net_device*, i32, i32, i32)*, i32 (%struct.net_device*, i32, i1)*, i32 (%struct.net_device*, i32, i1)*, i32 (%struct.net_device*, i32, %struct.ifla_vf_info*)*, i32 (%struct.net_device*, i32, i32)*, i32 (%struct.net_device*, i32, %struct.ifla_vf_stats*)*, i32 (%struct.net_device*, i32, %struct.nlattr**)*, i32 (%struct.net_device*, i32, %struct.sk_buff*)*, i32 (%struct.net_device*, i32, %struct.ifla_vf_guid*, %struct.ifla_vf_guid*)*, i32 (%struct.net_device*, i32, i64, i32)*, i32 (%struct.net_device*, i32, i1)*, i32 (%struct.net_device*, i32, i8*)*, i32 (%struct.net_device*, %struct.net_device*, %struct.netlink_ext_ack*)*, i32 (%struct.net_device*, %struct.net_device*)*, %struct.net_device* (%struct.net_device*, %struct.sk_buff*, i1)*, i64 (%struct.net_device*, i64)*, i32 (%struct.net_device*, i64)*, i32 (%struct.net_device*, %struct.neighbour*)*, void (%struct.net_device*, %struct.neighbour*)*, i32 (%struct.ndmsg*, %struct.nlattr**, %struct.net_device*, i8*, i16, i16, %struct.netlink_ext_ack*)*, i32 (%struct.ndmsg*, %struct.nlattr**, %struct.net_device*, i8*, i16)*, i32 (%struct.sk_buff*, %struct.netlink_callback*, %struct.net_device*, %struct.net_device*, i32*)*, i32 (%struct.sk_buff*, %struct.nlattr**, %struct.net_device*, i8*, i16, i32, i32, %struct.netlink_ext_ack*)*, i32 (%struct.net_device*, %struct.nlmsghdr*, i16, %struct.netlink_ext_ack*)*, i32 (%struct.sk_buff*, i32, i32, %struct.net_device*, i32, i32)*, i32 (%struct.net_device*, %struct.nlmsghdr*, i16)*, i32 (%struct.net_device*, i1)*, i32 (%struct.net_device*, %struct.netdev_phys_item_id*)*, i32 (%struct.net_device*, %struct.netdev_phys_item_id*)*, i32 (%struct.net_device*, i8*, i64)*, void (%struct.net_device*, %struct.udp_tunnel_info*)*, void (%struct.net_device*, %struct.udp_tunnel_info*)*, i8* (%struct.net_device*, %struct.net_device*)*, void (%struct.net_device*, i8*)*, i32 (%struct.net_device*, i32, i32)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, i1)*, i32 (%struct.net_device*, %struct.sk_buff*)*, void (%struct.net_device*, i32)*, i32 (%struct.net_device*, %struct.netdev_bpf*)*, i32 (%struct.net_device*, i32, %struct.xdp_frame**, i32)*, i32 (%struct.net_device*, i32, i32)*, %struct.devlink_port* (%struct.net_device*)*, i32 (%struct.net_device*, %struct.ip_tunnel_parm*, i32)*, %struct.net_device* (%struct.net_device*)* }
%struct.ifreq = type { %union.anon.153, %union.anon.154 }
%union.anon.153 = type { [16 x i8] }
%union.anon.154 = type { %struct.ifmap }
%struct.ifmap = type { i64, i64, i16, i8, i8, i8 }
%struct.neigh_parms = type { %struct.possible_net_t, %struct.net_device*, %struct.list_head, i32 (%struct.neighbour*)*, %struct.neigh_table*, i8*, i32, %struct.refcount_struct, %struct.callback_head, i32, [13 x i32], [1 x i64] }
%struct.neighbour = type { %struct.neighbour*, %struct.neigh_table*, %struct.neigh_parms*, i64, i64, %struct.rwlock_t, %struct.refcount_struct, i32, %struct.sk_buff_head, %struct.timer_list, i64, %struct.atomic_t, i8, i8, i8, i8, i8, %struct.seqlock_t, [32 x i8], %struct.hh_cache, i32 (%struct.neighbour*, %struct.sk_buff*)*, %struct.neigh_ops*, %struct.list_head, %struct.callback_head, %struct.net_device*, [0 x i8] }
%struct.seqlock_t = type { %struct.seqcount_spinlock, %struct.spinlock }
%struct.hh_cache = type { i32, %struct.seqlock_t, [12 x i64] }
%struct.neigh_ops = type { i32, void (%struct.neighbour*, %struct.sk_buff*)*, void (%struct.neighbour*, %struct.sk_buff*)*, i32 (%struct.neighbour*, %struct.sk_buff*)*, i32 (%struct.neighbour*, %struct.sk_buff*)* }
%struct.neigh_table = type { i32, i32, i32, i16, i32 (i8*, %struct.net_device*, i32*)*, i1 (%struct.neighbour*, i8*)*, i32 (%struct.neighbour*)*, i32 (%struct.pneigh_entry*)*, void (%struct.pneigh_entry*)*, void (%struct.sk_buff*)*, i32 (i8*)*, i1 (%struct.net_device*, %struct.netlink_ext_ack*)*, i8*, %struct.neigh_parms, %struct.list_head, i32, i32, i32, i32, i64, %struct.delayed_work, %struct.timer_list, %struct.sk_buff_head, %struct.atomic_t, %struct.atomic_t, %struct.list_head, %struct.rwlock_t, i64, %struct.neigh_statistics*, %struct.neigh_hash_table*, %struct.pneigh_entry** }
%struct.pneigh_entry = type { %struct.pneigh_entry*, %struct.possible_net_t, %struct.net_device*, i8, i8, [0 x i8] }
%struct.netlink_ext_ack = type { i8*, %struct.nlattr*, %struct.nla_policy*, [20 x i8], i8 }
%struct.nlattr = type { i16, i16 }
%struct.nla_policy = type { i8, i8, i16, %union.anon.94 }
%union.anon.94 = type { i8* }
%struct.delayed_work = type { %struct.work_struct, %struct.timer_list, %struct.workqueue_struct*, i32 }
%struct.neigh_statistics = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.neigh_hash_table = type { %struct.neighbour**, i32, [4 x i32], %struct.callback_head }
%struct.rtnl_link_stats64 = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.ifla_vf_info = type { i32, [32 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i16 }
%struct.ifla_vf_stats = type { i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.ifla_vf_guid = type { i32, i64 }
%struct.ndmsg = type { i8, i8, i16, i32, i16, i8, i8 }
%struct.netlink_callback = type { %struct.sk_buff*, %struct.nlmsghdr*, i32 (%struct.sk_buff*, %struct.netlink_callback*)*, i32 (%struct.netlink_callback*)*, i8*, %struct.module*, %struct.netlink_ext_ack*, i16, i16, i32, i32, i32, i8, %union.anon.156 }
%struct.nlmsghdr = type { i32, i16, i16, i32, i32 }
%union.anon.156 = type { [6 x i64] }
%struct.netdev_phys_item_id = type { [32 x i8], i8 }
%struct.udp_tunnel_info = type opaque
%struct.netdev_bpf = type { i32, %union.anon.157 }
%union.anon.157 = type { %struct.anon.158 }
%struct.anon.158 = type { i32, %struct.bpf_prog*, %struct.netlink_ext_ack* }
%struct.xdp_frame = type { i8*, i16, i16, i32, %struct.xdp_mem_info, %struct.net_device* }
%struct.xdp_mem_info = type { i32, i32 }
%struct.devlink_port = type { %struct.list_head, %struct.list_head, %struct.list_head, %struct.devlink*, i32, i8, %struct.spinlock, i32, i32, i8*, %struct.devlink_port_attrs, i8, %struct.delayed_work, %struct.list_head, %struct.mutex }
%struct.devlink = type { %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.mutex, %struct.devlink_dpipe_headers*, %struct.list_head, %struct.list_head, %struct.list_head, %struct.devlink_ops*, %struct.xarray, %struct.devlink_dev_stats, %struct.device*, %struct.possible_net_t, %struct.mutex, i8, [31 x i8], [0 x i8] }
%struct.devlink_dpipe_headers = type { %struct.devlink_dpipe_header**, i32 }
%struct.devlink_dpipe_header = type { i8*, i32, %struct.devlink_dpipe_field*, i32, i8 }
%struct.devlink_dpipe_field = type { i8*, i32, i32, i32 }
%struct.devlink_ops = type { i32, i64, i64, i32 (%struct.devlink*, i1, i32, i32, %struct.netlink_ext_ack*)*, i32 (%struct.devlink*, i32, i32, i32*, %struct.netlink_ext_ack*)*, i32 (%struct.devlink_port*, i32)*, i32 (%struct.devlink*, i32, i32, %struct.netlink_ext_ack*)*, i32 (%struct.devlink*, i32, %struct.netlink_ext_ack*)*, i32 (%struct.devlink*, i32, i16, %struct.devlink_sb_pool_info*)*, i32 (%struct.devlink*, i32, i16, i32, i32, %struct.netlink_ext_ack*)*, i32 (%struct.devlink_port*, i32, i16, i32*)*, i32 (%struct.devlink_port*, i32, i16, i32, %struct.netlink_ext_ack*)*, i32 (%struct.devlink_port*, i32, i16, i32, i16*, i32*)*, i32 (%struct.devlink_port*, i32, i16, i32, i16, i32, %struct.netlink_ext_ack*)*, i32 (%struct.devlink*, i32)*, i32 (%struct.devlink*, i32)*, i32 (%struct.devlink_port*, i32, i16, i32*, i32*)*, i32 (%struct.devlink_port*, i32, i16, i32, i32*, i32*)*, i32 (%struct.devlink*, i16*)*, i32 (%struct.devlink*, i16, %struct.netlink_ext_ack*)*, i32 (%struct.devlink*, i8*)*, i32 (%struct.devlink*, i8, %struct.netlink_ext_ack*)*, i32 (%struct.devlink*, i32*)*, i32 (%struct.devlink*, i32, %struct.netlink_ext_ack*)*, i32 (%struct.devlink*, %struct.devlink_info_req*, %struct.netlink_ext_ack*)*, i32 (%struct.devlink*, %struct.devlink_flash_update_params*, %struct.netlink_ext_ack*)*, i32 (%struct.devlink*, %struct.devlink_trap*, i8*)*, void (%struct.devlink*, %struct.devlink_trap*, i8*)*, i32 (%struct.devlink*, %struct.devlink_trap*, i32, %struct.netlink_ext_ack*)*, i32 (%struct.devlink*, %struct.devlink_trap_group*)*, i32 (%struct.devlink*, %struct.devlink_trap_group*, %struct.devlink_trap_policer*, %struct.netlink_ext_ack*)*, i32 (%struct.devlink*, %struct.devlink_trap_group*, i32, %struct.netlink_ext_ack*)*, i32 (%struct.devlink*, %struct.devlink_trap_policer*)*, void (%struct.devlink*, %struct.devlink_trap_policer*)*, i32 (%struct.devlink*, %struct.devlink_trap_policer*, i64, i64, %struct.netlink_ext_ack*)*, i32 (%struct.devlink*, %struct.devlink_trap_policer*, i64*)*, i32 (%struct.devlink*, %struct.devlink_port*, i8*, i32*, %struct.netlink_ext_ack*)*, i32 (%struct.devlink*, %struct.devlink_port*, i8*, i32, %struct.netlink_ext_ack*)* }
%struct.devlink_sb_pool_info = type { i32, i32, i32, i32 }
%struct.devlink_info_req = type opaque
%struct.devlink_flash_update_params = type { i8*, i8*, i32 }
%struct.devlink_trap = type { i32, i32, i8, i16, i8*, i16, i32 }
%struct.devlink_trap_group = type { i8*, i16, i8, i32 }
%struct.devlink_trap_policer = type { i32, i64, i64, i64, i64, i64, i64 }
%struct.devlink_dev_stats = type { [6 x i32], [6 x i32] }
%struct.devlink_port_attrs = type { i8, i32, i32, %struct.netdev_phys_item_id, %union.anon.161 }
%union.anon.161 = type { %struct.devlink_port_pci_vf_attrs }
%struct.devlink_port_pci_vf_attrs = type { i32, i16, i16, i8 }
%struct.ip_tunnel_parm = type opaque
%struct.ethtool_ops = type { i32, void (%struct.net_device*, %struct.ethtool_drvinfo*)*, i32 (%struct.net_device*)*, void (%struct.net_device*, %struct.ethtool_regs*, i8*)*, void (%struct.net_device*, %struct.ethtool_wolinfo*)*, i32 (%struct.net_device*, %struct.ethtool_wolinfo*)*, i32 (%struct.net_device*)*, void (%struct.net_device*, i32)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, %struct.ethtool_link_ext_state_info*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, %struct.ethtool_eeprom*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_eeprom*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_coalesce*)*, i32 (%struct.net_device*, %struct.ethtool_coalesce*)*, void (%struct.net_device*, %struct.ethtool_ringparam*)*, i32 (%struct.net_device*, %struct.ethtool_ringparam*)*, void (%struct.net_device*, %struct.ethtool_pause_stats*)*, void (%struct.net_device*, %struct.ethtool_pauseparam*)*, i32 (%struct.net_device*, %struct.ethtool_pauseparam*)*, void (%struct.net_device*, %struct.ethtool_test*, i64*)*, void (%struct.net_device*, i32, i8*)*, i32 (%struct.net_device*, i32)*, void (%struct.net_device*, %struct.ethtool_stats*, i64*)*, i32 (%struct.net_device*)*, void (%struct.net_device*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, i32)*, i32 (%struct.net_device*, i32)*, i32 (%struct.net_device*, %struct.ethtool_rxnfc*, i32*)*, i32 (%struct.net_device*, %struct.ethtool_rxnfc*)*, i32 (%struct.net_device*, %struct.ethtool_flash*)*, i32 (%struct.net_device*, i32*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*)*, i32 (%struct.net_device*, i32*, i8*, i8*)*, i32 (%struct.net_device*, i32*, i8*, i8)*, i32 (%struct.net_device*, i32*, i8*, i8*, i32)*, i32 (%struct.net_device*, i32*, i8*, i8, i32*, i1)*, void (%struct.net_device*, %struct.ethtool_channels*)*, i32 (%struct.net_device*, %struct.ethtool_channels*)*, i32 (%struct.net_device*, %struct.ethtool_dump*)*, i32 (%struct.net_device*, %struct.ethtool_dump*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_dump*)*, i32 (%struct.net_device*, %struct.ethtool_ts_info*)*, i32 (%struct.net_device*, %struct.ethtool_modinfo*)*, i32 (%struct.net_device*, %struct.ethtool_eeprom*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_eee*)*, i32 (%struct.net_device*, %struct.ethtool_eee*)*, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)*, i32 (%struct.net_device*, i32, %struct.ethtool_coalesce*)*, i32 (%struct.net_device*, i32, %struct.ethtool_coalesce*)*, i32 (%struct.net_device*, %struct.ethtool_link_ksettings*)*, i32 (%struct.net_device*, %struct.ethtool_link_ksettings*)*, i32 (%struct.net_device*, %struct.ethtool_fecparam*)*, i32 (%struct.net_device*, %struct.ethtool_fecparam*)*, void (%struct.net_device*, %struct.ethtool_stats*, i64*)*, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)*, i32 (%struct.net_device*, %struct.ethtool_tunable*, i8*)* }
%struct.ethtool_drvinfo = type { i32, [32 x i8], [32 x i8], [32 x i8], [32 x i8], [32 x i8], [12 x i8], i32, i32, i32, i32, i32 }
%struct.ethtool_regs = type { i32, i32, i32, [0 x i8] }
%struct.ethtool_wolinfo = type { i32, i32, i32, [6 x i8] }
%struct.ethtool_link_ext_state_info = type { i32, %union.anon.162 }
%union.anon.162 = type { i32 }
%struct.ethtool_coalesce = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.ethtool_ringparam = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.ethtool_pause_stats = type { i64, i64 }
%struct.ethtool_pauseparam = type { i32, i32, i32, i32 }
%struct.ethtool_test = type { i32, i32, i32, i32, [0 x i64] }
%struct.ethtool_rxnfc = type { i32, i32, i64, %struct.ethtool_rx_flow_spec, %union.anon.163, [0 x i32] }
%struct.ethtool_rx_flow_spec = type { i32, %union.ethtool_flow_union, %struct.ethtool_flow_ext, %union.ethtool_flow_union, %struct.ethtool_flow_ext, i64, i32 }
%union.ethtool_flow_union = type { %struct.ethtool_tcpip6_spec, [12 x i8] }
%struct.ethtool_tcpip6_spec = type { [4 x i32], [4 x i32], i16, i16, i8 }
%struct.ethtool_flow_ext = type { [2 x i8], [6 x i8], i16, i16, [2 x i32] }
%union.anon.163 = type { i32 }
%struct.ethtool_flash = type { i32, i32, [128 x i8] }
%struct.ethtool_channels = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.ethtool_dump = type { i32, i32, i32, i32, [0 x i8] }
%struct.ethtool_ts_info = type { i32, i32, i32, i32, [3 x i32], i32, [3 x i32] }
%struct.ethtool_modinfo = type { i32, i32, i32, [8 x i32] }
%struct.ethtool_eeprom = type { i32, i32, i32, i32, [0 x i8] }
%struct.ethtool_eee = type { i32, i32, i32, i32, i32, i32, i32, i32, [2 x i32] }
%struct.ethtool_link_ksettings = type { %struct.ethtool_link_settings, %struct.anon.164 }
%struct.ethtool_link_settings = type { i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [1 x i8], [7 x i32], [0 x i32] }
%struct.anon.164 = type { [2 x i64], [2 x i64], [2 x i64] }
%struct.ethtool_fecparam = type { i32, i32, i32, i32 }
%struct.ethtool_stats = type { i32, i32, [0 x i64] }
%struct.ethtool_tunable = type { i32, i32, i32, i32, [0 x i8*] }
%struct.ndisc_ops = type { i32 (i8)*, i32 (%struct.net_device*, %struct.nd_opt_hdr*, %struct.ndisc_options*)*, void (%struct.net_device*, %struct.neighbour*, i32, i8, %struct.ndisc_options*)*, i32 (%struct.net_device*, i8, %struct.neighbour*, i8*, i8**)*, void (%struct.net_device*, %struct.sk_buff*, i8, i8*)*, void (%struct.net*, %struct.net_device*, %struct.prefix_info*, %struct.inet6_dev*, %struct.in6_addr*, i32, i32, i1, i1, i32, i32, i1)* }
%struct.nd_opt_hdr = type { i8, i8 }
%struct.ndisc_options = type { [15 x %struct.nd_opt_hdr*], %struct.nd_opt_hdr*, %struct.nd_opt_hdr* }
%struct.prefix_info = type opaque
%struct.header_ops = type { i32 (%struct.sk_buff*, %struct.net_device*, i16, i8*, i8*, i32)*, i32 (%struct.sk_buff*, i8*)*, i32 (%struct.neighbour*, %struct.hh_cache*, i16)*, void (%struct.hh_cache*, %struct.net_device*, i8*)*, i1 (i8*, i32)*, i16 (%struct.sk_buff*)* }
%struct.netdev_hw_addr_list = type { %struct.list_head, i32 }
%struct.vlan_info = type opaque
%struct.in_device = type opaque
%struct.inet6_dev = type { %struct.net_device*, %struct.list_head, %struct.ifmcaddr6*, %struct.ifmcaddr6*, %struct.spinlock, i8, i8, i8, i8, i64, i64, i64, i64, %struct.timer_list, %struct.timer_list, %struct.timer_list, %struct.ifacaddr6*, %struct.rwlock_t, %struct.refcount_struct, i32, i32, i32, %struct.list_head, %struct.in6_addr, %struct.neigh_parms*, %struct.ipv6_devconf, %struct.ipv6_devstat, %struct.timer_list, i32, i8, i64, %struct.callback_head }
%struct.ifmcaddr6 = type { %struct.in6_addr, %struct.inet6_dev*, %struct.ifmcaddr6*, %struct.ip6_sf_list*, %struct.ip6_sf_list*, i32, i8, [2 x i64], %struct.timer_list, i32, i32, %struct.refcount_struct, %struct.spinlock, i64, i64 }
%struct.ip6_sf_list = type { %struct.ip6_sf_list*, %struct.in6_addr, [2 x i64], i8, i8, i8 }
%struct.ifacaddr6 = type { %struct.in6_addr, %struct.fib6_info*, %struct.ifacaddr6*, %struct.hlist_node, i32, %struct.refcount_struct, i64, i64, %struct.callback_head }
%struct.fib6_info = type opaque
%struct.ipv6_devconf = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.ipv6_stable_secret, i32, i32, i32, i32, i32, i32, i32, i32, %struct.ctl_table_header* }
%struct.ipv6_stable_secret = type { i8, %struct.in6_addr }
%struct.ipv6_devstat = type { %struct.proc_dir_entry*, %struct.ipstats_mib*, %struct.icmpv6_mib_device*, %struct.icmpv6msg_mib_device* }
%struct.ipstats_mib = type { [37 x i64], %struct.u64_stats_sync }
%struct.u64_stats_sync = type {}
%struct.icmpv6_mib_device = type { [6 x %struct.atomic64_t] }
%struct.icmpv6msg_mib_device = type { [512 x %struct.atomic64_t] }
%struct.wireless_dev = type opaque
%struct.wpan_dev = type opaque
%struct.netdev_rx_queue = type { %struct.kobject, %struct.net_device*, [56 x i8], %struct.xdp_rxq_info }
%struct.xdp_rxq_info = type { %struct.net_device*, i32, i32, %struct.xdp_mem_info, [40 x i8] }
%struct.bpf_prog = type { i16, i16, i32, i32, i32, i32, [8 x i8], %struct.bpf_prog_aux*, %struct.sock_fprog_kern*, i32 (i8*, %struct.bpf_insn*)*, [0 x %struct.sock_filter], [0 x %struct.bpf_insn] }
%struct.bpf_prog_aux = type { %struct.atomic64_t, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.bpf_ctx_arg_aux*, %struct.mutex, %struct.bpf_prog*, %struct.bpf_trampoline*, i32, i32, i8, i8, i8, i8, i8, i8, i32, %struct.hlist_node, %struct.btf_type*, i8*, %struct.bpf_prog**, i8*, %struct.bpf_jit_poke_descriptor*, i32, %struct.bpf_ksym, %struct.bpf_prog_ops*, %struct.bpf_map**, %struct.mutex, %struct.bpf_prog*, %struct.user_struct*, i64, [2 x %struct.bpf_map*], [16 x i8], %struct.bpf_prog_offload*, %struct.btf*, %struct.bpf_func_info*, %struct.bpf_func_info_aux*, %struct.bpf_line_info*, i8**, i32, i32, i32, i32, %struct.exception_table_entry*, %struct.bpf_prog_stats*, %union.anon.92 }
%struct.bpf_ctx_arg_aux = type { i32, i32, i32 }
%struct.bpf_trampoline = type { %struct.hlist_node, %struct.mutex, %struct.refcount_struct, i64, %struct.anon.65, %struct.bpf_prog*, [3 x %struct.hlist_head], [3 x i32], i8*, i64, %struct.bpf_ksym }
%struct.anon.65 = type { %struct.btf_func_model, i8*, i8 }
%struct.btf_func_model = type { i8, i8, [12 x i8] }
%struct.btf_type = type opaque
%struct.bpf_jit_poke_descriptor = type { i8*, i8*, i8*, %union.anon.66, i8, i8, i16, i32 }
%union.anon.66 = type { %struct.anon.67 }
%struct.anon.67 = type { %struct.bpf_map*, i32 }
%struct.bpf_map = type { %struct.bpf_map_ops*, %struct.bpf_map*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.btf*, %struct.bpf_map_memory, [16 x i8], i32, i8, i8, [26 x i8], %struct.atomic64_t, %struct.atomic64_t, %struct.work_struct, %struct.mutex, i64, [48 x i8] }
%struct.bpf_map_ops = type { i32 (%union.bpf_attr*)*, %struct.bpf_map* (%union.bpf_attr*)*, void (%struct.bpf_map*, %struct.file*)*, void (%struct.bpf_map*)*, i32 (%struct.bpf_map*, i8*, i8*)*, void (%struct.bpf_map*)*, i8* (%struct.bpf_map*, i8*)*, i32 (%struct.bpf_map*, %union.bpf_attr*, %union.bpf_attr*)*, i32 (%struct.bpf_map*, %union.bpf_attr*, %union.bpf_attr*)*, i32 (%struct.bpf_map*, %union.bpf_attr*, %union.bpf_attr*)*, i32 (%struct.bpf_map*, %union.bpf_attr*, %union.bpf_attr*)*, i8* (%struct.bpf_map*, i8*)*, i32 (%struct.bpf_map*, i8*, i8*, i64)*, i32 (%struct.bpf_map*, i8*)*, i32 (%struct.bpf_map*, i8*, i64)*, i32 (%struct.bpf_map*, i8*)*, i32 (%struct.bpf_map*, i8*)*, i8* (%struct.bpf_map*, %struct.file*, i32)*, void (i8*)*, i32 (%struct.bpf_map*, %struct.bpf_insn*)*, i32 (i8*)*, void (%struct.bpf_map*, i8*, %struct.seq_file*)*, i32 (%struct.bpf_map*, %struct.btf*, %struct.btf_type*, %struct.btf_type*)*, i32 (%struct.bpf_map*, %struct.bpf_prog_aux*)*, void (%struct.bpf_map*, %struct.bpf_prog_aux*)*, void (%struct.bpf_map*, i32, %struct.bpf_prog*, %struct.bpf_prog*)*, i32 (%struct.bpf_map*, i64*, i32)*, i32 (%struct.bpf_map*, i64, i32*)*, i32 (%struct.bpf_map*, %struct.vm_area_struct*)*, i32 (%struct.bpf_map*, %struct.file*, %struct.poll_table_struct*)*, i32 (%struct.bpf_local_storage_map*, i8*, i32)*, void (%struct.bpf_local_storage_map*, i8*, i32)*, %struct.bpf_local_storage** (i8*)*, i1 (%struct.bpf_map*, %struct.bpf_map*)*, i8*, i32*, %struct.bpf_iter_seq_info* }
%union.bpf_attr = type { %struct.anon.72 }
%struct.anon.72 = type { i32, i32, i64, i64, i32, i32, i64, i32, i32, [16 x i8], i32, i32, i32, i32, i64, i32, i32, i64, i32, i32, i32 }
%struct.bpf_insn = type { i8, i8, i16, i32 }
%struct.poll_table_struct = type { void (%struct.file*, %struct.wait_queue_head*, %struct.poll_table_struct*)*, i32 }
%struct.bpf_local_storage_map = type opaque
%struct.bpf_local_storage = type opaque
%struct.bpf_iter_seq_info = type { %struct.seq_operations*, i32 (i8*, %struct.bpf_iter_aux_info*)*, void (i8*)*, i32 }
%struct.bpf_iter_aux_info = type opaque
%struct.bpf_map_memory = type { i32, %struct.user_struct* }
%struct.bpf_ksym = type { i64, i64, [128 x i8], %struct.list_head, %struct.latch_tree_node, i8 }
%struct.latch_tree_node = type { [2 x %struct.rb_node] }
%struct.bpf_prog_ops = type { i32 (%struct.bpf_prog*, %union.bpf_attr*, %union.bpf_attr*)* }
%struct.user_struct = type { %struct.refcount_struct, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i64, i64, %struct.atomic64_t, %struct.hlist_node, %struct.kuid_t, %struct.atomic64_t, %struct.ratelimit_state }
%struct.ratelimit_state = type { %struct.raw_spinlock, i32, i32, i32, i32, i64, i64 }
%struct.bpf_prog_offload = type { %struct.bpf_prog*, %struct.net_device*, %struct.bpf_offload_dev*, i8*, %struct.list_head, i8, i8, i8*, i32 }
%struct.bpf_offload_dev = type opaque
%struct.btf = type opaque
%struct.bpf_func_info = type { i32, i32 }
%struct.bpf_func_info_aux = type { i16, i8 }
%struct.bpf_line_info = type { i32, i32, i32, i32 }
%struct.exception_table_entry = type { i32, i32, i32 }
%struct.bpf_prog_stats = type { i64, i64, %struct.u64_stats_sync }
%union.anon.92 = type { %struct.work_struct }
%struct.sock_fprog_kern = type { i16, %struct.sock_filter* }
%struct.sock_filter = type { i16, i8, i8, i32 }
%struct.netdev_queue = type { %struct.net_device*, %struct.Qdisc*, %struct.Qdisc*, %struct.kobject, i64, i64, %struct.net_device*, %struct.spinlock, i32, i64, i64, %struct.dql }
%struct.dql = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32 }
%struct.Qdisc = type { i32 (%struct.sk_buff*, %struct.Qdisc*, %struct.sk_buff**)*, %struct.sk_buff* (%struct.Qdisc*)*, i32, i32, %struct.Qdisc_ops*, %struct.qdisc_size_table*, %struct.hlist_node, i32, i32, %struct.netdev_queue*, %struct.net_rate_estimator*, %struct.gnet_stats_basic_cpu*, %struct.gnet_stats_queue*, i32, %struct.refcount_struct, %struct.sk_buff_head, %struct.qdisc_skb_head, %struct.gnet_stats_basic_packed, %struct.seqcount, %struct.gnet_stats_queue, i64, %struct.Qdisc*, %struct.sk_buff_head, %struct.spinlock, %struct.spinlock, i8, %struct.callback_head, [0 x i64] }
%struct.Qdisc_ops = type { %struct.Qdisc_ops*, %struct.Qdisc_class_ops*, [16 x i8], i32, i32, i32 (%struct.sk_buff*, %struct.Qdisc*, %struct.sk_buff**)*, %struct.sk_buff* (%struct.Qdisc*)*, %struct.sk_buff* (%struct.Qdisc*)*, i32 (%struct.Qdisc*, %struct.nlattr*, %struct.netlink_ext_ack*)*, void (%struct.Qdisc*)*, void (%struct.Qdisc*)*, i32 (%struct.Qdisc*, %struct.nlattr*, %struct.netlink_ext_ack*)*, void (%struct.Qdisc*)*, i32 (%struct.Qdisc*, i32)*, i32 (%struct.Qdisc*, %struct.sk_buff*)*, i32 (%struct.Qdisc*, %struct.gnet_dump*)*, void (%struct.Qdisc*, i32)*, void (%struct.Qdisc*, i32)*, i32 (%struct.Qdisc*)*, i32 (%struct.Qdisc*)*, %struct.module* }
%struct.Qdisc_class_ops = type { i32, %struct.netdev_queue* (%struct.Qdisc*, %struct.tcmsg*)*, i32 (%struct.Qdisc*, i64, %struct.Qdisc*, %struct.Qdisc**, %struct.netlink_ext_ack*)*, %struct.Qdisc* (%struct.Qdisc*, i64)*, void (%struct.Qdisc*, i64)*, i64 (%struct.Qdisc*, i32)*, i32 (%struct.Qdisc*, i32, i32, %struct.nlattr**, i64*, %struct.netlink_ext_ack*)*, i32 (%struct.Qdisc*, i64)*, void (%struct.Qdisc*, %struct.qdisc_walker*)*, %struct.tcf_block* (%struct.Qdisc*, i64, %struct.netlink_ext_ack*)*, i64 (%struct.Qdisc*, i64, i32)*, void (%struct.Qdisc*, i64)*, i32 (%struct.Qdisc*, i64, %struct.sk_buff*, %struct.tcmsg*)*, i32 (%struct.Qdisc*, i64, %struct.gnet_dump*)* }
%struct.tcmsg = type { i8, i8, i16, i32, i32, i32, i32 }
%struct.qdisc_walker = type opaque
%struct.tcf_block = type { %struct.mutex, %struct.list_head, i32, i32, %struct.refcount_struct, %struct.net*, %struct.Qdisc*, %struct.rw_semaphore, %struct.flow_block, %struct.list_head, i8, %struct.atomic_t, i32, i32, %struct.anon.165, %struct.callback_head, [128 x %struct.hlist_head], %struct.mutex }
%struct.flow_block = type { %struct.list_head }
%struct.anon.165 = type { %struct.tcf_chain*, %struct.list_head }
%struct.tcf_chain = type { %struct.mutex, %struct.tcf_proto*, %struct.list_head, %struct.tcf_block*, i32, i32, i32, i8, i8, %struct.tcf_proto_ops*, i8*, %struct.callback_head }
%struct.tcf_proto = type { %struct.tcf_proto*, i8*, i32 (%struct.sk_buff*, %struct.tcf_proto*, %struct.tcf_result*)*, i16, i32, i8*, %struct.tcf_proto_ops*, %struct.tcf_chain*, %struct.spinlock, i8, %struct.refcount_struct, %struct.callback_head, %struct.hlist_node }
%struct.tcf_result = type { %union.anon.166 }
%union.anon.166 = type { %struct.anon.167 }
%struct.anon.167 = type { i64, i32 }
%struct.tcf_proto_ops = type { %struct.list_head, [16 x i8], i32 (%struct.sk_buff*, %struct.tcf_proto*, %struct.tcf_result*)*, i32 (%struct.tcf_proto*)*, void (%struct.tcf_proto*, i1, %struct.netlink_ext_ack*)*, i8* (%struct.tcf_proto*, i32)*, void (%struct.tcf_proto*, i8*)*, i32 (%struct.net*, %struct.sk_buff*, %struct.tcf_proto*, i64, i32, %struct.nlattr**, i8**, i1, i1, %struct.netlink_ext_ack*)*, i32 (%struct.tcf_proto*, i8*, i8*, i1, %struct.netlink_ext_ack*)*, i1 (%struct.tcf_proto*)*, void (%struct.tcf_proto*, %struct.tcf_walker*, i1)*, i32 (%struct.tcf_proto*, i1, i32 (i32, i8*, i8*)*, i8*, %struct.netlink_ext_ack*)*, void (%struct.tcf_proto*, i8*)*, void (%struct.tcf_proto*, i8*)*, void (i8*, i32, i64, i8*, i64)*, i8* (%struct.net*, %struct.tcf_chain*, %struct.nlattr**, %struct.netlink_ext_ack*)*, void (i8*)*, i32 (%struct.net*, %struct.tcf_proto*, i8*, %struct.sk_buff*, %struct.tcmsg*, i1)*, i32 (%struct.net*, %struct.tcf_proto*, i8*, %struct.sk_buff*, %struct.tcmsg*, i1)*, i32 (%struct.sk_buff*, %struct.net*, i8*)*, %struct.module*, i32 }
%struct.tcf_walker = type opaque
%struct.gnet_dump = type { %struct.spinlock*, %struct.sk_buff*, %struct.nlattr*, i32, i32, i32, i8*, i32, %struct.tc_stats }
%struct.tc_stats = type { i64, i32, i32, i32, i32, i32, i32, i32 }
%struct.qdisc_size_table = type { %struct.callback_head, %struct.list_head, %struct.tc_sizespec, i32, [0 x i16] }
%struct.tc_sizespec = type { i8, i8, i16, i32, i32, i32, i32, i32 }
%struct.net_rate_estimator = type opaque
%struct.gnet_stats_basic_cpu = type { %struct.gnet_stats_basic_packed, %struct.u64_stats_sync }
%struct.qdisc_skb_head = type { %struct.sk_buff*, %struct.sk_buff*, i32, %struct.spinlock }
%struct.gnet_stats_basic_packed = type { i64, i64 }
%struct.gnet_stats_queue = type { i32, i32, i32, i32, i32 }
%struct.xdp_dev_bulk_queue = type opaque
%union.anon.169 = type { i8* }
%struct.attribute_group = type { i8*, i16 (%struct.kobject*, %struct.attribute*, i32)*, i16 (%struct.kobject*, %struct.bin_attribute*, i32)*, %struct.attribute**, %struct.bin_attribute** }
%struct.bin_attribute = type { %struct.attribute, i64, i8*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i32 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, %struct.vm_area_struct*)* }
%struct.rtnl_link_ops = type { %struct.list_head, i8*, i64, void (%struct.net_device*)*, i32, %struct.nla_policy*, i32 (%struct.nlattr**, %struct.nlattr**, %struct.netlink_ext_ack*)*, i32 (%struct.net*, %struct.net_device*, %struct.nlattr**, %struct.nlattr**, %struct.netlink_ext_ack*)*, i32 (%struct.net_device*, %struct.nlattr**, %struct.nlattr**, %struct.netlink_ext_ack*)*, void (%struct.net_device*, %struct.list_head*)*, i64 (%struct.net_device*)*, i32 (%struct.sk_buff*, %struct.net_device*)*, i64 (%struct.net_device*)*, i32 (%struct.sk_buff*, %struct.net_device*)*, i32 ()*, i32 ()*, i32, %struct.nla_policy*, i32 (%struct.net_device*, %struct.net_device*, %struct.nlattr**, %struct.nlattr**, %struct.netlink_ext_ack*)*, i64 (%struct.net_device*, %struct.net_device*)*, i32 (%struct.sk_buff*, %struct.net_device*, %struct.net_device*)*, %struct.net* (%struct.net_device*)*, i64 (%struct.net_device*, i32)*, i32 (%struct.sk_buff*, %struct.net_device*, i32*, i32)* }
%struct.netdev_tc_txq = type { i16, i16 }
%struct.phy_device = type opaque
%struct.sfp_bus = type opaque
%struct.udp_tunnel_nic_info = type opaque
%struct.udp_tunnel_nic = type opaque
%struct.bpf_xdp_entity = type { %struct.bpf_prog*, %struct.bpf_xdp_link* }
%struct.bpf_xdp_link = type opaque
%struct.netns_core = type { %struct.ctl_table_header*, i32, i32*, %struct.prot_inuse* }
%struct.prot_inuse = type opaque
%struct.netns_mib = type { %struct.tcp_mib*, %struct.ipstats_mib*, %struct.linux_mib*, %struct.udp_mib*, %struct.udp_mib*, %struct.icmp_mib*, %struct.icmpmsg_mib*, %struct.proc_dir_entry*, %struct.udp_mib*, %struct.udp_mib*, %struct.ipstats_mib*, %struct.icmpv6_mib*, %struct.icmpv6msg_mib* }
%struct.tcp_mib = type { [16 x i64] }
%struct.linux_mib = type { [124 x i64] }
%struct.icmp_mib = type { [28 x i64] }
%struct.icmpmsg_mib = type { [512 x %struct.atomic64_t] }
%struct.udp_mib = type { [9 x i64] }
%struct.icmpv6_mib = type { [6 x i64] }
%struct.icmpv6msg_mib = type { [512 x %struct.atomic64_t] }
%struct.netns_packet = type { %struct.mutex, %struct.hlist_head }
%struct.netns_unix = type { i32, %struct.ctl_table_header* }
%struct.netns_nexthop = type { %struct.rb_root, %struct.hlist_head*, i32, i32, %struct.blocking_notifier_head }
%struct.blocking_notifier_head = type { %struct.rw_semaphore, %struct.notifier_block* }
%struct.netns_ipv4 = type { %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ipv4_devconf*, %struct.ipv4_devconf*, %struct.ip_ra_chain*, %struct.mutex, i8, %struct.hlist_head*, i8, %struct.sock*, %struct.sock**, %struct.sock*, %struct.inet_peer_base*, %struct.sock**, %struct.fqdir*, i32, i32, i32, i32, i32, i32, %struct.local_ports, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [3 x i32], [3 x i32], i32, i64, i64, %struct.inet_timewait_death_row, i32, i32, %struct.tcp_congestion_ops*, %struct.tcp_fastopen_context*, %struct.spinlock, i32, %struct.atomic_t, i64, i32, i32, i32, i32, i32, i32, i32, %struct.ping_group_range, %struct.atomic_t, i64*, i32, %struct.fib_notifier_ops*, i32, %struct.fib_notifier_ops*, i32, %struct.atomic_t, %struct.siphash_key_t }
%struct.ipv4_devconf = type opaque
%struct.ip_ra_chain = type { %struct.ip_ra_chain*, %struct.sock*, %union.anon.98, %struct.callback_head }
%union.anon.98 = type { void (%struct.sock*)* }
%struct.inet_peer_base = type { %struct.rb_root, %struct.seqlock_t, i32 }
%struct.fqdir = type { i64, i64, i32, i32, %struct.inet_frags*, %struct.net*, i8, %struct.rhashtable, %struct.atomic64_t, %struct.work_struct }
%struct.inet_frags = type { i32, void (%struct.inet_frag_queue*, i8*)*, void (%struct.inet_frag_queue*)*, void (%struct.timer_list*)*, %struct.kmem_cache*, i8*, %struct.rhashtable_params, %struct.refcount_struct, %struct.completion }
%struct.inet_frag_queue = type { %struct.rhash_head, %union.anon.99, %struct.timer_list, %struct.spinlock, %struct.refcount_struct, %struct.rb_root, %struct.sk_buff*, %struct.sk_buff*, i64, i32, i32, i8, i16, %struct.fqdir*, %struct.callback_head }
%struct.rhash_head = type { %struct.rhash_head* }
%union.anon.99 = type { %struct.frag_v6_compare_key }
%struct.frag_v6_compare_key = type { %struct.in6_addr, %struct.in6_addr, i32, i32, i32 }
%struct.kmem_cache = type opaque
%struct.rhashtable_params = type { i16, i16, i16, i16, i32, i16, i8, i32 (i8*, i32, i32)*, i32 (i8*, i32, i32)*, i32 (%struct.rhashtable_compare_arg*, i8*)* }
%struct.rhashtable_compare_arg = type { %struct.rhashtable*, i8* }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.rhashtable = type { %struct.bucket_table*, i32, i32, %struct.rhashtable_params, i8, %struct.work_struct, %struct.mutex, %struct.spinlock, %struct.atomic_t }
%struct.bucket_table = type opaque
%struct.local_ports = type { %struct.seqlock_t, [2 x i32], i8 }
%struct.inet_timewait_death_row = type { %struct.atomic_t, %struct.inet_hashinfo*, i32 }
%struct.inet_hashinfo = type opaque
%struct.tcp_congestion_ops = type opaque
%struct.tcp_fastopen_context = type opaque
%struct.ping_group_range = type { %struct.seqlock_t, [2 x %struct.kgid_t] }
%struct.fib_notifier_ops = type { i32, %struct.list_head, i32 (%struct.net*)*, i32 (%struct.net*, %struct.notifier_block*, %struct.netlink_ext_ack*)*, %struct.module*, %struct.callback_head }
%struct.siphash_key_t = type { [2 x i64] }
%struct.netns_ipv6 = type { %struct.netns_sysctl_ipv6, %struct.ipv6_devconf*, %struct.ipv6_devconf*, %struct.inet_peer_base*, %struct.fqdir*, %struct.fib6_info*, %struct.rt6_info*, %struct.rt6_statistics*, %struct.timer_list, %struct.hlist_head*, %struct.fib6_table*, %struct.list_head, %struct.dst_ops, %struct.rwlock_t, %struct.spinlock, i32, i64, %struct.sock**, %struct.sock*, %struct.sock*, %struct.sock*, %struct.sock*, %struct.atomic_t, %struct.atomic_t, %struct.seg6_pernet_data*, %struct.fib_notifier_ops*, %struct.fib_notifier_ops*, i32, %struct.anon.100 }
%struct.netns_sysctl_ipv6 = type { %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, %struct.ctl_table_header*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i64], i64*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8 }
%struct.rt6_info = type opaque
%struct.rt6_statistics = type opaque
%struct.fib6_table = type opaque
%struct.dst_ops = type { i16, i32, i32 (%struct.dst_ops*)*, %struct.dst_entry* (%struct.dst_entry*, i32)*, i32 (%struct.dst_entry*)*, i32 (%struct.dst_entry*)*, i32* (%struct.dst_entry*, i64)*, void (%struct.dst_entry*)*, void (%struct.dst_entry*, %struct.net_device*, i32)*, %struct.dst_entry* (%struct.dst_entry*)*, void (%struct.sk_buff*)*, void (%struct.dst_entry*, %struct.sock*, %struct.sk_buff*, i32, i1)*, void (%struct.dst_entry*, %struct.sock*, %struct.sk_buff*)*, i32 (%struct.net*, %struct.sock*, %struct.sk_buff*)*, %struct.neighbour* (%struct.dst_entry*, %struct.sk_buff*, i8*)*, void (%struct.dst_entry*, i8*)*, %struct.kmem_cache*, %struct.percpu_counter }
%struct.percpu_counter = type { i64 }
%struct.seg6_pernet_data = type opaque
%struct.anon.100 = type { %struct.hlist_head, %struct.spinlock, i32 }
%struct.net_generic = type opaque
%struct.netns_bpf = type { [2 x %struct.bpf_prog_array*], [2 x %struct.bpf_prog*], [2 x %struct.list_head] }
%struct.bpf_prog_array = type { %struct.callback_head, [0 x %struct.bpf_prog_array_item] }
%struct.bpf_prog_array_item = type { %struct.bpf_prog*, [2 x %struct.bpf_cgroup_storage*] }
%struct.bpf_cgroup_storage = type opaque
%struct.netns_can = type { %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.proc_dir_entry*, %struct.can_dev_rcv_lists*, %struct.spinlock, %struct.timer_list, %struct.can_pkg_stats*, %struct.can_rcv_lists_stats*, %struct.hlist_head }
%struct.can_dev_rcv_lists = type opaque
%struct.can_pkg_stats = type opaque
%struct.can_rcv_lists_stats = type opaque
%struct.in6_addr = type { %union.anon.59 }
%union.anon.59 = type { [4 x i32] }
%union.anon.60 = type { i64 }
%union.anon.61 = type { %struct.hlist_node }
%union.anon.62 = type { i32 }
%union.anon.63 = type { i32 }
%struct.socket_lock_t = type { %struct.spinlock, i32, %struct.wait_queue_head }
%struct.anon.64 = type { %struct.atomic_t, i32, %struct.sk_buff*, %struct.sk_buff* }
%struct.sk_filter = type { %struct.refcount_struct, %struct.callback_head, %struct.bpf_prog* }
%union.anon.93 = type { %struct.socket_wq* }
%struct.socket_wq = type { %struct.wait_queue_head, %struct.fasync_struct*, i64, %struct.callback_head }
%struct.fasync_struct = type { %struct.rwlock_t, i32, i32, %struct.fasync_struct*, %struct.file*, %struct.callback_head }
%struct.dst_entry = type { %struct.net_device*, %struct.dst_ops*, i64, i64, i8*, i32 (%struct.sk_buff*)*, i32 (%struct.net*, %struct.sock*, %struct.sk_buff*)*, i16, i16, i16, i16, %struct.atomic_t, i32, i64, %struct.lwtunnel_state*, %struct.callback_head, i16, i16, i32 }
%struct.lwtunnel_state = type opaque
%union.anon.96 = type { %struct.sk_buff* }
%struct.sk_buff = type { %union.anon.46, %union.anon.49, %union.anon.50, [48 x i8], %union.anon.51, i32, i32, i16, i16, i16, [0 x i8], i8, [0 x i32], [0 x i8], i16, [0 x i8], i16, %union.anon.53, i32, i32, i32, i16, i16, %union.anon.55, %union.anon.56, %union.anon.57, i16, i16, i16, i16, i16, i16, i16, [0 x i32], i32, i32, i8*, i8*, i32, %struct.refcount_struct }
%union.anon.46 = type { %struct.anon.47 }
%struct.anon.47 = type { %struct.sk_buff*, %struct.sk_buff*, %union.anon.48 }
%union.anon.48 = type { %struct.net_device* }
%union.anon.49 = type { %struct.sock* }
%union.anon.50 = type { i64 }
%union.anon.51 = type { %struct.anon.52 }
%struct.anon.52 = type { i64, void (%struct.sk_buff*)* }
%union.anon.53 = type { i32 }
%union.anon.55 = type { i32 }
%union.anon.56 = type { i32 }
%union.anon.57 = type { i16 }
%struct.sk_buff_head = type { %struct.sk_buff*, %struct.sk_buff*, i32, %struct.spinlock }
%struct.timer_list = type { %struct.hlist_node, i64, void (%struct.timer_list*)*, i32 }
%struct.proto = type { void (%struct.sock*, i64)*, i32 (%struct.sock*, %struct.sockaddr*, i32)*, i32 (%struct.sock*, %struct.sockaddr*, i32)*, i32 (%struct.sock*, i32)*, %struct.sock* (%struct.sock*, i32, i32*, i1)*, i32 (%struct.sock*, i32, i64)*, i32 (%struct.sock*)*, void (%struct.sock*)*, void (%struct.sock*, i32)*, i32 (%struct.sock*, i32, i32, i8*, i8, i32)*, i32 (%struct.sock*, i32, i32, i8*, i32*)*, void (%struct.sock*, i32)*, i32 (%struct.sock*, %struct.msghdr*, i64)*, i32 (%struct.sock*, %struct.msghdr*, i64, i32, i32, i32*)*, i32 (%struct.sock*, %struct.page*, i32, i64, i32)*, i32 (%struct.sock*, %struct.sockaddr*, i32)*, i32 (%struct.sock*, %struct.sockaddr*, i32)*, i32 (%struct.sock*, %struct.sk_buff*)*, void (%struct.sock*)*, i32 (%struct.sock*)*, void (%struct.sock*)*, void (%struct.sock*)*, i32 (%struct.sock*, i16)*, i32, i1 (%struct.sock*, i32)*, i1 (%struct.sock*)*, void (%struct.sock*)*, void (%struct.sock*)*, %struct.atomic64_t*, %struct.percpu_counter*, i64*, i64*, i32*, i32*, i32, i32, i32, i8, %struct.kmem_cache*, i32, i32, i32, i32, %struct.percpu_counter*, %struct.request_sock_ops*, %struct.timewait_sock_ops*, %union.anon.58, %struct.module*, [32 x i8], %struct.list_head, i32 (%struct.sock*, i32)* }
%struct.msghdr = type { i8*, i32, %struct.iov_iter, %union.anon.45, i8, i64, i32, %struct.kiocb* }
%struct.iov_iter = type { i32, i64, i64, %union.anon.5, %union.anon.6 }
%union.anon.5 = type { %struct.iovec* }
%struct.iovec = type { i8*, i64 }
%union.anon.6 = type { i64 }
%union.anon.45 = type { i8* }
%struct.kiocb = type { %struct.file*, i64, void (%struct.kiocb*, i64, i64)*, i8*, i32, i16, i16, %union.anon.4 }
%union.anon.4 = type { %struct.wait_page_queue* }
%struct.wait_page_queue = type { %struct.page*, i32, %struct.wait_queue_entry }
%struct.wait_queue_entry = type { i32, i8*, i32 (%struct.wait_queue_entry*, i32, i32, i8*)*, %struct.list_head }
%struct.sockaddr = type { i16, [14 x i8] }
%struct.request_sock_ops = type { i32, i32, %struct.kmem_cache*, i8*, i32 (%struct.sock*, %struct.request_sock*)*, void (%struct.sock*, %struct.sk_buff*, %struct.request_sock*)*, void (%struct.sock*, %struct.sk_buff*)*, void (%struct.request_sock*)*, void (%struct.request_sock*)* }
%struct.request_sock = type { %struct.sock_common, %struct.request_sock*, i16, i8, i8, i32, %struct.timer_list, %struct.request_sock_ops*, %struct.sock*, %struct.saved_syn*, i32, i32 }
%struct.saved_syn = type { i32, i32, i32, [0 x i8] }
%struct.timewait_sock_ops = type { %struct.kmem_cache*, i8*, i32, i32 (%struct.sock*, %struct.sock*, i8*)*, void (%struct.sock*)* }
%union.anon.58 = type { %struct.inet_hashinfo* }
%struct.rwlock_t = type { %struct.arch_rwlock_t }
%struct.arch_rwlock_t = type {}
%struct.socket = type { i32, i16, i64, %struct.file*, %struct.sock*, %struct.proto_ops*, %struct.socket_wq }
%struct.proto_ops = type { i32, i32, %struct.module*, i32 (%struct.socket*)*, i32 (%struct.socket*, %struct.sockaddr*, i32)*, i32 (%struct.socket*, %struct.sockaddr*, i32, i32)*, i32 (%struct.socket*, %struct.socket*)*, i32 (%struct.socket*, %struct.socket*, i32, i1)*, i32 (%struct.socket*, %struct.sockaddr*, i32)*, i32 (%struct.file*, %struct.socket*, %struct.poll_table_struct*)*, i32 (%struct.socket*, i32, i64)*, i32 (%struct.socket*, i8*, i1, i1)*, i32 (%struct.socket*, i32)*, i32 (%struct.socket*, i32)*, i32 (%struct.socket*, i32, i32, i8*, i8, i32)*, i32 (%struct.socket*, i32, i32, i8*, i32*)*, void (%struct.seq_file*, %struct.socket*)*, i32 (%struct.socket*, %struct.msghdr*, i64)*, i32 (%struct.socket*, %struct.msghdr*, i64, i32)*, i32 (%struct.file*, %struct.socket*, %struct.vm_area_struct*)*, i64 (%struct.socket*, %struct.page*, i32, i64, i32)*, i64 (%struct.socket*, i64*, %struct.pipe_inode_info*, i64, i32)*, i32 (%struct.sock*, i32)*, i32 (%struct.socket*)*, i32 (%struct.sock*, %struct.read_descriptor_t*, i32 (%struct.read_descriptor_t*, %struct.sk_buff*, i32, i64)*)*, i32 (%struct.sock*, %struct.page*, i32, i64, i32)*, i32 (%struct.sock*, %struct.msghdr*, i64)*, i32 (%struct.sock*, i32)* }
%struct.read_descriptor_t = type { i64, i64, %union.anon.97, i32 }
%union.anon.97 = type { i8* }
%struct.sock_cgroup_data = type {}
%struct.sock_reuseport = type opaque
%struct.kernfs_node = type { %struct.atomic_t, %struct.atomic_t, %struct.kernfs_node*, i8*, %struct.rb_node, i8*, i32, %union.anon.135, i8*, i64, i16, i16, %struct.kernfs_iattrs* }
%union.anon.135 = type { %struct.kernfs_elem_attr }
%struct.kernfs_elem_attr = type { %struct.kernfs_ops*, %struct.kernfs_open_node*, i64, %struct.kernfs_node* }
%struct.kernfs_ops = type { i32 (%struct.kernfs_open_file*)*, void (%struct.kernfs_open_file*)*, i32 (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i64*)*, i8* (%struct.seq_file*, i8*, i64*)*, void (%struct.seq_file*, i8*)*, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i64, i8, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i32 (%struct.kernfs_open_file*, %struct.poll_table_struct*)*, i32 (%struct.kernfs_open_file*, %struct.vm_area_struct*)* }
%struct.kernfs_open_file = type { %struct.kernfs_node*, %struct.file*, %struct.seq_file*, i8*, %struct.mutex, %struct.mutex, i32, %struct.list_head, i8*, i64, i8, %struct.vm_operations_struct* }
%struct.kernfs_open_node = type opaque
%struct.kernfs_iattrs = type opaque
%struct.kref = type { %struct.refcount_struct }
%struct.device_private = type opaque
%struct.device_type = type { i8*, %struct.attribute_group**, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*, %struct.kuid_t*, %struct.kgid_t*)*, void (%struct.device*)*, %struct.dev_pm_ops* }
%struct.dev_pm_ops = type { i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)* }
%struct.bus_type = type { i8*, i8*, %struct.device*, %struct.attribute_group**, %struct.attribute_group**, %struct.attribute_group**, i32 (%struct.device*, %struct.device_driver*)*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, %struct.dev_pm_ops*, %struct.iommu_ops*, %struct.subsys_private*, %struct.lock_class_key, i8 }
%struct.iommu_ops = type opaque
%struct.subsys_private = type opaque
%struct.device_driver = type { i8*, %struct.bus_type*, %struct.module*, i8*, i8, i32, %struct.of_device_id*, %struct.acpi_device_id*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, %struct.attribute_group**, %struct.attribute_group**, %struct.dev_pm_ops*, void (%struct.device*)*, %struct.driver_private* }
%struct.of_device_id = type { [32 x i8], [32 x i8], [128 x i8], i8* }
%struct.acpi_device_id = type { [9 x i8], i64, i32, i32 }
%struct.driver_private = type opaque
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, i8, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, %struct.wakeup_source*, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, %struct.wake_irq*, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i64, i64, i64, i64, %struct.pm_subsys_data*, void (%struct.device*, i32)*, %struct.dev_pm_qos* }
%struct.pm_message = type { i32 }
%struct.wakeup_source = type { i8*, i32, %struct.list_head, %struct.spinlock, %struct.wake_irq*, %struct.timer_list, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.device*, i8 }
%struct.wake_irq = type opaque
%struct.pm_subsys_data = type { %struct.spinlock, i32, %struct.list_head, %struct.pm_domain_data* }
%struct.pm_domain_data = type opaque
%struct.dev_pm_qos = type opaque
%struct.dev_pm_domain = type { %struct.dev_pm_ops, i32 (%struct.device*)*, void (%struct.device*, i1)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)* }
%struct.irq_domain = type opaque
%struct.dma_map_ops = type opaque
%struct.bus_dma_region = type opaque
%struct.device_dma_parameters = type { i32, i64 }
%struct.dev_archdata = type {}
%struct.device_node = type opaque
%struct.fwnode_handle = type { %struct.fwnode_handle*, %struct.fwnode_operations*, %struct.device* }
%struct.fwnode_operations = type { %struct.fwnode_handle* (%struct.fwnode_handle*)*, void (%struct.fwnode_handle*)*, i1 (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*, %struct.device*)*, i1 (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i32, i8*, i64)*, i32 (%struct.fwnode_handle*, i8*, i8**, i64)*, i8* (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i8*, i32, i32, %struct.fwnode_reference_args*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, i32 (%struct.fwnode_handle*, %struct.fwnode_endpoint*)*, i32 (%struct.fwnode_handle*, %struct.device*)* }
%struct.fwnode_reference_args = type { %struct.fwnode_handle*, i32, [8 x i64] }
%struct.fwnode_endpoint = type { i32, i32, %struct.fwnode_handle* }
%struct.class = type { i8*, %struct.module*, %struct.attribute_group**, %struct.attribute_group**, %struct.kobject*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*)*, void (%struct.class*)*, void (%struct.device*)*, i32 (%struct.device*)*, %struct.kobj_ns_type_operations*, i8* (%struct.device*)*, void (%struct.device*, %struct.kuid_t*, %struct.kgid_t*)*, %struct.dev_pm_ops*, %struct.subsys_private* }
%struct.iommu_group = type opaque
%struct.dev_iommu = type opaque
%struct.partition_meta_info = type { [37 x i8], [64 x i8] }
%struct.rcu_work = type { %struct.work_struct, %struct.callback_head, %struct.workqueue_struct* }
%struct.gendisk = type { i32, i32, i32, [32 x i8], i16, i16, %struct.disk_part_tbl*, %struct.hd_struct, %struct.block_device_operations*, %struct.request_queue*, i8*, i32, i64, %struct.rw_semaphore, %struct.kobject*, %struct.timer_rand_state*, %struct.atomic_t, %struct.disk_events*, %struct.kobject, i32, %struct.badblocks*, %struct.lockdep_map }
%struct.disk_part_tbl = type { %struct.callback_head, i32, %struct.hd_struct*, [0 x %struct.hd_struct*] }
%struct.block_device_operations = type { i32 (%struct.bio*)*, i32 (%struct.block_device*, i32)*, void (%struct.gendisk*, i32)*, i32 (%struct.block_device*, i64, %struct.page*, i32)*, i32 (%struct.block_device*, i32, i32, i64)*, i32 (%struct.block_device*, i32, i32, i64)*, i32 (%struct.gendisk*, i32)*, void (%struct.gendisk*)*, i32 (%struct.gendisk*)*, i32 (%struct.block_device*, %struct.hd_geometry*)*, void (%struct.block_device*, i64)*, i32 (%struct.gendisk*, i64, i32, i32 (%struct.blk_zone*, i32, i8*)*, i8*)*, i8* (%struct.gendisk*, i16*)*, %struct.module*, %struct.pr_ops* }
%struct.bio = type { %struct.bio*, %struct.gendisk*, i32, i16, i16, i16, i8, i8, %struct.atomic_t, %struct.bvec_iter, void (%struct.bio*)*, i8*, %union.anon.101, i16, i16, %struct.atomic_t, %struct.bio_vec*, %struct.bio_set*, [0 x %struct.bio_vec] }
%struct.bvec_iter = type { i64, i32, i32, i32 }
%union.anon.101 = type { %struct.bio_integrity_payload* }
%struct.bio_integrity_payload = type { %struct.bio*, %struct.bvec_iter, i16, i16, i16, i16, %struct.bvec_iter, %struct.work_struct, %struct.bio_vec*, [0 x %struct.bio_vec] }
%struct.bio_vec = type { %struct.page*, i32, i32 }
%struct.bio_set = type { %struct.kmem_cache*, i32, %struct.mempool_s, %struct.mempool_s, %struct.mempool_s, %struct.mempool_s, %struct.spinlock, %struct.bio_list, %struct.work_struct, %struct.workqueue_struct* }
%struct.mempool_s = type { %struct.spinlock, i32, i32, i8**, i8*, i8* (i32, i8*)*, void (i8*, i8*)*, %struct.wait_queue_head }
%struct.bio_list = type { %struct.bio*, %struct.bio* }
%struct.hd_geometry = type opaque
%struct.blk_zone = type { i64, i64, i64, i8, i8, i8, i8, [4 x i8], i64, [24 x i8] }
%struct.pr_ops = type opaque
%struct.request_queue = type { %struct.request*, %struct.elevator_queue*, %struct.percpu_ref, %struct.blk_queue_stats*, %struct.rq_qos*, %struct.blk_mq_ops*, %struct.blk_mq_ctx*, i32, %struct.blk_mq_hw_ctx**, i32, %struct.backing_dev_info*, i8*, i64, %struct.atomic_t, i32, i32, %struct.spinlock, %struct.kobject, %struct.kobject*, %struct.blk_integrity, %struct.device*, i32, i32, i64, i32, i32, i32, i32, %struct.blk_stat_callback*, [16 x %struct.blk_rq_stat], %struct.timer_list, %struct.work_struct, %struct.atomic_t, %struct.list_head, %struct.queue_limits, i32, i32, i32, i32, %struct.mutex, %struct.blk_flush_queue*, %struct.list_head, %struct.spinlock, %struct.delayed_work, %struct.mutex, %struct.mutex, %struct.list_head, %struct.spinlock, i32, %struct.bsg_class_device, %struct.callback_head, %struct.wait_queue_head, %struct.mutex, %struct.blk_mq_tag_set*, %struct.list_head, %struct.bio_set, %struct.dentry*, i8, i64, [5 x i64] }
%struct.request = type { %struct.request_queue*, %struct.blk_mq_ctx*, %struct.blk_mq_hw_ctx*, i32, i32, i32, i32, i32, i64, %struct.bio*, %struct.bio*, %struct.list_head, %union.anon.143, %union.anon.144, %union.anon.145, %struct.gendisk*, %struct.hd_struct*, i64, i64, i16, i16, i16, i16, i16, i32, %struct.refcount_struct, i32, i64, %union.anon.148, void (%struct.request*, i8)*, i8* }
%struct.blk_mq_hw_ctx = type opaque
%union.anon.143 = type { %struct.hlist_node }
%union.anon.144 = type { %struct.rb_node }
%union.anon.145 = type { %struct.anon.147 }
%struct.anon.147 = type { i32, %struct.list_head, void (%struct.request*, i8)* }
%union.anon.148 = type { %struct.__call_single_data }
%struct.__call_single_data = type { %union.anon.149, void (i8*)*, i8* }
%union.anon.149 = type { %struct.__call_single_node }
%struct.__call_single_node = type { %struct.llist_node, %union.anon.150, i16, i16 }
%union.anon.150 = type { i32 }
%struct.elevator_queue = type { %struct.elevator_type*, i8*, %struct.kobject, %struct.mutex, i8, [64 x %struct.hlist_head] }
%struct.elevator_type = type { %struct.kmem_cache*, %struct.elevator_mq_ops, i64, i64, %struct.elv_fs_entry*, i8*, i8*, i32, %struct.module*, [22 x i8], %struct.list_head }
%struct.elevator_mq_ops = type { i32 (%struct.request_queue*, %struct.elevator_type*)*, void (%struct.elevator_queue*)*, i32 (%struct.blk_mq_hw_ctx*, i32)*, void (%struct.blk_mq_hw_ctx*, i32)*, void (%struct.blk_mq_hw_ctx*)*, i1 (%struct.request_queue*, %struct.request*, %struct.bio*)*, i1 (%struct.blk_mq_hw_ctx*, %struct.bio*, i32)*, i32 (%struct.request_queue*, %struct.request**, %struct.bio*)*, void (%struct.request_queue*, %struct.request*, i32)*, void (%struct.request_queue*, %struct.request*, %struct.request*)*, void (i32, %struct.blk_mq_alloc_data*)*, void (%struct.request*)*, void (%struct.request*)*, void (%struct.blk_mq_hw_ctx*, %struct.list_head*, i1)*, %struct.request* (%struct.blk_mq_hw_ctx*)*, i1 (%struct.blk_mq_hw_ctx*)*, void (%struct.request*, i64)*, void (%struct.request*)*, %struct.request* (%struct.request_queue*, %struct.request*)*, %struct.request* (%struct.request_queue*, %struct.request*)*, void (%struct.io_cq*)*, void (%struct.io_cq*)* }
%struct.blk_mq_alloc_data = type opaque
%struct.io_cq = type { %struct.request_queue*, %struct.io_context*, %union.anon.102, %union.anon.103, i32 }
%union.anon.102 = type { %struct.list_head }
%union.anon.103 = type { %struct.hlist_node }
%struct.elv_fs_entry = type { %struct.attribute, i64 (%struct.elevator_queue*, i8*)*, i64 (%struct.elevator_queue*, i8*, i64)* }
%struct.blk_queue_stats = type opaque
%struct.rq_qos = type opaque
%struct.blk_mq_ops = type opaque
%struct.blk_mq_ctx = type opaque
%struct.blk_integrity = type { %struct.blk_integrity_profile*, i8, i8, i8, i8 }
%struct.blk_integrity_profile = type { i8 (%struct.blk_integrity_iter*)*, i8 (%struct.blk_integrity_iter*)*, void (%struct.request*)*, void (%struct.request*, i32)*, i8* }
%struct.blk_integrity_iter = type { i8*, i8*, i64, i32, i16, i8* }
%struct.blk_stat_callback = type opaque
%struct.blk_rq_stat = type { i64, i64, i64, i32, i64 }
%struct.queue_limits = type { i64, i64, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, i8, i8, i8, i32 }
%struct.blk_flush_queue = type opaque
%struct.bsg_class_device = type { %struct.device*, i32, %struct.request_queue*, %struct.bsg_ops* }
%struct.bsg_ops = type { i32 (%struct.sg_io_v4*)*, i32 (%struct.request*, %struct.sg_io_v4*, i32)*, i32 (%struct.request*, %struct.sg_io_v4*)*, void (%struct.request*)* }
%struct.sg_io_v4 = type { i32, i32, i32, i32, i64, i64, i32, i32, i32, i32, i64, i32, i32, i32, i32, i64, i64, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32 }
%struct.blk_mq_tag_set = type opaque
%struct.timer_rand_state = type opaque
%struct.disk_events = type opaque
%struct.badblocks = type opaque
%struct.lockdep_map = type {}
%struct.mtd_info = type opaque
%struct.quota_info = type { i32, %struct.rw_semaphore, [3 x %struct.inode*], [3 x %struct.mem_dqinfo], [3 x %struct.quota_format_ops*] }
%struct.mem_dqinfo = type { %struct.quota_format_type*, i32, %struct.list_head, i64, i32, i32, i64, i64, i8* }
%struct.quota_format_type = type { i32, %struct.quota_format_ops*, %struct.module*, %struct.quota_format_type* }
%struct.quota_format_ops = type { i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.sb_writers = type { i32, %struct.wait_queue_head, [3 x %struct.percpu_rw_semaphore] }
%struct.percpu_rw_semaphore = type { %struct.rcu_sync, i32*, %struct.rcuwait, %struct.wait_queue_head, %struct.atomic_t }
%struct.rcu_sync = type { i32, i32, %struct.wait_queue_head, %struct.callback_head }
%struct.rcuwait = type { %struct.task_struct* }
%struct.uuid_t = type { [16 x i8] }
%struct.shrinker = type { i64 (%struct.shrinker*, %struct.shrink_control*)*, i64 (%struct.shrinker*, %struct.shrink_control*)*, i64, i32, i32, %struct.list_head, %struct.atomic64_t* }
%struct.workqueue_struct = type opaque
%struct.hlist_head = type { %struct.hlist_node* }
%struct.list_lru = type { %struct.list_lru_node* }
%struct.list_lru_node = type { %struct.spinlock, %struct.list_lru_one, i64 }
%struct.list_lru_one = type { %struct.list_head, i64 }
%union.anon.125 = type { i32 }
%struct.timespec64 = type { i64, i64 }
%struct.hlist_node = type { %struct.hlist_node*, %struct.hlist_node** }
%union.anon.126 = type { %struct.callback_head }
%union.anon.127 = type { %struct.file_operations* }
%struct.file_operations = type { %struct.module*, i64 (%struct.file*, i64, i32)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.kiocb*, i1)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.poll_table_struct*)*, i64 (%struct.file*, i32, i64)*, i64 (%struct.file*, i32, i64)*, i32 (%struct.file*, %struct.vm_area_struct*)*, i64, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i8*)*, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i64, i64, i32)*, i32 (i32, %struct.file*, i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.file*, %struct.page*, i32, i64, i64*, i32)*, i64 (%struct.file*, i64, i64, i64, i64)*, i32 (i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.pipe_inode_info*, %struct.file*, i64*, i64, i32)*, i64 (%struct.file*, i64*, %struct.pipe_inode_info*, i64, i32)*, i32 (%struct.file*, i64, %struct.file_lock**, i8**)*, i64 (%struct.file*, i32, i64, i64)*, void (%struct.seq_file*, %struct.file*)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i32 (%struct.file*, i64, i64, i32)* }
%struct.dir_context = type { i32 (%struct.dir_context*, i8*, i32, i64, i64, i32)*, i64 }
%struct.file_lock = type { %struct.file_lock*, %struct.list_head, %struct.hlist_node, %struct.list_head, %struct.list_head, i8*, i32, i8, i32, i32, %struct.wait_queue_head, %struct.file*, i64, i64, %struct.fasync_struct*, i64, i64, %struct.file_lock_operations*, %struct.lock_manager_operations*, %union.anon.128 }
%struct.file_lock_operations = type { void (%struct.file_lock*, %struct.file_lock*)*, void (%struct.file_lock*)* }
%struct.lock_manager_operations = type { i8* (i8*)*, void (i8*)*, void (%struct.file_lock*)*, i32 (%struct.file_lock*, i32)*, i1 (%struct.file_lock*)*, i32 (%struct.file_lock*, i32, %struct.list_head*)*, void (%struct.file_lock*, i8**)*, i1 (%struct.file_lock*)* }
%union.anon.128 = type { %struct.nfs_lock_info }
%struct.nfs_lock_info = type { i32, %struct.nlm_lockowner*, %struct.list_head }
%struct.nlm_lockowner = type opaque
%struct.file_lock_context = type { %struct.spinlock, %struct.list_head, %struct.list_head, %struct.list_head }
%union.anon.130 = type { %struct.pipe_inode_info* }
%struct.fsnotify_mark_connector = type opaque
%struct.xarray = type { %struct.spinlock, i32, i8* }
%struct.address_space_operations = type { i32 (%struct.page*, %struct.writeback_control*)*, i32 (%struct.file*, %struct.page*)*, i32 (%struct.address_space*, %struct.writeback_control*)*, i32 (%struct.page*)*, i32 (%struct.file*, %struct.address_space*, %struct.list_head*, i32)*, void (%struct.readahead_control*)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page**, i8**)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page*, i8*)*, i64 (%struct.address_space*, i64)*, void (%struct.page*, i32, i32)*, i32 (%struct.page*, i32)*, void (%struct.page*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.address_space*, %struct.page*, %struct.page*, i32)*, i1 (%struct.page*, i32)*, void (%struct.page*)*, i32 (%struct.page*)*, i32 (%struct.page*, i64, i64)*, void (%struct.page*, i8*, i8*)*, i32 (%struct.address_space*, %struct.page*)*, i32 (%struct.swap_info_struct*, %struct.file*, i64*)*, void (%struct.file*)* }
%struct.readahead_control = type { %struct.file*, %struct.address_space*, i64, i32, i32 }
%struct.swap_info_struct = type opaque
%union.anon.123 = type { %struct.atomic_t }
%struct.vm_userfaultfd_ctx = type {}
%struct.rb_root = type { %struct.rb_node* }
%struct.pgd_t = type { i64 }
%struct.rw_semaphore = type { %struct.atomic64_t, %struct.atomic64_t, %struct.raw_spinlock, %struct.list_head }
%struct.mm_rss_stat = type { [4 x %struct.atomic64_t] }
%struct.linux_binfmt = type opaque
%struct.mm_context_t = type { i64, %struct.atomic64_t, %struct.rw_semaphore, %struct.ldt_struct*, i16, %struct.mutex, i8*, %struct.vdso_image*, %struct.atomic_t, i16, i16 }
%struct.ldt_struct = type opaque
%struct.vdso_image = type { i8*, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.core_state = type { %struct.atomic_t, %struct.core_thread, %struct.completion }
%struct.core_thread = type { %struct.task_struct*, %struct.core_thread* }
%struct.kioctx_table = type opaque
%struct.user_namespace = type { %struct.uid_gid_map, %struct.uid_gid_map, %struct.uid_gid_map, %struct.atomic_t, %struct.user_namespace*, i32, %struct.kuid_t, %struct.kgid_t, %struct.ns_common, i64, %struct.list_head, %struct.key*, %struct.rw_semaphore, %struct.work_struct, %struct.ctl_table_set, %struct.ctl_table_header*, %struct.ucounts*, [10 x i32] }
%struct.uid_gid_map = type { i32, %union.anon.25 }
%union.anon.25 = type { %struct.anon.26, [48 x i8] }
%struct.anon.26 = type { %struct.uid_gid_extent*, %struct.uid_gid_extent* }
%struct.uid_gid_extent = type { i32, i32, i32 }
%struct.file = type { %union.anon, %struct.path, %struct.inode*, %struct.file_operations*, %struct.spinlock, i32, %struct.atomic64_t, i32, i32, %struct.mutex, i64, %struct.fown_struct, %struct.cred*, %struct.file_ra_state, i64, i8*, %struct.list_head, %struct.list_head, %struct.address_space*, i32, i32 }
%union.anon = type { %struct.callback_head }
%struct.fown_struct = type { %struct.rwlock_t, %struct.pid*, i32, %struct.kuid_t, %struct.kuid_t, i32 }
%struct.file_ra_state = type { i64, i32, i32, i32, i32, i64 }
%struct.mmu_notifier_subscriptions = type opaque
%struct.atomic_t = type { i32 }
%struct.uprobes_state = type {}
%struct.work_struct = type { %struct.atomic64_t, %struct.list_head, void (%struct.work_struct*)* }
%struct.vmacache = type { i64, [4 x %struct.vm_area_struct*] }
%struct.restart_block = type { i64 (%struct.restart_block*)*, %union.anon.20 }
%union.anon.20 = type { %struct.anon.21 }
%struct.anon.21 = type { i32*, i32, i32, i32, i64, i32* }
%struct.pid = type { %struct.refcount_struct, i32, %struct.spinlock, [4 x %struct.hlist_head], %struct.hlist_head, %struct.wait_queue_head, %struct.callback_head, [1 x %struct.upid] }
%struct.upid = type { i32, %struct.pid_namespace* }
%struct.pid_namespace = type { %struct.kref, %struct.idr, %struct.callback_head, i32, %struct.task_struct*, %struct.kmem_cache*, i32, %struct.pid_namespace*, %struct.user_namespace*, %struct.ucounts*, i32, %struct.ns_common }
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.posix_cputimers_work = type { %struct.callback_head, i32 }
%struct.cred = type { %struct.atomic_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, i32, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, i8, %struct.key*, %struct.key*, %struct.key*, %struct.key*, %struct.user_struct*, %struct.user_namespace*, %struct.group_info*, %union.anon.37 }
%struct.kernel_cap_struct = type { [2 x i32] }
%struct.group_info = type { %struct.atomic_t, i32, [0 x %struct.kgid_t] }
%union.anon.37 = type { %struct.callback_head }
%struct.key = type { %struct.refcount_struct, i32, %union.anon.27, %struct.rw_semaphore, %struct.key_user*, i8*, %union.anon.28, i64, %struct.kuid_t, %struct.kgid_t, i32, i16, i16, i16, i64, %union.anon.29, %union.anon.33, %struct.key_restriction* }
%union.anon.27 = type { %struct.rb_node }
%struct.key_user = type opaque
%union.anon.28 = type { i64 }
%union.anon.29 = type { %struct.keyring_index_key }
%struct.keyring_index_key = type { i64, %union.anon.30, %struct.key_type*, %struct.key_tag*, i8* }
%union.anon.30 = type { i64 }
%struct.key_type = type opaque
%union.anon.33 = type { %union.key_payload }
%union.key_payload = type { [4 x i8*] }
%struct.key_restriction = type { i32 (%struct.key*, %struct.key_type*, %union.key_payload*, %struct.key*)*, %struct.key*, %struct.key_type* }
%struct.nameidata = type opaque
%struct.fs_struct = type opaque
%struct.files_struct = type opaque
%struct.io_uring_task = type opaque
%struct.nsproxy = type { %struct.atomic_t, %struct.uts_namespace*, %struct.ipc_namespace*, %struct.mnt_namespace*, %struct.pid_namespace*, %struct.net*, %struct.time_namespace*, %struct.time_namespace*, %struct.cgroup_namespace* }
%struct.uts_namespace = type opaque
%struct.ipc_namespace = type opaque
%struct.mnt_namespace = type opaque
%struct.time_namespace = type opaque
%struct.cgroup_namespace = type { %struct.refcount_struct, %struct.ns_common, %struct.user_namespace*, %struct.ucounts*, %struct.css_set* }
%struct.css_set = type opaque
%struct.signal_struct = type { %struct.refcount_struct, %struct.atomic_t, i32, %struct.list_head, %struct.wait_queue_head, %struct.task_struct*, %struct.sigpending, %struct.hlist_head, i32, i32, %struct.task_struct*, i32, i32, i8, i32, %struct.list_head, %struct.hrtimer, i64, [2 x %struct.cpu_itimer], %struct.thread_group_cputimer, %struct.posix_cputimers, [4 x %struct.pid*], %struct.pid*, i32, %struct.tty_struct*, %struct.seqlock_t, i64, i64, i64, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.task_io_accounting, i64, [16 x %struct.rlimit], i8, i16, i16, %struct.mm_struct*, %struct.mutex, %struct.mutex }
%struct.cpu_itimer = type { i64, i64 }
%struct.thread_group_cputimer = type { %struct.task_cputime_atomic }
%struct.task_cputime_atomic = type { %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t }
%struct.tty_struct = type opaque
%struct.rlimit = type { i64, i64 }
%struct.sighand_struct = type { %struct.spinlock, %struct.refcount_struct, %struct.wait_queue_head, [64 x %struct.k_sigaction] }
%struct.k_sigaction = type { %struct.sigaction }
%struct.sigaction = type { void (i32)*, i64, void ()*, %struct.sigset_t }
%struct.sigset_t = type { [1 x i64] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.seccomp = type { i32, %struct.atomic_t, %struct.seccomp_filter* }
%struct.seccomp_filter = type opaque
%struct.wake_q_node = type { %struct.wake_q_node* }
%struct.rb_root_cached = type { %struct.rb_root, %struct.rb_node* }
%struct.rt_mutex_waiter = type opaque
%struct.blk_plug = type { %struct.list_head, %struct.list_head, i16, i8, i8 }
%struct.reclaim_state = type opaque
%struct.backing_dev_info = type { i64, %struct.rb_node, %struct.list_head, i64, i64, %struct.kref, i32, i32, i32, i32, %struct.atomic64_t, %struct.bdi_writeback, %struct.list_head, %struct.wait_queue_head, %struct.device*, [64 x i8], %struct.device*, %struct.timer_list }
%struct.bdi_writeback = type { %struct.backing_dev_info*, i64, i64, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.spinlock, [4 x %struct.percpu_counter], i64, i64, i64, i64, i64, i64, i64, i64, %struct.fprop_local_percpu, i32, i32, %struct.spinlock, %struct.list_head, %struct.delayed_work, i64, %struct.list_head }
%struct.fprop_local_percpu = type { %struct.percpu_counter, i32, %struct.raw_spinlock }
%struct.io_context = type { %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.spinlock, i16, %struct.xarray, %struct.io_cq*, %struct.hlist_head, %struct.work_struct }
%struct.capture_control = type opaque
%struct.kernel_siginfo = type { %struct.anon.104 }
%struct.anon.104 = type { i32, i32, i32, %union.__sifields }
%union.__sifields = type { %struct.anon.108 }
%struct.anon.108 = type { i32, i32, i32, i64, i64 }
%struct.task_io_accounting = type {}
%struct.robust_list_head = type opaque
%struct.futex_pi_state = type opaque
%struct.perf_event_context = type opaque
%struct.rseq = type { i32, i32, %union.anon.115, i32, [12 x i8] }
%union.anon.115 = type { i64 }
%struct.tlbflush_unmap_batch = type { %struct.arch_tlbflush_unmap_batch, i8, i8 }
%struct.arch_tlbflush_unmap_batch = type { %struct.cpumask }
%union.anon.116 = type { %struct.callback_head }
%struct.pipe_inode_info = type { %struct.mutex, %struct.wait_queue_head, %struct.wait_queue_head, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.page*, %struct.fasync_struct*, %struct.fasync_struct*, %struct.pipe_buffer*, %struct.user_struct* }
%struct.pipe_buffer = type { %struct.page*, i32, i32, %struct.pipe_buf_operations*, i32, i64 }
%struct.pipe_buf_operations = type { i32 (%struct.pipe_inode_info*, %struct.pipe_buffer*)*, void (%struct.pipe_inode_info*, %struct.pipe_buffer*)*, i1 (%struct.pipe_inode_info*, %struct.pipe_buffer*)*, i1 (%struct.pipe_inode_info*, %struct.pipe_buffer*)* }
%struct.page_frag = type { %struct.page*, i32, i32 }
%struct.vm_struct = type { %struct.vm_struct*, i8*, i64, i64, %struct.page**, i32, i64, i8* }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.callback_head = type { %struct.callback_head*, void (%struct.callback_head*)* }
%struct.thread_struct = type { [3 x %struct.desc_struct], i64, i16, i16, i16, i16, i64, i64, [4 x %struct.perf_event*], i64, i64, i64, i64, i64, %struct.io_bitmap*, i64, i8, [47 x i8], %struct.fpu }
%struct.desc_struct = type { i16, i16, i32 }
%struct.perf_event = type opaque
%struct.io_bitmap = type opaque
%struct.fpu = type { i32, i64, [48 x i8], %union.fpregs_state }
%union.fpregs_state = type { %struct.xregs_state, [3520 x i8] }
%struct.xregs_state = type { %struct.fxregs_state, %struct.xstate_header, [0 x i8] }
%struct.fxregs_state = type { i16, i16, i16, i16, %union.anon.117, i32, i32, [32 x i32], [64 x i32], [12 x i32], %union.anon.120 }
%union.anon.117 = type { %struct.anon.118 }
%struct.anon.118 = type { i64, i64 }
%union.anon.120 = type { [12 x i32] }
%struct.xstate_header = type { i64, i64, [6 x i64] }
%struct.mlx5_core_dev = type { %struct.device*, i32, %struct.pci_dev*, %struct.mutex, i32, i8, [64 x i8], %struct.mlx5_cmd, [2 x %struct.mlx5_port_caps], %struct.anon.137, i64, i64, %struct.mlx5_init_seg*, i64, i32, %struct.mutex, i64, %struct.mlx5_priv, %struct.mlx5_profile*, i32, %struct.mlx5e_resources, %struct.mlx5_dm*, %struct.mlx5_vxlan*, %struct.mlx5_geneve*, %struct.anon.139, %struct.mlx5_clock, %struct.mlx5_ib_clock_info*, %struct.mlx5_fw_tracer*, %struct.mlx5_rsc_dump*, i32, %struct.mlx5_hv_vhca* }
%struct.pci_dev = type <{ %struct.list_head, %struct.pci_bus*, %struct.pci_bus*, i8*, %struct.proc_dir_entry*, %struct.pci_slot*, i32, i16, i16, i16, i16, i32, i8, i8, i8, i8, i8, i8, i8, i8, i16, [6 x i8], i64*, %struct.pci_driver*, i64, %struct.device_dma_parameters, i32, i8, i8, i24, [2 x i8], i32, i32, [4 x i8], %struct.pcie_link_state*, i8, [3 x i8], i32, i8, [3 x i8], i32, %struct.device, i32, i32, [17 x %struct.resource], i8, [5 x i8], i16, %struct.atomic_t, [16 x i32], [4 x i8], %struct.hlist_head, %struct.bin_attribute*, i32, [4 x i8], [17 x %struct.bin_attribute*], [17 x %struct.bin_attribute*], %struct.attribute_group**, %struct.pci_vpd*, %union.anon.136, i16, i8, i8, i16, [2 x i8], i64, i64, i8*, i64 }>
%struct.pci_bus = type { %struct.list_head, %struct.pci_bus*, %struct.list_head, %struct.list_head, %struct.pci_dev*, %struct.list_head, [4 x %struct.resource*], %struct.list_head, %struct.resource, %struct.pci_ops*, %struct.msi_controller*, i8*, %struct.proc_dir_entry*, i8, i8, i8, i8, [48 x i8], i16, i16, %struct.device*, %struct.device, %struct.bin_attribute*, %struct.bin_attribute*, i8 }
%struct.resource = type { i64, i64, i8*, i64, i64, %struct.resource*, %struct.resource*, %struct.resource* }
%struct.pci_ops = type { i32 (%struct.pci_bus*)*, void (%struct.pci_bus*)*, i8* (%struct.pci_bus*, i32, i32)*, i32 (%struct.pci_bus*, i32, i32, i32, i32*)*, i32 (%struct.pci_bus*, i32, i32, i32, i32)* }
%struct.msi_controller = type opaque
%struct.pci_slot = type { %struct.pci_bus*, %struct.list_head, %struct.hotplug_slot*, i8, %struct.kobject }
%struct.hotplug_slot = type opaque
%struct.pci_driver = type { %struct.list_head, i8*, %struct.pci_device_id*, i32 (%struct.pci_dev*, %struct.pci_device_id*)*, void (%struct.pci_dev*)*, i32 (%struct.pci_dev*, i32)*, i32 (%struct.pci_dev*)*, void (%struct.pci_dev*)*, i32 (%struct.pci_dev*, i32)*, %struct.pci_error_handlers*, %struct.attribute_group**, %struct.device_driver, %struct.pci_dynids }
%struct.pci_device_id = type { i32, i32, i32, i32, i32, i32, i64 }
%struct.pci_error_handlers = type { i32 (%struct.pci_dev*, i32)*, i32 (%struct.pci_dev*)*, i32 (%struct.pci_dev*)*, void (%struct.pci_dev*)*, void (%struct.pci_dev*)*, void (%struct.pci_dev*)* }
%struct.pci_dynids = type { %struct.spinlock, %struct.list_head }
%struct.pcie_link_state = type opaque
%struct.pci_vpd = type opaque
%union.anon.136 = type { %struct.pci_sriov* }
%struct.pci_sriov = type opaque
%struct.mlx5_cmd = type { %struct.mlx5_nb, i32, i8*, i64, i32, i8*, i64, i16, i8, i8, i32, i32, i32*, %struct.spinlock, %struct.spinlock, i8, i64, [32 x i8], %struct.workqueue_struct*, %struct.semaphore, %struct.semaphore, i32, i16, [32 x %struct.mlx5_cmd_work_ent*], %struct.dma_pool*, %struct.mlx5_cmd_debug, [5 x %struct.cmd_msg_cache], i32, %struct.mlx5_cmd_stats* }
%struct.mlx5_nb = type { %struct.notifier_block, i8 }
%struct.semaphore = type { %struct.raw_spinlock, i32, %struct.list_head }
%struct.mlx5_cmd_work_ent = type { i64, %struct.mlx5_cmd_msg*, %struct.mlx5_cmd_msg*, i8*, i32, void (i32, i8*)*, %struct.delayed_work, i8*, i32, %struct.completion, %struct.completion, %struct.mlx5_cmd*, %struct.work_struct, %struct.mlx5_cmd_layout*, i32, i32, i8, i8, i64, i64, i16, i8, %struct.refcount_struct }
%struct.mlx5_cmd_msg = type { %struct.list_head, %struct.cmd_msg_cache*, i32, %struct.mlx5_cmd_first, %struct.mlx5_cmd_mailbox* }
%struct.cmd_msg_cache = type { %struct.spinlock, %struct.list_head, i32, i32 }
%struct.mlx5_cmd_first = type { [4 x i32] }
%struct.mlx5_cmd_mailbox = type { i8*, i64, %struct.mlx5_cmd_mailbox* }
%struct.mlx5_cmd_layout = type { i8, [3 x i8], i32, i64, [4 x i32], [4 x i32], i64, i32, i8, i8, i8, i8 }
%struct.dma_pool = type opaque
%struct.mlx5_cmd_debug = type { %struct.dentry*, i8*, i8*, i8, i16, i16 }
%struct.mlx5_cmd_stats = type { i64, i64, %struct.dentry*, %struct.spinlock }
%struct.mlx5_port_caps = type { i32, i32, i8, i8 }
%struct.anon.137 = type { [22 x [1024 x i32]], [22 x [1024 x i32]], [20 x i32], [3 x [18 x i32]], [64 x i32], [18 x i32], i8 }
%struct.mlx5_init_seg = type { i32, i32, [2 x i32], i32, i32, i32, [120 x i32], i32, %struct.health_buffer, [880 x i32], i32, i32, [2 x i32], i32, [1019 x i32], i64, i32, i32 }
%struct.health_buffer = type { [5 x i32], [3 x i32], i32, i32, [2 x i32], i32, i32, i32, i8, i8, i16 }
%struct.mlx5_priv = type { %struct.mlx5_irq_table*, %struct.mlx5_eq_table*, %struct.mlx5_nb, %struct.workqueue_struct*, %struct.xarray, i32, %struct.atomic_t, %struct.list_head, i32, i32, %struct.mlx5_core_health, %struct.dentry*, %struct.dentry*, %struct.dentry*, %struct.dentry*, %struct.mutex, i32, %struct.mutex, %struct.list_head, %struct.dentry*, %struct.list_head, %struct.list_head, %struct.spinlock, %struct.mlx5_events*, %struct.mlx5_flow_steering*, %struct.mlx5_mpfs*, %struct.mlx5_eswitch*, %struct.mlx5_core_sriov, %struct.mlx5_lag*, %struct.mlx5_devcom*, %struct.mlx5_fw_reset*, %struct.mlx5_core_roce, %struct.mlx5_fc_stats, %struct.mlx5_rl_table, %struct.mlx5_bfreg_data, %struct.mlx5_uars_page* }
%struct.mlx5_irq_table = type opaque
%struct.mlx5_eq_table = type opaque
%struct.mlx5_core_health = type { %struct.health_buffer*, i32*, %struct.timer_list, i32, i32, i8, i32, i32, %struct.spinlock, %struct.workqueue_struct*, i64, %struct.work_struct, %struct.work_struct, %struct.delayed_work, %struct.devlink_health_reporter*, %struct.devlink_health_reporter* }
%struct.devlink_health_reporter = type opaque
%struct.mlx5_events = type opaque
%struct.mlx5_flow_steering = type opaque
%struct.mlx5_mpfs = type opaque
%struct.mlx5_eswitch = type opaque
%struct.mlx5_core_sriov = type { %struct.mlx5_vf_context*, i32, i16 }
%struct.mlx5_vf_context = type { i32, i64, i64, i8, i32 }
%struct.mlx5_lag = type opaque
%struct.mlx5_devcom = type opaque
%struct.mlx5_fw_reset = type opaque
%struct.mlx5_core_roce = type { %struct.mlx5_flow_table*, %struct.mlx5_flow_group*, %struct.mlx5_flow_handle* }
%struct.mlx5_flow_table = type opaque
%struct.mlx5_flow_group = type opaque
%struct.mlx5_flow_handle = type opaque
%struct.mlx5_fc_stats = type { %struct.spinlock, %struct.idr, %struct.list_head, %struct.llist_head, %struct.llist_head, %struct.workqueue_struct*, %struct.delayed_work, i64, i64, i32*, %struct.mlx5_fc_pool }
%struct.llist_head = type { %struct.llist_node* }
%struct.mlx5_fc_pool = type { %struct.mlx5_core_dev*, %struct.mutex, %struct.list_head, %struct.list_head, %struct.list_head, i32, i32, i32 }
%struct.mlx5_rl_table = type { %struct.mutex, i16, i32, i32, %struct.mlx5_rl_entry* }
%struct.mlx5_rl_entry = type { [48 x i8], i16, i64, i16, i8 }
%struct.mlx5_bfreg_data = type { %struct.mlx5_bfreg_head, %struct.mlx5_bfreg_head }
%struct.mlx5_bfreg_head = type { %struct.mutex, %struct.list_head }
%struct.mlx5_uars_page = type { i8*, i8, i32, %struct.list_head, i32, i64*, i64*, i32, i32, %struct.kref, %struct.mlx5_core_dev* }
%struct.mlx5_profile = type { i64, i8, [23 x %struct.anon.138] }
%struct.anon.138 = type { i32, i32 }
%struct.mlx5e_resources = type { i32, %struct.mlx5_td, %struct.mlx5_core_mkey, %struct.mlx5_sq_bfreg }
%struct.mlx5_td = type { %struct.mutex, %struct.list_head, i32 }
%struct.mlx5_core_mkey = type { i64, i64, i32, i32, i32 }
%struct.mlx5_sq_bfreg = type { i8*, %struct.mlx5_uars_page*, i8, i32, i32 }
%struct.mlx5_dm = type opaque
%struct.mlx5_vxlan = type opaque
%struct.mlx5_geneve = type opaque
%struct.anon.139 = type { %struct.mlx5_rsvd_gids, i32 }
%struct.mlx5_rsvd_gids = type { i32, i32, %struct.ida }
%struct.ida = type { %struct.xarray }
%struct.mlx5_clock = type { %struct.mlx5_nb, %struct.seqlock_t, %struct.cyclecounter, %struct.timecounter, %struct.hwtstamp_config, i32, i64, %struct.delayed_work, %struct.ptp_clock*, %struct.ptp_clock_info, %struct.mlx5_pps }
%struct.cyclecounter = type { i64 (%struct.cyclecounter*)*, i64, i32, i32 }
%struct.timecounter = type { %struct.cyclecounter*, i64, i64, i64, i64 }
%struct.hwtstamp_config = type { i32, i32, i32 }
%struct.ptp_clock = type opaque
%struct.ptp_clock_info = type { %struct.module*, [16 x i8], i32, i32, i32, i32, i32, i32, %struct.ptp_pin_desc*, i32 (%struct.ptp_clock_info*, i64)*, i32 (%struct.ptp_clock_info*, i32)*, i32 (%struct.ptp_clock_info*, i32)*, i32 (%struct.ptp_clock_info*, i64)*, i32 (%struct.ptp_clock_info*, %struct.timespec64*)*, i32 (%struct.ptp_clock_info*, %struct.timespec64*, %struct.ptp_system_timestamp*)*, i32 (%struct.ptp_clock_info*, %struct.system_device_crosststamp*)*, i32 (%struct.ptp_clock_info*, %struct.timespec64*)*, i32 (%struct.ptp_clock_info*, %struct.ptp_clock_request*, i32)*, i32 (%struct.ptp_clock_info*, i32, i32, i32)*, i64 (%struct.ptp_clock_info*)* }
%struct.ptp_pin_desc = type { [64 x i8], i32, i32, i32, [5 x i32] }
%struct.ptp_system_timestamp = type { %struct.timespec64, %struct.timespec64 }
%struct.system_device_crosststamp = type { i64, i64, i64 }
%struct.ptp_clock_request = type { i32, %union.anon.140 }
%union.anon.140 = type { %struct.ptp_perout_request }
%struct.ptp_perout_request = type { %union.anon.141, %struct.ptp_clock_time, i32, i32, %union.anon.142 }
%union.anon.141 = type { %struct.ptp_clock_time }
%struct.ptp_clock_time = type { i64, i32, i32 }
%union.anon.142 = type { %struct.ptp_clock_time }
%struct.mlx5_pps = type { [8 x i8], %struct.work_struct, [8 x i64], i8 }
%struct.mlx5_ib_clock_info = type opaque
%struct.mlx5_fw_tracer = type opaque
%struct.mlx5_rsc_dump = type opaque
%struct.mlx5_hv_vhca = type opaque
%union.ib_gid = type { %struct.anon.170 }
%struct.anon.170 = type { i64, i64 }
%struct.mlx5_hca_vport_context = type { i32, i8, i8, i8, i32, i32, i32, i8, i64, i64, i64, i32, i32, i16, i16, i16, i8, i8, i8, i16, i8, i16, i16, i8 }

@.str = private unnamed_addr constant [63 x i8] c"%s:%d:(pid %d): Requested list size (%d) > (%d) max_list_size\0A\00", align 1
@__func__.mlx5_query_nic_vport_mac_list = private unnamed_addr constant [30 x i8] c"mlx5_query_nic_vport_mac_list\00", align 1
@mlx5_roce_en_lock = internal global %struct.mutex { %struct.atomic64_t zeroinitializer, %struct.spinlock undef, %struct.list_head { %struct.list_head* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.mutex* @mlx5_roce_en_lock to i8*), i64 8) to %struct.list_head*), %struct.list_head* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.mutex* @mlx5_roce_en_lock to i8*), i64 8) to %struct.list_head*) } }, align 8, !dbg !0
@current_task = external dso_local global %struct.task_struct*, section ".data", align 8
@kmalloc_caches = external dso_local global [3 x [14 x %struct.kmem_cache*]], align 16
@.str.1 = private unnamed_addr constant [21 x i8] c"include/linux/slab.h\00", align 1
@.str.2 = private unnamed_addr constant [28 x i8] c"\014gid table length is zero\0A\00", align 1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local zeroext i8 @mlx5_query_vport_state(%struct.mlx5_core_dev* %mdev, i8 zeroext %opmod, i16 zeroext %vport) #0 !dbg !10070 {
entry:
  %retval = alloca i8, align 1
  %mdev.addr = alloca %struct.mlx5_core_dev*, align 8
  %opmod.addr = alloca i8, align 1
  %vport.addr = alloca i16, align 2
  %out = alloca [4 x i32], align 16
  %in = alloca [4 x i32], align 16
  %err = alloca i32, align 4
  %_v = alloca i32, align 4
  %_v203 = alloca i32, align 4
  %_v418 = alloca i32, align 4
  %_v634 = alloca i32, align 4
  %tmp = alloca i32, align 4
  store %struct.mlx5_core_dev* %mdev, %struct.mlx5_core_dev** %mdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_core_dev** %mdev.addr, metadata !10933, metadata !DIExpression()), !dbg !10934
  store i8 %opmod, i8* %opmod.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %opmod.addr, metadata !10935, metadata !DIExpression()), !dbg !10936
  store i16 %vport, i16* %vport.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %vport.addr, metadata !10937, metadata !DIExpression()), !dbg !10938
  call void @llvm.dbg.declare(metadata [4 x i32]* %out, metadata !10939, metadata !DIExpression()), !dbg !10941
  %0 = bitcast [4 x i32]* %out to i8*, !dbg !10941
  call void @llvm.memset.p0i8.i64(i8* align 16 %0, i8 0, i64 16, i1 false), !dbg !10941
  call void @llvm.dbg.declare(metadata [4 x i32]* %in, metadata !10942, metadata !DIExpression()), !dbg !10943
  %1 = bitcast [4 x i32]* %in to i8*, !dbg !10943
  call void @llvm.memset.p0i8.i64(i8* align 16 %1, i8 0, i64 16, i1 false), !dbg !10943
  call void @llvm.dbg.declare(metadata i32* %err, metadata !10944, metadata !DIExpression()), !dbg !10945
  br label %do.body, !dbg !10946

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %_v, metadata !10947, metadata !DIExpression()), !dbg !10949
  store i32 1872, i32* %_v, align 4, !dbg !10949
  br label %do.body1, !dbg !10949

do.body1:                                         ; preds = %do.body
  br label %do.end, !dbg !10950

do.end:                                           ; preds = %do.body1
  %arraydecay = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10949
  %add.ptr = getelementptr i32, i32* %arraydecay, i64 0, !dbg !10949
  %2 = load i32, i32* %add.ptr, align 4, !dbg !10949
  %3 = call i1 @llvm.is.constant.i32(i32 %2), !dbg !10949
  br i1 %3, label %cond.true, label %cond.false, !dbg !10949

cond.true:                                        ; preds = %do.end
  %arraydecay2 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10949
  %add.ptr3 = getelementptr i32, i32* %arraydecay2, i64 0, !dbg !10949
  %4 = load i32, i32* %add.ptr3, align 4, !dbg !10949
  %and = and i32 %4, 255, !dbg !10949
  %shl = shl i32 %and, 24, !dbg !10949
  %arraydecay4 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10949
  %add.ptr5 = getelementptr i32, i32* %arraydecay4, i64 0, !dbg !10949
  %5 = load i32, i32* %add.ptr5, align 4, !dbg !10949
  %and6 = and i32 %5, 65280, !dbg !10949
  %shl7 = shl i32 %and6, 8, !dbg !10949
  %or = or i32 %shl, %shl7, !dbg !10949
  %arraydecay8 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10949
  %add.ptr9 = getelementptr i32, i32* %arraydecay8, i64 0, !dbg !10949
  %6 = load i32, i32* %add.ptr9, align 4, !dbg !10949
  %and10 = and i32 %6, 16711680, !dbg !10949
  %shr = lshr i32 %and10, 8, !dbg !10949
  %or11 = or i32 %or, %shr, !dbg !10949
  %arraydecay12 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10949
  %add.ptr13 = getelementptr i32, i32* %arraydecay12, i64 0, !dbg !10949
  %7 = load i32, i32* %add.ptr13, align 4, !dbg !10949
  %and14 = and i32 %7, -16777216, !dbg !10949
  %shr15 = lshr i32 %and14, 24, !dbg !10949
  %or16 = or i32 %or11, %shr15, !dbg !10949
  br label %cond.end, !dbg !10949

cond.false:                                       ; preds = %do.end
  %arraydecay17 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10949
  %add.ptr18 = getelementptr i32, i32* %arraydecay17, i64 0, !dbg !10949
  %8 = load i32, i32* %add.ptr18, align 4, !dbg !10949
  %call = call i32 @__fswab32(i32 %8) #8, !dbg !10949
  br label %cond.end, !dbg !10949

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %or16, %cond.true ], [ %call, %cond.false ], !dbg !10949
  %and19 = and i32 %cond, 65535, !dbg !10949
  %9 = load i32, i32* %_v, align 4, !dbg !10949
  %and20 = and i32 %9, 65535, !dbg !10949
  %shl21 = shl i32 %and20, 16, !dbg !10949
  %or22 = or i32 %and19, %shl21, !dbg !10949
  %10 = call i1 @llvm.is.constant.i32(i32 %or22), !dbg !10949
  br i1 %10, label %cond.true23, label %cond.false163, !dbg !10949

cond.true23:                                      ; preds = %cond.end
  %arraydecay24 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10949
  %add.ptr25 = getelementptr i32, i32* %arraydecay24, i64 0, !dbg !10949
  %11 = load i32, i32* %add.ptr25, align 4, !dbg !10949
  %12 = call i1 @llvm.is.constant.i32(i32 %11), !dbg !10949
  br i1 %12, label %cond.true26, label %cond.false46, !dbg !10949

cond.true26:                                      ; preds = %cond.true23
  %arraydecay27 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10949
  %add.ptr28 = getelementptr i32, i32* %arraydecay27, i64 0, !dbg !10949
  %13 = load i32, i32* %add.ptr28, align 4, !dbg !10949
  %and29 = and i32 %13, 255, !dbg !10949
  %shl30 = shl i32 %and29, 24, !dbg !10949
  %arraydecay31 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10949
  %add.ptr32 = getelementptr i32, i32* %arraydecay31, i64 0, !dbg !10949
  %14 = load i32, i32* %add.ptr32, align 4, !dbg !10949
  %and33 = and i32 %14, 65280, !dbg !10949
  %shl34 = shl i32 %and33, 8, !dbg !10949
  %or35 = or i32 %shl30, %shl34, !dbg !10949
  %arraydecay36 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10949
  %add.ptr37 = getelementptr i32, i32* %arraydecay36, i64 0, !dbg !10949
  %15 = load i32, i32* %add.ptr37, align 4, !dbg !10949
  %and38 = and i32 %15, 16711680, !dbg !10949
  %shr39 = lshr i32 %and38, 8, !dbg !10949
  %or40 = or i32 %or35, %shr39, !dbg !10949
  %arraydecay41 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10949
  %add.ptr42 = getelementptr i32, i32* %arraydecay41, i64 0, !dbg !10949
  %16 = load i32, i32* %add.ptr42, align 4, !dbg !10949
  %and43 = and i32 %16, -16777216, !dbg !10949
  %shr44 = lshr i32 %and43, 24, !dbg !10949
  %or45 = or i32 %or40, %shr44, !dbg !10949
  br label %cond.end50, !dbg !10949

cond.false46:                                     ; preds = %cond.true23
  %arraydecay47 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10949
  %add.ptr48 = getelementptr i32, i32* %arraydecay47, i64 0, !dbg !10949
  %17 = load i32, i32* %add.ptr48, align 4, !dbg !10949
  %call49 = call i32 @__fswab32(i32 %17) #8, !dbg !10949
  br label %cond.end50, !dbg !10949

cond.end50:                                       ; preds = %cond.false46, %cond.true26
  %cond51 = phi i32 [ %or45, %cond.true26 ], [ %call49, %cond.false46 ], !dbg !10949
  %and52 = and i32 %cond51, 65535, !dbg !10949
  %18 = load i32, i32* %_v, align 4, !dbg !10949
  %and53 = and i32 %18, 65535, !dbg !10949
  %shl54 = shl i32 %and53, 16, !dbg !10949
  %or55 = or i32 %and52, %shl54, !dbg !10949
  %and56 = and i32 %or55, 255, !dbg !10949
  %shl57 = shl i32 %and56, 24, !dbg !10949
  %arraydecay58 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10949
  %add.ptr59 = getelementptr i32, i32* %arraydecay58, i64 0, !dbg !10949
  %19 = load i32, i32* %add.ptr59, align 4, !dbg !10949
  %20 = call i1 @llvm.is.constant.i32(i32 %19), !dbg !10949
  br i1 %20, label %cond.true60, label %cond.false80, !dbg !10949

cond.true60:                                      ; preds = %cond.end50
  %arraydecay61 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10949
  %add.ptr62 = getelementptr i32, i32* %arraydecay61, i64 0, !dbg !10949
  %21 = load i32, i32* %add.ptr62, align 4, !dbg !10949
  %and63 = and i32 %21, 255, !dbg !10949
  %shl64 = shl i32 %and63, 24, !dbg !10949
  %arraydecay65 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10949
  %add.ptr66 = getelementptr i32, i32* %arraydecay65, i64 0, !dbg !10949
  %22 = load i32, i32* %add.ptr66, align 4, !dbg !10949
  %and67 = and i32 %22, 65280, !dbg !10949
  %shl68 = shl i32 %and67, 8, !dbg !10949
  %or69 = or i32 %shl64, %shl68, !dbg !10949
  %arraydecay70 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10949
  %add.ptr71 = getelementptr i32, i32* %arraydecay70, i64 0, !dbg !10949
  %23 = load i32, i32* %add.ptr71, align 4, !dbg !10949
  %and72 = and i32 %23, 16711680, !dbg !10949
  %shr73 = lshr i32 %and72, 8, !dbg !10949
  %or74 = or i32 %or69, %shr73, !dbg !10949
  %arraydecay75 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10949
  %add.ptr76 = getelementptr i32, i32* %arraydecay75, i64 0, !dbg !10949
  %24 = load i32, i32* %add.ptr76, align 4, !dbg !10949
  %and77 = and i32 %24, -16777216, !dbg !10949
  %shr78 = lshr i32 %and77, 24, !dbg !10949
  %or79 = or i32 %or74, %shr78, !dbg !10949
  br label %cond.end84, !dbg !10949

cond.false80:                                     ; preds = %cond.end50
  %arraydecay81 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10949
  %add.ptr82 = getelementptr i32, i32* %arraydecay81, i64 0, !dbg !10949
  %25 = load i32, i32* %add.ptr82, align 4, !dbg !10949
  %call83 = call i32 @__fswab32(i32 %25) #8, !dbg !10949
  br label %cond.end84, !dbg !10949

cond.end84:                                       ; preds = %cond.false80, %cond.true60
  %cond85 = phi i32 [ %or79, %cond.true60 ], [ %call83, %cond.false80 ], !dbg !10949
  %and86 = and i32 %cond85, 65535, !dbg !10949
  %26 = load i32, i32* %_v, align 4, !dbg !10949
  %and87 = and i32 %26, 65535, !dbg !10949
  %shl88 = shl i32 %and87, 16, !dbg !10949
  %or89 = or i32 %and86, %shl88, !dbg !10949
  %and90 = and i32 %or89, 65280, !dbg !10949
  %shl91 = shl i32 %and90, 8, !dbg !10949
  %or92 = or i32 %shl57, %shl91, !dbg !10949
  %arraydecay93 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10949
  %add.ptr94 = getelementptr i32, i32* %arraydecay93, i64 0, !dbg !10949
  %27 = load i32, i32* %add.ptr94, align 4, !dbg !10949
  %28 = call i1 @llvm.is.constant.i32(i32 %27), !dbg !10949
  br i1 %28, label %cond.true95, label %cond.false115, !dbg !10949

cond.true95:                                      ; preds = %cond.end84
  %arraydecay96 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10949
  %add.ptr97 = getelementptr i32, i32* %arraydecay96, i64 0, !dbg !10949
  %29 = load i32, i32* %add.ptr97, align 4, !dbg !10949
  %and98 = and i32 %29, 255, !dbg !10949
  %shl99 = shl i32 %and98, 24, !dbg !10949
  %arraydecay100 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10949
  %add.ptr101 = getelementptr i32, i32* %arraydecay100, i64 0, !dbg !10949
  %30 = load i32, i32* %add.ptr101, align 4, !dbg !10949
  %and102 = and i32 %30, 65280, !dbg !10949
  %shl103 = shl i32 %and102, 8, !dbg !10949
  %or104 = or i32 %shl99, %shl103, !dbg !10949
  %arraydecay105 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10949
  %add.ptr106 = getelementptr i32, i32* %arraydecay105, i64 0, !dbg !10949
  %31 = load i32, i32* %add.ptr106, align 4, !dbg !10949
  %and107 = and i32 %31, 16711680, !dbg !10949
  %shr108 = lshr i32 %and107, 8, !dbg !10949
  %or109 = or i32 %or104, %shr108, !dbg !10949
  %arraydecay110 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10949
  %add.ptr111 = getelementptr i32, i32* %arraydecay110, i64 0, !dbg !10949
  %32 = load i32, i32* %add.ptr111, align 4, !dbg !10949
  %and112 = and i32 %32, -16777216, !dbg !10949
  %shr113 = lshr i32 %and112, 24, !dbg !10949
  %or114 = or i32 %or109, %shr113, !dbg !10949
  br label %cond.end119, !dbg !10949

cond.false115:                                    ; preds = %cond.end84
  %arraydecay116 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10949
  %add.ptr117 = getelementptr i32, i32* %arraydecay116, i64 0, !dbg !10949
  %33 = load i32, i32* %add.ptr117, align 4, !dbg !10949
  %call118 = call i32 @__fswab32(i32 %33) #8, !dbg !10949
  br label %cond.end119, !dbg !10949

cond.end119:                                      ; preds = %cond.false115, %cond.true95
  %cond120 = phi i32 [ %or114, %cond.true95 ], [ %call118, %cond.false115 ], !dbg !10949
  %and121 = and i32 %cond120, 65535, !dbg !10949
  %34 = load i32, i32* %_v, align 4, !dbg !10949
  %and122 = and i32 %34, 65535, !dbg !10949
  %shl123 = shl i32 %and122, 16, !dbg !10949
  %or124 = or i32 %and121, %shl123, !dbg !10949
  %and125 = and i32 %or124, 16711680, !dbg !10949
  %shr126 = lshr i32 %and125, 8, !dbg !10949
  %or127 = or i32 %or92, %shr126, !dbg !10949
  %arraydecay128 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10949
  %add.ptr129 = getelementptr i32, i32* %arraydecay128, i64 0, !dbg !10949
  %35 = load i32, i32* %add.ptr129, align 4, !dbg !10949
  %36 = call i1 @llvm.is.constant.i32(i32 %35), !dbg !10949
  br i1 %36, label %cond.true130, label %cond.false150, !dbg !10949

cond.true130:                                     ; preds = %cond.end119
  %arraydecay131 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10949
  %add.ptr132 = getelementptr i32, i32* %arraydecay131, i64 0, !dbg !10949
  %37 = load i32, i32* %add.ptr132, align 4, !dbg !10949
  %and133 = and i32 %37, 255, !dbg !10949
  %shl134 = shl i32 %and133, 24, !dbg !10949
  %arraydecay135 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10949
  %add.ptr136 = getelementptr i32, i32* %arraydecay135, i64 0, !dbg !10949
  %38 = load i32, i32* %add.ptr136, align 4, !dbg !10949
  %and137 = and i32 %38, 65280, !dbg !10949
  %shl138 = shl i32 %and137, 8, !dbg !10949
  %or139 = or i32 %shl134, %shl138, !dbg !10949
  %arraydecay140 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10949
  %add.ptr141 = getelementptr i32, i32* %arraydecay140, i64 0, !dbg !10949
  %39 = load i32, i32* %add.ptr141, align 4, !dbg !10949
  %and142 = and i32 %39, 16711680, !dbg !10949
  %shr143 = lshr i32 %and142, 8, !dbg !10949
  %or144 = or i32 %or139, %shr143, !dbg !10949
  %arraydecay145 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10949
  %add.ptr146 = getelementptr i32, i32* %arraydecay145, i64 0, !dbg !10949
  %40 = load i32, i32* %add.ptr146, align 4, !dbg !10949
  %and147 = and i32 %40, -16777216, !dbg !10949
  %shr148 = lshr i32 %and147, 24, !dbg !10949
  %or149 = or i32 %or144, %shr148, !dbg !10949
  br label %cond.end154, !dbg !10949

cond.false150:                                    ; preds = %cond.end119
  %arraydecay151 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10949
  %add.ptr152 = getelementptr i32, i32* %arraydecay151, i64 0, !dbg !10949
  %41 = load i32, i32* %add.ptr152, align 4, !dbg !10949
  %call153 = call i32 @__fswab32(i32 %41) #8, !dbg !10949
  br label %cond.end154, !dbg !10949

cond.end154:                                      ; preds = %cond.false150, %cond.true130
  %cond155 = phi i32 [ %or149, %cond.true130 ], [ %call153, %cond.false150 ], !dbg !10949
  %and156 = and i32 %cond155, 65535, !dbg !10949
  %42 = load i32, i32* %_v, align 4, !dbg !10949
  %and157 = and i32 %42, 65535, !dbg !10949
  %shl158 = shl i32 %and157, 16, !dbg !10949
  %or159 = or i32 %and156, %shl158, !dbg !10949
  %and160 = and i32 %or159, -16777216, !dbg !10949
  %shr161 = lshr i32 %and160, 24, !dbg !10949
  %or162 = or i32 %or127, %shr161, !dbg !10949
  br label %cond.end197, !dbg !10949

cond.false163:                                    ; preds = %cond.end
  %arraydecay164 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10949
  %add.ptr165 = getelementptr i32, i32* %arraydecay164, i64 0, !dbg !10949
  %43 = load i32, i32* %add.ptr165, align 4, !dbg !10949
  %44 = call i1 @llvm.is.constant.i32(i32 %43), !dbg !10949
  br i1 %44, label %cond.true166, label %cond.false186, !dbg !10949

cond.true166:                                     ; preds = %cond.false163
  %arraydecay167 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10949
  %add.ptr168 = getelementptr i32, i32* %arraydecay167, i64 0, !dbg !10949
  %45 = load i32, i32* %add.ptr168, align 4, !dbg !10949
  %and169 = and i32 %45, 255, !dbg !10949
  %shl170 = shl i32 %and169, 24, !dbg !10949
  %arraydecay171 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10949
  %add.ptr172 = getelementptr i32, i32* %arraydecay171, i64 0, !dbg !10949
  %46 = load i32, i32* %add.ptr172, align 4, !dbg !10949
  %and173 = and i32 %46, 65280, !dbg !10949
  %shl174 = shl i32 %and173, 8, !dbg !10949
  %or175 = or i32 %shl170, %shl174, !dbg !10949
  %arraydecay176 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10949
  %add.ptr177 = getelementptr i32, i32* %arraydecay176, i64 0, !dbg !10949
  %47 = load i32, i32* %add.ptr177, align 4, !dbg !10949
  %and178 = and i32 %47, 16711680, !dbg !10949
  %shr179 = lshr i32 %and178, 8, !dbg !10949
  %or180 = or i32 %or175, %shr179, !dbg !10949
  %arraydecay181 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10949
  %add.ptr182 = getelementptr i32, i32* %arraydecay181, i64 0, !dbg !10949
  %48 = load i32, i32* %add.ptr182, align 4, !dbg !10949
  %and183 = and i32 %48, -16777216, !dbg !10949
  %shr184 = lshr i32 %and183, 24, !dbg !10949
  %or185 = or i32 %or180, %shr184, !dbg !10949
  br label %cond.end190, !dbg !10949

cond.false186:                                    ; preds = %cond.false163
  %arraydecay187 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10949
  %add.ptr188 = getelementptr i32, i32* %arraydecay187, i64 0, !dbg !10949
  %49 = load i32, i32* %add.ptr188, align 4, !dbg !10949
  %call189 = call i32 @__fswab32(i32 %49) #8, !dbg !10949
  br label %cond.end190, !dbg !10949

cond.end190:                                      ; preds = %cond.false186, %cond.true166
  %cond191 = phi i32 [ %or185, %cond.true166 ], [ %call189, %cond.false186 ], !dbg !10949
  %and192 = and i32 %cond191, 65535, !dbg !10949
  %50 = load i32, i32* %_v, align 4, !dbg !10949
  %and193 = and i32 %50, 65535, !dbg !10949
  %shl194 = shl i32 %and193, 16, !dbg !10949
  %or195 = or i32 %and192, %shl194, !dbg !10949
  %call196 = call i32 @__fswab32(i32 %or195) #8, !dbg !10949
  br label %cond.end197, !dbg !10949

cond.end197:                                      ; preds = %cond.end190, %cond.end154
  %cond198 = phi i32 [ %or162, %cond.end154 ], [ %call196, %cond.end190 ], !dbg !10949
  %arraydecay199 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10949
  %add.ptr200 = getelementptr i32, i32* %arraydecay199, i64 0, !dbg !10949
  store i32 %cond198, i32* %add.ptr200, align 4, !dbg !10949
  br label %do.end201, !dbg !10949

do.end201:                                        ; preds = %cond.end197
  br label %do.body202, !dbg !10952

do.body202:                                       ; preds = %do.end201
  call void @llvm.dbg.declare(metadata i32* %_v203, metadata !10953, metadata !DIExpression()), !dbg !10955
  %51 = load i8, i8* %opmod.addr, align 1, !dbg !10955
  %conv = zext i8 %51 to i32, !dbg !10955
  store i32 %conv, i32* %_v203, align 4, !dbg !10955
  br label %do.body204, !dbg !10955

do.body204:                                       ; preds = %do.body202
  br label %do.end205, !dbg !10956

do.end205:                                        ; preds = %do.body204
  %arraydecay206 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10955
  %add.ptr207 = getelementptr i32, i32* %arraydecay206, i64 1, !dbg !10955
  %52 = load i32, i32* %add.ptr207, align 4, !dbg !10955
  %53 = call i1 @llvm.is.constant.i32(i32 %52), !dbg !10955
  br i1 %53, label %cond.true208, label %cond.false228, !dbg !10955

cond.true208:                                     ; preds = %do.end205
  %arraydecay209 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10955
  %add.ptr210 = getelementptr i32, i32* %arraydecay209, i64 1, !dbg !10955
  %54 = load i32, i32* %add.ptr210, align 4, !dbg !10955
  %and211 = and i32 %54, 255, !dbg !10955
  %shl212 = shl i32 %and211, 24, !dbg !10955
  %arraydecay213 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10955
  %add.ptr214 = getelementptr i32, i32* %arraydecay213, i64 1, !dbg !10955
  %55 = load i32, i32* %add.ptr214, align 4, !dbg !10955
  %and215 = and i32 %55, 65280, !dbg !10955
  %shl216 = shl i32 %and215, 8, !dbg !10955
  %or217 = or i32 %shl212, %shl216, !dbg !10955
  %arraydecay218 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10955
  %add.ptr219 = getelementptr i32, i32* %arraydecay218, i64 1, !dbg !10955
  %56 = load i32, i32* %add.ptr219, align 4, !dbg !10955
  %and220 = and i32 %56, 16711680, !dbg !10955
  %shr221 = lshr i32 %and220, 8, !dbg !10955
  %or222 = or i32 %or217, %shr221, !dbg !10955
  %arraydecay223 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10955
  %add.ptr224 = getelementptr i32, i32* %arraydecay223, i64 1, !dbg !10955
  %57 = load i32, i32* %add.ptr224, align 4, !dbg !10955
  %and225 = and i32 %57, -16777216, !dbg !10955
  %shr226 = lshr i32 %and225, 24, !dbg !10955
  %or227 = or i32 %or222, %shr226, !dbg !10955
  br label %cond.end232, !dbg !10955

cond.false228:                                    ; preds = %do.end205
  %arraydecay229 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10955
  %add.ptr230 = getelementptr i32, i32* %arraydecay229, i64 1, !dbg !10955
  %58 = load i32, i32* %add.ptr230, align 4, !dbg !10955
  %call231 = call i32 @__fswab32(i32 %58) #8, !dbg !10955
  br label %cond.end232, !dbg !10955

cond.end232:                                      ; preds = %cond.false228, %cond.true208
  %cond233 = phi i32 [ %or227, %cond.true208 ], [ %call231, %cond.false228 ], !dbg !10955
  %and234 = and i32 %cond233, -65536, !dbg !10955
  %59 = load i32, i32* %_v203, align 4, !dbg !10955
  %and235 = and i32 %59, 65535, !dbg !10955
  %shl236 = shl i32 %and235, 0, !dbg !10955
  %or237 = or i32 %and234, %shl236, !dbg !10955
  %60 = call i1 @llvm.is.constant.i32(i32 %or237), !dbg !10955
  br i1 %60, label %cond.true238, label %cond.false378, !dbg !10955

cond.true238:                                     ; preds = %cond.end232
  %arraydecay239 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10955
  %add.ptr240 = getelementptr i32, i32* %arraydecay239, i64 1, !dbg !10955
  %61 = load i32, i32* %add.ptr240, align 4, !dbg !10955
  %62 = call i1 @llvm.is.constant.i32(i32 %61), !dbg !10955
  br i1 %62, label %cond.true241, label %cond.false261, !dbg !10955

cond.true241:                                     ; preds = %cond.true238
  %arraydecay242 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10955
  %add.ptr243 = getelementptr i32, i32* %arraydecay242, i64 1, !dbg !10955
  %63 = load i32, i32* %add.ptr243, align 4, !dbg !10955
  %and244 = and i32 %63, 255, !dbg !10955
  %shl245 = shl i32 %and244, 24, !dbg !10955
  %arraydecay246 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10955
  %add.ptr247 = getelementptr i32, i32* %arraydecay246, i64 1, !dbg !10955
  %64 = load i32, i32* %add.ptr247, align 4, !dbg !10955
  %and248 = and i32 %64, 65280, !dbg !10955
  %shl249 = shl i32 %and248, 8, !dbg !10955
  %or250 = or i32 %shl245, %shl249, !dbg !10955
  %arraydecay251 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10955
  %add.ptr252 = getelementptr i32, i32* %arraydecay251, i64 1, !dbg !10955
  %65 = load i32, i32* %add.ptr252, align 4, !dbg !10955
  %and253 = and i32 %65, 16711680, !dbg !10955
  %shr254 = lshr i32 %and253, 8, !dbg !10955
  %or255 = or i32 %or250, %shr254, !dbg !10955
  %arraydecay256 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10955
  %add.ptr257 = getelementptr i32, i32* %arraydecay256, i64 1, !dbg !10955
  %66 = load i32, i32* %add.ptr257, align 4, !dbg !10955
  %and258 = and i32 %66, -16777216, !dbg !10955
  %shr259 = lshr i32 %and258, 24, !dbg !10955
  %or260 = or i32 %or255, %shr259, !dbg !10955
  br label %cond.end265, !dbg !10955

cond.false261:                                    ; preds = %cond.true238
  %arraydecay262 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10955
  %add.ptr263 = getelementptr i32, i32* %arraydecay262, i64 1, !dbg !10955
  %67 = load i32, i32* %add.ptr263, align 4, !dbg !10955
  %call264 = call i32 @__fswab32(i32 %67) #8, !dbg !10955
  br label %cond.end265, !dbg !10955

cond.end265:                                      ; preds = %cond.false261, %cond.true241
  %cond266 = phi i32 [ %or260, %cond.true241 ], [ %call264, %cond.false261 ], !dbg !10955
  %and267 = and i32 %cond266, -65536, !dbg !10955
  %68 = load i32, i32* %_v203, align 4, !dbg !10955
  %and268 = and i32 %68, 65535, !dbg !10955
  %shl269 = shl i32 %and268, 0, !dbg !10955
  %or270 = or i32 %and267, %shl269, !dbg !10955
  %and271 = and i32 %or270, 255, !dbg !10955
  %shl272 = shl i32 %and271, 24, !dbg !10955
  %arraydecay273 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10955
  %add.ptr274 = getelementptr i32, i32* %arraydecay273, i64 1, !dbg !10955
  %69 = load i32, i32* %add.ptr274, align 4, !dbg !10955
  %70 = call i1 @llvm.is.constant.i32(i32 %69), !dbg !10955
  br i1 %70, label %cond.true275, label %cond.false295, !dbg !10955

cond.true275:                                     ; preds = %cond.end265
  %arraydecay276 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10955
  %add.ptr277 = getelementptr i32, i32* %arraydecay276, i64 1, !dbg !10955
  %71 = load i32, i32* %add.ptr277, align 4, !dbg !10955
  %and278 = and i32 %71, 255, !dbg !10955
  %shl279 = shl i32 %and278, 24, !dbg !10955
  %arraydecay280 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10955
  %add.ptr281 = getelementptr i32, i32* %arraydecay280, i64 1, !dbg !10955
  %72 = load i32, i32* %add.ptr281, align 4, !dbg !10955
  %and282 = and i32 %72, 65280, !dbg !10955
  %shl283 = shl i32 %and282, 8, !dbg !10955
  %or284 = or i32 %shl279, %shl283, !dbg !10955
  %arraydecay285 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10955
  %add.ptr286 = getelementptr i32, i32* %arraydecay285, i64 1, !dbg !10955
  %73 = load i32, i32* %add.ptr286, align 4, !dbg !10955
  %and287 = and i32 %73, 16711680, !dbg !10955
  %shr288 = lshr i32 %and287, 8, !dbg !10955
  %or289 = or i32 %or284, %shr288, !dbg !10955
  %arraydecay290 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10955
  %add.ptr291 = getelementptr i32, i32* %arraydecay290, i64 1, !dbg !10955
  %74 = load i32, i32* %add.ptr291, align 4, !dbg !10955
  %and292 = and i32 %74, -16777216, !dbg !10955
  %shr293 = lshr i32 %and292, 24, !dbg !10955
  %or294 = or i32 %or289, %shr293, !dbg !10955
  br label %cond.end299, !dbg !10955

cond.false295:                                    ; preds = %cond.end265
  %arraydecay296 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10955
  %add.ptr297 = getelementptr i32, i32* %arraydecay296, i64 1, !dbg !10955
  %75 = load i32, i32* %add.ptr297, align 4, !dbg !10955
  %call298 = call i32 @__fswab32(i32 %75) #8, !dbg !10955
  br label %cond.end299, !dbg !10955

cond.end299:                                      ; preds = %cond.false295, %cond.true275
  %cond300 = phi i32 [ %or294, %cond.true275 ], [ %call298, %cond.false295 ], !dbg !10955
  %and301 = and i32 %cond300, -65536, !dbg !10955
  %76 = load i32, i32* %_v203, align 4, !dbg !10955
  %and302 = and i32 %76, 65535, !dbg !10955
  %shl303 = shl i32 %and302, 0, !dbg !10955
  %or304 = or i32 %and301, %shl303, !dbg !10955
  %and305 = and i32 %or304, 65280, !dbg !10955
  %shl306 = shl i32 %and305, 8, !dbg !10955
  %or307 = or i32 %shl272, %shl306, !dbg !10955
  %arraydecay308 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10955
  %add.ptr309 = getelementptr i32, i32* %arraydecay308, i64 1, !dbg !10955
  %77 = load i32, i32* %add.ptr309, align 4, !dbg !10955
  %78 = call i1 @llvm.is.constant.i32(i32 %77), !dbg !10955
  br i1 %78, label %cond.true310, label %cond.false330, !dbg !10955

cond.true310:                                     ; preds = %cond.end299
  %arraydecay311 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10955
  %add.ptr312 = getelementptr i32, i32* %arraydecay311, i64 1, !dbg !10955
  %79 = load i32, i32* %add.ptr312, align 4, !dbg !10955
  %and313 = and i32 %79, 255, !dbg !10955
  %shl314 = shl i32 %and313, 24, !dbg !10955
  %arraydecay315 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10955
  %add.ptr316 = getelementptr i32, i32* %arraydecay315, i64 1, !dbg !10955
  %80 = load i32, i32* %add.ptr316, align 4, !dbg !10955
  %and317 = and i32 %80, 65280, !dbg !10955
  %shl318 = shl i32 %and317, 8, !dbg !10955
  %or319 = or i32 %shl314, %shl318, !dbg !10955
  %arraydecay320 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10955
  %add.ptr321 = getelementptr i32, i32* %arraydecay320, i64 1, !dbg !10955
  %81 = load i32, i32* %add.ptr321, align 4, !dbg !10955
  %and322 = and i32 %81, 16711680, !dbg !10955
  %shr323 = lshr i32 %and322, 8, !dbg !10955
  %or324 = or i32 %or319, %shr323, !dbg !10955
  %arraydecay325 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10955
  %add.ptr326 = getelementptr i32, i32* %arraydecay325, i64 1, !dbg !10955
  %82 = load i32, i32* %add.ptr326, align 4, !dbg !10955
  %and327 = and i32 %82, -16777216, !dbg !10955
  %shr328 = lshr i32 %and327, 24, !dbg !10955
  %or329 = or i32 %or324, %shr328, !dbg !10955
  br label %cond.end334, !dbg !10955

cond.false330:                                    ; preds = %cond.end299
  %arraydecay331 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10955
  %add.ptr332 = getelementptr i32, i32* %arraydecay331, i64 1, !dbg !10955
  %83 = load i32, i32* %add.ptr332, align 4, !dbg !10955
  %call333 = call i32 @__fswab32(i32 %83) #8, !dbg !10955
  br label %cond.end334, !dbg !10955

cond.end334:                                      ; preds = %cond.false330, %cond.true310
  %cond335 = phi i32 [ %or329, %cond.true310 ], [ %call333, %cond.false330 ], !dbg !10955
  %and336 = and i32 %cond335, -65536, !dbg !10955
  %84 = load i32, i32* %_v203, align 4, !dbg !10955
  %and337 = and i32 %84, 65535, !dbg !10955
  %shl338 = shl i32 %and337, 0, !dbg !10955
  %or339 = or i32 %and336, %shl338, !dbg !10955
  %and340 = and i32 %or339, 16711680, !dbg !10955
  %shr341 = lshr i32 %and340, 8, !dbg !10955
  %or342 = or i32 %or307, %shr341, !dbg !10955
  %arraydecay343 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10955
  %add.ptr344 = getelementptr i32, i32* %arraydecay343, i64 1, !dbg !10955
  %85 = load i32, i32* %add.ptr344, align 4, !dbg !10955
  %86 = call i1 @llvm.is.constant.i32(i32 %85), !dbg !10955
  br i1 %86, label %cond.true345, label %cond.false365, !dbg !10955

cond.true345:                                     ; preds = %cond.end334
  %arraydecay346 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10955
  %add.ptr347 = getelementptr i32, i32* %arraydecay346, i64 1, !dbg !10955
  %87 = load i32, i32* %add.ptr347, align 4, !dbg !10955
  %and348 = and i32 %87, 255, !dbg !10955
  %shl349 = shl i32 %and348, 24, !dbg !10955
  %arraydecay350 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10955
  %add.ptr351 = getelementptr i32, i32* %arraydecay350, i64 1, !dbg !10955
  %88 = load i32, i32* %add.ptr351, align 4, !dbg !10955
  %and352 = and i32 %88, 65280, !dbg !10955
  %shl353 = shl i32 %and352, 8, !dbg !10955
  %or354 = or i32 %shl349, %shl353, !dbg !10955
  %arraydecay355 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10955
  %add.ptr356 = getelementptr i32, i32* %arraydecay355, i64 1, !dbg !10955
  %89 = load i32, i32* %add.ptr356, align 4, !dbg !10955
  %and357 = and i32 %89, 16711680, !dbg !10955
  %shr358 = lshr i32 %and357, 8, !dbg !10955
  %or359 = or i32 %or354, %shr358, !dbg !10955
  %arraydecay360 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10955
  %add.ptr361 = getelementptr i32, i32* %arraydecay360, i64 1, !dbg !10955
  %90 = load i32, i32* %add.ptr361, align 4, !dbg !10955
  %and362 = and i32 %90, -16777216, !dbg !10955
  %shr363 = lshr i32 %and362, 24, !dbg !10955
  %or364 = or i32 %or359, %shr363, !dbg !10955
  br label %cond.end369, !dbg !10955

cond.false365:                                    ; preds = %cond.end334
  %arraydecay366 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10955
  %add.ptr367 = getelementptr i32, i32* %arraydecay366, i64 1, !dbg !10955
  %91 = load i32, i32* %add.ptr367, align 4, !dbg !10955
  %call368 = call i32 @__fswab32(i32 %91) #8, !dbg !10955
  br label %cond.end369, !dbg !10955

cond.end369:                                      ; preds = %cond.false365, %cond.true345
  %cond370 = phi i32 [ %or364, %cond.true345 ], [ %call368, %cond.false365 ], !dbg !10955
  %and371 = and i32 %cond370, -65536, !dbg !10955
  %92 = load i32, i32* %_v203, align 4, !dbg !10955
  %and372 = and i32 %92, 65535, !dbg !10955
  %shl373 = shl i32 %and372, 0, !dbg !10955
  %or374 = or i32 %and371, %shl373, !dbg !10955
  %and375 = and i32 %or374, -16777216, !dbg !10955
  %shr376 = lshr i32 %and375, 24, !dbg !10955
  %or377 = or i32 %or342, %shr376, !dbg !10955
  br label %cond.end412, !dbg !10955

cond.false378:                                    ; preds = %cond.end232
  %arraydecay379 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10955
  %add.ptr380 = getelementptr i32, i32* %arraydecay379, i64 1, !dbg !10955
  %93 = load i32, i32* %add.ptr380, align 4, !dbg !10955
  %94 = call i1 @llvm.is.constant.i32(i32 %93), !dbg !10955
  br i1 %94, label %cond.true381, label %cond.false401, !dbg !10955

cond.true381:                                     ; preds = %cond.false378
  %arraydecay382 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10955
  %add.ptr383 = getelementptr i32, i32* %arraydecay382, i64 1, !dbg !10955
  %95 = load i32, i32* %add.ptr383, align 4, !dbg !10955
  %and384 = and i32 %95, 255, !dbg !10955
  %shl385 = shl i32 %and384, 24, !dbg !10955
  %arraydecay386 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10955
  %add.ptr387 = getelementptr i32, i32* %arraydecay386, i64 1, !dbg !10955
  %96 = load i32, i32* %add.ptr387, align 4, !dbg !10955
  %and388 = and i32 %96, 65280, !dbg !10955
  %shl389 = shl i32 %and388, 8, !dbg !10955
  %or390 = or i32 %shl385, %shl389, !dbg !10955
  %arraydecay391 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10955
  %add.ptr392 = getelementptr i32, i32* %arraydecay391, i64 1, !dbg !10955
  %97 = load i32, i32* %add.ptr392, align 4, !dbg !10955
  %and393 = and i32 %97, 16711680, !dbg !10955
  %shr394 = lshr i32 %and393, 8, !dbg !10955
  %or395 = or i32 %or390, %shr394, !dbg !10955
  %arraydecay396 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10955
  %add.ptr397 = getelementptr i32, i32* %arraydecay396, i64 1, !dbg !10955
  %98 = load i32, i32* %add.ptr397, align 4, !dbg !10955
  %and398 = and i32 %98, -16777216, !dbg !10955
  %shr399 = lshr i32 %and398, 24, !dbg !10955
  %or400 = or i32 %or395, %shr399, !dbg !10955
  br label %cond.end405, !dbg !10955

cond.false401:                                    ; preds = %cond.false378
  %arraydecay402 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10955
  %add.ptr403 = getelementptr i32, i32* %arraydecay402, i64 1, !dbg !10955
  %99 = load i32, i32* %add.ptr403, align 4, !dbg !10955
  %call404 = call i32 @__fswab32(i32 %99) #8, !dbg !10955
  br label %cond.end405, !dbg !10955

cond.end405:                                      ; preds = %cond.false401, %cond.true381
  %cond406 = phi i32 [ %or400, %cond.true381 ], [ %call404, %cond.false401 ], !dbg !10955
  %and407 = and i32 %cond406, -65536, !dbg !10955
  %100 = load i32, i32* %_v203, align 4, !dbg !10955
  %and408 = and i32 %100, 65535, !dbg !10955
  %shl409 = shl i32 %and408, 0, !dbg !10955
  %or410 = or i32 %and407, %shl409, !dbg !10955
  %call411 = call i32 @__fswab32(i32 %or410) #8, !dbg !10955
  br label %cond.end412, !dbg !10955

cond.end412:                                      ; preds = %cond.end405, %cond.end369
  %cond413 = phi i32 [ %or377, %cond.end369 ], [ %call411, %cond.end405 ], !dbg !10955
  %arraydecay414 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10955
  %add.ptr415 = getelementptr i32, i32* %arraydecay414, i64 1, !dbg !10955
  store i32 %cond413, i32* %add.ptr415, align 4, !dbg !10955
  br label %do.end416, !dbg !10955

do.end416:                                        ; preds = %cond.end412
  br label %do.body417, !dbg !10958

do.body417:                                       ; preds = %do.end416
  call void @llvm.dbg.declare(metadata i32* %_v418, metadata !10959, metadata !DIExpression()), !dbg !10961
  %101 = load i16, i16* %vport.addr, align 2, !dbg !10961
  %conv419 = zext i16 %101 to i32, !dbg !10961
  store i32 %conv419, i32* %_v418, align 4, !dbg !10961
  br label %do.body420, !dbg !10961

do.body420:                                       ; preds = %do.body417
  br label %do.end421, !dbg !10962

do.end421:                                        ; preds = %do.body420
  %arraydecay422 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10961
  %add.ptr423 = getelementptr i32, i32* %arraydecay422, i64 2, !dbg !10961
  %102 = load i32, i32* %add.ptr423, align 4, !dbg !10961
  %103 = call i1 @llvm.is.constant.i32(i32 %102), !dbg !10961
  br i1 %103, label %cond.true424, label %cond.false444, !dbg !10961

cond.true424:                                     ; preds = %do.end421
  %arraydecay425 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10961
  %add.ptr426 = getelementptr i32, i32* %arraydecay425, i64 2, !dbg !10961
  %104 = load i32, i32* %add.ptr426, align 4, !dbg !10961
  %and427 = and i32 %104, 255, !dbg !10961
  %shl428 = shl i32 %and427, 24, !dbg !10961
  %arraydecay429 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10961
  %add.ptr430 = getelementptr i32, i32* %arraydecay429, i64 2, !dbg !10961
  %105 = load i32, i32* %add.ptr430, align 4, !dbg !10961
  %and431 = and i32 %105, 65280, !dbg !10961
  %shl432 = shl i32 %and431, 8, !dbg !10961
  %or433 = or i32 %shl428, %shl432, !dbg !10961
  %arraydecay434 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10961
  %add.ptr435 = getelementptr i32, i32* %arraydecay434, i64 2, !dbg !10961
  %106 = load i32, i32* %add.ptr435, align 4, !dbg !10961
  %and436 = and i32 %106, 16711680, !dbg !10961
  %shr437 = lshr i32 %and436, 8, !dbg !10961
  %or438 = or i32 %or433, %shr437, !dbg !10961
  %arraydecay439 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10961
  %add.ptr440 = getelementptr i32, i32* %arraydecay439, i64 2, !dbg !10961
  %107 = load i32, i32* %add.ptr440, align 4, !dbg !10961
  %and441 = and i32 %107, -16777216, !dbg !10961
  %shr442 = lshr i32 %and441, 24, !dbg !10961
  %or443 = or i32 %or438, %shr442, !dbg !10961
  br label %cond.end448, !dbg !10961

cond.false444:                                    ; preds = %do.end421
  %arraydecay445 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10961
  %add.ptr446 = getelementptr i32, i32* %arraydecay445, i64 2, !dbg !10961
  %108 = load i32, i32* %add.ptr446, align 4, !dbg !10961
  %call447 = call i32 @__fswab32(i32 %108) #8, !dbg !10961
  br label %cond.end448, !dbg !10961

cond.end448:                                      ; preds = %cond.false444, %cond.true424
  %cond449 = phi i32 [ %or443, %cond.true424 ], [ %call447, %cond.false444 ], !dbg !10961
  %and450 = and i32 %cond449, -65536, !dbg !10961
  %109 = load i32, i32* %_v418, align 4, !dbg !10961
  %and451 = and i32 %109, 65535, !dbg !10961
  %shl452 = shl i32 %and451, 0, !dbg !10961
  %or453 = or i32 %and450, %shl452, !dbg !10961
  %110 = call i1 @llvm.is.constant.i32(i32 %or453), !dbg !10961
  br i1 %110, label %cond.true454, label %cond.false594, !dbg !10961

cond.true454:                                     ; preds = %cond.end448
  %arraydecay455 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10961
  %add.ptr456 = getelementptr i32, i32* %arraydecay455, i64 2, !dbg !10961
  %111 = load i32, i32* %add.ptr456, align 4, !dbg !10961
  %112 = call i1 @llvm.is.constant.i32(i32 %111), !dbg !10961
  br i1 %112, label %cond.true457, label %cond.false477, !dbg !10961

cond.true457:                                     ; preds = %cond.true454
  %arraydecay458 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10961
  %add.ptr459 = getelementptr i32, i32* %arraydecay458, i64 2, !dbg !10961
  %113 = load i32, i32* %add.ptr459, align 4, !dbg !10961
  %and460 = and i32 %113, 255, !dbg !10961
  %shl461 = shl i32 %and460, 24, !dbg !10961
  %arraydecay462 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10961
  %add.ptr463 = getelementptr i32, i32* %arraydecay462, i64 2, !dbg !10961
  %114 = load i32, i32* %add.ptr463, align 4, !dbg !10961
  %and464 = and i32 %114, 65280, !dbg !10961
  %shl465 = shl i32 %and464, 8, !dbg !10961
  %or466 = or i32 %shl461, %shl465, !dbg !10961
  %arraydecay467 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10961
  %add.ptr468 = getelementptr i32, i32* %arraydecay467, i64 2, !dbg !10961
  %115 = load i32, i32* %add.ptr468, align 4, !dbg !10961
  %and469 = and i32 %115, 16711680, !dbg !10961
  %shr470 = lshr i32 %and469, 8, !dbg !10961
  %or471 = or i32 %or466, %shr470, !dbg !10961
  %arraydecay472 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10961
  %add.ptr473 = getelementptr i32, i32* %arraydecay472, i64 2, !dbg !10961
  %116 = load i32, i32* %add.ptr473, align 4, !dbg !10961
  %and474 = and i32 %116, -16777216, !dbg !10961
  %shr475 = lshr i32 %and474, 24, !dbg !10961
  %or476 = or i32 %or471, %shr475, !dbg !10961
  br label %cond.end481, !dbg !10961

cond.false477:                                    ; preds = %cond.true454
  %arraydecay478 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10961
  %add.ptr479 = getelementptr i32, i32* %arraydecay478, i64 2, !dbg !10961
  %117 = load i32, i32* %add.ptr479, align 4, !dbg !10961
  %call480 = call i32 @__fswab32(i32 %117) #8, !dbg !10961
  br label %cond.end481, !dbg !10961

cond.end481:                                      ; preds = %cond.false477, %cond.true457
  %cond482 = phi i32 [ %or476, %cond.true457 ], [ %call480, %cond.false477 ], !dbg !10961
  %and483 = and i32 %cond482, -65536, !dbg !10961
  %118 = load i32, i32* %_v418, align 4, !dbg !10961
  %and484 = and i32 %118, 65535, !dbg !10961
  %shl485 = shl i32 %and484, 0, !dbg !10961
  %or486 = or i32 %and483, %shl485, !dbg !10961
  %and487 = and i32 %or486, 255, !dbg !10961
  %shl488 = shl i32 %and487, 24, !dbg !10961
  %arraydecay489 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10961
  %add.ptr490 = getelementptr i32, i32* %arraydecay489, i64 2, !dbg !10961
  %119 = load i32, i32* %add.ptr490, align 4, !dbg !10961
  %120 = call i1 @llvm.is.constant.i32(i32 %119), !dbg !10961
  br i1 %120, label %cond.true491, label %cond.false511, !dbg !10961

cond.true491:                                     ; preds = %cond.end481
  %arraydecay492 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10961
  %add.ptr493 = getelementptr i32, i32* %arraydecay492, i64 2, !dbg !10961
  %121 = load i32, i32* %add.ptr493, align 4, !dbg !10961
  %and494 = and i32 %121, 255, !dbg !10961
  %shl495 = shl i32 %and494, 24, !dbg !10961
  %arraydecay496 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10961
  %add.ptr497 = getelementptr i32, i32* %arraydecay496, i64 2, !dbg !10961
  %122 = load i32, i32* %add.ptr497, align 4, !dbg !10961
  %and498 = and i32 %122, 65280, !dbg !10961
  %shl499 = shl i32 %and498, 8, !dbg !10961
  %or500 = or i32 %shl495, %shl499, !dbg !10961
  %arraydecay501 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10961
  %add.ptr502 = getelementptr i32, i32* %arraydecay501, i64 2, !dbg !10961
  %123 = load i32, i32* %add.ptr502, align 4, !dbg !10961
  %and503 = and i32 %123, 16711680, !dbg !10961
  %shr504 = lshr i32 %and503, 8, !dbg !10961
  %or505 = or i32 %or500, %shr504, !dbg !10961
  %arraydecay506 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10961
  %add.ptr507 = getelementptr i32, i32* %arraydecay506, i64 2, !dbg !10961
  %124 = load i32, i32* %add.ptr507, align 4, !dbg !10961
  %and508 = and i32 %124, -16777216, !dbg !10961
  %shr509 = lshr i32 %and508, 24, !dbg !10961
  %or510 = or i32 %or505, %shr509, !dbg !10961
  br label %cond.end515, !dbg !10961

cond.false511:                                    ; preds = %cond.end481
  %arraydecay512 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10961
  %add.ptr513 = getelementptr i32, i32* %arraydecay512, i64 2, !dbg !10961
  %125 = load i32, i32* %add.ptr513, align 4, !dbg !10961
  %call514 = call i32 @__fswab32(i32 %125) #8, !dbg !10961
  br label %cond.end515, !dbg !10961

cond.end515:                                      ; preds = %cond.false511, %cond.true491
  %cond516 = phi i32 [ %or510, %cond.true491 ], [ %call514, %cond.false511 ], !dbg !10961
  %and517 = and i32 %cond516, -65536, !dbg !10961
  %126 = load i32, i32* %_v418, align 4, !dbg !10961
  %and518 = and i32 %126, 65535, !dbg !10961
  %shl519 = shl i32 %and518, 0, !dbg !10961
  %or520 = or i32 %and517, %shl519, !dbg !10961
  %and521 = and i32 %or520, 65280, !dbg !10961
  %shl522 = shl i32 %and521, 8, !dbg !10961
  %or523 = or i32 %shl488, %shl522, !dbg !10961
  %arraydecay524 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10961
  %add.ptr525 = getelementptr i32, i32* %arraydecay524, i64 2, !dbg !10961
  %127 = load i32, i32* %add.ptr525, align 4, !dbg !10961
  %128 = call i1 @llvm.is.constant.i32(i32 %127), !dbg !10961
  br i1 %128, label %cond.true526, label %cond.false546, !dbg !10961

cond.true526:                                     ; preds = %cond.end515
  %arraydecay527 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10961
  %add.ptr528 = getelementptr i32, i32* %arraydecay527, i64 2, !dbg !10961
  %129 = load i32, i32* %add.ptr528, align 4, !dbg !10961
  %and529 = and i32 %129, 255, !dbg !10961
  %shl530 = shl i32 %and529, 24, !dbg !10961
  %arraydecay531 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10961
  %add.ptr532 = getelementptr i32, i32* %arraydecay531, i64 2, !dbg !10961
  %130 = load i32, i32* %add.ptr532, align 4, !dbg !10961
  %and533 = and i32 %130, 65280, !dbg !10961
  %shl534 = shl i32 %and533, 8, !dbg !10961
  %or535 = or i32 %shl530, %shl534, !dbg !10961
  %arraydecay536 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10961
  %add.ptr537 = getelementptr i32, i32* %arraydecay536, i64 2, !dbg !10961
  %131 = load i32, i32* %add.ptr537, align 4, !dbg !10961
  %and538 = and i32 %131, 16711680, !dbg !10961
  %shr539 = lshr i32 %and538, 8, !dbg !10961
  %or540 = or i32 %or535, %shr539, !dbg !10961
  %arraydecay541 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10961
  %add.ptr542 = getelementptr i32, i32* %arraydecay541, i64 2, !dbg !10961
  %132 = load i32, i32* %add.ptr542, align 4, !dbg !10961
  %and543 = and i32 %132, -16777216, !dbg !10961
  %shr544 = lshr i32 %and543, 24, !dbg !10961
  %or545 = or i32 %or540, %shr544, !dbg !10961
  br label %cond.end550, !dbg !10961

cond.false546:                                    ; preds = %cond.end515
  %arraydecay547 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10961
  %add.ptr548 = getelementptr i32, i32* %arraydecay547, i64 2, !dbg !10961
  %133 = load i32, i32* %add.ptr548, align 4, !dbg !10961
  %call549 = call i32 @__fswab32(i32 %133) #8, !dbg !10961
  br label %cond.end550, !dbg !10961

cond.end550:                                      ; preds = %cond.false546, %cond.true526
  %cond551 = phi i32 [ %or545, %cond.true526 ], [ %call549, %cond.false546 ], !dbg !10961
  %and552 = and i32 %cond551, -65536, !dbg !10961
  %134 = load i32, i32* %_v418, align 4, !dbg !10961
  %and553 = and i32 %134, 65535, !dbg !10961
  %shl554 = shl i32 %and553, 0, !dbg !10961
  %or555 = or i32 %and552, %shl554, !dbg !10961
  %and556 = and i32 %or555, 16711680, !dbg !10961
  %shr557 = lshr i32 %and556, 8, !dbg !10961
  %or558 = or i32 %or523, %shr557, !dbg !10961
  %arraydecay559 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10961
  %add.ptr560 = getelementptr i32, i32* %arraydecay559, i64 2, !dbg !10961
  %135 = load i32, i32* %add.ptr560, align 4, !dbg !10961
  %136 = call i1 @llvm.is.constant.i32(i32 %135), !dbg !10961
  br i1 %136, label %cond.true561, label %cond.false581, !dbg !10961

cond.true561:                                     ; preds = %cond.end550
  %arraydecay562 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10961
  %add.ptr563 = getelementptr i32, i32* %arraydecay562, i64 2, !dbg !10961
  %137 = load i32, i32* %add.ptr563, align 4, !dbg !10961
  %and564 = and i32 %137, 255, !dbg !10961
  %shl565 = shl i32 %and564, 24, !dbg !10961
  %arraydecay566 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10961
  %add.ptr567 = getelementptr i32, i32* %arraydecay566, i64 2, !dbg !10961
  %138 = load i32, i32* %add.ptr567, align 4, !dbg !10961
  %and568 = and i32 %138, 65280, !dbg !10961
  %shl569 = shl i32 %and568, 8, !dbg !10961
  %or570 = or i32 %shl565, %shl569, !dbg !10961
  %arraydecay571 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10961
  %add.ptr572 = getelementptr i32, i32* %arraydecay571, i64 2, !dbg !10961
  %139 = load i32, i32* %add.ptr572, align 4, !dbg !10961
  %and573 = and i32 %139, 16711680, !dbg !10961
  %shr574 = lshr i32 %and573, 8, !dbg !10961
  %or575 = or i32 %or570, %shr574, !dbg !10961
  %arraydecay576 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10961
  %add.ptr577 = getelementptr i32, i32* %arraydecay576, i64 2, !dbg !10961
  %140 = load i32, i32* %add.ptr577, align 4, !dbg !10961
  %and578 = and i32 %140, -16777216, !dbg !10961
  %shr579 = lshr i32 %and578, 24, !dbg !10961
  %or580 = or i32 %or575, %shr579, !dbg !10961
  br label %cond.end585, !dbg !10961

cond.false581:                                    ; preds = %cond.end550
  %arraydecay582 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10961
  %add.ptr583 = getelementptr i32, i32* %arraydecay582, i64 2, !dbg !10961
  %141 = load i32, i32* %add.ptr583, align 4, !dbg !10961
  %call584 = call i32 @__fswab32(i32 %141) #8, !dbg !10961
  br label %cond.end585, !dbg !10961

cond.end585:                                      ; preds = %cond.false581, %cond.true561
  %cond586 = phi i32 [ %or580, %cond.true561 ], [ %call584, %cond.false581 ], !dbg !10961
  %and587 = and i32 %cond586, -65536, !dbg !10961
  %142 = load i32, i32* %_v418, align 4, !dbg !10961
  %and588 = and i32 %142, 65535, !dbg !10961
  %shl589 = shl i32 %and588, 0, !dbg !10961
  %or590 = or i32 %and587, %shl589, !dbg !10961
  %and591 = and i32 %or590, -16777216, !dbg !10961
  %shr592 = lshr i32 %and591, 24, !dbg !10961
  %or593 = or i32 %or558, %shr592, !dbg !10961
  br label %cond.end628, !dbg !10961

cond.false594:                                    ; preds = %cond.end448
  %arraydecay595 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10961
  %add.ptr596 = getelementptr i32, i32* %arraydecay595, i64 2, !dbg !10961
  %143 = load i32, i32* %add.ptr596, align 4, !dbg !10961
  %144 = call i1 @llvm.is.constant.i32(i32 %143), !dbg !10961
  br i1 %144, label %cond.true597, label %cond.false617, !dbg !10961

cond.true597:                                     ; preds = %cond.false594
  %arraydecay598 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10961
  %add.ptr599 = getelementptr i32, i32* %arraydecay598, i64 2, !dbg !10961
  %145 = load i32, i32* %add.ptr599, align 4, !dbg !10961
  %and600 = and i32 %145, 255, !dbg !10961
  %shl601 = shl i32 %and600, 24, !dbg !10961
  %arraydecay602 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10961
  %add.ptr603 = getelementptr i32, i32* %arraydecay602, i64 2, !dbg !10961
  %146 = load i32, i32* %add.ptr603, align 4, !dbg !10961
  %and604 = and i32 %146, 65280, !dbg !10961
  %shl605 = shl i32 %and604, 8, !dbg !10961
  %or606 = or i32 %shl601, %shl605, !dbg !10961
  %arraydecay607 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10961
  %add.ptr608 = getelementptr i32, i32* %arraydecay607, i64 2, !dbg !10961
  %147 = load i32, i32* %add.ptr608, align 4, !dbg !10961
  %and609 = and i32 %147, 16711680, !dbg !10961
  %shr610 = lshr i32 %and609, 8, !dbg !10961
  %or611 = or i32 %or606, %shr610, !dbg !10961
  %arraydecay612 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10961
  %add.ptr613 = getelementptr i32, i32* %arraydecay612, i64 2, !dbg !10961
  %148 = load i32, i32* %add.ptr613, align 4, !dbg !10961
  %and614 = and i32 %148, -16777216, !dbg !10961
  %shr615 = lshr i32 %and614, 24, !dbg !10961
  %or616 = or i32 %or611, %shr615, !dbg !10961
  br label %cond.end621, !dbg !10961

cond.false617:                                    ; preds = %cond.false594
  %arraydecay618 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10961
  %add.ptr619 = getelementptr i32, i32* %arraydecay618, i64 2, !dbg !10961
  %149 = load i32, i32* %add.ptr619, align 4, !dbg !10961
  %call620 = call i32 @__fswab32(i32 %149) #8, !dbg !10961
  br label %cond.end621, !dbg !10961

cond.end621:                                      ; preds = %cond.false617, %cond.true597
  %cond622 = phi i32 [ %or616, %cond.true597 ], [ %call620, %cond.false617 ], !dbg !10961
  %and623 = and i32 %cond622, -65536, !dbg !10961
  %150 = load i32, i32* %_v418, align 4, !dbg !10961
  %and624 = and i32 %150, 65535, !dbg !10961
  %shl625 = shl i32 %and624, 0, !dbg !10961
  %or626 = or i32 %and623, %shl625, !dbg !10961
  %call627 = call i32 @__fswab32(i32 %or626) #8, !dbg !10961
  br label %cond.end628, !dbg !10961

cond.end628:                                      ; preds = %cond.end621, %cond.end585
  %cond629 = phi i32 [ %or593, %cond.end585 ], [ %call627, %cond.end621 ], !dbg !10961
  %arraydecay630 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10961
  %add.ptr631 = getelementptr i32, i32* %arraydecay630, i64 2, !dbg !10961
  store i32 %cond629, i32* %add.ptr631, align 4, !dbg !10961
  br label %do.end632, !dbg !10961

do.end632:                                        ; preds = %cond.end628
  %151 = load i16, i16* %vport.addr, align 2, !dbg !10964
  %tobool = icmp ne i16 %151, 0, !dbg !10964
  br i1 %tobool, label %if.then, label %if.end, !dbg !10966

if.then:                                          ; preds = %do.end632
  br label %do.body633, !dbg !10967

do.body633:                                       ; preds = %if.then
  call void @llvm.dbg.declare(metadata i32* %_v634, metadata !10968, metadata !DIExpression()), !dbg !10970
  store i32 1, i32* %_v634, align 4, !dbg !10970
  br label %do.body635, !dbg !10970

do.body635:                                       ; preds = %do.body633
  br label %do.end636, !dbg !10971

do.end636:                                        ; preds = %do.body635
  %arraydecay637 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10970
  %add.ptr638 = getelementptr i32, i32* %arraydecay637, i64 2, !dbg !10970
  %152 = load i32, i32* %add.ptr638, align 4, !dbg !10970
  %153 = call i1 @llvm.is.constant.i32(i32 %152), !dbg !10970
  br i1 %153, label %cond.true639, label %cond.false659, !dbg !10970

cond.true639:                                     ; preds = %do.end636
  %arraydecay640 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10970
  %add.ptr641 = getelementptr i32, i32* %arraydecay640, i64 2, !dbg !10970
  %154 = load i32, i32* %add.ptr641, align 4, !dbg !10970
  %and642 = and i32 %154, 255, !dbg !10970
  %shl643 = shl i32 %and642, 24, !dbg !10970
  %arraydecay644 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10970
  %add.ptr645 = getelementptr i32, i32* %arraydecay644, i64 2, !dbg !10970
  %155 = load i32, i32* %add.ptr645, align 4, !dbg !10970
  %and646 = and i32 %155, 65280, !dbg !10970
  %shl647 = shl i32 %and646, 8, !dbg !10970
  %or648 = or i32 %shl643, %shl647, !dbg !10970
  %arraydecay649 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10970
  %add.ptr650 = getelementptr i32, i32* %arraydecay649, i64 2, !dbg !10970
  %156 = load i32, i32* %add.ptr650, align 4, !dbg !10970
  %and651 = and i32 %156, 16711680, !dbg !10970
  %shr652 = lshr i32 %and651, 8, !dbg !10970
  %or653 = or i32 %or648, %shr652, !dbg !10970
  %arraydecay654 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10970
  %add.ptr655 = getelementptr i32, i32* %arraydecay654, i64 2, !dbg !10970
  %157 = load i32, i32* %add.ptr655, align 4, !dbg !10970
  %and656 = and i32 %157, -16777216, !dbg !10970
  %shr657 = lshr i32 %and656, 24, !dbg !10970
  %or658 = or i32 %or653, %shr657, !dbg !10970
  br label %cond.end663, !dbg !10970

cond.false659:                                    ; preds = %do.end636
  %arraydecay660 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10970
  %add.ptr661 = getelementptr i32, i32* %arraydecay660, i64 2, !dbg !10970
  %158 = load i32, i32* %add.ptr661, align 4, !dbg !10970
  %call662 = call i32 @__fswab32(i32 %158) #8, !dbg !10970
  br label %cond.end663, !dbg !10970

cond.end663:                                      ; preds = %cond.false659, %cond.true639
  %cond664 = phi i32 [ %or658, %cond.true639 ], [ %call662, %cond.false659 ], !dbg !10970
  %and665 = and i32 %cond664, 2147483647, !dbg !10970
  %159 = load i32, i32* %_v634, align 4, !dbg !10970
  %and666 = and i32 %159, 1, !dbg !10970
  %shl667 = shl i32 %and666, 31, !dbg !10970
  %or668 = or i32 %and665, %shl667, !dbg !10970
  %160 = call i1 @llvm.is.constant.i32(i32 %or668), !dbg !10970
  br i1 %160, label %cond.true669, label %cond.false809, !dbg !10970

cond.true669:                                     ; preds = %cond.end663
  %arraydecay670 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10970
  %add.ptr671 = getelementptr i32, i32* %arraydecay670, i64 2, !dbg !10970
  %161 = load i32, i32* %add.ptr671, align 4, !dbg !10970
  %162 = call i1 @llvm.is.constant.i32(i32 %161), !dbg !10970
  br i1 %162, label %cond.true672, label %cond.false692, !dbg !10970

cond.true672:                                     ; preds = %cond.true669
  %arraydecay673 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10970
  %add.ptr674 = getelementptr i32, i32* %arraydecay673, i64 2, !dbg !10970
  %163 = load i32, i32* %add.ptr674, align 4, !dbg !10970
  %and675 = and i32 %163, 255, !dbg !10970
  %shl676 = shl i32 %and675, 24, !dbg !10970
  %arraydecay677 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10970
  %add.ptr678 = getelementptr i32, i32* %arraydecay677, i64 2, !dbg !10970
  %164 = load i32, i32* %add.ptr678, align 4, !dbg !10970
  %and679 = and i32 %164, 65280, !dbg !10970
  %shl680 = shl i32 %and679, 8, !dbg !10970
  %or681 = or i32 %shl676, %shl680, !dbg !10970
  %arraydecay682 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10970
  %add.ptr683 = getelementptr i32, i32* %arraydecay682, i64 2, !dbg !10970
  %165 = load i32, i32* %add.ptr683, align 4, !dbg !10970
  %and684 = and i32 %165, 16711680, !dbg !10970
  %shr685 = lshr i32 %and684, 8, !dbg !10970
  %or686 = or i32 %or681, %shr685, !dbg !10970
  %arraydecay687 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10970
  %add.ptr688 = getelementptr i32, i32* %arraydecay687, i64 2, !dbg !10970
  %166 = load i32, i32* %add.ptr688, align 4, !dbg !10970
  %and689 = and i32 %166, -16777216, !dbg !10970
  %shr690 = lshr i32 %and689, 24, !dbg !10970
  %or691 = or i32 %or686, %shr690, !dbg !10970
  br label %cond.end696, !dbg !10970

cond.false692:                                    ; preds = %cond.true669
  %arraydecay693 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10970
  %add.ptr694 = getelementptr i32, i32* %arraydecay693, i64 2, !dbg !10970
  %167 = load i32, i32* %add.ptr694, align 4, !dbg !10970
  %call695 = call i32 @__fswab32(i32 %167) #8, !dbg !10970
  br label %cond.end696, !dbg !10970

cond.end696:                                      ; preds = %cond.false692, %cond.true672
  %cond697 = phi i32 [ %or691, %cond.true672 ], [ %call695, %cond.false692 ], !dbg !10970
  %and698 = and i32 %cond697, 2147483647, !dbg !10970
  %168 = load i32, i32* %_v634, align 4, !dbg !10970
  %and699 = and i32 %168, 1, !dbg !10970
  %shl700 = shl i32 %and699, 31, !dbg !10970
  %or701 = or i32 %and698, %shl700, !dbg !10970
  %and702 = and i32 %or701, 255, !dbg !10970
  %shl703 = shl i32 %and702, 24, !dbg !10970
  %arraydecay704 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10970
  %add.ptr705 = getelementptr i32, i32* %arraydecay704, i64 2, !dbg !10970
  %169 = load i32, i32* %add.ptr705, align 4, !dbg !10970
  %170 = call i1 @llvm.is.constant.i32(i32 %169), !dbg !10970
  br i1 %170, label %cond.true706, label %cond.false726, !dbg !10970

cond.true706:                                     ; preds = %cond.end696
  %arraydecay707 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10970
  %add.ptr708 = getelementptr i32, i32* %arraydecay707, i64 2, !dbg !10970
  %171 = load i32, i32* %add.ptr708, align 4, !dbg !10970
  %and709 = and i32 %171, 255, !dbg !10970
  %shl710 = shl i32 %and709, 24, !dbg !10970
  %arraydecay711 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10970
  %add.ptr712 = getelementptr i32, i32* %arraydecay711, i64 2, !dbg !10970
  %172 = load i32, i32* %add.ptr712, align 4, !dbg !10970
  %and713 = and i32 %172, 65280, !dbg !10970
  %shl714 = shl i32 %and713, 8, !dbg !10970
  %or715 = or i32 %shl710, %shl714, !dbg !10970
  %arraydecay716 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10970
  %add.ptr717 = getelementptr i32, i32* %arraydecay716, i64 2, !dbg !10970
  %173 = load i32, i32* %add.ptr717, align 4, !dbg !10970
  %and718 = and i32 %173, 16711680, !dbg !10970
  %shr719 = lshr i32 %and718, 8, !dbg !10970
  %or720 = or i32 %or715, %shr719, !dbg !10970
  %arraydecay721 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10970
  %add.ptr722 = getelementptr i32, i32* %arraydecay721, i64 2, !dbg !10970
  %174 = load i32, i32* %add.ptr722, align 4, !dbg !10970
  %and723 = and i32 %174, -16777216, !dbg !10970
  %shr724 = lshr i32 %and723, 24, !dbg !10970
  %or725 = or i32 %or720, %shr724, !dbg !10970
  br label %cond.end730, !dbg !10970

cond.false726:                                    ; preds = %cond.end696
  %arraydecay727 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10970
  %add.ptr728 = getelementptr i32, i32* %arraydecay727, i64 2, !dbg !10970
  %175 = load i32, i32* %add.ptr728, align 4, !dbg !10970
  %call729 = call i32 @__fswab32(i32 %175) #8, !dbg !10970
  br label %cond.end730, !dbg !10970

cond.end730:                                      ; preds = %cond.false726, %cond.true706
  %cond731 = phi i32 [ %or725, %cond.true706 ], [ %call729, %cond.false726 ], !dbg !10970
  %and732 = and i32 %cond731, 2147483647, !dbg !10970
  %176 = load i32, i32* %_v634, align 4, !dbg !10970
  %and733 = and i32 %176, 1, !dbg !10970
  %shl734 = shl i32 %and733, 31, !dbg !10970
  %or735 = or i32 %and732, %shl734, !dbg !10970
  %and736 = and i32 %or735, 65280, !dbg !10970
  %shl737 = shl i32 %and736, 8, !dbg !10970
  %or738 = or i32 %shl703, %shl737, !dbg !10970
  %arraydecay739 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10970
  %add.ptr740 = getelementptr i32, i32* %arraydecay739, i64 2, !dbg !10970
  %177 = load i32, i32* %add.ptr740, align 4, !dbg !10970
  %178 = call i1 @llvm.is.constant.i32(i32 %177), !dbg !10970
  br i1 %178, label %cond.true741, label %cond.false761, !dbg !10970

cond.true741:                                     ; preds = %cond.end730
  %arraydecay742 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10970
  %add.ptr743 = getelementptr i32, i32* %arraydecay742, i64 2, !dbg !10970
  %179 = load i32, i32* %add.ptr743, align 4, !dbg !10970
  %and744 = and i32 %179, 255, !dbg !10970
  %shl745 = shl i32 %and744, 24, !dbg !10970
  %arraydecay746 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10970
  %add.ptr747 = getelementptr i32, i32* %arraydecay746, i64 2, !dbg !10970
  %180 = load i32, i32* %add.ptr747, align 4, !dbg !10970
  %and748 = and i32 %180, 65280, !dbg !10970
  %shl749 = shl i32 %and748, 8, !dbg !10970
  %or750 = or i32 %shl745, %shl749, !dbg !10970
  %arraydecay751 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10970
  %add.ptr752 = getelementptr i32, i32* %arraydecay751, i64 2, !dbg !10970
  %181 = load i32, i32* %add.ptr752, align 4, !dbg !10970
  %and753 = and i32 %181, 16711680, !dbg !10970
  %shr754 = lshr i32 %and753, 8, !dbg !10970
  %or755 = or i32 %or750, %shr754, !dbg !10970
  %arraydecay756 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10970
  %add.ptr757 = getelementptr i32, i32* %arraydecay756, i64 2, !dbg !10970
  %182 = load i32, i32* %add.ptr757, align 4, !dbg !10970
  %and758 = and i32 %182, -16777216, !dbg !10970
  %shr759 = lshr i32 %and758, 24, !dbg !10970
  %or760 = or i32 %or755, %shr759, !dbg !10970
  br label %cond.end765, !dbg !10970

cond.false761:                                    ; preds = %cond.end730
  %arraydecay762 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10970
  %add.ptr763 = getelementptr i32, i32* %arraydecay762, i64 2, !dbg !10970
  %183 = load i32, i32* %add.ptr763, align 4, !dbg !10970
  %call764 = call i32 @__fswab32(i32 %183) #8, !dbg !10970
  br label %cond.end765, !dbg !10970

cond.end765:                                      ; preds = %cond.false761, %cond.true741
  %cond766 = phi i32 [ %or760, %cond.true741 ], [ %call764, %cond.false761 ], !dbg !10970
  %and767 = and i32 %cond766, 2147483647, !dbg !10970
  %184 = load i32, i32* %_v634, align 4, !dbg !10970
  %and768 = and i32 %184, 1, !dbg !10970
  %shl769 = shl i32 %and768, 31, !dbg !10970
  %or770 = or i32 %and767, %shl769, !dbg !10970
  %and771 = and i32 %or770, 16711680, !dbg !10970
  %shr772 = lshr i32 %and771, 8, !dbg !10970
  %or773 = or i32 %or738, %shr772, !dbg !10970
  %arraydecay774 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10970
  %add.ptr775 = getelementptr i32, i32* %arraydecay774, i64 2, !dbg !10970
  %185 = load i32, i32* %add.ptr775, align 4, !dbg !10970
  %186 = call i1 @llvm.is.constant.i32(i32 %185), !dbg !10970
  br i1 %186, label %cond.true776, label %cond.false796, !dbg !10970

cond.true776:                                     ; preds = %cond.end765
  %arraydecay777 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10970
  %add.ptr778 = getelementptr i32, i32* %arraydecay777, i64 2, !dbg !10970
  %187 = load i32, i32* %add.ptr778, align 4, !dbg !10970
  %and779 = and i32 %187, 255, !dbg !10970
  %shl780 = shl i32 %and779, 24, !dbg !10970
  %arraydecay781 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10970
  %add.ptr782 = getelementptr i32, i32* %arraydecay781, i64 2, !dbg !10970
  %188 = load i32, i32* %add.ptr782, align 4, !dbg !10970
  %and783 = and i32 %188, 65280, !dbg !10970
  %shl784 = shl i32 %and783, 8, !dbg !10970
  %or785 = or i32 %shl780, %shl784, !dbg !10970
  %arraydecay786 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10970
  %add.ptr787 = getelementptr i32, i32* %arraydecay786, i64 2, !dbg !10970
  %189 = load i32, i32* %add.ptr787, align 4, !dbg !10970
  %and788 = and i32 %189, 16711680, !dbg !10970
  %shr789 = lshr i32 %and788, 8, !dbg !10970
  %or790 = or i32 %or785, %shr789, !dbg !10970
  %arraydecay791 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10970
  %add.ptr792 = getelementptr i32, i32* %arraydecay791, i64 2, !dbg !10970
  %190 = load i32, i32* %add.ptr792, align 4, !dbg !10970
  %and793 = and i32 %190, -16777216, !dbg !10970
  %shr794 = lshr i32 %and793, 24, !dbg !10970
  %or795 = or i32 %or790, %shr794, !dbg !10970
  br label %cond.end800, !dbg !10970

cond.false796:                                    ; preds = %cond.end765
  %arraydecay797 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10970
  %add.ptr798 = getelementptr i32, i32* %arraydecay797, i64 2, !dbg !10970
  %191 = load i32, i32* %add.ptr798, align 4, !dbg !10970
  %call799 = call i32 @__fswab32(i32 %191) #8, !dbg !10970
  br label %cond.end800, !dbg !10970

cond.end800:                                      ; preds = %cond.false796, %cond.true776
  %cond801 = phi i32 [ %or795, %cond.true776 ], [ %call799, %cond.false796 ], !dbg !10970
  %and802 = and i32 %cond801, 2147483647, !dbg !10970
  %192 = load i32, i32* %_v634, align 4, !dbg !10970
  %and803 = and i32 %192, 1, !dbg !10970
  %shl804 = shl i32 %and803, 31, !dbg !10970
  %or805 = or i32 %and802, %shl804, !dbg !10970
  %and806 = and i32 %or805, -16777216, !dbg !10970
  %shr807 = lshr i32 %and806, 24, !dbg !10970
  %or808 = or i32 %or773, %shr807, !dbg !10970
  br label %cond.end843, !dbg !10970

cond.false809:                                    ; preds = %cond.end663
  %arraydecay810 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10970
  %add.ptr811 = getelementptr i32, i32* %arraydecay810, i64 2, !dbg !10970
  %193 = load i32, i32* %add.ptr811, align 4, !dbg !10970
  %194 = call i1 @llvm.is.constant.i32(i32 %193), !dbg !10970
  br i1 %194, label %cond.true812, label %cond.false832, !dbg !10970

cond.true812:                                     ; preds = %cond.false809
  %arraydecay813 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10970
  %add.ptr814 = getelementptr i32, i32* %arraydecay813, i64 2, !dbg !10970
  %195 = load i32, i32* %add.ptr814, align 4, !dbg !10970
  %and815 = and i32 %195, 255, !dbg !10970
  %shl816 = shl i32 %and815, 24, !dbg !10970
  %arraydecay817 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10970
  %add.ptr818 = getelementptr i32, i32* %arraydecay817, i64 2, !dbg !10970
  %196 = load i32, i32* %add.ptr818, align 4, !dbg !10970
  %and819 = and i32 %196, 65280, !dbg !10970
  %shl820 = shl i32 %and819, 8, !dbg !10970
  %or821 = or i32 %shl816, %shl820, !dbg !10970
  %arraydecay822 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10970
  %add.ptr823 = getelementptr i32, i32* %arraydecay822, i64 2, !dbg !10970
  %197 = load i32, i32* %add.ptr823, align 4, !dbg !10970
  %and824 = and i32 %197, 16711680, !dbg !10970
  %shr825 = lshr i32 %and824, 8, !dbg !10970
  %or826 = or i32 %or821, %shr825, !dbg !10970
  %arraydecay827 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10970
  %add.ptr828 = getelementptr i32, i32* %arraydecay827, i64 2, !dbg !10970
  %198 = load i32, i32* %add.ptr828, align 4, !dbg !10970
  %and829 = and i32 %198, -16777216, !dbg !10970
  %shr830 = lshr i32 %and829, 24, !dbg !10970
  %or831 = or i32 %or826, %shr830, !dbg !10970
  br label %cond.end836, !dbg !10970

cond.false832:                                    ; preds = %cond.false809
  %arraydecay833 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10970
  %add.ptr834 = getelementptr i32, i32* %arraydecay833, i64 2, !dbg !10970
  %199 = load i32, i32* %add.ptr834, align 4, !dbg !10970
  %call835 = call i32 @__fswab32(i32 %199) #8, !dbg !10970
  br label %cond.end836, !dbg !10970

cond.end836:                                      ; preds = %cond.false832, %cond.true812
  %cond837 = phi i32 [ %or831, %cond.true812 ], [ %call835, %cond.false832 ], !dbg !10970
  %and838 = and i32 %cond837, 2147483647, !dbg !10970
  %200 = load i32, i32* %_v634, align 4, !dbg !10970
  %and839 = and i32 %200, 1, !dbg !10970
  %shl840 = shl i32 %and839, 31, !dbg !10970
  %or841 = or i32 %and838, %shl840, !dbg !10970
  %call842 = call i32 @__fswab32(i32 %or841) #8, !dbg !10970
  br label %cond.end843, !dbg !10970

cond.end843:                                      ; preds = %cond.end836, %cond.end800
  %cond844 = phi i32 [ %or808, %cond.end800 ], [ %call842, %cond.end836 ], !dbg !10970
  %arraydecay845 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10970
  %add.ptr846 = getelementptr i32, i32* %arraydecay845, i64 2, !dbg !10970
  store i32 %cond844, i32* %add.ptr846, align 4, !dbg !10970
  br label %do.end847, !dbg !10970

do.end847:                                        ; preds = %cond.end843
  br label %if.end, !dbg !10970

if.end:                                           ; preds = %do.end847, %do.end632
  %201 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %mdev.addr, align 8, !dbg !10973
  %arraydecay848 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !10973
  %202 = bitcast i32* %arraydecay848 to i8*, !dbg !10973
  %arraydecay849 = getelementptr inbounds [4 x i32], [4 x i32]* %out, i64 0, i64 0, !dbg !10973
  %203 = bitcast i32* %arraydecay849 to i8*, !dbg !10973
  %call850 = call i32 @mlx5_cmd_exec(%struct.mlx5_core_dev* %201, i8* %202, i32 16, i8* %203, i32 16) #9, !dbg !10973
  store i32 %call850, i32* %tmp, align 4, !dbg !10975
  %204 = load i32, i32* %tmp, align 4, !dbg !10973
  store i32 %204, i32* %err, align 4, !dbg !10976
  %205 = load i32, i32* %err, align 4, !dbg !10977
  %tobool851 = icmp ne i32 %205, 0, !dbg !10977
  br i1 %tobool851, label %if.then852, label %if.end853, !dbg !10979

if.then852:                                       ; preds = %if.end
  store i8 0, i8* %retval, align 1, !dbg !10980
  br label %return, !dbg !10980

if.end853:                                        ; preds = %if.end
  %arraydecay854 = getelementptr inbounds [4 x i32], [4 x i32]* %out, i64 0, i64 0, !dbg !10981
  %add.ptr855 = getelementptr i32, i32* %arraydecay854, i64 3, !dbg !10981
  %206 = load i32, i32* %add.ptr855, align 4, !dbg !10981
  %207 = call i1 @llvm.is.constant.i32(i32 %206), !dbg !10981
  br i1 %207, label %cond.true856, label %cond.false876, !dbg !10981

cond.true856:                                     ; preds = %if.end853
  %arraydecay857 = getelementptr inbounds [4 x i32], [4 x i32]* %out, i64 0, i64 0, !dbg !10981
  %add.ptr858 = getelementptr i32, i32* %arraydecay857, i64 3, !dbg !10981
  %208 = load i32, i32* %add.ptr858, align 4, !dbg !10981
  %and859 = and i32 %208, 255, !dbg !10981
  %shl860 = shl i32 %and859, 24, !dbg !10981
  %arraydecay861 = getelementptr inbounds [4 x i32], [4 x i32]* %out, i64 0, i64 0, !dbg !10981
  %add.ptr862 = getelementptr i32, i32* %arraydecay861, i64 3, !dbg !10981
  %209 = load i32, i32* %add.ptr862, align 4, !dbg !10981
  %and863 = and i32 %209, 65280, !dbg !10981
  %shl864 = shl i32 %and863, 8, !dbg !10981
  %or865 = or i32 %shl860, %shl864, !dbg !10981
  %arraydecay866 = getelementptr inbounds [4 x i32], [4 x i32]* %out, i64 0, i64 0, !dbg !10981
  %add.ptr867 = getelementptr i32, i32* %arraydecay866, i64 3, !dbg !10981
  %210 = load i32, i32* %add.ptr867, align 4, !dbg !10981
  %and868 = and i32 %210, 16711680, !dbg !10981
  %shr869 = lshr i32 %and868, 8, !dbg !10981
  %or870 = or i32 %or865, %shr869, !dbg !10981
  %arraydecay871 = getelementptr inbounds [4 x i32], [4 x i32]* %out, i64 0, i64 0, !dbg !10981
  %add.ptr872 = getelementptr i32, i32* %arraydecay871, i64 3, !dbg !10981
  %211 = load i32, i32* %add.ptr872, align 4, !dbg !10981
  %and873 = and i32 %211, -16777216, !dbg !10981
  %shr874 = lshr i32 %and873, 24, !dbg !10981
  %or875 = or i32 %or870, %shr874, !dbg !10981
  br label %cond.end880, !dbg !10981

cond.false876:                                    ; preds = %if.end853
  %arraydecay877 = getelementptr inbounds [4 x i32], [4 x i32]* %out, i64 0, i64 0, !dbg !10981
  %add.ptr878 = getelementptr i32, i32* %arraydecay877, i64 3, !dbg !10981
  %212 = load i32, i32* %add.ptr878, align 4, !dbg !10981
  %call879 = call i32 @__fswab32(i32 %212) #8, !dbg !10981
  br label %cond.end880, !dbg !10981

cond.end880:                                      ; preds = %cond.false876, %cond.true856
  %cond881 = phi i32 [ %or875, %cond.true856 ], [ %call879, %cond.false876 ], !dbg !10981
  %shr882 = lshr i32 %cond881, 0, !dbg !10981
  %and883 = and i32 %shr882, 15, !dbg !10981
  %conv884 = trunc i32 %and883 to i8, !dbg !10981
  store i8 %conv884, i8* %retval, align 1, !dbg !10982
  br label %return, !dbg !10982

return:                                           ; preds = %cond.end880, %if.then852
  %213 = load i8, i8* %retval, align 1, !dbg !10983
  ret i8 %213, !dbg !10983
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i32(i32) #3

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @__fswab32(i32 %val) #4 !dbg !10984 {
entry:
  %val.addr = alloca i32, align 4
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !10988, metadata !DIExpression()), !dbg !10989
  %0 = load i32, i32* %val.addr, align 4, !dbg !10990
  %call = call i32 @__arch_swab32(i32 %0) #8, !dbg !10991
  ret i32 %call, !dbg !10992
}

; Function Attrs: noredzone
declare dso_local i32 @mlx5_cmd_exec(%struct.mlx5_core_dev*, i8*, i32, i8*, i32) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @mlx5_modify_vport_admin_state(%struct.mlx5_core_dev* %mdev, i8 zeroext %opmod, i16 zeroext %vport, i8 zeroext %other_vport, i8 zeroext %state) #0 !dbg !10993 {
entry:
  %mdev.addr = alloca %struct.mlx5_core_dev*, align 8
  %opmod.addr = alloca i8, align 1
  %vport.addr = alloca i16, align 2
  %other_vport.addr = alloca i8, align 1
  %state.addr = alloca i8, align 1
  %in = alloca [4 x i32], align 16
  %_v = alloca i32, align 4
  %_v203 = alloca i32, align 4
  %_v418 = alloca i32, align 4
  %_v634 = alloca i32, align 4
  %_v850 = alloca i32, align 4
  %_out = alloca [4 x i32], align 16
  %tmp = alloca i32, align 4
  %tmp1065 = alloca i32, align 4
  store %struct.mlx5_core_dev* %mdev, %struct.mlx5_core_dev** %mdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_core_dev** %mdev.addr, metadata !10996, metadata !DIExpression()), !dbg !10997
  store i8 %opmod, i8* %opmod.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %opmod.addr, metadata !10998, metadata !DIExpression()), !dbg !10999
  store i16 %vport, i16* %vport.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %vport.addr, metadata !11000, metadata !DIExpression()), !dbg !11001
  store i8 %other_vport, i8* %other_vport.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %other_vport.addr, metadata !11002, metadata !DIExpression()), !dbg !11003
  store i8 %state, i8* %state.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %state.addr, metadata !11004, metadata !DIExpression()), !dbg !11005
  call void @llvm.dbg.declare(metadata [4 x i32]* %in, metadata !11006, metadata !DIExpression()), !dbg !11007
  %0 = bitcast [4 x i32]* %in to i8*, !dbg !11007
  call void @llvm.memset.p0i8.i64(i8* align 16 %0, i8 0, i64 16, i1 false), !dbg !11007
  br label %do.body, !dbg !11008

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %_v, metadata !11009, metadata !DIExpression()), !dbg !11011
  store i32 1873, i32* %_v, align 4, !dbg !11011
  br label %do.body1, !dbg !11011

do.body1:                                         ; preds = %do.body
  br label %do.end, !dbg !11012

do.end:                                           ; preds = %do.body1
  %arraydecay = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11011
  %add.ptr = getelementptr i32, i32* %arraydecay, i64 0, !dbg !11011
  %1 = load i32, i32* %add.ptr, align 4, !dbg !11011
  %2 = call i1 @llvm.is.constant.i32(i32 %1), !dbg !11011
  br i1 %2, label %cond.true, label %cond.false, !dbg !11011

cond.true:                                        ; preds = %do.end
  %arraydecay2 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11011
  %add.ptr3 = getelementptr i32, i32* %arraydecay2, i64 0, !dbg !11011
  %3 = load i32, i32* %add.ptr3, align 4, !dbg !11011
  %and = and i32 %3, 255, !dbg !11011
  %shl = shl i32 %and, 24, !dbg !11011
  %arraydecay4 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11011
  %add.ptr5 = getelementptr i32, i32* %arraydecay4, i64 0, !dbg !11011
  %4 = load i32, i32* %add.ptr5, align 4, !dbg !11011
  %and6 = and i32 %4, 65280, !dbg !11011
  %shl7 = shl i32 %and6, 8, !dbg !11011
  %or = or i32 %shl, %shl7, !dbg !11011
  %arraydecay8 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11011
  %add.ptr9 = getelementptr i32, i32* %arraydecay8, i64 0, !dbg !11011
  %5 = load i32, i32* %add.ptr9, align 4, !dbg !11011
  %and10 = and i32 %5, 16711680, !dbg !11011
  %shr = lshr i32 %and10, 8, !dbg !11011
  %or11 = or i32 %or, %shr, !dbg !11011
  %arraydecay12 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11011
  %add.ptr13 = getelementptr i32, i32* %arraydecay12, i64 0, !dbg !11011
  %6 = load i32, i32* %add.ptr13, align 4, !dbg !11011
  %and14 = and i32 %6, -16777216, !dbg !11011
  %shr15 = lshr i32 %and14, 24, !dbg !11011
  %or16 = or i32 %or11, %shr15, !dbg !11011
  br label %cond.end, !dbg !11011

cond.false:                                       ; preds = %do.end
  %arraydecay17 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11011
  %add.ptr18 = getelementptr i32, i32* %arraydecay17, i64 0, !dbg !11011
  %7 = load i32, i32* %add.ptr18, align 4, !dbg !11011
  %call = call i32 @__fswab32(i32 %7) #8, !dbg !11011
  br label %cond.end, !dbg !11011

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %or16, %cond.true ], [ %call, %cond.false ], !dbg !11011
  %and19 = and i32 %cond, 65535, !dbg !11011
  %8 = load i32, i32* %_v, align 4, !dbg !11011
  %and20 = and i32 %8, 65535, !dbg !11011
  %shl21 = shl i32 %and20, 16, !dbg !11011
  %or22 = or i32 %and19, %shl21, !dbg !11011
  %9 = call i1 @llvm.is.constant.i32(i32 %or22), !dbg !11011
  br i1 %9, label %cond.true23, label %cond.false163, !dbg !11011

cond.true23:                                      ; preds = %cond.end
  %arraydecay24 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11011
  %add.ptr25 = getelementptr i32, i32* %arraydecay24, i64 0, !dbg !11011
  %10 = load i32, i32* %add.ptr25, align 4, !dbg !11011
  %11 = call i1 @llvm.is.constant.i32(i32 %10), !dbg !11011
  br i1 %11, label %cond.true26, label %cond.false46, !dbg !11011

cond.true26:                                      ; preds = %cond.true23
  %arraydecay27 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11011
  %add.ptr28 = getelementptr i32, i32* %arraydecay27, i64 0, !dbg !11011
  %12 = load i32, i32* %add.ptr28, align 4, !dbg !11011
  %and29 = and i32 %12, 255, !dbg !11011
  %shl30 = shl i32 %and29, 24, !dbg !11011
  %arraydecay31 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11011
  %add.ptr32 = getelementptr i32, i32* %arraydecay31, i64 0, !dbg !11011
  %13 = load i32, i32* %add.ptr32, align 4, !dbg !11011
  %and33 = and i32 %13, 65280, !dbg !11011
  %shl34 = shl i32 %and33, 8, !dbg !11011
  %or35 = or i32 %shl30, %shl34, !dbg !11011
  %arraydecay36 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11011
  %add.ptr37 = getelementptr i32, i32* %arraydecay36, i64 0, !dbg !11011
  %14 = load i32, i32* %add.ptr37, align 4, !dbg !11011
  %and38 = and i32 %14, 16711680, !dbg !11011
  %shr39 = lshr i32 %and38, 8, !dbg !11011
  %or40 = or i32 %or35, %shr39, !dbg !11011
  %arraydecay41 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11011
  %add.ptr42 = getelementptr i32, i32* %arraydecay41, i64 0, !dbg !11011
  %15 = load i32, i32* %add.ptr42, align 4, !dbg !11011
  %and43 = and i32 %15, -16777216, !dbg !11011
  %shr44 = lshr i32 %and43, 24, !dbg !11011
  %or45 = or i32 %or40, %shr44, !dbg !11011
  br label %cond.end50, !dbg !11011

cond.false46:                                     ; preds = %cond.true23
  %arraydecay47 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11011
  %add.ptr48 = getelementptr i32, i32* %arraydecay47, i64 0, !dbg !11011
  %16 = load i32, i32* %add.ptr48, align 4, !dbg !11011
  %call49 = call i32 @__fswab32(i32 %16) #8, !dbg !11011
  br label %cond.end50, !dbg !11011

cond.end50:                                       ; preds = %cond.false46, %cond.true26
  %cond51 = phi i32 [ %or45, %cond.true26 ], [ %call49, %cond.false46 ], !dbg !11011
  %and52 = and i32 %cond51, 65535, !dbg !11011
  %17 = load i32, i32* %_v, align 4, !dbg !11011
  %and53 = and i32 %17, 65535, !dbg !11011
  %shl54 = shl i32 %and53, 16, !dbg !11011
  %or55 = or i32 %and52, %shl54, !dbg !11011
  %and56 = and i32 %or55, 255, !dbg !11011
  %shl57 = shl i32 %and56, 24, !dbg !11011
  %arraydecay58 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11011
  %add.ptr59 = getelementptr i32, i32* %arraydecay58, i64 0, !dbg !11011
  %18 = load i32, i32* %add.ptr59, align 4, !dbg !11011
  %19 = call i1 @llvm.is.constant.i32(i32 %18), !dbg !11011
  br i1 %19, label %cond.true60, label %cond.false80, !dbg !11011

cond.true60:                                      ; preds = %cond.end50
  %arraydecay61 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11011
  %add.ptr62 = getelementptr i32, i32* %arraydecay61, i64 0, !dbg !11011
  %20 = load i32, i32* %add.ptr62, align 4, !dbg !11011
  %and63 = and i32 %20, 255, !dbg !11011
  %shl64 = shl i32 %and63, 24, !dbg !11011
  %arraydecay65 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11011
  %add.ptr66 = getelementptr i32, i32* %arraydecay65, i64 0, !dbg !11011
  %21 = load i32, i32* %add.ptr66, align 4, !dbg !11011
  %and67 = and i32 %21, 65280, !dbg !11011
  %shl68 = shl i32 %and67, 8, !dbg !11011
  %or69 = or i32 %shl64, %shl68, !dbg !11011
  %arraydecay70 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11011
  %add.ptr71 = getelementptr i32, i32* %arraydecay70, i64 0, !dbg !11011
  %22 = load i32, i32* %add.ptr71, align 4, !dbg !11011
  %and72 = and i32 %22, 16711680, !dbg !11011
  %shr73 = lshr i32 %and72, 8, !dbg !11011
  %or74 = or i32 %or69, %shr73, !dbg !11011
  %arraydecay75 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11011
  %add.ptr76 = getelementptr i32, i32* %arraydecay75, i64 0, !dbg !11011
  %23 = load i32, i32* %add.ptr76, align 4, !dbg !11011
  %and77 = and i32 %23, -16777216, !dbg !11011
  %shr78 = lshr i32 %and77, 24, !dbg !11011
  %or79 = or i32 %or74, %shr78, !dbg !11011
  br label %cond.end84, !dbg !11011

cond.false80:                                     ; preds = %cond.end50
  %arraydecay81 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11011
  %add.ptr82 = getelementptr i32, i32* %arraydecay81, i64 0, !dbg !11011
  %24 = load i32, i32* %add.ptr82, align 4, !dbg !11011
  %call83 = call i32 @__fswab32(i32 %24) #8, !dbg !11011
  br label %cond.end84, !dbg !11011

cond.end84:                                       ; preds = %cond.false80, %cond.true60
  %cond85 = phi i32 [ %or79, %cond.true60 ], [ %call83, %cond.false80 ], !dbg !11011
  %and86 = and i32 %cond85, 65535, !dbg !11011
  %25 = load i32, i32* %_v, align 4, !dbg !11011
  %and87 = and i32 %25, 65535, !dbg !11011
  %shl88 = shl i32 %and87, 16, !dbg !11011
  %or89 = or i32 %and86, %shl88, !dbg !11011
  %and90 = and i32 %or89, 65280, !dbg !11011
  %shl91 = shl i32 %and90, 8, !dbg !11011
  %or92 = or i32 %shl57, %shl91, !dbg !11011
  %arraydecay93 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11011
  %add.ptr94 = getelementptr i32, i32* %arraydecay93, i64 0, !dbg !11011
  %26 = load i32, i32* %add.ptr94, align 4, !dbg !11011
  %27 = call i1 @llvm.is.constant.i32(i32 %26), !dbg !11011
  br i1 %27, label %cond.true95, label %cond.false115, !dbg !11011

cond.true95:                                      ; preds = %cond.end84
  %arraydecay96 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11011
  %add.ptr97 = getelementptr i32, i32* %arraydecay96, i64 0, !dbg !11011
  %28 = load i32, i32* %add.ptr97, align 4, !dbg !11011
  %and98 = and i32 %28, 255, !dbg !11011
  %shl99 = shl i32 %and98, 24, !dbg !11011
  %arraydecay100 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11011
  %add.ptr101 = getelementptr i32, i32* %arraydecay100, i64 0, !dbg !11011
  %29 = load i32, i32* %add.ptr101, align 4, !dbg !11011
  %and102 = and i32 %29, 65280, !dbg !11011
  %shl103 = shl i32 %and102, 8, !dbg !11011
  %or104 = or i32 %shl99, %shl103, !dbg !11011
  %arraydecay105 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11011
  %add.ptr106 = getelementptr i32, i32* %arraydecay105, i64 0, !dbg !11011
  %30 = load i32, i32* %add.ptr106, align 4, !dbg !11011
  %and107 = and i32 %30, 16711680, !dbg !11011
  %shr108 = lshr i32 %and107, 8, !dbg !11011
  %or109 = or i32 %or104, %shr108, !dbg !11011
  %arraydecay110 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11011
  %add.ptr111 = getelementptr i32, i32* %arraydecay110, i64 0, !dbg !11011
  %31 = load i32, i32* %add.ptr111, align 4, !dbg !11011
  %and112 = and i32 %31, -16777216, !dbg !11011
  %shr113 = lshr i32 %and112, 24, !dbg !11011
  %or114 = or i32 %or109, %shr113, !dbg !11011
  br label %cond.end119, !dbg !11011

cond.false115:                                    ; preds = %cond.end84
  %arraydecay116 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11011
  %add.ptr117 = getelementptr i32, i32* %arraydecay116, i64 0, !dbg !11011
  %32 = load i32, i32* %add.ptr117, align 4, !dbg !11011
  %call118 = call i32 @__fswab32(i32 %32) #8, !dbg !11011
  br label %cond.end119, !dbg !11011

cond.end119:                                      ; preds = %cond.false115, %cond.true95
  %cond120 = phi i32 [ %or114, %cond.true95 ], [ %call118, %cond.false115 ], !dbg !11011
  %and121 = and i32 %cond120, 65535, !dbg !11011
  %33 = load i32, i32* %_v, align 4, !dbg !11011
  %and122 = and i32 %33, 65535, !dbg !11011
  %shl123 = shl i32 %and122, 16, !dbg !11011
  %or124 = or i32 %and121, %shl123, !dbg !11011
  %and125 = and i32 %or124, 16711680, !dbg !11011
  %shr126 = lshr i32 %and125, 8, !dbg !11011
  %or127 = or i32 %or92, %shr126, !dbg !11011
  %arraydecay128 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11011
  %add.ptr129 = getelementptr i32, i32* %arraydecay128, i64 0, !dbg !11011
  %34 = load i32, i32* %add.ptr129, align 4, !dbg !11011
  %35 = call i1 @llvm.is.constant.i32(i32 %34), !dbg !11011
  br i1 %35, label %cond.true130, label %cond.false150, !dbg !11011

cond.true130:                                     ; preds = %cond.end119
  %arraydecay131 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11011
  %add.ptr132 = getelementptr i32, i32* %arraydecay131, i64 0, !dbg !11011
  %36 = load i32, i32* %add.ptr132, align 4, !dbg !11011
  %and133 = and i32 %36, 255, !dbg !11011
  %shl134 = shl i32 %and133, 24, !dbg !11011
  %arraydecay135 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11011
  %add.ptr136 = getelementptr i32, i32* %arraydecay135, i64 0, !dbg !11011
  %37 = load i32, i32* %add.ptr136, align 4, !dbg !11011
  %and137 = and i32 %37, 65280, !dbg !11011
  %shl138 = shl i32 %and137, 8, !dbg !11011
  %or139 = or i32 %shl134, %shl138, !dbg !11011
  %arraydecay140 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11011
  %add.ptr141 = getelementptr i32, i32* %arraydecay140, i64 0, !dbg !11011
  %38 = load i32, i32* %add.ptr141, align 4, !dbg !11011
  %and142 = and i32 %38, 16711680, !dbg !11011
  %shr143 = lshr i32 %and142, 8, !dbg !11011
  %or144 = or i32 %or139, %shr143, !dbg !11011
  %arraydecay145 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11011
  %add.ptr146 = getelementptr i32, i32* %arraydecay145, i64 0, !dbg !11011
  %39 = load i32, i32* %add.ptr146, align 4, !dbg !11011
  %and147 = and i32 %39, -16777216, !dbg !11011
  %shr148 = lshr i32 %and147, 24, !dbg !11011
  %or149 = or i32 %or144, %shr148, !dbg !11011
  br label %cond.end154, !dbg !11011

cond.false150:                                    ; preds = %cond.end119
  %arraydecay151 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11011
  %add.ptr152 = getelementptr i32, i32* %arraydecay151, i64 0, !dbg !11011
  %40 = load i32, i32* %add.ptr152, align 4, !dbg !11011
  %call153 = call i32 @__fswab32(i32 %40) #8, !dbg !11011
  br label %cond.end154, !dbg !11011

cond.end154:                                      ; preds = %cond.false150, %cond.true130
  %cond155 = phi i32 [ %or149, %cond.true130 ], [ %call153, %cond.false150 ], !dbg !11011
  %and156 = and i32 %cond155, 65535, !dbg !11011
  %41 = load i32, i32* %_v, align 4, !dbg !11011
  %and157 = and i32 %41, 65535, !dbg !11011
  %shl158 = shl i32 %and157, 16, !dbg !11011
  %or159 = or i32 %and156, %shl158, !dbg !11011
  %and160 = and i32 %or159, -16777216, !dbg !11011
  %shr161 = lshr i32 %and160, 24, !dbg !11011
  %or162 = or i32 %or127, %shr161, !dbg !11011
  br label %cond.end197, !dbg !11011

cond.false163:                                    ; preds = %cond.end
  %arraydecay164 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11011
  %add.ptr165 = getelementptr i32, i32* %arraydecay164, i64 0, !dbg !11011
  %42 = load i32, i32* %add.ptr165, align 4, !dbg !11011
  %43 = call i1 @llvm.is.constant.i32(i32 %42), !dbg !11011
  br i1 %43, label %cond.true166, label %cond.false186, !dbg !11011

cond.true166:                                     ; preds = %cond.false163
  %arraydecay167 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11011
  %add.ptr168 = getelementptr i32, i32* %arraydecay167, i64 0, !dbg !11011
  %44 = load i32, i32* %add.ptr168, align 4, !dbg !11011
  %and169 = and i32 %44, 255, !dbg !11011
  %shl170 = shl i32 %and169, 24, !dbg !11011
  %arraydecay171 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11011
  %add.ptr172 = getelementptr i32, i32* %arraydecay171, i64 0, !dbg !11011
  %45 = load i32, i32* %add.ptr172, align 4, !dbg !11011
  %and173 = and i32 %45, 65280, !dbg !11011
  %shl174 = shl i32 %and173, 8, !dbg !11011
  %or175 = or i32 %shl170, %shl174, !dbg !11011
  %arraydecay176 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11011
  %add.ptr177 = getelementptr i32, i32* %arraydecay176, i64 0, !dbg !11011
  %46 = load i32, i32* %add.ptr177, align 4, !dbg !11011
  %and178 = and i32 %46, 16711680, !dbg !11011
  %shr179 = lshr i32 %and178, 8, !dbg !11011
  %or180 = or i32 %or175, %shr179, !dbg !11011
  %arraydecay181 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11011
  %add.ptr182 = getelementptr i32, i32* %arraydecay181, i64 0, !dbg !11011
  %47 = load i32, i32* %add.ptr182, align 4, !dbg !11011
  %and183 = and i32 %47, -16777216, !dbg !11011
  %shr184 = lshr i32 %and183, 24, !dbg !11011
  %or185 = or i32 %or180, %shr184, !dbg !11011
  br label %cond.end190, !dbg !11011

cond.false186:                                    ; preds = %cond.false163
  %arraydecay187 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11011
  %add.ptr188 = getelementptr i32, i32* %arraydecay187, i64 0, !dbg !11011
  %48 = load i32, i32* %add.ptr188, align 4, !dbg !11011
  %call189 = call i32 @__fswab32(i32 %48) #8, !dbg !11011
  br label %cond.end190, !dbg !11011

cond.end190:                                      ; preds = %cond.false186, %cond.true166
  %cond191 = phi i32 [ %or185, %cond.true166 ], [ %call189, %cond.false186 ], !dbg !11011
  %and192 = and i32 %cond191, 65535, !dbg !11011
  %49 = load i32, i32* %_v, align 4, !dbg !11011
  %and193 = and i32 %49, 65535, !dbg !11011
  %shl194 = shl i32 %and193, 16, !dbg !11011
  %or195 = or i32 %and192, %shl194, !dbg !11011
  %call196 = call i32 @__fswab32(i32 %or195) #8, !dbg !11011
  br label %cond.end197, !dbg !11011

cond.end197:                                      ; preds = %cond.end190, %cond.end154
  %cond198 = phi i32 [ %or162, %cond.end154 ], [ %call196, %cond.end190 ], !dbg !11011
  %arraydecay199 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11011
  %add.ptr200 = getelementptr i32, i32* %arraydecay199, i64 0, !dbg !11011
  store i32 %cond198, i32* %add.ptr200, align 4, !dbg !11011
  br label %do.end201, !dbg !11011

do.end201:                                        ; preds = %cond.end197
  br label %do.body202, !dbg !11014

do.body202:                                       ; preds = %do.end201
  call void @llvm.dbg.declare(metadata i32* %_v203, metadata !11015, metadata !DIExpression()), !dbg !11017
  %50 = load i8, i8* %opmod.addr, align 1, !dbg !11017
  %conv = zext i8 %50 to i32, !dbg !11017
  store i32 %conv, i32* %_v203, align 4, !dbg !11017
  br label %do.body204, !dbg !11017

do.body204:                                       ; preds = %do.body202
  br label %do.end205, !dbg !11018

do.end205:                                        ; preds = %do.body204
  %arraydecay206 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11017
  %add.ptr207 = getelementptr i32, i32* %arraydecay206, i64 1, !dbg !11017
  %51 = load i32, i32* %add.ptr207, align 4, !dbg !11017
  %52 = call i1 @llvm.is.constant.i32(i32 %51), !dbg !11017
  br i1 %52, label %cond.true208, label %cond.false228, !dbg !11017

cond.true208:                                     ; preds = %do.end205
  %arraydecay209 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11017
  %add.ptr210 = getelementptr i32, i32* %arraydecay209, i64 1, !dbg !11017
  %53 = load i32, i32* %add.ptr210, align 4, !dbg !11017
  %and211 = and i32 %53, 255, !dbg !11017
  %shl212 = shl i32 %and211, 24, !dbg !11017
  %arraydecay213 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11017
  %add.ptr214 = getelementptr i32, i32* %arraydecay213, i64 1, !dbg !11017
  %54 = load i32, i32* %add.ptr214, align 4, !dbg !11017
  %and215 = and i32 %54, 65280, !dbg !11017
  %shl216 = shl i32 %and215, 8, !dbg !11017
  %or217 = or i32 %shl212, %shl216, !dbg !11017
  %arraydecay218 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11017
  %add.ptr219 = getelementptr i32, i32* %arraydecay218, i64 1, !dbg !11017
  %55 = load i32, i32* %add.ptr219, align 4, !dbg !11017
  %and220 = and i32 %55, 16711680, !dbg !11017
  %shr221 = lshr i32 %and220, 8, !dbg !11017
  %or222 = or i32 %or217, %shr221, !dbg !11017
  %arraydecay223 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11017
  %add.ptr224 = getelementptr i32, i32* %arraydecay223, i64 1, !dbg !11017
  %56 = load i32, i32* %add.ptr224, align 4, !dbg !11017
  %and225 = and i32 %56, -16777216, !dbg !11017
  %shr226 = lshr i32 %and225, 24, !dbg !11017
  %or227 = or i32 %or222, %shr226, !dbg !11017
  br label %cond.end232, !dbg !11017

cond.false228:                                    ; preds = %do.end205
  %arraydecay229 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11017
  %add.ptr230 = getelementptr i32, i32* %arraydecay229, i64 1, !dbg !11017
  %57 = load i32, i32* %add.ptr230, align 4, !dbg !11017
  %call231 = call i32 @__fswab32(i32 %57) #8, !dbg !11017
  br label %cond.end232, !dbg !11017

cond.end232:                                      ; preds = %cond.false228, %cond.true208
  %cond233 = phi i32 [ %or227, %cond.true208 ], [ %call231, %cond.false228 ], !dbg !11017
  %and234 = and i32 %cond233, -65536, !dbg !11017
  %58 = load i32, i32* %_v203, align 4, !dbg !11017
  %and235 = and i32 %58, 65535, !dbg !11017
  %shl236 = shl i32 %and235, 0, !dbg !11017
  %or237 = or i32 %and234, %shl236, !dbg !11017
  %59 = call i1 @llvm.is.constant.i32(i32 %or237), !dbg !11017
  br i1 %59, label %cond.true238, label %cond.false378, !dbg !11017

cond.true238:                                     ; preds = %cond.end232
  %arraydecay239 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11017
  %add.ptr240 = getelementptr i32, i32* %arraydecay239, i64 1, !dbg !11017
  %60 = load i32, i32* %add.ptr240, align 4, !dbg !11017
  %61 = call i1 @llvm.is.constant.i32(i32 %60), !dbg !11017
  br i1 %61, label %cond.true241, label %cond.false261, !dbg !11017

cond.true241:                                     ; preds = %cond.true238
  %arraydecay242 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11017
  %add.ptr243 = getelementptr i32, i32* %arraydecay242, i64 1, !dbg !11017
  %62 = load i32, i32* %add.ptr243, align 4, !dbg !11017
  %and244 = and i32 %62, 255, !dbg !11017
  %shl245 = shl i32 %and244, 24, !dbg !11017
  %arraydecay246 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11017
  %add.ptr247 = getelementptr i32, i32* %arraydecay246, i64 1, !dbg !11017
  %63 = load i32, i32* %add.ptr247, align 4, !dbg !11017
  %and248 = and i32 %63, 65280, !dbg !11017
  %shl249 = shl i32 %and248, 8, !dbg !11017
  %or250 = or i32 %shl245, %shl249, !dbg !11017
  %arraydecay251 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11017
  %add.ptr252 = getelementptr i32, i32* %arraydecay251, i64 1, !dbg !11017
  %64 = load i32, i32* %add.ptr252, align 4, !dbg !11017
  %and253 = and i32 %64, 16711680, !dbg !11017
  %shr254 = lshr i32 %and253, 8, !dbg !11017
  %or255 = or i32 %or250, %shr254, !dbg !11017
  %arraydecay256 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11017
  %add.ptr257 = getelementptr i32, i32* %arraydecay256, i64 1, !dbg !11017
  %65 = load i32, i32* %add.ptr257, align 4, !dbg !11017
  %and258 = and i32 %65, -16777216, !dbg !11017
  %shr259 = lshr i32 %and258, 24, !dbg !11017
  %or260 = or i32 %or255, %shr259, !dbg !11017
  br label %cond.end265, !dbg !11017

cond.false261:                                    ; preds = %cond.true238
  %arraydecay262 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11017
  %add.ptr263 = getelementptr i32, i32* %arraydecay262, i64 1, !dbg !11017
  %66 = load i32, i32* %add.ptr263, align 4, !dbg !11017
  %call264 = call i32 @__fswab32(i32 %66) #8, !dbg !11017
  br label %cond.end265, !dbg !11017

cond.end265:                                      ; preds = %cond.false261, %cond.true241
  %cond266 = phi i32 [ %or260, %cond.true241 ], [ %call264, %cond.false261 ], !dbg !11017
  %and267 = and i32 %cond266, -65536, !dbg !11017
  %67 = load i32, i32* %_v203, align 4, !dbg !11017
  %and268 = and i32 %67, 65535, !dbg !11017
  %shl269 = shl i32 %and268, 0, !dbg !11017
  %or270 = or i32 %and267, %shl269, !dbg !11017
  %and271 = and i32 %or270, 255, !dbg !11017
  %shl272 = shl i32 %and271, 24, !dbg !11017
  %arraydecay273 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11017
  %add.ptr274 = getelementptr i32, i32* %arraydecay273, i64 1, !dbg !11017
  %68 = load i32, i32* %add.ptr274, align 4, !dbg !11017
  %69 = call i1 @llvm.is.constant.i32(i32 %68), !dbg !11017
  br i1 %69, label %cond.true275, label %cond.false295, !dbg !11017

cond.true275:                                     ; preds = %cond.end265
  %arraydecay276 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11017
  %add.ptr277 = getelementptr i32, i32* %arraydecay276, i64 1, !dbg !11017
  %70 = load i32, i32* %add.ptr277, align 4, !dbg !11017
  %and278 = and i32 %70, 255, !dbg !11017
  %shl279 = shl i32 %and278, 24, !dbg !11017
  %arraydecay280 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11017
  %add.ptr281 = getelementptr i32, i32* %arraydecay280, i64 1, !dbg !11017
  %71 = load i32, i32* %add.ptr281, align 4, !dbg !11017
  %and282 = and i32 %71, 65280, !dbg !11017
  %shl283 = shl i32 %and282, 8, !dbg !11017
  %or284 = or i32 %shl279, %shl283, !dbg !11017
  %arraydecay285 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11017
  %add.ptr286 = getelementptr i32, i32* %arraydecay285, i64 1, !dbg !11017
  %72 = load i32, i32* %add.ptr286, align 4, !dbg !11017
  %and287 = and i32 %72, 16711680, !dbg !11017
  %shr288 = lshr i32 %and287, 8, !dbg !11017
  %or289 = or i32 %or284, %shr288, !dbg !11017
  %arraydecay290 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11017
  %add.ptr291 = getelementptr i32, i32* %arraydecay290, i64 1, !dbg !11017
  %73 = load i32, i32* %add.ptr291, align 4, !dbg !11017
  %and292 = and i32 %73, -16777216, !dbg !11017
  %shr293 = lshr i32 %and292, 24, !dbg !11017
  %or294 = or i32 %or289, %shr293, !dbg !11017
  br label %cond.end299, !dbg !11017

cond.false295:                                    ; preds = %cond.end265
  %arraydecay296 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11017
  %add.ptr297 = getelementptr i32, i32* %arraydecay296, i64 1, !dbg !11017
  %74 = load i32, i32* %add.ptr297, align 4, !dbg !11017
  %call298 = call i32 @__fswab32(i32 %74) #8, !dbg !11017
  br label %cond.end299, !dbg !11017

cond.end299:                                      ; preds = %cond.false295, %cond.true275
  %cond300 = phi i32 [ %or294, %cond.true275 ], [ %call298, %cond.false295 ], !dbg !11017
  %and301 = and i32 %cond300, -65536, !dbg !11017
  %75 = load i32, i32* %_v203, align 4, !dbg !11017
  %and302 = and i32 %75, 65535, !dbg !11017
  %shl303 = shl i32 %and302, 0, !dbg !11017
  %or304 = or i32 %and301, %shl303, !dbg !11017
  %and305 = and i32 %or304, 65280, !dbg !11017
  %shl306 = shl i32 %and305, 8, !dbg !11017
  %or307 = or i32 %shl272, %shl306, !dbg !11017
  %arraydecay308 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11017
  %add.ptr309 = getelementptr i32, i32* %arraydecay308, i64 1, !dbg !11017
  %76 = load i32, i32* %add.ptr309, align 4, !dbg !11017
  %77 = call i1 @llvm.is.constant.i32(i32 %76), !dbg !11017
  br i1 %77, label %cond.true310, label %cond.false330, !dbg !11017

cond.true310:                                     ; preds = %cond.end299
  %arraydecay311 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11017
  %add.ptr312 = getelementptr i32, i32* %arraydecay311, i64 1, !dbg !11017
  %78 = load i32, i32* %add.ptr312, align 4, !dbg !11017
  %and313 = and i32 %78, 255, !dbg !11017
  %shl314 = shl i32 %and313, 24, !dbg !11017
  %arraydecay315 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11017
  %add.ptr316 = getelementptr i32, i32* %arraydecay315, i64 1, !dbg !11017
  %79 = load i32, i32* %add.ptr316, align 4, !dbg !11017
  %and317 = and i32 %79, 65280, !dbg !11017
  %shl318 = shl i32 %and317, 8, !dbg !11017
  %or319 = or i32 %shl314, %shl318, !dbg !11017
  %arraydecay320 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11017
  %add.ptr321 = getelementptr i32, i32* %arraydecay320, i64 1, !dbg !11017
  %80 = load i32, i32* %add.ptr321, align 4, !dbg !11017
  %and322 = and i32 %80, 16711680, !dbg !11017
  %shr323 = lshr i32 %and322, 8, !dbg !11017
  %or324 = or i32 %or319, %shr323, !dbg !11017
  %arraydecay325 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11017
  %add.ptr326 = getelementptr i32, i32* %arraydecay325, i64 1, !dbg !11017
  %81 = load i32, i32* %add.ptr326, align 4, !dbg !11017
  %and327 = and i32 %81, -16777216, !dbg !11017
  %shr328 = lshr i32 %and327, 24, !dbg !11017
  %or329 = or i32 %or324, %shr328, !dbg !11017
  br label %cond.end334, !dbg !11017

cond.false330:                                    ; preds = %cond.end299
  %arraydecay331 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11017
  %add.ptr332 = getelementptr i32, i32* %arraydecay331, i64 1, !dbg !11017
  %82 = load i32, i32* %add.ptr332, align 4, !dbg !11017
  %call333 = call i32 @__fswab32(i32 %82) #8, !dbg !11017
  br label %cond.end334, !dbg !11017

cond.end334:                                      ; preds = %cond.false330, %cond.true310
  %cond335 = phi i32 [ %or329, %cond.true310 ], [ %call333, %cond.false330 ], !dbg !11017
  %and336 = and i32 %cond335, -65536, !dbg !11017
  %83 = load i32, i32* %_v203, align 4, !dbg !11017
  %and337 = and i32 %83, 65535, !dbg !11017
  %shl338 = shl i32 %and337, 0, !dbg !11017
  %or339 = or i32 %and336, %shl338, !dbg !11017
  %and340 = and i32 %or339, 16711680, !dbg !11017
  %shr341 = lshr i32 %and340, 8, !dbg !11017
  %or342 = or i32 %or307, %shr341, !dbg !11017
  %arraydecay343 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11017
  %add.ptr344 = getelementptr i32, i32* %arraydecay343, i64 1, !dbg !11017
  %84 = load i32, i32* %add.ptr344, align 4, !dbg !11017
  %85 = call i1 @llvm.is.constant.i32(i32 %84), !dbg !11017
  br i1 %85, label %cond.true345, label %cond.false365, !dbg !11017

cond.true345:                                     ; preds = %cond.end334
  %arraydecay346 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11017
  %add.ptr347 = getelementptr i32, i32* %arraydecay346, i64 1, !dbg !11017
  %86 = load i32, i32* %add.ptr347, align 4, !dbg !11017
  %and348 = and i32 %86, 255, !dbg !11017
  %shl349 = shl i32 %and348, 24, !dbg !11017
  %arraydecay350 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11017
  %add.ptr351 = getelementptr i32, i32* %arraydecay350, i64 1, !dbg !11017
  %87 = load i32, i32* %add.ptr351, align 4, !dbg !11017
  %and352 = and i32 %87, 65280, !dbg !11017
  %shl353 = shl i32 %and352, 8, !dbg !11017
  %or354 = or i32 %shl349, %shl353, !dbg !11017
  %arraydecay355 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11017
  %add.ptr356 = getelementptr i32, i32* %arraydecay355, i64 1, !dbg !11017
  %88 = load i32, i32* %add.ptr356, align 4, !dbg !11017
  %and357 = and i32 %88, 16711680, !dbg !11017
  %shr358 = lshr i32 %and357, 8, !dbg !11017
  %or359 = or i32 %or354, %shr358, !dbg !11017
  %arraydecay360 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11017
  %add.ptr361 = getelementptr i32, i32* %arraydecay360, i64 1, !dbg !11017
  %89 = load i32, i32* %add.ptr361, align 4, !dbg !11017
  %and362 = and i32 %89, -16777216, !dbg !11017
  %shr363 = lshr i32 %and362, 24, !dbg !11017
  %or364 = or i32 %or359, %shr363, !dbg !11017
  br label %cond.end369, !dbg !11017

cond.false365:                                    ; preds = %cond.end334
  %arraydecay366 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11017
  %add.ptr367 = getelementptr i32, i32* %arraydecay366, i64 1, !dbg !11017
  %90 = load i32, i32* %add.ptr367, align 4, !dbg !11017
  %call368 = call i32 @__fswab32(i32 %90) #8, !dbg !11017
  br label %cond.end369, !dbg !11017

cond.end369:                                      ; preds = %cond.false365, %cond.true345
  %cond370 = phi i32 [ %or364, %cond.true345 ], [ %call368, %cond.false365 ], !dbg !11017
  %and371 = and i32 %cond370, -65536, !dbg !11017
  %91 = load i32, i32* %_v203, align 4, !dbg !11017
  %and372 = and i32 %91, 65535, !dbg !11017
  %shl373 = shl i32 %and372, 0, !dbg !11017
  %or374 = or i32 %and371, %shl373, !dbg !11017
  %and375 = and i32 %or374, -16777216, !dbg !11017
  %shr376 = lshr i32 %and375, 24, !dbg !11017
  %or377 = or i32 %or342, %shr376, !dbg !11017
  br label %cond.end412, !dbg !11017

cond.false378:                                    ; preds = %cond.end232
  %arraydecay379 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11017
  %add.ptr380 = getelementptr i32, i32* %arraydecay379, i64 1, !dbg !11017
  %92 = load i32, i32* %add.ptr380, align 4, !dbg !11017
  %93 = call i1 @llvm.is.constant.i32(i32 %92), !dbg !11017
  br i1 %93, label %cond.true381, label %cond.false401, !dbg !11017

cond.true381:                                     ; preds = %cond.false378
  %arraydecay382 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11017
  %add.ptr383 = getelementptr i32, i32* %arraydecay382, i64 1, !dbg !11017
  %94 = load i32, i32* %add.ptr383, align 4, !dbg !11017
  %and384 = and i32 %94, 255, !dbg !11017
  %shl385 = shl i32 %and384, 24, !dbg !11017
  %arraydecay386 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11017
  %add.ptr387 = getelementptr i32, i32* %arraydecay386, i64 1, !dbg !11017
  %95 = load i32, i32* %add.ptr387, align 4, !dbg !11017
  %and388 = and i32 %95, 65280, !dbg !11017
  %shl389 = shl i32 %and388, 8, !dbg !11017
  %or390 = or i32 %shl385, %shl389, !dbg !11017
  %arraydecay391 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11017
  %add.ptr392 = getelementptr i32, i32* %arraydecay391, i64 1, !dbg !11017
  %96 = load i32, i32* %add.ptr392, align 4, !dbg !11017
  %and393 = and i32 %96, 16711680, !dbg !11017
  %shr394 = lshr i32 %and393, 8, !dbg !11017
  %or395 = or i32 %or390, %shr394, !dbg !11017
  %arraydecay396 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11017
  %add.ptr397 = getelementptr i32, i32* %arraydecay396, i64 1, !dbg !11017
  %97 = load i32, i32* %add.ptr397, align 4, !dbg !11017
  %and398 = and i32 %97, -16777216, !dbg !11017
  %shr399 = lshr i32 %and398, 24, !dbg !11017
  %or400 = or i32 %or395, %shr399, !dbg !11017
  br label %cond.end405, !dbg !11017

cond.false401:                                    ; preds = %cond.false378
  %arraydecay402 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11017
  %add.ptr403 = getelementptr i32, i32* %arraydecay402, i64 1, !dbg !11017
  %98 = load i32, i32* %add.ptr403, align 4, !dbg !11017
  %call404 = call i32 @__fswab32(i32 %98) #8, !dbg !11017
  br label %cond.end405, !dbg !11017

cond.end405:                                      ; preds = %cond.false401, %cond.true381
  %cond406 = phi i32 [ %or400, %cond.true381 ], [ %call404, %cond.false401 ], !dbg !11017
  %and407 = and i32 %cond406, -65536, !dbg !11017
  %99 = load i32, i32* %_v203, align 4, !dbg !11017
  %and408 = and i32 %99, 65535, !dbg !11017
  %shl409 = shl i32 %and408, 0, !dbg !11017
  %or410 = or i32 %and407, %shl409, !dbg !11017
  %call411 = call i32 @__fswab32(i32 %or410) #8, !dbg !11017
  br label %cond.end412, !dbg !11017

cond.end412:                                      ; preds = %cond.end405, %cond.end369
  %cond413 = phi i32 [ %or377, %cond.end369 ], [ %call411, %cond.end405 ], !dbg !11017
  %arraydecay414 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11017
  %add.ptr415 = getelementptr i32, i32* %arraydecay414, i64 1, !dbg !11017
  store i32 %cond413, i32* %add.ptr415, align 4, !dbg !11017
  br label %do.end416, !dbg !11017

do.end416:                                        ; preds = %cond.end412
  br label %do.body417, !dbg !11020

do.body417:                                       ; preds = %do.end416
  call void @llvm.dbg.declare(metadata i32* %_v418, metadata !11021, metadata !DIExpression()), !dbg !11023
  %100 = load i16, i16* %vport.addr, align 2, !dbg !11023
  %conv419 = zext i16 %100 to i32, !dbg !11023
  store i32 %conv419, i32* %_v418, align 4, !dbg !11023
  br label %do.body420, !dbg !11023

do.body420:                                       ; preds = %do.body417
  br label %do.end421, !dbg !11024

do.end421:                                        ; preds = %do.body420
  %arraydecay422 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11023
  %add.ptr423 = getelementptr i32, i32* %arraydecay422, i64 2, !dbg !11023
  %101 = load i32, i32* %add.ptr423, align 4, !dbg !11023
  %102 = call i1 @llvm.is.constant.i32(i32 %101), !dbg !11023
  br i1 %102, label %cond.true424, label %cond.false444, !dbg !11023

cond.true424:                                     ; preds = %do.end421
  %arraydecay425 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11023
  %add.ptr426 = getelementptr i32, i32* %arraydecay425, i64 2, !dbg !11023
  %103 = load i32, i32* %add.ptr426, align 4, !dbg !11023
  %and427 = and i32 %103, 255, !dbg !11023
  %shl428 = shl i32 %and427, 24, !dbg !11023
  %arraydecay429 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11023
  %add.ptr430 = getelementptr i32, i32* %arraydecay429, i64 2, !dbg !11023
  %104 = load i32, i32* %add.ptr430, align 4, !dbg !11023
  %and431 = and i32 %104, 65280, !dbg !11023
  %shl432 = shl i32 %and431, 8, !dbg !11023
  %or433 = or i32 %shl428, %shl432, !dbg !11023
  %arraydecay434 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11023
  %add.ptr435 = getelementptr i32, i32* %arraydecay434, i64 2, !dbg !11023
  %105 = load i32, i32* %add.ptr435, align 4, !dbg !11023
  %and436 = and i32 %105, 16711680, !dbg !11023
  %shr437 = lshr i32 %and436, 8, !dbg !11023
  %or438 = or i32 %or433, %shr437, !dbg !11023
  %arraydecay439 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11023
  %add.ptr440 = getelementptr i32, i32* %arraydecay439, i64 2, !dbg !11023
  %106 = load i32, i32* %add.ptr440, align 4, !dbg !11023
  %and441 = and i32 %106, -16777216, !dbg !11023
  %shr442 = lshr i32 %and441, 24, !dbg !11023
  %or443 = or i32 %or438, %shr442, !dbg !11023
  br label %cond.end448, !dbg !11023

cond.false444:                                    ; preds = %do.end421
  %arraydecay445 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11023
  %add.ptr446 = getelementptr i32, i32* %arraydecay445, i64 2, !dbg !11023
  %107 = load i32, i32* %add.ptr446, align 4, !dbg !11023
  %call447 = call i32 @__fswab32(i32 %107) #8, !dbg !11023
  br label %cond.end448, !dbg !11023

cond.end448:                                      ; preds = %cond.false444, %cond.true424
  %cond449 = phi i32 [ %or443, %cond.true424 ], [ %call447, %cond.false444 ], !dbg !11023
  %and450 = and i32 %cond449, -65536, !dbg !11023
  %108 = load i32, i32* %_v418, align 4, !dbg !11023
  %and451 = and i32 %108, 65535, !dbg !11023
  %shl452 = shl i32 %and451, 0, !dbg !11023
  %or453 = or i32 %and450, %shl452, !dbg !11023
  %109 = call i1 @llvm.is.constant.i32(i32 %or453), !dbg !11023
  br i1 %109, label %cond.true454, label %cond.false594, !dbg !11023

cond.true454:                                     ; preds = %cond.end448
  %arraydecay455 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11023
  %add.ptr456 = getelementptr i32, i32* %arraydecay455, i64 2, !dbg !11023
  %110 = load i32, i32* %add.ptr456, align 4, !dbg !11023
  %111 = call i1 @llvm.is.constant.i32(i32 %110), !dbg !11023
  br i1 %111, label %cond.true457, label %cond.false477, !dbg !11023

cond.true457:                                     ; preds = %cond.true454
  %arraydecay458 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11023
  %add.ptr459 = getelementptr i32, i32* %arraydecay458, i64 2, !dbg !11023
  %112 = load i32, i32* %add.ptr459, align 4, !dbg !11023
  %and460 = and i32 %112, 255, !dbg !11023
  %shl461 = shl i32 %and460, 24, !dbg !11023
  %arraydecay462 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11023
  %add.ptr463 = getelementptr i32, i32* %arraydecay462, i64 2, !dbg !11023
  %113 = load i32, i32* %add.ptr463, align 4, !dbg !11023
  %and464 = and i32 %113, 65280, !dbg !11023
  %shl465 = shl i32 %and464, 8, !dbg !11023
  %or466 = or i32 %shl461, %shl465, !dbg !11023
  %arraydecay467 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11023
  %add.ptr468 = getelementptr i32, i32* %arraydecay467, i64 2, !dbg !11023
  %114 = load i32, i32* %add.ptr468, align 4, !dbg !11023
  %and469 = and i32 %114, 16711680, !dbg !11023
  %shr470 = lshr i32 %and469, 8, !dbg !11023
  %or471 = or i32 %or466, %shr470, !dbg !11023
  %arraydecay472 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11023
  %add.ptr473 = getelementptr i32, i32* %arraydecay472, i64 2, !dbg !11023
  %115 = load i32, i32* %add.ptr473, align 4, !dbg !11023
  %and474 = and i32 %115, -16777216, !dbg !11023
  %shr475 = lshr i32 %and474, 24, !dbg !11023
  %or476 = or i32 %or471, %shr475, !dbg !11023
  br label %cond.end481, !dbg !11023

cond.false477:                                    ; preds = %cond.true454
  %arraydecay478 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11023
  %add.ptr479 = getelementptr i32, i32* %arraydecay478, i64 2, !dbg !11023
  %116 = load i32, i32* %add.ptr479, align 4, !dbg !11023
  %call480 = call i32 @__fswab32(i32 %116) #8, !dbg !11023
  br label %cond.end481, !dbg !11023

cond.end481:                                      ; preds = %cond.false477, %cond.true457
  %cond482 = phi i32 [ %or476, %cond.true457 ], [ %call480, %cond.false477 ], !dbg !11023
  %and483 = and i32 %cond482, -65536, !dbg !11023
  %117 = load i32, i32* %_v418, align 4, !dbg !11023
  %and484 = and i32 %117, 65535, !dbg !11023
  %shl485 = shl i32 %and484, 0, !dbg !11023
  %or486 = or i32 %and483, %shl485, !dbg !11023
  %and487 = and i32 %or486, 255, !dbg !11023
  %shl488 = shl i32 %and487, 24, !dbg !11023
  %arraydecay489 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11023
  %add.ptr490 = getelementptr i32, i32* %arraydecay489, i64 2, !dbg !11023
  %118 = load i32, i32* %add.ptr490, align 4, !dbg !11023
  %119 = call i1 @llvm.is.constant.i32(i32 %118), !dbg !11023
  br i1 %119, label %cond.true491, label %cond.false511, !dbg !11023

cond.true491:                                     ; preds = %cond.end481
  %arraydecay492 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11023
  %add.ptr493 = getelementptr i32, i32* %arraydecay492, i64 2, !dbg !11023
  %120 = load i32, i32* %add.ptr493, align 4, !dbg !11023
  %and494 = and i32 %120, 255, !dbg !11023
  %shl495 = shl i32 %and494, 24, !dbg !11023
  %arraydecay496 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11023
  %add.ptr497 = getelementptr i32, i32* %arraydecay496, i64 2, !dbg !11023
  %121 = load i32, i32* %add.ptr497, align 4, !dbg !11023
  %and498 = and i32 %121, 65280, !dbg !11023
  %shl499 = shl i32 %and498, 8, !dbg !11023
  %or500 = or i32 %shl495, %shl499, !dbg !11023
  %arraydecay501 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11023
  %add.ptr502 = getelementptr i32, i32* %arraydecay501, i64 2, !dbg !11023
  %122 = load i32, i32* %add.ptr502, align 4, !dbg !11023
  %and503 = and i32 %122, 16711680, !dbg !11023
  %shr504 = lshr i32 %and503, 8, !dbg !11023
  %or505 = or i32 %or500, %shr504, !dbg !11023
  %arraydecay506 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11023
  %add.ptr507 = getelementptr i32, i32* %arraydecay506, i64 2, !dbg !11023
  %123 = load i32, i32* %add.ptr507, align 4, !dbg !11023
  %and508 = and i32 %123, -16777216, !dbg !11023
  %shr509 = lshr i32 %and508, 24, !dbg !11023
  %or510 = or i32 %or505, %shr509, !dbg !11023
  br label %cond.end515, !dbg !11023

cond.false511:                                    ; preds = %cond.end481
  %arraydecay512 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11023
  %add.ptr513 = getelementptr i32, i32* %arraydecay512, i64 2, !dbg !11023
  %124 = load i32, i32* %add.ptr513, align 4, !dbg !11023
  %call514 = call i32 @__fswab32(i32 %124) #8, !dbg !11023
  br label %cond.end515, !dbg !11023

cond.end515:                                      ; preds = %cond.false511, %cond.true491
  %cond516 = phi i32 [ %or510, %cond.true491 ], [ %call514, %cond.false511 ], !dbg !11023
  %and517 = and i32 %cond516, -65536, !dbg !11023
  %125 = load i32, i32* %_v418, align 4, !dbg !11023
  %and518 = and i32 %125, 65535, !dbg !11023
  %shl519 = shl i32 %and518, 0, !dbg !11023
  %or520 = or i32 %and517, %shl519, !dbg !11023
  %and521 = and i32 %or520, 65280, !dbg !11023
  %shl522 = shl i32 %and521, 8, !dbg !11023
  %or523 = or i32 %shl488, %shl522, !dbg !11023
  %arraydecay524 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11023
  %add.ptr525 = getelementptr i32, i32* %arraydecay524, i64 2, !dbg !11023
  %126 = load i32, i32* %add.ptr525, align 4, !dbg !11023
  %127 = call i1 @llvm.is.constant.i32(i32 %126), !dbg !11023
  br i1 %127, label %cond.true526, label %cond.false546, !dbg !11023

cond.true526:                                     ; preds = %cond.end515
  %arraydecay527 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11023
  %add.ptr528 = getelementptr i32, i32* %arraydecay527, i64 2, !dbg !11023
  %128 = load i32, i32* %add.ptr528, align 4, !dbg !11023
  %and529 = and i32 %128, 255, !dbg !11023
  %shl530 = shl i32 %and529, 24, !dbg !11023
  %arraydecay531 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11023
  %add.ptr532 = getelementptr i32, i32* %arraydecay531, i64 2, !dbg !11023
  %129 = load i32, i32* %add.ptr532, align 4, !dbg !11023
  %and533 = and i32 %129, 65280, !dbg !11023
  %shl534 = shl i32 %and533, 8, !dbg !11023
  %or535 = or i32 %shl530, %shl534, !dbg !11023
  %arraydecay536 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11023
  %add.ptr537 = getelementptr i32, i32* %arraydecay536, i64 2, !dbg !11023
  %130 = load i32, i32* %add.ptr537, align 4, !dbg !11023
  %and538 = and i32 %130, 16711680, !dbg !11023
  %shr539 = lshr i32 %and538, 8, !dbg !11023
  %or540 = or i32 %or535, %shr539, !dbg !11023
  %arraydecay541 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11023
  %add.ptr542 = getelementptr i32, i32* %arraydecay541, i64 2, !dbg !11023
  %131 = load i32, i32* %add.ptr542, align 4, !dbg !11023
  %and543 = and i32 %131, -16777216, !dbg !11023
  %shr544 = lshr i32 %and543, 24, !dbg !11023
  %or545 = or i32 %or540, %shr544, !dbg !11023
  br label %cond.end550, !dbg !11023

cond.false546:                                    ; preds = %cond.end515
  %arraydecay547 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11023
  %add.ptr548 = getelementptr i32, i32* %arraydecay547, i64 2, !dbg !11023
  %132 = load i32, i32* %add.ptr548, align 4, !dbg !11023
  %call549 = call i32 @__fswab32(i32 %132) #8, !dbg !11023
  br label %cond.end550, !dbg !11023

cond.end550:                                      ; preds = %cond.false546, %cond.true526
  %cond551 = phi i32 [ %or545, %cond.true526 ], [ %call549, %cond.false546 ], !dbg !11023
  %and552 = and i32 %cond551, -65536, !dbg !11023
  %133 = load i32, i32* %_v418, align 4, !dbg !11023
  %and553 = and i32 %133, 65535, !dbg !11023
  %shl554 = shl i32 %and553, 0, !dbg !11023
  %or555 = or i32 %and552, %shl554, !dbg !11023
  %and556 = and i32 %or555, 16711680, !dbg !11023
  %shr557 = lshr i32 %and556, 8, !dbg !11023
  %or558 = or i32 %or523, %shr557, !dbg !11023
  %arraydecay559 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11023
  %add.ptr560 = getelementptr i32, i32* %arraydecay559, i64 2, !dbg !11023
  %134 = load i32, i32* %add.ptr560, align 4, !dbg !11023
  %135 = call i1 @llvm.is.constant.i32(i32 %134), !dbg !11023
  br i1 %135, label %cond.true561, label %cond.false581, !dbg !11023

cond.true561:                                     ; preds = %cond.end550
  %arraydecay562 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11023
  %add.ptr563 = getelementptr i32, i32* %arraydecay562, i64 2, !dbg !11023
  %136 = load i32, i32* %add.ptr563, align 4, !dbg !11023
  %and564 = and i32 %136, 255, !dbg !11023
  %shl565 = shl i32 %and564, 24, !dbg !11023
  %arraydecay566 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11023
  %add.ptr567 = getelementptr i32, i32* %arraydecay566, i64 2, !dbg !11023
  %137 = load i32, i32* %add.ptr567, align 4, !dbg !11023
  %and568 = and i32 %137, 65280, !dbg !11023
  %shl569 = shl i32 %and568, 8, !dbg !11023
  %or570 = or i32 %shl565, %shl569, !dbg !11023
  %arraydecay571 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11023
  %add.ptr572 = getelementptr i32, i32* %arraydecay571, i64 2, !dbg !11023
  %138 = load i32, i32* %add.ptr572, align 4, !dbg !11023
  %and573 = and i32 %138, 16711680, !dbg !11023
  %shr574 = lshr i32 %and573, 8, !dbg !11023
  %or575 = or i32 %or570, %shr574, !dbg !11023
  %arraydecay576 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11023
  %add.ptr577 = getelementptr i32, i32* %arraydecay576, i64 2, !dbg !11023
  %139 = load i32, i32* %add.ptr577, align 4, !dbg !11023
  %and578 = and i32 %139, -16777216, !dbg !11023
  %shr579 = lshr i32 %and578, 24, !dbg !11023
  %or580 = or i32 %or575, %shr579, !dbg !11023
  br label %cond.end585, !dbg !11023

cond.false581:                                    ; preds = %cond.end550
  %arraydecay582 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11023
  %add.ptr583 = getelementptr i32, i32* %arraydecay582, i64 2, !dbg !11023
  %140 = load i32, i32* %add.ptr583, align 4, !dbg !11023
  %call584 = call i32 @__fswab32(i32 %140) #8, !dbg !11023
  br label %cond.end585, !dbg !11023

cond.end585:                                      ; preds = %cond.false581, %cond.true561
  %cond586 = phi i32 [ %or580, %cond.true561 ], [ %call584, %cond.false581 ], !dbg !11023
  %and587 = and i32 %cond586, -65536, !dbg !11023
  %141 = load i32, i32* %_v418, align 4, !dbg !11023
  %and588 = and i32 %141, 65535, !dbg !11023
  %shl589 = shl i32 %and588, 0, !dbg !11023
  %or590 = or i32 %and587, %shl589, !dbg !11023
  %and591 = and i32 %or590, -16777216, !dbg !11023
  %shr592 = lshr i32 %and591, 24, !dbg !11023
  %or593 = or i32 %or558, %shr592, !dbg !11023
  br label %cond.end628, !dbg !11023

cond.false594:                                    ; preds = %cond.end448
  %arraydecay595 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11023
  %add.ptr596 = getelementptr i32, i32* %arraydecay595, i64 2, !dbg !11023
  %142 = load i32, i32* %add.ptr596, align 4, !dbg !11023
  %143 = call i1 @llvm.is.constant.i32(i32 %142), !dbg !11023
  br i1 %143, label %cond.true597, label %cond.false617, !dbg !11023

cond.true597:                                     ; preds = %cond.false594
  %arraydecay598 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11023
  %add.ptr599 = getelementptr i32, i32* %arraydecay598, i64 2, !dbg !11023
  %144 = load i32, i32* %add.ptr599, align 4, !dbg !11023
  %and600 = and i32 %144, 255, !dbg !11023
  %shl601 = shl i32 %and600, 24, !dbg !11023
  %arraydecay602 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11023
  %add.ptr603 = getelementptr i32, i32* %arraydecay602, i64 2, !dbg !11023
  %145 = load i32, i32* %add.ptr603, align 4, !dbg !11023
  %and604 = and i32 %145, 65280, !dbg !11023
  %shl605 = shl i32 %and604, 8, !dbg !11023
  %or606 = or i32 %shl601, %shl605, !dbg !11023
  %arraydecay607 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11023
  %add.ptr608 = getelementptr i32, i32* %arraydecay607, i64 2, !dbg !11023
  %146 = load i32, i32* %add.ptr608, align 4, !dbg !11023
  %and609 = and i32 %146, 16711680, !dbg !11023
  %shr610 = lshr i32 %and609, 8, !dbg !11023
  %or611 = or i32 %or606, %shr610, !dbg !11023
  %arraydecay612 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11023
  %add.ptr613 = getelementptr i32, i32* %arraydecay612, i64 2, !dbg !11023
  %147 = load i32, i32* %add.ptr613, align 4, !dbg !11023
  %and614 = and i32 %147, -16777216, !dbg !11023
  %shr615 = lshr i32 %and614, 24, !dbg !11023
  %or616 = or i32 %or611, %shr615, !dbg !11023
  br label %cond.end621, !dbg !11023

cond.false617:                                    ; preds = %cond.false594
  %arraydecay618 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11023
  %add.ptr619 = getelementptr i32, i32* %arraydecay618, i64 2, !dbg !11023
  %148 = load i32, i32* %add.ptr619, align 4, !dbg !11023
  %call620 = call i32 @__fswab32(i32 %148) #8, !dbg !11023
  br label %cond.end621, !dbg !11023

cond.end621:                                      ; preds = %cond.false617, %cond.true597
  %cond622 = phi i32 [ %or616, %cond.true597 ], [ %call620, %cond.false617 ], !dbg !11023
  %and623 = and i32 %cond622, -65536, !dbg !11023
  %149 = load i32, i32* %_v418, align 4, !dbg !11023
  %and624 = and i32 %149, 65535, !dbg !11023
  %shl625 = shl i32 %and624, 0, !dbg !11023
  %or626 = or i32 %and623, %shl625, !dbg !11023
  %call627 = call i32 @__fswab32(i32 %or626) #8, !dbg !11023
  br label %cond.end628, !dbg !11023

cond.end628:                                      ; preds = %cond.end621, %cond.end585
  %cond629 = phi i32 [ %or593, %cond.end585 ], [ %call627, %cond.end621 ], !dbg !11023
  %arraydecay630 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11023
  %add.ptr631 = getelementptr i32, i32* %arraydecay630, i64 2, !dbg !11023
  store i32 %cond629, i32* %add.ptr631, align 4, !dbg !11023
  br label %do.end632, !dbg !11023

do.end632:                                        ; preds = %cond.end628
  br label %do.body633, !dbg !11026

do.body633:                                       ; preds = %do.end632
  call void @llvm.dbg.declare(metadata i32* %_v634, metadata !11027, metadata !DIExpression()), !dbg !11029
  %150 = load i8, i8* %other_vport.addr, align 1, !dbg !11029
  %conv635 = zext i8 %150 to i32, !dbg !11029
  store i32 %conv635, i32* %_v634, align 4, !dbg !11029
  br label %do.body636, !dbg !11029

do.body636:                                       ; preds = %do.body633
  br label %do.end637, !dbg !11030

do.end637:                                        ; preds = %do.body636
  %arraydecay638 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11029
  %add.ptr639 = getelementptr i32, i32* %arraydecay638, i64 2, !dbg !11029
  %151 = load i32, i32* %add.ptr639, align 4, !dbg !11029
  %152 = call i1 @llvm.is.constant.i32(i32 %151), !dbg !11029
  br i1 %152, label %cond.true640, label %cond.false660, !dbg !11029

cond.true640:                                     ; preds = %do.end637
  %arraydecay641 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11029
  %add.ptr642 = getelementptr i32, i32* %arraydecay641, i64 2, !dbg !11029
  %153 = load i32, i32* %add.ptr642, align 4, !dbg !11029
  %and643 = and i32 %153, 255, !dbg !11029
  %shl644 = shl i32 %and643, 24, !dbg !11029
  %arraydecay645 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11029
  %add.ptr646 = getelementptr i32, i32* %arraydecay645, i64 2, !dbg !11029
  %154 = load i32, i32* %add.ptr646, align 4, !dbg !11029
  %and647 = and i32 %154, 65280, !dbg !11029
  %shl648 = shl i32 %and647, 8, !dbg !11029
  %or649 = or i32 %shl644, %shl648, !dbg !11029
  %arraydecay650 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11029
  %add.ptr651 = getelementptr i32, i32* %arraydecay650, i64 2, !dbg !11029
  %155 = load i32, i32* %add.ptr651, align 4, !dbg !11029
  %and652 = and i32 %155, 16711680, !dbg !11029
  %shr653 = lshr i32 %and652, 8, !dbg !11029
  %or654 = or i32 %or649, %shr653, !dbg !11029
  %arraydecay655 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11029
  %add.ptr656 = getelementptr i32, i32* %arraydecay655, i64 2, !dbg !11029
  %156 = load i32, i32* %add.ptr656, align 4, !dbg !11029
  %and657 = and i32 %156, -16777216, !dbg !11029
  %shr658 = lshr i32 %and657, 24, !dbg !11029
  %or659 = or i32 %or654, %shr658, !dbg !11029
  br label %cond.end664, !dbg !11029

cond.false660:                                    ; preds = %do.end637
  %arraydecay661 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11029
  %add.ptr662 = getelementptr i32, i32* %arraydecay661, i64 2, !dbg !11029
  %157 = load i32, i32* %add.ptr662, align 4, !dbg !11029
  %call663 = call i32 @__fswab32(i32 %157) #8, !dbg !11029
  br label %cond.end664, !dbg !11029

cond.end664:                                      ; preds = %cond.false660, %cond.true640
  %cond665 = phi i32 [ %or659, %cond.true640 ], [ %call663, %cond.false660 ], !dbg !11029
  %and666 = and i32 %cond665, 2147483647, !dbg !11029
  %158 = load i32, i32* %_v634, align 4, !dbg !11029
  %and667 = and i32 %158, 1, !dbg !11029
  %shl668 = shl i32 %and667, 31, !dbg !11029
  %or669 = or i32 %and666, %shl668, !dbg !11029
  %159 = call i1 @llvm.is.constant.i32(i32 %or669), !dbg !11029
  br i1 %159, label %cond.true670, label %cond.false810, !dbg !11029

cond.true670:                                     ; preds = %cond.end664
  %arraydecay671 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11029
  %add.ptr672 = getelementptr i32, i32* %arraydecay671, i64 2, !dbg !11029
  %160 = load i32, i32* %add.ptr672, align 4, !dbg !11029
  %161 = call i1 @llvm.is.constant.i32(i32 %160), !dbg !11029
  br i1 %161, label %cond.true673, label %cond.false693, !dbg !11029

cond.true673:                                     ; preds = %cond.true670
  %arraydecay674 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11029
  %add.ptr675 = getelementptr i32, i32* %arraydecay674, i64 2, !dbg !11029
  %162 = load i32, i32* %add.ptr675, align 4, !dbg !11029
  %and676 = and i32 %162, 255, !dbg !11029
  %shl677 = shl i32 %and676, 24, !dbg !11029
  %arraydecay678 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11029
  %add.ptr679 = getelementptr i32, i32* %arraydecay678, i64 2, !dbg !11029
  %163 = load i32, i32* %add.ptr679, align 4, !dbg !11029
  %and680 = and i32 %163, 65280, !dbg !11029
  %shl681 = shl i32 %and680, 8, !dbg !11029
  %or682 = or i32 %shl677, %shl681, !dbg !11029
  %arraydecay683 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11029
  %add.ptr684 = getelementptr i32, i32* %arraydecay683, i64 2, !dbg !11029
  %164 = load i32, i32* %add.ptr684, align 4, !dbg !11029
  %and685 = and i32 %164, 16711680, !dbg !11029
  %shr686 = lshr i32 %and685, 8, !dbg !11029
  %or687 = or i32 %or682, %shr686, !dbg !11029
  %arraydecay688 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11029
  %add.ptr689 = getelementptr i32, i32* %arraydecay688, i64 2, !dbg !11029
  %165 = load i32, i32* %add.ptr689, align 4, !dbg !11029
  %and690 = and i32 %165, -16777216, !dbg !11029
  %shr691 = lshr i32 %and690, 24, !dbg !11029
  %or692 = or i32 %or687, %shr691, !dbg !11029
  br label %cond.end697, !dbg !11029

cond.false693:                                    ; preds = %cond.true670
  %arraydecay694 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11029
  %add.ptr695 = getelementptr i32, i32* %arraydecay694, i64 2, !dbg !11029
  %166 = load i32, i32* %add.ptr695, align 4, !dbg !11029
  %call696 = call i32 @__fswab32(i32 %166) #8, !dbg !11029
  br label %cond.end697, !dbg !11029

cond.end697:                                      ; preds = %cond.false693, %cond.true673
  %cond698 = phi i32 [ %or692, %cond.true673 ], [ %call696, %cond.false693 ], !dbg !11029
  %and699 = and i32 %cond698, 2147483647, !dbg !11029
  %167 = load i32, i32* %_v634, align 4, !dbg !11029
  %and700 = and i32 %167, 1, !dbg !11029
  %shl701 = shl i32 %and700, 31, !dbg !11029
  %or702 = or i32 %and699, %shl701, !dbg !11029
  %and703 = and i32 %or702, 255, !dbg !11029
  %shl704 = shl i32 %and703, 24, !dbg !11029
  %arraydecay705 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11029
  %add.ptr706 = getelementptr i32, i32* %arraydecay705, i64 2, !dbg !11029
  %168 = load i32, i32* %add.ptr706, align 4, !dbg !11029
  %169 = call i1 @llvm.is.constant.i32(i32 %168), !dbg !11029
  br i1 %169, label %cond.true707, label %cond.false727, !dbg !11029

cond.true707:                                     ; preds = %cond.end697
  %arraydecay708 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11029
  %add.ptr709 = getelementptr i32, i32* %arraydecay708, i64 2, !dbg !11029
  %170 = load i32, i32* %add.ptr709, align 4, !dbg !11029
  %and710 = and i32 %170, 255, !dbg !11029
  %shl711 = shl i32 %and710, 24, !dbg !11029
  %arraydecay712 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11029
  %add.ptr713 = getelementptr i32, i32* %arraydecay712, i64 2, !dbg !11029
  %171 = load i32, i32* %add.ptr713, align 4, !dbg !11029
  %and714 = and i32 %171, 65280, !dbg !11029
  %shl715 = shl i32 %and714, 8, !dbg !11029
  %or716 = or i32 %shl711, %shl715, !dbg !11029
  %arraydecay717 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11029
  %add.ptr718 = getelementptr i32, i32* %arraydecay717, i64 2, !dbg !11029
  %172 = load i32, i32* %add.ptr718, align 4, !dbg !11029
  %and719 = and i32 %172, 16711680, !dbg !11029
  %shr720 = lshr i32 %and719, 8, !dbg !11029
  %or721 = or i32 %or716, %shr720, !dbg !11029
  %arraydecay722 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11029
  %add.ptr723 = getelementptr i32, i32* %arraydecay722, i64 2, !dbg !11029
  %173 = load i32, i32* %add.ptr723, align 4, !dbg !11029
  %and724 = and i32 %173, -16777216, !dbg !11029
  %shr725 = lshr i32 %and724, 24, !dbg !11029
  %or726 = or i32 %or721, %shr725, !dbg !11029
  br label %cond.end731, !dbg !11029

cond.false727:                                    ; preds = %cond.end697
  %arraydecay728 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11029
  %add.ptr729 = getelementptr i32, i32* %arraydecay728, i64 2, !dbg !11029
  %174 = load i32, i32* %add.ptr729, align 4, !dbg !11029
  %call730 = call i32 @__fswab32(i32 %174) #8, !dbg !11029
  br label %cond.end731, !dbg !11029

cond.end731:                                      ; preds = %cond.false727, %cond.true707
  %cond732 = phi i32 [ %or726, %cond.true707 ], [ %call730, %cond.false727 ], !dbg !11029
  %and733 = and i32 %cond732, 2147483647, !dbg !11029
  %175 = load i32, i32* %_v634, align 4, !dbg !11029
  %and734 = and i32 %175, 1, !dbg !11029
  %shl735 = shl i32 %and734, 31, !dbg !11029
  %or736 = or i32 %and733, %shl735, !dbg !11029
  %and737 = and i32 %or736, 65280, !dbg !11029
  %shl738 = shl i32 %and737, 8, !dbg !11029
  %or739 = or i32 %shl704, %shl738, !dbg !11029
  %arraydecay740 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11029
  %add.ptr741 = getelementptr i32, i32* %arraydecay740, i64 2, !dbg !11029
  %176 = load i32, i32* %add.ptr741, align 4, !dbg !11029
  %177 = call i1 @llvm.is.constant.i32(i32 %176), !dbg !11029
  br i1 %177, label %cond.true742, label %cond.false762, !dbg !11029

cond.true742:                                     ; preds = %cond.end731
  %arraydecay743 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11029
  %add.ptr744 = getelementptr i32, i32* %arraydecay743, i64 2, !dbg !11029
  %178 = load i32, i32* %add.ptr744, align 4, !dbg !11029
  %and745 = and i32 %178, 255, !dbg !11029
  %shl746 = shl i32 %and745, 24, !dbg !11029
  %arraydecay747 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11029
  %add.ptr748 = getelementptr i32, i32* %arraydecay747, i64 2, !dbg !11029
  %179 = load i32, i32* %add.ptr748, align 4, !dbg !11029
  %and749 = and i32 %179, 65280, !dbg !11029
  %shl750 = shl i32 %and749, 8, !dbg !11029
  %or751 = or i32 %shl746, %shl750, !dbg !11029
  %arraydecay752 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11029
  %add.ptr753 = getelementptr i32, i32* %arraydecay752, i64 2, !dbg !11029
  %180 = load i32, i32* %add.ptr753, align 4, !dbg !11029
  %and754 = and i32 %180, 16711680, !dbg !11029
  %shr755 = lshr i32 %and754, 8, !dbg !11029
  %or756 = or i32 %or751, %shr755, !dbg !11029
  %arraydecay757 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11029
  %add.ptr758 = getelementptr i32, i32* %arraydecay757, i64 2, !dbg !11029
  %181 = load i32, i32* %add.ptr758, align 4, !dbg !11029
  %and759 = and i32 %181, -16777216, !dbg !11029
  %shr760 = lshr i32 %and759, 24, !dbg !11029
  %or761 = or i32 %or756, %shr760, !dbg !11029
  br label %cond.end766, !dbg !11029

cond.false762:                                    ; preds = %cond.end731
  %arraydecay763 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11029
  %add.ptr764 = getelementptr i32, i32* %arraydecay763, i64 2, !dbg !11029
  %182 = load i32, i32* %add.ptr764, align 4, !dbg !11029
  %call765 = call i32 @__fswab32(i32 %182) #8, !dbg !11029
  br label %cond.end766, !dbg !11029

cond.end766:                                      ; preds = %cond.false762, %cond.true742
  %cond767 = phi i32 [ %or761, %cond.true742 ], [ %call765, %cond.false762 ], !dbg !11029
  %and768 = and i32 %cond767, 2147483647, !dbg !11029
  %183 = load i32, i32* %_v634, align 4, !dbg !11029
  %and769 = and i32 %183, 1, !dbg !11029
  %shl770 = shl i32 %and769, 31, !dbg !11029
  %or771 = or i32 %and768, %shl770, !dbg !11029
  %and772 = and i32 %or771, 16711680, !dbg !11029
  %shr773 = lshr i32 %and772, 8, !dbg !11029
  %or774 = or i32 %or739, %shr773, !dbg !11029
  %arraydecay775 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11029
  %add.ptr776 = getelementptr i32, i32* %arraydecay775, i64 2, !dbg !11029
  %184 = load i32, i32* %add.ptr776, align 4, !dbg !11029
  %185 = call i1 @llvm.is.constant.i32(i32 %184), !dbg !11029
  br i1 %185, label %cond.true777, label %cond.false797, !dbg !11029

cond.true777:                                     ; preds = %cond.end766
  %arraydecay778 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11029
  %add.ptr779 = getelementptr i32, i32* %arraydecay778, i64 2, !dbg !11029
  %186 = load i32, i32* %add.ptr779, align 4, !dbg !11029
  %and780 = and i32 %186, 255, !dbg !11029
  %shl781 = shl i32 %and780, 24, !dbg !11029
  %arraydecay782 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11029
  %add.ptr783 = getelementptr i32, i32* %arraydecay782, i64 2, !dbg !11029
  %187 = load i32, i32* %add.ptr783, align 4, !dbg !11029
  %and784 = and i32 %187, 65280, !dbg !11029
  %shl785 = shl i32 %and784, 8, !dbg !11029
  %or786 = or i32 %shl781, %shl785, !dbg !11029
  %arraydecay787 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11029
  %add.ptr788 = getelementptr i32, i32* %arraydecay787, i64 2, !dbg !11029
  %188 = load i32, i32* %add.ptr788, align 4, !dbg !11029
  %and789 = and i32 %188, 16711680, !dbg !11029
  %shr790 = lshr i32 %and789, 8, !dbg !11029
  %or791 = or i32 %or786, %shr790, !dbg !11029
  %arraydecay792 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11029
  %add.ptr793 = getelementptr i32, i32* %arraydecay792, i64 2, !dbg !11029
  %189 = load i32, i32* %add.ptr793, align 4, !dbg !11029
  %and794 = and i32 %189, -16777216, !dbg !11029
  %shr795 = lshr i32 %and794, 24, !dbg !11029
  %or796 = or i32 %or791, %shr795, !dbg !11029
  br label %cond.end801, !dbg !11029

cond.false797:                                    ; preds = %cond.end766
  %arraydecay798 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11029
  %add.ptr799 = getelementptr i32, i32* %arraydecay798, i64 2, !dbg !11029
  %190 = load i32, i32* %add.ptr799, align 4, !dbg !11029
  %call800 = call i32 @__fswab32(i32 %190) #8, !dbg !11029
  br label %cond.end801, !dbg !11029

cond.end801:                                      ; preds = %cond.false797, %cond.true777
  %cond802 = phi i32 [ %or796, %cond.true777 ], [ %call800, %cond.false797 ], !dbg !11029
  %and803 = and i32 %cond802, 2147483647, !dbg !11029
  %191 = load i32, i32* %_v634, align 4, !dbg !11029
  %and804 = and i32 %191, 1, !dbg !11029
  %shl805 = shl i32 %and804, 31, !dbg !11029
  %or806 = or i32 %and803, %shl805, !dbg !11029
  %and807 = and i32 %or806, -16777216, !dbg !11029
  %shr808 = lshr i32 %and807, 24, !dbg !11029
  %or809 = or i32 %or774, %shr808, !dbg !11029
  br label %cond.end844, !dbg !11029

cond.false810:                                    ; preds = %cond.end664
  %arraydecay811 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11029
  %add.ptr812 = getelementptr i32, i32* %arraydecay811, i64 2, !dbg !11029
  %192 = load i32, i32* %add.ptr812, align 4, !dbg !11029
  %193 = call i1 @llvm.is.constant.i32(i32 %192), !dbg !11029
  br i1 %193, label %cond.true813, label %cond.false833, !dbg !11029

cond.true813:                                     ; preds = %cond.false810
  %arraydecay814 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11029
  %add.ptr815 = getelementptr i32, i32* %arraydecay814, i64 2, !dbg !11029
  %194 = load i32, i32* %add.ptr815, align 4, !dbg !11029
  %and816 = and i32 %194, 255, !dbg !11029
  %shl817 = shl i32 %and816, 24, !dbg !11029
  %arraydecay818 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11029
  %add.ptr819 = getelementptr i32, i32* %arraydecay818, i64 2, !dbg !11029
  %195 = load i32, i32* %add.ptr819, align 4, !dbg !11029
  %and820 = and i32 %195, 65280, !dbg !11029
  %shl821 = shl i32 %and820, 8, !dbg !11029
  %or822 = or i32 %shl817, %shl821, !dbg !11029
  %arraydecay823 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11029
  %add.ptr824 = getelementptr i32, i32* %arraydecay823, i64 2, !dbg !11029
  %196 = load i32, i32* %add.ptr824, align 4, !dbg !11029
  %and825 = and i32 %196, 16711680, !dbg !11029
  %shr826 = lshr i32 %and825, 8, !dbg !11029
  %or827 = or i32 %or822, %shr826, !dbg !11029
  %arraydecay828 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11029
  %add.ptr829 = getelementptr i32, i32* %arraydecay828, i64 2, !dbg !11029
  %197 = load i32, i32* %add.ptr829, align 4, !dbg !11029
  %and830 = and i32 %197, -16777216, !dbg !11029
  %shr831 = lshr i32 %and830, 24, !dbg !11029
  %or832 = or i32 %or827, %shr831, !dbg !11029
  br label %cond.end837, !dbg !11029

cond.false833:                                    ; preds = %cond.false810
  %arraydecay834 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11029
  %add.ptr835 = getelementptr i32, i32* %arraydecay834, i64 2, !dbg !11029
  %198 = load i32, i32* %add.ptr835, align 4, !dbg !11029
  %call836 = call i32 @__fswab32(i32 %198) #8, !dbg !11029
  br label %cond.end837, !dbg !11029

cond.end837:                                      ; preds = %cond.false833, %cond.true813
  %cond838 = phi i32 [ %or832, %cond.true813 ], [ %call836, %cond.false833 ], !dbg !11029
  %and839 = and i32 %cond838, 2147483647, !dbg !11029
  %199 = load i32, i32* %_v634, align 4, !dbg !11029
  %and840 = and i32 %199, 1, !dbg !11029
  %shl841 = shl i32 %and840, 31, !dbg !11029
  %or842 = or i32 %and839, %shl841, !dbg !11029
  %call843 = call i32 @__fswab32(i32 %or842) #8, !dbg !11029
  br label %cond.end844, !dbg !11029

cond.end844:                                      ; preds = %cond.end837, %cond.end801
  %cond845 = phi i32 [ %or809, %cond.end801 ], [ %call843, %cond.end837 ], !dbg !11029
  %arraydecay846 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11029
  %add.ptr847 = getelementptr i32, i32* %arraydecay846, i64 2, !dbg !11029
  store i32 %cond845, i32* %add.ptr847, align 4, !dbg !11029
  br label %do.end848, !dbg !11029

do.end848:                                        ; preds = %cond.end844
  br label %do.body849, !dbg !11032

do.body849:                                       ; preds = %do.end848
  call void @llvm.dbg.declare(metadata i32* %_v850, metadata !11033, metadata !DIExpression()), !dbg !11035
  %200 = load i8, i8* %state.addr, align 1, !dbg !11035
  %conv851 = zext i8 %200 to i32, !dbg !11035
  store i32 %conv851, i32* %_v850, align 4, !dbg !11035
  br label %do.body852, !dbg !11035

do.body852:                                       ; preds = %do.body849
  br label %do.end853, !dbg !11036

do.end853:                                        ; preds = %do.body852
  %arraydecay854 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11035
  %add.ptr855 = getelementptr i32, i32* %arraydecay854, i64 3, !dbg !11035
  %201 = load i32, i32* %add.ptr855, align 4, !dbg !11035
  %202 = call i1 @llvm.is.constant.i32(i32 %201), !dbg !11035
  br i1 %202, label %cond.true856, label %cond.false876, !dbg !11035

cond.true856:                                     ; preds = %do.end853
  %arraydecay857 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11035
  %add.ptr858 = getelementptr i32, i32* %arraydecay857, i64 3, !dbg !11035
  %203 = load i32, i32* %add.ptr858, align 4, !dbg !11035
  %and859 = and i32 %203, 255, !dbg !11035
  %shl860 = shl i32 %and859, 24, !dbg !11035
  %arraydecay861 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11035
  %add.ptr862 = getelementptr i32, i32* %arraydecay861, i64 3, !dbg !11035
  %204 = load i32, i32* %add.ptr862, align 4, !dbg !11035
  %and863 = and i32 %204, 65280, !dbg !11035
  %shl864 = shl i32 %and863, 8, !dbg !11035
  %or865 = or i32 %shl860, %shl864, !dbg !11035
  %arraydecay866 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11035
  %add.ptr867 = getelementptr i32, i32* %arraydecay866, i64 3, !dbg !11035
  %205 = load i32, i32* %add.ptr867, align 4, !dbg !11035
  %and868 = and i32 %205, 16711680, !dbg !11035
  %shr869 = lshr i32 %and868, 8, !dbg !11035
  %or870 = or i32 %or865, %shr869, !dbg !11035
  %arraydecay871 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11035
  %add.ptr872 = getelementptr i32, i32* %arraydecay871, i64 3, !dbg !11035
  %206 = load i32, i32* %add.ptr872, align 4, !dbg !11035
  %and873 = and i32 %206, -16777216, !dbg !11035
  %shr874 = lshr i32 %and873, 24, !dbg !11035
  %or875 = or i32 %or870, %shr874, !dbg !11035
  br label %cond.end880, !dbg !11035

cond.false876:                                    ; preds = %do.end853
  %arraydecay877 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11035
  %add.ptr878 = getelementptr i32, i32* %arraydecay877, i64 3, !dbg !11035
  %207 = load i32, i32* %add.ptr878, align 4, !dbg !11035
  %call879 = call i32 @__fswab32(i32 %207) #8, !dbg !11035
  br label %cond.end880, !dbg !11035

cond.end880:                                      ; preds = %cond.false876, %cond.true856
  %cond881 = phi i32 [ %or875, %cond.true856 ], [ %call879, %cond.false876 ], !dbg !11035
  %and882 = and i32 %cond881, -241, !dbg !11035
  %208 = load i32, i32* %_v850, align 4, !dbg !11035
  %and883 = and i32 %208, 15, !dbg !11035
  %shl884 = shl i32 %and883, 4, !dbg !11035
  %or885 = or i32 %and882, %shl884, !dbg !11035
  %209 = call i1 @llvm.is.constant.i32(i32 %or885), !dbg !11035
  br i1 %209, label %cond.true886, label %cond.false1026, !dbg !11035

cond.true886:                                     ; preds = %cond.end880
  %arraydecay887 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11035
  %add.ptr888 = getelementptr i32, i32* %arraydecay887, i64 3, !dbg !11035
  %210 = load i32, i32* %add.ptr888, align 4, !dbg !11035
  %211 = call i1 @llvm.is.constant.i32(i32 %210), !dbg !11035
  br i1 %211, label %cond.true889, label %cond.false909, !dbg !11035

cond.true889:                                     ; preds = %cond.true886
  %arraydecay890 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11035
  %add.ptr891 = getelementptr i32, i32* %arraydecay890, i64 3, !dbg !11035
  %212 = load i32, i32* %add.ptr891, align 4, !dbg !11035
  %and892 = and i32 %212, 255, !dbg !11035
  %shl893 = shl i32 %and892, 24, !dbg !11035
  %arraydecay894 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11035
  %add.ptr895 = getelementptr i32, i32* %arraydecay894, i64 3, !dbg !11035
  %213 = load i32, i32* %add.ptr895, align 4, !dbg !11035
  %and896 = and i32 %213, 65280, !dbg !11035
  %shl897 = shl i32 %and896, 8, !dbg !11035
  %or898 = or i32 %shl893, %shl897, !dbg !11035
  %arraydecay899 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11035
  %add.ptr900 = getelementptr i32, i32* %arraydecay899, i64 3, !dbg !11035
  %214 = load i32, i32* %add.ptr900, align 4, !dbg !11035
  %and901 = and i32 %214, 16711680, !dbg !11035
  %shr902 = lshr i32 %and901, 8, !dbg !11035
  %or903 = or i32 %or898, %shr902, !dbg !11035
  %arraydecay904 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11035
  %add.ptr905 = getelementptr i32, i32* %arraydecay904, i64 3, !dbg !11035
  %215 = load i32, i32* %add.ptr905, align 4, !dbg !11035
  %and906 = and i32 %215, -16777216, !dbg !11035
  %shr907 = lshr i32 %and906, 24, !dbg !11035
  %or908 = or i32 %or903, %shr907, !dbg !11035
  br label %cond.end913, !dbg !11035

cond.false909:                                    ; preds = %cond.true886
  %arraydecay910 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11035
  %add.ptr911 = getelementptr i32, i32* %arraydecay910, i64 3, !dbg !11035
  %216 = load i32, i32* %add.ptr911, align 4, !dbg !11035
  %call912 = call i32 @__fswab32(i32 %216) #8, !dbg !11035
  br label %cond.end913, !dbg !11035

cond.end913:                                      ; preds = %cond.false909, %cond.true889
  %cond914 = phi i32 [ %or908, %cond.true889 ], [ %call912, %cond.false909 ], !dbg !11035
  %and915 = and i32 %cond914, -241, !dbg !11035
  %217 = load i32, i32* %_v850, align 4, !dbg !11035
  %and916 = and i32 %217, 15, !dbg !11035
  %shl917 = shl i32 %and916, 4, !dbg !11035
  %or918 = or i32 %and915, %shl917, !dbg !11035
  %and919 = and i32 %or918, 255, !dbg !11035
  %shl920 = shl i32 %and919, 24, !dbg !11035
  %arraydecay921 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11035
  %add.ptr922 = getelementptr i32, i32* %arraydecay921, i64 3, !dbg !11035
  %218 = load i32, i32* %add.ptr922, align 4, !dbg !11035
  %219 = call i1 @llvm.is.constant.i32(i32 %218), !dbg !11035
  br i1 %219, label %cond.true923, label %cond.false943, !dbg !11035

cond.true923:                                     ; preds = %cond.end913
  %arraydecay924 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11035
  %add.ptr925 = getelementptr i32, i32* %arraydecay924, i64 3, !dbg !11035
  %220 = load i32, i32* %add.ptr925, align 4, !dbg !11035
  %and926 = and i32 %220, 255, !dbg !11035
  %shl927 = shl i32 %and926, 24, !dbg !11035
  %arraydecay928 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11035
  %add.ptr929 = getelementptr i32, i32* %arraydecay928, i64 3, !dbg !11035
  %221 = load i32, i32* %add.ptr929, align 4, !dbg !11035
  %and930 = and i32 %221, 65280, !dbg !11035
  %shl931 = shl i32 %and930, 8, !dbg !11035
  %or932 = or i32 %shl927, %shl931, !dbg !11035
  %arraydecay933 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11035
  %add.ptr934 = getelementptr i32, i32* %arraydecay933, i64 3, !dbg !11035
  %222 = load i32, i32* %add.ptr934, align 4, !dbg !11035
  %and935 = and i32 %222, 16711680, !dbg !11035
  %shr936 = lshr i32 %and935, 8, !dbg !11035
  %or937 = or i32 %or932, %shr936, !dbg !11035
  %arraydecay938 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11035
  %add.ptr939 = getelementptr i32, i32* %arraydecay938, i64 3, !dbg !11035
  %223 = load i32, i32* %add.ptr939, align 4, !dbg !11035
  %and940 = and i32 %223, -16777216, !dbg !11035
  %shr941 = lshr i32 %and940, 24, !dbg !11035
  %or942 = or i32 %or937, %shr941, !dbg !11035
  br label %cond.end947, !dbg !11035

cond.false943:                                    ; preds = %cond.end913
  %arraydecay944 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11035
  %add.ptr945 = getelementptr i32, i32* %arraydecay944, i64 3, !dbg !11035
  %224 = load i32, i32* %add.ptr945, align 4, !dbg !11035
  %call946 = call i32 @__fswab32(i32 %224) #8, !dbg !11035
  br label %cond.end947, !dbg !11035

cond.end947:                                      ; preds = %cond.false943, %cond.true923
  %cond948 = phi i32 [ %or942, %cond.true923 ], [ %call946, %cond.false943 ], !dbg !11035
  %and949 = and i32 %cond948, -241, !dbg !11035
  %225 = load i32, i32* %_v850, align 4, !dbg !11035
  %and950 = and i32 %225, 15, !dbg !11035
  %shl951 = shl i32 %and950, 4, !dbg !11035
  %or952 = or i32 %and949, %shl951, !dbg !11035
  %and953 = and i32 %or952, 65280, !dbg !11035
  %shl954 = shl i32 %and953, 8, !dbg !11035
  %or955 = or i32 %shl920, %shl954, !dbg !11035
  %arraydecay956 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11035
  %add.ptr957 = getelementptr i32, i32* %arraydecay956, i64 3, !dbg !11035
  %226 = load i32, i32* %add.ptr957, align 4, !dbg !11035
  %227 = call i1 @llvm.is.constant.i32(i32 %226), !dbg !11035
  br i1 %227, label %cond.true958, label %cond.false978, !dbg !11035

cond.true958:                                     ; preds = %cond.end947
  %arraydecay959 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11035
  %add.ptr960 = getelementptr i32, i32* %arraydecay959, i64 3, !dbg !11035
  %228 = load i32, i32* %add.ptr960, align 4, !dbg !11035
  %and961 = and i32 %228, 255, !dbg !11035
  %shl962 = shl i32 %and961, 24, !dbg !11035
  %arraydecay963 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11035
  %add.ptr964 = getelementptr i32, i32* %arraydecay963, i64 3, !dbg !11035
  %229 = load i32, i32* %add.ptr964, align 4, !dbg !11035
  %and965 = and i32 %229, 65280, !dbg !11035
  %shl966 = shl i32 %and965, 8, !dbg !11035
  %or967 = or i32 %shl962, %shl966, !dbg !11035
  %arraydecay968 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11035
  %add.ptr969 = getelementptr i32, i32* %arraydecay968, i64 3, !dbg !11035
  %230 = load i32, i32* %add.ptr969, align 4, !dbg !11035
  %and970 = and i32 %230, 16711680, !dbg !11035
  %shr971 = lshr i32 %and970, 8, !dbg !11035
  %or972 = or i32 %or967, %shr971, !dbg !11035
  %arraydecay973 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11035
  %add.ptr974 = getelementptr i32, i32* %arraydecay973, i64 3, !dbg !11035
  %231 = load i32, i32* %add.ptr974, align 4, !dbg !11035
  %and975 = and i32 %231, -16777216, !dbg !11035
  %shr976 = lshr i32 %and975, 24, !dbg !11035
  %or977 = or i32 %or972, %shr976, !dbg !11035
  br label %cond.end982, !dbg !11035

cond.false978:                                    ; preds = %cond.end947
  %arraydecay979 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11035
  %add.ptr980 = getelementptr i32, i32* %arraydecay979, i64 3, !dbg !11035
  %232 = load i32, i32* %add.ptr980, align 4, !dbg !11035
  %call981 = call i32 @__fswab32(i32 %232) #8, !dbg !11035
  br label %cond.end982, !dbg !11035

cond.end982:                                      ; preds = %cond.false978, %cond.true958
  %cond983 = phi i32 [ %or977, %cond.true958 ], [ %call981, %cond.false978 ], !dbg !11035
  %and984 = and i32 %cond983, -241, !dbg !11035
  %233 = load i32, i32* %_v850, align 4, !dbg !11035
  %and985 = and i32 %233, 15, !dbg !11035
  %shl986 = shl i32 %and985, 4, !dbg !11035
  %or987 = or i32 %and984, %shl986, !dbg !11035
  %and988 = and i32 %or987, 16711680, !dbg !11035
  %shr989 = lshr i32 %and988, 8, !dbg !11035
  %or990 = or i32 %or955, %shr989, !dbg !11035
  %arraydecay991 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11035
  %add.ptr992 = getelementptr i32, i32* %arraydecay991, i64 3, !dbg !11035
  %234 = load i32, i32* %add.ptr992, align 4, !dbg !11035
  %235 = call i1 @llvm.is.constant.i32(i32 %234), !dbg !11035
  br i1 %235, label %cond.true993, label %cond.false1013, !dbg !11035

cond.true993:                                     ; preds = %cond.end982
  %arraydecay994 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11035
  %add.ptr995 = getelementptr i32, i32* %arraydecay994, i64 3, !dbg !11035
  %236 = load i32, i32* %add.ptr995, align 4, !dbg !11035
  %and996 = and i32 %236, 255, !dbg !11035
  %shl997 = shl i32 %and996, 24, !dbg !11035
  %arraydecay998 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11035
  %add.ptr999 = getelementptr i32, i32* %arraydecay998, i64 3, !dbg !11035
  %237 = load i32, i32* %add.ptr999, align 4, !dbg !11035
  %and1000 = and i32 %237, 65280, !dbg !11035
  %shl1001 = shl i32 %and1000, 8, !dbg !11035
  %or1002 = or i32 %shl997, %shl1001, !dbg !11035
  %arraydecay1003 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11035
  %add.ptr1004 = getelementptr i32, i32* %arraydecay1003, i64 3, !dbg !11035
  %238 = load i32, i32* %add.ptr1004, align 4, !dbg !11035
  %and1005 = and i32 %238, 16711680, !dbg !11035
  %shr1006 = lshr i32 %and1005, 8, !dbg !11035
  %or1007 = or i32 %or1002, %shr1006, !dbg !11035
  %arraydecay1008 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11035
  %add.ptr1009 = getelementptr i32, i32* %arraydecay1008, i64 3, !dbg !11035
  %239 = load i32, i32* %add.ptr1009, align 4, !dbg !11035
  %and1010 = and i32 %239, -16777216, !dbg !11035
  %shr1011 = lshr i32 %and1010, 24, !dbg !11035
  %or1012 = or i32 %or1007, %shr1011, !dbg !11035
  br label %cond.end1017, !dbg !11035

cond.false1013:                                   ; preds = %cond.end982
  %arraydecay1014 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11035
  %add.ptr1015 = getelementptr i32, i32* %arraydecay1014, i64 3, !dbg !11035
  %240 = load i32, i32* %add.ptr1015, align 4, !dbg !11035
  %call1016 = call i32 @__fswab32(i32 %240) #8, !dbg !11035
  br label %cond.end1017, !dbg !11035

cond.end1017:                                     ; preds = %cond.false1013, %cond.true993
  %cond1018 = phi i32 [ %or1012, %cond.true993 ], [ %call1016, %cond.false1013 ], !dbg !11035
  %and1019 = and i32 %cond1018, -241, !dbg !11035
  %241 = load i32, i32* %_v850, align 4, !dbg !11035
  %and1020 = and i32 %241, 15, !dbg !11035
  %shl1021 = shl i32 %and1020, 4, !dbg !11035
  %or1022 = or i32 %and1019, %shl1021, !dbg !11035
  %and1023 = and i32 %or1022, -16777216, !dbg !11035
  %shr1024 = lshr i32 %and1023, 24, !dbg !11035
  %or1025 = or i32 %or990, %shr1024, !dbg !11035
  br label %cond.end1060, !dbg !11035

cond.false1026:                                   ; preds = %cond.end880
  %arraydecay1027 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11035
  %add.ptr1028 = getelementptr i32, i32* %arraydecay1027, i64 3, !dbg !11035
  %242 = load i32, i32* %add.ptr1028, align 4, !dbg !11035
  %243 = call i1 @llvm.is.constant.i32(i32 %242), !dbg !11035
  br i1 %243, label %cond.true1029, label %cond.false1049, !dbg !11035

cond.true1029:                                    ; preds = %cond.false1026
  %arraydecay1030 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11035
  %add.ptr1031 = getelementptr i32, i32* %arraydecay1030, i64 3, !dbg !11035
  %244 = load i32, i32* %add.ptr1031, align 4, !dbg !11035
  %and1032 = and i32 %244, 255, !dbg !11035
  %shl1033 = shl i32 %and1032, 24, !dbg !11035
  %arraydecay1034 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11035
  %add.ptr1035 = getelementptr i32, i32* %arraydecay1034, i64 3, !dbg !11035
  %245 = load i32, i32* %add.ptr1035, align 4, !dbg !11035
  %and1036 = and i32 %245, 65280, !dbg !11035
  %shl1037 = shl i32 %and1036, 8, !dbg !11035
  %or1038 = or i32 %shl1033, %shl1037, !dbg !11035
  %arraydecay1039 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11035
  %add.ptr1040 = getelementptr i32, i32* %arraydecay1039, i64 3, !dbg !11035
  %246 = load i32, i32* %add.ptr1040, align 4, !dbg !11035
  %and1041 = and i32 %246, 16711680, !dbg !11035
  %shr1042 = lshr i32 %and1041, 8, !dbg !11035
  %or1043 = or i32 %or1038, %shr1042, !dbg !11035
  %arraydecay1044 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11035
  %add.ptr1045 = getelementptr i32, i32* %arraydecay1044, i64 3, !dbg !11035
  %247 = load i32, i32* %add.ptr1045, align 4, !dbg !11035
  %and1046 = and i32 %247, -16777216, !dbg !11035
  %shr1047 = lshr i32 %and1046, 24, !dbg !11035
  %or1048 = or i32 %or1043, %shr1047, !dbg !11035
  br label %cond.end1053, !dbg !11035

cond.false1049:                                   ; preds = %cond.false1026
  %arraydecay1050 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11035
  %add.ptr1051 = getelementptr i32, i32* %arraydecay1050, i64 3, !dbg !11035
  %248 = load i32, i32* %add.ptr1051, align 4, !dbg !11035
  %call1052 = call i32 @__fswab32(i32 %248) #8, !dbg !11035
  br label %cond.end1053, !dbg !11035

cond.end1053:                                     ; preds = %cond.false1049, %cond.true1029
  %cond1054 = phi i32 [ %or1048, %cond.true1029 ], [ %call1052, %cond.false1049 ], !dbg !11035
  %and1055 = and i32 %cond1054, -241, !dbg !11035
  %249 = load i32, i32* %_v850, align 4, !dbg !11035
  %and1056 = and i32 %249, 15, !dbg !11035
  %shl1057 = shl i32 %and1056, 4, !dbg !11035
  %or1058 = or i32 %and1055, %shl1057, !dbg !11035
  %call1059 = call i32 @__fswab32(i32 %or1058) #8, !dbg !11035
  br label %cond.end1060, !dbg !11035

cond.end1060:                                     ; preds = %cond.end1053, %cond.end1017
  %cond1061 = phi i32 [ %or1025, %cond.end1017 ], [ %call1059, %cond.end1053 ], !dbg !11035
  %arraydecay1062 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11035
  %add.ptr1063 = getelementptr i32, i32* %arraydecay1062, i64 3, !dbg !11035
  store i32 %cond1061, i32* %add.ptr1063, align 4, !dbg !11035
  br label %do.end1064, !dbg !11035

do.end1064:                                       ; preds = %cond.end1060
  call void @llvm.dbg.declare(metadata [4 x i32]* %_out, metadata !11038, metadata !DIExpression()), !dbg !11040
  %250 = bitcast [4 x i32]* %_out to i8*, !dbg !11040
  call void @llvm.memset.p0i8.i64(i8* align 16 %250, i8 0, i64 16, i1 false), !dbg !11040
  %251 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %mdev.addr, align 8, !dbg !11041
  %arraydecay1066 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11041
  %252 = bitcast i32* %arraydecay1066 to i8*, !dbg !11041
  %arraydecay1067 = getelementptr inbounds [4 x i32], [4 x i32]* %_out, i64 0, i64 0, !dbg !11041
  %253 = bitcast i32* %arraydecay1067 to i8*, !dbg !11041
  %call1068 = call i32 @mlx5_cmd_exec(%struct.mlx5_core_dev* %251, i8* %252, i32 16, i8* %253, i32 16) #9, !dbg !11041
  store i32 %call1068, i32* %tmp1065, align 4, !dbg !11040
  %254 = load i32, i32* %tmp1065, align 4, !dbg !11041
  store i32 %254, i32* %tmp, align 4, !dbg !11040
  %255 = load i32, i32* %tmp, align 4, !dbg !11040
  ret i32 %255, !dbg !11043
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @mlx5_query_nic_vport_min_inline(%struct.mlx5_core_dev* %mdev, i16 zeroext %vport, i8* %min_inline) #0 !dbg !11044 {
entry:
  %mdev.addr = alloca %struct.mlx5_core_dev*, align 8
  %vport.addr = alloca i16, align 2
  %min_inline.addr = alloca i8*, align 8
  %out = alloca [68 x i32], align 16
  %err = alloca i32, align 4
  store %struct.mlx5_core_dev* %mdev, %struct.mlx5_core_dev** %mdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_core_dev** %mdev.addr, metadata !11047, metadata !DIExpression()), !dbg !11048
  store i16 %vport, i16* %vport.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %vport.addr, metadata !11049, metadata !DIExpression()), !dbg !11050
  store i8* %min_inline, i8** %min_inline.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %min_inline.addr, metadata !11051, metadata !DIExpression()), !dbg !11052
  call void @llvm.dbg.declare(metadata [68 x i32]* %out, metadata !11053, metadata !DIExpression()), !dbg !11057
  %0 = bitcast [68 x i32]* %out to i8*, !dbg !11057
  call void @llvm.memset.p0i8.i64(i8* align 16 %0, i8 0, i64 272, i1 false), !dbg !11057
  call void @llvm.dbg.declare(metadata i32* %err, metadata !11058, metadata !DIExpression()), !dbg !11059
  %1 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %mdev.addr, align 8, !dbg !11060
  %2 = load i16, i16* %vport.addr, align 2, !dbg !11061
  %arraydecay = getelementptr inbounds [68 x i32], [68 x i32]* %out, i64 0, i64 0, !dbg !11062
  %call = call i32 @mlx5_query_nic_vport_context(%struct.mlx5_core_dev* %1, i16 zeroext %2, i32* %arraydecay) #9, !dbg !11063
  store i32 %call, i32* %err, align 4, !dbg !11064
  %3 = load i32, i32* %err, align 4, !dbg !11065
  %tobool = icmp ne i32 %3, 0, !dbg !11065
  br i1 %tobool, label %if.end, label %if.then, !dbg !11067

if.then:                                          ; preds = %entry
  %arraydecay1 = getelementptr inbounds [68 x i32], [68 x i32]* %out, i64 0, i64 0, !dbg !11068
  %add.ptr = getelementptr i32, i32* %arraydecay1, i64 4, !dbg !11068
  %4 = load i32, i32* %add.ptr, align 4, !dbg !11068
  %5 = call i1 @llvm.is.constant.i32(i32 %4), !dbg !11068
  br i1 %5, label %cond.true, label %cond.false, !dbg !11068

cond.true:                                        ; preds = %if.then
  %arraydecay2 = getelementptr inbounds [68 x i32], [68 x i32]* %out, i64 0, i64 0, !dbg !11068
  %add.ptr3 = getelementptr i32, i32* %arraydecay2, i64 4, !dbg !11068
  %6 = load i32, i32* %add.ptr3, align 4, !dbg !11068
  %and = and i32 %6, 255, !dbg !11068
  %shl = shl i32 %and, 24, !dbg !11068
  %arraydecay4 = getelementptr inbounds [68 x i32], [68 x i32]* %out, i64 0, i64 0, !dbg !11068
  %add.ptr5 = getelementptr i32, i32* %arraydecay4, i64 4, !dbg !11068
  %7 = load i32, i32* %add.ptr5, align 4, !dbg !11068
  %and6 = and i32 %7, 65280, !dbg !11068
  %shl7 = shl i32 %and6, 8, !dbg !11068
  %or = or i32 %shl, %shl7, !dbg !11068
  %arraydecay8 = getelementptr inbounds [68 x i32], [68 x i32]* %out, i64 0, i64 0, !dbg !11068
  %add.ptr9 = getelementptr i32, i32* %arraydecay8, i64 4, !dbg !11068
  %8 = load i32, i32* %add.ptr9, align 4, !dbg !11068
  %and10 = and i32 %8, 16711680, !dbg !11068
  %shr = lshr i32 %and10, 8, !dbg !11068
  %or11 = or i32 %or, %shr, !dbg !11068
  %arraydecay12 = getelementptr inbounds [68 x i32], [68 x i32]* %out, i64 0, i64 0, !dbg !11068
  %add.ptr13 = getelementptr i32, i32* %arraydecay12, i64 4, !dbg !11068
  %9 = load i32, i32* %add.ptr13, align 4, !dbg !11068
  %and14 = and i32 %9, -16777216, !dbg !11068
  %shr15 = lshr i32 %and14, 24, !dbg !11068
  %or16 = or i32 %or11, %shr15, !dbg !11068
  br label %cond.end, !dbg !11068

cond.false:                                       ; preds = %if.then
  %arraydecay17 = getelementptr inbounds [68 x i32], [68 x i32]* %out, i64 0, i64 0, !dbg !11068
  %add.ptr18 = getelementptr i32, i32* %arraydecay17, i64 4, !dbg !11068
  %10 = load i32, i32* %add.ptr18, align 4, !dbg !11068
  %call19 = call i32 @__fswab32(i32 %10) #8, !dbg !11068
  br label %cond.end, !dbg !11068

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %or16, %cond.true ], [ %call19, %cond.false ], !dbg !11068
  %shr20 = lshr i32 %cond, 24, !dbg !11068
  %and21 = and i32 %shr20, 7, !dbg !11068
  %conv = trunc i32 %and21 to i8, !dbg !11068
  %11 = load i8*, i8** %min_inline.addr, align 8, !dbg !11069
  store i8 %conv, i8* %11, align 1, !dbg !11070
  br label %if.end, !dbg !11071

if.end:                                           ; preds = %cond.end, %entry
  %12 = load i32, i32* %err, align 4, !dbg !11072
  ret i32 %12, !dbg !11073
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlx5_query_nic_vport_context(%struct.mlx5_core_dev* %mdev, i16 zeroext %vport, i32* %out) #0 !dbg !11074 {
entry:
  %mdev.addr = alloca %struct.mlx5_core_dev*, align 8
  %vport.addr = alloca i16, align 2
  %out.addr = alloca i32*, align 8
  %in = alloca [4 x i32], align 16
  %_v = alloca i32, align 4
  %_v203 = alloca i32, align 4
  %_v418 = alloca i32, align 4
  %tmp = alloca i32, align 4
  store %struct.mlx5_core_dev* %mdev, %struct.mlx5_core_dev** %mdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_core_dev** %mdev.addr, metadata !11077, metadata !DIExpression()), !dbg !11078
  store i16 %vport, i16* %vport.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %vport.addr, metadata !11079, metadata !DIExpression()), !dbg !11080
  store i32* %out, i32** %out.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %out.addr, metadata !11081, metadata !DIExpression()), !dbg !11082
  call void @llvm.dbg.declare(metadata [4 x i32]* %in, metadata !11083, metadata !DIExpression()), !dbg !11084
  %0 = bitcast [4 x i32]* %in to i8*, !dbg !11084
  call void @llvm.memset.p0i8.i64(i8* align 16 %0, i8 0, i64 16, i1 false), !dbg !11084
  br label %do.body, !dbg !11085

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %_v, metadata !11086, metadata !DIExpression()), !dbg !11088
  store i32 1876, i32* %_v, align 4, !dbg !11088
  br label %do.body1, !dbg !11088

do.body1:                                         ; preds = %do.body
  br label %do.end, !dbg !11089

do.end:                                           ; preds = %do.body1
  %arraydecay = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11088
  %add.ptr = getelementptr i32, i32* %arraydecay, i64 0, !dbg !11088
  %1 = load i32, i32* %add.ptr, align 4, !dbg !11088
  %2 = call i1 @llvm.is.constant.i32(i32 %1), !dbg !11088
  br i1 %2, label %cond.true, label %cond.false, !dbg !11088

cond.true:                                        ; preds = %do.end
  %arraydecay2 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11088
  %add.ptr3 = getelementptr i32, i32* %arraydecay2, i64 0, !dbg !11088
  %3 = load i32, i32* %add.ptr3, align 4, !dbg !11088
  %and = and i32 %3, 255, !dbg !11088
  %shl = shl i32 %and, 24, !dbg !11088
  %arraydecay4 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11088
  %add.ptr5 = getelementptr i32, i32* %arraydecay4, i64 0, !dbg !11088
  %4 = load i32, i32* %add.ptr5, align 4, !dbg !11088
  %and6 = and i32 %4, 65280, !dbg !11088
  %shl7 = shl i32 %and6, 8, !dbg !11088
  %or = or i32 %shl, %shl7, !dbg !11088
  %arraydecay8 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11088
  %add.ptr9 = getelementptr i32, i32* %arraydecay8, i64 0, !dbg !11088
  %5 = load i32, i32* %add.ptr9, align 4, !dbg !11088
  %and10 = and i32 %5, 16711680, !dbg !11088
  %shr = lshr i32 %and10, 8, !dbg !11088
  %or11 = or i32 %or, %shr, !dbg !11088
  %arraydecay12 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11088
  %add.ptr13 = getelementptr i32, i32* %arraydecay12, i64 0, !dbg !11088
  %6 = load i32, i32* %add.ptr13, align 4, !dbg !11088
  %and14 = and i32 %6, -16777216, !dbg !11088
  %shr15 = lshr i32 %and14, 24, !dbg !11088
  %or16 = or i32 %or11, %shr15, !dbg !11088
  br label %cond.end, !dbg !11088

cond.false:                                       ; preds = %do.end
  %arraydecay17 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11088
  %add.ptr18 = getelementptr i32, i32* %arraydecay17, i64 0, !dbg !11088
  %7 = load i32, i32* %add.ptr18, align 4, !dbg !11088
  %call = call i32 @__fswab32(i32 %7) #8, !dbg !11088
  br label %cond.end, !dbg !11088

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %or16, %cond.true ], [ %call, %cond.false ], !dbg !11088
  %and19 = and i32 %cond, 65535, !dbg !11088
  %8 = load i32, i32* %_v, align 4, !dbg !11088
  %and20 = and i32 %8, 65535, !dbg !11088
  %shl21 = shl i32 %and20, 16, !dbg !11088
  %or22 = or i32 %and19, %shl21, !dbg !11088
  %9 = call i1 @llvm.is.constant.i32(i32 %or22), !dbg !11088
  br i1 %9, label %cond.true23, label %cond.false163, !dbg !11088

cond.true23:                                      ; preds = %cond.end
  %arraydecay24 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11088
  %add.ptr25 = getelementptr i32, i32* %arraydecay24, i64 0, !dbg !11088
  %10 = load i32, i32* %add.ptr25, align 4, !dbg !11088
  %11 = call i1 @llvm.is.constant.i32(i32 %10), !dbg !11088
  br i1 %11, label %cond.true26, label %cond.false46, !dbg !11088

cond.true26:                                      ; preds = %cond.true23
  %arraydecay27 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11088
  %add.ptr28 = getelementptr i32, i32* %arraydecay27, i64 0, !dbg !11088
  %12 = load i32, i32* %add.ptr28, align 4, !dbg !11088
  %and29 = and i32 %12, 255, !dbg !11088
  %shl30 = shl i32 %and29, 24, !dbg !11088
  %arraydecay31 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11088
  %add.ptr32 = getelementptr i32, i32* %arraydecay31, i64 0, !dbg !11088
  %13 = load i32, i32* %add.ptr32, align 4, !dbg !11088
  %and33 = and i32 %13, 65280, !dbg !11088
  %shl34 = shl i32 %and33, 8, !dbg !11088
  %or35 = or i32 %shl30, %shl34, !dbg !11088
  %arraydecay36 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11088
  %add.ptr37 = getelementptr i32, i32* %arraydecay36, i64 0, !dbg !11088
  %14 = load i32, i32* %add.ptr37, align 4, !dbg !11088
  %and38 = and i32 %14, 16711680, !dbg !11088
  %shr39 = lshr i32 %and38, 8, !dbg !11088
  %or40 = or i32 %or35, %shr39, !dbg !11088
  %arraydecay41 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11088
  %add.ptr42 = getelementptr i32, i32* %arraydecay41, i64 0, !dbg !11088
  %15 = load i32, i32* %add.ptr42, align 4, !dbg !11088
  %and43 = and i32 %15, -16777216, !dbg !11088
  %shr44 = lshr i32 %and43, 24, !dbg !11088
  %or45 = or i32 %or40, %shr44, !dbg !11088
  br label %cond.end50, !dbg !11088

cond.false46:                                     ; preds = %cond.true23
  %arraydecay47 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11088
  %add.ptr48 = getelementptr i32, i32* %arraydecay47, i64 0, !dbg !11088
  %16 = load i32, i32* %add.ptr48, align 4, !dbg !11088
  %call49 = call i32 @__fswab32(i32 %16) #8, !dbg !11088
  br label %cond.end50, !dbg !11088

cond.end50:                                       ; preds = %cond.false46, %cond.true26
  %cond51 = phi i32 [ %or45, %cond.true26 ], [ %call49, %cond.false46 ], !dbg !11088
  %and52 = and i32 %cond51, 65535, !dbg !11088
  %17 = load i32, i32* %_v, align 4, !dbg !11088
  %and53 = and i32 %17, 65535, !dbg !11088
  %shl54 = shl i32 %and53, 16, !dbg !11088
  %or55 = or i32 %and52, %shl54, !dbg !11088
  %and56 = and i32 %or55, 255, !dbg !11088
  %shl57 = shl i32 %and56, 24, !dbg !11088
  %arraydecay58 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11088
  %add.ptr59 = getelementptr i32, i32* %arraydecay58, i64 0, !dbg !11088
  %18 = load i32, i32* %add.ptr59, align 4, !dbg !11088
  %19 = call i1 @llvm.is.constant.i32(i32 %18), !dbg !11088
  br i1 %19, label %cond.true60, label %cond.false80, !dbg !11088

cond.true60:                                      ; preds = %cond.end50
  %arraydecay61 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11088
  %add.ptr62 = getelementptr i32, i32* %arraydecay61, i64 0, !dbg !11088
  %20 = load i32, i32* %add.ptr62, align 4, !dbg !11088
  %and63 = and i32 %20, 255, !dbg !11088
  %shl64 = shl i32 %and63, 24, !dbg !11088
  %arraydecay65 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11088
  %add.ptr66 = getelementptr i32, i32* %arraydecay65, i64 0, !dbg !11088
  %21 = load i32, i32* %add.ptr66, align 4, !dbg !11088
  %and67 = and i32 %21, 65280, !dbg !11088
  %shl68 = shl i32 %and67, 8, !dbg !11088
  %or69 = or i32 %shl64, %shl68, !dbg !11088
  %arraydecay70 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11088
  %add.ptr71 = getelementptr i32, i32* %arraydecay70, i64 0, !dbg !11088
  %22 = load i32, i32* %add.ptr71, align 4, !dbg !11088
  %and72 = and i32 %22, 16711680, !dbg !11088
  %shr73 = lshr i32 %and72, 8, !dbg !11088
  %or74 = or i32 %or69, %shr73, !dbg !11088
  %arraydecay75 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11088
  %add.ptr76 = getelementptr i32, i32* %arraydecay75, i64 0, !dbg !11088
  %23 = load i32, i32* %add.ptr76, align 4, !dbg !11088
  %and77 = and i32 %23, -16777216, !dbg !11088
  %shr78 = lshr i32 %and77, 24, !dbg !11088
  %or79 = or i32 %or74, %shr78, !dbg !11088
  br label %cond.end84, !dbg !11088

cond.false80:                                     ; preds = %cond.end50
  %arraydecay81 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11088
  %add.ptr82 = getelementptr i32, i32* %arraydecay81, i64 0, !dbg !11088
  %24 = load i32, i32* %add.ptr82, align 4, !dbg !11088
  %call83 = call i32 @__fswab32(i32 %24) #8, !dbg !11088
  br label %cond.end84, !dbg !11088

cond.end84:                                       ; preds = %cond.false80, %cond.true60
  %cond85 = phi i32 [ %or79, %cond.true60 ], [ %call83, %cond.false80 ], !dbg !11088
  %and86 = and i32 %cond85, 65535, !dbg !11088
  %25 = load i32, i32* %_v, align 4, !dbg !11088
  %and87 = and i32 %25, 65535, !dbg !11088
  %shl88 = shl i32 %and87, 16, !dbg !11088
  %or89 = or i32 %and86, %shl88, !dbg !11088
  %and90 = and i32 %or89, 65280, !dbg !11088
  %shl91 = shl i32 %and90, 8, !dbg !11088
  %or92 = or i32 %shl57, %shl91, !dbg !11088
  %arraydecay93 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11088
  %add.ptr94 = getelementptr i32, i32* %arraydecay93, i64 0, !dbg !11088
  %26 = load i32, i32* %add.ptr94, align 4, !dbg !11088
  %27 = call i1 @llvm.is.constant.i32(i32 %26), !dbg !11088
  br i1 %27, label %cond.true95, label %cond.false115, !dbg !11088

cond.true95:                                      ; preds = %cond.end84
  %arraydecay96 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11088
  %add.ptr97 = getelementptr i32, i32* %arraydecay96, i64 0, !dbg !11088
  %28 = load i32, i32* %add.ptr97, align 4, !dbg !11088
  %and98 = and i32 %28, 255, !dbg !11088
  %shl99 = shl i32 %and98, 24, !dbg !11088
  %arraydecay100 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11088
  %add.ptr101 = getelementptr i32, i32* %arraydecay100, i64 0, !dbg !11088
  %29 = load i32, i32* %add.ptr101, align 4, !dbg !11088
  %and102 = and i32 %29, 65280, !dbg !11088
  %shl103 = shl i32 %and102, 8, !dbg !11088
  %or104 = or i32 %shl99, %shl103, !dbg !11088
  %arraydecay105 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11088
  %add.ptr106 = getelementptr i32, i32* %arraydecay105, i64 0, !dbg !11088
  %30 = load i32, i32* %add.ptr106, align 4, !dbg !11088
  %and107 = and i32 %30, 16711680, !dbg !11088
  %shr108 = lshr i32 %and107, 8, !dbg !11088
  %or109 = or i32 %or104, %shr108, !dbg !11088
  %arraydecay110 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11088
  %add.ptr111 = getelementptr i32, i32* %arraydecay110, i64 0, !dbg !11088
  %31 = load i32, i32* %add.ptr111, align 4, !dbg !11088
  %and112 = and i32 %31, -16777216, !dbg !11088
  %shr113 = lshr i32 %and112, 24, !dbg !11088
  %or114 = or i32 %or109, %shr113, !dbg !11088
  br label %cond.end119, !dbg !11088

cond.false115:                                    ; preds = %cond.end84
  %arraydecay116 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11088
  %add.ptr117 = getelementptr i32, i32* %arraydecay116, i64 0, !dbg !11088
  %32 = load i32, i32* %add.ptr117, align 4, !dbg !11088
  %call118 = call i32 @__fswab32(i32 %32) #8, !dbg !11088
  br label %cond.end119, !dbg !11088

cond.end119:                                      ; preds = %cond.false115, %cond.true95
  %cond120 = phi i32 [ %or114, %cond.true95 ], [ %call118, %cond.false115 ], !dbg !11088
  %and121 = and i32 %cond120, 65535, !dbg !11088
  %33 = load i32, i32* %_v, align 4, !dbg !11088
  %and122 = and i32 %33, 65535, !dbg !11088
  %shl123 = shl i32 %and122, 16, !dbg !11088
  %or124 = or i32 %and121, %shl123, !dbg !11088
  %and125 = and i32 %or124, 16711680, !dbg !11088
  %shr126 = lshr i32 %and125, 8, !dbg !11088
  %or127 = or i32 %or92, %shr126, !dbg !11088
  %arraydecay128 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11088
  %add.ptr129 = getelementptr i32, i32* %arraydecay128, i64 0, !dbg !11088
  %34 = load i32, i32* %add.ptr129, align 4, !dbg !11088
  %35 = call i1 @llvm.is.constant.i32(i32 %34), !dbg !11088
  br i1 %35, label %cond.true130, label %cond.false150, !dbg !11088

cond.true130:                                     ; preds = %cond.end119
  %arraydecay131 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11088
  %add.ptr132 = getelementptr i32, i32* %arraydecay131, i64 0, !dbg !11088
  %36 = load i32, i32* %add.ptr132, align 4, !dbg !11088
  %and133 = and i32 %36, 255, !dbg !11088
  %shl134 = shl i32 %and133, 24, !dbg !11088
  %arraydecay135 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11088
  %add.ptr136 = getelementptr i32, i32* %arraydecay135, i64 0, !dbg !11088
  %37 = load i32, i32* %add.ptr136, align 4, !dbg !11088
  %and137 = and i32 %37, 65280, !dbg !11088
  %shl138 = shl i32 %and137, 8, !dbg !11088
  %or139 = or i32 %shl134, %shl138, !dbg !11088
  %arraydecay140 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11088
  %add.ptr141 = getelementptr i32, i32* %arraydecay140, i64 0, !dbg !11088
  %38 = load i32, i32* %add.ptr141, align 4, !dbg !11088
  %and142 = and i32 %38, 16711680, !dbg !11088
  %shr143 = lshr i32 %and142, 8, !dbg !11088
  %or144 = or i32 %or139, %shr143, !dbg !11088
  %arraydecay145 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11088
  %add.ptr146 = getelementptr i32, i32* %arraydecay145, i64 0, !dbg !11088
  %39 = load i32, i32* %add.ptr146, align 4, !dbg !11088
  %and147 = and i32 %39, -16777216, !dbg !11088
  %shr148 = lshr i32 %and147, 24, !dbg !11088
  %or149 = or i32 %or144, %shr148, !dbg !11088
  br label %cond.end154, !dbg !11088

cond.false150:                                    ; preds = %cond.end119
  %arraydecay151 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11088
  %add.ptr152 = getelementptr i32, i32* %arraydecay151, i64 0, !dbg !11088
  %40 = load i32, i32* %add.ptr152, align 4, !dbg !11088
  %call153 = call i32 @__fswab32(i32 %40) #8, !dbg !11088
  br label %cond.end154, !dbg !11088

cond.end154:                                      ; preds = %cond.false150, %cond.true130
  %cond155 = phi i32 [ %or149, %cond.true130 ], [ %call153, %cond.false150 ], !dbg !11088
  %and156 = and i32 %cond155, 65535, !dbg !11088
  %41 = load i32, i32* %_v, align 4, !dbg !11088
  %and157 = and i32 %41, 65535, !dbg !11088
  %shl158 = shl i32 %and157, 16, !dbg !11088
  %or159 = or i32 %and156, %shl158, !dbg !11088
  %and160 = and i32 %or159, -16777216, !dbg !11088
  %shr161 = lshr i32 %and160, 24, !dbg !11088
  %or162 = or i32 %or127, %shr161, !dbg !11088
  br label %cond.end197, !dbg !11088

cond.false163:                                    ; preds = %cond.end
  %arraydecay164 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11088
  %add.ptr165 = getelementptr i32, i32* %arraydecay164, i64 0, !dbg !11088
  %42 = load i32, i32* %add.ptr165, align 4, !dbg !11088
  %43 = call i1 @llvm.is.constant.i32(i32 %42), !dbg !11088
  br i1 %43, label %cond.true166, label %cond.false186, !dbg !11088

cond.true166:                                     ; preds = %cond.false163
  %arraydecay167 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11088
  %add.ptr168 = getelementptr i32, i32* %arraydecay167, i64 0, !dbg !11088
  %44 = load i32, i32* %add.ptr168, align 4, !dbg !11088
  %and169 = and i32 %44, 255, !dbg !11088
  %shl170 = shl i32 %and169, 24, !dbg !11088
  %arraydecay171 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11088
  %add.ptr172 = getelementptr i32, i32* %arraydecay171, i64 0, !dbg !11088
  %45 = load i32, i32* %add.ptr172, align 4, !dbg !11088
  %and173 = and i32 %45, 65280, !dbg !11088
  %shl174 = shl i32 %and173, 8, !dbg !11088
  %or175 = or i32 %shl170, %shl174, !dbg !11088
  %arraydecay176 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11088
  %add.ptr177 = getelementptr i32, i32* %arraydecay176, i64 0, !dbg !11088
  %46 = load i32, i32* %add.ptr177, align 4, !dbg !11088
  %and178 = and i32 %46, 16711680, !dbg !11088
  %shr179 = lshr i32 %and178, 8, !dbg !11088
  %or180 = or i32 %or175, %shr179, !dbg !11088
  %arraydecay181 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11088
  %add.ptr182 = getelementptr i32, i32* %arraydecay181, i64 0, !dbg !11088
  %47 = load i32, i32* %add.ptr182, align 4, !dbg !11088
  %and183 = and i32 %47, -16777216, !dbg !11088
  %shr184 = lshr i32 %and183, 24, !dbg !11088
  %or185 = or i32 %or180, %shr184, !dbg !11088
  br label %cond.end190, !dbg !11088

cond.false186:                                    ; preds = %cond.false163
  %arraydecay187 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11088
  %add.ptr188 = getelementptr i32, i32* %arraydecay187, i64 0, !dbg !11088
  %48 = load i32, i32* %add.ptr188, align 4, !dbg !11088
  %call189 = call i32 @__fswab32(i32 %48) #8, !dbg !11088
  br label %cond.end190, !dbg !11088

cond.end190:                                      ; preds = %cond.false186, %cond.true166
  %cond191 = phi i32 [ %or185, %cond.true166 ], [ %call189, %cond.false186 ], !dbg !11088
  %and192 = and i32 %cond191, 65535, !dbg !11088
  %49 = load i32, i32* %_v, align 4, !dbg !11088
  %and193 = and i32 %49, 65535, !dbg !11088
  %shl194 = shl i32 %and193, 16, !dbg !11088
  %or195 = or i32 %and192, %shl194, !dbg !11088
  %call196 = call i32 @__fswab32(i32 %or195) #8, !dbg !11088
  br label %cond.end197, !dbg !11088

cond.end197:                                      ; preds = %cond.end190, %cond.end154
  %cond198 = phi i32 [ %or162, %cond.end154 ], [ %call196, %cond.end190 ], !dbg !11088
  %arraydecay199 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11088
  %add.ptr200 = getelementptr i32, i32* %arraydecay199, i64 0, !dbg !11088
  store i32 %cond198, i32* %add.ptr200, align 4, !dbg !11088
  br label %do.end201, !dbg !11088

do.end201:                                        ; preds = %cond.end197
  br label %do.body202, !dbg !11091

do.body202:                                       ; preds = %do.end201
  call void @llvm.dbg.declare(metadata i32* %_v203, metadata !11092, metadata !DIExpression()), !dbg !11094
  %50 = load i16, i16* %vport.addr, align 2, !dbg !11094
  %conv = zext i16 %50 to i32, !dbg !11094
  store i32 %conv, i32* %_v203, align 4, !dbg !11094
  br label %do.body204, !dbg !11094

do.body204:                                       ; preds = %do.body202
  br label %do.end205, !dbg !11095

do.end205:                                        ; preds = %do.body204
  %arraydecay206 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11094
  %add.ptr207 = getelementptr i32, i32* %arraydecay206, i64 2, !dbg !11094
  %51 = load i32, i32* %add.ptr207, align 4, !dbg !11094
  %52 = call i1 @llvm.is.constant.i32(i32 %51), !dbg !11094
  br i1 %52, label %cond.true208, label %cond.false228, !dbg !11094

cond.true208:                                     ; preds = %do.end205
  %arraydecay209 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11094
  %add.ptr210 = getelementptr i32, i32* %arraydecay209, i64 2, !dbg !11094
  %53 = load i32, i32* %add.ptr210, align 4, !dbg !11094
  %and211 = and i32 %53, 255, !dbg !11094
  %shl212 = shl i32 %and211, 24, !dbg !11094
  %arraydecay213 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11094
  %add.ptr214 = getelementptr i32, i32* %arraydecay213, i64 2, !dbg !11094
  %54 = load i32, i32* %add.ptr214, align 4, !dbg !11094
  %and215 = and i32 %54, 65280, !dbg !11094
  %shl216 = shl i32 %and215, 8, !dbg !11094
  %or217 = or i32 %shl212, %shl216, !dbg !11094
  %arraydecay218 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11094
  %add.ptr219 = getelementptr i32, i32* %arraydecay218, i64 2, !dbg !11094
  %55 = load i32, i32* %add.ptr219, align 4, !dbg !11094
  %and220 = and i32 %55, 16711680, !dbg !11094
  %shr221 = lshr i32 %and220, 8, !dbg !11094
  %or222 = or i32 %or217, %shr221, !dbg !11094
  %arraydecay223 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11094
  %add.ptr224 = getelementptr i32, i32* %arraydecay223, i64 2, !dbg !11094
  %56 = load i32, i32* %add.ptr224, align 4, !dbg !11094
  %and225 = and i32 %56, -16777216, !dbg !11094
  %shr226 = lshr i32 %and225, 24, !dbg !11094
  %or227 = or i32 %or222, %shr226, !dbg !11094
  br label %cond.end232, !dbg !11094

cond.false228:                                    ; preds = %do.end205
  %arraydecay229 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11094
  %add.ptr230 = getelementptr i32, i32* %arraydecay229, i64 2, !dbg !11094
  %57 = load i32, i32* %add.ptr230, align 4, !dbg !11094
  %call231 = call i32 @__fswab32(i32 %57) #8, !dbg !11094
  br label %cond.end232, !dbg !11094

cond.end232:                                      ; preds = %cond.false228, %cond.true208
  %cond233 = phi i32 [ %or227, %cond.true208 ], [ %call231, %cond.false228 ], !dbg !11094
  %and234 = and i32 %cond233, -65536, !dbg !11094
  %58 = load i32, i32* %_v203, align 4, !dbg !11094
  %and235 = and i32 %58, 65535, !dbg !11094
  %shl236 = shl i32 %and235, 0, !dbg !11094
  %or237 = or i32 %and234, %shl236, !dbg !11094
  %59 = call i1 @llvm.is.constant.i32(i32 %or237), !dbg !11094
  br i1 %59, label %cond.true238, label %cond.false378, !dbg !11094

cond.true238:                                     ; preds = %cond.end232
  %arraydecay239 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11094
  %add.ptr240 = getelementptr i32, i32* %arraydecay239, i64 2, !dbg !11094
  %60 = load i32, i32* %add.ptr240, align 4, !dbg !11094
  %61 = call i1 @llvm.is.constant.i32(i32 %60), !dbg !11094
  br i1 %61, label %cond.true241, label %cond.false261, !dbg !11094

cond.true241:                                     ; preds = %cond.true238
  %arraydecay242 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11094
  %add.ptr243 = getelementptr i32, i32* %arraydecay242, i64 2, !dbg !11094
  %62 = load i32, i32* %add.ptr243, align 4, !dbg !11094
  %and244 = and i32 %62, 255, !dbg !11094
  %shl245 = shl i32 %and244, 24, !dbg !11094
  %arraydecay246 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11094
  %add.ptr247 = getelementptr i32, i32* %arraydecay246, i64 2, !dbg !11094
  %63 = load i32, i32* %add.ptr247, align 4, !dbg !11094
  %and248 = and i32 %63, 65280, !dbg !11094
  %shl249 = shl i32 %and248, 8, !dbg !11094
  %or250 = or i32 %shl245, %shl249, !dbg !11094
  %arraydecay251 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11094
  %add.ptr252 = getelementptr i32, i32* %arraydecay251, i64 2, !dbg !11094
  %64 = load i32, i32* %add.ptr252, align 4, !dbg !11094
  %and253 = and i32 %64, 16711680, !dbg !11094
  %shr254 = lshr i32 %and253, 8, !dbg !11094
  %or255 = or i32 %or250, %shr254, !dbg !11094
  %arraydecay256 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11094
  %add.ptr257 = getelementptr i32, i32* %arraydecay256, i64 2, !dbg !11094
  %65 = load i32, i32* %add.ptr257, align 4, !dbg !11094
  %and258 = and i32 %65, -16777216, !dbg !11094
  %shr259 = lshr i32 %and258, 24, !dbg !11094
  %or260 = or i32 %or255, %shr259, !dbg !11094
  br label %cond.end265, !dbg !11094

cond.false261:                                    ; preds = %cond.true238
  %arraydecay262 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11094
  %add.ptr263 = getelementptr i32, i32* %arraydecay262, i64 2, !dbg !11094
  %66 = load i32, i32* %add.ptr263, align 4, !dbg !11094
  %call264 = call i32 @__fswab32(i32 %66) #8, !dbg !11094
  br label %cond.end265, !dbg !11094

cond.end265:                                      ; preds = %cond.false261, %cond.true241
  %cond266 = phi i32 [ %or260, %cond.true241 ], [ %call264, %cond.false261 ], !dbg !11094
  %and267 = and i32 %cond266, -65536, !dbg !11094
  %67 = load i32, i32* %_v203, align 4, !dbg !11094
  %and268 = and i32 %67, 65535, !dbg !11094
  %shl269 = shl i32 %and268, 0, !dbg !11094
  %or270 = or i32 %and267, %shl269, !dbg !11094
  %and271 = and i32 %or270, 255, !dbg !11094
  %shl272 = shl i32 %and271, 24, !dbg !11094
  %arraydecay273 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11094
  %add.ptr274 = getelementptr i32, i32* %arraydecay273, i64 2, !dbg !11094
  %68 = load i32, i32* %add.ptr274, align 4, !dbg !11094
  %69 = call i1 @llvm.is.constant.i32(i32 %68), !dbg !11094
  br i1 %69, label %cond.true275, label %cond.false295, !dbg !11094

cond.true275:                                     ; preds = %cond.end265
  %arraydecay276 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11094
  %add.ptr277 = getelementptr i32, i32* %arraydecay276, i64 2, !dbg !11094
  %70 = load i32, i32* %add.ptr277, align 4, !dbg !11094
  %and278 = and i32 %70, 255, !dbg !11094
  %shl279 = shl i32 %and278, 24, !dbg !11094
  %arraydecay280 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11094
  %add.ptr281 = getelementptr i32, i32* %arraydecay280, i64 2, !dbg !11094
  %71 = load i32, i32* %add.ptr281, align 4, !dbg !11094
  %and282 = and i32 %71, 65280, !dbg !11094
  %shl283 = shl i32 %and282, 8, !dbg !11094
  %or284 = or i32 %shl279, %shl283, !dbg !11094
  %arraydecay285 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11094
  %add.ptr286 = getelementptr i32, i32* %arraydecay285, i64 2, !dbg !11094
  %72 = load i32, i32* %add.ptr286, align 4, !dbg !11094
  %and287 = and i32 %72, 16711680, !dbg !11094
  %shr288 = lshr i32 %and287, 8, !dbg !11094
  %or289 = or i32 %or284, %shr288, !dbg !11094
  %arraydecay290 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11094
  %add.ptr291 = getelementptr i32, i32* %arraydecay290, i64 2, !dbg !11094
  %73 = load i32, i32* %add.ptr291, align 4, !dbg !11094
  %and292 = and i32 %73, -16777216, !dbg !11094
  %shr293 = lshr i32 %and292, 24, !dbg !11094
  %or294 = or i32 %or289, %shr293, !dbg !11094
  br label %cond.end299, !dbg !11094

cond.false295:                                    ; preds = %cond.end265
  %arraydecay296 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11094
  %add.ptr297 = getelementptr i32, i32* %arraydecay296, i64 2, !dbg !11094
  %74 = load i32, i32* %add.ptr297, align 4, !dbg !11094
  %call298 = call i32 @__fswab32(i32 %74) #8, !dbg !11094
  br label %cond.end299, !dbg !11094

cond.end299:                                      ; preds = %cond.false295, %cond.true275
  %cond300 = phi i32 [ %or294, %cond.true275 ], [ %call298, %cond.false295 ], !dbg !11094
  %and301 = and i32 %cond300, -65536, !dbg !11094
  %75 = load i32, i32* %_v203, align 4, !dbg !11094
  %and302 = and i32 %75, 65535, !dbg !11094
  %shl303 = shl i32 %and302, 0, !dbg !11094
  %or304 = or i32 %and301, %shl303, !dbg !11094
  %and305 = and i32 %or304, 65280, !dbg !11094
  %shl306 = shl i32 %and305, 8, !dbg !11094
  %or307 = or i32 %shl272, %shl306, !dbg !11094
  %arraydecay308 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11094
  %add.ptr309 = getelementptr i32, i32* %arraydecay308, i64 2, !dbg !11094
  %76 = load i32, i32* %add.ptr309, align 4, !dbg !11094
  %77 = call i1 @llvm.is.constant.i32(i32 %76), !dbg !11094
  br i1 %77, label %cond.true310, label %cond.false330, !dbg !11094

cond.true310:                                     ; preds = %cond.end299
  %arraydecay311 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11094
  %add.ptr312 = getelementptr i32, i32* %arraydecay311, i64 2, !dbg !11094
  %78 = load i32, i32* %add.ptr312, align 4, !dbg !11094
  %and313 = and i32 %78, 255, !dbg !11094
  %shl314 = shl i32 %and313, 24, !dbg !11094
  %arraydecay315 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11094
  %add.ptr316 = getelementptr i32, i32* %arraydecay315, i64 2, !dbg !11094
  %79 = load i32, i32* %add.ptr316, align 4, !dbg !11094
  %and317 = and i32 %79, 65280, !dbg !11094
  %shl318 = shl i32 %and317, 8, !dbg !11094
  %or319 = or i32 %shl314, %shl318, !dbg !11094
  %arraydecay320 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11094
  %add.ptr321 = getelementptr i32, i32* %arraydecay320, i64 2, !dbg !11094
  %80 = load i32, i32* %add.ptr321, align 4, !dbg !11094
  %and322 = and i32 %80, 16711680, !dbg !11094
  %shr323 = lshr i32 %and322, 8, !dbg !11094
  %or324 = or i32 %or319, %shr323, !dbg !11094
  %arraydecay325 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11094
  %add.ptr326 = getelementptr i32, i32* %arraydecay325, i64 2, !dbg !11094
  %81 = load i32, i32* %add.ptr326, align 4, !dbg !11094
  %and327 = and i32 %81, -16777216, !dbg !11094
  %shr328 = lshr i32 %and327, 24, !dbg !11094
  %or329 = or i32 %or324, %shr328, !dbg !11094
  br label %cond.end334, !dbg !11094

cond.false330:                                    ; preds = %cond.end299
  %arraydecay331 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11094
  %add.ptr332 = getelementptr i32, i32* %arraydecay331, i64 2, !dbg !11094
  %82 = load i32, i32* %add.ptr332, align 4, !dbg !11094
  %call333 = call i32 @__fswab32(i32 %82) #8, !dbg !11094
  br label %cond.end334, !dbg !11094

cond.end334:                                      ; preds = %cond.false330, %cond.true310
  %cond335 = phi i32 [ %or329, %cond.true310 ], [ %call333, %cond.false330 ], !dbg !11094
  %and336 = and i32 %cond335, -65536, !dbg !11094
  %83 = load i32, i32* %_v203, align 4, !dbg !11094
  %and337 = and i32 %83, 65535, !dbg !11094
  %shl338 = shl i32 %and337, 0, !dbg !11094
  %or339 = or i32 %and336, %shl338, !dbg !11094
  %and340 = and i32 %or339, 16711680, !dbg !11094
  %shr341 = lshr i32 %and340, 8, !dbg !11094
  %or342 = or i32 %or307, %shr341, !dbg !11094
  %arraydecay343 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11094
  %add.ptr344 = getelementptr i32, i32* %arraydecay343, i64 2, !dbg !11094
  %84 = load i32, i32* %add.ptr344, align 4, !dbg !11094
  %85 = call i1 @llvm.is.constant.i32(i32 %84), !dbg !11094
  br i1 %85, label %cond.true345, label %cond.false365, !dbg !11094

cond.true345:                                     ; preds = %cond.end334
  %arraydecay346 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11094
  %add.ptr347 = getelementptr i32, i32* %arraydecay346, i64 2, !dbg !11094
  %86 = load i32, i32* %add.ptr347, align 4, !dbg !11094
  %and348 = and i32 %86, 255, !dbg !11094
  %shl349 = shl i32 %and348, 24, !dbg !11094
  %arraydecay350 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11094
  %add.ptr351 = getelementptr i32, i32* %arraydecay350, i64 2, !dbg !11094
  %87 = load i32, i32* %add.ptr351, align 4, !dbg !11094
  %and352 = and i32 %87, 65280, !dbg !11094
  %shl353 = shl i32 %and352, 8, !dbg !11094
  %or354 = or i32 %shl349, %shl353, !dbg !11094
  %arraydecay355 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11094
  %add.ptr356 = getelementptr i32, i32* %arraydecay355, i64 2, !dbg !11094
  %88 = load i32, i32* %add.ptr356, align 4, !dbg !11094
  %and357 = and i32 %88, 16711680, !dbg !11094
  %shr358 = lshr i32 %and357, 8, !dbg !11094
  %or359 = or i32 %or354, %shr358, !dbg !11094
  %arraydecay360 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11094
  %add.ptr361 = getelementptr i32, i32* %arraydecay360, i64 2, !dbg !11094
  %89 = load i32, i32* %add.ptr361, align 4, !dbg !11094
  %and362 = and i32 %89, -16777216, !dbg !11094
  %shr363 = lshr i32 %and362, 24, !dbg !11094
  %or364 = or i32 %or359, %shr363, !dbg !11094
  br label %cond.end369, !dbg !11094

cond.false365:                                    ; preds = %cond.end334
  %arraydecay366 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11094
  %add.ptr367 = getelementptr i32, i32* %arraydecay366, i64 2, !dbg !11094
  %90 = load i32, i32* %add.ptr367, align 4, !dbg !11094
  %call368 = call i32 @__fswab32(i32 %90) #8, !dbg !11094
  br label %cond.end369, !dbg !11094

cond.end369:                                      ; preds = %cond.false365, %cond.true345
  %cond370 = phi i32 [ %or364, %cond.true345 ], [ %call368, %cond.false365 ], !dbg !11094
  %and371 = and i32 %cond370, -65536, !dbg !11094
  %91 = load i32, i32* %_v203, align 4, !dbg !11094
  %and372 = and i32 %91, 65535, !dbg !11094
  %shl373 = shl i32 %and372, 0, !dbg !11094
  %or374 = or i32 %and371, %shl373, !dbg !11094
  %and375 = and i32 %or374, -16777216, !dbg !11094
  %shr376 = lshr i32 %and375, 24, !dbg !11094
  %or377 = or i32 %or342, %shr376, !dbg !11094
  br label %cond.end412, !dbg !11094

cond.false378:                                    ; preds = %cond.end232
  %arraydecay379 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11094
  %add.ptr380 = getelementptr i32, i32* %arraydecay379, i64 2, !dbg !11094
  %92 = load i32, i32* %add.ptr380, align 4, !dbg !11094
  %93 = call i1 @llvm.is.constant.i32(i32 %92), !dbg !11094
  br i1 %93, label %cond.true381, label %cond.false401, !dbg !11094

cond.true381:                                     ; preds = %cond.false378
  %arraydecay382 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11094
  %add.ptr383 = getelementptr i32, i32* %arraydecay382, i64 2, !dbg !11094
  %94 = load i32, i32* %add.ptr383, align 4, !dbg !11094
  %and384 = and i32 %94, 255, !dbg !11094
  %shl385 = shl i32 %and384, 24, !dbg !11094
  %arraydecay386 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11094
  %add.ptr387 = getelementptr i32, i32* %arraydecay386, i64 2, !dbg !11094
  %95 = load i32, i32* %add.ptr387, align 4, !dbg !11094
  %and388 = and i32 %95, 65280, !dbg !11094
  %shl389 = shl i32 %and388, 8, !dbg !11094
  %or390 = or i32 %shl385, %shl389, !dbg !11094
  %arraydecay391 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11094
  %add.ptr392 = getelementptr i32, i32* %arraydecay391, i64 2, !dbg !11094
  %96 = load i32, i32* %add.ptr392, align 4, !dbg !11094
  %and393 = and i32 %96, 16711680, !dbg !11094
  %shr394 = lshr i32 %and393, 8, !dbg !11094
  %or395 = or i32 %or390, %shr394, !dbg !11094
  %arraydecay396 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11094
  %add.ptr397 = getelementptr i32, i32* %arraydecay396, i64 2, !dbg !11094
  %97 = load i32, i32* %add.ptr397, align 4, !dbg !11094
  %and398 = and i32 %97, -16777216, !dbg !11094
  %shr399 = lshr i32 %and398, 24, !dbg !11094
  %or400 = or i32 %or395, %shr399, !dbg !11094
  br label %cond.end405, !dbg !11094

cond.false401:                                    ; preds = %cond.false378
  %arraydecay402 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11094
  %add.ptr403 = getelementptr i32, i32* %arraydecay402, i64 2, !dbg !11094
  %98 = load i32, i32* %add.ptr403, align 4, !dbg !11094
  %call404 = call i32 @__fswab32(i32 %98) #8, !dbg !11094
  br label %cond.end405, !dbg !11094

cond.end405:                                      ; preds = %cond.false401, %cond.true381
  %cond406 = phi i32 [ %or400, %cond.true381 ], [ %call404, %cond.false401 ], !dbg !11094
  %and407 = and i32 %cond406, -65536, !dbg !11094
  %99 = load i32, i32* %_v203, align 4, !dbg !11094
  %and408 = and i32 %99, 65535, !dbg !11094
  %shl409 = shl i32 %and408, 0, !dbg !11094
  %or410 = or i32 %and407, %shl409, !dbg !11094
  %call411 = call i32 @__fswab32(i32 %or410) #8, !dbg !11094
  br label %cond.end412, !dbg !11094

cond.end412:                                      ; preds = %cond.end405, %cond.end369
  %cond413 = phi i32 [ %or377, %cond.end369 ], [ %call411, %cond.end405 ], !dbg !11094
  %arraydecay414 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11094
  %add.ptr415 = getelementptr i32, i32* %arraydecay414, i64 2, !dbg !11094
  store i32 %cond413, i32* %add.ptr415, align 4, !dbg !11094
  br label %do.end416, !dbg !11094

do.end416:                                        ; preds = %cond.end412
  %100 = load i16, i16* %vport.addr, align 2, !dbg !11097
  %tobool = icmp ne i16 %100, 0, !dbg !11097
  br i1 %tobool, label %if.then, label %if.end, !dbg !11099

if.then:                                          ; preds = %do.end416
  br label %do.body417, !dbg !11100

do.body417:                                       ; preds = %if.then
  call void @llvm.dbg.declare(metadata i32* %_v418, metadata !11101, metadata !DIExpression()), !dbg !11103
  store i32 1, i32* %_v418, align 4, !dbg !11103
  br label %do.body419, !dbg !11103

do.body419:                                       ; preds = %do.body417
  br label %do.end420, !dbg !11104

do.end420:                                        ; preds = %do.body419
  %arraydecay421 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11103
  %add.ptr422 = getelementptr i32, i32* %arraydecay421, i64 2, !dbg !11103
  %101 = load i32, i32* %add.ptr422, align 4, !dbg !11103
  %102 = call i1 @llvm.is.constant.i32(i32 %101), !dbg !11103
  br i1 %102, label %cond.true423, label %cond.false443, !dbg !11103

cond.true423:                                     ; preds = %do.end420
  %arraydecay424 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11103
  %add.ptr425 = getelementptr i32, i32* %arraydecay424, i64 2, !dbg !11103
  %103 = load i32, i32* %add.ptr425, align 4, !dbg !11103
  %and426 = and i32 %103, 255, !dbg !11103
  %shl427 = shl i32 %and426, 24, !dbg !11103
  %arraydecay428 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11103
  %add.ptr429 = getelementptr i32, i32* %arraydecay428, i64 2, !dbg !11103
  %104 = load i32, i32* %add.ptr429, align 4, !dbg !11103
  %and430 = and i32 %104, 65280, !dbg !11103
  %shl431 = shl i32 %and430, 8, !dbg !11103
  %or432 = or i32 %shl427, %shl431, !dbg !11103
  %arraydecay433 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11103
  %add.ptr434 = getelementptr i32, i32* %arraydecay433, i64 2, !dbg !11103
  %105 = load i32, i32* %add.ptr434, align 4, !dbg !11103
  %and435 = and i32 %105, 16711680, !dbg !11103
  %shr436 = lshr i32 %and435, 8, !dbg !11103
  %or437 = or i32 %or432, %shr436, !dbg !11103
  %arraydecay438 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11103
  %add.ptr439 = getelementptr i32, i32* %arraydecay438, i64 2, !dbg !11103
  %106 = load i32, i32* %add.ptr439, align 4, !dbg !11103
  %and440 = and i32 %106, -16777216, !dbg !11103
  %shr441 = lshr i32 %and440, 24, !dbg !11103
  %or442 = or i32 %or437, %shr441, !dbg !11103
  br label %cond.end447, !dbg !11103

cond.false443:                                    ; preds = %do.end420
  %arraydecay444 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11103
  %add.ptr445 = getelementptr i32, i32* %arraydecay444, i64 2, !dbg !11103
  %107 = load i32, i32* %add.ptr445, align 4, !dbg !11103
  %call446 = call i32 @__fswab32(i32 %107) #8, !dbg !11103
  br label %cond.end447, !dbg !11103

cond.end447:                                      ; preds = %cond.false443, %cond.true423
  %cond448 = phi i32 [ %or442, %cond.true423 ], [ %call446, %cond.false443 ], !dbg !11103
  %and449 = and i32 %cond448, 2147483647, !dbg !11103
  %108 = load i32, i32* %_v418, align 4, !dbg !11103
  %and450 = and i32 %108, 1, !dbg !11103
  %shl451 = shl i32 %and450, 31, !dbg !11103
  %or452 = or i32 %and449, %shl451, !dbg !11103
  %109 = call i1 @llvm.is.constant.i32(i32 %or452), !dbg !11103
  br i1 %109, label %cond.true453, label %cond.false593, !dbg !11103

cond.true453:                                     ; preds = %cond.end447
  %arraydecay454 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11103
  %add.ptr455 = getelementptr i32, i32* %arraydecay454, i64 2, !dbg !11103
  %110 = load i32, i32* %add.ptr455, align 4, !dbg !11103
  %111 = call i1 @llvm.is.constant.i32(i32 %110), !dbg !11103
  br i1 %111, label %cond.true456, label %cond.false476, !dbg !11103

cond.true456:                                     ; preds = %cond.true453
  %arraydecay457 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11103
  %add.ptr458 = getelementptr i32, i32* %arraydecay457, i64 2, !dbg !11103
  %112 = load i32, i32* %add.ptr458, align 4, !dbg !11103
  %and459 = and i32 %112, 255, !dbg !11103
  %shl460 = shl i32 %and459, 24, !dbg !11103
  %arraydecay461 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11103
  %add.ptr462 = getelementptr i32, i32* %arraydecay461, i64 2, !dbg !11103
  %113 = load i32, i32* %add.ptr462, align 4, !dbg !11103
  %and463 = and i32 %113, 65280, !dbg !11103
  %shl464 = shl i32 %and463, 8, !dbg !11103
  %or465 = or i32 %shl460, %shl464, !dbg !11103
  %arraydecay466 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11103
  %add.ptr467 = getelementptr i32, i32* %arraydecay466, i64 2, !dbg !11103
  %114 = load i32, i32* %add.ptr467, align 4, !dbg !11103
  %and468 = and i32 %114, 16711680, !dbg !11103
  %shr469 = lshr i32 %and468, 8, !dbg !11103
  %or470 = or i32 %or465, %shr469, !dbg !11103
  %arraydecay471 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11103
  %add.ptr472 = getelementptr i32, i32* %arraydecay471, i64 2, !dbg !11103
  %115 = load i32, i32* %add.ptr472, align 4, !dbg !11103
  %and473 = and i32 %115, -16777216, !dbg !11103
  %shr474 = lshr i32 %and473, 24, !dbg !11103
  %or475 = or i32 %or470, %shr474, !dbg !11103
  br label %cond.end480, !dbg !11103

cond.false476:                                    ; preds = %cond.true453
  %arraydecay477 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11103
  %add.ptr478 = getelementptr i32, i32* %arraydecay477, i64 2, !dbg !11103
  %116 = load i32, i32* %add.ptr478, align 4, !dbg !11103
  %call479 = call i32 @__fswab32(i32 %116) #8, !dbg !11103
  br label %cond.end480, !dbg !11103

cond.end480:                                      ; preds = %cond.false476, %cond.true456
  %cond481 = phi i32 [ %or475, %cond.true456 ], [ %call479, %cond.false476 ], !dbg !11103
  %and482 = and i32 %cond481, 2147483647, !dbg !11103
  %117 = load i32, i32* %_v418, align 4, !dbg !11103
  %and483 = and i32 %117, 1, !dbg !11103
  %shl484 = shl i32 %and483, 31, !dbg !11103
  %or485 = or i32 %and482, %shl484, !dbg !11103
  %and486 = and i32 %or485, 255, !dbg !11103
  %shl487 = shl i32 %and486, 24, !dbg !11103
  %arraydecay488 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11103
  %add.ptr489 = getelementptr i32, i32* %arraydecay488, i64 2, !dbg !11103
  %118 = load i32, i32* %add.ptr489, align 4, !dbg !11103
  %119 = call i1 @llvm.is.constant.i32(i32 %118), !dbg !11103
  br i1 %119, label %cond.true490, label %cond.false510, !dbg !11103

cond.true490:                                     ; preds = %cond.end480
  %arraydecay491 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11103
  %add.ptr492 = getelementptr i32, i32* %arraydecay491, i64 2, !dbg !11103
  %120 = load i32, i32* %add.ptr492, align 4, !dbg !11103
  %and493 = and i32 %120, 255, !dbg !11103
  %shl494 = shl i32 %and493, 24, !dbg !11103
  %arraydecay495 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11103
  %add.ptr496 = getelementptr i32, i32* %arraydecay495, i64 2, !dbg !11103
  %121 = load i32, i32* %add.ptr496, align 4, !dbg !11103
  %and497 = and i32 %121, 65280, !dbg !11103
  %shl498 = shl i32 %and497, 8, !dbg !11103
  %or499 = or i32 %shl494, %shl498, !dbg !11103
  %arraydecay500 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11103
  %add.ptr501 = getelementptr i32, i32* %arraydecay500, i64 2, !dbg !11103
  %122 = load i32, i32* %add.ptr501, align 4, !dbg !11103
  %and502 = and i32 %122, 16711680, !dbg !11103
  %shr503 = lshr i32 %and502, 8, !dbg !11103
  %or504 = or i32 %or499, %shr503, !dbg !11103
  %arraydecay505 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11103
  %add.ptr506 = getelementptr i32, i32* %arraydecay505, i64 2, !dbg !11103
  %123 = load i32, i32* %add.ptr506, align 4, !dbg !11103
  %and507 = and i32 %123, -16777216, !dbg !11103
  %shr508 = lshr i32 %and507, 24, !dbg !11103
  %or509 = or i32 %or504, %shr508, !dbg !11103
  br label %cond.end514, !dbg !11103

cond.false510:                                    ; preds = %cond.end480
  %arraydecay511 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11103
  %add.ptr512 = getelementptr i32, i32* %arraydecay511, i64 2, !dbg !11103
  %124 = load i32, i32* %add.ptr512, align 4, !dbg !11103
  %call513 = call i32 @__fswab32(i32 %124) #8, !dbg !11103
  br label %cond.end514, !dbg !11103

cond.end514:                                      ; preds = %cond.false510, %cond.true490
  %cond515 = phi i32 [ %or509, %cond.true490 ], [ %call513, %cond.false510 ], !dbg !11103
  %and516 = and i32 %cond515, 2147483647, !dbg !11103
  %125 = load i32, i32* %_v418, align 4, !dbg !11103
  %and517 = and i32 %125, 1, !dbg !11103
  %shl518 = shl i32 %and517, 31, !dbg !11103
  %or519 = or i32 %and516, %shl518, !dbg !11103
  %and520 = and i32 %or519, 65280, !dbg !11103
  %shl521 = shl i32 %and520, 8, !dbg !11103
  %or522 = or i32 %shl487, %shl521, !dbg !11103
  %arraydecay523 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11103
  %add.ptr524 = getelementptr i32, i32* %arraydecay523, i64 2, !dbg !11103
  %126 = load i32, i32* %add.ptr524, align 4, !dbg !11103
  %127 = call i1 @llvm.is.constant.i32(i32 %126), !dbg !11103
  br i1 %127, label %cond.true525, label %cond.false545, !dbg !11103

cond.true525:                                     ; preds = %cond.end514
  %arraydecay526 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11103
  %add.ptr527 = getelementptr i32, i32* %arraydecay526, i64 2, !dbg !11103
  %128 = load i32, i32* %add.ptr527, align 4, !dbg !11103
  %and528 = and i32 %128, 255, !dbg !11103
  %shl529 = shl i32 %and528, 24, !dbg !11103
  %arraydecay530 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11103
  %add.ptr531 = getelementptr i32, i32* %arraydecay530, i64 2, !dbg !11103
  %129 = load i32, i32* %add.ptr531, align 4, !dbg !11103
  %and532 = and i32 %129, 65280, !dbg !11103
  %shl533 = shl i32 %and532, 8, !dbg !11103
  %or534 = or i32 %shl529, %shl533, !dbg !11103
  %arraydecay535 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11103
  %add.ptr536 = getelementptr i32, i32* %arraydecay535, i64 2, !dbg !11103
  %130 = load i32, i32* %add.ptr536, align 4, !dbg !11103
  %and537 = and i32 %130, 16711680, !dbg !11103
  %shr538 = lshr i32 %and537, 8, !dbg !11103
  %or539 = or i32 %or534, %shr538, !dbg !11103
  %arraydecay540 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11103
  %add.ptr541 = getelementptr i32, i32* %arraydecay540, i64 2, !dbg !11103
  %131 = load i32, i32* %add.ptr541, align 4, !dbg !11103
  %and542 = and i32 %131, -16777216, !dbg !11103
  %shr543 = lshr i32 %and542, 24, !dbg !11103
  %or544 = or i32 %or539, %shr543, !dbg !11103
  br label %cond.end549, !dbg !11103

cond.false545:                                    ; preds = %cond.end514
  %arraydecay546 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11103
  %add.ptr547 = getelementptr i32, i32* %arraydecay546, i64 2, !dbg !11103
  %132 = load i32, i32* %add.ptr547, align 4, !dbg !11103
  %call548 = call i32 @__fswab32(i32 %132) #8, !dbg !11103
  br label %cond.end549, !dbg !11103

cond.end549:                                      ; preds = %cond.false545, %cond.true525
  %cond550 = phi i32 [ %or544, %cond.true525 ], [ %call548, %cond.false545 ], !dbg !11103
  %and551 = and i32 %cond550, 2147483647, !dbg !11103
  %133 = load i32, i32* %_v418, align 4, !dbg !11103
  %and552 = and i32 %133, 1, !dbg !11103
  %shl553 = shl i32 %and552, 31, !dbg !11103
  %or554 = or i32 %and551, %shl553, !dbg !11103
  %and555 = and i32 %or554, 16711680, !dbg !11103
  %shr556 = lshr i32 %and555, 8, !dbg !11103
  %or557 = or i32 %or522, %shr556, !dbg !11103
  %arraydecay558 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11103
  %add.ptr559 = getelementptr i32, i32* %arraydecay558, i64 2, !dbg !11103
  %134 = load i32, i32* %add.ptr559, align 4, !dbg !11103
  %135 = call i1 @llvm.is.constant.i32(i32 %134), !dbg !11103
  br i1 %135, label %cond.true560, label %cond.false580, !dbg !11103

cond.true560:                                     ; preds = %cond.end549
  %arraydecay561 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11103
  %add.ptr562 = getelementptr i32, i32* %arraydecay561, i64 2, !dbg !11103
  %136 = load i32, i32* %add.ptr562, align 4, !dbg !11103
  %and563 = and i32 %136, 255, !dbg !11103
  %shl564 = shl i32 %and563, 24, !dbg !11103
  %arraydecay565 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11103
  %add.ptr566 = getelementptr i32, i32* %arraydecay565, i64 2, !dbg !11103
  %137 = load i32, i32* %add.ptr566, align 4, !dbg !11103
  %and567 = and i32 %137, 65280, !dbg !11103
  %shl568 = shl i32 %and567, 8, !dbg !11103
  %or569 = or i32 %shl564, %shl568, !dbg !11103
  %arraydecay570 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11103
  %add.ptr571 = getelementptr i32, i32* %arraydecay570, i64 2, !dbg !11103
  %138 = load i32, i32* %add.ptr571, align 4, !dbg !11103
  %and572 = and i32 %138, 16711680, !dbg !11103
  %shr573 = lshr i32 %and572, 8, !dbg !11103
  %or574 = or i32 %or569, %shr573, !dbg !11103
  %arraydecay575 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11103
  %add.ptr576 = getelementptr i32, i32* %arraydecay575, i64 2, !dbg !11103
  %139 = load i32, i32* %add.ptr576, align 4, !dbg !11103
  %and577 = and i32 %139, -16777216, !dbg !11103
  %shr578 = lshr i32 %and577, 24, !dbg !11103
  %or579 = or i32 %or574, %shr578, !dbg !11103
  br label %cond.end584, !dbg !11103

cond.false580:                                    ; preds = %cond.end549
  %arraydecay581 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11103
  %add.ptr582 = getelementptr i32, i32* %arraydecay581, i64 2, !dbg !11103
  %140 = load i32, i32* %add.ptr582, align 4, !dbg !11103
  %call583 = call i32 @__fswab32(i32 %140) #8, !dbg !11103
  br label %cond.end584, !dbg !11103

cond.end584:                                      ; preds = %cond.false580, %cond.true560
  %cond585 = phi i32 [ %or579, %cond.true560 ], [ %call583, %cond.false580 ], !dbg !11103
  %and586 = and i32 %cond585, 2147483647, !dbg !11103
  %141 = load i32, i32* %_v418, align 4, !dbg !11103
  %and587 = and i32 %141, 1, !dbg !11103
  %shl588 = shl i32 %and587, 31, !dbg !11103
  %or589 = or i32 %and586, %shl588, !dbg !11103
  %and590 = and i32 %or589, -16777216, !dbg !11103
  %shr591 = lshr i32 %and590, 24, !dbg !11103
  %or592 = or i32 %or557, %shr591, !dbg !11103
  br label %cond.end627, !dbg !11103

cond.false593:                                    ; preds = %cond.end447
  %arraydecay594 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11103
  %add.ptr595 = getelementptr i32, i32* %arraydecay594, i64 2, !dbg !11103
  %142 = load i32, i32* %add.ptr595, align 4, !dbg !11103
  %143 = call i1 @llvm.is.constant.i32(i32 %142), !dbg !11103
  br i1 %143, label %cond.true596, label %cond.false616, !dbg !11103

cond.true596:                                     ; preds = %cond.false593
  %arraydecay597 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11103
  %add.ptr598 = getelementptr i32, i32* %arraydecay597, i64 2, !dbg !11103
  %144 = load i32, i32* %add.ptr598, align 4, !dbg !11103
  %and599 = and i32 %144, 255, !dbg !11103
  %shl600 = shl i32 %and599, 24, !dbg !11103
  %arraydecay601 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11103
  %add.ptr602 = getelementptr i32, i32* %arraydecay601, i64 2, !dbg !11103
  %145 = load i32, i32* %add.ptr602, align 4, !dbg !11103
  %and603 = and i32 %145, 65280, !dbg !11103
  %shl604 = shl i32 %and603, 8, !dbg !11103
  %or605 = or i32 %shl600, %shl604, !dbg !11103
  %arraydecay606 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11103
  %add.ptr607 = getelementptr i32, i32* %arraydecay606, i64 2, !dbg !11103
  %146 = load i32, i32* %add.ptr607, align 4, !dbg !11103
  %and608 = and i32 %146, 16711680, !dbg !11103
  %shr609 = lshr i32 %and608, 8, !dbg !11103
  %or610 = or i32 %or605, %shr609, !dbg !11103
  %arraydecay611 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11103
  %add.ptr612 = getelementptr i32, i32* %arraydecay611, i64 2, !dbg !11103
  %147 = load i32, i32* %add.ptr612, align 4, !dbg !11103
  %and613 = and i32 %147, -16777216, !dbg !11103
  %shr614 = lshr i32 %and613, 24, !dbg !11103
  %or615 = or i32 %or610, %shr614, !dbg !11103
  br label %cond.end620, !dbg !11103

cond.false616:                                    ; preds = %cond.false593
  %arraydecay617 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11103
  %add.ptr618 = getelementptr i32, i32* %arraydecay617, i64 2, !dbg !11103
  %148 = load i32, i32* %add.ptr618, align 4, !dbg !11103
  %call619 = call i32 @__fswab32(i32 %148) #8, !dbg !11103
  br label %cond.end620, !dbg !11103

cond.end620:                                      ; preds = %cond.false616, %cond.true596
  %cond621 = phi i32 [ %or615, %cond.true596 ], [ %call619, %cond.false616 ], !dbg !11103
  %and622 = and i32 %cond621, 2147483647, !dbg !11103
  %149 = load i32, i32* %_v418, align 4, !dbg !11103
  %and623 = and i32 %149, 1, !dbg !11103
  %shl624 = shl i32 %and623, 31, !dbg !11103
  %or625 = or i32 %and622, %shl624, !dbg !11103
  %call626 = call i32 @__fswab32(i32 %or625) #8, !dbg !11103
  br label %cond.end627, !dbg !11103

cond.end627:                                      ; preds = %cond.end620, %cond.end584
  %cond628 = phi i32 [ %or592, %cond.end584 ], [ %call626, %cond.end620 ], !dbg !11103
  %arraydecay629 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11103
  %add.ptr630 = getelementptr i32, i32* %arraydecay629, i64 2, !dbg !11103
  store i32 %cond628, i32* %add.ptr630, align 4, !dbg !11103
  br label %do.end631, !dbg !11103

do.end631:                                        ; preds = %cond.end627
  br label %if.end, !dbg !11103

if.end:                                           ; preds = %do.end631, %do.end416
  %150 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %mdev.addr, align 8, !dbg !11106
  %arraydecay632 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11106
  %151 = bitcast i32* %arraydecay632 to i8*, !dbg !11106
  %152 = load i32*, i32** %out.addr, align 8, !dbg !11106
  %153 = bitcast i32* %152 to i8*, !dbg !11106
  %call633 = call i32 @mlx5_cmd_exec(%struct.mlx5_core_dev* %150, i8* %151, i32 16, i8* %153, i32 272) #9, !dbg !11106
  store i32 %call633, i32* %tmp, align 4, !dbg !11108
  %154 = load i32, i32* %tmp, align 4, !dbg !11106
  ret i32 %154, !dbg !11109
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @mlx5_query_min_inline(%struct.mlx5_core_dev* %mdev, i8* %min_inline_mode) #0 !dbg !11110 {
entry:
  %mdev.addr = alloca %struct.mlx5_core_dev*, align 8
  %min_inline_mode.addr = alloca i8*, align 8
  store %struct.mlx5_core_dev* %mdev, %struct.mlx5_core_dev** %mdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_core_dev** %mdev.addr, metadata !11113, metadata !DIExpression()), !dbg !11114
  store i8* %min_inline_mode, i8** %min_inline_mode.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %min_inline_mode.addr, metadata !11115, metadata !DIExpression()), !dbg !11116
  %0 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %mdev.addr, align 8, !dbg !11117
  %caps = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %0, i32 0, i32 9, !dbg !11117
  %hca_cur = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps, i32 0, i32 0, !dbg !11117
  %arrayidx = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur, i64 0, i64 1, !dbg !11117
  %arraydecay = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx, i64 0, i64 0, !dbg !11117
  %add.ptr = getelementptr i32, i32* %arraydecay, i64 0, !dbg !11117
  %1 = load i32, i32* %add.ptr, align 4, !dbg !11117
  %2 = call i1 @llvm.is.constant.i32(i32 %1), !dbg !11117
  br i1 %2, label %cond.true, label %cond.false, !dbg !11117

cond.true:                                        ; preds = %entry
  %3 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %mdev.addr, align 8, !dbg !11117
  %caps1 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %3, i32 0, i32 9, !dbg !11117
  %hca_cur2 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps1, i32 0, i32 0, !dbg !11117
  %arrayidx3 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur2, i64 0, i64 1, !dbg !11117
  %arraydecay4 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx3, i64 0, i64 0, !dbg !11117
  %add.ptr5 = getelementptr i32, i32* %arraydecay4, i64 0, !dbg !11117
  %4 = load i32, i32* %add.ptr5, align 4, !dbg !11117
  %and = and i32 %4, 255, !dbg !11117
  %shl = shl i32 %and, 24, !dbg !11117
  %5 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %mdev.addr, align 8, !dbg !11117
  %caps6 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %5, i32 0, i32 9, !dbg !11117
  %hca_cur7 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps6, i32 0, i32 0, !dbg !11117
  %arrayidx8 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur7, i64 0, i64 1, !dbg !11117
  %arraydecay9 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx8, i64 0, i64 0, !dbg !11117
  %add.ptr10 = getelementptr i32, i32* %arraydecay9, i64 0, !dbg !11117
  %6 = load i32, i32* %add.ptr10, align 4, !dbg !11117
  %and11 = and i32 %6, 65280, !dbg !11117
  %shl12 = shl i32 %and11, 8, !dbg !11117
  %or = or i32 %shl, %shl12, !dbg !11117
  %7 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %mdev.addr, align 8, !dbg !11117
  %caps13 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %7, i32 0, i32 9, !dbg !11117
  %hca_cur14 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps13, i32 0, i32 0, !dbg !11117
  %arrayidx15 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur14, i64 0, i64 1, !dbg !11117
  %arraydecay16 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx15, i64 0, i64 0, !dbg !11117
  %add.ptr17 = getelementptr i32, i32* %arraydecay16, i64 0, !dbg !11117
  %8 = load i32, i32* %add.ptr17, align 4, !dbg !11117
  %and18 = and i32 %8, 16711680, !dbg !11117
  %shr = lshr i32 %and18, 8, !dbg !11117
  %or19 = or i32 %or, %shr, !dbg !11117
  %9 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %mdev.addr, align 8, !dbg !11117
  %caps20 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %9, i32 0, i32 9, !dbg !11117
  %hca_cur21 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps20, i32 0, i32 0, !dbg !11117
  %arrayidx22 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur21, i64 0, i64 1, !dbg !11117
  %arraydecay23 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx22, i64 0, i64 0, !dbg !11117
  %add.ptr24 = getelementptr i32, i32* %arraydecay23, i64 0, !dbg !11117
  %10 = load i32, i32* %add.ptr24, align 4, !dbg !11117
  %and25 = and i32 %10, -16777216, !dbg !11117
  %shr26 = lshr i32 %and25, 24, !dbg !11117
  %or27 = or i32 %or19, %shr26, !dbg !11117
  br label %cond.end, !dbg !11117

cond.false:                                       ; preds = %entry
  %11 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %mdev.addr, align 8, !dbg !11117
  %caps28 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %11, i32 0, i32 9, !dbg !11117
  %hca_cur29 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps28, i32 0, i32 0, !dbg !11117
  %arrayidx30 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur29, i64 0, i64 1, !dbg !11117
  %arraydecay31 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx30, i64 0, i64 0, !dbg !11117
  %add.ptr32 = getelementptr i32, i32* %arraydecay31, i64 0, !dbg !11117
  %12 = load i32, i32* %add.ptr32, align 4, !dbg !11117
  %call = call i32 @__fswab32(i32 %12) #8, !dbg !11117
  br label %cond.end, !dbg !11117

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %or27, %cond.true ], [ %call, %cond.false ], !dbg !11117
  %shr33 = lshr i32 %cond, 12, !dbg !11117
  %and34 = and i32 %shr33, 3, !dbg !11117
  switch i32 %and34, label %sw.epilog [
    i32 1, label %sw.bb
    i32 0, label %sw.bb36
    i32 2, label %sw.bb37
  ], !dbg !11118

sw.bb:                                            ; preds = %cond.end
  %13 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %mdev.addr, align 8, !dbg !11119
  %14 = load i8*, i8** %min_inline_mode.addr, align 8, !dbg !11122
  %call35 = call i32 @mlx5_query_nic_vport_min_inline(%struct.mlx5_core_dev* %13, i16 zeroext 0, i8* %14) #9, !dbg !11123
  %tobool = icmp ne i32 %call35, 0, !dbg !11123
  br i1 %tobool, label %if.end, label %if.then, !dbg !11124

if.then:                                          ; preds = %sw.bb
  br label %sw.epilog, !dbg !11125

if.end:                                           ; preds = %sw.bb
  br label %sw.bb36, !dbg !11126

sw.bb36:                                          ; preds = %cond.end, %if.end
  %15 = load i8*, i8** %min_inline_mode.addr, align 8, !dbg !11127
  store i8 1, i8* %15, align 1, !dbg !11128
  br label %sw.epilog, !dbg !11129

sw.bb37:                                          ; preds = %cond.end
  %16 = load i8*, i8** %min_inline_mode.addr, align 8, !dbg !11130
  store i8 0, i8* %16, align 1, !dbg !11131
  br label %sw.epilog, !dbg !11132

sw.epilog:                                        ; preds = %cond.end, %sw.bb37, %sw.bb36, %if.then
  ret void, !dbg !11133
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @mlx5_modify_nic_vport_min_inline(%struct.mlx5_core_dev* %mdev, i16 zeroext %vport, i8 zeroext %min_inline) #0 !dbg !11134 {
entry:
  %mdev.addr = alloca %struct.mlx5_core_dev*, align 8
  %vport.addr = alloca i16, align 2
  %min_inline.addr = alloca i8, align 1
  %in = alloca [128 x i32], align 16
  %nic_vport_ctx = alloca i8*, align 8
  %_v = alloca i32, align 4
  %_v203 = alloca i32, align 4
  %_v418 = alloca i32, align 4
  %_v635 = alloca i32, align 4
  %_v814 = alloca i32, align 4
  %_out = alloca [4 x i32], align 16
  %tmp = alloca i32, align 4
  %tmp1028 = alloca i32, align 4
  store %struct.mlx5_core_dev* %mdev, %struct.mlx5_core_dev** %mdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_core_dev** %mdev.addr, metadata !11137, metadata !DIExpression()), !dbg !11138
  store i16 %vport, i16* %vport.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %vport.addr, metadata !11139, metadata !DIExpression()), !dbg !11140
  store i8 %min_inline, i8* %min_inline.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %min_inline.addr, metadata !11141, metadata !DIExpression()), !dbg !11142
  call void @llvm.dbg.declare(metadata [128 x i32]* %in, metadata !11143, metadata !DIExpression()), !dbg !11145
  %0 = bitcast [128 x i32]* %in to i8*, !dbg !11145
  call void @llvm.memset.p0i8.i64(i8* align 16 %0, i8 0, i64 512, i1 false), !dbg !11145
  call void @llvm.dbg.declare(metadata i8** %nic_vport_ctx, metadata !11146, metadata !DIExpression()), !dbg !11147
  br label %do.body, !dbg !11148

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %_v, metadata !11149, metadata !DIExpression()), !dbg !11151
  store i32 1, i32* %_v, align 4, !dbg !11151
  br label %do.body1, !dbg !11151

do.body1:                                         ; preds = %do.body
  br label %do.end, !dbg !11152

do.end:                                           ; preds = %do.body1
  %arraydecay = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11151
  %add.ptr = getelementptr i32, i32* %arraydecay, i64 3, !dbg !11151
  %1 = load i32, i32* %add.ptr, align 4, !dbg !11151
  %2 = call i1 @llvm.is.constant.i32(i32 %1), !dbg !11151
  br i1 %2, label %cond.true, label %cond.false, !dbg !11151

cond.true:                                        ; preds = %do.end
  %arraydecay2 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11151
  %add.ptr3 = getelementptr i32, i32* %arraydecay2, i64 3, !dbg !11151
  %3 = load i32, i32* %add.ptr3, align 4, !dbg !11151
  %and = and i32 %3, 255, !dbg !11151
  %shl = shl i32 %and, 24, !dbg !11151
  %arraydecay4 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11151
  %add.ptr5 = getelementptr i32, i32* %arraydecay4, i64 3, !dbg !11151
  %4 = load i32, i32* %add.ptr5, align 4, !dbg !11151
  %and6 = and i32 %4, 65280, !dbg !11151
  %shl7 = shl i32 %and6, 8, !dbg !11151
  %or = or i32 %shl, %shl7, !dbg !11151
  %arraydecay8 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11151
  %add.ptr9 = getelementptr i32, i32* %arraydecay8, i64 3, !dbg !11151
  %5 = load i32, i32* %add.ptr9, align 4, !dbg !11151
  %and10 = and i32 %5, 16711680, !dbg !11151
  %shr = lshr i32 %and10, 8, !dbg !11151
  %or11 = or i32 %or, %shr, !dbg !11151
  %arraydecay12 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11151
  %add.ptr13 = getelementptr i32, i32* %arraydecay12, i64 3, !dbg !11151
  %6 = load i32, i32* %add.ptr13, align 4, !dbg !11151
  %and14 = and i32 %6, -16777216, !dbg !11151
  %shr15 = lshr i32 %and14, 24, !dbg !11151
  %or16 = or i32 %or11, %shr15, !dbg !11151
  br label %cond.end, !dbg !11151

cond.false:                                       ; preds = %do.end
  %arraydecay17 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11151
  %add.ptr18 = getelementptr i32, i32* %arraydecay17, i64 3, !dbg !11151
  %7 = load i32, i32* %add.ptr18, align 4, !dbg !11151
  %call = call i32 @__fswab32(i32 %7) #8, !dbg !11151
  br label %cond.end, !dbg !11151

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %or16, %cond.true ], [ %call, %cond.false ], !dbg !11151
  %and19 = and i32 %cond, -129, !dbg !11151
  %8 = load i32, i32* %_v, align 4, !dbg !11151
  %and20 = and i32 %8, 1, !dbg !11151
  %shl21 = shl i32 %and20, 7, !dbg !11151
  %or22 = or i32 %and19, %shl21, !dbg !11151
  %9 = call i1 @llvm.is.constant.i32(i32 %or22), !dbg !11151
  br i1 %9, label %cond.true23, label %cond.false163, !dbg !11151

cond.true23:                                      ; preds = %cond.end
  %arraydecay24 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11151
  %add.ptr25 = getelementptr i32, i32* %arraydecay24, i64 3, !dbg !11151
  %10 = load i32, i32* %add.ptr25, align 4, !dbg !11151
  %11 = call i1 @llvm.is.constant.i32(i32 %10), !dbg !11151
  br i1 %11, label %cond.true26, label %cond.false46, !dbg !11151

cond.true26:                                      ; preds = %cond.true23
  %arraydecay27 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11151
  %add.ptr28 = getelementptr i32, i32* %arraydecay27, i64 3, !dbg !11151
  %12 = load i32, i32* %add.ptr28, align 4, !dbg !11151
  %and29 = and i32 %12, 255, !dbg !11151
  %shl30 = shl i32 %and29, 24, !dbg !11151
  %arraydecay31 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11151
  %add.ptr32 = getelementptr i32, i32* %arraydecay31, i64 3, !dbg !11151
  %13 = load i32, i32* %add.ptr32, align 4, !dbg !11151
  %and33 = and i32 %13, 65280, !dbg !11151
  %shl34 = shl i32 %and33, 8, !dbg !11151
  %or35 = or i32 %shl30, %shl34, !dbg !11151
  %arraydecay36 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11151
  %add.ptr37 = getelementptr i32, i32* %arraydecay36, i64 3, !dbg !11151
  %14 = load i32, i32* %add.ptr37, align 4, !dbg !11151
  %and38 = and i32 %14, 16711680, !dbg !11151
  %shr39 = lshr i32 %and38, 8, !dbg !11151
  %or40 = or i32 %or35, %shr39, !dbg !11151
  %arraydecay41 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11151
  %add.ptr42 = getelementptr i32, i32* %arraydecay41, i64 3, !dbg !11151
  %15 = load i32, i32* %add.ptr42, align 4, !dbg !11151
  %and43 = and i32 %15, -16777216, !dbg !11151
  %shr44 = lshr i32 %and43, 24, !dbg !11151
  %or45 = or i32 %or40, %shr44, !dbg !11151
  br label %cond.end50, !dbg !11151

cond.false46:                                     ; preds = %cond.true23
  %arraydecay47 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11151
  %add.ptr48 = getelementptr i32, i32* %arraydecay47, i64 3, !dbg !11151
  %16 = load i32, i32* %add.ptr48, align 4, !dbg !11151
  %call49 = call i32 @__fswab32(i32 %16) #8, !dbg !11151
  br label %cond.end50, !dbg !11151

cond.end50:                                       ; preds = %cond.false46, %cond.true26
  %cond51 = phi i32 [ %or45, %cond.true26 ], [ %call49, %cond.false46 ], !dbg !11151
  %and52 = and i32 %cond51, -129, !dbg !11151
  %17 = load i32, i32* %_v, align 4, !dbg !11151
  %and53 = and i32 %17, 1, !dbg !11151
  %shl54 = shl i32 %and53, 7, !dbg !11151
  %or55 = or i32 %and52, %shl54, !dbg !11151
  %and56 = and i32 %or55, 255, !dbg !11151
  %shl57 = shl i32 %and56, 24, !dbg !11151
  %arraydecay58 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11151
  %add.ptr59 = getelementptr i32, i32* %arraydecay58, i64 3, !dbg !11151
  %18 = load i32, i32* %add.ptr59, align 4, !dbg !11151
  %19 = call i1 @llvm.is.constant.i32(i32 %18), !dbg !11151
  br i1 %19, label %cond.true60, label %cond.false80, !dbg !11151

cond.true60:                                      ; preds = %cond.end50
  %arraydecay61 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11151
  %add.ptr62 = getelementptr i32, i32* %arraydecay61, i64 3, !dbg !11151
  %20 = load i32, i32* %add.ptr62, align 4, !dbg !11151
  %and63 = and i32 %20, 255, !dbg !11151
  %shl64 = shl i32 %and63, 24, !dbg !11151
  %arraydecay65 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11151
  %add.ptr66 = getelementptr i32, i32* %arraydecay65, i64 3, !dbg !11151
  %21 = load i32, i32* %add.ptr66, align 4, !dbg !11151
  %and67 = and i32 %21, 65280, !dbg !11151
  %shl68 = shl i32 %and67, 8, !dbg !11151
  %or69 = or i32 %shl64, %shl68, !dbg !11151
  %arraydecay70 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11151
  %add.ptr71 = getelementptr i32, i32* %arraydecay70, i64 3, !dbg !11151
  %22 = load i32, i32* %add.ptr71, align 4, !dbg !11151
  %and72 = and i32 %22, 16711680, !dbg !11151
  %shr73 = lshr i32 %and72, 8, !dbg !11151
  %or74 = or i32 %or69, %shr73, !dbg !11151
  %arraydecay75 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11151
  %add.ptr76 = getelementptr i32, i32* %arraydecay75, i64 3, !dbg !11151
  %23 = load i32, i32* %add.ptr76, align 4, !dbg !11151
  %and77 = and i32 %23, -16777216, !dbg !11151
  %shr78 = lshr i32 %and77, 24, !dbg !11151
  %or79 = or i32 %or74, %shr78, !dbg !11151
  br label %cond.end84, !dbg !11151

cond.false80:                                     ; preds = %cond.end50
  %arraydecay81 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11151
  %add.ptr82 = getelementptr i32, i32* %arraydecay81, i64 3, !dbg !11151
  %24 = load i32, i32* %add.ptr82, align 4, !dbg !11151
  %call83 = call i32 @__fswab32(i32 %24) #8, !dbg !11151
  br label %cond.end84, !dbg !11151

cond.end84:                                       ; preds = %cond.false80, %cond.true60
  %cond85 = phi i32 [ %or79, %cond.true60 ], [ %call83, %cond.false80 ], !dbg !11151
  %and86 = and i32 %cond85, -129, !dbg !11151
  %25 = load i32, i32* %_v, align 4, !dbg !11151
  %and87 = and i32 %25, 1, !dbg !11151
  %shl88 = shl i32 %and87, 7, !dbg !11151
  %or89 = or i32 %and86, %shl88, !dbg !11151
  %and90 = and i32 %or89, 65280, !dbg !11151
  %shl91 = shl i32 %and90, 8, !dbg !11151
  %or92 = or i32 %shl57, %shl91, !dbg !11151
  %arraydecay93 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11151
  %add.ptr94 = getelementptr i32, i32* %arraydecay93, i64 3, !dbg !11151
  %26 = load i32, i32* %add.ptr94, align 4, !dbg !11151
  %27 = call i1 @llvm.is.constant.i32(i32 %26), !dbg !11151
  br i1 %27, label %cond.true95, label %cond.false115, !dbg !11151

cond.true95:                                      ; preds = %cond.end84
  %arraydecay96 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11151
  %add.ptr97 = getelementptr i32, i32* %arraydecay96, i64 3, !dbg !11151
  %28 = load i32, i32* %add.ptr97, align 4, !dbg !11151
  %and98 = and i32 %28, 255, !dbg !11151
  %shl99 = shl i32 %and98, 24, !dbg !11151
  %arraydecay100 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11151
  %add.ptr101 = getelementptr i32, i32* %arraydecay100, i64 3, !dbg !11151
  %29 = load i32, i32* %add.ptr101, align 4, !dbg !11151
  %and102 = and i32 %29, 65280, !dbg !11151
  %shl103 = shl i32 %and102, 8, !dbg !11151
  %or104 = or i32 %shl99, %shl103, !dbg !11151
  %arraydecay105 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11151
  %add.ptr106 = getelementptr i32, i32* %arraydecay105, i64 3, !dbg !11151
  %30 = load i32, i32* %add.ptr106, align 4, !dbg !11151
  %and107 = and i32 %30, 16711680, !dbg !11151
  %shr108 = lshr i32 %and107, 8, !dbg !11151
  %or109 = or i32 %or104, %shr108, !dbg !11151
  %arraydecay110 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11151
  %add.ptr111 = getelementptr i32, i32* %arraydecay110, i64 3, !dbg !11151
  %31 = load i32, i32* %add.ptr111, align 4, !dbg !11151
  %and112 = and i32 %31, -16777216, !dbg !11151
  %shr113 = lshr i32 %and112, 24, !dbg !11151
  %or114 = or i32 %or109, %shr113, !dbg !11151
  br label %cond.end119, !dbg !11151

cond.false115:                                    ; preds = %cond.end84
  %arraydecay116 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11151
  %add.ptr117 = getelementptr i32, i32* %arraydecay116, i64 3, !dbg !11151
  %32 = load i32, i32* %add.ptr117, align 4, !dbg !11151
  %call118 = call i32 @__fswab32(i32 %32) #8, !dbg !11151
  br label %cond.end119, !dbg !11151

cond.end119:                                      ; preds = %cond.false115, %cond.true95
  %cond120 = phi i32 [ %or114, %cond.true95 ], [ %call118, %cond.false115 ], !dbg !11151
  %and121 = and i32 %cond120, -129, !dbg !11151
  %33 = load i32, i32* %_v, align 4, !dbg !11151
  %and122 = and i32 %33, 1, !dbg !11151
  %shl123 = shl i32 %and122, 7, !dbg !11151
  %or124 = or i32 %and121, %shl123, !dbg !11151
  %and125 = and i32 %or124, 16711680, !dbg !11151
  %shr126 = lshr i32 %and125, 8, !dbg !11151
  %or127 = or i32 %or92, %shr126, !dbg !11151
  %arraydecay128 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11151
  %add.ptr129 = getelementptr i32, i32* %arraydecay128, i64 3, !dbg !11151
  %34 = load i32, i32* %add.ptr129, align 4, !dbg !11151
  %35 = call i1 @llvm.is.constant.i32(i32 %34), !dbg !11151
  br i1 %35, label %cond.true130, label %cond.false150, !dbg !11151

cond.true130:                                     ; preds = %cond.end119
  %arraydecay131 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11151
  %add.ptr132 = getelementptr i32, i32* %arraydecay131, i64 3, !dbg !11151
  %36 = load i32, i32* %add.ptr132, align 4, !dbg !11151
  %and133 = and i32 %36, 255, !dbg !11151
  %shl134 = shl i32 %and133, 24, !dbg !11151
  %arraydecay135 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11151
  %add.ptr136 = getelementptr i32, i32* %arraydecay135, i64 3, !dbg !11151
  %37 = load i32, i32* %add.ptr136, align 4, !dbg !11151
  %and137 = and i32 %37, 65280, !dbg !11151
  %shl138 = shl i32 %and137, 8, !dbg !11151
  %or139 = or i32 %shl134, %shl138, !dbg !11151
  %arraydecay140 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11151
  %add.ptr141 = getelementptr i32, i32* %arraydecay140, i64 3, !dbg !11151
  %38 = load i32, i32* %add.ptr141, align 4, !dbg !11151
  %and142 = and i32 %38, 16711680, !dbg !11151
  %shr143 = lshr i32 %and142, 8, !dbg !11151
  %or144 = or i32 %or139, %shr143, !dbg !11151
  %arraydecay145 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11151
  %add.ptr146 = getelementptr i32, i32* %arraydecay145, i64 3, !dbg !11151
  %39 = load i32, i32* %add.ptr146, align 4, !dbg !11151
  %and147 = and i32 %39, -16777216, !dbg !11151
  %shr148 = lshr i32 %and147, 24, !dbg !11151
  %or149 = or i32 %or144, %shr148, !dbg !11151
  br label %cond.end154, !dbg !11151

cond.false150:                                    ; preds = %cond.end119
  %arraydecay151 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11151
  %add.ptr152 = getelementptr i32, i32* %arraydecay151, i64 3, !dbg !11151
  %40 = load i32, i32* %add.ptr152, align 4, !dbg !11151
  %call153 = call i32 @__fswab32(i32 %40) #8, !dbg !11151
  br label %cond.end154, !dbg !11151

cond.end154:                                      ; preds = %cond.false150, %cond.true130
  %cond155 = phi i32 [ %or149, %cond.true130 ], [ %call153, %cond.false150 ], !dbg !11151
  %and156 = and i32 %cond155, -129, !dbg !11151
  %41 = load i32, i32* %_v, align 4, !dbg !11151
  %and157 = and i32 %41, 1, !dbg !11151
  %shl158 = shl i32 %and157, 7, !dbg !11151
  %or159 = or i32 %and156, %shl158, !dbg !11151
  %and160 = and i32 %or159, -16777216, !dbg !11151
  %shr161 = lshr i32 %and160, 24, !dbg !11151
  %or162 = or i32 %or127, %shr161, !dbg !11151
  br label %cond.end197, !dbg !11151

cond.false163:                                    ; preds = %cond.end
  %arraydecay164 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11151
  %add.ptr165 = getelementptr i32, i32* %arraydecay164, i64 3, !dbg !11151
  %42 = load i32, i32* %add.ptr165, align 4, !dbg !11151
  %43 = call i1 @llvm.is.constant.i32(i32 %42), !dbg !11151
  br i1 %43, label %cond.true166, label %cond.false186, !dbg !11151

cond.true166:                                     ; preds = %cond.false163
  %arraydecay167 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11151
  %add.ptr168 = getelementptr i32, i32* %arraydecay167, i64 3, !dbg !11151
  %44 = load i32, i32* %add.ptr168, align 4, !dbg !11151
  %and169 = and i32 %44, 255, !dbg !11151
  %shl170 = shl i32 %and169, 24, !dbg !11151
  %arraydecay171 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11151
  %add.ptr172 = getelementptr i32, i32* %arraydecay171, i64 3, !dbg !11151
  %45 = load i32, i32* %add.ptr172, align 4, !dbg !11151
  %and173 = and i32 %45, 65280, !dbg !11151
  %shl174 = shl i32 %and173, 8, !dbg !11151
  %or175 = or i32 %shl170, %shl174, !dbg !11151
  %arraydecay176 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11151
  %add.ptr177 = getelementptr i32, i32* %arraydecay176, i64 3, !dbg !11151
  %46 = load i32, i32* %add.ptr177, align 4, !dbg !11151
  %and178 = and i32 %46, 16711680, !dbg !11151
  %shr179 = lshr i32 %and178, 8, !dbg !11151
  %or180 = or i32 %or175, %shr179, !dbg !11151
  %arraydecay181 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11151
  %add.ptr182 = getelementptr i32, i32* %arraydecay181, i64 3, !dbg !11151
  %47 = load i32, i32* %add.ptr182, align 4, !dbg !11151
  %and183 = and i32 %47, -16777216, !dbg !11151
  %shr184 = lshr i32 %and183, 24, !dbg !11151
  %or185 = or i32 %or180, %shr184, !dbg !11151
  br label %cond.end190, !dbg !11151

cond.false186:                                    ; preds = %cond.false163
  %arraydecay187 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11151
  %add.ptr188 = getelementptr i32, i32* %arraydecay187, i64 3, !dbg !11151
  %48 = load i32, i32* %add.ptr188, align 4, !dbg !11151
  %call189 = call i32 @__fswab32(i32 %48) #8, !dbg !11151
  br label %cond.end190, !dbg !11151

cond.end190:                                      ; preds = %cond.false186, %cond.true166
  %cond191 = phi i32 [ %or185, %cond.true166 ], [ %call189, %cond.false186 ], !dbg !11151
  %and192 = and i32 %cond191, -129, !dbg !11151
  %49 = load i32, i32* %_v, align 4, !dbg !11151
  %and193 = and i32 %49, 1, !dbg !11151
  %shl194 = shl i32 %and193, 7, !dbg !11151
  %or195 = or i32 %and192, %shl194, !dbg !11151
  %call196 = call i32 @__fswab32(i32 %or195) #8, !dbg !11151
  br label %cond.end197, !dbg !11151

cond.end197:                                      ; preds = %cond.end190, %cond.end154
  %cond198 = phi i32 [ %or162, %cond.end154 ], [ %call196, %cond.end190 ], !dbg !11151
  %arraydecay199 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11151
  %add.ptr200 = getelementptr i32, i32* %arraydecay199, i64 3, !dbg !11151
  store i32 %cond198, i32* %add.ptr200, align 4, !dbg !11151
  br label %do.end201, !dbg !11151

do.end201:                                        ; preds = %cond.end197
  br label %do.body202, !dbg !11154

do.body202:                                       ; preds = %do.end201
  call void @llvm.dbg.declare(metadata i32* %_v203, metadata !11155, metadata !DIExpression()), !dbg !11157
  %50 = load i16, i16* %vport.addr, align 2, !dbg !11157
  %conv = zext i16 %50 to i32, !dbg !11157
  store i32 %conv, i32* %_v203, align 4, !dbg !11157
  br label %do.body204, !dbg !11157

do.body204:                                       ; preds = %do.body202
  br label %do.end205, !dbg !11158

do.end205:                                        ; preds = %do.body204
  %arraydecay206 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11157
  %add.ptr207 = getelementptr i32, i32* %arraydecay206, i64 2, !dbg !11157
  %51 = load i32, i32* %add.ptr207, align 4, !dbg !11157
  %52 = call i1 @llvm.is.constant.i32(i32 %51), !dbg !11157
  br i1 %52, label %cond.true208, label %cond.false228, !dbg !11157

cond.true208:                                     ; preds = %do.end205
  %arraydecay209 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11157
  %add.ptr210 = getelementptr i32, i32* %arraydecay209, i64 2, !dbg !11157
  %53 = load i32, i32* %add.ptr210, align 4, !dbg !11157
  %and211 = and i32 %53, 255, !dbg !11157
  %shl212 = shl i32 %and211, 24, !dbg !11157
  %arraydecay213 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11157
  %add.ptr214 = getelementptr i32, i32* %arraydecay213, i64 2, !dbg !11157
  %54 = load i32, i32* %add.ptr214, align 4, !dbg !11157
  %and215 = and i32 %54, 65280, !dbg !11157
  %shl216 = shl i32 %and215, 8, !dbg !11157
  %or217 = or i32 %shl212, %shl216, !dbg !11157
  %arraydecay218 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11157
  %add.ptr219 = getelementptr i32, i32* %arraydecay218, i64 2, !dbg !11157
  %55 = load i32, i32* %add.ptr219, align 4, !dbg !11157
  %and220 = and i32 %55, 16711680, !dbg !11157
  %shr221 = lshr i32 %and220, 8, !dbg !11157
  %or222 = or i32 %or217, %shr221, !dbg !11157
  %arraydecay223 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11157
  %add.ptr224 = getelementptr i32, i32* %arraydecay223, i64 2, !dbg !11157
  %56 = load i32, i32* %add.ptr224, align 4, !dbg !11157
  %and225 = and i32 %56, -16777216, !dbg !11157
  %shr226 = lshr i32 %and225, 24, !dbg !11157
  %or227 = or i32 %or222, %shr226, !dbg !11157
  br label %cond.end232, !dbg !11157

cond.false228:                                    ; preds = %do.end205
  %arraydecay229 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11157
  %add.ptr230 = getelementptr i32, i32* %arraydecay229, i64 2, !dbg !11157
  %57 = load i32, i32* %add.ptr230, align 4, !dbg !11157
  %call231 = call i32 @__fswab32(i32 %57) #8, !dbg !11157
  br label %cond.end232, !dbg !11157

cond.end232:                                      ; preds = %cond.false228, %cond.true208
  %cond233 = phi i32 [ %or227, %cond.true208 ], [ %call231, %cond.false228 ], !dbg !11157
  %and234 = and i32 %cond233, -65536, !dbg !11157
  %58 = load i32, i32* %_v203, align 4, !dbg !11157
  %and235 = and i32 %58, 65535, !dbg !11157
  %shl236 = shl i32 %and235, 0, !dbg !11157
  %or237 = or i32 %and234, %shl236, !dbg !11157
  %59 = call i1 @llvm.is.constant.i32(i32 %or237), !dbg !11157
  br i1 %59, label %cond.true238, label %cond.false378, !dbg !11157

cond.true238:                                     ; preds = %cond.end232
  %arraydecay239 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11157
  %add.ptr240 = getelementptr i32, i32* %arraydecay239, i64 2, !dbg !11157
  %60 = load i32, i32* %add.ptr240, align 4, !dbg !11157
  %61 = call i1 @llvm.is.constant.i32(i32 %60), !dbg !11157
  br i1 %61, label %cond.true241, label %cond.false261, !dbg !11157

cond.true241:                                     ; preds = %cond.true238
  %arraydecay242 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11157
  %add.ptr243 = getelementptr i32, i32* %arraydecay242, i64 2, !dbg !11157
  %62 = load i32, i32* %add.ptr243, align 4, !dbg !11157
  %and244 = and i32 %62, 255, !dbg !11157
  %shl245 = shl i32 %and244, 24, !dbg !11157
  %arraydecay246 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11157
  %add.ptr247 = getelementptr i32, i32* %arraydecay246, i64 2, !dbg !11157
  %63 = load i32, i32* %add.ptr247, align 4, !dbg !11157
  %and248 = and i32 %63, 65280, !dbg !11157
  %shl249 = shl i32 %and248, 8, !dbg !11157
  %or250 = or i32 %shl245, %shl249, !dbg !11157
  %arraydecay251 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11157
  %add.ptr252 = getelementptr i32, i32* %arraydecay251, i64 2, !dbg !11157
  %64 = load i32, i32* %add.ptr252, align 4, !dbg !11157
  %and253 = and i32 %64, 16711680, !dbg !11157
  %shr254 = lshr i32 %and253, 8, !dbg !11157
  %or255 = or i32 %or250, %shr254, !dbg !11157
  %arraydecay256 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11157
  %add.ptr257 = getelementptr i32, i32* %arraydecay256, i64 2, !dbg !11157
  %65 = load i32, i32* %add.ptr257, align 4, !dbg !11157
  %and258 = and i32 %65, -16777216, !dbg !11157
  %shr259 = lshr i32 %and258, 24, !dbg !11157
  %or260 = or i32 %or255, %shr259, !dbg !11157
  br label %cond.end265, !dbg !11157

cond.false261:                                    ; preds = %cond.true238
  %arraydecay262 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11157
  %add.ptr263 = getelementptr i32, i32* %arraydecay262, i64 2, !dbg !11157
  %66 = load i32, i32* %add.ptr263, align 4, !dbg !11157
  %call264 = call i32 @__fswab32(i32 %66) #8, !dbg !11157
  br label %cond.end265, !dbg !11157

cond.end265:                                      ; preds = %cond.false261, %cond.true241
  %cond266 = phi i32 [ %or260, %cond.true241 ], [ %call264, %cond.false261 ], !dbg !11157
  %and267 = and i32 %cond266, -65536, !dbg !11157
  %67 = load i32, i32* %_v203, align 4, !dbg !11157
  %and268 = and i32 %67, 65535, !dbg !11157
  %shl269 = shl i32 %and268, 0, !dbg !11157
  %or270 = or i32 %and267, %shl269, !dbg !11157
  %and271 = and i32 %or270, 255, !dbg !11157
  %shl272 = shl i32 %and271, 24, !dbg !11157
  %arraydecay273 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11157
  %add.ptr274 = getelementptr i32, i32* %arraydecay273, i64 2, !dbg !11157
  %68 = load i32, i32* %add.ptr274, align 4, !dbg !11157
  %69 = call i1 @llvm.is.constant.i32(i32 %68), !dbg !11157
  br i1 %69, label %cond.true275, label %cond.false295, !dbg !11157

cond.true275:                                     ; preds = %cond.end265
  %arraydecay276 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11157
  %add.ptr277 = getelementptr i32, i32* %arraydecay276, i64 2, !dbg !11157
  %70 = load i32, i32* %add.ptr277, align 4, !dbg !11157
  %and278 = and i32 %70, 255, !dbg !11157
  %shl279 = shl i32 %and278, 24, !dbg !11157
  %arraydecay280 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11157
  %add.ptr281 = getelementptr i32, i32* %arraydecay280, i64 2, !dbg !11157
  %71 = load i32, i32* %add.ptr281, align 4, !dbg !11157
  %and282 = and i32 %71, 65280, !dbg !11157
  %shl283 = shl i32 %and282, 8, !dbg !11157
  %or284 = or i32 %shl279, %shl283, !dbg !11157
  %arraydecay285 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11157
  %add.ptr286 = getelementptr i32, i32* %arraydecay285, i64 2, !dbg !11157
  %72 = load i32, i32* %add.ptr286, align 4, !dbg !11157
  %and287 = and i32 %72, 16711680, !dbg !11157
  %shr288 = lshr i32 %and287, 8, !dbg !11157
  %or289 = or i32 %or284, %shr288, !dbg !11157
  %arraydecay290 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11157
  %add.ptr291 = getelementptr i32, i32* %arraydecay290, i64 2, !dbg !11157
  %73 = load i32, i32* %add.ptr291, align 4, !dbg !11157
  %and292 = and i32 %73, -16777216, !dbg !11157
  %shr293 = lshr i32 %and292, 24, !dbg !11157
  %or294 = or i32 %or289, %shr293, !dbg !11157
  br label %cond.end299, !dbg !11157

cond.false295:                                    ; preds = %cond.end265
  %arraydecay296 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11157
  %add.ptr297 = getelementptr i32, i32* %arraydecay296, i64 2, !dbg !11157
  %74 = load i32, i32* %add.ptr297, align 4, !dbg !11157
  %call298 = call i32 @__fswab32(i32 %74) #8, !dbg !11157
  br label %cond.end299, !dbg !11157

cond.end299:                                      ; preds = %cond.false295, %cond.true275
  %cond300 = phi i32 [ %or294, %cond.true275 ], [ %call298, %cond.false295 ], !dbg !11157
  %and301 = and i32 %cond300, -65536, !dbg !11157
  %75 = load i32, i32* %_v203, align 4, !dbg !11157
  %and302 = and i32 %75, 65535, !dbg !11157
  %shl303 = shl i32 %and302, 0, !dbg !11157
  %or304 = or i32 %and301, %shl303, !dbg !11157
  %and305 = and i32 %or304, 65280, !dbg !11157
  %shl306 = shl i32 %and305, 8, !dbg !11157
  %or307 = or i32 %shl272, %shl306, !dbg !11157
  %arraydecay308 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11157
  %add.ptr309 = getelementptr i32, i32* %arraydecay308, i64 2, !dbg !11157
  %76 = load i32, i32* %add.ptr309, align 4, !dbg !11157
  %77 = call i1 @llvm.is.constant.i32(i32 %76), !dbg !11157
  br i1 %77, label %cond.true310, label %cond.false330, !dbg !11157

cond.true310:                                     ; preds = %cond.end299
  %arraydecay311 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11157
  %add.ptr312 = getelementptr i32, i32* %arraydecay311, i64 2, !dbg !11157
  %78 = load i32, i32* %add.ptr312, align 4, !dbg !11157
  %and313 = and i32 %78, 255, !dbg !11157
  %shl314 = shl i32 %and313, 24, !dbg !11157
  %arraydecay315 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11157
  %add.ptr316 = getelementptr i32, i32* %arraydecay315, i64 2, !dbg !11157
  %79 = load i32, i32* %add.ptr316, align 4, !dbg !11157
  %and317 = and i32 %79, 65280, !dbg !11157
  %shl318 = shl i32 %and317, 8, !dbg !11157
  %or319 = or i32 %shl314, %shl318, !dbg !11157
  %arraydecay320 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11157
  %add.ptr321 = getelementptr i32, i32* %arraydecay320, i64 2, !dbg !11157
  %80 = load i32, i32* %add.ptr321, align 4, !dbg !11157
  %and322 = and i32 %80, 16711680, !dbg !11157
  %shr323 = lshr i32 %and322, 8, !dbg !11157
  %or324 = or i32 %or319, %shr323, !dbg !11157
  %arraydecay325 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11157
  %add.ptr326 = getelementptr i32, i32* %arraydecay325, i64 2, !dbg !11157
  %81 = load i32, i32* %add.ptr326, align 4, !dbg !11157
  %and327 = and i32 %81, -16777216, !dbg !11157
  %shr328 = lshr i32 %and327, 24, !dbg !11157
  %or329 = or i32 %or324, %shr328, !dbg !11157
  br label %cond.end334, !dbg !11157

cond.false330:                                    ; preds = %cond.end299
  %arraydecay331 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11157
  %add.ptr332 = getelementptr i32, i32* %arraydecay331, i64 2, !dbg !11157
  %82 = load i32, i32* %add.ptr332, align 4, !dbg !11157
  %call333 = call i32 @__fswab32(i32 %82) #8, !dbg !11157
  br label %cond.end334, !dbg !11157

cond.end334:                                      ; preds = %cond.false330, %cond.true310
  %cond335 = phi i32 [ %or329, %cond.true310 ], [ %call333, %cond.false330 ], !dbg !11157
  %and336 = and i32 %cond335, -65536, !dbg !11157
  %83 = load i32, i32* %_v203, align 4, !dbg !11157
  %and337 = and i32 %83, 65535, !dbg !11157
  %shl338 = shl i32 %and337, 0, !dbg !11157
  %or339 = or i32 %and336, %shl338, !dbg !11157
  %and340 = and i32 %or339, 16711680, !dbg !11157
  %shr341 = lshr i32 %and340, 8, !dbg !11157
  %or342 = or i32 %or307, %shr341, !dbg !11157
  %arraydecay343 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11157
  %add.ptr344 = getelementptr i32, i32* %arraydecay343, i64 2, !dbg !11157
  %84 = load i32, i32* %add.ptr344, align 4, !dbg !11157
  %85 = call i1 @llvm.is.constant.i32(i32 %84), !dbg !11157
  br i1 %85, label %cond.true345, label %cond.false365, !dbg !11157

cond.true345:                                     ; preds = %cond.end334
  %arraydecay346 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11157
  %add.ptr347 = getelementptr i32, i32* %arraydecay346, i64 2, !dbg !11157
  %86 = load i32, i32* %add.ptr347, align 4, !dbg !11157
  %and348 = and i32 %86, 255, !dbg !11157
  %shl349 = shl i32 %and348, 24, !dbg !11157
  %arraydecay350 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11157
  %add.ptr351 = getelementptr i32, i32* %arraydecay350, i64 2, !dbg !11157
  %87 = load i32, i32* %add.ptr351, align 4, !dbg !11157
  %and352 = and i32 %87, 65280, !dbg !11157
  %shl353 = shl i32 %and352, 8, !dbg !11157
  %or354 = or i32 %shl349, %shl353, !dbg !11157
  %arraydecay355 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11157
  %add.ptr356 = getelementptr i32, i32* %arraydecay355, i64 2, !dbg !11157
  %88 = load i32, i32* %add.ptr356, align 4, !dbg !11157
  %and357 = and i32 %88, 16711680, !dbg !11157
  %shr358 = lshr i32 %and357, 8, !dbg !11157
  %or359 = or i32 %or354, %shr358, !dbg !11157
  %arraydecay360 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11157
  %add.ptr361 = getelementptr i32, i32* %arraydecay360, i64 2, !dbg !11157
  %89 = load i32, i32* %add.ptr361, align 4, !dbg !11157
  %and362 = and i32 %89, -16777216, !dbg !11157
  %shr363 = lshr i32 %and362, 24, !dbg !11157
  %or364 = or i32 %or359, %shr363, !dbg !11157
  br label %cond.end369, !dbg !11157

cond.false365:                                    ; preds = %cond.end334
  %arraydecay366 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11157
  %add.ptr367 = getelementptr i32, i32* %arraydecay366, i64 2, !dbg !11157
  %90 = load i32, i32* %add.ptr367, align 4, !dbg !11157
  %call368 = call i32 @__fswab32(i32 %90) #8, !dbg !11157
  br label %cond.end369, !dbg !11157

cond.end369:                                      ; preds = %cond.false365, %cond.true345
  %cond370 = phi i32 [ %or364, %cond.true345 ], [ %call368, %cond.false365 ], !dbg !11157
  %and371 = and i32 %cond370, -65536, !dbg !11157
  %91 = load i32, i32* %_v203, align 4, !dbg !11157
  %and372 = and i32 %91, 65535, !dbg !11157
  %shl373 = shl i32 %and372, 0, !dbg !11157
  %or374 = or i32 %and371, %shl373, !dbg !11157
  %and375 = and i32 %or374, -16777216, !dbg !11157
  %shr376 = lshr i32 %and375, 24, !dbg !11157
  %or377 = or i32 %or342, %shr376, !dbg !11157
  br label %cond.end412, !dbg !11157

cond.false378:                                    ; preds = %cond.end232
  %arraydecay379 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11157
  %add.ptr380 = getelementptr i32, i32* %arraydecay379, i64 2, !dbg !11157
  %92 = load i32, i32* %add.ptr380, align 4, !dbg !11157
  %93 = call i1 @llvm.is.constant.i32(i32 %92), !dbg !11157
  br i1 %93, label %cond.true381, label %cond.false401, !dbg !11157

cond.true381:                                     ; preds = %cond.false378
  %arraydecay382 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11157
  %add.ptr383 = getelementptr i32, i32* %arraydecay382, i64 2, !dbg !11157
  %94 = load i32, i32* %add.ptr383, align 4, !dbg !11157
  %and384 = and i32 %94, 255, !dbg !11157
  %shl385 = shl i32 %and384, 24, !dbg !11157
  %arraydecay386 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11157
  %add.ptr387 = getelementptr i32, i32* %arraydecay386, i64 2, !dbg !11157
  %95 = load i32, i32* %add.ptr387, align 4, !dbg !11157
  %and388 = and i32 %95, 65280, !dbg !11157
  %shl389 = shl i32 %and388, 8, !dbg !11157
  %or390 = or i32 %shl385, %shl389, !dbg !11157
  %arraydecay391 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11157
  %add.ptr392 = getelementptr i32, i32* %arraydecay391, i64 2, !dbg !11157
  %96 = load i32, i32* %add.ptr392, align 4, !dbg !11157
  %and393 = and i32 %96, 16711680, !dbg !11157
  %shr394 = lshr i32 %and393, 8, !dbg !11157
  %or395 = or i32 %or390, %shr394, !dbg !11157
  %arraydecay396 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11157
  %add.ptr397 = getelementptr i32, i32* %arraydecay396, i64 2, !dbg !11157
  %97 = load i32, i32* %add.ptr397, align 4, !dbg !11157
  %and398 = and i32 %97, -16777216, !dbg !11157
  %shr399 = lshr i32 %and398, 24, !dbg !11157
  %or400 = or i32 %or395, %shr399, !dbg !11157
  br label %cond.end405, !dbg !11157

cond.false401:                                    ; preds = %cond.false378
  %arraydecay402 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11157
  %add.ptr403 = getelementptr i32, i32* %arraydecay402, i64 2, !dbg !11157
  %98 = load i32, i32* %add.ptr403, align 4, !dbg !11157
  %call404 = call i32 @__fswab32(i32 %98) #8, !dbg !11157
  br label %cond.end405, !dbg !11157

cond.end405:                                      ; preds = %cond.false401, %cond.true381
  %cond406 = phi i32 [ %or400, %cond.true381 ], [ %call404, %cond.false401 ], !dbg !11157
  %and407 = and i32 %cond406, -65536, !dbg !11157
  %99 = load i32, i32* %_v203, align 4, !dbg !11157
  %and408 = and i32 %99, 65535, !dbg !11157
  %shl409 = shl i32 %and408, 0, !dbg !11157
  %or410 = or i32 %and407, %shl409, !dbg !11157
  %call411 = call i32 @__fswab32(i32 %or410) #8, !dbg !11157
  br label %cond.end412, !dbg !11157

cond.end412:                                      ; preds = %cond.end405, %cond.end369
  %cond413 = phi i32 [ %or377, %cond.end369 ], [ %call411, %cond.end405 ], !dbg !11157
  %arraydecay414 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11157
  %add.ptr415 = getelementptr i32, i32* %arraydecay414, i64 2, !dbg !11157
  store i32 %cond413, i32* %add.ptr415, align 4, !dbg !11157
  br label %do.end416, !dbg !11157

do.end416:                                        ; preds = %cond.end412
  br label %do.body417, !dbg !11160

do.body417:                                       ; preds = %do.end416
  call void @llvm.dbg.declare(metadata i32* %_v418, metadata !11161, metadata !DIExpression()), !dbg !11163
  store i32 1, i32* %_v418, align 4, !dbg !11163
  br label %do.body419, !dbg !11163

do.body419:                                       ; preds = %do.body417
  br label %do.end420, !dbg !11164

do.end420:                                        ; preds = %do.body419
  %arraydecay421 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11163
  %add.ptr422 = getelementptr i32, i32* %arraydecay421, i64 2, !dbg !11163
  %100 = load i32, i32* %add.ptr422, align 4, !dbg !11163
  %101 = call i1 @llvm.is.constant.i32(i32 %100), !dbg !11163
  br i1 %101, label %cond.true423, label %cond.false443, !dbg !11163

cond.true423:                                     ; preds = %do.end420
  %arraydecay424 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11163
  %add.ptr425 = getelementptr i32, i32* %arraydecay424, i64 2, !dbg !11163
  %102 = load i32, i32* %add.ptr425, align 4, !dbg !11163
  %and426 = and i32 %102, 255, !dbg !11163
  %shl427 = shl i32 %and426, 24, !dbg !11163
  %arraydecay428 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11163
  %add.ptr429 = getelementptr i32, i32* %arraydecay428, i64 2, !dbg !11163
  %103 = load i32, i32* %add.ptr429, align 4, !dbg !11163
  %and430 = and i32 %103, 65280, !dbg !11163
  %shl431 = shl i32 %and430, 8, !dbg !11163
  %or432 = or i32 %shl427, %shl431, !dbg !11163
  %arraydecay433 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11163
  %add.ptr434 = getelementptr i32, i32* %arraydecay433, i64 2, !dbg !11163
  %104 = load i32, i32* %add.ptr434, align 4, !dbg !11163
  %and435 = and i32 %104, 16711680, !dbg !11163
  %shr436 = lshr i32 %and435, 8, !dbg !11163
  %or437 = or i32 %or432, %shr436, !dbg !11163
  %arraydecay438 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11163
  %add.ptr439 = getelementptr i32, i32* %arraydecay438, i64 2, !dbg !11163
  %105 = load i32, i32* %add.ptr439, align 4, !dbg !11163
  %and440 = and i32 %105, -16777216, !dbg !11163
  %shr441 = lshr i32 %and440, 24, !dbg !11163
  %or442 = or i32 %or437, %shr441, !dbg !11163
  br label %cond.end447, !dbg !11163

cond.false443:                                    ; preds = %do.end420
  %arraydecay444 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11163
  %add.ptr445 = getelementptr i32, i32* %arraydecay444, i64 2, !dbg !11163
  %106 = load i32, i32* %add.ptr445, align 4, !dbg !11163
  %call446 = call i32 @__fswab32(i32 %106) #8, !dbg !11163
  br label %cond.end447, !dbg !11163

cond.end447:                                      ; preds = %cond.false443, %cond.true423
  %cond448 = phi i32 [ %or442, %cond.true423 ], [ %call446, %cond.false443 ], !dbg !11163
  %and449 = and i32 %cond448, 2147483647, !dbg !11163
  %107 = load i32, i32* %_v418, align 4, !dbg !11163
  %and450 = and i32 %107, 1, !dbg !11163
  %shl451 = shl i32 %and450, 31, !dbg !11163
  %or452 = or i32 %and449, %shl451, !dbg !11163
  %108 = call i1 @llvm.is.constant.i32(i32 %or452), !dbg !11163
  br i1 %108, label %cond.true453, label %cond.false593, !dbg !11163

cond.true453:                                     ; preds = %cond.end447
  %arraydecay454 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11163
  %add.ptr455 = getelementptr i32, i32* %arraydecay454, i64 2, !dbg !11163
  %109 = load i32, i32* %add.ptr455, align 4, !dbg !11163
  %110 = call i1 @llvm.is.constant.i32(i32 %109), !dbg !11163
  br i1 %110, label %cond.true456, label %cond.false476, !dbg !11163

cond.true456:                                     ; preds = %cond.true453
  %arraydecay457 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11163
  %add.ptr458 = getelementptr i32, i32* %arraydecay457, i64 2, !dbg !11163
  %111 = load i32, i32* %add.ptr458, align 4, !dbg !11163
  %and459 = and i32 %111, 255, !dbg !11163
  %shl460 = shl i32 %and459, 24, !dbg !11163
  %arraydecay461 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11163
  %add.ptr462 = getelementptr i32, i32* %arraydecay461, i64 2, !dbg !11163
  %112 = load i32, i32* %add.ptr462, align 4, !dbg !11163
  %and463 = and i32 %112, 65280, !dbg !11163
  %shl464 = shl i32 %and463, 8, !dbg !11163
  %or465 = or i32 %shl460, %shl464, !dbg !11163
  %arraydecay466 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11163
  %add.ptr467 = getelementptr i32, i32* %arraydecay466, i64 2, !dbg !11163
  %113 = load i32, i32* %add.ptr467, align 4, !dbg !11163
  %and468 = and i32 %113, 16711680, !dbg !11163
  %shr469 = lshr i32 %and468, 8, !dbg !11163
  %or470 = or i32 %or465, %shr469, !dbg !11163
  %arraydecay471 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11163
  %add.ptr472 = getelementptr i32, i32* %arraydecay471, i64 2, !dbg !11163
  %114 = load i32, i32* %add.ptr472, align 4, !dbg !11163
  %and473 = and i32 %114, -16777216, !dbg !11163
  %shr474 = lshr i32 %and473, 24, !dbg !11163
  %or475 = or i32 %or470, %shr474, !dbg !11163
  br label %cond.end480, !dbg !11163

cond.false476:                                    ; preds = %cond.true453
  %arraydecay477 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11163
  %add.ptr478 = getelementptr i32, i32* %arraydecay477, i64 2, !dbg !11163
  %115 = load i32, i32* %add.ptr478, align 4, !dbg !11163
  %call479 = call i32 @__fswab32(i32 %115) #8, !dbg !11163
  br label %cond.end480, !dbg !11163

cond.end480:                                      ; preds = %cond.false476, %cond.true456
  %cond481 = phi i32 [ %or475, %cond.true456 ], [ %call479, %cond.false476 ], !dbg !11163
  %and482 = and i32 %cond481, 2147483647, !dbg !11163
  %116 = load i32, i32* %_v418, align 4, !dbg !11163
  %and483 = and i32 %116, 1, !dbg !11163
  %shl484 = shl i32 %and483, 31, !dbg !11163
  %or485 = or i32 %and482, %shl484, !dbg !11163
  %and486 = and i32 %or485, 255, !dbg !11163
  %shl487 = shl i32 %and486, 24, !dbg !11163
  %arraydecay488 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11163
  %add.ptr489 = getelementptr i32, i32* %arraydecay488, i64 2, !dbg !11163
  %117 = load i32, i32* %add.ptr489, align 4, !dbg !11163
  %118 = call i1 @llvm.is.constant.i32(i32 %117), !dbg !11163
  br i1 %118, label %cond.true490, label %cond.false510, !dbg !11163

cond.true490:                                     ; preds = %cond.end480
  %arraydecay491 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11163
  %add.ptr492 = getelementptr i32, i32* %arraydecay491, i64 2, !dbg !11163
  %119 = load i32, i32* %add.ptr492, align 4, !dbg !11163
  %and493 = and i32 %119, 255, !dbg !11163
  %shl494 = shl i32 %and493, 24, !dbg !11163
  %arraydecay495 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11163
  %add.ptr496 = getelementptr i32, i32* %arraydecay495, i64 2, !dbg !11163
  %120 = load i32, i32* %add.ptr496, align 4, !dbg !11163
  %and497 = and i32 %120, 65280, !dbg !11163
  %shl498 = shl i32 %and497, 8, !dbg !11163
  %or499 = or i32 %shl494, %shl498, !dbg !11163
  %arraydecay500 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11163
  %add.ptr501 = getelementptr i32, i32* %arraydecay500, i64 2, !dbg !11163
  %121 = load i32, i32* %add.ptr501, align 4, !dbg !11163
  %and502 = and i32 %121, 16711680, !dbg !11163
  %shr503 = lshr i32 %and502, 8, !dbg !11163
  %or504 = or i32 %or499, %shr503, !dbg !11163
  %arraydecay505 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11163
  %add.ptr506 = getelementptr i32, i32* %arraydecay505, i64 2, !dbg !11163
  %122 = load i32, i32* %add.ptr506, align 4, !dbg !11163
  %and507 = and i32 %122, -16777216, !dbg !11163
  %shr508 = lshr i32 %and507, 24, !dbg !11163
  %or509 = or i32 %or504, %shr508, !dbg !11163
  br label %cond.end514, !dbg !11163

cond.false510:                                    ; preds = %cond.end480
  %arraydecay511 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11163
  %add.ptr512 = getelementptr i32, i32* %arraydecay511, i64 2, !dbg !11163
  %123 = load i32, i32* %add.ptr512, align 4, !dbg !11163
  %call513 = call i32 @__fswab32(i32 %123) #8, !dbg !11163
  br label %cond.end514, !dbg !11163

cond.end514:                                      ; preds = %cond.false510, %cond.true490
  %cond515 = phi i32 [ %or509, %cond.true490 ], [ %call513, %cond.false510 ], !dbg !11163
  %and516 = and i32 %cond515, 2147483647, !dbg !11163
  %124 = load i32, i32* %_v418, align 4, !dbg !11163
  %and517 = and i32 %124, 1, !dbg !11163
  %shl518 = shl i32 %and517, 31, !dbg !11163
  %or519 = or i32 %and516, %shl518, !dbg !11163
  %and520 = and i32 %or519, 65280, !dbg !11163
  %shl521 = shl i32 %and520, 8, !dbg !11163
  %or522 = or i32 %shl487, %shl521, !dbg !11163
  %arraydecay523 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11163
  %add.ptr524 = getelementptr i32, i32* %arraydecay523, i64 2, !dbg !11163
  %125 = load i32, i32* %add.ptr524, align 4, !dbg !11163
  %126 = call i1 @llvm.is.constant.i32(i32 %125), !dbg !11163
  br i1 %126, label %cond.true525, label %cond.false545, !dbg !11163

cond.true525:                                     ; preds = %cond.end514
  %arraydecay526 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11163
  %add.ptr527 = getelementptr i32, i32* %arraydecay526, i64 2, !dbg !11163
  %127 = load i32, i32* %add.ptr527, align 4, !dbg !11163
  %and528 = and i32 %127, 255, !dbg !11163
  %shl529 = shl i32 %and528, 24, !dbg !11163
  %arraydecay530 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11163
  %add.ptr531 = getelementptr i32, i32* %arraydecay530, i64 2, !dbg !11163
  %128 = load i32, i32* %add.ptr531, align 4, !dbg !11163
  %and532 = and i32 %128, 65280, !dbg !11163
  %shl533 = shl i32 %and532, 8, !dbg !11163
  %or534 = or i32 %shl529, %shl533, !dbg !11163
  %arraydecay535 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11163
  %add.ptr536 = getelementptr i32, i32* %arraydecay535, i64 2, !dbg !11163
  %129 = load i32, i32* %add.ptr536, align 4, !dbg !11163
  %and537 = and i32 %129, 16711680, !dbg !11163
  %shr538 = lshr i32 %and537, 8, !dbg !11163
  %or539 = or i32 %or534, %shr538, !dbg !11163
  %arraydecay540 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11163
  %add.ptr541 = getelementptr i32, i32* %arraydecay540, i64 2, !dbg !11163
  %130 = load i32, i32* %add.ptr541, align 4, !dbg !11163
  %and542 = and i32 %130, -16777216, !dbg !11163
  %shr543 = lshr i32 %and542, 24, !dbg !11163
  %or544 = or i32 %or539, %shr543, !dbg !11163
  br label %cond.end549, !dbg !11163

cond.false545:                                    ; preds = %cond.end514
  %arraydecay546 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11163
  %add.ptr547 = getelementptr i32, i32* %arraydecay546, i64 2, !dbg !11163
  %131 = load i32, i32* %add.ptr547, align 4, !dbg !11163
  %call548 = call i32 @__fswab32(i32 %131) #8, !dbg !11163
  br label %cond.end549, !dbg !11163

cond.end549:                                      ; preds = %cond.false545, %cond.true525
  %cond550 = phi i32 [ %or544, %cond.true525 ], [ %call548, %cond.false545 ], !dbg !11163
  %and551 = and i32 %cond550, 2147483647, !dbg !11163
  %132 = load i32, i32* %_v418, align 4, !dbg !11163
  %and552 = and i32 %132, 1, !dbg !11163
  %shl553 = shl i32 %and552, 31, !dbg !11163
  %or554 = or i32 %and551, %shl553, !dbg !11163
  %and555 = and i32 %or554, 16711680, !dbg !11163
  %shr556 = lshr i32 %and555, 8, !dbg !11163
  %or557 = or i32 %or522, %shr556, !dbg !11163
  %arraydecay558 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11163
  %add.ptr559 = getelementptr i32, i32* %arraydecay558, i64 2, !dbg !11163
  %133 = load i32, i32* %add.ptr559, align 4, !dbg !11163
  %134 = call i1 @llvm.is.constant.i32(i32 %133), !dbg !11163
  br i1 %134, label %cond.true560, label %cond.false580, !dbg !11163

cond.true560:                                     ; preds = %cond.end549
  %arraydecay561 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11163
  %add.ptr562 = getelementptr i32, i32* %arraydecay561, i64 2, !dbg !11163
  %135 = load i32, i32* %add.ptr562, align 4, !dbg !11163
  %and563 = and i32 %135, 255, !dbg !11163
  %shl564 = shl i32 %and563, 24, !dbg !11163
  %arraydecay565 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11163
  %add.ptr566 = getelementptr i32, i32* %arraydecay565, i64 2, !dbg !11163
  %136 = load i32, i32* %add.ptr566, align 4, !dbg !11163
  %and567 = and i32 %136, 65280, !dbg !11163
  %shl568 = shl i32 %and567, 8, !dbg !11163
  %or569 = or i32 %shl564, %shl568, !dbg !11163
  %arraydecay570 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11163
  %add.ptr571 = getelementptr i32, i32* %arraydecay570, i64 2, !dbg !11163
  %137 = load i32, i32* %add.ptr571, align 4, !dbg !11163
  %and572 = and i32 %137, 16711680, !dbg !11163
  %shr573 = lshr i32 %and572, 8, !dbg !11163
  %or574 = or i32 %or569, %shr573, !dbg !11163
  %arraydecay575 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11163
  %add.ptr576 = getelementptr i32, i32* %arraydecay575, i64 2, !dbg !11163
  %138 = load i32, i32* %add.ptr576, align 4, !dbg !11163
  %and577 = and i32 %138, -16777216, !dbg !11163
  %shr578 = lshr i32 %and577, 24, !dbg !11163
  %or579 = or i32 %or574, %shr578, !dbg !11163
  br label %cond.end584, !dbg !11163

cond.false580:                                    ; preds = %cond.end549
  %arraydecay581 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11163
  %add.ptr582 = getelementptr i32, i32* %arraydecay581, i64 2, !dbg !11163
  %139 = load i32, i32* %add.ptr582, align 4, !dbg !11163
  %call583 = call i32 @__fswab32(i32 %139) #8, !dbg !11163
  br label %cond.end584, !dbg !11163

cond.end584:                                      ; preds = %cond.false580, %cond.true560
  %cond585 = phi i32 [ %or579, %cond.true560 ], [ %call583, %cond.false580 ], !dbg !11163
  %and586 = and i32 %cond585, 2147483647, !dbg !11163
  %140 = load i32, i32* %_v418, align 4, !dbg !11163
  %and587 = and i32 %140, 1, !dbg !11163
  %shl588 = shl i32 %and587, 31, !dbg !11163
  %or589 = or i32 %and586, %shl588, !dbg !11163
  %and590 = and i32 %or589, -16777216, !dbg !11163
  %shr591 = lshr i32 %and590, 24, !dbg !11163
  %or592 = or i32 %or557, %shr591, !dbg !11163
  br label %cond.end627, !dbg !11163

cond.false593:                                    ; preds = %cond.end447
  %arraydecay594 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11163
  %add.ptr595 = getelementptr i32, i32* %arraydecay594, i64 2, !dbg !11163
  %141 = load i32, i32* %add.ptr595, align 4, !dbg !11163
  %142 = call i1 @llvm.is.constant.i32(i32 %141), !dbg !11163
  br i1 %142, label %cond.true596, label %cond.false616, !dbg !11163

cond.true596:                                     ; preds = %cond.false593
  %arraydecay597 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11163
  %add.ptr598 = getelementptr i32, i32* %arraydecay597, i64 2, !dbg !11163
  %143 = load i32, i32* %add.ptr598, align 4, !dbg !11163
  %and599 = and i32 %143, 255, !dbg !11163
  %shl600 = shl i32 %and599, 24, !dbg !11163
  %arraydecay601 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11163
  %add.ptr602 = getelementptr i32, i32* %arraydecay601, i64 2, !dbg !11163
  %144 = load i32, i32* %add.ptr602, align 4, !dbg !11163
  %and603 = and i32 %144, 65280, !dbg !11163
  %shl604 = shl i32 %and603, 8, !dbg !11163
  %or605 = or i32 %shl600, %shl604, !dbg !11163
  %arraydecay606 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11163
  %add.ptr607 = getelementptr i32, i32* %arraydecay606, i64 2, !dbg !11163
  %145 = load i32, i32* %add.ptr607, align 4, !dbg !11163
  %and608 = and i32 %145, 16711680, !dbg !11163
  %shr609 = lshr i32 %and608, 8, !dbg !11163
  %or610 = or i32 %or605, %shr609, !dbg !11163
  %arraydecay611 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11163
  %add.ptr612 = getelementptr i32, i32* %arraydecay611, i64 2, !dbg !11163
  %146 = load i32, i32* %add.ptr612, align 4, !dbg !11163
  %and613 = and i32 %146, -16777216, !dbg !11163
  %shr614 = lshr i32 %and613, 24, !dbg !11163
  %or615 = or i32 %or610, %shr614, !dbg !11163
  br label %cond.end620, !dbg !11163

cond.false616:                                    ; preds = %cond.false593
  %arraydecay617 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11163
  %add.ptr618 = getelementptr i32, i32* %arraydecay617, i64 2, !dbg !11163
  %147 = load i32, i32* %add.ptr618, align 4, !dbg !11163
  %call619 = call i32 @__fswab32(i32 %147) #8, !dbg !11163
  br label %cond.end620, !dbg !11163

cond.end620:                                      ; preds = %cond.false616, %cond.true596
  %cond621 = phi i32 [ %or615, %cond.true596 ], [ %call619, %cond.false616 ], !dbg !11163
  %and622 = and i32 %cond621, 2147483647, !dbg !11163
  %148 = load i32, i32* %_v418, align 4, !dbg !11163
  %and623 = and i32 %148, 1, !dbg !11163
  %shl624 = shl i32 %and623, 31, !dbg !11163
  %or625 = or i32 %and622, %shl624, !dbg !11163
  %call626 = call i32 @__fswab32(i32 %or625) #8, !dbg !11163
  br label %cond.end627, !dbg !11163

cond.end627:                                      ; preds = %cond.end620, %cond.end584
  %cond628 = phi i32 [ %or592, %cond.end584 ], [ %call626, %cond.end620 ], !dbg !11163
  %arraydecay629 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11163
  %add.ptr630 = getelementptr i32, i32* %arraydecay629, i64 2, !dbg !11163
  store i32 %cond628, i32* %add.ptr630, align 4, !dbg !11163
  br label %do.end631, !dbg !11163

do.end631:                                        ; preds = %cond.end627
  %arraydecay632 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11166
  %149 = bitcast i32* %arraydecay632 to i8*, !dbg !11166
  %add.ptr633 = getelementptr i8, i8* %149, i64 256, !dbg !11166
  store i8* %add.ptr633, i8** %nic_vport_ctx, align 8, !dbg !11167
  br label %do.body634, !dbg !11168

do.body634:                                       ; preds = %do.end631
  call void @llvm.dbg.declare(metadata i32* %_v635, metadata !11169, metadata !DIExpression()), !dbg !11171
  %150 = load i8, i8* %min_inline.addr, align 1, !dbg !11171
  %conv636 = zext i8 %150 to i32, !dbg !11171
  store i32 %conv636, i32* %_v635, align 4, !dbg !11171
  br label %do.body637, !dbg !11171

do.body637:                                       ; preds = %do.body634
  br label %do.end638, !dbg !11172

do.end638:                                        ; preds = %do.body637
  %151 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !11171
  %152 = bitcast i8* %151 to i32*, !dbg !11171
  %add.ptr639 = getelementptr i32, i32* %152, i64 0, !dbg !11171
  %153 = load i32, i32* %add.ptr639, align 4, !dbg !11171
  %154 = call i1 @llvm.is.constant.i32(i32 %153), !dbg !11171
  br i1 %154, label %cond.true640, label %cond.false656, !dbg !11171

cond.true640:                                     ; preds = %do.end638
  %155 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !11171
  %156 = bitcast i8* %155 to i32*, !dbg !11171
  %add.ptr641 = getelementptr i32, i32* %156, i64 0, !dbg !11171
  %157 = load i32, i32* %add.ptr641, align 4, !dbg !11171
  %and642 = and i32 %157, 255, !dbg !11171
  %shl643 = shl i32 %and642, 24, !dbg !11171
  %158 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !11171
  %159 = bitcast i8* %158 to i32*, !dbg !11171
  %add.ptr644 = getelementptr i32, i32* %159, i64 0, !dbg !11171
  %160 = load i32, i32* %add.ptr644, align 4, !dbg !11171
  %and645 = and i32 %160, 65280, !dbg !11171
  %shl646 = shl i32 %and645, 8, !dbg !11171
  %or647 = or i32 %shl643, %shl646, !dbg !11171
  %161 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !11171
  %162 = bitcast i8* %161 to i32*, !dbg !11171
  %add.ptr648 = getelementptr i32, i32* %162, i64 0, !dbg !11171
  %163 = load i32, i32* %add.ptr648, align 4, !dbg !11171
  %and649 = and i32 %163, 16711680, !dbg !11171
  %shr650 = lshr i32 %and649, 8, !dbg !11171
  %or651 = or i32 %or647, %shr650, !dbg !11171
  %164 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !11171
  %165 = bitcast i8* %164 to i32*, !dbg !11171
  %add.ptr652 = getelementptr i32, i32* %165, i64 0, !dbg !11171
  %166 = load i32, i32* %add.ptr652, align 4, !dbg !11171
  %and653 = and i32 %166, -16777216, !dbg !11171
  %shr654 = lshr i32 %and653, 24, !dbg !11171
  %or655 = or i32 %or651, %shr654, !dbg !11171
  br label %cond.end659, !dbg !11171

cond.false656:                                    ; preds = %do.end638
  %167 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !11171
  %168 = bitcast i8* %167 to i32*, !dbg !11171
  %add.ptr657 = getelementptr i32, i32* %168, i64 0, !dbg !11171
  %169 = load i32, i32* %add.ptr657, align 4, !dbg !11171
  %call658 = call i32 @__fswab32(i32 %169) #8, !dbg !11171
  br label %cond.end659, !dbg !11171

cond.end659:                                      ; preds = %cond.false656, %cond.true640
  %cond660 = phi i32 [ %or655, %cond.true640 ], [ %call658, %cond.false656 ], !dbg !11171
  %and661 = and i32 %cond660, -117440513, !dbg !11171
  %170 = load i32, i32* %_v635, align 4, !dbg !11171
  %and662 = and i32 %170, 7, !dbg !11171
  %shl663 = shl i32 %and662, 24, !dbg !11171
  %or664 = or i32 %and661, %shl663, !dbg !11171
  %171 = call i1 @llvm.is.constant.i32(i32 %or664), !dbg !11171
  br i1 %171, label %cond.true665, label %cond.false781, !dbg !11171

cond.true665:                                     ; preds = %cond.end659
  %172 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !11171
  %173 = bitcast i8* %172 to i32*, !dbg !11171
  %add.ptr666 = getelementptr i32, i32* %173, i64 0, !dbg !11171
  %174 = load i32, i32* %add.ptr666, align 4, !dbg !11171
  %175 = call i1 @llvm.is.constant.i32(i32 %174), !dbg !11171
  br i1 %175, label %cond.true667, label %cond.false683, !dbg !11171

cond.true667:                                     ; preds = %cond.true665
  %176 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !11171
  %177 = bitcast i8* %176 to i32*, !dbg !11171
  %add.ptr668 = getelementptr i32, i32* %177, i64 0, !dbg !11171
  %178 = load i32, i32* %add.ptr668, align 4, !dbg !11171
  %and669 = and i32 %178, 255, !dbg !11171
  %shl670 = shl i32 %and669, 24, !dbg !11171
  %179 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !11171
  %180 = bitcast i8* %179 to i32*, !dbg !11171
  %add.ptr671 = getelementptr i32, i32* %180, i64 0, !dbg !11171
  %181 = load i32, i32* %add.ptr671, align 4, !dbg !11171
  %and672 = and i32 %181, 65280, !dbg !11171
  %shl673 = shl i32 %and672, 8, !dbg !11171
  %or674 = or i32 %shl670, %shl673, !dbg !11171
  %182 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !11171
  %183 = bitcast i8* %182 to i32*, !dbg !11171
  %add.ptr675 = getelementptr i32, i32* %183, i64 0, !dbg !11171
  %184 = load i32, i32* %add.ptr675, align 4, !dbg !11171
  %and676 = and i32 %184, 16711680, !dbg !11171
  %shr677 = lshr i32 %and676, 8, !dbg !11171
  %or678 = or i32 %or674, %shr677, !dbg !11171
  %185 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !11171
  %186 = bitcast i8* %185 to i32*, !dbg !11171
  %add.ptr679 = getelementptr i32, i32* %186, i64 0, !dbg !11171
  %187 = load i32, i32* %add.ptr679, align 4, !dbg !11171
  %and680 = and i32 %187, -16777216, !dbg !11171
  %shr681 = lshr i32 %and680, 24, !dbg !11171
  %or682 = or i32 %or678, %shr681, !dbg !11171
  br label %cond.end686, !dbg !11171

cond.false683:                                    ; preds = %cond.true665
  %188 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !11171
  %189 = bitcast i8* %188 to i32*, !dbg !11171
  %add.ptr684 = getelementptr i32, i32* %189, i64 0, !dbg !11171
  %190 = load i32, i32* %add.ptr684, align 4, !dbg !11171
  %call685 = call i32 @__fswab32(i32 %190) #8, !dbg !11171
  br label %cond.end686, !dbg !11171

cond.end686:                                      ; preds = %cond.false683, %cond.true667
  %cond687 = phi i32 [ %or682, %cond.true667 ], [ %call685, %cond.false683 ], !dbg !11171
  %and688 = and i32 %cond687, -117440513, !dbg !11171
  %191 = load i32, i32* %_v635, align 4, !dbg !11171
  %and689 = and i32 %191, 7, !dbg !11171
  %shl690 = shl i32 %and689, 24, !dbg !11171
  %or691 = or i32 %and688, %shl690, !dbg !11171
  %and692 = and i32 %or691, 255, !dbg !11171
  %shl693 = shl i32 %and692, 24, !dbg !11171
  %192 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !11171
  %193 = bitcast i8* %192 to i32*, !dbg !11171
  %add.ptr694 = getelementptr i32, i32* %193, i64 0, !dbg !11171
  %194 = load i32, i32* %add.ptr694, align 4, !dbg !11171
  %195 = call i1 @llvm.is.constant.i32(i32 %194), !dbg !11171
  br i1 %195, label %cond.true695, label %cond.false711, !dbg !11171

cond.true695:                                     ; preds = %cond.end686
  %196 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !11171
  %197 = bitcast i8* %196 to i32*, !dbg !11171
  %add.ptr696 = getelementptr i32, i32* %197, i64 0, !dbg !11171
  %198 = load i32, i32* %add.ptr696, align 4, !dbg !11171
  %and697 = and i32 %198, 255, !dbg !11171
  %shl698 = shl i32 %and697, 24, !dbg !11171
  %199 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !11171
  %200 = bitcast i8* %199 to i32*, !dbg !11171
  %add.ptr699 = getelementptr i32, i32* %200, i64 0, !dbg !11171
  %201 = load i32, i32* %add.ptr699, align 4, !dbg !11171
  %and700 = and i32 %201, 65280, !dbg !11171
  %shl701 = shl i32 %and700, 8, !dbg !11171
  %or702 = or i32 %shl698, %shl701, !dbg !11171
  %202 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !11171
  %203 = bitcast i8* %202 to i32*, !dbg !11171
  %add.ptr703 = getelementptr i32, i32* %203, i64 0, !dbg !11171
  %204 = load i32, i32* %add.ptr703, align 4, !dbg !11171
  %and704 = and i32 %204, 16711680, !dbg !11171
  %shr705 = lshr i32 %and704, 8, !dbg !11171
  %or706 = or i32 %or702, %shr705, !dbg !11171
  %205 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !11171
  %206 = bitcast i8* %205 to i32*, !dbg !11171
  %add.ptr707 = getelementptr i32, i32* %206, i64 0, !dbg !11171
  %207 = load i32, i32* %add.ptr707, align 4, !dbg !11171
  %and708 = and i32 %207, -16777216, !dbg !11171
  %shr709 = lshr i32 %and708, 24, !dbg !11171
  %or710 = or i32 %or706, %shr709, !dbg !11171
  br label %cond.end714, !dbg !11171

cond.false711:                                    ; preds = %cond.end686
  %208 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !11171
  %209 = bitcast i8* %208 to i32*, !dbg !11171
  %add.ptr712 = getelementptr i32, i32* %209, i64 0, !dbg !11171
  %210 = load i32, i32* %add.ptr712, align 4, !dbg !11171
  %call713 = call i32 @__fswab32(i32 %210) #8, !dbg !11171
  br label %cond.end714, !dbg !11171

cond.end714:                                      ; preds = %cond.false711, %cond.true695
  %cond715 = phi i32 [ %or710, %cond.true695 ], [ %call713, %cond.false711 ], !dbg !11171
  %and716 = and i32 %cond715, -117440513, !dbg !11171
  %211 = load i32, i32* %_v635, align 4, !dbg !11171
  %and717 = and i32 %211, 7, !dbg !11171
  %shl718 = shl i32 %and717, 24, !dbg !11171
  %or719 = or i32 %and716, %shl718, !dbg !11171
  %and720 = and i32 %or719, 65280, !dbg !11171
  %shl721 = shl i32 %and720, 8, !dbg !11171
  %or722 = or i32 %shl693, %shl721, !dbg !11171
  %212 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !11171
  %213 = bitcast i8* %212 to i32*, !dbg !11171
  %add.ptr723 = getelementptr i32, i32* %213, i64 0, !dbg !11171
  %214 = load i32, i32* %add.ptr723, align 4, !dbg !11171
  %215 = call i1 @llvm.is.constant.i32(i32 %214), !dbg !11171
  br i1 %215, label %cond.true724, label %cond.false740, !dbg !11171

cond.true724:                                     ; preds = %cond.end714
  %216 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !11171
  %217 = bitcast i8* %216 to i32*, !dbg !11171
  %add.ptr725 = getelementptr i32, i32* %217, i64 0, !dbg !11171
  %218 = load i32, i32* %add.ptr725, align 4, !dbg !11171
  %and726 = and i32 %218, 255, !dbg !11171
  %shl727 = shl i32 %and726, 24, !dbg !11171
  %219 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !11171
  %220 = bitcast i8* %219 to i32*, !dbg !11171
  %add.ptr728 = getelementptr i32, i32* %220, i64 0, !dbg !11171
  %221 = load i32, i32* %add.ptr728, align 4, !dbg !11171
  %and729 = and i32 %221, 65280, !dbg !11171
  %shl730 = shl i32 %and729, 8, !dbg !11171
  %or731 = or i32 %shl727, %shl730, !dbg !11171
  %222 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !11171
  %223 = bitcast i8* %222 to i32*, !dbg !11171
  %add.ptr732 = getelementptr i32, i32* %223, i64 0, !dbg !11171
  %224 = load i32, i32* %add.ptr732, align 4, !dbg !11171
  %and733 = and i32 %224, 16711680, !dbg !11171
  %shr734 = lshr i32 %and733, 8, !dbg !11171
  %or735 = or i32 %or731, %shr734, !dbg !11171
  %225 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !11171
  %226 = bitcast i8* %225 to i32*, !dbg !11171
  %add.ptr736 = getelementptr i32, i32* %226, i64 0, !dbg !11171
  %227 = load i32, i32* %add.ptr736, align 4, !dbg !11171
  %and737 = and i32 %227, -16777216, !dbg !11171
  %shr738 = lshr i32 %and737, 24, !dbg !11171
  %or739 = or i32 %or735, %shr738, !dbg !11171
  br label %cond.end743, !dbg !11171

cond.false740:                                    ; preds = %cond.end714
  %228 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !11171
  %229 = bitcast i8* %228 to i32*, !dbg !11171
  %add.ptr741 = getelementptr i32, i32* %229, i64 0, !dbg !11171
  %230 = load i32, i32* %add.ptr741, align 4, !dbg !11171
  %call742 = call i32 @__fswab32(i32 %230) #8, !dbg !11171
  br label %cond.end743, !dbg !11171

cond.end743:                                      ; preds = %cond.false740, %cond.true724
  %cond744 = phi i32 [ %or739, %cond.true724 ], [ %call742, %cond.false740 ], !dbg !11171
  %and745 = and i32 %cond744, -117440513, !dbg !11171
  %231 = load i32, i32* %_v635, align 4, !dbg !11171
  %and746 = and i32 %231, 7, !dbg !11171
  %shl747 = shl i32 %and746, 24, !dbg !11171
  %or748 = or i32 %and745, %shl747, !dbg !11171
  %and749 = and i32 %or748, 16711680, !dbg !11171
  %shr750 = lshr i32 %and749, 8, !dbg !11171
  %or751 = or i32 %or722, %shr750, !dbg !11171
  %232 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !11171
  %233 = bitcast i8* %232 to i32*, !dbg !11171
  %add.ptr752 = getelementptr i32, i32* %233, i64 0, !dbg !11171
  %234 = load i32, i32* %add.ptr752, align 4, !dbg !11171
  %235 = call i1 @llvm.is.constant.i32(i32 %234), !dbg !11171
  br i1 %235, label %cond.true753, label %cond.false769, !dbg !11171

cond.true753:                                     ; preds = %cond.end743
  %236 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !11171
  %237 = bitcast i8* %236 to i32*, !dbg !11171
  %add.ptr754 = getelementptr i32, i32* %237, i64 0, !dbg !11171
  %238 = load i32, i32* %add.ptr754, align 4, !dbg !11171
  %and755 = and i32 %238, 255, !dbg !11171
  %shl756 = shl i32 %and755, 24, !dbg !11171
  %239 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !11171
  %240 = bitcast i8* %239 to i32*, !dbg !11171
  %add.ptr757 = getelementptr i32, i32* %240, i64 0, !dbg !11171
  %241 = load i32, i32* %add.ptr757, align 4, !dbg !11171
  %and758 = and i32 %241, 65280, !dbg !11171
  %shl759 = shl i32 %and758, 8, !dbg !11171
  %or760 = or i32 %shl756, %shl759, !dbg !11171
  %242 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !11171
  %243 = bitcast i8* %242 to i32*, !dbg !11171
  %add.ptr761 = getelementptr i32, i32* %243, i64 0, !dbg !11171
  %244 = load i32, i32* %add.ptr761, align 4, !dbg !11171
  %and762 = and i32 %244, 16711680, !dbg !11171
  %shr763 = lshr i32 %and762, 8, !dbg !11171
  %or764 = or i32 %or760, %shr763, !dbg !11171
  %245 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !11171
  %246 = bitcast i8* %245 to i32*, !dbg !11171
  %add.ptr765 = getelementptr i32, i32* %246, i64 0, !dbg !11171
  %247 = load i32, i32* %add.ptr765, align 4, !dbg !11171
  %and766 = and i32 %247, -16777216, !dbg !11171
  %shr767 = lshr i32 %and766, 24, !dbg !11171
  %or768 = or i32 %or764, %shr767, !dbg !11171
  br label %cond.end772, !dbg !11171

cond.false769:                                    ; preds = %cond.end743
  %248 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !11171
  %249 = bitcast i8* %248 to i32*, !dbg !11171
  %add.ptr770 = getelementptr i32, i32* %249, i64 0, !dbg !11171
  %250 = load i32, i32* %add.ptr770, align 4, !dbg !11171
  %call771 = call i32 @__fswab32(i32 %250) #8, !dbg !11171
  br label %cond.end772, !dbg !11171

cond.end772:                                      ; preds = %cond.false769, %cond.true753
  %cond773 = phi i32 [ %or768, %cond.true753 ], [ %call771, %cond.false769 ], !dbg !11171
  %and774 = and i32 %cond773, -117440513, !dbg !11171
  %251 = load i32, i32* %_v635, align 4, !dbg !11171
  %and775 = and i32 %251, 7, !dbg !11171
  %shl776 = shl i32 %and775, 24, !dbg !11171
  %or777 = or i32 %and774, %shl776, !dbg !11171
  %and778 = and i32 %or777, -16777216, !dbg !11171
  %shr779 = lshr i32 %and778, 24, !dbg !11171
  %or780 = or i32 %or751, %shr779, !dbg !11171
  br label %cond.end809, !dbg !11171

cond.false781:                                    ; preds = %cond.end659
  %252 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !11171
  %253 = bitcast i8* %252 to i32*, !dbg !11171
  %add.ptr782 = getelementptr i32, i32* %253, i64 0, !dbg !11171
  %254 = load i32, i32* %add.ptr782, align 4, !dbg !11171
  %255 = call i1 @llvm.is.constant.i32(i32 %254), !dbg !11171
  br i1 %255, label %cond.true783, label %cond.false799, !dbg !11171

cond.true783:                                     ; preds = %cond.false781
  %256 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !11171
  %257 = bitcast i8* %256 to i32*, !dbg !11171
  %add.ptr784 = getelementptr i32, i32* %257, i64 0, !dbg !11171
  %258 = load i32, i32* %add.ptr784, align 4, !dbg !11171
  %and785 = and i32 %258, 255, !dbg !11171
  %shl786 = shl i32 %and785, 24, !dbg !11171
  %259 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !11171
  %260 = bitcast i8* %259 to i32*, !dbg !11171
  %add.ptr787 = getelementptr i32, i32* %260, i64 0, !dbg !11171
  %261 = load i32, i32* %add.ptr787, align 4, !dbg !11171
  %and788 = and i32 %261, 65280, !dbg !11171
  %shl789 = shl i32 %and788, 8, !dbg !11171
  %or790 = or i32 %shl786, %shl789, !dbg !11171
  %262 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !11171
  %263 = bitcast i8* %262 to i32*, !dbg !11171
  %add.ptr791 = getelementptr i32, i32* %263, i64 0, !dbg !11171
  %264 = load i32, i32* %add.ptr791, align 4, !dbg !11171
  %and792 = and i32 %264, 16711680, !dbg !11171
  %shr793 = lshr i32 %and792, 8, !dbg !11171
  %or794 = or i32 %or790, %shr793, !dbg !11171
  %265 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !11171
  %266 = bitcast i8* %265 to i32*, !dbg !11171
  %add.ptr795 = getelementptr i32, i32* %266, i64 0, !dbg !11171
  %267 = load i32, i32* %add.ptr795, align 4, !dbg !11171
  %and796 = and i32 %267, -16777216, !dbg !11171
  %shr797 = lshr i32 %and796, 24, !dbg !11171
  %or798 = or i32 %or794, %shr797, !dbg !11171
  br label %cond.end802, !dbg !11171

cond.false799:                                    ; preds = %cond.false781
  %268 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !11171
  %269 = bitcast i8* %268 to i32*, !dbg !11171
  %add.ptr800 = getelementptr i32, i32* %269, i64 0, !dbg !11171
  %270 = load i32, i32* %add.ptr800, align 4, !dbg !11171
  %call801 = call i32 @__fswab32(i32 %270) #8, !dbg !11171
  br label %cond.end802, !dbg !11171

cond.end802:                                      ; preds = %cond.false799, %cond.true783
  %cond803 = phi i32 [ %or798, %cond.true783 ], [ %call801, %cond.false799 ], !dbg !11171
  %and804 = and i32 %cond803, -117440513, !dbg !11171
  %271 = load i32, i32* %_v635, align 4, !dbg !11171
  %and805 = and i32 %271, 7, !dbg !11171
  %shl806 = shl i32 %and805, 24, !dbg !11171
  %or807 = or i32 %and804, %shl806, !dbg !11171
  %call808 = call i32 @__fswab32(i32 %or807) #8, !dbg !11171
  br label %cond.end809, !dbg !11171

cond.end809:                                      ; preds = %cond.end802, %cond.end772
  %cond810 = phi i32 [ %or780, %cond.end772 ], [ %call808, %cond.end802 ], !dbg !11171
  %272 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !11171
  %273 = bitcast i8* %272 to i32*, !dbg !11171
  %add.ptr811 = getelementptr i32, i32* %273, i64 0, !dbg !11171
  store i32 %cond810, i32* %add.ptr811, align 4, !dbg !11171
  br label %do.end812, !dbg !11171

do.end812:                                        ; preds = %cond.end809
  br label %do.body813, !dbg !11174

do.body813:                                       ; preds = %do.end812
  call void @llvm.dbg.declare(metadata i32* %_v814, metadata !11175, metadata !DIExpression()), !dbg !11177
  store i32 1877, i32* %_v814, align 4, !dbg !11177
  br label %do.body815, !dbg !11177

do.body815:                                       ; preds = %do.body813
  br label %do.end816, !dbg !11178

do.end816:                                        ; preds = %do.body815
  %arraydecay817 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11177
  %add.ptr818 = getelementptr i32, i32* %arraydecay817, i64 0, !dbg !11177
  %274 = load i32, i32* %add.ptr818, align 4, !dbg !11177
  %275 = call i1 @llvm.is.constant.i32(i32 %274), !dbg !11177
  br i1 %275, label %cond.true819, label %cond.false839, !dbg !11177

cond.true819:                                     ; preds = %do.end816
  %arraydecay820 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11177
  %add.ptr821 = getelementptr i32, i32* %arraydecay820, i64 0, !dbg !11177
  %276 = load i32, i32* %add.ptr821, align 4, !dbg !11177
  %and822 = and i32 %276, 255, !dbg !11177
  %shl823 = shl i32 %and822, 24, !dbg !11177
  %arraydecay824 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11177
  %add.ptr825 = getelementptr i32, i32* %arraydecay824, i64 0, !dbg !11177
  %277 = load i32, i32* %add.ptr825, align 4, !dbg !11177
  %and826 = and i32 %277, 65280, !dbg !11177
  %shl827 = shl i32 %and826, 8, !dbg !11177
  %or828 = or i32 %shl823, %shl827, !dbg !11177
  %arraydecay829 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11177
  %add.ptr830 = getelementptr i32, i32* %arraydecay829, i64 0, !dbg !11177
  %278 = load i32, i32* %add.ptr830, align 4, !dbg !11177
  %and831 = and i32 %278, 16711680, !dbg !11177
  %shr832 = lshr i32 %and831, 8, !dbg !11177
  %or833 = or i32 %or828, %shr832, !dbg !11177
  %arraydecay834 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11177
  %add.ptr835 = getelementptr i32, i32* %arraydecay834, i64 0, !dbg !11177
  %279 = load i32, i32* %add.ptr835, align 4, !dbg !11177
  %and836 = and i32 %279, -16777216, !dbg !11177
  %shr837 = lshr i32 %and836, 24, !dbg !11177
  %or838 = or i32 %or833, %shr837, !dbg !11177
  br label %cond.end843, !dbg !11177

cond.false839:                                    ; preds = %do.end816
  %arraydecay840 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11177
  %add.ptr841 = getelementptr i32, i32* %arraydecay840, i64 0, !dbg !11177
  %280 = load i32, i32* %add.ptr841, align 4, !dbg !11177
  %call842 = call i32 @__fswab32(i32 %280) #8, !dbg !11177
  br label %cond.end843, !dbg !11177

cond.end843:                                      ; preds = %cond.false839, %cond.true819
  %cond844 = phi i32 [ %or838, %cond.true819 ], [ %call842, %cond.false839 ], !dbg !11177
  %and845 = and i32 %cond844, 65535, !dbg !11177
  %281 = load i32, i32* %_v814, align 4, !dbg !11177
  %and846 = and i32 %281, 65535, !dbg !11177
  %shl847 = shl i32 %and846, 16, !dbg !11177
  %or848 = or i32 %and845, %shl847, !dbg !11177
  %282 = call i1 @llvm.is.constant.i32(i32 %or848), !dbg !11177
  br i1 %282, label %cond.true849, label %cond.false989, !dbg !11177

cond.true849:                                     ; preds = %cond.end843
  %arraydecay850 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11177
  %add.ptr851 = getelementptr i32, i32* %arraydecay850, i64 0, !dbg !11177
  %283 = load i32, i32* %add.ptr851, align 4, !dbg !11177
  %284 = call i1 @llvm.is.constant.i32(i32 %283), !dbg !11177
  br i1 %284, label %cond.true852, label %cond.false872, !dbg !11177

cond.true852:                                     ; preds = %cond.true849
  %arraydecay853 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11177
  %add.ptr854 = getelementptr i32, i32* %arraydecay853, i64 0, !dbg !11177
  %285 = load i32, i32* %add.ptr854, align 4, !dbg !11177
  %and855 = and i32 %285, 255, !dbg !11177
  %shl856 = shl i32 %and855, 24, !dbg !11177
  %arraydecay857 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11177
  %add.ptr858 = getelementptr i32, i32* %arraydecay857, i64 0, !dbg !11177
  %286 = load i32, i32* %add.ptr858, align 4, !dbg !11177
  %and859 = and i32 %286, 65280, !dbg !11177
  %shl860 = shl i32 %and859, 8, !dbg !11177
  %or861 = or i32 %shl856, %shl860, !dbg !11177
  %arraydecay862 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11177
  %add.ptr863 = getelementptr i32, i32* %arraydecay862, i64 0, !dbg !11177
  %287 = load i32, i32* %add.ptr863, align 4, !dbg !11177
  %and864 = and i32 %287, 16711680, !dbg !11177
  %shr865 = lshr i32 %and864, 8, !dbg !11177
  %or866 = or i32 %or861, %shr865, !dbg !11177
  %arraydecay867 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11177
  %add.ptr868 = getelementptr i32, i32* %arraydecay867, i64 0, !dbg !11177
  %288 = load i32, i32* %add.ptr868, align 4, !dbg !11177
  %and869 = and i32 %288, -16777216, !dbg !11177
  %shr870 = lshr i32 %and869, 24, !dbg !11177
  %or871 = or i32 %or866, %shr870, !dbg !11177
  br label %cond.end876, !dbg !11177

cond.false872:                                    ; preds = %cond.true849
  %arraydecay873 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11177
  %add.ptr874 = getelementptr i32, i32* %arraydecay873, i64 0, !dbg !11177
  %289 = load i32, i32* %add.ptr874, align 4, !dbg !11177
  %call875 = call i32 @__fswab32(i32 %289) #8, !dbg !11177
  br label %cond.end876, !dbg !11177

cond.end876:                                      ; preds = %cond.false872, %cond.true852
  %cond877 = phi i32 [ %or871, %cond.true852 ], [ %call875, %cond.false872 ], !dbg !11177
  %and878 = and i32 %cond877, 65535, !dbg !11177
  %290 = load i32, i32* %_v814, align 4, !dbg !11177
  %and879 = and i32 %290, 65535, !dbg !11177
  %shl880 = shl i32 %and879, 16, !dbg !11177
  %or881 = or i32 %and878, %shl880, !dbg !11177
  %and882 = and i32 %or881, 255, !dbg !11177
  %shl883 = shl i32 %and882, 24, !dbg !11177
  %arraydecay884 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11177
  %add.ptr885 = getelementptr i32, i32* %arraydecay884, i64 0, !dbg !11177
  %291 = load i32, i32* %add.ptr885, align 4, !dbg !11177
  %292 = call i1 @llvm.is.constant.i32(i32 %291), !dbg !11177
  br i1 %292, label %cond.true886, label %cond.false906, !dbg !11177

cond.true886:                                     ; preds = %cond.end876
  %arraydecay887 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11177
  %add.ptr888 = getelementptr i32, i32* %arraydecay887, i64 0, !dbg !11177
  %293 = load i32, i32* %add.ptr888, align 4, !dbg !11177
  %and889 = and i32 %293, 255, !dbg !11177
  %shl890 = shl i32 %and889, 24, !dbg !11177
  %arraydecay891 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11177
  %add.ptr892 = getelementptr i32, i32* %arraydecay891, i64 0, !dbg !11177
  %294 = load i32, i32* %add.ptr892, align 4, !dbg !11177
  %and893 = and i32 %294, 65280, !dbg !11177
  %shl894 = shl i32 %and893, 8, !dbg !11177
  %or895 = or i32 %shl890, %shl894, !dbg !11177
  %arraydecay896 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11177
  %add.ptr897 = getelementptr i32, i32* %arraydecay896, i64 0, !dbg !11177
  %295 = load i32, i32* %add.ptr897, align 4, !dbg !11177
  %and898 = and i32 %295, 16711680, !dbg !11177
  %shr899 = lshr i32 %and898, 8, !dbg !11177
  %or900 = or i32 %or895, %shr899, !dbg !11177
  %arraydecay901 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11177
  %add.ptr902 = getelementptr i32, i32* %arraydecay901, i64 0, !dbg !11177
  %296 = load i32, i32* %add.ptr902, align 4, !dbg !11177
  %and903 = and i32 %296, -16777216, !dbg !11177
  %shr904 = lshr i32 %and903, 24, !dbg !11177
  %or905 = or i32 %or900, %shr904, !dbg !11177
  br label %cond.end910, !dbg !11177

cond.false906:                                    ; preds = %cond.end876
  %arraydecay907 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11177
  %add.ptr908 = getelementptr i32, i32* %arraydecay907, i64 0, !dbg !11177
  %297 = load i32, i32* %add.ptr908, align 4, !dbg !11177
  %call909 = call i32 @__fswab32(i32 %297) #8, !dbg !11177
  br label %cond.end910, !dbg !11177

cond.end910:                                      ; preds = %cond.false906, %cond.true886
  %cond911 = phi i32 [ %or905, %cond.true886 ], [ %call909, %cond.false906 ], !dbg !11177
  %and912 = and i32 %cond911, 65535, !dbg !11177
  %298 = load i32, i32* %_v814, align 4, !dbg !11177
  %and913 = and i32 %298, 65535, !dbg !11177
  %shl914 = shl i32 %and913, 16, !dbg !11177
  %or915 = or i32 %and912, %shl914, !dbg !11177
  %and916 = and i32 %or915, 65280, !dbg !11177
  %shl917 = shl i32 %and916, 8, !dbg !11177
  %or918 = or i32 %shl883, %shl917, !dbg !11177
  %arraydecay919 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11177
  %add.ptr920 = getelementptr i32, i32* %arraydecay919, i64 0, !dbg !11177
  %299 = load i32, i32* %add.ptr920, align 4, !dbg !11177
  %300 = call i1 @llvm.is.constant.i32(i32 %299), !dbg !11177
  br i1 %300, label %cond.true921, label %cond.false941, !dbg !11177

cond.true921:                                     ; preds = %cond.end910
  %arraydecay922 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11177
  %add.ptr923 = getelementptr i32, i32* %arraydecay922, i64 0, !dbg !11177
  %301 = load i32, i32* %add.ptr923, align 4, !dbg !11177
  %and924 = and i32 %301, 255, !dbg !11177
  %shl925 = shl i32 %and924, 24, !dbg !11177
  %arraydecay926 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11177
  %add.ptr927 = getelementptr i32, i32* %arraydecay926, i64 0, !dbg !11177
  %302 = load i32, i32* %add.ptr927, align 4, !dbg !11177
  %and928 = and i32 %302, 65280, !dbg !11177
  %shl929 = shl i32 %and928, 8, !dbg !11177
  %or930 = or i32 %shl925, %shl929, !dbg !11177
  %arraydecay931 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11177
  %add.ptr932 = getelementptr i32, i32* %arraydecay931, i64 0, !dbg !11177
  %303 = load i32, i32* %add.ptr932, align 4, !dbg !11177
  %and933 = and i32 %303, 16711680, !dbg !11177
  %shr934 = lshr i32 %and933, 8, !dbg !11177
  %or935 = or i32 %or930, %shr934, !dbg !11177
  %arraydecay936 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11177
  %add.ptr937 = getelementptr i32, i32* %arraydecay936, i64 0, !dbg !11177
  %304 = load i32, i32* %add.ptr937, align 4, !dbg !11177
  %and938 = and i32 %304, -16777216, !dbg !11177
  %shr939 = lshr i32 %and938, 24, !dbg !11177
  %or940 = or i32 %or935, %shr939, !dbg !11177
  br label %cond.end945, !dbg !11177

cond.false941:                                    ; preds = %cond.end910
  %arraydecay942 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11177
  %add.ptr943 = getelementptr i32, i32* %arraydecay942, i64 0, !dbg !11177
  %305 = load i32, i32* %add.ptr943, align 4, !dbg !11177
  %call944 = call i32 @__fswab32(i32 %305) #8, !dbg !11177
  br label %cond.end945, !dbg !11177

cond.end945:                                      ; preds = %cond.false941, %cond.true921
  %cond946 = phi i32 [ %or940, %cond.true921 ], [ %call944, %cond.false941 ], !dbg !11177
  %and947 = and i32 %cond946, 65535, !dbg !11177
  %306 = load i32, i32* %_v814, align 4, !dbg !11177
  %and948 = and i32 %306, 65535, !dbg !11177
  %shl949 = shl i32 %and948, 16, !dbg !11177
  %or950 = or i32 %and947, %shl949, !dbg !11177
  %and951 = and i32 %or950, 16711680, !dbg !11177
  %shr952 = lshr i32 %and951, 8, !dbg !11177
  %or953 = or i32 %or918, %shr952, !dbg !11177
  %arraydecay954 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11177
  %add.ptr955 = getelementptr i32, i32* %arraydecay954, i64 0, !dbg !11177
  %307 = load i32, i32* %add.ptr955, align 4, !dbg !11177
  %308 = call i1 @llvm.is.constant.i32(i32 %307), !dbg !11177
  br i1 %308, label %cond.true956, label %cond.false976, !dbg !11177

cond.true956:                                     ; preds = %cond.end945
  %arraydecay957 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11177
  %add.ptr958 = getelementptr i32, i32* %arraydecay957, i64 0, !dbg !11177
  %309 = load i32, i32* %add.ptr958, align 4, !dbg !11177
  %and959 = and i32 %309, 255, !dbg !11177
  %shl960 = shl i32 %and959, 24, !dbg !11177
  %arraydecay961 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11177
  %add.ptr962 = getelementptr i32, i32* %arraydecay961, i64 0, !dbg !11177
  %310 = load i32, i32* %add.ptr962, align 4, !dbg !11177
  %and963 = and i32 %310, 65280, !dbg !11177
  %shl964 = shl i32 %and963, 8, !dbg !11177
  %or965 = or i32 %shl960, %shl964, !dbg !11177
  %arraydecay966 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11177
  %add.ptr967 = getelementptr i32, i32* %arraydecay966, i64 0, !dbg !11177
  %311 = load i32, i32* %add.ptr967, align 4, !dbg !11177
  %and968 = and i32 %311, 16711680, !dbg !11177
  %shr969 = lshr i32 %and968, 8, !dbg !11177
  %or970 = or i32 %or965, %shr969, !dbg !11177
  %arraydecay971 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11177
  %add.ptr972 = getelementptr i32, i32* %arraydecay971, i64 0, !dbg !11177
  %312 = load i32, i32* %add.ptr972, align 4, !dbg !11177
  %and973 = and i32 %312, -16777216, !dbg !11177
  %shr974 = lshr i32 %and973, 24, !dbg !11177
  %or975 = or i32 %or970, %shr974, !dbg !11177
  br label %cond.end980, !dbg !11177

cond.false976:                                    ; preds = %cond.end945
  %arraydecay977 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11177
  %add.ptr978 = getelementptr i32, i32* %arraydecay977, i64 0, !dbg !11177
  %313 = load i32, i32* %add.ptr978, align 4, !dbg !11177
  %call979 = call i32 @__fswab32(i32 %313) #8, !dbg !11177
  br label %cond.end980, !dbg !11177

cond.end980:                                      ; preds = %cond.false976, %cond.true956
  %cond981 = phi i32 [ %or975, %cond.true956 ], [ %call979, %cond.false976 ], !dbg !11177
  %and982 = and i32 %cond981, 65535, !dbg !11177
  %314 = load i32, i32* %_v814, align 4, !dbg !11177
  %and983 = and i32 %314, 65535, !dbg !11177
  %shl984 = shl i32 %and983, 16, !dbg !11177
  %or985 = or i32 %and982, %shl984, !dbg !11177
  %and986 = and i32 %or985, -16777216, !dbg !11177
  %shr987 = lshr i32 %and986, 24, !dbg !11177
  %or988 = or i32 %or953, %shr987, !dbg !11177
  br label %cond.end1023, !dbg !11177

cond.false989:                                    ; preds = %cond.end843
  %arraydecay990 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11177
  %add.ptr991 = getelementptr i32, i32* %arraydecay990, i64 0, !dbg !11177
  %315 = load i32, i32* %add.ptr991, align 4, !dbg !11177
  %316 = call i1 @llvm.is.constant.i32(i32 %315), !dbg !11177
  br i1 %316, label %cond.true992, label %cond.false1012, !dbg !11177

cond.true992:                                     ; preds = %cond.false989
  %arraydecay993 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11177
  %add.ptr994 = getelementptr i32, i32* %arraydecay993, i64 0, !dbg !11177
  %317 = load i32, i32* %add.ptr994, align 4, !dbg !11177
  %and995 = and i32 %317, 255, !dbg !11177
  %shl996 = shl i32 %and995, 24, !dbg !11177
  %arraydecay997 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11177
  %add.ptr998 = getelementptr i32, i32* %arraydecay997, i64 0, !dbg !11177
  %318 = load i32, i32* %add.ptr998, align 4, !dbg !11177
  %and999 = and i32 %318, 65280, !dbg !11177
  %shl1000 = shl i32 %and999, 8, !dbg !11177
  %or1001 = or i32 %shl996, %shl1000, !dbg !11177
  %arraydecay1002 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11177
  %add.ptr1003 = getelementptr i32, i32* %arraydecay1002, i64 0, !dbg !11177
  %319 = load i32, i32* %add.ptr1003, align 4, !dbg !11177
  %and1004 = and i32 %319, 16711680, !dbg !11177
  %shr1005 = lshr i32 %and1004, 8, !dbg !11177
  %or1006 = or i32 %or1001, %shr1005, !dbg !11177
  %arraydecay1007 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11177
  %add.ptr1008 = getelementptr i32, i32* %arraydecay1007, i64 0, !dbg !11177
  %320 = load i32, i32* %add.ptr1008, align 4, !dbg !11177
  %and1009 = and i32 %320, -16777216, !dbg !11177
  %shr1010 = lshr i32 %and1009, 24, !dbg !11177
  %or1011 = or i32 %or1006, %shr1010, !dbg !11177
  br label %cond.end1016, !dbg !11177

cond.false1012:                                   ; preds = %cond.false989
  %arraydecay1013 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11177
  %add.ptr1014 = getelementptr i32, i32* %arraydecay1013, i64 0, !dbg !11177
  %321 = load i32, i32* %add.ptr1014, align 4, !dbg !11177
  %call1015 = call i32 @__fswab32(i32 %321) #8, !dbg !11177
  br label %cond.end1016, !dbg !11177

cond.end1016:                                     ; preds = %cond.false1012, %cond.true992
  %cond1017 = phi i32 [ %or1011, %cond.true992 ], [ %call1015, %cond.false1012 ], !dbg !11177
  %and1018 = and i32 %cond1017, 65535, !dbg !11177
  %322 = load i32, i32* %_v814, align 4, !dbg !11177
  %and1019 = and i32 %322, 65535, !dbg !11177
  %shl1020 = shl i32 %and1019, 16, !dbg !11177
  %or1021 = or i32 %and1018, %shl1020, !dbg !11177
  %call1022 = call i32 @__fswab32(i32 %or1021) #8, !dbg !11177
  br label %cond.end1023, !dbg !11177

cond.end1023:                                     ; preds = %cond.end1016, %cond.end980
  %cond1024 = phi i32 [ %or988, %cond.end980 ], [ %call1022, %cond.end1016 ], !dbg !11177
  %arraydecay1025 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11177
  %add.ptr1026 = getelementptr i32, i32* %arraydecay1025, i64 0, !dbg !11177
  store i32 %cond1024, i32* %add.ptr1026, align 4, !dbg !11177
  br label %do.end1027, !dbg !11177

do.end1027:                                       ; preds = %cond.end1023
  call void @llvm.dbg.declare(metadata [4 x i32]* %_out, metadata !11180, metadata !DIExpression()), !dbg !11182
  %323 = bitcast [4 x i32]* %_out to i8*, !dbg !11182
  call void @llvm.memset.p0i8.i64(i8* align 16 %323, i8 0, i64 16, i1 false), !dbg !11182
  %324 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %mdev.addr, align 8, !dbg !11183
  %arraydecay1029 = getelementptr inbounds [128 x i32], [128 x i32]* %in, i64 0, i64 0, !dbg !11183
  %325 = bitcast i32* %arraydecay1029 to i8*, !dbg !11183
  %arraydecay1030 = getelementptr inbounds [4 x i32], [4 x i32]* %_out, i64 0, i64 0, !dbg !11183
  %326 = bitcast i32* %arraydecay1030 to i8*, !dbg !11183
  %call1031 = call i32 @mlx5_cmd_exec(%struct.mlx5_core_dev* %324, i8* %325, i32 512, i8* %326, i32 16) #9, !dbg !11183
  store i32 %call1031, i32* %tmp1028, align 4, !dbg !11182
  %327 = load i32, i32* %tmp1028, align 4, !dbg !11183
  store i32 %327, i32* %tmp, align 4, !dbg !11182
  %328 = load i32, i32* %tmp, align 4, !dbg !11182
  ret i32 %328, !dbg !11185
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @mlx5_query_nic_vport_mac_address(%struct.mlx5_core_dev* %mdev, i16 zeroext %vport, i1 zeroext %other, i8* %addr) #0 !dbg !11186 {
entry:
  %mdev.addr = alloca %struct.mlx5_core_dev*, align 8
  %vport.addr = alloca i16, align 2
  %other.addr = alloca i8, align 1
  %addr.addr = alloca i8*, align 8
  %out = alloca [68 x i32], align 16
  %in = alloca [4 x i32], align 16
  %out_addr = alloca i8*, align 8
  %err = alloca i32, align 4
  %_v = alloca i32, align 4
  %_v205 = alloca i32, align 4
  %_v420 = alloca i32, align 4
  %tmp = alloca i32, align 4
  store %struct.mlx5_core_dev* %mdev, %struct.mlx5_core_dev** %mdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_core_dev** %mdev.addr, metadata !11189, metadata !DIExpression()), !dbg !11190
  store i16 %vport, i16* %vport.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %vport.addr, metadata !11191, metadata !DIExpression()), !dbg !11192
  %frombool = zext i1 %other to i8
  store i8 %frombool, i8* %other.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %other.addr, metadata !11193, metadata !DIExpression()), !dbg !11194
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !11195, metadata !DIExpression()), !dbg !11196
  call void @llvm.dbg.declare(metadata [68 x i32]* %out, metadata !11197, metadata !DIExpression()), !dbg !11198
  %0 = bitcast [68 x i32]* %out to i8*, !dbg !11198
  call void @llvm.memset.p0i8.i64(i8* align 16 %0, i8 0, i64 272, i1 false), !dbg !11198
  call void @llvm.dbg.declare(metadata [4 x i32]* %in, metadata !11199, metadata !DIExpression()), !dbg !11200
  %1 = bitcast [4 x i32]* %in to i8*, !dbg !11200
  call void @llvm.memset.p0i8.i64(i8* align 16 %1, i8 0, i64 16, i1 false), !dbg !11200
  call void @llvm.dbg.declare(metadata i8** %out_addr, metadata !11201, metadata !DIExpression()), !dbg !11202
  call void @llvm.dbg.declare(metadata i32* %err, metadata !11203, metadata !DIExpression()), !dbg !11204
  %arraydecay = getelementptr inbounds [68 x i32], [68 x i32]* %out, i64 0, i64 0, !dbg !11205
  %2 = bitcast i32* %arraydecay to i8*, !dbg !11205
  %add.ptr = getelementptr i8, i8* %2, i64 260, !dbg !11205
  store i8* %add.ptr, i8** %out_addr, align 8, !dbg !11206
  br label %do.body, !dbg !11207

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %_v, metadata !11208, metadata !DIExpression()), !dbg !11210
  store i32 1876, i32* %_v, align 4, !dbg !11210
  br label %do.body1, !dbg !11210

do.body1:                                         ; preds = %do.body
  br label %do.end, !dbg !11211

do.end:                                           ; preds = %do.body1
  %arraydecay2 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11210
  %add.ptr3 = getelementptr i32, i32* %arraydecay2, i64 0, !dbg !11210
  %3 = load i32, i32* %add.ptr3, align 4, !dbg !11210
  %4 = call i1 @llvm.is.constant.i32(i32 %3), !dbg !11210
  br i1 %4, label %cond.true, label %cond.false, !dbg !11210

cond.true:                                        ; preds = %do.end
  %arraydecay4 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11210
  %add.ptr5 = getelementptr i32, i32* %arraydecay4, i64 0, !dbg !11210
  %5 = load i32, i32* %add.ptr5, align 4, !dbg !11210
  %and = and i32 %5, 255, !dbg !11210
  %shl = shl i32 %and, 24, !dbg !11210
  %arraydecay6 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11210
  %add.ptr7 = getelementptr i32, i32* %arraydecay6, i64 0, !dbg !11210
  %6 = load i32, i32* %add.ptr7, align 4, !dbg !11210
  %and8 = and i32 %6, 65280, !dbg !11210
  %shl9 = shl i32 %and8, 8, !dbg !11210
  %or = or i32 %shl, %shl9, !dbg !11210
  %arraydecay10 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11210
  %add.ptr11 = getelementptr i32, i32* %arraydecay10, i64 0, !dbg !11210
  %7 = load i32, i32* %add.ptr11, align 4, !dbg !11210
  %and12 = and i32 %7, 16711680, !dbg !11210
  %shr = lshr i32 %and12, 8, !dbg !11210
  %or13 = or i32 %or, %shr, !dbg !11210
  %arraydecay14 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11210
  %add.ptr15 = getelementptr i32, i32* %arraydecay14, i64 0, !dbg !11210
  %8 = load i32, i32* %add.ptr15, align 4, !dbg !11210
  %and16 = and i32 %8, -16777216, !dbg !11210
  %shr17 = lshr i32 %and16, 24, !dbg !11210
  %or18 = or i32 %or13, %shr17, !dbg !11210
  br label %cond.end, !dbg !11210

cond.false:                                       ; preds = %do.end
  %arraydecay19 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11210
  %add.ptr20 = getelementptr i32, i32* %arraydecay19, i64 0, !dbg !11210
  %9 = load i32, i32* %add.ptr20, align 4, !dbg !11210
  %call = call i32 @__fswab32(i32 %9) #8, !dbg !11210
  br label %cond.end, !dbg !11210

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %or18, %cond.true ], [ %call, %cond.false ], !dbg !11210
  %and21 = and i32 %cond, 65535, !dbg !11210
  %10 = load i32, i32* %_v, align 4, !dbg !11210
  %and22 = and i32 %10, 65535, !dbg !11210
  %shl23 = shl i32 %and22, 16, !dbg !11210
  %or24 = or i32 %and21, %shl23, !dbg !11210
  %11 = call i1 @llvm.is.constant.i32(i32 %or24), !dbg !11210
  br i1 %11, label %cond.true25, label %cond.false165, !dbg !11210

cond.true25:                                      ; preds = %cond.end
  %arraydecay26 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11210
  %add.ptr27 = getelementptr i32, i32* %arraydecay26, i64 0, !dbg !11210
  %12 = load i32, i32* %add.ptr27, align 4, !dbg !11210
  %13 = call i1 @llvm.is.constant.i32(i32 %12), !dbg !11210
  br i1 %13, label %cond.true28, label %cond.false48, !dbg !11210

cond.true28:                                      ; preds = %cond.true25
  %arraydecay29 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11210
  %add.ptr30 = getelementptr i32, i32* %arraydecay29, i64 0, !dbg !11210
  %14 = load i32, i32* %add.ptr30, align 4, !dbg !11210
  %and31 = and i32 %14, 255, !dbg !11210
  %shl32 = shl i32 %and31, 24, !dbg !11210
  %arraydecay33 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11210
  %add.ptr34 = getelementptr i32, i32* %arraydecay33, i64 0, !dbg !11210
  %15 = load i32, i32* %add.ptr34, align 4, !dbg !11210
  %and35 = and i32 %15, 65280, !dbg !11210
  %shl36 = shl i32 %and35, 8, !dbg !11210
  %or37 = or i32 %shl32, %shl36, !dbg !11210
  %arraydecay38 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11210
  %add.ptr39 = getelementptr i32, i32* %arraydecay38, i64 0, !dbg !11210
  %16 = load i32, i32* %add.ptr39, align 4, !dbg !11210
  %and40 = and i32 %16, 16711680, !dbg !11210
  %shr41 = lshr i32 %and40, 8, !dbg !11210
  %or42 = or i32 %or37, %shr41, !dbg !11210
  %arraydecay43 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11210
  %add.ptr44 = getelementptr i32, i32* %arraydecay43, i64 0, !dbg !11210
  %17 = load i32, i32* %add.ptr44, align 4, !dbg !11210
  %and45 = and i32 %17, -16777216, !dbg !11210
  %shr46 = lshr i32 %and45, 24, !dbg !11210
  %or47 = or i32 %or42, %shr46, !dbg !11210
  br label %cond.end52, !dbg !11210

cond.false48:                                     ; preds = %cond.true25
  %arraydecay49 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11210
  %add.ptr50 = getelementptr i32, i32* %arraydecay49, i64 0, !dbg !11210
  %18 = load i32, i32* %add.ptr50, align 4, !dbg !11210
  %call51 = call i32 @__fswab32(i32 %18) #8, !dbg !11210
  br label %cond.end52, !dbg !11210

cond.end52:                                       ; preds = %cond.false48, %cond.true28
  %cond53 = phi i32 [ %or47, %cond.true28 ], [ %call51, %cond.false48 ], !dbg !11210
  %and54 = and i32 %cond53, 65535, !dbg !11210
  %19 = load i32, i32* %_v, align 4, !dbg !11210
  %and55 = and i32 %19, 65535, !dbg !11210
  %shl56 = shl i32 %and55, 16, !dbg !11210
  %or57 = or i32 %and54, %shl56, !dbg !11210
  %and58 = and i32 %or57, 255, !dbg !11210
  %shl59 = shl i32 %and58, 24, !dbg !11210
  %arraydecay60 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11210
  %add.ptr61 = getelementptr i32, i32* %arraydecay60, i64 0, !dbg !11210
  %20 = load i32, i32* %add.ptr61, align 4, !dbg !11210
  %21 = call i1 @llvm.is.constant.i32(i32 %20), !dbg !11210
  br i1 %21, label %cond.true62, label %cond.false82, !dbg !11210

cond.true62:                                      ; preds = %cond.end52
  %arraydecay63 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11210
  %add.ptr64 = getelementptr i32, i32* %arraydecay63, i64 0, !dbg !11210
  %22 = load i32, i32* %add.ptr64, align 4, !dbg !11210
  %and65 = and i32 %22, 255, !dbg !11210
  %shl66 = shl i32 %and65, 24, !dbg !11210
  %arraydecay67 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11210
  %add.ptr68 = getelementptr i32, i32* %arraydecay67, i64 0, !dbg !11210
  %23 = load i32, i32* %add.ptr68, align 4, !dbg !11210
  %and69 = and i32 %23, 65280, !dbg !11210
  %shl70 = shl i32 %and69, 8, !dbg !11210
  %or71 = or i32 %shl66, %shl70, !dbg !11210
  %arraydecay72 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11210
  %add.ptr73 = getelementptr i32, i32* %arraydecay72, i64 0, !dbg !11210
  %24 = load i32, i32* %add.ptr73, align 4, !dbg !11210
  %and74 = and i32 %24, 16711680, !dbg !11210
  %shr75 = lshr i32 %and74, 8, !dbg !11210
  %or76 = or i32 %or71, %shr75, !dbg !11210
  %arraydecay77 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11210
  %add.ptr78 = getelementptr i32, i32* %arraydecay77, i64 0, !dbg !11210
  %25 = load i32, i32* %add.ptr78, align 4, !dbg !11210
  %and79 = and i32 %25, -16777216, !dbg !11210
  %shr80 = lshr i32 %and79, 24, !dbg !11210
  %or81 = or i32 %or76, %shr80, !dbg !11210
  br label %cond.end86, !dbg !11210

cond.false82:                                     ; preds = %cond.end52
  %arraydecay83 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11210
  %add.ptr84 = getelementptr i32, i32* %arraydecay83, i64 0, !dbg !11210
  %26 = load i32, i32* %add.ptr84, align 4, !dbg !11210
  %call85 = call i32 @__fswab32(i32 %26) #8, !dbg !11210
  br label %cond.end86, !dbg !11210

cond.end86:                                       ; preds = %cond.false82, %cond.true62
  %cond87 = phi i32 [ %or81, %cond.true62 ], [ %call85, %cond.false82 ], !dbg !11210
  %and88 = and i32 %cond87, 65535, !dbg !11210
  %27 = load i32, i32* %_v, align 4, !dbg !11210
  %and89 = and i32 %27, 65535, !dbg !11210
  %shl90 = shl i32 %and89, 16, !dbg !11210
  %or91 = or i32 %and88, %shl90, !dbg !11210
  %and92 = and i32 %or91, 65280, !dbg !11210
  %shl93 = shl i32 %and92, 8, !dbg !11210
  %or94 = or i32 %shl59, %shl93, !dbg !11210
  %arraydecay95 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11210
  %add.ptr96 = getelementptr i32, i32* %arraydecay95, i64 0, !dbg !11210
  %28 = load i32, i32* %add.ptr96, align 4, !dbg !11210
  %29 = call i1 @llvm.is.constant.i32(i32 %28), !dbg !11210
  br i1 %29, label %cond.true97, label %cond.false117, !dbg !11210

cond.true97:                                      ; preds = %cond.end86
  %arraydecay98 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11210
  %add.ptr99 = getelementptr i32, i32* %arraydecay98, i64 0, !dbg !11210
  %30 = load i32, i32* %add.ptr99, align 4, !dbg !11210
  %and100 = and i32 %30, 255, !dbg !11210
  %shl101 = shl i32 %and100, 24, !dbg !11210
  %arraydecay102 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11210
  %add.ptr103 = getelementptr i32, i32* %arraydecay102, i64 0, !dbg !11210
  %31 = load i32, i32* %add.ptr103, align 4, !dbg !11210
  %and104 = and i32 %31, 65280, !dbg !11210
  %shl105 = shl i32 %and104, 8, !dbg !11210
  %or106 = or i32 %shl101, %shl105, !dbg !11210
  %arraydecay107 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11210
  %add.ptr108 = getelementptr i32, i32* %arraydecay107, i64 0, !dbg !11210
  %32 = load i32, i32* %add.ptr108, align 4, !dbg !11210
  %and109 = and i32 %32, 16711680, !dbg !11210
  %shr110 = lshr i32 %and109, 8, !dbg !11210
  %or111 = or i32 %or106, %shr110, !dbg !11210
  %arraydecay112 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11210
  %add.ptr113 = getelementptr i32, i32* %arraydecay112, i64 0, !dbg !11210
  %33 = load i32, i32* %add.ptr113, align 4, !dbg !11210
  %and114 = and i32 %33, -16777216, !dbg !11210
  %shr115 = lshr i32 %and114, 24, !dbg !11210
  %or116 = or i32 %or111, %shr115, !dbg !11210
  br label %cond.end121, !dbg !11210

cond.false117:                                    ; preds = %cond.end86
  %arraydecay118 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11210
  %add.ptr119 = getelementptr i32, i32* %arraydecay118, i64 0, !dbg !11210
  %34 = load i32, i32* %add.ptr119, align 4, !dbg !11210
  %call120 = call i32 @__fswab32(i32 %34) #8, !dbg !11210
  br label %cond.end121, !dbg !11210

cond.end121:                                      ; preds = %cond.false117, %cond.true97
  %cond122 = phi i32 [ %or116, %cond.true97 ], [ %call120, %cond.false117 ], !dbg !11210
  %and123 = and i32 %cond122, 65535, !dbg !11210
  %35 = load i32, i32* %_v, align 4, !dbg !11210
  %and124 = and i32 %35, 65535, !dbg !11210
  %shl125 = shl i32 %and124, 16, !dbg !11210
  %or126 = or i32 %and123, %shl125, !dbg !11210
  %and127 = and i32 %or126, 16711680, !dbg !11210
  %shr128 = lshr i32 %and127, 8, !dbg !11210
  %or129 = or i32 %or94, %shr128, !dbg !11210
  %arraydecay130 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11210
  %add.ptr131 = getelementptr i32, i32* %arraydecay130, i64 0, !dbg !11210
  %36 = load i32, i32* %add.ptr131, align 4, !dbg !11210
  %37 = call i1 @llvm.is.constant.i32(i32 %36), !dbg !11210
  br i1 %37, label %cond.true132, label %cond.false152, !dbg !11210

cond.true132:                                     ; preds = %cond.end121
  %arraydecay133 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11210
  %add.ptr134 = getelementptr i32, i32* %arraydecay133, i64 0, !dbg !11210
  %38 = load i32, i32* %add.ptr134, align 4, !dbg !11210
  %and135 = and i32 %38, 255, !dbg !11210
  %shl136 = shl i32 %and135, 24, !dbg !11210
  %arraydecay137 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11210
  %add.ptr138 = getelementptr i32, i32* %arraydecay137, i64 0, !dbg !11210
  %39 = load i32, i32* %add.ptr138, align 4, !dbg !11210
  %and139 = and i32 %39, 65280, !dbg !11210
  %shl140 = shl i32 %and139, 8, !dbg !11210
  %or141 = or i32 %shl136, %shl140, !dbg !11210
  %arraydecay142 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11210
  %add.ptr143 = getelementptr i32, i32* %arraydecay142, i64 0, !dbg !11210
  %40 = load i32, i32* %add.ptr143, align 4, !dbg !11210
  %and144 = and i32 %40, 16711680, !dbg !11210
  %shr145 = lshr i32 %and144, 8, !dbg !11210
  %or146 = or i32 %or141, %shr145, !dbg !11210
  %arraydecay147 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11210
  %add.ptr148 = getelementptr i32, i32* %arraydecay147, i64 0, !dbg !11210
  %41 = load i32, i32* %add.ptr148, align 4, !dbg !11210
  %and149 = and i32 %41, -16777216, !dbg !11210
  %shr150 = lshr i32 %and149, 24, !dbg !11210
  %or151 = or i32 %or146, %shr150, !dbg !11210
  br label %cond.end156, !dbg !11210

cond.false152:                                    ; preds = %cond.end121
  %arraydecay153 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11210
  %add.ptr154 = getelementptr i32, i32* %arraydecay153, i64 0, !dbg !11210
  %42 = load i32, i32* %add.ptr154, align 4, !dbg !11210
  %call155 = call i32 @__fswab32(i32 %42) #8, !dbg !11210
  br label %cond.end156, !dbg !11210

cond.end156:                                      ; preds = %cond.false152, %cond.true132
  %cond157 = phi i32 [ %or151, %cond.true132 ], [ %call155, %cond.false152 ], !dbg !11210
  %and158 = and i32 %cond157, 65535, !dbg !11210
  %43 = load i32, i32* %_v, align 4, !dbg !11210
  %and159 = and i32 %43, 65535, !dbg !11210
  %shl160 = shl i32 %and159, 16, !dbg !11210
  %or161 = or i32 %and158, %shl160, !dbg !11210
  %and162 = and i32 %or161, -16777216, !dbg !11210
  %shr163 = lshr i32 %and162, 24, !dbg !11210
  %or164 = or i32 %or129, %shr163, !dbg !11210
  br label %cond.end199, !dbg !11210

cond.false165:                                    ; preds = %cond.end
  %arraydecay166 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11210
  %add.ptr167 = getelementptr i32, i32* %arraydecay166, i64 0, !dbg !11210
  %44 = load i32, i32* %add.ptr167, align 4, !dbg !11210
  %45 = call i1 @llvm.is.constant.i32(i32 %44), !dbg !11210
  br i1 %45, label %cond.true168, label %cond.false188, !dbg !11210

cond.true168:                                     ; preds = %cond.false165
  %arraydecay169 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11210
  %add.ptr170 = getelementptr i32, i32* %arraydecay169, i64 0, !dbg !11210
  %46 = load i32, i32* %add.ptr170, align 4, !dbg !11210
  %and171 = and i32 %46, 255, !dbg !11210
  %shl172 = shl i32 %and171, 24, !dbg !11210
  %arraydecay173 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11210
  %add.ptr174 = getelementptr i32, i32* %arraydecay173, i64 0, !dbg !11210
  %47 = load i32, i32* %add.ptr174, align 4, !dbg !11210
  %and175 = and i32 %47, 65280, !dbg !11210
  %shl176 = shl i32 %and175, 8, !dbg !11210
  %or177 = or i32 %shl172, %shl176, !dbg !11210
  %arraydecay178 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11210
  %add.ptr179 = getelementptr i32, i32* %arraydecay178, i64 0, !dbg !11210
  %48 = load i32, i32* %add.ptr179, align 4, !dbg !11210
  %and180 = and i32 %48, 16711680, !dbg !11210
  %shr181 = lshr i32 %and180, 8, !dbg !11210
  %or182 = or i32 %or177, %shr181, !dbg !11210
  %arraydecay183 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11210
  %add.ptr184 = getelementptr i32, i32* %arraydecay183, i64 0, !dbg !11210
  %49 = load i32, i32* %add.ptr184, align 4, !dbg !11210
  %and185 = and i32 %49, -16777216, !dbg !11210
  %shr186 = lshr i32 %and185, 24, !dbg !11210
  %or187 = or i32 %or182, %shr186, !dbg !11210
  br label %cond.end192, !dbg !11210

cond.false188:                                    ; preds = %cond.false165
  %arraydecay189 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11210
  %add.ptr190 = getelementptr i32, i32* %arraydecay189, i64 0, !dbg !11210
  %50 = load i32, i32* %add.ptr190, align 4, !dbg !11210
  %call191 = call i32 @__fswab32(i32 %50) #8, !dbg !11210
  br label %cond.end192, !dbg !11210

cond.end192:                                      ; preds = %cond.false188, %cond.true168
  %cond193 = phi i32 [ %or187, %cond.true168 ], [ %call191, %cond.false188 ], !dbg !11210
  %and194 = and i32 %cond193, 65535, !dbg !11210
  %51 = load i32, i32* %_v, align 4, !dbg !11210
  %and195 = and i32 %51, 65535, !dbg !11210
  %shl196 = shl i32 %and195, 16, !dbg !11210
  %or197 = or i32 %and194, %shl196, !dbg !11210
  %call198 = call i32 @__fswab32(i32 %or197) #8, !dbg !11210
  br label %cond.end199, !dbg !11210

cond.end199:                                      ; preds = %cond.end192, %cond.end156
  %cond200 = phi i32 [ %or164, %cond.end156 ], [ %call198, %cond.end192 ], !dbg !11210
  %arraydecay201 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11210
  %add.ptr202 = getelementptr i32, i32* %arraydecay201, i64 0, !dbg !11210
  store i32 %cond200, i32* %add.ptr202, align 4, !dbg !11210
  br label %do.end203, !dbg !11210

do.end203:                                        ; preds = %cond.end199
  br label %do.body204, !dbg !11213

do.body204:                                       ; preds = %do.end203
  call void @llvm.dbg.declare(metadata i32* %_v205, metadata !11214, metadata !DIExpression()), !dbg !11216
  %52 = load i16, i16* %vport.addr, align 2, !dbg !11216
  %conv = zext i16 %52 to i32, !dbg !11216
  store i32 %conv, i32* %_v205, align 4, !dbg !11216
  br label %do.body206, !dbg !11216

do.body206:                                       ; preds = %do.body204
  br label %do.end207, !dbg !11217

do.end207:                                        ; preds = %do.body206
  %arraydecay208 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11216
  %add.ptr209 = getelementptr i32, i32* %arraydecay208, i64 2, !dbg !11216
  %53 = load i32, i32* %add.ptr209, align 4, !dbg !11216
  %54 = call i1 @llvm.is.constant.i32(i32 %53), !dbg !11216
  br i1 %54, label %cond.true210, label %cond.false230, !dbg !11216

cond.true210:                                     ; preds = %do.end207
  %arraydecay211 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11216
  %add.ptr212 = getelementptr i32, i32* %arraydecay211, i64 2, !dbg !11216
  %55 = load i32, i32* %add.ptr212, align 4, !dbg !11216
  %and213 = and i32 %55, 255, !dbg !11216
  %shl214 = shl i32 %and213, 24, !dbg !11216
  %arraydecay215 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11216
  %add.ptr216 = getelementptr i32, i32* %arraydecay215, i64 2, !dbg !11216
  %56 = load i32, i32* %add.ptr216, align 4, !dbg !11216
  %and217 = and i32 %56, 65280, !dbg !11216
  %shl218 = shl i32 %and217, 8, !dbg !11216
  %or219 = or i32 %shl214, %shl218, !dbg !11216
  %arraydecay220 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11216
  %add.ptr221 = getelementptr i32, i32* %arraydecay220, i64 2, !dbg !11216
  %57 = load i32, i32* %add.ptr221, align 4, !dbg !11216
  %and222 = and i32 %57, 16711680, !dbg !11216
  %shr223 = lshr i32 %and222, 8, !dbg !11216
  %or224 = or i32 %or219, %shr223, !dbg !11216
  %arraydecay225 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11216
  %add.ptr226 = getelementptr i32, i32* %arraydecay225, i64 2, !dbg !11216
  %58 = load i32, i32* %add.ptr226, align 4, !dbg !11216
  %and227 = and i32 %58, -16777216, !dbg !11216
  %shr228 = lshr i32 %and227, 24, !dbg !11216
  %or229 = or i32 %or224, %shr228, !dbg !11216
  br label %cond.end234, !dbg !11216

cond.false230:                                    ; preds = %do.end207
  %arraydecay231 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11216
  %add.ptr232 = getelementptr i32, i32* %arraydecay231, i64 2, !dbg !11216
  %59 = load i32, i32* %add.ptr232, align 4, !dbg !11216
  %call233 = call i32 @__fswab32(i32 %59) #8, !dbg !11216
  br label %cond.end234, !dbg !11216

cond.end234:                                      ; preds = %cond.false230, %cond.true210
  %cond235 = phi i32 [ %or229, %cond.true210 ], [ %call233, %cond.false230 ], !dbg !11216
  %and236 = and i32 %cond235, -65536, !dbg !11216
  %60 = load i32, i32* %_v205, align 4, !dbg !11216
  %and237 = and i32 %60, 65535, !dbg !11216
  %shl238 = shl i32 %and237, 0, !dbg !11216
  %or239 = or i32 %and236, %shl238, !dbg !11216
  %61 = call i1 @llvm.is.constant.i32(i32 %or239), !dbg !11216
  br i1 %61, label %cond.true240, label %cond.false380, !dbg !11216

cond.true240:                                     ; preds = %cond.end234
  %arraydecay241 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11216
  %add.ptr242 = getelementptr i32, i32* %arraydecay241, i64 2, !dbg !11216
  %62 = load i32, i32* %add.ptr242, align 4, !dbg !11216
  %63 = call i1 @llvm.is.constant.i32(i32 %62), !dbg !11216
  br i1 %63, label %cond.true243, label %cond.false263, !dbg !11216

cond.true243:                                     ; preds = %cond.true240
  %arraydecay244 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11216
  %add.ptr245 = getelementptr i32, i32* %arraydecay244, i64 2, !dbg !11216
  %64 = load i32, i32* %add.ptr245, align 4, !dbg !11216
  %and246 = and i32 %64, 255, !dbg !11216
  %shl247 = shl i32 %and246, 24, !dbg !11216
  %arraydecay248 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11216
  %add.ptr249 = getelementptr i32, i32* %arraydecay248, i64 2, !dbg !11216
  %65 = load i32, i32* %add.ptr249, align 4, !dbg !11216
  %and250 = and i32 %65, 65280, !dbg !11216
  %shl251 = shl i32 %and250, 8, !dbg !11216
  %or252 = or i32 %shl247, %shl251, !dbg !11216
  %arraydecay253 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11216
  %add.ptr254 = getelementptr i32, i32* %arraydecay253, i64 2, !dbg !11216
  %66 = load i32, i32* %add.ptr254, align 4, !dbg !11216
  %and255 = and i32 %66, 16711680, !dbg !11216
  %shr256 = lshr i32 %and255, 8, !dbg !11216
  %or257 = or i32 %or252, %shr256, !dbg !11216
  %arraydecay258 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11216
  %add.ptr259 = getelementptr i32, i32* %arraydecay258, i64 2, !dbg !11216
  %67 = load i32, i32* %add.ptr259, align 4, !dbg !11216
  %and260 = and i32 %67, -16777216, !dbg !11216
  %shr261 = lshr i32 %and260, 24, !dbg !11216
  %or262 = or i32 %or257, %shr261, !dbg !11216
  br label %cond.end267, !dbg !11216

cond.false263:                                    ; preds = %cond.true240
  %arraydecay264 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11216
  %add.ptr265 = getelementptr i32, i32* %arraydecay264, i64 2, !dbg !11216
  %68 = load i32, i32* %add.ptr265, align 4, !dbg !11216
  %call266 = call i32 @__fswab32(i32 %68) #8, !dbg !11216
  br label %cond.end267, !dbg !11216

cond.end267:                                      ; preds = %cond.false263, %cond.true243
  %cond268 = phi i32 [ %or262, %cond.true243 ], [ %call266, %cond.false263 ], !dbg !11216
  %and269 = and i32 %cond268, -65536, !dbg !11216
  %69 = load i32, i32* %_v205, align 4, !dbg !11216
  %and270 = and i32 %69, 65535, !dbg !11216
  %shl271 = shl i32 %and270, 0, !dbg !11216
  %or272 = or i32 %and269, %shl271, !dbg !11216
  %and273 = and i32 %or272, 255, !dbg !11216
  %shl274 = shl i32 %and273, 24, !dbg !11216
  %arraydecay275 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11216
  %add.ptr276 = getelementptr i32, i32* %arraydecay275, i64 2, !dbg !11216
  %70 = load i32, i32* %add.ptr276, align 4, !dbg !11216
  %71 = call i1 @llvm.is.constant.i32(i32 %70), !dbg !11216
  br i1 %71, label %cond.true277, label %cond.false297, !dbg !11216

cond.true277:                                     ; preds = %cond.end267
  %arraydecay278 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11216
  %add.ptr279 = getelementptr i32, i32* %arraydecay278, i64 2, !dbg !11216
  %72 = load i32, i32* %add.ptr279, align 4, !dbg !11216
  %and280 = and i32 %72, 255, !dbg !11216
  %shl281 = shl i32 %and280, 24, !dbg !11216
  %arraydecay282 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11216
  %add.ptr283 = getelementptr i32, i32* %arraydecay282, i64 2, !dbg !11216
  %73 = load i32, i32* %add.ptr283, align 4, !dbg !11216
  %and284 = and i32 %73, 65280, !dbg !11216
  %shl285 = shl i32 %and284, 8, !dbg !11216
  %or286 = or i32 %shl281, %shl285, !dbg !11216
  %arraydecay287 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11216
  %add.ptr288 = getelementptr i32, i32* %arraydecay287, i64 2, !dbg !11216
  %74 = load i32, i32* %add.ptr288, align 4, !dbg !11216
  %and289 = and i32 %74, 16711680, !dbg !11216
  %shr290 = lshr i32 %and289, 8, !dbg !11216
  %or291 = or i32 %or286, %shr290, !dbg !11216
  %arraydecay292 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11216
  %add.ptr293 = getelementptr i32, i32* %arraydecay292, i64 2, !dbg !11216
  %75 = load i32, i32* %add.ptr293, align 4, !dbg !11216
  %and294 = and i32 %75, -16777216, !dbg !11216
  %shr295 = lshr i32 %and294, 24, !dbg !11216
  %or296 = or i32 %or291, %shr295, !dbg !11216
  br label %cond.end301, !dbg !11216

cond.false297:                                    ; preds = %cond.end267
  %arraydecay298 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11216
  %add.ptr299 = getelementptr i32, i32* %arraydecay298, i64 2, !dbg !11216
  %76 = load i32, i32* %add.ptr299, align 4, !dbg !11216
  %call300 = call i32 @__fswab32(i32 %76) #8, !dbg !11216
  br label %cond.end301, !dbg !11216

cond.end301:                                      ; preds = %cond.false297, %cond.true277
  %cond302 = phi i32 [ %or296, %cond.true277 ], [ %call300, %cond.false297 ], !dbg !11216
  %and303 = and i32 %cond302, -65536, !dbg !11216
  %77 = load i32, i32* %_v205, align 4, !dbg !11216
  %and304 = and i32 %77, 65535, !dbg !11216
  %shl305 = shl i32 %and304, 0, !dbg !11216
  %or306 = or i32 %and303, %shl305, !dbg !11216
  %and307 = and i32 %or306, 65280, !dbg !11216
  %shl308 = shl i32 %and307, 8, !dbg !11216
  %or309 = or i32 %shl274, %shl308, !dbg !11216
  %arraydecay310 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11216
  %add.ptr311 = getelementptr i32, i32* %arraydecay310, i64 2, !dbg !11216
  %78 = load i32, i32* %add.ptr311, align 4, !dbg !11216
  %79 = call i1 @llvm.is.constant.i32(i32 %78), !dbg !11216
  br i1 %79, label %cond.true312, label %cond.false332, !dbg !11216

cond.true312:                                     ; preds = %cond.end301
  %arraydecay313 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11216
  %add.ptr314 = getelementptr i32, i32* %arraydecay313, i64 2, !dbg !11216
  %80 = load i32, i32* %add.ptr314, align 4, !dbg !11216
  %and315 = and i32 %80, 255, !dbg !11216
  %shl316 = shl i32 %and315, 24, !dbg !11216
  %arraydecay317 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11216
  %add.ptr318 = getelementptr i32, i32* %arraydecay317, i64 2, !dbg !11216
  %81 = load i32, i32* %add.ptr318, align 4, !dbg !11216
  %and319 = and i32 %81, 65280, !dbg !11216
  %shl320 = shl i32 %and319, 8, !dbg !11216
  %or321 = or i32 %shl316, %shl320, !dbg !11216
  %arraydecay322 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11216
  %add.ptr323 = getelementptr i32, i32* %arraydecay322, i64 2, !dbg !11216
  %82 = load i32, i32* %add.ptr323, align 4, !dbg !11216
  %and324 = and i32 %82, 16711680, !dbg !11216
  %shr325 = lshr i32 %and324, 8, !dbg !11216
  %or326 = or i32 %or321, %shr325, !dbg !11216
  %arraydecay327 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11216
  %add.ptr328 = getelementptr i32, i32* %arraydecay327, i64 2, !dbg !11216
  %83 = load i32, i32* %add.ptr328, align 4, !dbg !11216
  %and329 = and i32 %83, -16777216, !dbg !11216
  %shr330 = lshr i32 %and329, 24, !dbg !11216
  %or331 = or i32 %or326, %shr330, !dbg !11216
  br label %cond.end336, !dbg !11216

cond.false332:                                    ; preds = %cond.end301
  %arraydecay333 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11216
  %add.ptr334 = getelementptr i32, i32* %arraydecay333, i64 2, !dbg !11216
  %84 = load i32, i32* %add.ptr334, align 4, !dbg !11216
  %call335 = call i32 @__fswab32(i32 %84) #8, !dbg !11216
  br label %cond.end336, !dbg !11216

cond.end336:                                      ; preds = %cond.false332, %cond.true312
  %cond337 = phi i32 [ %or331, %cond.true312 ], [ %call335, %cond.false332 ], !dbg !11216
  %and338 = and i32 %cond337, -65536, !dbg !11216
  %85 = load i32, i32* %_v205, align 4, !dbg !11216
  %and339 = and i32 %85, 65535, !dbg !11216
  %shl340 = shl i32 %and339, 0, !dbg !11216
  %or341 = or i32 %and338, %shl340, !dbg !11216
  %and342 = and i32 %or341, 16711680, !dbg !11216
  %shr343 = lshr i32 %and342, 8, !dbg !11216
  %or344 = or i32 %or309, %shr343, !dbg !11216
  %arraydecay345 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11216
  %add.ptr346 = getelementptr i32, i32* %arraydecay345, i64 2, !dbg !11216
  %86 = load i32, i32* %add.ptr346, align 4, !dbg !11216
  %87 = call i1 @llvm.is.constant.i32(i32 %86), !dbg !11216
  br i1 %87, label %cond.true347, label %cond.false367, !dbg !11216

cond.true347:                                     ; preds = %cond.end336
  %arraydecay348 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11216
  %add.ptr349 = getelementptr i32, i32* %arraydecay348, i64 2, !dbg !11216
  %88 = load i32, i32* %add.ptr349, align 4, !dbg !11216
  %and350 = and i32 %88, 255, !dbg !11216
  %shl351 = shl i32 %and350, 24, !dbg !11216
  %arraydecay352 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11216
  %add.ptr353 = getelementptr i32, i32* %arraydecay352, i64 2, !dbg !11216
  %89 = load i32, i32* %add.ptr353, align 4, !dbg !11216
  %and354 = and i32 %89, 65280, !dbg !11216
  %shl355 = shl i32 %and354, 8, !dbg !11216
  %or356 = or i32 %shl351, %shl355, !dbg !11216
  %arraydecay357 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11216
  %add.ptr358 = getelementptr i32, i32* %arraydecay357, i64 2, !dbg !11216
  %90 = load i32, i32* %add.ptr358, align 4, !dbg !11216
  %and359 = and i32 %90, 16711680, !dbg !11216
  %shr360 = lshr i32 %and359, 8, !dbg !11216
  %or361 = or i32 %or356, %shr360, !dbg !11216
  %arraydecay362 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11216
  %add.ptr363 = getelementptr i32, i32* %arraydecay362, i64 2, !dbg !11216
  %91 = load i32, i32* %add.ptr363, align 4, !dbg !11216
  %and364 = and i32 %91, -16777216, !dbg !11216
  %shr365 = lshr i32 %and364, 24, !dbg !11216
  %or366 = or i32 %or361, %shr365, !dbg !11216
  br label %cond.end371, !dbg !11216

cond.false367:                                    ; preds = %cond.end336
  %arraydecay368 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11216
  %add.ptr369 = getelementptr i32, i32* %arraydecay368, i64 2, !dbg !11216
  %92 = load i32, i32* %add.ptr369, align 4, !dbg !11216
  %call370 = call i32 @__fswab32(i32 %92) #8, !dbg !11216
  br label %cond.end371, !dbg !11216

cond.end371:                                      ; preds = %cond.false367, %cond.true347
  %cond372 = phi i32 [ %or366, %cond.true347 ], [ %call370, %cond.false367 ], !dbg !11216
  %and373 = and i32 %cond372, -65536, !dbg !11216
  %93 = load i32, i32* %_v205, align 4, !dbg !11216
  %and374 = and i32 %93, 65535, !dbg !11216
  %shl375 = shl i32 %and374, 0, !dbg !11216
  %or376 = or i32 %and373, %shl375, !dbg !11216
  %and377 = and i32 %or376, -16777216, !dbg !11216
  %shr378 = lshr i32 %and377, 24, !dbg !11216
  %or379 = or i32 %or344, %shr378, !dbg !11216
  br label %cond.end414, !dbg !11216

cond.false380:                                    ; preds = %cond.end234
  %arraydecay381 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11216
  %add.ptr382 = getelementptr i32, i32* %arraydecay381, i64 2, !dbg !11216
  %94 = load i32, i32* %add.ptr382, align 4, !dbg !11216
  %95 = call i1 @llvm.is.constant.i32(i32 %94), !dbg !11216
  br i1 %95, label %cond.true383, label %cond.false403, !dbg !11216

cond.true383:                                     ; preds = %cond.false380
  %arraydecay384 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11216
  %add.ptr385 = getelementptr i32, i32* %arraydecay384, i64 2, !dbg !11216
  %96 = load i32, i32* %add.ptr385, align 4, !dbg !11216
  %and386 = and i32 %96, 255, !dbg !11216
  %shl387 = shl i32 %and386, 24, !dbg !11216
  %arraydecay388 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11216
  %add.ptr389 = getelementptr i32, i32* %arraydecay388, i64 2, !dbg !11216
  %97 = load i32, i32* %add.ptr389, align 4, !dbg !11216
  %and390 = and i32 %97, 65280, !dbg !11216
  %shl391 = shl i32 %and390, 8, !dbg !11216
  %or392 = or i32 %shl387, %shl391, !dbg !11216
  %arraydecay393 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11216
  %add.ptr394 = getelementptr i32, i32* %arraydecay393, i64 2, !dbg !11216
  %98 = load i32, i32* %add.ptr394, align 4, !dbg !11216
  %and395 = and i32 %98, 16711680, !dbg !11216
  %shr396 = lshr i32 %and395, 8, !dbg !11216
  %or397 = or i32 %or392, %shr396, !dbg !11216
  %arraydecay398 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11216
  %add.ptr399 = getelementptr i32, i32* %arraydecay398, i64 2, !dbg !11216
  %99 = load i32, i32* %add.ptr399, align 4, !dbg !11216
  %and400 = and i32 %99, -16777216, !dbg !11216
  %shr401 = lshr i32 %and400, 24, !dbg !11216
  %or402 = or i32 %or397, %shr401, !dbg !11216
  br label %cond.end407, !dbg !11216

cond.false403:                                    ; preds = %cond.false380
  %arraydecay404 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11216
  %add.ptr405 = getelementptr i32, i32* %arraydecay404, i64 2, !dbg !11216
  %100 = load i32, i32* %add.ptr405, align 4, !dbg !11216
  %call406 = call i32 @__fswab32(i32 %100) #8, !dbg !11216
  br label %cond.end407, !dbg !11216

cond.end407:                                      ; preds = %cond.false403, %cond.true383
  %cond408 = phi i32 [ %or402, %cond.true383 ], [ %call406, %cond.false403 ], !dbg !11216
  %and409 = and i32 %cond408, -65536, !dbg !11216
  %101 = load i32, i32* %_v205, align 4, !dbg !11216
  %and410 = and i32 %101, 65535, !dbg !11216
  %shl411 = shl i32 %and410, 0, !dbg !11216
  %or412 = or i32 %and409, %shl411, !dbg !11216
  %call413 = call i32 @__fswab32(i32 %or412) #8, !dbg !11216
  br label %cond.end414, !dbg !11216

cond.end414:                                      ; preds = %cond.end407, %cond.end371
  %cond415 = phi i32 [ %or379, %cond.end371 ], [ %call413, %cond.end407 ], !dbg !11216
  %arraydecay416 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11216
  %add.ptr417 = getelementptr i32, i32* %arraydecay416, i64 2, !dbg !11216
  store i32 %cond415, i32* %add.ptr417, align 4, !dbg !11216
  br label %do.end418, !dbg !11216

do.end418:                                        ; preds = %cond.end414
  br label %do.body419, !dbg !11219

do.body419:                                       ; preds = %do.end418
  call void @llvm.dbg.declare(metadata i32* %_v420, metadata !11220, metadata !DIExpression()), !dbg !11222
  %102 = load i8, i8* %other.addr, align 1, !dbg !11222
  %tobool = trunc i8 %102 to i1, !dbg !11222
  %conv421 = zext i1 %tobool to i32, !dbg !11222
  store i32 %conv421, i32* %_v420, align 4, !dbg !11222
  br label %do.body422, !dbg !11222

do.body422:                                       ; preds = %do.body419
  br label %do.end423, !dbg !11223

do.end423:                                        ; preds = %do.body422
  %arraydecay424 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11222
  %add.ptr425 = getelementptr i32, i32* %arraydecay424, i64 2, !dbg !11222
  %103 = load i32, i32* %add.ptr425, align 4, !dbg !11222
  %104 = call i1 @llvm.is.constant.i32(i32 %103), !dbg !11222
  br i1 %104, label %cond.true426, label %cond.false446, !dbg !11222

cond.true426:                                     ; preds = %do.end423
  %arraydecay427 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11222
  %add.ptr428 = getelementptr i32, i32* %arraydecay427, i64 2, !dbg !11222
  %105 = load i32, i32* %add.ptr428, align 4, !dbg !11222
  %and429 = and i32 %105, 255, !dbg !11222
  %shl430 = shl i32 %and429, 24, !dbg !11222
  %arraydecay431 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11222
  %add.ptr432 = getelementptr i32, i32* %arraydecay431, i64 2, !dbg !11222
  %106 = load i32, i32* %add.ptr432, align 4, !dbg !11222
  %and433 = and i32 %106, 65280, !dbg !11222
  %shl434 = shl i32 %and433, 8, !dbg !11222
  %or435 = or i32 %shl430, %shl434, !dbg !11222
  %arraydecay436 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11222
  %add.ptr437 = getelementptr i32, i32* %arraydecay436, i64 2, !dbg !11222
  %107 = load i32, i32* %add.ptr437, align 4, !dbg !11222
  %and438 = and i32 %107, 16711680, !dbg !11222
  %shr439 = lshr i32 %and438, 8, !dbg !11222
  %or440 = or i32 %or435, %shr439, !dbg !11222
  %arraydecay441 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11222
  %add.ptr442 = getelementptr i32, i32* %arraydecay441, i64 2, !dbg !11222
  %108 = load i32, i32* %add.ptr442, align 4, !dbg !11222
  %and443 = and i32 %108, -16777216, !dbg !11222
  %shr444 = lshr i32 %and443, 24, !dbg !11222
  %or445 = or i32 %or440, %shr444, !dbg !11222
  br label %cond.end450, !dbg !11222

cond.false446:                                    ; preds = %do.end423
  %arraydecay447 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11222
  %add.ptr448 = getelementptr i32, i32* %arraydecay447, i64 2, !dbg !11222
  %109 = load i32, i32* %add.ptr448, align 4, !dbg !11222
  %call449 = call i32 @__fswab32(i32 %109) #8, !dbg !11222
  br label %cond.end450, !dbg !11222

cond.end450:                                      ; preds = %cond.false446, %cond.true426
  %cond451 = phi i32 [ %or445, %cond.true426 ], [ %call449, %cond.false446 ], !dbg !11222
  %and452 = and i32 %cond451, 2147483647, !dbg !11222
  %110 = load i32, i32* %_v420, align 4, !dbg !11222
  %and453 = and i32 %110, 1, !dbg !11222
  %shl454 = shl i32 %and453, 31, !dbg !11222
  %or455 = or i32 %and452, %shl454, !dbg !11222
  %111 = call i1 @llvm.is.constant.i32(i32 %or455), !dbg !11222
  br i1 %111, label %cond.true456, label %cond.false596, !dbg !11222

cond.true456:                                     ; preds = %cond.end450
  %arraydecay457 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11222
  %add.ptr458 = getelementptr i32, i32* %arraydecay457, i64 2, !dbg !11222
  %112 = load i32, i32* %add.ptr458, align 4, !dbg !11222
  %113 = call i1 @llvm.is.constant.i32(i32 %112), !dbg !11222
  br i1 %113, label %cond.true459, label %cond.false479, !dbg !11222

cond.true459:                                     ; preds = %cond.true456
  %arraydecay460 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11222
  %add.ptr461 = getelementptr i32, i32* %arraydecay460, i64 2, !dbg !11222
  %114 = load i32, i32* %add.ptr461, align 4, !dbg !11222
  %and462 = and i32 %114, 255, !dbg !11222
  %shl463 = shl i32 %and462, 24, !dbg !11222
  %arraydecay464 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11222
  %add.ptr465 = getelementptr i32, i32* %arraydecay464, i64 2, !dbg !11222
  %115 = load i32, i32* %add.ptr465, align 4, !dbg !11222
  %and466 = and i32 %115, 65280, !dbg !11222
  %shl467 = shl i32 %and466, 8, !dbg !11222
  %or468 = or i32 %shl463, %shl467, !dbg !11222
  %arraydecay469 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11222
  %add.ptr470 = getelementptr i32, i32* %arraydecay469, i64 2, !dbg !11222
  %116 = load i32, i32* %add.ptr470, align 4, !dbg !11222
  %and471 = and i32 %116, 16711680, !dbg !11222
  %shr472 = lshr i32 %and471, 8, !dbg !11222
  %or473 = or i32 %or468, %shr472, !dbg !11222
  %arraydecay474 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11222
  %add.ptr475 = getelementptr i32, i32* %arraydecay474, i64 2, !dbg !11222
  %117 = load i32, i32* %add.ptr475, align 4, !dbg !11222
  %and476 = and i32 %117, -16777216, !dbg !11222
  %shr477 = lshr i32 %and476, 24, !dbg !11222
  %or478 = or i32 %or473, %shr477, !dbg !11222
  br label %cond.end483, !dbg !11222

cond.false479:                                    ; preds = %cond.true456
  %arraydecay480 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11222
  %add.ptr481 = getelementptr i32, i32* %arraydecay480, i64 2, !dbg !11222
  %118 = load i32, i32* %add.ptr481, align 4, !dbg !11222
  %call482 = call i32 @__fswab32(i32 %118) #8, !dbg !11222
  br label %cond.end483, !dbg !11222

cond.end483:                                      ; preds = %cond.false479, %cond.true459
  %cond484 = phi i32 [ %or478, %cond.true459 ], [ %call482, %cond.false479 ], !dbg !11222
  %and485 = and i32 %cond484, 2147483647, !dbg !11222
  %119 = load i32, i32* %_v420, align 4, !dbg !11222
  %and486 = and i32 %119, 1, !dbg !11222
  %shl487 = shl i32 %and486, 31, !dbg !11222
  %or488 = or i32 %and485, %shl487, !dbg !11222
  %and489 = and i32 %or488, 255, !dbg !11222
  %shl490 = shl i32 %and489, 24, !dbg !11222
  %arraydecay491 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11222
  %add.ptr492 = getelementptr i32, i32* %arraydecay491, i64 2, !dbg !11222
  %120 = load i32, i32* %add.ptr492, align 4, !dbg !11222
  %121 = call i1 @llvm.is.constant.i32(i32 %120), !dbg !11222
  br i1 %121, label %cond.true493, label %cond.false513, !dbg !11222

cond.true493:                                     ; preds = %cond.end483
  %arraydecay494 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11222
  %add.ptr495 = getelementptr i32, i32* %arraydecay494, i64 2, !dbg !11222
  %122 = load i32, i32* %add.ptr495, align 4, !dbg !11222
  %and496 = and i32 %122, 255, !dbg !11222
  %shl497 = shl i32 %and496, 24, !dbg !11222
  %arraydecay498 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11222
  %add.ptr499 = getelementptr i32, i32* %arraydecay498, i64 2, !dbg !11222
  %123 = load i32, i32* %add.ptr499, align 4, !dbg !11222
  %and500 = and i32 %123, 65280, !dbg !11222
  %shl501 = shl i32 %and500, 8, !dbg !11222
  %or502 = or i32 %shl497, %shl501, !dbg !11222
  %arraydecay503 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11222
  %add.ptr504 = getelementptr i32, i32* %arraydecay503, i64 2, !dbg !11222
  %124 = load i32, i32* %add.ptr504, align 4, !dbg !11222
  %and505 = and i32 %124, 16711680, !dbg !11222
  %shr506 = lshr i32 %and505, 8, !dbg !11222
  %or507 = or i32 %or502, %shr506, !dbg !11222
  %arraydecay508 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11222
  %add.ptr509 = getelementptr i32, i32* %arraydecay508, i64 2, !dbg !11222
  %125 = load i32, i32* %add.ptr509, align 4, !dbg !11222
  %and510 = and i32 %125, -16777216, !dbg !11222
  %shr511 = lshr i32 %and510, 24, !dbg !11222
  %or512 = or i32 %or507, %shr511, !dbg !11222
  br label %cond.end517, !dbg !11222

cond.false513:                                    ; preds = %cond.end483
  %arraydecay514 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11222
  %add.ptr515 = getelementptr i32, i32* %arraydecay514, i64 2, !dbg !11222
  %126 = load i32, i32* %add.ptr515, align 4, !dbg !11222
  %call516 = call i32 @__fswab32(i32 %126) #8, !dbg !11222
  br label %cond.end517, !dbg !11222

cond.end517:                                      ; preds = %cond.false513, %cond.true493
  %cond518 = phi i32 [ %or512, %cond.true493 ], [ %call516, %cond.false513 ], !dbg !11222
  %and519 = and i32 %cond518, 2147483647, !dbg !11222
  %127 = load i32, i32* %_v420, align 4, !dbg !11222
  %and520 = and i32 %127, 1, !dbg !11222
  %shl521 = shl i32 %and520, 31, !dbg !11222
  %or522 = or i32 %and519, %shl521, !dbg !11222
  %and523 = and i32 %or522, 65280, !dbg !11222
  %shl524 = shl i32 %and523, 8, !dbg !11222
  %or525 = or i32 %shl490, %shl524, !dbg !11222
  %arraydecay526 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11222
  %add.ptr527 = getelementptr i32, i32* %arraydecay526, i64 2, !dbg !11222
  %128 = load i32, i32* %add.ptr527, align 4, !dbg !11222
  %129 = call i1 @llvm.is.constant.i32(i32 %128), !dbg !11222
  br i1 %129, label %cond.true528, label %cond.false548, !dbg !11222

cond.true528:                                     ; preds = %cond.end517
  %arraydecay529 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11222
  %add.ptr530 = getelementptr i32, i32* %arraydecay529, i64 2, !dbg !11222
  %130 = load i32, i32* %add.ptr530, align 4, !dbg !11222
  %and531 = and i32 %130, 255, !dbg !11222
  %shl532 = shl i32 %and531, 24, !dbg !11222
  %arraydecay533 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11222
  %add.ptr534 = getelementptr i32, i32* %arraydecay533, i64 2, !dbg !11222
  %131 = load i32, i32* %add.ptr534, align 4, !dbg !11222
  %and535 = and i32 %131, 65280, !dbg !11222
  %shl536 = shl i32 %and535, 8, !dbg !11222
  %or537 = or i32 %shl532, %shl536, !dbg !11222
  %arraydecay538 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11222
  %add.ptr539 = getelementptr i32, i32* %arraydecay538, i64 2, !dbg !11222
  %132 = load i32, i32* %add.ptr539, align 4, !dbg !11222
  %and540 = and i32 %132, 16711680, !dbg !11222
  %shr541 = lshr i32 %and540, 8, !dbg !11222
  %or542 = or i32 %or537, %shr541, !dbg !11222
  %arraydecay543 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11222
  %add.ptr544 = getelementptr i32, i32* %arraydecay543, i64 2, !dbg !11222
  %133 = load i32, i32* %add.ptr544, align 4, !dbg !11222
  %and545 = and i32 %133, -16777216, !dbg !11222
  %shr546 = lshr i32 %and545, 24, !dbg !11222
  %or547 = or i32 %or542, %shr546, !dbg !11222
  br label %cond.end552, !dbg !11222

cond.false548:                                    ; preds = %cond.end517
  %arraydecay549 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11222
  %add.ptr550 = getelementptr i32, i32* %arraydecay549, i64 2, !dbg !11222
  %134 = load i32, i32* %add.ptr550, align 4, !dbg !11222
  %call551 = call i32 @__fswab32(i32 %134) #8, !dbg !11222
  br label %cond.end552, !dbg !11222

cond.end552:                                      ; preds = %cond.false548, %cond.true528
  %cond553 = phi i32 [ %or547, %cond.true528 ], [ %call551, %cond.false548 ], !dbg !11222
  %and554 = and i32 %cond553, 2147483647, !dbg !11222
  %135 = load i32, i32* %_v420, align 4, !dbg !11222
  %and555 = and i32 %135, 1, !dbg !11222
  %shl556 = shl i32 %and555, 31, !dbg !11222
  %or557 = or i32 %and554, %shl556, !dbg !11222
  %and558 = and i32 %or557, 16711680, !dbg !11222
  %shr559 = lshr i32 %and558, 8, !dbg !11222
  %or560 = or i32 %or525, %shr559, !dbg !11222
  %arraydecay561 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11222
  %add.ptr562 = getelementptr i32, i32* %arraydecay561, i64 2, !dbg !11222
  %136 = load i32, i32* %add.ptr562, align 4, !dbg !11222
  %137 = call i1 @llvm.is.constant.i32(i32 %136), !dbg !11222
  br i1 %137, label %cond.true563, label %cond.false583, !dbg !11222

cond.true563:                                     ; preds = %cond.end552
  %arraydecay564 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11222
  %add.ptr565 = getelementptr i32, i32* %arraydecay564, i64 2, !dbg !11222
  %138 = load i32, i32* %add.ptr565, align 4, !dbg !11222
  %and566 = and i32 %138, 255, !dbg !11222
  %shl567 = shl i32 %and566, 24, !dbg !11222
  %arraydecay568 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11222
  %add.ptr569 = getelementptr i32, i32* %arraydecay568, i64 2, !dbg !11222
  %139 = load i32, i32* %add.ptr569, align 4, !dbg !11222
  %and570 = and i32 %139, 65280, !dbg !11222
  %shl571 = shl i32 %and570, 8, !dbg !11222
  %or572 = or i32 %shl567, %shl571, !dbg !11222
  %arraydecay573 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11222
  %add.ptr574 = getelementptr i32, i32* %arraydecay573, i64 2, !dbg !11222
  %140 = load i32, i32* %add.ptr574, align 4, !dbg !11222
  %and575 = and i32 %140, 16711680, !dbg !11222
  %shr576 = lshr i32 %and575, 8, !dbg !11222
  %or577 = or i32 %or572, %shr576, !dbg !11222
  %arraydecay578 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11222
  %add.ptr579 = getelementptr i32, i32* %arraydecay578, i64 2, !dbg !11222
  %141 = load i32, i32* %add.ptr579, align 4, !dbg !11222
  %and580 = and i32 %141, -16777216, !dbg !11222
  %shr581 = lshr i32 %and580, 24, !dbg !11222
  %or582 = or i32 %or577, %shr581, !dbg !11222
  br label %cond.end587, !dbg !11222

cond.false583:                                    ; preds = %cond.end552
  %arraydecay584 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11222
  %add.ptr585 = getelementptr i32, i32* %arraydecay584, i64 2, !dbg !11222
  %142 = load i32, i32* %add.ptr585, align 4, !dbg !11222
  %call586 = call i32 @__fswab32(i32 %142) #8, !dbg !11222
  br label %cond.end587, !dbg !11222

cond.end587:                                      ; preds = %cond.false583, %cond.true563
  %cond588 = phi i32 [ %or582, %cond.true563 ], [ %call586, %cond.false583 ], !dbg !11222
  %and589 = and i32 %cond588, 2147483647, !dbg !11222
  %143 = load i32, i32* %_v420, align 4, !dbg !11222
  %and590 = and i32 %143, 1, !dbg !11222
  %shl591 = shl i32 %and590, 31, !dbg !11222
  %or592 = or i32 %and589, %shl591, !dbg !11222
  %and593 = and i32 %or592, -16777216, !dbg !11222
  %shr594 = lshr i32 %and593, 24, !dbg !11222
  %or595 = or i32 %or560, %shr594, !dbg !11222
  br label %cond.end630, !dbg !11222

cond.false596:                                    ; preds = %cond.end450
  %arraydecay597 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11222
  %add.ptr598 = getelementptr i32, i32* %arraydecay597, i64 2, !dbg !11222
  %144 = load i32, i32* %add.ptr598, align 4, !dbg !11222
  %145 = call i1 @llvm.is.constant.i32(i32 %144), !dbg !11222
  br i1 %145, label %cond.true599, label %cond.false619, !dbg !11222

cond.true599:                                     ; preds = %cond.false596
  %arraydecay600 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11222
  %add.ptr601 = getelementptr i32, i32* %arraydecay600, i64 2, !dbg !11222
  %146 = load i32, i32* %add.ptr601, align 4, !dbg !11222
  %and602 = and i32 %146, 255, !dbg !11222
  %shl603 = shl i32 %and602, 24, !dbg !11222
  %arraydecay604 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11222
  %add.ptr605 = getelementptr i32, i32* %arraydecay604, i64 2, !dbg !11222
  %147 = load i32, i32* %add.ptr605, align 4, !dbg !11222
  %and606 = and i32 %147, 65280, !dbg !11222
  %shl607 = shl i32 %and606, 8, !dbg !11222
  %or608 = or i32 %shl603, %shl607, !dbg !11222
  %arraydecay609 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11222
  %add.ptr610 = getelementptr i32, i32* %arraydecay609, i64 2, !dbg !11222
  %148 = load i32, i32* %add.ptr610, align 4, !dbg !11222
  %and611 = and i32 %148, 16711680, !dbg !11222
  %shr612 = lshr i32 %and611, 8, !dbg !11222
  %or613 = or i32 %or608, %shr612, !dbg !11222
  %arraydecay614 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11222
  %add.ptr615 = getelementptr i32, i32* %arraydecay614, i64 2, !dbg !11222
  %149 = load i32, i32* %add.ptr615, align 4, !dbg !11222
  %and616 = and i32 %149, -16777216, !dbg !11222
  %shr617 = lshr i32 %and616, 24, !dbg !11222
  %or618 = or i32 %or613, %shr617, !dbg !11222
  br label %cond.end623, !dbg !11222

cond.false619:                                    ; preds = %cond.false596
  %arraydecay620 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11222
  %add.ptr621 = getelementptr i32, i32* %arraydecay620, i64 2, !dbg !11222
  %150 = load i32, i32* %add.ptr621, align 4, !dbg !11222
  %call622 = call i32 @__fswab32(i32 %150) #8, !dbg !11222
  br label %cond.end623, !dbg !11222

cond.end623:                                      ; preds = %cond.false619, %cond.true599
  %cond624 = phi i32 [ %or618, %cond.true599 ], [ %call622, %cond.false619 ], !dbg !11222
  %and625 = and i32 %cond624, 2147483647, !dbg !11222
  %151 = load i32, i32* %_v420, align 4, !dbg !11222
  %and626 = and i32 %151, 1, !dbg !11222
  %shl627 = shl i32 %and626, 31, !dbg !11222
  %or628 = or i32 %and625, %shl627, !dbg !11222
  %call629 = call i32 @__fswab32(i32 %or628) #8, !dbg !11222
  br label %cond.end630, !dbg !11222

cond.end630:                                      ; preds = %cond.end623, %cond.end587
  %cond631 = phi i32 [ %or595, %cond.end587 ], [ %call629, %cond.end623 ], !dbg !11222
  %arraydecay632 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11222
  %add.ptr633 = getelementptr i32, i32* %arraydecay632, i64 2, !dbg !11222
  store i32 %cond631, i32* %add.ptr633, align 4, !dbg !11222
  br label %do.end634, !dbg !11222

do.end634:                                        ; preds = %cond.end630
  %152 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %mdev.addr, align 8, !dbg !11225
  %arraydecay635 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11225
  %153 = bitcast i32* %arraydecay635 to i8*, !dbg !11225
  %arraydecay636 = getelementptr inbounds [68 x i32], [68 x i32]* %out, i64 0, i64 0, !dbg !11225
  %154 = bitcast i32* %arraydecay636 to i8*, !dbg !11225
  %call637 = call i32 @mlx5_cmd_exec(%struct.mlx5_core_dev* %152, i8* %153, i32 16, i8* %154, i32 272) #9, !dbg !11225
  store i32 %call637, i32* %tmp, align 4, !dbg !11227
  %155 = load i32, i32* %tmp, align 4, !dbg !11225
  store i32 %155, i32* %err, align 4, !dbg !11228
  %156 = load i32, i32* %err, align 4, !dbg !11229
  %tobool638 = icmp ne i32 %156, 0, !dbg !11229
  br i1 %tobool638, label %if.end, label %if.then, !dbg !11231

if.then:                                          ; preds = %do.end634
  %157 = load i8*, i8** %addr.addr, align 8, !dbg !11232
  %158 = load i8*, i8** %out_addr, align 8, !dbg !11233
  %arrayidx = getelementptr i8, i8* %158, i64 2, !dbg !11233
  call void @ether_addr_copy(i8* %157, i8* %arrayidx) #9, !dbg !11234
  br label %if.end, !dbg !11234

if.end:                                           ; preds = %if.then, %do.end634
  %159 = load i32, i32* %err, align 4, !dbg !11235
  ret i32 %159, !dbg !11236
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ether_addr_copy(i8* %dst, i8* %src) #0 !dbg !11237 {
entry:
  %dst.addr = alloca i8*, align 8
  %src.addr = alloca i8*, align 8
  store i8* %dst, i8** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dst.addr, metadata !11241, metadata !DIExpression()), !dbg !11242
  store i8* %src, i8** %src.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %src.addr, metadata !11243, metadata !DIExpression()), !dbg !11244
  %0 = load i8*, i8** %src.addr, align 8, !dbg !11245
  %1 = bitcast i8* %0 to i32*, !dbg !11246
  %2 = load i32, i32* %1, align 4, !dbg !11246
  %3 = load i8*, i8** %dst.addr, align 8, !dbg !11247
  %4 = bitcast i8* %3 to i32*, !dbg !11248
  store i32 %2, i32* %4, align 4, !dbg !11249
  %5 = load i8*, i8** %src.addr, align 8, !dbg !11250
  %add.ptr = getelementptr i8, i8* %5, i64 4, !dbg !11251
  %6 = bitcast i8* %add.ptr to i16*, !dbg !11252
  %7 = load i16, i16* %6, align 2, !dbg !11252
  %8 = load i8*, i8** %dst.addr, align 8, !dbg !11253
  %add.ptr1 = getelementptr i8, i8* %8, i64 4, !dbg !11254
  %9 = bitcast i8* %add.ptr1 to i16*, !dbg !11255
  store i16 %7, i16* %9, align 2, !dbg !11256
  ret void, !dbg !11257
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @mlx5_query_mac_address(%struct.mlx5_core_dev* %mdev, i8* %addr) #0 !dbg !11258 {
entry:
  %mdev.addr = alloca %struct.mlx5_core_dev*, align 8
  %addr.addr = alloca i8*, align 8
  store %struct.mlx5_core_dev* %mdev, %struct.mlx5_core_dev** %mdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_core_dev** %mdev.addr, metadata !11261, metadata !DIExpression()), !dbg !11262
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !11263, metadata !DIExpression()), !dbg !11264
  %0 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %mdev.addr, align 8, !dbg !11265
  %1 = load i8*, i8** %addr.addr, align 8, !dbg !11266
  %call = call i32 @mlx5_query_nic_vport_mac_address(%struct.mlx5_core_dev* %0, i16 zeroext 0, i1 zeroext false, i8* %1) #9, !dbg !11267
  ret i32 %call, !dbg !11268
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @mlx5_modify_nic_vport_mac_address(%struct.mlx5_core_dev* %mdev, i16 zeroext %vport, i8* %addr) #0 !dbg !11269 {
entry:
  %retval = alloca i32, align 4
  %mdev.addr = alloca %struct.mlx5_core_dev*, align 8
  %vport.addr = alloca i16, align 2
  %addr.addr = alloca i8*, align 8
  %in = alloca i8*, align 8
  %inlen = alloca i32, align 4
  %err = alloca i32, align 4
  %nic_vport_ctx = alloca i8*, align 8
  %perm_mac = alloca i8*, align 8
  %_v = alloca i32, align 4
  %_v168 = alloca i32, align 4
  %_v347 = alloca i32, align 4
  %_v527 = alloca i32, align 4
  %_out = alloca [4 x i32], align 16
  %tmp = alloca i32, align 4
  %tmp704 = alloca i32, align 4
  store %struct.mlx5_core_dev* %mdev, %struct.mlx5_core_dev** %mdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_core_dev** %mdev.addr, metadata !11272, metadata !DIExpression()), !dbg !11273
  store i16 %vport, i16* %vport.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %vport.addr, metadata !11274, metadata !DIExpression()), !dbg !11275
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !11276, metadata !DIExpression()), !dbg !11277
  call void @llvm.dbg.declare(metadata i8** %in, metadata !11278, metadata !DIExpression()), !dbg !11279
  call void @llvm.dbg.declare(metadata i32* %inlen, metadata !11280, metadata !DIExpression()), !dbg !11281
  store i32 512, i32* %inlen, align 4, !dbg !11281
  call void @llvm.dbg.declare(metadata i32* %err, metadata !11282, metadata !DIExpression()), !dbg !11283
  call void @llvm.dbg.declare(metadata i8** %nic_vport_ctx, metadata !11284, metadata !DIExpression()), !dbg !11285
  call void @llvm.dbg.declare(metadata i8** %perm_mac, metadata !11286, metadata !DIExpression()), !dbg !11287
  %0 = load i32, i32* %inlen, align 4, !dbg !11288
  %conv = sext i32 %0 to i64, !dbg !11288
  %call = call i8* @kvzalloc(i64 %conv, i32 3264) #9, !dbg !11289
  store i8* %call, i8** %in, align 8, !dbg !11290
  %1 = load i8*, i8** %in, align 8, !dbg !11291
  %tobool = icmp ne i8* %1, null, !dbg !11291
  br i1 %tobool, label %if.end, label %if.then, !dbg !11293

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !11294
  br label %return, !dbg !11294

if.end:                                           ; preds = %entry
  br label %do.body, !dbg !11295

do.body:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %_v, metadata !11296, metadata !DIExpression()), !dbg !11298
  store i32 1, i32* %_v, align 4, !dbg !11298
  br label %do.body1, !dbg !11298

do.body1:                                         ; preds = %do.body
  br label %do.end, !dbg !11299

do.end:                                           ; preds = %do.body1
  %2 = load i8*, i8** %in, align 8, !dbg !11298
  %3 = bitcast i8* %2 to i32*, !dbg !11298
  %add.ptr = getelementptr i32, i32* %3, i64 3, !dbg !11298
  %4 = load i32, i32* %add.ptr, align 4, !dbg !11298
  %5 = call i1 @llvm.is.constant.i32(i32 %4), !dbg !11298
  br i1 %5, label %cond.true, label %cond.false, !dbg !11298

cond.true:                                        ; preds = %do.end
  %6 = load i8*, i8** %in, align 8, !dbg !11298
  %7 = bitcast i8* %6 to i32*, !dbg !11298
  %add.ptr2 = getelementptr i32, i32* %7, i64 3, !dbg !11298
  %8 = load i32, i32* %add.ptr2, align 4, !dbg !11298
  %and = and i32 %8, 255, !dbg !11298
  %shl = shl i32 %and, 24, !dbg !11298
  %9 = load i8*, i8** %in, align 8, !dbg !11298
  %10 = bitcast i8* %9 to i32*, !dbg !11298
  %add.ptr3 = getelementptr i32, i32* %10, i64 3, !dbg !11298
  %11 = load i32, i32* %add.ptr3, align 4, !dbg !11298
  %and4 = and i32 %11, 65280, !dbg !11298
  %shl5 = shl i32 %and4, 8, !dbg !11298
  %or = or i32 %shl, %shl5, !dbg !11298
  %12 = load i8*, i8** %in, align 8, !dbg !11298
  %13 = bitcast i8* %12 to i32*, !dbg !11298
  %add.ptr6 = getelementptr i32, i32* %13, i64 3, !dbg !11298
  %14 = load i32, i32* %add.ptr6, align 4, !dbg !11298
  %and7 = and i32 %14, 16711680, !dbg !11298
  %shr = lshr i32 %and7, 8, !dbg !11298
  %or8 = or i32 %or, %shr, !dbg !11298
  %15 = load i8*, i8** %in, align 8, !dbg !11298
  %16 = bitcast i8* %15 to i32*, !dbg !11298
  %add.ptr9 = getelementptr i32, i32* %16, i64 3, !dbg !11298
  %17 = load i32, i32* %add.ptr9, align 4, !dbg !11298
  %and10 = and i32 %17, -16777216, !dbg !11298
  %shr11 = lshr i32 %and10, 24, !dbg !11298
  %or12 = or i32 %or8, %shr11, !dbg !11298
  br label %cond.end, !dbg !11298

cond.false:                                       ; preds = %do.end
  %18 = load i8*, i8** %in, align 8, !dbg !11298
  %19 = bitcast i8* %18 to i32*, !dbg !11298
  %add.ptr13 = getelementptr i32, i32* %19, i64 3, !dbg !11298
  %20 = load i32, i32* %add.ptr13, align 4, !dbg !11298
  %call14 = call i32 @__fswab32(i32 %20) #8, !dbg !11298
  br label %cond.end, !dbg !11298

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %or12, %cond.true ], [ %call14, %cond.false ], !dbg !11298
  %and15 = and i32 %cond, -9, !dbg !11298
  %21 = load i32, i32* %_v, align 4, !dbg !11298
  %and16 = and i32 %21, 1, !dbg !11298
  %shl17 = shl i32 %and16, 3, !dbg !11298
  %or18 = or i32 %and15, %shl17, !dbg !11298
  %22 = call i1 @llvm.is.constant.i32(i32 %or18), !dbg !11298
  br i1 %22, label %cond.true19, label %cond.false135, !dbg !11298

cond.true19:                                      ; preds = %cond.end
  %23 = load i8*, i8** %in, align 8, !dbg !11298
  %24 = bitcast i8* %23 to i32*, !dbg !11298
  %add.ptr20 = getelementptr i32, i32* %24, i64 3, !dbg !11298
  %25 = load i32, i32* %add.ptr20, align 4, !dbg !11298
  %26 = call i1 @llvm.is.constant.i32(i32 %25), !dbg !11298
  br i1 %26, label %cond.true21, label %cond.false37, !dbg !11298

cond.true21:                                      ; preds = %cond.true19
  %27 = load i8*, i8** %in, align 8, !dbg !11298
  %28 = bitcast i8* %27 to i32*, !dbg !11298
  %add.ptr22 = getelementptr i32, i32* %28, i64 3, !dbg !11298
  %29 = load i32, i32* %add.ptr22, align 4, !dbg !11298
  %and23 = and i32 %29, 255, !dbg !11298
  %shl24 = shl i32 %and23, 24, !dbg !11298
  %30 = load i8*, i8** %in, align 8, !dbg !11298
  %31 = bitcast i8* %30 to i32*, !dbg !11298
  %add.ptr25 = getelementptr i32, i32* %31, i64 3, !dbg !11298
  %32 = load i32, i32* %add.ptr25, align 4, !dbg !11298
  %and26 = and i32 %32, 65280, !dbg !11298
  %shl27 = shl i32 %and26, 8, !dbg !11298
  %or28 = or i32 %shl24, %shl27, !dbg !11298
  %33 = load i8*, i8** %in, align 8, !dbg !11298
  %34 = bitcast i8* %33 to i32*, !dbg !11298
  %add.ptr29 = getelementptr i32, i32* %34, i64 3, !dbg !11298
  %35 = load i32, i32* %add.ptr29, align 4, !dbg !11298
  %and30 = and i32 %35, 16711680, !dbg !11298
  %shr31 = lshr i32 %and30, 8, !dbg !11298
  %or32 = or i32 %or28, %shr31, !dbg !11298
  %36 = load i8*, i8** %in, align 8, !dbg !11298
  %37 = bitcast i8* %36 to i32*, !dbg !11298
  %add.ptr33 = getelementptr i32, i32* %37, i64 3, !dbg !11298
  %38 = load i32, i32* %add.ptr33, align 4, !dbg !11298
  %and34 = and i32 %38, -16777216, !dbg !11298
  %shr35 = lshr i32 %and34, 24, !dbg !11298
  %or36 = or i32 %or32, %shr35, !dbg !11298
  br label %cond.end40, !dbg !11298

cond.false37:                                     ; preds = %cond.true19
  %39 = load i8*, i8** %in, align 8, !dbg !11298
  %40 = bitcast i8* %39 to i32*, !dbg !11298
  %add.ptr38 = getelementptr i32, i32* %40, i64 3, !dbg !11298
  %41 = load i32, i32* %add.ptr38, align 4, !dbg !11298
  %call39 = call i32 @__fswab32(i32 %41) #8, !dbg !11298
  br label %cond.end40, !dbg !11298

cond.end40:                                       ; preds = %cond.false37, %cond.true21
  %cond41 = phi i32 [ %or36, %cond.true21 ], [ %call39, %cond.false37 ], !dbg !11298
  %and42 = and i32 %cond41, -9, !dbg !11298
  %42 = load i32, i32* %_v, align 4, !dbg !11298
  %and43 = and i32 %42, 1, !dbg !11298
  %shl44 = shl i32 %and43, 3, !dbg !11298
  %or45 = or i32 %and42, %shl44, !dbg !11298
  %and46 = and i32 %or45, 255, !dbg !11298
  %shl47 = shl i32 %and46, 24, !dbg !11298
  %43 = load i8*, i8** %in, align 8, !dbg !11298
  %44 = bitcast i8* %43 to i32*, !dbg !11298
  %add.ptr48 = getelementptr i32, i32* %44, i64 3, !dbg !11298
  %45 = load i32, i32* %add.ptr48, align 4, !dbg !11298
  %46 = call i1 @llvm.is.constant.i32(i32 %45), !dbg !11298
  br i1 %46, label %cond.true49, label %cond.false65, !dbg !11298

cond.true49:                                      ; preds = %cond.end40
  %47 = load i8*, i8** %in, align 8, !dbg !11298
  %48 = bitcast i8* %47 to i32*, !dbg !11298
  %add.ptr50 = getelementptr i32, i32* %48, i64 3, !dbg !11298
  %49 = load i32, i32* %add.ptr50, align 4, !dbg !11298
  %and51 = and i32 %49, 255, !dbg !11298
  %shl52 = shl i32 %and51, 24, !dbg !11298
  %50 = load i8*, i8** %in, align 8, !dbg !11298
  %51 = bitcast i8* %50 to i32*, !dbg !11298
  %add.ptr53 = getelementptr i32, i32* %51, i64 3, !dbg !11298
  %52 = load i32, i32* %add.ptr53, align 4, !dbg !11298
  %and54 = and i32 %52, 65280, !dbg !11298
  %shl55 = shl i32 %and54, 8, !dbg !11298
  %or56 = or i32 %shl52, %shl55, !dbg !11298
  %53 = load i8*, i8** %in, align 8, !dbg !11298
  %54 = bitcast i8* %53 to i32*, !dbg !11298
  %add.ptr57 = getelementptr i32, i32* %54, i64 3, !dbg !11298
  %55 = load i32, i32* %add.ptr57, align 4, !dbg !11298
  %and58 = and i32 %55, 16711680, !dbg !11298
  %shr59 = lshr i32 %and58, 8, !dbg !11298
  %or60 = or i32 %or56, %shr59, !dbg !11298
  %56 = load i8*, i8** %in, align 8, !dbg !11298
  %57 = bitcast i8* %56 to i32*, !dbg !11298
  %add.ptr61 = getelementptr i32, i32* %57, i64 3, !dbg !11298
  %58 = load i32, i32* %add.ptr61, align 4, !dbg !11298
  %and62 = and i32 %58, -16777216, !dbg !11298
  %shr63 = lshr i32 %and62, 24, !dbg !11298
  %or64 = or i32 %or60, %shr63, !dbg !11298
  br label %cond.end68, !dbg !11298

cond.false65:                                     ; preds = %cond.end40
  %59 = load i8*, i8** %in, align 8, !dbg !11298
  %60 = bitcast i8* %59 to i32*, !dbg !11298
  %add.ptr66 = getelementptr i32, i32* %60, i64 3, !dbg !11298
  %61 = load i32, i32* %add.ptr66, align 4, !dbg !11298
  %call67 = call i32 @__fswab32(i32 %61) #8, !dbg !11298
  br label %cond.end68, !dbg !11298

cond.end68:                                       ; preds = %cond.false65, %cond.true49
  %cond69 = phi i32 [ %or64, %cond.true49 ], [ %call67, %cond.false65 ], !dbg !11298
  %and70 = and i32 %cond69, -9, !dbg !11298
  %62 = load i32, i32* %_v, align 4, !dbg !11298
  %and71 = and i32 %62, 1, !dbg !11298
  %shl72 = shl i32 %and71, 3, !dbg !11298
  %or73 = or i32 %and70, %shl72, !dbg !11298
  %and74 = and i32 %or73, 65280, !dbg !11298
  %shl75 = shl i32 %and74, 8, !dbg !11298
  %or76 = or i32 %shl47, %shl75, !dbg !11298
  %63 = load i8*, i8** %in, align 8, !dbg !11298
  %64 = bitcast i8* %63 to i32*, !dbg !11298
  %add.ptr77 = getelementptr i32, i32* %64, i64 3, !dbg !11298
  %65 = load i32, i32* %add.ptr77, align 4, !dbg !11298
  %66 = call i1 @llvm.is.constant.i32(i32 %65), !dbg !11298
  br i1 %66, label %cond.true78, label %cond.false94, !dbg !11298

cond.true78:                                      ; preds = %cond.end68
  %67 = load i8*, i8** %in, align 8, !dbg !11298
  %68 = bitcast i8* %67 to i32*, !dbg !11298
  %add.ptr79 = getelementptr i32, i32* %68, i64 3, !dbg !11298
  %69 = load i32, i32* %add.ptr79, align 4, !dbg !11298
  %and80 = and i32 %69, 255, !dbg !11298
  %shl81 = shl i32 %and80, 24, !dbg !11298
  %70 = load i8*, i8** %in, align 8, !dbg !11298
  %71 = bitcast i8* %70 to i32*, !dbg !11298
  %add.ptr82 = getelementptr i32, i32* %71, i64 3, !dbg !11298
  %72 = load i32, i32* %add.ptr82, align 4, !dbg !11298
  %and83 = and i32 %72, 65280, !dbg !11298
  %shl84 = shl i32 %and83, 8, !dbg !11298
  %or85 = or i32 %shl81, %shl84, !dbg !11298
  %73 = load i8*, i8** %in, align 8, !dbg !11298
  %74 = bitcast i8* %73 to i32*, !dbg !11298
  %add.ptr86 = getelementptr i32, i32* %74, i64 3, !dbg !11298
  %75 = load i32, i32* %add.ptr86, align 4, !dbg !11298
  %and87 = and i32 %75, 16711680, !dbg !11298
  %shr88 = lshr i32 %and87, 8, !dbg !11298
  %or89 = or i32 %or85, %shr88, !dbg !11298
  %76 = load i8*, i8** %in, align 8, !dbg !11298
  %77 = bitcast i8* %76 to i32*, !dbg !11298
  %add.ptr90 = getelementptr i32, i32* %77, i64 3, !dbg !11298
  %78 = load i32, i32* %add.ptr90, align 4, !dbg !11298
  %and91 = and i32 %78, -16777216, !dbg !11298
  %shr92 = lshr i32 %and91, 24, !dbg !11298
  %or93 = or i32 %or89, %shr92, !dbg !11298
  br label %cond.end97, !dbg !11298

cond.false94:                                     ; preds = %cond.end68
  %79 = load i8*, i8** %in, align 8, !dbg !11298
  %80 = bitcast i8* %79 to i32*, !dbg !11298
  %add.ptr95 = getelementptr i32, i32* %80, i64 3, !dbg !11298
  %81 = load i32, i32* %add.ptr95, align 4, !dbg !11298
  %call96 = call i32 @__fswab32(i32 %81) #8, !dbg !11298
  br label %cond.end97, !dbg !11298

cond.end97:                                       ; preds = %cond.false94, %cond.true78
  %cond98 = phi i32 [ %or93, %cond.true78 ], [ %call96, %cond.false94 ], !dbg !11298
  %and99 = and i32 %cond98, -9, !dbg !11298
  %82 = load i32, i32* %_v, align 4, !dbg !11298
  %and100 = and i32 %82, 1, !dbg !11298
  %shl101 = shl i32 %and100, 3, !dbg !11298
  %or102 = or i32 %and99, %shl101, !dbg !11298
  %and103 = and i32 %or102, 16711680, !dbg !11298
  %shr104 = lshr i32 %and103, 8, !dbg !11298
  %or105 = or i32 %or76, %shr104, !dbg !11298
  %83 = load i8*, i8** %in, align 8, !dbg !11298
  %84 = bitcast i8* %83 to i32*, !dbg !11298
  %add.ptr106 = getelementptr i32, i32* %84, i64 3, !dbg !11298
  %85 = load i32, i32* %add.ptr106, align 4, !dbg !11298
  %86 = call i1 @llvm.is.constant.i32(i32 %85), !dbg !11298
  br i1 %86, label %cond.true107, label %cond.false123, !dbg !11298

cond.true107:                                     ; preds = %cond.end97
  %87 = load i8*, i8** %in, align 8, !dbg !11298
  %88 = bitcast i8* %87 to i32*, !dbg !11298
  %add.ptr108 = getelementptr i32, i32* %88, i64 3, !dbg !11298
  %89 = load i32, i32* %add.ptr108, align 4, !dbg !11298
  %and109 = and i32 %89, 255, !dbg !11298
  %shl110 = shl i32 %and109, 24, !dbg !11298
  %90 = load i8*, i8** %in, align 8, !dbg !11298
  %91 = bitcast i8* %90 to i32*, !dbg !11298
  %add.ptr111 = getelementptr i32, i32* %91, i64 3, !dbg !11298
  %92 = load i32, i32* %add.ptr111, align 4, !dbg !11298
  %and112 = and i32 %92, 65280, !dbg !11298
  %shl113 = shl i32 %and112, 8, !dbg !11298
  %or114 = or i32 %shl110, %shl113, !dbg !11298
  %93 = load i8*, i8** %in, align 8, !dbg !11298
  %94 = bitcast i8* %93 to i32*, !dbg !11298
  %add.ptr115 = getelementptr i32, i32* %94, i64 3, !dbg !11298
  %95 = load i32, i32* %add.ptr115, align 4, !dbg !11298
  %and116 = and i32 %95, 16711680, !dbg !11298
  %shr117 = lshr i32 %and116, 8, !dbg !11298
  %or118 = or i32 %or114, %shr117, !dbg !11298
  %96 = load i8*, i8** %in, align 8, !dbg !11298
  %97 = bitcast i8* %96 to i32*, !dbg !11298
  %add.ptr119 = getelementptr i32, i32* %97, i64 3, !dbg !11298
  %98 = load i32, i32* %add.ptr119, align 4, !dbg !11298
  %and120 = and i32 %98, -16777216, !dbg !11298
  %shr121 = lshr i32 %and120, 24, !dbg !11298
  %or122 = or i32 %or118, %shr121, !dbg !11298
  br label %cond.end126, !dbg !11298

cond.false123:                                    ; preds = %cond.end97
  %99 = load i8*, i8** %in, align 8, !dbg !11298
  %100 = bitcast i8* %99 to i32*, !dbg !11298
  %add.ptr124 = getelementptr i32, i32* %100, i64 3, !dbg !11298
  %101 = load i32, i32* %add.ptr124, align 4, !dbg !11298
  %call125 = call i32 @__fswab32(i32 %101) #8, !dbg !11298
  br label %cond.end126, !dbg !11298

cond.end126:                                      ; preds = %cond.false123, %cond.true107
  %cond127 = phi i32 [ %or122, %cond.true107 ], [ %call125, %cond.false123 ], !dbg !11298
  %and128 = and i32 %cond127, -9, !dbg !11298
  %102 = load i32, i32* %_v, align 4, !dbg !11298
  %and129 = and i32 %102, 1, !dbg !11298
  %shl130 = shl i32 %and129, 3, !dbg !11298
  %or131 = or i32 %and128, %shl130, !dbg !11298
  %and132 = and i32 %or131, -16777216, !dbg !11298
  %shr133 = lshr i32 %and132, 24, !dbg !11298
  %or134 = or i32 %or105, %shr133, !dbg !11298
  br label %cond.end163, !dbg !11298

cond.false135:                                    ; preds = %cond.end
  %103 = load i8*, i8** %in, align 8, !dbg !11298
  %104 = bitcast i8* %103 to i32*, !dbg !11298
  %add.ptr136 = getelementptr i32, i32* %104, i64 3, !dbg !11298
  %105 = load i32, i32* %add.ptr136, align 4, !dbg !11298
  %106 = call i1 @llvm.is.constant.i32(i32 %105), !dbg !11298
  br i1 %106, label %cond.true137, label %cond.false153, !dbg !11298

cond.true137:                                     ; preds = %cond.false135
  %107 = load i8*, i8** %in, align 8, !dbg !11298
  %108 = bitcast i8* %107 to i32*, !dbg !11298
  %add.ptr138 = getelementptr i32, i32* %108, i64 3, !dbg !11298
  %109 = load i32, i32* %add.ptr138, align 4, !dbg !11298
  %and139 = and i32 %109, 255, !dbg !11298
  %shl140 = shl i32 %and139, 24, !dbg !11298
  %110 = load i8*, i8** %in, align 8, !dbg !11298
  %111 = bitcast i8* %110 to i32*, !dbg !11298
  %add.ptr141 = getelementptr i32, i32* %111, i64 3, !dbg !11298
  %112 = load i32, i32* %add.ptr141, align 4, !dbg !11298
  %and142 = and i32 %112, 65280, !dbg !11298
  %shl143 = shl i32 %and142, 8, !dbg !11298
  %or144 = or i32 %shl140, %shl143, !dbg !11298
  %113 = load i8*, i8** %in, align 8, !dbg !11298
  %114 = bitcast i8* %113 to i32*, !dbg !11298
  %add.ptr145 = getelementptr i32, i32* %114, i64 3, !dbg !11298
  %115 = load i32, i32* %add.ptr145, align 4, !dbg !11298
  %and146 = and i32 %115, 16711680, !dbg !11298
  %shr147 = lshr i32 %and146, 8, !dbg !11298
  %or148 = or i32 %or144, %shr147, !dbg !11298
  %116 = load i8*, i8** %in, align 8, !dbg !11298
  %117 = bitcast i8* %116 to i32*, !dbg !11298
  %add.ptr149 = getelementptr i32, i32* %117, i64 3, !dbg !11298
  %118 = load i32, i32* %add.ptr149, align 4, !dbg !11298
  %and150 = and i32 %118, -16777216, !dbg !11298
  %shr151 = lshr i32 %and150, 24, !dbg !11298
  %or152 = or i32 %or148, %shr151, !dbg !11298
  br label %cond.end156, !dbg !11298

cond.false153:                                    ; preds = %cond.false135
  %119 = load i8*, i8** %in, align 8, !dbg !11298
  %120 = bitcast i8* %119 to i32*, !dbg !11298
  %add.ptr154 = getelementptr i32, i32* %120, i64 3, !dbg !11298
  %121 = load i32, i32* %add.ptr154, align 4, !dbg !11298
  %call155 = call i32 @__fswab32(i32 %121) #8, !dbg !11298
  br label %cond.end156, !dbg !11298

cond.end156:                                      ; preds = %cond.false153, %cond.true137
  %cond157 = phi i32 [ %or152, %cond.true137 ], [ %call155, %cond.false153 ], !dbg !11298
  %and158 = and i32 %cond157, -9, !dbg !11298
  %122 = load i32, i32* %_v, align 4, !dbg !11298
  %and159 = and i32 %122, 1, !dbg !11298
  %shl160 = shl i32 %and159, 3, !dbg !11298
  %or161 = or i32 %and158, %shl160, !dbg !11298
  %call162 = call i32 @__fswab32(i32 %or161) #8, !dbg !11298
  br label %cond.end163, !dbg !11298

cond.end163:                                      ; preds = %cond.end156, %cond.end126
  %cond164 = phi i32 [ %or134, %cond.end126 ], [ %call162, %cond.end156 ], !dbg !11298
  %123 = load i8*, i8** %in, align 8, !dbg !11298
  %124 = bitcast i8* %123 to i32*, !dbg !11298
  %add.ptr165 = getelementptr i32, i32* %124, i64 3, !dbg !11298
  store i32 %cond164, i32* %add.ptr165, align 4, !dbg !11298
  br label %do.end166, !dbg !11298

do.end166:                                        ; preds = %cond.end163
  br label %do.body167, !dbg !11301

do.body167:                                       ; preds = %do.end166
  call void @llvm.dbg.declare(metadata i32* %_v168, metadata !11302, metadata !DIExpression()), !dbg !11304
  %125 = load i16, i16* %vport.addr, align 2, !dbg !11304
  %conv169 = zext i16 %125 to i32, !dbg !11304
  store i32 %conv169, i32* %_v168, align 4, !dbg !11304
  br label %do.body170, !dbg !11304

do.body170:                                       ; preds = %do.body167
  br label %do.end171, !dbg !11305

do.end171:                                        ; preds = %do.body170
  %126 = load i8*, i8** %in, align 8, !dbg !11304
  %127 = bitcast i8* %126 to i32*, !dbg !11304
  %add.ptr172 = getelementptr i32, i32* %127, i64 2, !dbg !11304
  %128 = load i32, i32* %add.ptr172, align 4, !dbg !11304
  %129 = call i1 @llvm.is.constant.i32(i32 %128), !dbg !11304
  br i1 %129, label %cond.true173, label %cond.false189, !dbg !11304

cond.true173:                                     ; preds = %do.end171
  %130 = load i8*, i8** %in, align 8, !dbg !11304
  %131 = bitcast i8* %130 to i32*, !dbg !11304
  %add.ptr174 = getelementptr i32, i32* %131, i64 2, !dbg !11304
  %132 = load i32, i32* %add.ptr174, align 4, !dbg !11304
  %and175 = and i32 %132, 255, !dbg !11304
  %shl176 = shl i32 %and175, 24, !dbg !11304
  %133 = load i8*, i8** %in, align 8, !dbg !11304
  %134 = bitcast i8* %133 to i32*, !dbg !11304
  %add.ptr177 = getelementptr i32, i32* %134, i64 2, !dbg !11304
  %135 = load i32, i32* %add.ptr177, align 4, !dbg !11304
  %and178 = and i32 %135, 65280, !dbg !11304
  %shl179 = shl i32 %and178, 8, !dbg !11304
  %or180 = or i32 %shl176, %shl179, !dbg !11304
  %136 = load i8*, i8** %in, align 8, !dbg !11304
  %137 = bitcast i8* %136 to i32*, !dbg !11304
  %add.ptr181 = getelementptr i32, i32* %137, i64 2, !dbg !11304
  %138 = load i32, i32* %add.ptr181, align 4, !dbg !11304
  %and182 = and i32 %138, 16711680, !dbg !11304
  %shr183 = lshr i32 %and182, 8, !dbg !11304
  %or184 = or i32 %or180, %shr183, !dbg !11304
  %139 = load i8*, i8** %in, align 8, !dbg !11304
  %140 = bitcast i8* %139 to i32*, !dbg !11304
  %add.ptr185 = getelementptr i32, i32* %140, i64 2, !dbg !11304
  %141 = load i32, i32* %add.ptr185, align 4, !dbg !11304
  %and186 = and i32 %141, -16777216, !dbg !11304
  %shr187 = lshr i32 %and186, 24, !dbg !11304
  %or188 = or i32 %or184, %shr187, !dbg !11304
  br label %cond.end192, !dbg !11304

cond.false189:                                    ; preds = %do.end171
  %142 = load i8*, i8** %in, align 8, !dbg !11304
  %143 = bitcast i8* %142 to i32*, !dbg !11304
  %add.ptr190 = getelementptr i32, i32* %143, i64 2, !dbg !11304
  %144 = load i32, i32* %add.ptr190, align 4, !dbg !11304
  %call191 = call i32 @__fswab32(i32 %144) #8, !dbg !11304
  br label %cond.end192, !dbg !11304

cond.end192:                                      ; preds = %cond.false189, %cond.true173
  %cond193 = phi i32 [ %or188, %cond.true173 ], [ %call191, %cond.false189 ], !dbg !11304
  %and194 = and i32 %cond193, -65536, !dbg !11304
  %145 = load i32, i32* %_v168, align 4, !dbg !11304
  %and195 = and i32 %145, 65535, !dbg !11304
  %shl196 = shl i32 %and195, 0, !dbg !11304
  %or197 = or i32 %and194, %shl196, !dbg !11304
  %146 = call i1 @llvm.is.constant.i32(i32 %or197), !dbg !11304
  br i1 %146, label %cond.true198, label %cond.false314, !dbg !11304

cond.true198:                                     ; preds = %cond.end192
  %147 = load i8*, i8** %in, align 8, !dbg !11304
  %148 = bitcast i8* %147 to i32*, !dbg !11304
  %add.ptr199 = getelementptr i32, i32* %148, i64 2, !dbg !11304
  %149 = load i32, i32* %add.ptr199, align 4, !dbg !11304
  %150 = call i1 @llvm.is.constant.i32(i32 %149), !dbg !11304
  br i1 %150, label %cond.true200, label %cond.false216, !dbg !11304

cond.true200:                                     ; preds = %cond.true198
  %151 = load i8*, i8** %in, align 8, !dbg !11304
  %152 = bitcast i8* %151 to i32*, !dbg !11304
  %add.ptr201 = getelementptr i32, i32* %152, i64 2, !dbg !11304
  %153 = load i32, i32* %add.ptr201, align 4, !dbg !11304
  %and202 = and i32 %153, 255, !dbg !11304
  %shl203 = shl i32 %and202, 24, !dbg !11304
  %154 = load i8*, i8** %in, align 8, !dbg !11304
  %155 = bitcast i8* %154 to i32*, !dbg !11304
  %add.ptr204 = getelementptr i32, i32* %155, i64 2, !dbg !11304
  %156 = load i32, i32* %add.ptr204, align 4, !dbg !11304
  %and205 = and i32 %156, 65280, !dbg !11304
  %shl206 = shl i32 %and205, 8, !dbg !11304
  %or207 = or i32 %shl203, %shl206, !dbg !11304
  %157 = load i8*, i8** %in, align 8, !dbg !11304
  %158 = bitcast i8* %157 to i32*, !dbg !11304
  %add.ptr208 = getelementptr i32, i32* %158, i64 2, !dbg !11304
  %159 = load i32, i32* %add.ptr208, align 4, !dbg !11304
  %and209 = and i32 %159, 16711680, !dbg !11304
  %shr210 = lshr i32 %and209, 8, !dbg !11304
  %or211 = or i32 %or207, %shr210, !dbg !11304
  %160 = load i8*, i8** %in, align 8, !dbg !11304
  %161 = bitcast i8* %160 to i32*, !dbg !11304
  %add.ptr212 = getelementptr i32, i32* %161, i64 2, !dbg !11304
  %162 = load i32, i32* %add.ptr212, align 4, !dbg !11304
  %and213 = and i32 %162, -16777216, !dbg !11304
  %shr214 = lshr i32 %and213, 24, !dbg !11304
  %or215 = or i32 %or211, %shr214, !dbg !11304
  br label %cond.end219, !dbg !11304

cond.false216:                                    ; preds = %cond.true198
  %163 = load i8*, i8** %in, align 8, !dbg !11304
  %164 = bitcast i8* %163 to i32*, !dbg !11304
  %add.ptr217 = getelementptr i32, i32* %164, i64 2, !dbg !11304
  %165 = load i32, i32* %add.ptr217, align 4, !dbg !11304
  %call218 = call i32 @__fswab32(i32 %165) #8, !dbg !11304
  br label %cond.end219, !dbg !11304

cond.end219:                                      ; preds = %cond.false216, %cond.true200
  %cond220 = phi i32 [ %or215, %cond.true200 ], [ %call218, %cond.false216 ], !dbg !11304
  %and221 = and i32 %cond220, -65536, !dbg !11304
  %166 = load i32, i32* %_v168, align 4, !dbg !11304
  %and222 = and i32 %166, 65535, !dbg !11304
  %shl223 = shl i32 %and222, 0, !dbg !11304
  %or224 = or i32 %and221, %shl223, !dbg !11304
  %and225 = and i32 %or224, 255, !dbg !11304
  %shl226 = shl i32 %and225, 24, !dbg !11304
  %167 = load i8*, i8** %in, align 8, !dbg !11304
  %168 = bitcast i8* %167 to i32*, !dbg !11304
  %add.ptr227 = getelementptr i32, i32* %168, i64 2, !dbg !11304
  %169 = load i32, i32* %add.ptr227, align 4, !dbg !11304
  %170 = call i1 @llvm.is.constant.i32(i32 %169), !dbg !11304
  br i1 %170, label %cond.true228, label %cond.false244, !dbg !11304

cond.true228:                                     ; preds = %cond.end219
  %171 = load i8*, i8** %in, align 8, !dbg !11304
  %172 = bitcast i8* %171 to i32*, !dbg !11304
  %add.ptr229 = getelementptr i32, i32* %172, i64 2, !dbg !11304
  %173 = load i32, i32* %add.ptr229, align 4, !dbg !11304
  %and230 = and i32 %173, 255, !dbg !11304
  %shl231 = shl i32 %and230, 24, !dbg !11304
  %174 = load i8*, i8** %in, align 8, !dbg !11304
  %175 = bitcast i8* %174 to i32*, !dbg !11304
  %add.ptr232 = getelementptr i32, i32* %175, i64 2, !dbg !11304
  %176 = load i32, i32* %add.ptr232, align 4, !dbg !11304
  %and233 = and i32 %176, 65280, !dbg !11304
  %shl234 = shl i32 %and233, 8, !dbg !11304
  %or235 = or i32 %shl231, %shl234, !dbg !11304
  %177 = load i8*, i8** %in, align 8, !dbg !11304
  %178 = bitcast i8* %177 to i32*, !dbg !11304
  %add.ptr236 = getelementptr i32, i32* %178, i64 2, !dbg !11304
  %179 = load i32, i32* %add.ptr236, align 4, !dbg !11304
  %and237 = and i32 %179, 16711680, !dbg !11304
  %shr238 = lshr i32 %and237, 8, !dbg !11304
  %or239 = or i32 %or235, %shr238, !dbg !11304
  %180 = load i8*, i8** %in, align 8, !dbg !11304
  %181 = bitcast i8* %180 to i32*, !dbg !11304
  %add.ptr240 = getelementptr i32, i32* %181, i64 2, !dbg !11304
  %182 = load i32, i32* %add.ptr240, align 4, !dbg !11304
  %and241 = and i32 %182, -16777216, !dbg !11304
  %shr242 = lshr i32 %and241, 24, !dbg !11304
  %or243 = or i32 %or239, %shr242, !dbg !11304
  br label %cond.end247, !dbg !11304

cond.false244:                                    ; preds = %cond.end219
  %183 = load i8*, i8** %in, align 8, !dbg !11304
  %184 = bitcast i8* %183 to i32*, !dbg !11304
  %add.ptr245 = getelementptr i32, i32* %184, i64 2, !dbg !11304
  %185 = load i32, i32* %add.ptr245, align 4, !dbg !11304
  %call246 = call i32 @__fswab32(i32 %185) #8, !dbg !11304
  br label %cond.end247, !dbg !11304

cond.end247:                                      ; preds = %cond.false244, %cond.true228
  %cond248 = phi i32 [ %or243, %cond.true228 ], [ %call246, %cond.false244 ], !dbg !11304
  %and249 = and i32 %cond248, -65536, !dbg !11304
  %186 = load i32, i32* %_v168, align 4, !dbg !11304
  %and250 = and i32 %186, 65535, !dbg !11304
  %shl251 = shl i32 %and250, 0, !dbg !11304
  %or252 = or i32 %and249, %shl251, !dbg !11304
  %and253 = and i32 %or252, 65280, !dbg !11304
  %shl254 = shl i32 %and253, 8, !dbg !11304
  %or255 = or i32 %shl226, %shl254, !dbg !11304
  %187 = load i8*, i8** %in, align 8, !dbg !11304
  %188 = bitcast i8* %187 to i32*, !dbg !11304
  %add.ptr256 = getelementptr i32, i32* %188, i64 2, !dbg !11304
  %189 = load i32, i32* %add.ptr256, align 4, !dbg !11304
  %190 = call i1 @llvm.is.constant.i32(i32 %189), !dbg !11304
  br i1 %190, label %cond.true257, label %cond.false273, !dbg !11304

cond.true257:                                     ; preds = %cond.end247
  %191 = load i8*, i8** %in, align 8, !dbg !11304
  %192 = bitcast i8* %191 to i32*, !dbg !11304
  %add.ptr258 = getelementptr i32, i32* %192, i64 2, !dbg !11304
  %193 = load i32, i32* %add.ptr258, align 4, !dbg !11304
  %and259 = and i32 %193, 255, !dbg !11304
  %shl260 = shl i32 %and259, 24, !dbg !11304
  %194 = load i8*, i8** %in, align 8, !dbg !11304
  %195 = bitcast i8* %194 to i32*, !dbg !11304
  %add.ptr261 = getelementptr i32, i32* %195, i64 2, !dbg !11304
  %196 = load i32, i32* %add.ptr261, align 4, !dbg !11304
  %and262 = and i32 %196, 65280, !dbg !11304
  %shl263 = shl i32 %and262, 8, !dbg !11304
  %or264 = or i32 %shl260, %shl263, !dbg !11304
  %197 = load i8*, i8** %in, align 8, !dbg !11304
  %198 = bitcast i8* %197 to i32*, !dbg !11304
  %add.ptr265 = getelementptr i32, i32* %198, i64 2, !dbg !11304
  %199 = load i32, i32* %add.ptr265, align 4, !dbg !11304
  %and266 = and i32 %199, 16711680, !dbg !11304
  %shr267 = lshr i32 %and266, 8, !dbg !11304
  %or268 = or i32 %or264, %shr267, !dbg !11304
  %200 = load i8*, i8** %in, align 8, !dbg !11304
  %201 = bitcast i8* %200 to i32*, !dbg !11304
  %add.ptr269 = getelementptr i32, i32* %201, i64 2, !dbg !11304
  %202 = load i32, i32* %add.ptr269, align 4, !dbg !11304
  %and270 = and i32 %202, -16777216, !dbg !11304
  %shr271 = lshr i32 %and270, 24, !dbg !11304
  %or272 = or i32 %or268, %shr271, !dbg !11304
  br label %cond.end276, !dbg !11304

cond.false273:                                    ; preds = %cond.end247
  %203 = load i8*, i8** %in, align 8, !dbg !11304
  %204 = bitcast i8* %203 to i32*, !dbg !11304
  %add.ptr274 = getelementptr i32, i32* %204, i64 2, !dbg !11304
  %205 = load i32, i32* %add.ptr274, align 4, !dbg !11304
  %call275 = call i32 @__fswab32(i32 %205) #8, !dbg !11304
  br label %cond.end276, !dbg !11304

cond.end276:                                      ; preds = %cond.false273, %cond.true257
  %cond277 = phi i32 [ %or272, %cond.true257 ], [ %call275, %cond.false273 ], !dbg !11304
  %and278 = and i32 %cond277, -65536, !dbg !11304
  %206 = load i32, i32* %_v168, align 4, !dbg !11304
  %and279 = and i32 %206, 65535, !dbg !11304
  %shl280 = shl i32 %and279, 0, !dbg !11304
  %or281 = or i32 %and278, %shl280, !dbg !11304
  %and282 = and i32 %or281, 16711680, !dbg !11304
  %shr283 = lshr i32 %and282, 8, !dbg !11304
  %or284 = or i32 %or255, %shr283, !dbg !11304
  %207 = load i8*, i8** %in, align 8, !dbg !11304
  %208 = bitcast i8* %207 to i32*, !dbg !11304
  %add.ptr285 = getelementptr i32, i32* %208, i64 2, !dbg !11304
  %209 = load i32, i32* %add.ptr285, align 4, !dbg !11304
  %210 = call i1 @llvm.is.constant.i32(i32 %209), !dbg !11304
  br i1 %210, label %cond.true286, label %cond.false302, !dbg !11304

cond.true286:                                     ; preds = %cond.end276
  %211 = load i8*, i8** %in, align 8, !dbg !11304
  %212 = bitcast i8* %211 to i32*, !dbg !11304
  %add.ptr287 = getelementptr i32, i32* %212, i64 2, !dbg !11304
  %213 = load i32, i32* %add.ptr287, align 4, !dbg !11304
  %and288 = and i32 %213, 255, !dbg !11304
  %shl289 = shl i32 %and288, 24, !dbg !11304
  %214 = load i8*, i8** %in, align 8, !dbg !11304
  %215 = bitcast i8* %214 to i32*, !dbg !11304
  %add.ptr290 = getelementptr i32, i32* %215, i64 2, !dbg !11304
  %216 = load i32, i32* %add.ptr290, align 4, !dbg !11304
  %and291 = and i32 %216, 65280, !dbg !11304
  %shl292 = shl i32 %and291, 8, !dbg !11304
  %or293 = or i32 %shl289, %shl292, !dbg !11304
  %217 = load i8*, i8** %in, align 8, !dbg !11304
  %218 = bitcast i8* %217 to i32*, !dbg !11304
  %add.ptr294 = getelementptr i32, i32* %218, i64 2, !dbg !11304
  %219 = load i32, i32* %add.ptr294, align 4, !dbg !11304
  %and295 = and i32 %219, 16711680, !dbg !11304
  %shr296 = lshr i32 %and295, 8, !dbg !11304
  %or297 = or i32 %or293, %shr296, !dbg !11304
  %220 = load i8*, i8** %in, align 8, !dbg !11304
  %221 = bitcast i8* %220 to i32*, !dbg !11304
  %add.ptr298 = getelementptr i32, i32* %221, i64 2, !dbg !11304
  %222 = load i32, i32* %add.ptr298, align 4, !dbg !11304
  %and299 = and i32 %222, -16777216, !dbg !11304
  %shr300 = lshr i32 %and299, 24, !dbg !11304
  %or301 = or i32 %or297, %shr300, !dbg !11304
  br label %cond.end305, !dbg !11304

cond.false302:                                    ; preds = %cond.end276
  %223 = load i8*, i8** %in, align 8, !dbg !11304
  %224 = bitcast i8* %223 to i32*, !dbg !11304
  %add.ptr303 = getelementptr i32, i32* %224, i64 2, !dbg !11304
  %225 = load i32, i32* %add.ptr303, align 4, !dbg !11304
  %call304 = call i32 @__fswab32(i32 %225) #8, !dbg !11304
  br label %cond.end305, !dbg !11304

cond.end305:                                      ; preds = %cond.false302, %cond.true286
  %cond306 = phi i32 [ %or301, %cond.true286 ], [ %call304, %cond.false302 ], !dbg !11304
  %and307 = and i32 %cond306, -65536, !dbg !11304
  %226 = load i32, i32* %_v168, align 4, !dbg !11304
  %and308 = and i32 %226, 65535, !dbg !11304
  %shl309 = shl i32 %and308, 0, !dbg !11304
  %or310 = or i32 %and307, %shl309, !dbg !11304
  %and311 = and i32 %or310, -16777216, !dbg !11304
  %shr312 = lshr i32 %and311, 24, !dbg !11304
  %or313 = or i32 %or284, %shr312, !dbg !11304
  br label %cond.end342, !dbg !11304

cond.false314:                                    ; preds = %cond.end192
  %227 = load i8*, i8** %in, align 8, !dbg !11304
  %228 = bitcast i8* %227 to i32*, !dbg !11304
  %add.ptr315 = getelementptr i32, i32* %228, i64 2, !dbg !11304
  %229 = load i32, i32* %add.ptr315, align 4, !dbg !11304
  %230 = call i1 @llvm.is.constant.i32(i32 %229), !dbg !11304
  br i1 %230, label %cond.true316, label %cond.false332, !dbg !11304

cond.true316:                                     ; preds = %cond.false314
  %231 = load i8*, i8** %in, align 8, !dbg !11304
  %232 = bitcast i8* %231 to i32*, !dbg !11304
  %add.ptr317 = getelementptr i32, i32* %232, i64 2, !dbg !11304
  %233 = load i32, i32* %add.ptr317, align 4, !dbg !11304
  %and318 = and i32 %233, 255, !dbg !11304
  %shl319 = shl i32 %and318, 24, !dbg !11304
  %234 = load i8*, i8** %in, align 8, !dbg !11304
  %235 = bitcast i8* %234 to i32*, !dbg !11304
  %add.ptr320 = getelementptr i32, i32* %235, i64 2, !dbg !11304
  %236 = load i32, i32* %add.ptr320, align 4, !dbg !11304
  %and321 = and i32 %236, 65280, !dbg !11304
  %shl322 = shl i32 %and321, 8, !dbg !11304
  %or323 = or i32 %shl319, %shl322, !dbg !11304
  %237 = load i8*, i8** %in, align 8, !dbg !11304
  %238 = bitcast i8* %237 to i32*, !dbg !11304
  %add.ptr324 = getelementptr i32, i32* %238, i64 2, !dbg !11304
  %239 = load i32, i32* %add.ptr324, align 4, !dbg !11304
  %and325 = and i32 %239, 16711680, !dbg !11304
  %shr326 = lshr i32 %and325, 8, !dbg !11304
  %or327 = or i32 %or323, %shr326, !dbg !11304
  %240 = load i8*, i8** %in, align 8, !dbg !11304
  %241 = bitcast i8* %240 to i32*, !dbg !11304
  %add.ptr328 = getelementptr i32, i32* %241, i64 2, !dbg !11304
  %242 = load i32, i32* %add.ptr328, align 4, !dbg !11304
  %and329 = and i32 %242, -16777216, !dbg !11304
  %shr330 = lshr i32 %and329, 24, !dbg !11304
  %or331 = or i32 %or327, %shr330, !dbg !11304
  br label %cond.end335, !dbg !11304

cond.false332:                                    ; preds = %cond.false314
  %243 = load i8*, i8** %in, align 8, !dbg !11304
  %244 = bitcast i8* %243 to i32*, !dbg !11304
  %add.ptr333 = getelementptr i32, i32* %244, i64 2, !dbg !11304
  %245 = load i32, i32* %add.ptr333, align 4, !dbg !11304
  %call334 = call i32 @__fswab32(i32 %245) #8, !dbg !11304
  br label %cond.end335, !dbg !11304

cond.end335:                                      ; preds = %cond.false332, %cond.true316
  %cond336 = phi i32 [ %or331, %cond.true316 ], [ %call334, %cond.false332 ], !dbg !11304
  %and337 = and i32 %cond336, -65536, !dbg !11304
  %246 = load i32, i32* %_v168, align 4, !dbg !11304
  %and338 = and i32 %246, 65535, !dbg !11304
  %shl339 = shl i32 %and338, 0, !dbg !11304
  %or340 = or i32 %and337, %shl339, !dbg !11304
  %call341 = call i32 @__fswab32(i32 %or340) #8, !dbg !11304
  br label %cond.end342, !dbg !11304

cond.end342:                                      ; preds = %cond.end335, %cond.end305
  %cond343 = phi i32 [ %or313, %cond.end305 ], [ %call341, %cond.end335 ], !dbg !11304
  %247 = load i8*, i8** %in, align 8, !dbg !11304
  %248 = bitcast i8* %247 to i32*, !dbg !11304
  %add.ptr344 = getelementptr i32, i32* %248, i64 2, !dbg !11304
  store i32 %cond343, i32* %add.ptr344, align 4, !dbg !11304
  br label %do.end345, !dbg !11304

do.end345:                                        ; preds = %cond.end342
  br label %do.body346, !dbg !11307

do.body346:                                       ; preds = %do.end345
  call void @llvm.dbg.declare(metadata i32* %_v347, metadata !11308, metadata !DIExpression()), !dbg !11310
  store i32 1, i32* %_v347, align 4, !dbg !11310
  br label %do.body348, !dbg !11310

do.body348:                                       ; preds = %do.body346
  br label %do.end349, !dbg !11311

do.end349:                                        ; preds = %do.body348
  %249 = load i8*, i8** %in, align 8, !dbg !11310
  %250 = bitcast i8* %249 to i32*, !dbg !11310
  %add.ptr350 = getelementptr i32, i32* %250, i64 2, !dbg !11310
  %251 = load i32, i32* %add.ptr350, align 4, !dbg !11310
  %252 = call i1 @llvm.is.constant.i32(i32 %251), !dbg !11310
  br i1 %252, label %cond.true351, label %cond.false367, !dbg !11310

cond.true351:                                     ; preds = %do.end349
  %253 = load i8*, i8** %in, align 8, !dbg !11310
  %254 = bitcast i8* %253 to i32*, !dbg !11310
  %add.ptr352 = getelementptr i32, i32* %254, i64 2, !dbg !11310
  %255 = load i32, i32* %add.ptr352, align 4, !dbg !11310
  %and353 = and i32 %255, 255, !dbg !11310
  %shl354 = shl i32 %and353, 24, !dbg !11310
  %256 = load i8*, i8** %in, align 8, !dbg !11310
  %257 = bitcast i8* %256 to i32*, !dbg !11310
  %add.ptr355 = getelementptr i32, i32* %257, i64 2, !dbg !11310
  %258 = load i32, i32* %add.ptr355, align 4, !dbg !11310
  %and356 = and i32 %258, 65280, !dbg !11310
  %shl357 = shl i32 %and356, 8, !dbg !11310
  %or358 = or i32 %shl354, %shl357, !dbg !11310
  %259 = load i8*, i8** %in, align 8, !dbg !11310
  %260 = bitcast i8* %259 to i32*, !dbg !11310
  %add.ptr359 = getelementptr i32, i32* %260, i64 2, !dbg !11310
  %261 = load i32, i32* %add.ptr359, align 4, !dbg !11310
  %and360 = and i32 %261, 16711680, !dbg !11310
  %shr361 = lshr i32 %and360, 8, !dbg !11310
  %or362 = or i32 %or358, %shr361, !dbg !11310
  %262 = load i8*, i8** %in, align 8, !dbg !11310
  %263 = bitcast i8* %262 to i32*, !dbg !11310
  %add.ptr363 = getelementptr i32, i32* %263, i64 2, !dbg !11310
  %264 = load i32, i32* %add.ptr363, align 4, !dbg !11310
  %and364 = and i32 %264, -16777216, !dbg !11310
  %shr365 = lshr i32 %and364, 24, !dbg !11310
  %or366 = or i32 %or362, %shr365, !dbg !11310
  br label %cond.end370, !dbg !11310

cond.false367:                                    ; preds = %do.end349
  %265 = load i8*, i8** %in, align 8, !dbg !11310
  %266 = bitcast i8* %265 to i32*, !dbg !11310
  %add.ptr368 = getelementptr i32, i32* %266, i64 2, !dbg !11310
  %267 = load i32, i32* %add.ptr368, align 4, !dbg !11310
  %call369 = call i32 @__fswab32(i32 %267) #8, !dbg !11310
  br label %cond.end370, !dbg !11310

cond.end370:                                      ; preds = %cond.false367, %cond.true351
  %cond371 = phi i32 [ %or366, %cond.true351 ], [ %call369, %cond.false367 ], !dbg !11310
  %and372 = and i32 %cond371, 2147483647, !dbg !11310
  %268 = load i32, i32* %_v347, align 4, !dbg !11310
  %and373 = and i32 %268, 1, !dbg !11310
  %shl374 = shl i32 %and373, 31, !dbg !11310
  %or375 = or i32 %and372, %shl374, !dbg !11310
  %269 = call i1 @llvm.is.constant.i32(i32 %or375), !dbg !11310
  br i1 %269, label %cond.true376, label %cond.false492, !dbg !11310

cond.true376:                                     ; preds = %cond.end370
  %270 = load i8*, i8** %in, align 8, !dbg !11310
  %271 = bitcast i8* %270 to i32*, !dbg !11310
  %add.ptr377 = getelementptr i32, i32* %271, i64 2, !dbg !11310
  %272 = load i32, i32* %add.ptr377, align 4, !dbg !11310
  %273 = call i1 @llvm.is.constant.i32(i32 %272), !dbg !11310
  br i1 %273, label %cond.true378, label %cond.false394, !dbg !11310

cond.true378:                                     ; preds = %cond.true376
  %274 = load i8*, i8** %in, align 8, !dbg !11310
  %275 = bitcast i8* %274 to i32*, !dbg !11310
  %add.ptr379 = getelementptr i32, i32* %275, i64 2, !dbg !11310
  %276 = load i32, i32* %add.ptr379, align 4, !dbg !11310
  %and380 = and i32 %276, 255, !dbg !11310
  %shl381 = shl i32 %and380, 24, !dbg !11310
  %277 = load i8*, i8** %in, align 8, !dbg !11310
  %278 = bitcast i8* %277 to i32*, !dbg !11310
  %add.ptr382 = getelementptr i32, i32* %278, i64 2, !dbg !11310
  %279 = load i32, i32* %add.ptr382, align 4, !dbg !11310
  %and383 = and i32 %279, 65280, !dbg !11310
  %shl384 = shl i32 %and383, 8, !dbg !11310
  %or385 = or i32 %shl381, %shl384, !dbg !11310
  %280 = load i8*, i8** %in, align 8, !dbg !11310
  %281 = bitcast i8* %280 to i32*, !dbg !11310
  %add.ptr386 = getelementptr i32, i32* %281, i64 2, !dbg !11310
  %282 = load i32, i32* %add.ptr386, align 4, !dbg !11310
  %and387 = and i32 %282, 16711680, !dbg !11310
  %shr388 = lshr i32 %and387, 8, !dbg !11310
  %or389 = or i32 %or385, %shr388, !dbg !11310
  %283 = load i8*, i8** %in, align 8, !dbg !11310
  %284 = bitcast i8* %283 to i32*, !dbg !11310
  %add.ptr390 = getelementptr i32, i32* %284, i64 2, !dbg !11310
  %285 = load i32, i32* %add.ptr390, align 4, !dbg !11310
  %and391 = and i32 %285, -16777216, !dbg !11310
  %shr392 = lshr i32 %and391, 24, !dbg !11310
  %or393 = or i32 %or389, %shr392, !dbg !11310
  br label %cond.end397, !dbg !11310

cond.false394:                                    ; preds = %cond.true376
  %286 = load i8*, i8** %in, align 8, !dbg !11310
  %287 = bitcast i8* %286 to i32*, !dbg !11310
  %add.ptr395 = getelementptr i32, i32* %287, i64 2, !dbg !11310
  %288 = load i32, i32* %add.ptr395, align 4, !dbg !11310
  %call396 = call i32 @__fswab32(i32 %288) #8, !dbg !11310
  br label %cond.end397, !dbg !11310

cond.end397:                                      ; preds = %cond.false394, %cond.true378
  %cond398 = phi i32 [ %or393, %cond.true378 ], [ %call396, %cond.false394 ], !dbg !11310
  %and399 = and i32 %cond398, 2147483647, !dbg !11310
  %289 = load i32, i32* %_v347, align 4, !dbg !11310
  %and400 = and i32 %289, 1, !dbg !11310
  %shl401 = shl i32 %and400, 31, !dbg !11310
  %or402 = or i32 %and399, %shl401, !dbg !11310
  %and403 = and i32 %or402, 255, !dbg !11310
  %shl404 = shl i32 %and403, 24, !dbg !11310
  %290 = load i8*, i8** %in, align 8, !dbg !11310
  %291 = bitcast i8* %290 to i32*, !dbg !11310
  %add.ptr405 = getelementptr i32, i32* %291, i64 2, !dbg !11310
  %292 = load i32, i32* %add.ptr405, align 4, !dbg !11310
  %293 = call i1 @llvm.is.constant.i32(i32 %292), !dbg !11310
  br i1 %293, label %cond.true406, label %cond.false422, !dbg !11310

cond.true406:                                     ; preds = %cond.end397
  %294 = load i8*, i8** %in, align 8, !dbg !11310
  %295 = bitcast i8* %294 to i32*, !dbg !11310
  %add.ptr407 = getelementptr i32, i32* %295, i64 2, !dbg !11310
  %296 = load i32, i32* %add.ptr407, align 4, !dbg !11310
  %and408 = and i32 %296, 255, !dbg !11310
  %shl409 = shl i32 %and408, 24, !dbg !11310
  %297 = load i8*, i8** %in, align 8, !dbg !11310
  %298 = bitcast i8* %297 to i32*, !dbg !11310
  %add.ptr410 = getelementptr i32, i32* %298, i64 2, !dbg !11310
  %299 = load i32, i32* %add.ptr410, align 4, !dbg !11310
  %and411 = and i32 %299, 65280, !dbg !11310
  %shl412 = shl i32 %and411, 8, !dbg !11310
  %or413 = or i32 %shl409, %shl412, !dbg !11310
  %300 = load i8*, i8** %in, align 8, !dbg !11310
  %301 = bitcast i8* %300 to i32*, !dbg !11310
  %add.ptr414 = getelementptr i32, i32* %301, i64 2, !dbg !11310
  %302 = load i32, i32* %add.ptr414, align 4, !dbg !11310
  %and415 = and i32 %302, 16711680, !dbg !11310
  %shr416 = lshr i32 %and415, 8, !dbg !11310
  %or417 = or i32 %or413, %shr416, !dbg !11310
  %303 = load i8*, i8** %in, align 8, !dbg !11310
  %304 = bitcast i8* %303 to i32*, !dbg !11310
  %add.ptr418 = getelementptr i32, i32* %304, i64 2, !dbg !11310
  %305 = load i32, i32* %add.ptr418, align 4, !dbg !11310
  %and419 = and i32 %305, -16777216, !dbg !11310
  %shr420 = lshr i32 %and419, 24, !dbg !11310
  %or421 = or i32 %or417, %shr420, !dbg !11310
  br label %cond.end425, !dbg !11310

cond.false422:                                    ; preds = %cond.end397
  %306 = load i8*, i8** %in, align 8, !dbg !11310
  %307 = bitcast i8* %306 to i32*, !dbg !11310
  %add.ptr423 = getelementptr i32, i32* %307, i64 2, !dbg !11310
  %308 = load i32, i32* %add.ptr423, align 4, !dbg !11310
  %call424 = call i32 @__fswab32(i32 %308) #8, !dbg !11310
  br label %cond.end425, !dbg !11310

cond.end425:                                      ; preds = %cond.false422, %cond.true406
  %cond426 = phi i32 [ %or421, %cond.true406 ], [ %call424, %cond.false422 ], !dbg !11310
  %and427 = and i32 %cond426, 2147483647, !dbg !11310
  %309 = load i32, i32* %_v347, align 4, !dbg !11310
  %and428 = and i32 %309, 1, !dbg !11310
  %shl429 = shl i32 %and428, 31, !dbg !11310
  %or430 = or i32 %and427, %shl429, !dbg !11310
  %and431 = and i32 %or430, 65280, !dbg !11310
  %shl432 = shl i32 %and431, 8, !dbg !11310
  %or433 = or i32 %shl404, %shl432, !dbg !11310
  %310 = load i8*, i8** %in, align 8, !dbg !11310
  %311 = bitcast i8* %310 to i32*, !dbg !11310
  %add.ptr434 = getelementptr i32, i32* %311, i64 2, !dbg !11310
  %312 = load i32, i32* %add.ptr434, align 4, !dbg !11310
  %313 = call i1 @llvm.is.constant.i32(i32 %312), !dbg !11310
  br i1 %313, label %cond.true435, label %cond.false451, !dbg !11310

cond.true435:                                     ; preds = %cond.end425
  %314 = load i8*, i8** %in, align 8, !dbg !11310
  %315 = bitcast i8* %314 to i32*, !dbg !11310
  %add.ptr436 = getelementptr i32, i32* %315, i64 2, !dbg !11310
  %316 = load i32, i32* %add.ptr436, align 4, !dbg !11310
  %and437 = and i32 %316, 255, !dbg !11310
  %shl438 = shl i32 %and437, 24, !dbg !11310
  %317 = load i8*, i8** %in, align 8, !dbg !11310
  %318 = bitcast i8* %317 to i32*, !dbg !11310
  %add.ptr439 = getelementptr i32, i32* %318, i64 2, !dbg !11310
  %319 = load i32, i32* %add.ptr439, align 4, !dbg !11310
  %and440 = and i32 %319, 65280, !dbg !11310
  %shl441 = shl i32 %and440, 8, !dbg !11310
  %or442 = or i32 %shl438, %shl441, !dbg !11310
  %320 = load i8*, i8** %in, align 8, !dbg !11310
  %321 = bitcast i8* %320 to i32*, !dbg !11310
  %add.ptr443 = getelementptr i32, i32* %321, i64 2, !dbg !11310
  %322 = load i32, i32* %add.ptr443, align 4, !dbg !11310
  %and444 = and i32 %322, 16711680, !dbg !11310
  %shr445 = lshr i32 %and444, 8, !dbg !11310
  %or446 = or i32 %or442, %shr445, !dbg !11310
  %323 = load i8*, i8** %in, align 8, !dbg !11310
  %324 = bitcast i8* %323 to i32*, !dbg !11310
  %add.ptr447 = getelementptr i32, i32* %324, i64 2, !dbg !11310
  %325 = load i32, i32* %add.ptr447, align 4, !dbg !11310
  %and448 = and i32 %325, -16777216, !dbg !11310
  %shr449 = lshr i32 %and448, 24, !dbg !11310
  %or450 = or i32 %or446, %shr449, !dbg !11310
  br label %cond.end454, !dbg !11310

cond.false451:                                    ; preds = %cond.end425
  %326 = load i8*, i8** %in, align 8, !dbg !11310
  %327 = bitcast i8* %326 to i32*, !dbg !11310
  %add.ptr452 = getelementptr i32, i32* %327, i64 2, !dbg !11310
  %328 = load i32, i32* %add.ptr452, align 4, !dbg !11310
  %call453 = call i32 @__fswab32(i32 %328) #8, !dbg !11310
  br label %cond.end454, !dbg !11310

cond.end454:                                      ; preds = %cond.false451, %cond.true435
  %cond455 = phi i32 [ %or450, %cond.true435 ], [ %call453, %cond.false451 ], !dbg !11310
  %and456 = and i32 %cond455, 2147483647, !dbg !11310
  %329 = load i32, i32* %_v347, align 4, !dbg !11310
  %and457 = and i32 %329, 1, !dbg !11310
  %shl458 = shl i32 %and457, 31, !dbg !11310
  %or459 = or i32 %and456, %shl458, !dbg !11310
  %and460 = and i32 %or459, 16711680, !dbg !11310
  %shr461 = lshr i32 %and460, 8, !dbg !11310
  %or462 = or i32 %or433, %shr461, !dbg !11310
  %330 = load i8*, i8** %in, align 8, !dbg !11310
  %331 = bitcast i8* %330 to i32*, !dbg !11310
  %add.ptr463 = getelementptr i32, i32* %331, i64 2, !dbg !11310
  %332 = load i32, i32* %add.ptr463, align 4, !dbg !11310
  %333 = call i1 @llvm.is.constant.i32(i32 %332), !dbg !11310
  br i1 %333, label %cond.true464, label %cond.false480, !dbg !11310

cond.true464:                                     ; preds = %cond.end454
  %334 = load i8*, i8** %in, align 8, !dbg !11310
  %335 = bitcast i8* %334 to i32*, !dbg !11310
  %add.ptr465 = getelementptr i32, i32* %335, i64 2, !dbg !11310
  %336 = load i32, i32* %add.ptr465, align 4, !dbg !11310
  %and466 = and i32 %336, 255, !dbg !11310
  %shl467 = shl i32 %and466, 24, !dbg !11310
  %337 = load i8*, i8** %in, align 8, !dbg !11310
  %338 = bitcast i8* %337 to i32*, !dbg !11310
  %add.ptr468 = getelementptr i32, i32* %338, i64 2, !dbg !11310
  %339 = load i32, i32* %add.ptr468, align 4, !dbg !11310
  %and469 = and i32 %339, 65280, !dbg !11310
  %shl470 = shl i32 %and469, 8, !dbg !11310
  %or471 = or i32 %shl467, %shl470, !dbg !11310
  %340 = load i8*, i8** %in, align 8, !dbg !11310
  %341 = bitcast i8* %340 to i32*, !dbg !11310
  %add.ptr472 = getelementptr i32, i32* %341, i64 2, !dbg !11310
  %342 = load i32, i32* %add.ptr472, align 4, !dbg !11310
  %and473 = and i32 %342, 16711680, !dbg !11310
  %shr474 = lshr i32 %and473, 8, !dbg !11310
  %or475 = or i32 %or471, %shr474, !dbg !11310
  %343 = load i8*, i8** %in, align 8, !dbg !11310
  %344 = bitcast i8* %343 to i32*, !dbg !11310
  %add.ptr476 = getelementptr i32, i32* %344, i64 2, !dbg !11310
  %345 = load i32, i32* %add.ptr476, align 4, !dbg !11310
  %and477 = and i32 %345, -16777216, !dbg !11310
  %shr478 = lshr i32 %and477, 24, !dbg !11310
  %or479 = or i32 %or475, %shr478, !dbg !11310
  br label %cond.end483, !dbg !11310

cond.false480:                                    ; preds = %cond.end454
  %346 = load i8*, i8** %in, align 8, !dbg !11310
  %347 = bitcast i8* %346 to i32*, !dbg !11310
  %add.ptr481 = getelementptr i32, i32* %347, i64 2, !dbg !11310
  %348 = load i32, i32* %add.ptr481, align 4, !dbg !11310
  %call482 = call i32 @__fswab32(i32 %348) #8, !dbg !11310
  br label %cond.end483, !dbg !11310

cond.end483:                                      ; preds = %cond.false480, %cond.true464
  %cond484 = phi i32 [ %or479, %cond.true464 ], [ %call482, %cond.false480 ], !dbg !11310
  %and485 = and i32 %cond484, 2147483647, !dbg !11310
  %349 = load i32, i32* %_v347, align 4, !dbg !11310
  %and486 = and i32 %349, 1, !dbg !11310
  %shl487 = shl i32 %and486, 31, !dbg !11310
  %or488 = or i32 %and485, %shl487, !dbg !11310
  %and489 = and i32 %or488, -16777216, !dbg !11310
  %shr490 = lshr i32 %and489, 24, !dbg !11310
  %or491 = or i32 %or462, %shr490, !dbg !11310
  br label %cond.end520, !dbg !11310

cond.false492:                                    ; preds = %cond.end370
  %350 = load i8*, i8** %in, align 8, !dbg !11310
  %351 = bitcast i8* %350 to i32*, !dbg !11310
  %add.ptr493 = getelementptr i32, i32* %351, i64 2, !dbg !11310
  %352 = load i32, i32* %add.ptr493, align 4, !dbg !11310
  %353 = call i1 @llvm.is.constant.i32(i32 %352), !dbg !11310
  br i1 %353, label %cond.true494, label %cond.false510, !dbg !11310

cond.true494:                                     ; preds = %cond.false492
  %354 = load i8*, i8** %in, align 8, !dbg !11310
  %355 = bitcast i8* %354 to i32*, !dbg !11310
  %add.ptr495 = getelementptr i32, i32* %355, i64 2, !dbg !11310
  %356 = load i32, i32* %add.ptr495, align 4, !dbg !11310
  %and496 = and i32 %356, 255, !dbg !11310
  %shl497 = shl i32 %and496, 24, !dbg !11310
  %357 = load i8*, i8** %in, align 8, !dbg !11310
  %358 = bitcast i8* %357 to i32*, !dbg !11310
  %add.ptr498 = getelementptr i32, i32* %358, i64 2, !dbg !11310
  %359 = load i32, i32* %add.ptr498, align 4, !dbg !11310
  %and499 = and i32 %359, 65280, !dbg !11310
  %shl500 = shl i32 %and499, 8, !dbg !11310
  %or501 = or i32 %shl497, %shl500, !dbg !11310
  %360 = load i8*, i8** %in, align 8, !dbg !11310
  %361 = bitcast i8* %360 to i32*, !dbg !11310
  %add.ptr502 = getelementptr i32, i32* %361, i64 2, !dbg !11310
  %362 = load i32, i32* %add.ptr502, align 4, !dbg !11310
  %and503 = and i32 %362, 16711680, !dbg !11310
  %shr504 = lshr i32 %and503, 8, !dbg !11310
  %or505 = or i32 %or501, %shr504, !dbg !11310
  %363 = load i8*, i8** %in, align 8, !dbg !11310
  %364 = bitcast i8* %363 to i32*, !dbg !11310
  %add.ptr506 = getelementptr i32, i32* %364, i64 2, !dbg !11310
  %365 = load i32, i32* %add.ptr506, align 4, !dbg !11310
  %and507 = and i32 %365, -16777216, !dbg !11310
  %shr508 = lshr i32 %and507, 24, !dbg !11310
  %or509 = or i32 %or505, %shr508, !dbg !11310
  br label %cond.end513, !dbg !11310

cond.false510:                                    ; preds = %cond.false492
  %366 = load i8*, i8** %in, align 8, !dbg !11310
  %367 = bitcast i8* %366 to i32*, !dbg !11310
  %add.ptr511 = getelementptr i32, i32* %367, i64 2, !dbg !11310
  %368 = load i32, i32* %add.ptr511, align 4, !dbg !11310
  %call512 = call i32 @__fswab32(i32 %368) #8, !dbg !11310
  br label %cond.end513, !dbg !11310

cond.end513:                                      ; preds = %cond.false510, %cond.true494
  %cond514 = phi i32 [ %or509, %cond.true494 ], [ %call512, %cond.false510 ], !dbg !11310
  %and515 = and i32 %cond514, 2147483647, !dbg !11310
  %369 = load i32, i32* %_v347, align 4, !dbg !11310
  %and516 = and i32 %369, 1, !dbg !11310
  %shl517 = shl i32 %and516, 31, !dbg !11310
  %or518 = or i32 %and515, %shl517, !dbg !11310
  %call519 = call i32 @__fswab32(i32 %or518) #8, !dbg !11310
  br label %cond.end520, !dbg !11310

cond.end520:                                      ; preds = %cond.end513, %cond.end483
  %cond521 = phi i32 [ %or491, %cond.end483 ], [ %call519, %cond.end513 ], !dbg !11310
  %370 = load i8*, i8** %in, align 8, !dbg !11310
  %371 = bitcast i8* %370 to i32*, !dbg !11310
  %add.ptr522 = getelementptr i32, i32* %371, i64 2, !dbg !11310
  store i32 %cond521, i32* %add.ptr522, align 4, !dbg !11310
  br label %do.end523, !dbg !11310

do.end523:                                        ; preds = %cond.end520
  %372 = load i8*, i8** %in, align 8, !dbg !11313
  %add.ptr524 = getelementptr i8, i8* %372, i64 256, !dbg !11313
  store i8* %add.ptr524, i8** %nic_vport_ctx, align 8, !dbg !11314
  %373 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !11315
  %add.ptr525 = getelementptr i8, i8* %373, i64 244, !dbg !11315
  store i8* %add.ptr525, i8** %perm_mac, align 8, !dbg !11316
  %374 = load i8*, i8** %perm_mac, align 8, !dbg !11317
  %arrayidx = getelementptr i8, i8* %374, i64 2, !dbg !11317
  %375 = load i8*, i8** %addr.addr, align 8, !dbg !11318
  call void @ether_addr_copy(i8* %arrayidx, i8* %375) #9, !dbg !11319
  br label %do.body526, !dbg !11320

do.body526:                                       ; preds = %do.end523
  call void @llvm.dbg.declare(metadata i32* %_v527, metadata !11321, metadata !DIExpression()), !dbg !11323
  store i32 1877, i32* %_v527, align 4, !dbg !11323
  br label %do.body528, !dbg !11323

do.body528:                                       ; preds = %do.body526
  br label %do.end529, !dbg !11324

do.end529:                                        ; preds = %do.body528
  %376 = load i8*, i8** %in, align 8, !dbg !11323
  %377 = bitcast i8* %376 to i32*, !dbg !11323
  %add.ptr530 = getelementptr i32, i32* %377, i64 0, !dbg !11323
  %378 = load i32, i32* %add.ptr530, align 4, !dbg !11323
  %379 = call i1 @llvm.is.constant.i32(i32 %378), !dbg !11323
  br i1 %379, label %cond.true531, label %cond.false547, !dbg !11323

cond.true531:                                     ; preds = %do.end529
  %380 = load i8*, i8** %in, align 8, !dbg !11323
  %381 = bitcast i8* %380 to i32*, !dbg !11323
  %add.ptr532 = getelementptr i32, i32* %381, i64 0, !dbg !11323
  %382 = load i32, i32* %add.ptr532, align 4, !dbg !11323
  %and533 = and i32 %382, 255, !dbg !11323
  %shl534 = shl i32 %and533, 24, !dbg !11323
  %383 = load i8*, i8** %in, align 8, !dbg !11323
  %384 = bitcast i8* %383 to i32*, !dbg !11323
  %add.ptr535 = getelementptr i32, i32* %384, i64 0, !dbg !11323
  %385 = load i32, i32* %add.ptr535, align 4, !dbg !11323
  %and536 = and i32 %385, 65280, !dbg !11323
  %shl537 = shl i32 %and536, 8, !dbg !11323
  %or538 = or i32 %shl534, %shl537, !dbg !11323
  %386 = load i8*, i8** %in, align 8, !dbg !11323
  %387 = bitcast i8* %386 to i32*, !dbg !11323
  %add.ptr539 = getelementptr i32, i32* %387, i64 0, !dbg !11323
  %388 = load i32, i32* %add.ptr539, align 4, !dbg !11323
  %and540 = and i32 %388, 16711680, !dbg !11323
  %shr541 = lshr i32 %and540, 8, !dbg !11323
  %or542 = or i32 %or538, %shr541, !dbg !11323
  %389 = load i8*, i8** %in, align 8, !dbg !11323
  %390 = bitcast i8* %389 to i32*, !dbg !11323
  %add.ptr543 = getelementptr i32, i32* %390, i64 0, !dbg !11323
  %391 = load i32, i32* %add.ptr543, align 4, !dbg !11323
  %and544 = and i32 %391, -16777216, !dbg !11323
  %shr545 = lshr i32 %and544, 24, !dbg !11323
  %or546 = or i32 %or542, %shr545, !dbg !11323
  br label %cond.end550, !dbg !11323

cond.false547:                                    ; preds = %do.end529
  %392 = load i8*, i8** %in, align 8, !dbg !11323
  %393 = bitcast i8* %392 to i32*, !dbg !11323
  %add.ptr548 = getelementptr i32, i32* %393, i64 0, !dbg !11323
  %394 = load i32, i32* %add.ptr548, align 4, !dbg !11323
  %call549 = call i32 @__fswab32(i32 %394) #8, !dbg !11323
  br label %cond.end550, !dbg !11323

cond.end550:                                      ; preds = %cond.false547, %cond.true531
  %cond551 = phi i32 [ %or546, %cond.true531 ], [ %call549, %cond.false547 ], !dbg !11323
  %and552 = and i32 %cond551, 65535, !dbg !11323
  %395 = load i32, i32* %_v527, align 4, !dbg !11323
  %and553 = and i32 %395, 65535, !dbg !11323
  %shl554 = shl i32 %and553, 16, !dbg !11323
  %or555 = or i32 %and552, %shl554, !dbg !11323
  %396 = call i1 @llvm.is.constant.i32(i32 %or555), !dbg !11323
  br i1 %396, label %cond.true556, label %cond.false672, !dbg !11323

cond.true556:                                     ; preds = %cond.end550
  %397 = load i8*, i8** %in, align 8, !dbg !11323
  %398 = bitcast i8* %397 to i32*, !dbg !11323
  %add.ptr557 = getelementptr i32, i32* %398, i64 0, !dbg !11323
  %399 = load i32, i32* %add.ptr557, align 4, !dbg !11323
  %400 = call i1 @llvm.is.constant.i32(i32 %399), !dbg !11323
  br i1 %400, label %cond.true558, label %cond.false574, !dbg !11323

cond.true558:                                     ; preds = %cond.true556
  %401 = load i8*, i8** %in, align 8, !dbg !11323
  %402 = bitcast i8* %401 to i32*, !dbg !11323
  %add.ptr559 = getelementptr i32, i32* %402, i64 0, !dbg !11323
  %403 = load i32, i32* %add.ptr559, align 4, !dbg !11323
  %and560 = and i32 %403, 255, !dbg !11323
  %shl561 = shl i32 %and560, 24, !dbg !11323
  %404 = load i8*, i8** %in, align 8, !dbg !11323
  %405 = bitcast i8* %404 to i32*, !dbg !11323
  %add.ptr562 = getelementptr i32, i32* %405, i64 0, !dbg !11323
  %406 = load i32, i32* %add.ptr562, align 4, !dbg !11323
  %and563 = and i32 %406, 65280, !dbg !11323
  %shl564 = shl i32 %and563, 8, !dbg !11323
  %or565 = or i32 %shl561, %shl564, !dbg !11323
  %407 = load i8*, i8** %in, align 8, !dbg !11323
  %408 = bitcast i8* %407 to i32*, !dbg !11323
  %add.ptr566 = getelementptr i32, i32* %408, i64 0, !dbg !11323
  %409 = load i32, i32* %add.ptr566, align 4, !dbg !11323
  %and567 = and i32 %409, 16711680, !dbg !11323
  %shr568 = lshr i32 %and567, 8, !dbg !11323
  %or569 = or i32 %or565, %shr568, !dbg !11323
  %410 = load i8*, i8** %in, align 8, !dbg !11323
  %411 = bitcast i8* %410 to i32*, !dbg !11323
  %add.ptr570 = getelementptr i32, i32* %411, i64 0, !dbg !11323
  %412 = load i32, i32* %add.ptr570, align 4, !dbg !11323
  %and571 = and i32 %412, -16777216, !dbg !11323
  %shr572 = lshr i32 %and571, 24, !dbg !11323
  %or573 = or i32 %or569, %shr572, !dbg !11323
  br label %cond.end577, !dbg !11323

cond.false574:                                    ; preds = %cond.true556
  %413 = load i8*, i8** %in, align 8, !dbg !11323
  %414 = bitcast i8* %413 to i32*, !dbg !11323
  %add.ptr575 = getelementptr i32, i32* %414, i64 0, !dbg !11323
  %415 = load i32, i32* %add.ptr575, align 4, !dbg !11323
  %call576 = call i32 @__fswab32(i32 %415) #8, !dbg !11323
  br label %cond.end577, !dbg !11323

cond.end577:                                      ; preds = %cond.false574, %cond.true558
  %cond578 = phi i32 [ %or573, %cond.true558 ], [ %call576, %cond.false574 ], !dbg !11323
  %and579 = and i32 %cond578, 65535, !dbg !11323
  %416 = load i32, i32* %_v527, align 4, !dbg !11323
  %and580 = and i32 %416, 65535, !dbg !11323
  %shl581 = shl i32 %and580, 16, !dbg !11323
  %or582 = or i32 %and579, %shl581, !dbg !11323
  %and583 = and i32 %or582, 255, !dbg !11323
  %shl584 = shl i32 %and583, 24, !dbg !11323
  %417 = load i8*, i8** %in, align 8, !dbg !11323
  %418 = bitcast i8* %417 to i32*, !dbg !11323
  %add.ptr585 = getelementptr i32, i32* %418, i64 0, !dbg !11323
  %419 = load i32, i32* %add.ptr585, align 4, !dbg !11323
  %420 = call i1 @llvm.is.constant.i32(i32 %419), !dbg !11323
  br i1 %420, label %cond.true586, label %cond.false602, !dbg !11323

cond.true586:                                     ; preds = %cond.end577
  %421 = load i8*, i8** %in, align 8, !dbg !11323
  %422 = bitcast i8* %421 to i32*, !dbg !11323
  %add.ptr587 = getelementptr i32, i32* %422, i64 0, !dbg !11323
  %423 = load i32, i32* %add.ptr587, align 4, !dbg !11323
  %and588 = and i32 %423, 255, !dbg !11323
  %shl589 = shl i32 %and588, 24, !dbg !11323
  %424 = load i8*, i8** %in, align 8, !dbg !11323
  %425 = bitcast i8* %424 to i32*, !dbg !11323
  %add.ptr590 = getelementptr i32, i32* %425, i64 0, !dbg !11323
  %426 = load i32, i32* %add.ptr590, align 4, !dbg !11323
  %and591 = and i32 %426, 65280, !dbg !11323
  %shl592 = shl i32 %and591, 8, !dbg !11323
  %or593 = or i32 %shl589, %shl592, !dbg !11323
  %427 = load i8*, i8** %in, align 8, !dbg !11323
  %428 = bitcast i8* %427 to i32*, !dbg !11323
  %add.ptr594 = getelementptr i32, i32* %428, i64 0, !dbg !11323
  %429 = load i32, i32* %add.ptr594, align 4, !dbg !11323
  %and595 = and i32 %429, 16711680, !dbg !11323
  %shr596 = lshr i32 %and595, 8, !dbg !11323
  %or597 = or i32 %or593, %shr596, !dbg !11323
  %430 = load i8*, i8** %in, align 8, !dbg !11323
  %431 = bitcast i8* %430 to i32*, !dbg !11323
  %add.ptr598 = getelementptr i32, i32* %431, i64 0, !dbg !11323
  %432 = load i32, i32* %add.ptr598, align 4, !dbg !11323
  %and599 = and i32 %432, -16777216, !dbg !11323
  %shr600 = lshr i32 %and599, 24, !dbg !11323
  %or601 = or i32 %or597, %shr600, !dbg !11323
  br label %cond.end605, !dbg !11323

cond.false602:                                    ; preds = %cond.end577
  %433 = load i8*, i8** %in, align 8, !dbg !11323
  %434 = bitcast i8* %433 to i32*, !dbg !11323
  %add.ptr603 = getelementptr i32, i32* %434, i64 0, !dbg !11323
  %435 = load i32, i32* %add.ptr603, align 4, !dbg !11323
  %call604 = call i32 @__fswab32(i32 %435) #8, !dbg !11323
  br label %cond.end605, !dbg !11323

cond.end605:                                      ; preds = %cond.false602, %cond.true586
  %cond606 = phi i32 [ %or601, %cond.true586 ], [ %call604, %cond.false602 ], !dbg !11323
  %and607 = and i32 %cond606, 65535, !dbg !11323
  %436 = load i32, i32* %_v527, align 4, !dbg !11323
  %and608 = and i32 %436, 65535, !dbg !11323
  %shl609 = shl i32 %and608, 16, !dbg !11323
  %or610 = or i32 %and607, %shl609, !dbg !11323
  %and611 = and i32 %or610, 65280, !dbg !11323
  %shl612 = shl i32 %and611, 8, !dbg !11323
  %or613 = or i32 %shl584, %shl612, !dbg !11323
  %437 = load i8*, i8** %in, align 8, !dbg !11323
  %438 = bitcast i8* %437 to i32*, !dbg !11323
  %add.ptr614 = getelementptr i32, i32* %438, i64 0, !dbg !11323
  %439 = load i32, i32* %add.ptr614, align 4, !dbg !11323
  %440 = call i1 @llvm.is.constant.i32(i32 %439), !dbg !11323
  br i1 %440, label %cond.true615, label %cond.false631, !dbg !11323

cond.true615:                                     ; preds = %cond.end605
  %441 = load i8*, i8** %in, align 8, !dbg !11323
  %442 = bitcast i8* %441 to i32*, !dbg !11323
  %add.ptr616 = getelementptr i32, i32* %442, i64 0, !dbg !11323
  %443 = load i32, i32* %add.ptr616, align 4, !dbg !11323
  %and617 = and i32 %443, 255, !dbg !11323
  %shl618 = shl i32 %and617, 24, !dbg !11323
  %444 = load i8*, i8** %in, align 8, !dbg !11323
  %445 = bitcast i8* %444 to i32*, !dbg !11323
  %add.ptr619 = getelementptr i32, i32* %445, i64 0, !dbg !11323
  %446 = load i32, i32* %add.ptr619, align 4, !dbg !11323
  %and620 = and i32 %446, 65280, !dbg !11323
  %shl621 = shl i32 %and620, 8, !dbg !11323
  %or622 = or i32 %shl618, %shl621, !dbg !11323
  %447 = load i8*, i8** %in, align 8, !dbg !11323
  %448 = bitcast i8* %447 to i32*, !dbg !11323
  %add.ptr623 = getelementptr i32, i32* %448, i64 0, !dbg !11323
  %449 = load i32, i32* %add.ptr623, align 4, !dbg !11323
  %and624 = and i32 %449, 16711680, !dbg !11323
  %shr625 = lshr i32 %and624, 8, !dbg !11323
  %or626 = or i32 %or622, %shr625, !dbg !11323
  %450 = load i8*, i8** %in, align 8, !dbg !11323
  %451 = bitcast i8* %450 to i32*, !dbg !11323
  %add.ptr627 = getelementptr i32, i32* %451, i64 0, !dbg !11323
  %452 = load i32, i32* %add.ptr627, align 4, !dbg !11323
  %and628 = and i32 %452, -16777216, !dbg !11323
  %shr629 = lshr i32 %and628, 24, !dbg !11323
  %or630 = or i32 %or626, %shr629, !dbg !11323
  br label %cond.end634, !dbg !11323

cond.false631:                                    ; preds = %cond.end605
  %453 = load i8*, i8** %in, align 8, !dbg !11323
  %454 = bitcast i8* %453 to i32*, !dbg !11323
  %add.ptr632 = getelementptr i32, i32* %454, i64 0, !dbg !11323
  %455 = load i32, i32* %add.ptr632, align 4, !dbg !11323
  %call633 = call i32 @__fswab32(i32 %455) #8, !dbg !11323
  br label %cond.end634, !dbg !11323

cond.end634:                                      ; preds = %cond.false631, %cond.true615
  %cond635 = phi i32 [ %or630, %cond.true615 ], [ %call633, %cond.false631 ], !dbg !11323
  %and636 = and i32 %cond635, 65535, !dbg !11323
  %456 = load i32, i32* %_v527, align 4, !dbg !11323
  %and637 = and i32 %456, 65535, !dbg !11323
  %shl638 = shl i32 %and637, 16, !dbg !11323
  %or639 = or i32 %and636, %shl638, !dbg !11323
  %and640 = and i32 %or639, 16711680, !dbg !11323
  %shr641 = lshr i32 %and640, 8, !dbg !11323
  %or642 = or i32 %or613, %shr641, !dbg !11323
  %457 = load i8*, i8** %in, align 8, !dbg !11323
  %458 = bitcast i8* %457 to i32*, !dbg !11323
  %add.ptr643 = getelementptr i32, i32* %458, i64 0, !dbg !11323
  %459 = load i32, i32* %add.ptr643, align 4, !dbg !11323
  %460 = call i1 @llvm.is.constant.i32(i32 %459), !dbg !11323
  br i1 %460, label %cond.true644, label %cond.false660, !dbg !11323

cond.true644:                                     ; preds = %cond.end634
  %461 = load i8*, i8** %in, align 8, !dbg !11323
  %462 = bitcast i8* %461 to i32*, !dbg !11323
  %add.ptr645 = getelementptr i32, i32* %462, i64 0, !dbg !11323
  %463 = load i32, i32* %add.ptr645, align 4, !dbg !11323
  %and646 = and i32 %463, 255, !dbg !11323
  %shl647 = shl i32 %and646, 24, !dbg !11323
  %464 = load i8*, i8** %in, align 8, !dbg !11323
  %465 = bitcast i8* %464 to i32*, !dbg !11323
  %add.ptr648 = getelementptr i32, i32* %465, i64 0, !dbg !11323
  %466 = load i32, i32* %add.ptr648, align 4, !dbg !11323
  %and649 = and i32 %466, 65280, !dbg !11323
  %shl650 = shl i32 %and649, 8, !dbg !11323
  %or651 = or i32 %shl647, %shl650, !dbg !11323
  %467 = load i8*, i8** %in, align 8, !dbg !11323
  %468 = bitcast i8* %467 to i32*, !dbg !11323
  %add.ptr652 = getelementptr i32, i32* %468, i64 0, !dbg !11323
  %469 = load i32, i32* %add.ptr652, align 4, !dbg !11323
  %and653 = and i32 %469, 16711680, !dbg !11323
  %shr654 = lshr i32 %and653, 8, !dbg !11323
  %or655 = or i32 %or651, %shr654, !dbg !11323
  %470 = load i8*, i8** %in, align 8, !dbg !11323
  %471 = bitcast i8* %470 to i32*, !dbg !11323
  %add.ptr656 = getelementptr i32, i32* %471, i64 0, !dbg !11323
  %472 = load i32, i32* %add.ptr656, align 4, !dbg !11323
  %and657 = and i32 %472, -16777216, !dbg !11323
  %shr658 = lshr i32 %and657, 24, !dbg !11323
  %or659 = or i32 %or655, %shr658, !dbg !11323
  br label %cond.end663, !dbg !11323

cond.false660:                                    ; preds = %cond.end634
  %473 = load i8*, i8** %in, align 8, !dbg !11323
  %474 = bitcast i8* %473 to i32*, !dbg !11323
  %add.ptr661 = getelementptr i32, i32* %474, i64 0, !dbg !11323
  %475 = load i32, i32* %add.ptr661, align 4, !dbg !11323
  %call662 = call i32 @__fswab32(i32 %475) #8, !dbg !11323
  br label %cond.end663, !dbg !11323

cond.end663:                                      ; preds = %cond.false660, %cond.true644
  %cond664 = phi i32 [ %or659, %cond.true644 ], [ %call662, %cond.false660 ], !dbg !11323
  %and665 = and i32 %cond664, 65535, !dbg !11323
  %476 = load i32, i32* %_v527, align 4, !dbg !11323
  %and666 = and i32 %476, 65535, !dbg !11323
  %shl667 = shl i32 %and666, 16, !dbg !11323
  %or668 = or i32 %and665, %shl667, !dbg !11323
  %and669 = and i32 %or668, -16777216, !dbg !11323
  %shr670 = lshr i32 %and669, 24, !dbg !11323
  %or671 = or i32 %or642, %shr670, !dbg !11323
  br label %cond.end700, !dbg !11323

cond.false672:                                    ; preds = %cond.end550
  %477 = load i8*, i8** %in, align 8, !dbg !11323
  %478 = bitcast i8* %477 to i32*, !dbg !11323
  %add.ptr673 = getelementptr i32, i32* %478, i64 0, !dbg !11323
  %479 = load i32, i32* %add.ptr673, align 4, !dbg !11323
  %480 = call i1 @llvm.is.constant.i32(i32 %479), !dbg !11323
  br i1 %480, label %cond.true674, label %cond.false690, !dbg !11323

cond.true674:                                     ; preds = %cond.false672
  %481 = load i8*, i8** %in, align 8, !dbg !11323
  %482 = bitcast i8* %481 to i32*, !dbg !11323
  %add.ptr675 = getelementptr i32, i32* %482, i64 0, !dbg !11323
  %483 = load i32, i32* %add.ptr675, align 4, !dbg !11323
  %and676 = and i32 %483, 255, !dbg !11323
  %shl677 = shl i32 %and676, 24, !dbg !11323
  %484 = load i8*, i8** %in, align 8, !dbg !11323
  %485 = bitcast i8* %484 to i32*, !dbg !11323
  %add.ptr678 = getelementptr i32, i32* %485, i64 0, !dbg !11323
  %486 = load i32, i32* %add.ptr678, align 4, !dbg !11323
  %and679 = and i32 %486, 65280, !dbg !11323
  %shl680 = shl i32 %and679, 8, !dbg !11323
  %or681 = or i32 %shl677, %shl680, !dbg !11323
  %487 = load i8*, i8** %in, align 8, !dbg !11323
  %488 = bitcast i8* %487 to i32*, !dbg !11323
  %add.ptr682 = getelementptr i32, i32* %488, i64 0, !dbg !11323
  %489 = load i32, i32* %add.ptr682, align 4, !dbg !11323
  %and683 = and i32 %489, 16711680, !dbg !11323
  %shr684 = lshr i32 %and683, 8, !dbg !11323
  %or685 = or i32 %or681, %shr684, !dbg !11323
  %490 = load i8*, i8** %in, align 8, !dbg !11323
  %491 = bitcast i8* %490 to i32*, !dbg !11323
  %add.ptr686 = getelementptr i32, i32* %491, i64 0, !dbg !11323
  %492 = load i32, i32* %add.ptr686, align 4, !dbg !11323
  %and687 = and i32 %492, -16777216, !dbg !11323
  %shr688 = lshr i32 %and687, 24, !dbg !11323
  %or689 = or i32 %or685, %shr688, !dbg !11323
  br label %cond.end693, !dbg !11323

cond.false690:                                    ; preds = %cond.false672
  %493 = load i8*, i8** %in, align 8, !dbg !11323
  %494 = bitcast i8* %493 to i32*, !dbg !11323
  %add.ptr691 = getelementptr i32, i32* %494, i64 0, !dbg !11323
  %495 = load i32, i32* %add.ptr691, align 4, !dbg !11323
  %call692 = call i32 @__fswab32(i32 %495) #8, !dbg !11323
  br label %cond.end693, !dbg !11323

cond.end693:                                      ; preds = %cond.false690, %cond.true674
  %cond694 = phi i32 [ %or689, %cond.true674 ], [ %call692, %cond.false690 ], !dbg !11323
  %and695 = and i32 %cond694, 65535, !dbg !11323
  %496 = load i32, i32* %_v527, align 4, !dbg !11323
  %and696 = and i32 %496, 65535, !dbg !11323
  %shl697 = shl i32 %and696, 16, !dbg !11323
  %or698 = or i32 %and695, %shl697, !dbg !11323
  %call699 = call i32 @__fswab32(i32 %or698) #8, !dbg !11323
  br label %cond.end700, !dbg !11323

cond.end700:                                      ; preds = %cond.end693, %cond.end663
  %cond701 = phi i32 [ %or671, %cond.end663 ], [ %call699, %cond.end693 ], !dbg !11323
  %497 = load i8*, i8** %in, align 8, !dbg !11323
  %498 = bitcast i8* %497 to i32*, !dbg !11323
  %add.ptr702 = getelementptr i32, i32* %498, i64 0, !dbg !11323
  store i32 %cond701, i32* %add.ptr702, align 4, !dbg !11323
  br label %do.end703, !dbg !11323

do.end703:                                        ; preds = %cond.end700
  call void @llvm.dbg.declare(metadata [4 x i32]* %_out, metadata !11326, metadata !DIExpression()), !dbg !11328
  %499 = bitcast [4 x i32]* %_out to i8*, !dbg !11328
  call void @llvm.memset.p0i8.i64(i8* align 16 %499, i8 0, i64 16, i1 false), !dbg !11328
  %500 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %mdev.addr, align 8, !dbg !11329
  %501 = load i8*, i8** %in, align 8, !dbg !11329
  %arraydecay = getelementptr inbounds [4 x i32], [4 x i32]* %_out, i64 0, i64 0, !dbg !11329
  %502 = bitcast i32* %arraydecay to i8*, !dbg !11329
  %call705 = call i32 @mlx5_cmd_exec(%struct.mlx5_core_dev* %500, i8* %501, i32 512, i8* %502, i32 16) #9, !dbg !11329
  store i32 %call705, i32* %tmp704, align 4, !dbg !11328
  %503 = load i32, i32* %tmp704, align 4, !dbg !11329
  store i32 %503, i32* %tmp, align 4, !dbg !11328
  %504 = load i32, i32* %tmp, align 4, !dbg !11328
  store i32 %504, i32* %err, align 4, !dbg !11331
  %505 = load i8*, i8** %in, align 8, !dbg !11332
  call void @kvfree(i8* %505) #9, !dbg !11333
  %506 = load i32, i32* %err, align 4, !dbg !11334
  store i32 %506, i32* %retval, align 4, !dbg !11335
  br label %return, !dbg !11335

return:                                           ; preds = %do.end703, %if.then
  %507 = load i32, i32* %retval, align 4, !dbg !11336
  ret i32 %507, !dbg !11336
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kvzalloc(i64 %size, i32 %flags) #0 !dbg !11337 {
entry:
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !11340, metadata !DIExpression()), !dbg !11341
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !11342, metadata !DIExpression()), !dbg !11343
  %0 = load i64, i64* %size.addr, align 8, !dbg !11344
  %1 = load i32, i32* %flags.addr, align 4, !dbg !11345
  %or = or i32 %1, 256, !dbg !11346
  %call = call i8* @kvmalloc(i64 %0, i32 %or) #9, !dbg !11347
  ret i8* %call, !dbg !11348
}

; Function Attrs: noredzone
declare dso_local void @kvfree(i8*) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @mlx5_query_nic_vport_mtu(%struct.mlx5_core_dev* %mdev, i16* %mtu) #0 !dbg !11349 {
entry:
  %retval = alloca i32, align 4
  %mdev.addr = alloca %struct.mlx5_core_dev*, align 8
  %mtu.addr = alloca i16*, align 8
  %outlen = alloca i32, align 4
  %out = alloca i32*, align 8
  %err = alloca i32, align 4
  store %struct.mlx5_core_dev* %mdev, %struct.mlx5_core_dev** %mdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_core_dev** %mdev.addr, metadata !11352, metadata !DIExpression()), !dbg !11353
  store i16* %mtu, i16** %mtu.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %mtu.addr, metadata !11354, metadata !DIExpression()), !dbg !11355
  call void @llvm.dbg.declare(metadata i32* %outlen, metadata !11356, metadata !DIExpression()), !dbg !11357
  store i32 272, i32* %outlen, align 4, !dbg !11357
  call void @llvm.dbg.declare(metadata i32** %out, metadata !11358, metadata !DIExpression()), !dbg !11359
  call void @llvm.dbg.declare(metadata i32* %err, metadata !11360, metadata !DIExpression()), !dbg !11361
  %0 = load i32, i32* %outlen, align 4, !dbg !11362
  %conv = sext i32 %0 to i64, !dbg !11362
  %call = call i8* @kvzalloc(i64 %conv, i32 3264) #9, !dbg !11363
  %1 = bitcast i8* %call to i32*, !dbg !11363
  store i32* %1, i32** %out, align 8, !dbg !11364
  %2 = load i32*, i32** %out, align 8, !dbg !11365
  %tobool = icmp ne i32* %2, null, !dbg !11365
  br i1 %tobool, label %if.end, label %if.then, !dbg !11367

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !11368
  br label %return, !dbg !11368

if.end:                                           ; preds = %entry
  %3 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %mdev.addr, align 8, !dbg !11369
  %4 = load i32*, i32** %out, align 8, !dbg !11370
  %call1 = call i32 @mlx5_query_nic_vport_context(%struct.mlx5_core_dev* %3, i16 zeroext 0, i32* %4) #9, !dbg !11371
  store i32 %call1, i32* %err, align 4, !dbg !11372
  %5 = load i32, i32* %err, align 4, !dbg !11373
  %tobool2 = icmp ne i32 %5, 0, !dbg !11373
  br i1 %tobool2, label %if.end20, label %if.then3, !dbg !11375

if.then3:                                         ; preds = %if.end
  %6 = load i32*, i32** %out, align 8, !dbg !11376
  %add.ptr = getelementptr i32, i32* %6, i64 13, !dbg !11376
  %7 = load i32, i32* %add.ptr, align 4, !dbg !11376
  %8 = call i1 @llvm.is.constant.i32(i32 %7), !dbg !11376
  br i1 %8, label %cond.true, label %cond.false, !dbg !11376

cond.true:                                        ; preds = %if.then3
  %9 = load i32*, i32** %out, align 8, !dbg !11376
  %add.ptr4 = getelementptr i32, i32* %9, i64 13, !dbg !11376
  %10 = load i32, i32* %add.ptr4, align 4, !dbg !11376
  %and = and i32 %10, 255, !dbg !11376
  %shl = shl i32 %and, 24, !dbg !11376
  %11 = load i32*, i32** %out, align 8, !dbg !11376
  %add.ptr5 = getelementptr i32, i32* %11, i64 13, !dbg !11376
  %12 = load i32, i32* %add.ptr5, align 4, !dbg !11376
  %and6 = and i32 %12, 65280, !dbg !11376
  %shl7 = shl i32 %and6, 8, !dbg !11376
  %or = or i32 %shl, %shl7, !dbg !11376
  %13 = load i32*, i32** %out, align 8, !dbg !11376
  %add.ptr8 = getelementptr i32, i32* %13, i64 13, !dbg !11376
  %14 = load i32, i32* %add.ptr8, align 4, !dbg !11376
  %and9 = and i32 %14, 16711680, !dbg !11376
  %shr = lshr i32 %and9, 8, !dbg !11376
  %or10 = or i32 %or, %shr, !dbg !11376
  %15 = load i32*, i32** %out, align 8, !dbg !11376
  %add.ptr11 = getelementptr i32, i32* %15, i64 13, !dbg !11376
  %16 = load i32, i32* %add.ptr11, align 4, !dbg !11376
  %and12 = and i32 %16, -16777216, !dbg !11376
  %shr13 = lshr i32 %and12, 24, !dbg !11376
  %or14 = or i32 %or10, %shr13, !dbg !11376
  br label %cond.end, !dbg !11376

cond.false:                                       ; preds = %if.then3
  %17 = load i32*, i32** %out, align 8, !dbg !11376
  %add.ptr15 = getelementptr i32, i32* %17, i64 13, !dbg !11376
  %18 = load i32, i32* %add.ptr15, align 4, !dbg !11376
  %call16 = call i32 @__fswab32(i32 %18) #8, !dbg !11376
  br label %cond.end, !dbg !11376

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %or14, %cond.true ], [ %call16, %cond.false ], !dbg !11376
  %shr17 = lshr i32 %cond, 0, !dbg !11376
  %and18 = and i32 %shr17, 65535, !dbg !11376
  %conv19 = trunc i32 %and18 to i16, !dbg !11376
  %19 = load i16*, i16** %mtu.addr, align 8, !dbg !11377
  store i16 %conv19, i16* %19, align 2, !dbg !11378
  br label %if.end20, !dbg !11379

if.end20:                                         ; preds = %cond.end, %if.end
  %20 = load i32*, i32** %out, align 8, !dbg !11380
  %21 = bitcast i32* %20 to i8*, !dbg !11380
  call void @kvfree(i8* %21) #9, !dbg !11381
  %22 = load i32, i32* %err, align 4, !dbg !11382
  store i32 %22, i32* %retval, align 4, !dbg !11383
  br label %return, !dbg !11383

return:                                           ; preds = %if.end20, %if.then
  %23 = load i32, i32* %retval, align 4, !dbg !11384
  ret i32 %23, !dbg !11384
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @mlx5_modify_nic_vport_mtu(%struct.mlx5_core_dev* %mdev, i16 zeroext %mtu) #0 !dbg !11385 {
entry:
  %retval = alloca i32, align 4
  %mdev.addr = alloca %struct.mlx5_core_dev*, align 8
  %mtu.addr = alloca i16, align 2
  %inlen = alloca i32, align 4
  %in = alloca i8*, align 8
  %err = alloca i32, align 4
  %_v = alloca i32, align 4
  %_v168 = alloca i32, align 4
  %_v347 = alloca i32, align 4
  %_out = alloca [4 x i32], align 16
  %tmp = alloca i32, align 4
  %tmp524 = alloca i32, align 4
  store %struct.mlx5_core_dev* %mdev, %struct.mlx5_core_dev** %mdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_core_dev** %mdev.addr, metadata !11388, metadata !DIExpression()), !dbg !11389
  store i16 %mtu, i16* %mtu.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %mtu.addr, metadata !11390, metadata !DIExpression()), !dbg !11391
  call void @llvm.dbg.declare(metadata i32* %inlen, metadata !11392, metadata !DIExpression()), !dbg !11393
  store i32 512, i32* %inlen, align 4, !dbg !11393
  call void @llvm.dbg.declare(metadata i8** %in, metadata !11394, metadata !DIExpression()), !dbg !11395
  call void @llvm.dbg.declare(metadata i32* %err, metadata !11396, metadata !DIExpression()), !dbg !11397
  %0 = load i32, i32* %inlen, align 4, !dbg !11398
  %conv = sext i32 %0 to i64, !dbg !11398
  %call = call i8* @kvzalloc(i64 %conv, i32 3264) #9, !dbg !11399
  store i8* %call, i8** %in, align 8, !dbg !11400
  %1 = load i8*, i8** %in, align 8, !dbg !11401
  %tobool = icmp ne i8* %1, null, !dbg !11401
  br i1 %tobool, label %if.end, label %if.then, !dbg !11403

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !11404
  br label %return, !dbg !11404

if.end:                                           ; preds = %entry
  br label %do.body, !dbg !11405

do.body:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %_v, metadata !11406, metadata !DIExpression()), !dbg !11408
  store i32 1, i32* %_v, align 4, !dbg !11408
  br label %do.body1, !dbg !11408

do.body1:                                         ; preds = %do.body
  br label %do.end, !dbg !11409

do.end:                                           ; preds = %do.body1
  %2 = load i8*, i8** %in, align 8, !dbg !11408
  %3 = bitcast i8* %2 to i32*, !dbg !11408
  %add.ptr = getelementptr i32, i32* %3, i64 3, !dbg !11408
  %4 = load i32, i32* %add.ptr, align 4, !dbg !11408
  %5 = call i1 @llvm.is.constant.i32(i32 %4), !dbg !11408
  br i1 %5, label %cond.true, label %cond.false, !dbg !11408

cond.true:                                        ; preds = %do.end
  %6 = load i8*, i8** %in, align 8, !dbg !11408
  %7 = bitcast i8* %6 to i32*, !dbg !11408
  %add.ptr2 = getelementptr i32, i32* %7, i64 3, !dbg !11408
  %8 = load i32, i32* %add.ptr2, align 4, !dbg !11408
  %and = and i32 %8, 255, !dbg !11408
  %shl = shl i32 %and, 24, !dbg !11408
  %9 = load i8*, i8** %in, align 8, !dbg !11408
  %10 = bitcast i8* %9 to i32*, !dbg !11408
  %add.ptr3 = getelementptr i32, i32* %10, i64 3, !dbg !11408
  %11 = load i32, i32* %add.ptr3, align 4, !dbg !11408
  %and4 = and i32 %11, 65280, !dbg !11408
  %shl5 = shl i32 %and4, 8, !dbg !11408
  %or = or i32 %shl, %shl5, !dbg !11408
  %12 = load i8*, i8** %in, align 8, !dbg !11408
  %13 = bitcast i8* %12 to i32*, !dbg !11408
  %add.ptr6 = getelementptr i32, i32* %13, i64 3, !dbg !11408
  %14 = load i32, i32* %add.ptr6, align 4, !dbg !11408
  %and7 = and i32 %14, 16711680, !dbg !11408
  %shr = lshr i32 %and7, 8, !dbg !11408
  %or8 = or i32 %or, %shr, !dbg !11408
  %15 = load i8*, i8** %in, align 8, !dbg !11408
  %16 = bitcast i8* %15 to i32*, !dbg !11408
  %add.ptr9 = getelementptr i32, i32* %16, i64 3, !dbg !11408
  %17 = load i32, i32* %add.ptr9, align 4, !dbg !11408
  %and10 = and i32 %17, -16777216, !dbg !11408
  %shr11 = lshr i32 %and10, 24, !dbg !11408
  %or12 = or i32 %or8, %shr11, !dbg !11408
  br label %cond.end, !dbg !11408

cond.false:                                       ; preds = %do.end
  %18 = load i8*, i8** %in, align 8, !dbg !11408
  %19 = bitcast i8* %18 to i32*, !dbg !11408
  %add.ptr13 = getelementptr i32, i32* %19, i64 3, !dbg !11408
  %20 = load i32, i32* %add.ptr13, align 4, !dbg !11408
  %call14 = call i32 @__fswab32(i32 %20) #8, !dbg !11408
  br label %cond.end, !dbg !11408

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %or12, %cond.true ], [ %call14, %cond.false ], !dbg !11408
  %and15 = and i32 %cond, -65, !dbg !11408
  %21 = load i32, i32* %_v, align 4, !dbg !11408
  %and16 = and i32 %21, 1, !dbg !11408
  %shl17 = shl i32 %and16, 6, !dbg !11408
  %or18 = or i32 %and15, %shl17, !dbg !11408
  %22 = call i1 @llvm.is.constant.i32(i32 %or18), !dbg !11408
  br i1 %22, label %cond.true19, label %cond.false135, !dbg !11408

cond.true19:                                      ; preds = %cond.end
  %23 = load i8*, i8** %in, align 8, !dbg !11408
  %24 = bitcast i8* %23 to i32*, !dbg !11408
  %add.ptr20 = getelementptr i32, i32* %24, i64 3, !dbg !11408
  %25 = load i32, i32* %add.ptr20, align 4, !dbg !11408
  %26 = call i1 @llvm.is.constant.i32(i32 %25), !dbg !11408
  br i1 %26, label %cond.true21, label %cond.false37, !dbg !11408

cond.true21:                                      ; preds = %cond.true19
  %27 = load i8*, i8** %in, align 8, !dbg !11408
  %28 = bitcast i8* %27 to i32*, !dbg !11408
  %add.ptr22 = getelementptr i32, i32* %28, i64 3, !dbg !11408
  %29 = load i32, i32* %add.ptr22, align 4, !dbg !11408
  %and23 = and i32 %29, 255, !dbg !11408
  %shl24 = shl i32 %and23, 24, !dbg !11408
  %30 = load i8*, i8** %in, align 8, !dbg !11408
  %31 = bitcast i8* %30 to i32*, !dbg !11408
  %add.ptr25 = getelementptr i32, i32* %31, i64 3, !dbg !11408
  %32 = load i32, i32* %add.ptr25, align 4, !dbg !11408
  %and26 = and i32 %32, 65280, !dbg !11408
  %shl27 = shl i32 %and26, 8, !dbg !11408
  %or28 = or i32 %shl24, %shl27, !dbg !11408
  %33 = load i8*, i8** %in, align 8, !dbg !11408
  %34 = bitcast i8* %33 to i32*, !dbg !11408
  %add.ptr29 = getelementptr i32, i32* %34, i64 3, !dbg !11408
  %35 = load i32, i32* %add.ptr29, align 4, !dbg !11408
  %and30 = and i32 %35, 16711680, !dbg !11408
  %shr31 = lshr i32 %and30, 8, !dbg !11408
  %or32 = or i32 %or28, %shr31, !dbg !11408
  %36 = load i8*, i8** %in, align 8, !dbg !11408
  %37 = bitcast i8* %36 to i32*, !dbg !11408
  %add.ptr33 = getelementptr i32, i32* %37, i64 3, !dbg !11408
  %38 = load i32, i32* %add.ptr33, align 4, !dbg !11408
  %and34 = and i32 %38, -16777216, !dbg !11408
  %shr35 = lshr i32 %and34, 24, !dbg !11408
  %or36 = or i32 %or32, %shr35, !dbg !11408
  br label %cond.end40, !dbg !11408

cond.false37:                                     ; preds = %cond.true19
  %39 = load i8*, i8** %in, align 8, !dbg !11408
  %40 = bitcast i8* %39 to i32*, !dbg !11408
  %add.ptr38 = getelementptr i32, i32* %40, i64 3, !dbg !11408
  %41 = load i32, i32* %add.ptr38, align 4, !dbg !11408
  %call39 = call i32 @__fswab32(i32 %41) #8, !dbg !11408
  br label %cond.end40, !dbg !11408

cond.end40:                                       ; preds = %cond.false37, %cond.true21
  %cond41 = phi i32 [ %or36, %cond.true21 ], [ %call39, %cond.false37 ], !dbg !11408
  %and42 = and i32 %cond41, -65, !dbg !11408
  %42 = load i32, i32* %_v, align 4, !dbg !11408
  %and43 = and i32 %42, 1, !dbg !11408
  %shl44 = shl i32 %and43, 6, !dbg !11408
  %or45 = or i32 %and42, %shl44, !dbg !11408
  %and46 = and i32 %or45, 255, !dbg !11408
  %shl47 = shl i32 %and46, 24, !dbg !11408
  %43 = load i8*, i8** %in, align 8, !dbg !11408
  %44 = bitcast i8* %43 to i32*, !dbg !11408
  %add.ptr48 = getelementptr i32, i32* %44, i64 3, !dbg !11408
  %45 = load i32, i32* %add.ptr48, align 4, !dbg !11408
  %46 = call i1 @llvm.is.constant.i32(i32 %45), !dbg !11408
  br i1 %46, label %cond.true49, label %cond.false65, !dbg !11408

cond.true49:                                      ; preds = %cond.end40
  %47 = load i8*, i8** %in, align 8, !dbg !11408
  %48 = bitcast i8* %47 to i32*, !dbg !11408
  %add.ptr50 = getelementptr i32, i32* %48, i64 3, !dbg !11408
  %49 = load i32, i32* %add.ptr50, align 4, !dbg !11408
  %and51 = and i32 %49, 255, !dbg !11408
  %shl52 = shl i32 %and51, 24, !dbg !11408
  %50 = load i8*, i8** %in, align 8, !dbg !11408
  %51 = bitcast i8* %50 to i32*, !dbg !11408
  %add.ptr53 = getelementptr i32, i32* %51, i64 3, !dbg !11408
  %52 = load i32, i32* %add.ptr53, align 4, !dbg !11408
  %and54 = and i32 %52, 65280, !dbg !11408
  %shl55 = shl i32 %and54, 8, !dbg !11408
  %or56 = or i32 %shl52, %shl55, !dbg !11408
  %53 = load i8*, i8** %in, align 8, !dbg !11408
  %54 = bitcast i8* %53 to i32*, !dbg !11408
  %add.ptr57 = getelementptr i32, i32* %54, i64 3, !dbg !11408
  %55 = load i32, i32* %add.ptr57, align 4, !dbg !11408
  %and58 = and i32 %55, 16711680, !dbg !11408
  %shr59 = lshr i32 %and58, 8, !dbg !11408
  %or60 = or i32 %or56, %shr59, !dbg !11408
  %56 = load i8*, i8** %in, align 8, !dbg !11408
  %57 = bitcast i8* %56 to i32*, !dbg !11408
  %add.ptr61 = getelementptr i32, i32* %57, i64 3, !dbg !11408
  %58 = load i32, i32* %add.ptr61, align 4, !dbg !11408
  %and62 = and i32 %58, -16777216, !dbg !11408
  %shr63 = lshr i32 %and62, 24, !dbg !11408
  %or64 = or i32 %or60, %shr63, !dbg !11408
  br label %cond.end68, !dbg !11408

cond.false65:                                     ; preds = %cond.end40
  %59 = load i8*, i8** %in, align 8, !dbg !11408
  %60 = bitcast i8* %59 to i32*, !dbg !11408
  %add.ptr66 = getelementptr i32, i32* %60, i64 3, !dbg !11408
  %61 = load i32, i32* %add.ptr66, align 4, !dbg !11408
  %call67 = call i32 @__fswab32(i32 %61) #8, !dbg !11408
  br label %cond.end68, !dbg !11408

cond.end68:                                       ; preds = %cond.false65, %cond.true49
  %cond69 = phi i32 [ %or64, %cond.true49 ], [ %call67, %cond.false65 ], !dbg !11408
  %and70 = and i32 %cond69, -65, !dbg !11408
  %62 = load i32, i32* %_v, align 4, !dbg !11408
  %and71 = and i32 %62, 1, !dbg !11408
  %shl72 = shl i32 %and71, 6, !dbg !11408
  %or73 = or i32 %and70, %shl72, !dbg !11408
  %and74 = and i32 %or73, 65280, !dbg !11408
  %shl75 = shl i32 %and74, 8, !dbg !11408
  %or76 = or i32 %shl47, %shl75, !dbg !11408
  %63 = load i8*, i8** %in, align 8, !dbg !11408
  %64 = bitcast i8* %63 to i32*, !dbg !11408
  %add.ptr77 = getelementptr i32, i32* %64, i64 3, !dbg !11408
  %65 = load i32, i32* %add.ptr77, align 4, !dbg !11408
  %66 = call i1 @llvm.is.constant.i32(i32 %65), !dbg !11408
  br i1 %66, label %cond.true78, label %cond.false94, !dbg !11408

cond.true78:                                      ; preds = %cond.end68
  %67 = load i8*, i8** %in, align 8, !dbg !11408
  %68 = bitcast i8* %67 to i32*, !dbg !11408
  %add.ptr79 = getelementptr i32, i32* %68, i64 3, !dbg !11408
  %69 = load i32, i32* %add.ptr79, align 4, !dbg !11408
  %and80 = and i32 %69, 255, !dbg !11408
  %shl81 = shl i32 %and80, 24, !dbg !11408
  %70 = load i8*, i8** %in, align 8, !dbg !11408
  %71 = bitcast i8* %70 to i32*, !dbg !11408
  %add.ptr82 = getelementptr i32, i32* %71, i64 3, !dbg !11408
  %72 = load i32, i32* %add.ptr82, align 4, !dbg !11408
  %and83 = and i32 %72, 65280, !dbg !11408
  %shl84 = shl i32 %and83, 8, !dbg !11408
  %or85 = or i32 %shl81, %shl84, !dbg !11408
  %73 = load i8*, i8** %in, align 8, !dbg !11408
  %74 = bitcast i8* %73 to i32*, !dbg !11408
  %add.ptr86 = getelementptr i32, i32* %74, i64 3, !dbg !11408
  %75 = load i32, i32* %add.ptr86, align 4, !dbg !11408
  %and87 = and i32 %75, 16711680, !dbg !11408
  %shr88 = lshr i32 %and87, 8, !dbg !11408
  %or89 = or i32 %or85, %shr88, !dbg !11408
  %76 = load i8*, i8** %in, align 8, !dbg !11408
  %77 = bitcast i8* %76 to i32*, !dbg !11408
  %add.ptr90 = getelementptr i32, i32* %77, i64 3, !dbg !11408
  %78 = load i32, i32* %add.ptr90, align 4, !dbg !11408
  %and91 = and i32 %78, -16777216, !dbg !11408
  %shr92 = lshr i32 %and91, 24, !dbg !11408
  %or93 = or i32 %or89, %shr92, !dbg !11408
  br label %cond.end97, !dbg !11408

cond.false94:                                     ; preds = %cond.end68
  %79 = load i8*, i8** %in, align 8, !dbg !11408
  %80 = bitcast i8* %79 to i32*, !dbg !11408
  %add.ptr95 = getelementptr i32, i32* %80, i64 3, !dbg !11408
  %81 = load i32, i32* %add.ptr95, align 4, !dbg !11408
  %call96 = call i32 @__fswab32(i32 %81) #8, !dbg !11408
  br label %cond.end97, !dbg !11408

cond.end97:                                       ; preds = %cond.false94, %cond.true78
  %cond98 = phi i32 [ %or93, %cond.true78 ], [ %call96, %cond.false94 ], !dbg !11408
  %and99 = and i32 %cond98, -65, !dbg !11408
  %82 = load i32, i32* %_v, align 4, !dbg !11408
  %and100 = and i32 %82, 1, !dbg !11408
  %shl101 = shl i32 %and100, 6, !dbg !11408
  %or102 = or i32 %and99, %shl101, !dbg !11408
  %and103 = and i32 %or102, 16711680, !dbg !11408
  %shr104 = lshr i32 %and103, 8, !dbg !11408
  %or105 = or i32 %or76, %shr104, !dbg !11408
  %83 = load i8*, i8** %in, align 8, !dbg !11408
  %84 = bitcast i8* %83 to i32*, !dbg !11408
  %add.ptr106 = getelementptr i32, i32* %84, i64 3, !dbg !11408
  %85 = load i32, i32* %add.ptr106, align 4, !dbg !11408
  %86 = call i1 @llvm.is.constant.i32(i32 %85), !dbg !11408
  br i1 %86, label %cond.true107, label %cond.false123, !dbg !11408

cond.true107:                                     ; preds = %cond.end97
  %87 = load i8*, i8** %in, align 8, !dbg !11408
  %88 = bitcast i8* %87 to i32*, !dbg !11408
  %add.ptr108 = getelementptr i32, i32* %88, i64 3, !dbg !11408
  %89 = load i32, i32* %add.ptr108, align 4, !dbg !11408
  %and109 = and i32 %89, 255, !dbg !11408
  %shl110 = shl i32 %and109, 24, !dbg !11408
  %90 = load i8*, i8** %in, align 8, !dbg !11408
  %91 = bitcast i8* %90 to i32*, !dbg !11408
  %add.ptr111 = getelementptr i32, i32* %91, i64 3, !dbg !11408
  %92 = load i32, i32* %add.ptr111, align 4, !dbg !11408
  %and112 = and i32 %92, 65280, !dbg !11408
  %shl113 = shl i32 %and112, 8, !dbg !11408
  %or114 = or i32 %shl110, %shl113, !dbg !11408
  %93 = load i8*, i8** %in, align 8, !dbg !11408
  %94 = bitcast i8* %93 to i32*, !dbg !11408
  %add.ptr115 = getelementptr i32, i32* %94, i64 3, !dbg !11408
  %95 = load i32, i32* %add.ptr115, align 4, !dbg !11408
  %and116 = and i32 %95, 16711680, !dbg !11408
  %shr117 = lshr i32 %and116, 8, !dbg !11408
  %or118 = or i32 %or114, %shr117, !dbg !11408
  %96 = load i8*, i8** %in, align 8, !dbg !11408
  %97 = bitcast i8* %96 to i32*, !dbg !11408
  %add.ptr119 = getelementptr i32, i32* %97, i64 3, !dbg !11408
  %98 = load i32, i32* %add.ptr119, align 4, !dbg !11408
  %and120 = and i32 %98, -16777216, !dbg !11408
  %shr121 = lshr i32 %and120, 24, !dbg !11408
  %or122 = or i32 %or118, %shr121, !dbg !11408
  br label %cond.end126, !dbg !11408

cond.false123:                                    ; preds = %cond.end97
  %99 = load i8*, i8** %in, align 8, !dbg !11408
  %100 = bitcast i8* %99 to i32*, !dbg !11408
  %add.ptr124 = getelementptr i32, i32* %100, i64 3, !dbg !11408
  %101 = load i32, i32* %add.ptr124, align 4, !dbg !11408
  %call125 = call i32 @__fswab32(i32 %101) #8, !dbg !11408
  br label %cond.end126, !dbg !11408

cond.end126:                                      ; preds = %cond.false123, %cond.true107
  %cond127 = phi i32 [ %or122, %cond.true107 ], [ %call125, %cond.false123 ], !dbg !11408
  %and128 = and i32 %cond127, -65, !dbg !11408
  %102 = load i32, i32* %_v, align 4, !dbg !11408
  %and129 = and i32 %102, 1, !dbg !11408
  %shl130 = shl i32 %and129, 6, !dbg !11408
  %or131 = or i32 %and128, %shl130, !dbg !11408
  %and132 = and i32 %or131, -16777216, !dbg !11408
  %shr133 = lshr i32 %and132, 24, !dbg !11408
  %or134 = or i32 %or105, %shr133, !dbg !11408
  br label %cond.end163, !dbg !11408

cond.false135:                                    ; preds = %cond.end
  %103 = load i8*, i8** %in, align 8, !dbg !11408
  %104 = bitcast i8* %103 to i32*, !dbg !11408
  %add.ptr136 = getelementptr i32, i32* %104, i64 3, !dbg !11408
  %105 = load i32, i32* %add.ptr136, align 4, !dbg !11408
  %106 = call i1 @llvm.is.constant.i32(i32 %105), !dbg !11408
  br i1 %106, label %cond.true137, label %cond.false153, !dbg !11408

cond.true137:                                     ; preds = %cond.false135
  %107 = load i8*, i8** %in, align 8, !dbg !11408
  %108 = bitcast i8* %107 to i32*, !dbg !11408
  %add.ptr138 = getelementptr i32, i32* %108, i64 3, !dbg !11408
  %109 = load i32, i32* %add.ptr138, align 4, !dbg !11408
  %and139 = and i32 %109, 255, !dbg !11408
  %shl140 = shl i32 %and139, 24, !dbg !11408
  %110 = load i8*, i8** %in, align 8, !dbg !11408
  %111 = bitcast i8* %110 to i32*, !dbg !11408
  %add.ptr141 = getelementptr i32, i32* %111, i64 3, !dbg !11408
  %112 = load i32, i32* %add.ptr141, align 4, !dbg !11408
  %and142 = and i32 %112, 65280, !dbg !11408
  %shl143 = shl i32 %and142, 8, !dbg !11408
  %or144 = or i32 %shl140, %shl143, !dbg !11408
  %113 = load i8*, i8** %in, align 8, !dbg !11408
  %114 = bitcast i8* %113 to i32*, !dbg !11408
  %add.ptr145 = getelementptr i32, i32* %114, i64 3, !dbg !11408
  %115 = load i32, i32* %add.ptr145, align 4, !dbg !11408
  %and146 = and i32 %115, 16711680, !dbg !11408
  %shr147 = lshr i32 %and146, 8, !dbg !11408
  %or148 = or i32 %or144, %shr147, !dbg !11408
  %116 = load i8*, i8** %in, align 8, !dbg !11408
  %117 = bitcast i8* %116 to i32*, !dbg !11408
  %add.ptr149 = getelementptr i32, i32* %117, i64 3, !dbg !11408
  %118 = load i32, i32* %add.ptr149, align 4, !dbg !11408
  %and150 = and i32 %118, -16777216, !dbg !11408
  %shr151 = lshr i32 %and150, 24, !dbg !11408
  %or152 = or i32 %or148, %shr151, !dbg !11408
  br label %cond.end156, !dbg !11408

cond.false153:                                    ; preds = %cond.false135
  %119 = load i8*, i8** %in, align 8, !dbg !11408
  %120 = bitcast i8* %119 to i32*, !dbg !11408
  %add.ptr154 = getelementptr i32, i32* %120, i64 3, !dbg !11408
  %121 = load i32, i32* %add.ptr154, align 4, !dbg !11408
  %call155 = call i32 @__fswab32(i32 %121) #8, !dbg !11408
  br label %cond.end156, !dbg !11408

cond.end156:                                      ; preds = %cond.false153, %cond.true137
  %cond157 = phi i32 [ %or152, %cond.true137 ], [ %call155, %cond.false153 ], !dbg !11408
  %and158 = and i32 %cond157, -65, !dbg !11408
  %122 = load i32, i32* %_v, align 4, !dbg !11408
  %and159 = and i32 %122, 1, !dbg !11408
  %shl160 = shl i32 %and159, 6, !dbg !11408
  %or161 = or i32 %and158, %shl160, !dbg !11408
  %call162 = call i32 @__fswab32(i32 %or161) #8, !dbg !11408
  br label %cond.end163, !dbg !11408

cond.end163:                                      ; preds = %cond.end156, %cond.end126
  %cond164 = phi i32 [ %or134, %cond.end126 ], [ %call162, %cond.end156 ], !dbg !11408
  %123 = load i8*, i8** %in, align 8, !dbg !11408
  %124 = bitcast i8* %123 to i32*, !dbg !11408
  %add.ptr165 = getelementptr i32, i32* %124, i64 3, !dbg !11408
  store i32 %cond164, i32* %add.ptr165, align 4, !dbg !11408
  br label %do.end166, !dbg !11408

do.end166:                                        ; preds = %cond.end163
  br label %do.body167, !dbg !11411

do.body167:                                       ; preds = %do.end166
  call void @llvm.dbg.declare(metadata i32* %_v168, metadata !11412, metadata !DIExpression()), !dbg !11414
  %125 = load i16, i16* %mtu.addr, align 2, !dbg !11414
  %conv169 = zext i16 %125 to i32, !dbg !11414
  store i32 %conv169, i32* %_v168, align 4, !dbg !11414
  br label %do.body170, !dbg !11414

do.body170:                                       ; preds = %do.body167
  br label %do.end171, !dbg !11415

do.end171:                                        ; preds = %do.body170
  %126 = load i8*, i8** %in, align 8, !dbg !11414
  %127 = bitcast i8* %126 to i32*, !dbg !11414
  %add.ptr172 = getelementptr i32, i32* %127, i64 73, !dbg !11414
  %128 = load i32, i32* %add.ptr172, align 4, !dbg !11414
  %129 = call i1 @llvm.is.constant.i32(i32 %128), !dbg !11414
  br i1 %129, label %cond.true173, label %cond.false189, !dbg !11414

cond.true173:                                     ; preds = %do.end171
  %130 = load i8*, i8** %in, align 8, !dbg !11414
  %131 = bitcast i8* %130 to i32*, !dbg !11414
  %add.ptr174 = getelementptr i32, i32* %131, i64 73, !dbg !11414
  %132 = load i32, i32* %add.ptr174, align 4, !dbg !11414
  %and175 = and i32 %132, 255, !dbg !11414
  %shl176 = shl i32 %and175, 24, !dbg !11414
  %133 = load i8*, i8** %in, align 8, !dbg !11414
  %134 = bitcast i8* %133 to i32*, !dbg !11414
  %add.ptr177 = getelementptr i32, i32* %134, i64 73, !dbg !11414
  %135 = load i32, i32* %add.ptr177, align 4, !dbg !11414
  %and178 = and i32 %135, 65280, !dbg !11414
  %shl179 = shl i32 %and178, 8, !dbg !11414
  %or180 = or i32 %shl176, %shl179, !dbg !11414
  %136 = load i8*, i8** %in, align 8, !dbg !11414
  %137 = bitcast i8* %136 to i32*, !dbg !11414
  %add.ptr181 = getelementptr i32, i32* %137, i64 73, !dbg !11414
  %138 = load i32, i32* %add.ptr181, align 4, !dbg !11414
  %and182 = and i32 %138, 16711680, !dbg !11414
  %shr183 = lshr i32 %and182, 8, !dbg !11414
  %or184 = or i32 %or180, %shr183, !dbg !11414
  %139 = load i8*, i8** %in, align 8, !dbg !11414
  %140 = bitcast i8* %139 to i32*, !dbg !11414
  %add.ptr185 = getelementptr i32, i32* %140, i64 73, !dbg !11414
  %141 = load i32, i32* %add.ptr185, align 4, !dbg !11414
  %and186 = and i32 %141, -16777216, !dbg !11414
  %shr187 = lshr i32 %and186, 24, !dbg !11414
  %or188 = or i32 %or184, %shr187, !dbg !11414
  br label %cond.end192, !dbg !11414

cond.false189:                                    ; preds = %do.end171
  %142 = load i8*, i8** %in, align 8, !dbg !11414
  %143 = bitcast i8* %142 to i32*, !dbg !11414
  %add.ptr190 = getelementptr i32, i32* %143, i64 73, !dbg !11414
  %144 = load i32, i32* %add.ptr190, align 4, !dbg !11414
  %call191 = call i32 @__fswab32(i32 %144) #8, !dbg !11414
  br label %cond.end192, !dbg !11414

cond.end192:                                      ; preds = %cond.false189, %cond.true173
  %cond193 = phi i32 [ %or188, %cond.true173 ], [ %call191, %cond.false189 ], !dbg !11414
  %and194 = and i32 %cond193, -65536, !dbg !11414
  %145 = load i32, i32* %_v168, align 4, !dbg !11414
  %and195 = and i32 %145, 65535, !dbg !11414
  %shl196 = shl i32 %and195, 0, !dbg !11414
  %or197 = or i32 %and194, %shl196, !dbg !11414
  %146 = call i1 @llvm.is.constant.i32(i32 %or197), !dbg !11414
  br i1 %146, label %cond.true198, label %cond.false314, !dbg !11414

cond.true198:                                     ; preds = %cond.end192
  %147 = load i8*, i8** %in, align 8, !dbg !11414
  %148 = bitcast i8* %147 to i32*, !dbg !11414
  %add.ptr199 = getelementptr i32, i32* %148, i64 73, !dbg !11414
  %149 = load i32, i32* %add.ptr199, align 4, !dbg !11414
  %150 = call i1 @llvm.is.constant.i32(i32 %149), !dbg !11414
  br i1 %150, label %cond.true200, label %cond.false216, !dbg !11414

cond.true200:                                     ; preds = %cond.true198
  %151 = load i8*, i8** %in, align 8, !dbg !11414
  %152 = bitcast i8* %151 to i32*, !dbg !11414
  %add.ptr201 = getelementptr i32, i32* %152, i64 73, !dbg !11414
  %153 = load i32, i32* %add.ptr201, align 4, !dbg !11414
  %and202 = and i32 %153, 255, !dbg !11414
  %shl203 = shl i32 %and202, 24, !dbg !11414
  %154 = load i8*, i8** %in, align 8, !dbg !11414
  %155 = bitcast i8* %154 to i32*, !dbg !11414
  %add.ptr204 = getelementptr i32, i32* %155, i64 73, !dbg !11414
  %156 = load i32, i32* %add.ptr204, align 4, !dbg !11414
  %and205 = and i32 %156, 65280, !dbg !11414
  %shl206 = shl i32 %and205, 8, !dbg !11414
  %or207 = or i32 %shl203, %shl206, !dbg !11414
  %157 = load i8*, i8** %in, align 8, !dbg !11414
  %158 = bitcast i8* %157 to i32*, !dbg !11414
  %add.ptr208 = getelementptr i32, i32* %158, i64 73, !dbg !11414
  %159 = load i32, i32* %add.ptr208, align 4, !dbg !11414
  %and209 = and i32 %159, 16711680, !dbg !11414
  %shr210 = lshr i32 %and209, 8, !dbg !11414
  %or211 = or i32 %or207, %shr210, !dbg !11414
  %160 = load i8*, i8** %in, align 8, !dbg !11414
  %161 = bitcast i8* %160 to i32*, !dbg !11414
  %add.ptr212 = getelementptr i32, i32* %161, i64 73, !dbg !11414
  %162 = load i32, i32* %add.ptr212, align 4, !dbg !11414
  %and213 = and i32 %162, -16777216, !dbg !11414
  %shr214 = lshr i32 %and213, 24, !dbg !11414
  %or215 = or i32 %or211, %shr214, !dbg !11414
  br label %cond.end219, !dbg !11414

cond.false216:                                    ; preds = %cond.true198
  %163 = load i8*, i8** %in, align 8, !dbg !11414
  %164 = bitcast i8* %163 to i32*, !dbg !11414
  %add.ptr217 = getelementptr i32, i32* %164, i64 73, !dbg !11414
  %165 = load i32, i32* %add.ptr217, align 4, !dbg !11414
  %call218 = call i32 @__fswab32(i32 %165) #8, !dbg !11414
  br label %cond.end219, !dbg !11414

cond.end219:                                      ; preds = %cond.false216, %cond.true200
  %cond220 = phi i32 [ %or215, %cond.true200 ], [ %call218, %cond.false216 ], !dbg !11414
  %and221 = and i32 %cond220, -65536, !dbg !11414
  %166 = load i32, i32* %_v168, align 4, !dbg !11414
  %and222 = and i32 %166, 65535, !dbg !11414
  %shl223 = shl i32 %and222, 0, !dbg !11414
  %or224 = or i32 %and221, %shl223, !dbg !11414
  %and225 = and i32 %or224, 255, !dbg !11414
  %shl226 = shl i32 %and225, 24, !dbg !11414
  %167 = load i8*, i8** %in, align 8, !dbg !11414
  %168 = bitcast i8* %167 to i32*, !dbg !11414
  %add.ptr227 = getelementptr i32, i32* %168, i64 73, !dbg !11414
  %169 = load i32, i32* %add.ptr227, align 4, !dbg !11414
  %170 = call i1 @llvm.is.constant.i32(i32 %169), !dbg !11414
  br i1 %170, label %cond.true228, label %cond.false244, !dbg !11414

cond.true228:                                     ; preds = %cond.end219
  %171 = load i8*, i8** %in, align 8, !dbg !11414
  %172 = bitcast i8* %171 to i32*, !dbg !11414
  %add.ptr229 = getelementptr i32, i32* %172, i64 73, !dbg !11414
  %173 = load i32, i32* %add.ptr229, align 4, !dbg !11414
  %and230 = and i32 %173, 255, !dbg !11414
  %shl231 = shl i32 %and230, 24, !dbg !11414
  %174 = load i8*, i8** %in, align 8, !dbg !11414
  %175 = bitcast i8* %174 to i32*, !dbg !11414
  %add.ptr232 = getelementptr i32, i32* %175, i64 73, !dbg !11414
  %176 = load i32, i32* %add.ptr232, align 4, !dbg !11414
  %and233 = and i32 %176, 65280, !dbg !11414
  %shl234 = shl i32 %and233, 8, !dbg !11414
  %or235 = or i32 %shl231, %shl234, !dbg !11414
  %177 = load i8*, i8** %in, align 8, !dbg !11414
  %178 = bitcast i8* %177 to i32*, !dbg !11414
  %add.ptr236 = getelementptr i32, i32* %178, i64 73, !dbg !11414
  %179 = load i32, i32* %add.ptr236, align 4, !dbg !11414
  %and237 = and i32 %179, 16711680, !dbg !11414
  %shr238 = lshr i32 %and237, 8, !dbg !11414
  %or239 = or i32 %or235, %shr238, !dbg !11414
  %180 = load i8*, i8** %in, align 8, !dbg !11414
  %181 = bitcast i8* %180 to i32*, !dbg !11414
  %add.ptr240 = getelementptr i32, i32* %181, i64 73, !dbg !11414
  %182 = load i32, i32* %add.ptr240, align 4, !dbg !11414
  %and241 = and i32 %182, -16777216, !dbg !11414
  %shr242 = lshr i32 %and241, 24, !dbg !11414
  %or243 = or i32 %or239, %shr242, !dbg !11414
  br label %cond.end247, !dbg !11414

cond.false244:                                    ; preds = %cond.end219
  %183 = load i8*, i8** %in, align 8, !dbg !11414
  %184 = bitcast i8* %183 to i32*, !dbg !11414
  %add.ptr245 = getelementptr i32, i32* %184, i64 73, !dbg !11414
  %185 = load i32, i32* %add.ptr245, align 4, !dbg !11414
  %call246 = call i32 @__fswab32(i32 %185) #8, !dbg !11414
  br label %cond.end247, !dbg !11414

cond.end247:                                      ; preds = %cond.false244, %cond.true228
  %cond248 = phi i32 [ %or243, %cond.true228 ], [ %call246, %cond.false244 ], !dbg !11414
  %and249 = and i32 %cond248, -65536, !dbg !11414
  %186 = load i32, i32* %_v168, align 4, !dbg !11414
  %and250 = and i32 %186, 65535, !dbg !11414
  %shl251 = shl i32 %and250, 0, !dbg !11414
  %or252 = or i32 %and249, %shl251, !dbg !11414
  %and253 = and i32 %or252, 65280, !dbg !11414
  %shl254 = shl i32 %and253, 8, !dbg !11414
  %or255 = or i32 %shl226, %shl254, !dbg !11414
  %187 = load i8*, i8** %in, align 8, !dbg !11414
  %188 = bitcast i8* %187 to i32*, !dbg !11414
  %add.ptr256 = getelementptr i32, i32* %188, i64 73, !dbg !11414
  %189 = load i32, i32* %add.ptr256, align 4, !dbg !11414
  %190 = call i1 @llvm.is.constant.i32(i32 %189), !dbg !11414
  br i1 %190, label %cond.true257, label %cond.false273, !dbg !11414

cond.true257:                                     ; preds = %cond.end247
  %191 = load i8*, i8** %in, align 8, !dbg !11414
  %192 = bitcast i8* %191 to i32*, !dbg !11414
  %add.ptr258 = getelementptr i32, i32* %192, i64 73, !dbg !11414
  %193 = load i32, i32* %add.ptr258, align 4, !dbg !11414
  %and259 = and i32 %193, 255, !dbg !11414
  %shl260 = shl i32 %and259, 24, !dbg !11414
  %194 = load i8*, i8** %in, align 8, !dbg !11414
  %195 = bitcast i8* %194 to i32*, !dbg !11414
  %add.ptr261 = getelementptr i32, i32* %195, i64 73, !dbg !11414
  %196 = load i32, i32* %add.ptr261, align 4, !dbg !11414
  %and262 = and i32 %196, 65280, !dbg !11414
  %shl263 = shl i32 %and262, 8, !dbg !11414
  %or264 = or i32 %shl260, %shl263, !dbg !11414
  %197 = load i8*, i8** %in, align 8, !dbg !11414
  %198 = bitcast i8* %197 to i32*, !dbg !11414
  %add.ptr265 = getelementptr i32, i32* %198, i64 73, !dbg !11414
  %199 = load i32, i32* %add.ptr265, align 4, !dbg !11414
  %and266 = and i32 %199, 16711680, !dbg !11414
  %shr267 = lshr i32 %and266, 8, !dbg !11414
  %or268 = or i32 %or264, %shr267, !dbg !11414
  %200 = load i8*, i8** %in, align 8, !dbg !11414
  %201 = bitcast i8* %200 to i32*, !dbg !11414
  %add.ptr269 = getelementptr i32, i32* %201, i64 73, !dbg !11414
  %202 = load i32, i32* %add.ptr269, align 4, !dbg !11414
  %and270 = and i32 %202, -16777216, !dbg !11414
  %shr271 = lshr i32 %and270, 24, !dbg !11414
  %or272 = or i32 %or268, %shr271, !dbg !11414
  br label %cond.end276, !dbg !11414

cond.false273:                                    ; preds = %cond.end247
  %203 = load i8*, i8** %in, align 8, !dbg !11414
  %204 = bitcast i8* %203 to i32*, !dbg !11414
  %add.ptr274 = getelementptr i32, i32* %204, i64 73, !dbg !11414
  %205 = load i32, i32* %add.ptr274, align 4, !dbg !11414
  %call275 = call i32 @__fswab32(i32 %205) #8, !dbg !11414
  br label %cond.end276, !dbg !11414

cond.end276:                                      ; preds = %cond.false273, %cond.true257
  %cond277 = phi i32 [ %or272, %cond.true257 ], [ %call275, %cond.false273 ], !dbg !11414
  %and278 = and i32 %cond277, -65536, !dbg !11414
  %206 = load i32, i32* %_v168, align 4, !dbg !11414
  %and279 = and i32 %206, 65535, !dbg !11414
  %shl280 = shl i32 %and279, 0, !dbg !11414
  %or281 = or i32 %and278, %shl280, !dbg !11414
  %and282 = and i32 %or281, 16711680, !dbg !11414
  %shr283 = lshr i32 %and282, 8, !dbg !11414
  %or284 = or i32 %or255, %shr283, !dbg !11414
  %207 = load i8*, i8** %in, align 8, !dbg !11414
  %208 = bitcast i8* %207 to i32*, !dbg !11414
  %add.ptr285 = getelementptr i32, i32* %208, i64 73, !dbg !11414
  %209 = load i32, i32* %add.ptr285, align 4, !dbg !11414
  %210 = call i1 @llvm.is.constant.i32(i32 %209), !dbg !11414
  br i1 %210, label %cond.true286, label %cond.false302, !dbg !11414

cond.true286:                                     ; preds = %cond.end276
  %211 = load i8*, i8** %in, align 8, !dbg !11414
  %212 = bitcast i8* %211 to i32*, !dbg !11414
  %add.ptr287 = getelementptr i32, i32* %212, i64 73, !dbg !11414
  %213 = load i32, i32* %add.ptr287, align 4, !dbg !11414
  %and288 = and i32 %213, 255, !dbg !11414
  %shl289 = shl i32 %and288, 24, !dbg !11414
  %214 = load i8*, i8** %in, align 8, !dbg !11414
  %215 = bitcast i8* %214 to i32*, !dbg !11414
  %add.ptr290 = getelementptr i32, i32* %215, i64 73, !dbg !11414
  %216 = load i32, i32* %add.ptr290, align 4, !dbg !11414
  %and291 = and i32 %216, 65280, !dbg !11414
  %shl292 = shl i32 %and291, 8, !dbg !11414
  %or293 = or i32 %shl289, %shl292, !dbg !11414
  %217 = load i8*, i8** %in, align 8, !dbg !11414
  %218 = bitcast i8* %217 to i32*, !dbg !11414
  %add.ptr294 = getelementptr i32, i32* %218, i64 73, !dbg !11414
  %219 = load i32, i32* %add.ptr294, align 4, !dbg !11414
  %and295 = and i32 %219, 16711680, !dbg !11414
  %shr296 = lshr i32 %and295, 8, !dbg !11414
  %or297 = or i32 %or293, %shr296, !dbg !11414
  %220 = load i8*, i8** %in, align 8, !dbg !11414
  %221 = bitcast i8* %220 to i32*, !dbg !11414
  %add.ptr298 = getelementptr i32, i32* %221, i64 73, !dbg !11414
  %222 = load i32, i32* %add.ptr298, align 4, !dbg !11414
  %and299 = and i32 %222, -16777216, !dbg !11414
  %shr300 = lshr i32 %and299, 24, !dbg !11414
  %or301 = or i32 %or297, %shr300, !dbg !11414
  br label %cond.end305, !dbg !11414

cond.false302:                                    ; preds = %cond.end276
  %223 = load i8*, i8** %in, align 8, !dbg !11414
  %224 = bitcast i8* %223 to i32*, !dbg !11414
  %add.ptr303 = getelementptr i32, i32* %224, i64 73, !dbg !11414
  %225 = load i32, i32* %add.ptr303, align 4, !dbg !11414
  %call304 = call i32 @__fswab32(i32 %225) #8, !dbg !11414
  br label %cond.end305, !dbg !11414

cond.end305:                                      ; preds = %cond.false302, %cond.true286
  %cond306 = phi i32 [ %or301, %cond.true286 ], [ %call304, %cond.false302 ], !dbg !11414
  %and307 = and i32 %cond306, -65536, !dbg !11414
  %226 = load i32, i32* %_v168, align 4, !dbg !11414
  %and308 = and i32 %226, 65535, !dbg !11414
  %shl309 = shl i32 %and308, 0, !dbg !11414
  %or310 = or i32 %and307, %shl309, !dbg !11414
  %and311 = and i32 %or310, -16777216, !dbg !11414
  %shr312 = lshr i32 %and311, 24, !dbg !11414
  %or313 = or i32 %or284, %shr312, !dbg !11414
  br label %cond.end342, !dbg !11414

cond.false314:                                    ; preds = %cond.end192
  %227 = load i8*, i8** %in, align 8, !dbg !11414
  %228 = bitcast i8* %227 to i32*, !dbg !11414
  %add.ptr315 = getelementptr i32, i32* %228, i64 73, !dbg !11414
  %229 = load i32, i32* %add.ptr315, align 4, !dbg !11414
  %230 = call i1 @llvm.is.constant.i32(i32 %229), !dbg !11414
  br i1 %230, label %cond.true316, label %cond.false332, !dbg !11414

cond.true316:                                     ; preds = %cond.false314
  %231 = load i8*, i8** %in, align 8, !dbg !11414
  %232 = bitcast i8* %231 to i32*, !dbg !11414
  %add.ptr317 = getelementptr i32, i32* %232, i64 73, !dbg !11414
  %233 = load i32, i32* %add.ptr317, align 4, !dbg !11414
  %and318 = and i32 %233, 255, !dbg !11414
  %shl319 = shl i32 %and318, 24, !dbg !11414
  %234 = load i8*, i8** %in, align 8, !dbg !11414
  %235 = bitcast i8* %234 to i32*, !dbg !11414
  %add.ptr320 = getelementptr i32, i32* %235, i64 73, !dbg !11414
  %236 = load i32, i32* %add.ptr320, align 4, !dbg !11414
  %and321 = and i32 %236, 65280, !dbg !11414
  %shl322 = shl i32 %and321, 8, !dbg !11414
  %or323 = or i32 %shl319, %shl322, !dbg !11414
  %237 = load i8*, i8** %in, align 8, !dbg !11414
  %238 = bitcast i8* %237 to i32*, !dbg !11414
  %add.ptr324 = getelementptr i32, i32* %238, i64 73, !dbg !11414
  %239 = load i32, i32* %add.ptr324, align 4, !dbg !11414
  %and325 = and i32 %239, 16711680, !dbg !11414
  %shr326 = lshr i32 %and325, 8, !dbg !11414
  %or327 = or i32 %or323, %shr326, !dbg !11414
  %240 = load i8*, i8** %in, align 8, !dbg !11414
  %241 = bitcast i8* %240 to i32*, !dbg !11414
  %add.ptr328 = getelementptr i32, i32* %241, i64 73, !dbg !11414
  %242 = load i32, i32* %add.ptr328, align 4, !dbg !11414
  %and329 = and i32 %242, -16777216, !dbg !11414
  %shr330 = lshr i32 %and329, 24, !dbg !11414
  %or331 = or i32 %or327, %shr330, !dbg !11414
  br label %cond.end335, !dbg !11414

cond.false332:                                    ; preds = %cond.false314
  %243 = load i8*, i8** %in, align 8, !dbg !11414
  %244 = bitcast i8* %243 to i32*, !dbg !11414
  %add.ptr333 = getelementptr i32, i32* %244, i64 73, !dbg !11414
  %245 = load i32, i32* %add.ptr333, align 4, !dbg !11414
  %call334 = call i32 @__fswab32(i32 %245) #8, !dbg !11414
  br label %cond.end335, !dbg !11414

cond.end335:                                      ; preds = %cond.false332, %cond.true316
  %cond336 = phi i32 [ %or331, %cond.true316 ], [ %call334, %cond.false332 ], !dbg !11414
  %and337 = and i32 %cond336, -65536, !dbg !11414
  %246 = load i32, i32* %_v168, align 4, !dbg !11414
  %and338 = and i32 %246, 65535, !dbg !11414
  %shl339 = shl i32 %and338, 0, !dbg !11414
  %or340 = or i32 %and337, %shl339, !dbg !11414
  %call341 = call i32 @__fswab32(i32 %or340) #8, !dbg !11414
  br label %cond.end342, !dbg !11414

cond.end342:                                      ; preds = %cond.end335, %cond.end305
  %cond343 = phi i32 [ %or313, %cond.end305 ], [ %call341, %cond.end335 ], !dbg !11414
  %247 = load i8*, i8** %in, align 8, !dbg !11414
  %248 = bitcast i8* %247 to i32*, !dbg !11414
  %add.ptr344 = getelementptr i32, i32* %248, i64 73, !dbg !11414
  store i32 %cond343, i32* %add.ptr344, align 4, !dbg !11414
  br label %do.end345, !dbg !11414

do.end345:                                        ; preds = %cond.end342
  br label %do.body346, !dbg !11417

do.body346:                                       ; preds = %do.end345
  call void @llvm.dbg.declare(metadata i32* %_v347, metadata !11418, metadata !DIExpression()), !dbg !11420
  store i32 1877, i32* %_v347, align 4, !dbg !11420
  br label %do.body348, !dbg !11420

do.body348:                                       ; preds = %do.body346
  br label %do.end349, !dbg !11421

do.end349:                                        ; preds = %do.body348
  %249 = load i8*, i8** %in, align 8, !dbg !11420
  %250 = bitcast i8* %249 to i32*, !dbg !11420
  %add.ptr350 = getelementptr i32, i32* %250, i64 0, !dbg !11420
  %251 = load i32, i32* %add.ptr350, align 4, !dbg !11420
  %252 = call i1 @llvm.is.constant.i32(i32 %251), !dbg !11420
  br i1 %252, label %cond.true351, label %cond.false367, !dbg !11420

cond.true351:                                     ; preds = %do.end349
  %253 = load i8*, i8** %in, align 8, !dbg !11420
  %254 = bitcast i8* %253 to i32*, !dbg !11420
  %add.ptr352 = getelementptr i32, i32* %254, i64 0, !dbg !11420
  %255 = load i32, i32* %add.ptr352, align 4, !dbg !11420
  %and353 = and i32 %255, 255, !dbg !11420
  %shl354 = shl i32 %and353, 24, !dbg !11420
  %256 = load i8*, i8** %in, align 8, !dbg !11420
  %257 = bitcast i8* %256 to i32*, !dbg !11420
  %add.ptr355 = getelementptr i32, i32* %257, i64 0, !dbg !11420
  %258 = load i32, i32* %add.ptr355, align 4, !dbg !11420
  %and356 = and i32 %258, 65280, !dbg !11420
  %shl357 = shl i32 %and356, 8, !dbg !11420
  %or358 = or i32 %shl354, %shl357, !dbg !11420
  %259 = load i8*, i8** %in, align 8, !dbg !11420
  %260 = bitcast i8* %259 to i32*, !dbg !11420
  %add.ptr359 = getelementptr i32, i32* %260, i64 0, !dbg !11420
  %261 = load i32, i32* %add.ptr359, align 4, !dbg !11420
  %and360 = and i32 %261, 16711680, !dbg !11420
  %shr361 = lshr i32 %and360, 8, !dbg !11420
  %or362 = or i32 %or358, %shr361, !dbg !11420
  %262 = load i8*, i8** %in, align 8, !dbg !11420
  %263 = bitcast i8* %262 to i32*, !dbg !11420
  %add.ptr363 = getelementptr i32, i32* %263, i64 0, !dbg !11420
  %264 = load i32, i32* %add.ptr363, align 4, !dbg !11420
  %and364 = and i32 %264, -16777216, !dbg !11420
  %shr365 = lshr i32 %and364, 24, !dbg !11420
  %or366 = or i32 %or362, %shr365, !dbg !11420
  br label %cond.end370, !dbg !11420

cond.false367:                                    ; preds = %do.end349
  %265 = load i8*, i8** %in, align 8, !dbg !11420
  %266 = bitcast i8* %265 to i32*, !dbg !11420
  %add.ptr368 = getelementptr i32, i32* %266, i64 0, !dbg !11420
  %267 = load i32, i32* %add.ptr368, align 4, !dbg !11420
  %call369 = call i32 @__fswab32(i32 %267) #8, !dbg !11420
  br label %cond.end370, !dbg !11420

cond.end370:                                      ; preds = %cond.false367, %cond.true351
  %cond371 = phi i32 [ %or366, %cond.true351 ], [ %call369, %cond.false367 ], !dbg !11420
  %and372 = and i32 %cond371, 65535, !dbg !11420
  %268 = load i32, i32* %_v347, align 4, !dbg !11420
  %and373 = and i32 %268, 65535, !dbg !11420
  %shl374 = shl i32 %and373, 16, !dbg !11420
  %or375 = or i32 %and372, %shl374, !dbg !11420
  %269 = call i1 @llvm.is.constant.i32(i32 %or375), !dbg !11420
  br i1 %269, label %cond.true376, label %cond.false492, !dbg !11420

cond.true376:                                     ; preds = %cond.end370
  %270 = load i8*, i8** %in, align 8, !dbg !11420
  %271 = bitcast i8* %270 to i32*, !dbg !11420
  %add.ptr377 = getelementptr i32, i32* %271, i64 0, !dbg !11420
  %272 = load i32, i32* %add.ptr377, align 4, !dbg !11420
  %273 = call i1 @llvm.is.constant.i32(i32 %272), !dbg !11420
  br i1 %273, label %cond.true378, label %cond.false394, !dbg !11420

cond.true378:                                     ; preds = %cond.true376
  %274 = load i8*, i8** %in, align 8, !dbg !11420
  %275 = bitcast i8* %274 to i32*, !dbg !11420
  %add.ptr379 = getelementptr i32, i32* %275, i64 0, !dbg !11420
  %276 = load i32, i32* %add.ptr379, align 4, !dbg !11420
  %and380 = and i32 %276, 255, !dbg !11420
  %shl381 = shl i32 %and380, 24, !dbg !11420
  %277 = load i8*, i8** %in, align 8, !dbg !11420
  %278 = bitcast i8* %277 to i32*, !dbg !11420
  %add.ptr382 = getelementptr i32, i32* %278, i64 0, !dbg !11420
  %279 = load i32, i32* %add.ptr382, align 4, !dbg !11420
  %and383 = and i32 %279, 65280, !dbg !11420
  %shl384 = shl i32 %and383, 8, !dbg !11420
  %or385 = or i32 %shl381, %shl384, !dbg !11420
  %280 = load i8*, i8** %in, align 8, !dbg !11420
  %281 = bitcast i8* %280 to i32*, !dbg !11420
  %add.ptr386 = getelementptr i32, i32* %281, i64 0, !dbg !11420
  %282 = load i32, i32* %add.ptr386, align 4, !dbg !11420
  %and387 = and i32 %282, 16711680, !dbg !11420
  %shr388 = lshr i32 %and387, 8, !dbg !11420
  %or389 = or i32 %or385, %shr388, !dbg !11420
  %283 = load i8*, i8** %in, align 8, !dbg !11420
  %284 = bitcast i8* %283 to i32*, !dbg !11420
  %add.ptr390 = getelementptr i32, i32* %284, i64 0, !dbg !11420
  %285 = load i32, i32* %add.ptr390, align 4, !dbg !11420
  %and391 = and i32 %285, -16777216, !dbg !11420
  %shr392 = lshr i32 %and391, 24, !dbg !11420
  %or393 = or i32 %or389, %shr392, !dbg !11420
  br label %cond.end397, !dbg !11420

cond.false394:                                    ; preds = %cond.true376
  %286 = load i8*, i8** %in, align 8, !dbg !11420
  %287 = bitcast i8* %286 to i32*, !dbg !11420
  %add.ptr395 = getelementptr i32, i32* %287, i64 0, !dbg !11420
  %288 = load i32, i32* %add.ptr395, align 4, !dbg !11420
  %call396 = call i32 @__fswab32(i32 %288) #8, !dbg !11420
  br label %cond.end397, !dbg !11420

cond.end397:                                      ; preds = %cond.false394, %cond.true378
  %cond398 = phi i32 [ %or393, %cond.true378 ], [ %call396, %cond.false394 ], !dbg !11420
  %and399 = and i32 %cond398, 65535, !dbg !11420
  %289 = load i32, i32* %_v347, align 4, !dbg !11420
  %and400 = and i32 %289, 65535, !dbg !11420
  %shl401 = shl i32 %and400, 16, !dbg !11420
  %or402 = or i32 %and399, %shl401, !dbg !11420
  %and403 = and i32 %or402, 255, !dbg !11420
  %shl404 = shl i32 %and403, 24, !dbg !11420
  %290 = load i8*, i8** %in, align 8, !dbg !11420
  %291 = bitcast i8* %290 to i32*, !dbg !11420
  %add.ptr405 = getelementptr i32, i32* %291, i64 0, !dbg !11420
  %292 = load i32, i32* %add.ptr405, align 4, !dbg !11420
  %293 = call i1 @llvm.is.constant.i32(i32 %292), !dbg !11420
  br i1 %293, label %cond.true406, label %cond.false422, !dbg !11420

cond.true406:                                     ; preds = %cond.end397
  %294 = load i8*, i8** %in, align 8, !dbg !11420
  %295 = bitcast i8* %294 to i32*, !dbg !11420
  %add.ptr407 = getelementptr i32, i32* %295, i64 0, !dbg !11420
  %296 = load i32, i32* %add.ptr407, align 4, !dbg !11420
  %and408 = and i32 %296, 255, !dbg !11420
  %shl409 = shl i32 %and408, 24, !dbg !11420
  %297 = load i8*, i8** %in, align 8, !dbg !11420
  %298 = bitcast i8* %297 to i32*, !dbg !11420
  %add.ptr410 = getelementptr i32, i32* %298, i64 0, !dbg !11420
  %299 = load i32, i32* %add.ptr410, align 4, !dbg !11420
  %and411 = and i32 %299, 65280, !dbg !11420
  %shl412 = shl i32 %and411, 8, !dbg !11420
  %or413 = or i32 %shl409, %shl412, !dbg !11420
  %300 = load i8*, i8** %in, align 8, !dbg !11420
  %301 = bitcast i8* %300 to i32*, !dbg !11420
  %add.ptr414 = getelementptr i32, i32* %301, i64 0, !dbg !11420
  %302 = load i32, i32* %add.ptr414, align 4, !dbg !11420
  %and415 = and i32 %302, 16711680, !dbg !11420
  %shr416 = lshr i32 %and415, 8, !dbg !11420
  %or417 = or i32 %or413, %shr416, !dbg !11420
  %303 = load i8*, i8** %in, align 8, !dbg !11420
  %304 = bitcast i8* %303 to i32*, !dbg !11420
  %add.ptr418 = getelementptr i32, i32* %304, i64 0, !dbg !11420
  %305 = load i32, i32* %add.ptr418, align 4, !dbg !11420
  %and419 = and i32 %305, -16777216, !dbg !11420
  %shr420 = lshr i32 %and419, 24, !dbg !11420
  %or421 = or i32 %or417, %shr420, !dbg !11420
  br label %cond.end425, !dbg !11420

cond.false422:                                    ; preds = %cond.end397
  %306 = load i8*, i8** %in, align 8, !dbg !11420
  %307 = bitcast i8* %306 to i32*, !dbg !11420
  %add.ptr423 = getelementptr i32, i32* %307, i64 0, !dbg !11420
  %308 = load i32, i32* %add.ptr423, align 4, !dbg !11420
  %call424 = call i32 @__fswab32(i32 %308) #8, !dbg !11420
  br label %cond.end425, !dbg !11420

cond.end425:                                      ; preds = %cond.false422, %cond.true406
  %cond426 = phi i32 [ %or421, %cond.true406 ], [ %call424, %cond.false422 ], !dbg !11420
  %and427 = and i32 %cond426, 65535, !dbg !11420
  %309 = load i32, i32* %_v347, align 4, !dbg !11420
  %and428 = and i32 %309, 65535, !dbg !11420
  %shl429 = shl i32 %and428, 16, !dbg !11420
  %or430 = or i32 %and427, %shl429, !dbg !11420
  %and431 = and i32 %or430, 65280, !dbg !11420
  %shl432 = shl i32 %and431, 8, !dbg !11420
  %or433 = or i32 %shl404, %shl432, !dbg !11420
  %310 = load i8*, i8** %in, align 8, !dbg !11420
  %311 = bitcast i8* %310 to i32*, !dbg !11420
  %add.ptr434 = getelementptr i32, i32* %311, i64 0, !dbg !11420
  %312 = load i32, i32* %add.ptr434, align 4, !dbg !11420
  %313 = call i1 @llvm.is.constant.i32(i32 %312), !dbg !11420
  br i1 %313, label %cond.true435, label %cond.false451, !dbg !11420

cond.true435:                                     ; preds = %cond.end425
  %314 = load i8*, i8** %in, align 8, !dbg !11420
  %315 = bitcast i8* %314 to i32*, !dbg !11420
  %add.ptr436 = getelementptr i32, i32* %315, i64 0, !dbg !11420
  %316 = load i32, i32* %add.ptr436, align 4, !dbg !11420
  %and437 = and i32 %316, 255, !dbg !11420
  %shl438 = shl i32 %and437, 24, !dbg !11420
  %317 = load i8*, i8** %in, align 8, !dbg !11420
  %318 = bitcast i8* %317 to i32*, !dbg !11420
  %add.ptr439 = getelementptr i32, i32* %318, i64 0, !dbg !11420
  %319 = load i32, i32* %add.ptr439, align 4, !dbg !11420
  %and440 = and i32 %319, 65280, !dbg !11420
  %shl441 = shl i32 %and440, 8, !dbg !11420
  %or442 = or i32 %shl438, %shl441, !dbg !11420
  %320 = load i8*, i8** %in, align 8, !dbg !11420
  %321 = bitcast i8* %320 to i32*, !dbg !11420
  %add.ptr443 = getelementptr i32, i32* %321, i64 0, !dbg !11420
  %322 = load i32, i32* %add.ptr443, align 4, !dbg !11420
  %and444 = and i32 %322, 16711680, !dbg !11420
  %shr445 = lshr i32 %and444, 8, !dbg !11420
  %or446 = or i32 %or442, %shr445, !dbg !11420
  %323 = load i8*, i8** %in, align 8, !dbg !11420
  %324 = bitcast i8* %323 to i32*, !dbg !11420
  %add.ptr447 = getelementptr i32, i32* %324, i64 0, !dbg !11420
  %325 = load i32, i32* %add.ptr447, align 4, !dbg !11420
  %and448 = and i32 %325, -16777216, !dbg !11420
  %shr449 = lshr i32 %and448, 24, !dbg !11420
  %or450 = or i32 %or446, %shr449, !dbg !11420
  br label %cond.end454, !dbg !11420

cond.false451:                                    ; preds = %cond.end425
  %326 = load i8*, i8** %in, align 8, !dbg !11420
  %327 = bitcast i8* %326 to i32*, !dbg !11420
  %add.ptr452 = getelementptr i32, i32* %327, i64 0, !dbg !11420
  %328 = load i32, i32* %add.ptr452, align 4, !dbg !11420
  %call453 = call i32 @__fswab32(i32 %328) #8, !dbg !11420
  br label %cond.end454, !dbg !11420

cond.end454:                                      ; preds = %cond.false451, %cond.true435
  %cond455 = phi i32 [ %or450, %cond.true435 ], [ %call453, %cond.false451 ], !dbg !11420
  %and456 = and i32 %cond455, 65535, !dbg !11420
  %329 = load i32, i32* %_v347, align 4, !dbg !11420
  %and457 = and i32 %329, 65535, !dbg !11420
  %shl458 = shl i32 %and457, 16, !dbg !11420
  %or459 = or i32 %and456, %shl458, !dbg !11420
  %and460 = and i32 %or459, 16711680, !dbg !11420
  %shr461 = lshr i32 %and460, 8, !dbg !11420
  %or462 = or i32 %or433, %shr461, !dbg !11420
  %330 = load i8*, i8** %in, align 8, !dbg !11420
  %331 = bitcast i8* %330 to i32*, !dbg !11420
  %add.ptr463 = getelementptr i32, i32* %331, i64 0, !dbg !11420
  %332 = load i32, i32* %add.ptr463, align 4, !dbg !11420
  %333 = call i1 @llvm.is.constant.i32(i32 %332), !dbg !11420
  br i1 %333, label %cond.true464, label %cond.false480, !dbg !11420

cond.true464:                                     ; preds = %cond.end454
  %334 = load i8*, i8** %in, align 8, !dbg !11420
  %335 = bitcast i8* %334 to i32*, !dbg !11420
  %add.ptr465 = getelementptr i32, i32* %335, i64 0, !dbg !11420
  %336 = load i32, i32* %add.ptr465, align 4, !dbg !11420
  %and466 = and i32 %336, 255, !dbg !11420
  %shl467 = shl i32 %and466, 24, !dbg !11420
  %337 = load i8*, i8** %in, align 8, !dbg !11420
  %338 = bitcast i8* %337 to i32*, !dbg !11420
  %add.ptr468 = getelementptr i32, i32* %338, i64 0, !dbg !11420
  %339 = load i32, i32* %add.ptr468, align 4, !dbg !11420
  %and469 = and i32 %339, 65280, !dbg !11420
  %shl470 = shl i32 %and469, 8, !dbg !11420
  %or471 = or i32 %shl467, %shl470, !dbg !11420
  %340 = load i8*, i8** %in, align 8, !dbg !11420
  %341 = bitcast i8* %340 to i32*, !dbg !11420
  %add.ptr472 = getelementptr i32, i32* %341, i64 0, !dbg !11420
  %342 = load i32, i32* %add.ptr472, align 4, !dbg !11420
  %and473 = and i32 %342, 16711680, !dbg !11420
  %shr474 = lshr i32 %and473, 8, !dbg !11420
  %or475 = or i32 %or471, %shr474, !dbg !11420
  %343 = load i8*, i8** %in, align 8, !dbg !11420
  %344 = bitcast i8* %343 to i32*, !dbg !11420
  %add.ptr476 = getelementptr i32, i32* %344, i64 0, !dbg !11420
  %345 = load i32, i32* %add.ptr476, align 4, !dbg !11420
  %and477 = and i32 %345, -16777216, !dbg !11420
  %shr478 = lshr i32 %and477, 24, !dbg !11420
  %or479 = or i32 %or475, %shr478, !dbg !11420
  br label %cond.end483, !dbg !11420

cond.false480:                                    ; preds = %cond.end454
  %346 = load i8*, i8** %in, align 8, !dbg !11420
  %347 = bitcast i8* %346 to i32*, !dbg !11420
  %add.ptr481 = getelementptr i32, i32* %347, i64 0, !dbg !11420
  %348 = load i32, i32* %add.ptr481, align 4, !dbg !11420
  %call482 = call i32 @__fswab32(i32 %348) #8, !dbg !11420
  br label %cond.end483, !dbg !11420

cond.end483:                                      ; preds = %cond.false480, %cond.true464
  %cond484 = phi i32 [ %or479, %cond.true464 ], [ %call482, %cond.false480 ], !dbg !11420
  %and485 = and i32 %cond484, 65535, !dbg !11420
  %349 = load i32, i32* %_v347, align 4, !dbg !11420
  %and486 = and i32 %349, 65535, !dbg !11420
  %shl487 = shl i32 %and486, 16, !dbg !11420
  %or488 = or i32 %and485, %shl487, !dbg !11420
  %and489 = and i32 %or488, -16777216, !dbg !11420
  %shr490 = lshr i32 %and489, 24, !dbg !11420
  %or491 = or i32 %or462, %shr490, !dbg !11420
  br label %cond.end520, !dbg !11420

cond.false492:                                    ; preds = %cond.end370
  %350 = load i8*, i8** %in, align 8, !dbg !11420
  %351 = bitcast i8* %350 to i32*, !dbg !11420
  %add.ptr493 = getelementptr i32, i32* %351, i64 0, !dbg !11420
  %352 = load i32, i32* %add.ptr493, align 4, !dbg !11420
  %353 = call i1 @llvm.is.constant.i32(i32 %352), !dbg !11420
  br i1 %353, label %cond.true494, label %cond.false510, !dbg !11420

cond.true494:                                     ; preds = %cond.false492
  %354 = load i8*, i8** %in, align 8, !dbg !11420
  %355 = bitcast i8* %354 to i32*, !dbg !11420
  %add.ptr495 = getelementptr i32, i32* %355, i64 0, !dbg !11420
  %356 = load i32, i32* %add.ptr495, align 4, !dbg !11420
  %and496 = and i32 %356, 255, !dbg !11420
  %shl497 = shl i32 %and496, 24, !dbg !11420
  %357 = load i8*, i8** %in, align 8, !dbg !11420
  %358 = bitcast i8* %357 to i32*, !dbg !11420
  %add.ptr498 = getelementptr i32, i32* %358, i64 0, !dbg !11420
  %359 = load i32, i32* %add.ptr498, align 4, !dbg !11420
  %and499 = and i32 %359, 65280, !dbg !11420
  %shl500 = shl i32 %and499, 8, !dbg !11420
  %or501 = or i32 %shl497, %shl500, !dbg !11420
  %360 = load i8*, i8** %in, align 8, !dbg !11420
  %361 = bitcast i8* %360 to i32*, !dbg !11420
  %add.ptr502 = getelementptr i32, i32* %361, i64 0, !dbg !11420
  %362 = load i32, i32* %add.ptr502, align 4, !dbg !11420
  %and503 = and i32 %362, 16711680, !dbg !11420
  %shr504 = lshr i32 %and503, 8, !dbg !11420
  %or505 = or i32 %or501, %shr504, !dbg !11420
  %363 = load i8*, i8** %in, align 8, !dbg !11420
  %364 = bitcast i8* %363 to i32*, !dbg !11420
  %add.ptr506 = getelementptr i32, i32* %364, i64 0, !dbg !11420
  %365 = load i32, i32* %add.ptr506, align 4, !dbg !11420
  %and507 = and i32 %365, -16777216, !dbg !11420
  %shr508 = lshr i32 %and507, 24, !dbg !11420
  %or509 = or i32 %or505, %shr508, !dbg !11420
  br label %cond.end513, !dbg !11420

cond.false510:                                    ; preds = %cond.false492
  %366 = load i8*, i8** %in, align 8, !dbg !11420
  %367 = bitcast i8* %366 to i32*, !dbg !11420
  %add.ptr511 = getelementptr i32, i32* %367, i64 0, !dbg !11420
  %368 = load i32, i32* %add.ptr511, align 4, !dbg !11420
  %call512 = call i32 @__fswab32(i32 %368) #8, !dbg !11420
  br label %cond.end513, !dbg !11420

cond.end513:                                      ; preds = %cond.false510, %cond.true494
  %cond514 = phi i32 [ %or509, %cond.true494 ], [ %call512, %cond.false510 ], !dbg !11420
  %and515 = and i32 %cond514, 65535, !dbg !11420
  %369 = load i32, i32* %_v347, align 4, !dbg !11420
  %and516 = and i32 %369, 65535, !dbg !11420
  %shl517 = shl i32 %and516, 16, !dbg !11420
  %or518 = or i32 %and515, %shl517, !dbg !11420
  %call519 = call i32 @__fswab32(i32 %or518) #8, !dbg !11420
  br label %cond.end520, !dbg !11420

cond.end520:                                      ; preds = %cond.end513, %cond.end483
  %cond521 = phi i32 [ %or491, %cond.end483 ], [ %call519, %cond.end513 ], !dbg !11420
  %370 = load i8*, i8** %in, align 8, !dbg !11420
  %371 = bitcast i8* %370 to i32*, !dbg !11420
  %add.ptr522 = getelementptr i32, i32* %371, i64 0, !dbg !11420
  store i32 %cond521, i32* %add.ptr522, align 4, !dbg !11420
  br label %do.end523, !dbg !11420

do.end523:                                        ; preds = %cond.end520
  call void @llvm.dbg.declare(metadata [4 x i32]* %_out, metadata !11423, metadata !DIExpression()), !dbg !11425
  %372 = bitcast [4 x i32]* %_out to i8*, !dbg !11425
  call void @llvm.memset.p0i8.i64(i8* align 16 %372, i8 0, i64 16, i1 false), !dbg !11425
  %373 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %mdev.addr, align 8, !dbg !11426
  %374 = load i8*, i8** %in, align 8, !dbg !11426
  %arraydecay = getelementptr inbounds [4 x i32], [4 x i32]* %_out, i64 0, i64 0, !dbg !11426
  %375 = bitcast i32* %arraydecay to i8*, !dbg !11426
  %call525 = call i32 @mlx5_cmd_exec(%struct.mlx5_core_dev* %373, i8* %374, i32 512, i8* %375, i32 16) #9, !dbg !11426
  store i32 %call525, i32* %tmp524, align 4, !dbg !11425
  %376 = load i32, i32* %tmp524, align 4, !dbg !11426
  store i32 %376, i32* %tmp, align 4, !dbg !11425
  %377 = load i32, i32* %tmp, align 4, !dbg !11425
  store i32 %377, i32* %err, align 4, !dbg !11428
  %378 = load i8*, i8** %in, align 8, !dbg !11429
  call void @kvfree(i8* %378) #9, !dbg !11430
  %379 = load i32, i32* %err, align 4, !dbg !11431
  store i32 %379, i32* %retval, align 4, !dbg !11432
  br label %return, !dbg !11432

return:                                           ; preds = %do.end523, %if.then
  %380 = load i32, i32* %retval, align 4, !dbg !11433
  ret i32 %380, !dbg !11433
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @mlx5_query_nic_vport_mac_list(%struct.mlx5_core_dev* %dev, i16 zeroext %vport, i32 %list_type, [6 x i8]* %addr_list, i32* %list_size) #0 !dbg !11434 {
entry:
  %pscr_ret__.i = alloca %struct.task_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.task_struct** %pscr_ret__.i, metadata !11439, metadata !DIExpression()), !dbg !11445
  %__vpp_verify.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %__vpp_verify.i, metadata !11449, metadata !DIExpression()), !dbg !11451
  %pfo_val__.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %pfo_val__.i, metadata !11452, metadata !DIExpression()), !dbg !11454
  %tmp.i = alloca %struct.task_struct*, align 8
  %tmp1.i = alloca %struct.task_struct*, align 8
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.mlx5_core_dev*, align 8
  %vport.addr = alloca i16, align 2
  %list_type.addr = alloca i32, align 4
  %addr_list.addr = alloca [6 x i8]*, align 8
  %list_size.addr = alloca i32*, align 8
  %in = alloca [4 x i32], align 16
  %nic_vport_ctx = alloca i8*, align 8
  %max_list_size = alloca i32, align 4
  %req_list_size = alloca i32, align 4
  %out_sz = alloca i32, align 4
  %out = alloca i8*, align 8
  %err = alloca i32, align 4
  %i = alloca i32, align 4
  %_v = alloca i32, align 4
  %_v309 = alloca i32, align 4
  %_v524 = alloca i32, align 4
  %_v740 = alloca i32, align 4
  %mac_addr = alloca i8*, align 8
  store %struct.mlx5_core_dev* %dev, %struct.mlx5_core_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_core_dev** %dev.addr, metadata !11455, metadata !DIExpression()), !dbg !11456
  store i16 %vport, i16* %vport.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %vport.addr, metadata !11457, metadata !DIExpression()), !dbg !11458
  store i32 %list_type, i32* %list_type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %list_type.addr, metadata !11459, metadata !DIExpression()), !dbg !11460
  store [6 x i8]* %addr_list, [6 x i8]** %addr_list.addr, align 8
  call void @llvm.dbg.declare(metadata [6 x i8]** %addr_list.addr, metadata !11461, metadata !DIExpression()), !dbg !11462
  store i32* %list_size, i32** %list_size.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %list_size.addr, metadata !11463, metadata !DIExpression()), !dbg !11464
  call void @llvm.dbg.declare(metadata [4 x i32]* %in, metadata !11465, metadata !DIExpression()), !dbg !11466
  %0 = bitcast [4 x i32]* %in to i8*, !dbg !11466
  call void @llvm.memset.p0i8.i64(i8* align 16 %0, i8 0, i64 16, i1 false), !dbg !11466
  call void @llvm.dbg.declare(metadata i8** %nic_vport_ctx, metadata !11467, metadata !DIExpression()), !dbg !11468
  call void @llvm.dbg.declare(metadata i32* %max_list_size, metadata !11469, metadata !DIExpression()), !dbg !11470
  call void @llvm.dbg.declare(metadata i32* %req_list_size, metadata !11471, metadata !DIExpression()), !dbg !11472
  call void @llvm.dbg.declare(metadata i32* %out_sz, metadata !11473, metadata !DIExpression()), !dbg !11474
  call void @llvm.dbg.declare(metadata i8** %out, metadata !11475, metadata !DIExpression()), !dbg !11476
  call void @llvm.dbg.declare(metadata i32* %err, metadata !11477, metadata !DIExpression()), !dbg !11478
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11479, metadata !DIExpression()), !dbg !11480
  %1 = load i32*, i32** %list_size.addr, align 8, !dbg !11481
  %2 = load i32, i32* %1, align 4, !dbg !11482
  store i32 %2, i32* %req_list_size, align 4, !dbg !11483
  %3 = load i32, i32* %list_type.addr, align 4, !dbg !11484
  %cmp = icmp eq i32 %3, 0, !dbg !11485
  br i1 %cmp, label %cond.true, label %cond.false37, !dbg !11484

cond.true:                                        ; preds = %entry
  %4 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !11486
  %caps = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %4, i32 0, i32 9, !dbg !11486
  %hca_cur = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps, i32 0, i32 0, !dbg !11486
  %arrayidx = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur, i64 0, i64 0, !dbg !11486
  %arraydecay = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx, i64 0, i64 0, !dbg !11486
  %add.ptr = getelementptr i32, i32* %arraydecay, i64 31, !dbg !11486
  %5 = load i32, i32* %add.ptr, align 4, !dbg !11486
  %6 = call i1 @llvm.is.constant.i32(i32 %5), !dbg !11486
  br i1 %6, label %cond.true1, label %cond.false, !dbg !11486

cond.true1:                                       ; preds = %cond.true
  %7 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !11486
  %caps2 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %7, i32 0, i32 9, !dbg !11486
  %hca_cur3 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps2, i32 0, i32 0, !dbg !11486
  %arrayidx4 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur3, i64 0, i64 0, !dbg !11486
  %arraydecay5 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx4, i64 0, i64 0, !dbg !11486
  %add.ptr6 = getelementptr i32, i32* %arraydecay5, i64 31, !dbg !11486
  %8 = load i32, i32* %add.ptr6, align 4, !dbg !11486
  %and = and i32 %8, 255, !dbg !11486
  %shl = shl i32 %and, 24, !dbg !11486
  %9 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !11486
  %caps7 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %9, i32 0, i32 9, !dbg !11486
  %hca_cur8 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps7, i32 0, i32 0, !dbg !11486
  %arrayidx9 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur8, i64 0, i64 0, !dbg !11486
  %arraydecay10 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx9, i64 0, i64 0, !dbg !11486
  %add.ptr11 = getelementptr i32, i32* %arraydecay10, i64 31, !dbg !11486
  %10 = load i32, i32* %add.ptr11, align 4, !dbg !11486
  %and12 = and i32 %10, 65280, !dbg !11486
  %shl13 = shl i32 %and12, 8, !dbg !11486
  %or = or i32 %shl, %shl13, !dbg !11486
  %11 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !11486
  %caps14 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %11, i32 0, i32 9, !dbg !11486
  %hca_cur15 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps14, i32 0, i32 0, !dbg !11486
  %arrayidx16 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur15, i64 0, i64 0, !dbg !11486
  %arraydecay17 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx16, i64 0, i64 0, !dbg !11486
  %add.ptr18 = getelementptr i32, i32* %arraydecay17, i64 31, !dbg !11486
  %12 = load i32, i32* %add.ptr18, align 4, !dbg !11486
  %and19 = and i32 %12, 16711680, !dbg !11486
  %shr = lshr i32 %and19, 8, !dbg !11486
  %or20 = or i32 %or, %shr, !dbg !11486
  %13 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !11486
  %caps21 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %13, i32 0, i32 9, !dbg !11486
  %hca_cur22 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps21, i32 0, i32 0, !dbg !11486
  %arrayidx23 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur22, i64 0, i64 0, !dbg !11486
  %arraydecay24 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx23, i64 0, i64 0, !dbg !11486
  %add.ptr25 = getelementptr i32, i32* %arraydecay24, i64 31, !dbg !11486
  %14 = load i32, i32* %add.ptr25, align 4, !dbg !11486
  %and26 = and i32 %14, -16777216, !dbg !11486
  %shr27 = lshr i32 %and26, 24, !dbg !11486
  %or28 = or i32 %or20, %shr27, !dbg !11486
  br label %cond.end, !dbg !11486

cond.false:                                       ; preds = %cond.true
  %15 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !11486
  %caps29 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %15, i32 0, i32 9, !dbg !11486
  %hca_cur30 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps29, i32 0, i32 0, !dbg !11486
  %arrayidx31 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur30, i64 0, i64 0, !dbg !11486
  %arraydecay32 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx31, i64 0, i64 0, !dbg !11486
  %add.ptr33 = getelementptr i32, i32* %arraydecay32, i64 31, !dbg !11486
  %16 = load i32, i32* %add.ptr33, align 4, !dbg !11486
  %call = call i32 @__fswab32(i32 %16) #8, !dbg !11486
  br label %cond.end, !dbg !11486

cond.end:                                         ; preds = %cond.false, %cond.true1
  %cond = phi i32 [ %or28, %cond.true1 ], [ %call, %cond.false ], !dbg !11486
  %shr34 = lshr i32 %cond, 0, !dbg !11486
  %and35 = and i32 %shr34, 31, !dbg !11486
  %shl36 = shl i32 1, %and35, !dbg !11487
  br label %cond.end87, !dbg !11484

cond.false37:                                     ; preds = %entry
  %17 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !11488
  %caps38 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %17, i32 0, i32 9, !dbg !11488
  %hca_cur39 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps38, i32 0, i32 0, !dbg !11488
  %arrayidx40 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur39, i64 0, i64 0, !dbg !11488
  %arraydecay41 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx40, i64 0, i64 0, !dbg !11488
  %add.ptr42 = getelementptr i32, i32* %arraydecay41, i64 31, !dbg !11488
  %18 = load i32, i32* %add.ptr42, align 4, !dbg !11488
  %19 = call i1 @llvm.is.constant.i32(i32 %18), !dbg !11488
  br i1 %19, label %cond.true43, label %cond.false75, !dbg !11488

cond.true43:                                      ; preds = %cond.false37
  %20 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !11488
  %caps44 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %20, i32 0, i32 9, !dbg !11488
  %hca_cur45 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps44, i32 0, i32 0, !dbg !11488
  %arrayidx46 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur45, i64 0, i64 0, !dbg !11488
  %arraydecay47 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx46, i64 0, i64 0, !dbg !11488
  %add.ptr48 = getelementptr i32, i32* %arraydecay47, i64 31, !dbg !11488
  %21 = load i32, i32* %add.ptr48, align 4, !dbg !11488
  %and49 = and i32 %21, 255, !dbg !11488
  %shl50 = shl i32 %and49, 24, !dbg !11488
  %22 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !11488
  %caps51 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %22, i32 0, i32 9, !dbg !11488
  %hca_cur52 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps51, i32 0, i32 0, !dbg !11488
  %arrayidx53 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur52, i64 0, i64 0, !dbg !11488
  %arraydecay54 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx53, i64 0, i64 0, !dbg !11488
  %add.ptr55 = getelementptr i32, i32* %arraydecay54, i64 31, !dbg !11488
  %23 = load i32, i32* %add.ptr55, align 4, !dbg !11488
  %and56 = and i32 %23, 65280, !dbg !11488
  %shl57 = shl i32 %and56, 8, !dbg !11488
  %or58 = or i32 %shl50, %shl57, !dbg !11488
  %24 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !11488
  %caps59 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %24, i32 0, i32 9, !dbg !11488
  %hca_cur60 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps59, i32 0, i32 0, !dbg !11488
  %arrayidx61 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur60, i64 0, i64 0, !dbg !11488
  %arraydecay62 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx61, i64 0, i64 0, !dbg !11488
  %add.ptr63 = getelementptr i32, i32* %arraydecay62, i64 31, !dbg !11488
  %25 = load i32, i32* %add.ptr63, align 4, !dbg !11488
  %and64 = and i32 %25, 16711680, !dbg !11488
  %shr65 = lshr i32 %and64, 8, !dbg !11488
  %or66 = or i32 %or58, %shr65, !dbg !11488
  %26 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !11488
  %caps67 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %26, i32 0, i32 9, !dbg !11488
  %hca_cur68 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps67, i32 0, i32 0, !dbg !11488
  %arrayidx69 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur68, i64 0, i64 0, !dbg !11488
  %arraydecay70 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx69, i64 0, i64 0, !dbg !11488
  %add.ptr71 = getelementptr i32, i32* %arraydecay70, i64 31, !dbg !11488
  %27 = load i32, i32* %add.ptr71, align 4, !dbg !11488
  %and72 = and i32 %27, -16777216, !dbg !11488
  %shr73 = lshr i32 %and72, 24, !dbg !11488
  %or74 = or i32 %or66, %shr73, !dbg !11488
  br label %cond.end82, !dbg !11488

cond.false75:                                     ; preds = %cond.false37
  %28 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !11488
  %caps76 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %28, i32 0, i32 9, !dbg !11488
  %hca_cur77 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps76, i32 0, i32 0, !dbg !11488
  %arrayidx78 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur77, i64 0, i64 0, !dbg !11488
  %arraydecay79 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx78, i64 0, i64 0, !dbg !11488
  %add.ptr80 = getelementptr i32, i32* %arraydecay79, i64 31, !dbg !11488
  %29 = load i32, i32* %add.ptr80, align 4, !dbg !11488
  %call81 = call i32 @__fswab32(i32 %29) #8, !dbg !11488
  br label %cond.end82, !dbg !11488

cond.end82:                                       ; preds = %cond.false75, %cond.true43
  %cond83 = phi i32 [ %or74, %cond.true43 ], [ %call81, %cond.false75 ], !dbg !11488
  %shr84 = lshr i32 %cond83, 8, !dbg !11488
  %and85 = and i32 %shr84, 31, !dbg !11488
  %shl86 = shl i32 1, %and85, !dbg !11489
  br label %cond.end87, !dbg !11484

cond.end87:                                       ; preds = %cond.end82, %cond.end
  %cond88 = phi i32 [ %shl36, %cond.end ], [ %shl86, %cond.end82 ], !dbg !11484
  store i32 %cond88, i32* %max_list_size, align 4, !dbg !11490
  %30 = load i32, i32* %req_list_size, align 4, !dbg !11491
  %31 = load i32, i32* %max_list_size, align 4, !dbg !11492
  %cmp89 = icmp sgt i32 %30, %31, !dbg !11493
  br i1 %cmp89, label %if.then, label %if.end, !dbg !11494

if.then:                                          ; preds = %cond.end87
  %32 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !11495
  %device = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %32, i32 0, i32 0, !dbg !11495
  %33 = load %struct.device*, %struct.device** %device, align 8, !dbg !11495
  store i8* null, i8** %__vpp_verify.i, align 8, !dbg !11451
  %34 = load i8*, i8** %__vpp_verify.i, align 8, !dbg !11451
  %35 = call i64 asm "movq ${1:P}, $0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #10, !dbg !11454, !srcloc !11496
  store i64 %35, i64* %pfo_val__.i, align 8, !dbg !11454
  %36 = load i64, i64* %pfo_val__.i, align 8, !dbg !11454
  %37 = inttoptr i64 %36 to %struct.task_struct*, !dbg !11454
  store %struct.task_struct* %37, %struct.task_struct** %tmp.i, align 8, !dbg !11454
  %38 = load %struct.task_struct*, %struct.task_struct** %tmp.i, align 8, !dbg !11454
  store %struct.task_struct* %38, %struct.task_struct** %pscr_ret__.i, align 8, !dbg !11445
  %39 = load %struct.task_struct*, %struct.task_struct** %pscr_ret__.i, align 8, !dbg !11445
  store %struct.task_struct* %39, %struct.task_struct** %tmp1.i, align 8, !dbg !11445
  %40 = load %struct.task_struct*, %struct.task_struct** %tmp1.i, align 8, !dbg !11445
  %pid = getelementptr inbounds %struct.task_struct, %struct.task_struct* %40, i32 0, i32 35, !dbg !11495
  %41 = load i32, i32* %pid, align 64, !dbg !11495
  %42 = load i32, i32* %req_list_size, align 4, !dbg !11495
  %43 = load i32, i32* %max_list_size, align 4, !dbg !11495
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %33, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @__func__.mlx5_query_nic_vport_mac_list, i64 0, i64 0), i32 275, i32 %41, i32 %42, i32 %43) #11, !dbg !11495
  %44 = load i32, i32* %max_list_size, align 4, !dbg !11497
  store i32 %44, i32* %req_list_size, align 4, !dbg !11498
  br label %if.end, !dbg !11499

if.end:                                           ; preds = %if.then, %cond.end87
  %45 = load i32, i32* %req_list_size, align 4, !dbg !11500
  %conv = sext i32 %45 to i64, !dbg !11500
  %mul = mul i64 %conv, 8, !dbg !11501
  %add = add i64 16, %mul, !dbg !11502
  %conv91 = trunc i64 %add to i32, !dbg !11503
  store i32 %conv91, i32* %out_sz, align 4, !dbg !11504
  %46 = load i32, i32* %out_sz, align 4, !dbg !11505
  %conv92 = sext i32 %46 to i64, !dbg !11505
  %call93 = call i8* @kzalloc(i64 %conv92, i32 3264) #9, !dbg !11506
  store i8* %call93, i8** %out, align 8, !dbg !11507
  %47 = load i8*, i8** %out, align 8, !dbg !11508
  %tobool = icmp ne i8* %47, null, !dbg !11508
  br i1 %tobool, label %if.end95, label %if.then94, !dbg !11510

if.then94:                                        ; preds = %if.end
  store i32 -12, i32* %retval, align 4, !dbg !11511
  br label %return, !dbg !11511

if.end95:                                         ; preds = %if.end
  br label %do.body, !dbg !11512

do.body:                                          ; preds = %if.end95
  call void @llvm.dbg.declare(metadata i32* %_v, metadata !11513, metadata !DIExpression()), !dbg !11515
  store i32 1876, i32* %_v, align 4, !dbg !11515
  br label %do.body96, !dbg !11515

do.body96:                                        ; preds = %do.body
  br label %do.end, !dbg !11516

do.end:                                           ; preds = %do.body96
  %arraydecay97 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11515
  %add.ptr98 = getelementptr i32, i32* %arraydecay97, i64 0, !dbg !11515
  %48 = load i32, i32* %add.ptr98, align 4, !dbg !11515
  %49 = call i1 @llvm.is.constant.i32(i32 %48), !dbg !11515
  br i1 %49, label %cond.true99, label %cond.false119, !dbg !11515

cond.true99:                                      ; preds = %do.end
  %arraydecay100 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11515
  %add.ptr101 = getelementptr i32, i32* %arraydecay100, i64 0, !dbg !11515
  %50 = load i32, i32* %add.ptr101, align 4, !dbg !11515
  %and102 = and i32 %50, 255, !dbg !11515
  %shl103 = shl i32 %and102, 24, !dbg !11515
  %arraydecay104 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11515
  %add.ptr105 = getelementptr i32, i32* %arraydecay104, i64 0, !dbg !11515
  %51 = load i32, i32* %add.ptr105, align 4, !dbg !11515
  %and106 = and i32 %51, 65280, !dbg !11515
  %shl107 = shl i32 %and106, 8, !dbg !11515
  %or108 = or i32 %shl103, %shl107, !dbg !11515
  %arraydecay109 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11515
  %add.ptr110 = getelementptr i32, i32* %arraydecay109, i64 0, !dbg !11515
  %52 = load i32, i32* %add.ptr110, align 4, !dbg !11515
  %and111 = and i32 %52, 16711680, !dbg !11515
  %shr112 = lshr i32 %and111, 8, !dbg !11515
  %or113 = or i32 %or108, %shr112, !dbg !11515
  %arraydecay114 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11515
  %add.ptr115 = getelementptr i32, i32* %arraydecay114, i64 0, !dbg !11515
  %53 = load i32, i32* %add.ptr115, align 4, !dbg !11515
  %and116 = and i32 %53, -16777216, !dbg !11515
  %shr117 = lshr i32 %and116, 24, !dbg !11515
  %or118 = or i32 %or113, %shr117, !dbg !11515
  br label %cond.end123, !dbg !11515

cond.false119:                                    ; preds = %do.end
  %arraydecay120 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11515
  %add.ptr121 = getelementptr i32, i32* %arraydecay120, i64 0, !dbg !11515
  %54 = load i32, i32* %add.ptr121, align 4, !dbg !11515
  %call122 = call i32 @__fswab32(i32 %54) #8, !dbg !11515
  br label %cond.end123, !dbg !11515

cond.end123:                                      ; preds = %cond.false119, %cond.true99
  %cond124 = phi i32 [ %or118, %cond.true99 ], [ %call122, %cond.false119 ], !dbg !11515
  %and125 = and i32 %cond124, 65535, !dbg !11515
  %55 = load i32, i32* %_v, align 4, !dbg !11515
  %and126 = and i32 %55, 65535, !dbg !11515
  %shl127 = shl i32 %and126, 16, !dbg !11515
  %or128 = or i32 %and125, %shl127, !dbg !11515
  %56 = call i1 @llvm.is.constant.i32(i32 %or128), !dbg !11515
  br i1 %56, label %cond.true129, label %cond.false269, !dbg !11515

cond.true129:                                     ; preds = %cond.end123
  %arraydecay130 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11515
  %add.ptr131 = getelementptr i32, i32* %arraydecay130, i64 0, !dbg !11515
  %57 = load i32, i32* %add.ptr131, align 4, !dbg !11515
  %58 = call i1 @llvm.is.constant.i32(i32 %57), !dbg !11515
  br i1 %58, label %cond.true132, label %cond.false152, !dbg !11515

cond.true132:                                     ; preds = %cond.true129
  %arraydecay133 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11515
  %add.ptr134 = getelementptr i32, i32* %arraydecay133, i64 0, !dbg !11515
  %59 = load i32, i32* %add.ptr134, align 4, !dbg !11515
  %and135 = and i32 %59, 255, !dbg !11515
  %shl136 = shl i32 %and135, 24, !dbg !11515
  %arraydecay137 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11515
  %add.ptr138 = getelementptr i32, i32* %arraydecay137, i64 0, !dbg !11515
  %60 = load i32, i32* %add.ptr138, align 4, !dbg !11515
  %and139 = and i32 %60, 65280, !dbg !11515
  %shl140 = shl i32 %and139, 8, !dbg !11515
  %or141 = or i32 %shl136, %shl140, !dbg !11515
  %arraydecay142 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11515
  %add.ptr143 = getelementptr i32, i32* %arraydecay142, i64 0, !dbg !11515
  %61 = load i32, i32* %add.ptr143, align 4, !dbg !11515
  %and144 = and i32 %61, 16711680, !dbg !11515
  %shr145 = lshr i32 %and144, 8, !dbg !11515
  %or146 = or i32 %or141, %shr145, !dbg !11515
  %arraydecay147 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11515
  %add.ptr148 = getelementptr i32, i32* %arraydecay147, i64 0, !dbg !11515
  %62 = load i32, i32* %add.ptr148, align 4, !dbg !11515
  %and149 = and i32 %62, -16777216, !dbg !11515
  %shr150 = lshr i32 %and149, 24, !dbg !11515
  %or151 = or i32 %or146, %shr150, !dbg !11515
  br label %cond.end156, !dbg !11515

cond.false152:                                    ; preds = %cond.true129
  %arraydecay153 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11515
  %add.ptr154 = getelementptr i32, i32* %arraydecay153, i64 0, !dbg !11515
  %63 = load i32, i32* %add.ptr154, align 4, !dbg !11515
  %call155 = call i32 @__fswab32(i32 %63) #8, !dbg !11515
  br label %cond.end156, !dbg !11515

cond.end156:                                      ; preds = %cond.false152, %cond.true132
  %cond157 = phi i32 [ %or151, %cond.true132 ], [ %call155, %cond.false152 ], !dbg !11515
  %and158 = and i32 %cond157, 65535, !dbg !11515
  %64 = load i32, i32* %_v, align 4, !dbg !11515
  %and159 = and i32 %64, 65535, !dbg !11515
  %shl160 = shl i32 %and159, 16, !dbg !11515
  %or161 = or i32 %and158, %shl160, !dbg !11515
  %and162 = and i32 %or161, 255, !dbg !11515
  %shl163 = shl i32 %and162, 24, !dbg !11515
  %arraydecay164 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11515
  %add.ptr165 = getelementptr i32, i32* %arraydecay164, i64 0, !dbg !11515
  %65 = load i32, i32* %add.ptr165, align 4, !dbg !11515
  %66 = call i1 @llvm.is.constant.i32(i32 %65), !dbg !11515
  br i1 %66, label %cond.true166, label %cond.false186, !dbg !11515

cond.true166:                                     ; preds = %cond.end156
  %arraydecay167 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11515
  %add.ptr168 = getelementptr i32, i32* %arraydecay167, i64 0, !dbg !11515
  %67 = load i32, i32* %add.ptr168, align 4, !dbg !11515
  %and169 = and i32 %67, 255, !dbg !11515
  %shl170 = shl i32 %and169, 24, !dbg !11515
  %arraydecay171 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11515
  %add.ptr172 = getelementptr i32, i32* %arraydecay171, i64 0, !dbg !11515
  %68 = load i32, i32* %add.ptr172, align 4, !dbg !11515
  %and173 = and i32 %68, 65280, !dbg !11515
  %shl174 = shl i32 %and173, 8, !dbg !11515
  %or175 = or i32 %shl170, %shl174, !dbg !11515
  %arraydecay176 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11515
  %add.ptr177 = getelementptr i32, i32* %arraydecay176, i64 0, !dbg !11515
  %69 = load i32, i32* %add.ptr177, align 4, !dbg !11515
  %and178 = and i32 %69, 16711680, !dbg !11515
  %shr179 = lshr i32 %and178, 8, !dbg !11515
  %or180 = or i32 %or175, %shr179, !dbg !11515
  %arraydecay181 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11515
  %add.ptr182 = getelementptr i32, i32* %arraydecay181, i64 0, !dbg !11515
  %70 = load i32, i32* %add.ptr182, align 4, !dbg !11515
  %and183 = and i32 %70, -16777216, !dbg !11515
  %shr184 = lshr i32 %and183, 24, !dbg !11515
  %or185 = or i32 %or180, %shr184, !dbg !11515
  br label %cond.end190, !dbg !11515

cond.false186:                                    ; preds = %cond.end156
  %arraydecay187 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11515
  %add.ptr188 = getelementptr i32, i32* %arraydecay187, i64 0, !dbg !11515
  %71 = load i32, i32* %add.ptr188, align 4, !dbg !11515
  %call189 = call i32 @__fswab32(i32 %71) #8, !dbg !11515
  br label %cond.end190, !dbg !11515

cond.end190:                                      ; preds = %cond.false186, %cond.true166
  %cond191 = phi i32 [ %or185, %cond.true166 ], [ %call189, %cond.false186 ], !dbg !11515
  %and192 = and i32 %cond191, 65535, !dbg !11515
  %72 = load i32, i32* %_v, align 4, !dbg !11515
  %and193 = and i32 %72, 65535, !dbg !11515
  %shl194 = shl i32 %and193, 16, !dbg !11515
  %or195 = or i32 %and192, %shl194, !dbg !11515
  %and196 = and i32 %or195, 65280, !dbg !11515
  %shl197 = shl i32 %and196, 8, !dbg !11515
  %or198 = or i32 %shl163, %shl197, !dbg !11515
  %arraydecay199 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11515
  %add.ptr200 = getelementptr i32, i32* %arraydecay199, i64 0, !dbg !11515
  %73 = load i32, i32* %add.ptr200, align 4, !dbg !11515
  %74 = call i1 @llvm.is.constant.i32(i32 %73), !dbg !11515
  br i1 %74, label %cond.true201, label %cond.false221, !dbg !11515

cond.true201:                                     ; preds = %cond.end190
  %arraydecay202 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11515
  %add.ptr203 = getelementptr i32, i32* %arraydecay202, i64 0, !dbg !11515
  %75 = load i32, i32* %add.ptr203, align 4, !dbg !11515
  %and204 = and i32 %75, 255, !dbg !11515
  %shl205 = shl i32 %and204, 24, !dbg !11515
  %arraydecay206 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11515
  %add.ptr207 = getelementptr i32, i32* %arraydecay206, i64 0, !dbg !11515
  %76 = load i32, i32* %add.ptr207, align 4, !dbg !11515
  %and208 = and i32 %76, 65280, !dbg !11515
  %shl209 = shl i32 %and208, 8, !dbg !11515
  %or210 = or i32 %shl205, %shl209, !dbg !11515
  %arraydecay211 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11515
  %add.ptr212 = getelementptr i32, i32* %arraydecay211, i64 0, !dbg !11515
  %77 = load i32, i32* %add.ptr212, align 4, !dbg !11515
  %and213 = and i32 %77, 16711680, !dbg !11515
  %shr214 = lshr i32 %and213, 8, !dbg !11515
  %or215 = or i32 %or210, %shr214, !dbg !11515
  %arraydecay216 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11515
  %add.ptr217 = getelementptr i32, i32* %arraydecay216, i64 0, !dbg !11515
  %78 = load i32, i32* %add.ptr217, align 4, !dbg !11515
  %and218 = and i32 %78, -16777216, !dbg !11515
  %shr219 = lshr i32 %and218, 24, !dbg !11515
  %or220 = or i32 %or215, %shr219, !dbg !11515
  br label %cond.end225, !dbg !11515

cond.false221:                                    ; preds = %cond.end190
  %arraydecay222 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11515
  %add.ptr223 = getelementptr i32, i32* %arraydecay222, i64 0, !dbg !11515
  %79 = load i32, i32* %add.ptr223, align 4, !dbg !11515
  %call224 = call i32 @__fswab32(i32 %79) #8, !dbg !11515
  br label %cond.end225, !dbg !11515

cond.end225:                                      ; preds = %cond.false221, %cond.true201
  %cond226 = phi i32 [ %or220, %cond.true201 ], [ %call224, %cond.false221 ], !dbg !11515
  %and227 = and i32 %cond226, 65535, !dbg !11515
  %80 = load i32, i32* %_v, align 4, !dbg !11515
  %and228 = and i32 %80, 65535, !dbg !11515
  %shl229 = shl i32 %and228, 16, !dbg !11515
  %or230 = or i32 %and227, %shl229, !dbg !11515
  %and231 = and i32 %or230, 16711680, !dbg !11515
  %shr232 = lshr i32 %and231, 8, !dbg !11515
  %or233 = or i32 %or198, %shr232, !dbg !11515
  %arraydecay234 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11515
  %add.ptr235 = getelementptr i32, i32* %arraydecay234, i64 0, !dbg !11515
  %81 = load i32, i32* %add.ptr235, align 4, !dbg !11515
  %82 = call i1 @llvm.is.constant.i32(i32 %81), !dbg !11515
  br i1 %82, label %cond.true236, label %cond.false256, !dbg !11515

cond.true236:                                     ; preds = %cond.end225
  %arraydecay237 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11515
  %add.ptr238 = getelementptr i32, i32* %arraydecay237, i64 0, !dbg !11515
  %83 = load i32, i32* %add.ptr238, align 4, !dbg !11515
  %and239 = and i32 %83, 255, !dbg !11515
  %shl240 = shl i32 %and239, 24, !dbg !11515
  %arraydecay241 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11515
  %add.ptr242 = getelementptr i32, i32* %arraydecay241, i64 0, !dbg !11515
  %84 = load i32, i32* %add.ptr242, align 4, !dbg !11515
  %and243 = and i32 %84, 65280, !dbg !11515
  %shl244 = shl i32 %and243, 8, !dbg !11515
  %or245 = or i32 %shl240, %shl244, !dbg !11515
  %arraydecay246 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11515
  %add.ptr247 = getelementptr i32, i32* %arraydecay246, i64 0, !dbg !11515
  %85 = load i32, i32* %add.ptr247, align 4, !dbg !11515
  %and248 = and i32 %85, 16711680, !dbg !11515
  %shr249 = lshr i32 %and248, 8, !dbg !11515
  %or250 = or i32 %or245, %shr249, !dbg !11515
  %arraydecay251 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11515
  %add.ptr252 = getelementptr i32, i32* %arraydecay251, i64 0, !dbg !11515
  %86 = load i32, i32* %add.ptr252, align 4, !dbg !11515
  %and253 = and i32 %86, -16777216, !dbg !11515
  %shr254 = lshr i32 %and253, 24, !dbg !11515
  %or255 = or i32 %or250, %shr254, !dbg !11515
  br label %cond.end260, !dbg !11515

cond.false256:                                    ; preds = %cond.end225
  %arraydecay257 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11515
  %add.ptr258 = getelementptr i32, i32* %arraydecay257, i64 0, !dbg !11515
  %87 = load i32, i32* %add.ptr258, align 4, !dbg !11515
  %call259 = call i32 @__fswab32(i32 %87) #8, !dbg !11515
  br label %cond.end260, !dbg !11515

cond.end260:                                      ; preds = %cond.false256, %cond.true236
  %cond261 = phi i32 [ %or255, %cond.true236 ], [ %call259, %cond.false256 ], !dbg !11515
  %and262 = and i32 %cond261, 65535, !dbg !11515
  %88 = load i32, i32* %_v, align 4, !dbg !11515
  %and263 = and i32 %88, 65535, !dbg !11515
  %shl264 = shl i32 %and263, 16, !dbg !11515
  %or265 = or i32 %and262, %shl264, !dbg !11515
  %and266 = and i32 %or265, -16777216, !dbg !11515
  %shr267 = lshr i32 %and266, 24, !dbg !11515
  %or268 = or i32 %or233, %shr267, !dbg !11515
  br label %cond.end303, !dbg !11515

cond.false269:                                    ; preds = %cond.end123
  %arraydecay270 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11515
  %add.ptr271 = getelementptr i32, i32* %arraydecay270, i64 0, !dbg !11515
  %89 = load i32, i32* %add.ptr271, align 4, !dbg !11515
  %90 = call i1 @llvm.is.constant.i32(i32 %89), !dbg !11515
  br i1 %90, label %cond.true272, label %cond.false292, !dbg !11515

cond.true272:                                     ; preds = %cond.false269
  %arraydecay273 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11515
  %add.ptr274 = getelementptr i32, i32* %arraydecay273, i64 0, !dbg !11515
  %91 = load i32, i32* %add.ptr274, align 4, !dbg !11515
  %and275 = and i32 %91, 255, !dbg !11515
  %shl276 = shl i32 %and275, 24, !dbg !11515
  %arraydecay277 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11515
  %add.ptr278 = getelementptr i32, i32* %arraydecay277, i64 0, !dbg !11515
  %92 = load i32, i32* %add.ptr278, align 4, !dbg !11515
  %and279 = and i32 %92, 65280, !dbg !11515
  %shl280 = shl i32 %and279, 8, !dbg !11515
  %or281 = or i32 %shl276, %shl280, !dbg !11515
  %arraydecay282 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11515
  %add.ptr283 = getelementptr i32, i32* %arraydecay282, i64 0, !dbg !11515
  %93 = load i32, i32* %add.ptr283, align 4, !dbg !11515
  %and284 = and i32 %93, 16711680, !dbg !11515
  %shr285 = lshr i32 %and284, 8, !dbg !11515
  %or286 = or i32 %or281, %shr285, !dbg !11515
  %arraydecay287 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11515
  %add.ptr288 = getelementptr i32, i32* %arraydecay287, i64 0, !dbg !11515
  %94 = load i32, i32* %add.ptr288, align 4, !dbg !11515
  %and289 = and i32 %94, -16777216, !dbg !11515
  %shr290 = lshr i32 %and289, 24, !dbg !11515
  %or291 = or i32 %or286, %shr290, !dbg !11515
  br label %cond.end296, !dbg !11515

cond.false292:                                    ; preds = %cond.false269
  %arraydecay293 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11515
  %add.ptr294 = getelementptr i32, i32* %arraydecay293, i64 0, !dbg !11515
  %95 = load i32, i32* %add.ptr294, align 4, !dbg !11515
  %call295 = call i32 @__fswab32(i32 %95) #8, !dbg !11515
  br label %cond.end296, !dbg !11515

cond.end296:                                      ; preds = %cond.false292, %cond.true272
  %cond297 = phi i32 [ %or291, %cond.true272 ], [ %call295, %cond.false292 ], !dbg !11515
  %and298 = and i32 %cond297, 65535, !dbg !11515
  %96 = load i32, i32* %_v, align 4, !dbg !11515
  %and299 = and i32 %96, 65535, !dbg !11515
  %shl300 = shl i32 %and299, 16, !dbg !11515
  %or301 = or i32 %and298, %shl300, !dbg !11515
  %call302 = call i32 @__fswab32(i32 %or301) #8, !dbg !11515
  br label %cond.end303, !dbg !11515

cond.end303:                                      ; preds = %cond.end296, %cond.end260
  %cond304 = phi i32 [ %or268, %cond.end260 ], [ %call302, %cond.end296 ], !dbg !11515
  %arraydecay305 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11515
  %add.ptr306 = getelementptr i32, i32* %arraydecay305, i64 0, !dbg !11515
  store i32 %cond304, i32* %add.ptr306, align 4, !dbg !11515
  br label %do.end307, !dbg !11515

do.end307:                                        ; preds = %cond.end303
  br label %do.body308, !dbg !11518

do.body308:                                       ; preds = %do.end307
  call void @llvm.dbg.declare(metadata i32* %_v309, metadata !11519, metadata !DIExpression()), !dbg !11521
  %97 = load i32, i32* %list_type.addr, align 4, !dbg !11521
  store i32 %97, i32* %_v309, align 4, !dbg !11521
  br label %do.body310, !dbg !11521

do.body310:                                       ; preds = %do.body308
  br label %do.end311, !dbg !11522

do.end311:                                        ; preds = %do.body310
  %arraydecay312 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11521
  %add.ptr313 = getelementptr i32, i32* %arraydecay312, i64 3, !dbg !11521
  %98 = load i32, i32* %add.ptr313, align 4, !dbg !11521
  %99 = call i1 @llvm.is.constant.i32(i32 %98), !dbg !11521
  br i1 %99, label %cond.true314, label %cond.false334, !dbg !11521

cond.true314:                                     ; preds = %do.end311
  %arraydecay315 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11521
  %add.ptr316 = getelementptr i32, i32* %arraydecay315, i64 3, !dbg !11521
  %100 = load i32, i32* %add.ptr316, align 4, !dbg !11521
  %and317 = and i32 %100, 255, !dbg !11521
  %shl318 = shl i32 %and317, 24, !dbg !11521
  %arraydecay319 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11521
  %add.ptr320 = getelementptr i32, i32* %arraydecay319, i64 3, !dbg !11521
  %101 = load i32, i32* %add.ptr320, align 4, !dbg !11521
  %and321 = and i32 %101, 65280, !dbg !11521
  %shl322 = shl i32 %and321, 8, !dbg !11521
  %or323 = or i32 %shl318, %shl322, !dbg !11521
  %arraydecay324 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11521
  %add.ptr325 = getelementptr i32, i32* %arraydecay324, i64 3, !dbg !11521
  %102 = load i32, i32* %add.ptr325, align 4, !dbg !11521
  %and326 = and i32 %102, 16711680, !dbg !11521
  %shr327 = lshr i32 %and326, 8, !dbg !11521
  %or328 = or i32 %or323, %shr327, !dbg !11521
  %arraydecay329 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11521
  %add.ptr330 = getelementptr i32, i32* %arraydecay329, i64 3, !dbg !11521
  %103 = load i32, i32* %add.ptr330, align 4, !dbg !11521
  %and331 = and i32 %103, -16777216, !dbg !11521
  %shr332 = lshr i32 %and331, 24, !dbg !11521
  %or333 = or i32 %or328, %shr332, !dbg !11521
  br label %cond.end338, !dbg !11521

cond.false334:                                    ; preds = %do.end311
  %arraydecay335 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11521
  %add.ptr336 = getelementptr i32, i32* %arraydecay335, i64 3, !dbg !11521
  %104 = load i32, i32* %add.ptr336, align 4, !dbg !11521
  %call337 = call i32 @__fswab32(i32 %104) #8, !dbg !11521
  br label %cond.end338, !dbg !11521

cond.end338:                                      ; preds = %cond.false334, %cond.true314
  %cond339 = phi i32 [ %or333, %cond.true314 ], [ %call337, %cond.false334 ], !dbg !11521
  %and340 = and i32 %cond339, -117440513, !dbg !11521
  %105 = load i32, i32* %_v309, align 4, !dbg !11521
  %and341 = and i32 %105, 7, !dbg !11521
  %shl342 = shl i32 %and341, 24, !dbg !11521
  %or343 = or i32 %and340, %shl342, !dbg !11521
  %106 = call i1 @llvm.is.constant.i32(i32 %or343), !dbg !11521
  br i1 %106, label %cond.true344, label %cond.false484, !dbg !11521

cond.true344:                                     ; preds = %cond.end338
  %arraydecay345 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11521
  %add.ptr346 = getelementptr i32, i32* %arraydecay345, i64 3, !dbg !11521
  %107 = load i32, i32* %add.ptr346, align 4, !dbg !11521
  %108 = call i1 @llvm.is.constant.i32(i32 %107), !dbg !11521
  br i1 %108, label %cond.true347, label %cond.false367, !dbg !11521

cond.true347:                                     ; preds = %cond.true344
  %arraydecay348 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11521
  %add.ptr349 = getelementptr i32, i32* %arraydecay348, i64 3, !dbg !11521
  %109 = load i32, i32* %add.ptr349, align 4, !dbg !11521
  %and350 = and i32 %109, 255, !dbg !11521
  %shl351 = shl i32 %and350, 24, !dbg !11521
  %arraydecay352 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11521
  %add.ptr353 = getelementptr i32, i32* %arraydecay352, i64 3, !dbg !11521
  %110 = load i32, i32* %add.ptr353, align 4, !dbg !11521
  %and354 = and i32 %110, 65280, !dbg !11521
  %shl355 = shl i32 %and354, 8, !dbg !11521
  %or356 = or i32 %shl351, %shl355, !dbg !11521
  %arraydecay357 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11521
  %add.ptr358 = getelementptr i32, i32* %arraydecay357, i64 3, !dbg !11521
  %111 = load i32, i32* %add.ptr358, align 4, !dbg !11521
  %and359 = and i32 %111, 16711680, !dbg !11521
  %shr360 = lshr i32 %and359, 8, !dbg !11521
  %or361 = or i32 %or356, %shr360, !dbg !11521
  %arraydecay362 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11521
  %add.ptr363 = getelementptr i32, i32* %arraydecay362, i64 3, !dbg !11521
  %112 = load i32, i32* %add.ptr363, align 4, !dbg !11521
  %and364 = and i32 %112, -16777216, !dbg !11521
  %shr365 = lshr i32 %and364, 24, !dbg !11521
  %or366 = or i32 %or361, %shr365, !dbg !11521
  br label %cond.end371, !dbg !11521

cond.false367:                                    ; preds = %cond.true344
  %arraydecay368 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11521
  %add.ptr369 = getelementptr i32, i32* %arraydecay368, i64 3, !dbg !11521
  %113 = load i32, i32* %add.ptr369, align 4, !dbg !11521
  %call370 = call i32 @__fswab32(i32 %113) #8, !dbg !11521
  br label %cond.end371, !dbg !11521

cond.end371:                                      ; preds = %cond.false367, %cond.true347
  %cond372 = phi i32 [ %or366, %cond.true347 ], [ %call370, %cond.false367 ], !dbg !11521
  %and373 = and i32 %cond372, -117440513, !dbg !11521
  %114 = load i32, i32* %_v309, align 4, !dbg !11521
  %and374 = and i32 %114, 7, !dbg !11521
  %shl375 = shl i32 %and374, 24, !dbg !11521
  %or376 = or i32 %and373, %shl375, !dbg !11521
  %and377 = and i32 %or376, 255, !dbg !11521
  %shl378 = shl i32 %and377, 24, !dbg !11521
  %arraydecay379 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11521
  %add.ptr380 = getelementptr i32, i32* %arraydecay379, i64 3, !dbg !11521
  %115 = load i32, i32* %add.ptr380, align 4, !dbg !11521
  %116 = call i1 @llvm.is.constant.i32(i32 %115), !dbg !11521
  br i1 %116, label %cond.true381, label %cond.false401, !dbg !11521

cond.true381:                                     ; preds = %cond.end371
  %arraydecay382 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11521
  %add.ptr383 = getelementptr i32, i32* %arraydecay382, i64 3, !dbg !11521
  %117 = load i32, i32* %add.ptr383, align 4, !dbg !11521
  %and384 = and i32 %117, 255, !dbg !11521
  %shl385 = shl i32 %and384, 24, !dbg !11521
  %arraydecay386 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11521
  %add.ptr387 = getelementptr i32, i32* %arraydecay386, i64 3, !dbg !11521
  %118 = load i32, i32* %add.ptr387, align 4, !dbg !11521
  %and388 = and i32 %118, 65280, !dbg !11521
  %shl389 = shl i32 %and388, 8, !dbg !11521
  %or390 = or i32 %shl385, %shl389, !dbg !11521
  %arraydecay391 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11521
  %add.ptr392 = getelementptr i32, i32* %arraydecay391, i64 3, !dbg !11521
  %119 = load i32, i32* %add.ptr392, align 4, !dbg !11521
  %and393 = and i32 %119, 16711680, !dbg !11521
  %shr394 = lshr i32 %and393, 8, !dbg !11521
  %or395 = or i32 %or390, %shr394, !dbg !11521
  %arraydecay396 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11521
  %add.ptr397 = getelementptr i32, i32* %arraydecay396, i64 3, !dbg !11521
  %120 = load i32, i32* %add.ptr397, align 4, !dbg !11521
  %and398 = and i32 %120, -16777216, !dbg !11521
  %shr399 = lshr i32 %and398, 24, !dbg !11521
  %or400 = or i32 %or395, %shr399, !dbg !11521
  br label %cond.end405, !dbg !11521

cond.false401:                                    ; preds = %cond.end371
  %arraydecay402 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11521
  %add.ptr403 = getelementptr i32, i32* %arraydecay402, i64 3, !dbg !11521
  %121 = load i32, i32* %add.ptr403, align 4, !dbg !11521
  %call404 = call i32 @__fswab32(i32 %121) #8, !dbg !11521
  br label %cond.end405, !dbg !11521

cond.end405:                                      ; preds = %cond.false401, %cond.true381
  %cond406 = phi i32 [ %or400, %cond.true381 ], [ %call404, %cond.false401 ], !dbg !11521
  %and407 = and i32 %cond406, -117440513, !dbg !11521
  %122 = load i32, i32* %_v309, align 4, !dbg !11521
  %and408 = and i32 %122, 7, !dbg !11521
  %shl409 = shl i32 %and408, 24, !dbg !11521
  %or410 = or i32 %and407, %shl409, !dbg !11521
  %and411 = and i32 %or410, 65280, !dbg !11521
  %shl412 = shl i32 %and411, 8, !dbg !11521
  %or413 = or i32 %shl378, %shl412, !dbg !11521
  %arraydecay414 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11521
  %add.ptr415 = getelementptr i32, i32* %arraydecay414, i64 3, !dbg !11521
  %123 = load i32, i32* %add.ptr415, align 4, !dbg !11521
  %124 = call i1 @llvm.is.constant.i32(i32 %123), !dbg !11521
  br i1 %124, label %cond.true416, label %cond.false436, !dbg !11521

cond.true416:                                     ; preds = %cond.end405
  %arraydecay417 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11521
  %add.ptr418 = getelementptr i32, i32* %arraydecay417, i64 3, !dbg !11521
  %125 = load i32, i32* %add.ptr418, align 4, !dbg !11521
  %and419 = and i32 %125, 255, !dbg !11521
  %shl420 = shl i32 %and419, 24, !dbg !11521
  %arraydecay421 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11521
  %add.ptr422 = getelementptr i32, i32* %arraydecay421, i64 3, !dbg !11521
  %126 = load i32, i32* %add.ptr422, align 4, !dbg !11521
  %and423 = and i32 %126, 65280, !dbg !11521
  %shl424 = shl i32 %and423, 8, !dbg !11521
  %or425 = or i32 %shl420, %shl424, !dbg !11521
  %arraydecay426 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11521
  %add.ptr427 = getelementptr i32, i32* %arraydecay426, i64 3, !dbg !11521
  %127 = load i32, i32* %add.ptr427, align 4, !dbg !11521
  %and428 = and i32 %127, 16711680, !dbg !11521
  %shr429 = lshr i32 %and428, 8, !dbg !11521
  %or430 = or i32 %or425, %shr429, !dbg !11521
  %arraydecay431 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11521
  %add.ptr432 = getelementptr i32, i32* %arraydecay431, i64 3, !dbg !11521
  %128 = load i32, i32* %add.ptr432, align 4, !dbg !11521
  %and433 = and i32 %128, -16777216, !dbg !11521
  %shr434 = lshr i32 %and433, 24, !dbg !11521
  %or435 = or i32 %or430, %shr434, !dbg !11521
  br label %cond.end440, !dbg !11521

cond.false436:                                    ; preds = %cond.end405
  %arraydecay437 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11521
  %add.ptr438 = getelementptr i32, i32* %arraydecay437, i64 3, !dbg !11521
  %129 = load i32, i32* %add.ptr438, align 4, !dbg !11521
  %call439 = call i32 @__fswab32(i32 %129) #8, !dbg !11521
  br label %cond.end440, !dbg !11521

cond.end440:                                      ; preds = %cond.false436, %cond.true416
  %cond441 = phi i32 [ %or435, %cond.true416 ], [ %call439, %cond.false436 ], !dbg !11521
  %and442 = and i32 %cond441, -117440513, !dbg !11521
  %130 = load i32, i32* %_v309, align 4, !dbg !11521
  %and443 = and i32 %130, 7, !dbg !11521
  %shl444 = shl i32 %and443, 24, !dbg !11521
  %or445 = or i32 %and442, %shl444, !dbg !11521
  %and446 = and i32 %or445, 16711680, !dbg !11521
  %shr447 = lshr i32 %and446, 8, !dbg !11521
  %or448 = or i32 %or413, %shr447, !dbg !11521
  %arraydecay449 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11521
  %add.ptr450 = getelementptr i32, i32* %arraydecay449, i64 3, !dbg !11521
  %131 = load i32, i32* %add.ptr450, align 4, !dbg !11521
  %132 = call i1 @llvm.is.constant.i32(i32 %131), !dbg !11521
  br i1 %132, label %cond.true451, label %cond.false471, !dbg !11521

cond.true451:                                     ; preds = %cond.end440
  %arraydecay452 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11521
  %add.ptr453 = getelementptr i32, i32* %arraydecay452, i64 3, !dbg !11521
  %133 = load i32, i32* %add.ptr453, align 4, !dbg !11521
  %and454 = and i32 %133, 255, !dbg !11521
  %shl455 = shl i32 %and454, 24, !dbg !11521
  %arraydecay456 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11521
  %add.ptr457 = getelementptr i32, i32* %arraydecay456, i64 3, !dbg !11521
  %134 = load i32, i32* %add.ptr457, align 4, !dbg !11521
  %and458 = and i32 %134, 65280, !dbg !11521
  %shl459 = shl i32 %and458, 8, !dbg !11521
  %or460 = or i32 %shl455, %shl459, !dbg !11521
  %arraydecay461 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11521
  %add.ptr462 = getelementptr i32, i32* %arraydecay461, i64 3, !dbg !11521
  %135 = load i32, i32* %add.ptr462, align 4, !dbg !11521
  %and463 = and i32 %135, 16711680, !dbg !11521
  %shr464 = lshr i32 %and463, 8, !dbg !11521
  %or465 = or i32 %or460, %shr464, !dbg !11521
  %arraydecay466 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11521
  %add.ptr467 = getelementptr i32, i32* %arraydecay466, i64 3, !dbg !11521
  %136 = load i32, i32* %add.ptr467, align 4, !dbg !11521
  %and468 = and i32 %136, -16777216, !dbg !11521
  %shr469 = lshr i32 %and468, 24, !dbg !11521
  %or470 = or i32 %or465, %shr469, !dbg !11521
  br label %cond.end475, !dbg !11521

cond.false471:                                    ; preds = %cond.end440
  %arraydecay472 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11521
  %add.ptr473 = getelementptr i32, i32* %arraydecay472, i64 3, !dbg !11521
  %137 = load i32, i32* %add.ptr473, align 4, !dbg !11521
  %call474 = call i32 @__fswab32(i32 %137) #8, !dbg !11521
  br label %cond.end475, !dbg !11521

cond.end475:                                      ; preds = %cond.false471, %cond.true451
  %cond476 = phi i32 [ %or470, %cond.true451 ], [ %call474, %cond.false471 ], !dbg !11521
  %and477 = and i32 %cond476, -117440513, !dbg !11521
  %138 = load i32, i32* %_v309, align 4, !dbg !11521
  %and478 = and i32 %138, 7, !dbg !11521
  %shl479 = shl i32 %and478, 24, !dbg !11521
  %or480 = or i32 %and477, %shl479, !dbg !11521
  %and481 = and i32 %or480, -16777216, !dbg !11521
  %shr482 = lshr i32 %and481, 24, !dbg !11521
  %or483 = or i32 %or448, %shr482, !dbg !11521
  br label %cond.end518, !dbg !11521

cond.false484:                                    ; preds = %cond.end338
  %arraydecay485 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11521
  %add.ptr486 = getelementptr i32, i32* %arraydecay485, i64 3, !dbg !11521
  %139 = load i32, i32* %add.ptr486, align 4, !dbg !11521
  %140 = call i1 @llvm.is.constant.i32(i32 %139), !dbg !11521
  br i1 %140, label %cond.true487, label %cond.false507, !dbg !11521

cond.true487:                                     ; preds = %cond.false484
  %arraydecay488 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11521
  %add.ptr489 = getelementptr i32, i32* %arraydecay488, i64 3, !dbg !11521
  %141 = load i32, i32* %add.ptr489, align 4, !dbg !11521
  %and490 = and i32 %141, 255, !dbg !11521
  %shl491 = shl i32 %and490, 24, !dbg !11521
  %arraydecay492 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11521
  %add.ptr493 = getelementptr i32, i32* %arraydecay492, i64 3, !dbg !11521
  %142 = load i32, i32* %add.ptr493, align 4, !dbg !11521
  %and494 = and i32 %142, 65280, !dbg !11521
  %shl495 = shl i32 %and494, 8, !dbg !11521
  %or496 = or i32 %shl491, %shl495, !dbg !11521
  %arraydecay497 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11521
  %add.ptr498 = getelementptr i32, i32* %arraydecay497, i64 3, !dbg !11521
  %143 = load i32, i32* %add.ptr498, align 4, !dbg !11521
  %and499 = and i32 %143, 16711680, !dbg !11521
  %shr500 = lshr i32 %and499, 8, !dbg !11521
  %or501 = or i32 %or496, %shr500, !dbg !11521
  %arraydecay502 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11521
  %add.ptr503 = getelementptr i32, i32* %arraydecay502, i64 3, !dbg !11521
  %144 = load i32, i32* %add.ptr503, align 4, !dbg !11521
  %and504 = and i32 %144, -16777216, !dbg !11521
  %shr505 = lshr i32 %and504, 24, !dbg !11521
  %or506 = or i32 %or501, %shr505, !dbg !11521
  br label %cond.end511, !dbg !11521

cond.false507:                                    ; preds = %cond.false484
  %arraydecay508 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11521
  %add.ptr509 = getelementptr i32, i32* %arraydecay508, i64 3, !dbg !11521
  %145 = load i32, i32* %add.ptr509, align 4, !dbg !11521
  %call510 = call i32 @__fswab32(i32 %145) #8, !dbg !11521
  br label %cond.end511, !dbg !11521

cond.end511:                                      ; preds = %cond.false507, %cond.true487
  %cond512 = phi i32 [ %or506, %cond.true487 ], [ %call510, %cond.false507 ], !dbg !11521
  %and513 = and i32 %cond512, -117440513, !dbg !11521
  %146 = load i32, i32* %_v309, align 4, !dbg !11521
  %and514 = and i32 %146, 7, !dbg !11521
  %shl515 = shl i32 %and514, 24, !dbg !11521
  %or516 = or i32 %and513, %shl515, !dbg !11521
  %call517 = call i32 @__fswab32(i32 %or516) #8, !dbg !11521
  br label %cond.end518, !dbg !11521

cond.end518:                                      ; preds = %cond.end511, %cond.end475
  %cond519 = phi i32 [ %or483, %cond.end475 ], [ %call517, %cond.end511 ], !dbg !11521
  %arraydecay520 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11521
  %add.ptr521 = getelementptr i32, i32* %arraydecay520, i64 3, !dbg !11521
  store i32 %cond519, i32* %add.ptr521, align 4, !dbg !11521
  br label %do.end522, !dbg !11521

do.end522:                                        ; preds = %cond.end518
  br label %do.body523, !dbg !11524

do.body523:                                       ; preds = %do.end522
  call void @llvm.dbg.declare(metadata i32* %_v524, metadata !11525, metadata !DIExpression()), !dbg !11527
  %147 = load i16, i16* %vport.addr, align 2, !dbg !11527
  %conv525 = zext i16 %147 to i32, !dbg !11527
  store i32 %conv525, i32* %_v524, align 4, !dbg !11527
  br label %do.body526, !dbg !11527

do.body526:                                       ; preds = %do.body523
  br label %do.end527, !dbg !11528

do.end527:                                        ; preds = %do.body526
  %arraydecay528 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11527
  %add.ptr529 = getelementptr i32, i32* %arraydecay528, i64 2, !dbg !11527
  %148 = load i32, i32* %add.ptr529, align 4, !dbg !11527
  %149 = call i1 @llvm.is.constant.i32(i32 %148), !dbg !11527
  br i1 %149, label %cond.true530, label %cond.false550, !dbg !11527

cond.true530:                                     ; preds = %do.end527
  %arraydecay531 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11527
  %add.ptr532 = getelementptr i32, i32* %arraydecay531, i64 2, !dbg !11527
  %150 = load i32, i32* %add.ptr532, align 4, !dbg !11527
  %and533 = and i32 %150, 255, !dbg !11527
  %shl534 = shl i32 %and533, 24, !dbg !11527
  %arraydecay535 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11527
  %add.ptr536 = getelementptr i32, i32* %arraydecay535, i64 2, !dbg !11527
  %151 = load i32, i32* %add.ptr536, align 4, !dbg !11527
  %and537 = and i32 %151, 65280, !dbg !11527
  %shl538 = shl i32 %and537, 8, !dbg !11527
  %or539 = or i32 %shl534, %shl538, !dbg !11527
  %arraydecay540 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11527
  %add.ptr541 = getelementptr i32, i32* %arraydecay540, i64 2, !dbg !11527
  %152 = load i32, i32* %add.ptr541, align 4, !dbg !11527
  %and542 = and i32 %152, 16711680, !dbg !11527
  %shr543 = lshr i32 %and542, 8, !dbg !11527
  %or544 = or i32 %or539, %shr543, !dbg !11527
  %arraydecay545 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11527
  %add.ptr546 = getelementptr i32, i32* %arraydecay545, i64 2, !dbg !11527
  %153 = load i32, i32* %add.ptr546, align 4, !dbg !11527
  %and547 = and i32 %153, -16777216, !dbg !11527
  %shr548 = lshr i32 %and547, 24, !dbg !11527
  %or549 = or i32 %or544, %shr548, !dbg !11527
  br label %cond.end554, !dbg !11527

cond.false550:                                    ; preds = %do.end527
  %arraydecay551 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11527
  %add.ptr552 = getelementptr i32, i32* %arraydecay551, i64 2, !dbg !11527
  %154 = load i32, i32* %add.ptr552, align 4, !dbg !11527
  %call553 = call i32 @__fswab32(i32 %154) #8, !dbg !11527
  br label %cond.end554, !dbg !11527

cond.end554:                                      ; preds = %cond.false550, %cond.true530
  %cond555 = phi i32 [ %or549, %cond.true530 ], [ %call553, %cond.false550 ], !dbg !11527
  %and556 = and i32 %cond555, -65536, !dbg !11527
  %155 = load i32, i32* %_v524, align 4, !dbg !11527
  %and557 = and i32 %155, 65535, !dbg !11527
  %shl558 = shl i32 %and557, 0, !dbg !11527
  %or559 = or i32 %and556, %shl558, !dbg !11527
  %156 = call i1 @llvm.is.constant.i32(i32 %or559), !dbg !11527
  br i1 %156, label %cond.true560, label %cond.false700, !dbg !11527

cond.true560:                                     ; preds = %cond.end554
  %arraydecay561 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11527
  %add.ptr562 = getelementptr i32, i32* %arraydecay561, i64 2, !dbg !11527
  %157 = load i32, i32* %add.ptr562, align 4, !dbg !11527
  %158 = call i1 @llvm.is.constant.i32(i32 %157), !dbg !11527
  br i1 %158, label %cond.true563, label %cond.false583, !dbg !11527

cond.true563:                                     ; preds = %cond.true560
  %arraydecay564 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11527
  %add.ptr565 = getelementptr i32, i32* %arraydecay564, i64 2, !dbg !11527
  %159 = load i32, i32* %add.ptr565, align 4, !dbg !11527
  %and566 = and i32 %159, 255, !dbg !11527
  %shl567 = shl i32 %and566, 24, !dbg !11527
  %arraydecay568 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11527
  %add.ptr569 = getelementptr i32, i32* %arraydecay568, i64 2, !dbg !11527
  %160 = load i32, i32* %add.ptr569, align 4, !dbg !11527
  %and570 = and i32 %160, 65280, !dbg !11527
  %shl571 = shl i32 %and570, 8, !dbg !11527
  %or572 = or i32 %shl567, %shl571, !dbg !11527
  %arraydecay573 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11527
  %add.ptr574 = getelementptr i32, i32* %arraydecay573, i64 2, !dbg !11527
  %161 = load i32, i32* %add.ptr574, align 4, !dbg !11527
  %and575 = and i32 %161, 16711680, !dbg !11527
  %shr576 = lshr i32 %and575, 8, !dbg !11527
  %or577 = or i32 %or572, %shr576, !dbg !11527
  %arraydecay578 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11527
  %add.ptr579 = getelementptr i32, i32* %arraydecay578, i64 2, !dbg !11527
  %162 = load i32, i32* %add.ptr579, align 4, !dbg !11527
  %and580 = and i32 %162, -16777216, !dbg !11527
  %shr581 = lshr i32 %and580, 24, !dbg !11527
  %or582 = or i32 %or577, %shr581, !dbg !11527
  br label %cond.end587, !dbg !11527

cond.false583:                                    ; preds = %cond.true560
  %arraydecay584 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11527
  %add.ptr585 = getelementptr i32, i32* %arraydecay584, i64 2, !dbg !11527
  %163 = load i32, i32* %add.ptr585, align 4, !dbg !11527
  %call586 = call i32 @__fswab32(i32 %163) #8, !dbg !11527
  br label %cond.end587, !dbg !11527

cond.end587:                                      ; preds = %cond.false583, %cond.true563
  %cond588 = phi i32 [ %or582, %cond.true563 ], [ %call586, %cond.false583 ], !dbg !11527
  %and589 = and i32 %cond588, -65536, !dbg !11527
  %164 = load i32, i32* %_v524, align 4, !dbg !11527
  %and590 = and i32 %164, 65535, !dbg !11527
  %shl591 = shl i32 %and590, 0, !dbg !11527
  %or592 = or i32 %and589, %shl591, !dbg !11527
  %and593 = and i32 %or592, 255, !dbg !11527
  %shl594 = shl i32 %and593, 24, !dbg !11527
  %arraydecay595 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11527
  %add.ptr596 = getelementptr i32, i32* %arraydecay595, i64 2, !dbg !11527
  %165 = load i32, i32* %add.ptr596, align 4, !dbg !11527
  %166 = call i1 @llvm.is.constant.i32(i32 %165), !dbg !11527
  br i1 %166, label %cond.true597, label %cond.false617, !dbg !11527

cond.true597:                                     ; preds = %cond.end587
  %arraydecay598 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11527
  %add.ptr599 = getelementptr i32, i32* %arraydecay598, i64 2, !dbg !11527
  %167 = load i32, i32* %add.ptr599, align 4, !dbg !11527
  %and600 = and i32 %167, 255, !dbg !11527
  %shl601 = shl i32 %and600, 24, !dbg !11527
  %arraydecay602 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11527
  %add.ptr603 = getelementptr i32, i32* %arraydecay602, i64 2, !dbg !11527
  %168 = load i32, i32* %add.ptr603, align 4, !dbg !11527
  %and604 = and i32 %168, 65280, !dbg !11527
  %shl605 = shl i32 %and604, 8, !dbg !11527
  %or606 = or i32 %shl601, %shl605, !dbg !11527
  %arraydecay607 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11527
  %add.ptr608 = getelementptr i32, i32* %arraydecay607, i64 2, !dbg !11527
  %169 = load i32, i32* %add.ptr608, align 4, !dbg !11527
  %and609 = and i32 %169, 16711680, !dbg !11527
  %shr610 = lshr i32 %and609, 8, !dbg !11527
  %or611 = or i32 %or606, %shr610, !dbg !11527
  %arraydecay612 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11527
  %add.ptr613 = getelementptr i32, i32* %arraydecay612, i64 2, !dbg !11527
  %170 = load i32, i32* %add.ptr613, align 4, !dbg !11527
  %and614 = and i32 %170, -16777216, !dbg !11527
  %shr615 = lshr i32 %and614, 24, !dbg !11527
  %or616 = or i32 %or611, %shr615, !dbg !11527
  br label %cond.end621, !dbg !11527

cond.false617:                                    ; preds = %cond.end587
  %arraydecay618 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11527
  %add.ptr619 = getelementptr i32, i32* %arraydecay618, i64 2, !dbg !11527
  %171 = load i32, i32* %add.ptr619, align 4, !dbg !11527
  %call620 = call i32 @__fswab32(i32 %171) #8, !dbg !11527
  br label %cond.end621, !dbg !11527

cond.end621:                                      ; preds = %cond.false617, %cond.true597
  %cond622 = phi i32 [ %or616, %cond.true597 ], [ %call620, %cond.false617 ], !dbg !11527
  %and623 = and i32 %cond622, -65536, !dbg !11527
  %172 = load i32, i32* %_v524, align 4, !dbg !11527
  %and624 = and i32 %172, 65535, !dbg !11527
  %shl625 = shl i32 %and624, 0, !dbg !11527
  %or626 = or i32 %and623, %shl625, !dbg !11527
  %and627 = and i32 %or626, 65280, !dbg !11527
  %shl628 = shl i32 %and627, 8, !dbg !11527
  %or629 = or i32 %shl594, %shl628, !dbg !11527
  %arraydecay630 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11527
  %add.ptr631 = getelementptr i32, i32* %arraydecay630, i64 2, !dbg !11527
  %173 = load i32, i32* %add.ptr631, align 4, !dbg !11527
  %174 = call i1 @llvm.is.constant.i32(i32 %173), !dbg !11527
  br i1 %174, label %cond.true632, label %cond.false652, !dbg !11527

cond.true632:                                     ; preds = %cond.end621
  %arraydecay633 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11527
  %add.ptr634 = getelementptr i32, i32* %arraydecay633, i64 2, !dbg !11527
  %175 = load i32, i32* %add.ptr634, align 4, !dbg !11527
  %and635 = and i32 %175, 255, !dbg !11527
  %shl636 = shl i32 %and635, 24, !dbg !11527
  %arraydecay637 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11527
  %add.ptr638 = getelementptr i32, i32* %arraydecay637, i64 2, !dbg !11527
  %176 = load i32, i32* %add.ptr638, align 4, !dbg !11527
  %and639 = and i32 %176, 65280, !dbg !11527
  %shl640 = shl i32 %and639, 8, !dbg !11527
  %or641 = or i32 %shl636, %shl640, !dbg !11527
  %arraydecay642 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11527
  %add.ptr643 = getelementptr i32, i32* %arraydecay642, i64 2, !dbg !11527
  %177 = load i32, i32* %add.ptr643, align 4, !dbg !11527
  %and644 = and i32 %177, 16711680, !dbg !11527
  %shr645 = lshr i32 %and644, 8, !dbg !11527
  %or646 = or i32 %or641, %shr645, !dbg !11527
  %arraydecay647 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11527
  %add.ptr648 = getelementptr i32, i32* %arraydecay647, i64 2, !dbg !11527
  %178 = load i32, i32* %add.ptr648, align 4, !dbg !11527
  %and649 = and i32 %178, -16777216, !dbg !11527
  %shr650 = lshr i32 %and649, 24, !dbg !11527
  %or651 = or i32 %or646, %shr650, !dbg !11527
  br label %cond.end656, !dbg !11527

cond.false652:                                    ; preds = %cond.end621
  %arraydecay653 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11527
  %add.ptr654 = getelementptr i32, i32* %arraydecay653, i64 2, !dbg !11527
  %179 = load i32, i32* %add.ptr654, align 4, !dbg !11527
  %call655 = call i32 @__fswab32(i32 %179) #8, !dbg !11527
  br label %cond.end656, !dbg !11527

cond.end656:                                      ; preds = %cond.false652, %cond.true632
  %cond657 = phi i32 [ %or651, %cond.true632 ], [ %call655, %cond.false652 ], !dbg !11527
  %and658 = and i32 %cond657, -65536, !dbg !11527
  %180 = load i32, i32* %_v524, align 4, !dbg !11527
  %and659 = and i32 %180, 65535, !dbg !11527
  %shl660 = shl i32 %and659, 0, !dbg !11527
  %or661 = or i32 %and658, %shl660, !dbg !11527
  %and662 = and i32 %or661, 16711680, !dbg !11527
  %shr663 = lshr i32 %and662, 8, !dbg !11527
  %or664 = or i32 %or629, %shr663, !dbg !11527
  %arraydecay665 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11527
  %add.ptr666 = getelementptr i32, i32* %arraydecay665, i64 2, !dbg !11527
  %181 = load i32, i32* %add.ptr666, align 4, !dbg !11527
  %182 = call i1 @llvm.is.constant.i32(i32 %181), !dbg !11527
  br i1 %182, label %cond.true667, label %cond.false687, !dbg !11527

cond.true667:                                     ; preds = %cond.end656
  %arraydecay668 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11527
  %add.ptr669 = getelementptr i32, i32* %arraydecay668, i64 2, !dbg !11527
  %183 = load i32, i32* %add.ptr669, align 4, !dbg !11527
  %and670 = and i32 %183, 255, !dbg !11527
  %shl671 = shl i32 %and670, 24, !dbg !11527
  %arraydecay672 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11527
  %add.ptr673 = getelementptr i32, i32* %arraydecay672, i64 2, !dbg !11527
  %184 = load i32, i32* %add.ptr673, align 4, !dbg !11527
  %and674 = and i32 %184, 65280, !dbg !11527
  %shl675 = shl i32 %and674, 8, !dbg !11527
  %or676 = or i32 %shl671, %shl675, !dbg !11527
  %arraydecay677 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11527
  %add.ptr678 = getelementptr i32, i32* %arraydecay677, i64 2, !dbg !11527
  %185 = load i32, i32* %add.ptr678, align 4, !dbg !11527
  %and679 = and i32 %185, 16711680, !dbg !11527
  %shr680 = lshr i32 %and679, 8, !dbg !11527
  %or681 = or i32 %or676, %shr680, !dbg !11527
  %arraydecay682 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11527
  %add.ptr683 = getelementptr i32, i32* %arraydecay682, i64 2, !dbg !11527
  %186 = load i32, i32* %add.ptr683, align 4, !dbg !11527
  %and684 = and i32 %186, -16777216, !dbg !11527
  %shr685 = lshr i32 %and684, 24, !dbg !11527
  %or686 = or i32 %or681, %shr685, !dbg !11527
  br label %cond.end691, !dbg !11527

cond.false687:                                    ; preds = %cond.end656
  %arraydecay688 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11527
  %add.ptr689 = getelementptr i32, i32* %arraydecay688, i64 2, !dbg !11527
  %187 = load i32, i32* %add.ptr689, align 4, !dbg !11527
  %call690 = call i32 @__fswab32(i32 %187) #8, !dbg !11527
  br label %cond.end691, !dbg !11527

cond.end691:                                      ; preds = %cond.false687, %cond.true667
  %cond692 = phi i32 [ %or686, %cond.true667 ], [ %call690, %cond.false687 ], !dbg !11527
  %and693 = and i32 %cond692, -65536, !dbg !11527
  %188 = load i32, i32* %_v524, align 4, !dbg !11527
  %and694 = and i32 %188, 65535, !dbg !11527
  %shl695 = shl i32 %and694, 0, !dbg !11527
  %or696 = or i32 %and693, %shl695, !dbg !11527
  %and697 = and i32 %or696, -16777216, !dbg !11527
  %shr698 = lshr i32 %and697, 24, !dbg !11527
  %or699 = or i32 %or664, %shr698, !dbg !11527
  br label %cond.end734, !dbg !11527

cond.false700:                                    ; preds = %cond.end554
  %arraydecay701 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11527
  %add.ptr702 = getelementptr i32, i32* %arraydecay701, i64 2, !dbg !11527
  %189 = load i32, i32* %add.ptr702, align 4, !dbg !11527
  %190 = call i1 @llvm.is.constant.i32(i32 %189), !dbg !11527
  br i1 %190, label %cond.true703, label %cond.false723, !dbg !11527

cond.true703:                                     ; preds = %cond.false700
  %arraydecay704 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11527
  %add.ptr705 = getelementptr i32, i32* %arraydecay704, i64 2, !dbg !11527
  %191 = load i32, i32* %add.ptr705, align 4, !dbg !11527
  %and706 = and i32 %191, 255, !dbg !11527
  %shl707 = shl i32 %and706, 24, !dbg !11527
  %arraydecay708 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11527
  %add.ptr709 = getelementptr i32, i32* %arraydecay708, i64 2, !dbg !11527
  %192 = load i32, i32* %add.ptr709, align 4, !dbg !11527
  %and710 = and i32 %192, 65280, !dbg !11527
  %shl711 = shl i32 %and710, 8, !dbg !11527
  %or712 = or i32 %shl707, %shl711, !dbg !11527
  %arraydecay713 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11527
  %add.ptr714 = getelementptr i32, i32* %arraydecay713, i64 2, !dbg !11527
  %193 = load i32, i32* %add.ptr714, align 4, !dbg !11527
  %and715 = and i32 %193, 16711680, !dbg !11527
  %shr716 = lshr i32 %and715, 8, !dbg !11527
  %or717 = or i32 %or712, %shr716, !dbg !11527
  %arraydecay718 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11527
  %add.ptr719 = getelementptr i32, i32* %arraydecay718, i64 2, !dbg !11527
  %194 = load i32, i32* %add.ptr719, align 4, !dbg !11527
  %and720 = and i32 %194, -16777216, !dbg !11527
  %shr721 = lshr i32 %and720, 24, !dbg !11527
  %or722 = or i32 %or717, %shr721, !dbg !11527
  br label %cond.end727, !dbg !11527

cond.false723:                                    ; preds = %cond.false700
  %arraydecay724 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11527
  %add.ptr725 = getelementptr i32, i32* %arraydecay724, i64 2, !dbg !11527
  %195 = load i32, i32* %add.ptr725, align 4, !dbg !11527
  %call726 = call i32 @__fswab32(i32 %195) #8, !dbg !11527
  br label %cond.end727, !dbg !11527

cond.end727:                                      ; preds = %cond.false723, %cond.true703
  %cond728 = phi i32 [ %or722, %cond.true703 ], [ %call726, %cond.false723 ], !dbg !11527
  %and729 = and i32 %cond728, -65536, !dbg !11527
  %196 = load i32, i32* %_v524, align 4, !dbg !11527
  %and730 = and i32 %196, 65535, !dbg !11527
  %shl731 = shl i32 %and730, 0, !dbg !11527
  %or732 = or i32 %and729, %shl731, !dbg !11527
  %call733 = call i32 @__fswab32(i32 %or732) #8, !dbg !11527
  br label %cond.end734, !dbg !11527

cond.end734:                                      ; preds = %cond.end727, %cond.end691
  %cond735 = phi i32 [ %or699, %cond.end691 ], [ %call733, %cond.end727 ], !dbg !11527
  %arraydecay736 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11527
  %add.ptr737 = getelementptr i32, i32* %arraydecay736, i64 2, !dbg !11527
  store i32 %cond735, i32* %add.ptr737, align 4, !dbg !11527
  br label %do.end738, !dbg !11527

do.end738:                                        ; preds = %cond.end734
  br label %do.body739, !dbg !11530

do.body739:                                       ; preds = %do.end738
  call void @llvm.dbg.declare(metadata i32* %_v740, metadata !11531, metadata !DIExpression()), !dbg !11533
  store i32 1, i32* %_v740, align 4, !dbg !11533
  br label %do.body741, !dbg !11533

do.body741:                                       ; preds = %do.body739
  br label %do.end742, !dbg !11534

do.end742:                                        ; preds = %do.body741
  %arraydecay743 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11533
  %add.ptr744 = getelementptr i32, i32* %arraydecay743, i64 2, !dbg !11533
  %197 = load i32, i32* %add.ptr744, align 4, !dbg !11533
  %198 = call i1 @llvm.is.constant.i32(i32 %197), !dbg !11533
  br i1 %198, label %cond.true745, label %cond.false765, !dbg !11533

cond.true745:                                     ; preds = %do.end742
  %arraydecay746 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11533
  %add.ptr747 = getelementptr i32, i32* %arraydecay746, i64 2, !dbg !11533
  %199 = load i32, i32* %add.ptr747, align 4, !dbg !11533
  %and748 = and i32 %199, 255, !dbg !11533
  %shl749 = shl i32 %and748, 24, !dbg !11533
  %arraydecay750 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11533
  %add.ptr751 = getelementptr i32, i32* %arraydecay750, i64 2, !dbg !11533
  %200 = load i32, i32* %add.ptr751, align 4, !dbg !11533
  %and752 = and i32 %200, 65280, !dbg !11533
  %shl753 = shl i32 %and752, 8, !dbg !11533
  %or754 = or i32 %shl749, %shl753, !dbg !11533
  %arraydecay755 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11533
  %add.ptr756 = getelementptr i32, i32* %arraydecay755, i64 2, !dbg !11533
  %201 = load i32, i32* %add.ptr756, align 4, !dbg !11533
  %and757 = and i32 %201, 16711680, !dbg !11533
  %shr758 = lshr i32 %and757, 8, !dbg !11533
  %or759 = or i32 %or754, %shr758, !dbg !11533
  %arraydecay760 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11533
  %add.ptr761 = getelementptr i32, i32* %arraydecay760, i64 2, !dbg !11533
  %202 = load i32, i32* %add.ptr761, align 4, !dbg !11533
  %and762 = and i32 %202, -16777216, !dbg !11533
  %shr763 = lshr i32 %and762, 24, !dbg !11533
  %or764 = or i32 %or759, %shr763, !dbg !11533
  br label %cond.end769, !dbg !11533

cond.false765:                                    ; preds = %do.end742
  %arraydecay766 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11533
  %add.ptr767 = getelementptr i32, i32* %arraydecay766, i64 2, !dbg !11533
  %203 = load i32, i32* %add.ptr767, align 4, !dbg !11533
  %call768 = call i32 @__fswab32(i32 %203) #8, !dbg !11533
  br label %cond.end769, !dbg !11533

cond.end769:                                      ; preds = %cond.false765, %cond.true745
  %cond770 = phi i32 [ %or764, %cond.true745 ], [ %call768, %cond.false765 ], !dbg !11533
  %and771 = and i32 %cond770, 2147483647, !dbg !11533
  %204 = load i32, i32* %_v740, align 4, !dbg !11533
  %and772 = and i32 %204, 1, !dbg !11533
  %shl773 = shl i32 %and772, 31, !dbg !11533
  %or774 = or i32 %and771, %shl773, !dbg !11533
  %205 = call i1 @llvm.is.constant.i32(i32 %or774), !dbg !11533
  br i1 %205, label %cond.true775, label %cond.false915, !dbg !11533

cond.true775:                                     ; preds = %cond.end769
  %arraydecay776 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11533
  %add.ptr777 = getelementptr i32, i32* %arraydecay776, i64 2, !dbg !11533
  %206 = load i32, i32* %add.ptr777, align 4, !dbg !11533
  %207 = call i1 @llvm.is.constant.i32(i32 %206), !dbg !11533
  br i1 %207, label %cond.true778, label %cond.false798, !dbg !11533

cond.true778:                                     ; preds = %cond.true775
  %arraydecay779 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11533
  %add.ptr780 = getelementptr i32, i32* %arraydecay779, i64 2, !dbg !11533
  %208 = load i32, i32* %add.ptr780, align 4, !dbg !11533
  %and781 = and i32 %208, 255, !dbg !11533
  %shl782 = shl i32 %and781, 24, !dbg !11533
  %arraydecay783 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11533
  %add.ptr784 = getelementptr i32, i32* %arraydecay783, i64 2, !dbg !11533
  %209 = load i32, i32* %add.ptr784, align 4, !dbg !11533
  %and785 = and i32 %209, 65280, !dbg !11533
  %shl786 = shl i32 %and785, 8, !dbg !11533
  %or787 = or i32 %shl782, %shl786, !dbg !11533
  %arraydecay788 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11533
  %add.ptr789 = getelementptr i32, i32* %arraydecay788, i64 2, !dbg !11533
  %210 = load i32, i32* %add.ptr789, align 4, !dbg !11533
  %and790 = and i32 %210, 16711680, !dbg !11533
  %shr791 = lshr i32 %and790, 8, !dbg !11533
  %or792 = or i32 %or787, %shr791, !dbg !11533
  %arraydecay793 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11533
  %add.ptr794 = getelementptr i32, i32* %arraydecay793, i64 2, !dbg !11533
  %211 = load i32, i32* %add.ptr794, align 4, !dbg !11533
  %and795 = and i32 %211, -16777216, !dbg !11533
  %shr796 = lshr i32 %and795, 24, !dbg !11533
  %or797 = or i32 %or792, %shr796, !dbg !11533
  br label %cond.end802, !dbg !11533

cond.false798:                                    ; preds = %cond.true775
  %arraydecay799 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11533
  %add.ptr800 = getelementptr i32, i32* %arraydecay799, i64 2, !dbg !11533
  %212 = load i32, i32* %add.ptr800, align 4, !dbg !11533
  %call801 = call i32 @__fswab32(i32 %212) #8, !dbg !11533
  br label %cond.end802, !dbg !11533

cond.end802:                                      ; preds = %cond.false798, %cond.true778
  %cond803 = phi i32 [ %or797, %cond.true778 ], [ %call801, %cond.false798 ], !dbg !11533
  %and804 = and i32 %cond803, 2147483647, !dbg !11533
  %213 = load i32, i32* %_v740, align 4, !dbg !11533
  %and805 = and i32 %213, 1, !dbg !11533
  %shl806 = shl i32 %and805, 31, !dbg !11533
  %or807 = or i32 %and804, %shl806, !dbg !11533
  %and808 = and i32 %or807, 255, !dbg !11533
  %shl809 = shl i32 %and808, 24, !dbg !11533
  %arraydecay810 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11533
  %add.ptr811 = getelementptr i32, i32* %arraydecay810, i64 2, !dbg !11533
  %214 = load i32, i32* %add.ptr811, align 4, !dbg !11533
  %215 = call i1 @llvm.is.constant.i32(i32 %214), !dbg !11533
  br i1 %215, label %cond.true812, label %cond.false832, !dbg !11533

cond.true812:                                     ; preds = %cond.end802
  %arraydecay813 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11533
  %add.ptr814 = getelementptr i32, i32* %arraydecay813, i64 2, !dbg !11533
  %216 = load i32, i32* %add.ptr814, align 4, !dbg !11533
  %and815 = and i32 %216, 255, !dbg !11533
  %shl816 = shl i32 %and815, 24, !dbg !11533
  %arraydecay817 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11533
  %add.ptr818 = getelementptr i32, i32* %arraydecay817, i64 2, !dbg !11533
  %217 = load i32, i32* %add.ptr818, align 4, !dbg !11533
  %and819 = and i32 %217, 65280, !dbg !11533
  %shl820 = shl i32 %and819, 8, !dbg !11533
  %or821 = or i32 %shl816, %shl820, !dbg !11533
  %arraydecay822 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11533
  %add.ptr823 = getelementptr i32, i32* %arraydecay822, i64 2, !dbg !11533
  %218 = load i32, i32* %add.ptr823, align 4, !dbg !11533
  %and824 = and i32 %218, 16711680, !dbg !11533
  %shr825 = lshr i32 %and824, 8, !dbg !11533
  %or826 = or i32 %or821, %shr825, !dbg !11533
  %arraydecay827 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11533
  %add.ptr828 = getelementptr i32, i32* %arraydecay827, i64 2, !dbg !11533
  %219 = load i32, i32* %add.ptr828, align 4, !dbg !11533
  %and829 = and i32 %219, -16777216, !dbg !11533
  %shr830 = lshr i32 %and829, 24, !dbg !11533
  %or831 = or i32 %or826, %shr830, !dbg !11533
  br label %cond.end836, !dbg !11533

cond.false832:                                    ; preds = %cond.end802
  %arraydecay833 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11533
  %add.ptr834 = getelementptr i32, i32* %arraydecay833, i64 2, !dbg !11533
  %220 = load i32, i32* %add.ptr834, align 4, !dbg !11533
  %call835 = call i32 @__fswab32(i32 %220) #8, !dbg !11533
  br label %cond.end836, !dbg !11533

cond.end836:                                      ; preds = %cond.false832, %cond.true812
  %cond837 = phi i32 [ %or831, %cond.true812 ], [ %call835, %cond.false832 ], !dbg !11533
  %and838 = and i32 %cond837, 2147483647, !dbg !11533
  %221 = load i32, i32* %_v740, align 4, !dbg !11533
  %and839 = and i32 %221, 1, !dbg !11533
  %shl840 = shl i32 %and839, 31, !dbg !11533
  %or841 = or i32 %and838, %shl840, !dbg !11533
  %and842 = and i32 %or841, 65280, !dbg !11533
  %shl843 = shl i32 %and842, 8, !dbg !11533
  %or844 = or i32 %shl809, %shl843, !dbg !11533
  %arraydecay845 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11533
  %add.ptr846 = getelementptr i32, i32* %arraydecay845, i64 2, !dbg !11533
  %222 = load i32, i32* %add.ptr846, align 4, !dbg !11533
  %223 = call i1 @llvm.is.constant.i32(i32 %222), !dbg !11533
  br i1 %223, label %cond.true847, label %cond.false867, !dbg !11533

cond.true847:                                     ; preds = %cond.end836
  %arraydecay848 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11533
  %add.ptr849 = getelementptr i32, i32* %arraydecay848, i64 2, !dbg !11533
  %224 = load i32, i32* %add.ptr849, align 4, !dbg !11533
  %and850 = and i32 %224, 255, !dbg !11533
  %shl851 = shl i32 %and850, 24, !dbg !11533
  %arraydecay852 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11533
  %add.ptr853 = getelementptr i32, i32* %arraydecay852, i64 2, !dbg !11533
  %225 = load i32, i32* %add.ptr853, align 4, !dbg !11533
  %and854 = and i32 %225, 65280, !dbg !11533
  %shl855 = shl i32 %and854, 8, !dbg !11533
  %or856 = or i32 %shl851, %shl855, !dbg !11533
  %arraydecay857 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11533
  %add.ptr858 = getelementptr i32, i32* %arraydecay857, i64 2, !dbg !11533
  %226 = load i32, i32* %add.ptr858, align 4, !dbg !11533
  %and859 = and i32 %226, 16711680, !dbg !11533
  %shr860 = lshr i32 %and859, 8, !dbg !11533
  %or861 = or i32 %or856, %shr860, !dbg !11533
  %arraydecay862 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11533
  %add.ptr863 = getelementptr i32, i32* %arraydecay862, i64 2, !dbg !11533
  %227 = load i32, i32* %add.ptr863, align 4, !dbg !11533
  %and864 = and i32 %227, -16777216, !dbg !11533
  %shr865 = lshr i32 %and864, 24, !dbg !11533
  %or866 = or i32 %or861, %shr865, !dbg !11533
  br label %cond.end871, !dbg !11533

cond.false867:                                    ; preds = %cond.end836
  %arraydecay868 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11533
  %add.ptr869 = getelementptr i32, i32* %arraydecay868, i64 2, !dbg !11533
  %228 = load i32, i32* %add.ptr869, align 4, !dbg !11533
  %call870 = call i32 @__fswab32(i32 %228) #8, !dbg !11533
  br label %cond.end871, !dbg !11533

cond.end871:                                      ; preds = %cond.false867, %cond.true847
  %cond872 = phi i32 [ %or866, %cond.true847 ], [ %call870, %cond.false867 ], !dbg !11533
  %and873 = and i32 %cond872, 2147483647, !dbg !11533
  %229 = load i32, i32* %_v740, align 4, !dbg !11533
  %and874 = and i32 %229, 1, !dbg !11533
  %shl875 = shl i32 %and874, 31, !dbg !11533
  %or876 = or i32 %and873, %shl875, !dbg !11533
  %and877 = and i32 %or876, 16711680, !dbg !11533
  %shr878 = lshr i32 %and877, 8, !dbg !11533
  %or879 = or i32 %or844, %shr878, !dbg !11533
  %arraydecay880 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11533
  %add.ptr881 = getelementptr i32, i32* %arraydecay880, i64 2, !dbg !11533
  %230 = load i32, i32* %add.ptr881, align 4, !dbg !11533
  %231 = call i1 @llvm.is.constant.i32(i32 %230), !dbg !11533
  br i1 %231, label %cond.true882, label %cond.false902, !dbg !11533

cond.true882:                                     ; preds = %cond.end871
  %arraydecay883 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11533
  %add.ptr884 = getelementptr i32, i32* %arraydecay883, i64 2, !dbg !11533
  %232 = load i32, i32* %add.ptr884, align 4, !dbg !11533
  %and885 = and i32 %232, 255, !dbg !11533
  %shl886 = shl i32 %and885, 24, !dbg !11533
  %arraydecay887 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11533
  %add.ptr888 = getelementptr i32, i32* %arraydecay887, i64 2, !dbg !11533
  %233 = load i32, i32* %add.ptr888, align 4, !dbg !11533
  %and889 = and i32 %233, 65280, !dbg !11533
  %shl890 = shl i32 %and889, 8, !dbg !11533
  %or891 = or i32 %shl886, %shl890, !dbg !11533
  %arraydecay892 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11533
  %add.ptr893 = getelementptr i32, i32* %arraydecay892, i64 2, !dbg !11533
  %234 = load i32, i32* %add.ptr893, align 4, !dbg !11533
  %and894 = and i32 %234, 16711680, !dbg !11533
  %shr895 = lshr i32 %and894, 8, !dbg !11533
  %or896 = or i32 %or891, %shr895, !dbg !11533
  %arraydecay897 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11533
  %add.ptr898 = getelementptr i32, i32* %arraydecay897, i64 2, !dbg !11533
  %235 = load i32, i32* %add.ptr898, align 4, !dbg !11533
  %and899 = and i32 %235, -16777216, !dbg !11533
  %shr900 = lshr i32 %and899, 24, !dbg !11533
  %or901 = or i32 %or896, %shr900, !dbg !11533
  br label %cond.end906, !dbg !11533

cond.false902:                                    ; preds = %cond.end871
  %arraydecay903 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11533
  %add.ptr904 = getelementptr i32, i32* %arraydecay903, i64 2, !dbg !11533
  %236 = load i32, i32* %add.ptr904, align 4, !dbg !11533
  %call905 = call i32 @__fswab32(i32 %236) #8, !dbg !11533
  br label %cond.end906, !dbg !11533

cond.end906:                                      ; preds = %cond.false902, %cond.true882
  %cond907 = phi i32 [ %or901, %cond.true882 ], [ %call905, %cond.false902 ], !dbg !11533
  %and908 = and i32 %cond907, 2147483647, !dbg !11533
  %237 = load i32, i32* %_v740, align 4, !dbg !11533
  %and909 = and i32 %237, 1, !dbg !11533
  %shl910 = shl i32 %and909, 31, !dbg !11533
  %or911 = or i32 %and908, %shl910, !dbg !11533
  %and912 = and i32 %or911, -16777216, !dbg !11533
  %shr913 = lshr i32 %and912, 24, !dbg !11533
  %or914 = or i32 %or879, %shr913, !dbg !11533
  br label %cond.end949, !dbg !11533

cond.false915:                                    ; preds = %cond.end769
  %arraydecay916 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11533
  %add.ptr917 = getelementptr i32, i32* %arraydecay916, i64 2, !dbg !11533
  %238 = load i32, i32* %add.ptr917, align 4, !dbg !11533
  %239 = call i1 @llvm.is.constant.i32(i32 %238), !dbg !11533
  br i1 %239, label %cond.true918, label %cond.false938, !dbg !11533

cond.true918:                                     ; preds = %cond.false915
  %arraydecay919 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11533
  %add.ptr920 = getelementptr i32, i32* %arraydecay919, i64 2, !dbg !11533
  %240 = load i32, i32* %add.ptr920, align 4, !dbg !11533
  %and921 = and i32 %240, 255, !dbg !11533
  %shl922 = shl i32 %and921, 24, !dbg !11533
  %arraydecay923 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11533
  %add.ptr924 = getelementptr i32, i32* %arraydecay923, i64 2, !dbg !11533
  %241 = load i32, i32* %add.ptr924, align 4, !dbg !11533
  %and925 = and i32 %241, 65280, !dbg !11533
  %shl926 = shl i32 %and925, 8, !dbg !11533
  %or927 = or i32 %shl922, %shl926, !dbg !11533
  %arraydecay928 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11533
  %add.ptr929 = getelementptr i32, i32* %arraydecay928, i64 2, !dbg !11533
  %242 = load i32, i32* %add.ptr929, align 4, !dbg !11533
  %and930 = and i32 %242, 16711680, !dbg !11533
  %shr931 = lshr i32 %and930, 8, !dbg !11533
  %or932 = or i32 %or927, %shr931, !dbg !11533
  %arraydecay933 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11533
  %add.ptr934 = getelementptr i32, i32* %arraydecay933, i64 2, !dbg !11533
  %243 = load i32, i32* %add.ptr934, align 4, !dbg !11533
  %and935 = and i32 %243, -16777216, !dbg !11533
  %shr936 = lshr i32 %and935, 24, !dbg !11533
  %or937 = or i32 %or932, %shr936, !dbg !11533
  br label %cond.end942, !dbg !11533

cond.false938:                                    ; preds = %cond.false915
  %arraydecay939 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11533
  %add.ptr940 = getelementptr i32, i32* %arraydecay939, i64 2, !dbg !11533
  %244 = load i32, i32* %add.ptr940, align 4, !dbg !11533
  %call941 = call i32 @__fswab32(i32 %244) #8, !dbg !11533
  br label %cond.end942, !dbg !11533

cond.end942:                                      ; preds = %cond.false938, %cond.true918
  %cond943 = phi i32 [ %or937, %cond.true918 ], [ %call941, %cond.false938 ], !dbg !11533
  %and944 = and i32 %cond943, 2147483647, !dbg !11533
  %245 = load i32, i32* %_v740, align 4, !dbg !11533
  %and945 = and i32 %245, 1, !dbg !11533
  %shl946 = shl i32 %and945, 31, !dbg !11533
  %or947 = or i32 %and944, %shl946, !dbg !11533
  %call948 = call i32 @__fswab32(i32 %or947) #8, !dbg !11533
  br label %cond.end949, !dbg !11533

cond.end949:                                      ; preds = %cond.end942, %cond.end906
  %cond950 = phi i32 [ %or914, %cond.end906 ], [ %call948, %cond.end942 ], !dbg !11533
  %arraydecay951 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11533
  %add.ptr952 = getelementptr i32, i32* %arraydecay951, i64 2, !dbg !11533
  store i32 %cond950, i32* %add.ptr952, align 4, !dbg !11533
  br label %do.end953, !dbg !11533

do.end953:                                        ; preds = %cond.end949
  %246 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !11536
  %arraydecay954 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !11537
  %247 = bitcast i32* %arraydecay954 to i8*, !dbg !11537
  %248 = load i8*, i8** %out, align 8, !dbg !11538
  %249 = load i32, i32* %out_sz, align 4, !dbg !11539
  %call955 = call i32 @mlx5_cmd_exec(%struct.mlx5_core_dev* %246, i8* %247, i32 16, i8* %248, i32 %249) #9, !dbg !11540
  store i32 %call955, i32* %err, align 4, !dbg !11541
  %250 = load i32, i32* %err, align 4, !dbg !11542
  %tobool956 = icmp ne i32 %250, 0, !dbg !11542
  br i1 %tobool956, label %if.then957, label %if.end958, !dbg !11544

if.then957:                                       ; preds = %do.end953
  br label %out991, !dbg !11545

if.end958:                                        ; preds = %do.end953
  %251 = load i8*, i8** %out, align 8, !dbg !11546
  %add.ptr959 = getelementptr i8, i8* %251, i64 16, !dbg !11546
  store i8* %add.ptr959, i8** %nic_vport_ctx, align 8, !dbg !11547
  %252 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !11548
  %253 = bitcast i8* %252 to i32*, !dbg !11548
  %add.ptr960 = getelementptr i32, i32* %253, i64 60, !dbg !11548
  %254 = load i32, i32* %add.ptr960, align 4, !dbg !11548
  %255 = call i1 @llvm.is.constant.i32(i32 %254), !dbg !11548
  br i1 %255, label %cond.true961, label %cond.false977, !dbg !11548

cond.true961:                                     ; preds = %if.end958
  %256 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !11548
  %257 = bitcast i8* %256 to i32*, !dbg !11548
  %add.ptr962 = getelementptr i32, i32* %257, i64 60, !dbg !11548
  %258 = load i32, i32* %add.ptr962, align 4, !dbg !11548
  %and963 = and i32 %258, 255, !dbg !11548
  %shl964 = shl i32 %and963, 24, !dbg !11548
  %259 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !11548
  %260 = bitcast i8* %259 to i32*, !dbg !11548
  %add.ptr965 = getelementptr i32, i32* %260, i64 60, !dbg !11548
  %261 = load i32, i32* %add.ptr965, align 4, !dbg !11548
  %and966 = and i32 %261, 65280, !dbg !11548
  %shl967 = shl i32 %and966, 8, !dbg !11548
  %or968 = or i32 %shl964, %shl967, !dbg !11548
  %262 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !11548
  %263 = bitcast i8* %262 to i32*, !dbg !11548
  %add.ptr969 = getelementptr i32, i32* %263, i64 60, !dbg !11548
  %264 = load i32, i32* %add.ptr969, align 4, !dbg !11548
  %and970 = and i32 %264, 16711680, !dbg !11548
  %shr971 = lshr i32 %and970, 8, !dbg !11548
  %or972 = or i32 %or968, %shr971, !dbg !11548
  %265 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !11548
  %266 = bitcast i8* %265 to i32*, !dbg !11548
  %add.ptr973 = getelementptr i32, i32* %266, i64 60, !dbg !11548
  %267 = load i32, i32* %add.ptr973, align 4, !dbg !11548
  %and974 = and i32 %267, -16777216, !dbg !11548
  %shr975 = lshr i32 %and974, 24, !dbg !11548
  %or976 = or i32 %or972, %shr975, !dbg !11548
  br label %cond.end980, !dbg !11548

cond.false977:                                    ; preds = %if.end958
  %268 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !11548
  %269 = bitcast i8* %268 to i32*, !dbg !11548
  %add.ptr978 = getelementptr i32, i32* %269, i64 60, !dbg !11548
  %270 = load i32, i32* %add.ptr978, align 4, !dbg !11548
  %call979 = call i32 @__fswab32(i32 %270) #8, !dbg !11548
  br label %cond.end980, !dbg !11548

cond.end980:                                      ; preds = %cond.false977, %cond.true961
  %cond981 = phi i32 [ %or976, %cond.true961 ], [ %call979, %cond.false977 ], !dbg !11548
  %shr982 = lshr i32 %cond981, 0, !dbg !11548
  %and983 = and i32 %shr982, 4095, !dbg !11548
  store i32 %and983, i32* %req_list_size, align 4, !dbg !11549
  %271 = load i32, i32* %req_list_size, align 4, !dbg !11550
  %272 = load i32*, i32** %list_size.addr, align 8, !dbg !11551
  store i32 %271, i32* %272, align 4, !dbg !11552
  store i32 0, i32* %i, align 4, !dbg !11553
  br label %for.cond, !dbg !11555

for.cond:                                         ; preds = %for.inc, %cond.end980
  %273 = load i32, i32* %i, align 4, !dbg !11556
  %274 = load i32, i32* %req_list_size, align 4, !dbg !11558
  %cmp984 = icmp slt i32 %273, %274, !dbg !11559
  br i1 %cmp984, label %for.body, label %for.end, !dbg !11560

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i8** %mac_addr, metadata !11561, metadata !DIExpression()), !dbg !11563
  %275 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !11564
  %276 = load i32, i32* %i, align 4, !dbg !11564
  %conv986 = sext i32 %276 to i64, !dbg !11564
  %277 = mul i64 %conv986, 64, !dbg !11564
  %278 = add i64 2048, %277, !dbg !11564
  %div = udiv i64 %278, 8, !dbg !11564
  %add.ptr987 = getelementptr i8, i8* %275, i64 %div, !dbg !11564
  %add.ptr988 = getelementptr i8, i8* %add.ptr987, i64 2, !dbg !11565
  store i8* %add.ptr988, i8** %mac_addr, align 8, !dbg !11563
  %279 = load [6 x i8]*, [6 x i8]** %addr_list.addr, align 8, !dbg !11566
  %280 = load i32, i32* %i, align 4, !dbg !11567
  %idxprom = sext i32 %280 to i64, !dbg !11566
  %arrayidx989 = getelementptr [6 x i8], [6 x i8]* %279, i64 %idxprom, !dbg !11566
  %arraydecay990 = getelementptr inbounds [6 x i8], [6 x i8]* %arrayidx989, i64 0, i64 0, !dbg !11566
  %281 = load i8*, i8** %mac_addr, align 8, !dbg !11568
  call void @ether_addr_copy(i8* %arraydecay990, i8* %281) #9, !dbg !11569
  br label %for.inc, !dbg !11570

for.inc:                                          ; preds = %for.body
  %282 = load i32, i32* %i, align 4, !dbg !11571
  %inc = add i32 %282, 1, !dbg !11571
  store i32 %inc, i32* %i, align 4, !dbg !11571
  br label %for.cond, !dbg !11572, !llvm.loop !11573

for.end:                                          ; preds = %for.cond
  br label %out991, !dbg !11574

out991:                                           ; preds = %for.end, %if.then957
  call void @llvm.dbg.label(metadata !11575), !dbg !11576
  %283 = load i8*, i8** %out, align 8, !dbg !11577
  call void @kfree(i8* %283) #9, !dbg !11578
  %284 = load i32, i32* %err, align 4, !dbg !11579
  store i32 %284, i32* %retval, align 4, !dbg !11580
  br label %return, !dbg !11580

return:                                           ; preds = %out991, %if.then94
  %285 = load i32, i32* %retval, align 4, !dbg !11581
  ret i32 %285, !dbg !11581
}

; Function Attrs: cold noredzone
declare dso_local void @_dev_warn(%struct.device*, i8*, ...) #6

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kzalloc(i64 %size, i32 %flags) #0 !dbg !11582 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !11583, metadata !DIExpression()), !dbg !11587
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !11593, metadata !DIExpression()), !dbg !11594
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !11595, metadata !DIExpression()), !dbg !11596
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !11597, metadata !DIExpression()), !dbg !11598
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !11599, metadata !DIExpression()), !dbg !11603
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !11605, metadata !DIExpression()), !dbg !11609
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !11611, metadata !DIExpression()), !dbg !11615
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !11620, metadata !DIExpression()), !dbg !11621
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !11622, metadata !DIExpression()), !dbg !11623
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !11624, metadata !DIExpression()), !dbg !11625
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !11626, metadata !DIExpression()), !dbg !11627
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !11628, metadata !DIExpression()), !dbg !11629
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !11630, metadata !DIExpression()), !dbg !11631
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !11632, metadata !DIExpression()), !dbg !11633
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !11634, metadata !DIExpression()), !dbg !11635
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !11636, metadata !DIExpression()), !dbg !11637
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !11638, metadata !DIExpression()), !dbg !11639
  %0 = load i64, i64* %size.addr, align 8, !dbg !11640
  %1 = load i32, i32* %flags.addr, align 4, !dbg !11641
  %or = or i32 %1, 256, !dbg !11642
  store i64 %0, i64* %size.addr.i, align 8
  store i32 %or, i32* %flags.addr.i, align 4
  %2 = load i64, i64* %size.addr.i, align 8, !dbg !11643
  %3 = call i1 @llvm.is.constant.i64(i64 %2) #12, !dbg !11644
  br i1 %3, label %if.then.i, label %if.end9.i, !dbg !11645

if.then.i:                                        ; preds = %entry
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !11646
  %cmp.i = icmp ugt i64 %4, 8192, !dbg !11647
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !11648

if.then1.i:                                       ; preds = %if.then.i
  %5 = load i64, i64* %size.addr.i, align 8, !dbg !11649
  %6 = load i32, i32* %flags.addr.i, align 4, !dbg !11650
  store i64 %5, i64* %size.addr.i.i, align 8
  store i32 %6, i32* %flags.addr.i.i, align 4
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !11651
  %call.i.i = call i32 @get_order(i64 %7) #8, !dbg !11652
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !11629
  %8 = load i64, i64* %size.addr.i.i, align 8, !dbg !11653
  %9 = load i32, i32* %flags.addr.i.i, align 4, !dbg !11654
  %10 = load i32, i32* %order.i.i, align 4, !dbg !11655
  store i64 %8, i64* %size.addr.i.i.i, align 8
  store i32 %9, i32* %flags.addr.i.i.i, align 4
  store i32 %10, i32* %order.addr.i.i.i, align 4
  %11 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !11656
  %12 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !11657
  %13 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !11658
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %11, i32 %12, i32 %13) #13, !dbg !11659
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !11659
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !11659
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !11659
  call void @llvm.assume(i1 %maskcond.i.i.i) #12, !dbg !11659
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !11660
  br label %kmalloc.exit, !dbg !11660

if.end.i:                                         ; preds = %if.then.i
  %14 = load i64, i64* %size.addr.i, align 8, !dbg !11661
  store i64 %14, i64* %size.addr.i11.i, align 8
  %15 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11662
  %tobool.i.i = icmp ne i64 %15, 0, !dbg !11662
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !11664

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !11665
  br label %kmalloc_index.exit.i, !dbg !11665

if.end.i.i:                                       ; preds = %if.end.i
  %16 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11666
  %cmp.i.i = icmp ule i64 %16, 8, !dbg !11668
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !11669

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !11670
  br label %kmalloc_index.exit.i, !dbg !11670

if.end2.i.i:                                      ; preds = %if.end.i.i
  %17 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11671
  %cmp3.i.i = icmp ugt i64 %17, 64, !dbg !11673
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !11674

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %18 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11675
  %cmp4.i.i = icmp ule i64 %18, 96, !dbg !11676
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !11677

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !11678
  br label %kmalloc_index.exit.i, !dbg !11678

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %19 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11679
  %cmp7.i.i = icmp ugt i64 %19, 128, !dbg !11681
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !11682

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %20 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11683
  %cmp9.i.i = icmp ule i64 %20, 192, !dbg !11684
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !11685

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !11686
  br label %kmalloc_index.exit.i, !dbg !11686

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %21 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11687
  %cmp12.i.i = icmp ule i64 %21, 8, !dbg !11689
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !11690

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !11691
  br label %kmalloc_index.exit.i, !dbg !11691

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %22 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11692
  %cmp15.i.i = icmp ule i64 %22, 16, !dbg !11694
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !11695

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !11696
  br label %kmalloc_index.exit.i, !dbg !11696

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %23 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11697
  %cmp18.i.i = icmp ule i64 %23, 32, !dbg !11699
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !11700

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !11701
  br label %kmalloc_index.exit.i, !dbg !11701

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %24 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11702
  %cmp21.i.i = icmp ule i64 %24, 64, !dbg !11704
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !11705

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !11706
  br label %kmalloc_index.exit.i, !dbg !11706

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %25 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11707
  %cmp24.i.i = icmp ule i64 %25, 128, !dbg !11709
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !11710

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !11711
  br label %kmalloc_index.exit.i, !dbg !11711

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %26 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11712
  %cmp27.i.i = icmp ule i64 %26, 256, !dbg !11714
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !11715

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !11716
  br label %kmalloc_index.exit.i, !dbg !11716

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %27 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11717
  %cmp30.i.i = icmp ule i64 %27, 512, !dbg !11719
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !11720

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !11721
  br label %kmalloc_index.exit.i, !dbg !11721

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %28 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11722
  %cmp33.i.i = icmp ule i64 %28, 1024, !dbg !11724
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !11725

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !11726
  br label %kmalloc_index.exit.i, !dbg !11726

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11727
  %cmp36.i.i = icmp ule i64 %29, 2048, !dbg !11729
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !11730

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !11731
  br label %kmalloc_index.exit.i, !dbg !11731

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11732
  %cmp39.i.i = icmp ule i64 %30, 4096, !dbg !11734
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !11735

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !11736
  br label %kmalloc_index.exit.i, !dbg !11736

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11737
  %cmp42.i.i = icmp ule i64 %31, 8192, !dbg !11739
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !11740

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !11741
  br label %kmalloc_index.exit.i, !dbg !11741

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11742
  %cmp45.i.i = icmp ule i64 %32, 16384, !dbg !11744
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !11745

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !11746
  br label %kmalloc_index.exit.i, !dbg !11746

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11747
  %cmp48.i.i = icmp ule i64 %33, 32768, !dbg !11749
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !11750

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !11751
  br label %kmalloc_index.exit.i, !dbg !11751

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11752
  %cmp51.i.i = icmp ule i64 %34, 65536, !dbg !11754
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !11755

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !11756
  br label %kmalloc_index.exit.i, !dbg !11756

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11757
  %cmp54.i.i = icmp ule i64 %35, 131072, !dbg !11759
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !11760

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !11761
  br label %kmalloc_index.exit.i, !dbg !11761

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11762
  %cmp57.i.i = icmp ule i64 %36, 262144, !dbg !11764
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !11765

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !11766
  br label %kmalloc_index.exit.i, !dbg !11766

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11767
  %cmp60.i.i = icmp ule i64 %37, 524288, !dbg !11769
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !11770

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !11771
  br label %kmalloc_index.exit.i, !dbg !11771

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11772
  %cmp63.i.i = icmp ule i64 %38, 1048576, !dbg !11774
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !11775

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !11776
  br label %kmalloc_index.exit.i, !dbg !11776

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11777
  %cmp66.i.i = icmp ule i64 %39, 2097152, !dbg !11779
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !11780

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !11781
  br label %kmalloc_index.exit.i, !dbg !11781

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11782
  %cmp69.i.i = icmp ule i64 %40, 4194304, !dbg !11784
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !11785

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !11786
  br label %kmalloc_index.exit.i, !dbg !11786

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11787
  %cmp72.i.i = icmp ule i64 %41, 8388608, !dbg !11789
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !11790

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !11791
  br label %kmalloc_index.exit.i, !dbg !11791

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11792
  %cmp75.i.i = icmp ule i64 %42, 16777216, !dbg !11794
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !11795

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !11796
  br label %kmalloc_index.exit.i, !dbg !11796

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11797
  %cmp78.i.i = icmp ule i64 %43, 33554432, !dbg !11799
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !11800

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !11801
  br label %kmalloc_index.exit.i, !dbg !11801

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11802
  %cmp81.i.i = icmp ule i64 %44, 67108864, !dbg !11804
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !11805

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !11806
  br label %kmalloc_index.exit.i, !dbg !11806

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.1, i64 0, i64 0), i32 382, i32 0, i64 12) #12, !dbg !11807, !srcloc !11810
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 221) #12, !dbg !11811, !srcloc !11814
  unreachable, !dbg !11815

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %45 = load i32, i32* %retval.i.i, align 4, !dbg !11816
  store i32 %45, i32* %index.i, align 4, !dbg !11817
  %46 = load i32, i32* %index.i, align 4, !dbg !11818
  %tobool.i = icmp ne i32 %46, 0, !dbg !11818
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !11820

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !11821
  br label %kmalloc.exit, !dbg !11821

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %47 = load i32, i32* %flags.addr.i, align 4, !dbg !11822
  store i32 %47, i32* %flags.addr.i13.i, align 4
  %48 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !11823
  %and.i.i = and i32 %48, 17, !dbg !11823
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !11823
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !11823
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !11823
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !11823
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !11825

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !11826
  br label %kmalloc_type.exit.i, !dbg !11826

if.end.i16.i:                                     ; preds = %if.end4.i
  %49 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !11827
  %and2.i.i = and i32 %49, 1, !dbg !11828
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !11827
  %50 = zext i1 %tobool3.i.i to i64, !dbg !11827
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !11827
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !11829
  br label %kmalloc_type.exit.i, !dbg !11829

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %51 = load i32, i32* %retval.i12.i, align 4, !dbg !11830
  %idxprom.i = zext i32 %51 to i64, !dbg !11831
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !11831
  %52 = load i32, i32* %index.i, align 4, !dbg !11832
  %idxprom6.i = zext i32 %52 to i64, !dbg !11831
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !11831
  %53 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !11831
  %54 = load i32, i32* %flags.addr.i, align 4, !dbg !11833
  %55 = load i64, i64* %size.addr.i, align 8, !dbg !11834
  store %struct.kmem_cache* %53, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %54, i32* %flags.addr.i17.i, align 4
  store i64 %55, i64* %size.addr.i18.i, align 8
  %56 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !11835
  %57 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !11836
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %56, i32 %57) #13, !dbg !11837
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !11837
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !11837
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !11837
  call void @llvm.assume(i1 %maskcond.i.i) #12, !dbg !11837
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !11598
  %58 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !11838
  %59 = load i8*, i8** %ret.i.i, align 8, !dbg !11839
  %60 = load i64, i64* %size.addr.i18.i, align 8, !dbg !11840
  %61 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !11841
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %58, i8* %59, i64 %60, i32 %61) #13, !dbg !11842
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !11843
  %62 = load i8*, i8** %ret.i.i, align 8, !dbg !11844
  store i8* %62, i8** %retval.i, align 8, !dbg !11845
  br label %kmalloc.exit, !dbg !11845

if.end9.i:                                        ; preds = %entry
  %63 = load i64, i64* %size.addr.i, align 8, !dbg !11846
  %64 = load i32, i32* %flags.addr.i, align 4, !dbg !11847
  %call10.i = call noalias i8* @__kmalloc(i64 %63, i32 %64) #13, !dbg !11848
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !11848
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !11848
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !11848
  call void @llvm.assume(i1 %maskcond.i) #12, !dbg !11848
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !11849
  br label %kmalloc.exit, !dbg !11849

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %65 = load i8*, i8** %retval.i, align 8, !dbg !11850
  ret i8* %65, !dbg !11851
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: noredzone
declare dso_local void @kfree(i8*) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @mlx5_modify_nic_vport_mac_list(%struct.mlx5_core_dev* %dev, i32 %list_type, [6 x i8]* %addr_list, i32 %list_size) #0 !dbg !11852 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.mlx5_core_dev*, align 8
  %list_type.addr = alloca i32, align 4
  %addr_list.addr = alloca [6 x i8]*, align 8
  %list_size.addr = alloca i32, align 4
  %out = alloca [4 x i32], align 16
  %nic_vport_ctx = alloca i8*, align 8
  %max_list_size = alloca i32, align 4
  %in_sz = alloca i32, align 4
  %in = alloca i8*, align 8
  %err = alloca i32, align 4
  %i = alloca i32, align 4
  %_v = alloca i32, align 4
  %_v271 = alloca i32, align 4
  %_v450 = alloca i32, align 4
  %_v628 = alloca i32, align 4
  %curr_mac = alloca i8*, align 8
  store %struct.mlx5_core_dev* %dev, %struct.mlx5_core_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_core_dev** %dev.addr, metadata !11855, metadata !DIExpression()), !dbg !11856
  store i32 %list_type, i32* %list_type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %list_type.addr, metadata !11857, metadata !DIExpression()), !dbg !11858
  store [6 x i8]* %addr_list, [6 x i8]** %addr_list.addr, align 8
  call void @llvm.dbg.declare(metadata [6 x i8]** %addr_list.addr, metadata !11859, metadata !DIExpression()), !dbg !11860
  store i32 %list_size, i32* %list_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %list_size.addr, metadata !11861, metadata !DIExpression()), !dbg !11862
  call void @llvm.dbg.declare(metadata [4 x i32]* %out, metadata !11863, metadata !DIExpression()), !dbg !11864
  %0 = bitcast [4 x i32]* %out to i8*, !dbg !11864
  call void @llvm.memset.p0i8.i64(i8* align 16 %0, i8 0, i64 16, i1 false), !dbg !11864
  call void @llvm.dbg.declare(metadata i8** %nic_vport_ctx, metadata !11865, metadata !DIExpression()), !dbg !11866
  call void @llvm.dbg.declare(metadata i32* %max_list_size, metadata !11867, metadata !DIExpression()), !dbg !11868
  call void @llvm.dbg.declare(metadata i32* %in_sz, metadata !11869, metadata !DIExpression()), !dbg !11870
  call void @llvm.dbg.declare(metadata i8** %in, metadata !11871, metadata !DIExpression()), !dbg !11872
  call void @llvm.dbg.declare(metadata i32* %err, metadata !11873, metadata !DIExpression()), !dbg !11874
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11875, metadata !DIExpression()), !dbg !11876
  %1 = load i32, i32* %list_type.addr, align 4, !dbg !11877
  %cmp = icmp eq i32 %1, 0, !dbg !11878
  br i1 %cmp, label %cond.true, label %cond.false37, !dbg !11877

cond.true:                                        ; preds = %entry
  %2 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !11879
  %caps = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %2, i32 0, i32 9, !dbg !11879
  %hca_cur = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps, i32 0, i32 0, !dbg !11879
  %arrayidx = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur, i64 0, i64 0, !dbg !11879
  %arraydecay = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx, i64 0, i64 0, !dbg !11879
  %add.ptr = getelementptr i32, i32* %arraydecay, i64 31, !dbg !11879
  %3 = load i32, i32* %add.ptr, align 4, !dbg !11879
  %4 = call i1 @llvm.is.constant.i32(i32 %3), !dbg !11879
  br i1 %4, label %cond.true1, label %cond.false, !dbg !11879

cond.true1:                                       ; preds = %cond.true
  %5 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !11879
  %caps2 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %5, i32 0, i32 9, !dbg !11879
  %hca_cur3 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps2, i32 0, i32 0, !dbg !11879
  %arrayidx4 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur3, i64 0, i64 0, !dbg !11879
  %arraydecay5 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx4, i64 0, i64 0, !dbg !11879
  %add.ptr6 = getelementptr i32, i32* %arraydecay5, i64 31, !dbg !11879
  %6 = load i32, i32* %add.ptr6, align 4, !dbg !11879
  %and = and i32 %6, 255, !dbg !11879
  %shl = shl i32 %and, 24, !dbg !11879
  %7 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !11879
  %caps7 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %7, i32 0, i32 9, !dbg !11879
  %hca_cur8 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps7, i32 0, i32 0, !dbg !11879
  %arrayidx9 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur8, i64 0, i64 0, !dbg !11879
  %arraydecay10 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx9, i64 0, i64 0, !dbg !11879
  %add.ptr11 = getelementptr i32, i32* %arraydecay10, i64 31, !dbg !11879
  %8 = load i32, i32* %add.ptr11, align 4, !dbg !11879
  %and12 = and i32 %8, 65280, !dbg !11879
  %shl13 = shl i32 %and12, 8, !dbg !11879
  %or = or i32 %shl, %shl13, !dbg !11879
  %9 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !11879
  %caps14 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %9, i32 0, i32 9, !dbg !11879
  %hca_cur15 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps14, i32 0, i32 0, !dbg !11879
  %arrayidx16 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur15, i64 0, i64 0, !dbg !11879
  %arraydecay17 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx16, i64 0, i64 0, !dbg !11879
  %add.ptr18 = getelementptr i32, i32* %arraydecay17, i64 31, !dbg !11879
  %10 = load i32, i32* %add.ptr18, align 4, !dbg !11879
  %and19 = and i32 %10, 16711680, !dbg !11879
  %shr = lshr i32 %and19, 8, !dbg !11879
  %or20 = or i32 %or, %shr, !dbg !11879
  %11 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !11879
  %caps21 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %11, i32 0, i32 9, !dbg !11879
  %hca_cur22 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps21, i32 0, i32 0, !dbg !11879
  %arrayidx23 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur22, i64 0, i64 0, !dbg !11879
  %arraydecay24 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx23, i64 0, i64 0, !dbg !11879
  %add.ptr25 = getelementptr i32, i32* %arraydecay24, i64 31, !dbg !11879
  %12 = load i32, i32* %add.ptr25, align 4, !dbg !11879
  %and26 = and i32 %12, -16777216, !dbg !11879
  %shr27 = lshr i32 %and26, 24, !dbg !11879
  %or28 = or i32 %or20, %shr27, !dbg !11879
  br label %cond.end, !dbg !11879

cond.false:                                       ; preds = %cond.true
  %13 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !11879
  %caps29 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %13, i32 0, i32 9, !dbg !11879
  %hca_cur30 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps29, i32 0, i32 0, !dbg !11879
  %arrayidx31 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur30, i64 0, i64 0, !dbg !11879
  %arraydecay32 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx31, i64 0, i64 0, !dbg !11879
  %add.ptr33 = getelementptr i32, i32* %arraydecay32, i64 31, !dbg !11879
  %14 = load i32, i32* %add.ptr33, align 4, !dbg !11879
  %call = call i32 @__fswab32(i32 %14) #8, !dbg !11879
  br label %cond.end, !dbg !11879

cond.end:                                         ; preds = %cond.false, %cond.true1
  %cond = phi i32 [ %or28, %cond.true1 ], [ %call, %cond.false ], !dbg !11879
  %shr34 = lshr i32 %cond, 0, !dbg !11879
  %and35 = and i32 %shr34, 31, !dbg !11879
  %shl36 = shl i32 1, %and35, !dbg !11880
  br label %cond.end87, !dbg !11877

cond.false37:                                     ; preds = %entry
  %15 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !11881
  %caps38 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %15, i32 0, i32 9, !dbg !11881
  %hca_cur39 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps38, i32 0, i32 0, !dbg !11881
  %arrayidx40 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur39, i64 0, i64 0, !dbg !11881
  %arraydecay41 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx40, i64 0, i64 0, !dbg !11881
  %add.ptr42 = getelementptr i32, i32* %arraydecay41, i64 31, !dbg !11881
  %16 = load i32, i32* %add.ptr42, align 4, !dbg !11881
  %17 = call i1 @llvm.is.constant.i32(i32 %16), !dbg !11881
  br i1 %17, label %cond.true43, label %cond.false75, !dbg !11881

cond.true43:                                      ; preds = %cond.false37
  %18 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !11881
  %caps44 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %18, i32 0, i32 9, !dbg !11881
  %hca_cur45 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps44, i32 0, i32 0, !dbg !11881
  %arrayidx46 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur45, i64 0, i64 0, !dbg !11881
  %arraydecay47 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx46, i64 0, i64 0, !dbg !11881
  %add.ptr48 = getelementptr i32, i32* %arraydecay47, i64 31, !dbg !11881
  %19 = load i32, i32* %add.ptr48, align 4, !dbg !11881
  %and49 = and i32 %19, 255, !dbg !11881
  %shl50 = shl i32 %and49, 24, !dbg !11881
  %20 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !11881
  %caps51 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %20, i32 0, i32 9, !dbg !11881
  %hca_cur52 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps51, i32 0, i32 0, !dbg !11881
  %arrayidx53 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur52, i64 0, i64 0, !dbg !11881
  %arraydecay54 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx53, i64 0, i64 0, !dbg !11881
  %add.ptr55 = getelementptr i32, i32* %arraydecay54, i64 31, !dbg !11881
  %21 = load i32, i32* %add.ptr55, align 4, !dbg !11881
  %and56 = and i32 %21, 65280, !dbg !11881
  %shl57 = shl i32 %and56, 8, !dbg !11881
  %or58 = or i32 %shl50, %shl57, !dbg !11881
  %22 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !11881
  %caps59 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %22, i32 0, i32 9, !dbg !11881
  %hca_cur60 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps59, i32 0, i32 0, !dbg !11881
  %arrayidx61 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur60, i64 0, i64 0, !dbg !11881
  %arraydecay62 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx61, i64 0, i64 0, !dbg !11881
  %add.ptr63 = getelementptr i32, i32* %arraydecay62, i64 31, !dbg !11881
  %23 = load i32, i32* %add.ptr63, align 4, !dbg !11881
  %and64 = and i32 %23, 16711680, !dbg !11881
  %shr65 = lshr i32 %and64, 8, !dbg !11881
  %or66 = or i32 %or58, %shr65, !dbg !11881
  %24 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !11881
  %caps67 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %24, i32 0, i32 9, !dbg !11881
  %hca_cur68 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps67, i32 0, i32 0, !dbg !11881
  %arrayidx69 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur68, i64 0, i64 0, !dbg !11881
  %arraydecay70 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx69, i64 0, i64 0, !dbg !11881
  %add.ptr71 = getelementptr i32, i32* %arraydecay70, i64 31, !dbg !11881
  %25 = load i32, i32* %add.ptr71, align 4, !dbg !11881
  %and72 = and i32 %25, -16777216, !dbg !11881
  %shr73 = lshr i32 %and72, 24, !dbg !11881
  %or74 = or i32 %or66, %shr73, !dbg !11881
  br label %cond.end82, !dbg !11881

cond.false75:                                     ; preds = %cond.false37
  %26 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !11881
  %caps76 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %26, i32 0, i32 9, !dbg !11881
  %hca_cur77 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps76, i32 0, i32 0, !dbg !11881
  %arrayidx78 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur77, i64 0, i64 0, !dbg !11881
  %arraydecay79 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx78, i64 0, i64 0, !dbg !11881
  %add.ptr80 = getelementptr i32, i32* %arraydecay79, i64 31, !dbg !11881
  %27 = load i32, i32* %add.ptr80, align 4, !dbg !11881
  %call81 = call i32 @__fswab32(i32 %27) #8, !dbg !11881
  br label %cond.end82, !dbg !11881

cond.end82:                                       ; preds = %cond.false75, %cond.true43
  %cond83 = phi i32 [ %or74, %cond.true43 ], [ %call81, %cond.false75 ], !dbg !11881
  %shr84 = lshr i32 %cond83, 8, !dbg !11881
  %and85 = and i32 %shr84, 31, !dbg !11881
  %shl86 = shl i32 1, %and85, !dbg !11882
  br label %cond.end87, !dbg !11877

cond.end87:                                       ; preds = %cond.end82, %cond.end
  %cond88 = phi i32 [ %shl36, %cond.end ], [ %shl86, %cond.end82 ], !dbg !11877
  store i32 %cond88, i32* %max_list_size, align 4, !dbg !11883
  %28 = load i32, i32* %list_size.addr, align 4, !dbg !11884
  %29 = load i32, i32* %max_list_size, align 4, !dbg !11886
  %cmp89 = icmp sgt i32 %28, %29, !dbg !11887
  br i1 %cmp89, label %if.then, label %if.end, !dbg !11888

if.then:                                          ; preds = %cond.end87
  store i32 -28, i32* %retval, align 4, !dbg !11889
  br label %return, !dbg !11889

if.end:                                           ; preds = %cond.end87
  %30 = load i32, i32* %list_size.addr, align 4, !dbg !11890
  %conv = sext i32 %30 to i64, !dbg !11890
  %mul = mul i64 %conv, 8, !dbg !11891
  %add = add i64 512, %mul, !dbg !11892
  %conv90 = trunc i64 %add to i32, !dbg !11893
  store i32 %conv90, i32* %in_sz, align 4, !dbg !11894
  %31 = load i32, i32* %in_sz, align 4, !dbg !11895
  %conv91 = sext i32 %31 to i64, !dbg !11895
  %call92 = call i8* @kzalloc(i64 %conv91, i32 3264) #9, !dbg !11896
  store i8* %call92, i8** %in, align 8, !dbg !11897
  %32 = load i8*, i8** %in, align 8, !dbg !11898
  %tobool = icmp ne i8* %32, null, !dbg !11898
  br i1 %tobool, label %if.end94, label %if.then93, !dbg !11900

if.then93:                                        ; preds = %if.end
  store i32 -12, i32* %retval, align 4, !dbg !11901
  br label %return, !dbg !11901

if.end94:                                         ; preds = %if.end
  br label %do.body, !dbg !11902

do.body:                                          ; preds = %if.end94
  call void @llvm.dbg.declare(metadata i32* %_v, metadata !11903, metadata !DIExpression()), !dbg !11905
  store i32 1877, i32* %_v, align 4, !dbg !11905
  br label %do.body95, !dbg !11905

do.body95:                                        ; preds = %do.body
  br label %do.end, !dbg !11906

do.end:                                           ; preds = %do.body95
  %33 = load i8*, i8** %in, align 8, !dbg !11905
  %34 = bitcast i8* %33 to i32*, !dbg !11905
  %add.ptr96 = getelementptr i32, i32* %34, i64 0, !dbg !11905
  %35 = load i32, i32* %add.ptr96, align 4, !dbg !11905
  %36 = call i1 @llvm.is.constant.i32(i32 %35), !dbg !11905
  br i1 %36, label %cond.true97, label %cond.false113, !dbg !11905

cond.true97:                                      ; preds = %do.end
  %37 = load i8*, i8** %in, align 8, !dbg !11905
  %38 = bitcast i8* %37 to i32*, !dbg !11905
  %add.ptr98 = getelementptr i32, i32* %38, i64 0, !dbg !11905
  %39 = load i32, i32* %add.ptr98, align 4, !dbg !11905
  %and99 = and i32 %39, 255, !dbg !11905
  %shl100 = shl i32 %and99, 24, !dbg !11905
  %40 = load i8*, i8** %in, align 8, !dbg !11905
  %41 = bitcast i8* %40 to i32*, !dbg !11905
  %add.ptr101 = getelementptr i32, i32* %41, i64 0, !dbg !11905
  %42 = load i32, i32* %add.ptr101, align 4, !dbg !11905
  %and102 = and i32 %42, 65280, !dbg !11905
  %shl103 = shl i32 %and102, 8, !dbg !11905
  %or104 = or i32 %shl100, %shl103, !dbg !11905
  %43 = load i8*, i8** %in, align 8, !dbg !11905
  %44 = bitcast i8* %43 to i32*, !dbg !11905
  %add.ptr105 = getelementptr i32, i32* %44, i64 0, !dbg !11905
  %45 = load i32, i32* %add.ptr105, align 4, !dbg !11905
  %and106 = and i32 %45, 16711680, !dbg !11905
  %shr107 = lshr i32 %and106, 8, !dbg !11905
  %or108 = or i32 %or104, %shr107, !dbg !11905
  %46 = load i8*, i8** %in, align 8, !dbg !11905
  %47 = bitcast i8* %46 to i32*, !dbg !11905
  %add.ptr109 = getelementptr i32, i32* %47, i64 0, !dbg !11905
  %48 = load i32, i32* %add.ptr109, align 4, !dbg !11905
  %and110 = and i32 %48, -16777216, !dbg !11905
  %shr111 = lshr i32 %and110, 24, !dbg !11905
  %or112 = or i32 %or108, %shr111, !dbg !11905
  br label %cond.end116, !dbg !11905

cond.false113:                                    ; preds = %do.end
  %49 = load i8*, i8** %in, align 8, !dbg !11905
  %50 = bitcast i8* %49 to i32*, !dbg !11905
  %add.ptr114 = getelementptr i32, i32* %50, i64 0, !dbg !11905
  %51 = load i32, i32* %add.ptr114, align 4, !dbg !11905
  %call115 = call i32 @__fswab32(i32 %51) #8, !dbg !11905
  br label %cond.end116, !dbg !11905

cond.end116:                                      ; preds = %cond.false113, %cond.true97
  %cond117 = phi i32 [ %or112, %cond.true97 ], [ %call115, %cond.false113 ], !dbg !11905
  %and118 = and i32 %cond117, 65535, !dbg !11905
  %52 = load i32, i32* %_v, align 4, !dbg !11905
  %and119 = and i32 %52, 65535, !dbg !11905
  %shl120 = shl i32 %and119, 16, !dbg !11905
  %or121 = or i32 %and118, %shl120, !dbg !11905
  %53 = call i1 @llvm.is.constant.i32(i32 %or121), !dbg !11905
  br i1 %53, label %cond.true122, label %cond.false238, !dbg !11905

cond.true122:                                     ; preds = %cond.end116
  %54 = load i8*, i8** %in, align 8, !dbg !11905
  %55 = bitcast i8* %54 to i32*, !dbg !11905
  %add.ptr123 = getelementptr i32, i32* %55, i64 0, !dbg !11905
  %56 = load i32, i32* %add.ptr123, align 4, !dbg !11905
  %57 = call i1 @llvm.is.constant.i32(i32 %56), !dbg !11905
  br i1 %57, label %cond.true124, label %cond.false140, !dbg !11905

cond.true124:                                     ; preds = %cond.true122
  %58 = load i8*, i8** %in, align 8, !dbg !11905
  %59 = bitcast i8* %58 to i32*, !dbg !11905
  %add.ptr125 = getelementptr i32, i32* %59, i64 0, !dbg !11905
  %60 = load i32, i32* %add.ptr125, align 4, !dbg !11905
  %and126 = and i32 %60, 255, !dbg !11905
  %shl127 = shl i32 %and126, 24, !dbg !11905
  %61 = load i8*, i8** %in, align 8, !dbg !11905
  %62 = bitcast i8* %61 to i32*, !dbg !11905
  %add.ptr128 = getelementptr i32, i32* %62, i64 0, !dbg !11905
  %63 = load i32, i32* %add.ptr128, align 4, !dbg !11905
  %and129 = and i32 %63, 65280, !dbg !11905
  %shl130 = shl i32 %and129, 8, !dbg !11905
  %or131 = or i32 %shl127, %shl130, !dbg !11905
  %64 = load i8*, i8** %in, align 8, !dbg !11905
  %65 = bitcast i8* %64 to i32*, !dbg !11905
  %add.ptr132 = getelementptr i32, i32* %65, i64 0, !dbg !11905
  %66 = load i32, i32* %add.ptr132, align 4, !dbg !11905
  %and133 = and i32 %66, 16711680, !dbg !11905
  %shr134 = lshr i32 %and133, 8, !dbg !11905
  %or135 = or i32 %or131, %shr134, !dbg !11905
  %67 = load i8*, i8** %in, align 8, !dbg !11905
  %68 = bitcast i8* %67 to i32*, !dbg !11905
  %add.ptr136 = getelementptr i32, i32* %68, i64 0, !dbg !11905
  %69 = load i32, i32* %add.ptr136, align 4, !dbg !11905
  %and137 = and i32 %69, -16777216, !dbg !11905
  %shr138 = lshr i32 %and137, 24, !dbg !11905
  %or139 = or i32 %or135, %shr138, !dbg !11905
  br label %cond.end143, !dbg !11905

cond.false140:                                    ; preds = %cond.true122
  %70 = load i8*, i8** %in, align 8, !dbg !11905
  %71 = bitcast i8* %70 to i32*, !dbg !11905
  %add.ptr141 = getelementptr i32, i32* %71, i64 0, !dbg !11905
  %72 = load i32, i32* %add.ptr141, align 4, !dbg !11905
  %call142 = call i32 @__fswab32(i32 %72) #8, !dbg !11905
  br label %cond.end143, !dbg !11905

cond.end143:                                      ; preds = %cond.false140, %cond.true124
  %cond144 = phi i32 [ %or139, %cond.true124 ], [ %call142, %cond.false140 ], !dbg !11905
  %and145 = and i32 %cond144, 65535, !dbg !11905
  %73 = load i32, i32* %_v, align 4, !dbg !11905
  %and146 = and i32 %73, 65535, !dbg !11905
  %shl147 = shl i32 %and146, 16, !dbg !11905
  %or148 = or i32 %and145, %shl147, !dbg !11905
  %and149 = and i32 %or148, 255, !dbg !11905
  %shl150 = shl i32 %and149, 24, !dbg !11905
  %74 = load i8*, i8** %in, align 8, !dbg !11905
  %75 = bitcast i8* %74 to i32*, !dbg !11905
  %add.ptr151 = getelementptr i32, i32* %75, i64 0, !dbg !11905
  %76 = load i32, i32* %add.ptr151, align 4, !dbg !11905
  %77 = call i1 @llvm.is.constant.i32(i32 %76), !dbg !11905
  br i1 %77, label %cond.true152, label %cond.false168, !dbg !11905

cond.true152:                                     ; preds = %cond.end143
  %78 = load i8*, i8** %in, align 8, !dbg !11905
  %79 = bitcast i8* %78 to i32*, !dbg !11905
  %add.ptr153 = getelementptr i32, i32* %79, i64 0, !dbg !11905
  %80 = load i32, i32* %add.ptr153, align 4, !dbg !11905
  %and154 = and i32 %80, 255, !dbg !11905
  %shl155 = shl i32 %and154, 24, !dbg !11905
  %81 = load i8*, i8** %in, align 8, !dbg !11905
  %82 = bitcast i8* %81 to i32*, !dbg !11905
  %add.ptr156 = getelementptr i32, i32* %82, i64 0, !dbg !11905
  %83 = load i32, i32* %add.ptr156, align 4, !dbg !11905
  %and157 = and i32 %83, 65280, !dbg !11905
  %shl158 = shl i32 %and157, 8, !dbg !11905
  %or159 = or i32 %shl155, %shl158, !dbg !11905
  %84 = load i8*, i8** %in, align 8, !dbg !11905
  %85 = bitcast i8* %84 to i32*, !dbg !11905
  %add.ptr160 = getelementptr i32, i32* %85, i64 0, !dbg !11905
  %86 = load i32, i32* %add.ptr160, align 4, !dbg !11905
  %and161 = and i32 %86, 16711680, !dbg !11905
  %shr162 = lshr i32 %and161, 8, !dbg !11905
  %or163 = or i32 %or159, %shr162, !dbg !11905
  %87 = load i8*, i8** %in, align 8, !dbg !11905
  %88 = bitcast i8* %87 to i32*, !dbg !11905
  %add.ptr164 = getelementptr i32, i32* %88, i64 0, !dbg !11905
  %89 = load i32, i32* %add.ptr164, align 4, !dbg !11905
  %and165 = and i32 %89, -16777216, !dbg !11905
  %shr166 = lshr i32 %and165, 24, !dbg !11905
  %or167 = or i32 %or163, %shr166, !dbg !11905
  br label %cond.end171, !dbg !11905

cond.false168:                                    ; preds = %cond.end143
  %90 = load i8*, i8** %in, align 8, !dbg !11905
  %91 = bitcast i8* %90 to i32*, !dbg !11905
  %add.ptr169 = getelementptr i32, i32* %91, i64 0, !dbg !11905
  %92 = load i32, i32* %add.ptr169, align 4, !dbg !11905
  %call170 = call i32 @__fswab32(i32 %92) #8, !dbg !11905
  br label %cond.end171, !dbg !11905

cond.end171:                                      ; preds = %cond.false168, %cond.true152
  %cond172 = phi i32 [ %or167, %cond.true152 ], [ %call170, %cond.false168 ], !dbg !11905
  %and173 = and i32 %cond172, 65535, !dbg !11905
  %93 = load i32, i32* %_v, align 4, !dbg !11905
  %and174 = and i32 %93, 65535, !dbg !11905
  %shl175 = shl i32 %and174, 16, !dbg !11905
  %or176 = or i32 %and173, %shl175, !dbg !11905
  %and177 = and i32 %or176, 65280, !dbg !11905
  %shl178 = shl i32 %and177, 8, !dbg !11905
  %or179 = or i32 %shl150, %shl178, !dbg !11905
  %94 = load i8*, i8** %in, align 8, !dbg !11905
  %95 = bitcast i8* %94 to i32*, !dbg !11905
  %add.ptr180 = getelementptr i32, i32* %95, i64 0, !dbg !11905
  %96 = load i32, i32* %add.ptr180, align 4, !dbg !11905
  %97 = call i1 @llvm.is.constant.i32(i32 %96), !dbg !11905
  br i1 %97, label %cond.true181, label %cond.false197, !dbg !11905

cond.true181:                                     ; preds = %cond.end171
  %98 = load i8*, i8** %in, align 8, !dbg !11905
  %99 = bitcast i8* %98 to i32*, !dbg !11905
  %add.ptr182 = getelementptr i32, i32* %99, i64 0, !dbg !11905
  %100 = load i32, i32* %add.ptr182, align 4, !dbg !11905
  %and183 = and i32 %100, 255, !dbg !11905
  %shl184 = shl i32 %and183, 24, !dbg !11905
  %101 = load i8*, i8** %in, align 8, !dbg !11905
  %102 = bitcast i8* %101 to i32*, !dbg !11905
  %add.ptr185 = getelementptr i32, i32* %102, i64 0, !dbg !11905
  %103 = load i32, i32* %add.ptr185, align 4, !dbg !11905
  %and186 = and i32 %103, 65280, !dbg !11905
  %shl187 = shl i32 %and186, 8, !dbg !11905
  %or188 = or i32 %shl184, %shl187, !dbg !11905
  %104 = load i8*, i8** %in, align 8, !dbg !11905
  %105 = bitcast i8* %104 to i32*, !dbg !11905
  %add.ptr189 = getelementptr i32, i32* %105, i64 0, !dbg !11905
  %106 = load i32, i32* %add.ptr189, align 4, !dbg !11905
  %and190 = and i32 %106, 16711680, !dbg !11905
  %shr191 = lshr i32 %and190, 8, !dbg !11905
  %or192 = or i32 %or188, %shr191, !dbg !11905
  %107 = load i8*, i8** %in, align 8, !dbg !11905
  %108 = bitcast i8* %107 to i32*, !dbg !11905
  %add.ptr193 = getelementptr i32, i32* %108, i64 0, !dbg !11905
  %109 = load i32, i32* %add.ptr193, align 4, !dbg !11905
  %and194 = and i32 %109, -16777216, !dbg !11905
  %shr195 = lshr i32 %and194, 24, !dbg !11905
  %or196 = or i32 %or192, %shr195, !dbg !11905
  br label %cond.end200, !dbg !11905

cond.false197:                                    ; preds = %cond.end171
  %110 = load i8*, i8** %in, align 8, !dbg !11905
  %111 = bitcast i8* %110 to i32*, !dbg !11905
  %add.ptr198 = getelementptr i32, i32* %111, i64 0, !dbg !11905
  %112 = load i32, i32* %add.ptr198, align 4, !dbg !11905
  %call199 = call i32 @__fswab32(i32 %112) #8, !dbg !11905
  br label %cond.end200, !dbg !11905

cond.end200:                                      ; preds = %cond.false197, %cond.true181
  %cond201 = phi i32 [ %or196, %cond.true181 ], [ %call199, %cond.false197 ], !dbg !11905
  %and202 = and i32 %cond201, 65535, !dbg !11905
  %113 = load i32, i32* %_v, align 4, !dbg !11905
  %and203 = and i32 %113, 65535, !dbg !11905
  %shl204 = shl i32 %and203, 16, !dbg !11905
  %or205 = or i32 %and202, %shl204, !dbg !11905
  %and206 = and i32 %or205, 16711680, !dbg !11905
  %shr207 = lshr i32 %and206, 8, !dbg !11905
  %or208 = or i32 %or179, %shr207, !dbg !11905
  %114 = load i8*, i8** %in, align 8, !dbg !11905
  %115 = bitcast i8* %114 to i32*, !dbg !11905
  %add.ptr209 = getelementptr i32, i32* %115, i64 0, !dbg !11905
  %116 = load i32, i32* %add.ptr209, align 4, !dbg !11905
  %117 = call i1 @llvm.is.constant.i32(i32 %116), !dbg !11905
  br i1 %117, label %cond.true210, label %cond.false226, !dbg !11905

cond.true210:                                     ; preds = %cond.end200
  %118 = load i8*, i8** %in, align 8, !dbg !11905
  %119 = bitcast i8* %118 to i32*, !dbg !11905
  %add.ptr211 = getelementptr i32, i32* %119, i64 0, !dbg !11905
  %120 = load i32, i32* %add.ptr211, align 4, !dbg !11905
  %and212 = and i32 %120, 255, !dbg !11905
  %shl213 = shl i32 %and212, 24, !dbg !11905
  %121 = load i8*, i8** %in, align 8, !dbg !11905
  %122 = bitcast i8* %121 to i32*, !dbg !11905
  %add.ptr214 = getelementptr i32, i32* %122, i64 0, !dbg !11905
  %123 = load i32, i32* %add.ptr214, align 4, !dbg !11905
  %and215 = and i32 %123, 65280, !dbg !11905
  %shl216 = shl i32 %and215, 8, !dbg !11905
  %or217 = or i32 %shl213, %shl216, !dbg !11905
  %124 = load i8*, i8** %in, align 8, !dbg !11905
  %125 = bitcast i8* %124 to i32*, !dbg !11905
  %add.ptr218 = getelementptr i32, i32* %125, i64 0, !dbg !11905
  %126 = load i32, i32* %add.ptr218, align 4, !dbg !11905
  %and219 = and i32 %126, 16711680, !dbg !11905
  %shr220 = lshr i32 %and219, 8, !dbg !11905
  %or221 = or i32 %or217, %shr220, !dbg !11905
  %127 = load i8*, i8** %in, align 8, !dbg !11905
  %128 = bitcast i8* %127 to i32*, !dbg !11905
  %add.ptr222 = getelementptr i32, i32* %128, i64 0, !dbg !11905
  %129 = load i32, i32* %add.ptr222, align 4, !dbg !11905
  %and223 = and i32 %129, -16777216, !dbg !11905
  %shr224 = lshr i32 %and223, 24, !dbg !11905
  %or225 = or i32 %or221, %shr224, !dbg !11905
  br label %cond.end229, !dbg !11905

cond.false226:                                    ; preds = %cond.end200
  %130 = load i8*, i8** %in, align 8, !dbg !11905
  %131 = bitcast i8* %130 to i32*, !dbg !11905
  %add.ptr227 = getelementptr i32, i32* %131, i64 0, !dbg !11905
  %132 = load i32, i32* %add.ptr227, align 4, !dbg !11905
  %call228 = call i32 @__fswab32(i32 %132) #8, !dbg !11905
  br label %cond.end229, !dbg !11905

cond.end229:                                      ; preds = %cond.false226, %cond.true210
  %cond230 = phi i32 [ %or225, %cond.true210 ], [ %call228, %cond.false226 ], !dbg !11905
  %and231 = and i32 %cond230, 65535, !dbg !11905
  %133 = load i32, i32* %_v, align 4, !dbg !11905
  %and232 = and i32 %133, 65535, !dbg !11905
  %shl233 = shl i32 %and232, 16, !dbg !11905
  %or234 = or i32 %and231, %shl233, !dbg !11905
  %and235 = and i32 %or234, -16777216, !dbg !11905
  %shr236 = lshr i32 %and235, 24, !dbg !11905
  %or237 = or i32 %or208, %shr236, !dbg !11905
  br label %cond.end266, !dbg !11905

cond.false238:                                    ; preds = %cond.end116
  %134 = load i8*, i8** %in, align 8, !dbg !11905
  %135 = bitcast i8* %134 to i32*, !dbg !11905
  %add.ptr239 = getelementptr i32, i32* %135, i64 0, !dbg !11905
  %136 = load i32, i32* %add.ptr239, align 4, !dbg !11905
  %137 = call i1 @llvm.is.constant.i32(i32 %136), !dbg !11905
  br i1 %137, label %cond.true240, label %cond.false256, !dbg !11905

cond.true240:                                     ; preds = %cond.false238
  %138 = load i8*, i8** %in, align 8, !dbg !11905
  %139 = bitcast i8* %138 to i32*, !dbg !11905
  %add.ptr241 = getelementptr i32, i32* %139, i64 0, !dbg !11905
  %140 = load i32, i32* %add.ptr241, align 4, !dbg !11905
  %and242 = and i32 %140, 255, !dbg !11905
  %shl243 = shl i32 %and242, 24, !dbg !11905
  %141 = load i8*, i8** %in, align 8, !dbg !11905
  %142 = bitcast i8* %141 to i32*, !dbg !11905
  %add.ptr244 = getelementptr i32, i32* %142, i64 0, !dbg !11905
  %143 = load i32, i32* %add.ptr244, align 4, !dbg !11905
  %and245 = and i32 %143, 65280, !dbg !11905
  %shl246 = shl i32 %and245, 8, !dbg !11905
  %or247 = or i32 %shl243, %shl246, !dbg !11905
  %144 = load i8*, i8** %in, align 8, !dbg !11905
  %145 = bitcast i8* %144 to i32*, !dbg !11905
  %add.ptr248 = getelementptr i32, i32* %145, i64 0, !dbg !11905
  %146 = load i32, i32* %add.ptr248, align 4, !dbg !11905
  %and249 = and i32 %146, 16711680, !dbg !11905
  %shr250 = lshr i32 %and249, 8, !dbg !11905
  %or251 = or i32 %or247, %shr250, !dbg !11905
  %147 = load i8*, i8** %in, align 8, !dbg !11905
  %148 = bitcast i8* %147 to i32*, !dbg !11905
  %add.ptr252 = getelementptr i32, i32* %148, i64 0, !dbg !11905
  %149 = load i32, i32* %add.ptr252, align 4, !dbg !11905
  %and253 = and i32 %149, -16777216, !dbg !11905
  %shr254 = lshr i32 %and253, 24, !dbg !11905
  %or255 = or i32 %or251, %shr254, !dbg !11905
  br label %cond.end259, !dbg !11905

cond.false256:                                    ; preds = %cond.false238
  %150 = load i8*, i8** %in, align 8, !dbg !11905
  %151 = bitcast i8* %150 to i32*, !dbg !11905
  %add.ptr257 = getelementptr i32, i32* %151, i64 0, !dbg !11905
  %152 = load i32, i32* %add.ptr257, align 4, !dbg !11905
  %call258 = call i32 @__fswab32(i32 %152) #8, !dbg !11905
  br label %cond.end259, !dbg !11905

cond.end259:                                      ; preds = %cond.false256, %cond.true240
  %cond260 = phi i32 [ %or255, %cond.true240 ], [ %call258, %cond.false256 ], !dbg !11905
  %and261 = and i32 %cond260, 65535, !dbg !11905
  %153 = load i32, i32* %_v, align 4, !dbg !11905
  %and262 = and i32 %153, 65535, !dbg !11905
  %shl263 = shl i32 %and262, 16, !dbg !11905
  %or264 = or i32 %and261, %shl263, !dbg !11905
  %call265 = call i32 @__fswab32(i32 %or264) #8, !dbg !11905
  br label %cond.end266, !dbg !11905

cond.end266:                                      ; preds = %cond.end259, %cond.end229
  %cond267 = phi i32 [ %or237, %cond.end229 ], [ %call265, %cond.end259 ], !dbg !11905
  %154 = load i8*, i8** %in, align 8, !dbg !11905
  %155 = bitcast i8* %154 to i32*, !dbg !11905
  %add.ptr268 = getelementptr i32, i32* %155, i64 0, !dbg !11905
  store i32 %cond267, i32* %add.ptr268, align 4, !dbg !11905
  br label %do.end269, !dbg !11905

do.end269:                                        ; preds = %cond.end266
  br label %do.body270, !dbg !11908

do.body270:                                       ; preds = %do.end269
  call void @llvm.dbg.declare(metadata i32* %_v271, metadata !11909, metadata !DIExpression()), !dbg !11911
  store i32 1, i32* %_v271, align 4, !dbg !11911
  br label %do.body272, !dbg !11911

do.body272:                                       ; preds = %do.body270
  br label %do.end273, !dbg !11912

do.end273:                                        ; preds = %do.body272
  %156 = load i8*, i8** %in, align 8, !dbg !11911
  %157 = bitcast i8* %156 to i32*, !dbg !11911
  %add.ptr274 = getelementptr i32, i32* %157, i64 3, !dbg !11911
  %158 = load i32, i32* %add.ptr274, align 4, !dbg !11911
  %159 = call i1 @llvm.is.constant.i32(i32 %158), !dbg !11911
  br i1 %159, label %cond.true275, label %cond.false291, !dbg !11911

cond.true275:                                     ; preds = %do.end273
  %160 = load i8*, i8** %in, align 8, !dbg !11911
  %161 = bitcast i8* %160 to i32*, !dbg !11911
  %add.ptr276 = getelementptr i32, i32* %161, i64 3, !dbg !11911
  %162 = load i32, i32* %add.ptr276, align 4, !dbg !11911
  %and277 = and i32 %162, 255, !dbg !11911
  %shl278 = shl i32 %and277, 24, !dbg !11911
  %163 = load i8*, i8** %in, align 8, !dbg !11911
  %164 = bitcast i8* %163 to i32*, !dbg !11911
  %add.ptr279 = getelementptr i32, i32* %164, i64 3, !dbg !11911
  %165 = load i32, i32* %add.ptr279, align 4, !dbg !11911
  %and280 = and i32 %165, 65280, !dbg !11911
  %shl281 = shl i32 %and280, 8, !dbg !11911
  %or282 = or i32 %shl278, %shl281, !dbg !11911
  %166 = load i8*, i8** %in, align 8, !dbg !11911
  %167 = bitcast i8* %166 to i32*, !dbg !11911
  %add.ptr283 = getelementptr i32, i32* %167, i64 3, !dbg !11911
  %168 = load i32, i32* %add.ptr283, align 4, !dbg !11911
  %and284 = and i32 %168, 16711680, !dbg !11911
  %shr285 = lshr i32 %and284, 8, !dbg !11911
  %or286 = or i32 %or282, %shr285, !dbg !11911
  %169 = load i8*, i8** %in, align 8, !dbg !11911
  %170 = bitcast i8* %169 to i32*, !dbg !11911
  %add.ptr287 = getelementptr i32, i32* %170, i64 3, !dbg !11911
  %171 = load i32, i32* %add.ptr287, align 4, !dbg !11911
  %and288 = and i32 %171, -16777216, !dbg !11911
  %shr289 = lshr i32 %and288, 24, !dbg !11911
  %or290 = or i32 %or286, %shr289, !dbg !11911
  br label %cond.end294, !dbg !11911

cond.false291:                                    ; preds = %do.end273
  %172 = load i8*, i8** %in, align 8, !dbg !11911
  %173 = bitcast i8* %172 to i32*, !dbg !11911
  %add.ptr292 = getelementptr i32, i32* %173, i64 3, !dbg !11911
  %174 = load i32, i32* %add.ptr292, align 4, !dbg !11911
  %call293 = call i32 @__fswab32(i32 %174) #8, !dbg !11911
  br label %cond.end294, !dbg !11911

cond.end294:                                      ; preds = %cond.false291, %cond.true275
  %cond295 = phi i32 [ %or290, %cond.true275 ], [ %call293, %cond.false291 ], !dbg !11911
  %and296 = and i32 %cond295, -5, !dbg !11911
  %175 = load i32, i32* %_v271, align 4, !dbg !11911
  %and297 = and i32 %175, 1, !dbg !11911
  %shl298 = shl i32 %and297, 2, !dbg !11911
  %or299 = or i32 %and296, %shl298, !dbg !11911
  %176 = call i1 @llvm.is.constant.i32(i32 %or299), !dbg !11911
  br i1 %176, label %cond.true300, label %cond.false416, !dbg !11911

cond.true300:                                     ; preds = %cond.end294
  %177 = load i8*, i8** %in, align 8, !dbg !11911
  %178 = bitcast i8* %177 to i32*, !dbg !11911
  %add.ptr301 = getelementptr i32, i32* %178, i64 3, !dbg !11911
  %179 = load i32, i32* %add.ptr301, align 4, !dbg !11911
  %180 = call i1 @llvm.is.constant.i32(i32 %179), !dbg !11911
  br i1 %180, label %cond.true302, label %cond.false318, !dbg !11911

cond.true302:                                     ; preds = %cond.true300
  %181 = load i8*, i8** %in, align 8, !dbg !11911
  %182 = bitcast i8* %181 to i32*, !dbg !11911
  %add.ptr303 = getelementptr i32, i32* %182, i64 3, !dbg !11911
  %183 = load i32, i32* %add.ptr303, align 4, !dbg !11911
  %and304 = and i32 %183, 255, !dbg !11911
  %shl305 = shl i32 %and304, 24, !dbg !11911
  %184 = load i8*, i8** %in, align 8, !dbg !11911
  %185 = bitcast i8* %184 to i32*, !dbg !11911
  %add.ptr306 = getelementptr i32, i32* %185, i64 3, !dbg !11911
  %186 = load i32, i32* %add.ptr306, align 4, !dbg !11911
  %and307 = and i32 %186, 65280, !dbg !11911
  %shl308 = shl i32 %and307, 8, !dbg !11911
  %or309 = or i32 %shl305, %shl308, !dbg !11911
  %187 = load i8*, i8** %in, align 8, !dbg !11911
  %188 = bitcast i8* %187 to i32*, !dbg !11911
  %add.ptr310 = getelementptr i32, i32* %188, i64 3, !dbg !11911
  %189 = load i32, i32* %add.ptr310, align 4, !dbg !11911
  %and311 = and i32 %189, 16711680, !dbg !11911
  %shr312 = lshr i32 %and311, 8, !dbg !11911
  %or313 = or i32 %or309, %shr312, !dbg !11911
  %190 = load i8*, i8** %in, align 8, !dbg !11911
  %191 = bitcast i8* %190 to i32*, !dbg !11911
  %add.ptr314 = getelementptr i32, i32* %191, i64 3, !dbg !11911
  %192 = load i32, i32* %add.ptr314, align 4, !dbg !11911
  %and315 = and i32 %192, -16777216, !dbg !11911
  %shr316 = lshr i32 %and315, 24, !dbg !11911
  %or317 = or i32 %or313, %shr316, !dbg !11911
  br label %cond.end321, !dbg !11911

cond.false318:                                    ; preds = %cond.true300
  %193 = load i8*, i8** %in, align 8, !dbg !11911
  %194 = bitcast i8* %193 to i32*, !dbg !11911
  %add.ptr319 = getelementptr i32, i32* %194, i64 3, !dbg !11911
  %195 = load i32, i32* %add.ptr319, align 4, !dbg !11911
  %call320 = call i32 @__fswab32(i32 %195) #8, !dbg !11911
  br label %cond.end321, !dbg !11911

cond.end321:                                      ; preds = %cond.false318, %cond.true302
  %cond322 = phi i32 [ %or317, %cond.true302 ], [ %call320, %cond.false318 ], !dbg !11911
  %and323 = and i32 %cond322, -5, !dbg !11911
  %196 = load i32, i32* %_v271, align 4, !dbg !11911
  %and324 = and i32 %196, 1, !dbg !11911
  %shl325 = shl i32 %and324, 2, !dbg !11911
  %or326 = or i32 %and323, %shl325, !dbg !11911
  %and327 = and i32 %or326, 255, !dbg !11911
  %shl328 = shl i32 %and327, 24, !dbg !11911
  %197 = load i8*, i8** %in, align 8, !dbg !11911
  %198 = bitcast i8* %197 to i32*, !dbg !11911
  %add.ptr329 = getelementptr i32, i32* %198, i64 3, !dbg !11911
  %199 = load i32, i32* %add.ptr329, align 4, !dbg !11911
  %200 = call i1 @llvm.is.constant.i32(i32 %199), !dbg !11911
  br i1 %200, label %cond.true330, label %cond.false346, !dbg !11911

cond.true330:                                     ; preds = %cond.end321
  %201 = load i8*, i8** %in, align 8, !dbg !11911
  %202 = bitcast i8* %201 to i32*, !dbg !11911
  %add.ptr331 = getelementptr i32, i32* %202, i64 3, !dbg !11911
  %203 = load i32, i32* %add.ptr331, align 4, !dbg !11911
  %and332 = and i32 %203, 255, !dbg !11911
  %shl333 = shl i32 %and332, 24, !dbg !11911
  %204 = load i8*, i8** %in, align 8, !dbg !11911
  %205 = bitcast i8* %204 to i32*, !dbg !11911
  %add.ptr334 = getelementptr i32, i32* %205, i64 3, !dbg !11911
  %206 = load i32, i32* %add.ptr334, align 4, !dbg !11911
  %and335 = and i32 %206, 65280, !dbg !11911
  %shl336 = shl i32 %and335, 8, !dbg !11911
  %or337 = or i32 %shl333, %shl336, !dbg !11911
  %207 = load i8*, i8** %in, align 8, !dbg !11911
  %208 = bitcast i8* %207 to i32*, !dbg !11911
  %add.ptr338 = getelementptr i32, i32* %208, i64 3, !dbg !11911
  %209 = load i32, i32* %add.ptr338, align 4, !dbg !11911
  %and339 = and i32 %209, 16711680, !dbg !11911
  %shr340 = lshr i32 %and339, 8, !dbg !11911
  %or341 = or i32 %or337, %shr340, !dbg !11911
  %210 = load i8*, i8** %in, align 8, !dbg !11911
  %211 = bitcast i8* %210 to i32*, !dbg !11911
  %add.ptr342 = getelementptr i32, i32* %211, i64 3, !dbg !11911
  %212 = load i32, i32* %add.ptr342, align 4, !dbg !11911
  %and343 = and i32 %212, -16777216, !dbg !11911
  %shr344 = lshr i32 %and343, 24, !dbg !11911
  %or345 = or i32 %or341, %shr344, !dbg !11911
  br label %cond.end349, !dbg !11911

cond.false346:                                    ; preds = %cond.end321
  %213 = load i8*, i8** %in, align 8, !dbg !11911
  %214 = bitcast i8* %213 to i32*, !dbg !11911
  %add.ptr347 = getelementptr i32, i32* %214, i64 3, !dbg !11911
  %215 = load i32, i32* %add.ptr347, align 4, !dbg !11911
  %call348 = call i32 @__fswab32(i32 %215) #8, !dbg !11911
  br label %cond.end349, !dbg !11911

cond.end349:                                      ; preds = %cond.false346, %cond.true330
  %cond350 = phi i32 [ %or345, %cond.true330 ], [ %call348, %cond.false346 ], !dbg !11911
  %and351 = and i32 %cond350, -5, !dbg !11911
  %216 = load i32, i32* %_v271, align 4, !dbg !11911
  %and352 = and i32 %216, 1, !dbg !11911
  %shl353 = shl i32 %and352, 2, !dbg !11911
  %or354 = or i32 %and351, %shl353, !dbg !11911
  %and355 = and i32 %or354, 65280, !dbg !11911
  %shl356 = shl i32 %and355, 8, !dbg !11911
  %or357 = or i32 %shl328, %shl356, !dbg !11911
  %217 = load i8*, i8** %in, align 8, !dbg !11911
  %218 = bitcast i8* %217 to i32*, !dbg !11911
  %add.ptr358 = getelementptr i32, i32* %218, i64 3, !dbg !11911
  %219 = load i32, i32* %add.ptr358, align 4, !dbg !11911
  %220 = call i1 @llvm.is.constant.i32(i32 %219), !dbg !11911
  br i1 %220, label %cond.true359, label %cond.false375, !dbg !11911

cond.true359:                                     ; preds = %cond.end349
  %221 = load i8*, i8** %in, align 8, !dbg !11911
  %222 = bitcast i8* %221 to i32*, !dbg !11911
  %add.ptr360 = getelementptr i32, i32* %222, i64 3, !dbg !11911
  %223 = load i32, i32* %add.ptr360, align 4, !dbg !11911
  %and361 = and i32 %223, 255, !dbg !11911
  %shl362 = shl i32 %and361, 24, !dbg !11911
  %224 = load i8*, i8** %in, align 8, !dbg !11911
  %225 = bitcast i8* %224 to i32*, !dbg !11911
  %add.ptr363 = getelementptr i32, i32* %225, i64 3, !dbg !11911
  %226 = load i32, i32* %add.ptr363, align 4, !dbg !11911
  %and364 = and i32 %226, 65280, !dbg !11911
  %shl365 = shl i32 %and364, 8, !dbg !11911
  %or366 = or i32 %shl362, %shl365, !dbg !11911
  %227 = load i8*, i8** %in, align 8, !dbg !11911
  %228 = bitcast i8* %227 to i32*, !dbg !11911
  %add.ptr367 = getelementptr i32, i32* %228, i64 3, !dbg !11911
  %229 = load i32, i32* %add.ptr367, align 4, !dbg !11911
  %and368 = and i32 %229, 16711680, !dbg !11911
  %shr369 = lshr i32 %and368, 8, !dbg !11911
  %or370 = or i32 %or366, %shr369, !dbg !11911
  %230 = load i8*, i8** %in, align 8, !dbg !11911
  %231 = bitcast i8* %230 to i32*, !dbg !11911
  %add.ptr371 = getelementptr i32, i32* %231, i64 3, !dbg !11911
  %232 = load i32, i32* %add.ptr371, align 4, !dbg !11911
  %and372 = and i32 %232, -16777216, !dbg !11911
  %shr373 = lshr i32 %and372, 24, !dbg !11911
  %or374 = or i32 %or370, %shr373, !dbg !11911
  br label %cond.end378, !dbg !11911

cond.false375:                                    ; preds = %cond.end349
  %233 = load i8*, i8** %in, align 8, !dbg !11911
  %234 = bitcast i8* %233 to i32*, !dbg !11911
  %add.ptr376 = getelementptr i32, i32* %234, i64 3, !dbg !11911
  %235 = load i32, i32* %add.ptr376, align 4, !dbg !11911
  %call377 = call i32 @__fswab32(i32 %235) #8, !dbg !11911
  br label %cond.end378, !dbg !11911

cond.end378:                                      ; preds = %cond.false375, %cond.true359
  %cond379 = phi i32 [ %or374, %cond.true359 ], [ %call377, %cond.false375 ], !dbg !11911
  %and380 = and i32 %cond379, -5, !dbg !11911
  %236 = load i32, i32* %_v271, align 4, !dbg !11911
  %and381 = and i32 %236, 1, !dbg !11911
  %shl382 = shl i32 %and381, 2, !dbg !11911
  %or383 = or i32 %and380, %shl382, !dbg !11911
  %and384 = and i32 %or383, 16711680, !dbg !11911
  %shr385 = lshr i32 %and384, 8, !dbg !11911
  %or386 = or i32 %or357, %shr385, !dbg !11911
  %237 = load i8*, i8** %in, align 8, !dbg !11911
  %238 = bitcast i8* %237 to i32*, !dbg !11911
  %add.ptr387 = getelementptr i32, i32* %238, i64 3, !dbg !11911
  %239 = load i32, i32* %add.ptr387, align 4, !dbg !11911
  %240 = call i1 @llvm.is.constant.i32(i32 %239), !dbg !11911
  br i1 %240, label %cond.true388, label %cond.false404, !dbg !11911

cond.true388:                                     ; preds = %cond.end378
  %241 = load i8*, i8** %in, align 8, !dbg !11911
  %242 = bitcast i8* %241 to i32*, !dbg !11911
  %add.ptr389 = getelementptr i32, i32* %242, i64 3, !dbg !11911
  %243 = load i32, i32* %add.ptr389, align 4, !dbg !11911
  %and390 = and i32 %243, 255, !dbg !11911
  %shl391 = shl i32 %and390, 24, !dbg !11911
  %244 = load i8*, i8** %in, align 8, !dbg !11911
  %245 = bitcast i8* %244 to i32*, !dbg !11911
  %add.ptr392 = getelementptr i32, i32* %245, i64 3, !dbg !11911
  %246 = load i32, i32* %add.ptr392, align 4, !dbg !11911
  %and393 = and i32 %246, 65280, !dbg !11911
  %shl394 = shl i32 %and393, 8, !dbg !11911
  %or395 = or i32 %shl391, %shl394, !dbg !11911
  %247 = load i8*, i8** %in, align 8, !dbg !11911
  %248 = bitcast i8* %247 to i32*, !dbg !11911
  %add.ptr396 = getelementptr i32, i32* %248, i64 3, !dbg !11911
  %249 = load i32, i32* %add.ptr396, align 4, !dbg !11911
  %and397 = and i32 %249, 16711680, !dbg !11911
  %shr398 = lshr i32 %and397, 8, !dbg !11911
  %or399 = or i32 %or395, %shr398, !dbg !11911
  %250 = load i8*, i8** %in, align 8, !dbg !11911
  %251 = bitcast i8* %250 to i32*, !dbg !11911
  %add.ptr400 = getelementptr i32, i32* %251, i64 3, !dbg !11911
  %252 = load i32, i32* %add.ptr400, align 4, !dbg !11911
  %and401 = and i32 %252, -16777216, !dbg !11911
  %shr402 = lshr i32 %and401, 24, !dbg !11911
  %or403 = or i32 %or399, %shr402, !dbg !11911
  br label %cond.end407, !dbg !11911

cond.false404:                                    ; preds = %cond.end378
  %253 = load i8*, i8** %in, align 8, !dbg !11911
  %254 = bitcast i8* %253 to i32*, !dbg !11911
  %add.ptr405 = getelementptr i32, i32* %254, i64 3, !dbg !11911
  %255 = load i32, i32* %add.ptr405, align 4, !dbg !11911
  %call406 = call i32 @__fswab32(i32 %255) #8, !dbg !11911
  br label %cond.end407, !dbg !11911

cond.end407:                                      ; preds = %cond.false404, %cond.true388
  %cond408 = phi i32 [ %or403, %cond.true388 ], [ %call406, %cond.false404 ], !dbg !11911
  %and409 = and i32 %cond408, -5, !dbg !11911
  %256 = load i32, i32* %_v271, align 4, !dbg !11911
  %and410 = and i32 %256, 1, !dbg !11911
  %shl411 = shl i32 %and410, 2, !dbg !11911
  %or412 = or i32 %and409, %shl411, !dbg !11911
  %and413 = and i32 %or412, -16777216, !dbg !11911
  %shr414 = lshr i32 %and413, 24, !dbg !11911
  %or415 = or i32 %or386, %shr414, !dbg !11911
  br label %cond.end444, !dbg !11911

cond.false416:                                    ; preds = %cond.end294
  %257 = load i8*, i8** %in, align 8, !dbg !11911
  %258 = bitcast i8* %257 to i32*, !dbg !11911
  %add.ptr417 = getelementptr i32, i32* %258, i64 3, !dbg !11911
  %259 = load i32, i32* %add.ptr417, align 4, !dbg !11911
  %260 = call i1 @llvm.is.constant.i32(i32 %259), !dbg !11911
  br i1 %260, label %cond.true418, label %cond.false434, !dbg !11911

cond.true418:                                     ; preds = %cond.false416
  %261 = load i8*, i8** %in, align 8, !dbg !11911
  %262 = bitcast i8* %261 to i32*, !dbg !11911
  %add.ptr419 = getelementptr i32, i32* %262, i64 3, !dbg !11911
  %263 = load i32, i32* %add.ptr419, align 4, !dbg !11911
  %and420 = and i32 %263, 255, !dbg !11911
  %shl421 = shl i32 %and420, 24, !dbg !11911
  %264 = load i8*, i8** %in, align 8, !dbg !11911
  %265 = bitcast i8* %264 to i32*, !dbg !11911
  %add.ptr422 = getelementptr i32, i32* %265, i64 3, !dbg !11911
  %266 = load i32, i32* %add.ptr422, align 4, !dbg !11911
  %and423 = and i32 %266, 65280, !dbg !11911
  %shl424 = shl i32 %and423, 8, !dbg !11911
  %or425 = or i32 %shl421, %shl424, !dbg !11911
  %267 = load i8*, i8** %in, align 8, !dbg !11911
  %268 = bitcast i8* %267 to i32*, !dbg !11911
  %add.ptr426 = getelementptr i32, i32* %268, i64 3, !dbg !11911
  %269 = load i32, i32* %add.ptr426, align 4, !dbg !11911
  %and427 = and i32 %269, 16711680, !dbg !11911
  %shr428 = lshr i32 %and427, 8, !dbg !11911
  %or429 = or i32 %or425, %shr428, !dbg !11911
  %270 = load i8*, i8** %in, align 8, !dbg !11911
  %271 = bitcast i8* %270 to i32*, !dbg !11911
  %add.ptr430 = getelementptr i32, i32* %271, i64 3, !dbg !11911
  %272 = load i32, i32* %add.ptr430, align 4, !dbg !11911
  %and431 = and i32 %272, -16777216, !dbg !11911
  %shr432 = lshr i32 %and431, 24, !dbg !11911
  %or433 = or i32 %or429, %shr432, !dbg !11911
  br label %cond.end437, !dbg !11911

cond.false434:                                    ; preds = %cond.false416
  %273 = load i8*, i8** %in, align 8, !dbg !11911
  %274 = bitcast i8* %273 to i32*, !dbg !11911
  %add.ptr435 = getelementptr i32, i32* %274, i64 3, !dbg !11911
  %275 = load i32, i32* %add.ptr435, align 4, !dbg !11911
  %call436 = call i32 @__fswab32(i32 %275) #8, !dbg !11911
  br label %cond.end437, !dbg !11911

cond.end437:                                      ; preds = %cond.false434, %cond.true418
  %cond438 = phi i32 [ %or433, %cond.true418 ], [ %call436, %cond.false434 ], !dbg !11911
  %and439 = and i32 %cond438, -5, !dbg !11911
  %276 = load i32, i32* %_v271, align 4, !dbg !11911
  %and440 = and i32 %276, 1, !dbg !11911
  %shl441 = shl i32 %and440, 2, !dbg !11911
  %or442 = or i32 %and439, %shl441, !dbg !11911
  %call443 = call i32 @__fswab32(i32 %or442) #8, !dbg !11911
  br label %cond.end444, !dbg !11911

cond.end444:                                      ; preds = %cond.end437, %cond.end407
  %cond445 = phi i32 [ %or415, %cond.end407 ], [ %call443, %cond.end437 ], !dbg !11911
  %277 = load i8*, i8** %in, align 8, !dbg !11911
  %278 = bitcast i8* %277 to i32*, !dbg !11911
  %add.ptr446 = getelementptr i32, i32* %278, i64 3, !dbg !11911
  store i32 %cond445, i32* %add.ptr446, align 4, !dbg !11911
  br label %do.end447, !dbg !11911

do.end447:                                        ; preds = %cond.end444
  %279 = load i8*, i8** %in, align 8, !dbg !11914
  %add.ptr448 = getelementptr i8, i8* %279, i64 256, !dbg !11914
  store i8* %add.ptr448, i8** %nic_vport_ctx, align 8, !dbg !11915
  br label %do.body449, !dbg !11916

do.body449:                                       ; preds = %do.end447
  call void @llvm.dbg.declare(metadata i32* %_v450, metadata !11917, metadata !DIExpression()), !dbg !11919
  %280 = load i32, i32* %list_type.addr, align 4, !dbg !11919
  store i32 %280, i32* %_v450, align 4, !dbg !11919
  br label %do.body451, !dbg !11919

do.body451:                                       ; preds = %do.body449
  br label %do.end452, !dbg !11920

do.end452:                                        ; preds = %do.body451
  %281 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !11919
  %282 = bitcast i8* %281 to i32*, !dbg !11919
  %add.ptr453 = getelementptr i32, i32* %282, i64 60, !dbg !11919
  %283 = load i32, i32* %add.ptr453, align 4, !dbg !11919
  %284 = call i1 @llvm.is.constant.i32(i32 %283), !dbg !11919
  br i1 %284, label %cond.true454, label %cond.false470, !dbg !11919

cond.true454:                                     ; preds = %do.end452
  %285 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !11919
  %286 = bitcast i8* %285 to i32*, !dbg !11919
  %add.ptr455 = getelementptr i32, i32* %286, i64 60, !dbg !11919
  %287 = load i32, i32* %add.ptr455, align 4, !dbg !11919
  %and456 = and i32 %287, 255, !dbg !11919
  %shl457 = shl i32 %and456, 24, !dbg !11919
  %288 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !11919
  %289 = bitcast i8* %288 to i32*, !dbg !11919
  %add.ptr458 = getelementptr i32, i32* %289, i64 60, !dbg !11919
  %290 = load i32, i32* %add.ptr458, align 4, !dbg !11919
  %and459 = and i32 %290, 65280, !dbg !11919
  %shl460 = shl i32 %and459, 8, !dbg !11919
  %or461 = or i32 %shl457, %shl460, !dbg !11919
  %291 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !11919
  %292 = bitcast i8* %291 to i32*, !dbg !11919
  %add.ptr462 = getelementptr i32, i32* %292, i64 60, !dbg !11919
  %293 = load i32, i32* %add.ptr462, align 4, !dbg !11919
  %and463 = and i32 %293, 16711680, !dbg !11919
  %shr464 = lshr i32 %and463, 8, !dbg !11919
  %or465 = or i32 %or461, %shr464, !dbg !11919
  %294 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !11919
  %295 = bitcast i8* %294 to i32*, !dbg !11919
  %add.ptr466 = getelementptr i32, i32* %295, i64 60, !dbg !11919
  %296 = load i32, i32* %add.ptr466, align 4, !dbg !11919
  %and467 = and i32 %296, -16777216, !dbg !11919
  %shr468 = lshr i32 %and467, 24, !dbg !11919
  %or469 = or i32 %or465, %shr468, !dbg !11919
  br label %cond.end473, !dbg !11919

cond.false470:                                    ; preds = %do.end452
  %297 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !11919
  %298 = bitcast i8* %297 to i32*, !dbg !11919
  %add.ptr471 = getelementptr i32, i32* %298, i64 60, !dbg !11919
  %299 = load i32, i32* %add.ptr471, align 4, !dbg !11919
  %call472 = call i32 @__fswab32(i32 %299) #8, !dbg !11919
  br label %cond.end473, !dbg !11919

cond.end473:                                      ; preds = %cond.false470, %cond.true454
  %cond474 = phi i32 [ %or469, %cond.true454 ], [ %call472, %cond.false470 ], !dbg !11919
  %and475 = and i32 %cond474, -117440513, !dbg !11919
  %300 = load i32, i32* %_v450, align 4, !dbg !11919
  %and476 = and i32 %300, 7, !dbg !11919
  %shl477 = shl i32 %and476, 24, !dbg !11919
  %or478 = or i32 %and475, %shl477, !dbg !11919
  %301 = call i1 @llvm.is.constant.i32(i32 %or478), !dbg !11919
  br i1 %301, label %cond.true479, label %cond.false595, !dbg !11919

cond.true479:                                     ; preds = %cond.end473
  %302 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !11919
  %303 = bitcast i8* %302 to i32*, !dbg !11919
  %add.ptr480 = getelementptr i32, i32* %303, i64 60, !dbg !11919
  %304 = load i32, i32* %add.ptr480, align 4, !dbg !11919
  %305 = call i1 @llvm.is.constant.i32(i32 %304), !dbg !11919
  br i1 %305, label %cond.true481, label %cond.false497, !dbg !11919

cond.true481:                                     ; preds = %cond.true479
  %306 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !11919
  %307 = bitcast i8* %306 to i32*, !dbg !11919
  %add.ptr482 = getelementptr i32, i32* %307, i64 60, !dbg !11919
  %308 = load i32, i32* %add.ptr482, align 4, !dbg !11919
  %and483 = and i32 %308, 255, !dbg !11919
  %shl484 = shl i32 %and483, 24, !dbg !11919
  %309 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !11919
  %310 = bitcast i8* %309 to i32*, !dbg !11919
  %add.ptr485 = getelementptr i32, i32* %310, i64 60, !dbg !11919
  %311 = load i32, i32* %add.ptr485, align 4, !dbg !11919
  %and486 = and i32 %311, 65280, !dbg !11919
  %shl487 = shl i32 %and486, 8, !dbg !11919
  %or488 = or i32 %shl484, %shl487, !dbg !11919
  %312 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !11919
  %313 = bitcast i8* %312 to i32*, !dbg !11919
  %add.ptr489 = getelementptr i32, i32* %313, i64 60, !dbg !11919
  %314 = load i32, i32* %add.ptr489, align 4, !dbg !11919
  %and490 = and i32 %314, 16711680, !dbg !11919
  %shr491 = lshr i32 %and490, 8, !dbg !11919
  %or492 = or i32 %or488, %shr491, !dbg !11919
  %315 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !11919
  %316 = bitcast i8* %315 to i32*, !dbg !11919
  %add.ptr493 = getelementptr i32, i32* %316, i64 60, !dbg !11919
  %317 = load i32, i32* %add.ptr493, align 4, !dbg !11919
  %and494 = and i32 %317, -16777216, !dbg !11919
  %shr495 = lshr i32 %and494, 24, !dbg !11919
  %or496 = or i32 %or492, %shr495, !dbg !11919
  br label %cond.end500, !dbg !11919

cond.false497:                                    ; preds = %cond.true479
  %318 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !11919
  %319 = bitcast i8* %318 to i32*, !dbg !11919
  %add.ptr498 = getelementptr i32, i32* %319, i64 60, !dbg !11919
  %320 = load i32, i32* %add.ptr498, align 4, !dbg !11919
  %call499 = call i32 @__fswab32(i32 %320) #8, !dbg !11919
  br label %cond.end500, !dbg !11919

cond.end500:                                      ; preds = %cond.false497, %cond.true481
  %cond501 = phi i32 [ %or496, %cond.true481 ], [ %call499, %cond.false497 ], !dbg !11919
  %and502 = and i32 %cond501, -117440513, !dbg !11919
  %321 = load i32, i32* %_v450, align 4, !dbg !11919
  %and503 = and i32 %321, 7, !dbg !11919
  %shl504 = shl i32 %and503, 24, !dbg !11919
  %or505 = or i32 %and502, %shl504, !dbg !11919
  %and506 = and i32 %or505, 255, !dbg !11919
  %shl507 = shl i32 %and506, 24, !dbg !11919
  %322 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !11919
  %323 = bitcast i8* %322 to i32*, !dbg !11919
  %add.ptr508 = getelementptr i32, i32* %323, i64 60, !dbg !11919
  %324 = load i32, i32* %add.ptr508, align 4, !dbg !11919
  %325 = call i1 @llvm.is.constant.i32(i32 %324), !dbg !11919
  br i1 %325, label %cond.true509, label %cond.false525, !dbg !11919

cond.true509:                                     ; preds = %cond.end500
  %326 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !11919
  %327 = bitcast i8* %326 to i32*, !dbg !11919
  %add.ptr510 = getelementptr i32, i32* %327, i64 60, !dbg !11919
  %328 = load i32, i32* %add.ptr510, align 4, !dbg !11919
  %and511 = and i32 %328, 255, !dbg !11919
  %shl512 = shl i32 %and511, 24, !dbg !11919
  %329 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !11919
  %330 = bitcast i8* %329 to i32*, !dbg !11919
  %add.ptr513 = getelementptr i32, i32* %330, i64 60, !dbg !11919
  %331 = load i32, i32* %add.ptr513, align 4, !dbg !11919
  %and514 = and i32 %331, 65280, !dbg !11919
  %shl515 = shl i32 %and514, 8, !dbg !11919
  %or516 = or i32 %shl512, %shl515, !dbg !11919
  %332 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !11919
  %333 = bitcast i8* %332 to i32*, !dbg !11919
  %add.ptr517 = getelementptr i32, i32* %333, i64 60, !dbg !11919
  %334 = load i32, i32* %add.ptr517, align 4, !dbg !11919
  %and518 = and i32 %334, 16711680, !dbg !11919
  %shr519 = lshr i32 %and518, 8, !dbg !11919
  %or520 = or i32 %or516, %shr519, !dbg !11919
  %335 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !11919
  %336 = bitcast i8* %335 to i32*, !dbg !11919
  %add.ptr521 = getelementptr i32, i32* %336, i64 60, !dbg !11919
  %337 = load i32, i32* %add.ptr521, align 4, !dbg !11919
  %and522 = and i32 %337, -16777216, !dbg !11919
  %shr523 = lshr i32 %and522, 24, !dbg !11919
  %or524 = or i32 %or520, %shr523, !dbg !11919
  br label %cond.end528, !dbg !11919

cond.false525:                                    ; preds = %cond.end500
  %338 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !11919
  %339 = bitcast i8* %338 to i32*, !dbg !11919
  %add.ptr526 = getelementptr i32, i32* %339, i64 60, !dbg !11919
  %340 = load i32, i32* %add.ptr526, align 4, !dbg !11919
  %call527 = call i32 @__fswab32(i32 %340) #8, !dbg !11919
  br label %cond.end528, !dbg !11919

cond.end528:                                      ; preds = %cond.false525, %cond.true509
  %cond529 = phi i32 [ %or524, %cond.true509 ], [ %call527, %cond.false525 ], !dbg !11919
  %and530 = and i32 %cond529, -117440513, !dbg !11919
  %341 = load i32, i32* %_v450, align 4, !dbg !11919
  %and531 = and i32 %341, 7, !dbg !11919
  %shl532 = shl i32 %and531, 24, !dbg !11919
  %or533 = or i32 %and530, %shl532, !dbg !11919
  %and534 = and i32 %or533, 65280, !dbg !11919
  %shl535 = shl i32 %and534, 8, !dbg !11919
  %or536 = or i32 %shl507, %shl535, !dbg !11919
  %342 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !11919
  %343 = bitcast i8* %342 to i32*, !dbg !11919
  %add.ptr537 = getelementptr i32, i32* %343, i64 60, !dbg !11919
  %344 = load i32, i32* %add.ptr537, align 4, !dbg !11919
  %345 = call i1 @llvm.is.constant.i32(i32 %344), !dbg !11919
  br i1 %345, label %cond.true538, label %cond.false554, !dbg !11919

cond.true538:                                     ; preds = %cond.end528
  %346 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !11919
  %347 = bitcast i8* %346 to i32*, !dbg !11919
  %add.ptr539 = getelementptr i32, i32* %347, i64 60, !dbg !11919
  %348 = load i32, i32* %add.ptr539, align 4, !dbg !11919
  %and540 = and i32 %348, 255, !dbg !11919
  %shl541 = shl i32 %and540, 24, !dbg !11919
  %349 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !11919
  %350 = bitcast i8* %349 to i32*, !dbg !11919
  %add.ptr542 = getelementptr i32, i32* %350, i64 60, !dbg !11919
  %351 = load i32, i32* %add.ptr542, align 4, !dbg !11919
  %and543 = and i32 %351, 65280, !dbg !11919
  %shl544 = shl i32 %and543, 8, !dbg !11919
  %or545 = or i32 %shl541, %shl544, !dbg !11919
  %352 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !11919
  %353 = bitcast i8* %352 to i32*, !dbg !11919
  %add.ptr546 = getelementptr i32, i32* %353, i64 60, !dbg !11919
  %354 = load i32, i32* %add.ptr546, align 4, !dbg !11919
  %and547 = and i32 %354, 16711680, !dbg !11919
  %shr548 = lshr i32 %and547, 8, !dbg !11919
  %or549 = or i32 %or545, %shr548, !dbg !11919
  %355 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !11919
  %356 = bitcast i8* %355 to i32*, !dbg !11919
  %add.ptr550 = getelementptr i32, i32* %356, i64 60, !dbg !11919
  %357 = load i32, i32* %add.ptr550, align 4, !dbg !11919
  %and551 = and i32 %357, -16777216, !dbg !11919
  %shr552 = lshr i32 %and551, 24, !dbg !11919
  %or553 = or i32 %or549, %shr552, !dbg !11919
  br label %cond.end557, !dbg !11919

cond.false554:                                    ; preds = %cond.end528
  %358 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !11919
  %359 = bitcast i8* %358 to i32*, !dbg !11919
  %add.ptr555 = getelementptr i32, i32* %359, i64 60, !dbg !11919
  %360 = load i32, i32* %add.ptr555, align 4, !dbg !11919
  %call556 = call i32 @__fswab32(i32 %360) #8, !dbg !11919
  br label %cond.end557, !dbg !11919

cond.end557:                                      ; preds = %cond.false554, %cond.true538
  %cond558 = phi i32 [ %or553, %cond.true538 ], [ %call556, %cond.false554 ], !dbg !11919
  %and559 = and i32 %cond558, -117440513, !dbg !11919
  %361 = load i32, i32* %_v450, align 4, !dbg !11919
  %and560 = and i32 %361, 7, !dbg !11919
  %shl561 = shl i32 %and560, 24, !dbg !11919
  %or562 = or i32 %and559, %shl561, !dbg !11919
  %and563 = and i32 %or562, 16711680, !dbg !11919
  %shr564 = lshr i32 %and563, 8, !dbg !11919
  %or565 = or i32 %or536, %shr564, !dbg !11919
  %362 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !11919
  %363 = bitcast i8* %362 to i32*, !dbg !11919
  %add.ptr566 = getelementptr i32, i32* %363, i64 60, !dbg !11919
  %364 = load i32, i32* %add.ptr566, align 4, !dbg !11919
  %365 = call i1 @llvm.is.constant.i32(i32 %364), !dbg !11919
  br i1 %365, label %cond.true567, label %cond.false583, !dbg !11919

cond.true567:                                     ; preds = %cond.end557
  %366 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !11919
  %367 = bitcast i8* %366 to i32*, !dbg !11919
  %add.ptr568 = getelementptr i32, i32* %367, i64 60, !dbg !11919
  %368 = load i32, i32* %add.ptr568, align 4, !dbg !11919
  %and569 = and i32 %368, 255, !dbg !11919
  %shl570 = shl i32 %and569, 24, !dbg !11919
  %369 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !11919
  %370 = bitcast i8* %369 to i32*, !dbg !11919
  %add.ptr571 = getelementptr i32, i32* %370, i64 60, !dbg !11919
  %371 = load i32, i32* %add.ptr571, align 4, !dbg !11919
  %and572 = and i32 %371, 65280, !dbg !11919
  %shl573 = shl i32 %and572, 8, !dbg !11919
  %or574 = or i32 %shl570, %shl573, !dbg !11919
  %372 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !11919
  %373 = bitcast i8* %372 to i32*, !dbg !11919
  %add.ptr575 = getelementptr i32, i32* %373, i64 60, !dbg !11919
  %374 = load i32, i32* %add.ptr575, align 4, !dbg !11919
  %and576 = and i32 %374, 16711680, !dbg !11919
  %shr577 = lshr i32 %and576, 8, !dbg !11919
  %or578 = or i32 %or574, %shr577, !dbg !11919
  %375 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !11919
  %376 = bitcast i8* %375 to i32*, !dbg !11919
  %add.ptr579 = getelementptr i32, i32* %376, i64 60, !dbg !11919
  %377 = load i32, i32* %add.ptr579, align 4, !dbg !11919
  %and580 = and i32 %377, -16777216, !dbg !11919
  %shr581 = lshr i32 %and580, 24, !dbg !11919
  %or582 = or i32 %or578, %shr581, !dbg !11919
  br label %cond.end586, !dbg !11919

cond.false583:                                    ; preds = %cond.end557
  %378 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !11919
  %379 = bitcast i8* %378 to i32*, !dbg !11919
  %add.ptr584 = getelementptr i32, i32* %379, i64 60, !dbg !11919
  %380 = load i32, i32* %add.ptr584, align 4, !dbg !11919
  %call585 = call i32 @__fswab32(i32 %380) #8, !dbg !11919
  br label %cond.end586, !dbg !11919

cond.end586:                                      ; preds = %cond.false583, %cond.true567
  %cond587 = phi i32 [ %or582, %cond.true567 ], [ %call585, %cond.false583 ], !dbg !11919
  %and588 = and i32 %cond587, -117440513, !dbg !11919
  %381 = load i32, i32* %_v450, align 4, !dbg !11919
  %and589 = and i32 %381, 7, !dbg !11919
  %shl590 = shl i32 %and589, 24, !dbg !11919
  %or591 = or i32 %and588, %shl590, !dbg !11919
  %and592 = and i32 %or591, -16777216, !dbg !11919
  %shr593 = lshr i32 %and592, 24, !dbg !11919
  %or594 = or i32 %or565, %shr593, !dbg !11919
  br label %cond.end623, !dbg !11919

cond.false595:                                    ; preds = %cond.end473
  %382 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !11919
  %383 = bitcast i8* %382 to i32*, !dbg !11919
  %add.ptr596 = getelementptr i32, i32* %383, i64 60, !dbg !11919
  %384 = load i32, i32* %add.ptr596, align 4, !dbg !11919
  %385 = call i1 @llvm.is.constant.i32(i32 %384), !dbg !11919
  br i1 %385, label %cond.true597, label %cond.false613, !dbg !11919

cond.true597:                                     ; preds = %cond.false595
  %386 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !11919
  %387 = bitcast i8* %386 to i32*, !dbg !11919
  %add.ptr598 = getelementptr i32, i32* %387, i64 60, !dbg !11919
  %388 = load i32, i32* %add.ptr598, align 4, !dbg !11919
  %and599 = and i32 %388, 255, !dbg !11919
  %shl600 = shl i32 %and599, 24, !dbg !11919
  %389 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !11919
  %390 = bitcast i8* %389 to i32*, !dbg !11919
  %add.ptr601 = getelementptr i32, i32* %390, i64 60, !dbg !11919
  %391 = load i32, i32* %add.ptr601, align 4, !dbg !11919
  %and602 = and i32 %391, 65280, !dbg !11919
  %shl603 = shl i32 %and602, 8, !dbg !11919
  %or604 = or i32 %shl600, %shl603, !dbg !11919
  %392 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !11919
  %393 = bitcast i8* %392 to i32*, !dbg !11919
  %add.ptr605 = getelementptr i32, i32* %393, i64 60, !dbg !11919
  %394 = load i32, i32* %add.ptr605, align 4, !dbg !11919
  %and606 = and i32 %394, 16711680, !dbg !11919
  %shr607 = lshr i32 %and606, 8, !dbg !11919
  %or608 = or i32 %or604, %shr607, !dbg !11919
  %395 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !11919
  %396 = bitcast i8* %395 to i32*, !dbg !11919
  %add.ptr609 = getelementptr i32, i32* %396, i64 60, !dbg !11919
  %397 = load i32, i32* %add.ptr609, align 4, !dbg !11919
  %and610 = and i32 %397, -16777216, !dbg !11919
  %shr611 = lshr i32 %and610, 24, !dbg !11919
  %or612 = or i32 %or608, %shr611, !dbg !11919
  br label %cond.end616, !dbg !11919

cond.false613:                                    ; preds = %cond.false595
  %398 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !11919
  %399 = bitcast i8* %398 to i32*, !dbg !11919
  %add.ptr614 = getelementptr i32, i32* %399, i64 60, !dbg !11919
  %400 = load i32, i32* %add.ptr614, align 4, !dbg !11919
  %call615 = call i32 @__fswab32(i32 %400) #8, !dbg !11919
  br label %cond.end616, !dbg !11919

cond.end616:                                      ; preds = %cond.false613, %cond.true597
  %cond617 = phi i32 [ %or612, %cond.true597 ], [ %call615, %cond.false613 ], !dbg !11919
  %and618 = and i32 %cond617, -117440513, !dbg !11919
  %401 = load i32, i32* %_v450, align 4, !dbg !11919
  %and619 = and i32 %401, 7, !dbg !11919
  %shl620 = shl i32 %and619, 24, !dbg !11919
  %or621 = or i32 %and618, %shl620, !dbg !11919
  %call622 = call i32 @__fswab32(i32 %or621) #8, !dbg !11919
  br label %cond.end623, !dbg !11919

cond.end623:                                      ; preds = %cond.end616, %cond.end586
  %cond624 = phi i32 [ %or594, %cond.end586 ], [ %call622, %cond.end616 ], !dbg !11919
  %402 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !11919
  %403 = bitcast i8* %402 to i32*, !dbg !11919
  %add.ptr625 = getelementptr i32, i32* %403, i64 60, !dbg !11919
  store i32 %cond624, i32* %add.ptr625, align 4, !dbg !11919
  br label %do.end626, !dbg !11919

do.end626:                                        ; preds = %cond.end623
  br label %do.body627, !dbg !11922

do.body627:                                       ; preds = %do.end626
  call void @llvm.dbg.declare(metadata i32* %_v628, metadata !11923, metadata !DIExpression()), !dbg !11925
  %404 = load i32, i32* %list_size.addr, align 4, !dbg !11925
  store i32 %404, i32* %_v628, align 4, !dbg !11925
  br label %do.body629, !dbg !11925

do.body629:                                       ; preds = %do.body627
  br label %do.end630, !dbg !11926

do.end630:                                        ; preds = %do.body629
  %405 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !11925
  %406 = bitcast i8* %405 to i32*, !dbg !11925
  %add.ptr631 = getelementptr i32, i32* %406, i64 60, !dbg !11925
  %407 = load i32, i32* %add.ptr631, align 4, !dbg !11925
  %408 = call i1 @llvm.is.constant.i32(i32 %407), !dbg !11925
  br i1 %408, label %cond.true632, label %cond.false648, !dbg !11925

cond.true632:                                     ; preds = %do.end630
  %409 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !11925
  %410 = bitcast i8* %409 to i32*, !dbg !11925
  %add.ptr633 = getelementptr i32, i32* %410, i64 60, !dbg !11925
  %411 = load i32, i32* %add.ptr633, align 4, !dbg !11925
  %and634 = and i32 %411, 255, !dbg !11925
  %shl635 = shl i32 %and634, 24, !dbg !11925
  %412 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !11925
  %413 = bitcast i8* %412 to i32*, !dbg !11925
  %add.ptr636 = getelementptr i32, i32* %413, i64 60, !dbg !11925
  %414 = load i32, i32* %add.ptr636, align 4, !dbg !11925
  %and637 = and i32 %414, 65280, !dbg !11925
  %shl638 = shl i32 %and637, 8, !dbg !11925
  %or639 = or i32 %shl635, %shl638, !dbg !11925
  %415 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !11925
  %416 = bitcast i8* %415 to i32*, !dbg !11925
  %add.ptr640 = getelementptr i32, i32* %416, i64 60, !dbg !11925
  %417 = load i32, i32* %add.ptr640, align 4, !dbg !11925
  %and641 = and i32 %417, 16711680, !dbg !11925
  %shr642 = lshr i32 %and641, 8, !dbg !11925
  %or643 = or i32 %or639, %shr642, !dbg !11925
  %418 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !11925
  %419 = bitcast i8* %418 to i32*, !dbg !11925
  %add.ptr644 = getelementptr i32, i32* %419, i64 60, !dbg !11925
  %420 = load i32, i32* %add.ptr644, align 4, !dbg !11925
  %and645 = and i32 %420, -16777216, !dbg !11925
  %shr646 = lshr i32 %and645, 24, !dbg !11925
  %or647 = or i32 %or643, %shr646, !dbg !11925
  br label %cond.end651, !dbg !11925

cond.false648:                                    ; preds = %do.end630
  %421 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !11925
  %422 = bitcast i8* %421 to i32*, !dbg !11925
  %add.ptr649 = getelementptr i32, i32* %422, i64 60, !dbg !11925
  %423 = load i32, i32* %add.ptr649, align 4, !dbg !11925
  %call650 = call i32 @__fswab32(i32 %423) #8, !dbg !11925
  br label %cond.end651, !dbg !11925

cond.end651:                                      ; preds = %cond.false648, %cond.true632
  %cond652 = phi i32 [ %or647, %cond.true632 ], [ %call650, %cond.false648 ], !dbg !11925
  %and653 = and i32 %cond652, -4096, !dbg !11925
  %424 = load i32, i32* %_v628, align 4, !dbg !11925
  %and654 = and i32 %424, 4095, !dbg !11925
  %shl655 = shl i32 %and654, 0, !dbg !11925
  %or656 = or i32 %and653, %shl655, !dbg !11925
  %425 = call i1 @llvm.is.constant.i32(i32 %or656), !dbg !11925
  br i1 %425, label %cond.true657, label %cond.false773, !dbg !11925

cond.true657:                                     ; preds = %cond.end651
  %426 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !11925
  %427 = bitcast i8* %426 to i32*, !dbg !11925
  %add.ptr658 = getelementptr i32, i32* %427, i64 60, !dbg !11925
  %428 = load i32, i32* %add.ptr658, align 4, !dbg !11925
  %429 = call i1 @llvm.is.constant.i32(i32 %428), !dbg !11925
  br i1 %429, label %cond.true659, label %cond.false675, !dbg !11925

cond.true659:                                     ; preds = %cond.true657
  %430 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !11925
  %431 = bitcast i8* %430 to i32*, !dbg !11925
  %add.ptr660 = getelementptr i32, i32* %431, i64 60, !dbg !11925
  %432 = load i32, i32* %add.ptr660, align 4, !dbg !11925
  %and661 = and i32 %432, 255, !dbg !11925
  %shl662 = shl i32 %and661, 24, !dbg !11925
  %433 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !11925
  %434 = bitcast i8* %433 to i32*, !dbg !11925
  %add.ptr663 = getelementptr i32, i32* %434, i64 60, !dbg !11925
  %435 = load i32, i32* %add.ptr663, align 4, !dbg !11925
  %and664 = and i32 %435, 65280, !dbg !11925
  %shl665 = shl i32 %and664, 8, !dbg !11925
  %or666 = or i32 %shl662, %shl665, !dbg !11925
  %436 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !11925
  %437 = bitcast i8* %436 to i32*, !dbg !11925
  %add.ptr667 = getelementptr i32, i32* %437, i64 60, !dbg !11925
  %438 = load i32, i32* %add.ptr667, align 4, !dbg !11925
  %and668 = and i32 %438, 16711680, !dbg !11925
  %shr669 = lshr i32 %and668, 8, !dbg !11925
  %or670 = or i32 %or666, %shr669, !dbg !11925
  %439 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !11925
  %440 = bitcast i8* %439 to i32*, !dbg !11925
  %add.ptr671 = getelementptr i32, i32* %440, i64 60, !dbg !11925
  %441 = load i32, i32* %add.ptr671, align 4, !dbg !11925
  %and672 = and i32 %441, -16777216, !dbg !11925
  %shr673 = lshr i32 %and672, 24, !dbg !11925
  %or674 = or i32 %or670, %shr673, !dbg !11925
  br label %cond.end678, !dbg !11925

cond.false675:                                    ; preds = %cond.true657
  %442 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !11925
  %443 = bitcast i8* %442 to i32*, !dbg !11925
  %add.ptr676 = getelementptr i32, i32* %443, i64 60, !dbg !11925
  %444 = load i32, i32* %add.ptr676, align 4, !dbg !11925
  %call677 = call i32 @__fswab32(i32 %444) #8, !dbg !11925
  br label %cond.end678, !dbg !11925

cond.end678:                                      ; preds = %cond.false675, %cond.true659
  %cond679 = phi i32 [ %or674, %cond.true659 ], [ %call677, %cond.false675 ], !dbg !11925
  %and680 = and i32 %cond679, -4096, !dbg !11925
  %445 = load i32, i32* %_v628, align 4, !dbg !11925
  %and681 = and i32 %445, 4095, !dbg !11925
  %shl682 = shl i32 %and681, 0, !dbg !11925
  %or683 = or i32 %and680, %shl682, !dbg !11925
  %and684 = and i32 %or683, 255, !dbg !11925
  %shl685 = shl i32 %and684, 24, !dbg !11925
  %446 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !11925
  %447 = bitcast i8* %446 to i32*, !dbg !11925
  %add.ptr686 = getelementptr i32, i32* %447, i64 60, !dbg !11925
  %448 = load i32, i32* %add.ptr686, align 4, !dbg !11925
  %449 = call i1 @llvm.is.constant.i32(i32 %448), !dbg !11925
  br i1 %449, label %cond.true687, label %cond.false703, !dbg !11925

cond.true687:                                     ; preds = %cond.end678
  %450 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !11925
  %451 = bitcast i8* %450 to i32*, !dbg !11925
  %add.ptr688 = getelementptr i32, i32* %451, i64 60, !dbg !11925
  %452 = load i32, i32* %add.ptr688, align 4, !dbg !11925
  %and689 = and i32 %452, 255, !dbg !11925
  %shl690 = shl i32 %and689, 24, !dbg !11925
  %453 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !11925
  %454 = bitcast i8* %453 to i32*, !dbg !11925
  %add.ptr691 = getelementptr i32, i32* %454, i64 60, !dbg !11925
  %455 = load i32, i32* %add.ptr691, align 4, !dbg !11925
  %and692 = and i32 %455, 65280, !dbg !11925
  %shl693 = shl i32 %and692, 8, !dbg !11925
  %or694 = or i32 %shl690, %shl693, !dbg !11925
  %456 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !11925
  %457 = bitcast i8* %456 to i32*, !dbg !11925
  %add.ptr695 = getelementptr i32, i32* %457, i64 60, !dbg !11925
  %458 = load i32, i32* %add.ptr695, align 4, !dbg !11925
  %and696 = and i32 %458, 16711680, !dbg !11925
  %shr697 = lshr i32 %and696, 8, !dbg !11925
  %or698 = or i32 %or694, %shr697, !dbg !11925
  %459 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !11925
  %460 = bitcast i8* %459 to i32*, !dbg !11925
  %add.ptr699 = getelementptr i32, i32* %460, i64 60, !dbg !11925
  %461 = load i32, i32* %add.ptr699, align 4, !dbg !11925
  %and700 = and i32 %461, -16777216, !dbg !11925
  %shr701 = lshr i32 %and700, 24, !dbg !11925
  %or702 = or i32 %or698, %shr701, !dbg !11925
  br label %cond.end706, !dbg !11925

cond.false703:                                    ; preds = %cond.end678
  %462 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !11925
  %463 = bitcast i8* %462 to i32*, !dbg !11925
  %add.ptr704 = getelementptr i32, i32* %463, i64 60, !dbg !11925
  %464 = load i32, i32* %add.ptr704, align 4, !dbg !11925
  %call705 = call i32 @__fswab32(i32 %464) #8, !dbg !11925
  br label %cond.end706, !dbg !11925

cond.end706:                                      ; preds = %cond.false703, %cond.true687
  %cond707 = phi i32 [ %or702, %cond.true687 ], [ %call705, %cond.false703 ], !dbg !11925
  %and708 = and i32 %cond707, -4096, !dbg !11925
  %465 = load i32, i32* %_v628, align 4, !dbg !11925
  %and709 = and i32 %465, 4095, !dbg !11925
  %shl710 = shl i32 %and709, 0, !dbg !11925
  %or711 = or i32 %and708, %shl710, !dbg !11925
  %and712 = and i32 %or711, 65280, !dbg !11925
  %shl713 = shl i32 %and712, 8, !dbg !11925
  %or714 = or i32 %shl685, %shl713, !dbg !11925
  %466 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !11925
  %467 = bitcast i8* %466 to i32*, !dbg !11925
  %add.ptr715 = getelementptr i32, i32* %467, i64 60, !dbg !11925
  %468 = load i32, i32* %add.ptr715, align 4, !dbg !11925
  %469 = call i1 @llvm.is.constant.i32(i32 %468), !dbg !11925
  br i1 %469, label %cond.true716, label %cond.false732, !dbg !11925

cond.true716:                                     ; preds = %cond.end706
  %470 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !11925
  %471 = bitcast i8* %470 to i32*, !dbg !11925
  %add.ptr717 = getelementptr i32, i32* %471, i64 60, !dbg !11925
  %472 = load i32, i32* %add.ptr717, align 4, !dbg !11925
  %and718 = and i32 %472, 255, !dbg !11925
  %shl719 = shl i32 %and718, 24, !dbg !11925
  %473 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !11925
  %474 = bitcast i8* %473 to i32*, !dbg !11925
  %add.ptr720 = getelementptr i32, i32* %474, i64 60, !dbg !11925
  %475 = load i32, i32* %add.ptr720, align 4, !dbg !11925
  %and721 = and i32 %475, 65280, !dbg !11925
  %shl722 = shl i32 %and721, 8, !dbg !11925
  %or723 = or i32 %shl719, %shl722, !dbg !11925
  %476 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !11925
  %477 = bitcast i8* %476 to i32*, !dbg !11925
  %add.ptr724 = getelementptr i32, i32* %477, i64 60, !dbg !11925
  %478 = load i32, i32* %add.ptr724, align 4, !dbg !11925
  %and725 = and i32 %478, 16711680, !dbg !11925
  %shr726 = lshr i32 %and725, 8, !dbg !11925
  %or727 = or i32 %or723, %shr726, !dbg !11925
  %479 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !11925
  %480 = bitcast i8* %479 to i32*, !dbg !11925
  %add.ptr728 = getelementptr i32, i32* %480, i64 60, !dbg !11925
  %481 = load i32, i32* %add.ptr728, align 4, !dbg !11925
  %and729 = and i32 %481, -16777216, !dbg !11925
  %shr730 = lshr i32 %and729, 24, !dbg !11925
  %or731 = or i32 %or727, %shr730, !dbg !11925
  br label %cond.end735, !dbg !11925

cond.false732:                                    ; preds = %cond.end706
  %482 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !11925
  %483 = bitcast i8* %482 to i32*, !dbg !11925
  %add.ptr733 = getelementptr i32, i32* %483, i64 60, !dbg !11925
  %484 = load i32, i32* %add.ptr733, align 4, !dbg !11925
  %call734 = call i32 @__fswab32(i32 %484) #8, !dbg !11925
  br label %cond.end735, !dbg !11925

cond.end735:                                      ; preds = %cond.false732, %cond.true716
  %cond736 = phi i32 [ %or731, %cond.true716 ], [ %call734, %cond.false732 ], !dbg !11925
  %and737 = and i32 %cond736, -4096, !dbg !11925
  %485 = load i32, i32* %_v628, align 4, !dbg !11925
  %and738 = and i32 %485, 4095, !dbg !11925
  %shl739 = shl i32 %and738, 0, !dbg !11925
  %or740 = or i32 %and737, %shl739, !dbg !11925
  %and741 = and i32 %or740, 16711680, !dbg !11925
  %shr742 = lshr i32 %and741, 8, !dbg !11925
  %or743 = or i32 %or714, %shr742, !dbg !11925
  %486 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !11925
  %487 = bitcast i8* %486 to i32*, !dbg !11925
  %add.ptr744 = getelementptr i32, i32* %487, i64 60, !dbg !11925
  %488 = load i32, i32* %add.ptr744, align 4, !dbg !11925
  %489 = call i1 @llvm.is.constant.i32(i32 %488), !dbg !11925
  br i1 %489, label %cond.true745, label %cond.false761, !dbg !11925

cond.true745:                                     ; preds = %cond.end735
  %490 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !11925
  %491 = bitcast i8* %490 to i32*, !dbg !11925
  %add.ptr746 = getelementptr i32, i32* %491, i64 60, !dbg !11925
  %492 = load i32, i32* %add.ptr746, align 4, !dbg !11925
  %and747 = and i32 %492, 255, !dbg !11925
  %shl748 = shl i32 %and747, 24, !dbg !11925
  %493 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !11925
  %494 = bitcast i8* %493 to i32*, !dbg !11925
  %add.ptr749 = getelementptr i32, i32* %494, i64 60, !dbg !11925
  %495 = load i32, i32* %add.ptr749, align 4, !dbg !11925
  %and750 = and i32 %495, 65280, !dbg !11925
  %shl751 = shl i32 %and750, 8, !dbg !11925
  %or752 = or i32 %shl748, %shl751, !dbg !11925
  %496 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !11925
  %497 = bitcast i8* %496 to i32*, !dbg !11925
  %add.ptr753 = getelementptr i32, i32* %497, i64 60, !dbg !11925
  %498 = load i32, i32* %add.ptr753, align 4, !dbg !11925
  %and754 = and i32 %498, 16711680, !dbg !11925
  %shr755 = lshr i32 %and754, 8, !dbg !11925
  %or756 = or i32 %or752, %shr755, !dbg !11925
  %499 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !11925
  %500 = bitcast i8* %499 to i32*, !dbg !11925
  %add.ptr757 = getelementptr i32, i32* %500, i64 60, !dbg !11925
  %501 = load i32, i32* %add.ptr757, align 4, !dbg !11925
  %and758 = and i32 %501, -16777216, !dbg !11925
  %shr759 = lshr i32 %and758, 24, !dbg !11925
  %or760 = or i32 %or756, %shr759, !dbg !11925
  br label %cond.end764, !dbg !11925

cond.false761:                                    ; preds = %cond.end735
  %502 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !11925
  %503 = bitcast i8* %502 to i32*, !dbg !11925
  %add.ptr762 = getelementptr i32, i32* %503, i64 60, !dbg !11925
  %504 = load i32, i32* %add.ptr762, align 4, !dbg !11925
  %call763 = call i32 @__fswab32(i32 %504) #8, !dbg !11925
  br label %cond.end764, !dbg !11925

cond.end764:                                      ; preds = %cond.false761, %cond.true745
  %cond765 = phi i32 [ %or760, %cond.true745 ], [ %call763, %cond.false761 ], !dbg !11925
  %and766 = and i32 %cond765, -4096, !dbg !11925
  %505 = load i32, i32* %_v628, align 4, !dbg !11925
  %and767 = and i32 %505, 4095, !dbg !11925
  %shl768 = shl i32 %and767, 0, !dbg !11925
  %or769 = or i32 %and766, %shl768, !dbg !11925
  %and770 = and i32 %or769, -16777216, !dbg !11925
  %shr771 = lshr i32 %and770, 24, !dbg !11925
  %or772 = or i32 %or743, %shr771, !dbg !11925
  br label %cond.end801, !dbg !11925

cond.false773:                                    ; preds = %cond.end651
  %506 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !11925
  %507 = bitcast i8* %506 to i32*, !dbg !11925
  %add.ptr774 = getelementptr i32, i32* %507, i64 60, !dbg !11925
  %508 = load i32, i32* %add.ptr774, align 4, !dbg !11925
  %509 = call i1 @llvm.is.constant.i32(i32 %508), !dbg !11925
  br i1 %509, label %cond.true775, label %cond.false791, !dbg !11925

cond.true775:                                     ; preds = %cond.false773
  %510 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !11925
  %511 = bitcast i8* %510 to i32*, !dbg !11925
  %add.ptr776 = getelementptr i32, i32* %511, i64 60, !dbg !11925
  %512 = load i32, i32* %add.ptr776, align 4, !dbg !11925
  %and777 = and i32 %512, 255, !dbg !11925
  %shl778 = shl i32 %and777, 24, !dbg !11925
  %513 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !11925
  %514 = bitcast i8* %513 to i32*, !dbg !11925
  %add.ptr779 = getelementptr i32, i32* %514, i64 60, !dbg !11925
  %515 = load i32, i32* %add.ptr779, align 4, !dbg !11925
  %and780 = and i32 %515, 65280, !dbg !11925
  %shl781 = shl i32 %and780, 8, !dbg !11925
  %or782 = or i32 %shl778, %shl781, !dbg !11925
  %516 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !11925
  %517 = bitcast i8* %516 to i32*, !dbg !11925
  %add.ptr783 = getelementptr i32, i32* %517, i64 60, !dbg !11925
  %518 = load i32, i32* %add.ptr783, align 4, !dbg !11925
  %and784 = and i32 %518, 16711680, !dbg !11925
  %shr785 = lshr i32 %and784, 8, !dbg !11925
  %or786 = or i32 %or782, %shr785, !dbg !11925
  %519 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !11925
  %520 = bitcast i8* %519 to i32*, !dbg !11925
  %add.ptr787 = getelementptr i32, i32* %520, i64 60, !dbg !11925
  %521 = load i32, i32* %add.ptr787, align 4, !dbg !11925
  %and788 = and i32 %521, -16777216, !dbg !11925
  %shr789 = lshr i32 %and788, 24, !dbg !11925
  %or790 = or i32 %or786, %shr789, !dbg !11925
  br label %cond.end794, !dbg !11925

cond.false791:                                    ; preds = %cond.false773
  %522 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !11925
  %523 = bitcast i8* %522 to i32*, !dbg !11925
  %add.ptr792 = getelementptr i32, i32* %523, i64 60, !dbg !11925
  %524 = load i32, i32* %add.ptr792, align 4, !dbg !11925
  %call793 = call i32 @__fswab32(i32 %524) #8, !dbg !11925
  br label %cond.end794, !dbg !11925

cond.end794:                                      ; preds = %cond.false791, %cond.true775
  %cond795 = phi i32 [ %or790, %cond.true775 ], [ %call793, %cond.false791 ], !dbg !11925
  %and796 = and i32 %cond795, -4096, !dbg !11925
  %525 = load i32, i32* %_v628, align 4, !dbg !11925
  %and797 = and i32 %525, 4095, !dbg !11925
  %shl798 = shl i32 %and797, 0, !dbg !11925
  %or799 = or i32 %and796, %shl798, !dbg !11925
  %call800 = call i32 @__fswab32(i32 %or799) #8, !dbg !11925
  br label %cond.end801, !dbg !11925

cond.end801:                                      ; preds = %cond.end794, %cond.end764
  %cond802 = phi i32 [ %or772, %cond.end764 ], [ %call800, %cond.end794 ], !dbg !11925
  %526 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !11925
  %527 = bitcast i8* %526 to i32*, !dbg !11925
  %add.ptr803 = getelementptr i32, i32* %527, i64 60, !dbg !11925
  store i32 %cond802, i32* %add.ptr803, align 4, !dbg !11925
  br label %do.end804, !dbg !11925

do.end804:                                        ; preds = %cond.end801
  store i32 0, i32* %i, align 4, !dbg !11928
  br label %for.cond, !dbg !11930

for.cond:                                         ; preds = %for.inc, %do.end804
  %528 = load i32, i32* %i, align 4, !dbg !11931
  %529 = load i32, i32* %list_size.addr, align 4, !dbg !11933
  %cmp805 = icmp slt i32 %528, %529, !dbg !11934
  br i1 %cmp805, label %for.body, label %for.end, !dbg !11935

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i8** %curr_mac, metadata !11936, metadata !DIExpression()), !dbg !11938
  %530 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !11939
  %531 = load i32, i32* %i, align 4, !dbg !11939
  %conv807 = sext i32 %531 to i64, !dbg !11939
  %532 = mul i64 %conv807, 64, !dbg !11939
  %533 = add i64 2048, %532, !dbg !11939
  %div = udiv i64 %533, 8, !dbg !11939
  %add.ptr808 = getelementptr i8, i8* %530, i64 %div, !dbg !11939
  %add.ptr809 = getelementptr i8, i8* %add.ptr808, i64 2, !dbg !11940
  store i8* %add.ptr809, i8** %curr_mac, align 8, !dbg !11938
  %534 = load i8*, i8** %curr_mac, align 8, !dbg !11941
  %535 = load [6 x i8]*, [6 x i8]** %addr_list.addr, align 8, !dbg !11942
  %536 = load i32, i32* %i, align 4, !dbg !11943
  %idxprom = sext i32 %536 to i64, !dbg !11942
  %arrayidx810 = getelementptr [6 x i8], [6 x i8]* %535, i64 %idxprom, !dbg !11942
  %arraydecay811 = getelementptr inbounds [6 x i8], [6 x i8]* %arrayidx810, i64 0, i64 0, !dbg !11942
  call void @ether_addr_copy(i8* %534, i8* %arraydecay811) #9, !dbg !11944
  br label %for.inc, !dbg !11945

for.inc:                                          ; preds = %for.body
  %537 = load i32, i32* %i, align 4, !dbg !11946
  %inc = add i32 %537, 1, !dbg !11946
  store i32 %inc, i32* %i, align 4, !dbg !11946
  br label %for.cond, !dbg !11947, !llvm.loop !11948

for.end:                                          ; preds = %for.cond
  %538 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !11950
  %539 = load i8*, i8** %in, align 8, !dbg !11951
  %540 = load i32, i32* %in_sz, align 4, !dbg !11952
  %arraydecay812 = getelementptr inbounds [4 x i32], [4 x i32]* %out, i64 0, i64 0, !dbg !11953
  %541 = bitcast i32* %arraydecay812 to i8*, !dbg !11953
  %call813 = call i32 @mlx5_cmd_exec(%struct.mlx5_core_dev* %538, i8* %539, i32 %540, i8* %541, i32 16) #9, !dbg !11954
  store i32 %call813, i32* %err, align 4, !dbg !11955
  %542 = load i8*, i8** %in, align 8, !dbg !11956
  call void @kfree(i8* %542) #9, !dbg !11957
  %543 = load i32, i32* %err, align 4, !dbg !11958
  store i32 %543, i32* %retval, align 4, !dbg !11959
  br label %return, !dbg !11959

return:                                           ; preds = %for.end, %if.then93, %if.then
  %544 = load i32, i32* %retval, align 4, !dbg !11960
  ret i32 %544, !dbg !11960
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @mlx5_modify_nic_vport_vlans(%struct.mlx5_core_dev* %dev, i16* %vlans, i32 %list_size) #0 !dbg !11961 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.mlx5_core_dev*, align 8
  %vlans.addr = alloca i16*, align 8
  %list_size.addr = alloca i32, align 4
  %out = alloca [4 x i32], align 16
  %nic_vport_ctx = alloca i8*, align 8
  %max_list_size = alloca i32, align 4
  %in_sz = alloca i32, align 4
  %in = alloca i8*, align 8
  %err = alloca i32, align 4
  %i = alloca i32, align 4
  %_v = alloca i32, align 4
  %_v218 = alloca i32, align 4
  %_v397 = alloca i32, align 4
  %_v575 = alloca i32, align 4
  %vlan_addr = alloca i8*, align 8
  %_v757 = alloca i32, align 4
  store %struct.mlx5_core_dev* %dev, %struct.mlx5_core_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_core_dev** %dev.addr, metadata !11964, metadata !DIExpression()), !dbg !11965
  store i16* %vlans, i16** %vlans.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %vlans.addr, metadata !11966, metadata !DIExpression()), !dbg !11967
  store i32 %list_size, i32* %list_size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %list_size.addr, metadata !11968, metadata !DIExpression()), !dbg !11969
  call void @llvm.dbg.declare(metadata [4 x i32]* %out, metadata !11970, metadata !DIExpression()), !dbg !11971
  call void @llvm.dbg.declare(metadata i8** %nic_vport_ctx, metadata !11972, metadata !DIExpression()), !dbg !11973
  call void @llvm.dbg.declare(metadata i32* %max_list_size, metadata !11974, metadata !DIExpression()), !dbg !11975
  call void @llvm.dbg.declare(metadata i32* %in_sz, metadata !11976, metadata !DIExpression()), !dbg !11977
  call void @llvm.dbg.declare(metadata i8** %in, metadata !11978, metadata !DIExpression()), !dbg !11979
  call void @llvm.dbg.declare(metadata i32* %err, metadata !11980, metadata !DIExpression()), !dbg !11981
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11982, metadata !DIExpression()), !dbg !11983
  %0 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !11984
  %caps = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %0, i32 0, i32 9, !dbg !11984
  %hca_cur = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps, i32 0, i32 0, !dbg !11984
  %arrayidx = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur, i64 0, i64 0, !dbg !11984
  %arraydecay = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx, i64 0, i64 0, !dbg !11984
  %add.ptr = getelementptr i32, i32* %arraydecay, i64 31, !dbg !11984
  %1 = load i32, i32* %add.ptr, align 4, !dbg !11984
  %2 = call i1 @llvm.is.constant.i32(i32 %1), !dbg !11984
  br i1 %2, label %cond.true, label %cond.false, !dbg !11984

cond.true:                                        ; preds = %entry
  %3 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !11984
  %caps1 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %3, i32 0, i32 9, !dbg !11984
  %hca_cur2 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps1, i32 0, i32 0, !dbg !11984
  %arrayidx3 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur2, i64 0, i64 0, !dbg !11984
  %arraydecay4 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx3, i64 0, i64 0, !dbg !11984
  %add.ptr5 = getelementptr i32, i32* %arraydecay4, i64 31, !dbg !11984
  %4 = load i32, i32* %add.ptr5, align 4, !dbg !11984
  %and = and i32 %4, 255, !dbg !11984
  %shl = shl i32 %and, 24, !dbg !11984
  %5 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !11984
  %caps6 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %5, i32 0, i32 9, !dbg !11984
  %hca_cur7 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps6, i32 0, i32 0, !dbg !11984
  %arrayidx8 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur7, i64 0, i64 0, !dbg !11984
  %arraydecay9 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx8, i64 0, i64 0, !dbg !11984
  %add.ptr10 = getelementptr i32, i32* %arraydecay9, i64 31, !dbg !11984
  %6 = load i32, i32* %add.ptr10, align 4, !dbg !11984
  %and11 = and i32 %6, 65280, !dbg !11984
  %shl12 = shl i32 %and11, 8, !dbg !11984
  %or = or i32 %shl, %shl12, !dbg !11984
  %7 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !11984
  %caps13 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %7, i32 0, i32 9, !dbg !11984
  %hca_cur14 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps13, i32 0, i32 0, !dbg !11984
  %arrayidx15 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur14, i64 0, i64 0, !dbg !11984
  %arraydecay16 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx15, i64 0, i64 0, !dbg !11984
  %add.ptr17 = getelementptr i32, i32* %arraydecay16, i64 31, !dbg !11984
  %8 = load i32, i32* %add.ptr17, align 4, !dbg !11984
  %and18 = and i32 %8, 16711680, !dbg !11984
  %shr = lshr i32 %and18, 8, !dbg !11984
  %or19 = or i32 %or, %shr, !dbg !11984
  %9 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !11984
  %caps20 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %9, i32 0, i32 9, !dbg !11984
  %hca_cur21 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps20, i32 0, i32 0, !dbg !11984
  %arrayidx22 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur21, i64 0, i64 0, !dbg !11984
  %arraydecay23 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx22, i64 0, i64 0, !dbg !11984
  %add.ptr24 = getelementptr i32, i32* %arraydecay23, i64 31, !dbg !11984
  %10 = load i32, i32* %add.ptr24, align 4, !dbg !11984
  %and25 = and i32 %10, -16777216, !dbg !11984
  %shr26 = lshr i32 %and25, 24, !dbg !11984
  %or27 = or i32 %or19, %shr26, !dbg !11984
  br label %cond.end, !dbg !11984

cond.false:                                       ; preds = %entry
  %11 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !11984
  %caps28 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %11, i32 0, i32 9, !dbg !11984
  %hca_cur29 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps28, i32 0, i32 0, !dbg !11984
  %arrayidx30 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur29, i64 0, i64 0, !dbg !11984
  %arraydecay31 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx30, i64 0, i64 0, !dbg !11984
  %add.ptr32 = getelementptr i32, i32* %arraydecay31, i64 31, !dbg !11984
  %12 = load i32, i32* %add.ptr32, align 4, !dbg !11984
  %call = call i32 @__fswab32(i32 %12) #8, !dbg !11984
  br label %cond.end, !dbg !11984

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %or27, %cond.true ], [ %call, %cond.false ], !dbg !11984
  %shr33 = lshr i32 %cond, 16, !dbg !11984
  %and34 = and i32 %shr33, 31, !dbg !11984
  %shl35 = shl i32 1, %and34, !dbg !11985
  store i32 %shl35, i32* %max_list_size, align 4, !dbg !11986
  %13 = load i32, i32* %list_size.addr, align 4, !dbg !11987
  %14 = load i32, i32* %max_list_size, align 4, !dbg !11989
  %cmp = icmp sgt i32 %13, %14, !dbg !11990
  br i1 %cmp, label %if.then, label %if.end, !dbg !11991

if.then:                                          ; preds = %cond.end
  store i32 -28, i32* %retval, align 4, !dbg !11992
  br label %return, !dbg !11992

if.end:                                           ; preds = %cond.end
  %15 = load i32, i32* %list_size.addr, align 4, !dbg !11993
  %conv = sext i32 %15 to i64, !dbg !11993
  %mul = mul i64 %conv, 8, !dbg !11994
  %add = add i64 512, %mul, !dbg !11995
  %conv36 = trunc i64 %add to i32, !dbg !11996
  store i32 %conv36, i32* %in_sz, align 4, !dbg !11997
  %arraydecay37 = getelementptr inbounds [4 x i32], [4 x i32]* %out, i64 0, i64 0, !dbg !11998
  %16 = bitcast i32* %arraydecay37 to i8*, !dbg !11998
  call void @llvm.memset.p0i8.i64(i8* align 16 %16, i8 0, i64 16, i1 false), !dbg !11998
  %17 = load i32, i32* %in_sz, align 4, !dbg !11999
  %conv38 = sext i32 %17 to i64, !dbg !11999
  %call39 = call i8* @kzalloc(i64 %conv38, i32 3264) #9, !dbg !12000
  store i8* %call39, i8** %in, align 8, !dbg !12001
  %18 = load i8*, i8** %in, align 8, !dbg !12002
  %tobool = icmp ne i8* %18, null, !dbg !12002
  br i1 %tobool, label %if.end41, label %if.then40, !dbg !12004

if.then40:                                        ; preds = %if.end
  store i32 -12, i32* %retval, align 4, !dbg !12005
  br label %return, !dbg !12005

if.end41:                                         ; preds = %if.end
  br label %do.body, !dbg !12006

do.body:                                          ; preds = %if.end41
  call void @llvm.dbg.declare(metadata i32* %_v, metadata !12007, metadata !DIExpression()), !dbg !12009
  store i32 1877, i32* %_v, align 4, !dbg !12009
  br label %do.body42, !dbg !12009

do.body42:                                        ; preds = %do.body
  br label %do.end, !dbg !12010

do.end:                                           ; preds = %do.body42
  %19 = load i8*, i8** %in, align 8, !dbg !12009
  %20 = bitcast i8* %19 to i32*, !dbg !12009
  %add.ptr43 = getelementptr i32, i32* %20, i64 0, !dbg !12009
  %21 = load i32, i32* %add.ptr43, align 4, !dbg !12009
  %22 = call i1 @llvm.is.constant.i32(i32 %21), !dbg !12009
  br i1 %22, label %cond.true44, label %cond.false60, !dbg !12009

cond.true44:                                      ; preds = %do.end
  %23 = load i8*, i8** %in, align 8, !dbg !12009
  %24 = bitcast i8* %23 to i32*, !dbg !12009
  %add.ptr45 = getelementptr i32, i32* %24, i64 0, !dbg !12009
  %25 = load i32, i32* %add.ptr45, align 4, !dbg !12009
  %and46 = and i32 %25, 255, !dbg !12009
  %shl47 = shl i32 %and46, 24, !dbg !12009
  %26 = load i8*, i8** %in, align 8, !dbg !12009
  %27 = bitcast i8* %26 to i32*, !dbg !12009
  %add.ptr48 = getelementptr i32, i32* %27, i64 0, !dbg !12009
  %28 = load i32, i32* %add.ptr48, align 4, !dbg !12009
  %and49 = and i32 %28, 65280, !dbg !12009
  %shl50 = shl i32 %and49, 8, !dbg !12009
  %or51 = or i32 %shl47, %shl50, !dbg !12009
  %29 = load i8*, i8** %in, align 8, !dbg !12009
  %30 = bitcast i8* %29 to i32*, !dbg !12009
  %add.ptr52 = getelementptr i32, i32* %30, i64 0, !dbg !12009
  %31 = load i32, i32* %add.ptr52, align 4, !dbg !12009
  %and53 = and i32 %31, 16711680, !dbg !12009
  %shr54 = lshr i32 %and53, 8, !dbg !12009
  %or55 = or i32 %or51, %shr54, !dbg !12009
  %32 = load i8*, i8** %in, align 8, !dbg !12009
  %33 = bitcast i8* %32 to i32*, !dbg !12009
  %add.ptr56 = getelementptr i32, i32* %33, i64 0, !dbg !12009
  %34 = load i32, i32* %add.ptr56, align 4, !dbg !12009
  %and57 = and i32 %34, -16777216, !dbg !12009
  %shr58 = lshr i32 %and57, 24, !dbg !12009
  %or59 = or i32 %or55, %shr58, !dbg !12009
  br label %cond.end63, !dbg !12009

cond.false60:                                     ; preds = %do.end
  %35 = load i8*, i8** %in, align 8, !dbg !12009
  %36 = bitcast i8* %35 to i32*, !dbg !12009
  %add.ptr61 = getelementptr i32, i32* %36, i64 0, !dbg !12009
  %37 = load i32, i32* %add.ptr61, align 4, !dbg !12009
  %call62 = call i32 @__fswab32(i32 %37) #8, !dbg !12009
  br label %cond.end63, !dbg !12009

cond.end63:                                       ; preds = %cond.false60, %cond.true44
  %cond64 = phi i32 [ %or59, %cond.true44 ], [ %call62, %cond.false60 ], !dbg !12009
  %and65 = and i32 %cond64, 65535, !dbg !12009
  %38 = load i32, i32* %_v, align 4, !dbg !12009
  %and66 = and i32 %38, 65535, !dbg !12009
  %shl67 = shl i32 %and66, 16, !dbg !12009
  %or68 = or i32 %and65, %shl67, !dbg !12009
  %39 = call i1 @llvm.is.constant.i32(i32 %or68), !dbg !12009
  br i1 %39, label %cond.true69, label %cond.false185, !dbg !12009

cond.true69:                                      ; preds = %cond.end63
  %40 = load i8*, i8** %in, align 8, !dbg !12009
  %41 = bitcast i8* %40 to i32*, !dbg !12009
  %add.ptr70 = getelementptr i32, i32* %41, i64 0, !dbg !12009
  %42 = load i32, i32* %add.ptr70, align 4, !dbg !12009
  %43 = call i1 @llvm.is.constant.i32(i32 %42), !dbg !12009
  br i1 %43, label %cond.true71, label %cond.false87, !dbg !12009

cond.true71:                                      ; preds = %cond.true69
  %44 = load i8*, i8** %in, align 8, !dbg !12009
  %45 = bitcast i8* %44 to i32*, !dbg !12009
  %add.ptr72 = getelementptr i32, i32* %45, i64 0, !dbg !12009
  %46 = load i32, i32* %add.ptr72, align 4, !dbg !12009
  %and73 = and i32 %46, 255, !dbg !12009
  %shl74 = shl i32 %and73, 24, !dbg !12009
  %47 = load i8*, i8** %in, align 8, !dbg !12009
  %48 = bitcast i8* %47 to i32*, !dbg !12009
  %add.ptr75 = getelementptr i32, i32* %48, i64 0, !dbg !12009
  %49 = load i32, i32* %add.ptr75, align 4, !dbg !12009
  %and76 = and i32 %49, 65280, !dbg !12009
  %shl77 = shl i32 %and76, 8, !dbg !12009
  %or78 = or i32 %shl74, %shl77, !dbg !12009
  %50 = load i8*, i8** %in, align 8, !dbg !12009
  %51 = bitcast i8* %50 to i32*, !dbg !12009
  %add.ptr79 = getelementptr i32, i32* %51, i64 0, !dbg !12009
  %52 = load i32, i32* %add.ptr79, align 4, !dbg !12009
  %and80 = and i32 %52, 16711680, !dbg !12009
  %shr81 = lshr i32 %and80, 8, !dbg !12009
  %or82 = or i32 %or78, %shr81, !dbg !12009
  %53 = load i8*, i8** %in, align 8, !dbg !12009
  %54 = bitcast i8* %53 to i32*, !dbg !12009
  %add.ptr83 = getelementptr i32, i32* %54, i64 0, !dbg !12009
  %55 = load i32, i32* %add.ptr83, align 4, !dbg !12009
  %and84 = and i32 %55, -16777216, !dbg !12009
  %shr85 = lshr i32 %and84, 24, !dbg !12009
  %or86 = or i32 %or82, %shr85, !dbg !12009
  br label %cond.end90, !dbg !12009

cond.false87:                                     ; preds = %cond.true69
  %56 = load i8*, i8** %in, align 8, !dbg !12009
  %57 = bitcast i8* %56 to i32*, !dbg !12009
  %add.ptr88 = getelementptr i32, i32* %57, i64 0, !dbg !12009
  %58 = load i32, i32* %add.ptr88, align 4, !dbg !12009
  %call89 = call i32 @__fswab32(i32 %58) #8, !dbg !12009
  br label %cond.end90, !dbg !12009

cond.end90:                                       ; preds = %cond.false87, %cond.true71
  %cond91 = phi i32 [ %or86, %cond.true71 ], [ %call89, %cond.false87 ], !dbg !12009
  %and92 = and i32 %cond91, 65535, !dbg !12009
  %59 = load i32, i32* %_v, align 4, !dbg !12009
  %and93 = and i32 %59, 65535, !dbg !12009
  %shl94 = shl i32 %and93, 16, !dbg !12009
  %or95 = or i32 %and92, %shl94, !dbg !12009
  %and96 = and i32 %or95, 255, !dbg !12009
  %shl97 = shl i32 %and96, 24, !dbg !12009
  %60 = load i8*, i8** %in, align 8, !dbg !12009
  %61 = bitcast i8* %60 to i32*, !dbg !12009
  %add.ptr98 = getelementptr i32, i32* %61, i64 0, !dbg !12009
  %62 = load i32, i32* %add.ptr98, align 4, !dbg !12009
  %63 = call i1 @llvm.is.constant.i32(i32 %62), !dbg !12009
  br i1 %63, label %cond.true99, label %cond.false115, !dbg !12009

cond.true99:                                      ; preds = %cond.end90
  %64 = load i8*, i8** %in, align 8, !dbg !12009
  %65 = bitcast i8* %64 to i32*, !dbg !12009
  %add.ptr100 = getelementptr i32, i32* %65, i64 0, !dbg !12009
  %66 = load i32, i32* %add.ptr100, align 4, !dbg !12009
  %and101 = and i32 %66, 255, !dbg !12009
  %shl102 = shl i32 %and101, 24, !dbg !12009
  %67 = load i8*, i8** %in, align 8, !dbg !12009
  %68 = bitcast i8* %67 to i32*, !dbg !12009
  %add.ptr103 = getelementptr i32, i32* %68, i64 0, !dbg !12009
  %69 = load i32, i32* %add.ptr103, align 4, !dbg !12009
  %and104 = and i32 %69, 65280, !dbg !12009
  %shl105 = shl i32 %and104, 8, !dbg !12009
  %or106 = or i32 %shl102, %shl105, !dbg !12009
  %70 = load i8*, i8** %in, align 8, !dbg !12009
  %71 = bitcast i8* %70 to i32*, !dbg !12009
  %add.ptr107 = getelementptr i32, i32* %71, i64 0, !dbg !12009
  %72 = load i32, i32* %add.ptr107, align 4, !dbg !12009
  %and108 = and i32 %72, 16711680, !dbg !12009
  %shr109 = lshr i32 %and108, 8, !dbg !12009
  %or110 = or i32 %or106, %shr109, !dbg !12009
  %73 = load i8*, i8** %in, align 8, !dbg !12009
  %74 = bitcast i8* %73 to i32*, !dbg !12009
  %add.ptr111 = getelementptr i32, i32* %74, i64 0, !dbg !12009
  %75 = load i32, i32* %add.ptr111, align 4, !dbg !12009
  %and112 = and i32 %75, -16777216, !dbg !12009
  %shr113 = lshr i32 %and112, 24, !dbg !12009
  %or114 = or i32 %or110, %shr113, !dbg !12009
  br label %cond.end118, !dbg !12009

cond.false115:                                    ; preds = %cond.end90
  %76 = load i8*, i8** %in, align 8, !dbg !12009
  %77 = bitcast i8* %76 to i32*, !dbg !12009
  %add.ptr116 = getelementptr i32, i32* %77, i64 0, !dbg !12009
  %78 = load i32, i32* %add.ptr116, align 4, !dbg !12009
  %call117 = call i32 @__fswab32(i32 %78) #8, !dbg !12009
  br label %cond.end118, !dbg !12009

cond.end118:                                      ; preds = %cond.false115, %cond.true99
  %cond119 = phi i32 [ %or114, %cond.true99 ], [ %call117, %cond.false115 ], !dbg !12009
  %and120 = and i32 %cond119, 65535, !dbg !12009
  %79 = load i32, i32* %_v, align 4, !dbg !12009
  %and121 = and i32 %79, 65535, !dbg !12009
  %shl122 = shl i32 %and121, 16, !dbg !12009
  %or123 = or i32 %and120, %shl122, !dbg !12009
  %and124 = and i32 %or123, 65280, !dbg !12009
  %shl125 = shl i32 %and124, 8, !dbg !12009
  %or126 = or i32 %shl97, %shl125, !dbg !12009
  %80 = load i8*, i8** %in, align 8, !dbg !12009
  %81 = bitcast i8* %80 to i32*, !dbg !12009
  %add.ptr127 = getelementptr i32, i32* %81, i64 0, !dbg !12009
  %82 = load i32, i32* %add.ptr127, align 4, !dbg !12009
  %83 = call i1 @llvm.is.constant.i32(i32 %82), !dbg !12009
  br i1 %83, label %cond.true128, label %cond.false144, !dbg !12009

cond.true128:                                     ; preds = %cond.end118
  %84 = load i8*, i8** %in, align 8, !dbg !12009
  %85 = bitcast i8* %84 to i32*, !dbg !12009
  %add.ptr129 = getelementptr i32, i32* %85, i64 0, !dbg !12009
  %86 = load i32, i32* %add.ptr129, align 4, !dbg !12009
  %and130 = and i32 %86, 255, !dbg !12009
  %shl131 = shl i32 %and130, 24, !dbg !12009
  %87 = load i8*, i8** %in, align 8, !dbg !12009
  %88 = bitcast i8* %87 to i32*, !dbg !12009
  %add.ptr132 = getelementptr i32, i32* %88, i64 0, !dbg !12009
  %89 = load i32, i32* %add.ptr132, align 4, !dbg !12009
  %and133 = and i32 %89, 65280, !dbg !12009
  %shl134 = shl i32 %and133, 8, !dbg !12009
  %or135 = or i32 %shl131, %shl134, !dbg !12009
  %90 = load i8*, i8** %in, align 8, !dbg !12009
  %91 = bitcast i8* %90 to i32*, !dbg !12009
  %add.ptr136 = getelementptr i32, i32* %91, i64 0, !dbg !12009
  %92 = load i32, i32* %add.ptr136, align 4, !dbg !12009
  %and137 = and i32 %92, 16711680, !dbg !12009
  %shr138 = lshr i32 %and137, 8, !dbg !12009
  %or139 = or i32 %or135, %shr138, !dbg !12009
  %93 = load i8*, i8** %in, align 8, !dbg !12009
  %94 = bitcast i8* %93 to i32*, !dbg !12009
  %add.ptr140 = getelementptr i32, i32* %94, i64 0, !dbg !12009
  %95 = load i32, i32* %add.ptr140, align 4, !dbg !12009
  %and141 = and i32 %95, -16777216, !dbg !12009
  %shr142 = lshr i32 %and141, 24, !dbg !12009
  %or143 = or i32 %or139, %shr142, !dbg !12009
  br label %cond.end147, !dbg !12009

cond.false144:                                    ; preds = %cond.end118
  %96 = load i8*, i8** %in, align 8, !dbg !12009
  %97 = bitcast i8* %96 to i32*, !dbg !12009
  %add.ptr145 = getelementptr i32, i32* %97, i64 0, !dbg !12009
  %98 = load i32, i32* %add.ptr145, align 4, !dbg !12009
  %call146 = call i32 @__fswab32(i32 %98) #8, !dbg !12009
  br label %cond.end147, !dbg !12009

cond.end147:                                      ; preds = %cond.false144, %cond.true128
  %cond148 = phi i32 [ %or143, %cond.true128 ], [ %call146, %cond.false144 ], !dbg !12009
  %and149 = and i32 %cond148, 65535, !dbg !12009
  %99 = load i32, i32* %_v, align 4, !dbg !12009
  %and150 = and i32 %99, 65535, !dbg !12009
  %shl151 = shl i32 %and150, 16, !dbg !12009
  %or152 = or i32 %and149, %shl151, !dbg !12009
  %and153 = and i32 %or152, 16711680, !dbg !12009
  %shr154 = lshr i32 %and153, 8, !dbg !12009
  %or155 = or i32 %or126, %shr154, !dbg !12009
  %100 = load i8*, i8** %in, align 8, !dbg !12009
  %101 = bitcast i8* %100 to i32*, !dbg !12009
  %add.ptr156 = getelementptr i32, i32* %101, i64 0, !dbg !12009
  %102 = load i32, i32* %add.ptr156, align 4, !dbg !12009
  %103 = call i1 @llvm.is.constant.i32(i32 %102), !dbg !12009
  br i1 %103, label %cond.true157, label %cond.false173, !dbg !12009

cond.true157:                                     ; preds = %cond.end147
  %104 = load i8*, i8** %in, align 8, !dbg !12009
  %105 = bitcast i8* %104 to i32*, !dbg !12009
  %add.ptr158 = getelementptr i32, i32* %105, i64 0, !dbg !12009
  %106 = load i32, i32* %add.ptr158, align 4, !dbg !12009
  %and159 = and i32 %106, 255, !dbg !12009
  %shl160 = shl i32 %and159, 24, !dbg !12009
  %107 = load i8*, i8** %in, align 8, !dbg !12009
  %108 = bitcast i8* %107 to i32*, !dbg !12009
  %add.ptr161 = getelementptr i32, i32* %108, i64 0, !dbg !12009
  %109 = load i32, i32* %add.ptr161, align 4, !dbg !12009
  %and162 = and i32 %109, 65280, !dbg !12009
  %shl163 = shl i32 %and162, 8, !dbg !12009
  %or164 = or i32 %shl160, %shl163, !dbg !12009
  %110 = load i8*, i8** %in, align 8, !dbg !12009
  %111 = bitcast i8* %110 to i32*, !dbg !12009
  %add.ptr165 = getelementptr i32, i32* %111, i64 0, !dbg !12009
  %112 = load i32, i32* %add.ptr165, align 4, !dbg !12009
  %and166 = and i32 %112, 16711680, !dbg !12009
  %shr167 = lshr i32 %and166, 8, !dbg !12009
  %or168 = or i32 %or164, %shr167, !dbg !12009
  %113 = load i8*, i8** %in, align 8, !dbg !12009
  %114 = bitcast i8* %113 to i32*, !dbg !12009
  %add.ptr169 = getelementptr i32, i32* %114, i64 0, !dbg !12009
  %115 = load i32, i32* %add.ptr169, align 4, !dbg !12009
  %and170 = and i32 %115, -16777216, !dbg !12009
  %shr171 = lshr i32 %and170, 24, !dbg !12009
  %or172 = or i32 %or168, %shr171, !dbg !12009
  br label %cond.end176, !dbg !12009

cond.false173:                                    ; preds = %cond.end147
  %116 = load i8*, i8** %in, align 8, !dbg !12009
  %117 = bitcast i8* %116 to i32*, !dbg !12009
  %add.ptr174 = getelementptr i32, i32* %117, i64 0, !dbg !12009
  %118 = load i32, i32* %add.ptr174, align 4, !dbg !12009
  %call175 = call i32 @__fswab32(i32 %118) #8, !dbg !12009
  br label %cond.end176, !dbg !12009

cond.end176:                                      ; preds = %cond.false173, %cond.true157
  %cond177 = phi i32 [ %or172, %cond.true157 ], [ %call175, %cond.false173 ], !dbg !12009
  %and178 = and i32 %cond177, 65535, !dbg !12009
  %119 = load i32, i32* %_v, align 4, !dbg !12009
  %and179 = and i32 %119, 65535, !dbg !12009
  %shl180 = shl i32 %and179, 16, !dbg !12009
  %or181 = or i32 %and178, %shl180, !dbg !12009
  %and182 = and i32 %or181, -16777216, !dbg !12009
  %shr183 = lshr i32 %and182, 24, !dbg !12009
  %or184 = or i32 %or155, %shr183, !dbg !12009
  br label %cond.end213, !dbg !12009

cond.false185:                                    ; preds = %cond.end63
  %120 = load i8*, i8** %in, align 8, !dbg !12009
  %121 = bitcast i8* %120 to i32*, !dbg !12009
  %add.ptr186 = getelementptr i32, i32* %121, i64 0, !dbg !12009
  %122 = load i32, i32* %add.ptr186, align 4, !dbg !12009
  %123 = call i1 @llvm.is.constant.i32(i32 %122), !dbg !12009
  br i1 %123, label %cond.true187, label %cond.false203, !dbg !12009

cond.true187:                                     ; preds = %cond.false185
  %124 = load i8*, i8** %in, align 8, !dbg !12009
  %125 = bitcast i8* %124 to i32*, !dbg !12009
  %add.ptr188 = getelementptr i32, i32* %125, i64 0, !dbg !12009
  %126 = load i32, i32* %add.ptr188, align 4, !dbg !12009
  %and189 = and i32 %126, 255, !dbg !12009
  %shl190 = shl i32 %and189, 24, !dbg !12009
  %127 = load i8*, i8** %in, align 8, !dbg !12009
  %128 = bitcast i8* %127 to i32*, !dbg !12009
  %add.ptr191 = getelementptr i32, i32* %128, i64 0, !dbg !12009
  %129 = load i32, i32* %add.ptr191, align 4, !dbg !12009
  %and192 = and i32 %129, 65280, !dbg !12009
  %shl193 = shl i32 %and192, 8, !dbg !12009
  %or194 = or i32 %shl190, %shl193, !dbg !12009
  %130 = load i8*, i8** %in, align 8, !dbg !12009
  %131 = bitcast i8* %130 to i32*, !dbg !12009
  %add.ptr195 = getelementptr i32, i32* %131, i64 0, !dbg !12009
  %132 = load i32, i32* %add.ptr195, align 4, !dbg !12009
  %and196 = and i32 %132, 16711680, !dbg !12009
  %shr197 = lshr i32 %and196, 8, !dbg !12009
  %or198 = or i32 %or194, %shr197, !dbg !12009
  %133 = load i8*, i8** %in, align 8, !dbg !12009
  %134 = bitcast i8* %133 to i32*, !dbg !12009
  %add.ptr199 = getelementptr i32, i32* %134, i64 0, !dbg !12009
  %135 = load i32, i32* %add.ptr199, align 4, !dbg !12009
  %and200 = and i32 %135, -16777216, !dbg !12009
  %shr201 = lshr i32 %and200, 24, !dbg !12009
  %or202 = or i32 %or198, %shr201, !dbg !12009
  br label %cond.end206, !dbg !12009

cond.false203:                                    ; preds = %cond.false185
  %136 = load i8*, i8** %in, align 8, !dbg !12009
  %137 = bitcast i8* %136 to i32*, !dbg !12009
  %add.ptr204 = getelementptr i32, i32* %137, i64 0, !dbg !12009
  %138 = load i32, i32* %add.ptr204, align 4, !dbg !12009
  %call205 = call i32 @__fswab32(i32 %138) #8, !dbg !12009
  br label %cond.end206, !dbg !12009

cond.end206:                                      ; preds = %cond.false203, %cond.true187
  %cond207 = phi i32 [ %or202, %cond.true187 ], [ %call205, %cond.false203 ], !dbg !12009
  %and208 = and i32 %cond207, 65535, !dbg !12009
  %139 = load i32, i32* %_v, align 4, !dbg !12009
  %and209 = and i32 %139, 65535, !dbg !12009
  %shl210 = shl i32 %and209, 16, !dbg !12009
  %or211 = or i32 %and208, %shl210, !dbg !12009
  %call212 = call i32 @__fswab32(i32 %or211) #8, !dbg !12009
  br label %cond.end213, !dbg !12009

cond.end213:                                      ; preds = %cond.end206, %cond.end176
  %cond214 = phi i32 [ %or184, %cond.end176 ], [ %call212, %cond.end206 ], !dbg !12009
  %140 = load i8*, i8** %in, align 8, !dbg !12009
  %141 = bitcast i8* %140 to i32*, !dbg !12009
  %add.ptr215 = getelementptr i32, i32* %141, i64 0, !dbg !12009
  store i32 %cond214, i32* %add.ptr215, align 4, !dbg !12009
  br label %do.end216, !dbg !12009

do.end216:                                        ; preds = %cond.end213
  br label %do.body217, !dbg !12012

do.body217:                                       ; preds = %do.end216
  call void @llvm.dbg.declare(metadata i32* %_v218, metadata !12013, metadata !DIExpression()), !dbg !12015
  store i32 1, i32* %_v218, align 4, !dbg !12015
  br label %do.body219, !dbg !12015

do.body219:                                       ; preds = %do.body217
  br label %do.end220, !dbg !12016

do.end220:                                        ; preds = %do.body219
  %142 = load i8*, i8** %in, align 8, !dbg !12015
  %143 = bitcast i8* %142 to i32*, !dbg !12015
  %add.ptr221 = getelementptr i32, i32* %143, i64 3, !dbg !12015
  %144 = load i32, i32* %add.ptr221, align 4, !dbg !12015
  %145 = call i1 @llvm.is.constant.i32(i32 %144), !dbg !12015
  br i1 %145, label %cond.true222, label %cond.false238, !dbg !12015

cond.true222:                                     ; preds = %do.end220
  %146 = load i8*, i8** %in, align 8, !dbg !12015
  %147 = bitcast i8* %146 to i32*, !dbg !12015
  %add.ptr223 = getelementptr i32, i32* %147, i64 3, !dbg !12015
  %148 = load i32, i32* %add.ptr223, align 4, !dbg !12015
  %and224 = and i32 %148, 255, !dbg !12015
  %shl225 = shl i32 %and224, 24, !dbg !12015
  %149 = load i8*, i8** %in, align 8, !dbg !12015
  %150 = bitcast i8* %149 to i32*, !dbg !12015
  %add.ptr226 = getelementptr i32, i32* %150, i64 3, !dbg !12015
  %151 = load i32, i32* %add.ptr226, align 4, !dbg !12015
  %and227 = and i32 %151, 65280, !dbg !12015
  %shl228 = shl i32 %and227, 8, !dbg !12015
  %or229 = or i32 %shl225, %shl228, !dbg !12015
  %152 = load i8*, i8** %in, align 8, !dbg !12015
  %153 = bitcast i8* %152 to i32*, !dbg !12015
  %add.ptr230 = getelementptr i32, i32* %153, i64 3, !dbg !12015
  %154 = load i32, i32* %add.ptr230, align 4, !dbg !12015
  %and231 = and i32 %154, 16711680, !dbg !12015
  %shr232 = lshr i32 %and231, 8, !dbg !12015
  %or233 = or i32 %or229, %shr232, !dbg !12015
  %155 = load i8*, i8** %in, align 8, !dbg !12015
  %156 = bitcast i8* %155 to i32*, !dbg !12015
  %add.ptr234 = getelementptr i32, i32* %156, i64 3, !dbg !12015
  %157 = load i32, i32* %add.ptr234, align 4, !dbg !12015
  %and235 = and i32 %157, -16777216, !dbg !12015
  %shr236 = lshr i32 %and235, 24, !dbg !12015
  %or237 = or i32 %or233, %shr236, !dbg !12015
  br label %cond.end241, !dbg !12015

cond.false238:                                    ; preds = %do.end220
  %158 = load i8*, i8** %in, align 8, !dbg !12015
  %159 = bitcast i8* %158 to i32*, !dbg !12015
  %add.ptr239 = getelementptr i32, i32* %159, i64 3, !dbg !12015
  %160 = load i32, i32* %add.ptr239, align 4, !dbg !12015
  %call240 = call i32 @__fswab32(i32 %160) #8, !dbg !12015
  br label %cond.end241, !dbg !12015

cond.end241:                                      ; preds = %cond.false238, %cond.true222
  %cond242 = phi i32 [ %or237, %cond.true222 ], [ %call240, %cond.false238 ], !dbg !12015
  %and243 = and i32 %cond242, -5, !dbg !12015
  %161 = load i32, i32* %_v218, align 4, !dbg !12015
  %and244 = and i32 %161, 1, !dbg !12015
  %shl245 = shl i32 %and244, 2, !dbg !12015
  %or246 = or i32 %and243, %shl245, !dbg !12015
  %162 = call i1 @llvm.is.constant.i32(i32 %or246), !dbg !12015
  br i1 %162, label %cond.true247, label %cond.false363, !dbg !12015

cond.true247:                                     ; preds = %cond.end241
  %163 = load i8*, i8** %in, align 8, !dbg !12015
  %164 = bitcast i8* %163 to i32*, !dbg !12015
  %add.ptr248 = getelementptr i32, i32* %164, i64 3, !dbg !12015
  %165 = load i32, i32* %add.ptr248, align 4, !dbg !12015
  %166 = call i1 @llvm.is.constant.i32(i32 %165), !dbg !12015
  br i1 %166, label %cond.true249, label %cond.false265, !dbg !12015

cond.true249:                                     ; preds = %cond.true247
  %167 = load i8*, i8** %in, align 8, !dbg !12015
  %168 = bitcast i8* %167 to i32*, !dbg !12015
  %add.ptr250 = getelementptr i32, i32* %168, i64 3, !dbg !12015
  %169 = load i32, i32* %add.ptr250, align 4, !dbg !12015
  %and251 = and i32 %169, 255, !dbg !12015
  %shl252 = shl i32 %and251, 24, !dbg !12015
  %170 = load i8*, i8** %in, align 8, !dbg !12015
  %171 = bitcast i8* %170 to i32*, !dbg !12015
  %add.ptr253 = getelementptr i32, i32* %171, i64 3, !dbg !12015
  %172 = load i32, i32* %add.ptr253, align 4, !dbg !12015
  %and254 = and i32 %172, 65280, !dbg !12015
  %shl255 = shl i32 %and254, 8, !dbg !12015
  %or256 = or i32 %shl252, %shl255, !dbg !12015
  %173 = load i8*, i8** %in, align 8, !dbg !12015
  %174 = bitcast i8* %173 to i32*, !dbg !12015
  %add.ptr257 = getelementptr i32, i32* %174, i64 3, !dbg !12015
  %175 = load i32, i32* %add.ptr257, align 4, !dbg !12015
  %and258 = and i32 %175, 16711680, !dbg !12015
  %shr259 = lshr i32 %and258, 8, !dbg !12015
  %or260 = or i32 %or256, %shr259, !dbg !12015
  %176 = load i8*, i8** %in, align 8, !dbg !12015
  %177 = bitcast i8* %176 to i32*, !dbg !12015
  %add.ptr261 = getelementptr i32, i32* %177, i64 3, !dbg !12015
  %178 = load i32, i32* %add.ptr261, align 4, !dbg !12015
  %and262 = and i32 %178, -16777216, !dbg !12015
  %shr263 = lshr i32 %and262, 24, !dbg !12015
  %or264 = or i32 %or260, %shr263, !dbg !12015
  br label %cond.end268, !dbg !12015

cond.false265:                                    ; preds = %cond.true247
  %179 = load i8*, i8** %in, align 8, !dbg !12015
  %180 = bitcast i8* %179 to i32*, !dbg !12015
  %add.ptr266 = getelementptr i32, i32* %180, i64 3, !dbg !12015
  %181 = load i32, i32* %add.ptr266, align 4, !dbg !12015
  %call267 = call i32 @__fswab32(i32 %181) #8, !dbg !12015
  br label %cond.end268, !dbg !12015

cond.end268:                                      ; preds = %cond.false265, %cond.true249
  %cond269 = phi i32 [ %or264, %cond.true249 ], [ %call267, %cond.false265 ], !dbg !12015
  %and270 = and i32 %cond269, -5, !dbg !12015
  %182 = load i32, i32* %_v218, align 4, !dbg !12015
  %and271 = and i32 %182, 1, !dbg !12015
  %shl272 = shl i32 %and271, 2, !dbg !12015
  %or273 = or i32 %and270, %shl272, !dbg !12015
  %and274 = and i32 %or273, 255, !dbg !12015
  %shl275 = shl i32 %and274, 24, !dbg !12015
  %183 = load i8*, i8** %in, align 8, !dbg !12015
  %184 = bitcast i8* %183 to i32*, !dbg !12015
  %add.ptr276 = getelementptr i32, i32* %184, i64 3, !dbg !12015
  %185 = load i32, i32* %add.ptr276, align 4, !dbg !12015
  %186 = call i1 @llvm.is.constant.i32(i32 %185), !dbg !12015
  br i1 %186, label %cond.true277, label %cond.false293, !dbg !12015

cond.true277:                                     ; preds = %cond.end268
  %187 = load i8*, i8** %in, align 8, !dbg !12015
  %188 = bitcast i8* %187 to i32*, !dbg !12015
  %add.ptr278 = getelementptr i32, i32* %188, i64 3, !dbg !12015
  %189 = load i32, i32* %add.ptr278, align 4, !dbg !12015
  %and279 = and i32 %189, 255, !dbg !12015
  %shl280 = shl i32 %and279, 24, !dbg !12015
  %190 = load i8*, i8** %in, align 8, !dbg !12015
  %191 = bitcast i8* %190 to i32*, !dbg !12015
  %add.ptr281 = getelementptr i32, i32* %191, i64 3, !dbg !12015
  %192 = load i32, i32* %add.ptr281, align 4, !dbg !12015
  %and282 = and i32 %192, 65280, !dbg !12015
  %shl283 = shl i32 %and282, 8, !dbg !12015
  %or284 = or i32 %shl280, %shl283, !dbg !12015
  %193 = load i8*, i8** %in, align 8, !dbg !12015
  %194 = bitcast i8* %193 to i32*, !dbg !12015
  %add.ptr285 = getelementptr i32, i32* %194, i64 3, !dbg !12015
  %195 = load i32, i32* %add.ptr285, align 4, !dbg !12015
  %and286 = and i32 %195, 16711680, !dbg !12015
  %shr287 = lshr i32 %and286, 8, !dbg !12015
  %or288 = or i32 %or284, %shr287, !dbg !12015
  %196 = load i8*, i8** %in, align 8, !dbg !12015
  %197 = bitcast i8* %196 to i32*, !dbg !12015
  %add.ptr289 = getelementptr i32, i32* %197, i64 3, !dbg !12015
  %198 = load i32, i32* %add.ptr289, align 4, !dbg !12015
  %and290 = and i32 %198, -16777216, !dbg !12015
  %shr291 = lshr i32 %and290, 24, !dbg !12015
  %or292 = or i32 %or288, %shr291, !dbg !12015
  br label %cond.end296, !dbg !12015

cond.false293:                                    ; preds = %cond.end268
  %199 = load i8*, i8** %in, align 8, !dbg !12015
  %200 = bitcast i8* %199 to i32*, !dbg !12015
  %add.ptr294 = getelementptr i32, i32* %200, i64 3, !dbg !12015
  %201 = load i32, i32* %add.ptr294, align 4, !dbg !12015
  %call295 = call i32 @__fswab32(i32 %201) #8, !dbg !12015
  br label %cond.end296, !dbg !12015

cond.end296:                                      ; preds = %cond.false293, %cond.true277
  %cond297 = phi i32 [ %or292, %cond.true277 ], [ %call295, %cond.false293 ], !dbg !12015
  %and298 = and i32 %cond297, -5, !dbg !12015
  %202 = load i32, i32* %_v218, align 4, !dbg !12015
  %and299 = and i32 %202, 1, !dbg !12015
  %shl300 = shl i32 %and299, 2, !dbg !12015
  %or301 = or i32 %and298, %shl300, !dbg !12015
  %and302 = and i32 %or301, 65280, !dbg !12015
  %shl303 = shl i32 %and302, 8, !dbg !12015
  %or304 = or i32 %shl275, %shl303, !dbg !12015
  %203 = load i8*, i8** %in, align 8, !dbg !12015
  %204 = bitcast i8* %203 to i32*, !dbg !12015
  %add.ptr305 = getelementptr i32, i32* %204, i64 3, !dbg !12015
  %205 = load i32, i32* %add.ptr305, align 4, !dbg !12015
  %206 = call i1 @llvm.is.constant.i32(i32 %205), !dbg !12015
  br i1 %206, label %cond.true306, label %cond.false322, !dbg !12015

cond.true306:                                     ; preds = %cond.end296
  %207 = load i8*, i8** %in, align 8, !dbg !12015
  %208 = bitcast i8* %207 to i32*, !dbg !12015
  %add.ptr307 = getelementptr i32, i32* %208, i64 3, !dbg !12015
  %209 = load i32, i32* %add.ptr307, align 4, !dbg !12015
  %and308 = and i32 %209, 255, !dbg !12015
  %shl309 = shl i32 %and308, 24, !dbg !12015
  %210 = load i8*, i8** %in, align 8, !dbg !12015
  %211 = bitcast i8* %210 to i32*, !dbg !12015
  %add.ptr310 = getelementptr i32, i32* %211, i64 3, !dbg !12015
  %212 = load i32, i32* %add.ptr310, align 4, !dbg !12015
  %and311 = and i32 %212, 65280, !dbg !12015
  %shl312 = shl i32 %and311, 8, !dbg !12015
  %or313 = or i32 %shl309, %shl312, !dbg !12015
  %213 = load i8*, i8** %in, align 8, !dbg !12015
  %214 = bitcast i8* %213 to i32*, !dbg !12015
  %add.ptr314 = getelementptr i32, i32* %214, i64 3, !dbg !12015
  %215 = load i32, i32* %add.ptr314, align 4, !dbg !12015
  %and315 = and i32 %215, 16711680, !dbg !12015
  %shr316 = lshr i32 %and315, 8, !dbg !12015
  %or317 = or i32 %or313, %shr316, !dbg !12015
  %216 = load i8*, i8** %in, align 8, !dbg !12015
  %217 = bitcast i8* %216 to i32*, !dbg !12015
  %add.ptr318 = getelementptr i32, i32* %217, i64 3, !dbg !12015
  %218 = load i32, i32* %add.ptr318, align 4, !dbg !12015
  %and319 = and i32 %218, -16777216, !dbg !12015
  %shr320 = lshr i32 %and319, 24, !dbg !12015
  %or321 = or i32 %or317, %shr320, !dbg !12015
  br label %cond.end325, !dbg !12015

cond.false322:                                    ; preds = %cond.end296
  %219 = load i8*, i8** %in, align 8, !dbg !12015
  %220 = bitcast i8* %219 to i32*, !dbg !12015
  %add.ptr323 = getelementptr i32, i32* %220, i64 3, !dbg !12015
  %221 = load i32, i32* %add.ptr323, align 4, !dbg !12015
  %call324 = call i32 @__fswab32(i32 %221) #8, !dbg !12015
  br label %cond.end325, !dbg !12015

cond.end325:                                      ; preds = %cond.false322, %cond.true306
  %cond326 = phi i32 [ %or321, %cond.true306 ], [ %call324, %cond.false322 ], !dbg !12015
  %and327 = and i32 %cond326, -5, !dbg !12015
  %222 = load i32, i32* %_v218, align 4, !dbg !12015
  %and328 = and i32 %222, 1, !dbg !12015
  %shl329 = shl i32 %and328, 2, !dbg !12015
  %or330 = or i32 %and327, %shl329, !dbg !12015
  %and331 = and i32 %or330, 16711680, !dbg !12015
  %shr332 = lshr i32 %and331, 8, !dbg !12015
  %or333 = or i32 %or304, %shr332, !dbg !12015
  %223 = load i8*, i8** %in, align 8, !dbg !12015
  %224 = bitcast i8* %223 to i32*, !dbg !12015
  %add.ptr334 = getelementptr i32, i32* %224, i64 3, !dbg !12015
  %225 = load i32, i32* %add.ptr334, align 4, !dbg !12015
  %226 = call i1 @llvm.is.constant.i32(i32 %225), !dbg !12015
  br i1 %226, label %cond.true335, label %cond.false351, !dbg !12015

cond.true335:                                     ; preds = %cond.end325
  %227 = load i8*, i8** %in, align 8, !dbg !12015
  %228 = bitcast i8* %227 to i32*, !dbg !12015
  %add.ptr336 = getelementptr i32, i32* %228, i64 3, !dbg !12015
  %229 = load i32, i32* %add.ptr336, align 4, !dbg !12015
  %and337 = and i32 %229, 255, !dbg !12015
  %shl338 = shl i32 %and337, 24, !dbg !12015
  %230 = load i8*, i8** %in, align 8, !dbg !12015
  %231 = bitcast i8* %230 to i32*, !dbg !12015
  %add.ptr339 = getelementptr i32, i32* %231, i64 3, !dbg !12015
  %232 = load i32, i32* %add.ptr339, align 4, !dbg !12015
  %and340 = and i32 %232, 65280, !dbg !12015
  %shl341 = shl i32 %and340, 8, !dbg !12015
  %or342 = or i32 %shl338, %shl341, !dbg !12015
  %233 = load i8*, i8** %in, align 8, !dbg !12015
  %234 = bitcast i8* %233 to i32*, !dbg !12015
  %add.ptr343 = getelementptr i32, i32* %234, i64 3, !dbg !12015
  %235 = load i32, i32* %add.ptr343, align 4, !dbg !12015
  %and344 = and i32 %235, 16711680, !dbg !12015
  %shr345 = lshr i32 %and344, 8, !dbg !12015
  %or346 = or i32 %or342, %shr345, !dbg !12015
  %236 = load i8*, i8** %in, align 8, !dbg !12015
  %237 = bitcast i8* %236 to i32*, !dbg !12015
  %add.ptr347 = getelementptr i32, i32* %237, i64 3, !dbg !12015
  %238 = load i32, i32* %add.ptr347, align 4, !dbg !12015
  %and348 = and i32 %238, -16777216, !dbg !12015
  %shr349 = lshr i32 %and348, 24, !dbg !12015
  %or350 = or i32 %or346, %shr349, !dbg !12015
  br label %cond.end354, !dbg !12015

cond.false351:                                    ; preds = %cond.end325
  %239 = load i8*, i8** %in, align 8, !dbg !12015
  %240 = bitcast i8* %239 to i32*, !dbg !12015
  %add.ptr352 = getelementptr i32, i32* %240, i64 3, !dbg !12015
  %241 = load i32, i32* %add.ptr352, align 4, !dbg !12015
  %call353 = call i32 @__fswab32(i32 %241) #8, !dbg !12015
  br label %cond.end354, !dbg !12015

cond.end354:                                      ; preds = %cond.false351, %cond.true335
  %cond355 = phi i32 [ %or350, %cond.true335 ], [ %call353, %cond.false351 ], !dbg !12015
  %and356 = and i32 %cond355, -5, !dbg !12015
  %242 = load i32, i32* %_v218, align 4, !dbg !12015
  %and357 = and i32 %242, 1, !dbg !12015
  %shl358 = shl i32 %and357, 2, !dbg !12015
  %or359 = or i32 %and356, %shl358, !dbg !12015
  %and360 = and i32 %or359, -16777216, !dbg !12015
  %shr361 = lshr i32 %and360, 24, !dbg !12015
  %or362 = or i32 %or333, %shr361, !dbg !12015
  br label %cond.end391, !dbg !12015

cond.false363:                                    ; preds = %cond.end241
  %243 = load i8*, i8** %in, align 8, !dbg !12015
  %244 = bitcast i8* %243 to i32*, !dbg !12015
  %add.ptr364 = getelementptr i32, i32* %244, i64 3, !dbg !12015
  %245 = load i32, i32* %add.ptr364, align 4, !dbg !12015
  %246 = call i1 @llvm.is.constant.i32(i32 %245), !dbg !12015
  br i1 %246, label %cond.true365, label %cond.false381, !dbg !12015

cond.true365:                                     ; preds = %cond.false363
  %247 = load i8*, i8** %in, align 8, !dbg !12015
  %248 = bitcast i8* %247 to i32*, !dbg !12015
  %add.ptr366 = getelementptr i32, i32* %248, i64 3, !dbg !12015
  %249 = load i32, i32* %add.ptr366, align 4, !dbg !12015
  %and367 = and i32 %249, 255, !dbg !12015
  %shl368 = shl i32 %and367, 24, !dbg !12015
  %250 = load i8*, i8** %in, align 8, !dbg !12015
  %251 = bitcast i8* %250 to i32*, !dbg !12015
  %add.ptr369 = getelementptr i32, i32* %251, i64 3, !dbg !12015
  %252 = load i32, i32* %add.ptr369, align 4, !dbg !12015
  %and370 = and i32 %252, 65280, !dbg !12015
  %shl371 = shl i32 %and370, 8, !dbg !12015
  %or372 = or i32 %shl368, %shl371, !dbg !12015
  %253 = load i8*, i8** %in, align 8, !dbg !12015
  %254 = bitcast i8* %253 to i32*, !dbg !12015
  %add.ptr373 = getelementptr i32, i32* %254, i64 3, !dbg !12015
  %255 = load i32, i32* %add.ptr373, align 4, !dbg !12015
  %and374 = and i32 %255, 16711680, !dbg !12015
  %shr375 = lshr i32 %and374, 8, !dbg !12015
  %or376 = or i32 %or372, %shr375, !dbg !12015
  %256 = load i8*, i8** %in, align 8, !dbg !12015
  %257 = bitcast i8* %256 to i32*, !dbg !12015
  %add.ptr377 = getelementptr i32, i32* %257, i64 3, !dbg !12015
  %258 = load i32, i32* %add.ptr377, align 4, !dbg !12015
  %and378 = and i32 %258, -16777216, !dbg !12015
  %shr379 = lshr i32 %and378, 24, !dbg !12015
  %or380 = or i32 %or376, %shr379, !dbg !12015
  br label %cond.end384, !dbg !12015

cond.false381:                                    ; preds = %cond.false363
  %259 = load i8*, i8** %in, align 8, !dbg !12015
  %260 = bitcast i8* %259 to i32*, !dbg !12015
  %add.ptr382 = getelementptr i32, i32* %260, i64 3, !dbg !12015
  %261 = load i32, i32* %add.ptr382, align 4, !dbg !12015
  %call383 = call i32 @__fswab32(i32 %261) #8, !dbg !12015
  br label %cond.end384, !dbg !12015

cond.end384:                                      ; preds = %cond.false381, %cond.true365
  %cond385 = phi i32 [ %or380, %cond.true365 ], [ %call383, %cond.false381 ], !dbg !12015
  %and386 = and i32 %cond385, -5, !dbg !12015
  %262 = load i32, i32* %_v218, align 4, !dbg !12015
  %and387 = and i32 %262, 1, !dbg !12015
  %shl388 = shl i32 %and387, 2, !dbg !12015
  %or389 = or i32 %and386, %shl388, !dbg !12015
  %call390 = call i32 @__fswab32(i32 %or389) #8, !dbg !12015
  br label %cond.end391, !dbg !12015

cond.end391:                                      ; preds = %cond.end384, %cond.end354
  %cond392 = phi i32 [ %or362, %cond.end354 ], [ %call390, %cond.end384 ], !dbg !12015
  %263 = load i8*, i8** %in, align 8, !dbg !12015
  %264 = bitcast i8* %263 to i32*, !dbg !12015
  %add.ptr393 = getelementptr i32, i32* %264, i64 3, !dbg !12015
  store i32 %cond392, i32* %add.ptr393, align 4, !dbg !12015
  br label %do.end394, !dbg !12015

do.end394:                                        ; preds = %cond.end391
  %265 = load i8*, i8** %in, align 8, !dbg !12018
  %add.ptr395 = getelementptr i8, i8* %265, i64 256, !dbg !12018
  store i8* %add.ptr395, i8** %nic_vport_ctx, align 8, !dbg !12019
  br label %do.body396, !dbg !12020

do.body396:                                       ; preds = %do.end394
  call void @llvm.dbg.declare(metadata i32* %_v397, metadata !12021, metadata !DIExpression()), !dbg !12023
  store i32 2, i32* %_v397, align 4, !dbg !12023
  br label %do.body398, !dbg !12023

do.body398:                                       ; preds = %do.body396
  br label %do.end399, !dbg !12024

do.end399:                                        ; preds = %do.body398
  %266 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !12023
  %267 = bitcast i8* %266 to i32*, !dbg !12023
  %add.ptr400 = getelementptr i32, i32* %267, i64 60, !dbg !12023
  %268 = load i32, i32* %add.ptr400, align 4, !dbg !12023
  %269 = call i1 @llvm.is.constant.i32(i32 %268), !dbg !12023
  br i1 %269, label %cond.true401, label %cond.false417, !dbg !12023

cond.true401:                                     ; preds = %do.end399
  %270 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !12023
  %271 = bitcast i8* %270 to i32*, !dbg !12023
  %add.ptr402 = getelementptr i32, i32* %271, i64 60, !dbg !12023
  %272 = load i32, i32* %add.ptr402, align 4, !dbg !12023
  %and403 = and i32 %272, 255, !dbg !12023
  %shl404 = shl i32 %and403, 24, !dbg !12023
  %273 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !12023
  %274 = bitcast i8* %273 to i32*, !dbg !12023
  %add.ptr405 = getelementptr i32, i32* %274, i64 60, !dbg !12023
  %275 = load i32, i32* %add.ptr405, align 4, !dbg !12023
  %and406 = and i32 %275, 65280, !dbg !12023
  %shl407 = shl i32 %and406, 8, !dbg !12023
  %or408 = or i32 %shl404, %shl407, !dbg !12023
  %276 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !12023
  %277 = bitcast i8* %276 to i32*, !dbg !12023
  %add.ptr409 = getelementptr i32, i32* %277, i64 60, !dbg !12023
  %278 = load i32, i32* %add.ptr409, align 4, !dbg !12023
  %and410 = and i32 %278, 16711680, !dbg !12023
  %shr411 = lshr i32 %and410, 8, !dbg !12023
  %or412 = or i32 %or408, %shr411, !dbg !12023
  %279 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !12023
  %280 = bitcast i8* %279 to i32*, !dbg !12023
  %add.ptr413 = getelementptr i32, i32* %280, i64 60, !dbg !12023
  %281 = load i32, i32* %add.ptr413, align 4, !dbg !12023
  %and414 = and i32 %281, -16777216, !dbg !12023
  %shr415 = lshr i32 %and414, 24, !dbg !12023
  %or416 = or i32 %or412, %shr415, !dbg !12023
  br label %cond.end420, !dbg !12023

cond.false417:                                    ; preds = %do.end399
  %282 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !12023
  %283 = bitcast i8* %282 to i32*, !dbg !12023
  %add.ptr418 = getelementptr i32, i32* %283, i64 60, !dbg !12023
  %284 = load i32, i32* %add.ptr418, align 4, !dbg !12023
  %call419 = call i32 @__fswab32(i32 %284) #8, !dbg !12023
  br label %cond.end420, !dbg !12023

cond.end420:                                      ; preds = %cond.false417, %cond.true401
  %cond421 = phi i32 [ %or416, %cond.true401 ], [ %call419, %cond.false417 ], !dbg !12023
  %and422 = and i32 %cond421, -117440513, !dbg !12023
  %285 = load i32, i32* %_v397, align 4, !dbg !12023
  %and423 = and i32 %285, 7, !dbg !12023
  %shl424 = shl i32 %and423, 24, !dbg !12023
  %or425 = or i32 %and422, %shl424, !dbg !12023
  %286 = call i1 @llvm.is.constant.i32(i32 %or425), !dbg !12023
  br i1 %286, label %cond.true426, label %cond.false542, !dbg !12023

cond.true426:                                     ; preds = %cond.end420
  %287 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !12023
  %288 = bitcast i8* %287 to i32*, !dbg !12023
  %add.ptr427 = getelementptr i32, i32* %288, i64 60, !dbg !12023
  %289 = load i32, i32* %add.ptr427, align 4, !dbg !12023
  %290 = call i1 @llvm.is.constant.i32(i32 %289), !dbg !12023
  br i1 %290, label %cond.true428, label %cond.false444, !dbg !12023

cond.true428:                                     ; preds = %cond.true426
  %291 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !12023
  %292 = bitcast i8* %291 to i32*, !dbg !12023
  %add.ptr429 = getelementptr i32, i32* %292, i64 60, !dbg !12023
  %293 = load i32, i32* %add.ptr429, align 4, !dbg !12023
  %and430 = and i32 %293, 255, !dbg !12023
  %shl431 = shl i32 %and430, 24, !dbg !12023
  %294 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !12023
  %295 = bitcast i8* %294 to i32*, !dbg !12023
  %add.ptr432 = getelementptr i32, i32* %295, i64 60, !dbg !12023
  %296 = load i32, i32* %add.ptr432, align 4, !dbg !12023
  %and433 = and i32 %296, 65280, !dbg !12023
  %shl434 = shl i32 %and433, 8, !dbg !12023
  %or435 = or i32 %shl431, %shl434, !dbg !12023
  %297 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !12023
  %298 = bitcast i8* %297 to i32*, !dbg !12023
  %add.ptr436 = getelementptr i32, i32* %298, i64 60, !dbg !12023
  %299 = load i32, i32* %add.ptr436, align 4, !dbg !12023
  %and437 = and i32 %299, 16711680, !dbg !12023
  %shr438 = lshr i32 %and437, 8, !dbg !12023
  %or439 = or i32 %or435, %shr438, !dbg !12023
  %300 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !12023
  %301 = bitcast i8* %300 to i32*, !dbg !12023
  %add.ptr440 = getelementptr i32, i32* %301, i64 60, !dbg !12023
  %302 = load i32, i32* %add.ptr440, align 4, !dbg !12023
  %and441 = and i32 %302, -16777216, !dbg !12023
  %shr442 = lshr i32 %and441, 24, !dbg !12023
  %or443 = or i32 %or439, %shr442, !dbg !12023
  br label %cond.end447, !dbg !12023

cond.false444:                                    ; preds = %cond.true426
  %303 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !12023
  %304 = bitcast i8* %303 to i32*, !dbg !12023
  %add.ptr445 = getelementptr i32, i32* %304, i64 60, !dbg !12023
  %305 = load i32, i32* %add.ptr445, align 4, !dbg !12023
  %call446 = call i32 @__fswab32(i32 %305) #8, !dbg !12023
  br label %cond.end447, !dbg !12023

cond.end447:                                      ; preds = %cond.false444, %cond.true428
  %cond448 = phi i32 [ %or443, %cond.true428 ], [ %call446, %cond.false444 ], !dbg !12023
  %and449 = and i32 %cond448, -117440513, !dbg !12023
  %306 = load i32, i32* %_v397, align 4, !dbg !12023
  %and450 = and i32 %306, 7, !dbg !12023
  %shl451 = shl i32 %and450, 24, !dbg !12023
  %or452 = or i32 %and449, %shl451, !dbg !12023
  %and453 = and i32 %or452, 255, !dbg !12023
  %shl454 = shl i32 %and453, 24, !dbg !12023
  %307 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !12023
  %308 = bitcast i8* %307 to i32*, !dbg !12023
  %add.ptr455 = getelementptr i32, i32* %308, i64 60, !dbg !12023
  %309 = load i32, i32* %add.ptr455, align 4, !dbg !12023
  %310 = call i1 @llvm.is.constant.i32(i32 %309), !dbg !12023
  br i1 %310, label %cond.true456, label %cond.false472, !dbg !12023

cond.true456:                                     ; preds = %cond.end447
  %311 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !12023
  %312 = bitcast i8* %311 to i32*, !dbg !12023
  %add.ptr457 = getelementptr i32, i32* %312, i64 60, !dbg !12023
  %313 = load i32, i32* %add.ptr457, align 4, !dbg !12023
  %and458 = and i32 %313, 255, !dbg !12023
  %shl459 = shl i32 %and458, 24, !dbg !12023
  %314 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !12023
  %315 = bitcast i8* %314 to i32*, !dbg !12023
  %add.ptr460 = getelementptr i32, i32* %315, i64 60, !dbg !12023
  %316 = load i32, i32* %add.ptr460, align 4, !dbg !12023
  %and461 = and i32 %316, 65280, !dbg !12023
  %shl462 = shl i32 %and461, 8, !dbg !12023
  %or463 = or i32 %shl459, %shl462, !dbg !12023
  %317 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !12023
  %318 = bitcast i8* %317 to i32*, !dbg !12023
  %add.ptr464 = getelementptr i32, i32* %318, i64 60, !dbg !12023
  %319 = load i32, i32* %add.ptr464, align 4, !dbg !12023
  %and465 = and i32 %319, 16711680, !dbg !12023
  %shr466 = lshr i32 %and465, 8, !dbg !12023
  %or467 = or i32 %or463, %shr466, !dbg !12023
  %320 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !12023
  %321 = bitcast i8* %320 to i32*, !dbg !12023
  %add.ptr468 = getelementptr i32, i32* %321, i64 60, !dbg !12023
  %322 = load i32, i32* %add.ptr468, align 4, !dbg !12023
  %and469 = and i32 %322, -16777216, !dbg !12023
  %shr470 = lshr i32 %and469, 24, !dbg !12023
  %or471 = or i32 %or467, %shr470, !dbg !12023
  br label %cond.end475, !dbg !12023

cond.false472:                                    ; preds = %cond.end447
  %323 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !12023
  %324 = bitcast i8* %323 to i32*, !dbg !12023
  %add.ptr473 = getelementptr i32, i32* %324, i64 60, !dbg !12023
  %325 = load i32, i32* %add.ptr473, align 4, !dbg !12023
  %call474 = call i32 @__fswab32(i32 %325) #8, !dbg !12023
  br label %cond.end475, !dbg !12023

cond.end475:                                      ; preds = %cond.false472, %cond.true456
  %cond476 = phi i32 [ %or471, %cond.true456 ], [ %call474, %cond.false472 ], !dbg !12023
  %and477 = and i32 %cond476, -117440513, !dbg !12023
  %326 = load i32, i32* %_v397, align 4, !dbg !12023
  %and478 = and i32 %326, 7, !dbg !12023
  %shl479 = shl i32 %and478, 24, !dbg !12023
  %or480 = or i32 %and477, %shl479, !dbg !12023
  %and481 = and i32 %or480, 65280, !dbg !12023
  %shl482 = shl i32 %and481, 8, !dbg !12023
  %or483 = or i32 %shl454, %shl482, !dbg !12023
  %327 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !12023
  %328 = bitcast i8* %327 to i32*, !dbg !12023
  %add.ptr484 = getelementptr i32, i32* %328, i64 60, !dbg !12023
  %329 = load i32, i32* %add.ptr484, align 4, !dbg !12023
  %330 = call i1 @llvm.is.constant.i32(i32 %329), !dbg !12023
  br i1 %330, label %cond.true485, label %cond.false501, !dbg !12023

cond.true485:                                     ; preds = %cond.end475
  %331 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !12023
  %332 = bitcast i8* %331 to i32*, !dbg !12023
  %add.ptr486 = getelementptr i32, i32* %332, i64 60, !dbg !12023
  %333 = load i32, i32* %add.ptr486, align 4, !dbg !12023
  %and487 = and i32 %333, 255, !dbg !12023
  %shl488 = shl i32 %and487, 24, !dbg !12023
  %334 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !12023
  %335 = bitcast i8* %334 to i32*, !dbg !12023
  %add.ptr489 = getelementptr i32, i32* %335, i64 60, !dbg !12023
  %336 = load i32, i32* %add.ptr489, align 4, !dbg !12023
  %and490 = and i32 %336, 65280, !dbg !12023
  %shl491 = shl i32 %and490, 8, !dbg !12023
  %or492 = or i32 %shl488, %shl491, !dbg !12023
  %337 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !12023
  %338 = bitcast i8* %337 to i32*, !dbg !12023
  %add.ptr493 = getelementptr i32, i32* %338, i64 60, !dbg !12023
  %339 = load i32, i32* %add.ptr493, align 4, !dbg !12023
  %and494 = and i32 %339, 16711680, !dbg !12023
  %shr495 = lshr i32 %and494, 8, !dbg !12023
  %or496 = or i32 %or492, %shr495, !dbg !12023
  %340 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !12023
  %341 = bitcast i8* %340 to i32*, !dbg !12023
  %add.ptr497 = getelementptr i32, i32* %341, i64 60, !dbg !12023
  %342 = load i32, i32* %add.ptr497, align 4, !dbg !12023
  %and498 = and i32 %342, -16777216, !dbg !12023
  %shr499 = lshr i32 %and498, 24, !dbg !12023
  %or500 = or i32 %or496, %shr499, !dbg !12023
  br label %cond.end504, !dbg !12023

cond.false501:                                    ; preds = %cond.end475
  %343 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !12023
  %344 = bitcast i8* %343 to i32*, !dbg !12023
  %add.ptr502 = getelementptr i32, i32* %344, i64 60, !dbg !12023
  %345 = load i32, i32* %add.ptr502, align 4, !dbg !12023
  %call503 = call i32 @__fswab32(i32 %345) #8, !dbg !12023
  br label %cond.end504, !dbg !12023

cond.end504:                                      ; preds = %cond.false501, %cond.true485
  %cond505 = phi i32 [ %or500, %cond.true485 ], [ %call503, %cond.false501 ], !dbg !12023
  %and506 = and i32 %cond505, -117440513, !dbg !12023
  %346 = load i32, i32* %_v397, align 4, !dbg !12023
  %and507 = and i32 %346, 7, !dbg !12023
  %shl508 = shl i32 %and507, 24, !dbg !12023
  %or509 = or i32 %and506, %shl508, !dbg !12023
  %and510 = and i32 %or509, 16711680, !dbg !12023
  %shr511 = lshr i32 %and510, 8, !dbg !12023
  %or512 = or i32 %or483, %shr511, !dbg !12023
  %347 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !12023
  %348 = bitcast i8* %347 to i32*, !dbg !12023
  %add.ptr513 = getelementptr i32, i32* %348, i64 60, !dbg !12023
  %349 = load i32, i32* %add.ptr513, align 4, !dbg !12023
  %350 = call i1 @llvm.is.constant.i32(i32 %349), !dbg !12023
  br i1 %350, label %cond.true514, label %cond.false530, !dbg !12023

cond.true514:                                     ; preds = %cond.end504
  %351 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !12023
  %352 = bitcast i8* %351 to i32*, !dbg !12023
  %add.ptr515 = getelementptr i32, i32* %352, i64 60, !dbg !12023
  %353 = load i32, i32* %add.ptr515, align 4, !dbg !12023
  %and516 = and i32 %353, 255, !dbg !12023
  %shl517 = shl i32 %and516, 24, !dbg !12023
  %354 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !12023
  %355 = bitcast i8* %354 to i32*, !dbg !12023
  %add.ptr518 = getelementptr i32, i32* %355, i64 60, !dbg !12023
  %356 = load i32, i32* %add.ptr518, align 4, !dbg !12023
  %and519 = and i32 %356, 65280, !dbg !12023
  %shl520 = shl i32 %and519, 8, !dbg !12023
  %or521 = or i32 %shl517, %shl520, !dbg !12023
  %357 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !12023
  %358 = bitcast i8* %357 to i32*, !dbg !12023
  %add.ptr522 = getelementptr i32, i32* %358, i64 60, !dbg !12023
  %359 = load i32, i32* %add.ptr522, align 4, !dbg !12023
  %and523 = and i32 %359, 16711680, !dbg !12023
  %shr524 = lshr i32 %and523, 8, !dbg !12023
  %or525 = or i32 %or521, %shr524, !dbg !12023
  %360 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !12023
  %361 = bitcast i8* %360 to i32*, !dbg !12023
  %add.ptr526 = getelementptr i32, i32* %361, i64 60, !dbg !12023
  %362 = load i32, i32* %add.ptr526, align 4, !dbg !12023
  %and527 = and i32 %362, -16777216, !dbg !12023
  %shr528 = lshr i32 %and527, 24, !dbg !12023
  %or529 = or i32 %or525, %shr528, !dbg !12023
  br label %cond.end533, !dbg !12023

cond.false530:                                    ; preds = %cond.end504
  %363 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !12023
  %364 = bitcast i8* %363 to i32*, !dbg !12023
  %add.ptr531 = getelementptr i32, i32* %364, i64 60, !dbg !12023
  %365 = load i32, i32* %add.ptr531, align 4, !dbg !12023
  %call532 = call i32 @__fswab32(i32 %365) #8, !dbg !12023
  br label %cond.end533, !dbg !12023

cond.end533:                                      ; preds = %cond.false530, %cond.true514
  %cond534 = phi i32 [ %or529, %cond.true514 ], [ %call532, %cond.false530 ], !dbg !12023
  %and535 = and i32 %cond534, -117440513, !dbg !12023
  %366 = load i32, i32* %_v397, align 4, !dbg !12023
  %and536 = and i32 %366, 7, !dbg !12023
  %shl537 = shl i32 %and536, 24, !dbg !12023
  %or538 = or i32 %and535, %shl537, !dbg !12023
  %and539 = and i32 %or538, -16777216, !dbg !12023
  %shr540 = lshr i32 %and539, 24, !dbg !12023
  %or541 = or i32 %or512, %shr540, !dbg !12023
  br label %cond.end570, !dbg !12023

cond.false542:                                    ; preds = %cond.end420
  %367 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !12023
  %368 = bitcast i8* %367 to i32*, !dbg !12023
  %add.ptr543 = getelementptr i32, i32* %368, i64 60, !dbg !12023
  %369 = load i32, i32* %add.ptr543, align 4, !dbg !12023
  %370 = call i1 @llvm.is.constant.i32(i32 %369), !dbg !12023
  br i1 %370, label %cond.true544, label %cond.false560, !dbg !12023

cond.true544:                                     ; preds = %cond.false542
  %371 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !12023
  %372 = bitcast i8* %371 to i32*, !dbg !12023
  %add.ptr545 = getelementptr i32, i32* %372, i64 60, !dbg !12023
  %373 = load i32, i32* %add.ptr545, align 4, !dbg !12023
  %and546 = and i32 %373, 255, !dbg !12023
  %shl547 = shl i32 %and546, 24, !dbg !12023
  %374 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !12023
  %375 = bitcast i8* %374 to i32*, !dbg !12023
  %add.ptr548 = getelementptr i32, i32* %375, i64 60, !dbg !12023
  %376 = load i32, i32* %add.ptr548, align 4, !dbg !12023
  %and549 = and i32 %376, 65280, !dbg !12023
  %shl550 = shl i32 %and549, 8, !dbg !12023
  %or551 = or i32 %shl547, %shl550, !dbg !12023
  %377 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !12023
  %378 = bitcast i8* %377 to i32*, !dbg !12023
  %add.ptr552 = getelementptr i32, i32* %378, i64 60, !dbg !12023
  %379 = load i32, i32* %add.ptr552, align 4, !dbg !12023
  %and553 = and i32 %379, 16711680, !dbg !12023
  %shr554 = lshr i32 %and553, 8, !dbg !12023
  %or555 = or i32 %or551, %shr554, !dbg !12023
  %380 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !12023
  %381 = bitcast i8* %380 to i32*, !dbg !12023
  %add.ptr556 = getelementptr i32, i32* %381, i64 60, !dbg !12023
  %382 = load i32, i32* %add.ptr556, align 4, !dbg !12023
  %and557 = and i32 %382, -16777216, !dbg !12023
  %shr558 = lshr i32 %and557, 24, !dbg !12023
  %or559 = or i32 %or555, %shr558, !dbg !12023
  br label %cond.end563, !dbg !12023

cond.false560:                                    ; preds = %cond.false542
  %383 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !12023
  %384 = bitcast i8* %383 to i32*, !dbg !12023
  %add.ptr561 = getelementptr i32, i32* %384, i64 60, !dbg !12023
  %385 = load i32, i32* %add.ptr561, align 4, !dbg !12023
  %call562 = call i32 @__fswab32(i32 %385) #8, !dbg !12023
  br label %cond.end563, !dbg !12023

cond.end563:                                      ; preds = %cond.false560, %cond.true544
  %cond564 = phi i32 [ %or559, %cond.true544 ], [ %call562, %cond.false560 ], !dbg !12023
  %and565 = and i32 %cond564, -117440513, !dbg !12023
  %386 = load i32, i32* %_v397, align 4, !dbg !12023
  %and566 = and i32 %386, 7, !dbg !12023
  %shl567 = shl i32 %and566, 24, !dbg !12023
  %or568 = or i32 %and565, %shl567, !dbg !12023
  %call569 = call i32 @__fswab32(i32 %or568) #8, !dbg !12023
  br label %cond.end570, !dbg !12023

cond.end570:                                      ; preds = %cond.end563, %cond.end533
  %cond571 = phi i32 [ %or541, %cond.end533 ], [ %call569, %cond.end563 ], !dbg !12023
  %387 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !12023
  %388 = bitcast i8* %387 to i32*, !dbg !12023
  %add.ptr572 = getelementptr i32, i32* %388, i64 60, !dbg !12023
  store i32 %cond571, i32* %add.ptr572, align 4, !dbg !12023
  br label %do.end573, !dbg !12023

do.end573:                                        ; preds = %cond.end570
  br label %do.body574, !dbg !12026

do.body574:                                       ; preds = %do.end573
  call void @llvm.dbg.declare(metadata i32* %_v575, metadata !12027, metadata !DIExpression()), !dbg !12029
  %389 = load i32, i32* %list_size.addr, align 4, !dbg !12029
  store i32 %389, i32* %_v575, align 4, !dbg !12029
  br label %do.body576, !dbg !12029

do.body576:                                       ; preds = %do.body574
  br label %do.end577, !dbg !12030

do.end577:                                        ; preds = %do.body576
  %390 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !12029
  %391 = bitcast i8* %390 to i32*, !dbg !12029
  %add.ptr578 = getelementptr i32, i32* %391, i64 60, !dbg !12029
  %392 = load i32, i32* %add.ptr578, align 4, !dbg !12029
  %393 = call i1 @llvm.is.constant.i32(i32 %392), !dbg !12029
  br i1 %393, label %cond.true579, label %cond.false595, !dbg !12029

cond.true579:                                     ; preds = %do.end577
  %394 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !12029
  %395 = bitcast i8* %394 to i32*, !dbg !12029
  %add.ptr580 = getelementptr i32, i32* %395, i64 60, !dbg !12029
  %396 = load i32, i32* %add.ptr580, align 4, !dbg !12029
  %and581 = and i32 %396, 255, !dbg !12029
  %shl582 = shl i32 %and581, 24, !dbg !12029
  %397 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !12029
  %398 = bitcast i8* %397 to i32*, !dbg !12029
  %add.ptr583 = getelementptr i32, i32* %398, i64 60, !dbg !12029
  %399 = load i32, i32* %add.ptr583, align 4, !dbg !12029
  %and584 = and i32 %399, 65280, !dbg !12029
  %shl585 = shl i32 %and584, 8, !dbg !12029
  %or586 = or i32 %shl582, %shl585, !dbg !12029
  %400 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !12029
  %401 = bitcast i8* %400 to i32*, !dbg !12029
  %add.ptr587 = getelementptr i32, i32* %401, i64 60, !dbg !12029
  %402 = load i32, i32* %add.ptr587, align 4, !dbg !12029
  %and588 = and i32 %402, 16711680, !dbg !12029
  %shr589 = lshr i32 %and588, 8, !dbg !12029
  %or590 = or i32 %or586, %shr589, !dbg !12029
  %403 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !12029
  %404 = bitcast i8* %403 to i32*, !dbg !12029
  %add.ptr591 = getelementptr i32, i32* %404, i64 60, !dbg !12029
  %405 = load i32, i32* %add.ptr591, align 4, !dbg !12029
  %and592 = and i32 %405, -16777216, !dbg !12029
  %shr593 = lshr i32 %and592, 24, !dbg !12029
  %or594 = or i32 %or590, %shr593, !dbg !12029
  br label %cond.end598, !dbg !12029

cond.false595:                                    ; preds = %do.end577
  %406 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !12029
  %407 = bitcast i8* %406 to i32*, !dbg !12029
  %add.ptr596 = getelementptr i32, i32* %407, i64 60, !dbg !12029
  %408 = load i32, i32* %add.ptr596, align 4, !dbg !12029
  %call597 = call i32 @__fswab32(i32 %408) #8, !dbg !12029
  br label %cond.end598, !dbg !12029

cond.end598:                                      ; preds = %cond.false595, %cond.true579
  %cond599 = phi i32 [ %or594, %cond.true579 ], [ %call597, %cond.false595 ], !dbg !12029
  %and600 = and i32 %cond599, -4096, !dbg !12029
  %409 = load i32, i32* %_v575, align 4, !dbg !12029
  %and601 = and i32 %409, 4095, !dbg !12029
  %shl602 = shl i32 %and601, 0, !dbg !12029
  %or603 = or i32 %and600, %shl602, !dbg !12029
  %410 = call i1 @llvm.is.constant.i32(i32 %or603), !dbg !12029
  br i1 %410, label %cond.true604, label %cond.false720, !dbg !12029

cond.true604:                                     ; preds = %cond.end598
  %411 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !12029
  %412 = bitcast i8* %411 to i32*, !dbg !12029
  %add.ptr605 = getelementptr i32, i32* %412, i64 60, !dbg !12029
  %413 = load i32, i32* %add.ptr605, align 4, !dbg !12029
  %414 = call i1 @llvm.is.constant.i32(i32 %413), !dbg !12029
  br i1 %414, label %cond.true606, label %cond.false622, !dbg !12029

cond.true606:                                     ; preds = %cond.true604
  %415 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !12029
  %416 = bitcast i8* %415 to i32*, !dbg !12029
  %add.ptr607 = getelementptr i32, i32* %416, i64 60, !dbg !12029
  %417 = load i32, i32* %add.ptr607, align 4, !dbg !12029
  %and608 = and i32 %417, 255, !dbg !12029
  %shl609 = shl i32 %and608, 24, !dbg !12029
  %418 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !12029
  %419 = bitcast i8* %418 to i32*, !dbg !12029
  %add.ptr610 = getelementptr i32, i32* %419, i64 60, !dbg !12029
  %420 = load i32, i32* %add.ptr610, align 4, !dbg !12029
  %and611 = and i32 %420, 65280, !dbg !12029
  %shl612 = shl i32 %and611, 8, !dbg !12029
  %or613 = or i32 %shl609, %shl612, !dbg !12029
  %421 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !12029
  %422 = bitcast i8* %421 to i32*, !dbg !12029
  %add.ptr614 = getelementptr i32, i32* %422, i64 60, !dbg !12029
  %423 = load i32, i32* %add.ptr614, align 4, !dbg !12029
  %and615 = and i32 %423, 16711680, !dbg !12029
  %shr616 = lshr i32 %and615, 8, !dbg !12029
  %or617 = or i32 %or613, %shr616, !dbg !12029
  %424 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !12029
  %425 = bitcast i8* %424 to i32*, !dbg !12029
  %add.ptr618 = getelementptr i32, i32* %425, i64 60, !dbg !12029
  %426 = load i32, i32* %add.ptr618, align 4, !dbg !12029
  %and619 = and i32 %426, -16777216, !dbg !12029
  %shr620 = lshr i32 %and619, 24, !dbg !12029
  %or621 = or i32 %or617, %shr620, !dbg !12029
  br label %cond.end625, !dbg !12029

cond.false622:                                    ; preds = %cond.true604
  %427 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !12029
  %428 = bitcast i8* %427 to i32*, !dbg !12029
  %add.ptr623 = getelementptr i32, i32* %428, i64 60, !dbg !12029
  %429 = load i32, i32* %add.ptr623, align 4, !dbg !12029
  %call624 = call i32 @__fswab32(i32 %429) #8, !dbg !12029
  br label %cond.end625, !dbg !12029

cond.end625:                                      ; preds = %cond.false622, %cond.true606
  %cond626 = phi i32 [ %or621, %cond.true606 ], [ %call624, %cond.false622 ], !dbg !12029
  %and627 = and i32 %cond626, -4096, !dbg !12029
  %430 = load i32, i32* %_v575, align 4, !dbg !12029
  %and628 = and i32 %430, 4095, !dbg !12029
  %shl629 = shl i32 %and628, 0, !dbg !12029
  %or630 = or i32 %and627, %shl629, !dbg !12029
  %and631 = and i32 %or630, 255, !dbg !12029
  %shl632 = shl i32 %and631, 24, !dbg !12029
  %431 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !12029
  %432 = bitcast i8* %431 to i32*, !dbg !12029
  %add.ptr633 = getelementptr i32, i32* %432, i64 60, !dbg !12029
  %433 = load i32, i32* %add.ptr633, align 4, !dbg !12029
  %434 = call i1 @llvm.is.constant.i32(i32 %433), !dbg !12029
  br i1 %434, label %cond.true634, label %cond.false650, !dbg !12029

cond.true634:                                     ; preds = %cond.end625
  %435 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !12029
  %436 = bitcast i8* %435 to i32*, !dbg !12029
  %add.ptr635 = getelementptr i32, i32* %436, i64 60, !dbg !12029
  %437 = load i32, i32* %add.ptr635, align 4, !dbg !12029
  %and636 = and i32 %437, 255, !dbg !12029
  %shl637 = shl i32 %and636, 24, !dbg !12029
  %438 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !12029
  %439 = bitcast i8* %438 to i32*, !dbg !12029
  %add.ptr638 = getelementptr i32, i32* %439, i64 60, !dbg !12029
  %440 = load i32, i32* %add.ptr638, align 4, !dbg !12029
  %and639 = and i32 %440, 65280, !dbg !12029
  %shl640 = shl i32 %and639, 8, !dbg !12029
  %or641 = or i32 %shl637, %shl640, !dbg !12029
  %441 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !12029
  %442 = bitcast i8* %441 to i32*, !dbg !12029
  %add.ptr642 = getelementptr i32, i32* %442, i64 60, !dbg !12029
  %443 = load i32, i32* %add.ptr642, align 4, !dbg !12029
  %and643 = and i32 %443, 16711680, !dbg !12029
  %shr644 = lshr i32 %and643, 8, !dbg !12029
  %or645 = or i32 %or641, %shr644, !dbg !12029
  %444 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !12029
  %445 = bitcast i8* %444 to i32*, !dbg !12029
  %add.ptr646 = getelementptr i32, i32* %445, i64 60, !dbg !12029
  %446 = load i32, i32* %add.ptr646, align 4, !dbg !12029
  %and647 = and i32 %446, -16777216, !dbg !12029
  %shr648 = lshr i32 %and647, 24, !dbg !12029
  %or649 = or i32 %or645, %shr648, !dbg !12029
  br label %cond.end653, !dbg !12029

cond.false650:                                    ; preds = %cond.end625
  %447 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !12029
  %448 = bitcast i8* %447 to i32*, !dbg !12029
  %add.ptr651 = getelementptr i32, i32* %448, i64 60, !dbg !12029
  %449 = load i32, i32* %add.ptr651, align 4, !dbg !12029
  %call652 = call i32 @__fswab32(i32 %449) #8, !dbg !12029
  br label %cond.end653, !dbg !12029

cond.end653:                                      ; preds = %cond.false650, %cond.true634
  %cond654 = phi i32 [ %or649, %cond.true634 ], [ %call652, %cond.false650 ], !dbg !12029
  %and655 = and i32 %cond654, -4096, !dbg !12029
  %450 = load i32, i32* %_v575, align 4, !dbg !12029
  %and656 = and i32 %450, 4095, !dbg !12029
  %shl657 = shl i32 %and656, 0, !dbg !12029
  %or658 = or i32 %and655, %shl657, !dbg !12029
  %and659 = and i32 %or658, 65280, !dbg !12029
  %shl660 = shl i32 %and659, 8, !dbg !12029
  %or661 = or i32 %shl632, %shl660, !dbg !12029
  %451 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !12029
  %452 = bitcast i8* %451 to i32*, !dbg !12029
  %add.ptr662 = getelementptr i32, i32* %452, i64 60, !dbg !12029
  %453 = load i32, i32* %add.ptr662, align 4, !dbg !12029
  %454 = call i1 @llvm.is.constant.i32(i32 %453), !dbg !12029
  br i1 %454, label %cond.true663, label %cond.false679, !dbg !12029

cond.true663:                                     ; preds = %cond.end653
  %455 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !12029
  %456 = bitcast i8* %455 to i32*, !dbg !12029
  %add.ptr664 = getelementptr i32, i32* %456, i64 60, !dbg !12029
  %457 = load i32, i32* %add.ptr664, align 4, !dbg !12029
  %and665 = and i32 %457, 255, !dbg !12029
  %shl666 = shl i32 %and665, 24, !dbg !12029
  %458 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !12029
  %459 = bitcast i8* %458 to i32*, !dbg !12029
  %add.ptr667 = getelementptr i32, i32* %459, i64 60, !dbg !12029
  %460 = load i32, i32* %add.ptr667, align 4, !dbg !12029
  %and668 = and i32 %460, 65280, !dbg !12029
  %shl669 = shl i32 %and668, 8, !dbg !12029
  %or670 = or i32 %shl666, %shl669, !dbg !12029
  %461 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !12029
  %462 = bitcast i8* %461 to i32*, !dbg !12029
  %add.ptr671 = getelementptr i32, i32* %462, i64 60, !dbg !12029
  %463 = load i32, i32* %add.ptr671, align 4, !dbg !12029
  %and672 = and i32 %463, 16711680, !dbg !12029
  %shr673 = lshr i32 %and672, 8, !dbg !12029
  %or674 = or i32 %or670, %shr673, !dbg !12029
  %464 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !12029
  %465 = bitcast i8* %464 to i32*, !dbg !12029
  %add.ptr675 = getelementptr i32, i32* %465, i64 60, !dbg !12029
  %466 = load i32, i32* %add.ptr675, align 4, !dbg !12029
  %and676 = and i32 %466, -16777216, !dbg !12029
  %shr677 = lshr i32 %and676, 24, !dbg !12029
  %or678 = or i32 %or674, %shr677, !dbg !12029
  br label %cond.end682, !dbg !12029

cond.false679:                                    ; preds = %cond.end653
  %467 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !12029
  %468 = bitcast i8* %467 to i32*, !dbg !12029
  %add.ptr680 = getelementptr i32, i32* %468, i64 60, !dbg !12029
  %469 = load i32, i32* %add.ptr680, align 4, !dbg !12029
  %call681 = call i32 @__fswab32(i32 %469) #8, !dbg !12029
  br label %cond.end682, !dbg !12029

cond.end682:                                      ; preds = %cond.false679, %cond.true663
  %cond683 = phi i32 [ %or678, %cond.true663 ], [ %call681, %cond.false679 ], !dbg !12029
  %and684 = and i32 %cond683, -4096, !dbg !12029
  %470 = load i32, i32* %_v575, align 4, !dbg !12029
  %and685 = and i32 %470, 4095, !dbg !12029
  %shl686 = shl i32 %and685, 0, !dbg !12029
  %or687 = or i32 %and684, %shl686, !dbg !12029
  %and688 = and i32 %or687, 16711680, !dbg !12029
  %shr689 = lshr i32 %and688, 8, !dbg !12029
  %or690 = or i32 %or661, %shr689, !dbg !12029
  %471 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !12029
  %472 = bitcast i8* %471 to i32*, !dbg !12029
  %add.ptr691 = getelementptr i32, i32* %472, i64 60, !dbg !12029
  %473 = load i32, i32* %add.ptr691, align 4, !dbg !12029
  %474 = call i1 @llvm.is.constant.i32(i32 %473), !dbg !12029
  br i1 %474, label %cond.true692, label %cond.false708, !dbg !12029

cond.true692:                                     ; preds = %cond.end682
  %475 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !12029
  %476 = bitcast i8* %475 to i32*, !dbg !12029
  %add.ptr693 = getelementptr i32, i32* %476, i64 60, !dbg !12029
  %477 = load i32, i32* %add.ptr693, align 4, !dbg !12029
  %and694 = and i32 %477, 255, !dbg !12029
  %shl695 = shl i32 %and694, 24, !dbg !12029
  %478 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !12029
  %479 = bitcast i8* %478 to i32*, !dbg !12029
  %add.ptr696 = getelementptr i32, i32* %479, i64 60, !dbg !12029
  %480 = load i32, i32* %add.ptr696, align 4, !dbg !12029
  %and697 = and i32 %480, 65280, !dbg !12029
  %shl698 = shl i32 %and697, 8, !dbg !12029
  %or699 = or i32 %shl695, %shl698, !dbg !12029
  %481 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !12029
  %482 = bitcast i8* %481 to i32*, !dbg !12029
  %add.ptr700 = getelementptr i32, i32* %482, i64 60, !dbg !12029
  %483 = load i32, i32* %add.ptr700, align 4, !dbg !12029
  %and701 = and i32 %483, 16711680, !dbg !12029
  %shr702 = lshr i32 %and701, 8, !dbg !12029
  %or703 = or i32 %or699, %shr702, !dbg !12029
  %484 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !12029
  %485 = bitcast i8* %484 to i32*, !dbg !12029
  %add.ptr704 = getelementptr i32, i32* %485, i64 60, !dbg !12029
  %486 = load i32, i32* %add.ptr704, align 4, !dbg !12029
  %and705 = and i32 %486, -16777216, !dbg !12029
  %shr706 = lshr i32 %and705, 24, !dbg !12029
  %or707 = or i32 %or703, %shr706, !dbg !12029
  br label %cond.end711, !dbg !12029

cond.false708:                                    ; preds = %cond.end682
  %487 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !12029
  %488 = bitcast i8* %487 to i32*, !dbg !12029
  %add.ptr709 = getelementptr i32, i32* %488, i64 60, !dbg !12029
  %489 = load i32, i32* %add.ptr709, align 4, !dbg !12029
  %call710 = call i32 @__fswab32(i32 %489) #8, !dbg !12029
  br label %cond.end711, !dbg !12029

cond.end711:                                      ; preds = %cond.false708, %cond.true692
  %cond712 = phi i32 [ %or707, %cond.true692 ], [ %call710, %cond.false708 ], !dbg !12029
  %and713 = and i32 %cond712, -4096, !dbg !12029
  %490 = load i32, i32* %_v575, align 4, !dbg !12029
  %and714 = and i32 %490, 4095, !dbg !12029
  %shl715 = shl i32 %and714, 0, !dbg !12029
  %or716 = or i32 %and713, %shl715, !dbg !12029
  %and717 = and i32 %or716, -16777216, !dbg !12029
  %shr718 = lshr i32 %and717, 24, !dbg !12029
  %or719 = or i32 %or690, %shr718, !dbg !12029
  br label %cond.end748, !dbg !12029

cond.false720:                                    ; preds = %cond.end598
  %491 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !12029
  %492 = bitcast i8* %491 to i32*, !dbg !12029
  %add.ptr721 = getelementptr i32, i32* %492, i64 60, !dbg !12029
  %493 = load i32, i32* %add.ptr721, align 4, !dbg !12029
  %494 = call i1 @llvm.is.constant.i32(i32 %493), !dbg !12029
  br i1 %494, label %cond.true722, label %cond.false738, !dbg !12029

cond.true722:                                     ; preds = %cond.false720
  %495 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !12029
  %496 = bitcast i8* %495 to i32*, !dbg !12029
  %add.ptr723 = getelementptr i32, i32* %496, i64 60, !dbg !12029
  %497 = load i32, i32* %add.ptr723, align 4, !dbg !12029
  %and724 = and i32 %497, 255, !dbg !12029
  %shl725 = shl i32 %and724, 24, !dbg !12029
  %498 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !12029
  %499 = bitcast i8* %498 to i32*, !dbg !12029
  %add.ptr726 = getelementptr i32, i32* %499, i64 60, !dbg !12029
  %500 = load i32, i32* %add.ptr726, align 4, !dbg !12029
  %and727 = and i32 %500, 65280, !dbg !12029
  %shl728 = shl i32 %and727, 8, !dbg !12029
  %or729 = or i32 %shl725, %shl728, !dbg !12029
  %501 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !12029
  %502 = bitcast i8* %501 to i32*, !dbg !12029
  %add.ptr730 = getelementptr i32, i32* %502, i64 60, !dbg !12029
  %503 = load i32, i32* %add.ptr730, align 4, !dbg !12029
  %and731 = and i32 %503, 16711680, !dbg !12029
  %shr732 = lshr i32 %and731, 8, !dbg !12029
  %or733 = or i32 %or729, %shr732, !dbg !12029
  %504 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !12029
  %505 = bitcast i8* %504 to i32*, !dbg !12029
  %add.ptr734 = getelementptr i32, i32* %505, i64 60, !dbg !12029
  %506 = load i32, i32* %add.ptr734, align 4, !dbg !12029
  %and735 = and i32 %506, -16777216, !dbg !12029
  %shr736 = lshr i32 %and735, 24, !dbg !12029
  %or737 = or i32 %or733, %shr736, !dbg !12029
  br label %cond.end741, !dbg !12029

cond.false738:                                    ; preds = %cond.false720
  %507 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !12029
  %508 = bitcast i8* %507 to i32*, !dbg !12029
  %add.ptr739 = getelementptr i32, i32* %508, i64 60, !dbg !12029
  %509 = load i32, i32* %add.ptr739, align 4, !dbg !12029
  %call740 = call i32 @__fswab32(i32 %509) #8, !dbg !12029
  br label %cond.end741, !dbg !12029

cond.end741:                                      ; preds = %cond.false738, %cond.true722
  %cond742 = phi i32 [ %or737, %cond.true722 ], [ %call740, %cond.false738 ], !dbg !12029
  %and743 = and i32 %cond742, -4096, !dbg !12029
  %510 = load i32, i32* %_v575, align 4, !dbg !12029
  %and744 = and i32 %510, 4095, !dbg !12029
  %shl745 = shl i32 %and744, 0, !dbg !12029
  %or746 = or i32 %and743, %shl745, !dbg !12029
  %call747 = call i32 @__fswab32(i32 %or746) #8, !dbg !12029
  br label %cond.end748, !dbg !12029

cond.end748:                                      ; preds = %cond.end741, %cond.end711
  %cond749 = phi i32 [ %or719, %cond.end711 ], [ %call747, %cond.end741 ], !dbg !12029
  %511 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !12029
  %512 = bitcast i8* %511 to i32*, !dbg !12029
  %add.ptr750 = getelementptr i32, i32* %512, i64 60, !dbg !12029
  store i32 %cond749, i32* %add.ptr750, align 4, !dbg !12029
  br label %do.end751, !dbg !12029

do.end751:                                        ; preds = %cond.end748
  store i32 0, i32* %i, align 4, !dbg !12032
  br label %for.cond, !dbg !12034

for.cond:                                         ; preds = %for.inc, %do.end751
  %513 = load i32, i32* %i, align 4, !dbg !12035
  %514 = load i32, i32* %list_size.addr, align 4, !dbg !12037
  %cmp752 = icmp slt i32 %513, %514, !dbg !12038
  br i1 %cmp752, label %for.body, label %for.end, !dbg !12039

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i8** %vlan_addr, metadata !12040, metadata !DIExpression()), !dbg !12042
  %515 = load i8*, i8** %nic_vport_ctx, align 8, !dbg !12043
  %516 = load i32, i32* %i, align 4, !dbg !12043
  %conv754 = sext i32 %516 to i64, !dbg !12043
  %517 = mul i64 %conv754, 64, !dbg !12043
  %518 = add i64 2048, %517, !dbg !12043
  %div = udiv i64 %518, 8, !dbg !12043
  %add.ptr755 = getelementptr i8, i8* %515, i64 %div, !dbg !12043
  store i8* %add.ptr755, i8** %vlan_addr, align 8, !dbg !12042
  br label %do.body756, !dbg !12044

do.body756:                                       ; preds = %for.body
  call void @llvm.dbg.declare(metadata i32* %_v757, metadata !12045, metadata !DIExpression()), !dbg !12047
  %519 = load i16*, i16** %vlans.addr, align 8, !dbg !12047
  %520 = load i32, i32* %i, align 4, !dbg !12047
  %idxprom = sext i32 %520 to i64, !dbg !12047
  %arrayidx758 = getelementptr i16, i16* %519, i64 %idxprom, !dbg !12047
  %521 = load i16, i16* %arrayidx758, align 2, !dbg !12047
  %conv759 = zext i16 %521 to i32, !dbg !12047
  store i32 %conv759, i32* %_v757, align 4, !dbg !12047
  br label %do.body760, !dbg !12047

do.body760:                                       ; preds = %do.body756
  br label %do.end761, !dbg !12048

do.end761:                                        ; preds = %do.body760
  %522 = load i8*, i8** %vlan_addr, align 8, !dbg !12047
  %523 = bitcast i8* %522 to i32*, !dbg !12047
  %add.ptr762 = getelementptr i32, i32* %523, i64 0, !dbg !12047
  %524 = load i32, i32* %add.ptr762, align 4, !dbg !12047
  %525 = call i1 @llvm.is.constant.i32(i32 %524), !dbg !12047
  br i1 %525, label %cond.true763, label %cond.false779, !dbg !12047

cond.true763:                                     ; preds = %do.end761
  %526 = load i8*, i8** %vlan_addr, align 8, !dbg !12047
  %527 = bitcast i8* %526 to i32*, !dbg !12047
  %add.ptr764 = getelementptr i32, i32* %527, i64 0, !dbg !12047
  %528 = load i32, i32* %add.ptr764, align 4, !dbg !12047
  %and765 = and i32 %528, 255, !dbg !12047
  %shl766 = shl i32 %and765, 24, !dbg !12047
  %529 = load i8*, i8** %vlan_addr, align 8, !dbg !12047
  %530 = bitcast i8* %529 to i32*, !dbg !12047
  %add.ptr767 = getelementptr i32, i32* %530, i64 0, !dbg !12047
  %531 = load i32, i32* %add.ptr767, align 4, !dbg !12047
  %and768 = and i32 %531, 65280, !dbg !12047
  %shl769 = shl i32 %and768, 8, !dbg !12047
  %or770 = or i32 %shl766, %shl769, !dbg !12047
  %532 = load i8*, i8** %vlan_addr, align 8, !dbg !12047
  %533 = bitcast i8* %532 to i32*, !dbg !12047
  %add.ptr771 = getelementptr i32, i32* %533, i64 0, !dbg !12047
  %534 = load i32, i32* %add.ptr771, align 4, !dbg !12047
  %and772 = and i32 %534, 16711680, !dbg !12047
  %shr773 = lshr i32 %and772, 8, !dbg !12047
  %or774 = or i32 %or770, %shr773, !dbg !12047
  %535 = load i8*, i8** %vlan_addr, align 8, !dbg !12047
  %536 = bitcast i8* %535 to i32*, !dbg !12047
  %add.ptr775 = getelementptr i32, i32* %536, i64 0, !dbg !12047
  %537 = load i32, i32* %add.ptr775, align 4, !dbg !12047
  %and776 = and i32 %537, -16777216, !dbg !12047
  %shr777 = lshr i32 %and776, 24, !dbg !12047
  %or778 = or i32 %or774, %shr777, !dbg !12047
  br label %cond.end782, !dbg !12047

cond.false779:                                    ; preds = %do.end761
  %538 = load i8*, i8** %vlan_addr, align 8, !dbg !12047
  %539 = bitcast i8* %538 to i32*, !dbg !12047
  %add.ptr780 = getelementptr i32, i32* %539, i64 0, !dbg !12047
  %540 = load i32, i32* %add.ptr780, align 4, !dbg !12047
  %call781 = call i32 @__fswab32(i32 %540) #8, !dbg !12047
  br label %cond.end782, !dbg !12047

cond.end782:                                      ; preds = %cond.false779, %cond.true763
  %cond783 = phi i32 [ %or778, %cond.true763 ], [ %call781, %cond.false779 ], !dbg !12047
  %and784 = and i32 %cond783, -4096, !dbg !12047
  %541 = load i32, i32* %_v757, align 4, !dbg !12047
  %and785 = and i32 %541, 4095, !dbg !12047
  %shl786 = shl i32 %and785, 0, !dbg !12047
  %or787 = or i32 %and784, %shl786, !dbg !12047
  %542 = call i1 @llvm.is.constant.i32(i32 %or787), !dbg !12047
  br i1 %542, label %cond.true788, label %cond.false904, !dbg !12047

cond.true788:                                     ; preds = %cond.end782
  %543 = load i8*, i8** %vlan_addr, align 8, !dbg !12047
  %544 = bitcast i8* %543 to i32*, !dbg !12047
  %add.ptr789 = getelementptr i32, i32* %544, i64 0, !dbg !12047
  %545 = load i32, i32* %add.ptr789, align 4, !dbg !12047
  %546 = call i1 @llvm.is.constant.i32(i32 %545), !dbg !12047
  br i1 %546, label %cond.true790, label %cond.false806, !dbg !12047

cond.true790:                                     ; preds = %cond.true788
  %547 = load i8*, i8** %vlan_addr, align 8, !dbg !12047
  %548 = bitcast i8* %547 to i32*, !dbg !12047
  %add.ptr791 = getelementptr i32, i32* %548, i64 0, !dbg !12047
  %549 = load i32, i32* %add.ptr791, align 4, !dbg !12047
  %and792 = and i32 %549, 255, !dbg !12047
  %shl793 = shl i32 %and792, 24, !dbg !12047
  %550 = load i8*, i8** %vlan_addr, align 8, !dbg !12047
  %551 = bitcast i8* %550 to i32*, !dbg !12047
  %add.ptr794 = getelementptr i32, i32* %551, i64 0, !dbg !12047
  %552 = load i32, i32* %add.ptr794, align 4, !dbg !12047
  %and795 = and i32 %552, 65280, !dbg !12047
  %shl796 = shl i32 %and795, 8, !dbg !12047
  %or797 = or i32 %shl793, %shl796, !dbg !12047
  %553 = load i8*, i8** %vlan_addr, align 8, !dbg !12047
  %554 = bitcast i8* %553 to i32*, !dbg !12047
  %add.ptr798 = getelementptr i32, i32* %554, i64 0, !dbg !12047
  %555 = load i32, i32* %add.ptr798, align 4, !dbg !12047
  %and799 = and i32 %555, 16711680, !dbg !12047
  %shr800 = lshr i32 %and799, 8, !dbg !12047
  %or801 = or i32 %or797, %shr800, !dbg !12047
  %556 = load i8*, i8** %vlan_addr, align 8, !dbg !12047
  %557 = bitcast i8* %556 to i32*, !dbg !12047
  %add.ptr802 = getelementptr i32, i32* %557, i64 0, !dbg !12047
  %558 = load i32, i32* %add.ptr802, align 4, !dbg !12047
  %and803 = and i32 %558, -16777216, !dbg !12047
  %shr804 = lshr i32 %and803, 24, !dbg !12047
  %or805 = or i32 %or801, %shr804, !dbg !12047
  br label %cond.end809, !dbg !12047

cond.false806:                                    ; preds = %cond.true788
  %559 = load i8*, i8** %vlan_addr, align 8, !dbg !12047
  %560 = bitcast i8* %559 to i32*, !dbg !12047
  %add.ptr807 = getelementptr i32, i32* %560, i64 0, !dbg !12047
  %561 = load i32, i32* %add.ptr807, align 4, !dbg !12047
  %call808 = call i32 @__fswab32(i32 %561) #8, !dbg !12047
  br label %cond.end809, !dbg !12047

cond.end809:                                      ; preds = %cond.false806, %cond.true790
  %cond810 = phi i32 [ %or805, %cond.true790 ], [ %call808, %cond.false806 ], !dbg !12047
  %and811 = and i32 %cond810, -4096, !dbg !12047
  %562 = load i32, i32* %_v757, align 4, !dbg !12047
  %and812 = and i32 %562, 4095, !dbg !12047
  %shl813 = shl i32 %and812, 0, !dbg !12047
  %or814 = or i32 %and811, %shl813, !dbg !12047
  %and815 = and i32 %or814, 255, !dbg !12047
  %shl816 = shl i32 %and815, 24, !dbg !12047
  %563 = load i8*, i8** %vlan_addr, align 8, !dbg !12047
  %564 = bitcast i8* %563 to i32*, !dbg !12047
  %add.ptr817 = getelementptr i32, i32* %564, i64 0, !dbg !12047
  %565 = load i32, i32* %add.ptr817, align 4, !dbg !12047
  %566 = call i1 @llvm.is.constant.i32(i32 %565), !dbg !12047
  br i1 %566, label %cond.true818, label %cond.false834, !dbg !12047

cond.true818:                                     ; preds = %cond.end809
  %567 = load i8*, i8** %vlan_addr, align 8, !dbg !12047
  %568 = bitcast i8* %567 to i32*, !dbg !12047
  %add.ptr819 = getelementptr i32, i32* %568, i64 0, !dbg !12047
  %569 = load i32, i32* %add.ptr819, align 4, !dbg !12047
  %and820 = and i32 %569, 255, !dbg !12047
  %shl821 = shl i32 %and820, 24, !dbg !12047
  %570 = load i8*, i8** %vlan_addr, align 8, !dbg !12047
  %571 = bitcast i8* %570 to i32*, !dbg !12047
  %add.ptr822 = getelementptr i32, i32* %571, i64 0, !dbg !12047
  %572 = load i32, i32* %add.ptr822, align 4, !dbg !12047
  %and823 = and i32 %572, 65280, !dbg !12047
  %shl824 = shl i32 %and823, 8, !dbg !12047
  %or825 = or i32 %shl821, %shl824, !dbg !12047
  %573 = load i8*, i8** %vlan_addr, align 8, !dbg !12047
  %574 = bitcast i8* %573 to i32*, !dbg !12047
  %add.ptr826 = getelementptr i32, i32* %574, i64 0, !dbg !12047
  %575 = load i32, i32* %add.ptr826, align 4, !dbg !12047
  %and827 = and i32 %575, 16711680, !dbg !12047
  %shr828 = lshr i32 %and827, 8, !dbg !12047
  %or829 = or i32 %or825, %shr828, !dbg !12047
  %576 = load i8*, i8** %vlan_addr, align 8, !dbg !12047
  %577 = bitcast i8* %576 to i32*, !dbg !12047
  %add.ptr830 = getelementptr i32, i32* %577, i64 0, !dbg !12047
  %578 = load i32, i32* %add.ptr830, align 4, !dbg !12047
  %and831 = and i32 %578, -16777216, !dbg !12047
  %shr832 = lshr i32 %and831, 24, !dbg !12047
  %or833 = or i32 %or829, %shr832, !dbg !12047
  br label %cond.end837, !dbg !12047

cond.false834:                                    ; preds = %cond.end809
  %579 = load i8*, i8** %vlan_addr, align 8, !dbg !12047
  %580 = bitcast i8* %579 to i32*, !dbg !12047
  %add.ptr835 = getelementptr i32, i32* %580, i64 0, !dbg !12047
  %581 = load i32, i32* %add.ptr835, align 4, !dbg !12047
  %call836 = call i32 @__fswab32(i32 %581) #8, !dbg !12047
  br label %cond.end837, !dbg !12047

cond.end837:                                      ; preds = %cond.false834, %cond.true818
  %cond838 = phi i32 [ %or833, %cond.true818 ], [ %call836, %cond.false834 ], !dbg !12047
  %and839 = and i32 %cond838, -4096, !dbg !12047
  %582 = load i32, i32* %_v757, align 4, !dbg !12047
  %and840 = and i32 %582, 4095, !dbg !12047
  %shl841 = shl i32 %and840, 0, !dbg !12047
  %or842 = or i32 %and839, %shl841, !dbg !12047
  %and843 = and i32 %or842, 65280, !dbg !12047
  %shl844 = shl i32 %and843, 8, !dbg !12047
  %or845 = or i32 %shl816, %shl844, !dbg !12047
  %583 = load i8*, i8** %vlan_addr, align 8, !dbg !12047
  %584 = bitcast i8* %583 to i32*, !dbg !12047
  %add.ptr846 = getelementptr i32, i32* %584, i64 0, !dbg !12047
  %585 = load i32, i32* %add.ptr846, align 4, !dbg !12047
  %586 = call i1 @llvm.is.constant.i32(i32 %585), !dbg !12047
  br i1 %586, label %cond.true847, label %cond.false863, !dbg !12047

cond.true847:                                     ; preds = %cond.end837
  %587 = load i8*, i8** %vlan_addr, align 8, !dbg !12047
  %588 = bitcast i8* %587 to i32*, !dbg !12047
  %add.ptr848 = getelementptr i32, i32* %588, i64 0, !dbg !12047
  %589 = load i32, i32* %add.ptr848, align 4, !dbg !12047
  %and849 = and i32 %589, 255, !dbg !12047
  %shl850 = shl i32 %and849, 24, !dbg !12047
  %590 = load i8*, i8** %vlan_addr, align 8, !dbg !12047
  %591 = bitcast i8* %590 to i32*, !dbg !12047
  %add.ptr851 = getelementptr i32, i32* %591, i64 0, !dbg !12047
  %592 = load i32, i32* %add.ptr851, align 4, !dbg !12047
  %and852 = and i32 %592, 65280, !dbg !12047
  %shl853 = shl i32 %and852, 8, !dbg !12047
  %or854 = or i32 %shl850, %shl853, !dbg !12047
  %593 = load i8*, i8** %vlan_addr, align 8, !dbg !12047
  %594 = bitcast i8* %593 to i32*, !dbg !12047
  %add.ptr855 = getelementptr i32, i32* %594, i64 0, !dbg !12047
  %595 = load i32, i32* %add.ptr855, align 4, !dbg !12047
  %and856 = and i32 %595, 16711680, !dbg !12047
  %shr857 = lshr i32 %and856, 8, !dbg !12047
  %or858 = or i32 %or854, %shr857, !dbg !12047
  %596 = load i8*, i8** %vlan_addr, align 8, !dbg !12047
  %597 = bitcast i8* %596 to i32*, !dbg !12047
  %add.ptr859 = getelementptr i32, i32* %597, i64 0, !dbg !12047
  %598 = load i32, i32* %add.ptr859, align 4, !dbg !12047
  %and860 = and i32 %598, -16777216, !dbg !12047
  %shr861 = lshr i32 %and860, 24, !dbg !12047
  %or862 = or i32 %or858, %shr861, !dbg !12047
  br label %cond.end866, !dbg !12047

cond.false863:                                    ; preds = %cond.end837
  %599 = load i8*, i8** %vlan_addr, align 8, !dbg !12047
  %600 = bitcast i8* %599 to i32*, !dbg !12047
  %add.ptr864 = getelementptr i32, i32* %600, i64 0, !dbg !12047
  %601 = load i32, i32* %add.ptr864, align 4, !dbg !12047
  %call865 = call i32 @__fswab32(i32 %601) #8, !dbg !12047
  br label %cond.end866, !dbg !12047

cond.end866:                                      ; preds = %cond.false863, %cond.true847
  %cond867 = phi i32 [ %or862, %cond.true847 ], [ %call865, %cond.false863 ], !dbg !12047
  %and868 = and i32 %cond867, -4096, !dbg !12047
  %602 = load i32, i32* %_v757, align 4, !dbg !12047
  %and869 = and i32 %602, 4095, !dbg !12047
  %shl870 = shl i32 %and869, 0, !dbg !12047
  %or871 = or i32 %and868, %shl870, !dbg !12047
  %and872 = and i32 %or871, 16711680, !dbg !12047
  %shr873 = lshr i32 %and872, 8, !dbg !12047
  %or874 = or i32 %or845, %shr873, !dbg !12047
  %603 = load i8*, i8** %vlan_addr, align 8, !dbg !12047
  %604 = bitcast i8* %603 to i32*, !dbg !12047
  %add.ptr875 = getelementptr i32, i32* %604, i64 0, !dbg !12047
  %605 = load i32, i32* %add.ptr875, align 4, !dbg !12047
  %606 = call i1 @llvm.is.constant.i32(i32 %605), !dbg !12047
  br i1 %606, label %cond.true876, label %cond.false892, !dbg !12047

cond.true876:                                     ; preds = %cond.end866
  %607 = load i8*, i8** %vlan_addr, align 8, !dbg !12047
  %608 = bitcast i8* %607 to i32*, !dbg !12047
  %add.ptr877 = getelementptr i32, i32* %608, i64 0, !dbg !12047
  %609 = load i32, i32* %add.ptr877, align 4, !dbg !12047
  %and878 = and i32 %609, 255, !dbg !12047
  %shl879 = shl i32 %and878, 24, !dbg !12047
  %610 = load i8*, i8** %vlan_addr, align 8, !dbg !12047
  %611 = bitcast i8* %610 to i32*, !dbg !12047
  %add.ptr880 = getelementptr i32, i32* %611, i64 0, !dbg !12047
  %612 = load i32, i32* %add.ptr880, align 4, !dbg !12047
  %and881 = and i32 %612, 65280, !dbg !12047
  %shl882 = shl i32 %and881, 8, !dbg !12047
  %or883 = or i32 %shl879, %shl882, !dbg !12047
  %613 = load i8*, i8** %vlan_addr, align 8, !dbg !12047
  %614 = bitcast i8* %613 to i32*, !dbg !12047
  %add.ptr884 = getelementptr i32, i32* %614, i64 0, !dbg !12047
  %615 = load i32, i32* %add.ptr884, align 4, !dbg !12047
  %and885 = and i32 %615, 16711680, !dbg !12047
  %shr886 = lshr i32 %and885, 8, !dbg !12047
  %or887 = or i32 %or883, %shr886, !dbg !12047
  %616 = load i8*, i8** %vlan_addr, align 8, !dbg !12047
  %617 = bitcast i8* %616 to i32*, !dbg !12047
  %add.ptr888 = getelementptr i32, i32* %617, i64 0, !dbg !12047
  %618 = load i32, i32* %add.ptr888, align 4, !dbg !12047
  %and889 = and i32 %618, -16777216, !dbg !12047
  %shr890 = lshr i32 %and889, 24, !dbg !12047
  %or891 = or i32 %or887, %shr890, !dbg !12047
  br label %cond.end895, !dbg !12047

cond.false892:                                    ; preds = %cond.end866
  %619 = load i8*, i8** %vlan_addr, align 8, !dbg !12047
  %620 = bitcast i8* %619 to i32*, !dbg !12047
  %add.ptr893 = getelementptr i32, i32* %620, i64 0, !dbg !12047
  %621 = load i32, i32* %add.ptr893, align 4, !dbg !12047
  %call894 = call i32 @__fswab32(i32 %621) #8, !dbg !12047
  br label %cond.end895, !dbg !12047

cond.end895:                                      ; preds = %cond.false892, %cond.true876
  %cond896 = phi i32 [ %or891, %cond.true876 ], [ %call894, %cond.false892 ], !dbg !12047
  %and897 = and i32 %cond896, -4096, !dbg !12047
  %622 = load i32, i32* %_v757, align 4, !dbg !12047
  %and898 = and i32 %622, 4095, !dbg !12047
  %shl899 = shl i32 %and898, 0, !dbg !12047
  %or900 = or i32 %and897, %shl899, !dbg !12047
  %and901 = and i32 %or900, -16777216, !dbg !12047
  %shr902 = lshr i32 %and901, 24, !dbg !12047
  %or903 = or i32 %or874, %shr902, !dbg !12047
  br label %cond.end932, !dbg !12047

cond.false904:                                    ; preds = %cond.end782
  %623 = load i8*, i8** %vlan_addr, align 8, !dbg !12047
  %624 = bitcast i8* %623 to i32*, !dbg !12047
  %add.ptr905 = getelementptr i32, i32* %624, i64 0, !dbg !12047
  %625 = load i32, i32* %add.ptr905, align 4, !dbg !12047
  %626 = call i1 @llvm.is.constant.i32(i32 %625), !dbg !12047
  br i1 %626, label %cond.true906, label %cond.false922, !dbg !12047

cond.true906:                                     ; preds = %cond.false904
  %627 = load i8*, i8** %vlan_addr, align 8, !dbg !12047
  %628 = bitcast i8* %627 to i32*, !dbg !12047
  %add.ptr907 = getelementptr i32, i32* %628, i64 0, !dbg !12047
  %629 = load i32, i32* %add.ptr907, align 4, !dbg !12047
  %and908 = and i32 %629, 255, !dbg !12047
  %shl909 = shl i32 %and908, 24, !dbg !12047
  %630 = load i8*, i8** %vlan_addr, align 8, !dbg !12047
  %631 = bitcast i8* %630 to i32*, !dbg !12047
  %add.ptr910 = getelementptr i32, i32* %631, i64 0, !dbg !12047
  %632 = load i32, i32* %add.ptr910, align 4, !dbg !12047
  %and911 = and i32 %632, 65280, !dbg !12047
  %shl912 = shl i32 %and911, 8, !dbg !12047
  %or913 = or i32 %shl909, %shl912, !dbg !12047
  %633 = load i8*, i8** %vlan_addr, align 8, !dbg !12047
  %634 = bitcast i8* %633 to i32*, !dbg !12047
  %add.ptr914 = getelementptr i32, i32* %634, i64 0, !dbg !12047
  %635 = load i32, i32* %add.ptr914, align 4, !dbg !12047
  %and915 = and i32 %635, 16711680, !dbg !12047
  %shr916 = lshr i32 %and915, 8, !dbg !12047
  %or917 = or i32 %or913, %shr916, !dbg !12047
  %636 = load i8*, i8** %vlan_addr, align 8, !dbg !12047
  %637 = bitcast i8* %636 to i32*, !dbg !12047
  %add.ptr918 = getelementptr i32, i32* %637, i64 0, !dbg !12047
  %638 = load i32, i32* %add.ptr918, align 4, !dbg !12047
  %and919 = and i32 %638, -16777216, !dbg !12047
  %shr920 = lshr i32 %and919, 24, !dbg !12047
  %or921 = or i32 %or917, %shr920, !dbg !12047
  br label %cond.end925, !dbg !12047

cond.false922:                                    ; preds = %cond.false904
  %639 = load i8*, i8** %vlan_addr, align 8, !dbg !12047
  %640 = bitcast i8* %639 to i32*, !dbg !12047
  %add.ptr923 = getelementptr i32, i32* %640, i64 0, !dbg !12047
  %641 = load i32, i32* %add.ptr923, align 4, !dbg !12047
  %call924 = call i32 @__fswab32(i32 %641) #8, !dbg !12047
  br label %cond.end925, !dbg !12047

cond.end925:                                      ; preds = %cond.false922, %cond.true906
  %cond926 = phi i32 [ %or921, %cond.true906 ], [ %call924, %cond.false922 ], !dbg !12047
  %and927 = and i32 %cond926, -4096, !dbg !12047
  %642 = load i32, i32* %_v757, align 4, !dbg !12047
  %and928 = and i32 %642, 4095, !dbg !12047
  %shl929 = shl i32 %and928, 0, !dbg !12047
  %or930 = or i32 %and927, %shl929, !dbg !12047
  %call931 = call i32 @__fswab32(i32 %or930) #8, !dbg !12047
  br label %cond.end932, !dbg !12047

cond.end932:                                      ; preds = %cond.end925, %cond.end895
  %cond933 = phi i32 [ %or903, %cond.end895 ], [ %call931, %cond.end925 ], !dbg !12047
  %643 = load i8*, i8** %vlan_addr, align 8, !dbg !12047
  %644 = bitcast i8* %643 to i32*, !dbg !12047
  %add.ptr934 = getelementptr i32, i32* %644, i64 0, !dbg !12047
  store i32 %cond933, i32* %add.ptr934, align 4, !dbg !12047
  br label %do.end935, !dbg !12047

do.end935:                                        ; preds = %cond.end932
  br label %for.inc, !dbg !12050

for.inc:                                          ; preds = %do.end935
  %645 = load i32, i32* %i, align 4, !dbg !12051
  %inc = add i32 %645, 1, !dbg !12051
  store i32 %inc, i32* %i, align 4, !dbg !12051
  br label %for.cond, !dbg !12052, !llvm.loop !12053

for.end:                                          ; preds = %for.cond
  %646 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !12055
  %647 = load i8*, i8** %in, align 8, !dbg !12056
  %648 = load i32, i32* %in_sz, align 4, !dbg !12057
  %arraydecay936 = getelementptr inbounds [4 x i32], [4 x i32]* %out, i64 0, i64 0, !dbg !12058
  %649 = bitcast i32* %arraydecay936 to i8*, !dbg !12058
  %call937 = call i32 @mlx5_cmd_exec(%struct.mlx5_core_dev* %646, i8* %647, i32 %648, i8* %649, i32 16) #9, !dbg !12059
  store i32 %call937, i32* %err, align 4, !dbg !12060
  %650 = load i8*, i8** %in, align 8, !dbg !12061
  call void @kfree(i8* %650) #9, !dbg !12062
  %651 = load i32, i32* %err, align 4, !dbg !12063
  store i32 %651, i32* %retval, align 4, !dbg !12064
  br label %return, !dbg !12064

return:                                           ; preds = %for.end, %if.then40, %if.then
  %652 = load i32, i32* %retval, align 4, !dbg !12065
  ret i32 %652, !dbg !12065
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @mlx5_query_nic_vport_system_image_guid(%struct.mlx5_core_dev* %mdev, i64* %system_image_guid) #0 !dbg !12066 {
entry:
  %retval = alloca i32, align 4
  %mdev.addr = alloca %struct.mlx5_core_dev*, align 8
  %system_image_guid.addr = alloca i64*, align 8
  %out = alloca i32*, align 8
  %outlen = alloca i32, align 4
  store %struct.mlx5_core_dev* %mdev, %struct.mlx5_core_dev** %mdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_core_dev** %mdev.addr, metadata !12069, metadata !DIExpression()), !dbg !12070
  store i64* %system_image_guid, i64** %system_image_guid.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %system_image_guid.addr, metadata !12071, metadata !DIExpression()), !dbg !12072
  call void @llvm.dbg.declare(metadata i32** %out, metadata !12073, metadata !DIExpression()), !dbg !12074
  call void @llvm.dbg.declare(metadata i32* %outlen, metadata !12075, metadata !DIExpression()), !dbg !12076
  store i32 272, i32* %outlen, align 4, !dbg !12076
  %0 = load i32, i32* %outlen, align 4, !dbg !12077
  %conv = sext i32 %0 to i64, !dbg !12077
  %call = call i8* @kvzalloc(i64 %conv, i32 3264) #9, !dbg !12078
  %1 = bitcast i8* %call to i32*, !dbg !12078
  store i32* %1, i32** %out, align 8, !dbg !12079
  %2 = load i32*, i32** %out, align 8, !dbg !12080
  %tobool = icmp ne i32* %2, null, !dbg !12080
  br i1 %tobool, label %if.end, label %if.then, !dbg !12082

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !12083
  br label %return, !dbg !12083

if.end:                                           ; preds = %entry
  %3 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %mdev.addr, align 8, !dbg !12084
  %4 = load i32*, i32** %out, align 8, !dbg !12085
  %call1 = call i32 @mlx5_query_nic_vport_context(%struct.mlx5_core_dev* %3, i16 zeroext 0, i32* %4) #9, !dbg !12086
  %5 = load i32*, i32** %out, align 8, !dbg !12087
  %6 = bitcast i32* %5 to i64*, !dbg !12087
  %add.ptr = getelementptr i64, i64* %6, i64 7, !dbg !12087
  %7 = load i64, i64* %add.ptr, align 8, !dbg !12087
  %8 = call i1 @llvm.is.constant.i64(i64 %7), !dbg !12087
  br i1 %8, label %cond.true, label %cond.false, !dbg !12087

cond.true:                                        ; preds = %if.end
  %9 = load i32*, i32** %out, align 8, !dbg !12087
  %10 = bitcast i32* %9 to i64*, !dbg !12087
  %add.ptr2 = getelementptr i64, i64* %10, i64 7, !dbg !12087
  %11 = load i64, i64* %add.ptr2, align 8, !dbg !12087
  %and = and i64 %11, 255, !dbg !12087
  %shl = shl i64 %and, 56, !dbg !12087
  %12 = load i32*, i32** %out, align 8, !dbg !12087
  %13 = bitcast i32* %12 to i64*, !dbg !12087
  %add.ptr3 = getelementptr i64, i64* %13, i64 7, !dbg !12087
  %14 = load i64, i64* %add.ptr3, align 8, !dbg !12087
  %and4 = and i64 %14, 65280, !dbg !12087
  %shl5 = shl i64 %and4, 40, !dbg !12087
  %or = or i64 %shl, %shl5, !dbg !12087
  %15 = load i32*, i32** %out, align 8, !dbg !12087
  %16 = bitcast i32* %15 to i64*, !dbg !12087
  %add.ptr6 = getelementptr i64, i64* %16, i64 7, !dbg !12087
  %17 = load i64, i64* %add.ptr6, align 8, !dbg !12087
  %and7 = and i64 %17, 16711680, !dbg !12087
  %shl8 = shl i64 %and7, 24, !dbg !12087
  %or9 = or i64 %or, %shl8, !dbg !12087
  %18 = load i32*, i32** %out, align 8, !dbg !12087
  %19 = bitcast i32* %18 to i64*, !dbg !12087
  %add.ptr10 = getelementptr i64, i64* %19, i64 7, !dbg !12087
  %20 = load i64, i64* %add.ptr10, align 8, !dbg !12087
  %and11 = and i64 %20, 4278190080, !dbg !12087
  %shl12 = shl i64 %and11, 8, !dbg !12087
  %or13 = or i64 %or9, %shl12, !dbg !12087
  %21 = load i32*, i32** %out, align 8, !dbg !12087
  %22 = bitcast i32* %21 to i64*, !dbg !12087
  %add.ptr14 = getelementptr i64, i64* %22, i64 7, !dbg !12087
  %23 = load i64, i64* %add.ptr14, align 8, !dbg !12087
  %and15 = and i64 %23, 1095216660480, !dbg !12087
  %shr = lshr i64 %and15, 8, !dbg !12087
  %or16 = or i64 %or13, %shr, !dbg !12087
  %24 = load i32*, i32** %out, align 8, !dbg !12087
  %25 = bitcast i32* %24 to i64*, !dbg !12087
  %add.ptr17 = getelementptr i64, i64* %25, i64 7, !dbg !12087
  %26 = load i64, i64* %add.ptr17, align 8, !dbg !12087
  %and18 = and i64 %26, 280375465082880, !dbg !12087
  %shr19 = lshr i64 %and18, 24, !dbg !12087
  %or20 = or i64 %or16, %shr19, !dbg !12087
  %27 = load i32*, i32** %out, align 8, !dbg !12087
  %28 = bitcast i32* %27 to i64*, !dbg !12087
  %add.ptr21 = getelementptr i64, i64* %28, i64 7, !dbg !12087
  %29 = load i64, i64* %add.ptr21, align 8, !dbg !12087
  %and22 = and i64 %29, 71776119061217280, !dbg !12087
  %shr23 = lshr i64 %and22, 40, !dbg !12087
  %or24 = or i64 %or20, %shr23, !dbg !12087
  %30 = load i32*, i32** %out, align 8, !dbg !12087
  %31 = bitcast i32* %30 to i64*, !dbg !12087
  %add.ptr25 = getelementptr i64, i64* %31, i64 7, !dbg !12087
  %32 = load i64, i64* %add.ptr25, align 8, !dbg !12087
  %and26 = and i64 %32, -72057594037927936, !dbg !12087
  %shr27 = lshr i64 %and26, 56, !dbg !12087
  %or28 = or i64 %or24, %shr27, !dbg !12087
  br label %cond.end, !dbg !12087

cond.false:                                       ; preds = %if.end
  %33 = load i32*, i32** %out, align 8, !dbg !12087
  %34 = bitcast i32* %33 to i64*, !dbg !12087
  %add.ptr29 = getelementptr i64, i64* %34, i64 7, !dbg !12087
  %35 = load i64, i64* %add.ptr29, align 8, !dbg !12087
  %call30 = call i64 @__fswab64(i64 %35) #8, !dbg !12087
  br label %cond.end, !dbg !12087

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %or28, %cond.true ], [ %call30, %cond.false ], !dbg !12087
  %36 = load i64*, i64** %system_image_guid.addr, align 8, !dbg !12088
  store i64 %cond, i64* %36, align 8, !dbg !12089
  %37 = load i32*, i32** %out, align 8, !dbg !12090
  %38 = bitcast i32* %37 to i8*, !dbg !12090
  call void @kvfree(i8* %38) #9, !dbg !12091
  store i32 0, i32* %retval, align 4, !dbg !12092
  br label %return, !dbg !12092

return:                                           ; preds = %cond.end, %if.then
  %39 = load i32, i32* %retval, align 4, !dbg !12093
  ret i32 %39, !dbg !12093
}

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i64(i64) #3

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i64 @__fswab64(i64 %val) #4 !dbg !12094 {
entry:
  %val.addr = alloca i64, align 8
  store i64 %val, i64* %val.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %val.addr, metadata !12097, metadata !DIExpression()), !dbg !12098
  %0 = load i64, i64* %val.addr, align 8, !dbg !12099
  %call = call i64 @__arch_swab64(i64 %0) #8, !dbg !12100
  ret i64 %call, !dbg !12101
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @mlx5_query_nic_vport_node_guid(%struct.mlx5_core_dev* %mdev, i64* %node_guid) #0 !dbg !12102 {
entry:
  %retval = alloca i32, align 4
  %mdev.addr = alloca %struct.mlx5_core_dev*, align 8
  %node_guid.addr = alloca i64*, align 8
  %out = alloca i32*, align 8
  %outlen = alloca i32, align 4
  store %struct.mlx5_core_dev* %mdev, %struct.mlx5_core_dev** %mdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_core_dev** %mdev.addr, metadata !12103, metadata !DIExpression()), !dbg !12104
  store i64* %node_guid, i64** %node_guid.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %node_guid.addr, metadata !12105, metadata !DIExpression()), !dbg !12106
  call void @llvm.dbg.declare(metadata i32** %out, metadata !12107, metadata !DIExpression()), !dbg !12108
  call void @llvm.dbg.declare(metadata i32* %outlen, metadata !12109, metadata !DIExpression()), !dbg !12110
  store i32 272, i32* %outlen, align 4, !dbg !12110
  %0 = load i32, i32* %outlen, align 4, !dbg !12111
  %conv = sext i32 %0 to i64, !dbg !12111
  %call = call i8* @kvzalloc(i64 %conv, i32 3264) #9, !dbg !12112
  %1 = bitcast i8* %call to i32*, !dbg !12112
  store i32* %1, i32** %out, align 8, !dbg !12113
  %2 = load i32*, i32** %out, align 8, !dbg !12114
  %tobool = icmp ne i32* %2, null, !dbg !12114
  br i1 %tobool, label %if.end, label %if.then, !dbg !12116

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !12117
  br label %return, !dbg !12117

if.end:                                           ; preds = %entry
  %3 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %mdev.addr, align 8, !dbg !12118
  %4 = load i32*, i32** %out, align 8, !dbg !12119
  %call1 = call i32 @mlx5_query_nic_vport_context(%struct.mlx5_core_dev* %3, i16 zeroext 0, i32* %4) #9, !dbg !12120
  %5 = load i32*, i32** %out, align 8, !dbg !12121
  %6 = bitcast i32* %5 to i64*, !dbg !12121
  %add.ptr = getelementptr i64, i64* %6, i64 9, !dbg !12121
  %7 = load i64, i64* %add.ptr, align 8, !dbg !12121
  %8 = call i1 @llvm.is.constant.i64(i64 %7), !dbg !12121
  br i1 %8, label %cond.true, label %cond.false, !dbg !12121

cond.true:                                        ; preds = %if.end
  %9 = load i32*, i32** %out, align 8, !dbg !12121
  %10 = bitcast i32* %9 to i64*, !dbg !12121
  %add.ptr2 = getelementptr i64, i64* %10, i64 9, !dbg !12121
  %11 = load i64, i64* %add.ptr2, align 8, !dbg !12121
  %and = and i64 %11, 255, !dbg !12121
  %shl = shl i64 %and, 56, !dbg !12121
  %12 = load i32*, i32** %out, align 8, !dbg !12121
  %13 = bitcast i32* %12 to i64*, !dbg !12121
  %add.ptr3 = getelementptr i64, i64* %13, i64 9, !dbg !12121
  %14 = load i64, i64* %add.ptr3, align 8, !dbg !12121
  %and4 = and i64 %14, 65280, !dbg !12121
  %shl5 = shl i64 %and4, 40, !dbg !12121
  %or = or i64 %shl, %shl5, !dbg !12121
  %15 = load i32*, i32** %out, align 8, !dbg !12121
  %16 = bitcast i32* %15 to i64*, !dbg !12121
  %add.ptr6 = getelementptr i64, i64* %16, i64 9, !dbg !12121
  %17 = load i64, i64* %add.ptr6, align 8, !dbg !12121
  %and7 = and i64 %17, 16711680, !dbg !12121
  %shl8 = shl i64 %and7, 24, !dbg !12121
  %or9 = or i64 %or, %shl8, !dbg !12121
  %18 = load i32*, i32** %out, align 8, !dbg !12121
  %19 = bitcast i32* %18 to i64*, !dbg !12121
  %add.ptr10 = getelementptr i64, i64* %19, i64 9, !dbg !12121
  %20 = load i64, i64* %add.ptr10, align 8, !dbg !12121
  %and11 = and i64 %20, 4278190080, !dbg !12121
  %shl12 = shl i64 %and11, 8, !dbg !12121
  %or13 = or i64 %or9, %shl12, !dbg !12121
  %21 = load i32*, i32** %out, align 8, !dbg !12121
  %22 = bitcast i32* %21 to i64*, !dbg !12121
  %add.ptr14 = getelementptr i64, i64* %22, i64 9, !dbg !12121
  %23 = load i64, i64* %add.ptr14, align 8, !dbg !12121
  %and15 = and i64 %23, 1095216660480, !dbg !12121
  %shr = lshr i64 %and15, 8, !dbg !12121
  %or16 = or i64 %or13, %shr, !dbg !12121
  %24 = load i32*, i32** %out, align 8, !dbg !12121
  %25 = bitcast i32* %24 to i64*, !dbg !12121
  %add.ptr17 = getelementptr i64, i64* %25, i64 9, !dbg !12121
  %26 = load i64, i64* %add.ptr17, align 8, !dbg !12121
  %and18 = and i64 %26, 280375465082880, !dbg !12121
  %shr19 = lshr i64 %and18, 24, !dbg !12121
  %or20 = or i64 %or16, %shr19, !dbg !12121
  %27 = load i32*, i32** %out, align 8, !dbg !12121
  %28 = bitcast i32* %27 to i64*, !dbg !12121
  %add.ptr21 = getelementptr i64, i64* %28, i64 9, !dbg !12121
  %29 = load i64, i64* %add.ptr21, align 8, !dbg !12121
  %and22 = and i64 %29, 71776119061217280, !dbg !12121
  %shr23 = lshr i64 %and22, 40, !dbg !12121
  %or24 = or i64 %or20, %shr23, !dbg !12121
  %30 = load i32*, i32** %out, align 8, !dbg !12121
  %31 = bitcast i32* %30 to i64*, !dbg !12121
  %add.ptr25 = getelementptr i64, i64* %31, i64 9, !dbg !12121
  %32 = load i64, i64* %add.ptr25, align 8, !dbg !12121
  %and26 = and i64 %32, -72057594037927936, !dbg !12121
  %shr27 = lshr i64 %and26, 56, !dbg !12121
  %or28 = or i64 %or24, %shr27, !dbg !12121
  br label %cond.end, !dbg !12121

cond.false:                                       ; preds = %if.end
  %33 = load i32*, i32** %out, align 8, !dbg !12121
  %34 = bitcast i32* %33 to i64*, !dbg !12121
  %add.ptr29 = getelementptr i64, i64* %34, i64 9, !dbg !12121
  %35 = load i64, i64* %add.ptr29, align 8, !dbg !12121
  %call30 = call i64 @__fswab64(i64 %35) #8, !dbg !12121
  br label %cond.end, !dbg !12121

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %or28, %cond.true ], [ %call30, %cond.false ], !dbg !12121
  %36 = load i64*, i64** %node_guid.addr, align 8, !dbg !12122
  store i64 %cond, i64* %36, align 8, !dbg !12123
  %37 = load i32*, i32** %out, align 8, !dbg !12124
  %38 = bitcast i32* %37 to i8*, !dbg !12124
  call void @kvfree(i8* %38) #9, !dbg !12125
  store i32 0, i32* %retval, align 4, !dbg !12126
  br label %return, !dbg !12126

return:                                           ; preds = %cond.end, %if.then
  %39 = load i32, i32* %retval, align 4, !dbg !12127
  ret i32 %39, !dbg !12127
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @mlx5_modify_nic_vport_node_guid(%struct.mlx5_core_dev* %mdev, i16 zeroext %vport, i64 %node_guid) #0 !dbg !12128 {
entry:
  %retval = alloca i32, align 4
  %mdev.addr = alloca %struct.mlx5_core_dev*, align 8
  %vport.addr = alloca i16, align 2
  %node_guid.addr = alloca i64, align 8
  %inlen = alloca i32, align 4
  %nic_vport_context = alloca i8*, align 8
  %in = alloca i8*, align 8
  %err = alloca i32, align 4
  %_v = alloca i32, align 4
  %_v218 = alloca i32, align 4
  %_v397 = alloca i32, align 4
  %_v613 = alloca i32, align 4
  %_out = alloca [4 x i32], align 16
  %tmp = alloca i32, align 4
  %tmp790 = alloca i32, align 4
  store %struct.mlx5_core_dev* %mdev, %struct.mlx5_core_dev** %mdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_core_dev** %mdev.addr, metadata !12131, metadata !DIExpression()), !dbg !12132
  store i16 %vport, i16* %vport.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %vport.addr, metadata !12133, metadata !DIExpression()), !dbg !12134
  store i64 %node_guid, i64* %node_guid.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %node_guid.addr, metadata !12135, metadata !DIExpression()), !dbg !12136
  call void @llvm.dbg.declare(metadata i32* %inlen, metadata !12137, metadata !DIExpression()), !dbg !12138
  store i32 512, i32* %inlen, align 4, !dbg !12138
  call void @llvm.dbg.declare(metadata i8** %nic_vport_context, metadata !12139, metadata !DIExpression()), !dbg !12140
  call void @llvm.dbg.declare(metadata i8** %in, metadata !12141, metadata !DIExpression()), !dbg !12142
  call void @llvm.dbg.declare(metadata i32* %err, metadata !12143, metadata !DIExpression()), !dbg !12144
  %0 = load i16, i16* %vport.addr, align 2, !dbg !12145
  %tobool = icmp ne i16 %0, 0, !dbg !12145
  br i1 %tobool, label %if.end, label %if.then, !dbg !12147

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !12148
  br label %return, !dbg !12148

if.end:                                           ; preds = %entry
  %1 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %mdev.addr, align 8, !dbg !12149
  %caps = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %1, i32 0, i32 9, !dbg !12149
  %hca_cur = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps, i32 0, i32 0, !dbg !12149
  %arrayidx = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur, i64 0, i64 0, !dbg !12149
  %arraydecay = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx, i64 0, i64 0, !dbg !12149
  %add.ptr = getelementptr i32, i32* %arraydecay, i64 13, !dbg !12149
  %2 = load i32, i32* %add.ptr, align 4, !dbg !12149
  %3 = call i1 @llvm.is.constant.i32(i32 %2), !dbg !12149
  br i1 %3, label %cond.true, label %cond.false, !dbg !12149

cond.true:                                        ; preds = %if.end
  %4 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %mdev.addr, align 8, !dbg !12149
  %caps1 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %4, i32 0, i32 9, !dbg !12149
  %hca_cur2 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps1, i32 0, i32 0, !dbg !12149
  %arrayidx3 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur2, i64 0, i64 0, !dbg !12149
  %arraydecay4 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx3, i64 0, i64 0, !dbg !12149
  %add.ptr5 = getelementptr i32, i32* %arraydecay4, i64 13, !dbg !12149
  %5 = load i32, i32* %add.ptr5, align 4, !dbg !12149
  %and = and i32 %5, 255, !dbg !12149
  %shl = shl i32 %and, 24, !dbg !12149
  %6 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %mdev.addr, align 8, !dbg !12149
  %caps6 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %6, i32 0, i32 9, !dbg !12149
  %hca_cur7 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps6, i32 0, i32 0, !dbg !12149
  %arrayidx8 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur7, i64 0, i64 0, !dbg !12149
  %arraydecay9 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx8, i64 0, i64 0, !dbg !12149
  %add.ptr10 = getelementptr i32, i32* %arraydecay9, i64 13, !dbg !12149
  %7 = load i32, i32* %add.ptr10, align 4, !dbg !12149
  %and11 = and i32 %7, 65280, !dbg !12149
  %shl12 = shl i32 %and11, 8, !dbg !12149
  %or = or i32 %shl, %shl12, !dbg !12149
  %8 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %mdev.addr, align 8, !dbg !12149
  %caps13 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %8, i32 0, i32 9, !dbg !12149
  %hca_cur14 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps13, i32 0, i32 0, !dbg !12149
  %arrayidx15 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur14, i64 0, i64 0, !dbg !12149
  %arraydecay16 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx15, i64 0, i64 0, !dbg !12149
  %add.ptr17 = getelementptr i32, i32* %arraydecay16, i64 13, !dbg !12149
  %9 = load i32, i32* %add.ptr17, align 4, !dbg !12149
  %and18 = and i32 %9, 16711680, !dbg !12149
  %shr = lshr i32 %and18, 8, !dbg !12149
  %or19 = or i32 %or, %shr, !dbg !12149
  %10 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %mdev.addr, align 8, !dbg !12149
  %caps20 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %10, i32 0, i32 9, !dbg !12149
  %hca_cur21 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps20, i32 0, i32 0, !dbg !12149
  %arrayidx22 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur21, i64 0, i64 0, !dbg !12149
  %arraydecay23 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx22, i64 0, i64 0, !dbg !12149
  %add.ptr24 = getelementptr i32, i32* %arraydecay23, i64 13, !dbg !12149
  %11 = load i32, i32* %add.ptr24, align 4, !dbg !12149
  %and25 = and i32 %11, -16777216, !dbg !12149
  %shr26 = lshr i32 %and25, 24, !dbg !12149
  %or27 = or i32 %or19, %shr26, !dbg !12149
  br label %cond.end, !dbg !12149

cond.false:                                       ; preds = %if.end
  %12 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %mdev.addr, align 8, !dbg !12149
  %caps28 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %12, i32 0, i32 9, !dbg !12149
  %hca_cur29 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps28, i32 0, i32 0, !dbg !12149
  %arrayidx30 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur29, i64 0, i64 0, !dbg !12149
  %arraydecay31 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx30, i64 0, i64 0, !dbg !12149
  %add.ptr32 = getelementptr i32, i32* %arraydecay31, i64 13, !dbg !12149
  %13 = load i32, i32* %add.ptr32, align 4, !dbg !12149
  %call = call i32 @__fswab32(i32 %13) #8, !dbg !12149
  br label %cond.end, !dbg !12149

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %or27, %cond.true ], [ %call, %cond.false ], !dbg !12149
  %shr33 = lshr i32 %cond, 31, !dbg !12149
  %and34 = and i32 %shr33, 1, !dbg !12149
  %tobool35 = icmp ne i32 %and34, 0, !dbg !12149
  br i1 %tobool35, label %if.end37, label %if.then36, !dbg !12151

if.then36:                                        ; preds = %cond.end
  store i32 -13, i32* %retval, align 4, !dbg !12152
  br label %return, !dbg !12152

if.end37:                                         ; preds = %cond.end
  %14 = load i32, i32* %inlen, align 4, !dbg !12153
  %conv = sext i32 %14 to i64, !dbg !12153
  %call38 = call i8* @kvzalloc(i64 %conv, i32 3264) #9, !dbg !12154
  store i8* %call38, i8** %in, align 8, !dbg !12155
  %15 = load i8*, i8** %in, align 8, !dbg !12156
  %tobool39 = icmp ne i8* %15, null, !dbg !12156
  br i1 %tobool39, label %if.end41, label %if.then40, !dbg !12158

if.then40:                                        ; preds = %if.end37
  store i32 -12, i32* %retval, align 4, !dbg !12159
  br label %return, !dbg !12159

if.end41:                                         ; preds = %if.end37
  br label %do.body, !dbg !12160

do.body:                                          ; preds = %if.end41
  call void @llvm.dbg.declare(metadata i32* %_v, metadata !12161, metadata !DIExpression()), !dbg !12163
  store i32 1, i32* %_v, align 4, !dbg !12163
  br label %do.body42, !dbg !12163

do.body42:                                        ; preds = %do.body
  br label %do.end, !dbg !12164

do.end:                                           ; preds = %do.body42
  %16 = load i8*, i8** %in, align 8, !dbg !12163
  %17 = bitcast i8* %16 to i32*, !dbg !12163
  %add.ptr43 = getelementptr i32, i32* %17, i64 3, !dbg !12163
  %18 = load i32, i32* %add.ptr43, align 4, !dbg !12163
  %19 = call i1 @llvm.is.constant.i32(i32 %18), !dbg !12163
  br i1 %19, label %cond.true44, label %cond.false60, !dbg !12163

cond.true44:                                      ; preds = %do.end
  %20 = load i8*, i8** %in, align 8, !dbg !12163
  %21 = bitcast i8* %20 to i32*, !dbg !12163
  %add.ptr45 = getelementptr i32, i32* %21, i64 3, !dbg !12163
  %22 = load i32, i32* %add.ptr45, align 4, !dbg !12163
  %and46 = and i32 %22, 255, !dbg !12163
  %shl47 = shl i32 %and46, 24, !dbg !12163
  %23 = load i8*, i8** %in, align 8, !dbg !12163
  %24 = bitcast i8* %23 to i32*, !dbg !12163
  %add.ptr48 = getelementptr i32, i32* %24, i64 3, !dbg !12163
  %25 = load i32, i32* %add.ptr48, align 4, !dbg !12163
  %and49 = and i32 %25, 65280, !dbg !12163
  %shl50 = shl i32 %and49, 8, !dbg !12163
  %or51 = or i32 %shl47, %shl50, !dbg !12163
  %26 = load i8*, i8** %in, align 8, !dbg !12163
  %27 = bitcast i8* %26 to i32*, !dbg !12163
  %add.ptr52 = getelementptr i32, i32* %27, i64 3, !dbg !12163
  %28 = load i32, i32* %add.ptr52, align 4, !dbg !12163
  %and53 = and i32 %28, 16711680, !dbg !12163
  %shr54 = lshr i32 %and53, 8, !dbg !12163
  %or55 = or i32 %or51, %shr54, !dbg !12163
  %29 = load i8*, i8** %in, align 8, !dbg !12163
  %30 = bitcast i8* %29 to i32*, !dbg !12163
  %add.ptr56 = getelementptr i32, i32* %30, i64 3, !dbg !12163
  %31 = load i32, i32* %add.ptr56, align 4, !dbg !12163
  %and57 = and i32 %31, -16777216, !dbg !12163
  %shr58 = lshr i32 %and57, 24, !dbg !12163
  %or59 = or i32 %or55, %shr58, !dbg !12163
  br label %cond.end63, !dbg !12163

cond.false60:                                     ; preds = %do.end
  %32 = load i8*, i8** %in, align 8, !dbg !12163
  %33 = bitcast i8* %32 to i32*, !dbg !12163
  %add.ptr61 = getelementptr i32, i32* %33, i64 3, !dbg !12163
  %34 = load i32, i32* %add.ptr61, align 4, !dbg !12163
  %call62 = call i32 @__fswab32(i32 %34) #8, !dbg !12163
  br label %cond.end63, !dbg !12163

cond.end63:                                       ; preds = %cond.false60, %cond.true44
  %cond64 = phi i32 [ %or59, %cond.true44 ], [ %call62, %cond.false60 ], !dbg !12163
  %and65 = and i32 %cond64, -513, !dbg !12163
  %35 = load i32, i32* %_v, align 4, !dbg !12163
  %and66 = and i32 %35, 1, !dbg !12163
  %shl67 = shl i32 %and66, 9, !dbg !12163
  %or68 = or i32 %and65, %shl67, !dbg !12163
  %36 = call i1 @llvm.is.constant.i32(i32 %or68), !dbg !12163
  br i1 %36, label %cond.true69, label %cond.false185, !dbg !12163

cond.true69:                                      ; preds = %cond.end63
  %37 = load i8*, i8** %in, align 8, !dbg !12163
  %38 = bitcast i8* %37 to i32*, !dbg !12163
  %add.ptr70 = getelementptr i32, i32* %38, i64 3, !dbg !12163
  %39 = load i32, i32* %add.ptr70, align 4, !dbg !12163
  %40 = call i1 @llvm.is.constant.i32(i32 %39), !dbg !12163
  br i1 %40, label %cond.true71, label %cond.false87, !dbg !12163

cond.true71:                                      ; preds = %cond.true69
  %41 = load i8*, i8** %in, align 8, !dbg !12163
  %42 = bitcast i8* %41 to i32*, !dbg !12163
  %add.ptr72 = getelementptr i32, i32* %42, i64 3, !dbg !12163
  %43 = load i32, i32* %add.ptr72, align 4, !dbg !12163
  %and73 = and i32 %43, 255, !dbg !12163
  %shl74 = shl i32 %and73, 24, !dbg !12163
  %44 = load i8*, i8** %in, align 8, !dbg !12163
  %45 = bitcast i8* %44 to i32*, !dbg !12163
  %add.ptr75 = getelementptr i32, i32* %45, i64 3, !dbg !12163
  %46 = load i32, i32* %add.ptr75, align 4, !dbg !12163
  %and76 = and i32 %46, 65280, !dbg !12163
  %shl77 = shl i32 %and76, 8, !dbg !12163
  %or78 = or i32 %shl74, %shl77, !dbg !12163
  %47 = load i8*, i8** %in, align 8, !dbg !12163
  %48 = bitcast i8* %47 to i32*, !dbg !12163
  %add.ptr79 = getelementptr i32, i32* %48, i64 3, !dbg !12163
  %49 = load i32, i32* %add.ptr79, align 4, !dbg !12163
  %and80 = and i32 %49, 16711680, !dbg !12163
  %shr81 = lshr i32 %and80, 8, !dbg !12163
  %or82 = or i32 %or78, %shr81, !dbg !12163
  %50 = load i8*, i8** %in, align 8, !dbg !12163
  %51 = bitcast i8* %50 to i32*, !dbg !12163
  %add.ptr83 = getelementptr i32, i32* %51, i64 3, !dbg !12163
  %52 = load i32, i32* %add.ptr83, align 4, !dbg !12163
  %and84 = and i32 %52, -16777216, !dbg !12163
  %shr85 = lshr i32 %and84, 24, !dbg !12163
  %or86 = or i32 %or82, %shr85, !dbg !12163
  br label %cond.end90, !dbg !12163

cond.false87:                                     ; preds = %cond.true69
  %53 = load i8*, i8** %in, align 8, !dbg !12163
  %54 = bitcast i8* %53 to i32*, !dbg !12163
  %add.ptr88 = getelementptr i32, i32* %54, i64 3, !dbg !12163
  %55 = load i32, i32* %add.ptr88, align 4, !dbg !12163
  %call89 = call i32 @__fswab32(i32 %55) #8, !dbg !12163
  br label %cond.end90, !dbg !12163

cond.end90:                                       ; preds = %cond.false87, %cond.true71
  %cond91 = phi i32 [ %or86, %cond.true71 ], [ %call89, %cond.false87 ], !dbg !12163
  %and92 = and i32 %cond91, -513, !dbg !12163
  %56 = load i32, i32* %_v, align 4, !dbg !12163
  %and93 = and i32 %56, 1, !dbg !12163
  %shl94 = shl i32 %and93, 9, !dbg !12163
  %or95 = or i32 %and92, %shl94, !dbg !12163
  %and96 = and i32 %or95, 255, !dbg !12163
  %shl97 = shl i32 %and96, 24, !dbg !12163
  %57 = load i8*, i8** %in, align 8, !dbg !12163
  %58 = bitcast i8* %57 to i32*, !dbg !12163
  %add.ptr98 = getelementptr i32, i32* %58, i64 3, !dbg !12163
  %59 = load i32, i32* %add.ptr98, align 4, !dbg !12163
  %60 = call i1 @llvm.is.constant.i32(i32 %59), !dbg !12163
  br i1 %60, label %cond.true99, label %cond.false115, !dbg !12163

cond.true99:                                      ; preds = %cond.end90
  %61 = load i8*, i8** %in, align 8, !dbg !12163
  %62 = bitcast i8* %61 to i32*, !dbg !12163
  %add.ptr100 = getelementptr i32, i32* %62, i64 3, !dbg !12163
  %63 = load i32, i32* %add.ptr100, align 4, !dbg !12163
  %and101 = and i32 %63, 255, !dbg !12163
  %shl102 = shl i32 %and101, 24, !dbg !12163
  %64 = load i8*, i8** %in, align 8, !dbg !12163
  %65 = bitcast i8* %64 to i32*, !dbg !12163
  %add.ptr103 = getelementptr i32, i32* %65, i64 3, !dbg !12163
  %66 = load i32, i32* %add.ptr103, align 4, !dbg !12163
  %and104 = and i32 %66, 65280, !dbg !12163
  %shl105 = shl i32 %and104, 8, !dbg !12163
  %or106 = or i32 %shl102, %shl105, !dbg !12163
  %67 = load i8*, i8** %in, align 8, !dbg !12163
  %68 = bitcast i8* %67 to i32*, !dbg !12163
  %add.ptr107 = getelementptr i32, i32* %68, i64 3, !dbg !12163
  %69 = load i32, i32* %add.ptr107, align 4, !dbg !12163
  %and108 = and i32 %69, 16711680, !dbg !12163
  %shr109 = lshr i32 %and108, 8, !dbg !12163
  %or110 = or i32 %or106, %shr109, !dbg !12163
  %70 = load i8*, i8** %in, align 8, !dbg !12163
  %71 = bitcast i8* %70 to i32*, !dbg !12163
  %add.ptr111 = getelementptr i32, i32* %71, i64 3, !dbg !12163
  %72 = load i32, i32* %add.ptr111, align 4, !dbg !12163
  %and112 = and i32 %72, -16777216, !dbg !12163
  %shr113 = lshr i32 %and112, 24, !dbg !12163
  %or114 = or i32 %or110, %shr113, !dbg !12163
  br label %cond.end118, !dbg !12163

cond.false115:                                    ; preds = %cond.end90
  %73 = load i8*, i8** %in, align 8, !dbg !12163
  %74 = bitcast i8* %73 to i32*, !dbg !12163
  %add.ptr116 = getelementptr i32, i32* %74, i64 3, !dbg !12163
  %75 = load i32, i32* %add.ptr116, align 4, !dbg !12163
  %call117 = call i32 @__fswab32(i32 %75) #8, !dbg !12163
  br label %cond.end118, !dbg !12163

cond.end118:                                      ; preds = %cond.false115, %cond.true99
  %cond119 = phi i32 [ %or114, %cond.true99 ], [ %call117, %cond.false115 ], !dbg !12163
  %and120 = and i32 %cond119, -513, !dbg !12163
  %76 = load i32, i32* %_v, align 4, !dbg !12163
  %and121 = and i32 %76, 1, !dbg !12163
  %shl122 = shl i32 %and121, 9, !dbg !12163
  %or123 = or i32 %and120, %shl122, !dbg !12163
  %and124 = and i32 %or123, 65280, !dbg !12163
  %shl125 = shl i32 %and124, 8, !dbg !12163
  %or126 = or i32 %shl97, %shl125, !dbg !12163
  %77 = load i8*, i8** %in, align 8, !dbg !12163
  %78 = bitcast i8* %77 to i32*, !dbg !12163
  %add.ptr127 = getelementptr i32, i32* %78, i64 3, !dbg !12163
  %79 = load i32, i32* %add.ptr127, align 4, !dbg !12163
  %80 = call i1 @llvm.is.constant.i32(i32 %79), !dbg !12163
  br i1 %80, label %cond.true128, label %cond.false144, !dbg !12163

cond.true128:                                     ; preds = %cond.end118
  %81 = load i8*, i8** %in, align 8, !dbg !12163
  %82 = bitcast i8* %81 to i32*, !dbg !12163
  %add.ptr129 = getelementptr i32, i32* %82, i64 3, !dbg !12163
  %83 = load i32, i32* %add.ptr129, align 4, !dbg !12163
  %and130 = and i32 %83, 255, !dbg !12163
  %shl131 = shl i32 %and130, 24, !dbg !12163
  %84 = load i8*, i8** %in, align 8, !dbg !12163
  %85 = bitcast i8* %84 to i32*, !dbg !12163
  %add.ptr132 = getelementptr i32, i32* %85, i64 3, !dbg !12163
  %86 = load i32, i32* %add.ptr132, align 4, !dbg !12163
  %and133 = and i32 %86, 65280, !dbg !12163
  %shl134 = shl i32 %and133, 8, !dbg !12163
  %or135 = or i32 %shl131, %shl134, !dbg !12163
  %87 = load i8*, i8** %in, align 8, !dbg !12163
  %88 = bitcast i8* %87 to i32*, !dbg !12163
  %add.ptr136 = getelementptr i32, i32* %88, i64 3, !dbg !12163
  %89 = load i32, i32* %add.ptr136, align 4, !dbg !12163
  %and137 = and i32 %89, 16711680, !dbg !12163
  %shr138 = lshr i32 %and137, 8, !dbg !12163
  %or139 = or i32 %or135, %shr138, !dbg !12163
  %90 = load i8*, i8** %in, align 8, !dbg !12163
  %91 = bitcast i8* %90 to i32*, !dbg !12163
  %add.ptr140 = getelementptr i32, i32* %91, i64 3, !dbg !12163
  %92 = load i32, i32* %add.ptr140, align 4, !dbg !12163
  %and141 = and i32 %92, -16777216, !dbg !12163
  %shr142 = lshr i32 %and141, 24, !dbg !12163
  %or143 = or i32 %or139, %shr142, !dbg !12163
  br label %cond.end147, !dbg !12163

cond.false144:                                    ; preds = %cond.end118
  %93 = load i8*, i8** %in, align 8, !dbg !12163
  %94 = bitcast i8* %93 to i32*, !dbg !12163
  %add.ptr145 = getelementptr i32, i32* %94, i64 3, !dbg !12163
  %95 = load i32, i32* %add.ptr145, align 4, !dbg !12163
  %call146 = call i32 @__fswab32(i32 %95) #8, !dbg !12163
  br label %cond.end147, !dbg !12163

cond.end147:                                      ; preds = %cond.false144, %cond.true128
  %cond148 = phi i32 [ %or143, %cond.true128 ], [ %call146, %cond.false144 ], !dbg !12163
  %and149 = and i32 %cond148, -513, !dbg !12163
  %96 = load i32, i32* %_v, align 4, !dbg !12163
  %and150 = and i32 %96, 1, !dbg !12163
  %shl151 = shl i32 %and150, 9, !dbg !12163
  %or152 = or i32 %and149, %shl151, !dbg !12163
  %and153 = and i32 %or152, 16711680, !dbg !12163
  %shr154 = lshr i32 %and153, 8, !dbg !12163
  %or155 = or i32 %or126, %shr154, !dbg !12163
  %97 = load i8*, i8** %in, align 8, !dbg !12163
  %98 = bitcast i8* %97 to i32*, !dbg !12163
  %add.ptr156 = getelementptr i32, i32* %98, i64 3, !dbg !12163
  %99 = load i32, i32* %add.ptr156, align 4, !dbg !12163
  %100 = call i1 @llvm.is.constant.i32(i32 %99), !dbg !12163
  br i1 %100, label %cond.true157, label %cond.false173, !dbg !12163

cond.true157:                                     ; preds = %cond.end147
  %101 = load i8*, i8** %in, align 8, !dbg !12163
  %102 = bitcast i8* %101 to i32*, !dbg !12163
  %add.ptr158 = getelementptr i32, i32* %102, i64 3, !dbg !12163
  %103 = load i32, i32* %add.ptr158, align 4, !dbg !12163
  %and159 = and i32 %103, 255, !dbg !12163
  %shl160 = shl i32 %and159, 24, !dbg !12163
  %104 = load i8*, i8** %in, align 8, !dbg !12163
  %105 = bitcast i8* %104 to i32*, !dbg !12163
  %add.ptr161 = getelementptr i32, i32* %105, i64 3, !dbg !12163
  %106 = load i32, i32* %add.ptr161, align 4, !dbg !12163
  %and162 = and i32 %106, 65280, !dbg !12163
  %shl163 = shl i32 %and162, 8, !dbg !12163
  %or164 = or i32 %shl160, %shl163, !dbg !12163
  %107 = load i8*, i8** %in, align 8, !dbg !12163
  %108 = bitcast i8* %107 to i32*, !dbg !12163
  %add.ptr165 = getelementptr i32, i32* %108, i64 3, !dbg !12163
  %109 = load i32, i32* %add.ptr165, align 4, !dbg !12163
  %and166 = and i32 %109, 16711680, !dbg !12163
  %shr167 = lshr i32 %and166, 8, !dbg !12163
  %or168 = or i32 %or164, %shr167, !dbg !12163
  %110 = load i8*, i8** %in, align 8, !dbg !12163
  %111 = bitcast i8* %110 to i32*, !dbg !12163
  %add.ptr169 = getelementptr i32, i32* %111, i64 3, !dbg !12163
  %112 = load i32, i32* %add.ptr169, align 4, !dbg !12163
  %and170 = and i32 %112, -16777216, !dbg !12163
  %shr171 = lshr i32 %and170, 24, !dbg !12163
  %or172 = or i32 %or168, %shr171, !dbg !12163
  br label %cond.end176, !dbg !12163

cond.false173:                                    ; preds = %cond.end147
  %113 = load i8*, i8** %in, align 8, !dbg !12163
  %114 = bitcast i8* %113 to i32*, !dbg !12163
  %add.ptr174 = getelementptr i32, i32* %114, i64 3, !dbg !12163
  %115 = load i32, i32* %add.ptr174, align 4, !dbg !12163
  %call175 = call i32 @__fswab32(i32 %115) #8, !dbg !12163
  br label %cond.end176, !dbg !12163

cond.end176:                                      ; preds = %cond.false173, %cond.true157
  %cond177 = phi i32 [ %or172, %cond.true157 ], [ %call175, %cond.false173 ], !dbg !12163
  %and178 = and i32 %cond177, -513, !dbg !12163
  %116 = load i32, i32* %_v, align 4, !dbg !12163
  %and179 = and i32 %116, 1, !dbg !12163
  %shl180 = shl i32 %and179, 9, !dbg !12163
  %or181 = or i32 %and178, %shl180, !dbg !12163
  %and182 = and i32 %or181, -16777216, !dbg !12163
  %shr183 = lshr i32 %and182, 24, !dbg !12163
  %or184 = or i32 %or155, %shr183, !dbg !12163
  br label %cond.end213, !dbg !12163

cond.false185:                                    ; preds = %cond.end63
  %117 = load i8*, i8** %in, align 8, !dbg !12163
  %118 = bitcast i8* %117 to i32*, !dbg !12163
  %add.ptr186 = getelementptr i32, i32* %118, i64 3, !dbg !12163
  %119 = load i32, i32* %add.ptr186, align 4, !dbg !12163
  %120 = call i1 @llvm.is.constant.i32(i32 %119), !dbg !12163
  br i1 %120, label %cond.true187, label %cond.false203, !dbg !12163

cond.true187:                                     ; preds = %cond.false185
  %121 = load i8*, i8** %in, align 8, !dbg !12163
  %122 = bitcast i8* %121 to i32*, !dbg !12163
  %add.ptr188 = getelementptr i32, i32* %122, i64 3, !dbg !12163
  %123 = load i32, i32* %add.ptr188, align 4, !dbg !12163
  %and189 = and i32 %123, 255, !dbg !12163
  %shl190 = shl i32 %and189, 24, !dbg !12163
  %124 = load i8*, i8** %in, align 8, !dbg !12163
  %125 = bitcast i8* %124 to i32*, !dbg !12163
  %add.ptr191 = getelementptr i32, i32* %125, i64 3, !dbg !12163
  %126 = load i32, i32* %add.ptr191, align 4, !dbg !12163
  %and192 = and i32 %126, 65280, !dbg !12163
  %shl193 = shl i32 %and192, 8, !dbg !12163
  %or194 = or i32 %shl190, %shl193, !dbg !12163
  %127 = load i8*, i8** %in, align 8, !dbg !12163
  %128 = bitcast i8* %127 to i32*, !dbg !12163
  %add.ptr195 = getelementptr i32, i32* %128, i64 3, !dbg !12163
  %129 = load i32, i32* %add.ptr195, align 4, !dbg !12163
  %and196 = and i32 %129, 16711680, !dbg !12163
  %shr197 = lshr i32 %and196, 8, !dbg !12163
  %or198 = or i32 %or194, %shr197, !dbg !12163
  %130 = load i8*, i8** %in, align 8, !dbg !12163
  %131 = bitcast i8* %130 to i32*, !dbg !12163
  %add.ptr199 = getelementptr i32, i32* %131, i64 3, !dbg !12163
  %132 = load i32, i32* %add.ptr199, align 4, !dbg !12163
  %and200 = and i32 %132, -16777216, !dbg !12163
  %shr201 = lshr i32 %and200, 24, !dbg !12163
  %or202 = or i32 %or198, %shr201, !dbg !12163
  br label %cond.end206, !dbg !12163

cond.false203:                                    ; preds = %cond.false185
  %133 = load i8*, i8** %in, align 8, !dbg !12163
  %134 = bitcast i8* %133 to i32*, !dbg !12163
  %add.ptr204 = getelementptr i32, i32* %134, i64 3, !dbg !12163
  %135 = load i32, i32* %add.ptr204, align 4, !dbg !12163
  %call205 = call i32 @__fswab32(i32 %135) #8, !dbg !12163
  br label %cond.end206, !dbg !12163

cond.end206:                                      ; preds = %cond.false203, %cond.true187
  %cond207 = phi i32 [ %or202, %cond.true187 ], [ %call205, %cond.false203 ], !dbg !12163
  %and208 = and i32 %cond207, -513, !dbg !12163
  %136 = load i32, i32* %_v, align 4, !dbg !12163
  %and209 = and i32 %136, 1, !dbg !12163
  %shl210 = shl i32 %and209, 9, !dbg !12163
  %or211 = or i32 %and208, %shl210, !dbg !12163
  %call212 = call i32 @__fswab32(i32 %or211) #8, !dbg !12163
  br label %cond.end213, !dbg !12163

cond.end213:                                      ; preds = %cond.end206, %cond.end176
  %cond214 = phi i32 [ %or184, %cond.end176 ], [ %call212, %cond.end206 ], !dbg !12163
  %137 = load i8*, i8** %in, align 8, !dbg !12163
  %138 = bitcast i8* %137 to i32*, !dbg !12163
  %add.ptr215 = getelementptr i32, i32* %138, i64 3, !dbg !12163
  store i32 %cond214, i32* %add.ptr215, align 4, !dbg !12163
  br label %do.end216, !dbg !12163

do.end216:                                        ; preds = %cond.end213
  br label %do.body217, !dbg !12166

do.body217:                                       ; preds = %do.end216
  call void @llvm.dbg.declare(metadata i32* %_v218, metadata !12167, metadata !DIExpression()), !dbg !12169
  %139 = load i16, i16* %vport.addr, align 2, !dbg !12169
  %conv219 = zext i16 %139 to i32, !dbg !12169
  store i32 %conv219, i32* %_v218, align 4, !dbg !12169
  br label %do.body220, !dbg !12169

do.body220:                                       ; preds = %do.body217
  br label %do.end221, !dbg !12170

do.end221:                                        ; preds = %do.body220
  %140 = load i8*, i8** %in, align 8, !dbg !12169
  %141 = bitcast i8* %140 to i32*, !dbg !12169
  %add.ptr222 = getelementptr i32, i32* %141, i64 2, !dbg !12169
  %142 = load i32, i32* %add.ptr222, align 4, !dbg !12169
  %143 = call i1 @llvm.is.constant.i32(i32 %142), !dbg !12169
  br i1 %143, label %cond.true223, label %cond.false239, !dbg !12169

cond.true223:                                     ; preds = %do.end221
  %144 = load i8*, i8** %in, align 8, !dbg !12169
  %145 = bitcast i8* %144 to i32*, !dbg !12169
  %add.ptr224 = getelementptr i32, i32* %145, i64 2, !dbg !12169
  %146 = load i32, i32* %add.ptr224, align 4, !dbg !12169
  %and225 = and i32 %146, 255, !dbg !12169
  %shl226 = shl i32 %and225, 24, !dbg !12169
  %147 = load i8*, i8** %in, align 8, !dbg !12169
  %148 = bitcast i8* %147 to i32*, !dbg !12169
  %add.ptr227 = getelementptr i32, i32* %148, i64 2, !dbg !12169
  %149 = load i32, i32* %add.ptr227, align 4, !dbg !12169
  %and228 = and i32 %149, 65280, !dbg !12169
  %shl229 = shl i32 %and228, 8, !dbg !12169
  %or230 = or i32 %shl226, %shl229, !dbg !12169
  %150 = load i8*, i8** %in, align 8, !dbg !12169
  %151 = bitcast i8* %150 to i32*, !dbg !12169
  %add.ptr231 = getelementptr i32, i32* %151, i64 2, !dbg !12169
  %152 = load i32, i32* %add.ptr231, align 4, !dbg !12169
  %and232 = and i32 %152, 16711680, !dbg !12169
  %shr233 = lshr i32 %and232, 8, !dbg !12169
  %or234 = or i32 %or230, %shr233, !dbg !12169
  %153 = load i8*, i8** %in, align 8, !dbg !12169
  %154 = bitcast i8* %153 to i32*, !dbg !12169
  %add.ptr235 = getelementptr i32, i32* %154, i64 2, !dbg !12169
  %155 = load i32, i32* %add.ptr235, align 4, !dbg !12169
  %and236 = and i32 %155, -16777216, !dbg !12169
  %shr237 = lshr i32 %and236, 24, !dbg !12169
  %or238 = or i32 %or234, %shr237, !dbg !12169
  br label %cond.end242, !dbg !12169

cond.false239:                                    ; preds = %do.end221
  %156 = load i8*, i8** %in, align 8, !dbg !12169
  %157 = bitcast i8* %156 to i32*, !dbg !12169
  %add.ptr240 = getelementptr i32, i32* %157, i64 2, !dbg !12169
  %158 = load i32, i32* %add.ptr240, align 4, !dbg !12169
  %call241 = call i32 @__fswab32(i32 %158) #8, !dbg !12169
  br label %cond.end242, !dbg !12169

cond.end242:                                      ; preds = %cond.false239, %cond.true223
  %cond243 = phi i32 [ %or238, %cond.true223 ], [ %call241, %cond.false239 ], !dbg !12169
  %and244 = and i32 %cond243, -65536, !dbg !12169
  %159 = load i32, i32* %_v218, align 4, !dbg !12169
  %and245 = and i32 %159, 65535, !dbg !12169
  %shl246 = shl i32 %and245, 0, !dbg !12169
  %or247 = or i32 %and244, %shl246, !dbg !12169
  %160 = call i1 @llvm.is.constant.i32(i32 %or247), !dbg !12169
  br i1 %160, label %cond.true248, label %cond.false364, !dbg !12169

cond.true248:                                     ; preds = %cond.end242
  %161 = load i8*, i8** %in, align 8, !dbg !12169
  %162 = bitcast i8* %161 to i32*, !dbg !12169
  %add.ptr249 = getelementptr i32, i32* %162, i64 2, !dbg !12169
  %163 = load i32, i32* %add.ptr249, align 4, !dbg !12169
  %164 = call i1 @llvm.is.constant.i32(i32 %163), !dbg !12169
  br i1 %164, label %cond.true250, label %cond.false266, !dbg !12169

cond.true250:                                     ; preds = %cond.true248
  %165 = load i8*, i8** %in, align 8, !dbg !12169
  %166 = bitcast i8* %165 to i32*, !dbg !12169
  %add.ptr251 = getelementptr i32, i32* %166, i64 2, !dbg !12169
  %167 = load i32, i32* %add.ptr251, align 4, !dbg !12169
  %and252 = and i32 %167, 255, !dbg !12169
  %shl253 = shl i32 %and252, 24, !dbg !12169
  %168 = load i8*, i8** %in, align 8, !dbg !12169
  %169 = bitcast i8* %168 to i32*, !dbg !12169
  %add.ptr254 = getelementptr i32, i32* %169, i64 2, !dbg !12169
  %170 = load i32, i32* %add.ptr254, align 4, !dbg !12169
  %and255 = and i32 %170, 65280, !dbg !12169
  %shl256 = shl i32 %and255, 8, !dbg !12169
  %or257 = or i32 %shl253, %shl256, !dbg !12169
  %171 = load i8*, i8** %in, align 8, !dbg !12169
  %172 = bitcast i8* %171 to i32*, !dbg !12169
  %add.ptr258 = getelementptr i32, i32* %172, i64 2, !dbg !12169
  %173 = load i32, i32* %add.ptr258, align 4, !dbg !12169
  %and259 = and i32 %173, 16711680, !dbg !12169
  %shr260 = lshr i32 %and259, 8, !dbg !12169
  %or261 = or i32 %or257, %shr260, !dbg !12169
  %174 = load i8*, i8** %in, align 8, !dbg !12169
  %175 = bitcast i8* %174 to i32*, !dbg !12169
  %add.ptr262 = getelementptr i32, i32* %175, i64 2, !dbg !12169
  %176 = load i32, i32* %add.ptr262, align 4, !dbg !12169
  %and263 = and i32 %176, -16777216, !dbg !12169
  %shr264 = lshr i32 %and263, 24, !dbg !12169
  %or265 = or i32 %or261, %shr264, !dbg !12169
  br label %cond.end269, !dbg !12169

cond.false266:                                    ; preds = %cond.true248
  %177 = load i8*, i8** %in, align 8, !dbg !12169
  %178 = bitcast i8* %177 to i32*, !dbg !12169
  %add.ptr267 = getelementptr i32, i32* %178, i64 2, !dbg !12169
  %179 = load i32, i32* %add.ptr267, align 4, !dbg !12169
  %call268 = call i32 @__fswab32(i32 %179) #8, !dbg !12169
  br label %cond.end269, !dbg !12169

cond.end269:                                      ; preds = %cond.false266, %cond.true250
  %cond270 = phi i32 [ %or265, %cond.true250 ], [ %call268, %cond.false266 ], !dbg !12169
  %and271 = and i32 %cond270, -65536, !dbg !12169
  %180 = load i32, i32* %_v218, align 4, !dbg !12169
  %and272 = and i32 %180, 65535, !dbg !12169
  %shl273 = shl i32 %and272, 0, !dbg !12169
  %or274 = or i32 %and271, %shl273, !dbg !12169
  %and275 = and i32 %or274, 255, !dbg !12169
  %shl276 = shl i32 %and275, 24, !dbg !12169
  %181 = load i8*, i8** %in, align 8, !dbg !12169
  %182 = bitcast i8* %181 to i32*, !dbg !12169
  %add.ptr277 = getelementptr i32, i32* %182, i64 2, !dbg !12169
  %183 = load i32, i32* %add.ptr277, align 4, !dbg !12169
  %184 = call i1 @llvm.is.constant.i32(i32 %183), !dbg !12169
  br i1 %184, label %cond.true278, label %cond.false294, !dbg !12169

cond.true278:                                     ; preds = %cond.end269
  %185 = load i8*, i8** %in, align 8, !dbg !12169
  %186 = bitcast i8* %185 to i32*, !dbg !12169
  %add.ptr279 = getelementptr i32, i32* %186, i64 2, !dbg !12169
  %187 = load i32, i32* %add.ptr279, align 4, !dbg !12169
  %and280 = and i32 %187, 255, !dbg !12169
  %shl281 = shl i32 %and280, 24, !dbg !12169
  %188 = load i8*, i8** %in, align 8, !dbg !12169
  %189 = bitcast i8* %188 to i32*, !dbg !12169
  %add.ptr282 = getelementptr i32, i32* %189, i64 2, !dbg !12169
  %190 = load i32, i32* %add.ptr282, align 4, !dbg !12169
  %and283 = and i32 %190, 65280, !dbg !12169
  %shl284 = shl i32 %and283, 8, !dbg !12169
  %or285 = or i32 %shl281, %shl284, !dbg !12169
  %191 = load i8*, i8** %in, align 8, !dbg !12169
  %192 = bitcast i8* %191 to i32*, !dbg !12169
  %add.ptr286 = getelementptr i32, i32* %192, i64 2, !dbg !12169
  %193 = load i32, i32* %add.ptr286, align 4, !dbg !12169
  %and287 = and i32 %193, 16711680, !dbg !12169
  %shr288 = lshr i32 %and287, 8, !dbg !12169
  %or289 = or i32 %or285, %shr288, !dbg !12169
  %194 = load i8*, i8** %in, align 8, !dbg !12169
  %195 = bitcast i8* %194 to i32*, !dbg !12169
  %add.ptr290 = getelementptr i32, i32* %195, i64 2, !dbg !12169
  %196 = load i32, i32* %add.ptr290, align 4, !dbg !12169
  %and291 = and i32 %196, -16777216, !dbg !12169
  %shr292 = lshr i32 %and291, 24, !dbg !12169
  %or293 = or i32 %or289, %shr292, !dbg !12169
  br label %cond.end297, !dbg !12169

cond.false294:                                    ; preds = %cond.end269
  %197 = load i8*, i8** %in, align 8, !dbg !12169
  %198 = bitcast i8* %197 to i32*, !dbg !12169
  %add.ptr295 = getelementptr i32, i32* %198, i64 2, !dbg !12169
  %199 = load i32, i32* %add.ptr295, align 4, !dbg !12169
  %call296 = call i32 @__fswab32(i32 %199) #8, !dbg !12169
  br label %cond.end297, !dbg !12169

cond.end297:                                      ; preds = %cond.false294, %cond.true278
  %cond298 = phi i32 [ %or293, %cond.true278 ], [ %call296, %cond.false294 ], !dbg !12169
  %and299 = and i32 %cond298, -65536, !dbg !12169
  %200 = load i32, i32* %_v218, align 4, !dbg !12169
  %and300 = and i32 %200, 65535, !dbg !12169
  %shl301 = shl i32 %and300, 0, !dbg !12169
  %or302 = or i32 %and299, %shl301, !dbg !12169
  %and303 = and i32 %or302, 65280, !dbg !12169
  %shl304 = shl i32 %and303, 8, !dbg !12169
  %or305 = or i32 %shl276, %shl304, !dbg !12169
  %201 = load i8*, i8** %in, align 8, !dbg !12169
  %202 = bitcast i8* %201 to i32*, !dbg !12169
  %add.ptr306 = getelementptr i32, i32* %202, i64 2, !dbg !12169
  %203 = load i32, i32* %add.ptr306, align 4, !dbg !12169
  %204 = call i1 @llvm.is.constant.i32(i32 %203), !dbg !12169
  br i1 %204, label %cond.true307, label %cond.false323, !dbg !12169

cond.true307:                                     ; preds = %cond.end297
  %205 = load i8*, i8** %in, align 8, !dbg !12169
  %206 = bitcast i8* %205 to i32*, !dbg !12169
  %add.ptr308 = getelementptr i32, i32* %206, i64 2, !dbg !12169
  %207 = load i32, i32* %add.ptr308, align 4, !dbg !12169
  %and309 = and i32 %207, 255, !dbg !12169
  %shl310 = shl i32 %and309, 24, !dbg !12169
  %208 = load i8*, i8** %in, align 8, !dbg !12169
  %209 = bitcast i8* %208 to i32*, !dbg !12169
  %add.ptr311 = getelementptr i32, i32* %209, i64 2, !dbg !12169
  %210 = load i32, i32* %add.ptr311, align 4, !dbg !12169
  %and312 = and i32 %210, 65280, !dbg !12169
  %shl313 = shl i32 %and312, 8, !dbg !12169
  %or314 = or i32 %shl310, %shl313, !dbg !12169
  %211 = load i8*, i8** %in, align 8, !dbg !12169
  %212 = bitcast i8* %211 to i32*, !dbg !12169
  %add.ptr315 = getelementptr i32, i32* %212, i64 2, !dbg !12169
  %213 = load i32, i32* %add.ptr315, align 4, !dbg !12169
  %and316 = and i32 %213, 16711680, !dbg !12169
  %shr317 = lshr i32 %and316, 8, !dbg !12169
  %or318 = or i32 %or314, %shr317, !dbg !12169
  %214 = load i8*, i8** %in, align 8, !dbg !12169
  %215 = bitcast i8* %214 to i32*, !dbg !12169
  %add.ptr319 = getelementptr i32, i32* %215, i64 2, !dbg !12169
  %216 = load i32, i32* %add.ptr319, align 4, !dbg !12169
  %and320 = and i32 %216, -16777216, !dbg !12169
  %shr321 = lshr i32 %and320, 24, !dbg !12169
  %or322 = or i32 %or318, %shr321, !dbg !12169
  br label %cond.end326, !dbg !12169

cond.false323:                                    ; preds = %cond.end297
  %217 = load i8*, i8** %in, align 8, !dbg !12169
  %218 = bitcast i8* %217 to i32*, !dbg !12169
  %add.ptr324 = getelementptr i32, i32* %218, i64 2, !dbg !12169
  %219 = load i32, i32* %add.ptr324, align 4, !dbg !12169
  %call325 = call i32 @__fswab32(i32 %219) #8, !dbg !12169
  br label %cond.end326, !dbg !12169

cond.end326:                                      ; preds = %cond.false323, %cond.true307
  %cond327 = phi i32 [ %or322, %cond.true307 ], [ %call325, %cond.false323 ], !dbg !12169
  %and328 = and i32 %cond327, -65536, !dbg !12169
  %220 = load i32, i32* %_v218, align 4, !dbg !12169
  %and329 = and i32 %220, 65535, !dbg !12169
  %shl330 = shl i32 %and329, 0, !dbg !12169
  %or331 = or i32 %and328, %shl330, !dbg !12169
  %and332 = and i32 %or331, 16711680, !dbg !12169
  %shr333 = lshr i32 %and332, 8, !dbg !12169
  %or334 = or i32 %or305, %shr333, !dbg !12169
  %221 = load i8*, i8** %in, align 8, !dbg !12169
  %222 = bitcast i8* %221 to i32*, !dbg !12169
  %add.ptr335 = getelementptr i32, i32* %222, i64 2, !dbg !12169
  %223 = load i32, i32* %add.ptr335, align 4, !dbg !12169
  %224 = call i1 @llvm.is.constant.i32(i32 %223), !dbg !12169
  br i1 %224, label %cond.true336, label %cond.false352, !dbg !12169

cond.true336:                                     ; preds = %cond.end326
  %225 = load i8*, i8** %in, align 8, !dbg !12169
  %226 = bitcast i8* %225 to i32*, !dbg !12169
  %add.ptr337 = getelementptr i32, i32* %226, i64 2, !dbg !12169
  %227 = load i32, i32* %add.ptr337, align 4, !dbg !12169
  %and338 = and i32 %227, 255, !dbg !12169
  %shl339 = shl i32 %and338, 24, !dbg !12169
  %228 = load i8*, i8** %in, align 8, !dbg !12169
  %229 = bitcast i8* %228 to i32*, !dbg !12169
  %add.ptr340 = getelementptr i32, i32* %229, i64 2, !dbg !12169
  %230 = load i32, i32* %add.ptr340, align 4, !dbg !12169
  %and341 = and i32 %230, 65280, !dbg !12169
  %shl342 = shl i32 %and341, 8, !dbg !12169
  %or343 = or i32 %shl339, %shl342, !dbg !12169
  %231 = load i8*, i8** %in, align 8, !dbg !12169
  %232 = bitcast i8* %231 to i32*, !dbg !12169
  %add.ptr344 = getelementptr i32, i32* %232, i64 2, !dbg !12169
  %233 = load i32, i32* %add.ptr344, align 4, !dbg !12169
  %and345 = and i32 %233, 16711680, !dbg !12169
  %shr346 = lshr i32 %and345, 8, !dbg !12169
  %or347 = or i32 %or343, %shr346, !dbg !12169
  %234 = load i8*, i8** %in, align 8, !dbg !12169
  %235 = bitcast i8* %234 to i32*, !dbg !12169
  %add.ptr348 = getelementptr i32, i32* %235, i64 2, !dbg !12169
  %236 = load i32, i32* %add.ptr348, align 4, !dbg !12169
  %and349 = and i32 %236, -16777216, !dbg !12169
  %shr350 = lshr i32 %and349, 24, !dbg !12169
  %or351 = or i32 %or347, %shr350, !dbg !12169
  br label %cond.end355, !dbg !12169

cond.false352:                                    ; preds = %cond.end326
  %237 = load i8*, i8** %in, align 8, !dbg !12169
  %238 = bitcast i8* %237 to i32*, !dbg !12169
  %add.ptr353 = getelementptr i32, i32* %238, i64 2, !dbg !12169
  %239 = load i32, i32* %add.ptr353, align 4, !dbg !12169
  %call354 = call i32 @__fswab32(i32 %239) #8, !dbg !12169
  br label %cond.end355, !dbg !12169

cond.end355:                                      ; preds = %cond.false352, %cond.true336
  %cond356 = phi i32 [ %or351, %cond.true336 ], [ %call354, %cond.false352 ], !dbg !12169
  %and357 = and i32 %cond356, -65536, !dbg !12169
  %240 = load i32, i32* %_v218, align 4, !dbg !12169
  %and358 = and i32 %240, 65535, !dbg !12169
  %shl359 = shl i32 %and358, 0, !dbg !12169
  %or360 = or i32 %and357, %shl359, !dbg !12169
  %and361 = and i32 %or360, -16777216, !dbg !12169
  %shr362 = lshr i32 %and361, 24, !dbg !12169
  %or363 = or i32 %or334, %shr362, !dbg !12169
  br label %cond.end392, !dbg !12169

cond.false364:                                    ; preds = %cond.end242
  %241 = load i8*, i8** %in, align 8, !dbg !12169
  %242 = bitcast i8* %241 to i32*, !dbg !12169
  %add.ptr365 = getelementptr i32, i32* %242, i64 2, !dbg !12169
  %243 = load i32, i32* %add.ptr365, align 4, !dbg !12169
  %244 = call i1 @llvm.is.constant.i32(i32 %243), !dbg !12169
  br i1 %244, label %cond.true366, label %cond.false382, !dbg !12169

cond.true366:                                     ; preds = %cond.false364
  %245 = load i8*, i8** %in, align 8, !dbg !12169
  %246 = bitcast i8* %245 to i32*, !dbg !12169
  %add.ptr367 = getelementptr i32, i32* %246, i64 2, !dbg !12169
  %247 = load i32, i32* %add.ptr367, align 4, !dbg !12169
  %and368 = and i32 %247, 255, !dbg !12169
  %shl369 = shl i32 %and368, 24, !dbg !12169
  %248 = load i8*, i8** %in, align 8, !dbg !12169
  %249 = bitcast i8* %248 to i32*, !dbg !12169
  %add.ptr370 = getelementptr i32, i32* %249, i64 2, !dbg !12169
  %250 = load i32, i32* %add.ptr370, align 4, !dbg !12169
  %and371 = and i32 %250, 65280, !dbg !12169
  %shl372 = shl i32 %and371, 8, !dbg !12169
  %or373 = or i32 %shl369, %shl372, !dbg !12169
  %251 = load i8*, i8** %in, align 8, !dbg !12169
  %252 = bitcast i8* %251 to i32*, !dbg !12169
  %add.ptr374 = getelementptr i32, i32* %252, i64 2, !dbg !12169
  %253 = load i32, i32* %add.ptr374, align 4, !dbg !12169
  %and375 = and i32 %253, 16711680, !dbg !12169
  %shr376 = lshr i32 %and375, 8, !dbg !12169
  %or377 = or i32 %or373, %shr376, !dbg !12169
  %254 = load i8*, i8** %in, align 8, !dbg !12169
  %255 = bitcast i8* %254 to i32*, !dbg !12169
  %add.ptr378 = getelementptr i32, i32* %255, i64 2, !dbg !12169
  %256 = load i32, i32* %add.ptr378, align 4, !dbg !12169
  %and379 = and i32 %256, -16777216, !dbg !12169
  %shr380 = lshr i32 %and379, 24, !dbg !12169
  %or381 = or i32 %or377, %shr380, !dbg !12169
  br label %cond.end385, !dbg !12169

cond.false382:                                    ; preds = %cond.false364
  %257 = load i8*, i8** %in, align 8, !dbg !12169
  %258 = bitcast i8* %257 to i32*, !dbg !12169
  %add.ptr383 = getelementptr i32, i32* %258, i64 2, !dbg !12169
  %259 = load i32, i32* %add.ptr383, align 4, !dbg !12169
  %call384 = call i32 @__fswab32(i32 %259) #8, !dbg !12169
  br label %cond.end385, !dbg !12169

cond.end385:                                      ; preds = %cond.false382, %cond.true366
  %cond386 = phi i32 [ %or381, %cond.true366 ], [ %call384, %cond.false382 ], !dbg !12169
  %and387 = and i32 %cond386, -65536, !dbg !12169
  %260 = load i32, i32* %_v218, align 4, !dbg !12169
  %and388 = and i32 %260, 65535, !dbg !12169
  %shl389 = shl i32 %and388, 0, !dbg !12169
  %or390 = or i32 %and387, %shl389, !dbg !12169
  %call391 = call i32 @__fswab32(i32 %or390) #8, !dbg !12169
  br label %cond.end392, !dbg !12169

cond.end392:                                      ; preds = %cond.end385, %cond.end355
  %cond393 = phi i32 [ %or363, %cond.end355 ], [ %call391, %cond.end385 ], !dbg !12169
  %261 = load i8*, i8** %in, align 8, !dbg !12169
  %262 = bitcast i8* %261 to i32*, !dbg !12169
  %add.ptr394 = getelementptr i32, i32* %262, i64 2, !dbg !12169
  store i32 %cond393, i32* %add.ptr394, align 4, !dbg !12169
  br label %do.end395, !dbg !12169

do.end395:                                        ; preds = %cond.end392
  br label %do.body396, !dbg !12172

do.body396:                                       ; preds = %do.end395
  call void @llvm.dbg.declare(metadata i32* %_v397, metadata !12173, metadata !DIExpression()), !dbg !12175
  store i32 1, i32* %_v397, align 4, !dbg !12175
  br label %do.body398, !dbg !12175

do.body398:                                       ; preds = %do.body396
  br label %do.end399, !dbg !12176

do.end399:                                        ; preds = %do.body398
  %263 = load i8*, i8** %in, align 8, !dbg !12175
  %264 = bitcast i8* %263 to i32*, !dbg !12175
  %add.ptr400 = getelementptr i32, i32* %264, i64 2, !dbg !12175
  %265 = load i32, i32* %add.ptr400, align 4, !dbg !12175
  %266 = call i1 @llvm.is.constant.i32(i32 %265), !dbg !12175
  br i1 %266, label %cond.true401, label %cond.false417, !dbg !12175

cond.true401:                                     ; preds = %do.end399
  %267 = load i8*, i8** %in, align 8, !dbg !12175
  %268 = bitcast i8* %267 to i32*, !dbg !12175
  %add.ptr402 = getelementptr i32, i32* %268, i64 2, !dbg !12175
  %269 = load i32, i32* %add.ptr402, align 4, !dbg !12175
  %and403 = and i32 %269, 255, !dbg !12175
  %shl404 = shl i32 %and403, 24, !dbg !12175
  %270 = load i8*, i8** %in, align 8, !dbg !12175
  %271 = bitcast i8* %270 to i32*, !dbg !12175
  %add.ptr405 = getelementptr i32, i32* %271, i64 2, !dbg !12175
  %272 = load i32, i32* %add.ptr405, align 4, !dbg !12175
  %and406 = and i32 %272, 65280, !dbg !12175
  %shl407 = shl i32 %and406, 8, !dbg !12175
  %or408 = or i32 %shl404, %shl407, !dbg !12175
  %273 = load i8*, i8** %in, align 8, !dbg !12175
  %274 = bitcast i8* %273 to i32*, !dbg !12175
  %add.ptr409 = getelementptr i32, i32* %274, i64 2, !dbg !12175
  %275 = load i32, i32* %add.ptr409, align 4, !dbg !12175
  %and410 = and i32 %275, 16711680, !dbg !12175
  %shr411 = lshr i32 %and410, 8, !dbg !12175
  %or412 = or i32 %or408, %shr411, !dbg !12175
  %276 = load i8*, i8** %in, align 8, !dbg !12175
  %277 = bitcast i8* %276 to i32*, !dbg !12175
  %add.ptr413 = getelementptr i32, i32* %277, i64 2, !dbg !12175
  %278 = load i32, i32* %add.ptr413, align 4, !dbg !12175
  %and414 = and i32 %278, -16777216, !dbg !12175
  %shr415 = lshr i32 %and414, 24, !dbg !12175
  %or416 = or i32 %or412, %shr415, !dbg !12175
  br label %cond.end420, !dbg !12175

cond.false417:                                    ; preds = %do.end399
  %279 = load i8*, i8** %in, align 8, !dbg !12175
  %280 = bitcast i8* %279 to i32*, !dbg !12175
  %add.ptr418 = getelementptr i32, i32* %280, i64 2, !dbg !12175
  %281 = load i32, i32* %add.ptr418, align 4, !dbg !12175
  %call419 = call i32 @__fswab32(i32 %281) #8, !dbg !12175
  br label %cond.end420, !dbg !12175

cond.end420:                                      ; preds = %cond.false417, %cond.true401
  %cond421 = phi i32 [ %or416, %cond.true401 ], [ %call419, %cond.false417 ], !dbg !12175
  %and422 = and i32 %cond421, 2147483647, !dbg !12175
  %282 = load i32, i32* %_v397, align 4, !dbg !12175
  %and423 = and i32 %282, 1, !dbg !12175
  %shl424 = shl i32 %and423, 31, !dbg !12175
  %or425 = or i32 %and422, %shl424, !dbg !12175
  %283 = call i1 @llvm.is.constant.i32(i32 %or425), !dbg !12175
  br i1 %283, label %cond.true426, label %cond.false542, !dbg !12175

cond.true426:                                     ; preds = %cond.end420
  %284 = load i8*, i8** %in, align 8, !dbg !12175
  %285 = bitcast i8* %284 to i32*, !dbg !12175
  %add.ptr427 = getelementptr i32, i32* %285, i64 2, !dbg !12175
  %286 = load i32, i32* %add.ptr427, align 4, !dbg !12175
  %287 = call i1 @llvm.is.constant.i32(i32 %286), !dbg !12175
  br i1 %287, label %cond.true428, label %cond.false444, !dbg !12175

cond.true428:                                     ; preds = %cond.true426
  %288 = load i8*, i8** %in, align 8, !dbg !12175
  %289 = bitcast i8* %288 to i32*, !dbg !12175
  %add.ptr429 = getelementptr i32, i32* %289, i64 2, !dbg !12175
  %290 = load i32, i32* %add.ptr429, align 4, !dbg !12175
  %and430 = and i32 %290, 255, !dbg !12175
  %shl431 = shl i32 %and430, 24, !dbg !12175
  %291 = load i8*, i8** %in, align 8, !dbg !12175
  %292 = bitcast i8* %291 to i32*, !dbg !12175
  %add.ptr432 = getelementptr i32, i32* %292, i64 2, !dbg !12175
  %293 = load i32, i32* %add.ptr432, align 4, !dbg !12175
  %and433 = and i32 %293, 65280, !dbg !12175
  %shl434 = shl i32 %and433, 8, !dbg !12175
  %or435 = or i32 %shl431, %shl434, !dbg !12175
  %294 = load i8*, i8** %in, align 8, !dbg !12175
  %295 = bitcast i8* %294 to i32*, !dbg !12175
  %add.ptr436 = getelementptr i32, i32* %295, i64 2, !dbg !12175
  %296 = load i32, i32* %add.ptr436, align 4, !dbg !12175
  %and437 = and i32 %296, 16711680, !dbg !12175
  %shr438 = lshr i32 %and437, 8, !dbg !12175
  %or439 = or i32 %or435, %shr438, !dbg !12175
  %297 = load i8*, i8** %in, align 8, !dbg !12175
  %298 = bitcast i8* %297 to i32*, !dbg !12175
  %add.ptr440 = getelementptr i32, i32* %298, i64 2, !dbg !12175
  %299 = load i32, i32* %add.ptr440, align 4, !dbg !12175
  %and441 = and i32 %299, -16777216, !dbg !12175
  %shr442 = lshr i32 %and441, 24, !dbg !12175
  %or443 = or i32 %or439, %shr442, !dbg !12175
  br label %cond.end447, !dbg !12175

cond.false444:                                    ; preds = %cond.true426
  %300 = load i8*, i8** %in, align 8, !dbg !12175
  %301 = bitcast i8* %300 to i32*, !dbg !12175
  %add.ptr445 = getelementptr i32, i32* %301, i64 2, !dbg !12175
  %302 = load i32, i32* %add.ptr445, align 4, !dbg !12175
  %call446 = call i32 @__fswab32(i32 %302) #8, !dbg !12175
  br label %cond.end447, !dbg !12175

cond.end447:                                      ; preds = %cond.false444, %cond.true428
  %cond448 = phi i32 [ %or443, %cond.true428 ], [ %call446, %cond.false444 ], !dbg !12175
  %and449 = and i32 %cond448, 2147483647, !dbg !12175
  %303 = load i32, i32* %_v397, align 4, !dbg !12175
  %and450 = and i32 %303, 1, !dbg !12175
  %shl451 = shl i32 %and450, 31, !dbg !12175
  %or452 = or i32 %and449, %shl451, !dbg !12175
  %and453 = and i32 %or452, 255, !dbg !12175
  %shl454 = shl i32 %and453, 24, !dbg !12175
  %304 = load i8*, i8** %in, align 8, !dbg !12175
  %305 = bitcast i8* %304 to i32*, !dbg !12175
  %add.ptr455 = getelementptr i32, i32* %305, i64 2, !dbg !12175
  %306 = load i32, i32* %add.ptr455, align 4, !dbg !12175
  %307 = call i1 @llvm.is.constant.i32(i32 %306), !dbg !12175
  br i1 %307, label %cond.true456, label %cond.false472, !dbg !12175

cond.true456:                                     ; preds = %cond.end447
  %308 = load i8*, i8** %in, align 8, !dbg !12175
  %309 = bitcast i8* %308 to i32*, !dbg !12175
  %add.ptr457 = getelementptr i32, i32* %309, i64 2, !dbg !12175
  %310 = load i32, i32* %add.ptr457, align 4, !dbg !12175
  %and458 = and i32 %310, 255, !dbg !12175
  %shl459 = shl i32 %and458, 24, !dbg !12175
  %311 = load i8*, i8** %in, align 8, !dbg !12175
  %312 = bitcast i8* %311 to i32*, !dbg !12175
  %add.ptr460 = getelementptr i32, i32* %312, i64 2, !dbg !12175
  %313 = load i32, i32* %add.ptr460, align 4, !dbg !12175
  %and461 = and i32 %313, 65280, !dbg !12175
  %shl462 = shl i32 %and461, 8, !dbg !12175
  %or463 = or i32 %shl459, %shl462, !dbg !12175
  %314 = load i8*, i8** %in, align 8, !dbg !12175
  %315 = bitcast i8* %314 to i32*, !dbg !12175
  %add.ptr464 = getelementptr i32, i32* %315, i64 2, !dbg !12175
  %316 = load i32, i32* %add.ptr464, align 4, !dbg !12175
  %and465 = and i32 %316, 16711680, !dbg !12175
  %shr466 = lshr i32 %and465, 8, !dbg !12175
  %or467 = or i32 %or463, %shr466, !dbg !12175
  %317 = load i8*, i8** %in, align 8, !dbg !12175
  %318 = bitcast i8* %317 to i32*, !dbg !12175
  %add.ptr468 = getelementptr i32, i32* %318, i64 2, !dbg !12175
  %319 = load i32, i32* %add.ptr468, align 4, !dbg !12175
  %and469 = and i32 %319, -16777216, !dbg !12175
  %shr470 = lshr i32 %and469, 24, !dbg !12175
  %or471 = or i32 %or467, %shr470, !dbg !12175
  br label %cond.end475, !dbg !12175

cond.false472:                                    ; preds = %cond.end447
  %320 = load i8*, i8** %in, align 8, !dbg !12175
  %321 = bitcast i8* %320 to i32*, !dbg !12175
  %add.ptr473 = getelementptr i32, i32* %321, i64 2, !dbg !12175
  %322 = load i32, i32* %add.ptr473, align 4, !dbg !12175
  %call474 = call i32 @__fswab32(i32 %322) #8, !dbg !12175
  br label %cond.end475, !dbg !12175

cond.end475:                                      ; preds = %cond.false472, %cond.true456
  %cond476 = phi i32 [ %or471, %cond.true456 ], [ %call474, %cond.false472 ], !dbg !12175
  %and477 = and i32 %cond476, 2147483647, !dbg !12175
  %323 = load i32, i32* %_v397, align 4, !dbg !12175
  %and478 = and i32 %323, 1, !dbg !12175
  %shl479 = shl i32 %and478, 31, !dbg !12175
  %or480 = or i32 %and477, %shl479, !dbg !12175
  %and481 = and i32 %or480, 65280, !dbg !12175
  %shl482 = shl i32 %and481, 8, !dbg !12175
  %or483 = or i32 %shl454, %shl482, !dbg !12175
  %324 = load i8*, i8** %in, align 8, !dbg !12175
  %325 = bitcast i8* %324 to i32*, !dbg !12175
  %add.ptr484 = getelementptr i32, i32* %325, i64 2, !dbg !12175
  %326 = load i32, i32* %add.ptr484, align 4, !dbg !12175
  %327 = call i1 @llvm.is.constant.i32(i32 %326), !dbg !12175
  br i1 %327, label %cond.true485, label %cond.false501, !dbg !12175

cond.true485:                                     ; preds = %cond.end475
  %328 = load i8*, i8** %in, align 8, !dbg !12175
  %329 = bitcast i8* %328 to i32*, !dbg !12175
  %add.ptr486 = getelementptr i32, i32* %329, i64 2, !dbg !12175
  %330 = load i32, i32* %add.ptr486, align 4, !dbg !12175
  %and487 = and i32 %330, 255, !dbg !12175
  %shl488 = shl i32 %and487, 24, !dbg !12175
  %331 = load i8*, i8** %in, align 8, !dbg !12175
  %332 = bitcast i8* %331 to i32*, !dbg !12175
  %add.ptr489 = getelementptr i32, i32* %332, i64 2, !dbg !12175
  %333 = load i32, i32* %add.ptr489, align 4, !dbg !12175
  %and490 = and i32 %333, 65280, !dbg !12175
  %shl491 = shl i32 %and490, 8, !dbg !12175
  %or492 = or i32 %shl488, %shl491, !dbg !12175
  %334 = load i8*, i8** %in, align 8, !dbg !12175
  %335 = bitcast i8* %334 to i32*, !dbg !12175
  %add.ptr493 = getelementptr i32, i32* %335, i64 2, !dbg !12175
  %336 = load i32, i32* %add.ptr493, align 4, !dbg !12175
  %and494 = and i32 %336, 16711680, !dbg !12175
  %shr495 = lshr i32 %and494, 8, !dbg !12175
  %or496 = or i32 %or492, %shr495, !dbg !12175
  %337 = load i8*, i8** %in, align 8, !dbg !12175
  %338 = bitcast i8* %337 to i32*, !dbg !12175
  %add.ptr497 = getelementptr i32, i32* %338, i64 2, !dbg !12175
  %339 = load i32, i32* %add.ptr497, align 4, !dbg !12175
  %and498 = and i32 %339, -16777216, !dbg !12175
  %shr499 = lshr i32 %and498, 24, !dbg !12175
  %or500 = or i32 %or496, %shr499, !dbg !12175
  br label %cond.end504, !dbg !12175

cond.false501:                                    ; preds = %cond.end475
  %340 = load i8*, i8** %in, align 8, !dbg !12175
  %341 = bitcast i8* %340 to i32*, !dbg !12175
  %add.ptr502 = getelementptr i32, i32* %341, i64 2, !dbg !12175
  %342 = load i32, i32* %add.ptr502, align 4, !dbg !12175
  %call503 = call i32 @__fswab32(i32 %342) #8, !dbg !12175
  br label %cond.end504, !dbg !12175

cond.end504:                                      ; preds = %cond.false501, %cond.true485
  %cond505 = phi i32 [ %or500, %cond.true485 ], [ %call503, %cond.false501 ], !dbg !12175
  %and506 = and i32 %cond505, 2147483647, !dbg !12175
  %343 = load i32, i32* %_v397, align 4, !dbg !12175
  %and507 = and i32 %343, 1, !dbg !12175
  %shl508 = shl i32 %and507, 31, !dbg !12175
  %or509 = or i32 %and506, %shl508, !dbg !12175
  %and510 = and i32 %or509, 16711680, !dbg !12175
  %shr511 = lshr i32 %and510, 8, !dbg !12175
  %or512 = or i32 %or483, %shr511, !dbg !12175
  %344 = load i8*, i8** %in, align 8, !dbg !12175
  %345 = bitcast i8* %344 to i32*, !dbg !12175
  %add.ptr513 = getelementptr i32, i32* %345, i64 2, !dbg !12175
  %346 = load i32, i32* %add.ptr513, align 4, !dbg !12175
  %347 = call i1 @llvm.is.constant.i32(i32 %346), !dbg !12175
  br i1 %347, label %cond.true514, label %cond.false530, !dbg !12175

cond.true514:                                     ; preds = %cond.end504
  %348 = load i8*, i8** %in, align 8, !dbg !12175
  %349 = bitcast i8* %348 to i32*, !dbg !12175
  %add.ptr515 = getelementptr i32, i32* %349, i64 2, !dbg !12175
  %350 = load i32, i32* %add.ptr515, align 4, !dbg !12175
  %and516 = and i32 %350, 255, !dbg !12175
  %shl517 = shl i32 %and516, 24, !dbg !12175
  %351 = load i8*, i8** %in, align 8, !dbg !12175
  %352 = bitcast i8* %351 to i32*, !dbg !12175
  %add.ptr518 = getelementptr i32, i32* %352, i64 2, !dbg !12175
  %353 = load i32, i32* %add.ptr518, align 4, !dbg !12175
  %and519 = and i32 %353, 65280, !dbg !12175
  %shl520 = shl i32 %and519, 8, !dbg !12175
  %or521 = or i32 %shl517, %shl520, !dbg !12175
  %354 = load i8*, i8** %in, align 8, !dbg !12175
  %355 = bitcast i8* %354 to i32*, !dbg !12175
  %add.ptr522 = getelementptr i32, i32* %355, i64 2, !dbg !12175
  %356 = load i32, i32* %add.ptr522, align 4, !dbg !12175
  %and523 = and i32 %356, 16711680, !dbg !12175
  %shr524 = lshr i32 %and523, 8, !dbg !12175
  %or525 = or i32 %or521, %shr524, !dbg !12175
  %357 = load i8*, i8** %in, align 8, !dbg !12175
  %358 = bitcast i8* %357 to i32*, !dbg !12175
  %add.ptr526 = getelementptr i32, i32* %358, i64 2, !dbg !12175
  %359 = load i32, i32* %add.ptr526, align 4, !dbg !12175
  %and527 = and i32 %359, -16777216, !dbg !12175
  %shr528 = lshr i32 %and527, 24, !dbg !12175
  %or529 = or i32 %or525, %shr528, !dbg !12175
  br label %cond.end533, !dbg !12175

cond.false530:                                    ; preds = %cond.end504
  %360 = load i8*, i8** %in, align 8, !dbg !12175
  %361 = bitcast i8* %360 to i32*, !dbg !12175
  %add.ptr531 = getelementptr i32, i32* %361, i64 2, !dbg !12175
  %362 = load i32, i32* %add.ptr531, align 4, !dbg !12175
  %call532 = call i32 @__fswab32(i32 %362) #8, !dbg !12175
  br label %cond.end533, !dbg !12175

cond.end533:                                      ; preds = %cond.false530, %cond.true514
  %cond534 = phi i32 [ %or529, %cond.true514 ], [ %call532, %cond.false530 ], !dbg !12175
  %and535 = and i32 %cond534, 2147483647, !dbg !12175
  %363 = load i32, i32* %_v397, align 4, !dbg !12175
  %and536 = and i32 %363, 1, !dbg !12175
  %shl537 = shl i32 %and536, 31, !dbg !12175
  %or538 = or i32 %and535, %shl537, !dbg !12175
  %and539 = and i32 %or538, -16777216, !dbg !12175
  %shr540 = lshr i32 %and539, 24, !dbg !12175
  %or541 = or i32 %or512, %shr540, !dbg !12175
  br label %cond.end570, !dbg !12175

cond.false542:                                    ; preds = %cond.end420
  %364 = load i8*, i8** %in, align 8, !dbg !12175
  %365 = bitcast i8* %364 to i32*, !dbg !12175
  %add.ptr543 = getelementptr i32, i32* %365, i64 2, !dbg !12175
  %366 = load i32, i32* %add.ptr543, align 4, !dbg !12175
  %367 = call i1 @llvm.is.constant.i32(i32 %366), !dbg !12175
  br i1 %367, label %cond.true544, label %cond.false560, !dbg !12175

cond.true544:                                     ; preds = %cond.false542
  %368 = load i8*, i8** %in, align 8, !dbg !12175
  %369 = bitcast i8* %368 to i32*, !dbg !12175
  %add.ptr545 = getelementptr i32, i32* %369, i64 2, !dbg !12175
  %370 = load i32, i32* %add.ptr545, align 4, !dbg !12175
  %and546 = and i32 %370, 255, !dbg !12175
  %shl547 = shl i32 %and546, 24, !dbg !12175
  %371 = load i8*, i8** %in, align 8, !dbg !12175
  %372 = bitcast i8* %371 to i32*, !dbg !12175
  %add.ptr548 = getelementptr i32, i32* %372, i64 2, !dbg !12175
  %373 = load i32, i32* %add.ptr548, align 4, !dbg !12175
  %and549 = and i32 %373, 65280, !dbg !12175
  %shl550 = shl i32 %and549, 8, !dbg !12175
  %or551 = or i32 %shl547, %shl550, !dbg !12175
  %374 = load i8*, i8** %in, align 8, !dbg !12175
  %375 = bitcast i8* %374 to i32*, !dbg !12175
  %add.ptr552 = getelementptr i32, i32* %375, i64 2, !dbg !12175
  %376 = load i32, i32* %add.ptr552, align 4, !dbg !12175
  %and553 = and i32 %376, 16711680, !dbg !12175
  %shr554 = lshr i32 %and553, 8, !dbg !12175
  %or555 = or i32 %or551, %shr554, !dbg !12175
  %377 = load i8*, i8** %in, align 8, !dbg !12175
  %378 = bitcast i8* %377 to i32*, !dbg !12175
  %add.ptr556 = getelementptr i32, i32* %378, i64 2, !dbg !12175
  %379 = load i32, i32* %add.ptr556, align 4, !dbg !12175
  %and557 = and i32 %379, -16777216, !dbg !12175
  %shr558 = lshr i32 %and557, 24, !dbg !12175
  %or559 = or i32 %or555, %shr558, !dbg !12175
  br label %cond.end563, !dbg !12175

cond.false560:                                    ; preds = %cond.false542
  %380 = load i8*, i8** %in, align 8, !dbg !12175
  %381 = bitcast i8* %380 to i32*, !dbg !12175
  %add.ptr561 = getelementptr i32, i32* %381, i64 2, !dbg !12175
  %382 = load i32, i32* %add.ptr561, align 4, !dbg !12175
  %call562 = call i32 @__fswab32(i32 %382) #8, !dbg !12175
  br label %cond.end563, !dbg !12175

cond.end563:                                      ; preds = %cond.false560, %cond.true544
  %cond564 = phi i32 [ %or559, %cond.true544 ], [ %call562, %cond.false560 ], !dbg !12175
  %and565 = and i32 %cond564, 2147483647, !dbg !12175
  %383 = load i32, i32* %_v397, align 4, !dbg !12175
  %and566 = and i32 %383, 1, !dbg !12175
  %shl567 = shl i32 %and566, 31, !dbg !12175
  %or568 = or i32 %and565, %shl567, !dbg !12175
  %call569 = call i32 @__fswab32(i32 %or568) #8, !dbg !12175
  br label %cond.end570, !dbg !12175

cond.end570:                                      ; preds = %cond.end563, %cond.end533
  %cond571 = phi i32 [ %or541, %cond.end533 ], [ %call569, %cond.end563 ], !dbg !12175
  %384 = load i8*, i8** %in, align 8, !dbg !12175
  %385 = bitcast i8* %384 to i32*, !dbg !12175
  %add.ptr572 = getelementptr i32, i32* %385, i64 2, !dbg !12175
  store i32 %cond571, i32* %add.ptr572, align 4, !dbg !12175
  br label %do.end573, !dbg !12175

do.end573:                                        ; preds = %cond.end570
  %386 = load i8*, i8** %in, align 8, !dbg !12178
  %add.ptr574 = getelementptr i8, i8* %386, i64 256, !dbg !12178
  store i8* %add.ptr574, i8** %nic_vport_context, align 8, !dbg !12179
  br label %do.body575, !dbg !12180

do.body575:                                       ; preds = %do.end573
  br label %do.body576, !dbg !12181

do.body576:                                       ; preds = %do.body575
  br label %do.end577, !dbg !12183

do.end577:                                        ; preds = %do.body576
  br label %do.body578, !dbg !12181

do.body578:                                       ; preds = %do.end577
  br label %do.body579, !dbg !12185

do.body579:                                       ; preds = %do.body578
  br label %do.end580, !dbg !12187

do.end580:                                        ; preds = %do.body579
  %387 = load i64, i64* %node_guid.addr, align 8, !dbg !12185
  %388 = call i1 @llvm.is.constant.i64(i64 %387), !dbg !12185
  br i1 %388, label %cond.true581, label %cond.false605, !dbg !12185

cond.true581:                                     ; preds = %do.end580
  %389 = load i64, i64* %node_guid.addr, align 8, !dbg !12185
  %and582 = and i64 %389, 255, !dbg !12185
  %shl583 = shl i64 %and582, 56, !dbg !12185
  %390 = load i64, i64* %node_guid.addr, align 8, !dbg !12185
  %and584 = and i64 %390, 65280, !dbg !12185
  %shl585 = shl i64 %and584, 40, !dbg !12185
  %or586 = or i64 %shl583, %shl585, !dbg !12185
  %391 = load i64, i64* %node_guid.addr, align 8, !dbg !12185
  %and587 = and i64 %391, 16711680, !dbg !12185
  %shl588 = shl i64 %and587, 24, !dbg !12185
  %or589 = or i64 %or586, %shl588, !dbg !12185
  %392 = load i64, i64* %node_guid.addr, align 8, !dbg !12185
  %and590 = and i64 %392, 4278190080, !dbg !12185
  %shl591 = shl i64 %and590, 8, !dbg !12185
  %or592 = or i64 %or589, %shl591, !dbg !12185
  %393 = load i64, i64* %node_guid.addr, align 8, !dbg !12185
  %and593 = and i64 %393, 1095216660480, !dbg !12185
  %shr594 = lshr i64 %and593, 8, !dbg !12185
  %or595 = or i64 %or592, %shr594, !dbg !12185
  %394 = load i64, i64* %node_guid.addr, align 8, !dbg !12185
  %and596 = and i64 %394, 280375465082880, !dbg !12185
  %shr597 = lshr i64 %and596, 24, !dbg !12185
  %or598 = or i64 %or595, %shr597, !dbg !12185
  %395 = load i64, i64* %node_guid.addr, align 8, !dbg !12185
  %and599 = and i64 %395, 71776119061217280, !dbg !12185
  %shr600 = lshr i64 %and599, 40, !dbg !12185
  %or601 = or i64 %or598, %shr600, !dbg !12185
  %396 = load i64, i64* %node_guid.addr, align 8, !dbg !12185
  %and602 = and i64 %396, -72057594037927936, !dbg !12185
  %shr603 = lshr i64 %and602, 56, !dbg !12185
  %or604 = or i64 %or601, %shr603, !dbg !12185
  br label %cond.end607, !dbg !12185

cond.false605:                                    ; preds = %do.end580
  %397 = load i64, i64* %node_guid.addr, align 8, !dbg !12185
  %call606 = call i64 @__fswab64(i64 %397) #8, !dbg !12185
  br label %cond.end607, !dbg !12185

cond.end607:                                      ; preds = %cond.false605, %cond.true581
  %cond608 = phi i64 [ %or604, %cond.true581 ], [ %call606, %cond.false605 ], !dbg !12185
  %398 = load i8*, i8** %nic_vport_context, align 8, !dbg !12185
  %399 = bitcast i8* %398 to i64*, !dbg !12185
  %add.ptr609 = getelementptr i64, i64* %399, i64 7, !dbg !12185
  store i64 %cond608, i64* %add.ptr609, align 8, !dbg !12185
  br label %do.end610, !dbg !12185

do.end610:                                        ; preds = %cond.end607
  br label %do.end611, !dbg !12181

do.end611:                                        ; preds = %do.end610
  br label %do.body612, !dbg !12189

do.body612:                                       ; preds = %do.end611
  call void @llvm.dbg.declare(metadata i32* %_v613, metadata !12190, metadata !DIExpression()), !dbg !12192
  store i32 1877, i32* %_v613, align 4, !dbg !12192
  br label %do.body614, !dbg !12192

do.body614:                                       ; preds = %do.body612
  br label %do.end615, !dbg !12193

do.end615:                                        ; preds = %do.body614
  %400 = load i8*, i8** %in, align 8, !dbg !12192
  %401 = bitcast i8* %400 to i32*, !dbg !12192
  %add.ptr616 = getelementptr i32, i32* %401, i64 0, !dbg !12192
  %402 = load i32, i32* %add.ptr616, align 4, !dbg !12192
  %403 = call i1 @llvm.is.constant.i32(i32 %402), !dbg !12192
  br i1 %403, label %cond.true617, label %cond.false633, !dbg !12192

cond.true617:                                     ; preds = %do.end615
  %404 = load i8*, i8** %in, align 8, !dbg !12192
  %405 = bitcast i8* %404 to i32*, !dbg !12192
  %add.ptr618 = getelementptr i32, i32* %405, i64 0, !dbg !12192
  %406 = load i32, i32* %add.ptr618, align 4, !dbg !12192
  %and619 = and i32 %406, 255, !dbg !12192
  %shl620 = shl i32 %and619, 24, !dbg !12192
  %407 = load i8*, i8** %in, align 8, !dbg !12192
  %408 = bitcast i8* %407 to i32*, !dbg !12192
  %add.ptr621 = getelementptr i32, i32* %408, i64 0, !dbg !12192
  %409 = load i32, i32* %add.ptr621, align 4, !dbg !12192
  %and622 = and i32 %409, 65280, !dbg !12192
  %shl623 = shl i32 %and622, 8, !dbg !12192
  %or624 = or i32 %shl620, %shl623, !dbg !12192
  %410 = load i8*, i8** %in, align 8, !dbg !12192
  %411 = bitcast i8* %410 to i32*, !dbg !12192
  %add.ptr625 = getelementptr i32, i32* %411, i64 0, !dbg !12192
  %412 = load i32, i32* %add.ptr625, align 4, !dbg !12192
  %and626 = and i32 %412, 16711680, !dbg !12192
  %shr627 = lshr i32 %and626, 8, !dbg !12192
  %or628 = or i32 %or624, %shr627, !dbg !12192
  %413 = load i8*, i8** %in, align 8, !dbg !12192
  %414 = bitcast i8* %413 to i32*, !dbg !12192
  %add.ptr629 = getelementptr i32, i32* %414, i64 0, !dbg !12192
  %415 = load i32, i32* %add.ptr629, align 4, !dbg !12192
  %and630 = and i32 %415, -16777216, !dbg !12192
  %shr631 = lshr i32 %and630, 24, !dbg !12192
  %or632 = or i32 %or628, %shr631, !dbg !12192
  br label %cond.end636, !dbg !12192

cond.false633:                                    ; preds = %do.end615
  %416 = load i8*, i8** %in, align 8, !dbg !12192
  %417 = bitcast i8* %416 to i32*, !dbg !12192
  %add.ptr634 = getelementptr i32, i32* %417, i64 0, !dbg !12192
  %418 = load i32, i32* %add.ptr634, align 4, !dbg !12192
  %call635 = call i32 @__fswab32(i32 %418) #8, !dbg !12192
  br label %cond.end636, !dbg !12192

cond.end636:                                      ; preds = %cond.false633, %cond.true617
  %cond637 = phi i32 [ %or632, %cond.true617 ], [ %call635, %cond.false633 ], !dbg !12192
  %and638 = and i32 %cond637, 65535, !dbg !12192
  %419 = load i32, i32* %_v613, align 4, !dbg !12192
  %and639 = and i32 %419, 65535, !dbg !12192
  %shl640 = shl i32 %and639, 16, !dbg !12192
  %or641 = or i32 %and638, %shl640, !dbg !12192
  %420 = call i1 @llvm.is.constant.i32(i32 %or641), !dbg !12192
  br i1 %420, label %cond.true642, label %cond.false758, !dbg !12192

cond.true642:                                     ; preds = %cond.end636
  %421 = load i8*, i8** %in, align 8, !dbg !12192
  %422 = bitcast i8* %421 to i32*, !dbg !12192
  %add.ptr643 = getelementptr i32, i32* %422, i64 0, !dbg !12192
  %423 = load i32, i32* %add.ptr643, align 4, !dbg !12192
  %424 = call i1 @llvm.is.constant.i32(i32 %423), !dbg !12192
  br i1 %424, label %cond.true644, label %cond.false660, !dbg !12192

cond.true644:                                     ; preds = %cond.true642
  %425 = load i8*, i8** %in, align 8, !dbg !12192
  %426 = bitcast i8* %425 to i32*, !dbg !12192
  %add.ptr645 = getelementptr i32, i32* %426, i64 0, !dbg !12192
  %427 = load i32, i32* %add.ptr645, align 4, !dbg !12192
  %and646 = and i32 %427, 255, !dbg !12192
  %shl647 = shl i32 %and646, 24, !dbg !12192
  %428 = load i8*, i8** %in, align 8, !dbg !12192
  %429 = bitcast i8* %428 to i32*, !dbg !12192
  %add.ptr648 = getelementptr i32, i32* %429, i64 0, !dbg !12192
  %430 = load i32, i32* %add.ptr648, align 4, !dbg !12192
  %and649 = and i32 %430, 65280, !dbg !12192
  %shl650 = shl i32 %and649, 8, !dbg !12192
  %or651 = or i32 %shl647, %shl650, !dbg !12192
  %431 = load i8*, i8** %in, align 8, !dbg !12192
  %432 = bitcast i8* %431 to i32*, !dbg !12192
  %add.ptr652 = getelementptr i32, i32* %432, i64 0, !dbg !12192
  %433 = load i32, i32* %add.ptr652, align 4, !dbg !12192
  %and653 = and i32 %433, 16711680, !dbg !12192
  %shr654 = lshr i32 %and653, 8, !dbg !12192
  %or655 = or i32 %or651, %shr654, !dbg !12192
  %434 = load i8*, i8** %in, align 8, !dbg !12192
  %435 = bitcast i8* %434 to i32*, !dbg !12192
  %add.ptr656 = getelementptr i32, i32* %435, i64 0, !dbg !12192
  %436 = load i32, i32* %add.ptr656, align 4, !dbg !12192
  %and657 = and i32 %436, -16777216, !dbg !12192
  %shr658 = lshr i32 %and657, 24, !dbg !12192
  %or659 = or i32 %or655, %shr658, !dbg !12192
  br label %cond.end663, !dbg !12192

cond.false660:                                    ; preds = %cond.true642
  %437 = load i8*, i8** %in, align 8, !dbg !12192
  %438 = bitcast i8* %437 to i32*, !dbg !12192
  %add.ptr661 = getelementptr i32, i32* %438, i64 0, !dbg !12192
  %439 = load i32, i32* %add.ptr661, align 4, !dbg !12192
  %call662 = call i32 @__fswab32(i32 %439) #8, !dbg !12192
  br label %cond.end663, !dbg !12192

cond.end663:                                      ; preds = %cond.false660, %cond.true644
  %cond664 = phi i32 [ %or659, %cond.true644 ], [ %call662, %cond.false660 ], !dbg !12192
  %and665 = and i32 %cond664, 65535, !dbg !12192
  %440 = load i32, i32* %_v613, align 4, !dbg !12192
  %and666 = and i32 %440, 65535, !dbg !12192
  %shl667 = shl i32 %and666, 16, !dbg !12192
  %or668 = or i32 %and665, %shl667, !dbg !12192
  %and669 = and i32 %or668, 255, !dbg !12192
  %shl670 = shl i32 %and669, 24, !dbg !12192
  %441 = load i8*, i8** %in, align 8, !dbg !12192
  %442 = bitcast i8* %441 to i32*, !dbg !12192
  %add.ptr671 = getelementptr i32, i32* %442, i64 0, !dbg !12192
  %443 = load i32, i32* %add.ptr671, align 4, !dbg !12192
  %444 = call i1 @llvm.is.constant.i32(i32 %443), !dbg !12192
  br i1 %444, label %cond.true672, label %cond.false688, !dbg !12192

cond.true672:                                     ; preds = %cond.end663
  %445 = load i8*, i8** %in, align 8, !dbg !12192
  %446 = bitcast i8* %445 to i32*, !dbg !12192
  %add.ptr673 = getelementptr i32, i32* %446, i64 0, !dbg !12192
  %447 = load i32, i32* %add.ptr673, align 4, !dbg !12192
  %and674 = and i32 %447, 255, !dbg !12192
  %shl675 = shl i32 %and674, 24, !dbg !12192
  %448 = load i8*, i8** %in, align 8, !dbg !12192
  %449 = bitcast i8* %448 to i32*, !dbg !12192
  %add.ptr676 = getelementptr i32, i32* %449, i64 0, !dbg !12192
  %450 = load i32, i32* %add.ptr676, align 4, !dbg !12192
  %and677 = and i32 %450, 65280, !dbg !12192
  %shl678 = shl i32 %and677, 8, !dbg !12192
  %or679 = or i32 %shl675, %shl678, !dbg !12192
  %451 = load i8*, i8** %in, align 8, !dbg !12192
  %452 = bitcast i8* %451 to i32*, !dbg !12192
  %add.ptr680 = getelementptr i32, i32* %452, i64 0, !dbg !12192
  %453 = load i32, i32* %add.ptr680, align 4, !dbg !12192
  %and681 = and i32 %453, 16711680, !dbg !12192
  %shr682 = lshr i32 %and681, 8, !dbg !12192
  %or683 = or i32 %or679, %shr682, !dbg !12192
  %454 = load i8*, i8** %in, align 8, !dbg !12192
  %455 = bitcast i8* %454 to i32*, !dbg !12192
  %add.ptr684 = getelementptr i32, i32* %455, i64 0, !dbg !12192
  %456 = load i32, i32* %add.ptr684, align 4, !dbg !12192
  %and685 = and i32 %456, -16777216, !dbg !12192
  %shr686 = lshr i32 %and685, 24, !dbg !12192
  %or687 = or i32 %or683, %shr686, !dbg !12192
  br label %cond.end691, !dbg !12192

cond.false688:                                    ; preds = %cond.end663
  %457 = load i8*, i8** %in, align 8, !dbg !12192
  %458 = bitcast i8* %457 to i32*, !dbg !12192
  %add.ptr689 = getelementptr i32, i32* %458, i64 0, !dbg !12192
  %459 = load i32, i32* %add.ptr689, align 4, !dbg !12192
  %call690 = call i32 @__fswab32(i32 %459) #8, !dbg !12192
  br label %cond.end691, !dbg !12192

cond.end691:                                      ; preds = %cond.false688, %cond.true672
  %cond692 = phi i32 [ %or687, %cond.true672 ], [ %call690, %cond.false688 ], !dbg !12192
  %and693 = and i32 %cond692, 65535, !dbg !12192
  %460 = load i32, i32* %_v613, align 4, !dbg !12192
  %and694 = and i32 %460, 65535, !dbg !12192
  %shl695 = shl i32 %and694, 16, !dbg !12192
  %or696 = or i32 %and693, %shl695, !dbg !12192
  %and697 = and i32 %or696, 65280, !dbg !12192
  %shl698 = shl i32 %and697, 8, !dbg !12192
  %or699 = or i32 %shl670, %shl698, !dbg !12192
  %461 = load i8*, i8** %in, align 8, !dbg !12192
  %462 = bitcast i8* %461 to i32*, !dbg !12192
  %add.ptr700 = getelementptr i32, i32* %462, i64 0, !dbg !12192
  %463 = load i32, i32* %add.ptr700, align 4, !dbg !12192
  %464 = call i1 @llvm.is.constant.i32(i32 %463), !dbg !12192
  br i1 %464, label %cond.true701, label %cond.false717, !dbg !12192

cond.true701:                                     ; preds = %cond.end691
  %465 = load i8*, i8** %in, align 8, !dbg !12192
  %466 = bitcast i8* %465 to i32*, !dbg !12192
  %add.ptr702 = getelementptr i32, i32* %466, i64 0, !dbg !12192
  %467 = load i32, i32* %add.ptr702, align 4, !dbg !12192
  %and703 = and i32 %467, 255, !dbg !12192
  %shl704 = shl i32 %and703, 24, !dbg !12192
  %468 = load i8*, i8** %in, align 8, !dbg !12192
  %469 = bitcast i8* %468 to i32*, !dbg !12192
  %add.ptr705 = getelementptr i32, i32* %469, i64 0, !dbg !12192
  %470 = load i32, i32* %add.ptr705, align 4, !dbg !12192
  %and706 = and i32 %470, 65280, !dbg !12192
  %shl707 = shl i32 %and706, 8, !dbg !12192
  %or708 = or i32 %shl704, %shl707, !dbg !12192
  %471 = load i8*, i8** %in, align 8, !dbg !12192
  %472 = bitcast i8* %471 to i32*, !dbg !12192
  %add.ptr709 = getelementptr i32, i32* %472, i64 0, !dbg !12192
  %473 = load i32, i32* %add.ptr709, align 4, !dbg !12192
  %and710 = and i32 %473, 16711680, !dbg !12192
  %shr711 = lshr i32 %and710, 8, !dbg !12192
  %or712 = or i32 %or708, %shr711, !dbg !12192
  %474 = load i8*, i8** %in, align 8, !dbg !12192
  %475 = bitcast i8* %474 to i32*, !dbg !12192
  %add.ptr713 = getelementptr i32, i32* %475, i64 0, !dbg !12192
  %476 = load i32, i32* %add.ptr713, align 4, !dbg !12192
  %and714 = and i32 %476, -16777216, !dbg !12192
  %shr715 = lshr i32 %and714, 24, !dbg !12192
  %or716 = or i32 %or712, %shr715, !dbg !12192
  br label %cond.end720, !dbg !12192

cond.false717:                                    ; preds = %cond.end691
  %477 = load i8*, i8** %in, align 8, !dbg !12192
  %478 = bitcast i8* %477 to i32*, !dbg !12192
  %add.ptr718 = getelementptr i32, i32* %478, i64 0, !dbg !12192
  %479 = load i32, i32* %add.ptr718, align 4, !dbg !12192
  %call719 = call i32 @__fswab32(i32 %479) #8, !dbg !12192
  br label %cond.end720, !dbg !12192

cond.end720:                                      ; preds = %cond.false717, %cond.true701
  %cond721 = phi i32 [ %or716, %cond.true701 ], [ %call719, %cond.false717 ], !dbg !12192
  %and722 = and i32 %cond721, 65535, !dbg !12192
  %480 = load i32, i32* %_v613, align 4, !dbg !12192
  %and723 = and i32 %480, 65535, !dbg !12192
  %shl724 = shl i32 %and723, 16, !dbg !12192
  %or725 = or i32 %and722, %shl724, !dbg !12192
  %and726 = and i32 %or725, 16711680, !dbg !12192
  %shr727 = lshr i32 %and726, 8, !dbg !12192
  %or728 = or i32 %or699, %shr727, !dbg !12192
  %481 = load i8*, i8** %in, align 8, !dbg !12192
  %482 = bitcast i8* %481 to i32*, !dbg !12192
  %add.ptr729 = getelementptr i32, i32* %482, i64 0, !dbg !12192
  %483 = load i32, i32* %add.ptr729, align 4, !dbg !12192
  %484 = call i1 @llvm.is.constant.i32(i32 %483), !dbg !12192
  br i1 %484, label %cond.true730, label %cond.false746, !dbg !12192

cond.true730:                                     ; preds = %cond.end720
  %485 = load i8*, i8** %in, align 8, !dbg !12192
  %486 = bitcast i8* %485 to i32*, !dbg !12192
  %add.ptr731 = getelementptr i32, i32* %486, i64 0, !dbg !12192
  %487 = load i32, i32* %add.ptr731, align 4, !dbg !12192
  %and732 = and i32 %487, 255, !dbg !12192
  %shl733 = shl i32 %and732, 24, !dbg !12192
  %488 = load i8*, i8** %in, align 8, !dbg !12192
  %489 = bitcast i8* %488 to i32*, !dbg !12192
  %add.ptr734 = getelementptr i32, i32* %489, i64 0, !dbg !12192
  %490 = load i32, i32* %add.ptr734, align 4, !dbg !12192
  %and735 = and i32 %490, 65280, !dbg !12192
  %shl736 = shl i32 %and735, 8, !dbg !12192
  %or737 = or i32 %shl733, %shl736, !dbg !12192
  %491 = load i8*, i8** %in, align 8, !dbg !12192
  %492 = bitcast i8* %491 to i32*, !dbg !12192
  %add.ptr738 = getelementptr i32, i32* %492, i64 0, !dbg !12192
  %493 = load i32, i32* %add.ptr738, align 4, !dbg !12192
  %and739 = and i32 %493, 16711680, !dbg !12192
  %shr740 = lshr i32 %and739, 8, !dbg !12192
  %or741 = or i32 %or737, %shr740, !dbg !12192
  %494 = load i8*, i8** %in, align 8, !dbg !12192
  %495 = bitcast i8* %494 to i32*, !dbg !12192
  %add.ptr742 = getelementptr i32, i32* %495, i64 0, !dbg !12192
  %496 = load i32, i32* %add.ptr742, align 4, !dbg !12192
  %and743 = and i32 %496, -16777216, !dbg !12192
  %shr744 = lshr i32 %and743, 24, !dbg !12192
  %or745 = or i32 %or741, %shr744, !dbg !12192
  br label %cond.end749, !dbg !12192

cond.false746:                                    ; preds = %cond.end720
  %497 = load i8*, i8** %in, align 8, !dbg !12192
  %498 = bitcast i8* %497 to i32*, !dbg !12192
  %add.ptr747 = getelementptr i32, i32* %498, i64 0, !dbg !12192
  %499 = load i32, i32* %add.ptr747, align 4, !dbg !12192
  %call748 = call i32 @__fswab32(i32 %499) #8, !dbg !12192
  br label %cond.end749, !dbg !12192

cond.end749:                                      ; preds = %cond.false746, %cond.true730
  %cond750 = phi i32 [ %or745, %cond.true730 ], [ %call748, %cond.false746 ], !dbg !12192
  %and751 = and i32 %cond750, 65535, !dbg !12192
  %500 = load i32, i32* %_v613, align 4, !dbg !12192
  %and752 = and i32 %500, 65535, !dbg !12192
  %shl753 = shl i32 %and752, 16, !dbg !12192
  %or754 = or i32 %and751, %shl753, !dbg !12192
  %and755 = and i32 %or754, -16777216, !dbg !12192
  %shr756 = lshr i32 %and755, 24, !dbg !12192
  %or757 = or i32 %or728, %shr756, !dbg !12192
  br label %cond.end786, !dbg !12192

cond.false758:                                    ; preds = %cond.end636
  %501 = load i8*, i8** %in, align 8, !dbg !12192
  %502 = bitcast i8* %501 to i32*, !dbg !12192
  %add.ptr759 = getelementptr i32, i32* %502, i64 0, !dbg !12192
  %503 = load i32, i32* %add.ptr759, align 4, !dbg !12192
  %504 = call i1 @llvm.is.constant.i32(i32 %503), !dbg !12192
  br i1 %504, label %cond.true760, label %cond.false776, !dbg !12192

cond.true760:                                     ; preds = %cond.false758
  %505 = load i8*, i8** %in, align 8, !dbg !12192
  %506 = bitcast i8* %505 to i32*, !dbg !12192
  %add.ptr761 = getelementptr i32, i32* %506, i64 0, !dbg !12192
  %507 = load i32, i32* %add.ptr761, align 4, !dbg !12192
  %and762 = and i32 %507, 255, !dbg !12192
  %shl763 = shl i32 %and762, 24, !dbg !12192
  %508 = load i8*, i8** %in, align 8, !dbg !12192
  %509 = bitcast i8* %508 to i32*, !dbg !12192
  %add.ptr764 = getelementptr i32, i32* %509, i64 0, !dbg !12192
  %510 = load i32, i32* %add.ptr764, align 4, !dbg !12192
  %and765 = and i32 %510, 65280, !dbg !12192
  %shl766 = shl i32 %and765, 8, !dbg !12192
  %or767 = or i32 %shl763, %shl766, !dbg !12192
  %511 = load i8*, i8** %in, align 8, !dbg !12192
  %512 = bitcast i8* %511 to i32*, !dbg !12192
  %add.ptr768 = getelementptr i32, i32* %512, i64 0, !dbg !12192
  %513 = load i32, i32* %add.ptr768, align 4, !dbg !12192
  %and769 = and i32 %513, 16711680, !dbg !12192
  %shr770 = lshr i32 %and769, 8, !dbg !12192
  %or771 = or i32 %or767, %shr770, !dbg !12192
  %514 = load i8*, i8** %in, align 8, !dbg !12192
  %515 = bitcast i8* %514 to i32*, !dbg !12192
  %add.ptr772 = getelementptr i32, i32* %515, i64 0, !dbg !12192
  %516 = load i32, i32* %add.ptr772, align 4, !dbg !12192
  %and773 = and i32 %516, -16777216, !dbg !12192
  %shr774 = lshr i32 %and773, 24, !dbg !12192
  %or775 = or i32 %or771, %shr774, !dbg !12192
  br label %cond.end779, !dbg !12192

cond.false776:                                    ; preds = %cond.false758
  %517 = load i8*, i8** %in, align 8, !dbg !12192
  %518 = bitcast i8* %517 to i32*, !dbg !12192
  %add.ptr777 = getelementptr i32, i32* %518, i64 0, !dbg !12192
  %519 = load i32, i32* %add.ptr777, align 4, !dbg !12192
  %call778 = call i32 @__fswab32(i32 %519) #8, !dbg !12192
  br label %cond.end779, !dbg !12192

cond.end779:                                      ; preds = %cond.false776, %cond.true760
  %cond780 = phi i32 [ %or775, %cond.true760 ], [ %call778, %cond.false776 ], !dbg !12192
  %and781 = and i32 %cond780, 65535, !dbg !12192
  %520 = load i32, i32* %_v613, align 4, !dbg !12192
  %and782 = and i32 %520, 65535, !dbg !12192
  %shl783 = shl i32 %and782, 16, !dbg !12192
  %or784 = or i32 %and781, %shl783, !dbg !12192
  %call785 = call i32 @__fswab32(i32 %or784) #8, !dbg !12192
  br label %cond.end786, !dbg !12192

cond.end786:                                      ; preds = %cond.end779, %cond.end749
  %cond787 = phi i32 [ %or757, %cond.end749 ], [ %call785, %cond.end779 ], !dbg !12192
  %521 = load i8*, i8** %in, align 8, !dbg !12192
  %522 = bitcast i8* %521 to i32*, !dbg !12192
  %add.ptr788 = getelementptr i32, i32* %522, i64 0, !dbg !12192
  store i32 %cond787, i32* %add.ptr788, align 4, !dbg !12192
  br label %do.end789, !dbg !12192

do.end789:                                        ; preds = %cond.end786
  call void @llvm.dbg.declare(metadata [4 x i32]* %_out, metadata !12195, metadata !DIExpression()), !dbg !12197
  %523 = bitcast [4 x i32]* %_out to i8*, !dbg !12197
  call void @llvm.memset.p0i8.i64(i8* align 16 %523, i8 0, i64 16, i1 false), !dbg !12197
  %524 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %mdev.addr, align 8, !dbg !12198
  %525 = load i8*, i8** %in, align 8, !dbg !12198
  %arraydecay791 = getelementptr inbounds [4 x i32], [4 x i32]* %_out, i64 0, i64 0, !dbg !12198
  %526 = bitcast i32* %arraydecay791 to i8*, !dbg !12198
  %call792 = call i32 @mlx5_cmd_exec(%struct.mlx5_core_dev* %524, i8* %525, i32 512, i8* %526, i32 16) #9, !dbg !12198
  store i32 %call792, i32* %tmp790, align 4, !dbg !12197
  %527 = load i32, i32* %tmp790, align 4, !dbg !12198
  store i32 %527, i32* %tmp, align 4, !dbg !12197
  %528 = load i32, i32* %tmp, align 4, !dbg !12197
  store i32 %528, i32* %err, align 4, !dbg !12200
  %529 = load i8*, i8** %in, align 8, !dbg !12201
  call void @kvfree(i8* %529) #9, !dbg !12202
  %530 = load i32, i32* %err, align 4, !dbg !12203
  store i32 %530, i32* %retval, align 4, !dbg !12204
  br label %return, !dbg !12204

return:                                           ; preds = %do.end789, %if.then40, %if.then36, %if.then
  %531 = load i32, i32* %retval, align 4, !dbg !12205
  ret i32 %531, !dbg !12205
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @mlx5_query_nic_vport_qkey_viol_cntr(%struct.mlx5_core_dev* %mdev, i16* %qkey_viol_cntr) #0 !dbg !12206 {
entry:
  %retval = alloca i32, align 4
  %mdev.addr = alloca %struct.mlx5_core_dev*, align 8
  %qkey_viol_cntr.addr = alloca i16*, align 8
  %out = alloca i32*, align 8
  %outlen = alloca i32, align 4
  store %struct.mlx5_core_dev* %mdev, %struct.mlx5_core_dev** %mdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_core_dev** %mdev.addr, metadata !12207, metadata !DIExpression()), !dbg !12208
  store i16* %qkey_viol_cntr, i16** %qkey_viol_cntr.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %qkey_viol_cntr.addr, metadata !12209, metadata !DIExpression()), !dbg !12210
  call void @llvm.dbg.declare(metadata i32** %out, metadata !12211, metadata !DIExpression()), !dbg !12212
  call void @llvm.dbg.declare(metadata i32* %outlen, metadata !12213, metadata !DIExpression()), !dbg !12214
  store i32 272, i32* %outlen, align 4, !dbg !12214
  %0 = load i32, i32* %outlen, align 4, !dbg !12215
  %conv = sext i32 %0 to i64, !dbg !12215
  %call = call i8* @kvzalloc(i64 %conv, i32 3264) #9, !dbg !12216
  %1 = bitcast i8* %call to i32*, !dbg !12216
  store i32* %1, i32** %out, align 8, !dbg !12217
  %2 = load i32*, i32** %out, align 8, !dbg !12218
  %tobool = icmp ne i32* %2, null, !dbg !12218
  br i1 %tobool, label %if.end, label %if.then, !dbg !12220

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !12221
  br label %return, !dbg !12221

if.end:                                           ; preds = %entry
  %3 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %mdev.addr, align 8, !dbg !12222
  %4 = load i32*, i32** %out, align 8, !dbg !12223
  %call1 = call i32 @mlx5_query_nic_vport_context(%struct.mlx5_core_dev* %3, i16 zeroext 0, i32* %4) #9, !dbg !12224
  %5 = load i32*, i32** %out, align 8, !dbg !12225
  %add.ptr = getelementptr i32, i32* %5, i64 30, !dbg !12225
  %6 = load i32, i32* %add.ptr, align 4, !dbg !12225
  %7 = call i1 @llvm.is.constant.i32(i32 %6), !dbg !12225
  br i1 %7, label %cond.true, label %cond.false, !dbg !12225

cond.true:                                        ; preds = %if.end
  %8 = load i32*, i32** %out, align 8, !dbg !12225
  %add.ptr2 = getelementptr i32, i32* %8, i64 30, !dbg !12225
  %9 = load i32, i32* %add.ptr2, align 4, !dbg !12225
  %and = and i32 %9, 255, !dbg !12225
  %shl = shl i32 %and, 24, !dbg !12225
  %10 = load i32*, i32** %out, align 8, !dbg !12225
  %add.ptr3 = getelementptr i32, i32* %10, i64 30, !dbg !12225
  %11 = load i32, i32* %add.ptr3, align 4, !dbg !12225
  %and4 = and i32 %11, 65280, !dbg !12225
  %shl5 = shl i32 %and4, 8, !dbg !12225
  %or = or i32 %shl, %shl5, !dbg !12225
  %12 = load i32*, i32** %out, align 8, !dbg !12225
  %add.ptr6 = getelementptr i32, i32* %12, i64 30, !dbg !12225
  %13 = load i32, i32* %add.ptr6, align 4, !dbg !12225
  %and7 = and i32 %13, 16711680, !dbg !12225
  %shr = lshr i32 %and7, 8, !dbg !12225
  %or8 = or i32 %or, %shr, !dbg !12225
  %14 = load i32*, i32** %out, align 8, !dbg !12225
  %add.ptr9 = getelementptr i32, i32* %14, i64 30, !dbg !12225
  %15 = load i32, i32* %add.ptr9, align 4, !dbg !12225
  %and10 = and i32 %15, -16777216, !dbg !12225
  %shr11 = lshr i32 %and10, 24, !dbg !12225
  %or12 = or i32 %or8, %shr11, !dbg !12225
  br label %cond.end, !dbg !12225

cond.false:                                       ; preds = %if.end
  %16 = load i32*, i32** %out, align 8, !dbg !12225
  %add.ptr13 = getelementptr i32, i32* %16, i64 30, !dbg !12225
  %17 = load i32, i32* %add.ptr13, align 4, !dbg !12225
  %call14 = call i32 @__fswab32(i32 %17) #8, !dbg !12225
  br label %cond.end, !dbg !12225

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %or12, %cond.true ], [ %call14, %cond.false ], !dbg !12225
  %shr15 = lshr i32 %cond, 16, !dbg !12225
  %and16 = and i32 %shr15, 65535, !dbg !12225
  %conv17 = trunc i32 %and16 to i16, !dbg !12225
  %18 = load i16*, i16** %qkey_viol_cntr.addr, align 8, !dbg !12226
  store i16 %conv17, i16* %18, align 2, !dbg !12227
  %19 = load i32*, i32** %out, align 8, !dbg !12228
  %20 = bitcast i32* %19 to i8*, !dbg !12228
  call void @kvfree(i8* %20) #9, !dbg !12229
  store i32 0, i32* %retval, align 4, !dbg !12230
  br label %return, !dbg !12230

return:                                           ; preds = %cond.end, %if.then
  %21 = load i32, i32* %retval, align 4, !dbg !12231
  ret i32 %21, !dbg !12231
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @mlx5_query_hca_vport_gid(%struct.mlx5_core_dev* %dev, i8 zeroext %other_vport, i8 zeroext %port_num, i16 zeroext %vf_num, i16 zeroext %gid_index, %union.ib_gid* %gid) #0 !dbg !12232 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.mlx5_core_dev*, align 8
  %other_vport.addr = alloca i8, align 1
  %port_num.addr = alloca i8, align 1
  %vf_num.addr = alloca i16, align 2
  %gid_index.addr = alloca i16, align 2
  %gid.addr = alloca %union.ib_gid*, align 8
  %in_sz = alloca i32, align 4
  %out_sz = alloca i32, align 4
  %is_group_manager = alloca i32, align 4
  %out = alloca i8*, align 8
  %in = alloca i8*, align 8
  %tmp = alloca %union.ib_gid*, align 8
  %tbsz = alloca i32, align 4
  %nout = alloca i32, align 4
  %err = alloca i32, align 4
  %_v = alloca i32, align 4
  %_v284 = alloca i32, align 4
  %_v463 = alloca i32, align 4
  %_v644 = alloca i32, align 4
  %_v874 = alloca i32, align 4
  store %struct.mlx5_core_dev* %dev, %struct.mlx5_core_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_core_dev** %dev.addr, metadata !12244, metadata !DIExpression()), !dbg !12245
  store i8 %other_vport, i8* %other_vport.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %other_vport.addr, metadata !12246, metadata !DIExpression()), !dbg !12247
  store i8 %port_num, i8* %port_num.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %port_num.addr, metadata !12248, metadata !DIExpression()), !dbg !12249
  store i16 %vf_num, i16* %vf_num.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %vf_num.addr, metadata !12250, metadata !DIExpression()), !dbg !12251
  store i16 %gid_index, i16* %gid_index.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %gid_index.addr, metadata !12252, metadata !DIExpression()), !dbg !12253
  store %union.ib_gid* %gid, %union.ib_gid** %gid.addr, align 8
  call void @llvm.dbg.declare(metadata %union.ib_gid** %gid.addr, metadata !12254, metadata !DIExpression()), !dbg !12255
  call void @llvm.dbg.declare(metadata i32* %in_sz, metadata !12256, metadata !DIExpression()), !dbg !12257
  store i32 16, i32* %in_sz, align 4, !dbg !12257
  call void @llvm.dbg.declare(metadata i32* %out_sz, metadata !12258, metadata !DIExpression()), !dbg !12259
  store i32 16, i32* %out_sz, align 4, !dbg !12259
  call void @llvm.dbg.declare(metadata i32* %is_group_manager, metadata !12260, metadata !DIExpression()), !dbg !12261
  call void @llvm.dbg.declare(metadata i8** %out, metadata !12262, metadata !DIExpression()), !dbg !12263
  store i8* null, i8** %out, align 8, !dbg !12263
  call void @llvm.dbg.declare(metadata i8** %in, metadata !12264, metadata !DIExpression()), !dbg !12265
  store i8* null, i8** %in, align 8, !dbg !12265
  call void @llvm.dbg.declare(metadata %union.ib_gid** %tmp, metadata !12266, metadata !DIExpression()), !dbg !12267
  call void @llvm.dbg.declare(metadata i32* %tbsz, metadata !12268, metadata !DIExpression()), !dbg !12269
  call void @llvm.dbg.declare(metadata i32* %nout, metadata !12270, metadata !DIExpression()), !dbg !12271
  call void @llvm.dbg.declare(metadata i32* %err, metadata !12272, metadata !DIExpression()), !dbg !12273
  %0 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !12274
  %caps = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %0, i32 0, i32 9, !dbg !12274
  %hca_cur = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps, i32 0, i32 0, !dbg !12274
  %arrayidx = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur, i64 0, i64 0, !dbg !12274
  %arraydecay = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx, i64 0, i64 0, !dbg !12274
  %add.ptr = getelementptr i32, i32* %arraydecay, i64 13, !dbg !12274
  %1 = load i32, i32* %add.ptr, align 4, !dbg !12274
  %2 = call i1 @llvm.is.constant.i32(i32 %1), !dbg !12274
  br i1 %2, label %cond.true, label %cond.false, !dbg !12274

cond.true:                                        ; preds = %entry
  %3 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !12274
  %caps1 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %3, i32 0, i32 9, !dbg !12274
  %hca_cur2 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps1, i32 0, i32 0, !dbg !12274
  %arrayidx3 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur2, i64 0, i64 0, !dbg !12274
  %arraydecay4 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx3, i64 0, i64 0, !dbg !12274
  %add.ptr5 = getelementptr i32, i32* %arraydecay4, i64 13, !dbg !12274
  %4 = load i32, i32* %add.ptr5, align 4, !dbg !12274
  %and = and i32 %4, 255, !dbg !12274
  %shl = shl i32 %and, 24, !dbg !12274
  %5 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !12274
  %caps6 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %5, i32 0, i32 9, !dbg !12274
  %hca_cur7 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps6, i32 0, i32 0, !dbg !12274
  %arrayidx8 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur7, i64 0, i64 0, !dbg !12274
  %arraydecay9 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx8, i64 0, i64 0, !dbg !12274
  %add.ptr10 = getelementptr i32, i32* %arraydecay9, i64 13, !dbg !12274
  %6 = load i32, i32* %add.ptr10, align 4, !dbg !12274
  %and11 = and i32 %6, 65280, !dbg !12274
  %shl12 = shl i32 %and11, 8, !dbg !12274
  %or = or i32 %shl, %shl12, !dbg !12274
  %7 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !12274
  %caps13 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %7, i32 0, i32 9, !dbg !12274
  %hca_cur14 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps13, i32 0, i32 0, !dbg !12274
  %arrayidx15 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur14, i64 0, i64 0, !dbg !12274
  %arraydecay16 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx15, i64 0, i64 0, !dbg !12274
  %add.ptr17 = getelementptr i32, i32* %arraydecay16, i64 13, !dbg !12274
  %8 = load i32, i32* %add.ptr17, align 4, !dbg !12274
  %and18 = and i32 %8, 16711680, !dbg !12274
  %shr = lshr i32 %and18, 8, !dbg !12274
  %or19 = or i32 %or, %shr, !dbg !12274
  %9 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !12274
  %caps20 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %9, i32 0, i32 9, !dbg !12274
  %hca_cur21 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps20, i32 0, i32 0, !dbg !12274
  %arrayidx22 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur21, i64 0, i64 0, !dbg !12274
  %arraydecay23 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx22, i64 0, i64 0, !dbg !12274
  %add.ptr24 = getelementptr i32, i32* %arraydecay23, i64 13, !dbg !12274
  %10 = load i32, i32* %add.ptr24, align 4, !dbg !12274
  %and25 = and i32 %10, -16777216, !dbg !12274
  %shr26 = lshr i32 %and25, 24, !dbg !12274
  %or27 = or i32 %or19, %shr26, !dbg !12274
  br label %cond.end, !dbg !12274

cond.false:                                       ; preds = %entry
  %11 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !12274
  %caps28 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %11, i32 0, i32 9, !dbg !12274
  %hca_cur29 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps28, i32 0, i32 0, !dbg !12274
  %arrayidx30 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur29, i64 0, i64 0, !dbg !12274
  %arraydecay31 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx30, i64 0, i64 0, !dbg !12274
  %add.ptr32 = getelementptr i32, i32* %arraydecay31, i64 13, !dbg !12274
  %12 = load i32, i32* %add.ptr32, align 4, !dbg !12274
  %call = call i32 @__fswab32(i32 %12) #8, !dbg !12274
  br label %cond.end, !dbg !12274

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %or27, %cond.true ], [ %call, %cond.false ], !dbg !12274
  %shr33 = lshr i32 %cond, 31, !dbg !12274
  %and34 = and i32 %shr33, 1, !dbg !12274
  store i32 %and34, i32* %is_group_manager, align 4, !dbg !12275
  %13 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !12276
  %caps35 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %13, i32 0, i32 9, !dbg !12276
  %hca_cur36 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps35, i32 0, i32 0, !dbg !12276
  %arrayidx37 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur36, i64 0, i64 0, !dbg !12276
  %arraydecay38 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx37, i64 0, i64 0, !dbg !12276
  %add.ptr39 = getelementptr i32, i32* %arraydecay38, i64 11, !dbg !12276
  %14 = load i32, i32* %add.ptr39, align 4, !dbg !12276
  %15 = call i1 @llvm.is.constant.i32(i32 %14), !dbg !12276
  br i1 %15, label %cond.true40, label %cond.false72, !dbg !12276

cond.true40:                                      ; preds = %cond.end
  %16 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !12276
  %caps41 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %16, i32 0, i32 9, !dbg !12276
  %hca_cur42 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps41, i32 0, i32 0, !dbg !12276
  %arrayidx43 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur42, i64 0, i64 0, !dbg !12276
  %arraydecay44 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx43, i64 0, i64 0, !dbg !12276
  %add.ptr45 = getelementptr i32, i32* %arraydecay44, i64 11, !dbg !12276
  %17 = load i32, i32* %add.ptr45, align 4, !dbg !12276
  %and46 = and i32 %17, 255, !dbg !12276
  %shl47 = shl i32 %and46, 24, !dbg !12276
  %18 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !12276
  %caps48 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %18, i32 0, i32 9, !dbg !12276
  %hca_cur49 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps48, i32 0, i32 0, !dbg !12276
  %arrayidx50 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur49, i64 0, i64 0, !dbg !12276
  %arraydecay51 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx50, i64 0, i64 0, !dbg !12276
  %add.ptr52 = getelementptr i32, i32* %arraydecay51, i64 11, !dbg !12276
  %19 = load i32, i32* %add.ptr52, align 4, !dbg !12276
  %and53 = and i32 %19, 65280, !dbg !12276
  %shl54 = shl i32 %and53, 8, !dbg !12276
  %or55 = or i32 %shl47, %shl54, !dbg !12276
  %20 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !12276
  %caps56 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %20, i32 0, i32 9, !dbg !12276
  %hca_cur57 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps56, i32 0, i32 0, !dbg !12276
  %arrayidx58 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur57, i64 0, i64 0, !dbg !12276
  %arraydecay59 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx58, i64 0, i64 0, !dbg !12276
  %add.ptr60 = getelementptr i32, i32* %arraydecay59, i64 11, !dbg !12276
  %21 = load i32, i32* %add.ptr60, align 4, !dbg !12276
  %and61 = and i32 %21, 16711680, !dbg !12276
  %shr62 = lshr i32 %and61, 8, !dbg !12276
  %or63 = or i32 %or55, %shr62, !dbg !12276
  %22 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !12276
  %caps64 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %22, i32 0, i32 9, !dbg !12276
  %hca_cur65 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps64, i32 0, i32 0, !dbg !12276
  %arrayidx66 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur65, i64 0, i64 0, !dbg !12276
  %arraydecay67 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx66, i64 0, i64 0, !dbg !12276
  %add.ptr68 = getelementptr i32, i32* %arraydecay67, i64 11, !dbg !12276
  %23 = load i32, i32* %add.ptr68, align 4, !dbg !12276
  %and69 = and i32 %23, -16777216, !dbg !12276
  %shr70 = lshr i32 %and69, 24, !dbg !12276
  %or71 = or i32 %or63, %shr70, !dbg !12276
  br label %cond.end79, !dbg !12276

cond.false72:                                     ; preds = %cond.end
  %24 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !12276
  %caps73 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %24, i32 0, i32 9, !dbg !12276
  %hca_cur74 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps73, i32 0, i32 0, !dbg !12276
  %arrayidx75 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur74, i64 0, i64 0, !dbg !12276
  %arraydecay76 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx75, i64 0, i64 0, !dbg !12276
  %add.ptr77 = getelementptr i32, i32* %arraydecay76, i64 11, !dbg !12276
  %25 = load i32, i32* %add.ptr77, align 4, !dbg !12276
  %call78 = call i32 @__fswab32(i32 %25) #8, !dbg !12276
  br label %cond.end79, !dbg !12276

cond.end79:                                       ; preds = %cond.false72, %cond.true40
  %cond80 = phi i32 [ %or71, %cond.true40 ], [ %call78, %cond.false72 ], !dbg !12276
  %shr81 = lshr i32 %cond80, 0, !dbg !12276
  %and82 = and i32 %shr81, 65535, !dbg !12276
  %conv = trunc i32 %and82 to i16, !dbg !12276
  %call83 = call i32 @mlx5_get_gid_table_len(i16 zeroext %conv) #9, !dbg !12277
  store i32 %call83, i32* %tbsz, align 4, !dbg !12278
  %26 = load i16, i16* %gid_index.addr, align 2, !dbg !12279
  %conv84 = zext i16 %26 to i32, !dbg !12279
  %27 = load i32, i32* %tbsz, align 4, !dbg !12281
  %cmp = icmp sgt i32 %conv84, %27, !dbg !12282
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !12283

land.lhs.true:                                    ; preds = %cond.end79
  %28 = load i16, i16* %gid_index.addr, align 2, !dbg !12284
  %conv86 = zext i16 %28 to i32, !dbg !12284
  %cmp87 = icmp ne i32 %conv86, 65535, !dbg !12285
  br i1 %cmp87, label %if.then, label %if.end, !dbg !12286

if.then:                                          ; preds = %land.lhs.true
  store i32 -22, i32* %retval, align 4, !dbg !12287
  br label %return, !dbg !12287

if.end:                                           ; preds = %land.lhs.true, %cond.end79
  %29 = load i16, i16* %gid_index.addr, align 2, !dbg !12288
  %conv89 = zext i16 %29 to i32, !dbg !12288
  %cmp90 = icmp eq i32 %conv89, 65535, !dbg !12290
  br i1 %cmp90, label %if.then92, label %if.else, !dbg !12291

if.then92:                                        ; preds = %if.end
  %30 = load i32, i32* %tbsz, align 4, !dbg !12292
  store i32 %30, i32* %nout, align 4, !dbg !12293
  br label %if.end93, !dbg !12294

if.else:                                          ; preds = %if.end
  store i32 1, i32* %nout, align 4, !dbg !12295
  br label %if.end93

if.end93:                                         ; preds = %if.else, %if.then92
  %31 = load i32, i32* %nout, align 4, !dbg !12296
  %conv94 = sext i32 %31 to i64, !dbg !12296
  %mul = mul i64 %conv94, 16, !dbg !12297
  %32 = load i32, i32* %out_sz, align 4, !dbg !12298
  %conv95 = sext i32 %32 to i64, !dbg !12298
  %add = add i64 %conv95, %mul, !dbg !12298
  %conv96 = trunc i64 %add to i32, !dbg !12298
  store i32 %conv96, i32* %out_sz, align 4, !dbg !12298
  %33 = load i32, i32* %in_sz, align 4, !dbg !12299
  %conv97 = sext i32 %33 to i64, !dbg !12299
  %call98 = call i8* @kzalloc(i64 %conv97, i32 3264) #9, !dbg !12300
  store i8* %call98, i8** %in, align 8, !dbg !12301
  %34 = load i32, i32* %out_sz, align 4, !dbg !12302
  %conv99 = sext i32 %34 to i64, !dbg !12302
  %call100 = call i8* @kzalloc(i64 %conv99, i32 3264) #9, !dbg !12303
  store i8* %call100, i8** %out, align 8, !dbg !12304
  %35 = load i8*, i8** %in, align 8, !dbg !12305
  %tobool = icmp ne i8* %35, null, !dbg !12305
  br i1 %tobool, label %lor.lhs.false, label %if.then102, !dbg !12307

lor.lhs.false:                                    ; preds = %if.end93
  %36 = load i8*, i8** %out, align 8, !dbg !12308
  %tobool101 = icmp ne i8* %36, null, !dbg !12308
  br i1 %tobool101, label %if.end103, label %if.then102, !dbg !12309

if.then102:                                       ; preds = %lor.lhs.false, %if.end93
  store i32 -12, i32* %err, align 4, !dbg !12310
  br label %out1063, !dbg !12312

if.end103:                                        ; preds = %lor.lhs.false
  br label %do.body, !dbg !12313

do.body:                                          ; preds = %if.end103
  call void @llvm.dbg.declare(metadata i32* %_v, metadata !12314, metadata !DIExpression()), !dbg !12316
  store i32 1892, i32* %_v, align 4, !dbg !12316
  br label %do.body104, !dbg !12316

do.body104:                                       ; preds = %do.body
  br label %do.end, !dbg !12317

do.end:                                           ; preds = %do.body104
  %37 = load i8*, i8** %in, align 8, !dbg !12316
  %38 = bitcast i8* %37 to i32*, !dbg !12316
  %add.ptr105 = getelementptr i32, i32* %38, i64 0, !dbg !12316
  %39 = load i32, i32* %add.ptr105, align 4, !dbg !12316
  %40 = call i1 @llvm.is.constant.i32(i32 %39), !dbg !12316
  br i1 %40, label %cond.true106, label %cond.false122, !dbg !12316

cond.true106:                                     ; preds = %do.end
  %41 = load i8*, i8** %in, align 8, !dbg !12316
  %42 = bitcast i8* %41 to i32*, !dbg !12316
  %add.ptr107 = getelementptr i32, i32* %42, i64 0, !dbg !12316
  %43 = load i32, i32* %add.ptr107, align 4, !dbg !12316
  %and108 = and i32 %43, 255, !dbg !12316
  %shl109 = shl i32 %and108, 24, !dbg !12316
  %44 = load i8*, i8** %in, align 8, !dbg !12316
  %45 = bitcast i8* %44 to i32*, !dbg !12316
  %add.ptr110 = getelementptr i32, i32* %45, i64 0, !dbg !12316
  %46 = load i32, i32* %add.ptr110, align 4, !dbg !12316
  %and111 = and i32 %46, 65280, !dbg !12316
  %shl112 = shl i32 %and111, 8, !dbg !12316
  %or113 = or i32 %shl109, %shl112, !dbg !12316
  %47 = load i8*, i8** %in, align 8, !dbg !12316
  %48 = bitcast i8* %47 to i32*, !dbg !12316
  %add.ptr114 = getelementptr i32, i32* %48, i64 0, !dbg !12316
  %49 = load i32, i32* %add.ptr114, align 4, !dbg !12316
  %and115 = and i32 %49, 16711680, !dbg !12316
  %shr116 = lshr i32 %and115, 8, !dbg !12316
  %or117 = or i32 %or113, %shr116, !dbg !12316
  %50 = load i8*, i8** %in, align 8, !dbg !12316
  %51 = bitcast i8* %50 to i32*, !dbg !12316
  %add.ptr118 = getelementptr i32, i32* %51, i64 0, !dbg !12316
  %52 = load i32, i32* %add.ptr118, align 4, !dbg !12316
  %and119 = and i32 %52, -16777216, !dbg !12316
  %shr120 = lshr i32 %and119, 24, !dbg !12316
  %or121 = or i32 %or117, %shr120, !dbg !12316
  br label %cond.end125, !dbg !12316

cond.false122:                                    ; preds = %do.end
  %53 = load i8*, i8** %in, align 8, !dbg !12316
  %54 = bitcast i8* %53 to i32*, !dbg !12316
  %add.ptr123 = getelementptr i32, i32* %54, i64 0, !dbg !12316
  %55 = load i32, i32* %add.ptr123, align 4, !dbg !12316
  %call124 = call i32 @__fswab32(i32 %55) #8, !dbg !12316
  br label %cond.end125, !dbg !12316

cond.end125:                                      ; preds = %cond.false122, %cond.true106
  %cond126 = phi i32 [ %or121, %cond.true106 ], [ %call124, %cond.false122 ], !dbg !12316
  %and127 = and i32 %cond126, 65535, !dbg !12316
  %56 = load i32, i32* %_v, align 4, !dbg !12316
  %and128 = and i32 %56, 65535, !dbg !12316
  %shl129 = shl i32 %and128, 16, !dbg !12316
  %or130 = or i32 %and127, %shl129, !dbg !12316
  %57 = call i1 @llvm.is.constant.i32(i32 %or130), !dbg !12316
  br i1 %57, label %cond.true131, label %cond.false247, !dbg !12316

cond.true131:                                     ; preds = %cond.end125
  %58 = load i8*, i8** %in, align 8, !dbg !12316
  %59 = bitcast i8* %58 to i32*, !dbg !12316
  %add.ptr132 = getelementptr i32, i32* %59, i64 0, !dbg !12316
  %60 = load i32, i32* %add.ptr132, align 4, !dbg !12316
  %61 = call i1 @llvm.is.constant.i32(i32 %60), !dbg !12316
  br i1 %61, label %cond.true133, label %cond.false149, !dbg !12316

cond.true133:                                     ; preds = %cond.true131
  %62 = load i8*, i8** %in, align 8, !dbg !12316
  %63 = bitcast i8* %62 to i32*, !dbg !12316
  %add.ptr134 = getelementptr i32, i32* %63, i64 0, !dbg !12316
  %64 = load i32, i32* %add.ptr134, align 4, !dbg !12316
  %and135 = and i32 %64, 255, !dbg !12316
  %shl136 = shl i32 %and135, 24, !dbg !12316
  %65 = load i8*, i8** %in, align 8, !dbg !12316
  %66 = bitcast i8* %65 to i32*, !dbg !12316
  %add.ptr137 = getelementptr i32, i32* %66, i64 0, !dbg !12316
  %67 = load i32, i32* %add.ptr137, align 4, !dbg !12316
  %and138 = and i32 %67, 65280, !dbg !12316
  %shl139 = shl i32 %and138, 8, !dbg !12316
  %or140 = or i32 %shl136, %shl139, !dbg !12316
  %68 = load i8*, i8** %in, align 8, !dbg !12316
  %69 = bitcast i8* %68 to i32*, !dbg !12316
  %add.ptr141 = getelementptr i32, i32* %69, i64 0, !dbg !12316
  %70 = load i32, i32* %add.ptr141, align 4, !dbg !12316
  %and142 = and i32 %70, 16711680, !dbg !12316
  %shr143 = lshr i32 %and142, 8, !dbg !12316
  %or144 = or i32 %or140, %shr143, !dbg !12316
  %71 = load i8*, i8** %in, align 8, !dbg !12316
  %72 = bitcast i8* %71 to i32*, !dbg !12316
  %add.ptr145 = getelementptr i32, i32* %72, i64 0, !dbg !12316
  %73 = load i32, i32* %add.ptr145, align 4, !dbg !12316
  %and146 = and i32 %73, -16777216, !dbg !12316
  %shr147 = lshr i32 %and146, 24, !dbg !12316
  %or148 = or i32 %or144, %shr147, !dbg !12316
  br label %cond.end152, !dbg !12316

cond.false149:                                    ; preds = %cond.true131
  %74 = load i8*, i8** %in, align 8, !dbg !12316
  %75 = bitcast i8* %74 to i32*, !dbg !12316
  %add.ptr150 = getelementptr i32, i32* %75, i64 0, !dbg !12316
  %76 = load i32, i32* %add.ptr150, align 4, !dbg !12316
  %call151 = call i32 @__fswab32(i32 %76) #8, !dbg !12316
  br label %cond.end152, !dbg !12316

cond.end152:                                      ; preds = %cond.false149, %cond.true133
  %cond153 = phi i32 [ %or148, %cond.true133 ], [ %call151, %cond.false149 ], !dbg !12316
  %and154 = and i32 %cond153, 65535, !dbg !12316
  %77 = load i32, i32* %_v, align 4, !dbg !12316
  %and155 = and i32 %77, 65535, !dbg !12316
  %shl156 = shl i32 %and155, 16, !dbg !12316
  %or157 = or i32 %and154, %shl156, !dbg !12316
  %and158 = and i32 %or157, 255, !dbg !12316
  %shl159 = shl i32 %and158, 24, !dbg !12316
  %78 = load i8*, i8** %in, align 8, !dbg !12316
  %79 = bitcast i8* %78 to i32*, !dbg !12316
  %add.ptr160 = getelementptr i32, i32* %79, i64 0, !dbg !12316
  %80 = load i32, i32* %add.ptr160, align 4, !dbg !12316
  %81 = call i1 @llvm.is.constant.i32(i32 %80), !dbg !12316
  br i1 %81, label %cond.true161, label %cond.false177, !dbg !12316

cond.true161:                                     ; preds = %cond.end152
  %82 = load i8*, i8** %in, align 8, !dbg !12316
  %83 = bitcast i8* %82 to i32*, !dbg !12316
  %add.ptr162 = getelementptr i32, i32* %83, i64 0, !dbg !12316
  %84 = load i32, i32* %add.ptr162, align 4, !dbg !12316
  %and163 = and i32 %84, 255, !dbg !12316
  %shl164 = shl i32 %and163, 24, !dbg !12316
  %85 = load i8*, i8** %in, align 8, !dbg !12316
  %86 = bitcast i8* %85 to i32*, !dbg !12316
  %add.ptr165 = getelementptr i32, i32* %86, i64 0, !dbg !12316
  %87 = load i32, i32* %add.ptr165, align 4, !dbg !12316
  %and166 = and i32 %87, 65280, !dbg !12316
  %shl167 = shl i32 %and166, 8, !dbg !12316
  %or168 = or i32 %shl164, %shl167, !dbg !12316
  %88 = load i8*, i8** %in, align 8, !dbg !12316
  %89 = bitcast i8* %88 to i32*, !dbg !12316
  %add.ptr169 = getelementptr i32, i32* %89, i64 0, !dbg !12316
  %90 = load i32, i32* %add.ptr169, align 4, !dbg !12316
  %and170 = and i32 %90, 16711680, !dbg !12316
  %shr171 = lshr i32 %and170, 8, !dbg !12316
  %or172 = or i32 %or168, %shr171, !dbg !12316
  %91 = load i8*, i8** %in, align 8, !dbg !12316
  %92 = bitcast i8* %91 to i32*, !dbg !12316
  %add.ptr173 = getelementptr i32, i32* %92, i64 0, !dbg !12316
  %93 = load i32, i32* %add.ptr173, align 4, !dbg !12316
  %and174 = and i32 %93, -16777216, !dbg !12316
  %shr175 = lshr i32 %and174, 24, !dbg !12316
  %or176 = or i32 %or172, %shr175, !dbg !12316
  br label %cond.end180, !dbg !12316

cond.false177:                                    ; preds = %cond.end152
  %94 = load i8*, i8** %in, align 8, !dbg !12316
  %95 = bitcast i8* %94 to i32*, !dbg !12316
  %add.ptr178 = getelementptr i32, i32* %95, i64 0, !dbg !12316
  %96 = load i32, i32* %add.ptr178, align 4, !dbg !12316
  %call179 = call i32 @__fswab32(i32 %96) #8, !dbg !12316
  br label %cond.end180, !dbg !12316

cond.end180:                                      ; preds = %cond.false177, %cond.true161
  %cond181 = phi i32 [ %or176, %cond.true161 ], [ %call179, %cond.false177 ], !dbg !12316
  %and182 = and i32 %cond181, 65535, !dbg !12316
  %97 = load i32, i32* %_v, align 4, !dbg !12316
  %and183 = and i32 %97, 65535, !dbg !12316
  %shl184 = shl i32 %and183, 16, !dbg !12316
  %or185 = or i32 %and182, %shl184, !dbg !12316
  %and186 = and i32 %or185, 65280, !dbg !12316
  %shl187 = shl i32 %and186, 8, !dbg !12316
  %or188 = or i32 %shl159, %shl187, !dbg !12316
  %98 = load i8*, i8** %in, align 8, !dbg !12316
  %99 = bitcast i8* %98 to i32*, !dbg !12316
  %add.ptr189 = getelementptr i32, i32* %99, i64 0, !dbg !12316
  %100 = load i32, i32* %add.ptr189, align 4, !dbg !12316
  %101 = call i1 @llvm.is.constant.i32(i32 %100), !dbg !12316
  br i1 %101, label %cond.true190, label %cond.false206, !dbg !12316

cond.true190:                                     ; preds = %cond.end180
  %102 = load i8*, i8** %in, align 8, !dbg !12316
  %103 = bitcast i8* %102 to i32*, !dbg !12316
  %add.ptr191 = getelementptr i32, i32* %103, i64 0, !dbg !12316
  %104 = load i32, i32* %add.ptr191, align 4, !dbg !12316
  %and192 = and i32 %104, 255, !dbg !12316
  %shl193 = shl i32 %and192, 24, !dbg !12316
  %105 = load i8*, i8** %in, align 8, !dbg !12316
  %106 = bitcast i8* %105 to i32*, !dbg !12316
  %add.ptr194 = getelementptr i32, i32* %106, i64 0, !dbg !12316
  %107 = load i32, i32* %add.ptr194, align 4, !dbg !12316
  %and195 = and i32 %107, 65280, !dbg !12316
  %shl196 = shl i32 %and195, 8, !dbg !12316
  %or197 = or i32 %shl193, %shl196, !dbg !12316
  %108 = load i8*, i8** %in, align 8, !dbg !12316
  %109 = bitcast i8* %108 to i32*, !dbg !12316
  %add.ptr198 = getelementptr i32, i32* %109, i64 0, !dbg !12316
  %110 = load i32, i32* %add.ptr198, align 4, !dbg !12316
  %and199 = and i32 %110, 16711680, !dbg !12316
  %shr200 = lshr i32 %and199, 8, !dbg !12316
  %or201 = or i32 %or197, %shr200, !dbg !12316
  %111 = load i8*, i8** %in, align 8, !dbg !12316
  %112 = bitcast i8* %111 to i32*, !dbg !12316
  %add.ptr202 = getelementptr i32, i32* %112, i64 0, !dbg !12316
  %113 = load i32, i32* %add.ptr202, align 4, !dbg !12316
  %and203 = and i32 %113, -16777216, !dbg !12316
  %shr204 = lshr i32 %and203, 24, !dbg !12316
  %or205 = or i32 %or201, %shr204, !dbg !12316
  br label %cond.end209, !dbg !12316

cond.false206:                                    ; preds = %cond.end180
  %114 = load i8*, i8** %in, align 8, !dbg !12316
  %115 = bitcast i8* %114 to i32*, !dbg !12316
  %add.ptr207 = getelementptr i32, i32* %115, i64 0, !dbg !12316
  %116 = load i32, i32* %add.ptr207, align 4, !dbg !12316
  %call208 = call i32 @__fswab32(i32 %116) #8, !dbg !12316
  br label %cond.end209, !dbg !12316

cond.end209:                                      ; preds = %cond.false206, %cond.true190
  %cond210 = phi i32 [ %or205, %cond.true190 ], [ %call208, %cond.false206 ], !dbg !12316
  %and211 = and i32 %cond210, 65535, !dbg !12316
  %117 = load i32, i32* %_v, align 4, !dbg !12316
  %and212 = and i32 %117, 65535, !dbg !12316
  %shl213 = shl i32 %and212, 16, !dbg !12316
  %or214 = or i32 %and211, %shl213, !dbg !12316
  %and215 = and i32 %or214, 16711680, !dbg !12316
  %shr216 = lshr i32 %and215, 8, !dbg !12316
  %or217 = or i32 %or188, %shr216, !dbg !12316
  %118 = load i8*, i8** %in, align 8, !dbg !12316
  %119 = bitcast i8* %118 to i32*, !dbg !12316
  %add.ptr218 = getelementptr i32, i32* %119, i64 0, !dbg !12316
  %120 = load i32, i32* %add.ptr218, align 4, !dbg !12316
  %121 = call i1 @llvm.is.constant.i32(i32 %120), !dbg !12316
  br i1 %121, label %cond.true219, label %cond.false235, !dbg !12316

cond.true219:                                     ; preds = %cond.end209
  %122 = load i8*, i8** %in, align 8, !dbg !12316
  %123 = bitcast i8* %122 to i32*, !dbg !12316
  %add.ptr220 = getelementptr i32, i32* %123, i64 0, !dbg !12316
  %124 = load i32, i32* %add.ptr220, align 4, !dbg !12316
  %and221 = and i32 %124, 255, !dbg !12316
  %shl222 = shl i32 %and221, 24, !dbg !12316
  %125 = load i8*, i8** %in, align 8, !dbg !12316
  %126 = bitcast i8* %125 to i32*, !dbg !12316
  %add.ptr223 = getelementptr i32, i32* %126, i64 0, !dbg !12316
  %127 = load i32, i32* %add.ptr223, align 4, !dbg !12316
  %and224 = and i32 %127, 65280, !dbg !12316
  %shl225 = shl i32 %and224, 8, !dbg !12316
  %or226 = or i32 %shl222, %shl225, !dbg !12316
  %128 = load i8*, i8** %in, align 8, !dbg !12316
  %129 = bitcast i8* %128 to i32*, !dbg !12316
  %add.ptr227 = getelementptr i32, i32* %129, i64 0, !dbg !12316
  %130 = load i32, i32* %add.ptr227, align 4, !dbg !12316
  %and228 = and i32 %130, 16711680, !dbg !12316
  %shr229 = lshr i32 %and228, 8, !dbg !12316
  %or230 = or i32 %or226, %shr229, !dbg !12316
  %131 = load i8*, i8** %in, align 8, !dbg !12316
  %132 = bitcast i8* %131 to i32*, !dbg !12316
  %add.ptr231 = getelementptr i32, i32* %132, i64 0, !dbg !12316
  %133 = load i32, i32* %add.ptr231, align 4, !dbg !12316
  %and232 = and i32 %133, -16777216, !dbg !12316
  %shr233 = lshr i32 %and232, 24, !dbg !12316
  %or234 = or i32 %or230, %shr233, !dbg !12316
  br label %cond.end238, !dbg !12316

cond.false235:                                    ; preds = %cond.end209
  %134 = load i8*, i8** %in, align 8, !dbg !12316
  %135 = bitcast i8* %134 to i32*, !dbg !12316
  %add.ptr236 = getelementptr i32, i32* %135, i64 0, !dbg !12316
  %136 = load i32, i32* %add.ptr236, align 4, !dbg !12316
  %call237 = call i32 @__fswab32(i32 %136) #8, !dbg !12316
  br label %cond.end238, !dbg !12316

cond.end238:                                      ; preds = %cond.false235, %cond.true219
  %cond239 = phi i32 [ %or234, %cond.true219 ], [ %call237, %cond.false235 ], !dbg !12316
  %and240 = and i32 %cond239, 65535, !dbg !12316
  %137 = load i32, i32* %_v, align 4, !dbg !12316
  %and241 = and i32 %137, 65535, !dbg !12316
  %shl242 = shl i32 %and241, 16, !dbg !12316
  %or243 = or i32 %and240, %shl242, !dbg !12316
  %and244 = and i32 %or243, -16777216, !dbg !12316
  %shr245 = lshr i32 %and244, 24, !dbg !12316
  %or246 = or i32 %or217, %shr245, !dbg !12316
  br label %cond.end275, !dbg !12316

cond.false247:                                    ; preds = %cond.end125
  %138 = load i8*, i8** %in, align 8, !dbg !12316
  %139 = bitcast i8* %138 to i32*, !dbg !12316
  %add.ptr248 = getelementptr i32, i32* %139, i64 0, !dbg !12316
  %140 = load i32, i32* %add.ptr248, align 4, !dbg !12316
  %141 = call i1 @llvm.is.constant.i32(i32 %140), !dbg !12316
  br i1 %141, label %cond.true249, label %cond.false265, !dbg !12316

cond.true249:                                     ; preds = %cond.false247
  %142 = load i8*, i8** %in, align 8, !dbg !12316
  %143 = bitcast i8* %142 to i32*, !dbg !12316
  %add.ptr250 = getelementptr i32, i32* %143, i64 0, !dbg !12316
  %144 = load i32, i32* %add.ptr250, align 4, !dbg !12316
  %and251 = and i32 %144, 255, !dbg !12316
  %shl252 = shl i32 %and251, 24, !dbg !12316
  %145 = load i8*, i8** %in, align 8, !dbg !12316
  %146 = bitcast i8* %145 to i32*, !dbg !12316
  %add.ptr253 = getelementptr i32, i32* %146, i64 0, !dbg !12316
  %147 = load i32, i32* %add.ptr253, align 4, !dbg !12316
  %and254 = and i32 %147, 65280, !dbg !12316
  %shl255 = shl i32 %and254, 8, !dbg !12316
  %or256 = or i32 %shl252, %shl255, !dbg !12316
  %148 = load i8*, i8** %in, align 8, !dbg !12316
  %149 = bitcast i8* %148 to i32*, !dbg !12316
  %add.ptr257 = getelementptr i32, i32* %149, i64 0, !dbg !12316
  %150 = load i32, i32* %add.ptr257, align 4, !dbg !12316
  %and258 = and i32 %150, 16711680, !dbg !12316
  %shr259 = lshr i32 %and258, 8, !dbg !12316
  %or260 = or i32 %or256, %shr259, !dbg !12316
  %151 = load i8*, i8** %in, align 8, !dbg !12316
  %152 = bitcast i8* %151 to i32*, !dbg !12316
  %add.ptr261 = getelementptr i32, i32* %152, i64 0, !dbg !12316
  %153 = load i32, i32* %add.ptr261, align 4, !dbg !12316
  %and262 = and i32 %153, -16777216, !dbg !12316
  %shr263 = lshr i32 %and262, 24, !dbg !12316
  %or264 = or i32 %or260, %shr263, !dbg !12316
  br label %cond.end268, !dbg !12316

cond.false265:                                    ; preds = %cond.false247
  %154 = load i8*, i8** %in, align 8, !dbg !12316
  %155 = bitcast i8* %154 to i32*, !dbg !12316
  %add.ptr266 = getelementptr i32, i32* %155, i64 0, !dbg !12316
  %156 = load i32, i32* %add.ptr266, align 4, !dbg !12316
  %call267 = call i32 @__fswab32(i32 %156) #8, !dbg !12316
  br label %cond.end268, !dbg !12316

cond.end268:                                      ; preds = %cond.false265, %cond.true249
  %cond269 = phi i32 [ %or264, %cond.true249 ], [ %call267, %cond.false265 ], !dbg !12316
  %and270 = and i32 %cond269, 65535, !dbg !12316
  %157 = load i32, i32* %_v, align 4, !dbg !12316
  %and271 = and i32 %157, 65535, !dbg !12316
  %shl272 = shl i32 %and271, 16, !dbg !12316
  %or273 = or i32 %and270, %shl272, !dbg !12316
  %call274 = call i32 @__fswab32(i32 %or273) #8, !dbg !12316
  br label %cond.end275, !dbg !12316

cond.end275:                                      ; preds = %cond.end268, %cond.end238
  %cond276 = phi i32 [ %or246, %cond.end238 ], [ %call274, %cond.end268 ], !dbg !12316
  %158 = load i8*, i8** %in, align 8, !dbg !12316
  %159 = bitcast i8* %158 to i32*, !dbg !12316
  %add.ptr277 = getelementptr i32, i32* %159, i64 0, !dbg !12316
  store i32 %cond276, i32* %add.ptr277, align 4, !dbg !12316
  br label %do.end278, !dbg !12316

do.end278:                                        ; preds = %cond.end275
  %160 = load i8, i8* %other_vport.addr, align 1, !dbg !12319
  %tobool279 = icmp ne i8 %160, 0, !dbg !12319
  br i1 %tobool279, label %if.then280, label %if.end642, !dbg !12321

if.then280:                                       ; preds = %do.end278
  %161 = load i32, i32* %is_group_manager, align 4, !dbg !12322
  %tobool281 = icmp ne i32 %161, 0, !dbg !12322
  br i1 %tobool281, label %if.then282, label %if.else640, !dbg !12325

if.then282:                                       ; preds = %if.then280
  br label %do.body283, !dbg !12326

do.body283:                                       ; preds = %if.then282
  call void @llvm.dbg.declare(metadata i32* %_v284, metadata !12328, metadata !DIExpression()), !dbg !12330
  %162 = load i16, i16* %vf_num.addr, align 2, !dbg !12330
  %conv285 = zext i16 %162 to i32, !dbg !12330
  store i32 %conv285, i32* %_v284, align 4, !dbg !12330
  br label %do.body286, !dbg !12330

do.body286:                                       ; preds = %do.body283
  br label %do.end287, !dbg !12331

do.end287:                                        ; preds = %do.body286
  %163 = load i8*, i8** %in, align 8, !dbg !12330
  %164 = bitcast i8* %163 to i32*, !dbg !12330
  %add.ptr288 = getelementptr i32, i32* %164, i64 2, !dbg !12330
  %165 = load i32, i32* %add.ptr288, align 4, !dbg !12330
  %166 = call i1 @llvm.is.constant.i32(i32 %165), !dbg !12330
  br i1 %166, label %cond.true289, label %cond.false305, !dbg !12330

cond.true289:                                     ; preds = %do.end287
  %167 = load i8*, i8** %in, align 8, !dbg !12330
  %168 = bitcast i8* %167 to i32*, !dbg !12330
  %add.ptr290 = getelementptr i32, i32* %168, i64 2, !dbg !12330
  %169 = load i32, i32* %add.ptr290, align 4, !dbg !12330
  %and291 = and i32 %169, 255, !dbg !12330
  %shl292 = shl i32 %and291, 24, !dbg !12330
  %170 = load i8*, i8** %in, align 8, !dbg !12330
  %171 = bitcast i8* %170 to i32*, !dbg !12330
  %add.ptr293 = getelementptr i32, i32* %171, i64 2, !dbg !12330
  %172 = load i32, i32* %add.ptr293, align 4, !dbg !12330
  %and294 = and i32 %172, 65280, !dbg !12330
  %shl295 = shl i32 %and294, 8, !dbg !12330
  %or296 = or i32 %shl292, %shl295, !dbg !12330
  %173 = load i8*, i8** %in, align 8, !dbg !12330
  %174 = bitcast i8* %173 to i32*, !dbg !12330
  %add.ptr297 = getelementptr i32, i32* %174, i64 2, !dbg !12330
  %175 = load i32, i32* %add.ptr297, align 4, !dbg !12330
  %and298 = and i32 %175, 16711680, !dbg !12330
  %shr299 = lshr i32 %and298, 8, !dbg !12330
  %or300 = or i32 %or296, %shr299, !dbg !12330
  %176 = load i8*, i8** %in, align 8, !dbg !12330
  %177 = bitcast i8* %176 to i32*, !dbg !12330
  %add.ptr301 = getelementptr i32, i32* %177, i64 2, !dbg !12330
  %178 = load i32, i32* %add.ptr301, align 4, !dbg !12330
  %and302 = and i32 %178, -16777216, !dbg !12330
  %shr303 = lshr i32 %and302, 24, !dbg !12330
  %or304 = or i32 %or300, %shr303, !dbg !12330
  br label %cond.end308, !dbg !12330

cond.false305:                                    ; preds = %do.end287
  %179 = load i8*, i8** %in, align 8, !dbg !12330
  %180 = bitcast i8* %179 to i32*, !dbg !12330
  %add.ptr306 = getelementptr i32, i32* %180, i64 2, !dbg !12330
  %181 = load i32, i32* %add.ptr306, align 4, !dbg !12330
  %call307 = call i32 @__fswab32(i32 %181) #8, !dbg !12330
  br label %cond.end308, !dbg !12330

cond.end308:                                      ; preds = %cond.false305, %cond.true289
  %cond309 = phi i32 [ %or304, %cond.true289 ], [ %call307, %cond.false305 ], !dbg !12330
  %and310 = and i32 %cond309, -65536, !dbg !12330
  %182 = load i32, i32* %_v284, align 4, !dbg !12330
  %and311 = and i32 %182, 65535, !dbg !12330
  %shl312 = shl i32 %and311, 0, !dbg !12330
  %or313 = or i32 %and310, %shl312, !dbg !12330
  %183 = call i1 @llvm.is.constant.i32(i32 %or313), !dbg !12330
  br i1 %183, label %cond.true314, label %cond.false430, !dbg !12330

cond.true314:                                     ; preds = %cond.end308
  %184 = load i8*, i8** %in, align 8, !dbg !12330
  %185 = bitcast i8* %184 to i32*, !dbg !12330
  %add.ptr315 = getelementptr i32, i32* %185, i64 2, !dbg !12330
  %186 = load i32, i32* %add.ptr315, align 4, !dbg !12330
  %187 = call i1 @llvm.is.constant.i32(i32 %186), !dbg !12330
  br i1 %187, label %cond.true316, label %cond.false332, !dbg !12330

cond.true316:                                     ; preds = %cond.true314
  %188 = load i8*, i8** %in, align 8, !dbg !12330
  %189 = bitcast i8* %188 to i32*, !dbg !12330
  %add.ptr317 = getelementptr i32, i32* %189, i64 2, !dbg !12330
  %190 = load i32, i32* %add.ptr317, align 4, !dbg !12330
  %and318 = and i32 %190, 255, !dbg !12330
  %shl319 = shl i32 %and318, 24, !dbg !12330
  %191 = load i8*, i8** %in, align 8, !dbg !12330
  %192 = bitcast i8* %191 to i32*, !dbg !12330
  %add.ptr320 = getelementptr i32, i32* %192, i64 2, !dbg !12330
  %193 = load i32, i32* %add.ptr320, align 4, !dbg !12330
  %and321 = and i32 %193, 65280, !dbg !12330
  %shl322 = shl i32 %and321, 8, !dbg !12330
  %or323 = or i32 %shl319, %shl322, !dbg !12330
  %194 = load i8*, i8** %in, align 8, !dbg !12330
  %195 = bitcast i8* %194 to i32*, !dbg !12330
  %add.ptr324 = getelementptr i32, i32* %195, i64 2, !dbg !12330
  %196 = load i32, i32* %add.ptr324, align 4, !dbg !12330
  %and325 = and i32 %196, 16711680, !dbg !12330
  %shr326 = lshr i32 %and325, 8, !dbg !12330
  %or327 = or i32 %or323, %shr326, !dbg !12330
  %197 = load i8*, i8** %in, align 8, !dbg !12330
  %198 = bitcast i8* %197 to i32*, !dbg !12330
  %add.ptr328 = getelementptr i32, i32* %198, i64 2, !dbg !12330
  %199 = load i32, i32* %add.ptr328, align 4, !dbg !12330
  %and329 = and i32 %199, -16777216, !dbg !12330
  %shr330 = lshr i32 %and329, 24, !dbg !12330
  %or331 = or i32 %or327, %shr330, !dbg !12330
  br label %cond.end335, !dbg !12330

cond.false332:                                    ; preds = %cond.true314
  %200 = load i8*, i8** %in, align 8, !dbg !12330
  %201 = bitcast i8* %200 to i32*, !dbg !12330
  %add.ptr333 = getelementptr i32, i32* %201, i64 2, !dbg !12330
  %202 = load i32, i32* %add.ptr333, align 4, !dbg !12330
  %call334 = call i32 @__fswab32(i32 %202) #8, !dbg !12330
  br label %cond.end335, !dbg !12330

cond.end335:                                      ; preds = %cond.false332, %cond.true316
  %cond336 = phi i32 [ %or331, %cond.true316 ], [ %call334, %cond.false332 ], !dbg !12330
  %and337 = and i32 %cond336, -65536, !dbg !12330
  %203 = load i32, i32* %_v284, align 4, !dbg !12330
  %and338 = and i32 %203, 65535, !dbg !12330
  %shl339 = shl i32 %and338, 0, !dbg !12330
  %or340 = or i32 %and337, %shl339, !dbg !12330
  %and341 = and i32 %or340, 255, !dbg !12330
  %shl342 = shl i32 %and341, 24, !dbg !12330
  %204 = load i8*, i8** %in, align 8, !dbg !12330
  %205 = bitcast i8* %204 to i32*, !dbg !12330
  %add.ptr343 = getelementptr i32, i32* %205, i64 2, !dbg !12330
  %206 = load i32, i32* %add.ptr343, align 4, !dbg !12330
  %207 = call i1 @llvm.is.constant.i32(i32 %206), !dbg !12330
  br i1 %207, label %cond.true344, label %cond.false360, !dbg !12330

cond.true344:                                     ; preds = %cond.end335
  %208 = load i8*, i8** %in, align 8, !dbg !12330
  %209 = bitcast i8* %208 to i32*, !dbg !12330
  %add.ptr345 = getelementptr i32, i32* %209, i64 2, !dbg !12330
  %210 = load i32, i32* %add.ptr345, align 4, !dbg !12330
  %and346 = and i32 %210, 255, !dbg !12330
  %shl347 = shl i32 %and346, 24, !dbg !12330
  %211 = load i8*, i8** %in, align 8, !dbg !12330
  %212 = bitcast i8* %211 to i32*, !dbg !12330
  %add.ptr348 = getelementptr i32, i32* %212, i64 2, !dbg !12330
  %213 = load i32, i32* %add.ptr348, align 4, !dbg !12330
  %and349 = and i32 %213, 65280, !dbg !12330
  %shl350 = shl i32 %and349, 8, !dbg !12330
  %or351 = or i32 %shl347, %shl350, !dbg !12330
  %214 = load i8*, i8** %in, align 8, !dbg !12330
  %215 = bitcast i8* %214 to i32*, !dbg !12330
  %add.ptr352 = getelementptr i32, i32* %215, i64 2, !dbg !12330
  %216 = load i32, i32* %add.ptr352, align 4, !dbg !12330
  %and353 = and i32 %216, 16711680, !dbg !12330
  %shr354 = lshr i32 %and353, 8, !dbg !12330
  %or355 = or i32 %or351, %shr354, !dbg !12330
  %217 = load i8*, i8** %in, align 8, !dbg !12330
  %218 = bitcast i8* %217 to i32*, !dbg !12330
  %add.ptr356 = getelementptr i32, i32* %218, i64 2, !dbg !12330
  %219 = load i32, i32* %add.ptr356, align 4, !dbg !12330
  %and357 = and i32 %219, -16777216, !dbg !12330
  %shr358 = lshr i32 %and357, 24, !dbg !12330
  %or359 = or i32 %or355, %shr358, !dbg !12330
  br label %cond.end363, !dbg !12330

cond.false360:                                    ; preds = %cond.end335
  %220 = load i8*, i8** %in, align 8, !dbg !12330
  %221 = bitcast i8* %220 to i32*, !dbg !12330
  %add.ptr361 = getelementptr i32, i32* %221, i64 2, !dbg !12330
  %222 = load i32, i32* %add.ptr361, align 4, !dbg !12330
  %call362 = call i32 @__fswab32(i32 %222) #8, !dbg !12330
  br label %cond.end363, !dbg !12330

cond.end363:                                      ; preds = %cond.false360, %cond.true344
  %cond364 = phi i32 [ %or359, %cond.true344 ], [ %call362, %cond.false360 ], !dbg !12330
  %and365 = and i32 %cond364, -65536, !dbg !12330
  %223 = load i32, i32* %_v284, align 4, !dbg !12330
  %and366 = and i32 %223, 65535, !dbg !12330
  %shl367 = shl i32 %and366, 0, !dbg !12330
  %or368 = or i32 %and365, %shl367, !dbg !12330
  %and369 = and i32 %or368, 65280, !dbg !12330
  %shl370 = shl i32 %and369, 8, !dbg !12330
  %or371 = or i32 %shl342, %shl370, !dbg !12330
  %224 = load i8*, i8** %in, align 8, !dbg !12330
  %225 = bitcast i8* %224 to i32*, !dbg !12330
  %add.ptr372 = getelementptr i32, i32* %225, i64 2, !dbg !12330
  %226 = load i32, i32* %add.ptr372, align 4, !dbg !12330
  %227 = call i1 @llvm.is.constant.i32(i32 %226), !dbg !12330
  br i1 %227, label %cond.true373, label %cond.false389, !dbg !12330

cond.true373:                                     ; preds = %cond.end363
  %228 = load i8*, i8** %in, align 8, !dbg !12330
  %229 = bitcast i8* %228 to i32*, !dbg !12330
  %add.ptr374 = getelementptr i32, i32* %229, i64 2, !dbg !12330
  %230 = load i32, i32* %add.ptr374, align 4, !dbg !12330
  %and375 = and i32 %230, 255, !dbg !12330
  %shl376 = shl i32 %and375, 24, !dbg !12330
  %231 = load i8*, i8** %in, align 8, !dbg !12330
  %232 = bitcast i8* %231 to i32*, !dbg !12330
  %add.ptr377 = getelementptr i32, i32* %232, i64 2, !dbg !12330
  %233 = load i32, i32* %add.ptr377, align 4, !dbg !12330
  %and378 = and i32 %233, 65280, !dbg !12330
  %shl379 = shl i32 %and378, 8, !dbg !12330
  %or380 = or i32 %shl376, %shl379, !dbg !12330
  %234 = load i8*, i8** %in, align 8, !dbg !12330
  %235 = bitcast i8* %234 to i32*, !dbg !12330
  %add.ptr381 = getelementptr i32, i32* %235, i64 2, !dbg !12330
  %236 = load i32, i32* %add.ptr381, align 4, !dbg !12330
  %and382 = and i32 %236, 16711680, !dbg !12330
  %shr383 = lshr i32 %and382, 8, !dbg !12330
  %or384 = or i32 %or380, %shr383, !dbg !12330
  %237 = load i8*, i8** %in, align 8, !dbg !12330
  %238 = bitcast i8* %237 to i32*, !dbg !12330
  %add.ptr385 = getelementptr i32, i32* %238, i64 2, !dbg !12330
  %239 = load i32, i32* %add.ptr385, align 4, !dbg !12330
  %and386 = and i32 %239, -16777216, !dbg !12330
  %shr387 = lshr i32 %and386, 24, !dbg !12330
  %or388 = or i32 %or384, %shr387, !dbg !12330
  br label %cond.end392, !dbg !12330

cond.false389:                                    ; preds = %cond.end363
  %240 = load i8*, i8** %in, align 8, !dbg !12330
  %241 = bitcast i8* %240 to i32*, !dbg !12330
  %add.ptr390 = getelementptr i32, i32* %241, i64 2, !dbg !12330
  %242 = load i32, i32* %add.ptr390, align 4, !dbg !12330
  %call391 = call i32 @__fswab32(i32 %242) #8, !dbg !12330
  br label %cond.end392, !dbg !12330

cond.end392:                                      ; preds = %cond.false389, %cond.true373
  %cond393 = phi i32 [ %or388, %cond.true373 ], [ %call391, %cond.false389 ], !dbg !12330
  %and394 = and i32 %cond393, -65536, !dbg !12330
  %243 = load i32, i32* %_v284, align 4, !dbg !12330
  %and395 = and i32 %243, 65535, !dbg !12330
  %shl396 = shl i32 %and395, 0, !dbg !12330
  %or397 = or i32 %and394, %shl396, !dbg !12330
  %and398 = and i32 %or397, 16711680, !dbg !12330
  %shr399 = lshr i32 %and398, 8, !dbg !12330
  %or400 = or i32 %or371, %shr399, !dbg !12330
  %244 = load i8*, i8** %in, align 8, !dbg !12330
  %245 = bitcast i8* %244 to i32*, !dbg !12330
  %add.ptr401 = getelementptr i32, i32* %245, i64 2, !dbg !12330
  %246 = load i32, i32* %add.ptr401, align 4, !dbg !12330
  %247 = call i1 @llvm.is.constant.i32(i32 %246), !dbg !12330
  br i1 %247, label %cond.true402, label %cond.false418, !dbg !12330

cond.true402:                                     ; preds = %cond.end392
  %248 = load i8*, i8** %in, align 8, !dbg !12330
  %249 = bitcast i8* %248 to i32*, !dbg !12330
  %add.ptr403 = getelementptr i32, i32* %249, i64 2, !dbg !12330
  %250 = load i32, i32* %add.ptr403, align 4, !dbg !12330
  %and404 = and i32 %250, 255, !dbg !12330
  %shl405 = shl i32 %and404, 24, !dbg !12330
  %251 = load i8*, i8** %in, align 8, !dbg !12330
  %252 = bitcast i8* %251 to i32*, !dbg !12330
  %add.ptr406 = getelementptr i32, i32* %252, i64 2, !dbg !12330
  %253 = load i32, i32* %add.ptr406, align 4, !dbg !12330
  %and407 = and i32 %253, 65280, !dbg !12330
  %shl408 = shl i32 %and407, 8, !dbg !12330
  %or409 = or i32 %shl405, %shl408, !dbg !12330
  %254 = load i8*, i8** %in, align 8, !dbg !12330
  %255 = bitcast i8* %254 to i32*, !dbg !12330
  %add.ptr410 = getelementptr i32, i32* %255, i64 2, !dbg !12330
  %256 = load i32, i32* %add.ptr410, align 4, !dbg !12330
  %and411 = and i32 %256, 16711680, !dbg !12330
  %shr412 = lshr i32 %and411, 8, !dbg !12330
  %or413 = or i32 %or409, %shr412, !dbg !12330
  %257 = load i8*, i8** %in, align 8, !dbg !12330
  %258 = bitcast i8* %257 to i32*, !dbg !12330
  %add.ptr414 = getelementptr i32, i32* %258, i64 2, !dbg !12330
  %259 = load i32, i32* %add.ptr414, align 4, !dbg !12330
  %and415 = and i32 %259, -16777216, !dbg !12330
  %shr416 = lshr i32 %and415, 24, !dbg !12330
  %or417 = or i32 %or413, %shr416, !dbg !12330
  br label %cond.end421, !dbg !12330

cond.false418:                                    ; preds = %cond.end392
  %260 = load i8*, i8** %in, align 8, !dbg !12330
  %261 = bitcast i8* %260 to i32*, !dbg !12330
  %add.ptr419 = getelementptr i32, i32* %261, i64 2, !dbg !12330
  %262 = load i32, i32* %add.ptr419, align 4, !dbg !12330
  %call420 = call i32 @__fswab32(i32 %262) #8, !dbg !12330
  br label %cond.end421, !dbg !12330

cond.end421:                                      ; preds = %cond.false418, %cond.true402
  %cond422 = phi i32 [ %or417, %cond.true402 ], [ %call420, %cond.false418 ], !dbg !12330
  %and423 = and i32 %cond422, -65536, !dbg !12330
  %263 = load i32, i32* %_v284, align 4, !dbg !12330
  %and424 = and i32 %263, 65535, !dbg !12330
  %shl425 = shl i32 %and424, 0, !dbg !12330
  %or426 = or i32 %and423, %shl425, !dbg !12330
  %and427 = and i32 %or426, -16777216, !dbg !12330
  %shr428 = lshr i32 %and427, 24, !dbg !12330
  %or429 = or i32 %or400, %shr428, !dbg !12330
  br label %cond.end458, !dbg !12330

cond.false430:                                    ; preds = %cond.end308
  %264 = load i8*, i8** %in, align 8, !dbg !12330
  %265 = bitcast i8* %264 to i32*, !dbg !12330
  %add.ptr431 = getelementptr i32, i32* %265, i64 2, !dbg !12330
  %266 = load i32, i32* %add.ptr431, align 4, !dbg !12330
  %267 = call i1 @llvm.is.constant.i32(i32 %266), !dbg !12330
  br i1 %267, label %cond.true432, label %cond.false448, !dbg !12330

cond.true432:                                     ; preds = %cond.false430
  %268 = load i8*, i8** %in, align 8, !dbg !12330
  %269 = bitcast i8* %268 to i32*, !dbg !12330
  %add.ptr433 = getelementptr i32, i32* %269, i64 2, !dbg !12330
  %270 = load i32, i32* %add.ptr433, align 4, !dbg !12330
  %and434 = and i32 %270, 255, !dbg !12330
  %shl435 = shl i32 %and434, 24, !dbg !12330
  %271 = load i8*, i8** %in, align 8, !dbg !12330
  %272 = bitcast i8* %271 to i32*, !dbg !12330
  %add.ptr436 = getelementptr i32, i32* %272, i64 2, !dbg !12330
  %273 = load i32, i32* %add.ptr436, align 4, !dbg !12330
  %and437 = and i32 %273, 65280, !dbg !12330
  %shl438 = shl i32 %and437, 8, !dbg !12330
  %or439 = or i32 %shl435, %shl438, !dbg !12330
  %274 = load i8*, i8** %in, align 8, !dbg !12330
  %275 = bitcast i8* %274 to i32*, !dbg !12330
  %add.ptr440 = getelementptr i32, i32* %275, i64 2, !dbg !12330
  %276 = load i32, i32* %add.ptr440, align 4, !dbg !12330
  %and441 = and i32 %276, 16711680, !dbg !12330
  %shr442 = lshr i32 %and441, 8, !dbg !12330
  %or443 = or i32 %or439, %shr442, !dbg !12330
  %277 = load i8*, i8** %in, align 8, !dbg !12330
  %278 = bitcast i8* %277 to i32*, !dbg !12330
  %add.ptr444 = getelementptr i32, i32* %278, i64 2, !dbg !12330
  %279 = load i32, i32* %add.ptr444, align 4, !dbg !12330
  %and445 = and i32 %279, -16777216, !dbg !12330
  %shr446 = lshr i32 %and445, 24, !dbg !12330
  %or447 = or i32 %or443, %shr446, !dbg !12330
  br label %cond.end451, !dbg !12330

cond.false448:                                    ; preds = %cond.false430
  %280 = load i8*, i8** %in, align 8, !dbg !12330
  %281 = bitcast i8* %280 to i32*, !dbg !12330
  %add.ptr449 = getelementptr i32, i32* %281, i64 2, !dbg !12330
  %282 = load i32, i32* %add.ptr449, align 4, !dbg !12330
  %call450 = call i32 @__fswab32(i32 %282) #8, !dbg !12330
  br label %cond.end451, !dbg !12330

cond.end451:                                      ; preds = %cond.false448, %cond.true432
  %cond452 = phi i32 [ %or447, %cond.true432 ], [ %call450, %cond.false448 ], !dbg !12330
  %and453 = and i32 %cond452, -65536, !dbg !12330
  %283 = load i32, i32* %_v284, align 4, !dbg !12330
  %and454 = and i32 %283, 65535, !dbg !12330
  %shl455 = shl i32 %and454, 0, !dbg !12330
  %or456 = or i32 %and453, %shl455, !dbg !12330
  %call457 = call i32 @__fswab32(i32 %or456) #8, !dbg !12330
  br label %cond.end458, !dbg !12330

cond.end458:                                      ; preds = %cond.end451, %cond.end421
  %cond459 = phi i32 [ %or429, %cond.end421 ], [ %call457, %cond.end451 ], !dbg !12330
  %284 = load i8*, i8** %in, align 8, !dbg !12330
  %285 = bitcast i8* %284 to i32*, !dbg !12330
  %add.ptr460 = getelementptr i32, i32* %285, i64 2, !dbg !12330
  store i32 %cond459, i32* %add.ptr460, align 4, !dbg !12330
  br label %do.end461, !dbg !12330

do.end461:                                        ; preds = %cond.end458
  br label %do.body462, !dbg !12333

do.body462:                                       ; preds = %do.end461
  call void @llvm.dbg.declare(metadata i32* %_v463, metadata !12334, metadata !DIExpression()), !dbg !12336
  store i32 1, i32* %_v463, align 4, !dbg !12336
  br label %do.body464, !dbg !12336

do.body464:                                       ; preds = %do.body462
  br label %do.end465, !dbg !12337

do.end465:                                        ; preds = %do.body464
  %286 = load i8*, i8** %in, align 8, !dbg !12336
  %287 = bitcast i8* %286 to i32*, !dbg !12336
  %add.ptr466 = getelementptr i32, i32* %287, i64 2, !dbg !12336
  %288 = load i32, i32* %add.ptr466, align 4, !dbg !12336
  %289 = call i1 @llvm.is.constant.i32(i32 %288), !dbg !12336
  br i1 %289, label %cond.true467, label %cond.false483, !dbg !12336

cond.true467:                                     ; preds = %do.end465
  %290 = load i8*, i8** %in, align 8, !dbg !12336
  %291 = bitcast i8* %290 to i32*, !dbg !12336
  %add.ptr468 = getelementptr i32, i32* %291, i64 2, !dbg !12336
  %292 = load i32, i32* %add.ptr468, align 4, !dbg !12336
  %and469 = and i32 %292, 255, !dbg !12336
  %shl470 = shl i32 %and469, 24, !dbg !12336
  %293 = load i8*, i8** %in, align 8, !dbg !12336
  %294 = bitcast i8* %293 to i32*, !dbg !12336
  %add.ptr471 = getelementptr i32, i32* %294, i64 2, !dbg !12336
  %295 = load i32, i32* %add.ptr471, align 4, !dbg !12336
  %and472 = and i32 %295, 65280, !dbg !12336
  %shl473 = shl i32 %and472, 8, !dbg !12336
  %or474 = or i32 %shl470, %shl473, !dbg !12336
  %296 = load i8*, i8** %in, align 8, !dbg !12336
  %297 = bitcast i8* %296 to i32*, !dbg !12336
  %add.ptr475 = getelementptr i32, i32* %297, i64 2, !dbg !12336
  %298 = load i32, i32* %add.ptr475, align 4, !dbg !12336
  %and476 = and i32 %298, 16711680, !dbg !12336
  %shr477 = lshr i32 %and476, 8, !dbg !12336
  %or478 = or i32 %or474, %shr477, !dbg !12336
  %299 = load i8*, i8** %in, align 8, !dbg !12336
  %300 = bitcast i8* %299 to i32*, !dbg !12336
  %add.ptr479 = getelementptr i32, i32* %300, i64 2, !dbg !12336
  %301 = load i32, i32* %add.ptr479, align 4, !dbg !12336
  %and480 = and i32 %301, -16777216, !dbg !12336
  %shr481 = lshr i32 %and480, 24, !dbg !12336
  %or482 = or i32 %or478, %shr481, !dbg !12336
  br label %cond.end486, !dbg !12336

cond.false483:                                    ; preds = %do.end465
  %302 = load i8*, i8** %in, align 8, !dbg !12336
  %303 = bitcast i8* %302 to i32*, !dbg !12336
  %add.ptr484 = getelementptr i32, i32* %303, i64 2, !dbg !12336
  %304 = load i32, i32* %add.ptr484, align 4, !dbg !12336
  %call485 = call i32 @__fswab32(i32 %304) #8, !dbg !12336
  br label %cond.end486, !dbg !12336

cond.end486:                                      ; preds = %cond.false483, %cond.true467
  %cond487 = phi i32 [ %or482, %cond.true467 ], [ %call485, %cond.false483 ], !dbg !12336
  %and488 = and i32 %cond487, 2147483647, !dbg !12336
  %305 = load i32, i32* %_v463, align 4, !dbg !12336
  %and489 = and i32 %305, 1, !dbg !12336
  %shl490 = shl i32 %and489, 31, !dbg !12336
  %or491 = or i32 %and488, %shl490, !dbg !12336
  %306 = call i1 @llvm.is.constant.i32(i32 %or491), !dbg !12336
  br i1 %306, label %cond.true492, label %cond.false608, !dbg !12336

cond.true492:                                     ; preds = %cond.end486
  %307 = load i8*, i8** %in, align 8, !dbg !12336
  %308 = bitcast i8* %307 to i32*, !dbg !12336
  %add.ptr493 = getelementptr i32, i32* %308, i64 2, !dbg !12336
  %309 = load i32, i32* %add.ptr493, align 4, !dbg !12336
  %310 = call i1 @llvm.is.constant.i32(i32 %309), !dbg !12336
  br i1 %310, label %cond.true494, label %cond.false510, !dbg !12336

cond.true494:                                     ; preds = %cond.true492
  %311 = load i8*, i8** %in, align 8, !dbg !12336
  %312 = bitcast i8* %311 to i32*, !dbg !12336
  %add.ptr495 = getelementptr i32, i32* %312, i64 2, !dbg !12336
  %313 = load i32, i32* %add.ptr495, align 4, !dbg !12336
  %and496 = and i32 %313, 255, !dbg !12336
  %shl497 = shl i32 %and496, 24, !dbg !12336
  %314 = load i8*, i8** %in, align 8, !dbg !12336
  %315 = bitcast i8* %314 to i32*, !dbg !12336
  %add.ptr498 = getelementptr i32, i32* %315, i64 2, !dbg !12336
  %316 = load i32, i32* %add.ptr498, align 4, !dbg !12336
  %and499 = and i32 %316, 65280, !dbg !12336
  %shl500 = shl i32 %and499, 8, !dbg !12336
  %or501 = or i32 %shl497, %shl500, !dbg !12336
  %317 = load i8*, i8** %in, align 8, !dbg !12336
  %318 = bitcast i8* %317 to i32*, !dbg !12336
  %add.ptr502 = getelementptr i32, i32* %318, i64 2, !dbg !12336
  %319 = load i32, i32* %add.ptr502, align 4, !dbg !12336
  %and503 = and i32 %319, 16711680, !dbg !12336
  %shr504 = lshr i32 %and503, 8, !dbg !12336
  %or505 = or i32 %or501, %shr504, !dbg !12336
  %320 = load i8*, i8** %in, align 8, !dbg !12336
  %321 = bitcast i8* %320 to i32*, !dbg !12336
  %add.ptr506 = getelementptr i32, i32* %321, i64 2, !dbg !12336
  %322 = load i32, i32* %add.ptr506, align 4, !dbg !12336
  %and507 = and i32 %322, -16777216, !dbg !12336
  %shr508 = lshr i32 %and507, 24, !dbg !12336
  %or509 = or i32 %or505, %shr508, !dbg !12336
  br label %cond.end513, !dbg !12336

cond.false510:                                    ; preds = %cond.true492
  %323 = load i8*, i8** %in, align 8, !dbg !12336
  %324 = bitcast i8* %323 to i32*, !dbg !12336
  %add.ptr511 = getelementptr i32, i32* %324, i64 2, !dbg !12336
  %325 = load i32, i32* %add.ptr511, align 4, !dbg !12336
  %call512 = call i32 @__fswab32(i32 %325) #8, !dbg !12336
  br label %cond.end513, !dbg !12336

cond.end513:                                      ; preds = %cond.false510, %cond.true494
  %cond514 = phi i32 [ %or509, %cond.true494 ], [ %call512, %cond.false510 ], !dbg !12336
  %and515 = and i32 %cond514, 2147483647, !dbg !12336
  %326 = load i32, i32* %_v463, align 4, !dbg !12336
  %and516 = and i32 %326, 1, !dbg !12336
  %shl517 = shl i32 %and516, 31, !dbg !12336
  %or518 = or i32 %and515, %shl517, !dbg !12336
  %and519 = and i32 %or518, 255, !dbg !12336
  %shl520 = shl i32 %and519, 24, !dbg !12336
  %327 = load i8*, i8** %in, align 8, !dbg !12336
  %328 = bitcast i8* %327 to i32*, !dbg !12336
  %add.ptr521 = getelementptr i32, i32* %328, i64 2, !dbg !12336
  %329 = load i32, i32* %add.ptr521, align 4, !dbg !12336
  %330 = call i1 @llvm.is.constant.i32(i32 %329), !dbg !12336
  br i1 %330, label %cond.true522, label %cond.false538, !dbg !12336

cond.true522:                                     ; preds = %cond.end513
  %331 = load i8*, i8** %in, align 8, !dbg !12336
  %332 = bitcast i8* %331 to i32*, !dbg !12336
  %add.ptr523 = getelementptr i32, i32* %332, i64 2, !dbg !12336
  %333 = load i32, i32* %add.ptr523, align 4, !dbg !12336
  %and524 = and i32 %333, 255, !dbg !12336
  %shl525 = shl i32 %and524, 24, !dbg !12336
  %334 = load i8*, i8** %in, align 8, !dbg !12336
  %335 = bitcast i8* %334 to i32*, !dbg !12336
  %add.ptr526 = getelementptr i32, i32* %335, i64 2, !dbg !12336
  %336 = load i32, i32* %add.ptr526, align 4, !dbg !12336
  %and527 = and i32 %336, 65280, !dbg !12336
  %shl528 = shl i32 %and527, 8, !dbg !12336
  %or529 = or i32 %shl525, %shl528, !dbg !12336
  %337 = load i8*, i8** %in, align 8, !dbg !12336
  %338 = bitcast i8* %337 to i32*, !dbg !12336
  %add.ptr530 = getelementptr i32, i32* %338, i64 2, !dbg !12336
  %339 = load i32, i32* %add.ptr530, align 4, !dbg !12336
  %and531 = and i32 %339, 16711680, !dbg !12336
  %shr532 = lshr i32 %and531, 8, !dbg !12336
  %or533 = or i32 %or529, %shr532, !dbg !12336
  %340 = load i8*, i8** %in, align 8, !dbg !12336
  %341 = bitcast i8* %340 to i32*, !dbg !12336
  %add.ptr534 = getelementptr i32, i32* %341, i64 2, !dbg !12336
  %342 = load i32, i32* %add.ptr534, align 4, !dbg !12336
  %and535 = and i32 %342, -16777216, !dbg !12336
  %shr536 = lshr i32 %and535, 24, !dbg !12336
  %or537 = or i32 %or533, %shr536, !dbg !12336
  br label %cond.end541, !dbg !12336

cond.false538:                                    ; preds = %cond.end513
  %343 = load i8*, i8** %in, align 8, !dbg !12336
  %344 = bitcast i8* %343 to i32*, !dbg !12336
  %add.ptr539 = getelementptr i32, i32* %344, i64 2, !dbg !12336
  %345 = load i32, i32* %add.ptr539, align 4, !dbg !12336
  %call540 = call i32 @__fswab32(i32 %345) #8, !dbg !12336
  br label %cond.end541, !dbg !12336

cond.end541:                                      ; preds = %cond.false538, %cond.true522
  %cond542 = phi i32 [ %or537, %cond.true522 ], [ %call540, %cond.false538 ], !dbg !12336
  %and543 = and i32 %cond542, 2147483647, !dbg !12336
  %346 = load i32, i32* %_v463, align 4, !dbg !12336
  %and544 = and i32 %346, 1, !dbg !12336
  %shl545 = shl i32 %and544, 31, !dbg !12336
  %or546 = or i32 %and543, %shl545, !dbg !12336
  %and547 = and i32 %or546, 65280, !dbg !12336
  %shl548 = shl i32 %and547, 8, !dbg !12336
  %or549 = or i32 %shl520, %shl548, !dbg !12336
  %347 = load i8*, i8** %in, align 8, !dbg !12336
  %348 = bitcast i8* %347 to i32*, !dbg !12336
  %add.ptr550 = getelementptr i32, i32* %348, i64 2, !dbg !12336
  %349 = load i32, i32* %add.ptr550, align 4, !dbg !12336
  %350 = call i1 @llvm.is.constant.i32(i32 %349), !dbg !12336
  br i1 %350, label %cond.true551, label %cond.false567, !dbg !12336

cond.true551:                                     ; preds = %cond.end541
  %351 = load i8*, i8** %in, align 8, !dbg !12336
  %352 = bitcast i8* %351 to i32*, !dbg !12336
  %add.ptr552 = getelementptr i32, i32* %352, i64 2, !dbg !12336
  %353 = load i32, i32* %add.ptr552, align 4, !dbg !12336
  %and553 = and i32 %353, 255, !dbg !12336
  %shl554 = shl i32 %and553, 24, !dbg !12336
  %354 = load i8*, i8** %in, align 8, !dbg !12336
  %355 = bitcast i8* %354 to i32*, !dbg !12336
  %add.ptr555 = getelementptr i32, i32* %355, i64 2, !dbg !12336
  %356 = load i32, i32* %add.ptr555, align 4, !dbg !12336
  %and556 = and i32 %356, 65280, !dbg !12336
  %shl557 = shl i32 %and556, 8, !dbg !12336
  %or558 = or i32 %shl554, %shl557, !dbg !12336
  %357 = load i8*, i8** %in, align 8, !dbg !12336
  %358 = bitcast i8* %357 to i32*, !dbg !12336
  %add.ptr559 = getelementptr i32, i32* %358, i64 2, !dbg !12336
  %359 = load i32, i32* %add.ptr559, align 4, !dbg !12336
  %and560 = and i32 %359, 16711680, !dbg !12336
  %shr561 = lshr i32 %and560, 8, !dbg !12336
  %or562 = or i32 %or558, %shr561, !dbg !12336
  %360 = load i8*, i8** %in, align 8, !dbg !12336
  %361 = bitcast i8* %360 to i32*, !dbg !12336
  %add.ptr563 = getelementptr i32, i32* %361, i64 2, !dbg !12336
  %362 = load i32, i32* %add.ptr563, align 4, !dbg !12336
  %and564 = and i32 %362, -16777216, !dbg !12336
  %shr565 = lshr i32 %and564, 24, !dbg !12336
  %or566 = or i32 %or562, %shr565, !dbg !12336
  br label %cond.end570, !dbg !12336

cond.false567:                                    ; preds = %cond.end541
  %363 = load i8*, i8** %in, align 8, !dbg !12336
  %364 = bitcast i8* %363 to i32*, !dbg !12336
  %add.ptr568 = getelementptr i32, i32* %364, i64 2, !dbg !12336
  %365 = load i32, i32* %add.ptr568, align 4, !dbg !12336
  %call569 = call i32 @__fswab32(i32 %365) #8, !dbg !12336
  br label %cond.end570, !dbg !12336

cond.end570:                                      ; preds = %cond.false567, %cond.true551
  %cond571 = phi i32 [ %or566, %cond.true551 ], [ %call569, %cond.false567 ], !dbg !12336
  %and572 = and i32 %cond571, 2147483647, !dbg !12336
  %366 = load i32, i32* %_v463, align 4, !dbg !12336
  %and573 = and i32 %366, 1, !dbg !12336
  %shl574 = shl i32 %and573, 31, !dbg !12336
  %or575 = or i32 %and572, %shl574, !dbg !12336
  %and576 = and i32 %or575, 16711680, !dbg !12336
  %shr577 = lshr i32 %and576, 8, !dbg !12336
  %or578 = or i32 %or549, %shr577, !dbg !12336
  %367 = load i8*, i8** %in, align 8, !dbg !12336
  %368 = bitcast i8* %367 to i32*, !dbg !12336
  %add.ptr579 = getelementptr i32, i32* %368, i64 2, !dbg !12336
  %369 = load i32, i32* %add.ptr579, align 4, !dbg !12336
  %370 = call i1 @llvm.is.constant.i32(i32 %369), !dbg !12336
  br i1 %370, label %cond.true580, label %cond.false596, !dbg !12336

cond.true580:                                     ; preds = %cond.end570
  %371 = load i8*, i8** %in, align 8, !dbg !12336
  %372 = bitcast i8* %371 to i32*, !dbg !12336
  %add.ptr581 = getelementptr i32, i32* %372, i64 2, !dbg !12336
  %373 = load i32, i32* %add.ptr581, align 4, !dbg !12336
  %and582 = and i32 %373, 255, !dbg !12336
  %shl583 = shl i32 %and582, 24, !dbg !12336
  %374 = load i8*, i8** %in, align 8, !dbg !12336
  %375 = bitcast i8* %374 to i32*, !dbg !12336
  %add.ptr584 = getelementptr i32, i32* %375, i64 2, !dbg !12336
  %376 = load i32, i32* %add.ptr584, align 4, !dbg !12336
  %and585 = and i32 %376, 65280, !dbg !12336
  %shl586 = shl i32 %and585, 8, !dbg !12336
  %or587 = or i32 %shl583, %shl586, !dbg !12336
  %377 = load i8*, i8** %in, align 8, !dbg !12336
  %378 = bitcast i8* %377 to i32*, !dbg !12336
  %add.ptr588 = getelementptr i32, i32* %378, i64 2, !dbg !12336
  %379 = load i32, i32* %add.ptr588, align 4, !dbg !12336
  %and589 = and i32 %379, 16711680, !dbg !12336
  %shr590 = lshr i32 %and589, 8, !dbg !12336
  %or591 = or i32 %or587, %shr590, !dbg !12336
  %380 = load i8*, i8** %in, align 8, !dbg !12336
  %381 = bitcast i8* %380 to i32*, !dbg !12336
  %add.ptr592 = getelementptr i32, i32* %381, i64 2, !dbg !12336
  %382 = load i32, i32* %add.ptr592, align 4, !dbg !12336
  %and593 = and i32 %382, -16777216, !dbg !12336
  %shr594 = lshr i32 %and593, 24, !dbg !12336
  %or595 = or i32 %or591, %shr594, !dbg !12336
  br label %cond.end599, !dbg !12336

cond.false596:                                    ; preds = %cond.end570
  %383 = load i8*, i8** %in, align 8, !dbg !12336
  %384 = bitcast i8* %383 to i32*, !dbg !12336
  %add.ptr597 = getelementptr i32, i32* %384, i64 2, !dbg !12336
  %385 = load i32, i32* %add.ptr597, align 4, !dbg !12336
  %call598 = call i32 @__fswab32(i32 %385) #8, !dbg !12336
  br label %cond.end599, !dbg !12336

cond.end599:                                      ; preds = %cond.false596, %cond.true580
  %cond600 = phi i32 [ %or595, %cond.true580 ], [ %call598, %cond.false596 ], !dbg !12336
  %and601 = and i32 %cond600, 2147483647, !dbg !12336
  %386 = load i32, i32* %_v463, align 4, !dbg !12336
  %and602 = and i32 %386, 1, !dbg !12336
  %shl603 = shl i32 %and602, 31, !dbg !12336
  %or604 = or i32 %and601, %shl603, !dbg !12336
  %and605 = and i32 %or604, -16777216, !dbg !12336
  %shr606 = lshr i32 %and605, 24, !dbg !12336
  %or607 = or i32 %or578, %shr606, !dbg !12336
  br label %cond.end636, !dbg !12336

cond.false608:                                    ; preds = %cond.end486
  %387 = load i8*, i8** %in, align 8, !dbg !12336
  %388 = bitcast i8* %387 to i32*, !dbg !12336
  %add.ptr609 = getelementptr i32, i32* %388, i64 2, !dbg !12336
  %389 = load i32, i32* %add.ptr609, align 4, !dbg !12336
  %390 = call i1 @llvm.is.constant.i32(i32 %389), !dbg !12336
  br i1 %390, label %cond.true610, label %cond.false626, !dbg !12336

cond.true610:                                     ; preds = %cond.false608
  %391 = load i8*, i8** %in, align 8, !dbg !12336
  %392 = bitcast i8* %391 to i32*, !dbg !12336
  %add.ptr611 = getelementptr i32, i32* %392, i64 2, !dbg !12336
  %393 = load i32, i32* %add.ptr611, align 4, !dbg !12336
  %and612 = and i32 %393, 255, !dbg !12336
  %shl613 = shl i32 %and612, 24, !dbg !12336
  %394 = load i8*, i8** %in, align 8, !dbg !12336
  %395 = bitcast i8* %394 to i32*, !dbg !12336
  %add.ptr614 = getelementptr i32, i32* %395, i64 2, !dbg !12336
  %396 = load i32, i32* %add.ptr614, align 4, !dbg !12336
  %and615 = and i32 %396, 65280, !dbg !12336
  %shl616 = shl i32 %and615, 8, !dbg !12336
  %or617 = or i32 %shl613, %shl616, !dbg !12336
  %397 = load i8*, i8** %in, align 8, !dbg !12336
  %398 = bitcast i8* %397 to i32*, !dbg !12336
  %add.ptr618 = getelementptr i32, i32* %398, i64 2, !dbg !12336
  %399 = load i32, i32* %add.ptr618, align 4, !dbg !12336
  %and619 = and i32 %399, 16711680, !dbg !12336
  %shr620 = lshr i32 %and619, 8, !dbg !12336
  %or621 = or i32 %or617, %shr620, !dbg !12336
  %400 = load i8*, i8** %in, align 8, !dbg !12336
  %401 = bitcast i8* %400 to i32*, !dbg !12336
  %add.ptr622 = getelementptr i32, i32* %401, i64 2, !dbg !12336
  %402 = load i32, i32* %add.ptr622, align 4, !dbg !12336
  %and623 = and i32 %402, -16777216, !dbg !12336
  %shr624 = lshr i32 %and623, 24, !dbg !12336
  %or625 = or i32 %or621, %shr624, !dbg !12336
  br label %cond.end629, !dbg !12336

cond.false626:                                    ; preds = %cond.false608
  %403 = load i8*, i8** %in, align 8, !dbg !12336
  %404 = bitcast i8* %403 to i32*, !dbg !12336
  %add.ptr627 = getelementptr i32, i32* %404, i64 2, !dbg !12336
  %405 = load i32, i32* %add.ptr627, align 4, !dbg !12336
  %call628 = call i32 @__fswab32(i32 %405) #8, !dbg !12336
  br label %cond.end629, !dbg !12336

cond.end629:                                      ; preds = %cond.false626, %cond.true610
  %cond630 = phi i32 [ %or625, %cond.true610 ], [ %call628, %cond.false626 ], !dbg !12336
  %and631 = and i32 %cond630, 2147483647, !dbg !12336
  %406 = load i32, i32* %_v463, align 4, !dbg !12336
  %and632 = and i32 %406, 1, !dbg !12336
  %shl633 = shl i32 %and632, 31, !dbg !12336
  %or634 = or i32 %and631, %shl633, !dbg !12336
  %call635 = call i32 @__fswab32(i32 %or634) #8, !dbg !12336
  br label %cond.end636, !dbg !12336

cond.end636:                                      ; preds = %cond.end629, %cond.end599
  %cond637 = phi i32 [ %or607, %cond.end599 ], [ %call635, %cond.end629 ], !dbg !12336
  %407 = load i8*, i8** %in, align 8, !dbg !12336
  %408 = bitcast i8* %407 to i32*, !dbg !12336
  %add.ptr638 = getelementptr i32, i32* %408, i64 2, !dbg !12336
  store i32 %cond637, i32* %add.ptr638, align 4, !dbg !12336
  br label %do.end639, !dbg !12336

do.end639:                                        ; preds = %cond.end636
  br label %if.end641, !dbg !12339

if.else640:                                       ; preds = %if.then280
  store i32 -1, i32* %err, align 4, !dbg !12340
  br label %out1063, !dbg !12342

if.end641:                                        ; preds = %do.end639
  br label %if.end642, !dbg !12343

if.end642:                                        ; preds = %if.end641, %do.end278
  br label %do.body643, !dbg !12344

do.body643:                                       ; preds = %if.end642
  call void @llvm.dbg.declare(metadata i32* %_v644, metadata !12345, metadata !DIExpression()), !dbg !12347
  %409 = load i16, i16* %gid_index.addr, align 2, !dbg !12347
  %conv645 = zext i16 %409 to i32, !dbg !12347
  store i32 %conv645, i32* %_v644, align 4, !dbg !12347
  br label %do.body646, !dbg !12347

do.body646:                                       ; preds = %do.body643
  br label %do.end647, !dbg !12348

do.end647:                                        ; preds = %do.body646
  %410 = load i8*, i8** %in, align 8, !dbg !12347
  %411 = bitcast i8* %410 to i32*, !dbg !12347
  %add.ptr648 = getelementptr i32, i32* %411, i64 3, !dbg !12347
  %412 = load i32, i32* %add.ptr648, align 4, !dbg !12347
  %413 = call i1 @llvm.is.constant.i32(i32 %412), !dbg !12347
  br i1 %413, label %cond.true649, label %cond.false665, !dbg !12347

cond.true649:                                     ; preds = %do.end647
  %414 = load i8*, i8** %in, align 8, !dbg !12347
  %415 = bitcast i8* %414 to i32*, !dbg !12347
  %add.ptr650 = getelementptr i32, i32* %415, i64 3, !dbg !12347
  %416 = load i32, i32* %add.ptr650, align 4, !dbg !12347
  %and651 = and i32 %416, 255, !dbg !12347
  %shl652 = shl i32 %and651, 24, !dbg !12347
  %417 = load i8*, i8** %in, align 8, !dbg !12347
  %418 = bitcast i8* %417 to i32*, !dbg !12347
  %add.ptr653 = getelementptr i32, i32* %418, i64 3, !dbg !12347
  %419 = load i32, i32* %add.ptr653, align 4, !dbg !12347
  %and654 = and i32 %419, 65280, !dbg !12347
  %shl655 = shl i32 %and654, 8, !dbg !12347
  %or656 = or i32 %shl652, %shl655, !dbg !12347
  %420 = load i8*, i8** %in, align 8, !dbg !12347
  %421 = bitcast i8* %420 to i32*, !dbg !12347
  %add.ptr657 = getelementptr i32, i32* %421, i64 3, !dbg !12347
  %422 = load i32, i32* %add.ptr657, align 4, !dbg !12347
  %and658 = and i32 %422, 16711680, !dbg !12347
  %shr659 = lshr i32 %and658, 8, !dbg !12347
  %or660 = or i32 %or656, %shr659, !dbg !12347
  %423 = load i8*, i8** %in, align 8, !dbg !12347
  %424 = bitcast i8* %423 to i32*, !dbg !12347
  %add.ptr661 = getelementptr i32, i32* %424, i64 3, !dbg !12347
  %425 = load i32, i32* %add.ptr661, align 4, !dbg !12347
  %and662 = and i32 %425, -16777216, !dbg !12347
  %shr663 = lshr i32 %and662, 24, !dbg !12347
  %or664 = or i32 %or660, %shr663, !dbg !12347
  br label %cond.end668, !dbg !12347

cond.false665:                                    ; preds = %do.end647
  %426 = load i8*, i8** %in, align 8, !dbg !12347
  %427 = bitcast i8* %426 to i32*, !dbg !12347
  %add.ptr666 = getelementptr i32, i32* %427, i64 3, !dbg !12347
  %428 = load i32, i32* %add.ptr666, align 4, !dbg !12347
  %call667 = call i32 @__fswab32(i32 %428) #8, !dbg !12347
  br label %cond.end668, !dbg !12347

cond.end668:                                      ; preds = %cond.false665, %cond.true649
  %cond669 = phi i32 [ %or664, %cond.true649 ], [ %call667, %cond.false665 ], !dbg !12347
  %and670 = and i32 %cond669, -65536, !dbg !12347
  %429 = load i32, i32* %_v644, align 4, !dbg !12347
  %and671 = and i32 %429, 65535, !dbg !12347
  %shl672 = shl i32 %and671, 0, !dbg !12347
  %or673 = or i32 %and670, %shl672, !dbg !12347
  %430 = call i1 @llvm.is.constant.i32(i32 %or673), !dbg !12347
  br i1 %430, label %cond.true674, label %cond.false790, !dbg !12347

cond.true674:                                     ; preds = %cond.end668
  %431 = load i8*, i8** %in, align 8, !dbg !12347
  %432 = bitcast i8* %431 to i32*, !dbg !12347
  %add.ptr675 = getelementptr i32, i32* %432, i64 3, !dbg !12347
  %433 = load i32, i32* %add.ptr675, align 4, !dbg !12347
  %434 = call i1 @llvm.is.constant.i32(i32 %433), !dbg !12347
  br i1 %434, label %cond.true676, label %cond.false692, !dbg !12347

cond.true676:                                     ; preds = %cond.true674
  %435 = load i8*, i8** %in, align 8, !dbg !12347
  %436 = bitcast i8* %435 to i32*, !dbg !12347
  %add.ptr677 = getelementptr i32, i32* %436, i64 3, !dbg !12347
  %437 = load i32, i32* %add.ptr677, align 4, !dbg !12347
  %and678 = and i32 %437, 255, !dbg !12347
  %shl679 = shl i32 %and678, 24, !dbg !12347
  %438 = load i8*, i8** %in, align 8, !dbg !12347
  %439 = bitcast i8* %438 to i32*, !dbg !12347
  %add.ptr680 = getelementptr i32, i32* %439, i64 3, !dbg !12347
  %440 = load i32, i32* %add.ptr680, align 4, !dbg !12347
  %and681 = and i32 %440, 65280, !dbg !12347
  %shl682 = shl i32 %and681, 8, !dbg !12347
  %or683 = or i32 %shl679, %shl682, !dbg !12347
  %441 = load i8*, i8** %in, align 8, !dbg !12347
  %442 = bitcast i8* %441 to i32*, !dbg !12347
  %add.ptr684 = getelementptr i32, i32* %442, i64 3, !dbg !12347
  %443 = load i32, i32* %add.ptr684, align 4, !dbg !12347
  %and685 = and i32 %443, 16711680, !dbg !12347
  %shr686 = lshr i32 %and685, 8, !dbg !12347
  %or687 = or i32 %or683, %shr686, !dbg !12347
  %444 = load i8*, i8** %in, align 8, !dbg !12347
  %445 = bitcast i8* %444 to i32*, !dbg !12347
  %add.ptr688 = getelementptr i32, i32* %445, i64 3, !dbg !12347
  %446 = load i32, i32* %add.ptr688, align 4, !dbg !12347
  %and689 = and i32 %446, -16777216, !dbg !12347
  %shr690 = lshr i32 %and689, 24, !dbg !12347
  %or691 = or i32 %or687, %shr690, !dbg !12347
  br label %cond.end695, !dbg !12347

cond.false692:                                    ; preds = %cond.true674
  %447 = load i8*, i8** %in, align 8, !dbg !12347
  %448 = bitcast i8* %447 to i32*, !dbg !12347
  %add.ptr693 = getelementptr i32, i32* %448, i64 3, !dbg !12347
  %449 = load i32, i32* %add.ptr693, align 4, !dbg !12347
  %call694 = call i32 @__fswab32(i32 %449) #8, !dbg !12347
  br label %cond.end695, !dbg !12347

cond.end695:                                      ; preds = %cond.false692, %cond.true676
  %cond696 = phi i32 [ %or691, %cond.true676 ], [ %call694, %cond.false692 ], !dbg !12347
  %and697 = and i32 %cond696, -65536, !dbg !12347
  %450 = load i32, i32* %_v644, align 4, !dbg !12347
  %and698 = and i32 %450, 65535, !dbg !12347
  %shl699 = shl i32 %and698, 0, !dbg !12347
  %or700 = or i32 %and697, %shl699, !dbg !12347
  %and701 = and i32 %or700, 255, !dbg !12347
  %shl702 = shl i32 %and701, 24, !dbg !12347
  %451 = load i8*, i8** %in, align 8, !dbg !12347
  %452 = bitcast i8* %451 to i32*, !dbg !12347
  %add.ptr703 = getelementptr i32, i32* %452, i64 3, !dbg !12347
  %453 = load i32, i32* %add.ptr703, align 4, !dbg !12347
  %454 = call i1 @llvm.is.constant.i32(i32 %453), !dbg !12347
  br i1 %454, label %cond.true704, label %cond.false720, !dbg !12347

cond.true704:                                     ; preds = %cond.end695
  %455 = load i8*, i8** %in, align 8, !dbg !12347
  %456 = bitcast i8* %455 to i32*, !dbg !12347
  %add.ptr705 = getelementptr i32, i32* %456, i64 3, !dbg !12347
  %457 = load i32, i32* %add.ptr705, align 4, !dbg !12347
  %and706 = and i32 %457, 255, !dbg !12347
  %shl707 = shl i32 %and706, 24, !dbg !12347
  %458 = load i8*, i8** %in, align 8, !dbg !12347
  %459 = bitcast i8* %458 to i32*, !dbg !12347
  %add.ptr708 = getelementptr i32, i32* %459, i64 3, !dbg !12347
  %460 = load i32, i32* %add.ptr708, align 4, !dbg !12347
  %and709 = and i32 %460, 65280, !dbg !12347
  %shl710 = shl i32 %and709, 8, !dbg !12347
  %or711 = or i32 %shl707, %shl710, !dbg !12347
  %461 = load i8*, i8** %in, align 8, !dbg !12347
  %462 = bitcast i8* %461 to i32*, !dbg !12347
  %add.ptr712 = getelementptr i32, i32* %462, i64 3, !dbg !12347
  %463 = load i32, i32* %add.ptr712, align 4, !dbg !12347
  %and713 = and i32 %463, 16711680, !dbg !12347
  %shr714 = lshr i32 %and713, 8, !dbg !12347
  %or715 = or i32 %or711, %shr714, !dbg !12347
  %464 = load i8*, i8** %in, align 8, !dbg !12347
  %465 = bitcast i8* %464 to i32*, !dbg !12347
  %add.ptr716 = getelementptr i32, i32* %465, i64 3, !dbg !12347
  %466 = load i32, i32* %add.ptr716, align 4, !dbg !12347
  %and717 = and i32 %466, -16777216, !dbg !12347
  %shr718 = lshr i32 %and717, 24, !dbg !12347
  %or719 = or i32 %or715, %shr718, !dbg !12347
  br label %cond.end723, !dbg !12347

cond.false720:                                    ; preds = %cond.end695
  %467 = load i8*, i8** %in, align 8, !dbg !12347
  %468 = bitcast i8* %467 to i32*, !dbg !12347
  %add.ptr721 = getelementptr i32, i32* %468, i64 3, !dbg !12347
  %469 = load i32, i32* %add.ptr721, align 4, !dbg !12347
  %call722 = call i32 @__fswab32(i32 %469) #8, !dbg !12347
  br label %cond.end723, !dbg !12347

cond.end723:                                      ; preds = %cond.false720, %cond.true704
  %cond724 = phi i32 [ %or719, %cond.true704 ], [ %call722, %cond.false720 ], !dbg !12347
  %and725 = and i32 %cond724, -65536, !dbg !12347
  %470 = load i32, i32* %_v644, align 4, !dbg !12347
  %and726 = and i32 %470, 65535, !dbg !12347
  %shl727 = shl i32 %and726, 0, !dbg !12347
  %or728 = or i32 %and725, %shl727, !dbg !12347
  %and729 = and i32 %or728, 65280, !dbg !12347
  %shl730 = shl i32 %and729, 8, !dbg !12347
  %or731 = or i32 %shl702, %shl730, !dbg !12347
  %471 = load i8*, i8** %in, align 8, !dbg !12347
  %472 = bitcast i8* %471 to i32*, !dbg !12347
  %add.ptr732 = getelementptr i32, i32* %472, i64 3, !dbg !12347
  %473 = load i32, i32* %add.ptr732, align 4, !dbg !12347
  %474 = call i1 @llvm.is.constant.i32(i32 %473), !dbg !12347
  br i1 %474, label %cond.true733, label %cond.false749, !dbg !12347

cond.true733:                                     ; preds = %cond.end723
  %475 = load i8*, i8** %in, align 8, !dbg !12347
  %476 = bitcast i8* %475 to i32*, !dbg !12347
  %add.ptr734 = getelementptr i32, i32* %476, i64 3, !dbg !12347
  %477 = load i32, i32* %add.ptr734, align 4, !dbg !12347
  %and735 = and i32 %477, 255, !dbg !12347
  %shl736 = shl i32 %and735, 24, !dbg !12347
  %478 = load i8*, i8** %in, align 8, !dbg !12347
  %479 = bitcast i8* %478 to i32*, !dbg !12347
  %add.ptr737 = getelementptr i32, i32* %479, i64 3, !dbg !12347
  %480 = load i32, i32* %add.ptr737, align 4, !dbg !12347
  %and738 = and i32 %480, 65280, !dbg !12347
  %shl739 = shl i32 %and738, 8, !dbg !12347
  %or740 = or i32 %shl736, %shl739, !dbg !12347
  %481 = load i8*, i8** %in, align 8, !dbg !12347
  %482 = bitcast i8* %481 to i32*, !dbg !12347
  %add.ptr741 = getelementptr i32, i32* %482, i64 3, !dbg !12347
  %483 = load i32, i32* %add.ptr741, align 4, !dbg !12347
  %and742 = and i32 %483, 16711680, !dbg !12347
  %shr743 = lshr i32 %and742, 8, !dbg !12347
  %or744 = or i32 %or740, %shr743, !dbg !12347
  %484 = load i8*, i8** %in, align 8, !dbg !12347
  %485 = bitcast i8* %484 to i32*, !dbg !12347
  %add.ptr745 = getelementptr i32, i32* %485, i64 3, !dbg !12347
  %486 = load i32, i32* %add.ptr745, align 4, !dbg !12347
  %and746 = and i32 %486, -16777216, !dbg !12347
  %shr747 = lshr i32 %and746, 24, !dbg !12347
  %or748 = or i32 %or744, %shr747, !dbg !12347
  br label %cond.end752, !dbg !12347

cond.false749:                                    ; preds = %cond.end723
  %487 = load i8*, i8** %in, align 8, !dbg !12347
  %488 = bitcast i8* %487 to i32*, !dbg !12347
  %add.ptr750 = getelementptr i32, i32* %488, i64 3, !dbg !12347
  %489 = load i32, i32* %add.ptr750, align 4, !dbg !12347
  %call751 = call i32 @__fswab32(i32 %489) #8, !dbg !12347
  br label %cond.end752, !dbg !12347

cond.end752:                                      ; preds = %cond.false749, %cond.true733
  %cond753 = phi i32 [ %or748, %cond.true733 ], [ %call751, %cond.false749 ], !dbg !12347
  %and754 = and i32 %cond753, -65536, !dbg !12347
  %490 = load i32, i32* %_v644, align 4, !dbg !12347
  %and755 = and i32 %490, 65535, !dbg !12347
  %shl756 = shl i32 %and755, 0, !dbg !12347
  %or757 = or i32 %and754, %shl756, !dbg !12347
  %and758 = and i32 %or757, 16711680, !dbg !12347
  %shr759 = lshr i32 %and758, 8, !dbg !12347
  %or760 = or i32 %or731, %shr759, !dbg !12347
  %491 = load i8*, i8** %in, align 8, !dbg !12347
  %492 = bitcast i8* %491 to i32*, !dbg !12347
  %add.ptr761 = getelementptr i32, i32* %492, i64 3, !dbg !12347
  %493 = load i32, i32* %add.ptr761, align 4, !dbg !12347
  %494 = call i1 @llvm.is.constant.i32(i32 %493), !dbg !12347
  br i1 %494, label %cond.true762, label %cond.false778, !dbg !12347

cond.true762:                                     ; preds = %cond.end752
  %495 = load i8*, i8** %in, align 8, !dbg !12347
  %496 = bitcast i8* %495 to i32*, !dbg !12347
  %add.ptr763 = getelementptr i32, i32* %496, i64 3, !dbg !12347
  %497 = load i32, i32* %add.ptr763, align 4, !dbg !12347
  %and764 = and i32 %497, 255, !dbg !12347
  %shl765 = shl i32 %and764, 24, !dbg !12347
  %498 = load i8*, i8** %in, align 8, !dbg !12347
  %499 = bitcast i8* %498 to i32*, !dbg !12347
  %add.ptr766 = getelementptr i32, i32* %499, i64 3, !dbg !12347
  %500 = load i32, i32* %add.ptr766, align 4, !dbg !12347
  %and767 = and i32 %500, 65280, !dbg !12347
  %shl768 = shl i32 %and767, 8, !dbg !12347
  %or769 = or i32 %shl765, %shl768, !dbg !12347
  %501 = load i8*, i8** %in, align 8, !dbg !12347
  %502 = bitcast i8* %501 to i32*, !dbg !12347
  %add.ptr770 = getelementptr i32, i32* %502, i64 3, !dbg !12347
  %503 = load i32, i32* %add.ptr770, align 4, !dbg !12347
  %and771 = and i32 %503, 16711680, !dbg !12347
  %shr772 = lshr i32 %and771, 8, !dbg !12347
  %or773 = or i32 %or769, %shr772, !dbg !12347
  %504 = load i8*, i8** %in, align 8, !dbg !12347
  %505 = bitcast i8* %504 to i32*, !dbg !12347
  %add.ptr774 = getelementptr i32, i32* %505, i64 3, !dbg !12347
  %506 = load i32, i32* %add.ptr774, align 4, !dbg !12347
  %and775 = and i32 %506, -16777216, !dbg !12347
  %shr776 = lshr i32 %and775, 24, !dbg !12347
  %or777 = or i32 %or773, %shr776, !dbg !12347
  br label %cond.end781, !dbg !12347

cond.false778:                                    ; preds = %cond.end752
  %507 = load i8*, i8** %in, align 8, !dbg !12347
  %508 = bitcast i8* %507 to i32*, !dbg !12347
  %add.ptr779 = getelementptr i32, i32* %508, i64 3, !dbg !12347
  %509 = load i32, i32* %add.ptr779, align 4, !dbg !12347
  %call780 = call i32 @__fswab32(i32 %509) #8, !dbg !12347
  br label %cond.end781, !dbg !12347

cond.end781:                                      ; preds = %cond.false778, %cond.true762
  %cond782 = phi i32 [ %or777, %cond.true762 ], [ %call780, %cond.false778 ], !dbg !12347
  %and783 = and i32 %cond782, -65536, !dbg !12347
  %510 = load i32, i32* %_v644, align 4, !dbg !12347
  %and784 = and i32 %510, 65535, !dbg !12347
  %shl785 = shl i32 %and784, 0, !dbg !12347
  %or786 = or i32 %and783, %shl785, !dbg !12347
  %and787 = and i32 %or786, -16777216, !dbg !12347
  %shr788 = lshr i32 %and787, 24, !dbg !12347
  %or789 = or i32 %or760, %shr788, !dbg !12347
  br label %cond.end818, !dbg !12347

cond.false790:                                    ; preds = %cond.end668
  %511 = load i8*, i8** %in, align 8, !dbg !12347
  %512 = bitcast i8* %511 to i32*, !dbg !12347
  %add.ptr791 = getelementptr i32, i32* %512, i64 3, !dbg !12347
  %513 = load i32, i32* %add.ptr791, align 4, !dbg !12347
  %514 = call i1 @llvm.is.constant.i32(i32 %513), !dbg !12347
  br i1 %514, label %cond.true792, label %cond.false808, !dbg !12347

cond.true792:                                     ; preds = %cond.false790
  %515 = load i8*, i8** %in, align 8, !dbg !12347
  %516 = bitcast i8* %515 to i32*, !dbg !12347
  %add.ptr793 = getelementptr i32, i32* %516, i64 3, !dbg !12347
  %517 = load i32, i32* %add.ptr793, align 4, !dbg !12347
  %and794 = and i32 %517, 255, !dbg !12347
  %shl795 = shl i32 %and794, 24, !dbg !12347
  %518 = load i8*, i8** %in, align 8, !dbg !12347
  %519 = bitcast i8* %518 to i32*, !dbg !12347
  %add.ptr796 = getelementptr i32, i32* %519, i64 3, !dbg !12347
  %520 = load i32, i32* %add.ptr796, align 4, !dbg !12347
  %and797 = and i32 %520, 65280, !dbg !12347
  %shl798 = shl i32 %and797, 8, !dbg !12347
  %or799 = or i32 %shl795, %shl798, !dbg !12347
  %521 = load i8*, i8** %in, align 8, !dbg !12347
  %522 = bitcast i8* %521 to i32*, !dbg !12347
  %add.ptr800 = getelementptr i32, i32* %522, i64 3, !dbg !12347
  %523 = load i32, i32* %add.ptr800, align 4, !dbg !12347
  %and801 = and i32 %523, 16711680, !dbg !12347
  %shr802 = lshr i32 %and801, 8, !dbg !12347
  %or803 = or i32 %or799, %shr802, !dbg !12347
  %524 = load i8*, i8** %in, align 8, !dbg !12347
  %525 = bitcast i8* %524 to i32*, !dbg !12347
  %add.ptr804 = getelementptr i32, i32* %525, i64 3, !dbg !12347
  %526 = load i32, i32* %add.ptr804, align 4, !dbg !12347
  %and805 = and i32 %526, -16777216, !dbg !12347
  %shr806 = lshr i32 %and805, 24, !dbg !12347
  %or807 = or i32 %or803, %shr806, !dbg !12347
  br label %cond.end811, !dbg !12347

cond.false808:                                    ; preds = %cond.false790
  %527 = load i8*, i8** %in, align 8, !dbg !12347
  %528 = bitcast i8* %527 to i32*, !dbg !12347
  %add.ptr809 = getelementptr i32, i32* %528, i64 3, !dbg !12347
  %529 = load i32, i32* %add.ptr809, align 4, !dbg !12347
  %call810 = call i32 @__fswab32(i32 %529) #8, !dbg !12347
  br label %cond.end811, !dbg !12347

cond.end811:                                      ; preds = %cond.false808, %cond.true792
  %cond812 = phi i32 [ %or807, %cond.true792 ], [ %call810, %cond.false808 ], !dbg !12347
  %and813 = and i32 %cond812, -65536, !dbg !12347
  %530 = load i32, i32* %_v644, align 4, !dbg !12347
  %and814 = and i32 %530, 65535, !dbg !12347
  %shl815 = shl i32 %and814, 0, !dbg !12347
  %or816 = or i32 %and813, %shl815, !dbg !12347
  %call817 = call i32 @__fswab32(i32 %or816) #8, !dbg !12347
  br label %cond.end818, !dbg !12347

cond.end818:                                      ; preds = %cond.end811, %cond.end781
  %cond819 = phi i32 [ %or789, %cond.end781 ], [ %call817, %cond.end811 ], !dbg !12347
  %531 = load i8*, i8** %in, align 8, !dbg !12347
  %532 = bitcast i8* %531 to i32*, !dbg !12347
  %add.ptr820 = getelementptr i32, i32* %532, i64 3, !dbg !12347
  store i32 %cond819, i32* %add.ptr820, align 4, !dbg !12347
  br label %do.end821, !dbg !12347

do.end821:                                        ; preds = %cond.end818
  %533 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !12350
  %caps822 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %533, i32 0, i32 9, !dbg !12350
  %hca_cur823 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps822, i32 0, i32 0, !dbg !12350
  %arrayidx824 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur823, i64 0, i64 0, !dbg !12350
  %arraydecay825 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx824, i64 0, i64 0, !dbg !12350
  %add.ptr826 = getelementptr i32, i32* %arraydecay825, i64 13, !dbg !12350
  %534 = load i32, i32* %add.ptr826, align 4, !dbg !12350
  %535 = call i1 @llvm.is.constant.i32(i32 %534), !dbg !12350
  br i1 %535, label %cond.true827, label %cond.false859, !dbg !12350

cond.true827:                                     ; preds = %do.end821
  %536 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !12350
  %caps828 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %536, i32 0, i32 9, !dbg !12350
  %hca_cur829 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps828, i32 0, i32 0, !dbg !12350
  %arrayidx830 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur829, i64 0, i64 0, !dbg !12350
  %arraydecay831 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx830, i64 0, i64 0, !dbg !12350
  %add.ptr832 = getelementptr i32, i32* %arraydecay831, i64 13, !dbg !12350
  %537 = load i32, i32* %add.ptr832, align 4, !dbg !12350
  %and833 = and i32 %537, 255, !dbg !12350
  %shl834 = shl i32 %and833, 24, !dbg !12350
  %538 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !12350
  %caps835 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %538, i32 0, i32 9, !dbg !12350
  %hca_cur836 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps835, i32 0, i32 0, !dbg !12350
  %arrayidx837 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur836, i64 0, i64 0, !dbg !12350
  %arraydecay838 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx837, i64 0, i64 0, !dbg !12350
  %add.ptr839 = getelementptr i32, i32* %arraydecay838, i64 13, !dbg !12350
  %539 = load i32, i32* %add.ptr839, align 4, !dbg !12350
  %and840 = and i32 %539, 65280, !dbg !12350
  %shl841 = shl i32 %and840, 8, !dbg !12350
  %or842 = or i32 %shl834, %shl841, !dbg !12350
  %540 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !12350
  %caps843 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %540, i32 0, i32 9, !dbg !12350
  %hca_cur844 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps843, i32 0, i32 0, !dbg !12350
  %arrayidx845 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur844, i64 0, i64 0, !dbg !12350
  %arraydecay846 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx845, i64 0, i64 0, !dbg !12350
  %add.ptr847 = getelementptr i32, i32* %arraydecay846, i64 13, !dbg !12350
  %541 = load i32, i32* %add.ptr847, align 4, !dbg !12350
  %and848 = and i32 %541, 16711680, !dbg !12350
  %shr849 = lshr i32 %and848, 8, !dbg !12350
  %or850 = or i32 %or842, %shr849, !dbg !12350
  %542 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !12350
  %caps851 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %542, i32 0, i32 9, !dbg !12350
  %hca_cur852 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps851, i32 0, i32 0, !dbg !12350
  %arrayidx853 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur852, i64 0, i64 0, !dbg !12350
  %arraydecay854 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx853, i64 0, i64 0, !dbg !12350
  %add.ptr855 = getelementptr i32, i32* %arraydecay854, i64 13, !dbg !12350
  %543 = load i32, i32* %add.ptr855, align 4, !dbg !12350
  %and856 = and i32 %543, -16777216, !dbg !12350
  %shr857 = lshr i32 %and856, 24, !dbg !12350
  %or858 = or i32 %or850, %shr857, !dbg !12350
  br label %cond.end866, !dbg !12350

cond.false859:                                    ; preds = %do.end821
  %544 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !12350
  %caps860 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %544, i32 0, i32 9, !dbg !12350
  %hca_cur861 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps860, i32 0, i32 0, !dbg !12350
  %arrayidx862 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur861, i64 0, i64 0, !dbg !12350
  %arraydecay863 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx862, i64 0, i64 0, !dbg !12350
  %add.ptr864 = getelementptr i32, i32* %arraydecay863, i64 13, !dbg !12350
  %545 = load i32, i32* %add.ptr864, align 4, !dbg !12350
  %call865 = call i32 @__fswab32(i32 %545) #8, !dbg !12350
  br label %cond.end866, !dbg !12350

cond.end866:                                      ; preds = %cond.false859, %cond.true827
  %cond867 = phi i32 [ %or858, %cond.true827 ], [ %call865, %cond.false859 ], !dbg !12350
  %shr868 = lshr i32 %cond867, 0, !dbg !12350
  %and869 = and i32 %shr868, 255, !dbg !12350
  %cmp870 = icmp eq i32 %and869, 2, !dbg !12352
  br i1 %cmp870, label %if.then872, label %if.end1052, !dbg !12353

if.then872:                                       ; preds = %cond.end866
  br label %do.body873, !dbg !12354

do.body873:                                       ; preds = %if.then872
  call void @llvm.dbg.declare(metadata i32* %_v874, metadata !12355, metadata !DIExpression()), !dbg !12357
  %546 = load i8, i8* %port_num.addr, align 1, !dbg !12357
  %conv875 = zext i8 %546 to i32, !dbg !12357
  store i32 %conv875, i32* %_v874, align 4, !dbg !12357
  br label %do.body876, !dbg !12357

do.body876:                                       ; preds = %do.body873
  br label %do.end877, !dbg !12358

do.end877:                                        ; preds = %do.body876
  %547 = load i8*, i8** %in, align 8, !dbg !12357
  %548 = bitcast i8* %547 to i32*, !dbg !12357
  %add.ptr878 = getelementptr i32, i32* %548, i64 2, !dbg !12357
  %549 = load i32, i32* %add.ptr878, align 4, !dbg !12357
  %550 = call i1 @llvm.is.constant.i32(i32 %549), !dbg !12357
  br i1 %550, label %cond.true879, label %cond.false895, !dbg !12357

cond.true879:                                     ; preds = %do.end877
  %551 = load i8*, i8** %in, align 8, !dbg !12357
  %552 = bitcast i8* %551 to i32*, !dbg !12357
  %add.ptr880 = getelementptr i32, i32* %552, i64 2, !dbg !12357
  %553 = load i32, i32* %add.ptr880, align 4, !dbg !12357
  %and881 = and i32 %553, 255, !dbg !12357
  %shl882 = shl i32 %and881, 24, !dbg !12357
  %554 = load i8*, i8** %in, align 8, !dbg !12357
  %555 = bitcast i8* %554 to i32*, !dbg !12357
  %add.ptr883 = getelementptr i32, i32* %555, i64 2, !dbg !12357
  %556 = load i32, i32* %add.ptr883, align 4, !dbg !12357
  %and884 = and i32 %556, 65280, !dbg !12357
  %shl885 = shl i32 %and884, 8, !dbg !12357
  %or886 = or i32 %shl882, %shl885, !dbg !12357
  %557 = load i8*, i8** %in, align 8, !dbg !12357
  %558 = bitcast i8* %557 to i32*, !dbg !12357
  %add.ptr887 = getelementptr i32, i32* %558, i64 2, !dbg !12357
  %559 = load i32, i32* %add.ptr887, align 4, !dbg !12357
  %and888 = and i32 %559, 16711680, !dbg !12357
  %shr889 = lshr i32 %and888, 8, !dbg !12357
  %or890 = or i32 %or886, %shr889, !dbg !12357
  %560 = load i8*, i8** %in, align 8, !dbg !12357
  %561 = bitcast i8* %560 to i32*, !dbg !12357
  %add.ptr891 = getelementptr i32, i32* %561, i64 2, !dbg !12357
  %562 = load i32, i32* %add.ptr891, align 4, !dbg !12357
  %and892 = and i32 %562, -16777216, !dbg !12357
  %shr893 = lshr i32 %and892, 24, !dbg !12357
  %or894 = or i32 %or890, %shr893, !dbg !12357
  br label %cond.end898, !dbg !12357

cond.false895:                                    ; preds = %do.end877
  %563 = load i8*, i8** %in, align 8, !dbg !12357
  %564 = bitcast i8* %563 to i32*, !dbg !12357
  %add.ptr896 = getelementptr i32, i32* %564, i64 2, !dbg !12357
  %565 = load i32, i32* %add.ptr896, align 4, !dbg !12357
  %call897 = call i32 @__fswab32(i32 %565) #8, !dbg !12357
  br label %cond.end898, !dbg !12357

cond.end898:                                      ; preds = %cond.false895, %cond.true879
  %cond899 = phi i32 [ %or894, %cond.true879 ], [ %call897, %cond.false895 ], !dbg !12357
  %and900 = and i32 %cond899, -983041, !dbg !12357
  %566 = load i32, i32* %_v874, align 4, !dbg !12357
  %and901 = and i32 %566, 15, !dbg !12357
  %shl902 = shl i32 %and901, 16, !dbg !12357
  %or903 = or i32 %and900, %shl902, !dbg !12357
  %567 = call i1 @llvm.is.constant.i32(i32 %or903), !dbg !12357
  br i1 %567, label %cond.true904, label %cond.false1020, !dbg !12357

cond.true904:                                     ; preds = %cond.end898
  %568 = load i8*, i8** %in, align 8, !dbg !12357
  %569 = bitcast i8* %568 to i32*, !dbg !12357
  %add.ptr905 = getelementptr i32, i32* %569, i64 2, !dbg !12357
  %570 = load i32, i32* %add.ptr905, align 4, !dbg !12357
  %571 = call i1 @llvm.is.constant.i32(i32 %570), !dbg !12357
  br i1 %571, label %cond.true906, label %cond.false922, !dbg !12357

cond.true906:                                     ; preds = %cond.true904
  %572 = load i8*, i8** %in, align 8, !dbg !12357
  %573 = bitcast i8* %572 to i32*, !dbg !12357
  %add.ptr907 = getelementptr i32, i32* %573, i64 2, !dbg !12357
  %574 = load i32, i32* %add.ptr907, align 4, !dbg !12357
  %and908 = and i32 %574, 255, !dbg !12357
  %shl909 = shl i32 %and908, 24, !dbg !12357
  %575 = load i8*, i8** %in, align 8, !dbg !12357
  %576 = bitcast i8* %575 to i32*, !dbg !12357
  %add.ptr910 = getelementptr i32, i32* %576, i64 2, !dbg !12357
  %577 = load i32, i32* %add.ptr910, align 4, !dbg !12357
  %and911 = and i32 %577, 65280, !dbg !12357
  %shl912 = shl i32 %and911, 8, !dbg !12357
  %or913 = or i32 %shl909, %shl912, !dbg !12357
  %578 = load i8*, i8** %in, align 8, !dbg !12357
  %579 = bitcast i8* %578 to i32*, !dbg !12357
  %add.ptr914 = getelementptr i32, i32* %579, i64 2, !dbg !12357
  %580 = load i32, i32* %add.ptr914, align 4, !dbg !12357
  %and915 = and i32 %580, 16711680, !dbg !12357
  %shr916 = lshr i32 %and915, 8, !dbg !12357
  %or917 = or i32 %or913, %shr916, !dbg !12357
  %581 = load i8*, i8** %in, align 8, !dbg !12357
  %582 = bitcast i8* %581 to i32*, !dbg !12357
  %add.ptr918 = getelementptr i32, i32* %582, i64 2, !dbg !12357
  %583 = load i32, i32* %add.ptr918, align 4, !dbg !12357
  %and919 = and i32 %583, -16777216, !dbg !12357
  %shr920 = lshr i32 %and919, 24, !dbg !12357
  %or921 = or i32 %or917, %shr920, !dbg !12357
  br label %cond.end925, !dbg !12357

cond.false922:                                    ; preds = %cond.true904
  %584 = load i8*, i8** %in, align 8, !dbg !12357
  %585 = bitcast i8* %584 to i32*, !dbg !12357
  %add.ptr923 = getelementptr i32, i32* %585, i64 2, !dbg !12357
  %586 = load i32, i32* %add.ptr923, align 4, !dbg !12357
  %call924 = call i32 @__fswab32(i32 %586) #8, !dbg !12357
  br label %cond.end925, !dbg !12357

cond.end925:                                      ; preds = %cond.false922, %cond.true906
  %cond926 = phi i32 [ %or921, %cond.true906 ], [ %call924, %cond.false922 ], !dbg !12357
  %and927 = and i32 %cond926, -983041, !dbg !12357
  %587 = load i32, i32* %_v874, align 4, !dbg !12357
  %and928 = and i32 %587, 15, !dbg !12357
  %shl929 = shl i32 %and928, 16, !dbg !12357
  %or930 = or i32 %and927, %shl929, !dbg !12357
  %and931 = and i32 %or930, 255, !dbg !12357
  %shl932 = shl i32 %and931, 24, !dbg !12357
  %588 = load i8*, i8** %in, align 8, !dbg !12357
  %589 = bitcast i8* %588 to i32*, !dbg !12357
  %add.ptr933 = getelementptr i32, i32* %589, i64 2, !dbg !12357
  %590 = load i32, i32* %add.ptr933, align 4, !dbg !12357
  %591 = call i1 @llvm.is.constant.i32(i32 %590), !dbg !12357
  br i1 %591, label %cond.true934, label %cond.false950, !dbg !12357

cond.true934:                                     ; preds = %cond.end925
  %592 = load i8*, i8** %in, align 8, !dbg !12357
  %593 = bitcast i8* %592 to i32*, !dbg !12357
  %add.ptr935 = getelementptr i32, i32* %593, i64 2, !dbg !12357
  %594 = load i32, i32* %add.ptr935, align 4, !dbg !12357
  %and936 = and i32 %594, 255, !dbg !12357
  %shl937 = shl i32 %and936, 24, !dbg !12357
  %595 = load i8*, i8** %in, align 8, !dbg !12357
  %596 = bitcast i8* %595 to i32*, !dbg !12357
  %add.ptr938 = getelementptr i32, i32* %596, i64 2, !dbg !12357
  %597 = load i32, i32* %add.ptr938, align 4, !dbg !12357
  %and939 = and i32 %597, 65280, !dbg !12357
  %shl940 = shl i32 %and939, 8, !dbg !12357
  %or941 = or i32 %shl937, %shl940, !dbg !12357
  %598 = load i8*, i8** %in, align 8, !dbg !12357
  %599 = bitcast i8* %598 to i32*, !dbg !12357
  %add.ptr942 = getelementptr i32, i32* %599, i64 2, !dbg !12357
  %600 = load i32, i32* %add.ptr942, align 4, !dbg !12357
  %and943 = and i32 %600, 16711680, !dbg !12357
  %shr944 = lshr i32 %and943, 8, !dbg !12357
  %or945 = or i32 %or941, %shr944, !dbg !12357
  %601 = load i8*, i8** %in, align 8, !dbg !12357
  %602 = bitcast i8* %601 to i32*, !dbg !12357
  %add.ptr946 = getelementptr i32, i32* %602, i64 2, !dbg !12357
  %603 = load i32, i32* %add.ptr946, align 4, !dbg !12357
  %and947 = and i32 %603, -16777216, !dbg !12357
  %shr948 = lshr i32 %and947, 24, !dbg !12357
  %or949 = or i32 %or945, %shr948, !dbg !12357
  br label %cond.end953, !dbg !12357

cond.false950:                                    ; preds = %cond.end925
  %604 = load i8*, i8** %in, align 8, !dbg !12357
  %605 = bitcast i8* %604 to i32*, !dbg !12357
  %add.ptr951 = getelementptr i32, i32* %605, i64 2, !dbg !12357
  %606 = load i32, i32* %add.ptr951, align 4, !dbg !12357
  %call952 = call i32 @__fswab32(i32 %606) #8, !dbg !12357
  br label %cond.end953, !dbg !12357

cond.end953:                                      ; preds = %cond.false950, %cond.true934
  %cond954 = phi i32 [ %or949, %cond.true934 ], [ %call952, %cond.false950 ], !dbg !12357
  %and955 = and i32 %cond954, -983041, !dbg !12357
  %607 = load i32, i32* %_v874, align 4, !dbg !12357
  %and956 = and i32 %607, 15, !dbg !12357
  %shl957 = shl i32 %and956, 16, !dbg !12357
  %or958 = or i32 %and955, %shl957, !dbg !12357
  %and959 = and i32 %or958, 65280, !dbg !12357
  %shl960 = shl i32 %and959, 8, !dbg !12357
  %or961 = or i32 %shl932, %shl960, !dbg !12357
  %608 = load i8*, i8** %in, align 8, !dbg !12357
  %609 = bitcast i8* %608 to i32*, !dbg !12357
  %add.ptr962 = getelementptr i32, i32* %609, i64 2, !dbg !12357
  %610 = load i32, i32* %add.ptr962, align 4, !dbg !12357
  %611 = call i1 @llvm.is.constant.i32(i32 %610), !dbg !12357
  br i1 %611, label %cond.true963, label %cond.false979, !dbg !12357

cond.true963:                                     ; preds = %cond.end953
  %612 = load i8*, i8** %in, align 8, !dbg !12357
  %613 = bitcast i8* %612 to i32*, !dbg !12357
  %add.ptr964 = getelementptr i32, i32* %613, i64 2, !dbg !12357
  %614 = load i32, i32* %add.ptr964, align 4, !dbg !12357
  %and965 = and i32 %614, 255, !dbg !12357
  %shl966 = shl i32 %and965, 24, !dbg !12357
  %615 = load i8*, i8** %in, align 8, !dbg !12357
  %616 = bitcast i8* %615 to i32*, !dbg !12357
  %add.ptr967 = getelementptr i32, i32* %616, i64 2, !dbg !12357
  %617 = load i32, i32* %add.ptr967, align 4, !dbg !12357
  %and968 = and i32 %617, 65280, !dbg !12357
  %shl969 = shl i32 %and968, 8, !dbg !12357
  %or970 = or i32 %shl966, %shl969, !dbg !12357
  %618 = load i8*, i8** %in, align 8, !dbg !12357
  %619 = bitcast i8* %618 to i32*, !dbg !12357
  %add.ptr971 = getelementptr i32, i32* %619, i64 2, !dbg !12357
  %620 = load i32, i32* %add.ptr971, align 4, !dbg !12357
  %and972 = and i32 %620, 16711680, !dbg !12357
  %shr973 = lshr i32 %and972, 8, !dbg !12357
  %or974 = or i32 %or970, %shr973, !dbg !12357
  %621 = load i8*, i8** %in, align 8, !dbg !12357
  %622 = bitcast i8* %621 to i32*, !dbg !12357
  %add.ptr975 = getelementptr i32, i32* %622, i64 2, !dbg !12357
  %623 = load i32, i32* %add.ptr975, align 4, !dbg !12357
  %and976 = and i32 %623, -16777216, !dbg !12357
  %shr977 = lshr i32 %and976, 24, !dbg !12357
  %or978 = or i32 %or974, %shr977, !dbg !12357
  br label %cond.end982, !dbg !12357

cond.false979:                                    ; preds = %cond.end953
  %624 = load i8*, i8** %in, align 8, !dbg !12357
  %625 = bitcast i8* %624 to i32*, !dbg !12357
  %add.ptr980 = getelementptr i32, i32* %625, i64 2, !dbg !12357
  %626 = load i32, i32* %add.ptr980, align 4, !dbg !12357
  %call981 = call i32 @__fswab32(i32 %626) #8, !dbg !12357
  br label %cond.end982, !dbg !12357

cond.end982:                                      ; preds = %cond.false979, %cond.true963
  %cond983 = phi i32 [ %or978, %cond.true963 ], [ %call981, %cond.false979 ], !dbg !12357
  %and984 = and i32 %cond983, -983041, !dbg !12357
  %627 = load i32, i32* %_v874, align 4, !dbg !12357
  %and985 = and i32 %627, 15, !dbg !12357
  %shl986 = shl i32 %and985, 16, !dbg !12357
  %or987 = or i32 %and984, %shl986, !dbg !12357
  %and988 = and i32 %or987, 16711680, !dbg !12357
  %shr989 = lshr i32 %and988, 8, !dbg !12357
  %or990 = or i32 %or961, %shr989, !dbg !12357
  %628 = load i8*, i8** %in, align 8, !dbg !12357
  %629 = bitcast i8* %628 to i32*, !dbg !12357
  %add.ptr991 = getelementptr i32, i32* %629, i64 2, !dbg !12357
  %630 = load i32, i32* %add.ptr991, align 4, !dbg !12357
  %631 = call i1 @llvm.is.constant.i32(i32 %630), !dbg !12357
  br i1 %631, label %cond.true992, label %cond.false1008, !dbg !12357

cond.true992:                                     ; preds = %cond.end982
  %632 = load i8*, i8** %in, align 8, !dbg !12357
  %633 = bitcast i8* %632 to i32*, !dbg !12357
  %add.ptr993 = getelementptr i32, i32* %633, i64 2, !dbg !12357
  %634 = load i32, i32* %add.ptr993, align 4, !dbg !12357
  %and994 = and i32 %634, 255, !dbg !12357
  %shl995 = shl i32 %and994, 24, !dbg !12357
  %635 = load i8*, i8** %in, align 8, !dbg !12357
  %636 = bitcast i8* %635 to i32*, !dbg !12357
  %add.ptr996 = getelementptr i32, i32* %636, i64 2, !dbg !12357
  %637 = load i32, i32* %add.ptr996, align 4, !dbg !12357
  %and997 = and i32 %637, 65280, !dbg !12357
  %shl998 = shl i32 %and997, 8, !dbg !12357
  %or999 = or i32 %shl995, %shl998, !dbg !12357
  %638 = load i8*, i8** %in, align 8, !dbg !12357
  %639 = bitcast i8* %638 to i32*, !dbg !12357
  %add.ptr1000 = getelementptr i32, i32* %639, i64 2, !dbg !12357
  %640 = load i32, i32* %add.ptr1000, align 4, !dbg !12357
  %and1001 = and i32 %640, 16711680, !dbg !12357
  %shr1002 = lshr i32 %and1001, 8, !dbg !12357
  %or1003 = or i32 %or999, %shr1002, !dbg !12357
  %641 = load i8*, i8** %in, align 8, !dbg !12357
  %642 = bitcast i8* %641 to i32*, !dbg !12357
  %add.ptr1004 = getelementptr i32, i32* %642, i64 2, !dbg !12357
  %643 = load i32, i32* %add.ptr1004, align 4, !dbg !12357
  %and1005 = and i32 %643, -16777216, !dbg !12357
  %shr1006 = lshr i32 %and1005, 24, !dbg !12357
  %or1007 = or i32 %or1003, %shr1006, !dbg !12357
  br label %cond.end1011, !dbg !12357

cond.false1008:                                   ; preds = %cond.end982
  %644 = load i8*, i8** %in, align 8, !dbg !12357
  %645 = bitcast i8* %644 to i32*, !dbg !12357
  %add.ptr1009 = getelementptr i32, i32* %645, i64 2, !dbg !12357
  %646 = load i32, i32* %add.ptr1009, align 4, !dbg !12357
  %call1010 = call i32 @__fswab32(i32 %646) #8, !dbg !12357
  br label %cond.end1011, !dbg !12357

cond.end1011:                                     ; preds = %cond.false1008, %cond.true992
  %cond1012 = phi i32 [ %or1007, %cond.true992 ], [ %call1010, %cond.false1008 ], !dbg !12357
  %and1013 = and i32 %cond1012, -983041, !dbg !12357
  %647 = load i32, i32* %_v874, align 4, !dbg !12357
  %and1014 = and i32 %647, 15, !dbg !12357
  %shl1015 = shl i32 %and1014, 16, !dbg !12357
  %or1016 = or i32 %and1013, %shl1015, !dbg !12357
  %and1017 = and i32 %or1016, -16777216, !dbg !12357
  %shr1018 = lshr i32 %and1017, 24, !dbg !12357
  %or1019 = or i32 %or990, %shr1018, !dbg !12357
  br label %cond.end1048, !dbg !12357

cond.false1020:                                   ; preds = %cond.end898
  %648 = load i8*, i8** %in, align 8, !dbg !12357
  %649 = bitcast i8* %648 to i32*, !dbg !12357
  %add.ptr1021 = getelementptr i32, i32* %649, i64 2, !dbg !12357
  %650 = load i32, i32* %add.ptr1021, align 4, !dbg !12357
  %651 = call i1 @llvm.is.constant.i32(i32 %650), !dbg !12357
  br i1 %651, label %cond.true1022, label %cond.false1038, !dbg !12357

cond.true1022:                                    ; preds = %cond.false1020
  %652 = load i8*, i8** %in, align 8, !dbg !12357
  %653 = bitcast i8* %652 to i32*, !dbg !12357
  %add.ptr1023 = getelementptr i32, i32* %653, i64 2, !dbg !12357
  %654 = load i32, i32* %add.ptr1023, align 4, !dbg !12357
  %and1024 = and i32 %654, 255, !dbg !12357
  %shl1025 = shl i32 %and1024, 24, !dbg !12357
  %655 = load i8*, i8** %in, align 8, !dbg !12357
  %656 = bitcast i8* %655 to i32*, !dbg !12357
  %add.ptr1026 = getelementptr i32, i32* %656, i64 2, !dbg !12357
  %657 = load i32, i32* %add.ptr1026, align 4, !dbg !12357
  %and1027 = and i32 %657, 65280, !dbg !12357
  %shl1028 = shl i32 %and1027, 8, !dbg !12357
  %or1029 = or i32 %shl1025, %shl1028, !dbg !12357
  %658 = load i8*, i8** %in, align 8, !dbg !12357
  %659 = bitcast i8* %658 to i32*, !dbg !12357
  %add.ptr1030 = getelementptr i32, i32* %659, i64 2, !dbg !12357
  %660 = load i32, i32* %add.ptr1030, align 4, !dbg !12357
  %and1031 = and i32 %660, 16711680, !dbg !12357
  %shr1032 = lshr i32 %and1031, 8, !dbg !12357
  %or1033 = or i32 %or1029, %shr1032, !dbg !12357
  %661 = load i8*, i8** %in, align 8, !dbg !12357
  %662 = bitcast i8* %661 to i32*, !dbg !12357
  %add.ptr1034 = getelementptr i32, i32* %662, i64 2, !dbg !12357
  %663 = load i32, i32* %add.ptr1034, align 4, !dbg !12357
  %and1035 = and i32 %663, -16777216, !dbg !12357
  %shr1036 = lshr i32 %and1035, 24, !dbg !12357
  %or1037 = or i32 %or1033, %shr1036, !dbg !12357
  br label %cond.end1041, !dbg !12357

cond.false1038:                                   ; preds = %cond.false1020
  %664 = load i8*, i8** %in, align 8, !dbg !12357
  %665 = bitcast i8* %664 to i32*, !dbg !12357
  %add.ptr1039 = getelementptr i32, i32* %665, i64 2, !dbg !12357
  %666 = load i32, i32* %add.ptr1039, align 4, !dbg !12357
  %call1040 = call i32 @__fswab32(i32 %666) #8, !dbg !12357
  br label %cond.end1041, !dbg !12357

cond.end1041:                                     ; preds = %cond.false1038, %cond.true1022
  %cond1042 = phi i32 [ %or1037, %cond.true1022 ], [ %call1040, %cond.false1038 ], !dbg !12357
  %and1043 = and i32 %cond1042, -983041, !dbg !12357
  %667 = load i32, i32* %_v874, align 4, !dbg !12357
  %and1044 = and i32 %667, 15, !dbg !12357
  %shl1045 = shl i32 %and1044, 16, !dbg !12357
  %or1046 = or i32 %and1043, %shl1045, !dbg !12357
  %call1047 = call i32 @__fswab32(i32 %or1046) #8, !dbg !12357
  br label %cond.end1048, !dbg !12357

cond.end1048:                                     ; preds = %cond.end1041, %cond.end1011
  %cond1049 = phi i32 [ %or1019, %cond.end1011 ], [ %call1047, %cond.end1041 ], !dbg !12357
  %668 = load i8*, i8** %in, align 8, !dbg !12357
  %669 = bitcast i8* %668 to i32*, !dbg !12357
  %add.ptr1050 = getelementptr i32, i32* %669, i64 2, !dbg !12357
  store i32 %cond1049, i32* %add.ptr1050, align 4, !dbg !12357
  br label %do.end1051, !dbg !12357

do.end1051:                                       ; preds = %cond.end1048
  br label %if.end1052, !dbg !12357

if.end1052:                                       ; preds = %do.end1051, %cond.end866
  %670 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !12360
  %671 = load i8*, i8** %in, align 8, !dbg !12361
  %672 = load i32, i32* %in_sz, align 4, !dbg !12362
  %673 = load i8*, i8** %out, align 8, !dbg !12363
  %674 = load i32, i32* %out_sz, align 4, !dbg !12364
  %call1053 = call i32 @mlx5_cmd_exec(%struct.mlx5_core_dev* %670, i8* %671, i32 %672, i8* %673, i32 %674) #9, !dbg !12365
  store i32 %call1053, i32* %err, align 4, !dbg !12366
  %675 = load i32, i32* %err, align 4, !dbg !12367
  %tobool1054 = icmp ne i32 %675, 0, !dbg !12367
  br i1 %tobool1054, label %if.then1055, label %if.end1056, !dbg !12369

if.then1055:                                      ; preds = %if.end1052
  br label %out1063, !dbg !12370

if.end1056:                                       ; preds = %if.end1052
  %676 = load i8*, i8** %out, align 8, !dbg !12371
  %add.ptr1057 = getelementptr i8, i8* %676, i64 16, !dbg !12372
  %677 = bitcast i8* %add.ptr1057 to %union.ib_gid*, !dbg !12371
  store %union.ib_gid* %677, %union.ib_gid** %tmp, align 8, !dbg !12373
  %678 = load %union.ib_gid*, %union.ib_gid** %tmp, align 8, !dbg !12374
  %global = bitcast %union.ib_gid* %678 to %struct.anon.170*, !dbg !12375
  %subnet_prefix = getelementptr inbounds %struct.anon.170, %struct.anon.170* %global, i32 0, i32 0, !dbg !12376
  %679 = load i64, i64* %subnet_prefix, align 8, !dbg !12376
  %680 = load %union.ib_gid*, %union.ib_gid** %gid.addr, align 8, !dbg !12377
  %global1058 = bitcast %union.ib_gid* %680 to %struct.anon.170*, !dbg !12378
  %subnet_prefix1059 = getelementptr inbounds %struct.anon.170, %struct.anon.170* %global1058, i32 0, i32 0, !dbg !12379
  store i64 %679, i64* %subnet_prefix1059, align 8, !dbg !12380
  %681 = load %union.ib_gid*, %union.ib_gid** %tmp, align 8, !dbg !12381
  %global1060 = bitcast %union.ib_gid* %681 to %struct.anon.170*, !dbg !12382
  %interface_id = getelementptr inbounds %struct.anon.170, %struct.anon.170* %global1060, i32 0, i32 1, !dbg !12383
  %682 = load i64, i64* %interface_id, align 8, !dbg !12383
  %683 = load %union.ib_gid*, %union.ib_gid** %gid.addr, align 8, !dbg !12384
  %global1061 = bitcast %union.ib_gid* %683 to %struct.anon.170*, !dbg !12385
  %interface_id1062 = getelementptr inbounds %struct.anon.170, %struct.anon.170* %global1061, i32 0, i32 1, !dbg !12386
  store i64 %682, i64* %interface_id1062, align 8, !dbg !12387
  br label %out1063, !dbg !12384

out1063:                                          ; preds = %if.end1056, %if.then1055, %if.else640, %if.then102
  call void @llvm.dbg.label(metadata !12388), !dbg !12389
  %684 = load i8*, i8** %in, align 8, !dbg !12390
  call void @kfree(i8* %684) #9, !dbg !12391
  %685 = load i8*, i8** %out, align 8, !dbg !12392
  call void @kfree(i8* %685) #9, !dbg !12393
  %686 = load i32, i32* %err, align 4, !dbg !12394
  store i32 %686, i32* %retval, align 4, !dbg !12395
  br label %return, !dbg !12395

return:                                           ; preds = %out1063, %if.then
  %687 = load i32, i32* %retval, align 4, !dbg !12396
  ret i32 %687, !dbg !12396
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlx5_get_gid_table_len(i16 zeroext %param) #0 !dbg !12397 {
entry:
  %retval = alloca i32, align 4
  %param.addr = alloca i16, align 2
  store i16 %param, i16* %param.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %param.addr, metadata !12400, metadata !DIExpression()), !dbg !12401
  %0 = load i16, i16* %param.addr, align 2, !dbg !12402
  %conv = zext i16 %0 to i32, !dbg !12402
  %cmp = icmp sgt i32 %conv, 4, !dbg !12404
  br i1 %cmp, label %if.then, label %if.end, !dbg !12405

if.then:                                          ; preds = %entry
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.2, i64 0, i64 0)) #11, !dbg !12406
  store i32 0, i32* %retval, align 4, !dbg !12408
  br label %return, !dbg !12408

if.end:                                           ; preds = %entry
  %1 = load i16, i16* %param.addr, align 2, !dbg !12409
  %conv2 = zext i16 %1 to i32, !dbg !12409
  %shl = shl i32 1, %conv2, !dbg !12410
  %mul = mul i32 8, %shl, !dbg !12411
  store i32 %mul, i32* %retval, align 4, !dbg !12412
  br label %return, !dbg !12412

return:                                           ; preds = %if.end, %if.then
  %2 = load i32, i32* %retval, align 4, !dbg !12413
  ret i32 %2, !dbg !12413
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @mlx5_query_hca_vport_pkey(%struct.mlx5_core_dev* %dev, i8 zeroext %other_vport, i8 zeroext %port_num, i16 zeroext %vf_num, i16 zeroext %pkey_index, i16* %pkey) #0 !dbg !12414 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.mlx5_core_dev*, align 8
  %other_vport.addr = alloca i8, align 1
  %port_num.addr = alloca i8, align 1
  %vf_num.addr = alloca i16, align 2
  %pkey_index.addr = alloca i16, align 2
  %pkey.addr = alloca i16*, align 8
  %in_sz = alloca i32, align 4
  %out_sz = alloca i32, align 4
  %is_group_manager = alloca i32, align 4
  %out = alloca i8*, align 8
  %in = alloca i8*, align 8
  %pkarr = alloca i8*, align 8
  %nout = alloca i32, align 4
  %tbsz = alloca i32, align 4
  %err = alloca i32, align 4
  %i = alloca i32, align 4
  %_v = alloca i32, align 4
  %_v284 = alloca i32, align 4
  %_v463 = alloca i32, align 4
  %_v644 = alloca i32, align 4
  %_v874 = alloca i32, align 4
  %___t = alloca i32, align 4
  %tmp = alloca i32, align 4
  %tmp1084 = alloca i32, align 4
  store %struct.mlx5_core_dev* %dev, %struct.mlx5_core_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_core_dev** %dev.addr, metadata !12417, metadata !DIExpression()), !dbg !12418
  store i8 %other_vport, i8* %other_vport.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %other_vport.addr, metadata !12419, metadata !DIExpression()), !dbg !12420
  store i8 %port_num, i8* %port_num.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %port_num.addr, metadata !12421, metadata !DIExpression()), !dbg !12422
  store i16 %vf_num, i16* %vf_num.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %vf_num.addr, metadata !12423, metadata !DIExpression()), !dbg !12424
  store i16 %pkey_index, i16* %pkey_index.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %pkey_index.addr, metadata !12425, metadata !DIExpression()), !dbg !12426
  store i16* %pkey, i16** %pkey.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %pkey.addr, metadata !12427, metadata !DIExpression()), !dbg !12428
  call void @llvm.dbg.declare(metadata i32* %in_sz, metadata !12429, metadata !DIExpression()), !dbg !12430
  store i32 16, i32* %in_sz, align 4, !dbg !12430
  call void @llvm.dbg.declare(metadata i32* %out_sz, metadata !12431, metadata !DIExpression()), !dbg !12432
  store i32 16, i32* %out_sz, align 4, !dbg !12432
  call void @llvm.dbg.declare(metadata i32* %is_group_manager, metadata !12433, metadata !DIExpression()), !dbg !12434
  call void @llvm.dbg.declare(metadata i8** %out, metadata !12435, metadata !DIExpression()), !dbg !12436
  store i8* null, i8** %out, align 8, !dbg !12436
  call void @llvm.dbg.declare(metadata i8** %in, metadata !12437, metadata !DIExpression()), !dbg !12438
  store i8* null, i8** %in, align 8, !dbg !12438
  call void @llvm.dbg.declare(metadata i8** %pkarr, metadata !12439, metadata !DIExpression()), !dbg !12440
  call void @llvm.dbg.declare(metadata i32* %nout, metadata !12441, metadata !DIExpression()), !dbg !12442
  call void @llvm.dbg.declare(metadata i32* %tbsz, metadata !12443, metadata !DIExpression()), !dbg !12444
  call void @llvm.dbg.declare(metadata i32* %err, metadata !12445, metadata !DIExpression()), !dbg !12446
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12447, metadata !DIExpression()), !dbg !12448
  %0 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !12449
  %caps = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %0, i32 0, i32 9, !dbg !12449
  %hca_cur = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps, i32 0, i32 0, !dbg !12449
  %arrayidx = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur, i64 0, i64 0, !dbg !12449
  %arraydecay = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx, i64 0, i64 0, !dbg !12449
  %add.ptr = getelementptr i32, i32* %arraydecay, i64 13, !dbg !12449
  %1 = load i32, i32* %add.ptr, align 4, !dbg !12449
  %2 = call i1 @llvm.is.constant.i32(i32 %1), !dbg !12449
  br i1 %2, label %cond.true, label %cond.false, !dbg !12449

cond.true:                                        ; preds = %entry
  %3 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !12449
  %caps1 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %3, i32 0, i32 9, !dbg !12449
  %hca_cur2 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps1, i32 0, i32 0, !dbg !12449
  %arrayidx3 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur2, i64 0, i64 0, !dbg !12449
  %arraydecay4 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx3, i64 0, i64 0, !dbg !12449
  %add.ptr5 = getelementptr i32, i32* %arraydecay4, i64 13, !dbg !12449
  %4 = load i32, i32* %add.ptr5, align 4, !dbg !12449
  %and = and i32 %4, 255, !dbg !12449
  %shl = shl i32 %and, 24, !dbg !12449
  %5 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !12449
  %caps6 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %5, i32 0, i32 9, !dbg !12449
  %hca_cur7 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps6, i32 0, i32 0, !dbg !12449
  %arrayidx8 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur7, i64 0, i64 0, !dbg !12449
  %arraydecay9 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx8, i64 0, i64 0, !dbg !12449
  %add.ptr10 = getelementptr i32, i32* %arraydecay9, i64 13, !dbg !12449
  %6 = load i32, i32* %add.ptr10, align 4, !dbg !12449
  %and11 = and i32 %6, 65280, !dbg !12449
  %shl12 = shl i32 %and11, 8, !dbg !12449
  %or = or i32 %shl, %shl12, !dbg !12449
  %7 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !12449
  %caps13 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %7, i32 0, i32 9, !dbg !12449
  %hca_cur14 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps13, i32 0, i32 0, !dbg !12449
  %arrayidx15 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur14, i64 0, i64 0, !dbg !12449
  %arraydecay16 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx15, i64 0, i64 0, !dbg !12449
  %add.ptr17 = getelementptr i32, i32* %arraydecay16, i64 13, !dbg !12449
  %8 = load i32, i32* %add.ptr17, align 4, !dbg !12449
  %and18 = and i32 %8, 16711680, !dbg !12449
  %shr = lshr i32 %and18, 8, !dbg !12449
  %or19 = or i32 %or, %shr, !dbg !12449
  %9 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !12449
  %caps20 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %9, i32 0, i32 9, !dbg !12449
  %hca_cur21 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps20, i32 0, i32 0, !dbg !12449
  %arrayidx22 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur21, i64 0, i64 0, !dbg !12449
  %arraydecay23 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx22, i64 0, i64 0, !dbg !12449
  %add.ptr24 = getelementptr i32, i32* %arraydecay23, i64 13, !dbg !12449
  %10 = load i32, i32* %add.ptr24, align 4, !dbg !12449
  %and25 = and i32 %10, -16777216, !dbg !12449
  %shr26 = lshr i32 %and25, 24, !dbg !12449
  %or27 = or i32 %or19, %shr26, !dbg !12449
  br label %cond.end, !dbg !12449

cond.false:                                       ; preds = %entry
  %11 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !12449
  %caps28 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %11, i32 0, i32 9, !dbg !12449
  %hca_cur29 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps28, i32 0, i32 0, !dbg !12449
  %arrayidx30 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur29, i64 0, i64 0, !dbg !12449
  %arraydecay31 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx30, i64 0, i64 0, !dbg !12449
  %add.ptr32 = getelementptr i32, i32* %arraydecay31, i64 13, !dbg !12449
  %12 = load i32, i32* %add.ptr32, align 4, !dbg !12449
  %call = call i32 @__fswab32(i32 %12) #8, !dbg !12449
  br label %cond.end, !dbg !12449

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %or27, %cond.true ], [ %call, %cond.false ], !dbg !12449
  %shr33 = lshr i32 %cond, 31, !dbg !12449
  %and34 = and i32 %shr33, 1, !dbg !12449
  store i32 %and34, i32* %is_group_manager, align 4, !dbg !12450
  %13 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !12451
  %caps35 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %13, i32 0, i32 9, !dbg !12451
  %hca_cur36 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps35, i32 0, i32 0, !dbg !12451
  %arrayidx37 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur36, i64 0, i64 0, !dbg !12451
  %arraydecay38 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx37, i64 0, i64 0, !dbg !12451
  %add.ptr39 = getelementptr i32, i32* %arraydecay38, i64 12, !dbg !12451
  %14 = load i32, i32* %add.ptr39, align 4, !dbg !12451
  %15 = call i1 @llvm.is.constant.i32(i32 %14), !dbg !12451
  br i1 %15, label %cond.true40, label %cond.false72, !dbg !12451

cond.true40:                                      ; preds = %cond.end
  %16 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !12451
  %caps41 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %16, i32 0, i32 9, !dbg !12451
  %hca_cur42 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps41, i32 0, i32 0, !dbg !12451
  %arrayidx43 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur42, i64 0, i64 0, !dbg !12451
  %arraydecay44 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx43, i64 0, i64 0, !dbg !12451
  %add.ptr45 = getelementptr i32, i32* %arraydecay44, i64 12, !dbg !12451
  %17 = load i32, i32* %add.ptr45, align 4, !dbg !12451
  %and46 = and i32 %17, 255, !dbg !12451
  %shl47 = shl i32 %and46, 24, !dbg !12451
  %18 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !12451
  %caps48 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %18, i32 0, i32 9, !dbg !12451
  %hca_cur49 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps48, i32 0, i32 0, !dbg !12451
  %arrayidx50 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur49, i64 0, i64 0, !dbg !12451
  %arraydecay51 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx50, i64 0, i64 0, !dbg !12451
  %add.ptr52 = getelementptr i32, i32* %arraydecay51, i64 12, !dbg !12451
  %19 = load i32, i32* %add.ptr52, align 4, !dbg !12451
  %and53 = and i32 %19, 65280, !dbg !12451
  %shl54 = shl i32 %and53, 8, !dbg !12451
  %or55 = or i32 %shl47, %shl54, !dbg !12451
  %20 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !12451
  %caps56 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %20, i32 0, i32 9, !dbg !12451
  %hca_cur57 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps56, i32 0, i32 0, !dbg !12451
  %arrayidx58 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur57, i64 0, i64 0, !dbg !12451
  %arraydecay59 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx58, i64 0, i64 0, !dbg !12451
  %add.ptr60 = getelementptr i32, i32* %arraydecay59, i64 12, !dbg !12451
  %21 = load i32, i32* %add.ptr60, align 4, !dbg !12451
  %and61 = and i32 %21, 16711680, !dbg !12451
  %shr62 = lshr i32 %and61, 8, !dbg !12451
  %or63 = or i32 %or55, %shr62, !dbg !12451
  %22 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !12451
  %caps64 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %22, i32 0, i32 9, !dbg !12451
  %hca_cur65 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps64, i32 0, i32 0, !dbg !12451
  %arrayidx66 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur65, i64 0, i64 0, !dbg !12451
  %arraydecay67 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx66, i64 0, i64 0, !dbg !12451
  %add.ptr68 = getelementptr i32, i32* %arraydecay67, i64 12, !dbg !12451
  %23 = load i32, i32* %add.ptr68, align 4, !dbg !12451
  %and69 = and i32 %23, -16777216, !dbg !12451
  %shr70 = lshr i32 %and69, 24, !dbg !12451
  %or71 = or i32 %or63, %shr70, !dbg !12451
  br label %cond.end79, !dbg !12451

cond.false72:                                     ; preds = %cond.end
  %24 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !12451
  %caps73 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %24, i32 0, i32 9, !dbg !12451
  %hca_cur74 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps73, i32 0, i32 0, !dbg !12451
  %arrayidx75 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur74, i64 0, i64 0, !dbg !12451
  %arraydecay76 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx75, i64 0, i64 0, !dbg !12451
  %add.ptr77 = getelementptr i32, i32* %arraydecay76, i64 12, !dbg !12451
  %25 = load i32, i32* %add.ptr77, align 4, !dbg !12451
  %call78 = call i32 @__fswab32(i32 %25) #8, !dbg !12451
  br label %cond.end79, !dbg !12451

cond.end79:                                       ; preds = %cond.false72, %cond.true40
  %cond80 = phi i32 [ %or71, %cond.true40 ], [ %call78, %cond.false72 ], !dbg !12451
  %shr81 = lshr i32 %cond80, 0, !dbg !12451
  %and82 = and i32 %shr81, 65535, !dbg !12451
  %call83 = call zeroext i16 @mlx5_to_sw_pkey_sz(i32 %and82) #9, !dbg !12452
  %conv = zext i16 %call83 to i32, !dbg !12452
  store i32 %conv, i32* %tbsz, align 4, !dbg !12453
  %26 = load i16, i16* %pkey_index.addr, align 2, !dbg !12454
  %conv84 = zext i16 %26 to i32, !dbg !12454
  %27 = load i32, i32* %tbsz, align 4, !dbg !12456
  %cmp = icmp sgt i32 %conv84, %27, !dbg !12457
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !12458

land.lhs.true:                                    ; preds = %cond.end79
  %28 = load i16, i16* %pkey_index.addr, align 2, !dbg !12459
  %conv86 = zext i16 %28 to i32, !dbg !12459
  %cmp87 = icmp ne i32 %conv86, 65535, !dbg !12460
  br i1 %cmp87, label %if.then, label %if.end, !dbg !12461

if.then:                                          ; preds = %land.lhs.true
  store i32 -22, i32* %retval, align 4, !dbg !12462
  br label %return, !dbg !12462

if.end:                                           ; preds = %land.lhs.true, %cond.end79
  %29 = load i16, i16* %pkey_index.addr, align 2, !dbg !12463
  %conv89 = zext i16 %29 to i32, !dbg !12463
  %cmp90 = icmp eq i32 %conv89, 65535, !dbg !12465
  br i1 %cmp90, label %if.then92, label %if.else, !dbg !12466

if.then92:                                        ; preds = %if.end
  %30 = load i32, i32* %tbsz, align 4, !dbg !12467
  store i32 %30, i32* %nout, align 4, !dbg !12468
  br label %if.end93, !dbg !12469

if.else:                                          ; preds = %if.end
  store i32 1, i32* %nout, align 4, !dbg !12470
  br label %if.end93

if.end93:                                         ; preds = %if.else, %if.then92
  %31 = load i32, i32* %nout, align 4, !dbg !12471
  %conv94 = sext i32 %31 to i64, !dbg !12471
  %mul = mul i64 %conv94, 4, !dbg !12472
  %32 = load i32, i32* %out_sz, align 4, !dbg !12473
  %conv95 = sext i32 %32 to i64, !dbg !12473
  %add = add i64 %conv95, %mul, !dbg !12473
  %conv96 = trunc i64 %add to i32, !dbg !12473
  store i32 %conv96, i32* %out_sz, align 4, !dbg !12473
  %33 = load i32, i32* %in_sz, align 4, !dbg !12474
  %conv97 = sext i32 %33 to i64, !dbg !12474
  %call98 = call i8* @kzalloc(i64 %conv97, i32 3264) #9, !dbg !12475
  store i8* %call98, i8** %in, align 8, !dbg !12476
  %34 = load i32, i32* %out_sz, align 4, !dbg !12477
  %conv99 = sext i32 %34 to i64, !dbg !12477
  %call100 = call i8* @kzalloc(i64 %conv99, i32 3264) #9, !dbg !12478
  store i8* %call100, i8** %out, align 8, !dbg !12479
  %35 = load i8*, i8** %in, align 8, !dbg !12480
  %tobool = icmp ne i8* %35, null, !dbg !12480
  br i1 %tobool, label %lor.lhs.false, label %if.then102, !dbg !12482

lor.lhs.false:                                    ; preds = %if.end93
  %36 = load i8*, i8** %out, align 8, !dbg !12483
  %tobool101 = icmp ne i8* %36, null, !dbg !12483
  br i1 %tobool101, label %if.end103, label %if.then102, !dbg !12484

if.then102:                                       ; preds = %lor.lhs.false, %if.end93
  store i32 -12, i32* %err, align 4, !dbg !12485
  br label %out1087, !dbg !12487

if.end103:                                        ; preds = %lor.lhs.false
  br label %do.body, !dbg !12488

do.body:                                          ; preds = %if.end103
  call void @llvm.dbg.declare(metadata i32* %_v, metadata !12489, metadata !DIExpression()), !dbg !12491
  store i32 1893, i32* %_v, align 4, !dbg !12491
  br label %do.body104, !dbg !12491

do.body104:                                       ; preds = %do.body
  br label %do.end, !dbg !12492

do.end:                                           ; preds = %do.body104
  %37 = load i8*, i8** %in, align 8, !dbg !12491
  %38 = bitcast i8* %37 to i32*, !dbg !12491
  %add.ptr105 = getelementptr i32, i32* %38, i64 0, !dbg !12491
  %39 = load i32, i32* %add.ptr105, align 4, !dbg !12491
  %40 = call i1 @llvm.is.constant.i32(i32 %39), !dbg !12491
  br i1 %40, label %cond.true106, label %cond.false122, !dbg !12491

cond.true106:                                     ; preds = %do.end
  %41 = load i8*, i8** %in, align 8, !dbg !12491
  %42 = bitcast i8* %41 to i32*, !dbg !12491
  %add.ptr107 = getelementptr i32, i32* %42, i64 0, !dbg !12491
  %43 = load i32, i32* %add.ptr107, align 4, !dbg !12491
  %and108 = and i32 %43, 255, !dbg !12491
  %shl109 = shl i32 %and108, 24, !dbg !12491
  %44 = load i8*, i8** %in, align 8, !dbg !12491
  %45 = bitcast i8* %44 to i32*, !dbg !12491
  %add.ptr110 = getelementptr i32, i32* %45, i64 0, !dbg !12491
  %46 = load i32, i32* %add.ptr110, align 4, !dbg !12491
  %and111 = and i32 %46, 65280, !dbg !12491
  %shl112 = shl i32 %and111, 8, !dbg !12491
  %or113 = or i32 %shl109, %shl112, !dbg !12491
  %47 = load i8*, i8** %in, align 8, !dbg !12491
  %48 = bitcast i8* %47 to i32*, !dbg !12491
  %add.ptr114 = getelementptr i32, i32* %48, i64 0, !dbg !12491
  %49 = load i32, i32* %add.ptr114, align 4, !dbg !12491
  %and115 = and i32 %49, 16711680, !dbg !12491
  %shr116 = lshr i32 %and115, 8, !dbg !12491
  %or117 = or i32 %or113, %shr116, !dbg !12491
  %50 = load i8*, i8** %in, align 8, !dbg !12491
  %51 = bitcast i8* %50 to i32*, !dbg !12491
  %add.ptr118 = getelementptr i32, i32* %51, i64 0, !dbg !12491
  %52 = load i32, i32* %add.ptr118, align 4, !dbg !12491
  %and119 = and i32 %52, -16777216, !dbg !12491
  %shr120 = lshr i32 %and119, 24, !dbg !12491
  %or121 = or i32 %or117, %shr120, !dbg !12491
  br label %cond.end125, !dbg !12491

cond.false122:                                    ; preds = %do.end
  %53 = load i8*, i8** %in, align 8, !dbg !12491
  %54 = bitcast i8* %53 to i32*, !dbg !12491
  %add.ptr123 = getelementptr i32, i32* %54, i64 0, !dbg !12491
  %55 = load i32, i32* %add.ptr123, align 4, !dbg !12491
  %call124 = call i32 @__fswab32(i32 %55) #8, !dbg !12491
  br label %cond.end125, !dbg !12491

cond.end125:                                      ; preds = %cond.false122, %cond.true106
  %cond126 = phi i32 [ %or121, %cond.true106 ], [ %call124, %cond.false122 ], !dbg !12491
  %and127 = and i32 %cond126, 65535, !dbg !12491
  %56 = load i32, i32* %_v, align 4, !dbg !12491
  %and128 = and i32 %56, 65535, !dbg !12491
  %shl129 = shl i32 %and128, 16, !dbg !12491
  %or130 = or i32 %and127, %shl129, !dbg !12491
  %57 = call i1 @llvm.is.constant.i32(i32 %or130), !dbg !12491
  br i1 %57, label %cond.true131, label %cond.false247, !dbg !12491

cond.true131:                                     ; preds = %cond.end125
  %58 = load i8*, i8** %in, align 8, !dbg !12491
  %59 = bitcast i8* %58 to i32*, !dbg !12491
  %add.ptr132 = getelementptr i32, i32* %59, i64 0, !dbg !12491
  %60 = load i32, i32* %add.ptr132, align 4, !dbg !12491
  %61 = call i1 @llvm.is.constant.i32(i32 %60), !dbg !12491
  br i1 %61, label %cond.true133, label %cond.false149, !dbg !12491

cond.true133:                                     ; preds = %cond.true131
  %62 = load i8*, i8** %in, align 8, !dbg !12491
  %63 = bitcast i8* %62 to i32*, !dbg !12491
  %add.ptr134 = getelementptr i32, i32* %63, i64 0, !dbg !12491
  %64 = load i32, i32* %add.ptr134, align 4, !dbg !12491
  %and135 = and i32 %64, 255, !dbg !12491
  %shl136 = shl i32 %and135, 24, !dbg !12491
  %65 = load i8*, i8** %in, align 8, !dbg !12491
  %66 = bitcast i8* %65 to i32*, !dbg !12491
  %add.ptr137 = getelementptr i32, i32* %66, i64 0, !dbg !12491
  %67 = load i32, i32* %add.ptr137, align 4, !dbg !12491
  %and138 = and i32 %67, 65280, !dbg !12491
  %shl139 = shl i32 %and138, 8, !dbg !12491
  %or140 = or i32 %shl136, %shl139, !dbg !12491
  %68 = load i8*, i8** %in, align 8, !dbg !12491
  %69 = bitcast i8* %68 to i32*, !dbg !12491
  %add.ptr141 = getelementptr i32, i32* %69, i64 0, !dbg !12491
  %70 = load i32, i32* %add.ptr141, align 4, !dbg !12491
  %and142 = and i32 %70, 16711680, !dbg !12491
  %shr143 = lshr i32 %and142, 8, !dbg !12491
  %or144 = or i32 %or140, %shr143, !dbg !12491
  %71 = load i8*, i8** %in, align 8, !dbg !12491
  %72 = bitcast i8* %71 to i32*, !dbg !12491
  %add.ptr145 = getelementptr i32, i32* %72, i64 0, !dbg !12491
  %73 = load i32, i32* %add.ptr145, align 4, !dbg !12491
  %and146 = and i32 %73, -16777216, !dbg !12491
  %shr147 = lshr i32 %and146, 24, !dbg !12491
  %or148 = or i32 %or144, %shr147, !dbg !12491
  br label %cond.end152, !dbg !12491

cond.false149:                                    ; preds = %cond.true131
  %74 = load i8*, i8** %in, align 8, !dbg !12491
  %75 = bitcast i8* %74 to i32*, !dbg !12491
  %add.ptr150 = getelementptr i32, i32* %75, i64 0, !dbg !12491
  %76 = load i32, i32* %add.ptr150, align 4, !dbg !12491
  %call151 = call i32 @__fswab32(i32 %76) #8, !dbg !12491
  br label %cond.end152, !dbg !12491

cond.end152:                                      ; preds = %cond.false149, %cond.true133
  %cond153 = phi i32 [ %or148, %cond.true133 ], [ %call151, %cond.false149 ], !dbg !12491
  %and154 = and i32 %cond153, 65535, !dbg !12491
  %77 = load i32, i32* %_v, align 4, !dbg !12491
  %and155 = and i32 %77, 65535, !dbg !12491
  %shl156 = shl i32 %and155, 16, !dbg !12491
  %or157 = or i32 %and154, %shl156, !dbg !12491
  %and158 = and i32 %or157, 255, !dbg !12491
  %shl159 = shl i32 %and158, 24, !dbg !12491
  %78 = load i8*, i8** %in, align 8, !dbg !12491
  %79 = bitcast i8* %78 to i32*, !dbg !12491
  %add.ptr160 = getelementptr i32, i32* %79, i64 0, !dbg !12491
  %80 = load i32, i32* %add.ptr160, align 4, !dbg !12491
  %81 = call i1 @llvm.is.constant.i32(i32 %80), !dbg !12491
  br i1 %81, label %cond.true161, label %cond.false177, !dbg !12491

cond.true161:                                     ; preds = %cond.end152
  %82 = load i8*, i8** %in, align 8, !dbg !12491
  %83 = bitcast i8* %82 to i32*, !dbg !12491
  %add.ptr162 = getelementptr i32, i32* %83, i64 0, !dbg !12491
  %84 = load i32, i32* %add.ptr162, align 4, !dbg !12491
  %and163 = and i32 %84, 255, !dbg !12491
  %shl164 = shl i32 %and163, 24, !dbg !12491
  %85 = load i8*, i8** %in, align 8, !dbg !12491
  %86 = bitcast i8* %85 to i32*, !dbg !12491
  %add.ptr165 = getelementptr i32, i32* %86, i64 0, !dbg !12491
  %87 = load i32, i32* %add.ptr165, align 4, !dbg !12491
  %and166 = and i32 %87, 65280, !dbg !12491
  %shl167 = shl i32 %and166, 8, !dbg !12491
  %or168 = or i32 %shl164, %shl167, !dbg !12491
  %88 = load i8*, i8** %in, align 8, !dbg !12491
  %89 = bitcast i8* %88 to i32*, !dbg !12491
  %add.ptr169 = getelementptr i32, i32* %89, i64 0, !dbg !12491
  %90 = load i32, i32* %add.ptr169, align 4, !dbg !12491
  %and170 = and i32 %90, 16711680, !dbg !12491
  %shr171 = lshr i32 %and170, 8, !dbg !12491
  %or172 = or i32 %or168, %shr171, !dbg !12491
  %91 = load i8*, i8** %in, align 8, !dbg !12491
  %92 = bitcast i8* %91 to i32*, !dbg !12491
  %add.ptr173 = getelementptr i32, i32* %92, i64 0, !dbg !12491
  %93 = load i32, i32* %add.ptr173, align 4, !dbg !12491
  %and174 = and i32 %93, -16777216, !dbg !12491
  %shr175 = lshr i32 %and174, 24, !dbg !12491
  %or176 = or i32 %or172, %shr175, !dbg !12491
  br label %cond.end180, !dbg !12491

cond.false177:                                    ; preds = %cond.end152
  %94 = load i8*, i8** %in, align 8, !dbg !12491
  %95 = bitcast i8* %94 to i32*, !dbg !12491
  %add.ptr178 = getelementptr i32, i32* %95, i64 0, !dbg !12491
  %96 = load i32, i32* %add.ptr178, align 4, !dbg !12491
  %call179 = call i32 @__fswab32(i32 %96) #8, !dbg !12491
  br label %cond.end180, !dbg !12491

cond.end180:                                      ; preds = %cond.false177, %cond.true161
  %cond181 = phi i32 [ %or176, %cond.true161 ], [ %call179, %cond.false177 ], !dbg !12491
  %and182 = and i32 %cond181, 65535, !dbg !12491
  %97 = load i32, i32* %_v, align 4, !dbg !12491
  %and183 = and i32 %97, 65535, !dbg !12491
  %shl184 = shl i32 %and183, 16, !dbg !12491
  %or185 = or i32 %and182, %shl184, !dbg !12491
  %and186 = and i32 %or185, 65280, !dbg !12491
  %shl187 = shl i32 %and186, 8, !dbg !12491
  %or188 = or i32 %shl159, %shl187, !dbg !12491
  %98 = load i8*, i8** %in, align 8, !dbg !12491
  %99 = bitcast i8* %98 to i32*, !dbg !12491
  %add.ptr189 = getelementptr i32, i32* %99, i64 0, !dbg !12491
  %100 = load i32, i32* %add.ptr189, align 4, !dbg !12491
  %101 = call i1 @llvm.is.constant.i32(i32 %100), !dbg !12491
  br i1 %101, label %cond.true190, label %cond.false206, !dbg !12491

cond.true190:                                     ; preds = %cond.end180
  %102 = load i8*, i8** %in, align 8, !dbg !12491
  %103 = bitcast i8* %102 to i32*, !dbg !12491
  %add.ptr191 = getelementptr i32, i32* %103, i64 0, !dbg !12491
  %104 = load i32, i32* %add.ptr191, align 4, !dbg !12491
  %and192 = and i32 %104, 255, !dbg !12491
  %shl193 = shl i32 %and192, 24, !dbg !12491
  %105 = load i8*, i8** %in, align 8, !dbg !12491
  %106 = bitcast i8* %105 to i32*, !dbg !12491
  %add.ptr194 = getelementptr i32, i32* %106, i64 0, !dbg !12491
  %107 = load i32, i32* %add.ptr194, align 4, !dbg !12491
  %and195 = and i32 %107, 65280, !dbg !12491
  %shl196 = shl i32 %and195, 8, !dbg !12491
  %or197 = or i32 %shl193, %shl196, !dbg !12491
  %108 = load i8*, i8** %in, align 8, !dbg !12491
  %109 = bitcast i8* %108 to i32*, !dbg !12491
  %add.ptr198 = getelementptr i32, i32* %109, i64 0, !dbg !12491
  %110 = load i32, i32* %add.ptr198, align 4, !dbg !12491
  %and199 = and i32 %110, 16711680, !dbg !12491
  %shr200 = lshr i32 %and199, 8, !dbg !12491
  %or201 = or i32 %or197, %shr200, !dbg !12491
  %111 = load i8*, i8** %in, align 8, !dbg !12491
  %112 = bitcast i8* %111 to i32*, !dbg !12491
  %add.ptr202 = getelementptr i32, i32* %112, i64 0, !dbg !12491
  %113 = load i32, i32* %add.ptr202, align 4, !dbg !12491
  %and203 = and i32 %113, -16777216, !dbg !12491
  %shr204 = lshr i32 %and203, 24, !dbg !12491
  %or205 = or i32 %or201, %shr204, !dbg !12491
  br label %cond.end209, !dbg !12491

cond.false206:                                    ; preds = %cond.end180
  %114 = load i8*, i8** %in, align 8, !dbg !12491
  %115 = bitcast i8* %114 to i32*, !dbg !12491
  %add.ptr207 = getelementptr i32, i32* %115, i64 0, !dbg !12491
  %116 = load i32, i32* %add.ptr207, align 4, !dbg !12491
  %call208 = call i32 @__fswab32(i32 %116) #8, !dbg !12491
  br label %cond.end209, !dbg !12491

cond.end209:                                      ; preds = %cond.false206, %cond.true190
  %cond210 = phi i32 [ %or205, %cond.true190 ], [ %call208, %cond.false206 ], !dbg !12491
  %and211 = and i32 %cond210, 65535, !dbg !12491
  %117 = load i32, i32* %_v, align 4, !dbg !12491
  %and212 = and i32 %117, 65535, !dbg !12491
  %shl213 = shl i32 %and212, 16, !dbg !12491
  %or214 = or i32 %and211, %shl213, !dbg !12491
  %and215 = and i32 %or214, 16711680, !dbg !12491
  %shr216 = lshr i32 %and215, 8, !dbg !12491
  %or217 = or i32 %or188, %shr216, !dbg !12491
  %118 = load i8*, i8** %in, align 8, !dbg !12491
  %119 = bitcast i8* %118 to i32*, !dbg !12491
  %add.ptr218 = getelementptr i32, i32* %119, i64 0, !dbg !12491
  %120 = load i32, i32* %add.ptr218, align 4, !dbg !12491
  %121 = call i1 @llvm.is.constant.i32(i32 %120), !dbg !12491
  br i1 %121, label %cond.true219, label %cond.false235, !dbg !12491

cond.true219:                                     ; preds = %cond.end209
  %122 = load i8*, i8** %in, align 8, !dbg !12491
  %123 = bitcast i8* %122 to i32*, !dbg !12491
  %add.ptr220 = getelementptr i32, i32* %123, i64 0, !dbg !12491
  %124 = load i32, i32* %add.ptr220, align 4, !dbg !12491
  %and221 = and i32 %124, 255, !dbg !12491
  %shl222 = shl i32 %and221, 24, !dbg !12491
  %125 = load i8*, i8** %in, align 8, !dbg !12491
  %126 = bitcast i8* %125 to i32*, !dbg !12491
  %add.ptr223 = getelementptr i32, i32* %126, i64 0, !dbg !12491
  %127 = load i32, i32* %add.ptr223, align 4, !dbg !12491
  %and224 = and i32 %127, 65280, !dbg !12491
  %shl225 = shl i32 %and224, 8, !dbg !12491
  %or226 = or i32 %shl222, %shl225, !dbg !12491
  %128 = load i8*, i8** %in, align 8, !dbg !12491
  %129 = bitcast i8* %128 to i32*, !dbg !12491
  %add.ptr227 = getelementptr i32, i32* %129, i64 0, !dbg !12491
  %130 = load i32, i32* %add.ptr227, align 4, !dbg !12491
  %and228 = and i32 %130, 16711680, !dbg !12491
  %shr229 = lshr i32 %and228, 8, !dbg !12491
  %or230 = or i32 %or226, %shr229, !dbg !12491
  %131 = load i8*, i8** %in, align 8, !dbg !12491
  %132 = bitcast i8* %131 to i32*, !dbg !12491
  %add.ptr231 = getelementptr i32, i32* %132, i64 0, !dbg !12491
  %133 = load i32, i32* %add.ptr231, align 4, !dbg !12491
  %and232 = and i32 %133, -16777216, !dbg !12491
  %shr233 = lshr i32 %and232, 24, !dbg !12491
  %or234 = or i32 %or230, %shr233, !dbg !12491
  br label %cond.end238, !dbg !12491

cond.false235:                                    ; preds = %cond.end209
  %134 = load i8*, i8** %in, align 8, !dbg !12491
  %135 = bitcast i8* %134 to i32*, !dbg !12491
  %add.ptr236 = getelementptr i32, i32* %135, i64 0, !dbg !12491
  %136 = load i32, i32* %add.ptr236, align 4, !dbg !12491
  %call237 = call i32 @__fswab32(i32 %136) #8, !dbg !12491
  br label %cond.end238, !dbg !12491

cond.end238:                                      ; preds = %cond.false235, %cond.true219
  %cond239 = phi i32 [ %or234, %cond.true219 ], [ %call237, %cond.false235 ], !dbg !12491
  %and240 = and i32 %cond239, 65535, !dbg !12491
  %137 = load i32, i32* %_v, align 4, !dbg !12491
  %and241 = and i32 %137, 65535, !dbg !12491
  %shl242 = shl i32 %and241, 16, !dbg !12491
  %or243 = or i32 %and240, %shl242, !dbg !12491
  %and244 = and i32 %or243, -16777216, !dbg !12491
  %shr245 = lshr i32 %and244, 24, !dbg !12491
  %or246 = or i32 %or217, %shr245, !dbg !12491
  br label %cond.end275, !dbg !12491

cond.false247:                                    ; preds = %cond.end125
  %138 = load i8*, i8** %in, align 8, !dbg !12491
  %139 = bitcast i8* %138 to i32*, !dbg !12491
  %add.ptr248 = getelementptr i32, i32* %139, i64 0, !dbg !12491
  %140 = load i32, i32* %add.ptr248, align 4, !dbg !12491
  %141 = call i1 @llvm.is.constant.i32(i32 %140), !dbg !12491
  br i1 %141, label %cond.true249, label %cond.false265, !dbg !12491

cond.true249:                                     ; preds = %cond.false247
  %142 = load i8*, i8** %in, align 8, !dbg !12491
  %143 = bitcast i8* %142 to i32*, !dbg !12491
  %add.ptr250 = getelementptr i32, i32* %143, i64 0, !dbg !12491
  %144 = load i32, i32* %add.ptr250, align 4, !dbg !12491
  %and251 = and i32 %144, 255, !dbg !12491
  %shl252 = shl i32 %and251, 24, !dbg !12491
  %145 = load i8*, i8** %in, align 8, !dbg !12491
  %146 = bitcast i8* %145 to i32*, !dbg !12491
  %add.ptr253 = getelementptr i32, i32* %146, i64 0, !dbg !12491
  %147 = load i32, i32* %add.ptr253, align 4, !dbg !12491
  %and254 = and i32 %147, 65280, !dbg !12491
  %shl255 = shl i32 %and254, 8, !dbg !12491
  %or256 = or i32 %shl252, %shl255, !dbg !12491
  %148 = load i8*, i8** %in, align 8, !dbg !12491
  %149 = bitcast i8* %148 to i32*, !dbg !12491
  %add.ptr257 = getelementptr i32, i32* %149, i64 0, !dbg !12491
  %150 = load i32, i32* %add.ptr257, align 4, !dbg !12491
  %and258 = and i32 %150, 16711680, !dbg !12491
  %shr259 = lshr i32 %and258, 8, !dbg !12491
  %or260 = or i32 %or256, %shr259, !dbg !12491
  %151 = load i8*, i8** %in, align 8, !dbg !12491
  %152 = bitcast i8* %151 to i32*, !dbg !12491
  %add.ptr261 = getelementptr i32, i32* %152, i64 0, !dbg !12491
  %153 = load i32, i32* %add.ptr261, align 4, !dbg !12491
  %and262 = and i32 %153, -16777216, !dbg !12491
  %shr263 = lshr i32 %and262, 24, !dbg !12491
  %or264 = or i32 %or260, %shr263, !dbg !12491
  br label %cond.end268, !dbg !12491

cond.false265:                                    ; preds = %cond.false247
  %154 = load i8*, i8** %in, align 8, !dbg !12491
  %155 = bitcast i8* %154 to i32*, !dbg !12491
  %add.ptr266 = getelementptr i32, i32* %155, i64 0, !dbg !12491
  %156 = load i32, i32* %add.ptr266, align 4, !dbg !12491
  %call267 = call i32 @__fswab32(i32 %156) #8, !dbg !12491
  br label %cond.end268, !dbg !12491

cond.end268:                                      ; preds = %cond.false265, %cond.true249
  %cond269 = phi i32 [ %or264, %cond.true249 ], [ %call267, %cond.false265 ], !dbg !12491
  %and270 = and i32 %cond269, 65535, !dbg !12491
  %157 = load i32, i32* %_v, align 4, !dbg !12491
  %and271 = and i32 %157, 65535, !dbg !12491
  %shl272 = shl i32 %and271, 16, !dbg !12491
  %or273 = or i32 %and270, %shl272, !dbg !12491
  %call274 = call i32 @__fswab32(i32 %or273) #8, !dbg !12491
  br label %cond.end275, !dbg !12491

cond.end275:                                      ; preds = %cond.end268, %cond.end238
  %cond276 = phi i32 [ %or246, %cond.end238 ], [ %call274, %cond.end268 ], !dbg !12491
  %158 = load i8*, i8** %in, align 8, !dbg !12491
  %159 = bitcast i8* %158 to i32*, !dbg !12491
  %add.ptr277 = getelementptr i32, i32* %159, i64 0, !dbg !12491
  store i32 %cond276, i32* %add.ptr277, align 4, !dbg !12491
  br label %do.end278, !dbg !12491

do.end278:                                        ; preds = %cond.end275
  %160 = load i8, i8* %other_vport.addr, align 1, !dbg !12494
  %tobool279 = icmp ne i8 %160, 0, !dbg !12494
  br i1 %tobool279, label %if.then280, label %if.end642, !dbg !12496

if.then280:                                       ; preds = %do.end278
  %161 = load i32, i32* %is_group_manager, align 4, !dbg !12497
  %tobool281 = icmp ne i32 %161, 0, !dbg !12497
  br i1 %tobool281, label %if.then282, label %if.else640, !dbg !12500

if.then282:                                       ; preds = %if.then280
  br label %do.body283, !dbg !12501

do.body283:                                       ; preds = %if.then282
  call void @llvm.dbg.declare(metadata i32* %_v284, metadata !12503, metadata !DIExpression()), !dbg !12505
  %162 = load i16, i16* %vf_num.addr, align 2, !dbg !12505
  %conv285 = zext i16 %162 to i32, !dbg !12505
  store i32 %conv285, i32* %_v284, align 4, !dbg !12505
  br label %do.body286, !dbg !12505

do.body286:                                       ; preds = %do.body283
  br label %do.end287, !dbg !12506

do.end287:                                        ; preds = %do.body286
  %163 = load i8*, i8** %in, align 8, !dbg !12505
  %164 = bitcast i8* %163 to i32*, !dbg !12505
  %add.ptr288 = getelementptr i32, i32* %164, i64 2, !dbg !12505
  %165 = load i32, i32* %add.ptr288, align 4, !dbg !12505
  %166 = call i1 @llvm.is.constant.i32(i32 %165), !dbg !12505
  br i1 %166, label %cond.true289, label %cond.false305, !dbg !12505

cond.true289:                                     ; preds = %do.end287
  %167 = load i8*, i8** %in, align 8, !dbg !12505
  %168 = bitcast i8* %167 to i32*, !dbg !12505
  %add.ptr290 = getelementptr i32, i32* %168, i64 2, !dbg !12505
  %169 = load i32, i32* %add.ptr290, align 4, !dbg !12505
  %and291 = and i32 %169, 255, !dbg !12505
  %shl292 = shl i32 %and291, 24, !dbg !12505
  %170 = load i8*, i8** %in, align 8, !dbg !12505
  %171 = bitcast i8* %170 to i32*, !dbg !12505
  %add.ptr293 = getelementptr i32, i32* %171, i64 2, !dbg !12505
  %172 = load i32, i32* %add.ptr293, align 4, !dbg !12505
  %and294 = and i32 %172, 65280, !dbg !12505
  %shl295 = shl i32 %and294, 8, !dbg !12505
  %or296 = or i32 %shl292, %shl295, !dbg !12505
  %173 = load i8*, i8** %in, align 8, !dbg !12505
  %174 = bitcast i8* %173 to i32*, !dbg !12505
  %add.ptr297 = getelementptr i32, i32* %174, i64 2, !dbg !12505
  %175 = load i32, i32* %add.ptr297, align 4, !dbg !12505
  %and298 = and i32 %175, 16711680, !dbg !12505
  %shr299 = lshr i32 %and298, 8, !dbg !12505
  %or300 = or i32 %or296, %shr299, !dbg !12505
  %176 = load i8*, i8** %in, align 8, !dbg !12505
  %177 = bitcast i8* %176 to i32*, !dbg !12505
  %add.ptr301 = getelementptr i32, i32* %177, i64 2, !dbg !12505
  %178 = load i32, i32* %add.ptr301, align 4, !dbg !12505
  %and302 = and i32 %178, -16777216, !dbg !12505
  %shr303 = lshr i32 %and302, 24, !dbg !12505
  %or304 = or i32 %or300, %shr303, !dbg !12505
  br label %cond.end308, !dbg !12505

cond.false305:                                    ; preds = %do.end287
  %179 = load i8*, i8** %in, align 8, !dbg !12505
  %180 = bitcast i8* %179 to i32*, !dbg !12505
  %add.ptr306 = getelementptr i32, i32* %180, i64 2, !dbg !12505
  %181 = load i32, i32* %add.ptr306, align 4, !dbg !12505
  %call307 = call i32 @__fswab32(i32 %181) #8, !dbg !12505
  br label %cond.end308, !dbg !12505

cond.end308:                                      ; preds = %cond.false305, %cond.true289
  %cond309 = phi i32 [ %or304, %cond.true289 ], [ %call307, %cond.false305 ], !dbg !12505
  %and310 = and i32 %cond309, -65536, !dbg !12505
  %182 = load i32, i32* %_v284, align 4, !dbg !12505
  %and311 = and i32 %182, 65535, !dbg !12505
  %shl312 = shl i32 %and311, 0, !dbg !12505
  %or313 = or i32 %and310, %shl312, !dbg !12505
  %183 = call i1 @llvm.is.constant.i32(i32 %or313), !dbg !12505
  br i1 %183, label %cond.true314, label %cond.false430, !dbg !12505

cond.true314:                                     ; preds = %cond.end308
  %184 = load i8*, i8** %in, align 8, !dbg !12505
  %185 = bitcast i8* %184 to i32*, !dbg !12505
  %add.ptr315 = getelementptr i32, i32* %185, i64 2, !dbg !12505
  %186 = load i32, i32* %add.ptr315, align 4, !dbg !12505
  %187 = call i1 @llvm.is.constant.i32(i32 %186), !dbg !12505
  br i1 %187, label %cond.true316, label %cond.false332, !dbg !12505

cond.true316:                                     ; preds = %cond.true314
  %188 = load i8*, i8** %in, align 8, !dbg !12505
  %189 = bitcast i8* %188 to i32*, !dbg !12505
  %add.ptr317 = getelementptr i32, i32* %189, i64 2, !dbg !12505
  %190 = load i32, i32* %add.ptr317, align 4, !dbg !12505
  %and318 = and i32 %190, 255, !dbg !12505
  %shl319 = shl i32 %and318, 24, !dbg !12505
  %191 = load i8*, i8** %in, align 8, !dbg !12505
  %192 = bitcast i8* %191 to i32*, !dbg !12505
  %add.ptr320 = getelementptr i32, i32* %192, i64 2, !dbg !12505
  %193 = load i32, i32* %add.ptr320, align 4, !dbg !12505
  %and321 = and i32 %193, 65280, !dbg !12505
  %shl322 = shl i32 %and321, 8, !dbg !12505
  %or323 = or i32 %shl319, %shl322, !dbg !12505
  %194 = load i8*, i8** %in, align 8, !dbg !12505
  %195 = bitcast i8* %194 to i32*, !dbg !12505
  %add.ptr324 = getelementptr i32, i32* %195, i64 2, !dbg !12505
  %196 = load i32, i32* %add.ptr324, align 4, !dbg !12505
  %and325 = and i32 %196, 16711680, !dbg !12505
  %shr326 = lshr i32 %and325, 8, !dbg !12505
  %or327 = or i32 %or323, %shr326, !dbg !12505
  %197 = load i8*, i8** %in, align 8, !dbg !12505
  %198 = bitcast i8* %197 to i32*, !dbg !12505
  %add.ptr328 = getelementptr i32, i32* %198, i64 2, !dbg !12505
  %199 = load i32, i32* %add.ptr328, align 4, !dbg !12505
  %and329 = and i32 %199, -16777216, !dbg !12505
  %shr330 = lshr i32 %and329, 24, !dbg !12505
  %or331 = or i32 %or327, %shr330, !dbg !12505
  br label %cond.end335, !dbg !12505

cond.false332:                                    ; preds = %cond.true314
  %200 = load i8*, i8** %in, align 8, !dbg !12505
  %201 = bitcast i8* %200 to i32*, !dbg !12505
  %add.ptr333 = getelementptr i32, i32* %201, i64 2, !dbg !12505
  %202 = load i32, i32* %add.ptr333, align 4, !dbg !12505
  %call334 = call i32 @__fswab32(i32 %202) #8, !dbg !12505
  br label %cond.end335, !dbg !12505

cond.end335:                                      ; preds = %cond.false332, %cond.true316
  %cond336 = phi i32 [ %or331, %cond.true316 ], [ %call334, %cond.false332 ], !dbg !12505
  %and337 = and i32 %cond336, -65536, !dbg !12505
  %203 = load i32, i32* %_v284, align 4, !dbg !12505
  %and338 = and i32 %203, 65535, !dbg !12505
  %shl339 = shl i32 %and338, 0, !dbg !12505
  %or340 = or i32 %and337, %shl339, !dbg !12505
  %and341 = and i32 %or340, 255, !dbg !12505
  %shl342 = shl i32 %and341, 24, !dbg !12505
  %204 = load i8*, i8** %in, align 8, !dbg !12505
  %205 = bitcast i8* %204 to i32*, !dbg !12505
  %add.ptr343 = getelementptr i32, i32* %205, i64 2, !dbg !12505
  %206 = load i32, i32* %add.ptr343, align 4, !dbg !12505
  %207 = call i1 @llvm.is.constant.i32(i32 %206), !dbg !12505
  br i1 %207, label %cond.true344, label %cond.false360, !dbg !12505

cond.true344:                                     ; preds = %cond.end335
  %208 = load i8*, i8** %in, align 8, !dbg !12505
  %209 = bitcast i8* %208 to i32*, !dbg !12505
  %add.ptr345 = getelementptr i32, i32* %209, i64 2, !dbg !12505
  %210 = load i32, i32* %add.ptr345, align 4, !dbg !12505
  %and346 = and i32 %210, 255, !dbg !12505
  %shl347 = shl i32 %and346, 24, !dbg !12505
  %211 = load i8*, i8** %in, align 8, !dbg !12505
  %212 = bitcast i8* %211 to i32*, !dbg !12505
  %add.ptr348 = getelementptr i32, i32* %212, i64 2, !dbg !12505
  %213 = load i32, i32* %add.ptr348, align 4, !dbg !12505
  %and349 = and i32 %213, 65280, !dbg !12505
  %shl350 = shl i32 %and349, 8, !dbg !12505
  %or351 = or i32 %shl347, %shl350, !dbg !12505
  %214 = load i8*, i8** %in, align 8, !dbg !12505
  %215 = bitcast i8* %214 to i32*, !dbg !12505
  %add.ptr352 = getelementptr i32, i32* %215, i64 2, !dbg !12505
  %216 = load i32, i32* %add.ptr352, align 4, !dbg !12505
  %and353 = and i32 %216, 16711680, !dbg !12505
  %shr354 = lshr i32 %and353, 8, !dbg !12505
  %or355 = or i32 %or351, %shr354, !dbg !12505
  %217 = load i8*, i8** %in, align 8, !dbg !12505
  %218 = bitcast i8* %217 to i32*, !dbg !12505
  %add.ptr356 = getelementptr i32, i32* %218, i64 2, !dbg !12505
  %219 = load i32, i32* %add.ptr356, align 4, !dbg !12505
  %and357 = and i32 %219, -16777216, !dbg !12505
  %shr358 = lshr i32 %and357, 24, !dbg !12505
  %or359 = or i32 %or355, %shr358, !dbg !12505
  br label %cond.end363, !dbg !12505

cond.false360:                                    ; preds = %cond.end335
  %220 = load i8*, i8** %in, align 8, !dbg !12505
  %221 = bitcast i8* %220 to i32*, !dbg !12505
  %add.ptr361 = getelementptr i32, i32* %221, i64 2, !dbg !12505
  %222 = load i32, i32* %add.ptr361, align 4, !dbg !12505
  %call362 = call i32 @__fswab32(i32 %222) #8, !dbg !12505
  br label %cond.end363, !dbg !12505

cond.end363:                                      ; preds = %cond.false360, %cond.true344
  %cond364 = phi i32 [ %or359, %cond.true344 ], [ %call362, %cond.false360 ], !dbg !12505
  %and365 = and i32 %cond364, -65536, !dbg !12505
  %223 = load i32, i32* %_v284, align 4, !dbg !12505
  %and366 = and i32 %223, 65535, !dbg !12505
  %shl367 = shl i32 %and366, 0, !dbg !12505
  %or368 = or i32 %and365, %shl367, !dbg !12505
  %and369 = and i32 %or368, 65280, !dbg !12505
  %shl370 = shl i32 %and369, 8, !dbg !12505
  %or371 = or i32 %shl342, %shl370, !dbg !12505
  %224 = load i8*, i8** %in, align 8, !dbg !12505
  %225 = bitcast i8* %224 to i32*, !dbg !12505
  %add.ptr372 = getelementptr i32, i32* %225, i64 2, !dbg !12505
  %226 = load i32, i32* %add.ptr372, align 4, !dbg !12505
  %227 = call i1 @llvm.is.constant.i32(i32 %226), !dbg !12505
  br i1 %227, label %cond.true373, label %cond.false389, !dbg !12505

cond.true373:                                     ; preds = %cond.end363
  %228 = load i8*, i8** %in, align 8, !dbg !12505
  %229 = bitcast i8* %228 to i32*, !dbg !12505
  %add.ptr374 = getelementptr i32, i32* %229, i64 2, !dbg !12505
  %230 = load i32, i32* %add.ptr374, align 4, !dbg !12505
  %and375 = and i32 %230, 255, !dbg !12505
  %shl376 = shl i32 %and375, 24, !dbg !12505
  %231 = load i8*, i8** %in, align 8, !dbg !12505
  %232 = bitcast i8* %231 to i32*, !dbg !12505
  %add.ptr377 = getelementptr i32, i32* %232, i64 2, !dbg !12505
  %233 = load i32, i32* %add.ptr377, align 4, !dbg !12505
  %and378 = and i32 %233, 65280, !dbg !12505
  %shl379 = shl i32 %and378, 8, !dbg !12505
  %or380 = or i32 %shl376, %shl379, !dbg !12505
  %234 = load i8*, i8** %in, align 8, !dbg !12505
  %235 = bitcast i8* %234 to i32*, !dbg !12505
  %add.ptr381 = getelementptr i32, i32* %235, i64 2, !dbg !12505
  %236 = load i32, i32* %add.ptr381, align 4, !dbg !12505
  %and382 = and i32 %236, 16711680, !dbg !12505
  %shr383 = lshr i32 %and382, 8, !dbg !12505
  %or384 = or i32 %or380, %shr383, !dbg !12505
  %237 = load i8*, i8** %in, align 8, !dbg !12505
  %238 = bitcast i8* %237 to i32*, !dbg !12505
  %add.ptr385 = getelementptr i32, i32* %238, i64 2, !dbg !12505
  %239 = load i32, i32* %add.ptr385, align 4, !dbg !12505
  %and386 = and i32 %239, -16777216, !dbg !12505
  %shr387 = lshr i32 %and386, 24, !dbg !12505
  %or388 = or i32 %or384, %shr387, !dbg !12505
  br label %cond.end392, !dbg !12505

cond.false389:                                    ; preds = %cond.end363
  %240 = load i8*, i8** %in, align 8, !dbg !12505
  %241 = bitcast i8* %240 to i32*, !dbg !12505
  %add.ptr390 = getelementptr i32, i32* %241, i64 2, !dbg !12505
  %242 = load i32, i32* %add.ptr390, align 4, !dbg !12505
  %call391 = call i32 @__fswab32(i32 %242) #8, !dbg !12505
  br label %cond.end392, !dbg !12505

cond.end392:                                      ; preds = %cond.false389, %cond.true373
  %cond393 = phi i32 [ %or388, %cond.true373 ], [ %call391, %cond.false389 ], !dbg !12505
  %and394 = and i32 %cond393, -65536, !dbg !12505
  %243 = load i32, i32* %_v284, align 4, !dbg !12505
  %and395 = and i32 %243, 65535, !dbg !12505
  %shl396 = shl i32 %and395, 0, !dbg !12505
  %or397 = or i32 %and394, %shl396, !dbg !12505
  %and398 = and i32 %or397, 16711680, !dbg !12505
  %shr399 = lshr i32 %and398, 8, !dbg !12505
  %or400 = or i32 %or371, %shr399, !dbg !12505
  %244 = load i8*, i8** %in, align 8, !dbg !12505
  %245 = bitcast i8* %244 to i32*, !dbg !12505
  %add.ptr401 = getelementptr i32, i32* %245, i64 2, !dbg !12505
  %246 = load i32, i32* %add.ptr401, align 4, !dbg !12505
  %247 = call i1 @llvm.is.constant.i32(i32 %246), !dbg !12505
  br i1 %247, label %cond.true402, label %cond.false418, !dbg !12505

cond.true402:                                     ; preds = %cond.end392
  %248 = load i8*, i8** %in, align 8, !dbg !12505
  %249 = bitcast i8* %248 to i32*, !dbg !12505
  %add.ptr403 = getelementptr i32, i32* %249, i64 2, !dbg !12505
  %250 = load i32, i32* %add.ptr403, align 4, !dbg !12505
  %and404 = and i32 %250, 255, !dbg !12505
  %shl405 = shl i32 %and404, 24, !dbg !12505
  %251 = load i8*, i8** %in, align 8, !dbg !12505
  %252 = bitcast i8* %251 to i32*, !dbg !12505
  %add.ptr406 = getelementptr i32, i32* %252, i64 2, !dbg !12505
  %253 = load i32, i32* %add.ptr406, align 4, !dbg !12505
  %and407 = and i32 %253, 65280, !dbg !12505
  %shl408 = shl i32 %and407, 8, !dbg !12505
  %or409 = or i32 %shl405, %shl408, !dbg !12505
  %254 = load i8*, i8** %in, align 8, !dbg !12505
  %255 = bitcast i8* %254 to i32*, !dbg !12505
  %add.ptr410 = getelementptr i32, i32* %255, i64 2, !dbg !12505
  %256 = load i32, i32* %add.ptr410, align 4, !dbg !12505
  %and411 = and i32 %256, 16711680, !dbg !12505
  %shr412 = lshr i32 %and411, 8, !dbg !12505
  %or413 = or i32 %or409, %shr412, !dbg !12505
  %257 = load i8*, i8** %in, align 8, !dbg !12505
  %258 = bitcast i8* %257 to i32*, !dbg !12505
  %add.ptr414 = getelementptr i32, i32* %258, i64 2, !dbg !12505
  %259 = load i32, i32* %add.ptr414, align 4, !dbg !12505
  %and415 = and i32 %259, -16777216, !dbg !12505
  %shr416 = lshr i32 %and415, 24, !dbg !12505
  %or417 = or i32 %or413, %shr416, !dbg !12505
  br label %cond.end421, !dbg !12505

cond.false418:                                    ; preds = %cond.end392
  %260 = load i8*, i8** %in, align 8, !dbg !12505
  %261 = bitcast i8* %260 to i32*, !dbg !12505
  %add.ptr419 = getelementptr i32, i32* %261, i64 2, !dbg !12505
  %262 = load i32, i32* %add.ptr419, align 4, !dbg !12505
  %call420 = call i32 @__fswab32(i32 %262) #8, !dbg !12505
  br label %cond.end421, !dbg !12505

cond.end421:                                      ; preds = %cond.false418, %cond.true402
  %cond422 = phi i32 [ %or417, %cond.true402 ], [ %call420, %cond.false418 ], !dbg !12505
  %and423 = and i32 %cond422, -65536, !dbg !12505
  %263 = load i32, i32* %_v284, align 4, !dbg !12505
  %and424 = and i32 %263, 65535, !dbg !12505
  %shl425 = shl i32 %and424, 0, !dbg !12505
  %or426 = or i32 %and423, %shl425, !dbg !12505
  %and427 = and i32 %or426, -16777216, !dbg !12505
  %shr428 = lshr i32 %and427, 24, !dbg !12505
  %or429 = or i32 %or400, %shr428, !dbg !12505
  br label %cond.end458, !dbg !12505

cond.false430:                                    ; preds = %cond.end308
  %264 = load i8*, i8** %in, align 8, !dbg !12505
  %265 = bitcast i8* %264 to i32*, !dbg !12505
  %add.ptr431 = getelementptr i32, i32* %265, i64 2, !dbg !12505
  %266 = load i32, i32* %add.ptr431, align 4, !dbg !12505
  %267 = call i1 @llvm.is.constant.i32(i32 %266), !dbg !12505
  br i1 %267, label %cond.true432, label %cond.false448, !dbg !12505

cond.true432:                                     ; preds = %cond.false430
  %268 = load i8*, i8** %in, align 8, !dbg !12505
  %269 = bitcast i8* %268 to i32*, !dbg !12505
  %add.ptr433 = getelementptr i32, i32* %269, i64 2, !dbg !12505
  %270 = load i32, i32* %add.ptr433, align 4, !dbg !12505
  %and434 = and i32 %270, 255, !dbg !12505
  %shl435 = shl i32 %and434, 24, !dbg !12505
  %271 = load i8*, i8** %in, align 8, !dbg !12505
  %272 = bitcast i8* %271 to i32*, !dbg !12505
  %add.ptr436 = getelementptr i32, i32* %272, i64 2, !dbg !12505
  %273 = load i32, i32* %add.ptr436, align 4, !dbg !12505
  %and437 = and i32 %273, 65280, !dbg !12505
  %shl438 = shl i32 %and437, 8, !dbg !12505
  %or439 = or i32 %shl435, %shl438, !dbg !12505
  %274 = load i8*, i8** %in, align 8, !dbg !12505
  %275 = bitcast i8* %274 to i32*, !dbg !12505
  %add.ptr440 = getelementptr i32, i32* %275, i64 2, !dbg !12505
  %276 = load i32, i32* %add.ptr440, align 4, !dbg !12505
  %and441 = and i32 %276, 16711680, !dbg !12505
  %shr442 = lshr i32 %and441, 8, !dbg !12505
  %or443 = or i32 %or439, %shr442, !dbg !12505
  %277 = load i8*, i8** %in, align 8, !dbg !12505
  %278 = bitcast i8* %277 to i32*, !dbg !12505
  %add.ptr444 = getelementptr i32, i32* %278, i64 2, !dbg !12505
  %279 = load i32, i32* %add.ptr444, align 4, !dbg !12505
  %and445 = and i32 %279, -16777216, !dbg !12505
  %shr446 = lshr i32 %and445, 24, !dbg !12505
  %or447 = or i32 %or443, %shr446, !dbg !12505
  br label %cond.end451, !dbg !12505

cond.false448:                                    ; preds = %cond.false430
  %280 = load i8*, i8** %in, align 8, !dbg !12505
  %281 = bitcast i8* %280 to i32*, !dbg !12505
  %add.ptr449 = getelementptr i32, i32* %281, i64 2, !dbg !12505
  %282 = load i32, i32* %add.ptr449, align 4, !dbg !12505
  %call450 = call i32 @__fswab32(i32 %282) #8, !dbg !12505
  br label %cond.end451, !dbg !12505

cond.end451:                                      ; preds = %cond.false448, %cond.true432
  %cond452 = phi i32 [ %or447, %cond.true432 ], [ %call450, %cond.false448 ], !dbg !12505
  %and453 = and i32 %cond452, -65536, !dbg !12505
  %283 = load i32, i32* %_v284, align 4, !dbg !12505
  %and454 = and i32 %283, 65535, !dbg !12505
  %shl455 = shl i32 %and454, 0, !dbg !12505
  %or456 = or i32 %and453, %shl455, !dbg !12505
  %call457 = call i32 @__fswab32(i32 %or456) #8, !dbg !12505
  br label %cond.end458, !dbg !12505

cond.end458:                                      ; preds = %cond.end451, %cond.end421
  %cond459 = phi i32 [ %or429, %cond.end421 ], [ %call457, %cond.end451 ], !dbg !12505
  %284 = load i8*, i8** %in, align 8, !dbg !12505
  %285 = bitcast i8* %284 to i32*, !dbg !12505
  %add.ptr460 = getelementptr i32, i32* %285, i64 2, !dbg !12505
  store i32 %cond459, i32* %add.ptr460, align 4, !dbg !12505
  br label %do.end461, !dbg !12505

do.end461:                                        ; preds = %cond.end458
  br label %do.body462, !dbg !12508

do.body462:                                       ; preds = %do.end461
  call void @llvm.dbg.declare(metadata i32* %_v463, metadata !12509, metadata !DIExpression()), !dbg !12511
  store i32 1, i32* %_v463, align 4, !dbg !12511
  br label %do.body464, !dbg !12511

do.body464:                                       ; preds = %do.body462
  br label %do.end465, !dbg !12512

do.end465:                                        ; preds = %do.body464
  %286 = load i8*, i8** %in, align 8, !dbg !12511
  %287 = bitcast i8* %286 to i32*, !dbg !12511
  %add.ptr466 = getelementptr i32, i32* %287, i64 2, !dbg !12511
  %288 = load i32, i32* %add.ptr466, align 4, !dbg !12511
  %289 = call i1 @llvm.is.constant.i32(i32 %288), !dbg !12511
  br i1 %289, label %cond.true467, label %cond.false483, !dbg !12511

cond.true467:                                     ; preds = %do.end465
  %290 = load i8*, i8** %in, align 8, !dbg !12511
  %291 = bitcast i8* %290 to i32*, !dbg !12511
  %add.ptr468 = getelementptr i32, i32* %291, i64 2, !dbg !12511
  %292 = load i32, i32* %add.ptr468, align 4, !dbg !12511
  %and469 = and i32 %292, 255, !dbg !12511
  %shl470 = shl i32 %and469, 24, !dbg !12511
  %293 = load i8*, i8** %in, align 8, !dbg !12511
  %294 = bitcast i8* %293 to i32*, !dbg !12511
  %add.ptr471 = getelementptr i32, i32* %294, i64 2, !dbg !12511
  %295 = load i32, i32* %add.ptr471, align 4, !dbg !12511
  %and472 = and i32 %295, 65280, !dbg !12511
  %shl473 = shl i32 %and472, 8, !dbg !12511
  %or474 = or i32 %shl470, %shl473, !dbg !12511
  %296 = load i8*, i8** %in, align 8, !dbg !12511
  %297 = bitcast i8* %296 to i32*, !dbg !12511
  %add.ptr475 = getelementptr i32, i32* %297, i64 2, !dbg !12511
  %298 = load i32, i32* %add.ptr475, align 4, !dbg !12511
  %and476 = and i32 %298, 16711680, !dbg !12511
  %shr477 = lshr i32 %and476, 8, !dbg !12511
  %or478 = or i32 %or474, %shr477, !dbg !12511
  %299 = load i8*, i8** %in, align 8, !dbg !12511
  %300 = bitcast i8* %299 to i32*, !dbg !12511
  %add.ptr479 = getelementptr i32, i32* %300, i64 2, !dbg !12511
  %301 = load i32, i32* %add.ptr479, align 4, !dbg !12511
  %and480 = and i32 %301, -16777216, !dbg !12511
  %shr481 = lshr i32 %and480, 24, !dbg !12511
  %or482 = or i32 %or478, %shr481, !dbg !12511
  br label %cond.end486, !dbg !12511

cond.false483:                                    ; preds = %do.end465
  %302 = load i8*, i8** %in, align 8, !dbg !12511
  %303 = bitcast i8* %302 to i32*, !dbg !12511
  %add.ptr484 = getelementptr i32, i32* %303, i64 2, !dbg !12511
  %304 = load i32, i32* %add.ptr484, align 4, !dbg !12511
  %call485 = call i32 @__fswab32(i32 %304) #8, !dbg !12511
  br label %cond.end486, !dbg !12511

cond.end486:                                      ; preds = %cond.false483, %cond.true467
  %cond487 = phi i32 [ %or482, %cond.true467 ], [ %call485, %cond.false483 ], !dbg !12511
  %and488 = and i32 %cond487, 2147483647, !dbg !12511
  %305 = load i32, i32* %_v463, align 4, !dbg !12511
  %and489 = and i32 %305, 1, !dbg !12511
  %shl490 = shl i32 %and489, 31, !dbg !12511
  %or491 = or i32 %and488, %shl490, !dbg !12511
  %306 = call i1 @llvm.is.constant.i32(i32 %or491), !dbg !12511
  br i1 %306, label %cond.true492, label %cond.false608, !dbg !12511

cond.true492:                                     ; preds = %cond.end486
  %307 = load i8*, i8** %in, align 8, !dbg !12511
  %308 = bitcast i8* %307 to i32*, !dbg !12511
  %add.ptr493 = getelementptr i32, i32* %308, i64 2, !dbg !12511
  %309 = load i32, i32* %add.ptr493, align 4, !dbg !12511
  %310 = call i1 @llvm.is.constant.i32(i32 %309), !dbg !12511
  br i1 %310, label %cond.true494, label %cond.false510, !dbg !12511

cond.true494:                                     ; preds = %cond.true492
  %311 = load i8*, i8** %in, align 8, !dbg !12511
  %312 = bitcast i8* %311 to i32*, !dbg !12511
  %add.ptr495 = getelementptr i32, i32* %312, i64 2, !dbg !12511
  %313 = load i32, i32* %add.ptr495, align 4, !dbg !12511
  %and496 = and i32 %313, 255, !dbg !12511
  %shl497 = shl i32 %and496, 24, !dbg !12511
  %314 = load i8*, i8** %in, align 8, !dbg !12511
  %315 = bitcast i8* %314 to i32*, !dbg !12511
  %add.ptr498 = getelementptr i32, i32* %315, i64 2, !dbg !12511
  %316 = load i32, i32* %add.ptr498, align 4, !dbg !12511
  %and499 = and i32 %316, 65280, !dbg !12511
  %shl500 = shl i32 %and499, 8, !dbg !12511
  %or501 = or i32 %shl497, %shl500, !dbg !12511
  %317 = load i8*, i8** %in, align 8, !dbg !12511
  %318 = bitcast i8* %317 to i32*, !dbg !12511
  %add.ptr502 = getelementptr i32, i32* %318, i64 2, !dbg !12511
  %319 = load i32, i32* %add.ptr502, align 4, !dbg !12511
  %and503 = and i32 %319, 16711680, !dbg !12511
  %shr504 = lshr i32 %and503, 8, !dbg !12511
  %or505 = or i32 %or501, %shr504, !dbg !12511
  %320 = load i8*, i8** %in, align 8, !dbg !12511
  %321 = bitcast i8* %320 to i32*, !dbg !12511
  %add.ptr506 = getelementptr i32, i32* %321, i64 2, !dbg !12511
  %322 = load i32, i32* %add.ptr506, align 4, !dbg !12511
  %and507 = and i32 %322, -16777216, !dbg !12511
  %shr508 = lshr i32 %and507, 24, !dbg !12511
  %or509 = or i32 %or505, %shr508, !dbg !12511
  br label %cond.end513, !dbg !12511

cond.false510:                                    ; preds = %cond.true492
  %323 = load i8*, i8** %in, align 8, !dbg !12511
  %324 = bitcast i8* %323 to i32*, !dbg !12511
  %add.ptr511 = getelementptr i32, i32* %324, i64 2, !dbg !12511
  %325 = load i32, i32* %add.ptr511, align 4, !dbg !12511
  %call512 = call i32 @__fswab32(i32 %325) #8, !dbg !12511
  br label %cond.end513, !dbg !12511

cond.end513:                                      ; preds = %cond.false510, %cond.true494
  %cond514 = phi i32 [ %or509, %cond.true494 ], [ %call512, %cond.false510 ], !dbg !12511
  %and515 = and i32 %cond514, 2147483647, !dbg !12511
  %326 = load i32, i32* %_v463, align 4, !dbg !12511
  %and516 = and i32 %326, 1, !dbg !12511
  %shl517 = shl i32 %and516, 31, !dbg !12511
  %or518 = or i32 %and515, %shl517, !dbg !12511
  %and519 = and i32 %or518, 255, !dbg !12511
  %shl520 = shl i32 %and519, 24, !dbg !12511
  %327 = load i8*, i8** %in, align 8, !dbg !12511
  %328 = bitcast i8* %327 to i32*, !dbg !12511
  %add.ptr521 = getelementptr i32, i32* %328, i64 2, !dbg !12511
  %329 = load i32, i32* %add.ptr521, align 4, !dbg !12511
  %330 = call i1 @llvm.is.constant.i32(i32 %329), !dbg !12511
  br i1 %330, label %cond.true522, label %cond.false538, !dbg !12511

cond.true522:                                     ; preds = %cond.end513
  %331 = load i8*, i8** %in, align 8, !dbg !12511
  %332 = bitcast i8* %331 to i32*, !dbg !12511
  %add.ptr523 = getelementptr i32, i32* %332, i64 2, !dbg !12511
  %333 = load i32, i32* %add.ptr523, align 4, !dbg !12511
  %and524 = and i32 %333, 255, !dbg !12511
  %shl525 = shl i32 %and524, 24, !dbg !12511
  %334 = load i8*, i8** %in, align 8, !dbg !12511
  %335 = bitcast i8* %334 to i32*, !dbg !12511
  %add.ptr526 = getelementptr i32, i32* %335, i64 2, !dbg !12511
  %336 = load i32, i32* %add.ptr526, align 4, !dbg !12511
  %and527 = and i32 %336, 65280, !dbg !12511
  %shl528 = shl i32 %and527, 8, !dbg !12511
  %or529 = or i32 %shl525, %shl528, !dbg !12511
  %337 = load i8*, i8** %in, align 8, !dbg !12511
  %338 = bitcast i8* %337 to i32*, !dbg !12511
  %add.ptr530 = getelementptr i32, i32* %338, i64 2, !dbg !12511
  %339 = load i32, i32* %add.ptr530, align 4, !dbg !12511
  %and531 = and i32 %339, 16711680, !dbg !12511
  %shr532 = lshr i32 %and531, 8, !dbg !12511
  %or533 = or i32 %or529, %shr532, !dbg !12511
  %340 = load i8*, i8** %in, align 8, !dbg !12511
  %341 = bitcast i8* %340 to i32*, !dbg !12511
  %add.ptr534 = getelementptr i32, i32* %341, i64 2, !dbg !12511
  %342 = load i32, i32* %add.ptr534, align 4, !dbg !12511
  %and535 = and i32 %342, -16777216, !dbg !12511
  %shr536 = lshr i32 %and535, 24, !dbg !12511
  %or537 = or i32 %or533, %shr536, !dbg !12511
  br label %cond.end541, !dbg !12511

cond.false538:                                    ; preds = %cond.end513
  %343 = load i8*, i8** %in, align 8, !dbg !12511
  %344 = bitcast i8* %343 to i32*, !dbg !12511
  %add.ptr539 = getelementptr i32, i32* %344, i64 2, !dbg !12511
  %345 = load i32, i32* %add.ptr539, align 4, !dbg !12511
  %call540 = call i32 @__fswab32(i32 %345) #8, !dbg !12511
  br label %cond.end541, !dbg !12511

cond.end541:                                      ; preds = %cond.false538, %cond.true522
  %cond542 = phi i32 [ %or537, %cond.true522 ], [ %call540, %cond.false538 ], !dbg !12511
  %and543 = and i32 %cond542, 2147483647, !dbg !12511
  %346 = load i32, i32* %_v463, align 4, !dbg !12511
  %and544 = and i32 %346, 1, !dbg !12511
  %shl545 = shl i32 %and544, 31, !dbg !12511
  %or546 = or i32 %and543, %shl545, !dbg !12511
  %and547 = and i32 %or546, 65280, !dbg !12511
  %shl548 = shl i32 %and547, 8, !dbg !12511
  %or549 = or i32 %shl520, %shl548, !dbg !12511
  %347 = load i8*, i8** %in, align 8, !dbg !12511
  %348 = bitcast i8* %347 to i32*, !dbg !12511
  %add.ptr550 = getelementptr i32, i32* %348, i64 2, !dbg !12511
  %349 = load i32, i32* %add.ptr550, align 4, !dbg !12511
  %350 = call i1 @llvm.is.constant.i32(i32 %349), !dbg !12511
  br i1 %350, label %cond.true551, label %cond.false567, !dbg !12511

cond.true551:                                     ; preds = %cond.end541
  %351 = load i8*, i8** %in, align 8, !dbg !12511
  %352 = bitcast i8* %351 to i32*, !dbg !12511
  %add.ptr552 = getelementptr i32, i32* %352, i64 2, !dbg !12511
  %353 = load i32, i32* %add.ptr552, align 4, !dbg !12511
  %and553 = and i32 %353, 255, !dbg !12511
  %shl554 = shl i32 %and553, 24, !dbg !12511
  %354 = load i8*, i8** %in, align 8, !dbg !12511
  %355 = bitcast i8* %354 to i32*, !dbg !12511
  %add.ptr555 = getelementptr i32, i32* %355, i64 2, !dbg !12511
  %356 = load i32, i32* %add.ptr555, align 4, !dbg !12511
  %and556 = and i32 %356, 65280, !dbg !12511
  %shl557 = shl i32 %and556, 8, !dbg !12511
  %or558 = or i32 %shl554, %shl557, !dbg !12511
  %357 = load i8*, i8** %in, align 8, !dbg !12511
  %358 = bitcast i8* %357 to i32*, !dbg !12511
  %add.ptr559 = getelementptr i32, i32* %358, i64 2, !dbg !12511
  %359 = load i32, i32* %add.ptr559, align 4, !dbg !12511
  %and560 = and i32 %359, 16711680, !dbg !12511
  %shr561 = lshr i32 %and560, 8, !dbg !12511
  %or562 = or i32 %or558, %shr561, !dbg !12511
  %360 = load i8*, i8** %in, align 8, !dbg !12511
  %361 = bitcast i8* %360 to i32*, !dbg !12511
  %add.ptr563 = getelementptr i32, i32* %361, i64 2, !dbg !12511
  %362 = load i32, i32* %add.ptr563, align 4, !dbg !12511
  %and564 = and i32 %362, -16777216, !dbg !12511
  %shr565 = lshr i32 %and564, 24, !dbg !12511
  %or566 = or i32 %or562, %shr565, !dbg !12511
  br label %cond.end570, !dbg !12511

cond.false567:                                    ; preds = %cond.end541
  %363 = load i8*, i8** %in, align 8, !dbg !12511
  %364 = bitcast i8* %363 to i32*, !dbg !12511
  %add.ptr568 = getelementptr i32, i32* %364, i64 2, !dbg !12511
  %365 = load i32, i32* %add.ptr568, align 4, !dbg !12511
  %call569 = call i32 @__fswab32(i32 %365) #8, !dbg !12511
  br label %cond.end570, !dbg !12511

cond.end570:                                      ; preds = %cond.false567, %cond.true551
  %cond571 = phi i32 [ %or566, %cond.true551 ], [ %call569, %cond.false567 ], !dbg !12511
  %and572 = and i32 %cond571, 2147483647, !dbg !12511
  %366 = load i32, i32* %_v463, align 4, !dbg !12511
  %and573 = and i32 %366, 1, !dbg !12511
  %shl574 = shl i32 %and573, 31, !dbg !12511
  %or575 = or i32 %and572, %shl574, !dbg !12511
  %and576 = and i32 %or575, 16711680, !dbg !12511
  %shr577 = lshr i32 %and576, 8, !dbg !12511
  %or578 = or i32 %or549, %shr577, !dbg !12511
  %367 = load i8*, i8** %in, align 8, !dbg !12511
  %368 = bitcast i8* %367 to i32*, !dbg !12511
  %add.ptr579 = getelementptr i32, i32* %368, i64 2, !dbg !12511
  %369 = load i32, i32* %add.ptr579, align 4, !dbg !12511
  %370 = call i1 @llvm.is.constant.i32(i32 %369), !dbg !12511
  br i1 %370, label %cond.true580, label %cond.false596, !dbg !12511

cond.true580:                                     ; preds = %cond.end570
  %371 = load i8*, i8** %in, align 8, !dbg !12511
  %372 = bitcast i8* %371 to i32*, !dbg !12511
  %add.ptr581 = getelementptr i32, i32* %372, i64 2, !dbg !12511
  %373 = load i32, i32* %add.ptr581, align 4, !dbg !12511
  %and582 = and i32 %373, 255, !dbg !12511
  %shl583 = shl i32 %and582, 24, !dbg !12511
  %374 = load i8*, i8** %in, align 8, !dbg !12511
  %375 = bitcast i8* %374 to i32*, !dbg !12511
  %add.ptr584 = getelementptr i32, i32* %375, i64 2, !dbg !12511
  %376 = load i32, i32* %add.ptr584, align 4, !dbg !12511
  %and585 = and i32 %376, 65280, !dbg !12511
  %shl586 = shl i32 %and585, 8, !dbg !12511
  %or587 = or i32 %shl583, %shl586, !dbg !12511
  %377 = load i8*, i8** %in, align 8, !dbg !12511
  %378 = bitcast i8* %377 to i32*, !dbg !12511
  %add.ptr588 = getelementptr i32, i32* %378, i64 2, !dbg !12511
  %379 = load i32, i32* %add.ptr588, align 4, !dbg !12511
  %and589 = and i32 %379, 16711680, !dbg !12511
  %shr590 = lshr i32 %and589, 8, !dbg !12511
  %or591 = or i32 %or587, %shr590, !dbg !12511
  %380 = load i8*, i8** %in, align 8, !dbg !12511
  %381 = bitcast i8* %380 to i32*, !dbg !12511
  %add.ptr592 = getelementptr i32, i32* %381, i64 2, !dbg !12511
  %382 = load i32, i32* %add.ptr592, align 4, !dbg !12511
  %and593 = and i32 %382, -16777216, !dbg !12511
  %shr594 = lshr i32 %and593, 24, !dbg !12511
  %or595 = or i32 %or591, %shr594, !dbg !12511
  br label %cond.end599, !dbg !12511

cond.false596:                                    ; preds = %cond.end570
  %383 = load i8*, i8** %in, align 8, !dbg !12511
  %384 = bitcast i8* %383 to i32*, !dbg !12511
  %add.ptr597 = getelementptr i32, i32* %384, i64 2, !dbg !12511
  %385 = load i32, i32* %add.ptr597, align 4, !dbg !12511
  %call598 = call i32 @__fswab32(i32 %385) #8, !dbg !12511
  br label %cond.end599, !dbg !12511

cond.end599:                                      ; preds = %cond.false596, %cond.true580
  %cond600 = phi i32 [ %or595, %cond.true580 ], [ %call598, %cond.false596 ], !dbg !12511
  %and601 = and i32 %cond600, 2147483647, !dbg !12511
  %386 = load i32, i32* %_v463, align 4, !dbg !12511
  %and602 = and i32 %386, 1, !dbg !12511
  %shl603 = shl i32 %and602, 31, !dbg !12511
  %or604 = or i32 %and601, %shl603, !dbg !12511
  %and605 = and i32 %or604, -16777216, !dbg !12511
  %shr606 = lshr i32 %and605, 24, !dbg !12511
  %or607 = or i32 %or578, %shr606, !dbg !12511
  br label %cond.end636, !dbg !12511

cond.false608:                                    ; preds = %cond.end486
  %387 = load i8*, i8** %in, align 8, !dbg !12511
  %388 = bitcast i8* %387 to i32*, !dbg !12511
  %add.ptr609 = getelementptr i32, i32* %388, i64 2, !dbg !12511
  %389 = load i32, i32* %add.ptr609, align 4, !dbg !12511
  %390 = call i1 @llvm.is.constant.i32(i32 %389), !dbg !12511
  br i1 %390, label %cond.true610, label %cond.false626, !dbg !12511

cond.true610:                                     ; preds = %cond.false608
  %391 = load i8*, i8** %in, align 8, !dbg !12511
  %392 = bitcast i8* %391 to i32*, !dbg !12511
  %add.ptr611 = getelementptr i32, i32* %392, i64 2, !dbg !12511
  %393 = load i32, i32* %add.ptr611, align 4, !dbg !12511
  %and612 = and i32 %393, 255, !dbg !12511
  %shl613 = shl i32 %and612, 24, !dbg !12511
  %394 = load i8*, i8** %in, align 8, !dbg !12511
  %395 = bitcast i8* %394 to i32*, !dbg !12511
  %add.ptr614 = getelementptr i32, i32* %395, i64 2, !dbg !12511
  %396 = load i32, i32* %add.ptr614, align 4, !dbg !12511
  %and615 = and i32 %396, 65280, !dbg !12511
  %shl616 = shl i32 %and615, 8, !dbg !12511
  %or617 = or i32 %shl613, %shl616, !dbg !12511
  %397 = load i8*, i8** %in, align 8, !dbg !12511
  %398 = bitcast i8* %397 to i32*, !dbg !12511
  %add.ptr618 = getelementptr i32, i32* %398, i64 2, !dbg !12511
  %399 = load i32, i32* %add.ptr618, align 4, !dbg !12511
  %and619 = and i32 %399, 16711680, !dbg !12511
  %shr620 = lshr i32 %and619, 8, !dbg !12511
  %or621 = or i32 %or617, %shr620, !dbg !12511
  %400 = load i8*, i8** %in, align 8, !dbg !12511
  %401 = bitcast i8* %400 to i32*, !dbg !12511
  %add.ptr622 = getelementptr i32, i32* %401, i64 2, !dbg !12511
  %402 = load i32, i32* %add.ptr622, align 4, !dbg !12511
  %and623 = and i32 %402, -16777216, !dbg !12511
  %shr624 = lshr i32 %and623, 24, !dbg !12511
  %or625 = or i32 %or621, %shr624, !dbg !12511
  br label %cond.end629, !dbg !12511

cond.false626:                                    ; preds = %cond.false608
  %403 = load i8*, i8** %in, align 8, !dbg !12511
  %404 = bitcast i8* %403 to i32*, !dbg !12511
  %add.ptr627 = getelementptr i32, i32* %404, i64 2, !dbg !12511
  %405 = load i32, i32* %add.ptr627, align 4, !dbg !12511
  %call628 = call i32 @__fswab32(i32 %405) #8, !dbg !12511
  br label %cond.end629, !dbg !12511

cond.end629:                                      ; preds = %cond.false626, %cond.true610
  %cond630 = phi i32 [ %or625, %cond.true610 ], [ %call628, %cond.false626 ], !dbg !12511
  %and631 = and i32 %cond630, 2147483647, !dbg !12511
  %406 = load i32, i32* %_v463, align 4, !dbg !12511
  %and632 = and i32 %406, 1, !dbg !12511
  %shl633 = shl i32 %and632, 31, !dbg !12511
  %or634 = or i32 %and631, %shl633, !dbg !12511
  %call635 = call i32 @__fswab32(i32 %or634) #8, !dbg !12511
  br label %cond.end636, !dbg !12511

cond.end636:                                      ; preds = %cond.end629, %cond.end599
  %cond637 = phi i32 [ %or607, %cond.end599 ], [ %call635, %cond.end629 ], !dbg !12511
  %407 = load i8*, i8** %in, align 8, !dbg !12511
  %408 = bitcast i8* %407 to i32*, !dbg !12511
  %add.ptr638 = getelementptr i32, i32* %408, i64 2, !dbg !12511
  store i32 %cond637, i32* %add.ptr638, align 4, !dbg !12511
  br label %do.end639, !dbg !12511

do.end639:                                        ; preds = %cond.end636
  br label %if.end641, !dbg !12514

if.else640:                                       ; preds = %if.then280
  store i32 -1, i32* %err, align 4, !dbg !12515
  br label %out1087, !dbg !12517

if.end641:                                        ; preds = %do.end639
  br label %if.end642, !dbg !12518

if.end642:                                        ; preds = %if.end641, %do.end278
  br label %do.body643, !dbg !12519

do.body643:                                       ; preds = %if.end642
  call void @llvm.dbg.declare(metadata i32* %_v644, metadata !12520, metadata !DIExpression()), !dbg !12522
  %409 = load i16, i16* %pkey_index.addr, align 2, !dbg !12522
  %conv645 = zext i16 %409 to i32, !dbg !12522
  store i32 %conv645, i32* %_v644, align 4, !dbg !12522
  br label %do.body646, !dbg !12522

do.body646:                                       ; preds = %do.body643
  br label %do.end647, !dbg !12523

do.end647:                                        ; preds = %do.body646
  %410 = load i8*, i8** %in, align 8, !dbg !12522
  %411 = bitcast i8* %410 to i32*, !dbg !12522
  %add.ptr648 = getelementptr i32, i32* %411, i64 3, !dbg !12522
  %412 = load i32, i32* %add.ptr648, align 4, !dbg !12522
  %413 = call i1 @llvm.is.constant.i32(i32 %412), !dbg !12522
  br i1 %413, label %cond.true649, label %cond.false665, !dbg !12522

cond.true649:                                     ; preds = %do.end647
  %414 = load i8*, i8** %in, align 8, !dbg !12522
  %415 = bitcast i8* %414 to i32*, !dbg !12522
  %add.ptr650 = getelementptr i32, i32* %415, i64 3, !dbg !12522
  %416 = load i32, i32* %add.ptr650, align 4, !dbg !12522
  %and651 = and i32 %416, 255, !dbg !12522
  %shl652 = shl i32 %and651, 24, !dbg !12522
  %417 = load i8*, i8** %in, align 8, !dbg !12522
  %418 = bitcast i8* %417 to i32*, !dbg !12522
  %add.ptr653 = getelementptr i32, i32* %418, i64 3, !dbg !12522
  %419 = load i32, i32* %add.ptr653, align 4, !dbg !12522
  %and654 = and i32 %419, 65280, !dbg !12522
  %shl655 = shl i32 %and654, 8, !dbg !12522
  %or656 = or i32 %shl652, %shl655, !dbg !12522
  %420 = load i8*, i8** %in, align 8, !dbg !12522
  %421 = bitcast i8* %420 to i32*, !dbg !12522
  %add.ptr657 = getelementptr i32, i32* %421, i64 3, !dbg !12522
  %422 = load i32, i32* %add.ptr657, align 4, !dbg !12522
  %and658 = and i32 %422, 16711680, !dbg !12522
  %shr659 = lshr i32 %and658, 8, !dbg !12522
  %or660 = or i32 %or656, %shr659, !dbg !12522
  %423 = load i8*, i8** %in, align 8, !dbg !12522
  %424 = bitcast i8* %423 to i32*, !dbg !12522
  %add.ptr661 = getelementptr i32, i32* %424, i64 3, !dbg !12522
  %425 = load i32, i32* %add.ptr661, align 4, !dbg !12522
  %and662 = and i32 %425, -16777216, !dbg !12522
  %shr663 = lshr i32 %and662, 24, !dbg !12522
  %or664 = or i32 %or660, %shr663, !dbg !12522
  br label %cond.end668, !dbg !12522

cond.false665:                                    ; preds = %do.end647
  %426 = load i8*, i8** %in, align 8, !dbg !12522
  %427 = bitcast i8* %426 to i32*, !dbg !12522
  %add.ptr666 = getelementptr i32, i32* %427, i64 3, !dbg !12522
  %428 = load i32, i32* %add.ptr666, align 4, !dbg !12522
  %call667 = call i32 @__fswab32(i32 %428) #8, !dbg !12522
  br label %cond.end668, !dbg !12522

cond.end668:                                      ; preds = %cond.false665, %cond.true649
  %cond669 = phi i32 [ %or664, %cond.true649 ], [ %call667, %cond.false665 ], !dbg !12522
  %and670 = and i32 %cond669, -65536, !dbg !12522
  %429 = load i32, i32* %_v644, align 4, !dbg !12522
  %and671 = and i32 %429, 65535, !dbg !12522
  %shl672 = shl i32 %and671, 0, !dbg !12522
  %or673 = or i32 %and670, %shl672, !dbg !12522
  %430 = call i1 @llvm.is.constant.i32(i32 %or673), !dbg !12522
  br i1 %430, label %cond.true674, label %cond.false790, !dbg !12522

cond.true674:                                     ; preds = %cond.end668
  %431 = load i8*, i8** %in, align 8, !dbg !12522
  %432 = bitcast i8* %431 to i32*, !dbg !12522
  %add.ptr675 = getelementptr i32, i32* %432, i64 3, !dbg !12522
  %433 = load i32, i32* %add.ptr675, align 4, !dbg !12522
  %434 = call i1 @llvm.is.constant.i32(i32 %433), !dbg !12522
  br i1 %434, label %cond.true676, label %cond.false692, !dbg !12522

cond.true676:                                     ; preds = %cond.true674
  %435 = load i8*, i8** %in, align 8, !dbg !12522
  %436 = bitcast i8* %435 to i32*, !dbg !12522
  %add.ptr677 = getelementptr i32, i32* %436, i64 3, !dbg !12522
  %437 = load i32, i32* %add.ptr677, align 4, !dbg !12522
  %and678 = and i32 %437, 255, !dbg !12522
  %shl679 = shl i32 %and678, 24, !dbg !12522
  %438 = load i8*, i8** %in, align 8, !dbg !12522
  %439 = bitcast i8* %438 to i32*, !dbg !12522
  %add.ptr680 = getelementptr i32, i32* %439, i64 3, !dbg !12522
  %440 = load i32, i32* %add.ptr680, align 4, !dbg !12522
  %and681 = and i32 %440, 65280, !dbg !12522
  %shl682 = shl i32 %and681, 8, !dbg !12522
  %or683 = or i32 %shl679, %shl682, !dbg !12522
  %441 = load i8*, i8** %in, align 8, !dbg !12522
  %442 = bitcast i8* %441 to i32*, !dbg !12522
  %add.ptr684 = getelementptr i32, i32* %442, i64 3, !dbg !12522
  %443 = load i32, i32* %add.ptr684, align 4, !dbg !12522
  %and685 = and i32 %443, 16711680, !dbg !12522
  %shr686 = lshr i32 %and685, 8, !dbg !12522
  %or687 = or i32 %or683, %shr686, !dbg !12522
  %444 = load i8*, i8** %in, align 8, !dbg !12522
  %445 = bitcast i8* %444 to i32*, !dbg !12522
  %add.ptr688 = getelementptr i32, i32* %445, i64 3, !dbg !12522
  %446 = load i32, i32* %add.ptr688, align 4, !dbg !12522
  %and689 = and i32 %446, -16777216, !dbg !12522
  %shr690 = lshr i32 %and689, 24, !dbg !12522
  %or691 = or i32 %or687, %shr690, !dbg !12522
  br label %cond.end695, !dbg !12522

cond.false692:                                    ; preds = %cond.true674
  %447 = load i8*, i8** %in, align 8, !dbg !12522
  %448 = bitcast i8* %447 to i32*, !dbg !12522
  %add.ptr693 = getelementptr i32, i32* %448, i64 3, !dbg !12522
  %449 = load i32, i32* %add.ptr693, align 4, !dbg !12522
  %call694 = call i32 @__fswab32(i32 %449) #8, !dbg !12522
  br label %cond.end695, !dbg !12522

cond.end695:                                      ; preds = %cond.false692, %cond.true676
  %cond696 = phi i32 [ %or691, %cond.true676 ], [ %call694, %cond.false692 ], !dbg !12522
  %and697 = and i32 %cond696, -65536, !dbg !12522
  %450 = load i32, i32* %_v644, align 4, !dbg !12522
  %and698 = and i32 %450, 65535, !dbg !12522
  %shl699 = shl i32 %and698, 0, !dbg !12522
  %or700 = or i32 %and697, %shl699, !dbg !12522
  %and701 = and i32 %or700, 255, !dbg !12522
  %shl702 = shl i32 %and701, 24, !dbg !12522
  %451 = load i8*, i8** %in, align 8, !dbg !12522
  %452 = bitcast i8* %451 to i32*, !dbg !12522
  %add.ptr703 = getelementptr i32, i32* %452, i64 3, !dbg !12522
  %453 = load i32, i32* %add.ptr703, align 4, !dbg !12522
  %454 = call i1 @llvm.is.constant.i32(i32 %453), !dbg !12522
  br i1 %454, label %cond.true704, label %cond.false720, !dbg !12522

cond.true704:                                     ; preds = %cond.end695
  %455 = load i8*, i8** %in, align 8, !dbg !12522
  %456 = bitcast i8* %455 to i32*, !dbg !12522
  %add.ptr705 = getelementptr i32, i32* %456, i64 3, !dbg !12522
  %457 = load i32, i32* %add.ptr705, align 4, !dbg !12522
  %and706 = and i32 %457, 255, !dbg !12522
  %shl707 = shl i32 %and706, 24, !dbg !12522
  %458 = load i8*, i8** %in, align 8, !dbg !12522
  %459 = bitcast i8* %458 to i32*, !dbg !12522
  %add.ptr708 = getelementptr i32, i32* %459, i64 3, !dbg !12522
  %460 = load i32, i32* %add.ptr708, align 4, !dbg !12522
  %and709 = and i32 %460, 65280, !dbg !12522
  %shl710 = shl i32 %and709, 8, !dbg !12522
  %or711 = or i32 %shl707, %shl710, !dbg !12522
  %461 = load i8*, i8** %in, align 8, !dbg !12522
  %462 = bitcast i8* %461 to i32*, !dbg !12522
  %add.ptr712 = getelementptr i32, i32* %462, i64 3, !dbg !12522
  %463 = load i32, i32* %add.ptr712, align 4, !dbg !12522
  %and713 = and i32 %463, 16711680, !dbg !12522
  %shr714 = lshr i32 %and713, 8, !dbg !12522
  %or715 = or i32 %or711, %shr714, !dbg !12522
  %464 = load i8*, i8** %in, align 8, !dbg !12522
  %465 = bitcast i8* %464 to i32*, !dbg !12522
  %add.ptr716 = getelementptr i32, i32* %465, i64 3, !dbg !12522
  %466 = load i32, i32* %add.ptr716, align 4, !dbg !12522
  %and717 = and i32 %466, -16777216, !dbg !12522
  %shr718 = lshr i32 %and717, 24, !dbg !12522
  %or719 = or i32 %or715, %shr718, !dbg !12522
  br label %cond.end723, !dbg !12522

cond.false720:                                    ; preds = %cond.end695
  %467 = load i8*, i8** %in, align 8, !dbg !12522
  %468 = bitcast i8* %467 to i32*, !dbg !12522
  %add.ptr721 = getelementptr i32, i32* %468, i64 3, !dbg !12522
  %469 = load i32, i32* %add.ptr721, align 4, !dbg !12522
  %call722 = call i32 @__fswab32(i32 %469) #8, !dbg !12522
  br label %cond.end723, !dbg !12522

cond.end723:                                      ; preds = %cond.false720, %cond.true704
  %cond724 = phi i32 [ %or719, %cond.true704 ], [ %call722, %cond.false720 ], !dbg !12522
  %and725 = and i32 %cond724, -65536, !dbg !12522
  %470 = load i32, i32* %_v644, align 4, !dbg !12522
  %and726 = and i32 %470, 65535, !dbg !12522
  %shl727 = shl i32 %and726, 0, !dbg !12522
  %or728 = or i32 %and725, %shl727, !dbg !12522
  %and729 = and i32 %or728, 65280, !dbg !12522
  %shl730 = shl i32 %and729, 8, !dbg !12522
  %or731 = or i32 %shl702, %shl730, !dbg !12522
  %471 = load i8*, i8** %in, align 8, !dbg !12522
  %472 = bitcast i8* %471 to i32*, !dbg !12522
  %add.ptr732 = getelementptr i32, i32* %472, i64 3, !dbg !12522
  %473 = load i32, i32* %add.ptr732, align 4, !dbg !12522
  %474 = call i1 @llvm.is.constant.i32(i32 %473), !dbg !12522
  br i1 %474, label %cond.true733, label %cond.false749, !dbg !12522

cond.true733:                                     ; preds = %cond.end723
  %475 = load i8*, i8** %in, align 8, !dbg !12522
  %476 = bitcast i8* %475 to i32*, !dbg !12522
  %add.ptr734 = getelementptr i32, i32* %476, i64 3, !dbg !12522
  %477 = load i32, i32* %add.ptr734, align 4, !dbg !12522
  %and735 = and i32 %477, 255, !dbg !12522
  %shl736 = shl i32 %and735, 24, !dbg !12522
  %478 = load i8*, i8** %in, align 8, !dbg !12522
  %479 = bitcast i8* %478 to i32*, !dbg !12522
  %add.ptr737 = getelementptr i32, i32* %479, i64 3, !dbg !12522
  %480 = load i32, i32* %add.ptr737, align 4, !dbg !12522
  %and738 = and i32 %480, 65280, !dbg !12522
  %shl739 = shl i32 %and738, 8, !dbg !12522
  %or740 = or i32 %shl736, %shl739, !dbg !12522
  %481 = load i8*, i8** %in, align 8, !dbg !12522
  %482 = bitcast i8* %481 to i32*, !dbg !12522
  %add.ptr741 = getelementptr i32, i32* %482, i64 3, !dbg !12522
  %483 = load i32, i32* %add.ptr741, align 4, !dbg !12522
  %and742 = and i32 %483, 16711680, !dbg !12522
  %shr743 = lshr i32 %and742, 8, !dbg !12522
  %or744 = or i32 %or740, %shr743, !dbg !12522
  %484 = load i8*, i8** %in, align 8, !dbg !12522
  %485 = bitcast i8* %484 to i32*, !dbg !12522
  %add.ptr745 = getelementptr i32, i32* %485, i64 3, !dbg !12522
  %486 = load i32, i32* %add.ptr745, align 4, !dbg !12522
  %and746 = and i32 %486, -16777216, !dbg !12522
  %shr747 = lshr i32 %and746, 24, !dbg !12522
  %or748 = or i32 %or744, %shr747, !dbg !12522
  br label %cond.end752, !dbg !12522

cond.false749:                                    ; preds = %cond.end723
  %487 = load i8*, i8** %in, align 8, !dbg !12522
  %488 = bitcast i8* %487 to i32*, !dbg !12522
  %add.ptr750 = getelementptr i32, i32* %488, i64 3, !dbg !12522
  %489 = load i32, i32* %add.ptr750, align 4, !dbg !12522
  %call751 = call i32 @__fswab32(i32 %489) #8, !dbg !12522
  br label %cond.end752, !dbg !12522

cond.end752:                                      ; preds = %cond.false749, %cond.true733
  %cond753 = phi i32 [ %or748, %cond.true733 ], [ %call751, %cond.false749 ], !dbg !12522
  %and754 = and i32 %cond753, -65536, !dbg !12522
  %490 = load i32, i32* %_v644, align 4, !dbg !12522
  %and755 = and i32 %490, 65535, !dbg !12522
  %shl756 = shl i32 %and755, 0, !dbg !12522
  %or757 = or i32 %and754, %shl756, !dbg !12522
  %and758 = and i32 %or757, 16711680, !dbg !12522
  %shr759 = lshr i32 %and758, 8, !dbg !12522
  %or760 = or i32 %or731, %shr759, !dbg !12522
  %491 = load i8*, i8** %in, align 8, !dbg !12522
  %492 = bitcast i8* %491 to i32*, !dbg !12522
  %add.ptr761 = getelementptr i32, i32* %492, i64 3, !dbg !12522
  %493 = load i32, i32* %add.ptr761, align 4, !dbg !12522
  %494 = call i1 @llvm.is.constant.i32(i32 %493), !dbg !12522
  br i1 %494, label %cond.true762, label %cond.false778, !dbg !12522

cond.true762:                                     ; preds = %cond.end752
  %495 = load i8*, i8** %in, align 8, !dbg !12522
  %496 = bitcast i8* %495 to i32*, !dbg !12522
  %add.ptr763 = getelementptr i32, i32* %496, i64 3, !dbg !12522
  %497 = load i32, i32* %add.ptr763, align 4, !dbg !12522
  %and764 = and i32 %497, 255, !dbg !12522
  %shl765 = shl i32 %and764, 24, !dbg !12522
  %498 = load i8*, i8** %in, align 8, !dbg !12522
  %499 = bitcast i8* %498 to i32*, !dbg !12522
  %add.ptr766 = getelementptr i32, i32* %499, i64 3, !dbg !12522
  %500 = load i32, i32* %add.ptr766, align 4, !dbg !12522
  %and767 = and i32 %500, 65280, !dbg !12522
  %shl768 = shl i32 %and767, 8, !dbg !12522
  %or769 = or i32 %shl765, %shl768, !dbg !12522
  %501 = load i8*, i8** %in, align 8, !dbg !12522
  %502 = bitcast i8* %501 to i32*, !dbg !12522
  %add.ptr770 = getelementptr i32, i32* %502, i64 3, !dbg !12522
  %503 = load i32, i32* %add.ptr770, align 4, !dbg !12522
  %and771 = and i32 %503, 16711680, !dbg !12522
  %shr772 = lshr i32 %and771, 8, !dbg !12522
  %or773 = or i32 %or769, %shr772, !dbg !12522
  %504 = load i8*, i8** %in, align 8, !dbg !12522
  %505 = bitcast i8* %504 to i32*, !dbg !12522
  %add.ptr774 = getelementptr i32, i32* %505, i64 3, !dbg !12522
  %506 = load i32, i32* %add.ptr774, align 4, !dbg !12522
  %and775 = and i32 %506, -16777216, !dbg !12522
  %shr776 = lshr i32 %and775, 24, !dbg !12522
  %or777 = or i32 %or773, %shr776, !dbg !12522
  br label %cond.end781, !dbg !12522

cond.false778:                                    ; preds = %cond.end752
  %507 = load i8*, i8** %in, align 8, !dbg !12522
  %508 = bitcast i8* %507 to i32*, !dbg !12522
  %add.ptr779 = getelementptr i32, i32* %508, i64 3, !dbg !12522
  %509 = load i32, i32* %add.ptr779, align 4, !dbg !12522
  %call780 = call i32 @__fswab32(i32 %509) #8, !dbg !12522
  br label %cond.end781, !dbg !12522

cond.end781:                                      ; preds = %cond.false778, %cond.true762
  %cond782 = phi i32 [ %or777, %cond.true762 ], [ %call780, %cond.false778 ], !dbg !12522
  %and783 = and i32 %cond782, -65536, !dbg !12522
  %510 = load i32, i32* %_v644, align 4, !dbg !12522
  %and784 = and i32 %510, 65535, !dbg !12522
  %shl785 = shl i32 %and784, 0, !dbg !12522
  %or786 = or i32 %and783, %shl785, !dbg !12522
  %and787 = and i32 %or786, -16777216, !dbg !12522
  %shr788 = lshr i32 %and787, 24, !dbg !12522
  %or789 = or i32 %or760, %shr788, !dbg !12522
  br label %cond.end818, !dbg !12522

cond.false790:                                    ; preds = %cond.end668
  %511 = load i8*, i8** %in, align 8, !dbg !12522
  %512 = bitcast i8* %511 to i32*, !dbg !12522
  %add.ptr791 = getelementptr i32, i32* %512, i64 3, !dbg !12522
  %513 = load i32, i32* %add.ptr791, align 4, !dbg !12522
  %514 = call i1 @llvm.is.constant.i32(i32 %513), !dbg !12522
  br i1 %514, label %cond.true792, label %cond.false808, !dbg !12522

cond.true792:                                     ; preds = %cond.false790
  %515 = load i8*, i8** %in, align 8, !dbg !12522
  %516 = bitcast i8* %515 to i32*, !dbg !12522
  %add.ptr793 = getelementptr i32, i32* %516, i64 3, !dbg !12522
  %517 = load i32, i32* %add.ptr793, align 4, !dbg !12522
  %and794 = and i32 %517, 255, !dbg !12522
  %shl795 = shl i32 %and794, 24, !dbg !12522
  %518 = load i8*, i8** %in, align 8, !dbg !12522
  %519 = bitcast i8* %518 to i32*, !dbg !12522
  %add.ptr796 = getelementptr i32, i32* %519, i64 3, !dbg !12522
  %520 = load i32, i32* %add.ptr796, align 4, !dbg !12522
  %and797 = and i32 %520, 65280, !dbg !12522
  %shl798 = shl i32 %and797, 8, !dbg !12522
  %or799 = or i32 %shl795, %shl798, !dbg !12522
  %521 = load i8*, i8** %in, align 8, !dbg !12522
  %522 = bitcast i8* %521 to i32*, !dbg !12522
  %add.ptr800 = getelementptr i32, i32* %522, i64 3, !dbg !12522
  %523 = load i32, i32* %add.ptr800, align 4, !dbg !12522
  %and801 = and i32 %523, 16711680, !dbg !12522
  %shr802 = lshr i32 %and801, 8, !dbg !12522
  %or803 = or i32 %or799, %shr802, !dbg !12522
  %524 = load i8*, i8** %in, align 8, !dbg !12522
  %525 = bitcast i8* %524 to i32*, !dbg !12522
  %add.ptr804 = getelementptr i32, i32* %525, i64 3, !dbg !12522
  %526 = load i32, i32* %add.ptr804, align 4, !dbg !12522
  %and805 = and i32 %526, -16777216, !dbg !12522
  %shr806 = lshr i32 %and805, 24, !dbg !12522
  %or807 = or i32 %or803, %shr806, !dbg !12522
  br label %cond.end811, !dbg !12522

cond.false808:                                    ; preds = %cond.false790
  %527 = load i8*, i8** %in, align 8, !dbg !12522
  %528 = bitcast i8* %527 to i32*, !dbg !12522
  %add.ptr809 = getelementptr i32, i32* %528, i64 3, !dbg !12522
  %529 = load i32, i32* %add.ptr809, align 4, !dbg !12522
  %call810 = call i32 @__fswab32(i32 %529) #8, !dbg !12522
  br label %cond.end811, !dbg !12522

cond.end811:                                      ; preds = %cond.false808, %cond.true792
  %cond812 = phi i32 [ %or807, %cond.true792 ], [ %call810, %cond.false808 ], !dbg !12522
  %and813 = and i32 %cond812, -65536, !dbg !12522
  %530 = load i32, i32* %_v644, align 4, !dbg !12522
  %and814 = and i32 %530, 65535, !dbg !12522
  %shl815 = shl i32 %and814, 0, !dbg !12522
  %or816 = or i32 %and813, %shl815, !dbg !12522
  %call817 = call i32 @__fswab32(i32 %or816) #8, !dbg !12522
  br label %cond.end818, !dbg !12522

cond.end818:                                      ; preds = %cond.end811, %cond.end781
  %cond819 = phi i32 [ %or789, %cond.end781 ], [ %call817, %cond.end811 ], !dbg !12522
  %531 = load i8*, i8** %in, align 8, !dbg !12522
  %532 = bitcast i8* %531 to i32*, !dbg !12522
  %add.ptr820 = getelementptr i32, i32* %532, i64 3, !dbg !12522
  store i32 %cond819, i32* %add.ptr820, align 4, !dbg !12522
  br label %do.end821, !dbg !12522

do.end821:                                        ; preds = %cond.end818
  %533 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !12525
  %caps822 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %533, i32 0, i32 9, !dbg !12525
  %hca_cur823 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps822, i32 0, i32 0, !dbg !12525
  %arrayidx824 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur823, i64 0, i64 0, !dbg !12525
  %arraydecay825 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx824, i64 0, i64 0, !dbg !12525
  %add.ptr826 = getelementptr i32, i32* %arraydecay825, i64 13, !dbg !12525
  %534 = load i32, i32* %add.ptr826, align 4, !dbg !12525
  %535 = call i1 @llvm.is.constant.i32(i32 %534), !dbg !12525
  br i1 %535, label %cond.true827, label %cond.false859, !dbg !12525

cond.true827:                                     ; preds = %do.end821
  %536 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !12525
  %caps828 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %536, i32 0, i32 9, !dbg !12525
  %hca_cur829 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps828, i32 0, i32 0, !dbg !12525
  %arrayidx830 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur829, i64 0, i64 0, !dbg !12525
  %arraydecay831 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx830, i64 0, i64 0, !dbg !12525
  %add.ptr832 = getelementptr i32, i32* %arraydecay831, i64 13, !dbg !12525
  %537 = load i32, i32* %add.ptr832, align 4, !dbg !12525
  %and833 = and i32 %537, 255, !dbg !12525
  %shl834 = shl i32 %and833, 24, !dbg !12525
  %538 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !12525
  %caps835 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %538, i32 0, i32 9, !dbg !12525
  %hca_cur836 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps835, i32 0, i32 0, !dbg !12525
  %arrayidx837 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur836, i64 0, i64 0, !dbg !12525
  %arraydecay838 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx837, i64 0, i64 0, !dbg !12525
  %add.ptr839 = getelementptr i32, i32* %arraydecay838, i64 13, !dbg !12525
  %539 = load i32, i32* %add.ptr839, align 4, !dbg !12525
  %and840 = and i32 %539, 65280, !dbg !12525
  %shl841 = shl i32 %and840, 8, !dbg !12525
  %or842 = or i32 %shl834, %shl841, !dbg !12525
  %540 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !12525
  %caps843 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %540, i32 0, i32 9, !dbg !12525
  %hca_cur844 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps843, i32 0, i32 0, !dbg !12525
  %arrayidx845 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur844, i64 0, i64 0, !dbg !12525
  %arraydecay846 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx845, i64 0, i64 0, !dbg !12525
  %add.ptr847 = getelementptr i32, i32* %arraydecay846, i64 13, !dbg !12525
  %541 = load i32, i32* %add.ptr847, align 4, !dbg !12525
  %and848 = and i32 %541, 16711680, !dbg !12525
  %shr849 = lshr i32 %and848, 8, !dbg !12525
  %or850 = or i32 %or842, %shr849, !dbg !12525
  %542 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !12525
  %caps851 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %542, i32 0, i32 9, !dbg !12525
  %hca_cur852 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps851, i32 0, i32 0, !dbg !12525
  %arrayidx853 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur852, i64 0, i64 0, !dbg !12525
  %arraydecay854 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx853, i64 0, i64 0, !dbg !12525
  %add.ptr855 = getelementptr i32, i32* %arraydecay854, i64 13, !dbg !12525
  %543 = load i32, i32* %add.ptr855, align 4, !dbg !12525
  %and856 = and i32 %543, -16777216, !dbg !12525
  %shr857 = lshr i32 %and856, 24, !dbg !12525
  %or858 = or i32 %or850, %shr857, !dbg !12525
  br label %cond.end866, !dbg !12525

cond.false859:                                    ; preds = %do.end821
  %544 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !12525
  %caps860 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %544, i32 0, i32 9, !dbg !12525
  %hca_cur861 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps860, i32 0, i32 0, !dbg !12525
  %arrayidx862 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur861, i64 0, i64 0, !dbg !12525
  %arraydecay863 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx862, i64 0, i64 0, !dbg !12525
  %add.ptr864 = getelementptr i32, i32* %arraydecay863, i64 13, !dbg !12525
  %545 = load i32, i32* %add.ptr864, align 4, !dbg !12525
  %call865 = call i32 @__fswab32(i32 %545) #8, !dbg !12525
  br label %cond.end866, !dbg !12525

cond.end866:                                      ; preds = %cond.false859, %cond.true827
  %cond867 = phi i32 [ %or858, %cond.true827 ], [ %call865, %cond.false859 ], !dbg !12525
  %shr868 = lshr i32 %cond867, 0, !dbg !12525
  %and869 = and i32 %shr868, 255, !dbg !12525
  %cmp870 = icmp eq i32 %and869, 2, !dbg !12527
  br i1 %cmp870, label %if.then872, label %if.end1052, !dbg !12528

if.then872:                                       ; preds = %cond.end866
  br label %do.body873, !dbg !12529

do.body873:                                       ; preds = %if.then872
  call void @llvm.dbg.declare(metadata i32* %_v874, metadata !12530, metadata !DIExpression()), !dbg !12532
  %546 = load i8, i8* %port_num.addr, align 1, !dbg !12532
  %conv875 = zext i8 %546 to i32, !dbg !12532
  store i32 %conv875, i32* %_v874, align 4, !dbg !12532
  br label %do.body876, !dbg !12532

do.body876:                                       ; preds = %do.body873
  br label %do.end877, !dbg !12533

do.end877:                                        ; preds = %do.body876
  %547 = load i8*, i8** %in, align 8, !dbg !12532
  %548 = bitcast i8* %547 to i32*, !dbg !12532
  %add.ptr878 = getelementptr i32, i32* %548, i64 2, !dbg !12532
  %549 = load i32, i32* %add.ptr878, align 4, !dbg !12532
  %550 = call i1 @llvm.is.constant.i32(i32 %549), !dbg !12532
  br i1 %550, label %cond.true879, label %cond.false895, !dbg !12532

cond.true879:                                     ; preds = %do.end877
  %551 = load i8*, i8** %in, align 8, !dbg !12532
  %552 = bitcast i8* %551 to i32*, !dbg !12532
  %add.ptr880 = getelementptr i32, i32* %552, i64 2, !dbg !12532
  %553 = load i32, i32* %add.ptr880, align 4, !dbg !12532
  %and881 = and i32 %553, 255, !dbg !12532
  %shl882 = shl i32 %and881, 24, !dbg !12532
  %554 = load i8*, i8** %in, align 8, !dbg !12532
  %555 = bitcast i8* %554 to i32*, !dbg !12532
  %add.ptr883 = getelementptr i32, i32* %555, i64 2, !dbg !12532
  %556 = load i32, i32* %add.ptr883, align 4, !dbg !12532
  %and884 = and i32 %556, 65280, !dbg !12532
  %shl885 = shl i32 %and884, 8, !dbg !12532
  %or886 = or i32 %shl882, %shl885, !dbg !12532
  %557 = load i8*, i8** %in, align 8, !dbg !12532
  %558 = bitcast i8* %557 to i32*, !dbg !12532
  %add.ptr887 = getelementptr i32, i32* %558, i64 2, !dbg !12532
  %559 = load i32, i32* %add.ptr887, align 4, !dbg !12532
  %and888 = and i32 %559, 16711680, !dbg !12532
  %shr889 = lshr i32 %and888, 8, !dbg !12532
  %or890 = or i32 %or886, %shr889, !dbg !12532
  %560 = load i8*, i8** %in, align 8, !dbg !12532
  %561 = bitcast i8* %560 to i32*, !dbg !12532
  %add.ptr891 = getelementptr i32, i32* %561, i64 2, !dbg !12532
  %562 = load i32, i32* %add.ptr891, align 4, !dbg !12532
  %and892 = and i32 %562, -16777216, !dbg !12532
  %shr893 = lshr i32 %and892, 24, !dbg !12532
  %or894 = or i32 %or890, %shr893, !dbg !12532
  br label %cond.end898, !dbg !12532

cond.false895:                                    ; preds = %do.end877
  %563 = load i8*, i8** %in, align 8, !dbg !12532
  %564 = bitcast i8* %563 to i32*, !dbg !12532
  %add.ptr896 = getelementptr i32, i32* %564, i64 2, !dbg !12532
  %565 = load i32, i32* %add.ptr896, align 4, !dbg !12532
  %call897 = call i32 @__fswab32(i32 %565) #8, !dbg !12532
  br label %cond.end898, !dbg !12532

cond.end898:                                      ; preds = %cond.false895, %cond.true879
  %cond899 = phi i32 [ %or894, %cond.true879 ], [ %call897, %cond.false895 ], !dbg !12532
  %and900 = and i32 %cond899, -983041, !dbg !12532
  %566 = load i32, i32* %_v874, align 4, !dbg !12532
  %and901 = and i32 %566, 15, !dbg !12532
  %shl902 = shl i32 %and901, 16, !dbg !12532
  %or903 = or i32 %and900, %shl902, !dbg !12532
  %567 = call i1 @llvm.is.constant.i32(i32 %or903), !dbg !12532
  br i1 %567, label %cond.true904, label %cond.false1020, !dbg !12532

cond.true904:                                     ; preds = %cond.end898
  %568 = load i8*, i8** %in, align 8, !dbg !12532
  %569 = bitcast i8* %568 to i32*, !dbg !12532
  %add.ptr905 = getelementptr i32, i32* %569, i64 2, !dbg !12532
  %570 = load i32, i32* %add.ptr905, align 4, !dbg !12532
  %571 = call i1 @llvm.is.constant.i32(i32 %570), !dbg !12532
  br i1 %571, label %cond.true906, label %cond.false922, !dbg !12532

cond.true906:                                     ; preds = %cond.true904
  %572 = load i8*, i8** %in, align 8, !dbg !12532
  %573 = bitcast i8* %572 to i32*, !dbg !12532
  %add.ptr907 = getelementptr i32, i32* %573, i64 2, !dbg !12532
  %574 = load i32, i32* %add.ptr907, align 4, !dbg !12532
  %and908 = and i32 %574, 255, !dbg !12532
  %shl909 = shl i32 %and908, 24, !dbg !12532
  %575 = load i8*, i8** %in, align 8, !dbg !12532
  %576 = bitcast i8* %575 to i32*, !dbg !12532
  %add.ptr910 = getelementptr i32, i32* %576, i64 2, !dbg !12532
  %577 = load i32, i32* %add.ptr910, align 4, !dbg !12532
  %and911 = and i32 %577, 65280, !dbg !12532
  %shl912 = shl i32 %and911, 8, !dbg !12532
  %or913 = or i32 %shl909, %shl912, !dbg !12532
  %578 = load i8*, i8** %in, align 8, !dbg !12532
  %579 = bitcast i8* %578 to i32*, !dbg !12532
  %add.ptr914 = getelementptr i32, i32* %579, i64 2, !dbg !12532
  %580 = load i32, i32* %add.ptr914, align 4, !dbg !12532
  %and915 = and i32 %580, 16711680, !dbg !12532
  %shr916 = lshr i32 %and915, 8, !dbg !12532
  %or917 = or i32 %or913, %shr916, !dbg !12532
  %581 = load i8*, i8** %in, align 8, !dbg !12532
  %582 = bitcast i8* %581 to i32*, !dbg !12532
  %add.ptr918 = getelementptr i32, i32* %582, i64 2, !dbg !12532
  %583 = load i32, i32* %add.ptr918, align 4, !dbg !12532
  %and919 = and i32 %583, -16777216, !dbg !12532
  %shr920 = lshr i32 %and919, 24, !dbg !12532
  %or921 = or i32 %or917, %shr920, !dbg !12532
  br label %cond.end925, !dbg !12532

cond.false922:                                    ; preds = %cond.true904
  %584 = load i8*, i8** %in, align 8, !dbg !12532
  %585 = bitcast i8* %584 to i32*, !dbg !12532
  %add.ptr923 = getelementptr i32, i32* %585, i64 2, !dbg !12532
  %586 = load i32, i32* %add.ptr923, align 4, !dbg !12532
  %call924 = call i32 @__fswab32(i32 %586) #8, !dbg !12532
  br label %cond.end925, !dbg !12532

cond.end925:                                      ; preds = %cond.false922, %cond.true906
  %cond926 = phi i32 [ %or921, %cond.true906 ], [ %call924, %cond.false922 ], !dbg !12532
  %and927 = and i32 %cond926, -983041, !dbg !12532
  %587 = load i32, i32* %_v874, align 4, !dbg !12532
  %and928 = and i32 %587, 15, !dbg !12532
  %shl929 = shl i32 %and928, 16, !dbg !12532
  %or930 = or i32 %and927, %shl929, !dbg !12532
  %and931 = and i32 %or930, 255, !dbg !12532
  %shl932 = shl i32 %and931, 24, !dbg !12532
  %588 = load i8*, i8** %in, align 8, !dbg !12532
  %589 = bitcast i8* %588 to i32*, !dbg !12532
  %add.ptr933 = getelementptr i32, i32* %589, i64 2, !dbg !12532
  %590 = load i32, i32* %add.ptr933, align 4, !dbg !12532
  %591 = call i1 @llvm.is.constant.i32(i32 %590), !dbg !12532
  br i1 %591, label %cond.true934, label %cond.false950, !dbg !12532

cond.true934:                                     ; preds = %cond.end925
  %592 = load i8*, i8** %in, align 8, !dbg !12532
  %593 = bitcast i8* %592 to i32*, !dbg !12532
  %add.ptr935 = getelementptr i32, i32* %593, i64 2, !dbg !12532
  %594 = load i32, i32* %add.ptr935, align 4, !dbg !12532
  %and936 = and i32 %594, 255, !dbg !12532
  %shl937 = shl i32 %and936, 24, !dbg !12532
  %595 = load i8*, i8** %in, align 8, !dbg !12532
  %596 = bitcast i8* %595 to i32*, !dbg !12532
  %add.ptr938 = getelementptr i32, i32* %596, i64 2, !dbg !12532
  %597 = load i32, i32* %add.ptr938, align 4, !dbg !12532
  %and939 = and i32 %597, 65280, !dbg !12532
  %shl940 = shl i32 %and939, 8, !dbg !12532
  %or941 = or i32 %shl937, %shl940, !dbg !12532
  %598 = load i8*, i8** %in, align 8, !dbg !12532
  %599 = bitcast i8* %598 to i32*, !dbg !12532
  %add.ptr942 = getelementptr i32, i32* %599, i64 2, !dbg !12532
  %600 = load i32, i32* %add.ptr942, align 4, !dbg !12532
  %and943 = and i32 %600, 16711680, !dbg !12532
  %shr944 = lshr i32 %and943, 8, !dbg !12532
  %or945 = or i32 %or941, %shr944, !dbg !12532
  %601 = load i8*, i8** %in, align 8, !dbg !12532
  %602 = bitcast i8* %601 to i32*, !dbg !12532
  %add.ptr946 = getelementptr i32, i32* %602, i64 2, !dbg !12532
  %603 = load i32, i32* %add.ptr946, align 4, !dbg !12532
  %and947 = and i32 %603, -16777216, !dbg !12532
  %shr948 = lshr i32 %and947, 24, !dbg !12532
  %or949 = or i32 %or945, %shr948, !dbg !12532
  br label %cond.end953, !dbg !12532

cond.false950:                                    ; preds = %cond.end925
  %604 = load i8*, i8** %in, align 8, !dbg !12532
  %605 = bitcast i8* %604 to i32*, !dbg !12532
  %add.ptr951 = getelementptr i32, i32* %605, i64 2, !dbg !12532
  %606 = load i32, i32* %add.ptr951, align 4, !dbg !12532
  %call952 = call i32 @__fswab32(i32 %606) #8, !dbg !12532
  br label %cond.end953, !dbg !12532

cond.end953:                                      ; preds = %cond.false950, %cond.true934
  %cond954 = phi i32 [ %or949, %cond.true934 ], [ %call952, %cond.false950 ], !dbg !12532
  %and955 = and i32 %cond954, -983041, !dbg !12532
  %607 = load i32, i32* %_v874, align 4, !dbg !12532
  %and956 = and i32 %607, 15, !dbg !12532
  %shl957 = shl i32 %and956, 16, !dbg !12532
  %or958 = or i32 %and955, %shl957, !dbg !12532
  %and959 = and i32 %or958, 65280, !dbg !12532
  %shl960 = shl i32 %and959, 8, !dbg !12532
  %or961 = or i32 %shl932, %shl960, !dbg !12532
  %608 = load i8*, i8** %in, align 8, !dbg !12532
  %609 = bitcast i8* %608 to i32*, !dbg !12532
  %add.ptr962 = getelementptr i32, i32* %609, i64 2, !dbg !12532
  %610 = load i32, i32* %add.ptr962, align 4, !dbg !12532
  %611 = call i1 @llvm.is.constant.i32(i32 %610), !dbg !12532
  br i1 %611, label %cond.true963, label %cond.false979, !dbg !12532

cond.true963:                                     ; preds = %cond.end953
  %612 = load i8*, i8** %in, align 8, !dbg !12532
  %613 = bitcast i8* %612 to i32*, !dbg !12532
  %add.ptr964 = getelementptr i32, i32* %613, i64 2, !dbg !12532
  %614 = load i32, i32* %add.ptr964, align 4, !dbg !12532
  %and965 = and i32 %614, 255, !dbg !12532
  %shl966 = shl i32 %and965, 24, !dbg !12532
  %615 = load i8*, i8** %in, align 8, !dbg !12532
  %616 = bitcast i8* %615 to i32*, !dbg !12532
  %add.ptr967 = getelementptr i32, i32* %616, i64 2, !dbg !12532
  %617 = load i32, i32* %add.ptr967, align 4, !dbg !12532
  %and968 = and i32 %617, 65280, !dbg !12532
  %shl969 = shl i32 %and968, 8, !dbg !12532
  %or970 = or i32 %shl966, %shl969, !dbg !12532
  %618 = load i8*, i8** %in, align 8, !dbg !12532
  %619 = bitcast i8* %618 to i32*, !dbg !12532
  %add.ptr971 = getelementptr i32, i32* %619, i64 2, !dbg !12532
  %620 = load i32, i32* %add.ptr971, align 4, !dbg !12532
  %and972 = and i32 %620, 16711680, !dbg !12532
  %shr973 = lshr i32 %and972, 8, !dbg !12532
  %or974 = or i32 %or970, %shr973, !dbg !12532
  %621 = load i8*, i8** %in, align 8, !dbg !12532
  %622 = bitcast i8* %621 to i32*, !dbg !12532
  %add.ptr975 = getelementptr i32, i32* %622, i64 2, !dbg !12532
  %623 = load i32, i32* %add.ptr975, align 4, !dbg !12532
  %and976 = and i32 %623, -16777216, !dbg !12532
  %shr977 = lshr i32 %and976, 24, !dbg !12532
  %or978 = or i32 %or974, %shr977, !dbg !12532
  br label %cond.end982, !dbg !12532

cond.false979:                                    ; preds = %cond.end953
  %624 = load i8*, i8** %in, align 8, !dbg !12532
  %625 = bitcast i8* %624 to i32*, !dbg !12532
  %add.ptr980 = getelementptr i32, i32* %625, i64 2, !dbg !12532
  %626 = load i32, i32* %add.ptr980, align 4, !dbg !12532
  %call981 = call i32 @__fswab32(i32 %626) #8, !dbg !12532
  br label %cond.end982, !dbg !12532

cond.end982:                                      ; preds = %cond.false979, %cond.true963
  %cond983 = phi i32 [ %or978, %cond.true963 ], [ %call981, %cond.false979 ], !dbg !12532
  %and984 = and i32 %cond983, -983041, !dbg !12532
  %627 = load i32, i32* %_v874, align 4, !dbg !12532
  %and985 = and i32 %627, 15, !dbg !12532
  %shl986 = shl i32 %and985, 16, !dbg !12532
  %or987 = or i32 %and984, %shl986, !dbg !12532
  %and988 = and i32 %or987, 16711680, !dbg !12532
  %shr989 = lshr i32 %and988, 8, !dbg !12532
  %or990 = or i32 %or961, %shr989, !dbg !12532
  %628 = load i8*, i8** %in, align 8, !dbg !12532
  %629 = bitcast i8* %628 to i32*, !dbg !12532
  %add.ptr991 = getelementptr i32, i32* %629, i64 2, !dbg !12532
  %630 = load i32, i32* %add.ptr991, align 4, !dbg !12532
  %631 = call i1 @llvm.is.constant.i32(i32 %630), !dbg !12532
  br i1 %631, label %cond.true992, label %cond.false1008, !dbg !12532

cond.true992:                                     ; preds = %cond.end982
  %632 = load i8*, i8** %in, align 8, !dbg !12532
  %633 = bitcast i8* %632 to i32*, !dbg !12532
  %add.ptr993 = getelementptr i32, i32* %633, i64 2, !dbg !12532
  %634 = load i32, i32* %add.ptr993, align 4, !dbg !12532
  %and994 = and i32 %634, 255, !dbg !12532
  %shl995 = shl i32 %and994, 24, !dbg !12532
  %635 = load i8*, i8** %in, align 8, !dbg !12532
  %636 = bitcast i8* %635 to i32*, !dbg !12532
  %add.ptr996 = getelementptr i32, i32* %636, i64 2, !dbg !12532
  %637 = load i32, i32* %add.ptr996, align 4, !dbg !12532
  %and997 = and i32 %637, 65280, !dbg !12532
  %shl998 = shl i32 %and997, 8, !dbg !12532
  %or999 = or i32 %shl995, %shl998, !dbg !12532
  %638 = load i8*, i8** %in, align 8, !dbg !12532
  %639 = bitcast i8* %638 to i32*, !dbg !12532
  %add.ptr1000 = getelementptr i32, i32* %639, i64 2, !dbg !12532
  %640 = load i32, i32* %add.ptr1000, align 4, !dbg !12532
  %and1001 = and i32 %640, 16711680, !dbg !12532
  %shr1002 = lshr i32 %and1001, 8, !dbg !12532
  %or1003 = or i32 %or999, %shr1002, !dbg !12532
  %641 = load i8*, i8** %in, align 8, !dbg !12532
  %642 = bitcast i8* %641 to i32*, !dbg !12532
  %add.ptr1004 = getelementptr i32, i32* %642, i64 2, !dbg !12532
  %643 = load i32, i32* %add.ptr1004, align 4, !dbg !12532
  %and1005 = and i32 %643, -16777216, !dbg !12532
  %shr1006 = lshr i32 %and1005, 24, !dbg !12532
  %or1007 = or i32 %or1003, %shr1006, !dbg !12532
  br label %cond.end1011, !dbg !12532

cond.false1008:                                   ; preds = %cond.end982
  %644 = load i8*, i8** %in, align 8, !dbg !12532
  %645 = bitcast i8* %644 to i32*, !dbg !12532
  %add.ptr1009 = getelementptr i32, i32* %645, i64 2, !dbg !12532
  %646 = load i32, i32* %add.ptr1009, align 4, !dbg !12532
  %call1010 = call i32 @__fswab32(i32 %646) #8, !dbg !12532
  br label %cond.end1011, !dbg !12532

cond.end1011:                                     ; preds = %cond.false1008, %cond.true992
  %cond1012 = phi i32 [ %or1007, %cond.true992 ], [ %call1010, %cond.false1008 ], !dbg !12532
  %and1013 = and i32 %cond1012, -983041, !dbg !12532
  %647 = load i32, i32* %_v874, align 4, !dbg !12532
  %and1014 = and i32 %647, 15, !dbg !12532
  %shl1015 = shl i32 %and1014, 16, !dbg !12532
  %or1016 = or i32 %and1013, %shl1015, !dbg !12532
  %and1017 = and i32 %or1016, -16777216, !dbg !12532
  %shr1018 = lshr i32 %and1017, 24, !dbg !12532
  %or1019 = or i32 %or990, %shr1018, !dbg !12532
  br label %cond.end1048, !dbg !12532

cond.false1020:                                   ; preds = %cond.end898
  %648 = load i8*, i8** %in, align 8, !dbg !12532
  %649 = bitcast i8* %648 to i32*, !dbg !12532
  %add.ptr1021 = getelementptr i32, i32* %649, i64 2, !dbg !12532
  %650 = load i32, i32* %add.ptr1021, align 4, !dbg !12532
  %651 = call i1 @llvm.is.constant.i32(i32 %650), !dbg !12532
  br i1 %651, label %cond.true1022, label %cond.false1038, !dbg !12532

cond.true1022:                                    ; preds = %cond.false1020
  %652 = load i8*, i8** %in, align 8, !dbg !12532
  %653 = bitcast i8* %652 to i32*, !dbg !12532
  %add.ptr1023 = getelementptr i32, i32* %653, i64 2, !dbg !12532
  %654 = load i32, i32* %add.ptr1023, align 4, !dbg !12532
  %and1024 = and i32 %654, 255, !dbg !12532
  %shl1025 = shl i32 %and1024, 24, !dbg !12532
  %655 = load i8*, i8** %in, align 8, !dbg !12532
  %656 = bitcast i8* %655 to i32*, !dbg !12532
  %add.ptr1026 = getelementptr i32, i32* %656, i64 2, !dbg !12532
  %657 = load i32, i32* %add.ptr1026, align 4, !dbg !12532
  %and1027 = and i32 %657, 65280, !dbg !12532
  %shl1028 = shl i32 %and1027, 8, !dbg !12532
  %or1029 = or i32 %shl1025, %shl1028, !dbg !12532
  %658 = load i8*, i8** %in, align 8, !dbg !12532
  %659 = bitcast i8* %658 to i32*, !dbg !12532
  %add.ptr1030 = getelementptr i32, i32* %659, i64 2, !dbg !12532
  %660 = load i32, i32* %add.ptr1030, align 4, !dbg !12532
  %and1031 = and i32 %660, 16711680, !dbg !12532
  %shr1032 = lshr i32 %and1031, 8, !dbg !12532
  %or1033 = or i32 %or1029, %shr1032, !dbg !12532
  %661 = load i8*, i8** %in, align 8, !dbg !12532
  %662 = bitcast i8* %661 to i32*, !dbg !12532
  %add.ptr1034 = getelementptr i32, i32* %662, i64 2, !dbg !12532
  %663 = load i32, i32* %add.ptr1034, align 4, !dbg !12532
  %and1035 = and i32 %663, -16777216, !dbg !12532
  %shr1036 = lshr i32 %and1035, 24, !dbg !12532
  %or1037 = or i32 %or1033, %shr1036, !dbg !12532
  br label %cond.end1041, !dbg !12532

cond.false1038:                                   ; preds = %cond.false1020
  %664 = load i8*, i8** %in, align 8, !dbg !12532
  %665 = bitcast i8* %664 to i32*, !dbg !12532
  %add.ptr1039 = getelementptr i32, i32* %665, i64 2, !dbg !12532
  %666 = load i32, i32* %add.ptr1039, align 4, !dbg !12532
  %call1040 = call i32 @__fswab32(i32 %666) #8, !dbg !12532
  br label %cond.end1041, !dbg !12532

cond.end1041:                                     ; preds = %cond.false1038, %cond.true1022
  %cond1042 = phi i32 [ %or1037, %cond.true1022 ], [ %call1040, %cond.false1038 ], !dbg !12532
  %and1043 = and i32 %cond1042, -983041, !dbg !12532
  %667 = load i32, i32* %_v874, align 4, !dbg !12532
  %and1044 = and i32 %667, 15, !dbg !12532
  %shl1045 = shl i32 %and1044, 16, !dbg !12532
  %or1046 = or i32 %and1043, %shl1045, !dbg !12532
  %call1047 = call i32 @__fswab32(i32 %or1046) #8, !dbg !12532
  br label %cond.end1048, !dbg !12532

cond.end1048:                                     ; preds = %cond.end1041, %cond.end1011
  %cond1049 = phi i32 [ %or1019, %cond.end1011 ], [ %call1047, %cond.end1041 ], !dbg !12532
  %668 = load i8*, i8** %in, align 8, !dbg !12532
  %669 = bitcast i8* %668 to i32*, !dbg !12532
  %add.ptr1050 = getelementptr i32, i32* %669, i64 2, !dbg !12532
  store i32 %cond1049, i32* %add.ptr1050, align 4, !dbg !12532
  br label %do.end1051, !dbg !12532

do.end1051:                                       ; preds = %cond.end1048
  br label %if.end1052, !dbg !12532

if.end1052:                                       ; preds = %do.end1051, %cond.end866
  %670 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !12535
  %671 = load i8*, i8** %in, align 8, !dbg !12536
  %672 = load i32, i32* %in_sz, align 4, !dbg !12537
  %673 = load i8*, i8** %out, align 8, !dbg !12538
  %674 = load i32, i32* %out_sz, align 4, !dbg !12539
  %call1053 = call i32 @mlx5_cmd_exec(%struct.mlx5_core_dev* %670, i8* %671, i32 %672, i8* %673, i32 %674) #9, !dbg !12540
  store i32 %call1053, i32* %err, align 4, !dbg !12541
  %675 = load i32, i32* %err, align 4, !dbg !12542
  %tobool1054 = icmp ne i32 %675, 0, !dbg !12542
  br i1 %tobool1054, label %if.then1055, label %if.end1056, !dbg !12544

if.then1055:                                      ; preds = %if.end1052
  br label %out1087, !dbg !12545

if.end1056:                                       ; preds = %if.end1052
  %676 = load i8*, i8** %out, align 8, !dbg !12546
  %add.ptr1057 = getelementptr i8, i8* %676, i64 16, !dbg !12546
  store i8* %add.ptr1057, i8** %pkarr, align 8, !dbg !12547
  store i32 0, i32* %i, align 4, !dbg !12548
  br label %for.cond, !dbg !12550

for.cond:                                         ; preds = %for.inc, %if.end1056
  %677 = load i32, i32* %i, align 4, !dbg !12551
  %678 = load i32, i32* %nout, align 4, !dbg !12553
  %cmp1058 = icmp slt i32 %677, %678, !dbg !12554
  br i1 %cmp1058, label %for.body, label %for.end, !dbg !12555

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %___t, metadata !12556, metadata !DIExpression()), !dbg !12558
  %679 = load i8*, i8** %pkarr, align 8, !dbg !12558
  %680 = bitcast i8* %679 to i32*, !dbg !12558
  %add.ptr1060 = getelementptr i32, i32* %680, i64 0, !dbg !12558
  %681 = load i32, i32* %add.ptr1060, align 4, !dbg !12558
  %682 = call i1 @llvm.is.constant.i32(i32 %681), !dbg !12558
  br i1 %682, label %cond.true1061, label %cond.false1077, !dbg !12558

cond.true1061:                                    ; preds = %for.body
  %683 = load i8*, i8** %pkarr, align 8, !dbg !12558
  %684 = bitcast i8* %683 to i32*, !dbg !12558
  %add.ptr1062 = getelementptr i32, i32* %684, i64 0, !dbg !12558
  %685 = load i32, i32* %add.ptr1062, align 4, !dbg !12558
  %and1063 = and i32 %685, 255, !dbg !12558
  %shl1064 = shl i32 %and1063, 24, !dbg !12558
  %686 = load i8*, i8** %pkarr, align 8, !dbg !12558
  %687 = bitcast i8* %686 to i32*, !dbg !12558
  %add.ptr1065 = getelementptr i32, i32* %687, i64 0, !dbg !12558
  %688 = load i32, i32* %add.ptr1065, align 4, !dbg !12558
  %and1066 = and i32 %688, 65280, !dbg !12558
  %shl1067 = shl i32 %and1066, 8, !dbg !12558
  %or1068 = or i32 %shl1064, %shl1067, !dbg !12558
  %689 = load i8*, i8** %pkarr, align 8, !dbg !12558
  %690 = bitcast i8* %689 to i32*, !dbg !12558
  %add.ptr1069 = getelementptr i32, i32* %690, i64 0, !dbg !12558
  %691 = load i32, i32* %add.ptr1069, align 4, !dbg !12558
  %and1070 = and i32 %691, 16711680, !dbg !12558
  %shr1071 = lshr i32 %and1070, 8, !dbg !12558
  %or1072 = or i32 %or1068, %shr1071, !dbg !12558
  %692 = load i8*, i8** %pkarr, align 8, !dbg !12558
  %693 = bitcast i8* %692 to i32*, !dbg !12558
  %add.ptr1073 = getelementptr i32, i32* %693, i64 0, !dbg !12558
  %694 = load i32, i32* %add.ptr1073, align 4, !dbg !12558
  %and1074 = and i32 %694, -16777216, !dbg !12558
  %shr1075 = lshr i32 %and1074, 24, !dbg !12558
  %or1076 = or i32 %or1072, %shr1075, !dbg !12558
  br label %cond.end1080, !dbg !12558

cond.false1077:                                   ; preds = %for.body
  %695 = load i8*, i8** %pkarr, align 8, !dbg !12558
  %696 = bitcast i8* %695 to i32*, !dbg !12558
  %add.ptr1078 = getelementptr i32, i32* %696, i64 0, !dbg !12558
  %697 = load i32, i32* %add.ptr1078, align 4, !dbg !12558
  %call1079 = call i32 @__fswab32(i32 %697) #8, !dbg !12558
  br label %cond.end1080, !dbg !12558

cond.end1080:                                     ; preds = %cond.false1077, %cond.true1061
  %cond1081 = phi i32 [ %or1076, %cond.true1061 ], [ %call1079, %cond.false1077 ], !dbg !12558
  %shr1082 = lshr i32 %cond1081, 0, !dbg !12558
  %and1083 = and i32 %shr1082, 65535, !dbg !12558
  store i32 %and1083, i32* %___t, align 4, !dbg !12558
  store i32 0, i32* %tmp, align 4, !dbg !12559
  %698 = load i32, i32* %tmp, align 4, !dbg !12562
  %699 = load i32, i32* %___t, align 4, !dbg !12558
  store i32 %699, i32* %tmp1084, align 4, !dbg !12558
  %700 = load i32, i32* %tmp1084, align 4, !dbg !12558
  %conv1085 = trunc i32 %700 to i16, !dbg !12563
  %701 = load i16*, i16** %pkey.addr, align 8, !dbg !12564
  store i16 %conv1085, i16* %701, align 2, !dbg !12565
  br label %for.inc, !dbg !12566

for.inc:                                          ; preds = %cond.end1080
  %702 = load i32, i32* %i, align 4, !dbg !12567
  %inc = add i32 %702, 1, !dbg !12567
  store i32 %inc, i32* %i, align 4, !dbg !12567
  %703 = load i16*, i16** %pkey.addr, align 8, !dbg !12568
  %incdec.ptr = getelementptr i16, i16* %703, i32 1, !dbg !12568
  store i16* %incdec.ptr, i16** %pkey.addr, align 8, !dbg !12568
  %704 = load i8*, i8** %pkarr, align 8, !dbg !12569
  %add.ptr1086 = getelementptr i8, i8* %704, i64 4, !dbg !12569
  store i8* %add.ptr1086, i8** %pkarr, align 8, !dbg !12569
  br label %for.cond, !dbg !12570, !llvm.loop !12571

for.end:                                          ; preds = %for.cond
  br label %out1087, !dbg !12572

out1087:                                          ; preds = %for.end, %if.then1055, %if.else640, %if.then102
  call void @llvm.dbg.label(metadata !12573), !dbg !12574
  %705 = load i8*, i8** %in, align 8, !dbg !12575
  call void @kfree(i8* %705) #9, !dbg !12576
  %706 = load i8*, i8** %out, align 8, !dbg !12577
  call void @kfree(i8* %706) #9, !dbg !12578
  %707 = load i32, i32* %err, align 4, !dbg !12579
  store i32 %707, i32* %retval, align 4, !dbg !12580
  br label %return, !dbg !12580

return:                                           ; preds = %out1087, %if.then
  %708 = load i32, i32* %retval, align 4, !dbg !12581
  ret i32 %708, !dbg !12581
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @mlx5_to_sw_pkey_sz(i32 %pkey_sz) #0 !dbg !12582 {
entry:
  %retval = alloca i16, align 2
  %pkey_sz.addr = alloca i32, align 4
  store i32 %pkey_sz, i32* %pkey_sz.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %pkey_sz.addr, metadata !12585, metadata !DIExpression()), !dbg !12586
  %0 = load i32, i32* %pkey_sz.addr, align 4, !dbg !12587
  %cmp = icmp sgt i32 %0, 5, !dbg !12589
  br i1 %cmp, label %if.then, label %if.end, !dbg !12590

if.then:                                          ; preds = %entry
  store i16 0, i16* %retval, align 2, !dbg !12591
  br label %return, !dbg !12591

if.end:                                           ; preds = %entry
  %1 = load i32, i32* %pkey_sz.addr, align 4, !dbg !12592
  %shl = shl i32 128, %1, !dbg !12593
  %conv = trunc i32 %shl to i16, !dbg !12594
  store i16 %conv, i16* %retval, align 2, !dbg !12595
  br label %return, !dbg !12595

return:                                           ; preds = %if.end, %if.then
  %2 = load i16, i16* %retval, align 2, !dbg !12596
  ret i16 %2, !dbg !12596
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @mlx5_query_hca_vport_context(%struct.mlx5_core_dev* %dev, i8 zeroext %other_vport, i8 zeroext %port_num, i16 zeroext %vf_num, %struct.mlx5_hca_vport_context* %rep) #0 !dbg !12597 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.mlx5_core_dev*, align 8
  %other_vport.addr = alloca i8, align 1
  %port_num.addr = alloca i8, align 1
  %vf_num.addr = alloca i16, align 2
  %rep.addr = alloca %struct.mlx5_hca_vport_context*, align 8
  %out_sz = alloca i32, align 4
  %in = alloca [4 x i32], align 16
  %is_group_manager = alloca i32, align 4
  %out = alloca i8*, align 8
  %ctx = alloca i8*, align 8
  %err = alloca i32, align 4
  %_v = alloca i32, align 4
  %_v253 = alloca i32, align 4
  %_v468 = alloca i32, align 4
  %_v736 = alloca i32, align 4
  %tmp = alloca i32, align 4
  %___t = alloca i32, align 4
  %tmp981 = alloca i32, align 4
  %tmp982 = alloca i32, align 4
  %___t983 = alloca i32, align 4
  %tmp1008 = alloca i32, align 4
  %tmp1009 = alloca i32, align 4
  %___t1011 = alloca i32, align 4
  %tmp1036 = alloca i32, align 4
  %tmp1037 = alloca i32, align 4
  %___t1040 = alloca i32, align 4
  %tmp1065 = alloca i32, align 4
  %tmp1066 = alloca i32, align 4
  %___t1069 = alloca i32, align 4
  %tmp1094 = alloca i32, align 4
  %tmp1095 = alloca i32, align 4
  %___t1096 = alloca i32, align 4
  %tmp1121 = alloca i32, align 4
  %tmp1122 = alloca i32, align 4
  %___t1123 = alloca i32, align 4
  %tmp1148 = alloca i32, align 4
  %tmp1149 = alloca i32, align 4
  %___t1150 = alloca i32, align 4
  %tmp1175 = alloca i32, align 4
  %tmp1176 = alloca i32, align 4
  %___t1178 = alloca i64, align 8
  %tmp1217 = alloca i32, align 4
  %tmp1218 = alloca i64, align 8
  %___t1219 = alloca i64, align 8
  %tmp1258 = alloca i32, align 4
  %tmp1259 = alloca i64, align 8
  %___t1260 = alloca i32, align 4
  %tmp1284 = alloca i32, align 4
  %tmp1285 = alloca i32, align 4
  %___t1286 = alloca i32, align 4
  %tmp1310 = alloca i32, align 4
  %tmp1311 = alloca i32, align 4
  %___t1312 = alloca i32, align 4
  %tmp1336 = alloca i32, align 4
  %tmp1337 = alloca i32, align 4
  %___t1339 = alloca i32, align 4
  %tmp1363 = alloca i32, align 4
  %tmp1364 = alloca i32, align 4
  %___t1366 = alloca i32, align 4
  %tmp1391 = alloca i32, align 4
  %tmp1392 = alloca i32, align 4
  %___t1394 = alloca i32, align 4
  %tmp1419 = alloca i32, align 4
  %tmp1420 = alloca i32, align 4
  %___t1422 = alloca i32, align 4
  %tmp1447 = alloca i32, align 4
  %tmp1448 = alloca i32, align 4
  %___t1450 = alloca i32, align 4
  %tmp1475 = alloca i32, align 4
  %tmp1476 = alloca i32, align 4
  %___t1478 = alloca i32, align 4
  %tmp1503 = alloca i32, align 4
  %tmp1504 = alloca i32, align 4
  %___t1506 = alloca i32, align 4
  %tmp1531 = alloca i32, align 4
  %tmp1532 = alloca i32, align 4
  %___t1534 = alloca i32, align 4
  %tmp1559 = alloca i32, align 4
  %tmp1560 = alloca i32, align 4
  %___t1562 = alloca i32, align 4
  %tmp1587 = alloca i32, align 4
  %tmp1588 = alloca i32, align 4
  %___t1590 = alloca i32, align 4
  %tmp1615 = alloca i32, align 4
  %tmp1616 = alloca i32, align 4
  %___t1619 = alloca i64, align 8
  %tmp1658 = alloca i32, align 4
  %tmp1659 = alloca i64, align 8
  store %struct.mlx5_core_dev* %dev, %struct.mlx5_core_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_core_dev** %dev.addr, metadata !12627, metadata !DIExpression()), !dbg !12628
  store i8 %other_vport, i8* %other_vport.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %other_vport.addr, metadata !12629, metadata !DIExpression()), !dbg !12630
  store i8 %port_num, i8* %port_num.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %port_num.addr, metadata !12631, metadata !DIExpression()), !dbg !12632
  store i16 %vf_num, i16* %vf_num.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %vf_num.addr, metadata !12633, metadata !DIExpression()), !dbg !12634
  store %struct.mlx5_hca_vport_context* %rep, %struct.mlx5_hca_vport_context** %rep.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_hca_vport_context** %rep.addr, metadata !12635, metadata !DIExpression()), !dbg !12636
  call void @llvm.dbg.declare(metadata i32* %out_sz, metadata !12637, metadata !DIExpression()), !dbg !12638
  store i32 528, i32* %out_sz, align 4, !dbg !12638
  call void @llvm.dbg.declare(metadata [4 x i32]* %in, metadata !12639, metadata !DIExpression()), !dbg !12641
  %0 = bitcast [4 x i32]* %in to i8*, !dbg !12641
  call void @llvm.memset.p0i8.i64(i8* align 16 %0, i8 0, i64 16, i1 false), !dbg !12641
  call void @llvm.dbg.declare(metadata i32* %is_group_manager, metadata !12642, metadata !DIExpression()), !dbg !12643
  call void @llvm.dbg.declare(metadata i8** %out, metadata !12644, metadata !DIExpression()), !dbg !12645
  call void @llvm.dbg.declare(metadata i8** %ctx, metadata !12646, metadata !DIExpression()), !dbg !12647
  call void @llvm.dbg.declare(metadata i32* %err, metadata !12648, metadata !DIExpression()), !dbg !12649
  %1 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !12650
  %caps = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %1, i32 0, i32 9, !dbg !12650
  %hca_cur = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps, i32 0, i32 0, !dbg !12650
  %arrayidx = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur, i64 0, i64 0, !dbg !12650
  %arraydecay = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx, i64 0, i64 0, !dbg !12650
  %add.ptr = getelementptr i32, i32* %arraydecay, i64 13, !dbg !12650
  %2 = load i32, i32* %add.ptr, align 4, !dbg !12650
  %3 = call i1 @llvm.is.constant.i32(i32 %2), !dbg !12650
  br i1 %3, label %cond.true, label %cond.false, !dbg !12650

cond.true:                                        ; preds = %entry
  %4 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !12650
  %caps1 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %4, i32 0, i32 9, !dbg !12650
  %hca_cur2 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps1, i32 0, i32 0, !dbg !12650
  %arrayidx3 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur2, i64 0, i64 0, !dbg !12650
  %arraydecay4 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx3, i64 0, i64 0, !dbg !12650
  %add.ptr5 = getelementptr i32, i32* %arraydecay4, i64 13, !dbg !12650
  %5 = load i32, i32* %add.ptr5, align 4, !dbg !12650
  %and = and i32 %5, 255, !dbg !12650
  %shl = shl i32 %and, 24, !dbg !12650
  %6 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !12650
  %caps6 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %6, i32 0, i32 9, !dbg !12650
  %hca_cur7 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps6, i32 0, i32 0, !dbg !12650
  %arrayidx8 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur7, i64 0, i64 0, !dbg !12650
  %arraydecay9 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx8, i64 0, i64 0, !dbg !12650
  %add.ptr10 = getelementptr i32, i32* %arraydecay9, i64 13, !dbg !12650
  %7 = load i32, i32* %add.ptr10, align 4, !dbg !12650
  %and11 = and i32 %7, 65280, !dbg !12650
  %shl12 = shl i32 %and11, 8, !dbg !12650
  %or = or i32 %shl, %shl12, !dbg !12650
  %8 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !12650
  %caps13 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %8, i32 0, i32 9, !dbg !12650
  %hca_cur14 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps13, i32 0, i32 0, !dbg !12650
  %arrayidx15 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur14, i64 0, i64 0, !dbg !12650
  %arraydecay16 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx15, i64 0, i64 0, !dbg !12650
  %add.ptr17 = getelementptr i32, i32* %arraydecay16, i64 13, !dbg !12650
  %9 = load i32, i32* %add.ptr17, align 4, !dbg !12650
  %and18 = and i32 %9, 16711680, !dbg !12650
  %shr = lshr i32 %and18, 8, !dbg !12650
  %or19 = or i32 %or, %shr, !dbg !12650
  %10 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !12650
  %caps20 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %10, i32 0, i32 9, !dbg !12650
  %hca_cur21 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps20, i32 0, i32 0, !dbg !12650
  %arrayidx22 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur21, i64 0, i64 0, !dbg !12650
  %arraydecay23 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx22, i64 0, i64 0, !dbg !12650
  %add.ptr24 = getelementptr i32, i32* %arraydecay23, i64 13, !dbg !12650
  %11 = load i32, i32* %add.ptr24, align 4, !dbg !12650
  %and25 = and i32 %11, -16777216, !dbg !12650
  %shr26 = lshr i32 %and25, 24, !dbg !12650
  %or27 = or i32 %or19, %shr26, !dbg !12650
  br label %cond.end, !dbg !12650

cond.false:                                       ; preds = %entry
  %12 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !12650
  %caps28 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %12, i32 0, i32 9, !dbg !12650
  %hca_cur29 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps28, i32 0, i32 0, !dbg !12650
  %arrayidx30 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur29, i64 0, i64 0, !dbg !12650
  %arraydecay31 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx30, i64 0, i64 0, !dbg !12650
  %add.ptr32 = getelementptr i32, i32* %arraydecay31, i64 13, !dbg !12650
  %13 = load i32, i32* %add.ptr32, align 4, !dbg !12650
  %call = call i32 @__fswab32(i32 %13) #8, !dbg !12650
  br label %cond.end, !dbg !12650

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %or27, %cond.true ], [ %call, %cond.false ], !dbg !12650
  %shr33 = lshr i32 %cond, 31, !dbg !12650
  %and34 = and i32 %shr33, 1, !dbg !12650
  store i32 %and34, i32* %is_group_manager, align 4, !dbg !12651
  %14 = load i32, i32* %out_sz, align 4, !dbg !12652
  %conv = sext i32 %14 to i64, !dbg !12652
  %call35 = call i8* @kzalloc(i64 %conv, i32 3264) #9, !dbg !12653
  store i8* %call35, i8** %out, align 8, !dbg !12654
  %15 = load i8*, i8** %out, align 8, !dbg !12655
  %tobool = icmp ne i8* %15, null, !dbg !12655
  br i1 %tobool, label %if.end, label %if.then, !dbg !12657

if.then:                                          ; preds = %cond.end
  store i32 -12, i32* %retval, align 4, !dbg !12658
  br label %return, !dbg !12658

if.end:                                           ; preds = %cond.end
  br label %do.body, !dbg !12659

do.body:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %_v, metadata !12660, metadata !DIExpression()), !dbg !12662
  store i32 1890, i32* %_v, align 4, !dbg !12662
  br label %do.body36, !dbg !12662

do.body36:                                        ; preds = %do.body
  br label %do.end, !dbg !12663

do.end:                                           ; preds = %do.body36
  %arraydecay37 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12662
  %add.ptr38 = getelementptr i32, i32* %arraydecay37, i64 0, !dbg !12662
  %16 = load i32, i32* %add.ptr38, align 4, !dbg !12662
  %17 = call i1 @llvm.is.constant.i32(i32 %16), !dbg !12662
  br i1 %17, label %cond.true39, label %cond.false59, !dbg !12662

cond.true39:                                      ; preds = %do.end
  %arraydecay40 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12662
  %add.ptr41 = getelementptr i32, i32* %arraydecay40, i64 0, !dbg !12662
  %18 = load i32, i32* %add.ptr41, align 4, !dbg !12662
  %and42 = and i32 %18, 255, !dbg !12662
  %shl43 = shl i32 %and42, 24, !dbg !12662
  %arraydecay44 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12662
  %add.ptr45 = getelementptr i32, i32* %arraydecay44, i64 0, !dbg !12662
  %19 = load i32, i32* %add.ptr45, align 4, !dbg !12662
  %and46 = and i32 %19, 65280, !dbg !12662
  %shl47 = shl i32 %and46, 8, !dbg !12662
  %or48 = or i32 %shl43, %shl47, !dbg !12662
  %arraydecay49 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12662
  %add.ptr50 = getelementptr i32, i32* %arraydecay49, i64 0, !dbg !12662
  %20 = load i32, i32* %add.ptr50, align 4, !dbg !12662
  %and51 = and i32 %20, 16711680, !dbg !12662
  %shr52 = lshr i32 %and51, 8, !dbg !12662
  %or53 = or i32 %or48, %shr52, !dbg !12662
  %arraydecay54 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12662
  %add.ptr55 = getelementptr i32, i32* %arraydecay54, i64 0, !dbg !12662
  %21 = load i32, i32* %add.ptr55, align 4, !dbg !12662
  %and56 = and i32 %21, -16777216, !dbg !12662
  %shr57 = lshr i32 %and56, 24, !dbg !12662
  %or58 = or i32 %or53, %shr57, !dbg !12662
  br label %cond.end63, !dbg !12662

cond.false59:                                     ; preds = %do.end
  %arraydecay60 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12662
  %add.ptr61 = getelementptr i32, i32* %arraydecay60, i64 0, !dbg !12662
  %22 = load i32, i32* %add.ptr61, align 4, !dbg !12662
  %call62 = call i32 @__fswab32(i32 %22) #8, !dbg !12662
  br label %cond.end63, !dbg !12662

cond.end63:                                       ; preds = %cond.false59, %cond.true39
  %cond64 = phi i32 [ %or58, %cond.true39 ], [ %call62, %cond.false59 ], !dbg !12662
  %and65 = and i32 %cond64, 65535, !dbg !12662
  %23 = load i32, i32* %_v, align 4, !dbg !12662
  %and66 = and i32 %23, 65535, !dbg !12662
  %shl67 = shl i32 %and66, 16, !dbg !12662
  %or68 = or i32 %and65, %shl67, !dbg !12662
  %24 = call i1 @llvm.is.constant.i32(i32 %or68), !dbg !12662
  br i1 %24, label %cond.true69, label %cond.false209, !dbg !12662

cond.true69:                                      ; preds = %cond.end63
  %arraydecay70 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12662
  %add.ptr71 = getelementptr i32, i32* %arraydecay70, i64 0, !dbg !12662
  %25 = load i32, i32* %add.ptr71, align 4, !dbg !12662
  %26 = call i1 @llvm.is.constant.i32(i32 %25), !dbg !12662
  br i1 %26, label %cond.true72, label %cond.false92, !dbg !12662

cond.true72:                                      ; preds = %cond.true69
  %arraydecay73 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12662
  %add.ptr74 = getelementptr i32, i32* %arraydecay73, i64 0, !dbg !12662
  %27 = load i32, i32* %add.ptr74, align 4, !dbg !12662
  %and75 = and i32 %27, 255, !dbg !12662
  %shl76 = shl i32 %and75, 24, !dbg !12662
  %arraydecay77 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12662
  %add.ptr78 = getelementptr i32, i32* %arraydecay77, i64 0, !dbg !12662
  %28 = load i32, i32* %add.ptr78, align 4, !dbg !12662
  %and79 = and i32 %28, 65280, !dbg !12662
  %shl80 = shl i32 %and79, 8, !dbg !12662
  %or81 = or i32 %shl76, %shl80, !dbg !12662
  %arraydecay82 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12662
  %add.ptr83 = getelementptr i32, i32* %arraydecay82, i64 0, !dbg !12662
  %29 = load i32, i32* %add.ptr83, align 4, !dbg !12662
  %and84 = and i32 %29, 16711680, !dbg !12662
  %shr85 = lshr i32 %and84, 8, !dbg !12662
  %or86 = or i32 %or81, %shr85, !dbg !12662
  %arraydecay87 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12662
  %add.ptr88 = getelementptr i32, i32* %arraydecay87, i64 0, !dbg !12662
  %30 = load i32, i32* %add.ptr88, align 4, !dbg !12662
  %and89 = and i32 %30, -16777216, !dbg !12662
  %shr90 = lshr i32 %and89, 24, !dbg !12662
  %or91 = or i32 %or86, %shr90, !dbg !12662
  br label %cond.end96, !dbg !12662

cond.false92:                                     ; preds = %cond.true69
  %arraydecay93 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12662
  %add.ptr94 = getelementptr i32, i32* %arraydecay93, i64 0, !dbg !12662
  %31 = load i32, i32* %add.ptr94, align 4, !dbg !12662
  %call95 = call i32 @__fswab32(i32 %31) #8, !dbg !12662
  br label %cond.end96, !dbg !12662

cond.end96:                                       ; preds = %cond.false92, %cond.true72
  %cond97 = phi i32 [ %or91, %cond.true72 ], [ %call95, %cond.false92 ], !dbg !12662
  %and98 = and i32 %cond97, 65535, !dbg !12662
  %32 = load i32, i32* %_v, align 4, !dbg !12662
  %and99 = and i32 %32, 65535, !dbg !12662
  %shl100 = shl i32 %and99, 16, !dbg !12662
  %or101 = or i32 %and98, %shl100, !dbg !12662
  %and102 = and i32 %or101, 255, !dbg !12662
  %shl103 = shl i32 %and102, 24, !dbg !12662
  %arraydecay104 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12662
  %add.ptr105 = getelementptr i32, i32* %arraydecay104, i64 0, !dbg !12662
  %33 = load i32, i32* %add.ptr105, align 4, !dbg !12662
  %34 = call i1 @llvm.is.constant.i32(i32 %33), !dbg !12662
  br i1 %34, label %cond.true106, label %cond.false126, !dbg !12662

cond.true106:                                     ; preds = %cond.end96
  %arraydecay107 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12662
  %add.ptr108 = getelementptr i32, i32* %arraydecay107, i64 0, !dbg !12662
  %35 = load i32, i32* %add.ptr108, align 4, !dbg !12662
  %and109 = and i32 %35, 255, !dbg !12662
  %shl110 = shl i32 %and109, 24, !dbg !12662
  %arraydecay111 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12662
  %add.ptr112 = getelementptr i32, i32* %arraydecay111, i64 0, !dbg !12662
  %36 = load i32, i32* %add.ptr112, align 4, !dbg !12662
  %and113 = and i32 %36, 65280, !dbg !12662
  %shl114 = shl i32 %and113, 8, !dbg !12662
  %or115 = or i32 %shl110, %shl114, !dbg !12662
  %arraydecay116 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12662
  %add.ptr117 = getelementptr i32, i32* %arraydecay116, i64 0, !dbg !12662
  %37 = load i32, i32* %add.ptr117, align 4, !dbg !12662
  %and118 = and i32 %37, 16711680, !dbg !12662
  %shr119 = lshr i32 %and118, 8, !dbg !12662
  %or120 = or i32 %or115, %shr119, !dbg !12662
  %arraydecay121 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12662
  %add.ptr122 = getelementptr i32, i32* %arraydecay121, i64 0, !dbg !12662
  %38 = load i32, i32* %add.ptr122, align 4, !dbg !12662
  %and123 = and i32 %38, -16777216, !dbg !12662
  %shr124 = lshr i32 %and123, 24, !dbg !12662
  %or125 = or i32 %or120, %shr124, !dbg !12662
  br label %cond.end130, !dbg !12662

cond.false126:                                    ; preds = %cond.end96
  %arraydecay127 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12662
  %add.ptr128 = getelementptr i32, i32* %arraydecay127, i64 0, !dbg !12662
  %39 = load i32, i32* %add.ptr128, align 4, !dbg !12662
  %call129 = call i32 @__fswab32(i32 %39) #8, !dbg !12662
  br label %cond.end130, !dbg !12662

cond.end130:                                      ; preds = %cond.false126, %cond.true106
  %cond131 = phi i32 [ %or125, %cond.true106 ], [ %call129, %cond.false126 ], !dbg !12662
  %and132 = and i32 %cond131, 65535, !dbg !12662
  %40 = load i32, i32* %_v, align 4, !dbg !12662
  %and133 = and i32 %40, 65535, !dbg !12662
  %shl134 = shl i32 %and133, 16, !dbg !12662
  %or135 = or i32 %and132, %shl134, !dbg !12662
  %and136 = and i32 %or135, 65280, !dbg !12662
  %shl137 = shl i32 %and136, 8, !dbg !12662
  %or138 = or i32 %shl103, %shl137, !dbg !12662
  %arraydecay139 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12662
  %add.ptr140 = getelementptr i32, i32* %arraydecay139, i64 0, !dbg !12662
  %41 = load i32, i32* %add.ptr140, align 4, !dbg !12662
  %42 = call i1 @llvm.is.constant.i32(i32 %41), !dbg !12662
  br i1 %42, label %cond.true141, label %cond.false161, !dbg !12662

cond.true141:                                     ; preds = %cond.end130
  %arraydecay142 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12662
  %add.ptr143 = getelementptr i32, i32* %arraydecay142, i64 0, !dbg !12662
  %43 = load i32, i32* %add.ptr143, align 4, !dbg !12662
  %and144 = and i32 %43, 255, !dbg !12662
  %shl145 = shl i32 %and144, 24, !dbg !12662
  %arraydecay146 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12662
  %add.ptr147 = getelementptr i32, i32* %arraydecay146, i64 0, !dbg !12662
  %44 = load i32, i32* %add.ptr147, align 4, !dbg !12662
  %and148 = and i32 %44, 65280, !dbg !12662
  %shl149 = shl i32 %and148, 8, !dbg !12662
  %or150 = or i32 %shl145, %shl149, !dbg !12662
  %arraydecay151 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12662
  %add.ptr152 = getelementptr i32, i32* %arraydecay151, i64 0, !dbg !12662
  %45 = load i32, i32* %add.ptr152, align 4, !dbg !12662
  %and153 = and i32 %45, 16711680, !dbg !12662
  %shr154 = lshr i32 %and153, 8, !dbg !12662
  %or155 = or i32 %or150, %shr154, !dbg !12662
  %arraydecay156 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12662
  %add.ptr157 = getelementptr i32, i32* %arraydecay156, i64 0, !dbg !12662
  %46 = load i32, i32* %add.ptr157, align 4, !dbg !12662
  %and158 = and i32 %46, -16777216, !dbg !12662
  %shr159 = lshr i32 %and158, 24, !dbg !12662
  %or160 = or i32 %or155, %shr159, !dbg !12662
  br label %cond.end165, !dbg !12662

cond.false161:                                    ; preds = %cond.end130
  %arraydecay162 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12662
  %add.ptr163 = getelementptr i32, i32* %arraydecay162, i64 0, !dbg !12662
  %47 = load i32, i32* %add.ptr163, align 4, !dbg !12662
  %call164 = call i32 @__fswab32(i32 %47) #8, !dbg !12662
  br label %cond.end165, !dbg !12662

cond.end165:                                      ; preds = %cond.false161, %cond.true141
  %cond166 = phi i32 [ %or160, %cond.true141 ], [ %call164, %cond.false161 ], !dbg !12662
  %and167 = and i32 %cond166, 65535, !dbg !12662
  %48 = load i32, i32* %_v, align 4, !dbg !12662
  %and168 = and i32 %48, 65535, !dbg !12662
  %shl169 = shl i32 %and168, 16, !dbg !12662
  %or170 = or i32 %and167, %shl169, !dbg !12662
  %and171 = and i32 %or170, 16711680, !dbg !12662
  %shr172 = lshr i32 %and171, 8, !dbg !12662
  %or173 = or i32 %or138, %shr172, !dbg !12662
  %arraydecay174 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12662
  %add.ptr175 = getelementptr i32, i32* %arraydecay174, i64 0, !dbg !12662
  %49 = load i32, i32* %add.ptr175, align 4, !dbg !12662
  %50 = call i1 @llvm.is.constant.i32(i32 %49), !dbg !12662
  br i1 %50, label %cond.true176, label %cond.false196, !dbg !12662

cond.true176:                                     ; preds = %cond.end165
  %arraydecay177 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12662
  %add.ptr178 = getelementptr i32, i32* %arraydecay177, i64 0, !dbg !12662
  %51 = load i32, i32* %add.ptr178, align 4, !dbg !12662
  %and179 = and i32 %51, 255, !dbg !12662
  %shl180 = shl i32 %and179, 24, !dbg !12662
  %arraydecay181 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12662
  %add.ptr182 = getelementptr i32, i32* %arraydecay181, i64 0, !dbg !12662
  %52 = load i32, i32* %add.ptr182, align 4, !dbg !12662
  %and183 = and i32 %52, 65280, !dbg !12662
  %shl184 = shl i32 %and183, 8, !dbg !12662
  %or185 = or i32 %shl180, %shl184, !dbg !12662
  %arraydecay186 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12662
  %add.ptr187 = getelementptr i32, i32* %arraydecay186, i64 0, !dbg !12662
  %53 = load i32, i32* %add.ptr187, align 4, !dbg !12662
  %and188 = and i32 %53, 16711680, !dbg !12662
  %shr189 = lshr i32 %and188, 8, !dbg !12662
  %or190 = or i32 %or185, %shr189, !dbg !12662
  %arraydecay191 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12662
  %add.ptr192 = getelementptr i32, i32* %arraydecay191, i64 0, !dbg !12662
  %54 = load i32, i32* %add.ptr192, align 4, !dbg !12662
  %and193 = and i32 %54, -16777216, !dbg !12662
  %shr194 = lshr i32 %and193, 24, !dbg !12662
  %or195 = or i32 %or190, %shr194, !dbg !12662
  br label %cond.end200, !dbg !12662

cond.false196:                                    ; preds = %cond.end165
  %arraydecay197 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12662
  %add.ptr198 = getelementptr i32, i32* %arraydecay197, i64 0, !dbg !12662
  %55 = load i32, i32* %add.ptr198, align 4, !dbg !12662
  %call199 = call i32 @__fswab32(i32 %55) #8, !dbg !12662
  br label %cond.end200, !dbg !12662

cond.end200:                                      ; preds = %cond.false196, %cond.true176
  %cond201 = phi i32 [ %or195, %cond.true176 ], [ %call199, %cond.false196 ], !dbg !12662
  %and202 = and i32 %cond201, 65535, !dbg !12662
  %56 = load i32, i32* %_v, align 4, !dbg !12662
  %and203 = and i32 %56, 65535, !dbg !12662
  %shl204 = shl i32 %and203, 16, !dbg !12662
  %or205 = or i32 %and202, %shl204, !dbg !12662
  %and206 = and i32 %or205, -16777216, !dbg !12662
  %shr207 = lshr i32 %and206, 24, !dbg !12662
  %or208 = or i32 %or173, %shr207, !dbg !12662
  br label %cond.end243, !dbg !12662

cond.false209:                                    ; preds = %cond.end63
  %arraydecay210 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12662
  %add.ptr211 = getelementptr i32, i32* %arraydecay210, i64 0, !dbg !12662
  %57 = load i32, i32* %add.ptr211, align 4, !dbg !12662
  %58 = call i1 @llvm.is.constant.i32(i32 %57), !dbg !12662
  br i1 %58, label %cond.true212, label %cond.false232, !dbg !12662

cond.true212:                                     ; preds = %cond.false209
  %arraydecay213 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12662
  %add.ptr214 = getelementptr i32, i32* %arraydecay213, i64 0, !dbg !12662
  %59 = load i32, i32* %add.ptr214, align 4, !dbg !12662
  %and215 = and i32 %59, 255, !dbg !12662
  %shl216 = shl i32 %and215, 24, !dbg !12662
  %arraydecay217 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12662
  %add.ptr218 = getelementptr i32, i32* %arraydecay217, i64 0, !dbg !12662
  %60 = load i32, i32* %add.ptr218, align 4, !dbg !12662
  %and219 = and i32 %60, 65280, !dbg !12662
  %shl220 = shl i32 %and219, 8, !dbg !12662
  %or221 = or i32 %shl216, %shl220, !dbg !12662
  %arraydecay222 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12662
  %add.ptr223 = getelementptr i32, i32* %arraydecay222, i64 0, !dbg !12662
  %61 = load i32, i32* %add.ptr223, align 4, !dbg !12662
  %and224 = and i32 %61, 16711680, !dbg !12662
  %shr225 = lshr i32 %and224, 8, !dbg !12662
  %or226 = or i32 %or221, %shr225, !dbg !12662
  %arraydecay227 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12662
  %add.ptr228 = getelementptr i32, i32* %arraydecay227, i64 0, !dbg !12662
  %62 = load i32, i32* %add.ptr228, align 4, !dbg !12662
  %and229 = and i32 %62, -16777216, !dbg !12662
  %shr230 = lshr i32 %and229, 24, !dbg !12662
  %or231 = or i32 %or226, %shr230, !dbg !12662
  br label %cond.end236, !dbg !12662

cond.false232:                                    ; preds = %cond.false209
  %arraydecay233 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12662
  %add.ptr234 = getelementptr i32, i32* %arraydecay233, i64 0, !dbg !12662
  %63 = load i32, i32* %add.ptr234, align 4, !dbg !12662
  %call235 = call i32 @__fswab32(i32 %63) #8, !dbg !12662
  br label %cond.end236, !dbg !12662

cond.end236:                                      ; preds = %cond.false232, %cond.true212
  %cond237 = phi i32 [ %or231, %cond.true212 ], [ %call235, %cond.false232 ], !dbg !12662
  %and238 = and i32 %cond237, 65535, !dbg !12662
  %64 = load i32, i32* %_v, align 4, !dbg !12662
  %and239 = and i32 %64, 65535, !dbg !12662
  %shl240 = shl i32 %and239, 16, !dbg !12662
  %or241 = or i32 %and238, %shl240, !dbg !12662
  %call242 = call i32 @__fswab32(i32 %or241) #8, !dbg !12662
  br label %cond.end243, !dbg !12662

cond.end243:                                      ; preds = %cond.end236, %cond.end200
  %cond244 = phi i32 [ %or208, %cond.end200 ], [ %call242, %cond.end236 ], !dbg !12662
  %arraydecay245 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12662
  %add.ptr246 = getelementptr i32, i32* %arraydecay245, i64 0, !dbg !12662
  store i32 %cond244, i32* %add.ptr246, align 4, !dbg !12662
  br label %do.end247, !dbg !12662

do.end247:                                        ; preds = %cond.end243
  %65 = load i8, i8* %other_vport.addr, align 1, !dbg !12665
  %tobool248 = icmp ne i8 %65, 0, !dbg !12665
  br i1 %tobool248, label %if.then249, label %if.end684, !dbg !12667

if.then249:                                       ; preds = %do.end247
  %66 = load i32, i32* %is_group_manager, align 4, !dbg !12668
  %tobool250 = icmp ne i32 %66, 0, !dbg !12668
  br i1 %tobool250, label %if.then251, label %if.else, !dbg !12671

if.then251:                                       ; preds = %if.then249
  br label %do.body252, !dbg !12672

do.body252:                                       ; preds = %if.then251
  call void @llvm.dbg.declare(metadata i32* %_v253, metadata !12674, metadata !DIExpression()), !dbg !12676
  store i32 1, i32* %_v253, align 4, !dbg !12676
  br label %do.body254, !dbg !12676

do.body254:                                       ; preds = %do.body252
  br label %do.end255, !dbg !12677

do.end255:                                        ; preds = %do.body254
  %arraydecay256 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12676
  %add.ptr257 = getelementptr i32, i32* %arraydecay256, i64 2, !dbg !12676
  %67 = load i32, i32* %add.ptr257, align 4, !dbg !12676
  %68 = call i1 @llvm.is.constant.i32(i32 %67), !dbg !12676
  br i1 %68, label %cond.true258, label %cond.false278, !dbg !12676

cond.true258:                                     ; preds = %do.end255
  %arraydecay259 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12676
  %add.ptr260 = getelementptr i32, i32* %arraydecay259, i64 2, !dbg !12676
  %69 = load i32, i32* %add.ptr260, align 4, !dbg !12676
  %and261 = and i32 %69, 255, !dbg !12676
  %shl262 = shl i32 %and261, 24, !dbg !12676
  %arraydecay263 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12676
  %add.ptr264 = getelementptr i32, i32* %arraydecay263, i64 2, !dbg !12676
  %70 = load i32, i32* %add.ptr264, align 4, !dbg !12676
  %and265 = and i32 %70, 65280, !dbg !12676
  %shl266 = shl i32 %and265, 8, !dbg !12676
  %or267 = or i32 %shl262, %shl266, !dbg !12676
  %arraydecay268 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12676
  %add.ptr269 = getelementptr i32, i32* %arraydecay268, i64 2, !dbg !12676
  %71 = load i32, i32* %add.ptr269, align 4, !dbg !12676
  %and270 = and i32 %71, 16711680, !dbg !12676
  %shr271 = lshr i32 %and270, 8, !dbg !12676
  %or272 = or i32 %or267, %shr271, !dbg !12676
  %arraydecay273 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12676
  %add.ptr274 = getelementptr i32, i32* %arraydecay273, i64 2, !dbg !12676
  %72 = load i32, i32* %add.ptr274, align 4, !dbg !12676
  %and275 = and i32 %72, -16777216, !dbg !12676
  %shr276 = lshr i32 %and275, 24, !dbg !12676
  %or277 = or i32 %or272, %shr276, !dbg !12676
  br label %cond.end282, !dbg !12676

cond.false278:                                    ; preds = %do.end255
  %arraydecay279 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12676
  %add.ptr280 = getelementptr i32, i32* %arraydecay279, i64 2, !dbg !12676
  %73 = load i32, i32* %add.ptr280, align 4, !dbg !12676
  %call281 = call i32 @__fswab32(i32 %73) #8, !dbg !12676
  br label %cond.end282, !dbg !12676

cond.end282:                                      ; preds = %cond.false278, %cond.true258
  %cond283 = phi i32 [ %or277, %cond.true258 ], [ %call281, %cond.false278 ], !dbg !12676
  %and284 = and i32 %cond283, 2147483647, !dbg !12676
  %74 = load i32, i32* %_v253, align 4, !dbg !12676
  %and285 = and i32 %74, 1, !dbg !12676
  %shl286 = shl i32 %and285, 31, !dbg !12676
  %or287 = or i32 %and284, %shl286, !dbg !12676
  %75 = call i1 @llvm.is.constant.i32(i32 %or287), !dbg !12676
  br i1 %75, label %cond.true288, label %cond.false428, !dbg !12676

cond.true288:                                     ; preds = %cond.end282
  %arraydecay289 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12676
  %add.ptr290 = getelementptr i32, i32* %arraydecay289, i64 2, !dbg !12676
  %76 = load i32, i32* %add.ptr290, align 4, !dbg !12676
  %77 = call i1 @llvm.is.constant.i32(i32 %76), !dbg !12676
  br i1 %77, label %cond.true291, label %cond.false311, !dbg !12676

cond.true291:                                     ; preds = %cond.true288
  %arraydecay292 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12676
  %add.ptr293 = getelementptr i32, i32* %arraydecay292, i64 2, !dbg !12676
  %78 = load i32, i32* %add.ptr293, align 4, !dbg !12676
  %and294 = and i32 %78, 255, !dbg !12676
  %shl295 = shl i32 %and294, 24, !dbg !12676
  %arraydecay296 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12676
  %add.ptr297 = getelementptr i32, i32* %arraydecay296, i64 2, !dbg !12676
  %79 = load i32, i32* %add.ptr297, align 4, !dbg !12676
  %and298 = and i32 %79, 65280, !dbg !12676
  %shl299 = shl i32 %and298, 8, !dbg !12676
  %or300 = or i32 %shl295, %shl299, !dbg !12676
  %arraydecay301 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12676
  %add.ptr302 = getelementptr i32, i32* %arraydecay301, i64 2, !dbg !12676
  %80 = load i32, i32* %add.ptr302, align 4, !dbg !12676
  %and303 = and i32 %80, 16711680, !dbg !12676
  %shr304 = lshr i32 %and303, 8, !dbg !12676
  %or305 = or i32 %or300, %shr304, !dbg !12676
  %arraydecay306 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12676
  %add.ptr307 = getelementptr i32, i32* %arraydecay306, i64 2, !dbg !12676
  %81 = load i32, i32* %add.ptr307, align 4, !dbg !12676
  %and308 = and i32 %81, -16777216, !dbg !12676
  %shr309 = lshr i32 %and308, 24, !dbg !12676
  %or310 = or i32 %or305, %shr309, !dbg !12676
  br label %cond.end315, !dbg !12676

cond.false311:                                    ; preds = %cond.true288
  %arraydecay312 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12676
  %add.ptr313 = getelementptr i32, i32* %arraydecay312, i64 2, !dbg !12676
  %82 = load i32, i32* %add.ptr313, align 4, !dbg !12676
  %call314 = call i32 @__fswab32(i32 %82) #8, !dbg !12676
  br label %cond.end315, !dbg !12676

cond.end315:                                      ; preds = %cond.false311, %cond.true291
  %cond316 = phi i32 [ %or310, %cond.true291 ], [ %call314, %cond.false311 ], !dbg !12676
  %and317 = and i32 %cond316, 2147483647, !dbg !12676
  %83 = load i32, i32* %_v253, align 4, !dbg !12676
  %and318 = and i32 %83, 1, !dbg !12676
  %shl319 = shl i32 %and318, 31, !dbg !12676
  %or320 = or i32 %and317, %shl319, !dbg !12676
  %and321 = and i32 %or320, 255, !dbg !12676
  %shl322 = shl i32 %and321, 24, !dbg !12676
  %arraydecay323 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12676
  %add.ptr324 = getelementptr i32, i32* %arraydecay323, i64 2, !dbg !12676
  %84 = load i32, i32* %add.ptr324, align 4, !dbg !12676
  %85 = call i1 @llvm.is.constant.i32(i32 %84), !dbg !12676
  br i1 %85, label %cond.true325, label %cond.false345, !dbg !12676

cond.true325:                                     ; preds = %cond.end315
  %arraydecay326 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12676
  %add.ptr327 = getelementptr i32, i32* %arraydecay326, i64 2, !dbg !12676
  %86 = load i32, i32* %add.ptr327, align 4, !dbg !12676
  %and328 = and i32 %86, 255, !dbg !12676
  %shl329 = shl i32 %and328, 24, !dbg !12676
  %arraydecay330 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12676
  %add.ptr331 = getelementptr i32, i32* %arraydecay330, i64 2, !dbg !12676
  %87 = load i32, i32* %add.ptr331, align 4, !dbg !12676
  %and332 = and i32 %87, 65280, !dbg !12676
  %shl333 = shl i32 %and332, 8, !dbg !12676
  %or334 = or i32 %shl329, %shl333, !dbg !12676
  %arraydecay335 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12676
  %add.ptr336 = getelementptr i32, i32* %arraydecay335, i64 2, !dbg !12676
  %88 = load i32, i32* %add.ptr336, align 4, !dbg !12676
  %and337 = and i32 %88, 16711680, !dbg !12676
  %shr338 = lshr i32 %and337, 8, !dbg !12676
  %or339 = or i32 %or334, %shr338, !dbg !12676
  %arraydecay340 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12676
  %add.ptr341 = getelementptr i32, i32* %arraydecay340, i64 2, !dbg !12676
  %89 = load i32, i32* %add.ptr341, align 4, !dbg !12676
  %and342 = and i32 %89, -16777216, !dbg !12676
  %shr343 = lshr i32 %and342, 24, !dbg !12676
  %or344 = or i32 %or339, %shr343, !dbg !12676
  br label %cond.end349, !dbg !12676

cond.false345:                                    ; preds = %cond.end315
  %arraydecay346 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12676
  %add.ptr347 = getelementptr i32, i32* %arraydecay346, i64 2, !dbg !12676
  %90 = load i32, i32* %add.ptr347, align 4, !dbg !12676
  %call348 = call i32 @__fswab32(i32 %90) #8, !dbg !12676
  br label %cond.end349, !dbg !12676

cond.end349:                                      ; preds = %cond.false345, %cond.true325
  %cond350 = phi i32 [ %or344, %cond.true325 ], [ %call348, %cond.false345 ], !dbg !12676
  %and351 = and i32 %cond350, 2147483647, !dbg !12676
  %91 = load i32, i32* %_v253, align 4, !dbg !12676
  %and352 = and i32 %91, 1, !dbg !12676
  %shl353 = shl i32 %and352, 31, !dbg !12676
  %or354 = or i32 %and351, %shl353, !dbg !12676
  %and355 = and i32 %or354, 65280, !dbg !12676
  %shl356 = shl i32 %and355, 8, !dbg !12676
  %or357 = or i32 %shl322, %shl356, !dbg !12676
  %arraydecay358 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12676
  %add.ptr359 = getelementptr i32, i32* %arraydecay358, i64 2, !dbg !12676
  %92 = load i32, i32* %add.ptr359, align 4, !dbg !12676
  %93 = call i1 @llvm.is.constant.i32(i32 %92), !dbg !12676
  br i1 %93, label %cond.true360, label %cond.false380, !dbg !12676

cond.true360:                                     ; preds = %cond.end349
  %arraydecay361 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12676
  %add.ptr362 = getelementptr i32, i32* %arraydecay361, i64 2, !dbg !12676
  %94 = load i32, i32* %add.ptr362, align 4, !dbg !12676
  %and363 = and i32 %94, 255, !dbg !12676
  %shl364 = shl i32 %and363, 24, !dbg !12676
  %arraydecay365 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12676
  %add.ptr366 = getelementptr i32, i32* %arraydecay365, i64 2, !dbg !12676
  %95 = load i32, i32* %add.ptr366, align 4, !dbg !12676
  %and367 = and i32 %95, 65280, !dbg !12676
  %shl368 = shl i32 %and367, 8, !dbg !12676
  %or369 = or i32 %shl364, %shl368, !dbg !12676
  %arraydecay370 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12676
  %add.ptr371 = getelementptr i32, i32* %arraydecay370, i64 2, !dbg !12676
  %96 = load i32, i32* %add.ptr371, align 4, !dbg !12676
  %and372 = and i32 %96, 16711680, !dbg !12676
  %shr373 = lshr i32 %and372, 8, !dbg !12676
  %or374 = or i32 %or369, %shr373, !dbg !12676
  %arraydecay375 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12676
  %add.ptr376 = getelementptr i32, i32* %arraydecay375, i64 2, !dbg !12676
  %97 = load i32, i32* %add.ptr376, align 4, !dbg !12676
  %and377 = and i32 %97, -16777216, !dbg !12676
  %shr378 = lshr i32 %and377, 24, !dbg !12676
  %or379 = or i32 %or374, %shr378, !dbg !12676
  br label %cond.end384, !dbg !12676

cond.false380:                                    ; preds = %cond.end349
  %arraydecay381 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12676
  %add.ptr382 = getelementptr i32, i32* %arraydecay381, i64 2, !dbg !12676
  %98 = load i32, i32* %add.ptr382, align 4, !dbg !12676
  %call383 = call i32 @__fswab32(i32 %98) #8, !dbg !12676
  br label %cond.end384, !dbg !12676

cond.end384:                                      ; preds = %cond.false380, %cond.true360
  %cond385 = phi i32 [ %or379, %cond.true360 ], [ %call383, %cond.false380 ], !dbg !12676
  %and386 = and i32 %cond385, 2147483647, !dbg !12676
  %99 = load i32, i32* %_v253, align 4, !dbg !12676
  %and387 = and i32 %99, 1, !dbg !12676
  %shl388 = shl i32 %and387, 31, !dbg !12676
  %or389 = or i32 %and386, %shl388, !dbg !12676
  %and390 = and i32 %or389, 16711680, !dbg !12676
  %shr391 = lshr i32 %and390, 8, !dbg !12676
  %or392 = or i32 %or357, %shr391, !dbg !12676
  %arraydecay393 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12676
  %add.ptr394 = getelementptr i32, i32* %arraydecay393, i64 2, !dbg !12676
  %100 = load i32, i32* %add.ptr394, align 4, !dbg !12676
  %101 = call i1 @llvm.is.constant.i32(i32 %100), !dbg !12676
  br i1 %101, label %cond.true395, label %cond.false415, !dbg !12676

cond.true395:                                     ; preds = %cond.end384
  %arraydecay396 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12676
  %add.ptr397 = getelementptr i32, i32* %arraydecay396, i64 2, !dbg !12676
  %102 = load i32, i32* %add.ptr397, align 4, !dbg !12676
  %and398 = and i32 %102, 255, !dbg !12676
  %shl399 = shl i32 %and398, 24, !dbg !12676
  %arraydecay400 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12676
  %add.ptr401 = getelementptr i32, i32* %arraydecay400, i64 2, !dbg !12676
  %103 = load i32, i32* %add.ptr401, align 4, !dbg !12676
  %and402 = and i32 %103, 65280, !dbg !12676
  %shl403 = shl i32 %and402, 8, !dbg !12676
  %or404 = or i32 %shl399, %shl403, !dbg !12676
  %arraydecay405 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12676
  %add.ptr406 = getelementptr i32, i32* %arraydecay405, i64 2, !dbg !12676
  %104 = load i32, i32* %add.ptr406, align 4, !dbg !12676
  %and407 = and i32 %104, 16711680, !dbg !12676
  %shr408 = lshr i32 %and407, 8, !dbg !12676
  %or409 = or i32 %or404, %shr408, !dbg !12676
  %arraydecay410 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12676
  %add.ptr411 = getelementptr i32, i32* %arraydecay410, i64 2, !dbg !12676
  %105 = load i32, i32* %add.ptr411, align 4, !dbg !12676
  %and412 = and i32 %105, -16777216, !dbg !12676
  %shr413 = lshr i32 %and412, 24, !dbg !12676
  %or414 = or i32 %or409, %shr413, !dbg !12676
  br label %cond.end419, !dbg !12676

cond.false415:                                    ; preds = %cond.end384
  %arraydecay416 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12676
  %add.ptr417 = getelementptr i32, i32* %arraydecay416, i64 2, !dbg !12676
  %106 = load i32, i32* %add.ptr417, align 4, !dbg !12676
  %call418 = call i32 @__fswab32(i32 %106) #8, !dbg !12676
  br label %cond.end419, !dbg !12676

cond.end419:                                      ; preds = %cond.false415, %cond.true395
  %cond420 = phi i32 [ %or414, %cond.true395 ], [ %call418, %cond.false415 ], !dbg !12676
  %and421 = and i32 %cond420, 2147483647, !dbg !12676
  %107 = load i32, i32* %_v253, align 4, !dbg !12676
  %and422 = and i32 %107, 1, !dbg !12676
  %shl423 = shl i32 %and422, 31, !dbg !12676
  %or424 = or i32 %and421, %shl423, !dbg !12676
  %and425 = and i32 %or424, -16777216, !dbg !12676
  %shr426 = lshr i32 %and425, 24, !dbg !12676
  %or427 = or i32 %or392, %shr426, !dbg !12676
  br label %cond.end462, !dbg !12676

cond.false428:                                    ; preds = %cond.end282
  %arraydecay429 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12676
  %add.ptr430 = getelementptr i32, i32* %arraydecay429, i64 2, !dbg !12676
  %108 = load i32, i32* %add.ptr430, align 4, !dbg !12676
  %109 = call i1 @llvm.is.constant.i32(i32 %108), !dbg !12676
  br i1 %109, label %cond.true431, label %cond.false451, !dbg !12676

cond.true431:                                     ; preds = %cond.false428
  %arraydecay432 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12676
  %add.ptr433 = getelementptr i32, i32* %arraydecay432, i64 2, !dbg !12676
  %110 = load i32, i32* %add.ptr433, align 4, !dbg !12676
  %and434 = and i32 %110, 255, !dbg !12676
  %shl435 = shl i32 %and434, 24, !dbg !12676
  %arraydecay436 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12676
  %add.ptr437 = getelementptr i32, i32* %arraydecay436, i64 2, !dbg !12676
  %111 = load i32, i32* %add.ptr437, align 4, !dbg !12676
  %and438 = and i32 %111, 65280, !dbg !12676
  %shl439 = shl i32 %and438, 8, !dbg !12676
  %or440 = or i32 %shl435, %shl439, !dbg !12676
  %arraydecay441 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12676
  %add.ptr442 = getelementptr i32, i32* %arraydecay441, i64 2, !dbg !12676
  %112 = load i32, i32* %add.ptr442, align 4, !dbg !12676
  %and443 = and i32 %112, 16711680, !dbg !12676
  %shr444 = lshr i32 %and443, 8, !dbg !12676
  %or445 = or i32 %or440, %shr444, !dbg !12676
  %arraydecay446 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12676
  %add.ptr447 = getelementptr i32, i32* %arraydecay446, i64 2, !dbg !12676
  %113 = load i32, i32* %add.ptr447, align 4, !dbg !12676
  %and448 = and i32 %113, -16777216, !dbg !12676
  %shr449 = lshr i32 %and448, 24, !dbg !12676
  %or450 = or i32 %or445, %shr449, !dbg !12676
  br label %cond.end455, !dbg !12676

cond.false451:                                    ; preds = %cond.false428
  %arraydecay452 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12676
  %add.ptr453 = getelementptr i32, i32* %arraydecay452, i64 2, !dbg !12676
  %114 = load i32, i32* %add.ptr453, align 4, !dbg !12676
  %call454 = call i32 @__fswab32(i32 %114) #8, !dbg !12676
  br label %cond.end455, !dbg !12676

cond.end455:                                      ; preds = %cond.false451, %cond.true431
  %cond456 = phi i32 [ %or450, %cond.true431 ], [ %call454, %cond.false451 ], !dbg !12676
  %and457 = and i32 %cond456, 2147483647, !dbg !12676
  %115 = load i32, i32* %_v253, align 4, !dbg !12676
  %and458 = and i32 %115, 1, !dbg !12676
  %shl459 = shl i32 %and458, 31, !dbg !12676
  %or460 = or i32 %and457, %shl459, !dbg !12676
  %call461 = call i32 @__fswab32(i32 %or460) #8, !dbg !12676
  br label %cond.end462, !dbg !12676

cond.end462:                                      ; preds = %cond.end455, %cond.end419
  %cond463 = phi i32 [ %or427, %cond.end419 ], [ %call461, %cond.end455 ], !dbg !12676
  %arraydecay464 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12676
  %add.ptr465 = getelementptr i32, i32* %arraydecay464, i64 2, !dbg !12676
  store i32 %cond463, i32* %add.ptr465, align 4, !dbg !12676
  br label %do.end466, !dbg !12676

do.end466:                                        ; preds = %cond.end462
  br label %do.body467, !dbg !12679

do.body467:                                       ; preds = %do.end466
  call void @llvm.dbg.declare(metadata i32* %_v468, metadata !12680, metadata !DIExpression()), !dbg !12682
  %116 = load i16, i16* %vf_num.addr, align 2, !dbg !12682
  %conv469 = zext i16 %116 to i32, !dbg !12682
  store i32 %conv469, i32* %_v468, align 4, !dbg !12682
  br label %do.body470, !dbg !12682

do.body470:                                       ; preds = %do.body467
  br label %do.end471, !dbg !12683

do.end471:                                        ; preds = %do.body470
  %arraydecay472 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12682
  %add.ptr473 = getelementptr i32, i32* %arraydecay472, i64 2, !dbg !12682
  %117 = load i32, i32* %add.ptr473, align 4, !dbg !12682
  %118 = call i1 @llvm.is.constant.i32(i32 %117), !dbg !12682
  br i1 %118, label %cond.true474, label %cond.false494, !dbg !12682

cond.true474:                                     ; preds = %do.end471
  %arraydecay475 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12682
  %add.ptr476 = getelementptr i32, i32* %arraydecay475, i64 2, !dbg !12682
  %119 = load i32, i32* %add.ptr476, align 4, !dbg !12682
  %and477 = and i32 %119, 255, !dbg !12682
  %shl478 = shl i32 %and477, 24, !dbg !12682
  %arraydecay479 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12682
  %add.ptr480 = getelementptr i32, i32* %arraydecay479, i64 2, !dbg !12682
  %120 = load i32, i32* %add.ptr480, align 4, !dbg !12682
  %and481 = and i32 %120, 65280, !dbg !12682
  %shl482 = shl i32 %and481, 8, !dbg !12682
  %or483 = or i32 %shl478, %shl482, !dbg !12682
  %arraydecay484 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12682
  %add.ptr485 = getelementptr i32, i32* %arraydecay484, i64 2, !dbg !12682
  %121 = load i32, i32* %add.ptr485, align 4, !dbg !12682
  %and486 = and i32 %121, 16711680, !dbg !12682
  %shr487 = lshr i32 %and486, 8, !dbg !12682
  %or488 = or i32 %or483, %shr487, !dbg !12682
  %arraydecay489 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12682
  %add.ptr490 = getelementptr i32, i32* %arraydecay489, i64 2, !dbg !12682
  %122 = load i32, i32* %add.ptr490, align 4, !dbg !12682
  %and491 = and i32 %122, -16777216, !dbg !12682
  %shr492 = lshr i32 %and491, 24, !dbg !12682
  %or493 = or i32 %or488, %shr492, !dbg !12682
  br label %cond.end498, !dbg !12682

cond.false494:                                    ; preds = %do.end471
  %arraydecay495 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12682
  %add.ptr496 = getelementptr i32, i32* %arraydecay495, i64 2, !dbg !12682
  %123 = load i32, i32* %add.ptr496, align 4, !dbg !12682
  %call497 = call i32 @__fswab32(i32 %123) #8, !dbg !12682
  br label %cond.end498, !dbg !12682

cond.end498:                                      ; preds = %cond.false494, %cond.true474
  %cond499 = phi i32 [ %or493, %cond.true474 ], [ %call497, %cond.false494 ], !dbg !12682
  %and500 = and i32 %cond499, -65536, !dbg !12682
  %124 = load i32, i32* %_v468, align 4, !dbg !12682
  %and501 = and i32 %124, 65535, !dbg !12682
  %shl502 = shl i32 %and501, 0, !dbg !12682
  %or503 = or i32 %and500, %shl502, !dbg !12682
  %125 = call i1 @llvm.is.constant.i32(i32 %or503), !dbg !12682
  br i1 %125, label %cond.true504, label %cond.false644, !dbg !12682

cond.true504:                                     ; preds = %cond.end498
  %arraydecay505 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12682
  %add.ptr506 = getelementptr i32, i32* %arraydecay505, i64 2, !dbg !12682
  %126 = load i32, i32* %add.ptr506, align 4, !dbg !12682
  %127 = call i1 @llvm.is.constant.i32(i32 %126), !dbg !12682
  br i1 %127, label %cond.true507, label %cond.false527, !dbg !12682

cond.true507:                                     ; preds = %cond.true504
  %arraydecay508 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12682
  %add.ptr509 = getelementptr i32, i32* %arraydecay508, i64 2, !dbg !12682
  %128 = load i32, i32* %add.ptr509, align 4, !dbg !12682
  %and510 = and i32 %128, 255, !dbg !12682
  %shl511 = shl i32 %and510, 24, !dbg !12682
  %arraydecay512 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12682
  %add.ptr513 = getelementptr i32, i32* %arraydecay512, i64 2, !dbg !12682
  %129 = load i32, i32* %add.ptr513, align 4, !dbg !12682
  %and514 = and i32 %129, 65280, !dbg !12682
  %shl515 = shl i32 %and514, 8, !dbg !12682
  %or516 = or i32 %shl511, %shl515, !dbg !12682
  %arraydecay517 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12682
  %add.ptr518 = getelementptr i32, i32* %arraydecay517, i64 2, !dbg !12682
  %130 = load i32, i32* %add.ptr518, align 4, !dbg !12682
  %and519 = and i32 %130, 16711680, !dbg !12682
  %shr520 = lshr i32 %and519, 8, !dbg !12682
  %or521 = or i32 %or516, %shr520, !dbg !12682
  %arraydecay522 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12682
  %add.ptr523 = getelementptr i32, i32* %arraydecay522, i64 2, !dbg !12682
  %131 = load i32, i32* %add.ptr523, align 4, !dbg !12682
  %and524 = and i32 %131, -16777216, !dbg !12682
  %shr525 = lshr i32 %and524, 24, !dbg !12682
  %or526 = or i32 %or521, %shr525, !dbg !12682
  br label %cond.end531, !dbg !12682

cond.false527:                                    ; preds = %cond.true504
  %arraydecay528 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12682
  %add.ptr529 = getelementptr i32, i32* %arraydecay528, i64 2, !dbg !12682
  %132 = load i32, i32* %add.ptr529, align 4, !dbg !12682
  %call530 = call i32 @__fswab32(i32 %132) #8, !dbg !12682
  br label %cond.end531, !dbg !12682

cond.end531:                                      ; preds = %cond.false527, %cond.true507
  %cond532 = phi i32 [ %or526, %cond.true507 ], [ %call530, %cond.false527 ], !dbg !12682
  %and533 = and i32 %cond532, -65536, !dbg !12682
  %133 = load i32, i32* %_v468, align 4, !dbg !12682
  %and534 = and i32 %133, 65535, !dbg !12682
  %shl535 = shl i32 %and534, 0, !dbg !12682
  %or536 = or i32 %and533, %shl535, !dbg !12682
  %and537 = and i32 %or536, 255, !dbg !12682
  %shl538 = shl i32 %and537, 24, !dbg !12682
  %arraydecay539 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12682
  %add.ptr540 = getelementptr i32, i32* %arraydecay539, i64 2, !dbg !12682
  %134 = load i32, i32* %add.ptr540, align 4, !dbg !12682
  %135 = call i1 @llvm.is.constant.i32(i32 %134), !dbg !12682
  br i1 %135, label %cond.true541, label %cond.false561, !dbg !12682

cond.true541:                                     ; preds = %cond.end531
  %arraydecay542 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12682
  %add.ptr543 = getelementptr i32, i32* %arraydecay542, i64 2, !dbg !12682
  %136 = load i32, i32* %add.ptr543, align 4, !dbg !12682
  %and544 = and i32 %136, 255, !dbg !12682
  %shl545 = shl i32 %and544, 24, !dbg !12682
  %arraydecay546 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12682
  %add.ptr547 = getelementptr i32, i32* %arraydecay546, i64 2, !dbg !12682
  %137 = load i32, i32* %add.ptr547, align 4, !dbg !12682
  %and548 = and i32 %137, 65280, !dbg !12682
  %shl549 = shl i32 %and548, 8, !dbg !12682
  %or550 = or i32 %shl545, %shl549, !dbg !12682
  %arraydecay551 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12682
  %add.ptr552 = getelementptr i32, i32* %arraydecay551, i64 2, !dbg !12682
  %138 = load i32, i32* %add.ptr552, align 4, !dbg !12682
  %and553 = and i32 %138, 16711680, !dbg !12682
  %shr554 = lshr i32 %and553, 8, !dbg !12682
  %or555 = or i32 %or550, %shr554, !dbg !12682
  %arraydecay556 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12682
  %add.ptr557 = getelementptr i32, i32* %arraydecay556, i64 2, !dbg !12682
  %139 = load i32, i32* %add.ptr557, align 4, !dbg !12682
  %and558 = and i32 %139, -16777216, !dbg !12682
  %shr559 = lshr i32 %and558, 24, !dbg !12682
  %or560 = or i32 %or555, %shr559, !dbg !12682
  br label %cond.end565, !dbg !12682

cond.false561:                                    ; preds = %cond.end531
  %arraydecay562 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12682
  %add.ptr563 = getelementptr i32, i32* %arraydecay562, i64 2, !dbg !12682
  %140 = load i32, i32* %add.ptr563, align 4, !dbg !12682
  %call564 = call i32 @__fswab32(i32 %140) #8, !dbg !12682
  br label %cond.end565, !dbg !12682

cond.end565:                                      ; preds = %cond.false561, %cond.true541
  %cond566 = phi i32 [ %or560, %cond.true541 ], [ %call564, %cond.false561 ], !dbg !12682
  %and567 = and i32 %cond566, -65536, !dbg !12682
  %141 = load i32, i32* %_v468, align 4, !dbg !12682
  %and568 = and i32 %141, 65535, !dbg !12682
  %shl569 = shl i32 %and568, 0, !dbg !12682
  %or570 = or i32 %and567, %shl569, !dbg !12682
  %and571 = and i32 %or570, 65280, !dbg !12682
  %shl572 = shl i32 %and571, 8, !dbg !12682
  %or573 = or i32 %shl538, %shl572, !dbg !12682
  %arraydecay574 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12682
  %add.ptr575 = getelementptr i32, i32* %arraydecay574, i64 2, !dbg !12682
  %142 = load i32, i32* %add.ptr575, align 4, !dbg !12682
  %143 = call i1 @llvm.is.constant.i32(i32 %142), !dbg !12682
  br i1 %143, label %cond.true576, label %cond.false596, !dbg !12682

cond.true576:                                     ; preds = %cond.end565
  %arraydecay577 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12682
  %add.ptr578 = getelementptr i32, i32* %arraydecay577, i64 2, !dbg !12682
  %144 = load i32, i32* %add.ptr578, align 4, !dbg !12682
  %and579 = and i32 %144, 255, !dbg !12682
  %shl580 = shl i32 %and579, 24, !dbg !12682
  %arraydecay581 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12682
  %add.ptr582 = getelementptr i32, i32* %arraydecay581, i64 2, !dbg !12682
  %145 = load i32, i32* %add.ptr582, align 4, !dbg !12682
  %and583 = and i32 %145, 65280, !dbg !12682
  %shl584 = shl i32 %and583, 8, !dbg !12682
  %or585 = or i32 %shl580, %shl584, !dbg !12682
  %arraydecay586 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12682
  %add.ptr587 = getelementptr i32, i32* %arraydecay586, i64 2, !dbg !12682
  %146 = load i32, i32* %add.ptr587, align 4, !dbg !12682
  %and588 = and i32 %146, 16711680, !dbg !12682
  %shr589 = lshr i32 %and588, 8, !dbg !12682
  %or590 = or i32 %or585, %shr589, !dbg !12682
  %arraydecay591 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12682
  %add.ptr592 = getelementptr i32, i32* %arraydecay591, i64 2, !dbg !12682
  %147 = load i32, i32* %add.ptr592, align 4, !dbg !12682
  %and593 = and i32 %147, -16777216, !dbg !12682
  %shr594 = lshr i32 %and593, 24, !dbg !12682
  %or595 = or i32 %or590, %shr594, !dbg !12682
  br label %cond.end600, !dbg !12682

cond.false596:                                    ; preds = %cond.end565
  %arraydecay597 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12682
  %add.ptr598 = getelementptr i32, i32* %arraydecay597, i64 2, !dbg !12682
  %148 = load i32, i32* %add.ptr598, align 4, !dbg !12682
  %call599 = call i32 @__fswab32(i32 %148) #8, !dbg !12682
  br label %cond.end600, !dbg !12682

cond.end600:                                      ; preds = %cond.false596, %cond.true576
  %cond601 = phi i32 [ %or595, %cond.true576 ], [ %call599, %cond.false596 ], !dbg !12682
  %and602 = and i32 %cond601, -65536, !dbg !12682
  %149 = load i32, i32* %_v468, align 4, !dbg !12682
  %and603 = and i32 %149, 65535, !dbg !12682
  %shl604 = shl i32 %and603, 0, !dbg !12682
  %or605 = or i32 %and602, %shl604, !dbg !12682
  %and606 = and i32 %or605, 16711680, !dbg !12682
  %shr607 = lshr i32 %and606, 8, !dbg !12682
  %or608 = or i32 %or573, %shr607, !dbg !12682
  %arraydecay609 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12682
  %add.ptr610 = getelementptr i32, i32* %arraydecay609, i64 2, !dbg !12682
  %150 = load i32, i32* %add.ptr610, align 4, !dbg !12682
  %151 = call i1 @llvm.is.constant.i32(i32 %150), !dbg !12682
  br i1 %151, label %cond.true611, label %cond.false631, !dbg !12682

cond.true611:                                     ; preds = %cond.end600
  %arraydecay612 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12682
  %add.ptr613 = getelementptr i32, i32* %arraydecay612, i64 2, !dbg !12682
  %152 = load i32, i32* %add.ptr613, align 4, !dbg !12682
  %and614 = and i32 %152, 255, !dbg !12682
  %shl615 = shl i32 %and614, 24, !dbg !12682
  %arraydecay616 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12682
  %add.ptr617 = getelementptr i32, i32* %arraydecay616, i64 2, !dbg !12682
  %153 = load i32, i32* %add.ptr617, align 4, !dbg !12682
  %and618 = and i32 %153, 65280, !dbg !12682
  %shl619 = shl i32 %and618, 8, !dbg !12682
  %or620 = or i32 %shl615, %shl619, !dbg !12682
  %arraydecay621 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12682
  %add.ptr622 = getelementptr i32, i32* %arraydecay621, i64 2, !dbg !12682
  %154 = load i32, i32* %add.ptr622, align 4, !dbg !12682
  %and623 = and i32 %154, 16711680, !dbg !12682
  %shr624 = lshr i32 %and623, 8, !dbg !12682
  %or625 = or i32 %or620, %shr624, !dbg !12682
  %arraydecay626 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12682
  %add.ptr627 = getelementptr i32, i32* %arraydecay626, i64 2, !dbg !12682
  %155 = load i32, i32* %add.ptr627, align 4, !dbg !12682
  %and628 = and i32 %155, -16777216, !dbg !12682
  %shr629 = lshr i32 %and628, 24, !dbg !12682
  %or630 = or i32 %or625, %shr629, !dbg !12682
  br label %cond.end635, !dbg !12682

cond.false631:                                    ; preds = %cond.end600
  %arraydecay632 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12682
  %add.ptr633 = getelementptr i32, i32* %arraydecay632, i64 2, !dbg !12682
  %156 = load i32, i32* %add.ptr633, align 4, !dbg !12682
  %call634 = call i32 @__fswab32(i32 %156) #8, !dbg !12682
  br label %cond.end635, !dbg !12682

cond.end635:                                      ; preds = %cond.false631, %cond.true611
  %cond636 = phi i32 [ %or630, %cond.true611 ], [ %call634, %cond.false631 ], !dbg !12682
  %and637 = and i32 %cond636, -65536, !dbg !12682
  %157 = load i32, i32* %_v468, align 4, !dbg !12682
  %and638 = and i32 %157, 65535, !dbg !12682
  %shl639 = shl i32 %and638, 0, !dbg !12682
  %or640 = or i32 %and637, %shl639, !dbg !12682
  %and641 = and i32 %or640, -16777216, !dbg !12682
  %shr642 = lshr i32 %and641, 24, !dbg !12682
  %or643 = or i32 %or608, %shr642, !dbg !12682
  br label %cond.end678, !dbg !12682

cond.false644:                                    ; preds = %cond.end498
  %arraydecay645 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12682
  %add.ptr646 = getelementptr i32, i32* %arraydecay645, i64 2, !dbg !12682
  %158 = load i32, i32* %add.ptr646, align 4, !dbg !12682
  %159 = call i1 @llvm.is.constant.i32(i32 %158), !dbg !12682
  br i1 %159, label %cond.true647, label %cond.false667, !dbg !12682

cond.true647:                                     ; preds = %cond.false644
  %arraydecay648 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12682
  %add.ptr649 = getelementptr i32, i32* %arraydecay648, i64 2, !dbg !12682
  %160 = load i32, i32* %add.ptr649, align 4, !dbg !12682
  %and650 = and i32 %160, 255, !dbg !12682
  %shl651 = shl i32 %and650, 24, !dbg !12682
  %arraydecay652 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12682
  %add.ptr653 = getelementptr i32, i32* %arraydecay652, i64 2, !dbg !12682
  %161 = load i32, i32* %add.ptr653, align 4, !dbg !12682
  %and654 = and i32 %161, 65280, !dbg !12682
  %shl655 = shl i32 %and654, 8, !dbg !12682
  %or656 = or i32 %shl651, %shl655, !dbg !12682
  %arraydecay657 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12682
  %add.ptr658 = getelementptr i32, i32* %arraydecay657, i64 2, !dbg !12682
  %162 = load i32, i32* %add.ptr658, align 4, !dbg !12682
  %and659 = and i32 %162, 16711680, !dbg !12682
  %shr660 = lshr i32 %and659, 8, !dbg !12682
  %or661 = or i32 %or656, %shr660, !dbg !12682
  %arraydecay662 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12682
  %add.ptr663 = getelementptr i32, i32* %arraydecay662, i64 2, !dbg !12682
  %163 = load i32, i32* %add.ptr663, align 4, !dbg !12682
  %and664 = and i32 %163, -16777216, !dbg !12682
  %shr665 = lshr i32 %and664, 24, !dbg !12682
  %or666 = or i32 %or661, %shr665, !dbg !12682
  br label %cond.end671, !dbg !12682

cond.false667:                                    ; preds = %cond.false644
  %arraydecay668 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12682
  %add.ptr669 = getelementptr i32, i32* %arraydecay668, i64 2, !dbg !12682
  %164 = load i32, i32* %add.ptr669, align 4, !dbg !12682
  %call670 = call i32 @__fswab32(i32 %164) #8, !dbg !12682
  br label %cond.end671, !dbg !12682

cond.end671:                                      ; preds = %cond.false667, %cond.true647
  %cond672 = phi i32 [ %or666, %cond.true647 ], [ %call670, %cond.false667 ], !dbg !12682
  %and673 = and i32 %cond672, -65536, !dbg !12682
  %165 = load i32, i32* %_v468, align 4, !dbg !12682
  %and674 = and i32 %165, 65535, !dbg !12682
  %shl675 = shl i32 %and674, 0, !dbg !12682
  %or676 = or i32 %and673, %shl675, !dbg !12682
  %call677 = call i32 @__fswab32(i32 %or676) #8, !dbg !12682
  br label %cond.end678, !dbg !12682

cond.end678:                                      ; preds = %cond.end671, %cond.end635
  %cond679 = phi i32 [ %or643, %cond.end635 ], [ %call677, %cond.end671 ], !dbg !12682
  %arraydecay680 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12682
  %add.ptr681 = getelementptr i32, i32* %arraydecay680, i64 2, !dbg !12682
  store i32 %cond679, i32* %add.ptr681, align 4, !dbg !12682
  br label %do.end682, !dbg !12682

do.end682:                                        ; preds = %cond.end678
  br label %if.end683, !dbg !12685

if.else:                                          ; preds = %if.then249
  store i32 -1, i32* %err, align 4, !dbg !12686
  br label %ex, !dbg !12688

if.end683:                                        ; preds = %do.end682
  br label %if.end684, !dbg !12689

if.end684:                                        ; preds = %if.end683, %do.end247
  %166 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !12690
  %caps685 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %166, i32 0, i32 9, !dbg !12690
  %hca_cur686 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps685, i32 0, i32 0, !dbg !12690
  %arrayidx687 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur686, i64 0, i64 0, !dbg !12690
  %arraydecay688 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx687, i64 0, i64 0, !dbg !12690
  %add.ptr689 = getelementptr i32, i32* %arraydecay688, i64 13, !dbg !12690
  %167 = load i32, i32* %add.ptr689, align 4, !dbg !12690
  %168 = call i1 @llvm.is.constant.i32(i32 %167), !dbg !12690
  br i1 %168, label %cond.true690, label %cond.false722, !dbg !12690

cond.true690:                                     ; preds = %if.end684
  %169 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !12690
  %caps691 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %169, i32 0, i32 9, !dbg !12690
  %hca_cur692 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps691, i32 0, i32 0, !dbg !12690
  %arrayidx693 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur692, i64 0, i64 0, !dbg !12690
  %arraydecay694 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx693, i64 0, i64 0, !dbg !12690
  %add.ptr695 = getelementptr i32, i32* %arraydecay694, i64 13, !dbg !12690
  %170 = load i32, i32* %add.ptr695, align 4, !dbg !12690
  %and696 = and i32 %170, 255, !dbg !12690
  %shl697 = shl i32 %and696, 24, !dbg !12690
  %171 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !12690
  %caps698 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %171, i32 0, i32 9, !dbg !12690
  %hca_cur699 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps698, i32 0, i32 0, !dbg !12690
  %arrayidx700 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur699, i64 0, i64 0, !dbg !12690
  %arraydecay701 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx700, i64 0, i64 0, !dbg !12690
  %add.ptr702 = getelementptr i32, i32* %arraydecay701, i64 13, !dbg !12690
  %172 = load i32, i32* %add.ptr702, align 4, !dbg !12690
  %and703 = and i32 %172, 65280, !dbg !12690
  %shl704 = shl i32 %and703, 8, !dbg !12690
  %or705 = or i32 %shl697, %shl704, !dbg !12690
  %173 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !12690
  %caps706 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %173, i32 0, i32 9, !dbg !12690
  %hca_cur707 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps706, i32 0, i32 0, !dbg !12690
  %arrayidx708 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur707, i64 0, i64 0, !dbg !12690
  %arraydecay709 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx708, i64 0, i64 0, !dbg !12690
  %add.ptr710 = getelementptr i32, i32* %arraydecay709, i64 13, !dbg !12690
  %174 = load i32, i32* %add.ptr710, align 4, !dbg !12690
  %and711 = and i32 %174, 16711680, !dbg !12690
  %shr712 = lshr i32 %and711, 8, !dbg !12690
  %or713 = or i32 %or705, %shr712, !dbg !12690
  %175 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !12690
  %caps714 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %175, i32 0, i32 9, !dbg !12690
  %hca_cur715 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps714, i32 0, i32 0, !dbg !12690
  %arrayidx716 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur715, i64 0, i64 0, !dbg !12690
  %arraydecay717 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx716, i64 0, i64 0, !dbg !12690
  %add.ptr718 = getelementptr i32, i32* %arraydecay717, i64 13, !dbg !12690
  %176 = load i32, i32* %add.ptr718, align 4, !dbg !12690
  %and719 = and i32 %176, -16777216, !dbg !12690
  %shr720 = lshr i32 %and719, 24, !dbg !12690
  %or721 = or i32 %or713, %shr720, !dbg !12690
  br label %cond.end729, !dbg !12690

cond.false722:                                    ; preds = %if.end684
  %177 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !12690
  %caps723 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %177, i32 0, i32 9, !dbg !12690
  %hca_cur724 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps723, i32 0, i32 0, !dbg !12690
  %arrayidx725 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur724, i64 0, i64 0, !dbg !12690
  %arraydecay726 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx725, i64 0, i64 0, !dbg !12690
  %add.ptr727 = getelementptr i32, i32* %arraydecay726, i64 13, !dbg !12690
  %178 = load i32, i32* %add.ptr727, align 4, !dbg !12690
  %call728 = call i32 @__fswab32(i32 %178) #8, !dbg !12690
  br label %cond.end729, !dbg !12690

cond.end729:                                      ; preds = %cond.false722, %cond.true690
  %cond730 = phi i32 [ %or721, %cond.true690 ], [ %call728, %cond.false722 ], !dbg !12690
  %shr731 = lshr i32 %cond730, 0, !dbg !12690
  %and732 = and i32 %shr731, 255, !dbg !12690
  %cmp = icmp eq i32 %and732, 2, !dbg !12692
  br i1 %cmp, label %if.then734, label %if.end951, !dbg !12693

if.then734:                                       ; preds = %cond.end729
  br label %do.body735, !dbg !12694

do.body735:                                       ; preds = %if.then734
  call void @llvm.dbg.declare(metadata i32* %_v736, metadata !12695, metadata !DIExpression()), !dbg !12697
  %179 = load i8, i8* %port_num.addr, align 1, !dbg !12697
  %conv737 = zext i8 %179 to i32, !dbg !12697
  store i32 %conv737, i32* %_v736, align 4, !dbg !12697
  br label %do.body738, !dbg !12697

do.body738:                                       ; preds = %do.body735
  br label %do.end739, !dbg !12698

do.end739:                                        ; preds = %do.body738
  %arraydecay740 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12697
  %add.ptr741 = getelementptr i32, i32* %arraydecay740, i64 2, !dbg !12697
  %180 = load i32, i32* %add.ptr741, align 4, !dbg !12697
  %181 = call i1 @llvm.is.constant.i32(i32 %180), !dbg !12697
  br i1 %181, label %cond.true742, label %cond.false762, !dbg !12697

cond.true742:                                     ; preds = %do.end739
  %arraydecay743 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12697
  %add.ptr744 = getelementptr i32, i32* %arraydecay743, i64 2, !dbg !12697
  %182 = load i32, i32* %add.ptr744, align 4, !dbg !12697
  %and745 = and i32 %182, 255, !dbg !12697
  %shl746 = shl i32 %and745, 24, !dbg !12697
  %arraydecay747 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12697
  %add.ptr748 = getelementptr i32, i32* %arraydecay747, i64 2, !dbg !12697
  %183 = load i32, i32* %add.ptr748, align 4, !dbg !12697
  %and749 = and i32 %183, 65280, !dbg !12697
  %shl750 = shl i32 %and749, 8, !dbg !12697
  %or751 = or i32 %shl746, %shl750, !dbg !12697
  %arraydecay752 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12697
  %add.ptr753 = getelementptr i32, i32* %arraydecay752, i64 2, !dbg !12697
  %184 = load i32, i32* %add.ptr753, align 4, !dbg !12697
  %and754 = and i32 %184, 16711680, !dbg !12697
  %shr755 = lshr i32 %and754, 8, !dbg !12697
  %or756 = or i32 %or751, %shr755, !dbg !12697
  %arraydecay757 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12697
  %add.ptr758 = getelementptr i32, i32* %arraydecay757, i64 2, !dbg !12697
  %185 = load i32, i32* %add.ptr758, align 4, !dbg !12697
  %and759 = and i32 %185, -16777216, !dbg !12697
  %shr760 = lshr i32 %and759, 24, !dbg !12697
  %or761 = or i32 %or756, %shr760, !dbg !12697
  br label %cond.end766, !dbg !12697

cond.false762:                                    ; preds = %do.end739
  %arraydecay763 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12697
  %add.ptr764 = getelementptr i32, i32* %arraydecay763, i64 2, !dbg !12697
  %186 = load i32, i32* %add.ptr764, align 4, !dbg !12697
  %call765 = call i32 @__fswab32(i32 %186) #8, !dbg !12697
  br label %cond.end766, !dbg !12697

cond.end766:                                      ; preds = %cond.false762, %cond.true742
  %cond767 = phi i32 [ %or761, %cond.true742 ], [ %call765, %cond.false762 ], !dbg !12697
  %and768 = and i32 %cond767, -983041, !dbg !12697
  %187 = load i32, i32* %_v736, align 4, !dbg !12697
  %and769 = and i32 %187, 15, !dbg !12697
  %shl770 = shl i32 %and769, 16, !dbg !12697
  %or771 = or i32 %and768, %shl770, !dbg !12697
  %188 = call i1 @llvm.is.constant.i32(i32 %or771), !dbg !12697
  br i1 %188, label %cond.true772, label %cond.false912, !dbg !12697

cond.true772:                                     ; preds = %cond.end766
  %arraydecay773 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12697
  %add.ptr774 = getelementptr i32, i32* %arraydecay773, i64 2, !dbg !12697
  %189 = load i32, i32* %add.ptr774, align 4, !dbg !12697
  %190 = call i1 @llvm.is.constant.i32(i32 %189), !dbg !12697
  br i1 %190, label %cond.true775, label %cond.false795, !dbg !12697

cond.true775:                                     ; preds = %cond.true772
  %arraydecay776 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12697
  %add.ptr777 = getelementptr i32, i32* %arraydecay776, i64 2, !dbg !12697
  %191 = load i32, i32* %add.ptr777, align 4, !dbg !12697
  %and778 = and i32 %191, 255, !dbg !12697
  %shl779 = shl i32 %and778, 24, !dbg !12697
  %arraydecay780 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12697
  %add.ptr781 = getelementptr i32, i32* %arraydecay780, i64 2, !dbg !12697
  %192 = load i32, i32* %add.ptr781, align 4, !dbg !12697
  %and782 = and i32 %192, 65280, !dbg !12697
  %shl783 = shl i32 %and782, 8, !dbg !12697
  %or784 = or i32 %shl779, %shl783, !dbg !12697
  %arraydecay785 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12697
  %add.ptr786 = getelementptr i32, i32* %arraydecay785, i64 2, !dbg !12697
  %193 = load i32, i32* %add.ptr786, align 4, !dbg !12697
  %and787 = and i32 %193, 16711680, !dbg !12697
  %shr788 = lshr i32 %and787, 8, !dbg !12697
  %or789 = or i32 %or784, %shr788, !dbg !12697
  %arraydecay790 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12697
  %add.ptr791 = getelementptr i32, i32* %arraydecay790, i64 2, !dbg !12697
  %194 = load i32, i32* %add.ptr791, align 4, !dbg !12697
  %and792 = and i32 %194, -16777216, !dbg !12697
  %shr793 = lshr i32 %and792, 24, !dbg !12697
  %or794 = or i32 %or789, %shr793, !dbg !12697
  br label %cond.end799, !dbg !12697

cond.false795:                                    ; preds = %cond.true772
  %arraydecay796 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12697
  %add.ptr797 = getelementptr i32, i32* %arraydecay796, i64 2, !dbg !12697
  %195 = load i32, i32* %add.ptr797, align 4, !dbg !12697
  %call798 = call i32 @__fswab32(i32 %195) #8, !dbg !12697
  br label %cond.end799, !dbg !12697

cond.end799:                                      ; preds = %cond.false795, %cond.true775
  %cond800 = phi i32 [ %or794, %cond.true775 ], [ %call798, %cond.false795 ], !dbg !12697
  %and801 = and i32 %cond800, -983041, !dbg !12697
  %196 = load i32, i32* %_v736, align 4, !dbg !12697
  %and802 = and i32 %196, 15, !dbg !12697
  %shl803 = shl i32 %and802, 16, !dbg !12697
  %or804 = or i32 %and801, %shl803, !dbg !12697
  %and805 = and i32 %or804, 255, !dbg !12697
  %shl806 = shl i32 %and805, 24, !dbg !12697
  %arraydecay807 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12697
  %add.ptr808 = getelementptr i32, i32* %arraydecay807, i64 2, !dbg !12697
  %197 = load i32, i32* %add.ptr808, align 4, !dbg !12697
  %198 = call i1 @llvm.is.constant.i32(i32 %197), !dbg !12697
  br i1 %198, label %cond.true809, label %cond.false829, !dbg !12697

cond.true809:                                     ; preds = %cond.end799
  %arraydecay810 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12697
  %add.ptr811 = getelementptr i32, i32* %arraydecay810, i64 2, !dbg !12697
  %199 = load i32, i32* %add.ptr811, align 4, !dbg !12697
  %and812 = and i32 %199, 255, !dbg !12697
  %shl813 = shl i32 %and812, 24, !dbg !12697
  %arraydecay814 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12697
  %add.ptr815 = getelementptr i32, i32* %arraydecay814, i64 2, !dbg !12697
  %200 = load i32, i32* %add.ptr815, align 4, !dbg !12697
  %and816 = and i32 %200, 65280, !dbg !12697
  %shl817 = shl i32 %and816, 8, !dbg !12697
  %or818 = or i32 %shl813, %shl817, !dbg !12697
  %arraydecay819 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12697
  %add.ptr820 = getelementptr i32, i32* %arraydecay819, i64 2, !dbg !12697
  %201 = load i32, i32* %add.ptr820, align 4, !dbg !12697
  %and821 = and i32 %201, 16711680, !dbg !12697
  %shr822 = lshr i32 %and821, 8, !dbg !12697
  %or823 = or i32 %or818, %shr822, !dbg !12697
  %arraydecay824 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12697
  %add.ptr825 = getelementptr i32, i32* %arraydecay824, i64 2, !dbg !12697
  %202 = load i32, i32* %add.ptr825, align 4, !dbg !12697
  %and826 = and i32 %202, -16777216, !dbg !12697
  %shr827 = lshr i32 %and826, 24, !dbg !12697
  %or828 = or i32 %or823, %shr827, !dbg !12697
  br label %cond.end833, !dbg !12697

cond.false829:                                    ; preds = %cond.end799
  %arraydecay830 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12697
  %add.ptr831 = getelementptr i32, i32* %arraydecay830, i64 2, !dbg !12697
  %203 = load i32, i32* %add.ptr831, align 4, !dbg !12697
  %call832 = call i32 @__fswab32(i32 %203) #8, !dbg !12697
  br label %cond.end833, !dbg !12697

cond.end833:                                      ; preds = %cond.false829, %cond.true809
  %cond834 = phi i32 [ %or828, %cond.true809 ], [ %call832, %cond.false829 ], !dbg !12697
  %and835 = and i32 %cond834, -983041, !dbg !12697
  %204 = load i32, i32* %_v736, align 4, !dbg !12697
  %and836 = and i32 %204, 15, !dbg !12697
  %shl837 = shl i32 %and836, 16, !dbg !12697
  %or838 = or i32 %and835, %shl837, !dbg !12697
  %and839 = and i32 %or838, 65280, !dbg !12697
  %shl840 = shl i32 %and839, 8, !dbg !12697
  %or841 = or i32 %shl806, %shl840, !dbg !12697
  %arraydecay842 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12697
  %add.ptr843 = getelementptr i32, i32* %arraydecay842, i64 2, !dbg !12697
  %205 = load i32, i32* %add.ptr843, align 4, !dbg !12697
  %206 = call i1 @llvm.is.constant.i32(i32 %205), !dbg !12697
  br i1 %206, label %cond.true844, label %cond.false864, !dbg !12697

cond.true844:                                     ; preds = %cond.end833
  %arraydecay845 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12697
  %add.ptr846 = getelementptr i32, i32* %arraydecay845, i64 2, !dbg !12697
  %207 = load i32, i32* %add.ptr846, align 4, !dbg !12697
  %and847 = and i32 %207, 255, !dbg !12697
  %shl848 = shl i32 %and847, 24, !dbg !12697
  %arraydecay849 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12697
  %add.ptr850 = getelementptr i32, i32* %arraydecay849, i64 2, !dbg !12697
  %208 = load i32, i32* %add.ptr850, align 4, !dbg !12697
  %and851 = and i32 %208, 65280, !dbg !12697
  %shl852 = shl i32 %and851, 8, !dbg !12697
  %or853 = or i32 %shl848, %shl852, !dbg !12697
  %arraydecay854 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12697
  %add.ptr855 = getelementptr i32, i32* %arraydecay854, i64 2, !dbg !12697
  %209 = load i32, i32* %add.ptr855, align 4, !dbg !12697
  %and856 = and i32 %209, 16711680, !dbg !12697
  %shr857 = lshr i32 %and856, 8, !dbg !12697
  %or858 = or i32 %or853, %shr857, !dbg !12697
  %arraydecay859 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12697
  %add.ptr860 = getelementptr i32, i32* %arraydecay859, i64 2, !dbg !12697
  %210 = load i32, i32* %add.ptr860, align 4, !dbg !12697
  %and861 = and i32 %210, -16777216, !dbg !12697
  %shr862 = lshr i32 %and861, 24, !dbg !12697
  %or863 = or i32 %or858, %shr862, !dbg !12697
  br label %cond.end868, !dbg !12697

cond.false864:                                    ; preds = %cond.end833
  %arraydecay865 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12697
  %add.ptr866 = getelementptr i32, i32* %arraydecay865, i64 2, !dbg !12697
  %211 = load i32, i32* %add.ptr866, align 4, !dbg !12697
  %call867 = call i32 @__fswab32(i32 %211) #8, !dbg !12697
  br label %cond.end868, !dbg !12697

cond.end868:                                      ; preds = %cond.false864, %cond.true844
  %cond869 = phi i32 [ %or863, %cond.true844 ], [ %call867, %cond.false864 ], !dbg !12697
  %and870 = and i32 %cond869, -983041, !dbg !12697
  %212 = load i32, i32* %_v736, align 4, !dbg !12697
  %and871 = and i32 %212, 15, !dbg !12697
  %shl872 = shl i32 %and871, 16, !dbg !12697
  %or873 = or i32 %and870, %shl872, !dbg !12697
  %and874 = and i32 %or873, 16711680, !dbg !12697
  %shr875 = lshr i32 %and874, 8, !dbg !12697
  %or876 = or i32 %or841, %shr875, !dbg !12697
  %arraydecay877 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12697
  %add.ptr878 = getelementptr i32, i32* %arraydecay877, i64 2, !dbg !12697
  %213 = load i32, i32* %add.ptr878, align 4, !dbg !12697
  %214 = call i1 @llvm.is.constant.i32(i32 %213), !dbg !12697
  br i1 %214, label %cond.true879, label %cond.false899, !dbg !12697

cond.true879:                                     ; preds = %cond.end868
  %arraydecay880 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12697
  %add.ptr881 = getelementptr i32, i32* %arraydecay880, i64 2, !dbg !12697
  %215 = load i32, i32* %add.ptr881, align 4, !dbg !12697
  %and882 = and i32 %215, 255, !dbg !12697
  %shl883 = shl i32 %and882, 24, !dbg !12697
  %arraydecay884 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12697
  %add.ptr885 = getelementptr i32, i32* %arraydecay884, i64 2, !dbg !12697
  %216 = load i32, i32* %add.ptr885, align 4, !dbg !12697
  %and886 = and i32 %216, 65280, !dbg !12697
  %shl887 = shl i32 %and886, 8, !dbg !12697
  %or888 = or i32 %shl883, %shl887, !dbg !12697
  %arraydecay889 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12697
  %add.ptr890 = getelementptr i32, i32* %arraydecay889, i64 2, !dbg !12697
  %217 = load i32, i32* %add.ptr890, align 4, !dbg !12697
  %and891 = and i32 %217, 16711680, !dbg !12697
  %shr892 = lshr i32 %and891, 8, !dbg !12697
  %or893 = or i32 %or888, %shr892, !dbg !12697
  %arraydecay894 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12697
  %add.ptr895 = getelementptr i32, i32* %arraydecay894, i64 2, !dbg !12697
  %218 = load i32, i32* %add.ptr895, align 4, !dbg !12697
  %and896 = and i32 %218, -16777216, !dbg !12697
  %shr897 = lshr i32 %and896, 24, !dbg !12697
  %or898 = or i32 %or893, %shr897, !dbg !12697
  br label %cond.end903, !dbg !12697

cond.false899:                                    ; preds = %cond.end868
  %arraydecay900 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12697
  %add.ptr901 = getelementptr i32, i32* %arraydecay900, i64 2, !dbg !12697
  %219 = load i32, i32* %add.ptr901, align 4, !dbg !12697
  %call902 = call i32 @__fswab32(i32 %219) #8, !dbg !12697
  br label %cond.end903, !dbg !12697

cond.end903:                                      ; preds = %cond.false899, %cond.true879
  %cond904 = phi i32 [ %or898, %cond.true879 ], [ %call902, %cond.false899 ], !dbg !12697
  %and905 = and i32 %cond904, -983041, !dbg !12697
  %220 = load i32, i32* %_v736, align 4, !dbg !12697
  %and906 = and i32 %220, 15, !dbg !12697
  %shl907 = shl i32 %and906, 16, !dbg !12697
  %or908 = or i32 %and905, %shl907, !dbg !12697
  %and909 = and i32 %or908, -16777216, !dbg !12697
  %shr910 = lshr i32 %and909, 24, !dbg !12697
  %or911 = or i32 %or876, %shr910, !dbg !12697
  br label %cond.end946, !dbg !12697

cond.false912:                                    ; preds = %cond.end766
  %arraydecay913 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12697
  %add.ptr914 = getelementptr i32, i32* %arraydecay913, i64 2, !dbg !12697
  %221 = load i32, i32* %add.ptr914, align 4, !dbg !12697
  %222 = call i1 @llvm.is.constant.i32(i32 %221), !dbg !12697
  br i1 %222, label %cond.true915, label %cond.false935, !dbg !12697

cond.true915:                                     ; preds = %cond.false912
  %arraydecay916 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12697
  %add.ptr917 = getelementptr i32, i32* %arraydecay916, i64 2, !dbg !12697
  %223 = load i32, i32* %add.ptr917, align 4, !dbg !12697
  %and918 = and i32 %223, 255, !dbg !12697
  %shl919 = shl i32 %and918, 24, !dbg !12697
  %arraydecay920 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12697
  %add.ptr921 = getelementptr i32, i32* %arraydecay920, i64 2, !dbg !12697
  %224 = load i32, i32* %add.ptr921, align 4, !dbg !12697
  %and922 = and i32 %224, 65280, !dbg !12697
  %shl923 = shl i32 %and922, 8, !dbg !12697
  %or924 = or i32 %shl919, %shl923, !dbg !12697
  %arraydecay925 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12697
  %add.ptr926 = getelementptr i32, i32* %arraydecay925, i64 2, !dbg !12697
  %225 = load i32, i32* %add.ptr926, align 4, !dbg !12697
  %and927 = and i32 %225, 16711680, !dbg !12697
  %shr928 = lshr i32 %and927, 8, !dbg !12697
  %or929 = or i32 %or924, %shr928, !dbg !12697
  %arraydecay930 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12697
  %add.ptr931 = getelementptr i32, i32* %arraydecay930, i64 2, !dbg !12697
  %226 = load i32, i32* %add.ptr931, align 4, !dbg !12697
  %and932 = and i32 %226, -16777216, !dbg !12697
  %shr933 = lshr i32 %and932, 24, !dbg !12697
  %or934 = or i32 %or929, %shr933, !dbg !12697
  br label %cond.end939, !dbg !12697

cond.false935:                                    ; preds = %cond.false912
  %arraydecay936 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12697
  %add.ptr937 = getelementptr i32, i32* %arraydecay936, i64 2, !dbg !12697
  %227 = load i32, i32* %add.ptr937, align 4, !dbg !12697
  %call938 = call i32 @__fswab32(i32 %227) #8, !dbg !12697
  br label %cond.end939, !dbg !12697

cond.end939:                                      ; preds = %cond.false935, %cond.true915
  %cond940 = phi i32 [ %or934, %cond.true915 ], [ %call938, %cond.false935 ], !dbg !12697
  %and941 = and i32 %cond940, -983041, !dbg !12697
  %228 = load i32, i32* %_v736, align 4, !dbg !12697
  %and942 = and i32 %228, 15, !dbg !12697
  %shl943 = shl i32 %and942, 16, !dbg !12697
  %or944 = or i32 %and941, %shl943, !dbg !12697
  %call945 = call i32 @__fswab32(i32 %or944) #8, !dbg !12697
  br label %cond.end946, !dbg !12697

cond.end946:                                      ; preds = %cond.end939, %cond.end903
  %cond947 = phi i32 [ %or911, %cond.end903 ], [ %call945, %cond.end939 ], !dbg !12697
  %arraydecay948 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12697
  %add.ptr949 = getelementptr i32, i32* %arraydecay948, i64 2, !dbg !12697
  store i32 %cond947, i32* %add.ptr949, align 4, !dbg !12697
  br label %do.end950, !dbg !12697

do.end950:                                        ; preds = %cond.end946
  br label %if.end951, !dbg !12697

if.end951:                                        ; preds = %do.end950, %cond.end729
  %229 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !12700
  %arraydecay952 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !12700
  %230 = bitcast i32* %arraydecay952 to i8*, !dbg !12700
  %231 = load i8*, i8** %out, align 8, !dbg !12700
  %call953 = call i32 @mlx5_cmd_exec(%struct.mlx5_core_dev* %229, i8* %230, i32 16, i8* %231, i32 528) #9, !dbg !12700
  store i32 %call953, i32* %tmp, align 4, !dbg !12702
  %232 = load i32, i32* %tmp, align 4, !dbg !12700
  store i32 %232, i32* %err, align 4, !dbg !12703
  %233 = load i32, i32* %err, align 4, !dbg !12704
  %tobool954 = icmp ne i32 %233, 0, !dbg !12704
  br i1 %tobool954, label %if.then955, label %if.end956, !dbg !12706

if.then955:                                       ; preds = %if.end951
  br label %ex, !dbg !12707

if.end956:                                        ; preds = %if.end951
  %234 = load i8*, i8** %out, align 8, !dbg !12708
  %add.ptr957 = getelementptr i8, i8* %234, i64 16, !dbg !12708
  store i8* %add.ptr957, i8** %ctx, align 8, !dbg !12709
  call void @llvm.dbg.declare(metadata i32* %___t, metadata !12710, metadata !DIExpression()), !dbg !12712
  %235 = load i8*, i8** %ctx, align 8, !dbg !12712
  %236 = bitcast i8* %235 to i32*, !dbg !12712
  %add.ptr958 = getelementptr i32, i32* %236, i64 0, !dbg !12712
  %237 = load i32, i32* %add.ptr958, align 4, !dbg !12712
  %238 = call i1 @llvm.is.constant.i32(i32 %237), !dbg !12712
  br i1 %238, label %cond.true959, label %cond.false975, !dbg !12712

cond.true959:                                     ; preds = %if.end956
  %239 = load i8*, i8** %ctx, align 8, !dbg !12712
  %240 = bitcast i8* %239 to i32*, !dbg !12712
  %add.ptr960 = getelementptr i32, i32* %240, i64 0, !dbg !12712
  %241 = load i32, i32* %add.ptr960, align 4, !dbg !12712
  %and961 = and i32 %241, 255, !dbg !12712
  %shl962 = shl i32 %and961, 24, !dbg !12712
  %242 = load i8*, i8** %ctx, align 8, !dbg !12712
  %243 = bitcast i8* %242 to i32*, !dbg !12712
  %add.ptr963 = getelementptr i32, i32* %243, i64 0, !dbg !12712
  %244 = load i32, i32* %add.ptr963, align 4, !dbg !12712
  %and964 = and i32 %244, 65280, !dbg !12712
  %shl965 = shl i32 %and964, 8, !dbg !12712
  %or966 = or i32 %shl962, %shl965, !dbg !12712
  %245 = load i8*, i8** %ctx, align 8, !dbg !12712
  %246 = bitcast i8* %245 to i32*, !dbg !12712
  %add.ptr967 = getelementptr i32, i32* %246, i64 0, !dbg !12712
  %247 = load i32, i32* %add.ptr967, align 4, !dbg !12712
  %and968 = and i32 %247, 16711680, !dbg !12712
  %shr969 = lshr i32 %and968, 8, !dbg !12712
  %or970 = or i32 %or966, %shr969, !dbg !12712
  %248 = load i8*, i8** %ctx, align 8, !dbg !12712
  %249 = bitcast i8* %248 to i32*, !dbg !12712
  %add.ptr971 = getelementptr i32, i32* %249, i64 0, !dbg !12712
  %250 = load i32, i32* %add.ptr971, align 4, !dbg !12712
  %and972 = and i32 %250, -16777216, !dbg !12712
  %shr973 = lshr i32 %and972, 24, !dbg !12712
  %or974 = or i32 %or970, %shr973, !dbg !12712
  br label %cond.end978, !dbg !12712

cond.false975:                                    ; preds = %if.end956
  %251 = load i8*, i8** %ctx, align 8, !dbg !12712
  %252 = bitcast i8* %251 to i32*, !dbg !12712
  %add.ptr976 = getelementptr i32, i32* %252, i64 0, !dbg !12712
  %253 = load i32, i32* %add.ptr976, align 4, !dbg !12712
  %call977 = call i32 @__fswab32(i32 %253) #8, !dbg !12712
  br label %cond.end978, !dbg !12712

cond.end978:                                      ; preds = %cond.false975, %cond.true959
  %cond979 = phi i32 [ %or974, %cond.true959 ], [ %call977, %cond.false975 ], !dbg !12712
  %shr980 = lshr i32 %cond979, 0, !dbg !12712
  store i32 %shr980, i32* %___t, align 4, !dbg !12712
  store i32 0, i32* %tmp981, align 4, !dbg !12713
  %254 = load i32, i32* %tmp981, align 4, !dbg !12716
  %255 = load i32, i32* %___t, align 4, !dbg !12712
  store i32 %255, i32* %tmp982, align 4, !dbg !12712
  %256 = load i32, i32* %tmp982, align 4, !dbg !12712
  %257 = load %struct.mlx5_hca_vport_context*, %struct.mlx5_hca_vport_context** %rep.addr, align 8, !dbg !12717
  %field_select = getelementptr inbounds %struct.mlx5_hca_vport_context, %struct.mlx5_hca_vport_context* %257, i32 0, i32 0, !dbg !12718
  store i32 %256, i32* %field_select, align 8, !dbg !12719
  call void @llvm.dbg.declare(metadata i32* %___t983, metadata !12720, metadata !DIExpression()), !dbg !12722
  %258 = load i8*, i8** %ctx, align 8, !dbg !12722
  %259 = bitcast i8* %258 to i32*, !dbg !12722
  %add.ptr984 = getelementptr i32, i32* %259, i64 8, !dbg !12722
  %260 = load i32, i32* %add.ptr984, align 4, !dbg !12722
  %261 = call i1 @llvm.is.constant.i32(i32 %260), !dbg !12722
  br i1 %261, label %cond.true985, label %cond.false1001, !dbg !12722

cond.true985:                                     ; preds = %cond.end978
  %262 = load i8*, i8** %ctx, align 8, !dbg !12722
  %263 = bitcast i8* %262 to i32*, !dbg !12722
  %add.ptr986 = getelementptr i32, i32* %263, i64 8, !dbg !12722
  %264 = load i32, i32* %add.ptr986, align 4, !dbg !12722
  %and987 = and i32 %264, 255, !dbg !12722
  %shl988 = shl i32 %and987, 24, !dbg !12722
  %265 = load i8*, i8** %ctx, align 8, !dbg !12722
  %266 = bitcast i8* %265 to i32*, !dbg !12722
  %add.ptr989 = getelementptr i32, i32* %266, i64 8, !dbg !12722
  %267 = load i32, i32* %add.ptr989, align 4, !dbg !12722
  %and990 = and i32 %267, 65280, !dbg !12722
  %shl991 = shl i32 %and990, 8, !dbg !12722
  %or992 = or i32 %shl988, %shl991, !dbg !12722
  %268 = load i8*, i8** %ctx, align 8, !dbg !12722
  %269 = bitcast i8* %268 to i32*, !dbg !12722
  %add.ptr993 = getelementptr i32, i32* %269, i64 8, !dbg !12722
  %270 = load i32, i32* %add.ptr993, align 4, !dbg !12722
  %and994 = and i32 %270, 16711680, !dbg !12722
  %shr995 = lshr i32 %and994, 8, !dbg !12722
  %or996 = or i32 %or992, %shr995, !dbg !12722
  %271 = load i8*, i8** %ctx, align 8, !dbg !12722
  %272 = bitcast i8* %271 to i32*, !dbg !12722
  %add.ptr997 = getelementptr i32, i32* %272, i64 8, !dbg !12722
  %273 = load i32, i32* %add.ptr997, align 4, !dbg !12722
  %and998 = and i32 %273, -16777216, !dbg !12722
  %shr999 = lshr i32 %and998, 24, !dbg !12722
  %or1000 = or i32 %or996, %shr999, !dbg !12722
  br label %cond.end1004, !dbg !12722

cond.false1001:                                   ; preds = %cond.end978
  %274 = load i8*, i8** %ctx, align 8, !dbg !12722
  %275 = bitcast i8* %274 to i32*, !dbg !12722
  %add.ptr1002 = getelementptr i32, i32* %275, i64 8, !dbg !12722
  %276 = load i32, i32* %add.ptr1002, align 4, !dbg !12722
  %call1003 = call i32 @__fswab32(i32 %276) #8, !dbg !12722
  br label %cond.end1004, !dbg !12722

cond.end1004:                                     ; preds = %cond.false1001, %cond.true985
  %cond1005 = phi i32 [ %or1000, %cond.true985 ], [ %call1003, %cond.false1001 ], !dbg !12722
  %shr1006 = lshr i32 %cond1005, 31, !dbg !12722
  %and1007 = and i32 %shr1006, 1, !dbg !12722
  store i32 %and1007, i32* %___t983, align 4, !dbg !12722
  store i32 0, i32* %tmp1008, align 4, !dbg !12723
  %277 = load i32, i32* %tmp1008, align 4, !dbg !12726
  %278 = load i32, i32* %___t983, align 4, !dbg !12722
  store i32 %278, i32* %tmp1009, align 4, !dbg !12722
  %279 = load i32, i32* %tmp1009, align 4, !dbg !12722
  %tobool1010 = icmp ne i32 %279, 0, !dbg !12727
  %280 = load %struct.mlx5_hca_vport_context*, %struct.mlx5_hca_vport_context** %rep.addr, align 8, !dbg !12728
  %sm_virt_aware = getelementptr inbounds %struct.mlx5_hca_vport_context, %struct.mlx5_hca_vport_context* %280, i32 0, i32 1, !dbg !12729
  %frombool = zext i1 %tobool1010 to i8, !dbg !12730
  store i8 %frombool, i8* %sm_virt_aware, align 4, !dbg !12730
  call void @llvm.dbg.declare(metadata i32* %___t1011, metadata !12731, metadata !DIExpression()), !dbg !12733
  %281 = load i8*, i8** %ctx, align 8, !dbg !12733
  %282 = bitcast i8* %281 to i32*, !dbg !12733
  %add.ptr1012 = getelementptr i32, i32* %282, i64 8, !dbg !12733
  %283 = load i32, i32* %add.ptr1012, align 4, !dbg !12733
  %284 = call i1 @llvm.is.constant.i32(i32 %283), !dbg !12733
  br i1 %284, label %cond.true1013, label %cond.false1029, !dbg !12733

cond.true1013:                                    ; preds = %cond.end1004
  %285 = load i8*, i8** %ctx, align 8, !dbg !12733
  %286 = bitcast i8* %285 to i32*, !dbg !12733
  %add.ptr1014 = getelementptr i32, i32* %286, i64 8, !dbg !12733
  %287 = load i32, i32* %add.ptr1014, align 4, !dbg !12733
  %and1015 = and i32 %287, 255, !dbg !12733
  %shl1016 = shl i32 %and1015, 24, !dbg !12733
  %288 = load i8*, i8** %ctx, align 8, !dbg !12733
  %289 = bitcast i8* %288 to i32*, !dbg !12733
  %add.ptr1017 = getelementptr i32, i32* %289, i64 8, !dbg !12733
  %290 = load i32, i32* %add.ptr1017, align 4, !dbg !12733
  %and1018 = and i32 %290, 65280, !dbg !12733
  %shl1019 = shl i32 %and1018, 8, !dbg !12733
  %or1020 = or i32 %shl1016, %shl1019, !dbg !12733
  %291 = load i8*, i8** %ctx, align 8, !dbg !12733
  %292 = bitcast i8* %291 to i32*, !dbg !12733
  %add.ptr1021 = getelementptr i32, i32* %292, i64 8, !dbg !12733
  %293 = load i32, i32* %add.ptr1021, align 4, !dbg !12733
  %and1022 = and i32 %293, 16711680, !dbg !12733
  %shr1023 = lshr i32 %and1022, 8, !dbg !12733
  %or1024 = or i32 %or1020, %shr1023, !dbg !12733
  %294 = load i8*, i8** %ctx, align 8, !dbg !12733
  %295 = bitcast i8* %294 to i32*, !dbg !12733
  %add.ptr1025 = getelementptr i32, i32* %295, i64 8, !dbg !12733
  %296 = load i32, i32* %add.ptr1025, align 4, !dbg !12733
  %and1026 = and i32 %296, -16777216, !dbg !12733
  %shr1027 = lshr i32 %and1026, 24, !dbg !12733
  %or1028 = or i32 %or1024, %shr1027, !dbg !12733
  br label %cond.end1032, !dbg !12733

cond.false1029:                                   ; preds = %cond.end1004
  %297 = load i8*, i8** %ctx, align 8, !dbg !12733
  %298 = bitcast i8* %297 to i32*, !dbg !12733
  %add.ptr1030 = getelementptr i32, i32* %298, i64 8, !dbg !12733
  %299 = load i32, i32* %add.ptr1030, align 4, !dbg !12733
  %call1031 = call i32 @__fswab32(i32 %299) #8, !dbg !12733
  br label %cond.end1032, !dbg !12733

cond.end1032:                                     ; preds = %cond.false1029, %cond.true1013
  %cond1033 = phi i32 [ %or1028, %cond.true1013 ], [ %call1031, %cond.false1029 ], !dbg !12733
  %shr1034 = lshr i32 %cond1033, 30, !dbg !12733
  %and1035 = and i32 %shr1034, 1, !dbg !12733
  store i32 %and1035, i32* %___t1011, align 4, !dbg !12733
  store i32 0, i32* %tmp1036, align 4, !dbg !12734
  %300 = load i32, i32* %tmp1036, align 4, !dbg !12737
  %301 = load i32, i32* %___t1011, align 4, !dbg !12733
  store i32 %301, i32* %tmp1037, align 4, !dbg !12733
  %302 = load i32, i32* %tmp1037, align 4, !dbg !12733
  %tobool1038 = icmp ne i32 %302, 0, !dbg !12738
  %303 = load %struct.mlx5_hca_vport_context*, %struct.mlx5_hca_vport_context** %rep.addr, align 8, !dbg !12739
  %has_smi = getelementptr inbounds %struct.mlx5_hca_vport_context, %struct.mlx5_hca_vport_context* %303, i32 0, i32 2, !dbg !12740
  %frombool1039 = zext i1 %tobool1038 to i8, !dbg !12741
  store i8 %frombool1039, i8* %has_smi, align 1, !dbg !12741
  call void @llvm.dbg.declare(metadata i32* %___t1040, metadata !12742, metadata !DIExpression()), !dbg !12744
  %304 = load i8*, i8** %ctx, align 8, !dbg !12744
  %305 = bitcast i8* %304 to i32*, !dbg !12744
  %add.ptr1041 = getelementptr i32, i32* %305, i64 8, !dbg !12744
  %306 = load i32, i32* %add.ptr1041, align 4, !dbg !12744
  %307 = call i1 @llvm.is.constant.i32(i32 %306), !dbg !12744
  br i1 %307, label %cond.true1042, label %cond.false1058, !dbg !12744

cond.true1042:                                    ; preds = %cond.end1032
  %308 = load i8*, i8** %ctx, align 8, !dbg !12744
  %309 = bitcast i8* %308 to i32*, !dbg !12744
  %add.ptr1043 = getelementptr i32, i32* %309, i64 8, !dbg !12744
  %310 = load i32, i32* %add.ptr1043, align 4, !dbg !12744
  %and1044 = and i32 %310, 255, !dbg !12744
  %shl1045 = shl i32 %and1044, 24, !dbg !12744
  %311 = load i8*, i8** %ctx, align 8, !dbg !12744
  %312 = bitcast i8* %311 to i32*, !dbg !12744
  %add.ptr1046 = getelementptr i32, i32* %312, i64 8, !dbg !12744
  %313 = load i32, i32* %add.ptr1046, align 4, !dbg !12744
  %and1047 = and i32 %313, 65280, !dbg !12744
  %shl1048 = shl i32 %and1047, 8, !dbg !12744
  %or1049 = or i32 %shl1045, %shl1048, !dbg !12744
  %314 = load i8*, i8** %ctx, align 8, !dbg !12744
  %315 = bitcast i8* %314 to i32*, !dbg !12744
  %add.ptr1050 = getelementptr i32, i32* %315, i64 8, !dbg !12744
  %316 = load i32, i32* %add.ptr1050, align 4, !dbg !12744
  %and1051 = and i32 %316, 16711680, !dbg !12744
  %shr1052 = lshr i32 %and1051, 8, !dbg !12744
  %or1053 = or i32 %or1049, %shr1052, !dbg !12744
  %317 = load i8*, i8** %ctx, align 8, !dbg !12744
  %318 = bitcast i8* %317 to i32*, !dbg !12744
  %add.ptr1054 = getelementptr i32, i32* %318, i64 8, !dbg !12744
  %319 = load i32, i32* %add.ptr1054, align 4, !dbg !12744
  %and1055 = and i32 %319, -16777216, !dbg !12744
  %shr1056 = lshr i32 %and1055, 24, !dbg !12744
  %or1057 = or i32 %or1053, %shr1056, !dbg !12744
  br label %cond.end1061, !dbg !12744

cond.false1058:                                   ; preds = %cond.end1032
  %320 = load i8*, i8** %ctx, align 8, !dbg !12744
  %321 = bitcast i8* %320 to i32*, !dbg !12744
  %add.ptr1059 = getelementptr i32, i32* %321, i64 8, !dbg !12744
  %322 = load i32, i32* %add.ptr1059, align 4, !dbg !12744
  %call1060 = call i32 @__fswab32(i32 %322) #8, !dbg !12744
  br label %cond.end1061, !dbg !12744

cond.end1061:                                     ; preds = %cond.false1058, %cond.true1042
  %cond1062 = phi i32 [ %or1057, %cond.true1042 ], [ %call1060, %cond.false1058 ], !dbg !12744
  %shr1063 = lshr i32 %cond1062, 29, !dbg !12744
  %and1064 = and i32 %shr1063, 1, !dbg !12744
  store i32 %and1064, i32* %___t1040, align 4, !dbg !12744
  store i32 0, i32* %tmp1065, align 4, !dbg !12745
  %323 = load i32, i32* %tmp1065, align 4, !dbg !12748
  %324 = load i32, i32* %___t1040, align 4, !dbg !12744
  store i32 %324, i32* %tmp1066, align 4, !dbg !12744
  %325 = load i32, i32* %tmp1066, align 4, !dbg !12744
  %tobool1067 = icmp ne i32 %325, 0, !dbg !12749
  %326 = load %struct.mlx5_hca_vport_context*, %struct.mlx5_hca_vport_context** %rep.addr, align 8, !dbg !12750
  %has_raw = getelementptr inbounds %struct.mlx5_hca_vport_context, %struct.mlx5_hca_vport_context* %326, i32 0, i32 3, !dbg !12751
  %frombool1068 = zext i1 %tobool1067 to i8, !dbg !12752
  store i8 %frombool1068, i8* %has_raw, align 2, !dbg !12752
  call void @llvm.dbg.declare(metadata i32* %___t1069, metadata !12753, metadata !DIExpression()), !dbg !12755
  %327 = load i8*, i8** %ctx, align 8, !dbg !12755
  %328 = bitcast i8* %327 to i32*, !dbg !12755
  %add.ptr1070 = getelementptr i32, i32* %328, i64 8, !dbg !12755
  %329 = load i32, i32* %add.ptr1070, align 4, !dbg !12755
  %330 = call i1 @llvm.is.constant.i32(i32 %329), !dbg !12755
  br i1 %330, label %cond.true1071, label %cond.false1087, !dbg !12755

cond.true1071:                                    ; preds = %cond.end1061
  %331 = load i8*, i8** %ctx, align 8, !dbg !12755
  %332 = bitcast i8* %331 to i32*, !dbg !12755
  %add.ptr1072 = getelementptr i32, i32* %332, i64 8, !dbg !12755
  %333 = load i32, i32* %add.ptr1072, align 4, !dbg !12755
  %and1073 = and i32 %333, 255, !dbg !12755
  %shl1074 = shl i32 %and1073, 24, !dbg !12755
  %334 = load i8*, i8** %ctx, align 8, !dbg !12755
  %335 = bitcast i8* %334 to i32*, !dbg !12755
  %add.ptr1075 = getelementptr i32, i32* %335, i64 8, !dbg !12755
  %336 = load i32, i32* %add.ptr1075, align 4, !dbg !12755
  %and1076 = and i32 %336, 65280, !dbg !12755
  %shl1077 = shl i32 %and1076, 8, !dbg !12755
  %or1078 = or i32 %shl1074, %shl1077, !dbg !12755
  %337 = load i8*, i8** %ctx, align 8, !dbg !12755
  %338 = bitcast i8* %337 to i32*, !dbg !12755
  %add.ptr1079 = getelementptr i32, i32* %338, i64 8, !dbg !12755
  %339 = load i32, i32* %add.ptr1079, align 4, !dbg !12755
  %and1080 = and i32 %339, 16711680, !dbg !12755
  %shr1081 = lshr i32 %and1080, 8, !dbg !12755
  %or1082 = or i32 %or1078, %shr1081, !dbg !12755
  %340 = load i8*, i8** %ctx, align 8, !dbg !12755
  %341 = bitcast i8* %340 to i32*, !dbg !12755
  %add.ptr1083 = getelementptr i32, i32* %341, i64 8, !dbg !12755
  %342 = load i32, i32* %add.ptr1083, align 4, !dbg !12755
  %and1084 = and i32 %342, -16777216, !dbg !12755
  %shr1085 = lshr i32 %and1084, 24, !dbg !12755
  %or1086 = or i32 %or1082, %shr1085, !dbg !12755
  br label %cond.end1090, !dbg !12755

cond.false1087:                                   ; preds = %cond.end1061
  %343 = load i8*, i8** %ctx, align 8, !dbg !12755
  %344 = bitcast i8* %343 to i32*, !dbg !12755
  %add.ptr1088 = getelementptr i32, i32* %344, i64 8, !dbg !12755
  %345 = load i32, i32* %add.ptr1088, align 4, !dbg !12755
  %call1089 = call i32 @__fswab32(i32 %345) #8, !dbg !12755
  br label %cond.end1090, !dbg !12755

cond.end1090:                                     ; preds = %cond.false1087, %cond.true1071
  %cond1091 = phi i32 [ %or1086, %cond.true1071 ], [ %call1089, %cond.false1087 ], !dbg !12755
  %shr1092 = lshr i32 %cond1091, 8, !dbg !12755
  %and1093 = and i32 %shr1092, 15, !dbg !12755
  store i32 %and1093, i32* %___t1069, align 4, !dbg !12755
  store i32 0, i32* %tmp1094, align 4, !dbg !12756
  %346 = load i32, i32* %tmp1094, align 4, !dbg !12759
  %347 = load i32, i32* %___t1069, align 4, !dbg !12755
  store i32 %347, i32* %tmp1095, align 4, !dbg !12755
  %348 = load i32, i32* %tmp1095, align 4, !dbg !12755
  %349 = load %struct.mlx5_hca_vport_context*, %struct.mlx5_hca_vport_context** %rep.addr, align 8, !dbg !12760
  %policy = getelementptr inbounds %struct.mlx5_hca_vport_context, %struct.mlx5_hca_vport_context* %349, i32 0, i32 4, !dbg !12761
  store i32 %348, i32* %policy, align 8, !dbg !12762
  call void @llvm.dbg.declare(metadata i32* %___t1096, metadata !12763, metadata !DIExpression()), !dbg !12765
  %350 = load i8*, i8** %ctx, align 8, !dbg !12765
  %351 = bitcast i8* %350 to i32*, !dbg !12765
  %add.ptr1097 = getelementptr i32, i32* %351, i64 8, !dbg !12765
  %352 = load i32, i32* %add.ptr1097, align 4, !dbg !12765
  %353 = call i1 @llvm.is.constant.i32(i32 %352), !dbg !12765
  br i1 %353, label %cond.true1098, label %cond.false1114, !dbg !12765

cond.true1098:                                    ; preds = %cond.end1090
  %354 = load i8*, i8** %ctx, align 8, !dbg !12765
  %355 = bitcast i8* %354 to i32*, !dbg !12765
  %add.ptr1099 = getelementptr i32, i32* %355, i64 8, !dbg !12765
  %356 = load i32, i32* %add.ptr1099, align 4, !dbg !12765
  %and1100 = and i32 %356, 255, !dbg !12765
  %shl1101 = shl i32 %and1100, 24, !dbg !12765
  %357 = load i8*, i8** %ctx, align 8, !dbg !12765
  %358 = bitcast i8* %357 to i32*, !dbg !12765
  %add.ptr1102 = getelementptr i32, i32* %358, i64 8, !dbg !12765
  %359 = load i32, i32* %add.ptr1102, align 4, !dbg !12765
  %and1103 = and i32 %359, 65280, !dbg !12765
  %shl1104 = shl i32 %and1103, 8, !dbg !12765
  %or1105 = or i32 %shl1101, %shl1104, !dbg !12765
  %360 = load i8*, i8** %ctx, align 8, !dbg !12765
  %361 = bitcast i8* %360 to i32*, !dbg !12765
  %add.ptr1106 = getelementptr i32, i32* %361, i64 8, !dbg !12765
  %362 = load i32, i32* %add.ptr1106, align 4, !dbg !12765
  %and1107 = and i32 %362, 16711680, !dbg !12765
  %shr1108 = lshr i32 %and1107, 8, !dbg !12765
  %or1109 = or i32 %or1105, %shr1108, !dbg !12765
  %363 = load i8*, i8** %ctx, align 8, !dbg !12765
  %364 = bitcast i8* %363 to i32*, !dbg !12765
  %add.ptr1110 = getelementptr i32, i32* %364, i64 8, !dbg !12765
  %365 = load i32, i32* %add.ptr1110, align 4, !dbg !12765
  %and1111 = and i32 %365, -16777216, !dbg !12765
  %shr1112 = lshr i32 %and1111, 24, !dbg !12765
  %or1113 = or i32 %or1109, %shr1112, !dbg !12765
  br label %cond.end1117, !dbg !12765

cond.false1114:                                   ; preds = %cond.end1090
  %366 = load i8*, i8** %ctx, align 8, !dbg !12765
  %367 = bitcast i8* %366 to i32*, !dbg !12765
  %add.ptr1115 = getelementptr i32, i32* %367, i64 8, !dbg !12765
  %368 = load i32, i32* %add.ptr1115, align 4, !dbg !12765
  %call1116 = call i32 @__fswab32(i32 %368) #8, !dbg !12765
  br label %cond.end1117, !dbg !12765

cond.end1117:                                     ; preds = %cond.false1114, %cond.true1098
  %cond1118 = phi i32 [ %or1113, %cond.true1098 ], [ %call1116, %cond.false1114 ], !dbg !12765
  %shr1119 = lshr i32 %cond1118, 12, !dbg !12765
  %and1120 = and i32 %shr1119, 15, !dbg !12765
  store i32 %and1120, i32* %___t1096, align 4, !dbg !12765
  store i32 0, i32* %tmp1121, align 4, !dbg !12766
  %369 = load i32, i32* %tmp1121, align 4, !dbg !12769
  %370 = load i32, i32* %___t1096, align 4, !dbg !12765
  store i32 %370, i32* %tmp1122, align 4, !dbg !12765
  %371 = load i32, i32* %tmp1122, align 4, !dbg !12765
  %372 = load %struct.mlx5_hca_vport_context*, %struct.mlx5_hca_vport_context** %rep.addr, align 8, !dbg !12770
  %phys_state = getelementptr inbounds %struct.mlx5_hca_vport_context, %struct.mlx5_hca_vport_context* %372, i32 0, i32 5, !dbg !12771
  store i32 %371, i32* %phys_state, align 4, !dbg !12772
  call void @llvm.dbg.declare(metadata i32* %___t1123, metadata !12773, metadata !DIExpression()), !dbg !12775
  %373 = load i8*, i8** %ctx, align 8, !dbg !12775
  %374 = bitcast i8* %373 to i32*, !dbg !12775
  %add.ptr1124 = getelementptr i32, i32* %374, i64 8, !dbg !12775
  %375 = load i32, i32* %add.ptr1124, align 4, !dbg !12775
  %376 = call i1 @llvm.is.constant.i32(i32 %375), !dbg !12775
  br i1 %376, label %cond.true1125, label %cond.false1141, !dbg !12775

cond.true1125:                                    ; preds = %cond.end1117
  %377 = load i8*, i8** %ctx, align 8, !dbg !12775
  %378 = bitcast i8* %377 to i32*, !dbg !12775
  %add.ptr1126 = getelementptr i32, i32* %378, i64 8, !dbg !12775
  %379 = load i32, i32* %add.ptr1126, align 4, !dbg !12775
  %and1127 = and i32 %379, 255, !dbg !12775
  %shl1128 = shl i32 %and1127, 24, !dbg !12775
  %380 = load i8*, i8** %ctx, align 8, !dbg !12775
  %381 = bitcast i8* %380 to i32*, !dbg !12775
  %add.ptr1129 = getelementptr i32, i32* %381, i64 8, !dbg !12775
  %382 = load i32, i32* %add.ptr1129, align 4, !dbg !12775
  %and1130 = and i32 %382, 65280, !dbg !12775
  %shl1131 = shl i32 %and1130, 8, !dbg !12775
  %or1132 = or i32 %shl1128, %shl1131, !dbg !12775
  %383 = load i8*, i8** %ctx, align 8, !dbg !12775
  %384 = bitcast i8* %383 to i32*, !dbg !12775
  %add.ptr1133 = getelementptr i32, i32* %384, i64 8, !dbg !12775
  %385 = load i32, i32* %add.ptr1133, align 4, !dbg !12775
  %and1134 = and i32 %385, 16711680, !dbg !12775
  %shr1135 = lshr i32 %and1134, 8, !dbg !12775
  %or1136 = or i32 %or1132, %shr1135, !dbg !12775
  %386 = load i8*, i8** %ctx, align 8, !dbg !12775
  %387 = bitcast i8* %386 to i32*, !dbg !12775
  %add.ptr1137 = getelementptr i32, i32* %387, i64 8, !dbg !12775
  %388 = load i32, i32* %add.ptr1137, align 4, !dbg !12775
  %and1138 = and i32 %388, -16777216, !dbg !12775
  %shr1139 = lshr i32 %and1138, 24, !dbg !12775
  %or1140 = or i32 %or1136, %shr1139, !dbg !12775
  br label %cond.end1144, !dbg !12775

cond.false1141:                                   ; preds = %cond.end1117
  %389 = load i8*, i8** %ctx, align 8, !dbg !12775
  %390 = bitcast i8* %389 to i32*, !dbg !12775
  %add.ptr1142 = getelementptr i32, i32* %390, i64 8, !dbg !12775
  %391 = load i32, i32* %add.ptr1142, align 4, !dbg !12775
  %call1143 = call i32 @__fswab32(i32 %391) #8, !dbg !12775
  br label %cond.end1144, !dbg !12775

cond.end1144:                                     ; preds = %cond.false1141, %cond.true1125
  %cond1145 = phi i32 [ %or1140, %cond.true1125 ], [ %call1143, %cond.false1141 ], !dbg !12775
  %shr1146 = lshr i32 %cond1145, 0, !dbg !12775
  %and1147 = and i32 %shr1146, 15, !dbg !12775
  store i32 %and1147, i32* %___t1123, align 4, !dbg !12775
  store i32 0, i32* %tmp1148, align 4, !dbg !12776
  %392 = load i32, i32* %tmp1148, align 4, !dbg !12779
  %393 = load i32, i32* %___t1123, align 4, !dbg !12775
  store i32 %393, i32* %tmp1149, align 4, !dbg !12775
  %394 = load i32, i32* %tmp1149, align 4, !dbg !12775
  %395 = load %struct.mlx5_hca_vport_context*, %struct.mlx5_hca_vport_context** %rep.addr, align 8, !dbg !12780
  %vport_state = getelementptr inbounds %struct.mlx5_hca_vport_context, %struct.mlx5_hca_vport_context* %395, i32 0, i32 6, !dbg !12781
  store i32 %394, i32* %vport_state, align 8, !dbg !12782
  call void @llvm.dbg.declare(metadata i32* %___t1150, metadata !12783, metadata !DIExpression()), !dbg !12785
  %396 = load i8*, i8** %ctx, align 8, !dbg !12785
  %397 = bitcast i8* %396 to i32*, !dbg !12785
  %add.ptr1151 = getelementptr i32, i32* %397, i64 8, !dbg !12785
  %398 = load i32, i32* %add.ptr1151, align 4, !dbg !12785
  %399 = call i1 @llvm.is.constant.i32(i32 %398), !dbg !12785
  br i1 %399, label %cond.true1152, label %cond.false1168, !dbg !12785

cond.true1152:                                    ; preds = %cond.end1144
  %400 = load i8*, i8** %ctx, align 8, !dbg !12785
  %401 = bitcast i8* %400 to i32*, !dbg !12785
  %add.ptr1153 = getelementptr i32, i32* %401, i64 8, !dbg !12785
  %402 = load i32, i32* %add.ptr1153, align 4, !dbg !12785
  %and1154 = and i32 %402, 255, !dbg !12785
  %shl1155 = shl i32 %and1154, 24, !dbg !12785
  %403 = load i8*, i8** %ctx, align 8, !dbg !12785
  %404 = bitcast i8* %403 to i32*, !dbg !12785
  %add.ptr1156 = getelementptr i32, i32* %404, i64 8, !dbg !12785
  %405 = load i32, i32* %add.ptr1156, align 4, !dbg !12785
  %and1157 = and i32 %405, 65280, !dbg !12785
  %shl1158 = shl i32 %and1157, 8, !dbg !12785
  %or1159 = or i32 %shl1155, %shl1158, !dbg !12785
  %406 = load i8*, i8** %ctx, align 8, !dbg !12785
  %407 = bitcast i8* %406 to i32*, !dbg !12785
  %add.ptr1160 = getelementptr i32, i32* %407, i64 8, !dbg !12785
  %408 = load i32, i32* %add.ptr1160, align 4, !dbg !12785
  %and1161 = and i32 %408, 16711680, !dbg !12785
  %shr1162 = lshr i32 %and1161, 8, !dbg !12785
  %or1163 = or i32 %or1159, %shr1162, !dbg !12785
  %409 = load i8*, i8** %ctx, align 8, !dbg !12785
  %410 = bitcast i8* %409 to i32*, !dbg !12785
  %add.ptr1164 = getelementptr i32, i32* %410, i64 8, !dbg !12785
  %411 = load i32, i32* %add.ptr1164, align 4, !dbg !12785
  %and1165 = and i32 %411, -16777216, !dbg !12785
  %shr1166 = lshr i32 %and1165, 24, !dbg !12785
  %or1167 = or i32 %or1163, %shr1166, !dbg !12785
  br label %cond.end1171, !dbg !12785

cond.false1168:                                   ; preds = %cond.end1144
  %412 = load i8*, i8** %ctx, align 8, !dbg !12785
  %413 = bitcast i8* %412 to i32*, !dbg !12785
  %add.ptr1169 = getelementptr i32, i32* %413, i64 8, !dbg !12785
  %414 = load i32, i32* %add.ptr1169, align 4, !dbg !12785
  %call1170 = call i32 @__fswab32(i32 %414) #8, !dbg !12785
  br label %cond.end1171, !dbg !12785

cond.end1171:                                     ; preds = %cond.false1168, %cond.true1152
  %cond1172 = phi i32 [ %or1167, %cond.true1152 ], [ %call1170, %cond.false1168 ], !dbg !12785
  %shr1173 = lshr i32 %cond1172, 12, !dbg !12785
  %and1174 = and i32 %shr1173, 15, !dbg !12785
  store i32 %and1174, i32* %___t1150, align 4, !dbg !12785
  store i32 0, i32* %tmp1175, align 4, !dbg !12786
  %415 = load i32, i32* %tmp1175, align 4, !dbg !12789
  %416 = load i32, i32* %___t1150, align 4, !dbg !12785
  store i32 %416, i32* %tmp1176, align 4, !dbg !12785
  %417 = load i32, i32* %tmp1176, align 4, !dbg !12785
  %conv1177 = trunc i32 %417 to i8, !dbg !12790
  %418 = load %struct.mlx5_hca_vport_context*, %struct.mlx5_hca_vport_context** %rep.addr, align 8, !dbg !12791
  %port_physical_state = getelementptr inbounds %struct.mlx5_hca_vport_context, %struct.mlx5_hca_vport_context* %418, i32 0, i32 7, !dbg !12792
  store i8 %conv1177, i8* %port_physical_state, align 4, !dbg !12793
  call void @llvm.dbg.declare(metadata i64* %___t1178, metadata !12794, metadata !DIExpression()), !dbg !12796
  %419 = load i8*, i8** %ctx, align 8, !dbg !12796
  %420 = bitcast i8* %419 to i64*, !dbg !12796
  %add.ptr1179 = getelementptr i64, i64* %420, i64 6, !dbg !12796
  %421 = load i64, i64* %add.ptr1179, align 8, !dbg !12796
  %422 = call i1 @llvm.is.constant.i64(i64 %421), !dbg !12796
  br i1 %422, label %cond.true1180, label %cond.false1212, !dbg !12796

cond.true1180:                                    ; preds = %cond.end1171
  %423 = load i8*, i8** %ctx, align 8, !dbg !12796
  %424 = bitcast i8* %423 to i64*, !dbg !12796
  %add.ptr1181 = getelementptr i64, i64* %424, i64 6, !dbg !12796
  %425 = load i64, i64* %add.ptr1181, align 8, !dbg !12796
  %and1182 = and i64 %425, 255, !dbg !12796
  %shl1183 = shl i64 %and1182, 56, !dbg !12796
  %426 = load i8*, i8** %ctx, align 8, !dbg !12796
  %427 = bitcast i8* %426 to i64*, !dbg !12796
  %add.ptr1184 = getelementptr i64, i64* %427, i64 6, !dbg !12796
  %428 = load i64, i64* %add.ptr1184, align 8, !dbg !12796
  %and1185 = and i64 %428, 65280, !dbg !12796
  %shl1186 = shl i64 %and1185, 40, !dbg !12796
  %or1187 = or i64 %shl1183, %shl1186, !dbg !12796
  %429 = load i8*, i8** %ctx, align 8, !dbg !12796
  %430 = bitcast i8* %429 to i64*, !dbg !12796
  %add.ptr1188 = getelementptr i64, i64* %430, i64 6, !dbg !12796
  %431 = load i64, i64* %add.ptr1188, align 8, !dbg !12796
  %and1189 = and i64 %431, 16711680, !dbg !12796
  %shl1190 = shl i64 %and1189, 24, !dbg !12796
  %or1191 = or i64 %or1187, %shl1190, !dbg !12796
  %432 = load i8*, i8** %ctx, align 8, !dbg !12796
  %433 = bitcast i8* %432 to i64*, !dbg !12796
  %add.ptr1192 = getelementptr i64, i64* %433, i64 6, !dbg !12796
  %434 = load i64, i64* %add.ptr1192, align 8, !dbg !12796
  %and1193 = and i64 %434, 4278190080, !dbg !12796
  %shl1194 = shl i64 %and1193, 8, !dbg !12796
  %or1195 = or i64 %or1191, %shl1194, !dbg !12796
  %435 = load i8*, i8** %ctx, align 8, !dbg !12796
  %436 = bitcast i8* %435 to i64*, !dbg !12796
  %add.ptr1196 = getelementptr i64, i64* %436, i64 6, !dbg !12796
  %437 = load i64, i64* %add.ptr1196, align 8, !dbg !12796
  %and1197 = and i64 %437, 1095216660480, !dbg !12796
  %shr1198 = lshr i64 %and1197, 8, !dbg !12796
  %or1199 = or i64 %or1195, %shr1198, !dbg !12796
  %438 = load i8*, i8** %ctx, align 8, !dbg !12796
  %439 = bitcast i8* %438 to i64*, !dbg !12796
  %add.ptr1200 = getelementptr i64, i64* %439, i64 6, !dbg !12796
  %440 = load i64, i64* %add.ptr1200, align 8, !dbg !12796
  %and1201 = and i64 %440, 280375465082880, !dbg !12796
  %shr1202 = lshr i64 %and1201, 24, !dbg !12796
  %or1203 = or i64 %or1199, %shr1202, !dbg !12796
  %441 = load i8*, i8** %ctx, align 8, !dbg !12796
  %442 = bitcast i8* %441 to i64*, !dbg !12796
  %add.ptr1204 = getelementptr i64, i64* %442, i64 6, !dbg !12796
  %443 = load i64, i64* %add.ptr1204, align 8, !dbg !12796
  %and1205 = and i64 %443, 71776119061217280, !dbg !12796
  %shr1206 = lshr i64 %and1205, 40, !dbg !12796
  %or1207 = or i64 %or1203, %shr1206, !dbg !12796
  %444 = load i8*, i8** %ctx, align 8, !dbg !12796
  %445 = bitcast i8* %444 to i64*, !dbg !12796
  %add.ptr1208 = getelementptr i64, i64* %445, i64 6, !dbg !12796
  %446 = load i64, i64* %add.ptr1208, align 8, !dbg !12796
  %and1209 = and i64 %446, -72057594037927936, !dbg !12796
  %shr1210 = lshr i64 %and1209, 56, !dbg !12796
  %or1211 = or i64 %or1207, %shr1210, !dbg !12796
  br label %cond.end1215, !dbg !12796

cond.false1212:                                   ; preds = %cond.end1171
  %447 = load i8*, i8** %ctx, align 8, !dbg !12796
  %448 = bitcast i8* %447 to i64*, !dbg !12796
  %add.ptr1213 = getelementptr i64, i64* %448, i64 6, !dbg !12796
  %449 = load i64, i64* %add.ptr1213, align 8, !dbg !12796
  %call1214 = call i64 @__fswab64(i64 %449) #8, !dbg !12796
  br label %cond.end1215, !dbg !12796

cond.end1215:                                     ; preds = %cond.false1212, %cond.true1180
  %cond1216 = phi i64 [ %or1211, %cond.true1180 ], [ %call1214, %cond.false1212 ], !dbg !12796
  store i64 %cond1216, i64* %___t1178, align 8, !dbg !12796
  store i32 0, i32* %tmp1217, align 4, !dbg !12797
  %450 = load i32, i32* %tmp1217, align 4, !dbg !12800
  %451 = load i64, i64* %___t1178, align 8, !dbg !12796
  store i64 %451, i64* %tmp1218, align 8, !dbg !12796
  %452 = load i64, i64* %tmp1218, align 8, !dbg !12796
  %453 = load %struct.mlx5_hca_vport_context*, %struct.mlx5_hca_vport_context** %rep.addr, align 8, !dbg !12801
  %port_guid = getelementptr inbounds %struct.mlx5_hca_vport_context, %struct.mlx5_hca_vport_context* %453, i32 0, i32 9, !dbg !12802
  store i64 %452, i64* %port_guid, align 8, !dbg !12803
  call void @llvm.dbg.declare(metadata i64* %___t1219, metadata !12804, metadata !DIExpression()), !dbg !12806
  %454 = load i8*, i8** %ctx, align 8, !dbg !12806
  %455 = bitcast i8* %454 to i64*, !dbg !12806
  %add.ptr1220 = getelementptr i64, i64* %455, i64 7, !dbg !12806
  %456 = load i64, i64* %add.ptr1220, align 8, !dbg !12806
  %457 = call i1 @llvm.is.constant.i64(i64 %456), !dbg !12806
  br i1 %457, label %cond.true1221, label %cond.false1253, !dbg !12806

cond.true1221:                                    ; preds = %cond.end1215
  %458 = load i8*, i8** %ctx, align 8, !dbg !12806
  %459 = bitcast i8* %458 to i64*, !dbg !12806
  %add.ptr1222 = getelementptr i64, i64* %459, i64 7, !dbg !12806
  %460 = load i64, i64* %add.ptr1222, align 8, !dbg !12806
  %and1223 = and i64 %460, 255, !dbg !12806
  %shl1224 = shl i64 %and1223, 56, !dbg !12806
  %461 = load i8*, i8** %ctx, align 8, !dbg !12806
  %462 = bitcast i8* %461 to i64*, !dbg !12806
  %add.ptr1225 = getelementptr i64, i64* %462, i64 7, !dbg !12806
  %463 = load i64, i64* %add.ptr1225, align 8, !dbg !12806
  %and1226 = and i64 %463, 65280, !dbg !12806
  %shl1227 = shl i64 %and1226, 40, !dbg !12806
  %or1228 = or i64 %shl1224, %shl1227, !dbg !12806
  %464 = load i8*, i8** %ctx, align 8, !dbg !12806
  %465 = bitcast i8* %464 to i64*, !dbg !12806
  %add.ptr1229 = getelementptr i64, i64* %465, i64 7, !dbg !12806
  %466 = load i64, i64* %add.ptr1229, align 8, !dbg !12806
  %and1230 = and i64 %466, 16711680, !dbg !12806
  %shl1231 = shl i64 %and1230, 24, !dbg !12806
  %or1232 = or i64 %or1228, %shl1231, !dbg !12806
  %467 = load i8*, i8** %ctx, align 8, !dbg !12806
  %468 = bitcast i8* %467 to i64*, !dbg !12806
  %add.ptr1233 = getelementptr i64, i64* %468, i64 7, !dbg !12806
  %469 = load i64, i64* %add.ptr1233, align 8, !dbg !12806
  %and1234 = and i64 %469, 4278190080, !dbg !12806
  %shl1235 = shl i64 %and1234, 8, !dbg !12806
  %or1236 = or i64 %or1232, %shl1235, !dbg !12806
  %470 = load i8*, i8** %ctx, align 8, !dbg !12806
  %471 = bitcast i8* %470 to i64*, !dbg !12806
  %add.ptr1237 = getelementptr i64, i64* %471, i64 7, !dbg !12806
  %472 = load i64, i64* %add.ptr1237, align 8, !dbg !12806
  %and1238 = and i64 %472, 1095216660480, !dbg !12806
  %shr1239 = lshr i64 %and1238, 8, !dbg !12806
  %or1240 = or i64 %or1236, %shr1239, !dbg !12806
  %473 = load i8*, i8** %ctx, align 8, !dbg !12806
  %474 = bitcast i8* %473 to i64*, !dbg !12806
  %add.ptr1241 = getelementptr i64, i64* %474, i64 7, !dbg !12806
  %475 = load i64, i64* %add.ptr1241, align 8, !dbg !12806
  %and1242 = and i64 %475, 280375465082880, !dbg !12806
  %shr1243 = lshr i64 %and1242, 24, !dbg !12806
  %or1244 = or i64 %or1240, %shr1243, !dbg !12806
  %476 = load i8*, i8** %ctx, align 8, !dbg !12806
  %477 = bitcast i8* %476 to i64*, !dbg !12806
  %add.ptr1245 = getelementptr i64, i64* %477, i64 7, !dbg !12806
  %478 = load i64, i64* %add.ptr1245, align 8, !dbg !12806
  %and1246 = and i64 %478, 71776119061217280, !dbg !12806
  %shr1247 = lshr i64 %and1246, 40, !dbg !12806
  %or1248 = or i64 %or1244, %shr1247, !dbg !12806
  %479 = load i8*, i8** %ctx, align 8, !dbg !12806
  %480 = bitcast i8* %479 to i64*, !dbg !12806
  %add.ptr1249 = getelementptr i64, i64* %480, i64 7, !dbg !12806
  %481 = load i64, i64* %add.ptr1249, align 8, !dbg !12806
  %and1250 = and i64 %481, -72057594037927936, !dbg !12806
  %shr1251 = lshr i64 %and1250, 56, !dbg !12806
  %or1252 = or i64 %or1248, %shr1251, !dbg !12806
  br label %cond.end1256, !dbg !12806

cond.false1253:                                   ; preds = %cond.end1215
  %482 = load i8*, i8** %ctx, align 8, !dbg !12806
  %483 = bitcast i8* %482 to i64*, !dbg !12806
  %add.ptr1254 = getelementptr i64, i64* %483, i64 7, !dbg !12806
  %484 = load i64, i64* %add.ptr1254, align 8, !dbg !12806
  %call1255 = call i64 @__fswab64(i64 %484) #8, !dbg !12806
  br label %cond.end1256, !dbg !12806

cond.end1256:                                     ; preds = %cond.false1253, %cond.true1221
  %cond1257 = phi i64 [ %or1252, %cond.true1221 ], [ %call1255, %cond.false1253 ], !dbg !12806
  store i64 %cond1257, i64* %___t1219, align 8, !dbg !12806
  store i32 0, i32* %tmp1258, align 4, !dbg !12807
  %485 = load i32, i32* %tmp1258, align 4, !dbg !12810
  %486 = load i64, i64* %___t1219, align 8, !dbg !12806
  store i64 %486, i64* %tmp1259, align 8, !dbg !12806
  %487 = load i64, i64* %tmp1259, align 8, !dbg !12806
  %488 = load %struct.mlx5_hca_vport_context*, %struct.mlx5_hca_vport_context** %rep.addr, align 8, !dbg !12811
  %node_guid = getelementptr inbounds %struct.mlx5_hca_vport_context, %struct.mlx5_hca_vport_context* %488, i32 0, i32 10, !dbg !12812
  store i64 %487, i64* %node_guid, align 8, !dbg !12813
  call void @llvm.dbg.declare(metadata i32* %___t1260, metadata !12814, metadata !DIExpression()), !dbg !12816
  %489 = load i8*, i8** %ctx, align 8, !dbg !12816
  %490 = bitcast i8* %489 to i32*, !dbg !12816
  %add.ptr1261 = getelementptr i32, i32* %490, i64 16, !dbg !12816
  %491 = load i32, i32* %add.ptr1261, align 4, !dbg !12816
  %492 = call i1 @llvm.is.constant.i32(i32 %491), !dbg !12816
  br i1 %492, label %cond.true1262, label %cond.false1278, !dbg !12816

cond.true1262:                                    ; preds = %cond.end1256
  %493 = load i8*, i8** %ctx, align 8, !dbg !12816
  %494 = bitcast i8* %493 to i32*, !dbg !12816
  %add.ptr1263 = getelementptr i32, i32* %494, i64 16, !dbg !12816
  %495 = load i32, i32* %add.ptr1263, align 4, !dbg !12816
  %and1264 = and i32 %495, 255, !dbg !12816
  %shl1265 = shl i32 %and1264, 24, !dbg !12816
  %496 = load i8*, i8** %ctx, align 8, !dbg !12816
  %497 = bitcast i8* %496 to i32*, !dbg !12816
  %add.ptr1266 = getelementptr i32, i32* %497, i64 16, !dbg !12816
  %498 = load i32, i32* %add.ptr1266, align 4, !dbg !12816
  %and1267 = and i32 %498, 65280, !dbg !12816
  %shl1268 = shl i32 %and1267, 8, !dbg !12816
  %or1269 = or i32 %shl1265, %shl1268, !dbg !12816
  %499 = load i8*, i8** %ctx, align 8, !dbg !12816
  %500 = bitcast i8* %499 to i32*, !dbg !12816
  %add.ptr1270 = getelementptr i32, i32* %500, i64 16, !dbg !12816
  %501 = load i32, i32* %add.ptr1270, align 4, !dbg !12816
  %and1271 = and i32 %501, 16711680, !dbg !12816
  %shr1272 = lshr i32 %and1271, 8, !dbg !12816
  %or1273 = or i32 %or1269, %shr1272, !dbg !12816
  %502 = load i8*, i8** %ctx, align 8, !dbg !12816
  %503 = bitcast i8* %502 to i32*, !dbg !12816
  %add.ptr1274 = getelementptr i32, i32* %503, i64 16, !dbg !12816
  %504 = load i32, i32* %add.ptr1274, align 4, !dbg !12816
  %and1275 = and i32 %504, -16777216, !dbg !12816
  %shr1276 = lshr i32 %and1275, 24, !dbg !12816
  %or1277 = or i32 %or1273, %shr1276, !dbg !12816
  br label %cond.end1281, !dbg !12816

cond.false1278:                                   ; preds = %cond.end1256
  %505 = load i8*, i8** %ctx, align 8, !dbg !12816
  %506 = bitcast i8* %505 to i32*, !dbg !12816
  %add.ptr1279 = getelementptr i32, i32* %506, i64 16, !dbg !12816
  %507 = load i32, i32* %add.ptr1279, align 4, !dbg !12816
  %call1280 = call i32 @__fswab32(i32 %507) #8, !dbg !12816
  br label %cond.end1281, !dbg !12816

cond.end1281:                                     ; preds = %cond.false1278, %cond.true1262
  %cond1282 = phi i32 [ %or1277, %cond.true1262 ], [ %call1280, %cond.false1278 ], !dbg !12816
  %shr1283 = lshr i32 %cond1282, 0, !dbg !12816
  store i32 %shr1283, i32* %___t1260, align 4, !dbg !12816
  store i32 0, i32* %tmp1284, align 4, !dbg !12817
  %508 = load i32, i32* %tmp1284, align 4, !dbg !12820
  %509 = load i32, i32* %___t1260, align 4, !dbg !12816
  store i32 %509, i32* %tmp1285, align 4, !dbg !12816
  %510 = load i32, i32* %tmp1285, align 4, !dbg !12816
  %511 = load %struct.mlx5_hca_vport_context*, %struct.mlx5_hca_vport_context** %rep.addr, align 8, !dbg !12821
  %cap_mask1 = getelementptr inbounds %struct.mlx5_hca_vport_context, %struct.mlx5_hca_vport_context* %511, i32 0, i32 11, !dbg !12822
  store i32 %510, i32* %cap_mask1, align 8, !dbg !12823
  call void @llvm.dbg.declare(metadata i32* %___t1286, metadata !12824, metadata !DIExpression()), !dbg !12826
  %512 = load i8*, i8** %ctx, align 8, !dbg !12826
  %513 = bitcast i8* %512 to i32*, !dbg !12826
  %add.ptr1287 = getelementptr i32, i32* %513, i64 17, !dbg !12826
  %514 = load i32, i32* %add.ptr1287, align 4, !dbg !12826
  %515 = call i1 @llvm.is.constant.i32(i32 %514), !dbg !12826
  br i1 %515, label %cond.true1288, label %cond.false1304, !dbg !12826

cond.true1288:                                    ; preds = %cond.end1281
  %516 = load i8*, i8** %ctx, align 8, !dbg !12826
  %517 = bitcast i8* %516 to i32*, !dbg !12826
  %add.ptr1289 = getelementptr i32, i32* %517, i64 17, !dbg !12826
  %518 = load i32, i32* %add.ptr1289, align 4, !dbg !12826
  %and1290 = and i32 %518, 255, !dbg !12826
  %shl1291 = shl i32 %and1290, 24, !dbg !12826
  %519 = load i8*, i8** %ctx, align 8, !dbg !12826
  %520 = bitcast i8* %519 to i32*, !dbg !12826
  %add.ptr1292 = getelementptr i32, i32* %520, i64 17, !dbg !12826
  %521 = load i32, i32* %add.ptr1292, align 4, !dbg !12826
  %and1293 = and i32 %521, 65280, !dbg !12826
  %shl1294 = shl i32 %and1293, 8, !dbg !12826
  %or1295 = or i32 %shl1291, %shl1294, !dbg !12826
  %522 = load i8*, i8** %ctx, align 8, !dbg !12826
  %523 = bitcast i8* %522 to i32*, !dbg !12826
  %add.ptr1296 = getelementptr i32, i32* %523, i64 17, !dbg !12826
  %524 = load i32, i32* %add.ptr1296, align 4, !dbg !12826
  %and1297 = and i32 %524, 16711680, !dbg !12826
  %shr1298 = lshr i32 %and1297, 8, !dbg !12826
  %or1299 = or i32 %or1295, %shr1298, !dbg !12826
  %525 = load i8*, i8** %ctx, align 8, !dbg !12826
  %526 = bitcast i8* %525 to i32*, !dbg !12826
  %add.ptr1300 = getelementptr i32, i32* %526, i64 17, !dbg !12826
  %527 = load i32, i32* %add.ptr1300, align 4, !dbg !12826
  %and1301 = and i32 %527, -16777216, !dbg !12826
  %shr1302 = lshr i32 %and1301, 24, !dbg !12826
  %or1303 = or i32 %or1299, %shr1302, !dbg !12826
  br label %cond.end1307, !dbg !12826

cond.false1304:                                   ; preds = %cond.end1281
  %528 = load i8*, i8** %ctx, align 8, !dbg !12826
  %529 = bitcast i8* %528 to i32*, !dbg !12826
  %add.ptr1305 = getelementptr i32, i32* %529, i64 17, !dbg !12826
  %530 = load i32, i32* %add.ptr1305, align 4, !dbg !12826
  %call1306 = call i32 @__fswab32(i32 %530) #8, !dbg !12826
  br label %cond.end1307, !dbg !12826

cond.end1307:                                     ; preds = %cond.false1304, %cond.true1288
  %cond1308 = phi i32 [ %or1303, %cond.true1288 ], [ %call1306, %cond.false1304 ], !dbg !12826
  %shr1309 = lshr i32 %cond1308, 0, !dbg !12826
  store i32 %shr1309, i32* %___t1286, align 4, !dbg !12826
  store i32 0, i32* %tmp1310, align 4, !dbg !12827
  %531 = load i32, i32* %tmp1310, align 4, !dbg !12830
  %532 = load i32, i32* %___t1286, align 4, !dbg !12826
  store i32 %532, i32* %tmp1311, align 4, !dbg !12826
  %533 = load i32, i32* %tmp1311, align 4, !dbg !12826
  %534 = load %struct.mlx5_hca_vport_context*, %struct.mlx5_hca_vport_context** %rep.addr, align 8, !dbg !12831
  %cap_mask1_perm = getelementptr inbounds %struct.mlx5_hca_vport_context, %struct.mlx5_hca_vport_context* %534, i32 0, i32 12, !dbg !12832
  store i32 %533, i32* %cap_mask1_perm, align 4, !dbg !12833
  call void @llvm.dbg.declare(metadata i32* %___t1312, metadata !12834, metadata !DIExpression()), !dbg !12836
  %535 = load i8*, i8** %ctx, align 8, !dbg !12836
  %536 = bitcast i8* %535 to i32*, !dbg !12836
  %add.ptr1313 = getelementptr i32, i32* %536, i64 18, !dbg !12836
  %537 = load i32, i32* %add.ptr1313, align 4, !dbg !12836
  %538 = call i1 @llvm.is.constant.i32(i32 %537), !dbg !12836
  br i1 %538, label %cond.true1314, label %cond.false1330, !dbg !12836

cond.true1314:                                    ; preds = %cond.end1307
  %539 = load i8*, i8** %ctx, align 8, !dbg !12836
  %540 = bitcast i8* %539 to i32*, !dbg !12836
  %add.ptr1315 = getelementptr i32, i32* %540, i64 18, !dbg !12836
  %541 = load i32, i32* %add.ptr1315, align 4, !dbg !12836
  %and1316 = and i32 %541, 255, !dbg !12836
  %shl1317 = shl i32 %and1316, 24, !dbg !12836
  %542 = load i8*, i8** %ctx, align 8, !dbg !12836
  %543 = bitcast i8* %542 to i32*, !dbg !12836
  %add.ptr1318 = getelementptr i32, i32* %543, i64 18, !dbg !12836
  %544 = load i32, i32* %add.ptr1318, align 4, !dbg !12836
  %and1319 = and i32 %544, 65280, !dbg !12836
  %shl1320 = shl i32 %and1319, 8, !dbg !12836
  %or1321 = or i32 %shl1317, %shl1320, !dbg !12836
  %545 = load i8*, i8** %ctx, align 8, !dbg !12836
  %546 = bitcast i8* %545 to i32*, !dbg !12836
  %add.ptr1322 = getelementptr i32, i32* %546, i64 18, !dbg !12836
  %547 = load i32, i32* %add.ptr1322, align 4, !dbg !12836
  %and1323 = and i32 %547, 16711680, !dbg !12836
  %shr1324 = lshr i32 %and1323, 8, !dbg !12836
  %or1325 = or i32 %or1321, %shr1324, !dbg !12836
  %548 = load i8*, i8** %ctx, align 8, !dbg !12836
  %549 = bitcast i8* %548 to i32*, !dbg !12836
  %add.ptr1326 = getelementptr i32, i32* %549, i64 18, !dbg !12836
  %550 = load i32, i32* %add.ptr1326, align 4, !dbg !12836
  %and1327 = and i32 %550, -16777216, !dbg !12836
  %shr1328 = lshr i32 %and1327, 24, !dbg !12836
  %or1329 = or i32 %or1325, %shr1328, !dbg !12836
  br label %cond.end1333, !dbg !12836

cond.false1330:                                   ; preds = %cond.end1307
  %551 = load i8*, i8** %ctx, align 8, !dbg !12836
  %552 = bitcast i8* %551 to i32*, !dbg !12836
  %add.ptr1331 = getelementptr i32, i32* %552, i64 18, !dbg !12836
  %553 = load i32, i32* %add.ptr1331, align 4, !dbg !12836
  %call1332 = call i32 @__fswab32(i32 %553) #8, !dbg !12836
  br label %cond.end1333, !dbg !12836

cond.end1333:                                     ; preds = %cond.false1330, %cond.true1314
  %cond1334 = phi i32 [ %or1329, %cond.true1314 ], [ %call1332, %cond.false1330 ], !dbg !12836
  %shr1335 = lshr i32 %cond1334, 0, !dbg !12836
  store i32 %shr1335, i32* %___t1312, align 4, !dbg !12836
  store i32 0, i32* %tmp1336, align 4, !dbg !12837
  %554 = load i32, i32* %tmp1336, align 4, !dbg !12840
  %555 = load i32, i32* %___t1312, align 4, !dbg !12836
  store i32 %555, i32* %tmp1337, align 4, !dbg !12836
  %556 = load i32, i32* %tmp1337, align 4, !dbg !12836
  %conv1338 = trunc i32 %556 to i16, !dbg !12841
  %557 = load %struct.mlx5_hca_vport_context*, %struct.mlx5_hca_vport_context** %rep.addr, align 8, !dbg !12842
  %cap_mask2 = getelementptr inbounds %struct.mlx5_hca_vport_context, %struct.mlx5_hca_vport_context* %557, i32 0, i32 13, !dbg !12843
  store i16 %conv1338, i16* %cap_mask2, align 8, !dbg !12844
  call void @llvm.dbg.declare(metadata i32* %___t1339, metadata !12845, metadata !DIExpression()), !dbg !12847
  %558 = load i8*, i8** %ctx, align 8, !dbg !12847
  %559 = bitcast i8* %558 to i32*, !dbg !12847
  %add.ptr1340 = getelementptr i32, i32* %559, i64 19, !dbg !12847
  %560 = load i32, i32* %add.ptr1340, align 4, !dbg !12847
  %561 = call i1 @llvm.is.constant.i32(i32 %560), !dbg !12847
  br i1 %561, label %cond.true1341, label %cond.false1357, !dbg !12847

cond.true1341:                                    ; preds = %cond.end1333
  %562 = load i8*, i8** %ctx, align 8, !dbg !12847
  %563 = bitcast i8* %562 to i32*, !dbg !12847
  %add.ptr1342 = getelementptr i32, i32* %563, i64 19, !dbg !12847
  %564 = load i32, i32* %add.ptr1342, align 4, !dbg !12847
  %and1343 = and i32 %564, 255, !dbg !12847
  %shl1344 = shl i32 %and1343, 24, !dbg !12847
  %565 = load i8*, i8** %ctx, align 8, !dbg !12847
  %566 = bitcast i8* %565 to i32*, !dbg !12847
  %add.ptr1345 = getelementptr i32, i32* %566, i64 19, !dbg !12847
  %567 = load i32, i32* %add.ptr1345, align 4, !dbg !12847
  %and1346 = and i32 %567, 65280, !dbg !12847
  %shl1347 = shl i32 %and1346, 8, !dbg !12847
  %or1348 = or i32 %shl1344, %shl1347, !dbg !12847
  %568 = load i8*, i8** %ctx, align 8, !dbg !12847
  %569 = bitcast i8* %568 to i32*, !dbg !12847
  %add.ptr1349 = getelementptr i32, i32* %569, i64 19, !dbg !12847
  %570 = load i32, i32* %add.ptr1349, align 4, !dbg !12847
  %and1350 = and i32 %570, 16711680, !dbg !12847
  %shr1351 = lshr i32 %and1350, 8, !dbg !12847
  %or1352 = or i32 %or1348, %shr1351, !dbg !12847
  %571 = load i8*, i8** %ctx, align 8, !dbg !12847
  %572 = bitcast i8* %571 to i32*, !dbg !12847
  %add.ptr1353 = getelementptr i32, i32* %572, i64 19, !dbg !12847
  %573 = load i32, i32* %add.ptr1353, align 4, !dbg !12847
  %and1354 = and i32 %573, -16777216, !dbg !12847
  %shr1355 = lshr i32 %and1354, 24, !dbg !12847
  %or1356 = or i32 %or1352, %shr1355, !dbg !12847
  br label %cond.end1360, !dbg !12847

cond.false1357:                                   ; preds = %cond.end1333
  %574 = load i8*, i8** %ctx, align 8, !dbg !12847
  %575 = bitcast i8* %574 to i32*, !dbg !12847
  %add.ptr1358 = getelementptr i32, i32* %575, i64 19, !dbg !12847
  %576 = load i32, i32* %add.ptr1358, align 4, !dbg !12847
  %call1359 = call i32 @__fswab32(i32 %576) #8, !dbg !12847
  br label %cond.end1360, !dbg !12847

cond.end1360:                                     ; preds = %cond.false1357, %cond.true1341
  %cond1361 = phi i32 [ %or1356, %cond.true1341 ], [ %call1359, %cond.false1357 ], !dbg !12847
  %shr1362 = lshr i32 %cond1361, 0, !dbg !12847
  store i32 %shr1362, i32* %___t1339, align 4, !dbg !12847
  store i32 0, i32* %tmp1363, align 4, !dbg !12848
  %577 = load i32, i32* %tmp1363, align 4, !dbg !12851
  %578 = load i32, i32* %___t1339, align 4, !dbg !12847
  store i32 %578, i32* %tmp1364, align 4, !dbg !12847
  %579 = load i32, i32* %tmp1364, align 4, !dbg !12847
  %conv1365 = trunc i32 %579 to i16, !dbg !12852
  %580 = load %struct.mlx5_hca_vport_context*, %struct.mlx5_hca_vport_context** %rep.addr, align 8, !dbg !12853
  %cap_mask2_perm = getelementptr inbounds %struct.mlx5_hca_vport_context, %struct.mlx5_hca_vport_context* %580, i32 0, i32 14, !dbg !12854
  store i16 %conv1365, i16* %cap_mask2_perm, align 2, !dbg !12855
  call void @llvm.dbg.declare(metadata i32* %___t1366, metadata !12856, metadata !DIExpression()), !dbg !12858
  %581 = load i8*, i8** %ctx, align 8, !dbg !12858
  %582 = bitcast i8* %581 to i32*, !dbg !12858
  %add.ptr1367 = getelementptr i32, i32* %582, i64 24, !dbg !12858
  %583 = load i32, i32* %add.ptr1367, align 4, !dbg !12858
  %584 = call i1 @llvm.is.constant.i32(i32 %583), !dbg !12858
  br i1 %584, label %cond.true1368, label %cond.false1384, !dbg !12858

cond.true1368:                                    ; preds = %cond.end1360
  %585 = load i8*, i8** %ctx, align 8, !dbg !12858
  %586 = bitcast i8* %585 to i32*, !dbg !12858
  %add.ptr1369 = getelementptr i32, i32* %586, i64 24, !dbg !12858
  %587 = load i32, i32* %add.ptr1369, align 4, !dbg !12858
  %and1370 = and i32 %587, 255, !dbg !12858
  %shl1371 = shl i32 %and1370, 24, !dbg !12858
  %588 = load i8*, i8** %ctx, align 8, !dbg !12858
  %589 = bitcast i8* %588 to i32*, !dbg !12858
  %add.ptr1372 = getelementptr i32, i32* %589, i64 24, !dbg !12858
  %590 = load i32, i32* %add.ptr1372, align 4, !dbg !12858
  %and1373 = and i32 %590, 65280, !dbg !12858
  %shl1374 = shl i32 %and1373, 8, !dbg !12858
  %or1375 = or i32 %shl1371, %shl1374, !dbg !12858
  %591 = load i8*, i8** %ctx, align 8, !dbg !12858
  %592 = bitcast i8* %591 to i32*, !dbg !12858
  %add.ptr1376 = getelementptr i32, i32* %592, i64 24, !dbg !12858
  %593 = load i32, i32* %add.ptr1376, align 4, !dbg !12858
  %and1377 = and i32 %593, 16711680, !dbg !12858
  %shr1378 = lshr i32 %and1377, 8, !dbg !12858
  %or1379 = or i32 %or1375, %shr1378, !dbg !12858
  %594 = load i8*, i8** %ctx, align 8, !dbg !12858
  %595 = bitcast i8* %594 to i32*, !dbg !12858
  %add.ptr1380 = getelementptr i32, i32* %595, i64 24, !dbg !12858
  %596 = load i32, i32* %add.ptr1380, align 4, !dbg !12858
  %and1381 = and i32 %596, -16777216, !dbg !12858
  %shr1382 = lshr i32 %and1381, 24, !dbg !12858
  %or1383 = or i32 %or1379, %shr1382, !dbg !12858
  br label %cond.end1387, !dbg !12858

cond.false1384:                                   ; preds = %cond.end1360
  %597 = load i8*, i8** %ctx, align 8, !dbg !12858
  %598 = bitcast i8* %597 to i32*, !dbg !12858
  %add.ptr1385 = getelementptr i32, i32* %598, i64 24, !dbg !12858
  %599 = load i32, i32* %add.ptr1385, align 4, !dbg !12858
  %call1386 = call i32 @__fswab32(i32 %599) #8, !dbg !12858
  br label %cond.end1387, !dbg !12858

cond.end1387:                                     ; preds = %cond.false1384, %cond.true1368
  %cond1388 = phi i32 [ %or1383, %cond.true1368 ], [ %call1386, %cond.false1384 ], !dbg !12858
  %shr1389 = lshr i32 %cond1388, 16, !dbg !12858
  %and1390 = and i32 %shr1389, 65535, !dbg !12858
  store i32 %and1390, i32* %___t1366, align 4, !dbg !12858
  store i32 0, i32* %tmp1391, align 4, !dbg !12859
  %600 = load i32, i32* %tmp1391, align 4, !dbg !12862
  %601 = load i32, i32* %___t1366, align 4, !dbg !12858
  store i32 %601, i32* %tmp1392, align 4, !dbg !12858
  %602 = load i32, i32* %tmp1392, align 4, !dbg !12858
  %conv1393 = trunc i32 %602 to i16, !dbg !12863
  %603 = load %struct.mlx5_hca_vport_context*, %struct.mlx5_hca_vport_context** %rep.addr, align 8, !dbg !12864
  %lid = getelementptr inbounds %struct.mlx5_hca_vport_context, %struct.mlx5_hca_vport_context* %603, i32 0, i32 15, !dbg !12865
  store i16 %conv1393, i16* %lid, align 4, !dbg !12866
  call void @llvm.dbg.declare(metadata i32* %___t1394, metadata !12867, metadata !DIExpression()), !dbg !12869
  %604 = load i8*, i8** %ctx, align 8, !dbg !12869
  %605 = bitcast i8* %604 to i32*, !dbg !12869
  %add.ptr1395 = getelementptr i32, i32* %605, i64 24, !dbg !12869
  %606 = load i32, i32* %add.ptr1395, align 4, !dbg !12869
  %607 = call i1 @llvm.is.constant.i32(i32 %606), !dbg !12869
  br i1 %607, label %cond.true1396, label %cond.false1412, !dbg !12869

cond.true1396:                                    ; preds = %cond.end1387
  %608 = load i8*, i8** %ctx, align 8, !dbg !12869
  %609 = bitcast i8* %608 to i32*, !dbg !12869
  %add.ptr1397 = getelementptr i32, i32* %609, i64 24, !dbg !12869
  %610 = load i32, i32* %add.ptr1397, align 4, !dbg !12869
  %and1398 = and i32 %610, 255, !dbg !12869
  %shl1399 = shl i32 %and1398, 24, !dbg !12869
  %611 = load i8*, i8** %ctx, align 8, !dbg !12869
  %612 = bitcast i8* %611 to i32*, !dbg !12869
  %add.ptr1400 = getelementptr i32, i32* %612, i64 24, !dbg !12869
  %613 = load i32, i32* %add.ptr1400, align 4, !dbg !12869
  %and1401 = and i32 %613, 65280, !dbg !12869
  %shl1402 = shl i32 %and1401, 8, !dbg !12869
  %or1403 = or i32 %shl1399, %shl1402, !dbg !12869
  %614 = load i8*, i8** %ctx, align 8, !dbg !12869
  %615 = bitcast i8* %614 to i32*, !dbg !12869
  %add.ptr1404 = getelementptr i32, i32* %615, i64 24, !dbg !12869
  %616 = load i32, i32* %add.ptr1404, align 4, !dbg !12869
  %and1405 = and i32 %616, 16711680, !dbg !12869
  %shr1406 = lshr i32 %and1405, 8, !dbg !12869
  %or1407 = or i32 %or1403, %shr1406, !dbg !12869
  %617 = load i8*, i8** %ctx, align 8, !dbg !12869
  %618 = bitcast i8* %617 to i32*, !dbg !12869
  %add.ptr1408 = getelementptr i32, i32* %618, i64 24, !dbg !12869
  %619 = load i32, i32* %add.ptr1408, align 4, !dbg !12869
  %and1409 = and i32 %619, -16777216, !dbg !12869
  %shr1410 = lshr i32 %and1409, 24, !dbg !12869
  %or1411 = or i32 %or1407, %shr1410, !dbg !12869
  br label %cond.end1415, !dbg !12869

cond.false1412:                                   ; preds = %cond.end1387
  %620 = load i8*, i8** %ctx, align 8, !dbg !12869
  %621 = bitcast i8* %620 to i32*, !dbg !12869
  %add.ptr1413 = getelementptr i32, i32* %621, i64 24, !dbg !12869
  %622 = load i32, i32* %add.ptr1413, align 4, !dbg !12869
  %call1414 = call i32 @__fswab32(i32 %622) #8, !dbg !12869
  br label %cond.end1415, !dbg !12869

cond.end1415:                                     ; preds = %cond.false1412, %cond.true1396
  %cond1416 = phi i32 [ %or1411, %cond.true1396 ], [ %call1414, %cond.false1412 ], !dbg !12869
  %shr1417 = lshr i32 %cond1416, 8, !dbg !12869
  %and1418 = and i32 %shr1417, 15, !dbg !12869
  store i32 %and1418, i32* %___t1394, align 4, !dbg !12869
  store i32 0, i32* %tmp1419, align 4, !dbg !12870
  %623 = load i32, i32* %tmp1419, align 4, !dbg !12873
  %624 = load i32, i32* %___t1394, align 4, !dbg !12869
  store i32 %624, i32* %tmp1420, align 4, !dbg !12869
  %625 = load i32, i32* %tmp1420, align 4, !dbg !12869
  %conv1421 = trunc i32 %625 to i8, !dbg !12874
  %626 = load %struct.mlx5_hca_vport_context*, %struct.mlx5_hca_vport_context** %rep.addr, align 8, !dbg !12875
  %init_type_reply = getelementptr inbounds %struct.mlx5_hca_vport_context, %struct.mlx5_hca_vport_context* %626, i32 0, i32 16, !dbg !12876
  store i8 %conv1421, i8* %init_type_reply, align 2, !dbg !12877
  call void @llvm.dbg.declare(metadata i32* %___t1422, metadata !12878, metadata !DIExpression()), !dbg !12880
  %627 = load i8*, i8** %ctx, align 8, !dbg !12880
  %628 = bitcast i8* %627 to i32*, !dbg !12880
  %add.ptr1423 = getelementptr i32, i32* %628, i64 24, !dbg !12880
  %629 = load i32, i32* %add.ptr1423, align 4, !dbg !12880
  %630 = call i1 @llvm.is.constant.i32(i32 %629), !dbg !12880
  br i1 %630, label %cond.true1424, label %cond.false1440, !dbg !12880

cond.true1424:                                    ; preds = %cond.end1415
  %631 = load i8*, i8** %ctx, align 8, !dbg !12880
  %632 = bitcast i8* %631 to i32*, !dbg !12880
  %add.ptr1425 = getelementptr i32, i32* %632, i64 24, !dbg !12880
  %633 = load i32, i32* %add.ptr1425, align 4, !dbg !12880
  %and1426 = and i32 %633, 255, !dbg !12880
  %shl1427 = shl i32 %and1426, 24, !dbg !12880
  %634 = load i8*, i8** %ctx, align 8, !dbg !12880
  %635 = bitcast i8* %634 to i32*, !dbg !12880
  %add.ptr1428 = getelementptr i32, i32* %635, i64 24, !dbg !12880
  %636 = load i32, i32* %add.ptr1428, align 4, !dbg !12880
  %and1429 = and i32 %636, 65280, !dbg !12880
  %shl1430 = shl i32 %and1429, 8, !dbg !12880
  %or1431 = or i32 %shl1427, %shl1430, !dbg !12880
  %637 = load i8*, i8** %ctx, align 8, !dbg !12880
  %638 = bitcast i8* %637 to i32*, !dbg !12880
  %add.ptr1432 = getelementptr i32, i32* %638, i64 24, !dbg !12880
  %639 = load i32, i32* %add.ptr1432, align 4, !dbg !12880
  %and1433 = and i32 %639, 16711680, !dbg !12880
  %shr1434 = lshr i32 %and1433, 8, !dbg !12880
  %or1435 = or i32 %or1431, %shr1434, !dbg !12880
  %640 = load i8*, i8** %ctx, align 8, !dbg !12880
  %641 = bitcast i8* %640 to i32*, !dbg !12880
  %add.ptr1436 = getelementptr i32, i32* %641, i64 24, !dbg !12880
  %642 = load i32, i32* %add.ptr1436, align 4, !dbg !12880
  %and1437 = and i32 %642, -16777216, !dbg !12880
  %shr1438 = lshr i32 %and1437, 24, !dbg !12880
  %or1439 = or i32 %or1435, %shr1438, !dbg !12880
  br label %cond.end1443, !dbg !12880

cond.false1440:                                   ; preds = %cond.end1415
  %643 = load i8*, i8** %ctx, align 8, !dbg !12880
  %644 = bitcast i8* %643 to i32*, !dbg !12880
  %add.ptr1441 = getelementptr i32, i32* %644, i64 24, !dbg !12880
  %645 = load i32, i32* %add.ptr1441, align 4, !dbg !12880
  %call1442 = call i32 @__fswab32(i32 %645) #8, !dbg !12880
  br label %cond.end1443, !dbg !12880

cond.end1443:                                     ; preds = %cond.false1440, %cond.true1424
  %cond1444 = phi i32 [ %or1439, %cond.true1424 ], [ %call1442, %cond.false1440 ], !dbg !12880
  %shr1445 = lshr i32 %cond1444, 5, !dbg !12880
  %and1446 = and i32 %shr1445, 7, !dbg !12880
  store i32 %and1446, i32* %___t1422, align 4, !dbg !12880
  store i32 0, i32* %tmp1447, align 4, !dbg !12881
  %646 = load i32, i32* %tmp1447, align 4, !dbg !12884
  %647 = load i32, i32* %___t1422, align 4, !dbg !12880
  store i32 %647, i32* %tmp1448, align 4, !dbg !12880
  %648 = load i32, i32* %tmp1448, align 4, !dbg !12880
  %conv1449 = trunc i32 %648 to i8, !dbg !12885
  %649 = load %struct.mlx5_hca_vport_context*, %struct.mlx5_hca_vport_context** %rep.addr, align 8, !dbg !12886
  %lmc = getelementptr inbounds %struct.mlx5_hca_vport_context, %struct.mlx5_hca_vport_context* %649, i32 0, i32 17, !dbg !12887
  store i8 %conv1449, i8* %lmc, align 1, !dbg !12888
  call void @llvm.dbg.declare(metadata i32* %___t1450, metadata !12889, metadata !DIExpression()), !dbg !12891
  %650 = load i8*, i8** %ctx, align 8, !dbg !12891
  %651 = bitcast i8* %650 to i32*, !dbg !12891
  %add.ptr1451 = getelementptr i32, i32* %651, i64 24, !dbg !12891
  %652 = load i32, i32* %add.ptr1451, align 4, !dbg !12891
  %653 = call i1 @llvm.is.constant.i32(i32 %652), !dbg !12891
  br i1 %653, label %cond.true1452, label %cond.false1468, !dbg !12891

cond.true1452:                                    ; preds = %cond.end1443
  %654 = load i8*, i8** %ctx, align 8, !dbg !12891
  %655 = bitcast i8* %654 to i32*, !dbg !12891
  %add.ptr1453 = getelementptr i32, i32* %655, i64 24, !dbg !12891
  %656 = load i32, i32* %add.ptr1453, align 4, !dbg !12891
  %and1454 = and i32 %656, 255, !dbg !12891
  %shl1455 = shl i32 %and1454, 24, !dbg !12891
  %657 = load i8*, i8** %ctx, align 8, !dbg !12891
  %658 = bitcast i8* %657 to i32*, !dbg !12891
  %add.ptr1456 = getelementptr i32, i32* %658, i64 24, !dbg !12891
  %659 = load i32, i32* %add.ptr1456, align 4, !dbg !12891
  %and1457 = and i32 %659, 65280, !dbg !12891
  %shl1458 = shl i32 %and1457, 8, !dbg !12891
  %or1459 = or i32 %shl1455, %shl1458, !dbg !12891
  %660 = load i8*, i8** %ctx, align 8, !dbg !12891
  %661 = bitcast i8* %660 to i32*, !dbg !12891
  %add.ptr1460 = getelementptr i32, i32* %661, i64 24, !dbg !12891
  %662 = load i32, i32* %add.ptr1460, align 4, !dbg !12891
  %and1461 = and i32 %662, 16711680, !dbg !12891
  %shr1462 = lshr i32 %and1461, 8, !dbg !12891
  %or1463 = or i32 %or1459, %shr1462, !dbg !12891
  %663 = load i8*, i8** %ctx, align 8, !dbg !12891
  %664 = bitcast i8* %663 to i32*, !dbg !12891
  %add.ptr1464 = getelementptr i32, i32* %664, i64 24, !dbg !12891
  %665 = load i32, i32* %add.ptr1464, align 4, !dbg !12891
  %and1465 = and i32 %665, -16777216, !dbg !12891
  %shr1466 = lshr i32 %and1465, 24, !dbg !12891
  %or1467 = or i32 %or1463, %shr1466, !dbg !12891
  br label %cond.end1471, !dbg !12891

cond.false1468:                                   ; preds = %cond.end1443
  %666 = load i8*, i8** %ctx, align 8, !dbg !12891
  %667 = bitcast i8* %666 to i32*, !dbg !12891
  %add.ptr1469 = getelementptr i32, i32* %667, i64 24, !dbg !12891
  %668 = load i32, i32* %add.ptr1469, align 4, !dbg !12891
  %call1470 = call i32 @__fswab32(i32 %668) #8, !dbg !12891
  br label %cond.end1471, !dbg !12891

cond.end1471:                                     ; preds = %cond.false1468, %cond.true1452
  %cond1472 = phi i32 [ %or1467, %cond.true1452 ], [ %call1470, %cond.false1468 ], !dbg !12891
  %shr1473 = lshr i32 %cond1472, 0, !dbg !12891
  %and1474 = and i32 %shr1473, 31, !dbg !12891
  store i32 %and1474, i32* %___t1450, align 4, !dbg !12891
  store i32 0, i32* %tmp1475, align 4, !dbg !12892
  %669 = load i32, i32* %tmp1475, align 4, !dbg !12895
  %670 = load i32, i32* %___t1450, align 4, !dbg !12891
  store i32 %670, i32* %tmp1476, align 4, !dbg !12891
  %671 = load i32, i32* %tmp1476, align 4, !dbg !12891
  %conv1477 = trunc i32 %671 to i8, !dbg !12896
  %672 = load %struct.mlx5_hca_vport_context*, %struct.mlx5_hca_vport_context** %rep.addr, align 8, !dbg !12897
  %subnet_timeout = getelementptr inbounds %struct.mlx5_hca_vport_context, %struct.mlx5_hca_vport_context* %672, i32 0, i32 18, !dbg !12898
  store i8 %conv1477, i8* %subnet_timeout, align 8, !dbg !12899
  call void @llvm.dbg.declare(metadata i32* %___t1478, metadata !12900, metadata !DIExpression()), !dbg !12902
  %673 = load i8*, i8** %ctx, align 8, !dbg !12902
  %674 = bitcast i8* %673 to i32*, !dbg !12902
  %add.ptr1479 = getelementptr i32, i32* %674, i64 25, !dbg !12902
  %675 = load i32, i32* %add.ptr1479, align 4, !dbg !12902
  %676 = call i1 @llvm.is.constant.i32(i32 %675), !dbg !12902
  br i1 %676, label %cond.true1480, label %cond.false1496, !dbg !12902

cond.true1480:                                    ; preds = %cond.end1471
  %677 = load i8*, i8** %ctx, align 8, !dbg !12902
  %678 = bitcast i8* %677 to i32*, !dbg !12902
  %add.ptr1481 = getelementptr i32, i32* %678, i64 25, !dbg !12902
  %679 = load i32, i32* %add.ptr1481, align 4, !dbg !12902
  %and1482 = and i32 %679, 255, !dbg !12902
  %shl1483 = shl i32 %and1482, 24, !dbg !12902
  %680 = load i8*, i8** %ctx, align 8, !dbg !12902
  %681 = bitcast i8* %680 to i32*, !dbg !12902
  %add.ptr1484 = getelementptr i32, i32* %681, i64 25, !dbg !12902
  %682 = load i32, i32* %add.ptr1484, align 4, !dbg !12902
  %and1485 = and i32 %682, 65280, !dbg !12902
  %shl1486 = shl i32 %and1485, 8, !dbg !12902
  %or1487 = or i32 %shl1483, %shl1486, !dbg !12902
  %683 = load i8*, i8** %ctx, align 8, !dbg !12902
  %684 = bitcast i8* %683 to i32*, !dbg !12902
  %add.ptr1488 = getelementptr i32, i32* %684, i64 25, !dbg !12902
  %685 = load i32, i32* %add.ptr1488, align 4, !dbg !12902
  %and1489 = and i32 %685, 16711680, !dbg !12902
  %shr1490 = lshr i32 %and1489, 8, !dbg !12902
  %or1491 = or i32 %or1487, %shr1490, !dbg !12902
  %686 = load i8*, i8** %ctx, align 8, !dbg !12902
  %687 = bitcast i8* %686 to i32*, !dbg !12902
  %add.ptr1492 = getelementptr i32, i32* %687, i64 25, !dbg !12902
  %688 = load i32, i32* %add.ptr1492, align 4, !dbg !12902
  %and1493 = and i32 %688, -16777216, !dbg !12902
  %shr1494 = lshr i32 %and1493, 24, !dbg !12902
  %or1495 = or i32 %or1491, %shr1494, !dbg !12902
  br label %cond.end1499, !dbg !12902

cond.false1496:                                   ; preds = %cond.end1471
  %689 = load i8*, i8** %ctx, align 8, !dbg !12902
  %690 = bitcast i8* %689 to i32*, !dbg !12902
  %add.ptr1497 = getelementptr i32, i32* %690, i64 25, !dbg !12902
  %691 = load i32, i32* %add.ptr1497, align 4, !dbg !12902
  %call1498 = call i32 @__fswab32(i32 %691) #8, !dbg !12902
  br label %cond.end1499, !dbg !12902

cond.end1499:                                     ; preds = %cond.false1496, %cond.true1480
  %cond1500 = phi i32 [ %or1495, %cond.true1480 ], [ %call1498, %cond.false1496 ], !dbg !12902
  %shr1501 = lshr i32 %cond1500, 16, !dbg !12902
  %and1502 = and i32 %shr1501, 65535, !dbg !12902
  store i32 %and1502, i32* %___t1478, align 4, !dbg !12902
  store i32 0, i32* %tmp1503, align 4, !dbg !12903
  %692 = load i32, i32* %tmp1503, align 4, !dbg !12906
  %693 = load i32, i32* %___t1478, align 4, !dbg !12902
  store i32 %693, i32* %tmp1504, align 4, !dbg !12902
  %694 = load i32, i32* %tmp1504, align 4, !dbg !12902
  %conv1505 = trunc i32 %694 to i16, !dbg !12907
  %695 = load %struct.mlx5_hca_vport_context*, %struct.mlx5_hca_vport_context** %rep.addr, align 8, !dbg !12908
  %sm_lid = getelementptr inbounds %struct.mlx5_hca_vport_context, %struct.mlx5_hca_vport_context* %695, i32 0, i32 19, !dbg !12909
  store i16 %conv1505, i16* %sm_lid, align 2, !dbg !12910
  call void @llvm.dbg.declare(metadata i32* %___t1506, metadata !12911, metadata !DIExpression()), !dbg !12913
  %696 = load i8*, i8** %ctx, align 8, !dbg !12913
  %697 = bitcast i8* %696 to i32*, !dbg !12913
  %add.ptr1507 = getelementptr i32, i32* %697, i64 25, !dbg !12913
  %698 = load i32, i32* %add.ptr1507, align 4, !dbg !12913
  %699 = call i1 @llvm.is.constant.i32(i32 %698), !dbg !12913
  br i1 %699, label %cond.true1508, label %cond.false1524, !dbg !12913

cond.true1508:                                    ; preds = %cond.end1499
  %700 = load i8*, i8** %ctx, align 8, !dbg !12913
  %701 = bitcast i8* %700 to i32*, !dbg !12913
  %add.ptr1509 = getelementptr i32, i32* %701, i64 25, !dbg !12913
  %702 = load i32, i32* %add.ptr1509, align 4, !dbg !12913
  %and1510 = and i32 %702, 255, !dbg !12913
  %shl1511 = shl i32 %and1510, 24, !dbg !12913
  %703 = load i8*, i8** %ctx, align 8, !dbg !12913
  %704 = bitcast i8* %703 to i32*, !dbg !12913
  %add.ptr1512 = getelementptr i32, i32* %704, i64 25, !dbg !12913
  %705 = load i32, i32* %add.ptr1512, align 4, !dbg !12913
  %and1513 = and i32 %705, 65280, !dbg !12913
  %shl1514 = shl i32 %and1513, 8, !dbg !12913
  %or1515 = or i32 %shl1511, %shl1514, !dbg !12913
  %706 = load i8*, i8** %ctx, align 8, !dbg !12913
  %707 = bitcast i8* %706 to i32*, !dbg !12913
  %add.ptr1516 = getelementptr i32, i32* %707, i64 25, !dbg !12913
  %708 = load i32, i32* %add.ptr1516, align 4, !dbg !12913
  %and1517 = and i32 %708, 16711680, !dbg !12913
  %shr1518 = lshr i32 %and1517, 8, !dbg !12913
  %or1519 = or i32 %or1515, %shr1518, !dbg !12913
  %709 = load i8*, i8** %ctx, align 8, !dbg !12913
  %710 = bitcast i8* %709 to i32*, !dbg !12913
  %add.ptr1520 = getelementptr i32, i32* %710, i64 25, !dbg !12913
  %711 = load i32, i32* %add.ptr1520, align 4, !dbg !12913
  %and1521 = and i32 %711, -16777216, !dbg !12913
  %shr1522 = lshr i32 %and1521, 24, !dbg !12913
  %or1523 = or i32 %or1519, %shr1522, !dbg !12913
  br label %cond.end1527, !dbg !12913

cond.false1524:                                   ; preds = %cond.end1499
  %712 = load i8*, i8** %ctx, align 8, !dbg !12913
  %713 = bitcast i8* %712 to i32*, !dbg !12913
  %add.ptr1525 = getelementptr i32, i32* %713, i64 25, !dbg !12913
  %714 = load i32, i32* %add.ptr1525, align 4, !dbg !12913
  %call1526 = call i32 @__fswab32(i32 %714) #8, !dbg !12913
  br label %cond.end1527, !dbg !12913

cond.end1527:                                     ; preds = %cond.false1524, %cond.true1508
  %cond1528 = phi i32 [ %or1523, %cond.true1508 ], [ %call1526, %cond.false1524 ], !dbg !12913
  %shr1529 = lshr i32 %cond1528, 12, !dbg !12913
  %and1530 = and i32 %shr1529, 15, !dbg !12913
  store i32 %and1530, i32* %___t1506, align 4, !dbg !12913
  store i32 0, i32* %tmp1531, align 4, !dbg !12914
  %715 = load i32, i32* %tmp1531, align 4, !dbg !12917
  %716 = load i32, i32* %___t1506, align 4, !dbg !12913
  store i32 %716, i32* %tmp1532, align 4, !dbg !12913
  %717 = load i32, i32* %tmp1532, align 4, !dbg !12913
  %conv1533 = trunc i32 %717 to i8, !dbg !12918
  %718 = load %struct.mlx5_hca_vport_context*, %struct.mlx5_hca_vport_context** %rep.addr, align 8, !dbg !12919
  %sm_sl = getelementptr inbounds %struct.mlx5_hca_vport_context, %struct.mlx5_hca_vport_context* %718, i32 0, i32 20, !dbg !12920
  store i8 %conv1533, i8* %sm_sl, align 4, !dbg !12921
  call void @llvm.dbg.declare(metadata i32* %___t1534, metadata !12922, metadata !DIExpression()), !dbg !12924
  %719 = load i8*, i8** %ctx, align 8, !dbg !12924
  %720 = bitcast i8* %719 to i32*, !dbg !12924
  %add.ptr1535 = getelementptr i32, i32* %720, i64 26, !dbg !12924
  %721 = load i32, i32* %add.ptr1535, align 4, !dbg !12924
  %722 = call i1 @llvm.is.constant.i32(i32 %721), !dbg !12924
  br i1 %722, label %cond.true1536, label %cond.false1552, !dbg !12924

cond.true1536:                                    ; preds = %cond.end1527
  %723 = load i8*, i8** %ctx, align 8, !dbg !12924
  %724 = bitcast i8* %723 to i32*, !dbg !12924
  %add.ptr1537 = getelementptr i32, i32* %724, i64 26, !dbg !12924
  %725 = load i32, i32* %add.ptr1537, align 4, !dbg !12924
  %and1538 = and i32 %725, 255, !dbg !12924
  %shl1539 = shl i32 %and1538, 24, !dbg !12924
  %726 = load i8*, i8** %ctx, align 8, !dbg !12924
  %727 = bitcast i8* %726 to i32*, !dbg !12924
  %add.ptr1540 = getelementptr i32, i32* %727, i64 26, !dbg !12924
  %728 = load i32, i32* %add.ptr1540, align 4, !dbg !12924
  %and1541 = and i32 %728, 65280, !dbg !12924
  %shl1542 = shl i32 %and1541, 8, !dbg !12924
  %or1543 = or i32 %shl1539, %shl1542, !dbg !12924
  %729 = load i8*, i8** %ctx, align 8, !dbg !12924
  %730 = bitcast i8* %729 to i32*, !dbg !12924
  %add.ptr1544 = getelementptr i32, i32* %730, i64 26, !dbg !12924
  %731 = load i32, i32* %add.ptr1544, align 4, !dbg !12924
  %and1545 = and i32 %731, 16711680, !dbg !12924
  %shr1546 = lshr i32 %and1545, 8, !dbg !12924
  %or1547 = or i32 %or1543, %shr1546, !dbg !12924
  %732 = load i8*, i8** %ctx, align 8, !dbg !12924
  %733 = bitcast i8* %732 to i32*, !dbg !12924
  %add.ptr1548 = getelementptr i32, i32* %733, i64 26, !dbg !12924
  %734 = load i32, i32* %add.ptr1548, align 4, !dbg !12924
  %and1549 = and i32 %734, -16777216, !dbg !12924
  %shr1550 = lshr i32 %and1549, 24, !dbg !12924
  %or1551 = or i32 %or1547, %shr1550, !dbg !12924
  br label %cond.end1555, !dbg !12924

cond.false1552:                                   ; preds = %cond.end1527
  %735 = load i8*, i8** %ctx, align 8, !dbg !12924
  %736 = bitcast i8* %735 to i32*, !dbg !12924
  %add.ptr1553 = getelementptr i32, i32* %736, i64 26, !dbg !12924
  %737 = load i32, i32* %add.ptr1553, align 4, !dbg !12924
  %call1554 = call i32 @__fswab32(i32 %737) #8, !dbg !12924
  br label %cond.end1555, !dbg !12924

cond.end1555:                                     ; preds = %cond.false1552, %cond.true1536
  %cond1556 = phi i32 [ %or1551, %cond.true1536 ], [ %call1554, %cond.false1552 ], !dbg !12924
  %shr1557 = lshr i32 %cond1556, 16, !dbg !12924
  %and1558 = and i32 %shr1557, 65535, !dbg !12924
  store i32 %and1558, i32* %___t1534, align 4, !dbg !12924
  store i32 0, i32* %tmp1559, align 4, !dbg !12925
  %738 = load i32, i32* %tmp1559, align 4, !dbg !12928
  %739 = load i32, i32* %___t1534, align 4, !dbg !12924
  store i32 %739, i32* %tmp1560, align 4, !dbg !12924
  %740 = load i32, i32* %tmp1560, align 4, !dbg !12924
  %conv1561 = trunc i32 %740 to i16, !dbg !12929
  %741 = load %struct.mlx5_hca_vport_context*, %struct.mlx5_hca_vport_context** %rep.addr, align 8, !dbg !12930
  %qkey_violation_counter = getelementptr inbounds %struct.mlx5_hca_vport_context, %struct.mlx5_hca_vport_context* %741, i32 0, i32 21, !dbg !12931
  store i16 %conv1561, i16* %qkey_violation_counter, align 2, !dbg !12932
  call void @llvm.dbg.declare(metadata i32* %___t1562, metadata !12933, metadata !DIExpression()), !dbg !12935
  %742 = load i8*, i8** %ctx, align 8, !dbg !12935
  %743 = bitcast i8* %742 to i32*, !dbg !12935
  %add.ptr1563 = getelementptr i32, i32* %743, i64 26, !dbg !12935
  %744 = load i32, i32* %add.ptr1563, align 4, !dbg !12935
  %745 = call i1 @llvm.is.constant.i32(i32 %744), !dbg !12935
  br i1 %745, label %cond.true1564, label %cond.false1580, !dbg !12935

cond.true1564:                                    ; preds = %cond.end1555
  %746 = load i8*, i8** %ctx, align 8, !dbg !12935
  %747 = bitcast i8* %746 to i32*, !dbg !12935
  %add.ptr1565 = getelementptr i32, i32* %747, i64 26, !dbg !12935
  %748 = load i32, i32* %add.ptr1565, align 4, !dbg !12935
  %and1566 = and i32 %748, 255, !dbg !12935
  %shl1567 = shl i32 %and1566, 24, !dbg !12935
  %749 = load i8*, i8** %ctx, align 8, !dbg !12935
  %750 = bitcast i8* %749 to i32*, !dbg !12935
  %add.ptr1568 = getelementptr i32, i32* %750, i64 26, !dbg !12935
  %751 = load i32, i32* %add.ptr1568, align 4, !dbg !12935
  %and1569 = and i32 %751, 65280, !dbg !12935
  %shl1570 = shl i32 %and1569, 8, !dbg !12935
  %or1571 = or i32 %shl1567, %shl1570, !dbg !12935
  %752 = load i8*, i8** %ctx, align 8, !dbg !12935
  %753 = bitcast i8* %752 to i32*, !dbg !12935
  %add.ptr1572 = getelementptr i32, i32* %753, i64 26, !dbg !12935
  %754 = load i32, i32* %add.ptr1572, align 4, !dbg !12935
  %and1573 = and i32 %754, 16711680, !dbg !12935
  %shr1574 = lshr i32 %and1573, 8, !dbg !12935
  %or1575 = or i32 %or1571, %shr1574, !dbg !12935
  %755 = load i8*, i8** %ctx, align 8, !dbg !12935
  %756 = bitcast i8* %755 to i32*, !dbg !12935
  %add.ptr1576 = getelementptr i32, i32* %756, i64 26, !dbg !12935
  %757 = load i32, i32* %add.ptr1576, align 4, !dbg !12935
  %and1577 = and i32 %757, -16777216, !dbg !12935
  %shr1578 = lshr i32 %and1577, 24, !dbg !12935
  %or1579 = or i32 %or1575, %shr1578, !dbg !12935
  br label %cond.end1583, !dbg !12935

cond.false1580:                                   ; preds = %cond.end1555
  %758 = load i8*, i8** %ctx, align 8, !dbg !12935
  %759 = bitcast i8* %758 to i32*, !dbg !12935
  %add.ptr1581 = getelementptr i32, i32* %759, i64 26, !dbg !12935
  %760 = load i32, i32* %add.ptr1581, align 4, !dbg !12935
  %call1582 = call i32 @__fswab32(i32 %760) #8, !dbg !12935
  br label %cond.end1583, !dbg !12935

cond.end1583:                                     ; preds = %cond.false1580, %cond.true1564
  %cond1584 = phi i32 [ %or1579, %cond.true1564 ], [ %call1582, %cond.false1580 ], !dbg !12935
  %shr1585 = lshr i32 %cond1584, 0, !dbg !12935
  %and1586 = and i32 %shr1585, 65535, !dbg !12935
  store i32 %and1586, i32* %___t1562, align 4, !dbg !12935
  store i32 0, i32* %tmp1587, align 4, !dbg !12936
  %761 = load i32, i32* %tmp1587, align 4, !dbg !12939
  %762 = load i32, i32* %___t1562, align 4, !dbg !12935
  store i32 %762, i32* %tmp1588, align 4, !dbg !12935
  %763 = load i32, i32* %tmp1588, align 4, !dbg !12935
  %conv1589 = trunc i32 %763 to i16, !dbg !12940
  %764 = load %struct.mlx5_hca_vport_context*, %struct.mlx5_hca_vport_context** %rep.addr, align 8, !dbg !12941
  %pkey_violation_counter = getelementptr inbounds %struct.mlx5_hca_vport_context, %struct.mlx5_hca_vport_context* %764, i32 0, i32 22, !dbg !12942
  store i16 %conv1589, i16* %pkey_violation_counter, align 8, !dbg !12943
  call void @llvm.dbg.declare(metadata i32* %___t1590, metadata !12944, metadata !DIExpression()), !dbg !12946
  %765 = load i8*, i8** %ctx, align 8, !dbg !12946
  %766 = bitcast i8* %765 to i32*, !dbg !12946
  %add.ptr1591 = getelementptr i32, i32* %766, i64 8, !dbg !12946
  %767 = load i32, i32* %add.ptr1591, align 4, !dbg !12946
  %768 = call i1 @llvm.is.constant.i32(i32 %767), !dbg !12946
  br i1 %768, label %cond.true1592, label %cond.false1608, !dbg !12946

cond.true1592:                                    ; preds = %cond.end1583
  %769 = load i8*, i8** %ctx, align 8, !dbg !12946
  %770 = bitcast i8* %769 to i32*, !dbg !12946
  %add.ptr1593 = getelementptr i32, i32* %770, i64 8, !dbg !12946
  %771 = load i32, i32* %add.ptr1593, align 4, !dbg !12946
  %and1594 = and i32 %771, 255, !dbg !12946
  %shl1595 = shl i32 %and1594, 24, !dbg !12946
  %772 = load i8*, i8** %ctx, align 8, !dbg !12946
  %773 = bitcast i8* %772 to i32*, !dbg !12946
  %add.ptr1596 = getelementptr i32, i32* %773, i64 8, !dbg !12946
  %774 = load i32, i32* %add.ptr1596, align 4, !dbg !12946
  %and1597 = and i32 %774, 65280, !dbg !12946
  %shl1598 = shl i32 %and1597, 8, !dbg !12946
  %or1599 = or i32 %shl1595, %shl1598, !dbg !12946
  %775 = load i8*, i8** %ctx, align 8, !dbg !12946
  %776 = bitcast i8* %775 to i32*, !dbg !12946
  %add.ptr1600 = getelementptr i32, i32* %776, i64 8, !dbg !12946
  %777 = load i32, i32* %add.ptr1600, align 4, !dbg !12946
  %and1601 = and i32 %777, 16711680, !dbg !12946
  %shr1602 = lshr i32 %and1601, 8, !dbg !12946
  %or1603 = or i32 %or1599, %shr1602, !dbg !12946
  %778 = load i8*, i8** %ctx, align 8, !dbg !12946
  %779 = bitcast i8* %778 to i32*, !dbg !12946
  %add.ptr1604 = getelementptr i32, i32* %779, i64 8, !dbg !12946
  %780 = load i32, i32* %add.ptr1604, align 4, !dbg !12946
  %and1605 = and i32 %780, -16777216, !dbg !12946
  %shr1606 = lshr i32 %and1605, 24, !dbg !12946
  %or1607 = or i32 %or1603, %shr1606, !dbg !12946
  br label %cond.end1611, !dbg !12946

cond.false1608:                                   ; preds = %cond.end1583
  %781 = load i8*, i8** %ctx, align 8, !dbg !12946
  %782 = bitcast i8* %781 to i32*, !dbg !12946
  %add.ptr1609 = getelementptr i32, i32* %782, i64 8, !dbg !12946
  %783 = load i32, i32* %add.ptr1609, align 4, !dbg !12946
  %call1610 = call i32 @__fswab32(i32 %783) #8, !dbg !12946
  br label %cond.end1611, !dbg !12946

cond.end1611:                                     ; preds = %cond.false1608, %cond.true1592
  %cond1612 = phi i32 [ %or1607, %cond.true1592 ], [ %call1610, %cond.false1608 ], !dbg !12946
  %shr1613 = lshr i32 %cond1612, 28, !dbg !12946
  %and1614 = and i32 %shr1613, 1, !dbg !12946
  store i32 %and1614, i32* %___t1590, align 4, !dbg !12946
  store i32 0, i32* %tmp1615, align 4, !dbg !12947
  %784 = load i32, i32* %tmp1615, align 4, !dbg !12950
  %785 = load i32, i32* %___t1590, align 4, !dbg !12946
  store i32 %785, i32* %tmp1616, align 4, !dbg !12946
  %786 = load i32, i32* %tmp1616, align 4, !dbg !12946
  %tobool1617 = icmp ne i32 %786, 0, !dbg !12951
  %787 = load %struct.mlx5_hca_vport_context*, %struct.mlx5_hca_vport_context** %rep.addr, align 8, !dbg !12952
  %grh_required = getelementptr inbounds %struct.mlx5_hca_vport_context, %struct.mlx5_hca_vport_context* %787, i32 0, i32 23, !dbg !12953
  %frombool1618 = zext i1 %tobool1617 to i8, !dbg !12954
  store i8 %frombool1618, i8* %grh_required, align 2, !dbg !12954
  call void @llvm.dbg.declare(metadata i64* %___t1619, metadata !12955, metadata !DIExpression()), !dbg !12957
  %788 = load i8*, i8** %ctx, align 8, !dbg !12957
  %789 = bitcast i8* %788 to i64*, !dbg !12957
  %add.ptr1620 = getelementptr i64, i64* %789, i64 5, !dbg !12957
  %790 = load i64, i64* %add.ptr1620, align 8, !dbg !12957
  %791 = call i1 @llvm.is.constant.i64(i64 %790), !dbg !12957
  br i1 %791, label %cond.true1621, label %cond.false1653, !dbg !12957

cond.true1621:                                    ; preds = %cond.end1611
  %792 = load i8*, i8** %ctx, align 8, !dbg !12957
  %793 = bitcast i8* %792 to i64*, !dbg !12957
  %add.ptr1622 = getelementptr i64, i64* %793, i64 5, !dbg !12957
  %794 = load i64, i64* %add.ptr1622, align 8, !dbg !12957
  %and1623 = and i64 %794, 255, !dbg !12957
  %shl1624 = shl i64 %and1623, 56, !dbg !12957
  %795 = load i8*, i8** %ctx, align 8, !dbg !12957
  %796 = bitcast i8* %795 to i64*, !dbg !12957
  %add.ptr1625 = getelementptr i64, i64* %796, i64 5, !dbg !12957
  %797 = load i64, i64* %add.ptr1625, align 8, !dbg !12957
  %and1626 = and i64 %797, 65280, !dbg !12957
  %shl1627 = shl i64 %and1626, 40, !dbg !12957
  %or1628 = or i64 %shl1624, %shl1627, !dbg !12957
  %798 = load i8*, i8** %ctx, align 8, !dbg !12957
  %799 = bitcast i8* %798 to i64*, !dbg !12957
  %add.ptr1629 = getelementptr i64, i64* %799, i64 5, !dbg !12957
  %800 = load i64, i64* %add.ptr1629, align 8, !dbg !12957
  %and1630 = and i64 %800, 16711680, !dbg !12957
  %shl1631 = shl i64 %and1630, 24, !dbg !12957
  %or1632 = or i64 %or1628, %shl1631, !dbg !12957
  %801 = load i8*, i8** %ctx, align 8, !dbg !12957
  %802 = bitcast i8* %801 to i64*, !dbg !12957
  %add.ptr1633 = getelementptr i64, i64* %802, i64 5, !dbg !12957
  %803 = load i64, i64* %add.ptr1633, align 8, !dbg !12957
  %and1634 = and i64 %803, 4278190080, !dbg !12957
  %shl1635 = shl i64 %and1634, 8, !dbg !12957
  %or1636 = or i64 %or1632, %shl1635, !dbg !12957
  %804 = load i8*, i8** %ctx, align 8, !dbg !12957
  %805 = bitcast i8* %804 to i64*, !dbg !12957
  %add.ptr1637 = getelementptr i64, i64* %805, i64 5, !dbg !12957
  %806 = load i64, i64* %add.ptr1637, align 8, !dbg !12957
  %and1638 = and i64 %806, 1095216660480, !dbg !12957
  %shr1639 = lshr i64 %and1638, 8, !dbg !12957
  %or1640 = or i64 %or1636, %shr1639, !dbg !12957
  %807 = load i8*, i8** %ctx, align 8, !dbg !12957
  %808 = bitcast i8* %807 to i64*, !dbg !12957
  %add.ptr1641 = getelementptr i64, i64* %808, i64 5, !dbg !12957
  %809 = load i64, i64* %add.ptr1641, align 8, !dbg !12957
  %and1642 = and i64 %809, 280375465082880, !dbg !12957
  %shr1643 = lshr i64 %and1642, 24, !dbg !12957
  %or1644 = or i64 %or1640, %shr1643, !dbg !12957
  %810 = load i8*, i8** %ctx, align 8, !dbg !12957
  %811 = bitcast i8* %810 to i64*, !dbg !12957
  %add.ptr1645 = getelementptr i64, i64* %811, i64 5, !dbg !12957
  %812 = load i64, i64* %add.ptr1645, align 8, !dbg !12957
  %and1646 = and i64 %812, 71776119061217280, !dbg !12957
  %shr1647 = lshr i64 %and1646, 40, !dbg !12957
  %or1648 = or i64 %or1644, %shr1647, !dbg !12957
  %813 = load i8*, i8** %ctx, align 8, !dbg !12957
  %814 = bitcast i8* %813 to i64*, !dbg !12957
  %add.ptr1649 = getelementptr i64, i64* %814, i64 5, !dbg !12957
  %815 = load i64, i64* %add.ptr1649, align 8, !dbg !12957
  %and1650 = and i64 %815, -72057594037927936, !dbg !12957
  %shr1651 = lshr i64 %and1650, 56, !dbg !12957
  %or1652 = or i64 %or1648, %shr1651, !dbg !12957
  br label %cond.end1656, !dbg !12957

cond.false1653:                                   ; preds = %cond.end1611
  %816 = load i8*, i8** %ctx, align 8, !dbg !12957
  %817 = bitcast i8* %816 to i64*, !dbg !12957
  %add.ptr1654 = getelementptr i64, i64* %817, i64 5, !dbg !12957
  %818 = load i64, i64* %add.ptr1654, align 8, !dbg !12957
  %call1655 = call i64 @__fswab64(i64 %818) #8, !dbg !12957
  br label %cond.end1656, !dbg !12957

cond.end1656:                                     ; preds = %cond.false1653, %cond.true1621
  %cond1657 = phi i64 [ %or1652, %cond.true1621 ], [ %call1655, %cond.false1653 ], !dbg !12957
  store i64 %cond1657, i64* %___t1619, align 8, !dbg !12957
  store i32 0, i32* %tmp1658, align 4, !dbg !12958
  %819 = load i32, i32* %tmp1658, align 4, !dbg !12961
  %820 = load i64, i64* %___t1619, align 8, !dbg !12957
  store i64 %820, i64* %tmp1659, align 8, !dbg !12957
  %821 = load i64, i64* %tmp1659, align 8, !dbg !12957
  %822 = load %struct.mlx5_hca_vport_context*, %struct.mlx5_hca_vport_context** %rep.addr, align 8, !dbg !12962
  %sys_image_guid = getelementptr inbounds %struct.mlx5_hca_vport_context, %struct.mlx5_hca_vport_context* %822, i32 0, i32 8, !dbg !12963
  store i64 %821, i64* %sys_image_guid, align 8, !dbg !12964
  br label %ex, !dbg !12962

ex:                                               ; preds = %cond.end1656, %if.then955, %if.else
  call void @llvm.dbg.label(metadata !12965), !dbg !12966
  %823 = load i8*, i8** %out, align 8, !dbg !12967
  call void @kfree(i8* %823) #9, !dbg !12968
  %824 = load i32, i32* %err, align 4, !dbg !12969
  store i32 %824, i32* %retval, align 4, !dbg !12970
  br label %return, !dbg !12970

return:                                           ; preds = %ex, %if.then
  %825 = load i32, i32* %retval, align 4, !dbg !12971
  ret i32 %825, !dbg !12971
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @mlx5_query_hca_vport_system_image_guid(%struct.mlx5_core_dev* %dev, i64* %sys_image_guid) #0 !dbg !12972 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.mlx5_core_dev*, align 8
  %sys_image_guid.addr = alloca i64*, align 8
  %rep = alloca %struct.mlx5_hca_vport_context*, align 8
  %err = alloca i32, align 4
  store %struct.mlx5_core_dev* %dev, %struct.mlx5_core_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_core_dev** %dev.addr, metadata !12973, metadata !DIExpression()), !dbg !12974
  store i64* %sys_image_guid, i64** %sys_image_guid.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %sys_image_guid.addr, metadata !12975, metadata !DIExpression()), !dbg !12976
  call void @llvm.dbg.declare(metadata %struct.mlx5_hca_vport_context** %rep, metadata !12977, metadata !DIExpression()), !dbg !12978
  call void @llvm.dbg.declare(metadata i32* %err, metadata !12979, metadata !DIExpression()), !dbg !12980
  %call = call i8* @kzalloc(i64 80, i32 3264) #9, !dbg !12981
  %0 = bitcast i8* %call to %struct.mlx5_hca_vport_context*, !dbg !12981
  store %struct.mlx5_hca_vport_context* %0, %struct.mlx5_hca_vport_context** %rep, align 8, !dbg !12982
  %1 = load %struct.mlx5_hca_vport_context*, %struct.mlx5_hca_vport_context** %rep, align 8, !dbg !12983
  %tobool = icmp ne %struct.mlx5_hca_vport_context* %1, null, !dbg !12983
  br i1 %tobool, label %if.end, label %if.then, !dbg !12985

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !12986
  br label %return, !dbg !12986

if.end:                                           ; preds = %entry
  %2 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !12987
  %3 = load %struct.mlx5_hca_vport_context*, %struct.mlx5_hca_vport_context** %rep, align 8, !dbg !12988
  %call1 = call i32 @mlx5_query_hca_vport_context(%struct.mlx5_core_dev* %2, i8 zeroext 0, i8 zeroext 1, i16 zeroext 0, %struct.mlx5_hca_vport_context* %3) #9, !dbg !12989
  store i32 %call1, i32* %err, align 4, !dbg !12990
  %4 = load i32, i32* %err, align 4, !dbg !12991
  %tobool2 = icmp ne i32 %4, 0, !dbg !12991
  br i1 %tobool2, label %if.end5, label %if.then3, !dbg !12993

if.then3:                                         ; preds = %if.end
  %5 = load %struct.mlx5_hca_vport_context*, %struct.mlx5_hca_vport_context** %rep, align 8, !dbg !12994
  %sys_image_guid4 = getelementptr inbounds %struct.mlx5_hca_vport_context, %struct.mlx5_hca_vport_context* %5, i32 0, i32 8, !dbg !12995
  %6 = load i64, i64* %sys_image_guid4, align 8, !dbg !12995
  %7 = load i64*, i64** %sys_image_guid.addr, align 8, !dbg !12996
  store i64 %6, i64* %7, align 8, !dbg !12997
  br label %if.end5, !dbg !12998

if.end5:                                          ; preds = %if.then3, %if.end
  %8 = load %struct.mlx5_hca_vport_context*, %struct.mlx5_hca_vport_context** %rep, align 8, !dbg !12999
  %9 = bitcast %struct.mlx5_hca_vport_context* %8 to i8*, !dbg !12999
  call void @kfree(i8* %9) #9, !dbg !13000
  %10 = load i32, i32* %err, align 4, !dbg !13001
  store i32 %10, i32* %retval, align 4, !dbg !13002
  br label %return, !dbg !13002

return:                                           ; preds = %if.end5, %if.then
  %11 = load i32, i32* %retval, align 4, !dbg !13003
  ret i32 %11, !dbg !13003
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @mlx5_query_hca_vport_node_guid(%struct.mlx5_core_dev* %dev, i64* %node_guid) #0 !dbg !13004 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.mlx5_core_dev*, align 8
  %node_guid.addr = alloca i64*, align 8
  %rep = alloca %struct.mlx5_hca_vport_context*, align 8
  %err = alloca i32, align 4
  store %struct.mlx5_core_dev* %dev, %struct.mlx5_core_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_core_dev** %dev.addr, metadata !13005, metadata !DIExpression()), !dbg !13006
  store i64* %node_guid, i64** %node_guid.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %node_guid.addr, metadata !13007, metadata !DIExpression()), !dbg !13008
  call void @llvm.dbg.declare(metadata %struct.mlx5_hca_vport_context** %rep, metadata !13009, metadata !DIExpression()), !dbg !13010
  call void @llvm.dbg.declare(metadata i32* %err, metadata !13011, metadata !DIExpression()), !dbg !13012
  %call = call i8* @kzalloc(i64 80, i32 3264) #9, !dbg !13013
  %0 = bitcast i8* %call to %struct.mlx5_hca_vport_context*, !dbg !13013
  store %struct.mlx5_hca_vport_context* %0, %struct.mlx5_hca_vport_context** %rep, align 8, !dbg !13014
  %1 = load %struct.mlx5_hca_vport_context*, %struct.mlx5_hca_vport_context** %rep, align 8, !dbg !13015
  %tobool = icmp ne %struct.mlx5_hca_vport_context* %1, null, !dbg !13015
  br i1 %tobool, label %if.end, label %if.then, !dbg !13017

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !13018
  br label %return, !dbg !13018

if.end:                                           ; preds = %entry
  %2 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !13019
  %3 = load %struct.mlx5_hca_vport_context*, %struct.mlx5_hca_vport_context** %rep, align 8, !dbg !13020
  %call1 = call i32 @mlx5_query_hca_vport_context(%struct.mlx5_core_dev* %2, i8 zeroext 0, i8 zeroext 1, i16 zeroext 0, %struct.mlx5_hca_vport_context* %3) #9, !dbg !13021
  store i32 %call1, i32* %err, align 4, !dbg !13022
  %4 = load i32, i32* %err, align 4, !dbg !13023
  %tobool2 = icmp ne i32 %4, 0, !dbg !13023
  br i1 %tobool2, label %if.end5, label %if.then3, !dbg !13025

if.then3:                                         ; preds = %if.end
  %5 = load %struct.mlx5_hca_vport_context*, %struct.mlx5_hca_vport_context** %rep, align 8, !dbg !13026
  %node_guid4 = getelementptr inbounds %struct.mlx5_hca_vport_context, %struct.mlx5_hca_vport_context* %5, i32 0, i32 10, !dbg !13027
  %6 = load i64, i64* %node_guid4, align 8, !dbg !13027
  %7 = load i64*, i64** %node_guid.addr, align 8, !dbg !13028
  store i64 %6, i64* %7, align 8, !dbg !13029
  br label %if.end5, !dbg !13030

if.end5:                                          ; preds = %if.then3, %if.end
  %8 = load %struct.mlx5_hca_vport_context*, %struct.mlx5_hca_vport_context** %rep, align 8, !dbg !13031
  %9 = bitcast %struct.mlx5_hca_vport_context* %8 to i8*, !dbg !13031
  call void @kfree(i8* %9) #9, !dbg !13032
  %10 = load i32, i32* %err, align 4, !dbg !13033
  store i32 %10, i32* %retval, align 4, !dbg !13034
  br label %return, !dbg !13034

return:                                           ; preds = %if.end5, %if.then
  %11 = load i32, i32* %retval, align 4, !dbg !13035
  ret i32 %11, !dbg !13035
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @mlx5_query_nic_vport_promisc(%struct.mlx5_core_dev* %mdev, i16 zeroext %vport, i32* %promisc_uc, i32* %promisc_mc, i32* %promisc_all) #0 !dbg !13036 {
entry:
  %retval = alloca i32, align 4
  %mdev.addr = alloca %struct.mlx5_core_dev*, align 8
  %vport.addr = alloca i16, align 2
  %promisc_uc.addr = alloca i32*, align 8
  %promisc_mc.addr = alloca i32*, align 8
  %promisc_all.addr = alloca i32*, align 8
  %out = alloca i32*, align 8
  %outlen = alloca i32, align 4
  %err = alloca i32, align 4
  store %struct.mlx5_core_dev* %mdev, %struct.mlx5_core_dev** %mdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_core_dev** %mdev.addr, metadata !13039, metadata !DIExpression()), !dbg !13040
  store i16 %vport, i16* %vport.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %vport.addr, metadata !13041, metadata !DIExpression()), !dbg !13042
  store i32* %promisc_uc, i32** %promisc_uc.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %promisc_uc.addr, metadata !13043, metadata !DIExpression()), !dbg !13044
  store i32* %promisc_mc, i32** %promisc_mc.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %promisc_mc.addr, metadata !13045, metadata !DIExpression()), !dbg !13046
  store i32* %promisc_all, i32** %promisc_all.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %promisc_all.addr, metadata !13047, metadata !DIExpression()), !dbg !13048
  call void @llvm.dbg.declare(metadata i32** %out, metadata !13049, metadata !DIExpression()), !dbg !13050
  call void @llvm.dbg.declare(metadata i32* %outlen, metadata !13051, metadata !DIExpression()), !dbg !13052
  store i32 272, i32* %outlen, align 4, !dbg !13052
  call void @llvm.dbg.declare(metadata i32* %err, metadata !13053, metadata !DIExpression()), !dbg !13054
  %0 = load i32, i32* %outlen, align 4, !dbg !13055
  %conv = sext i32 %0 to i64, !dbg !13055
  %call = call i8* @kzalloc(i64 %conv, i32 3264) #9, !dbg !13056
  %1 = bitcast i8* %call to i32*, !dbg !13056
  store i32* %1, i32** %out, align 8, !dbg !13057
  %2 = load i32*, i32** %out, align 8, !dbg !13058
  %tobool = icmp ne i32* %2, null, !dbg !13058
  br i1 %tobool, label %if.end, label %if.then, !dbg !13060

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !13061
  br label %return, !dbg !13061

if.end:                                           ; preds = %entry
  %3 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %mdev.addr, align 8, !dbg !13062
  %4 = load i16, i16* %vport.addr, align 2, !dbg !13063
  %5 = load i32*, i32** %out, align 8, !dbg !13064
  %call1 = call i32 @mlx5_query_nic_vport_context(%struct.mlx5_core_dev* %3, i16 zeroext %4, i32* %5) #9, !dbg !13065
  store i32 %call1, i32* %err, align 4, !dbg !13066
  %6 = load i32, i32* %err, align 4, !dbg !13067
  %tobool2 = icmp ne i32 %6, 0, !dbg !13067
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !13069

if.then3:                                         ; preds = %if.end
  br label %out68, !dbg !13070

if.end4:                                          ; preds = %if.end
  %7 = load i32*, i32** %out, align 8, !dbg !13071
  %add.ptr = getelementptr i32, i32* %7, i64 64, !dbg !13071
  %8 = load i32, i32* %add.ptr, align 4, !dbg !13071
  %9 = call i1 @llvm.is.constant.i32(i32 %8), !dbg !13071
  br i1 %9, label %cond.true, label %cond.false, !dbg !13071

cond.true:                                        ; preds = %if.end4
  %10 = load i32*, i32** %out, align 8, !dbg !13071
  %add.ptr5 = getelementptr i32, i32* %10, i64 64, !dbg !13071
  %11 = load i32, i32* %add.ptr5, align 4, !dbg !13071
  %and = and i32 %11, 255, !dbg !13071
  %shl = shl i32 %and, 24, !dbg !13071
  %12 = load i32*, i32** %out, align 8, !dbg !13071
  %add.ptr6 = getelementptr i32, i32* %12, i64 64, !dbg !13071
  %13 = load i32, i32* %add.ptr6, align 4, !dbg !13071
  %and7 = and i32 %13, 65280, !dbg !13071
  %shl8 = shl i32 %and7, 8, !dbg !13071
  %or = or i32 %shl, %shl8, !dbg !13071
  %14 = load i32*, i32** %out, align 8, !dbg !13071
  %add.ptr9 = getelementptr i32, i32* %14, i64 64, !dbg !13071
  %15 = load i32, i32* %add.ptr9, align 4, !dbg !13071
  %and10 = and i32 %15, 16711680, !dbg !13071
  %shr = lshr i32 %and10, 8, !dbg !13071
  %or11 = or i32 %or, %shr, !dbg !13071
  %16 = load i32*, i32** %out, align 8, !dbg !13071
  %add.ptr12 = getelementptr i32, i32* %16, i64 64, !dbg !13071
  %17 = load i32, i32* %add.ptr12, align 4, !dbg !13071
  %and13 = and i32 %17, -16777216, !dbg !13071
  %shr14 = lshr i32 %and13, 24, !dbg !13071
  %or15 = or i32 %or11, %shr14, !dbg !13071
  br label %cond.end, !dbg !13071

cond.false:                                       ; preds = %if.end4
  %18 = load i32*, i32** %out, align 8, !dbg !13071
  %add.ptr16 = getelementptr i32, i32* %18, i64 64, !dbg !13071
  %19 = load i32, i32* %add.ptr16, align 4, !dbg !13071
  %call17 = call i32 @__fswab32(i32 %19) #8, !dbg !13071
  br label %cond.end, !dbg !13071

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %or15, %cond.true ], [ %call17, %cond.false ], !dbg !13071
  %shr18 = lshr i32 %cond, 31, !dbg !13071
  %and19 = and i32 %shr18, 1, !dbg !13071
  %20 = load i32*, i32** %promisc_uc.addr, align 8, !dbg !13072
  store i32 %and19, i32* %20, align 4, !dbg !13073
  %21 = load i32*, i32** %out, align 8, !dbg !13074
  %add.ptr20 = getelementptr i32, i32* %21, i64 64, !dbg !13074
  %22 = load i32, i32* %add.ptr20, align 4, !dbg !13074
  %23 = call i1 @llvm.is.constant.i32(i32 %22), !dbg !13074
  br i1 %23, label %cond.true21, label %cond.false37, !dbg !13074

cond.true21:                                      ; preds = %cond.end
  %24 = load i32*, i32** %out, align 8, !dbg !13074
  %add.ptr22 = getelementptr i32, i32* %24, i64 64, !dbg !13074
  %25 = load i32, i32* %add.ptr22, align 4, !dbg !13074
  %and23 = and i32 %25, 255, !dbg !13074
  %shl24 = shl i32 %and23, 24, !dbg !13074
  %26 = load i32*, i32** %out, align 8, !dbg !13074
  %add.ptr25 = getelementptr i32, i32* %26, i64 64, !dbg !13074
  %27 = load i32, i32* %add.ptr25, align 4, !dbg !13074
  %and26 = and i32 %27, 65280, !dbg !13074
  %shl27 = shl i32 %and26, 8, !dbg !13074
  %or28 = or i32 %shl24, %shl27, !dbg !13074
  %28 = load i32*, i32** %out, align 8, !dbg !13074
  %add.ptr29 = getelementptr i32, i32* %28, i64 64, !dbg !13074
  %29 = load i32, i32* %add.ptr29, align 4, !dbg !13074
  %and30 = and i32 %29, 16711680, !dbg !13074
  %shr31 = lshr i32 %and30, 8, !dbg !13074
  %or32 = or i32 %or28, %shr31, !dbg !13074
  %30 = load i32*, i32** %out, align 8, !dbg !13074
  %add.ptr33 = getelementptr i32, i32* %30, i64 64, !dbg !13074
  %31 = load i32, i32* %add.ptr33, align 4, !dbg !13074
  %and34 = and i32 %31, -16777216, !dbg !13074
  %shr35 = lshr i32 %and34, 24, !dbg !13074
  %or36 = or i32 %or32, %shr35, !dbg !13074
  br label %cond.end40, !dbg !13074

cond.false37:                                     ; preds = %cond.end
  %32 = load i32*, i32** %out, align 8, !dbg !13074
  %add.ptr38 = getelementptr i32, i32* %32, i64 64, !dbg !13074
  %33 = load i32, i32* %add.ptr38, align 4, !dbg !13074
  %call39 = call i32 @__fswab32(i32 %33) #8, !dbg !13074
  br label %cond.end40, !dbg !13074

cond.end40:                                       ; preds = %cond.false37, %cond.true21
  %cond41 = phi i32 [ %or36, %cond.true21 ], [ %call39, %cond.false37 ], !dbg !13074
  %shr42 = lshr i32 %cond41, 30, !dbg !13074
  %and43 = and i32 %shr42, 1, !dbg !13074
  %34 = load i32*, i32** %promisc_mc.addr, align 8, !dbg !13075
  store i32 %and43, i32* %34, align 4, !dbg !13076
  %35 = load i32*, i32** %out, align 8, !dbg !13077
  %add.ptr44 = getelementptr i32, i32* %35, i64 64, !dbg !13077
  %36 = load i32, i32* %add.ptr44, align 4, !dbg !13077
  %37 = call i1 @llvm.is.constant.i32(i32 %36), !dbg !13077
  br i1 %37, label %cond.true45, label %cond.false61, !dbg !13077

cond.true45:                                      ; preds = %cond.end40
  %38 = load i32*, i32** %out, align 8, !dbg !13077
  %add.ptr46 = getelementptr i32, i32* %38, i64 64, !dbg !13077
  %39 = load i32, i32* %add.ptr46, align 4, !dbg !13077
  %and47 = and i32 %39, 255, !dbg !13077
  %shl48 = shl i32 %and47, 24, !dbg !13077
  %40 = load i32*, i32** %out, align 8, !dbg !13077
  %add.ptr49 = getelementptr i32, i32* %40, i64 64, !dbg !13077
  %41 = load i32, i32* %add.ptr49, align 4, !dbg !13077
  %and50 = and i32 %41, 65280, !dbg !13077
  %shl51 = shl i32 %and50, 8, !dbg !13077
  %or52 = or i32 %shl48, %shl51, !dbg !13077
  %42 = load i32*, i32** %out, align 8, !dbg !13077
  %add.ptr53 = getelementptr i32, i32* %42, i64 64, !dbg !13077
  %43 = load i32, i32* %add.ptr53, align 4, !dbg !13077
  %and54 = and i32 %43, 16711680, !dbg !13077
  %shr55 = lshr i32 %and54, 8, !dbg !13077
  %or56 = or i32 %or52, %shr55, !dbg !13077
  %44 = load i32*, i32** %out, align 8, !dbg !13077
  %add.ptr57 = getelementptr i32, i32* %44, i64 64, !dbg !13077
  %45 = load i32, i32* %add.ptr57, align 4, !dbg !13077
  %and58 = and i32 %45, -16777216, !dbg !13077
  %shr59 = lshr i32 %and58, 24, !dbg !13077
  %or60 = or i32 %or56, %shr59, !dbg !13077
  br label %cond.end64, !dbg !13077

cond.false61:                                     ; preds = %cond.end40
  %46 = load i32*, i32** %out, align 8, !dbg !13077
  %add.ptr62 = getelementptr i32, i32* %46, i64 64, !dbg !13077
  %47 = load i32, i32* %add.ptr62, align 4, !dbg !13077
  %call63 = call i32 @__fswab32(i32 %47) #8, !dbg !13077
  br label %cond.end64, !dbg !13077

cond.end64:                                       ; preds = %cond.false61, %cond.true45
  %cond65 = phi i32 [ %or60, %cond.true45 ], [ %call63, %cond.false61 ], !dbg !13077
  %shr66 = lshr i32 %cond65, 29, !dbg !13077
  %and67 = and i32 %shr66, 1, !dbg !13077
  %48 = load i32*, i32** %promisc_all.addr, align 8, !dbg !13078
  store i32 %and67, i32* %48, align 4, !dbg !13079
  br label %out68, !dbg !13080

out68:                                            ; preds = %cond.end64, %if.then3
  call void @llvm.dbg.label(metadata !13081), !dbg !13082
  %49 = load i32*, i32** %out, align 8, !dbg !13083
  %50 = bitcast i32* %49 to i8*, !dbg !13083
  call void @kfree(i8* %50) #9, !dbg !13084
  %51 = load i32, i32* %err, align 4, !dbg !13085
  store i32 %51, i32* %retval, align 4, !dbg !13086
  br label %return, !dbg !13086

return:                                           ; preds = %out68, %if.then
  %52 = load i32, i32* %retval, align 4, !dbg !13087
  ret i32 %52, !dbg !13087
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @mlx5_modify_nic_vport_promisc(%struct.mlx5_core_dev* %mdev, i32 %promisc_uc, i32 %promisc_mc, i32 %promisc_all) #0 !dbg !13088 {
entry:
  %retval = alloca i32, align 4
  %mdev.addr = alloca %struct.mlx5_core_dev*, align 8
  %promisc_uc.addr = alloca i32, align 4
  %promisc_mc.addr = alloca i32, align 4
  %promisc_all.addr = alloca i32, align 4
  %in = alloca i8*, align 8
  %inlen = alloca i32, align 4
  %err = alloca i32, align 4
  %_v = alloca i32, align 4
  %_v168 = alloca i32, align 4
  %_v346 = alloca i32, align 4
  %_v524 = alloca i32, align 4
  %_v702 = alloca i32, align 4
  %_out = alloca [4 x i32], align 16
  %tmp = alloca i32, align 4
  %tmp879 = alloca i32, align 4
  store %struct.mlx5_core_dev* %mdev, %struct.mlx5_core_dev** %mdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_core_dev** %mdev.addr, metadata !13091, metadata !DIExpression()), !dbg !13092
  store i32 %promisc_uc, i32* %promisc_uc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %promisc_uc.addr, metadata !13093, metadata !DIExpression()), !dbg !13094
  store i32 %promisc_mc, i32* %promisc_mc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %promisc_mc.addr, metadata !13095, metadata !DIExpression()), !dbg !13096
  store i32 %promisc_all, i32* %promisc_all.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %promisc_all.addr, metadata !13097, metadata !DIExpression()), !dbg !13098
  call void @llvm.dbg.declare(metadata i8** %in, metadata !13099, metadata !DIExpression()), !dbg !13100
  call void @llvm.dbg.declare(metadata i32* %inlen, metadata !13101, metadata !DIExpression()), !dbg !13102
  store i32 512, i32* %inlen, align 4, !dbg !13102
  call void @llvm.dbg.declare(metadata i32* %err, metadata !13103, metadata !DIExpression()), !dbg !13104
  %0 = load i32, i32* %inlen, align 4, !dbg !13105
  %conv = sext i32 %0 to i64, !dbg !13105
  %call = call i8* @kvzalloc(i64 %conv, i32 3264) #9, !dbg !13106
  store i8* %call, i8** %in, align 8, !dbg !13107
  %1 = load i8*, i8** %in, align 8, !dbg !13108
  %tobool = icmp ne i8* %1, null, !dbg !13108
  br i1 %tobool, label %if.end, label %if.then, !dbg !13110

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !13111
  br label %return, !dbg !13111

if.end:                                           ; preds = %entry
  br label %do.body, !dbg !13112

do.body:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %_v, metadata !13113, metadata !DIExpression()), !dbg !13115
  store i32 1, i32* %_v, align 4, !dbg !13115
  br label %do.body1, !dbg !13115

do.body1:                                         ; preds = %do.body
  br label %do.end, !dbg !13116

do.end:                                           ; preds = %do.body1
  %2 = load i8*, i8** %in, align 8, !dbg !13115
  %3 = bitcast i8* %2 to i32*, !dbg !13115
  %add.ptr = getelementptr i32, i32* %3, i64 3, !dbg !13115
  %4 = load i32, i32* %add.ptr, align 4, !dbg !13115
  %5 = call i1 @llvm.is.constant.i32(i32 %4), !dbg !13115
  br i1 %5, label %cond.true, label %cond.false, !dbg !13115

cond.true:                                        ; preds = %do.end
  %6 = load i8*, i8** %in, align 8, !dbg !13115
  %7 = bitcast i8* %6 to i32*, !dbg !13115
  %add.ptr2 = getelementptr i32, i32* %7, i64 3, !dbg !13115
  %8 = load i32, i32* %add.ptr2, align 4, !dbg !13115
  %and = and i32 %8, 255, !dbg !13115
  %shl = shl i32 %and, 24, !dbg !13115
  %9 = load i8*, i8** %in, align 8, !dbg !13115
  %10 = bitcast i8* %9 to i32*, !dbg !13115
  %add.ptr3 = getelementptr i32, i32* %10, i64 3, !dbg !13115
  %11 = load i32, i32* %add.ptr3, align 4, !dbg !13115
  %and4 = and i32 %11, 65280, !dbg !13115
  %shl5 = shl i32 %and4, 8, !dbg !13115
  %or = or i32 %shl, %shl5, !dbg !13115
  %12 = load i8*, i8** %in, align 8, !dbg !13115
  %13 = bitcast i8* %12 to i32*, !dbg !13115
  %add.ptr6 = getelementptr i32, i32* %13, i64 3, !dbg !13115
  %14 = load i32, i32* %add.ptr6, align 4, !dbg !13115
  %and7 = and i32 %14, 16711680, !dbg !13115
  %shr = lshr i32 %and7, 8, !dbg !13115
  %or8 = or i32 %or, %shr, !dbg !13115
  %15 = load i8*, i8** %in, align 8, !dbg !13115
  %16 = bitcast i8* %15 to i32*, !dbg !13115
  %add.ptr9 = getelementptr i32, i32* %16, i64 3, !dbg !13115
  %17 = load i32, i32* %add.ptr9, align 4, !dbg !13115
  %and10 = and i32 %17, -16777216, !dbg !13115
  %shr11 = lshr i32 %and10, 24, !dbg !13115
  %or12 = or i32 %or8, %shr11, !dbg !13115
  br label %cond.end, !dbg !13115

cond.false:                                       ; preds = %do.end
  %18 = load i8*, i8** %in, align 8, !dbg !13115
  %19 = bitcast i8* %18 to i32*, !dbg !13115
  %add.ptr13 = getelementptr i32, i32* %19, i64 3, !dbg !13115
  %20 = load i32, i32* %add.ptr13, align 4, !dbg !13115
  %call14 = call i32 @__fswab32(i32 %20) #8, !dbg !13115
  br label %cond.end, !dbg !13115

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %or12, %cond.true ], [ %call14, %cond.false ], !dbg !13115
  %and15 = and i32 %cond, -17, !dbg !13115
  %21 = load i32, i32* %_v, align 4, !dbg !13115
  %and16 = and i32 %21, 1, !dbg !13115
  %shl17 = shl i32 %and16, 4, !dbg !13115
  %or18 = or i32 %and15, %shl17, !dbg !13115
  %22 = call i1 @llvm.is.constant.i32(i32 %or18), !dbg !13115
  br i1 %22, label %cond.true19, label %cond.false135, !dbg !13115

cond.true19:                                      ; preds = %cond.end
  %23 = load i8*, i8** %in, align 8, !dbg !13115
  %24 = bitcast i8* %23 to i32*, !dbg !13115
  %add.ptr20 = getelementptr i32, i32* %24, i64 3, !dbg !13115
  %25 = load i32, i32* %add.ptr20, align 4, !dbg !13115
  %26 = call i1 @llvm.is.constant.i32(i32 %25), !dbg !13115
  br i1 %26, label %cond.true21, label %cond.false37, !dbg !13115

cond.true21:                                      ; preds = %cond.true19
  %27 = load i8*, i8** %in, align 8, !dbg !13115
  %28 = bitcast i8* %27 to i32*, !dbg !13115
  %add.ptr22 = getelementptr i32, i32* %28, i64 3, !dbg !13115
  %29 = load i32, i32* %add.ptr22, align 4, !dbg !13115
  %and23 = and i32 %29, 255, !dbg !13115
  %shl24 = shl i32 %and23, 24, !dbg !13115
  %30 = load i8*, i8** %in, align 8, !dbg !13115
  %31 = bitcast i8* %30 to i32*, !dbg !13115
  %add.ptr25 = getelementptr i32, i32* %31, i64 3, !dbg !13115
  %32 = load i32, i32* %add.ptr25, align 4, !dbg !13115
  %and26 = and i32 %32, 65280, !dbg !13115
  %shl27 = shl i32 %and26, 8, !dbg !13115
  %or28 = or i32 %shl24, %shl27, !dbg !13115
  %33 = load i8*, i8** %in, align 8, !dbg !13115
  %34 = bitcast i8* %33 to i32*, !dbg !13115
  %add.ptr29 = getelementptr i32, i32* %34, i64 3, !dbg !13115
  %35 = load i32, i32* %add.ptr29, align 4, !dbg !13115
  %and30 = and i32 %35, 16711680, !dbg !13115
  %shr31 = lshr i32 %and30, 8, !dbg !13115
  %or32 = or i32 %or28, %shr31, !dbg !13115
  %36 = load i8*, i8** %in, align 8, !dbg !13115
  %37 = bitcast i8* %36 to i32*, !dbg !13115
  %add.ptr33 = getelementptr i32, i32* %37, i64 3, !dbg !13115
  %38 = load i32, i32* %add.ptr33, align 4, !dbg !13115
  %and34 = and i32 %38, -16777216, !dbg !13115
  %shr35 = lshr i32 %and34, 24, !dbg !13115
  %or36 = or i32 %or32, %shr35, !dbg !13115
  br label %cond.end40, !dbg !13115

cond.false37:                                     ; preds = %cond.true19
  %39 = load i8*, i8** %in, align 8, !dbg !13115
  %40 = bitcast i8* %39 to i32*, !dbg !13115
  %add.ptr38 = getelementptr i32, i32* %40, i64 3, !dbg !13115
  %41 = load i32, i32* %add.ptr38, align 4, !dbg !13115
  %call39 = call i32 @__fswab32(i32 %41) #8, !dbg !13115
  br label %cond.end40, !dbg !13115

cond.end40:                                       ; preds = %cond.false37, %cond.true21
  %cond41 = phi i32 [ %or36, %cond.true21 ], [ %call39, %cond.false37 ], !dbg !13115
  %and42 = and i32 %cond41, -17, !dbg !13115
  %42 = load i32, i32* %_v, align 4, !dbg !13115
  %and43 = and i32 %42, 1, !dbg !13115
  %shl44 = shl i32 %and43, 4, !dbg !13115
  %or45 = or i32 %and42, %shl44, !dbg !13115
  %and46 = and i32 %or45, 255, !dbg !13115
  %shl47 = shl i32 %and46, 24, !dbg !13115
  %43 = load i8*, i8** %in, align 8, !dbg !13115
  %44 = bitcast i8* %43 to i32*, !dbg !13115
  %add.ptr48 = getelementptr i32, i32* %44, i64 3, !dbg !13115
  %45 = load i32, i32* %add.ptr48, align 4, !dbg !13115
  %46 = call i1 @llvm.is.constant.i32(i32 %45), !dbg !13115
  br i1 %46, label %cond.true49, label %cond.false65, !dbg !13115

cond.true49:                                      ; preds = %cond.end40
  %47 = load i8*, i8** %in, align 8, !dbg !13115
  %48 = bitcast i8* %47 to i32*, !dbg !13115
  %add.ptr50 = getelementptr i32, i32* %48, i64 3, !dbg !13115
  %49 = load i32, i32* %add.ptr50, align 4, !dbg !13115
  %and51 = and i32 %49, 255, !dbg !13115
  %shl52 = shl i32 %and51, 24, !dbg !13115
  %50 = load i8*, i8** %in, align 8, !dbg !13115
  %51 = bitcast i8* %50 to i32*, !dbg !13115
  %add.ptr53 = getelementptr i32, i32* %51, i64 3, !dbg !13115
  %52 = load i32, i32* %add.ptr53, align 4, !dbg !13115
  %and54 = and i32 %52, 65280, !dbg !13115
  %shl55 = shl i32 %and54, 8, !dbg !13115
  %or56 = or i32 %shl52, %shl55, !dbg !13115
  %53 = load i8*, i8** %in, align 8, !dbg !13115
  %54 = bitcast i8* %53 to i32*, !dbg !13115
  %add.ptr57 = getelementptr i32, i32* %54, i64 3, !dbg !13115
  %55 = load i32, i32* %add.ptr57, align 4, !dbg !13115
  %and58 = and i32 %55, 16711680, !dbg !13115
  %shr59 = lshr i32 %and58, 8, !dbg !13115
  %or60 = or i32 %or56, %shr59, !dbg !13115
  %56 = load i8*, i8** %in, align 8, !dbg !13115
  %57 = bitcast i8* %56 to i32*, !dbg !13115
  %add.ptr61 = getelementptr i32, i32* %57, i64 3, !dbg !13115
  %58 = load i32, i32* %add.ptr61, align 4, !dbg !13115
  %and62 = and i32 %58, -16777216, !dbg !13115
  %shr63 = lshr i32 %and62, 24, !dbg !13115
  %or64 = or i32 %or60, %shr63, !dbg !13115
  br label %cond.end68, !dbg !13115

cond.false65:                                     ; preds = %cond.end40
  %59 = load i8*, i8** %in, align 8, !dbg !13115
  %60 = bitcast i8* %59 to i32*, !dbg !13115
  %add.ptr66 = getelementptr i32, i32* %60, i64 3, !dbg !13115
  %61 = load i32, i32* %add.ptr66, align 4, !dbg !13115
  %call67 = call i32 @__fswab32(i32 %61) #8, !dbg !13115
  br label %cond.end68, !dbg !13115

cond.end68:                                       ; preds = %cond.false65, %cond.true49
  %cond69 = phi i32 [ %or64, %cond.true49 ], [ %call67, %cond.false65 ], !dbg !13115
  %and70 = and i32 %cond69, -17, !dbg !13115
  %62 = load i32, i32* %_v, align 4, !dbg !13115
  %and71 = and i32 %62, 1, !dbg !13115
  %shl72 = shl i32 %and71, 4, !dbg !13115
  %or73 = or i32 %and70, %shl72, !dbg !13115
  %and74 = and i32 %or73, 65280, !dbg !13115
  %shl75 = shl i32 %and74, 8, !dbg !13115
  %or76 = or i32 %shl47, %shl75, !dbg !13115
  %63 = load i8*, i8** %in, align 8, !dbg !13115
  %64 = bitcast i8* %63 to i32*, !dbg !13115
  %add.ptr77 = getelementptr i32, i32* %64, i64 3, !dbg !13115
  %65 = load i32, i32* %add.ptr77, align 4, !dbg !13115
  %66 = call i1 @llvm.is.constant.i32(i32 %65), !dbg !13115
  br i1 %66, label %cond.true78, label %cond.false94, !dbg !13115

cond.true78:                                      ; preds = %cond.end68
  %67 = load i8*, i8** %in, align 8, !dbg !13115
  %68 = bitcast i8* %67 to i32*, !dbg !13115
  %add.ptr79 = getelementptr i32, i32* %68, i64 3, !dbg !13115
  %69 = load i32, i32* %add.ptr79, align 4, !dbg !13115
  %and80 = and i32 %69, 255, !dbg !13115
  %shl81 = shl i32 %and80, 24, !dbg !13115
  %70 = load i8*, i8** %in, align 8, !dbg !13115
  %71 = bitcast i8* %70 to i32*, !dbg !13115
  %add.ptr82 = getelementptr i32, i32* %71, i64 3, !dbg !13115
  %72 = load i32, i32* %add.ptr82, align 4, !dbg !13115
  %and83 = and i32 %72, 65280, !dbg !13115
  %shl84 = shl i32 %and83, 8, !dbg !13115
  %or85 = or i32 %shl81, %shl84, !dbg !13115
  %73 = load i8*, i8** %in, align 8, !dbg !13115
  %74 = bitcast i8* %73 to i32*, !dbg !13115
  %add.ptr86 = getelementptr i32, i32* %74, i64 3, !dbg !13115
  %75 = load i32, i32* %add.ptr86, align 4, !dbg !13115
  %and87 = and i32 %75, 16711680, !dbg !13115
  %shr88 = lshr i32 %and87, 8, !dbg !13115
  %or89 = or i32 %or85, %shr88, !dbg !13115
  %76 = load i8*, i8** %in, align 8, !dbg !13115
  %77 = bitcast i8* %76 to i32*, !dbg !13115
  %add.ptr90 = getelementptr i32, i32* %77, i64 3, !dbg !13115
  %78 = load i32, i32* %add.ptr90, align 4, !dbg !13115
  %and91 = and i32 %78, -16777216, !dbg !13115
  %shr92 = lshr i32 %and91, 24, !dbg !13115
  %or93 = or i32 %or89, %shr92, !dbg !13115
  br label %cond.end97, !dbg !13115

cond.false94:                                     ; preds = %cond.end68
  %79 = load i8*, i8** %in, align 8, !dbg !13115
  %80 = bitcast i8* %79 to i32*, !dbg !13115
  %add.ptr95 = getelementptr i32, i32* %80, i64 3, !dbg !13115
  %81 = load i32, i32* %add.ptr95, align 4, !dbg !13115
  %call96 = call i32 @__fswab32(i32 %81) #8, !dbg !13115
  br label %cond.end97, !dbg !13115

cond.end97:                                       ; preds = %cond.false94, %cond.true78
  %cond98 = phi i32 [ %or93, %cond.true78 ], [ %call96, %cond.false94 ], !dbg !13115
  %and99 = and i32 %cond98, -17, !dbg !13115
  %82 = load i32, i32* %_v, align 4, !dbg !13115
  %and100 = and i32 %82, 1, !dbg !13115
  %shl101 = shl i32 %and100, 4, !dbg !13115
  %or102 = or i32 %and99, %shl101, !dbg !13115
  %and103 = and i32 %or102, 16711680, !dbg !13115
  %shr104 = lshr i32 %and103, 8, !dbg !13115
  %or105 = or i32 %or76, %shr104, !dbg !13115
  %83 = load i8*, i8** %in, align 8, !dbg !13115
  %84 = bitcast i8* %83 to i32*, !dbg !13115
  %add.ptr106 = getelementptr i32, i32* %84, i64 3, !dbg !13115
  %85 = load i32, i32* %add.ptr106, align 4, !dbg !13115
  %86 = call i1 @llvm.is.constant.i32(i32 %85), !dbg !13115
  br i1 %86, label %cond.true107, label %cond.false123, !dbg !13115

cond.true107:                                     ; preds = %cond.end97
  %87 = load i8*, i8** %in, align 8, !dbg !13115
  %88 = bitcast i8* %87 to i32*, !dbg !13115
  %add.ptr108 = getelementptr i32, i32* %88, i64 3, !dbg !13115
  %89 = load i32, i32* %add.ptr108, align 4, !dbg !13115
  %and109 = and i32 %89, 255, !dbg !13115
  %shl110 = shl i32 %and109, 24, !dbg !13115
  %90 = load i8*, i8** %in, align 8, !dbg !13115
  %91 = bitcast i8* %90 to i32*, !dbg !13115
  %add.ptr111 = getelementptr i32, i32* %91, i64 3, !dbg !13115
  %92 = load i32, i32* %add.ptr111, align 4, !dbg !13115
  %and112 = and i32 %92, 65280, !dbg !13115
  %shl113 = shl i32 %and112, 8, !dbg !13115
  %or114 = or i32 %shl110, %shl113, !dbg !13115
  %93 = load i8*, i8** %in, align 8, !dbg !13115
  %94 = bitcast i8* %93 to i32*, !dbg !13115
  %add.ptr115 = getelementptr i32, i32* %94, i64 3, !dbg !13115
  %95 = load i32, i32* %add.ptr115, align 4, !dbg !13115
  %and116 = and i32 %95, 16711680, !dbg !13115
  %shr117 = lshr i32 %and116, 8, !dbg !13115
  %or118 = or i32 %or114, %shr117, !dbg !13115
  %96 = load i8*, i8** %in, align 8, !dbg !13115
  %97 = bitcast i8* %96 to i32*, !dbg !13115
  %add.ptr119 = getelementptr i32, i32* %97, i64 3, !dbg !13115
  %98 = load i32, i32* %add.ptr119, align 4, !dbg !13115
  %and120 = and i32 %98, -16777216, !dbg !13115
  %shr121 = lshr i32 %and120, 24, !dbg !13115
  %or122 = or i32 %or118, %shr121, !dbg !13115
  br label %cond.end126, !dbg !13115

cond.false123:                                    ; preds = %cond.end97
  %99 = load i8*, i8** %in, align 8, !dbg !13115
  %100 = bitcast i8* %99 to i32*, !dbg !13115
  %add.ptr124 = getelementptr i32, i32* %100, i64 3, !dbg !13115
  %101 = load i32, i32* %add.ptr124, align 4, !dbg !13115
  %call125 = call i32 @__fswab32(i32 %101) #8, !dbg !13115
  br label %cond.end126, !dbg !13115

cond.end126:                                      ; preds = %cond.false123, %cond.true107
  %cond127 = phi i32 [ %or122, %cond.true107 ], [ %call125, %cond.false123 ], !dbg !13115
  %and128 = and i32 %cond127, -17, !dbg !13115
  %102 = load i32, i32* %_v, align 4, !dbg !13115
  %and129 = and i32 %102, 1, !dbg !13115
  %shl130 = shl i32 %and129, 4, !dbg !13115
  %or131 = or i32 %and128, %shl130, !dbg !13115
  %and132 = and i32 %or131, -16777216, !dbg !13115
  %shr133 = lshr i32 %and132, 24, !dbg !13115
  %or134 = or i32 %or105, %shr133, !dbg !13115
  br label %cond.end163, !dbg !13115

cond.false135:                                    ; preds = %cond.end
  %103 = load i8*, i8** %in, align 8, !dbg !13115
  %104 = bitcast i8* %103 to i32*, !dbg !13115
  %add.ptr136 = getelementptr i32, i32* %104, i64 3, !dbg !13115
  %105 = load i32, i32* %add.ptr136, align 4, !dbg !13115
  %106 = call i1 @llvm.is.constant.i32(i32 %105), !dbg !13115
  br i1 %106, label %cond.true137, label %cond.false153, !dbg !13115

cond.true137:                                     ; preds = %cond.false135
  %107 = load i8*, i8** %in, align 8, !dbg !13115
  %108 = bitcast i8* %107 to i32*, !dbg !13115
  %add.ptr138 = getelementptr i32, i32* %108, i64 3, !dbg !13115
  %109 = load i32, i32* %add.ptr138, align 4, !dbg !13115
  %and139 = and i32 %109, 255, !dbg !13115
  %shl140 = shl i32 %and139, 24, !dbg !13115
  %110 = load i8*, i8** %in, align 8, !dbg !13115
  %111 = bitcast i8* %110 to i32*, !dbg !13115
  %add.ptr141 = getelementptr i32, i32* %111, i64 3, !dbg !13115
  %112 = load i32, i32* %add.ptr141, align 4, !dbg !13115
  %and142 = and i32 %112, 65280, !dbg !13115
  %shl143 = shl i32 %and142, 8, !dbg !13115
  %or144 = or i32 %shl140, %shl143, !dbg !13115
  %113 = load i8*, i8** %in, align 8, !dbg !13115
  %114 = bitcast i8* %113 to i32*, !dbg !13115
  %add.ptr145 = getelementptr i32, i32* %114, i64 3, !dbg !13115
  %115 = load i32, i32* %add.ptr145, align 4, !dbg !13115
  %and146 = and i32 %115, 16711680, !dbg !13115
  %shr147 = lshr i32 %and146, 8, !dbg !13115
  %or148 = or i32 %or144, %shr147, !dbg !13115
  %116 = load i8*, i8** %in, align 8, !dbg !13115
  %117 = bitcast i8* %116 to i32*, !dbg !13115
  %add.ptr149 = getelementptr i32, i32* %117, i64 3, !dbg !13115
  %118 = load i32, i32* %add.ptr149, align 4, !dbg !13115
  %and150 = and i32 %118, -16777216, !dbg !13115
  %shr151 = lshr i32 %and150, 24, !dbg !13115
  %or152 = or i32 %or148, %shr151, !dbg !13115
  br label %cond.end156, !dbg !13115

cond.false153:                                    ; preds = %cond.false135
  %119 = load i8*, i8** %in, align 8, !dbg !13115
  %120 = bitcast i8* %119 to i32*, !dbg !13115
  %add.ptr154 = getelementptr i32, i32* %120, i64 3, !dbg !13115
  %121 = load i32, i32* %add.ptr154, align 4, !dbg !13115
  %call155 = call i32 @__fswab32(i32 %121) #8, !dbg !13115
  br label %cond.end156, !dbg !13115

cond.end156:                                      ; preds = %cond.false153, %cond.true137
  %cond157 = phi i32 [ %or152, %cond.true137 ], [ %call155, %cond.false153 ], !dbg !13115
  %and158 = and i32 %cond157, -17, !dbg !13115
  %122 = load i32, i32* %_v, align 4, !dbg !13115
  %and159 = and i32 %122, 1, !dbg !13115
  %shl160 = shl i32 %and159, 4, !dbg !13115
  %or161 = or i32 %and158, %shl160, !dbg !13115
  %call162 = call i32 @__fswab32(i32 %or161) #8, !dbg !13115
  br label %cond.end163, !dbg !13115

cond.end163:                                      ; preds = %cond.end156, %cond.end126
  %cond164 = phi i32 [ %or134, %cond.end126 ], [ %call162, %cond.end156 ], !dbg !13115
  %123 = load i8*, i8** %in, align 8, !dbg !13115
  %124 = bitcast i8* %123 to i32*, !dbg !13115
  %add.ptr165 = getelementptr i32, i32* %124, i64 3, !dbg !13115
  store i32 %cond164, i32* %add.ptr165, align 4, !dbg !13115
  br label %do.end166, !dbg !13115

do.end166:                                        ; preds = %cond.end163
  br label %do.body167, !dbg !13118

do.body167:                                       ; preds = %do.end166
  call void @llvm.dbg.declare(metadata i32* %_v168, metadata !13119, metadata !DIExpression()), !dbg !13121
  %125 = load i32, i32* %promisc_uc.addr, align 4, !dbg !13121
  store i32 %125, i32* %_v168, align 4, !dbg !13121
  br label %do.body169, !dbg !13121

do.body169:                                       ; preds = %do.body167
  br label %do.end170, !dbg !13122

do.end170:                                        ; preds = %do.body169
  %126 = load i8*, i8** %in, align 8, !dbg !13121
  %127 = bitcast i8* %126 to i32*, !dbg !13121
  %add.ptr171 = getelementptr i32, i32* %127, i64 124, !dbg !13121
  %128 = load i32, i32* %add.ptr171, align 4, !dbg !13121
  %129 = call i1 @llvm.is.constant.i32(i32 %128), !dbg !13121
  br i1 %129, label %cond.true172, label %cond.false188, !dbg !13121

cond.true172:                                     ; preds = %do.end170
  %130 = load i8*, i8** %in, align 8, !dbg !13121
  %131 = bitcast i8* %130 to i32*, !dbg !13121
  %add.ptr173 = getelementptr i32, i32* %131, i64 124, !dbg !13121
  %132 = load i32, i32* %add.ptr173, align 4, !dbg !13121
  %and174 = and i32 %132, 255, !dbg !13121
  %shl175 = shl i32 %and174, 24, !dbg !13121
  %133 = load i8*, i8** %in, align 8, !dbg !13121
  %134 = bitcast i8* %133 to i32*, !dbg !13121
  %add.ptr176 = getelementptr i32, i32* %134, i64 124, !dbg !13121
  %135 = load i32, i32* %add.ptr176, align 4, !dbg !13121
  %and177 = and i32 %135, 65280, !dbg !13121
  %shl178 = shl i32 %and177, 8, !dbg !13121
  %or179 = or i32 %shl175, %shl178, !dbg !13121
  %136 = load i8*, i8** %in, align 8, !dbg !13121
  %137 = bitcast i8* %136 to i32*, !dbg !13121
  %add.ptr180 = getelementptr i32, i32* %137, i64 124, !dbg !13121
  %138 = load i32, i32* %add.ptr180, align 4, !dbg !13121
  %and181 = and i32 %138, 16711680, !dbg !13121
  %shr182 = lshr i32 %and181, 8, !dbg !13121
  %or183 = or i32 %or179, %shr182, !dbg !13121
  %139 = load i8*, i8** %in, align 8, !dbg !13121
  %140 = bitcast i8* %139 to i32*, !dbg !13121
  %add.ptr184 = getelementptr i32, i32* %140, i64 124, !dbg !13121
  %141 = load i32, i32* %add.ptr184, align 4, !dbg !13121
  %and185 = and i32 %141, -16777216, !dbg !13121
  %shr186 = lshr i32 %and185, 24, !dbg !13121
  %or187 = or i32 %or183, %shr186, !dbg !13121
  br label %cond.end191, !dbg !13121

cond.false188:                                    ; preds = %do.end170
  %142 = load i8*, i8** %in, align 8, !dbg !13121
  %143 = bitcast i8* %142 to i32*, !dbg !13121
  %add.ptr189 = getelementptr i32, i32* %143, i64 124, !dbg !13121
  %144 = load i32, i32* %add.ptr189, align 4, !dbg !13121
  %call190 = call i32 @__fswab32(i32 %144) #8, !dbg !13121
  br label %cond.end191, !dbg !13121

cond.end191:                                      ; preds = %cond.false188, %cond.true172
  %cond192 = phi i32 [ %or187, %cond.true172 ], [ %call190, %cond.false188 ], !dbg !13121
  %and193 = and i32 %cond192, 2147483647, !dbg !13121
  %145 = load i32, i32* %_v168, align 4, !dbg !13121
  %and194 = and i32 %145, 1, !dbg !13121
  %shl195 = shl i32 %and194, 31, !dbg !13121
  %or196 = or i32 %and193, %shl195, !dbg !13121
  %146 = call i1 @llvm.is.constant.i32(i32 %or196), !dbg !13121
  br i1 %146, label %cond.true197, label %cond.false313, !dbg !13121

cond.true197:                                     ; preds = %cond.end191
  %147 = load i8*, i8** %in, align 8, !dbg !13121
  %148 = bitcast i8* %147 to i32*, !dbg !13121
  %add.ptr198 = getelementptr i32, i32* %148, i64 124, !dbg !13121
  %149 = load i32, i32* %add.ptr198, align 4, !dbg !13121
  %150 = call i1 @llvm.is.constant.i32(i32 %149), !dbg !13121
  br i1 %150, label %cond.true199, label %cond.false215, !dbg !13121

cond.true199:                                     ; preds = %cond.true197
  %151 = load i8*, i8** %in, align 8, !dbg !13121
  %152 = bitcast i8* %151 to i32*, !dbg !13121
  %add.ptr200 = getelementptr i32, i32* %152, i64 124, !dbg !13121
  %153 = load i32, i32* %add.ptr200, align 4, !dbg !13121
  %and201 = and i32 %153, 255, !dbg !13121
  %shl202 = shl i32 %and201, 24, !dbg !13121
  %154 = load i8*, i8** %in, align 8, !dbg !13121
  %155 = bitcast i8* %154 to i32*, !dbg !13121
  %add.ptr203 = getelementptr i32, i32* %155, i64 124, !dbg !13121
  %156 = load i32, i32* %add.ptr203, align 4, !dbg !13121
  %and204 = and i32 %156, 65280, !dbg !13121
  %shl205 = shl i32 %and204, 8, !dbg !13121
  %or206 = or i32 %shl202, %shl205, !dbg !13121
  %157 = load i8*, i8** %in, align 8, !dbg !13121
  %158 = bitcast i8* %157 to i32*, !dbg !13121
  %add.ptr207 = getelementptr i32, i32* %158, i64 124, !dbg !13121
  %159 = load i32, i32* %add.ptr207, align 4, !dbg !13121
  %and208 = and i32 %159, 16711680, !dbg !13121
  %shr209 = lshr i32 %and208, 8, !dbg !13121
  %or210 = or i32 %or206, %shr209, !dbg !13121
  %160 = load i8*, i8** %in, align 8, !dbg !13121
  %161 = bitcast i8* %160 to i32*, !dbg !13121
  %add.ptr211 = getelementptr i32, i32* %161, i64 124, !dbg !13121
  %162 = load i32, i32* %add.ptr211, align 4, !dbg !13121
  %and212 = and i32 %162, -16777216, !dbg !13121
  %shr213 = lshr i32 %and212, 24, !dbg !13121
  %or214 = or i32 %or210, %shr213, !dbg !13121
  br label %cond.end218, !dbg !13121

cond.false215:                                    ; preds = %cond.true197
  %163 = load i8*, i8** %in, align 8, !dbg !13121
  %164 = bitcast i8* %163 to i32*, !dbg !13121
  %add.ptr216 = getelementptr i32, i32* %164, i64 124, !dbg !13121
  %165 = load i32, i32* %add.ptr216, align 4, !dbg !13121
  %call217 = call i32 @__fswab32(i32 %165) #8, !dbg !13121
  br label %cond.end218, !dbg !13121

cond.end218:                                      ; preds = %cond.false215, %cond.true199
  %cond219 = phi i32 [ %or214, %cond.true199 ], [ %call217, %cond.false215 ], !dbg !13121
  %and220 = and i32 %cond219, 2147483647, !dbg !13121
  %166 = load i32, i32* %_v168, align 4, !dbg !13121
  %and221 = and i32 %166, 1, !dbg !13121
  %shl222 = shl i32 %and221, 31, !dbg !13121
  %or223 = or i32 %and220, %shl222, !dbg !13121
  %and224 = and i32 %or223, 255, !dbg !13121
  %shl225 = shl i32 %and224, 24, !dbg !13121
  %167 = load i8*, i8** %in, align 8, !dbg !13121
  %168 = bitcast i8* %167 to i32*, !dbg !13121
  %add.ptr226 = getelementptr i32, i32* %168, i64 124, !dbg !13121
  %169 = load i32, i32* %add.ptr226, align 4, !dbg !13121
  %170 = call i1 @llvm.is.constant.i32(i32 %169), !dbg !13121
  br i1 %170, label %cond.true227, label %cond.false243, !dbg !13121

cond.true227:                                     ; preds = %cond.end218
  %171 = load i8*, i8** %in, align 8, !dbg !13121
  %172 = bitcast i8* %171 to i32*, !dbg !13121
  %add.ptr228 = getelementptr i32, i32* %172, i64 124, !dbg !13121
  %173 = load i32, i32* %add.ptr228, align 4, !dbg !13121
  %and229 = and i32 %173, 255, !dbg !13121
  %shl230 = shl i32 %and229, 24, !dbg !13121
  %174 = load i8*, i8** %in, align 8, !dbg !13121
  %175 = bitcast i8* %174 to i32*, !dbg !13121
  %add.ptr231 = getelementptr i32, i32* %175, i64 124, !dbg !13121
  %176 = load i32, i32* %add.ptr231, align 4, !dbg !13121
  %and232 = and i32 %176, 65280, !dbg !13121
  %shl233 = shl i32 %and232, 8, !dbg !13121
  %or234 = or i32 %shl230, %shl233, !dbg !13121
  %177 = load i8*, i8** %in, align 8, !dbg !13121
  %178 = bitcast i8* %177 to i32*, !dbg !13121
  %add.ptr235 = getelementptr i32, i32* %178, i64 124, !dbg !13121
  %179 = load i32, i32* %add.ptr235, align 4, !dbg !13121
  %and236 = and i32 %179, 16711680, !dbg !13121
  %shr237 = lshr i32 %and236, 8, !dbg !13121
  %or238 = or i32 %or234, %shr237, !dbg !13121
  %180 = load i8*, i8** %in, align 8, !dbg !13121
  %181 = bitcast i8* %180 to i32*, !dbg !13121
  %add.ptr239 = getelementptr i32, i32* %181, i64 124, !dbg !13121
  %182 = load i32, i32* %add.ptr239, align 4, !dbg !13121
  %and240 = and i32 %182, -16777216, !dbg !13121
  %shr241 = lshr i32 %and240, 24, !dbg !13121
  %or242 = or i32 %or238, %shr241, !dbg !13121
  br label %cond.end246, !dbg !13121

cond.false243:                                    ; preds = %cond.end218
  %183 = load i8*, i8** %in, align 8, !dbg !13121
  %184 = bitcast i8* %183 to i32*, !dbg !13121
  %add.ptr244 = getelementptr i32, i32* %184, i64 124, !dbg !13121
  %185 = load i32, i32* %add.ptr244, align 4, !dbg !13121
  %call245 = call i32 @__fswab32(i32 %185) #8, !dbg !13121
  br label %cond.end246, !dbg !13121

cond.end246:                                      ; preds = %cond.false243, %cond.true227
  %cond247 = phi i32 [ %or242, %cond.true227 ], [ %call245, %cond.false243 ], !dbg !13121
  %and248 = and i32 %cond247, 2147483647, !dbg !13121
  %186 = load i32, i32* %_v168, align 4, !dbg !13121
  %and249 = and i32 %186, 1, !dbg !13121
  %shl250 = shl i32 %and249, 31, !dbg !13121
  %or251 = or i32 %and248, %shl250, !dbg !13121
  %and252 = and i32 %or251, 65280, !dbg !13121
  %shl253 = shl i32 %and252, 8, !dbg !13121
  %or254 = or i32 %shl225, %shl253, !dbg !13121
  %187 = load i8*, i8** %in, align 8, !dbg !13121
  %188 = bitcast i8* %187 to i32*, !dbg !13121
  %add.ptr255 = getelementptr i32, i32* %188, i64 124, !dbg !13121
  %189 = load i32, i32* %add.ptr255, align 4, !dbg !13121
  %190 = call i1 @llvm.is.constant.i32(i32 %189), !dbg !13121
  br i1 %190, label %cond.true256, label %cond.false272, !dbg !13121

cond.true256:                                     ; preds = %cond.end246
  %191 = load i8*, i8** %in, align 8, !dbg !13121
  %192 = bitcast i8* %191 to i32*, !dbg !13121
  %add.ptr257 = getelementptr i32, i32* %192, i64 124, !dbg !13121
  %193 = load i32, i32* %add.ptr257, align 4, !dbg !13121
  %and258 = and i32 %193, 255, !dbg !13121
  %shl259 = shl i32 %and258, 24, !dbg !13121
  %194 = load i8*, i8** %in, align 8, !dbg !13121
  %195 = bitcast i8* %194 to i32*, !dbg !13121
  %add.ptr260 = getelementptr i32, i32* %195, i64 124, !dbg !13121
  %196 = load i32, i32* %add.ptr260, align 4, !dbg !13121
  %and261 = and i32 %196, 65280, !dbg !13121
  %shl262 = shl i32 %and261, 8, !dbg !13121
  %or263 = or i32 %shl259, %shl262, !dbg !13121
  %197 = load i8*, i8** %in, align 8, !dbg !13121
  %198 = bitcast i8* %197 to i32*, !dbg !13121
  %add.ptr264 = getelementptr i32, i32* %198, i64 124, !dbg !13121
  %199 = load i32, i32* %add.ptr264, align 4, !dbg !13121
  %and265 = and i32 %199, 16711680, !dbg !13121
  %shr266 = lshr i32 %and265, 8, !dbg !13121
  %or267 = or i32 %or263, %shr266, !dbg !13121
  %200 = load i8*, i8** %in, align 8, !dbg !13121
  %201 = bitcast i8* %200 to i32*, !dbg !13121
  %add.ptr268 = getelementptr i32, i32* %201, i64 124, !dbg !13121
  %202 = load i32, i32* %add.ptr268, align 4, !dbg !13121
  %and269 = and i32 %202, -16777216, !dbg !13121
  %shr270 = lshr i32 %and269, 24, !dbg !13121
  %or271 = or i32 %or267, %shr270, !dbg !13121
  br label %cond.end275, !dbg !13121

cond.false272:                                    ; preds = %cond.end246
  %203 = load i8*, i8** %in, align 8, !dbg !13121
  %204 = bitcast i8* %203 to i32*, !dbg !13121
  %add.ptr273 = getelementptr i32, i32* %204, i64 124, !dbg !13121
  %205 = load i32, i32* %add.ptr273, align 4, !dbg !13121
  %call274 = call i32 @__fswab32(i32 %205) #8, !dbg !13121
  br label %cond.end275, !dbg !13121

cond.end275:                                      ; preds = %cond.false272, %cond.true256
  %cond276 = phi i32 [ %or271, %cond.true256 ], [ %call274, %cond.false272 ], !dbg !13121
  %and277 = and i32 %cond276, 2147483647, !dbg !13121
  %206 = load i32, i32* %_v168, align 4, !dbg !13121
  %and278 = and i32 %206, 1, !dbg !13121
  %shl279 = shl i32 %and278, 31, !dbg !13121
  %or280 = or i32 %and277, %shl279, !dbg !13121
  %and281 = and i32 %or280, 16711680, !dbg !13121
  %shr282 = lshr i32 %and281, 8, !dbg !13121
  %or283 = or i32 %or254, %shr282, !dbg !13121
  %207 = load i8*, i8** %in, align 8, !dbg !13121
  %208 = bitcast i8* %207 to i32*, !dbg !13121
  %add.ptr284 = getelementptr i32, i32* %208, i64 124, !dbg !13121
  %209 = load i32, i32* %add.ptr284, align 4, !dbg !13121
  %210 = call i1 @llvm.is.constant.i32(i32 %209), !dbg !13121
  br i1 %210, label %cond.true285, label %cond.false301, !dbg !13121

cond.true285:                                     ; preds = %cond.end275
  %211 = load i8*, i8** %in, align 8, !dbg !13121
  %212 = bitcast i8* %211 to i32*, !dbg !13121
  %add.ptr286 = getelementptr i32, i32* %212, i64 124, !dbg !13121
  %213 = load i32, i32* %add.ptr286, align 4, !dbg !13121
  %and287 = and i32 %213, 255, !dbg !13121
  %shl288 = shl i32 %and287, 24, !dbg !13121
  %214 = load i8*, i8** %in, align 8, !dbg !13121
  %215 = bitcast i8* %214 to i32*, !dbg !13121
  %add.ptr289 = getelementptr i32, i32* %215, i64 124, !dbg !13121
  %216 = load i32, i32* %add.ptr289, align 4, !dbg !13121
  %and290 = and i32 %216, 65280, !dbg !13121
  %shl291 = shl i32 %and290, 8, !dbg !13121
  %or292 = or i32 %shl288, %shl291, !dbg !13121
  %217 = load i8*, i8** %in, align 8, !dbg !13121
  %218 = bitcast i8* %217 to i32*, !dbg !13121
  %add.ptr293 = getelementptr i32, i32* %218, i64 124, !dbg !13121
  %219 = load i32, i32* %add.ptr293, align 4, !dbg !13121
  %and294 = and i32 %219, 16711680, !dbg !13121
  %shr295 = lshr i32 %and294, 8, !dbg !13121
  %or296 = or i32 %or292, %shr295, !dbg !13121
  %220 = load i8*, i8** %in, align 8, !dbg !13121
  %221 = bitcast i8* %220 to i32*, !dbg !13121
  %add.ptr297 = getelementptr i32, i32* %221, i64 124, !dbg !13121
  %222 = load i32, i32* %add.ptr297, align 4, !dbg !13121
  %and298 = and i32 %222, -16777216, !dbg !13121
  %shr299 = lshr i32 %and298, 24, !dbg !13121
  %or300 = or i32 %or296, %shr299, !dbg !13121
  br label %cond.end304, !dbg !13121

cond.false301:                                    ; preds = %cond.end275
  %223 = load i8*, i8** %in, align 8, !dbg !13121
  %224 = bitcast i8* %223 to i32*, !dbg !13121
  %add.ptr302 = getelementptr i32, i32* %224, i64 124, !dbg !13121
  %225 = load i32, i32* %add.ptr302, align 4, !dbg !13121
  %call303 = call i32 @__fswab32(i32 %225) #8, !dbg !13121
  br label %cond.end304, !dbg !13121

cond.end304:                                      ; preds = %cond.false301, %cond.true285
  %cond305 = phi i32 [ %or300, %cond.true285 ], [ %call303, %cond.false301 ], !dbg !13121
  %and306 = and i32 %cond305, 2147483647, !dbg !13121
  %226 = load i32, i32* %_v168, align 4, !dbg !13121
  %and307 = and i32 %226, 1, !dbg !13121
  %shl308 = shl i32 %and307, 31, !dbg !13121
  %or309 = or i32 %and306, %shl308, !dbg !13121
  %and310 = and i32 %or309, -16777216, !dbg !13121
  %shr311 = lshr i32 %and310, 24, !dbg !13121
  %or312 = or i32 %or283, %shr311, !dbg !13121
  br label %cond.end341, !dbg !13121

cond.false313:                                    ; preds = %cond.end191
  %227 = load i8*, i8** %in, align 8, !dbg !13121
  %228 = bitcast i8* %227 to i32*, !dbg !13121
  %add.ptr314 = getelementptr i32, i32* %228, i64 124, !dbg !13121
  %229 = load i32, i32* %add.ptr314, align 4, !dbg !13121
  %230 = call i1 @llvm.is.constant.i32(i32 %229), !dbg !13121
  br i1 %230, label %cond.true315, label %cond.false331, !dbg !13121

cond.true315:                                     ; preds = %cond.false313
  %231 = load i8*, i8** %in, align 8, !dbg !13121
  %232 = bitcast i8* %231 to i32*, !dbg !13121
  %add.ptr316 = getelementptr i32, i32* %232, i64 124, !dbg !13121
  %233 = load i32, i32* %add.ptr316, align 4, !dbg !13121
  %and317 = and i32 %233, 255, !dbg !13121
  %shl318 = shl i32 %and317, 24, !dbg !13121
  %234 = load i8*, i8** %in, align 8, !dbg !13121
  %235 = bitcast i8* %234 to i32*, !dbg !13121
  %add.ptr319 = getelementptr i32, i32* %235, i64 124, !dbg !13121
  %236 = load i32, i32* %add.ptr319, align 4, !dbg !13121
  %and320 = and i32 %236, 65280, !dbg !13121
  %shl321 = shl i32 %and320, 8, !dbg !13121
  %or322 = or i32 %shl318, %shl321, !dbg !13121
  %237 = load i8*, i8** %in, align 8, !dbg !13121
  %238 = bitcast i8* %237 to i32*, !dbg !13121
  %add.ptr323 = getelementptr i32, i32* %238, i64 124, !dbg !13121
  %239 = load i32, i32* %add.ptr323, align 4, !dbg !13121
  %and324 = and i32 %239, 16711680, !dbg !13121
  %shr325 = lshr i32 %and324, 8, !dbg !13121
  %or326 = or i32 %or322, %shr325, !dbg !13121
  %240 = load i8*, i8** %in, align 8, !dbg !13121
  %241 = bitcast i8* %240 to i32*, !dbg !13121
  %add.ptr327 = getelementptr i32, i32* %241, i64 124, !dbg !13121
  %242 = load i32, i32* %add.ptr327, align 4, !dbg !13121
  %and328 = and i32 %242, -16777216, !dbg !13121
  %shr329 = lshr i32 %and328, 24, !dbg !13121
  %or330 = or i32 %or326, %shr329, !dbg !13121
  br label %cond.end334, !dbg !13121

cond.false331:                                    ; preds = %cond.false313
  %243 = load i8*, i8** %in, align 8, !dbg !13121
  %244 = bitcast i8* %243 to i32*, !dbg !13121
  %add.ptr332 = getelementptr i32, i32* %244, i64 124, !dbg !13121
  %245 = load i32, i32* %add.ptr332, align 4, !dbg !13121
  %call333 = call i32 @__fswab32(i32 %245) #8, !dbg !13121
  br label %cond.end334, !dbg !13121

cond.end334:                                      ; preds = %cond.false331, %cond.true315
  %cond335 = phi i32 [ %or330, %cond.true315 ], [ %call333, %cond.false331 ], !dbg !13121
  %and336 = and i32 %cond335, 2147483647, !dbg !13121
  %246 = load i32, i32* %_v168, align 4, !dbg !13121
  %and337 = and i32 %246, 1, !dbg !13121
  %shl338 = shl i32 %and337, 31, !dbg !13121
  %or339 = or i32 %and336, %shl338, !dbg !13121
  %call340 = call i32 @__fswab32(i32 %or339) #8, !dbg !13121
  br label %cond.end341, !dbg !13121

cond.end341:                                      ; preds = %cond.end334, %cond.end304
  %cond342 = phi i32 [ %or312, %cond.end304 ], [ %call340, %cond.end334 ], !dbg !13121
  %247 = load i8*, i8** %in, align 8, !dbg !13121
  %248 = bitcast i8* %247 to i32*, !dbg !13121
  %add.ptr343 = getelementptr i32, i32* %248, i64 124, !dbg !13121
  store i32 %cond342, i32* %add.ptr343, align 4, !dbg !13121
  br label %do.end344, !dbg !13121

do.end344:                                        ; preds = %cond.end341
  br label %do.body345, !dbg !13124

do.body345:                                       ; preds = %do.end344
  call void @llvm.dbg.declare(metadata i32* %_v346, metadata !13125, metadata !DIExpression()), !dbg !13127
  %249 = load i32, i32* %promisc_mc.addr, align 4, !dbg !13127
  store i32 %249, i32* %_v346, align 4, !dbg !13127
  br label %do.body347, !dbg !13127

do.body347:                                       ; preds = %do.body345
  br label %do.end348, !dbg !13128

do.end348:                                        ; preds = %do.body347
  %250 = load i8*, i8** %in, align 8, !dbg !13127
  %251 = bitcast i8* %250 to i32*, !dbg !13127
  %add.ptr349 = getelementptr i32, i32* %251, i64 124, !dbg !13127
  %252 = load i32, i32* %add.ptr349, align 4, !dbg !13127
  %253 = call i1 @llvm.is.constant.i32(i32 %252), !dbg !13127
  br i1 %253, label %cond.true350, label %cond.false366, !dbg !13127

cond.true350:                                     ; preds = %do.end348
  %254 = load i8*, i8** %in, align 8, !dbg !13127
  %255 = bitcast i8* %254 to i32*, !dbg !13127
  %add.ptr351 = getelementptr i32, i32* %255, i64 124, !dbg !13127
  %256 = load i32, i32* %add.ptr351, align 4, !dbg !13127
  %and352 = and i32 %256, 255, !dbg !13127
  %shl353 = shl i32 %and352, 24, !dbg !13127
  %257 = load i8*, i8** %in, align 8, !dbg !13127
  %258 = bitcast i8* %257 to i32*, !dbg !13127
  %add.ptr354 = getelementptr i32, i32* %258, i64 124, !dbg !13127
  %259 = load i32, i32* %add.ptr354, align 4, !dbg !13127
  %and355 = and i32 %259, 65280, !dbg !13127
  %shl356 = shl i32 %and355, 8, !dbg !13127
  %or357 = or i32 %shl353, %shl356, !dbg !13127
  %260 = load i8*, i8** %in, align 8, !dbg !13127
  %261 = bitcast i8* %260 to i32*, !dbg !13127
  %add.ptr358 = getelementptr i32, i32* %261, i64 124, !dbg !13127
  %262 = load i32, i32* %add.ptr358, align 4, !dbg !13127
  %and359 = and i32 %262, 16711680, !dbg !13127
  %shr360 = lshr i32 %and359, 8, !dbg !13127
  %or361 = or i32 %or357, %shr360, !dbg !13127
  %263 = load i8*, i8** %in, align 8, !dbg !13127
  %264 = bitcast i8* %263 to i32*, !dbg !13127
  %add.ptr362 = getelementptr i32, i32* %264, i64 124, !dbg !13127
  %265 = load i32, i32* %add.ptr362, align 4, !dbg !13127
  %and363 = and i32 %265, -16777216, !dbg !13127
  %shr364 = lshr i32 %and363, 24, !dbg !13127
  %or365 = or i32 %or361, %shr364, !dbg !13127
  br label %cond.end369, !dbg !13127

cond.false366:                                    ; preds = %do.end348
  %266 = load i8*, i8** %in, align 8, !dbg !13127
  %267 = bitcast i8* %266 to i32*, !dbg !13127
  %add.ptr367 = getelementptr i32, i32* %267, i64 124, !dbg !13127
  %268 = load i32, i32* %add.ptr367, align 4, !dbg !13127
  %call368 = call i32 @__fswab32(i32 %268) #8, !dbg !13127
  br label %cond.end369, !dbg !13127

cond.end369:                                      ; preds = %cond.false366, %cond.true350
  %cond370 = phi i32 [ %or365, %cond.true350 ], [ %call368, %cond.false366 ], !dbg !13127
  %and371 = and i32 %cond370, -1073741825, !dbg !13127
  %269 = load i32, i32* %_v346, align 4, !dbg !13127
  %and372 = and i32 %269, 1, !dbg !13127
  %shl373 = shl i32 %and372, 30, !dbg !13127
  %or374 = or i32 %and371, %shl373, !dbg !13127
  %270 = call i1 @llvm.is.constant.i32(i32 %or374), !dbg !13127
  br i1 %270, label %cond.true375, label %cond.false491, !dbg !13127

cond.true375:                                     ; preds = %cond.end369
  %271 = load i8*, i8** %in, align 8, !dbg !13127
  %272 = bitcast i8* %271 to i32*, !dbg !13127
  %add.ptr376 = getelementptr i32, i32* %272, i64 124, !dbg !13127
  %273 = load i32, i32* %add.ptr376, align 4, !dbg !13127
  %274 = call i1 @llvm.is.constant.i32(i32 %273), !dbg !13127
  br i1 %274, label %cond.true377, label %cond.false393, !dbg !13127

cond.true377:                                     ; preds = %cond.true375
  %275 = load i8*, i8** %in, align 8, !dbg !13127
  %276 = bitcast i8* %275 to i32*, !dbg !13127
  %add.ptr378 = getelementptr i32, i32* %276, i64 124, !dbg !13127
  %277 = load i32, i32* %add.ptr378, align 4, !dbg !13127
  %and379 = and i32 %277, 255, !dbg !13127
  %shl380 = shl i32 %and379, 24, !dbg !13127
  %278 = load i8*, i8** %in, align 8, !dbg !13127
  %279 = bitcast i8* %278 to i32*, !dbg !13127
  %add.ptr381 = getelementptr i32, i32* %279, i64 124, !dbg !13127
  %280 = load i32, i32* %add.ptr381, align 4, !dbg !13127
  %and382 = and i32 %280, 65280, !dbg !13127
  %shl383 = shl i32 %and382, 8, !dbg !13127
  %or384 = or i32 %shl380, %shl383, !dbg !13127
  %281 = load i8*, i8** %in, align 8, !dbg !13127
  %282 = bitcast i8* %281 to i32*, !dbg !13127
  %add.ptr385 = getelementptr i32, i32* %282, i64 124, !dbg !13127
  %283 = load i32, i32* %add.ptr385, align 4, !dbg !13127
  %and386 = and i32 %283, 16711680, !dbg !13127
  %shr387 = lshr i32 %and386, 8, !dbg !13127
  %or388 = or i32 %or384, %shr387, !dbg !13127
  %284 = load i8*, i8** %in, align 8, !dbg !13127
  %285 = bitcast i8* %284 to i32*, !dbg !13127
  %add.ptr389 = getelementptr i32, i32* %285, i64 124, !dbg !13127
  %286 = load i32, i32* %add.ptr389, align 4, !dbg !13127
  %and390 = and i32 %286, -16777216, !dbg !13127
  %shr391 = lshr i32 %and390, 24, !dbg !13127
  %or392 = or i32 %or388, %shr391, !dbg !13127
  br label %cond.end396, !dbg !13127

cond.false393:                                    ; preds = %cond.true375
  %287 = load i8*, i8** %in, align 8, !dbg !13127
  %288 = bitcast i8* %287 to i32*, !dbg !13127
  %add.ptr394 = getelementptr i32, i32* %288, i64 124, !dbg !13127
  %289 = load i32, i32* %add.ptr394, align 4, !dbg !13127
  %call395 = call i32 @__fswab32(i32 %289) #8, !dbg !13127
  br label %cond.end396, !dbg !13127

cond.end396:                                      ; preds = %cond.false393, %cond.true377
  %cond397 = phi i32 [ %or392, %cond.true377 ], [ %call395, %cond.false393 ], !dbg !13127
  %and398 = and i32 %cond397, -1073741825, !dbg !13127
  %290 = load i32, i32* %_v346, align 4, !dbg !13127
  %and399 = and i32 %290, 1, !dbg !13127
  %shl400 = shl i32 %and399, 30, !dbg !13127
  %or401 = or i32 %and398, %shl400, !dbg !13127
  %and402 = and i32 %or401, 255, !dbg !13127
  %shl403 = shl i32 %and402, 24, !dbg !13127
  %291 = load i8*, i8** %in, align 8, !dbg !13127
  %292 = bitcast i8* %291 to i32*, !dbg !13127
  %add.ptr404 = getelementptr i32, i32* %292, i64 124, !dbg !13127
  %293 = load i32, i32* %add.ptr404, align 4, !dbg !13127
  %294 = call i1 @llvm.is.constant.i32(i32 %293), !dbg !13127
  br i1 %294, label %cond.true405, label %cond.false421, !dbg !13127

cond.true405:                                     ; preds = %cond.end396
  %295 = load i8*, i8** %in, align 8, !dbg !13127
  %296 = bitcast i8* %295 to i32*, !dbg !13127
  %add.ptr406 = getelementptr i32, i32* %296, i64 124, !dbg !13127
  %297 = load i32, i32* %add.ptr406, align 4, !dbg !13127
  %and407 = and i32 %297, 255, !dbg !13127
  %shl408 = shl i32 %and407, 24, !dbg !13127
  %298 = load i8*, i8** %in, align 8, !dbg !13127
  %299 = bitcast i8* %298 to i32*, !dbg !13127
  %add.ptr409 = getelementptr i32, i32* %299, i64 124, !dbg !13127
  %300 = load i32, i32* %add.ptr409, align 4, !dbg !13127
  %and410 = and i32 %300, 65280, !dbg !13127
  %shl411 = shl i32 %and410, 8, !dbg !13127
  %or412 = or i32 %shl408, %shl411, !dbg !13127
  %301 = load i8*, i8** %in, align 8, !dbg !13127
  %302 = bitcast i8* %301 to i32*, !dbg !13127
  %add.ptr413 = getelementptr i32, i32* %302, i64 124, !dbg !13127
  %303 = load i32, i32* %add.ptr413, align 4, !dbg !13127
  %and414 = and i32 %303, 16711680, !dbg !13127
  %shr415 = lshr i32 %and414, 8, !dbg !13127
  %or416 = or i32 %or412, %shr415, !dbg !13127
  %304 = load i8*, i8** %in, align 8, !dbg !13127
  %305 = bitcast i8* %304 to i32*, !dbg !13127
  %add.ptr417 = getelementptr i32, i32* %305, i64 124, !dbg !13127
  %306 = load i32, i32* %add.ptr417, align 4, !dbg !13127
  %and418 = and i32 %306, -16777216, !dbg !13127
  %shr419 = lshr i32 %and418, 24, !dbg !13127
  %or420 = or i32 %or416, %shr419, !dbg !13127
  br label %cond.end424, !dbg !13127

cond.false421:                                    ; preds = %cond.end396
  %307 = load i8*, i8** %in, align 8, !dbg !13127
  %308 = bitcast i8* %307 to i32*, !dbg !13127
  %add.ptr422 = getelementptr i32, i32* %308, i64 124, !dbg !13127
  %309 = load i32, i32* %add.ptr422, align 4, !dbg !13127
  %call423 = call i32 @__fswab32(i32 %309) #8, !dbg !13127
  br label %cond.end424, !dbg !13127

cond.end424:                                      ; preds = %cond.false421, %cond.true405
  %cond425 = phi i32 [ %or420, %cond.true405 ], [ %call423, %cond.false421 ], !dbg !13127
  %and426 = and i32 %cond425, -1073741825, !dbg !13127
  %310 = load i32, i32* %_v346, align 4, !dbg !13127
  %and427 = and i32 %310, 1, !dbg !13127
  %shl428 = shl i32 %and427, 30, !dbg !13127
  %or429 = or i32 %and426, %shl428, !dbg !13127
  %and430 = and i32 %or429, 65280, !dbg !13127
  %shl431 = shl i32 %and430, 8, !dbg !13127
  %or432 = or i32 %shl403, %shl431, !dbg !13127
  %311 = load i8*, i8** %in, align 8, !dbg !13127
  %312 = bitcast i8* %311 to i32*, !dbg !13127
  %add.ptr433 = getelementptr i32, i32* %312, i64 124, !dbg !13127
  %313 = load i32, i32* %add.ptr433, align 4, !dbg !13127
  %314 = call i1 @llvm.is.constant.i32(i32 %313), !dbg !13127
  br i1 %314, label %cond.true434, label %cond.false450, !dbg !13127

cond.true434:                                     ; preds = %cond.end424
  %315 = load i8*, i8** %in, align 8, !dbg !13127
  %316 = bitcast i8* %315 to i32*, !dbg !13127
  %add.ptr435 = getelementptr i32, i32* %316, i64 124, !dbg !13127
  %317 = load i32, i32* %add.ptr435, align 4, !dbg !13127
  %and436 = and i32 %317, 255, !dbg !13127
  %shl437 = shl i32 %and436, 24, !dbg !13127
  %318 = load i8*, i8** %in, align 8, !dbg !13127
  %319 = bitcast i8* %318 to i32*, !dbg !13127
  %add.ptr438 = getelementptr i32, i32* %319, i64 124, !dbg !13127
  %320 = load i32, i32* %add.ptr438, align 4, !dbg !13127
  %and439 = and i32 %320, 65280, !dbg !13127
  %shl440 = shl i32 %and439, 8, !dbg !13127
  %or441 = or i32 %shl437, %shl440, !dbg !13127
  %321 = load i8*, i8** %in, align 8, !dbg !13127
  %322 = bitcast i8* %321 to i32*, !dbg !13127
  %add.ptr442 = getelementptr i32, i32* %322, i64 124, !dbg !13127
  %323 = load i32, i32* %add.ptr442, align 4, !dbg !13127
  %and443 = and i32 %323, 16711680, !dbg !13127
  %shr444 = lshr i32 %and443, 8, !dbg !13127
  %or445 = or i32 %or441, %shr444, !dbg !13127
  %324 = load i8*, i8** %in, align 8, !dbg !13127
  %325 = bitcast i8* %324 to i32*, !dbg !13127
  %add.ptr446 = getelementptr i32, i32* %325, i64 124, !dbg !13127
  %326 = load i32, i32* %add.ptr446, align 4, !dbg !13127
  %and447 = and i32 %326, -16777216, !dbg !13127
  %shr448 = lshr i32 %and447, 24, !dbg !13127
  %or449 = or i32 %or445, %shr448, !dbg !13127
  br label %cond.end453, !dbg !13127

cond.false450:                                    ; preds = %cond.end424
  %327 = load i8*, i8** %in, align 8, !dbg !13127
  %328 = bitcast i8* %327 to i32*, !dbg !13127
  %add.ptr451 = getelementptr i32, i32* %328, i64 124, !dbg !13127
  %329 = load i32, i32* %add.ptr451, align 4, !dbg !13127
  %call452 = call i32 @__fswab32(i32 %329) #8, !dbg !13127
  br label %cond.end453, !dbg !13127

cond.end453:                                      ; preds = %cond.false450, %cond.true434
  %cond454 = phi i32 [ %or449, %cond.true434 ], [ %call452, %cond.false450 ], !dbg !13127
  %and455 = and i32 %cond454, -1073741825, !dbg !13127
  %330 = load i32, i32* %_v346, align 4, !dbg !13127
  %and456 = and i32 %330, 1, !dbg !13127
  %shl457 = shl i32 %and456, 30, !dbg !13127
  %or458 = or i32 %and455, %shl457, !dbg !13127
  %and459 = and i32 %or458, 16711680, !dbg !13127
  %shr460 = lshr i32 %and459, 8, !dbg !13127
  %or461 = or i32 %or432, %shr460, !dbg !13127
  %331 = load i8*, i8** %in, align 8, !dbg !13127
  %332 = bitcast i8* %331 to i32*, !dbg !13127
  %add.ptr462 = getelementptr i32, i32* %332, i64 124, !dbg !13127
  %333 = load i32, i32* %add.ptr462, align 4, !dbg !13127
  %334 = call i1 @llvm.is.constant.i32(i32 %333), !dbg !13127
  br i1 %334, label %cond.true463, label %cond.false479, !dbg !13127

cond.true463:                                     ; preds = %cond.end453
  %335 = load i8*, i8** %in, align 8, !dbg !13127
  %336 = bitcast i8* %335 to i32*, !dbg !13127
  %add.ptr464 = getelementptr i32, i32* %336, i64 124, !dbg !13127
  %337 = load i32, i32* %add.ptr464, align 4, !dbg !13127
  %and465 = and i32 %337, 255, !dbg !13127
  %shl466 = shl i32 %and465, 24, !dbg !13127
  %338 = load i8*, i8** %in, align 8, !dbg !13127
  %339 = bitcast i8* %338 to i32*, !dbg !13127
  %add.ptr467 = getelementptr i32, i32* %339, i64 124, !dbg !13127
  %340 = load i32, i32* %add.ptr467, align 4, !dbg !13127
  %and468 = and i32 %340, 65280, !dbg !13127
  %shl469 = shl i32 %and468, 8, !dbg !13127
  %or470 = or i32 %shl466, %shl469, !dbg !13127
  %341 = load i8*, i8** %in, align 8, !dbg !13127
  %342 = bitcast i8* %341 to i32*, !dbg !13127
  %add.ptr471 = getelementptr i32, i32* %342, i64 124, !dbg !13127
  %343 = load i32, i32* %add.ptr471, align 4, !dbg !13127
  %and472 = and i32 %343, 16711680, !dbg !13127
  %shr473 = lshr i32 %and472, 8, !dbg !13127
  %or474 = or i32 %or470, %shr473, !dbg !13127
  %344 = load i8*, i8** %in, align 8, !dbg !13127
  %345 = bitcast i8* %344 to i32*, !dbg !13127
  %add.ptr475 = getelementptr i32, i32* %345, i64 124, !dbg !13127
  %346 = load i32, i32* %add.ptr475, align 4, !dbg !13127
  %and476 = and i32 %346, -16777216, !dbg !13127
  %shr477 = lshr i32 %and476, 24, !dbg !13127
  %or478 = or i32 %or474, %shr477, !dbg !13127
  br label %cond.end482, !dbg !13127

cond.false479:                                    ; preds = %cond.end453
  %347 = load i8*, i8** %in, align 8, !dbg !13127
  %348 = bitcast i8* %347 to i32*, !dbg !13127
  %add.ptr480 = getelementptr i32, i32* %348, i64 124, !dbg !13127
  %349 = load i32, i32* %add.ptr480, align 4, !dbg !13127
  %call481 = call i32 @__fswab32(i32 %349) #8, !dbg !13127
  br label %cond.end482, !dbg !13127

cond.end482:                                      ; preds = %cond.false479, %cond.true463
  %cond483 = phi i32 [ %or478, %cond.true463 ], [ %call481, %cond.false479 ], !dbg !13127
  %and484 = and i32 %cond483, -1073741825, !dbg !13127
  %350 = load i32, i32* %_v346, align 4, !dbg !13127
  %and485 = and i32 %350, 1, !dbg !13127
  %shl486 = shl i32 %and485, 30, !dbg !13127
  %or487 = or i32 %and484, %shl486, !dbg !13127
  %and488 = and i32 %or487, -16777216, !dbg !13127
  %shr489 = lshr i32 %and488, 24, !dbg !13127
  %or490 = or i32 %or461, %shr489, !dbg !13127
  br label %cond.end519, !dbg !13127

cond.false491:                                    ; preds = %cond.end369
  %351 = load i8*, i8** %in, align 8, !dbg !13127
  %352 = bitcast i8* %351 to i32*, !dbg !13127
  %add.ptr492 = getelementptr i32, i32* %352, i64 124, !dbg !13127
  %353 = load i32, i32* %add.ptr492, align 4, !dbg !13127
  %354 = call i1 @llvm.is.constant.i32(i32 %353), !dbg !13127
  br i1 %354, label %cond.true493, label %cond.false509, !dbg !13127

cond.true493:                                     ; preds = %cond.false491
  %355 = load i8*, i8** %in, align 8, !dbg !13127
  %356 = bitcast i8* %355 to i32*, !dbg !13127
  %add.ptr494 = getelementptr i32, i32* %356, i64 124, !dbg !13127
  %357 = load i32, i32* %add.ptr494, align 4, !dbg !13127
  %and495 = and i32 %357, 255, !dbg !13127
  %shl496 = shl i32 %and495, 24, !dbg !13127
  %358 = load i8*, i8** %in, align 8, !dbg !13127
  %359 = bitcast i8* %358 to i32*, !dbg !13127
  %add.ptr497 = getelementptr i32, i32* %359, i64 124, !dbg !13127
  %360 = load i32, i32* %add.ptr497, align 4, !dbg !13127
  %and498 = and i32 %360, 65280, !dbg !13127
  %shl499 = shl i32 %and498, 8, !dbg !13127
  %or500 = or i32 %shl496, %shl499, !dbg !13127
  %361 = load i8*, i8** %in, align 8, !dbg !13127
  %362 = bitcast i8* %361 to i32*, !dbg !13127
  %add.ptr501 = getelementptr i32, i32* %362, i64 124, !dbg !13127
  %363 = load i32, i32* %add.ptr501, align 4, !dbg !13127
  %and502 = and i32 %363, 16711680, !dbg !13127
  %shr503 = lshr i32 %and502, 8, !dbg !13127
  %or504 = or i32 %or500, %shr503, !dbg !13127
  %364 = load i8*, i8** %in, align 8, !dbg !13127
  %365 = bitcast i8* %364 to i32*, !dbg !13127
  %add.ptr505 = getelementptr i32, i32* %365, i64 124, !dbg !13127
  %366 = load i32, i32* %add.ptr505, align 4, !dbg !13127
  %and506 = and i32 %366, -16777216, !dbg !13127
  %shr507 = lshr i32 %and506, 24, !dbg !13127
  %or508 = or i32 %or504, %shr507, !dbg !13127
  br label %cond.end512, !dbg !13127

cond.false509:                                    ; preds = %cond.false491
  %367 = load i8*, i8** %in, align 8, !dbg !13127
  %368 = bitcast i8* %367 to i32*, !dbg !13127
  %add.ptr510 = getelementptr i32, i32* %368, i64 124, !dbg !13127
  %369 = load i32, i32* %add.ptr510, align 4, !dbg !13127
  %call511 = call i32 @__fswab32(i32 %369) #8, !dbg !13127
  br label %cond.end512, !dbg !13127

cond.end512:                                      ; preds = %cond.false509, %cond.true493
  %cond513 = phi i32 [ %or508, %cond.true493 ], [ %call511, %cond.false509 ], !dbg !13127
  %and514 = and i32 %cond513, -1073741825, !dbg !13127
  %370 = load i32, i32* %_v346, align 4, !dbg !13127
  %and515 = and i32 %370, 1, !dbg !13127
  %shl516 = shl i32 %and515, 30, !dbg !13127
  %or517 = or i32 %and514, %shl516, !dbg !13127
  %call518 = call i32 @__fswab32(i32 %or517) #8, !dbg !13127
  br label %cond.end519, !dbg !13127

cond.end519:                                      ; preds = %cond.end512, %cond.end482
  %cond520 = phi i32 [ %or490, %cond.end482 ], [ %call518, %cond.end512 ], !dbg !13127
  %371 = load i8*, i8** %in, align 8, !dbg !13127
  %372 = bitcast i8* %371 to i32*, !dbg !13127
  %add.ptr521 = getelementptr i32, i32* %372, i64 124, !dbg !13127
  store i32 %cond520, i32* %add.ptr521, align 4, !dbg !13127
  br label %do.end522, !dbg !13127

do.end522:                                        ; preds = %cond.end519
  br label %do.body523, !dbg !13130

do.body523:                                       ; preds = %do.end522
  call void @llvm.dbg.declare(metadata i32* %_v524, metadata !13131, metadata !DIExpression()), !dbg !13133
  %373 = load i32, i32* %promisc_all.addr, align 4, !dbg !13133
  store i32 %373, i32* %_v524, align 4, !dbg !13133
  br label %do.body525, !dbg !13133

do.body525:                                       ; preds = %do.body523
  br label %do.end526, !dbg !13134

do.end526:                                        ; preds = %do.body525
  %374 = load i8*, i8** %in, align 8, !dbg !13133
  %375 = bitcast i8* %374 to i32*, !dbg !13133
  %add.ptr527 = getelementptr i32, i32* %375, i64 124, !dbg !13133
  %376 = load i32, i32* %add.ptr527, align 4, !dbg !13133
  %377 = call i1 @llvm.is.constant.i32(i32 %376), !dbg !13133
  br i1 %377, label %cond.true528, label %cond.false544, !dbg !13133

cond.true528:                                     ; preds = %do.end526
  %378 = load i8*, i8** %in, align 8, !dbg !13133
  %379 = bitcast i8* %378 to i32*, !dbg !13133
  %add.ptr529 = getelementptr i32, i32* %379, i64 124, !dbg !13133
  %380 = load i32, i32* %add.ptr529, align 4, !dbg !13133
  %and530 = and i32 %380, 255, !dbg !13133
  %shl531 = shl i32 %and530, 24, !dbg !13133
  %381 = load i8*, i8** %in, align 8, !dbg !13133
  %382 = bitcast i8* %381 to i32*, !dbg !13133
  %add.ptr532 = getelementptr i32, i32* %382, i64 124, !dbg !13133
  %383 = load i32, i32* %add.ptr532, align 4, !dbg !13133
  %and533 = and i32 %383, 65280, !dbg !13133
  %shl534 = shl i32 %and533, 8, !dbg !13133
  %or535 = or i32 %shl531, %shl534, !dbg !13133
  %384 = load i8*, i8** %in, align 8, !dbg !13133
  %385 = bitcast i8* %384 to i32*, !dbg !13133
  %add.ptr536 = getelementptr i32, i32* %385, i64 124, !dbg !13133
  %386 = load i32, i32* %add.ptr536, align 4, !dbg !13133
  %and537 = and i32 %386, 16711680, !dbg !13133
  %shr538 = lshr i32 %and537, 8, !dbg !13133
  %or539 = or i32 %or535, %shr538, !dbg !13133
  %387 = load i8*, i8** %in, align 8, !dbg !13133
  %388 = bitcast i8* %387 to i32*, !dbg !13133
  %add.ptr540 = getelementptr i32, i32* %388, i64 124, !dbg !13133
  %389 = load i32, i32* %add.ptr540, align 4, !dbg !13133
  %and541 = and i32 %389, -16777216, !dbg !13133
  %shr542 = lshr i32 %and541, 24, !dbg !13133
  %or543 = or i32 %or539, %shr542, !dbg !13133
  br label %cond.end547, !dbg !13133

cond.false544:                                    ; preds = %do.end526
  %390 = load i8*, i8** %in, align 8, !dbg !13133
  %391 = bitcast i8* %390 to i32*, !dbg !13133
  %add.ptr545 = getelementptr i32, i32* %391, i64 124, !dbg !13133
  %392 = load i32, i32* %add.ptr545, align 4, !dbg !13133
  %call546 = call i32 @__fswab32(i32 %392) #8, !dbg !13133
  br label %cond.end547, !dbg !13133

cond.end547:                                      ; preds = %cond.false544, %cond.true528
  %cond548 = phi i32 [ %or543, %cond.true528 ], [ %call546, %cond.false544 ], !dbg !13133
  %and549 = and i32 %cond548, -536870913, !dbg !13133
  %393 = load i32, i32* %_v524, align 4, !dbg !13133
  %and550 = and i32 %393, 1, !dbg !13133
  %shl551 = shl i32 %and550, 29, !dbg !13133
  %or552 = or i32 %and549, %shl551, !dbg !13133
  %394 = call i1 @llvm.is.constant.i32(i32 %or552), !dbg !13133
  br i1 %394, label %cond.true553, label %cond.false669, !dbg !13133

cond.true553:                                     ; preds = %cond.end547
  %395 = load i8*, i8** %in, align 8, !dbg !13133
  %396 = bitcast i8* %395 to i32*, !dbg !13133
  %add.ptr554 = getelementptr i32, i32* %396, i64 124, !dbg !13133
  %397 = load i32, i32* %add.ptr554, align 4, !dbg !13133
  %398 = call i1 @llvm.is.constant.i32(i32 %397), !dbg !13133
  br i1 %398, label %cond.true555, label %cond.false571, !dbg !13133

cond.true555:                                     ; preds = %cond.true553
  %399 = load i8*, i8** %in, align 8, !dbg !13133
  %400 = bitcast i8* %399 to i32*, !dbg !13133
  %add.ptr556 = getelementptr i32, i32* %400, i64 124, !dbg !13133
  %401 = load i32, i32* %add.ptr556, align 4, !dbg !13133
  %and557 = and i32 %401, 255, !dbg !13133
  %shl558 = shl i32 %and557, 24, !dbg !13133
  %402 = load i8*, i8** %in, align 8, !dbg !13133
  %403 = bitcast i8* %402 to i32*, !dbg !13133
  %add.ptr559 = getelementptr i32, i32* %403, i64 124, !dbg !13133
  %404 = load i32, i32* %add.ptr559, align 4, !dbg !13133
  %and560 = and i32 %404, 65280, !dbg !13133
  %shl561 = shl i32 %and560, 8, !dbg !13133
  %or562 = or i32 %shl558, %shl561, !dbg !13133
  %405 = load i8*, i8** %in, align 8, !dbg !13133
  %406 = bitcast i8* %405 to i32*, !dbg !13133
  %add.ptr563 = getelementptr i32, i32* %406, i64 124, !dbg !13133
  %407 = load i32, i32* %add.ptr563, align 4, !dbg !13133
  %and564 = and i32 %407, 16711680, !dbg !13133
  %shr565 = lshr i32 %and564, 8, !dbg !13133
  %or566 = or i32 %or562, %shr565, !dbg !13133
  %408 = load i8*, i8** %in, align 8, !dbg !13133
  %409 = bitcast i8* %408 to i32*, !dbg !13133
  %add.ptr567 = getelementptr i32, i32* %409, i64 124, !dbg !13133
  %410 = load i32, i32* %add.ptr567, align 4, !dbg !13133
  %and568 = and i32 %410, -16777216, !dbg !13133
  %shr569 = lshr i32 %and568, 24, !dbg !13133
  %or570 = or i32 %or566, %shr569, !dbg !13133
  br label %cond.end574, !dbg !13133

cond.false571:                                    ; preds = %cond.true553
  %411 = load i8*, i8** %in, align 8, !dbg !13133
  %412 = bitcast i8* %411 to i32*, !dbg !13133
  %add.ptr572 = getelementptr i32, i32* %412, i64 124, !dbg !13133
  %413 = load i32, i32* %add.ptr572, align 4, !dbg !13133
  %call573 = call i32 @__fswab32(i32 %413) #8, !dbg !13133
  br label %cond.end574, !dbg !13133

cond.end574:                                      ; preds = %cond.false571, %cond.true555
  %cond575 = phi i32 [ %or570, %cond.true555 ], [ %call573, %cond.false571 ], !dbg !13133
  %and576 = and i32 %cond575, -536870913, !dbg !13133
  %414 = load i32, i32* %_v524, align 4, !dbg !13133
  %and577 = and i32 %414, 1, !dbg !13133
  %shl578 = shl i32 %and577, 29, !dbg !13133
  %or579 = or i32 %and576, %shl578, !dbg !13133
  %and580 = and i32 %or579, 255, !dbg !13133
  %shl581 = shl i32 %and580, 24, !dbg !13133
  %415 = load i8*, i8** %in, align 8, !dbg !13133
  %416 = bitcast i8* %415 to i32*, !dbg !13133
  %add.ptr582 = getelementptr i32, i32* %416, i64 124, !dbg !13133
  %417 = load i32, i32* %add.ptr582, align 4, !dbg !13133
  %418 = call i1 @llvm.is.constant.i32(i32 %417), !dbg !13133
  br i1 %418, label %cond.true583, label %cond.false599, !dbg !13133

cond.true583:                                     ; preds = %cond.end574
  %419 = load i8*, i8** %in, align 8, !dbg !13133
  %420 = bitcast i8* %419 to i32*, !dbg !13133
  %add.ptr584 = getelementptr i32, i32* %420, i64 124, !dbg !13133
  %421 = load i32, i32* %add.ptr584, align 4, !dbg !13133
  %and585 = and i32 %421, 255, !dbg !13133
  %shl586 = shl i32 %and585, 24, !dbg !13133
  %422 = load i8*, i8** %in, align 8, !dbg !13133
  %423 = bitcast i8* %422 to i32*, !dbg !13133
  %add.ptr587 = getelementptr i32, i32* %423, i64 124, !dbg !13133
  %424 = load i32, i32* %add.ptr587, align 4, !dbg !13133
  %and588 = and i32 %424, 65280, !dbg !13133
  %shl589 = shl i32 %and588, 8, !dbg !13133
  %or590 = or i32 %shl586, %shl589, !dbg !13133
  %425 = load i8*, i8** %in, align 8, !dbg !13133
  %426 = bitcast i8* %425 to i32*, !dbg !13133
  %add.ptr591 = getelementptr i32, i32* %426, i64 124, !dbg !13133
  %427 = load i32, i32* %add.ptr591, align 4, !dbg !13133
  %and592 = and i32 %427, 16711680, !dbg !13133
  %shr593 = lshr i32 %and592, 8, !dbg !13133
  %or594 = or i32 %or590, %shr593, !dbg !13133
  %428 = load i8*, i8** %in, align 8, !dbg !13133
  %429 = bitcast i8* %428 to i32*, !dbg !13133
  %add.ptr595 = getelementptr i32, i32* %429, i64 124, !dbg !13133
  %430 = load i32, i32* %add.ptr595, align 4, !dbg !13133
  %and596 = and i32 %430, -16777216, !dbg !13133
  %shr597 = lshr i32 %and596, 24, !dbg !13133
  %or598 = or i32 %or594, %shr597, !dbg !13133
  br label %cond.end602, !dbg !13133

cond.false599:                                    ; preds = %cond.end574
  %431 = load i8*, i8** %in, align 8, !dbg !13133
  %432 = bitcast i8* %431 to i32*, !dbg !13133
  %add.ptr600 = getelementptr i32, i32* %432, i64 124, !dbg !13133
  %433 = load i32, i32* %add.ptr600, align 4, !dbg !13133
  %call601 = call i32 @__fswab32(i32 %433) #8, !dbg !13133
  br label %cond.end602, !dbg !13133

cond.end602:                                      ; preds = %cond.false599, %cond.true583
  %cond603 = phi i32 [ %or598, %cond.true583 ], [ %call601, %cond.false599 ], !dbg !13133
  %and604 = and i32 %cond603, -536870913, !dbg !13133
  %434 = load i32, i32* %_v524, align 4, !dbg !13133
  %and605 = and i32 %434, 1, !dbg !13133
  %shl606 = shl i32 %and605, 29, !dbg !13133
  %or607 = or i32 %and604, %shl606, !dbg !13133
  %and608 = and i32 %or607, 65280, !dbg !13133
  %shl609 = shl i32 %and608, 8, !dbg !13133
  %or610 = or i32 %shl581, %shl609, !dbg !13133
  %435 = load i8*, i8** %in, align 8, !dbg !13133
  %436 = bitcast i8* %435 to i32*, !dbg !13133
  %add.ptr611 = getelementptr i32, i32* %436, i64 124, !dbg !13133
  %437 = load i32, i32* %add.ptr611, align 4, !dbg !13133
  %438 = call i1 @llvm.is.constant.i32(i32 %437), !dbg !13133
  br i1 %438, label %cond.true612, label %cond.false628, !dbg !13133

cond.true612:                                     ; preds = %cond.end602
  %439 = load i8*, i8** %in, align 8, !dbg !13133
  %440 = bitcast i8* %439 to i32*, !dbg !13133
  %add.ptr613 = getelementptr i32, i32* %440, i64 124, !dbg !13133
  %441 = load i32, i32* %add.ptr613, align 4, !dbg !13133
  %and614 = and i32 %441, 255, !dbg !13133
  %shl615 = shl i32 %and614, 24, !dbg !13133
  %442 = load i8*, i8** %in, align 8, !dbg !13133
  %443 = bitcast i8* %442 to i32*, !dbg !13133
  %add.ptr616 = getelementptr i32, i32* %443, i64 124, !dbg !13133
  %444 = load i32, i32* %add.ptr616, align 4, !dbg !13133
  %and617 = and i32 %444, 65280, !dbg !13133
  %shl618 = shl i32 %and617, 8, !dbg !13133
  %or619 = or i32 %shl615, %shl618, !dbg !13133
  %445 = load i8*, i8** %in, align 8, !dbg !13133
  %446 = bitcast i8* %445 to i32*, !dbg !13133
  %add.ptr620 = getelementptr i32, i32* %446, i64 124, !dbg !13133
  %447 = load i32, i32* %add.ptr620, align 4, !dbg !13133
  %and621 = and i32 %447, 16711680, !dbg !13133
  %shr622 = lshr i32 %and621, 8, !dbg !13133
  %or623 = or i32 %or619, %shr622, !dbg !13133
  %448 = load i8*, i8** %in, align 8, !dbg !13133
  %449 = bitcast i8* %448 to i32*, !dbg !13133
  %add.ptr624 = getelementptr i32, i32* %449, i64 124, !dbg !13133
  %450 = load i32, i32* %add.ptr624, align 4, !dbg !13133
  %and625 = and i32 %450, -16777216, !dbg !13133
  %shr626 = lshr i32 %and625, 24, !dbg !13133
  %or627 = or i32 %or623, %shr626, !dbg !13133
  br label %cond.end631, !dbg !13133

cond.false628:                                    ; preds = %cond.end602
  %451 = load i8*, i8** %in, align 8, !dbg !13133
  %452 = bitcast i8* %451 to i32*, !dbg !13133
  %add.ptr629 = getelementptr i32, i32* %452, i64 124, !dbg !13133
  %453 = load i32, i32* %add.ptr629, align 4, !dbg !13133
  %call630 = call i32 @__fswab32(i32 %453) #8, !dbg !13133
  br label %cond.end631, !dbg !13133

cond.end631:                                      ; preds = %cond.false628, %cond.true612
  %cond632 = phi i32 [ %or627, %cond.true612 ], [ %call630, %cond.false628 ], !dbg !13133
  %and633 = and i32 %cond632, -536870913, !dbg !13133
  %454 = load i32, i32* %_v524, align 4, !dbg !13133
  %and634 = and i32 %454, 1, !dbg !13133
  %shl635 = shl i32 %and634, 29, !dbg !13133
  %or636 = or i32 %and633, %shl635, !dbg !13133
  %and637 = and i32 %or636, 16711680, !dbg !13133
  %shr638 = lshr i32 %and637, 8, !dbg !13133
  %or639 = or i32 %or610, %shr638, !dbg !13133
  %455 = load i8*, i8** %in, align 8, !dbg !13133
  %456 = bitcast i8* %455 to i32*, !dbg !13133
  %add.ptr640 = getelementptr i32, i32* %456, i64 124, !dbg !13133
  %457 = load i32, i32* %add.ptr640, align 4, !dbg !13133
  %458 = call i1 @llvm.is.constant.i32(i32 %457), !dbg !13133
  br i1 %458, label %cond.true641, label %cond.false657, !dbg !13133

cond.true641:                                     ; preds = %cond.end631
  %459 = load i8*, i8** %in, align 8, !dbg !13133
  %460 = bitcast i8* %459 to i32*, !dbg !13133
  %add.ptr642 = getelementptr i32, i32* %460, i64 124, !dbg !13133
  %461 = load i32, i32* %add.ptr642, align 4, !dbg !13133
  %and643 = and i32 %461, 255, !dbg !13133
  %shl644 = shl i32 %and643, 24, !dbg !13133
  %462 = load i8*, i8** %in, align 8, !dbg !13133
  %463 = bitcast i8* %462 to i32*, !dbg !13133
  %add.ptr645 = getelementptr i32, i32* %463, i64 124, !dbg !13133
  %464 = load i32, i32* %add.ptr645, align 4, !dbg !13133
  %and646 = and i32 %464, 65280, !dbg !13133
  %shl647 = shl i32 %and646, 8, !dbg !13133
  %or648 = or i32 %shl644, %shl647, !dbg !13133
  %465 = load i8*, i8** %in, align 8, !dbg !13133
  %466 = bitcast i8* %465 to i32*, !dbg !13133
  %add.ptr649 = getelementptr i32, i32* %466, i64 124, !dbg !13133
  %467 = load i32, i32* %add.ptr649, align 4, !dbg !13133
  %and650 = and i32 %467, 16711680, !dbg !13133
  %shr651 = lshr i32 %and650, 8, !dbg !13133
  %or652 = or i32 %or648, %shr651, !dbg !13133
  %468 = load i8*, i8** %in, align 8, !dbg !13133
  %469 = bitcast i8* %468 to i32*, !dbg !13133
  %add.ptr653 = getelementptr i32, i32* %469, i64 124, !dbg !13133
  %470 = load i32, i32* %add.ptr653, align 4, !dbg !13133
  %and654 = and i32 %470, -16777216, !dbg !13133
  %shr655 = lshr i32 %and654, 24, !dbg !13133
  %or656 = or i32 %or652, %shr655, !dbg !13133
  br label %cond.end660, !dbg !13133

cond.false657:                                    ; preds = %cond.end631
  %471 = load i8*, i8** %in, align 8, !dbg !13133
  %472 = bitcast i8* %471 to i32*, !dbg !13133
  %add.ptr658 = getelementptr i32, i32* %472, i64 124, !dbg !13133
  %473 = load i32, i32* %add.ptr658, align 4, !dbg !13133
  %call659 = call i32 @__fswab32(i32 %473) #8, !dbg !13133
  br label %cond.end660, !dbg !13133

cond.end660:                                      ; preds = %cond.false657, %cond.true641
  %cond661 = phi i32 [ %or656, %cond.true641 ], [ %call659, %cond.false657 ], !dbg !13133
  %and662 = and i32 %cond661, -536870913, !dbg !13133
  %474 = load i32, i32* %_v524, align 4, !dbg !13133
  %and663 = and i32 %474, 1, !dbg !13133
  %shl664 = shl i32 %and663, 29, !dbg !13133
  %or665 = or i32 %and662, %shl664, !dbg !13133
  %and666 = and i32 %or665, -16777216, !dbg !13133
  %shr667 = lshr i32 %and666, 24, !dbg !13133
  %or668 = or i32 %or639, %shr667, !dbg !13133
  br label %cond.end697, !dbg !13133

cond.false669:                                    ; preds = %cond.end547
  %475 = load i8*, i8** %in, align 8, !dbg !13133
  %476 = bitcast i8* %475 to i32*, !dbg !13133
  %add.ptr670 = getelementptr i32, i32* %476, i64 124, !dbg !13133
  %477 = load i32, i32* %add.ptr670, align 4, !dbg !13133
  %478 = call i1 @llvm.is.constant.i32(i32 %477), !dbg !13133
  br i1 %478, label %cond.true671, label %cond.false687, !dbg !13133

cond.true671:                                     ; preds = %cond.false669
  %479 = load i8*, i8** %in, align 8, !dbg !13133
  %480 = bitcast i8* %479 to i32*, !dbg !13133
  %add.ptr672 = getelementptr i32, i32* %480, i64 124, !dbg !13133
  %481 = load i32, i32* %add.ptr672, align 4, !dbg !13133
  %and673 = and i32 %481, 255, !dbg !13133
  %shl674 = shl i32 %and673, 24, !dbg !13133
  %482 = load i8*, i8** %in, align 8, !dbg !13133
  %483 = bitcast i8* %482 to i32*, !dbg !13133
  %add.ptr675 = getelementptr i32, i32* %483, i64 124, !dbg !13133
  %484 = load i32, i32* %add.ptr675, align 4, !dbg !13133
  %and676 = and i32 %484, 65280, !dbg !13133
  %shl677 = shl i32 %and676, 8, !dbg !13133
  %or678 = or i32 %shl674, %shl677, !dbg !13133
  %485 = load i8*, i8** %in, align 8, !dbg !13133
  %486 = bitcast i8* %485 to i32*, !dbg !13133
  %add.ptr679 = getelementptr i32, i32* %486, i64 124, !dbg !13133
  %487 = load i32, i32* %add.ptr679, align 4, !dbg !13133
  %and680 = and i32 %487, 16711680, !dbg !13133
  %shr681 = lshr i32 %and680, 8, !dbg !13133
  %or682 = or i32 %or678, %shr681, !dbg !13133
  %488 = load i8*, i8** %in, align 8, !dbg !13133
  %489 = bitcast i8* %488 to i32*, !dbg !13133
  %add.ptr683 = getelementptr i32, i32* %489, i64 124, !dbg !13133
  %490 = load i32, i32* %add.ptr683, align 4, !dbg !13133
  %and684 = and i32 %490, -16777216, !dbg !13133
  %shr685 = lshr i32 %and684, 24, !dbg !13133
  %or686 = or i32 %or682, %shr685, !dbg !13133
  br label %cond.end690, !dbg !13133

cond.false687:                                    ; preds = %cond.false669
  %491 = load i8*, i8** %in, align 8, !dbg !13133
  %492 = bitcast i8* %491 to i32*, !dbg !13133
  %add.ptr688 = getelementptr i32, i32* %492, i64 124, !dbg !13133
  %493 = load i32, i32* %add.ptr688, align 4, !dbg !13133
  %call689 = call i32 @__fswab32(i32 %493) #8, !dbg !13133
  br label %cond.end690, !dbg !13133

cond.end690:                                      ; preds = %cond.false687, %cond.true671
  %cond691 = phi i32 [ %or686, %cond.true671 ], [ %call689, %cond.false687 ], !dbg !13133
  %and692 = and i32 %cond691, -536870913, !dbg !13133
  %494 = load i32, i32* %_v524, align 4, !dbg !13133
  %and693 = and i32 %494, 1, !dbg !13133
  %shl694 = shl i32 %and693, 29, !dbg !13133
  %or695 = or i32 %and692, %shl694, !dbg !13133
  %call696 = call i32 @__fswab32(i32 %or695) #8, !dbg !13133
  br label %cond.end697, !dbg !13133

cond.end697:                                      ; preds = %cond.end690, %cond.end660
  %cond698 = phi i32 [ %or668, %cond.end660 ], [ %call696, %cond.end690 ], !dbg !13133
  %495 = load i8*, i8** %in, align 8, !dbg !13133
  %496 = bitcast i8* %495 to i32*, !dbg !13133
  %add.ptr699 = getelementptr i32, i32* %496, i64 124, !dbg !13133
  store i32 %cond698, i32* %add.ptr699, align 4, !dbg !13133
  br label %do.end700, !dbg !13133

do.end700:                                        ; preds = %cond.end697
  br label %do.body701, !dbg !13136

do.body701:                                       ; preds = %do.end700
  call void @llvm.dbg.declare(metadata i32* %_v702, metadata !13137, metadata !DIExpression()), !dbg !13139
  store i32 1877, i32* %_v702, align 4, !dbg !13139
  br label %do.body703, !dbg !13139

do.body703:                                       ; preds = %do.body701
  br label %do.end704, !dbg !13140

do.end704:                                        ; preds = %do.body703
  %497 = load i8*, i8** %in, align 8, !dbg !13139
  %498 = bitcast i8* %497 to i32*, !dbg !13139
  %add.ptr705 = getelementptr i32, i32* %498, i64 0, !dbg !13139
  %499 = load i32, i32* %add.ptr705, align 4, !dbg !13139
  %500 = call i1 @llvm.is.constant.i32(i32 %499), !dbg !13139
  br i1 %500, label %cond.true706, label %cond.false722, !dbg !13139

cond.true706:                                     ; preds = %do.end704
  %501 = load i8*, i8** %in, align 8, !dbg !13139
  %502 = bitcast i8* %501 to i32*, !dbg !13139
  %add.ptr707 = getelementptr i32, i32* %502, i64 0, !dbg !13139
  %503 = load i32, i32* %add.ptr707, align 4, !dbg !13139
  %and708 = and i32 %503, 255, !dbg !13139
  %shl709 = shl i32 %and708, 24, !dbg !13139
  %504 = load i8*, i8** %in, align 8, !dbg !13139
  %505 = bitcast i8* %504 to i32*, !dbg !13139
  %add.ptr710 = getelementptr i32, i32* %505, i64 0, !dbg !13139
  %506 = load i32, i32* %add.ptr710, align 4, !dbg !13139
  %and711 = and i32 %506, 65280, !dbg !13139
  %shl712 = shl i32 %and711, 8, !dbg !13139
  %or713 = or i32 %shl709, %shl712, !dbg !13139
  %507 = load i8*, i8** %in, align 8, !dbg !13139
  %508 = bitcast i8* %507 to i32*, !dbg !13139
  %add.ptr714 = getelementptr i32, i32* %508, i64 0, !dbg !13139
  %509 = load i32, i32* %add.ptr714, align 4, !dbg !13139
  %and715 = and i32 %509, 16711680, !dbg !13139
  %shr716 = lshr i32 %and715, 8, !dbg !13139
  %or717 = or i32 %or713, %shr716, !dbg !13139
  %510 = load i8*, i8** %in, align 8, !dbg !13139
  %511 = bitcast i8* %510 to i32*, !dbg !13139
  %add.ptr718 = getelementptr i32, i32* %511, i64 0, !dbg !13139
  %512 = load i32, i32* %add.ptr718, align 4, !dbg !13139
  %and719 = and i32 %512, -16777216, !dbg !13139
  %shr720 = lshr i32 %and719, 24, !dbg !13139
  %or721 = or i32 %or717, %shr720, !dbg !13139
  br label %cond.end725, !dbg !13139

cond.false722:                                    ; preds = %do.end704
  %513 = load i8*, i8** %in, align 8, !dbg !13139
  %514 = bitcast i8* %513 to i32*, !dbg !13139
  %add.ptr723 = getelementptr i32, i32* %514, i64 0, !dbg !13139
  %515 = load i32, i32* %add.ptr723, align 4, !dbg !13139
  %call724 = call i32 @__fswab32(i32 %515) #8, !dbg !13139
  br label %cond.end725, !dbg !13139

cond.end725:                                      ; preds = %cond.false722, %cond.true706
  %cond726 = phi i32 [ %or721, %cond.true706 ], [ %call724, %cond.false722 ], !dbg !13139
  %and727 = and i32 %cond726, 65535, !dbg !13139
  %516 = load i32, i32* %_v702, align 4, !dbg !13139
  %and728 = and i32 %516, 65535, !dbg !13139
  %shl729 = shl i32 %and728, 16, !dbg !13139
  %or730 = or i32 %and727, %shl729, !dbg !13139
  %517 = call i1 @llvm.is.constant.i32(i32 %or730), !dbg !13139
  br i1 %517, label %cond.true731, label %cond.false847, !dbg !13139

cond.true731:                                     ; preds = %cond.end725
  %518 = load i8*, i8** %in, align 8, !dbg !13139
  %519 = bitcast i8* %518 to i32*, !dbg !13139
  %add.ptr732 = getelementptr i32, i32* %519, i64 0, !dbg !13139
  %520 = load i32, i32* %add.ptr732, align 4, !dbg !13139
  %521 = call i1 @llvm.is.constant.i32(i32 %520), !dbg !13139
  br i1 %521, label %cond.true733, label %cond.false749, !dbg !13139

cond.true733:                                     ; preds = %cond.true731
  %522 = load i8*, i8** %in, align 8, !dbg !13139
  %523 = bitcast i8* %522 to i32*, !dbg !13139
  %add.ptr734 = getelementptr i32, i32* %523, i64 0, !dbg !13139
  %524 = load i32, i32* %add.ptr734, align 4, !dbg !13139
  %and735 = and i32 %524, 255, !dbg !13139
  %shl736 = shl i32 %and735, 24, !dbg !13139
  %525 = load i8*, i8** %in, align 8, !dbg !13139
  %526 = bitcast i8* %525 to i32*, !dbg !13139
  %add.ptr737 = getelementptr i32, i32* %526, i64 0, !dbg !13139
  %527 = load i32, i32* %add.ptr737, align 4, !dbg !13139
  %and738 = and i32 %527, 65280, !dbg !13139
  %shl739 = shl i32 %and738, 8, !dbg !13139
  %or740 = or i32 %shl736, %shl739, !dbg !13139
  %528 = load i8*, i8** %in, align 8, !dbg !13139
  %529 = bitcast i8* %528 to i32*, !dbg !13139
  %add.ptr741 = getelementptr i32, i32* %529, i64 0, !dbg !13139
  %530 = load i32, i32* %add.ptr741, align 4, !dbg !13139
  %and742 = and i32 %530, 16711680, !dbg !13139
  %shr743 = lshr i32 %and742, 8, !dbg !13139
  %or744 = or i32 %or740, %shr743, !dbg !13139
  %531 = load i8*, i8** %in, align 8, !dbg !13139
  %532 = bitcast i8* %531 to i32*, !dbg !13139
  %add.ptr745 = getelementptr i32, i32* %532, i64 0, !dbg !13139
  %533 = load i32, i32* %add.ptr745, align 4, !dbg !13139
  %and746 = and i32 %533, -16777216, !dbg !13139
  %shr747 = lshr i32 %and746, 24, !dbg !13139
  %or748 = or i32 %or744, %shr747, !dbg !13139
  br label %cond.end752, !dbg !13139

cond.false749:                                    ; preds = %cond.true731
  %534 = load i8*, i8** %in, align 8, !dbg !13139
  %535 = bitcast i8* %534 to i32*, !dbg !13139
  %add.ptr750 = getelementptr i32, i32* %535, i64 0, !dbg !13139
  %536 = load i32, i32* %add.ptr750, align 4, !dbg !13139
  %call751 = call i32 @__fswab32(i32 %536) #8, !dbg !13139
  br label %cond.end752, !dbg !13139

cond.end752:                                      ; preds = %cond.false749, %cond.true733
  %cond753 = phi i32 [ %or748, %cond.true733 ], [ %call751, %cond.false749 ], !dbg !13139
  %and754 = and i32 %cond753, 65535, !dbg !13139
  %537 = load i32, i32* %_v702, align 4, !dbg !13139
  %and755 = and i32 %537, 65535, !dbg !13139
  %shl756 = shl i32 %and755, 16, !dbg !13139
  %or757 = or i32 %and754, %shl756, !dbg !13139
  %and758 = and i32 %or757, 255, !dbg !13139
  %shl759 = shl i32 %and758, 24, !dbg !13139
  %538 = load i8*, i8** %in, align 8, !dbg !13139
  %539 = bitcast i8* %538 to i32*, !dbg !13139
  %add.ptr760 = getelementptr i32, i32* %539, i64 0, !dbg !13139
  %540 = load i32, i32* %add.ptr760, align 4, !dbg !13139
  %541 = call i1 @llvm.is.constant.i32(i32 %540), !dbg !13139
  br i1 %541, label %cond.true761, label %cond.false777, !dbg !13139

cond.true761:                                     ; preds = %cond.end752
  %542 = load i8*, i8** %in, align 8, !dbg !13139
  %543 = bitcast i8* %542 to i32*, !dbg !13139
  %add.ptr762 = getelementptr i32, i32* %543, i64 0, !dbg !13139
  %544 = load i32, i32* %add.ptr762, align 4, !dbg !13139
  %and763 = and i32 %544, 255, !dbg !13139
  %shl764 = shl i32 %and763, 24, !dbg !13139
  %545 = load i8*, i8** %in, align 8, !dbg !13139
  %546 = bitcast i8* %545 to i32*, !dbg !13139
  %add.ptr765 = getelementptr i32, i32* %546, i64 0, !dbg !13139
  %547 = load i32, i32* %add.ptr765, align 4, !dbg !13139
  %and766 = and i32 %547, 65280, !dbg !13139
  %shl767 = shl i32 %and766, 8, !dbg !13139
  %or768 = or i32 %shl764, %shl767, !dbg !13139
  %548 = load i8*, i8** %in, align 8, !dbg !13139
  %549 = bitcast i8* %548 to i32*, !dbg !13139
  %add.ptr769 = getelementptr i32, i32* %549, i64 0, !dbg !13139
  %550 = load i32, i32* %add.ptr769, align 4, !dbg !13139
  %and770 = and i32 %550, 16711680, !dbg !13139
  %shr771 = lshr i32 %and770, 8, !dbg !13139
  %or772 = or i32 %or768, %shr771, !dbg !13139
  %551 = load i8*, i8** %in, align 8, !dbg !13139
  %552 = bitcast i8* %551 to i32*, !dbg !13139
  %add.ptr773 = getelementptr i32, i32* %552, i64 0, !dbg !13139
  %553 = load i32, i32* %add.ptr773, align 4, !dbg !13139
  %and774 = and i32 %553, -16777216, !dbg !13139
  %shr775 = lshr i32 %and774, 24, !dbg !13139
  %or776 = or i32 %or772, %shr775, !dbg !13139
  br label %cond.end780, !dbg !13139

cond.false777:                                    ; preds = %cond.end752
  %554 = load i8*, i8** %in, align 8, !dbg !13139
  %555 = bitcast i8* %554 to i32*, !dbg !13139
  %add.ptr778 = getelementptr i32, i32* %555, i64 0, !dbg !13139
  %556 = load i32, i32* %add.ptr778, align 4, !dbg !13139
  %call779 = call i32 @__fswab32(i32 %556) #8, !dbg !13139
  br label %cond.end780, !dbg !13139

cond.end780:                                      ; preds = %cond.false777, %cond.true761
  %cond781 = phi i32 [ %or776, %cond.true761 ], [ %call779, %cond.false777 ], !dbg !13139
  %and782 = and i32 %cond781, 65535, !dbg !13139
  %557 = load i32, i32* %_v702, align 4, !dbg !13139
  %and783 = and i32 %557, 65535, !dbg !13139
  %shl784 = shl i32 %and783, 16, !dbg !13139
  %or785 = or i32 %and782, %shl784, !dbg !13139
  %and786 = and i32 %or785, 65280, !dbg !13139
  %shl787 = shl i32 %and786, 8, !dbg !13139
  %or788 = or i32 %shl759, %shl787, !dbg !13139
  %558 = load i8*, i8** %in, align 8, !dbg !13139
  %559 = bitcast i8* %558 to i32*, !dbg !13139
  %add.ptr789 = getelementptr i32, i32* %559, i64 0, !dbg !13139
  %560 = load i32, i32* %add.ptr789, align 4, !dbg !13139
  %561 = call i1 @llvm.is.constant.i32(i32 %560), !dbg !13139
  br i1 %561, label %cond.true790, label %cond.false806, !dbg !13139

cond.true790:                                     ; preds = %cond.end780
  %562 = load i8*, i8** %in, align 8, !dbg !13139
  %563 = bitcast i8* %562 to i32*, !dbg !13139
  %add.ptr791 = getelementptr i32, i32* %563, i64 0, !dbg !13139
  %564 = load i32, i32* %add.ptr791, align 4, !dbg !13139
  %and792 = and i32 %564, 255, !dbg !13139
  %shl793 = shl i32 %and792, 24, !dbg !13139
  %565 = load i8*, i8** %in, align 8, !dbg !13139
  %566 = bitcast i8* %565 to i32*, !dbg !13139
  %add.ptr794 = getelementptr i32, i32* %566, i64 0, !dbg !13139
  %567 = load i32, i32* %add.ptr794, align 4, !dbg !13139
  %and795 = and i32 %567, 65280, !dbg !13139
  %shl796 = shl i32 %and795, 8, !dbg !13139
  %or797 = or i32 %shl793, %shl796, !dbg !13139
  %568 = load i8*, i8** %in, align 8, !dbg !13139
  %569 = bitcast i8* %568 to i32*, !dbg !13139
  %add.ptr798 = getelementptr i32, i32* %569, i64 0, !dbg !13139
  %570 = load i32, i32* %add.ptr798, align 4, !dbg !13139
  %and799 = and i32 %570, 16711680, !dbg !13139
  %shr800 = lshr i32 %and799, 8, !dbg !13139
  %or801 = or i32 %or797, %shr800, !dbg !13139
  %571 = load i8*, i8** %in, align 8, !dbg !13139
  %572 = bitcast i8* %571 to i32*, !dbg !13139
  %add.ptr802 = getelementptr i32, i32* %572, i64 0, !dbg !13139
  %573 = load i32, i32* %add.ptr802, align 4, !dbg !13139
  %and803 = and i32 %573, -16777216, !dbg !13139
  %shr804 = lshr i32 %and803, 24, !dbg !13139
  %or805 = or i32 %or801, %shr804, !dbg !13139
  br label %cond.end809, !dbg !13139

cond.false806:                                    ; preds = %cond.end780
  %574 = load i8*, i8** %in, align 8, !dbg !13139
  %575 = bitcast i8* %574 to i32*, !dbg !13139
  %add.ptr807 = getelementptr i32, i32* %575, i64 0, !dbg !13139
  %576 = load i32, i32* %add.ptr807, align 4, !dbg !13139
  %call808 = call i32 @__fswab32(i32 %576) #8, !dbg !13139
  br label %cond.end809, !dbg !13139

cond.end809:                                      ; preds = %cond.false806, %cond.true790
  %cond810 = phi i32 [ %or805, %cond.true790 ], [ %call808, %cond.false806 ], !dbg !13139
  %and811 = and i32 %cond810, 65535, !dbg !13139
  %577 = load i32, i32* %_v702, align 4, !dbg !13139
  %and812 = and i32 %577, 65535, !dbg !13139
  %shl813 = shl i32 %and812, 16, !dbg !13139
  %or814 = or i32 %and811, %shl813, !dbg !13139
  %and815 = and i32 %or814, 16711680, !dbg !13139
  %shr816 = lshr i32 %and815, 8, !dbg !13139
  %or817 = or i32 %or788, %shr816, !dbg !13139
  %578 = load i8*, i8** %in, align 8, !dbg !13139
  %579 = bitcast i8* %578 to i32*, !dbg !13139
  %add.ptr818 = getelementptr i32, i32* %579, i64 0, !dbg !13139
  %580 = load i32, i32* %add.ptr818, align 4, !dbg !13139
  %581 = call i1 @llvm.is.constant.i32(i32 %580), !dbg !13139
  br i1 %581, label %cond.true819, label %cond.false835, !dbg !13139

cond.true819:                                     ; preds = %cond.end809
  %582 = load i8*, i8** %in, align 8, !dbg !13139
  %583 = bitcast i8* %582 to i32*, !dbg !13139
  %add.ptr820 = getelementptr i32, i32* %583, i64 0, !dbg !13139
  %584 = load i32, i32* %add.ptr820, align 4, !dbg !13139
  %and821 = and i32 %584, 255, !dbg !13139
  %shl822 = shl i32 %and821, 24, !dbg !13139
  %585 = load i8*, i8** %in, align 8, !dbg !13139
  %586 = bitcast i8* %585 to i32*, !dbg !13139
  %add.ptr823 = getelementptr i32, i32* %586, i64 0, !dbg !13139
  %587 = load i32, i32* %add.ptr823, align 4, !dbg !13139
  %and824 = and i32 %587, 65280, !dbg !13139
  %shl825 = shl i32 %and824, 8, !dbg !13139
  %or826 = or i32 %shl822, %shl825, !dbg !13139
  %588 = load i8*, i8** %in, align 8, !dbg !13139
  %589 = bitcast i8* %588 to i32*, !dbg !13139
  %add.ptr827 = getelementptr i32, i32* %589, i64 0, !dbg !13139
  %590 = load i32, i32* %add.ptr827, align 4, !dbg !13139
  %and828 = and i32 %590, 16711680, !dbg !13139
  %shr829 = lshr i32 %and828, 8, !dbg !13139
  %or830 = or i32 %or826, %shr829, !dbg !13139
  %591 = load i8*, i8** %in, align 8, !dbg !13139
  %592 = bitcast i8* %591 to i32*, !dbg !13139
  %add.ptr831 = getelementptr i32, i32* %592, i64 0, !dbg !13139
  %593 = load i32, i32* %add.ptr831, align 4, !dbg !13139
  %and832 = and i32 %593, -16777216, !dbg !13139
  %shr833 = lshr i32 %and832, 24, !dbg !13139
  %or834 = or i32 %or830, %shr833, !dbg !13139
  br label %cond.end838, !dbg !13139

cond.false835:                                    ; preds = %cond.end809
  %594 = load i8*, i8** %in, align 8, !dbg !13139
  %595 = bitcast i8* %594 to i32*, !dbg !13139
  %add.ptr836 = getelementptr i32, i32* %595, i64 0, !dbg !13139
  %596 = load i32, i32* %add.ptr836, align 4, !dbg !13139
  %call837 = call i32 @__fswab32(i32 %596) #8, !dbg !13139
  br label %cond.end838, !dbg !13139

cond.end838:                                      ; preds = %cond.false835, %cond.true819
  %cond839 = phi i32 [ %or834, %cond.true819 ], [ %call837, %cond.false835 ], !dbg !13139
  %and840 = and i32 %cond839, 65535, !dbg !13139
  %597 = load i32, i32* %_v702, align 4, !dbg !13139
  %and841 = and i32 %597, 65535, !dbg !13139
  %shl842 = shl i32 %and841, 16, !dbg !13139
  %or843 = or i32 %and840, %shl842, !dbg !13139
  %and844 = and i32 %or843, -16777216, !dbg !13139
  %shr845 = lshr i32 %and844, 24, !dbg !13139
  %or846 = or i32 %or817, %shr845, !dbg !13139
  br label %cond.end875, !dbg !13139

cond.false847:                                    ; preds = %cond.end725
  %598 = load i8*, i8** %in, align 8, !dbg !13139
  %599 = bitcast i8* %598 to i32*, !dbg !13139
  %add.ptr848 = getelementptr i32, i32* %599, i64 0, !dbg !13139
  %600 = load i32, i32* %add.ptr848, align 4, !dbg !13139
  %601 = call i1 @llvm.is.constant.i32(i32 %600), !dbg !13139
  br i1 %601, label %cond.true849, label %cond.false865, !dbg !13139

cond.true849:                                     ; preds = %cond.false847
  %602 = load i8*, i8** %in, align 8, !dbg !13139
  %603 = bitcast i8* %602 to i32*, !dbg !13139
  %add.ptr850 = getelementptr i32, i32* %603, i64 0, !dbg !13139
  %604 = load i32, i32* %add.ptr850, align 4, !dbg !13139
  %and851 = and i32 %604, 255, !dbg !13139
  %shl852 = shl i32 %and851, 24, !dbg !13139
  %605 = load i8*, i8** %in, align 8, !dbg !13139
  %606 = bitcast i8* %605 to i32*, !dbg !13139
  %add.ptr853 = getelementptr i32, i32* %606, i64 0, !dbg !13139
  %607 = load i32, i32* %add.ptr853, align 4, !dbg !13139
  %and854 = and i32 %607, 65280, !dbg !13139
  %shl855 = shl i32 %and854, 8, !dbg !13139
  %or856 = or i32 %shl852, %shl855, !dbg !13139
  %608 = load i8*, i8** %in, align 8, !dbg !13139
  %609 = bitcast i8* %608 to i32*, !dbg !13139
  %add.ptr857 = getelementptr i32, i32* %609, i64 0, !dbg !13139
  %610 = load i32, i32* %add.ptr857, align 4, !dbg !13139
  %and858 = and i32 %610, 16711680, !dbg !13139
  %shr859 = lshr i32 %and858, 8, !dbg !13139
  %or860 = or i32 %or856, %shr859, !dbg !13139
  %611 = load i8*, i8** %in, align 8, !dbg !13139
  %612 = bitcast i8* %611 to i32*, !dbg !13139
  %add.ptr861 = getelementptr i32, i32* %612, i64 0, !dbg !13139
  %613 = load i32, i32* %add.ptr861, align 4, !dbg !13139
  %and862 = and i32 %613, -16777216, !dbg !13139
  %shr863 = lshr i32 %and862, 24, !dbg !13139
  %or864 = or i32 %or860, %shr863, !dbg !13139
  br label %cond.end868, !dbg !13139

cond.false865:                                    ; preds = %cond.false847
  %614 = load i8*, i8** %in, align 8, !dbg !13139
  %615 = bitcast i8* %614 to i32*, !dbg !13139
  %add.ptr866 = getelementptr i32, i32* %615, i64 0, !dbg !13139
  %616 = load i32, i32* %add.ptr866, align 4, !dbg !13139
  %call867 = call i32 @__fswab32(i32 %616) #8, !dbg !13139
  br label %cond.end868, !dbg !13139

cond.end868:                                      ; preds = %cond.false865, %cond.true849
  %cond869 = phi i32 [ %or864, %cond.true849 ], [ %call867, %cond.false865 ], !dbg !13139
  %and870 = and i32 %cond869, 65535, !dbg !13139
  %617 = load i32, i32* %_v702, align 4, !dbg !13139
  %and871 = and i32 %617, 65535, !dbg !13139
  %shl872 = shl i32 %and871, 16, !dbg !13139
  %or873 = or i32 %and870, %shl872, !dbg !13139
  %call874 = call i32 @__fswab32(i32 %or873) #8, !dbg !13139
  br label %cond.end875, !dbg !13139

cond.end875:                                      ; preds = %cond.end868, %cond.end838
  %cond876 = phi i32 [ %or846, %cond.end838 ], [ %call874, %cond.end868 ], !dbg !13139
  %618 = load i8*, i8** %in, align 8, !dbg !13139
  %619 = bitcast i8* %618 to i32*, !dbg !13139
  %add.ptr877 = getelementptr i32, i32* %619, i64 0, !dbg !13139
  store i32 %cond876, i32* %add.ptr877, align 4, !dbg !13139
  br label %do.end878, !dbg !13139

do.end878:                                        ; preds = %cond.end875
  call void @llvm.dbg.declare(metadata [4 x i32]* %_out, metadata !13142, metadata !DIExpression()), !dbg !13144
  %620 = bitcast [4 x i32]* %_out to i8*, !dbg !13144
  call void @llvm.memset.p0i8.i64(i8* align 16 %620, i8 0, i64 16, i1 false), !dbg !13144
  %621 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %mdev.addr, align 8, !dbg !13145
  %622 = load i8*, i8** %in, align 8, !dbg !13145
  %arraydecay = getelementptr inbounds [4 x i32], [4 x i32]* %_out, i64 0, i64 0, !dbg !13145
  %623 = bitcast i32* %arraydecay to i8*, !dbg !13145
  %call880 = call i32 @mlx5_cmd_exec(%struct.mlx5_core_dev* %621, i8* %622, i32 512, i8* %623, i32 16) #9, !dbg !13145
  store i32 %call880, i32* %tmp879, align 4, !dbg !13144
  %624 = load i32, i32* %tmp879, align 4, !dbg !13145
  store i32 %624, i32* %tmp, align 4, !dbg !13144
  %625 = load i32, i32* %tmp, align 4, !dbg !13144
  store i32 %625, i32* %err, align 4, !dbg !13147
  %626 = load i8*, i8** %in, align 8, !dbg !13148
  call void @kvfree(i8* %626) #9, !dbg !13149
  %627 = load i32, i32* %err, align 4, !dbg !13150
  store i32 %627, i32* %retval, align 4, !dbg !13151
  br label %return, !dbg !13151

return:                                           ; preds = %do.end878, %if.then
  %628 = load i32, i32* %retval, align 4, !dbg !13152
  ret i32 %628, !dbg !13152
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @mlx5_nic_vport_update_local_lb(%struct.mlx5_core_dev* %mdev, i1 zeroext %enable) #0 !dbg !13153 {
entry:
  %retval = alloca i32, align 4
  %mdev.addr = alloca %struct.mlx5_core_dev*, align 8
  %enable.addr = alloca i8, align 1
  %inlen = alloca i32, align 4
  %in = alloca i8*, align 8
  %err = alloca i32, align 4
  %_v = alloca i32, align 4
  %_v265 = alloca i32, align 4
  %_v496 = alloca i32, align 4
  %_v725 = alloca i32, align 4
  %_v904 = alloca i32, align 4
  %_out = alloca [4 x i32], align 16
  %tmp = alloca i32, align 4
  %tmp1081 = alloca i32, align 4
  store %struct.mlx5_core_dev* %mdev, %struct.mlx5_core_dev** %mdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_core_dev** %mdev.addr, metadata !13156, metadata !DIExpression()), !dbg !13157
  %frombool = zext i1 %enable to i8
  store i8 %frombool, i8* %enable.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %enable.addr, metadata !13158, metadata !DIExpression()), !dbg !13159
  call void @llvm.dbg.declare(metadata i32* %inlen, metadata !13160, metadata !DIExpression()), !dbg !13161
  store i32 512, i32* %inlen, align 4, !dbg !13161
  call void @llvm.dbg.declare(metadata i8** %in, metadata !13162, metadata !DIExpression()), !dbg !13163
  call void @llvm.dbg.declare(metadata i32* %err, metadata !13164, metadata !DIExpression()), !dbg !13165
  %0 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %mdev.addr, align 8, !dbg !13166
  %caps = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %0, i32 0, i32 9, !dbg !13166
  %hca_cur = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps, i32 0, i32 0, !dbg !13166
  %arrayidx = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur, i64 0, i64 0, !dbg !13166
  %arraydecay = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx, i64 0, i64 0, !dbg !13166
  %add.ptr = getelementptr i32, i32* %arraydecay, i64 31, !dbg !13166
  %1 = load i32, i32* %add.ptr, align 4, !dbg !13166
  %2 = call i1 @llvm.is.constant.i32(i32 %1), !dbg !13166
  br i1 %2, label %cond.true, label %cond.false, !dbg !13166

cond.true:                                        ; preds = %entry
  %3 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %mdev.addr, align 8, !dbg !13166
  %caps1 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %3, i32 0, i32 9, !dbg !13166
  %hca_cur2 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps1, i32 0, i32 0, !dbg !13166
  %arrayidx3 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur2, i64 0, i64 0, !dbg !13166
  %arraydecay4 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx3, i64 0, i64 0, !dbg !13166
  %add.ptr5 = getelementptr i32, i32* %arraydecay4, i64 31, !dbg !13166
  %4 = load i32, i32* %add.ptr5, align 4, !dbg !13166
  %and = and i32 %4, 255, !dbg !13166
  %shl = shl i32 %and, 24, !dbg !13166
  %5 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %mdev.addr, align 8, !dbg !13166
  %caps6 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %5, i32 0, i32 9, !dbg !13166
  %hca_cur7 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps6, i32 0, i32 0, !dbg !13166
  %arrayidx8 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur7, i64 0, i64 0, !dbg !13166
  %arraydecay9 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx8, i64 0, i64 0, !dbg !13166
  %add.ptr10 = getelementptr i32, i32* %arraydecay9, i64 31, !dbg !13166
  %6 = load i32, i32* %add.ptr10, align 4, !dbg !13166
  %and11 = and i32 %6, 65280, !dbg !13166
  %shl12 = shl i32 %and11, 8, !dbg !13166
  %or = or i32 %shl, %shl12, !dbg !13166
  %7 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %mdev.addr, align 8, !dbg !13166
  %caps13 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %7, i32 0, i32 9, !dbg !13166
  %hca_cur14 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps13, i32 0, i32 0, !dbg !13166
  %arrayidx15 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur14, i64 0, i64 0, !dbg !13166
  %arraydecay16 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx15, i64 0, i64 0, !dbg !13166
  %add.ptr17 = getelementptr i32, i32* %arraydecay16, i64 31, !dbg !13166
  %8 = load i32, i32* %add.ptr17, align 4, !dbg !13166
  %and18 = and i32 %8, 16711680, !dbg !13166
  %shr = lshr i32 %and18, 8, !dbg !13166
  %or19 = or i32 %or, %shr, !dbg !13166
  %9 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %mdev.addr, align 8, !dbg !13166
  %caps20 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %9, i32 0, i32 9, !dbg !13166
  %hca_cur21 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps20, i32 0, i32 0, !dbg !13166
  %arrayidx22 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur21, i64 0, i64 0, !dbg !13166
  %arraydecay23 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx22, i64 0, i64 0, !dbg !13166
  %add.ptr24 = getelementptr i32, i32* %arraydecay23, i64 31, !dbg !13166
  %10 = load i32, i32* %add.ptr24, align 4, !dbg !13166
  %and25 = and i32 %10, -16777216, !dbg !13166
  %shr26 = lshr i32 %and25, 24, !dbg !13166
  %or27 = or i32 %or19, %shr26, !dbg !13166
  br label %cond.end, !dbg !13166

cond.false:                                       ; preds = %entry
  %11 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %mdev.addr, align 8, !dbg !13166
  %caps28 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %11, i32 0, i32 9, !dbg !13166
  %hca_cur29 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps28, i32 0, i32 0, !dbg !13166
  %arrayidx30 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur29, i64 0, i64 0, !dbg !13166
  %arraydecay31 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx30, i64 0, i64 0, !dbg !13166
  %add.ptr32 = getelementptr i32, i32* %arraydecay31, i64 31, !dbg !13166
  %12 = load i32, i32* %add.ptr32, align 4, !dbg !13166
  %call = call i32 @__fswab32(i32 %12) #8, !dbg !13166
  br label %cond.end, !dbg !13166

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %or27, %cond.true ], [ %call, %cond.false ], !dbg !13166
  %shr33 = lshr i32 %cond, 29, !dbg !13166
  %and34 = and i32 %shr33, 1, !dbg !13166
  %tobool = icmp ne i32 %and34, 0, !dbg !13166
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !13168

land.lhs.true:                                    ; preds = %cond.end
  %13 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %mdev.addr, align 8, !dbg !13169
  %caps35 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %13, i32 0, i32 9, !dbg !13169
  %hca_cur36 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps35, i32 0, i32 0, !dbg !13169
  %arrayidx37 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur36, i64 0, i64 0, !dbg !13169
  %arraydecay38 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx37, i64 0, i64 0, !dbg !13169
  %add.ptr39 = getelementptr i32, i32* %arraydecay38, i64 31, !dbg !13169
  %14 = load i32, i32* %add.ptr39, align 4, !dbg !13169
  %15 = call i1 @llvm.is.constant.i32(i32 %14), !dbg !13169
  br i1 %15, label %cond.true40, label %cond.false72, !dbg !13169

cond.true40:                                      ; preds = %land.lhs.true
  %16 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %mdev.addr, align 8, !dbg !13169
  %caps41 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %16, i32 0, i32 9, !dbg !13169
  %hca_cur42 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps41, i32 0, i32 0, !dbg !13169
  %arrayidx43 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur42, i64 0, i64 0, !dbg !13169
  %arraydecay44 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx43, i64 0, i64 0, !dbg !13169
  %add.ptr45 = getelementptr i32, i32* %arraydecay44, i64 31, !dbg !13169
  %17 = load i32, i32* %add.ptr45, align 4, !dbg !13169
  %and46 = and i32 %17, 255, !dbg !13169
  %shl47 = shl i32 %and46, 24, !dbg !13169
  %18 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %mdev.addr, align 8, !dbg !13169
  %caps48 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %18, i32 0, i32 9, !dbg !13169
  %hca_cur49 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps48, i32 0, i32 0, !dbg !13169
  %arrayidx50 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur49, i64 0, i64 0, !dbg !13169
  %arraydecay51 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx50, i64 0, i64 0, !dbg !13169
  %add.ptr52 = getelementptr i32, i32* %arraydecay51, i64 31, !dbg !13169
  %19 = load i32, i32* %add.ptr52, align 4, !dbg !13169
  %and53 = and i32 %19, 65280, !dbg !13169
  %shl54 = shl i32 %and53, 8, !dbg !13169
  %or55 = or i32 %shl47, %shl54, !dbg !13169
  %20 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %mdev.addr, align 8, !dbg !13169
  %caps56 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %20, i32 0, i32 9, !dbg !13169
  %hca_cur57 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps56, i32 0, i32 0, !dbg !13169
  %arrayidx58 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur57, i64 0, i64 0, !dbg !13169
  %arraydecay59 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx58, i64 0, i64 0, !dbg !13169
  %add.ptr60 = getelementptr i32, i32* %arraydecay59, i64 31, !dbg !13169
  %21 = load i32, i32* %add.ptr60, align 4, !dbg !13169
  %and61 = and i32 %21, 16711680, !dbg !13169
  %shr62 = lshr i32 %and61, 8, !dbg !13169
  %or63 = or i32 %or55, %shr62, !dbg !13169
  %22 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %mdev.addr, align 8, !dbg !13169
  %caps64 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %22, i32 0, i32 9, !dbg !13169
  %hca_cur65 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps64, i32 0, i32 0, !dbg !13169
  %arrayidx66 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur65, i64 0, i64 0, !dbg !13169
  %arraydecay67 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx66, i64 0, i64 0, !dbg !13169
  %add.ptr68 = getelementptr i32, i32* %arraydecay67, i64 31, !dbg !13169
  %23 = load i32, i32* %add.ptr68, align 4, !dbg !13169
  %and69 = and i32 %23, -16777216, !dbg !13169
  %shr70 = lshr i32 %and69, 24, !dbg !13169
  %or71 = or i32 %or63, %shr70, !dbg !13169
  br label %cond.end79, !dbg !13169

cond.false72:                                     ; preds = %land.lhs.true
  %24 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %mdev.addr, align 8, !dbg !13169
  %caps73 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %24, i32 0, i32 9, !dbg !13169
  %hca_cur74 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps73, i32 0, i32 0, !dbg !13169
  %arrayidx75 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur74, i64 0, i64 0, !dbg !13169
  %arraydecay76 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx75, i64 0, i64 0, !dbg !13169
  %add.ptr77 = getelementptr i32, i32* %arraydecay76, i64 31, !dbg !13169
  %25 = load i32, i32* %add.ptr77, align 4, !dbg !13169
  %call78 = call i32 @__fswab32(i32 %25) #8, !dbg !13169
  br label %cond.end79, !dbg !13169

cond.end79:                                       ; preds = %cond.false72, %cond.true40
  %cond80 = phi i32 [ %or71, %cond.true40 ], [ %call78, %cond.false72 ], !dbg !13169
  %shr81 = lshr i32 %cond80, 30, !dbg !13169
  %and82 = and i32 %shr81, 1, !dbg !13169
  %tobool83 = icmp ne i32 %and82, 0, !dbg !13169
  br i1 %tobool83, label %if.end, label %if.then, !dbg !13170

if.then:                                          ; preds = %cond.end79
  store i32 0, i32* %retval, align 4, !dbg !13171
  br label %return, !dbg !13171

if.end:                                           ; preds = %cond.end79, %cond.end
  %26 = load i32, i32* %inlen, align 4, !dbg !13172
  %conv = sext i32 %26 to i64, !dbg !13172
  %call84 = call i8* @kvzalloc(i64 %conv, i32 3264) #9, !dbg !13173
  store i8* %call84, i8** %in, align 8, !dbg !13174
  %27 = load i8*, i8** %in, align 8, !dbg !13175
  %tobool85 = icmp ne i8* %27, null, !dbg !13175
  br i1 %tobool85, label %if.end87, label %if.then86, !dbg !13177

if.then86:                                        ; preds = %if.end
  store i32 -12, i32* %retval, align 4, !dbg !13178
  br label %return, !dbg !13178

if.end87:                                         ; preds = %if.end
  br label %do.body, !dbg !13179

do.body:                                          ; preds = %if.end87
  call void @llvm.dbg.declare(metadata i32* %_v, metadata !13180, metadata !DIExpression()), !dbg !13182
  %28 = load i8, i8* %enable.addr, align 1, !dbg !13182
  %tobool88 = trunc i8 %28 to i1, !dbg !13182
  %lnot = xor i1 %tobool88, true, !dbg !13182
  %lnot.ext = zext i1 %lnot to i32, !dbg !13182
  store i32 %lnot.ext, i32* %_v, align 4, !dbg !13182
  br label %do.body89, !dbg !13182

do.body89:                                        ; preds = %do.body
  br label %do.end, !dbg !13183

do.end:                                           ; preds = %do.body89
  %29 = load i8*, i8** %in, align 8, !dbg !13182
  %30 = bitcast i8* %29 to i32*, !dbg !13182
  %add.ptr90 = getelementptr i32, i32* %30, i64 64, !dbg !13182
  %31 = load i32, i32* %add.ptr90, align 4, !dbg !13182
  %32 = call i1 @llvm.is.constant.i32(i32 %31), !dbg !13182
  br i1 %32, label %cond.true91, label %cond.false107, !dbg !13182

cond.true91:                                      ; preds = %do.end
  %33 = load i8*, i8** %in, align 8, !dbg !13182
  %34 = bitcast i8* %33 to i32*, !dbg !13182
  %add.ptr92 = getelementptr i32, i32* %34, i64 64, !dbg !13182
  %35 = load i32, i32* %add.ptr92, align 4, !dbg !13182
  %and93 = and i32 %35, 255, !dbg !13182
  %shl94 = shl i32 %and93, 24, !dbg !13182
  %36 = load i8*, i8** %in, align 8, !dbg !13182
  %37 = bitcast i8* %36 to i32*, !dbg !13182
  %add.ptr95 = getelementptr i32, i32* %37, i64 64, !dbg !13182
  %38 = load i32, i32* %add.ptr95, align 4, !dbg !13182
  %and96 = and i32 %38, 65280, !dbg !13182
  %shl97 = shl i32 %and96, 8, !dbg !13182
  %or98 = or i32 %shl94, %shl97, !dbg !13182
  %39 = load i8*, i8** %in, align 8, !dbg !13182
  %40 = bitcast i8* %39 to i32*, !dbg !13182
  %add.ptr99 = getelementptr i32, i32* %40, i64 64, !dbg !13182
  %41 = load i32, i32* %add.ptr99, align 4, !dbg !13182
  %and100 = and i32 %41, 16711680, !dbg !13182
  %shr101 = lshr i32 %and100, 8, !dbg !13182
  %or102 = or i32 %or98, %shr101, !dbg !13182
  %42 = load i8*, i8** %in, align 8, !dbg !13182
  %43 = bitcast i8* %42 to i32*, !dbg !13182
  %add.ptr103 = getelementptr i32, i32* %43, i64 64, !dbg !13182
  %44 = load i32, i32* %add.ptr103, align 4, !dbg !13182
  %and104 = and i32 %44, -16777216, !dbg !13182
  %shr105 = lshr i32 %and104, 24, !dbg !13182
  %or106 = or i32 %or102, %shr105, !dbg !13182
  br label %cond.end110, !dbg !13182

cond.false107:                                    ; preds = %do.end
  %45 = load i8*, i8** %in, align 8, !dbg !13182
  %46 = bitcast i8* %45 to i32*, !dbg !13182
  %add.ptr108 = getelementptr i32, i32* %46, i64 64, !dbg !13182
  %47 = load i32, i32* %add.ptr108, align 4, !dbg !13182
  %call109 = call i32 @__fswab32(i32 %47) #8, !dbg !13182
  br label %cond.end110, !dbg !13182

cond.end110:                                      ; preds = %cond.false107, %cond.true91
  %cond111 = phi i32 [ %or106, %cond.true91 ], [ %call109, %cond.false107 ], !dbg !13182
  %and112 = and i32 %cond111, -5, !dbg !13182
  %48 = load i32, i32* %_v, align 4, !dbg !13182
  %and113 = and i32 %48, 1, !dbg !13182
  %shl114 = shl i32 %and113, 2, !dbg !13182
  %or115 = or i32 %and112, %shl114, !dbg !13182
  %49 = call i1 @llvm.is.constant.i32(i32 %or115), !dbg !13182
  br i1 %49, label %cond.true116, label %cond.false232, !dbg !13182

cond.true116:                                     ; preds = %cond.end110
  %50 = load i8*, i8** %in, align 8, !dbg !13182
  %51 = bitcast i8* %50 to i32*, !dbg !13182
  %add.ptr117 = getelementptr i32, i32* %51, i64 64, !dbg !13182
  %52 = load i32, i32* %add.ptr117, align 4, !dbg !13182
  %53 = call i1 @llvm.is.constant.i32(i32 %52), !dbg !13182
  br i1 %53, label %cond.true118, label %cond.false134, !dbg !13182

cond.true118:                                     ; preds = %cond.true116
  %54 = load i8*, i8** %in, align 8, !dbg !13182
  %55 = bitcast i8* %54 to i32*, !dbg !13182
  %add.ptr119 = getelementptr i32, i32* %55, i64 64, !dbg !13182
  %56 = load i32, i32* %add.ptr119, align 4, !dbg !13182
  %and120 = and i32 %56, 255, !dbg !13182
  %shl121 = shl i32 %and120, 24, !dbg !13182
  %57 = load i8*, i8** %in, align 8, !dbg !13182
  %58 = bitcast i8* %57 to i32*, !dbg !13182
  %add.ptr122 = getelementptr i32, i32* %58, i64 64, !dbg !13182
  %59 = load i32, i32* %add.ptr122, align 4, !dbg !13182
  %and123 = and i32 %59, 65280, !dbg !13182
  %shl124 = shl i32 %and123, 8, !dbg !13182
  %or125 = or i32 %shl121, %shl124, !dbg !13182
  %60 = load i8*, i8** %in, align 8, !dbg !13182
  %61 = bitcast i8* %60 to i32*, !dbg !13182
  %add.ptr126 = getelementptr i32, i32* %61, i64 64, !dbg !13182
  %62 = load i32, i32* %add.ptr126, align 4, !dbg !13182
  %and127 = and i32 %62, 16711680, !dbg !13182
  %shr128 = lshr i32 %and127, 8, !dbg !13182
  %or129 = or i32 %or125, %shr128, !dbg !13182
  %63 = load i8*, i8** %in, align 8, !dbg !13182
  %64 = bitcast i8* %63 to i32*, !dbg !13182
  %add.ptr130 = getelementptr i32, i32* %64, i64 64, !dbg !13182
  %65 = load i32, i32* %add.ptr130, align 4, !dbg !13182
  %and131 = and i32 %65, -16777216, !dbg !13182
  %shr132 = lshr i32 %and131, 24, !dbg !13182
  %or133 = or i32 %or129, %shr132, !dbg !13182
  br label %cond.end137, !dbg !13182

cond.false134:                                    ; preds = %cond.true116
  %66 = load i8*, i8** %in, align 8, !dbg !13182
  %67 = bitcast i8* %66 to i32*, !dbg !13182
  %add.ptr135 = getelementptr i32, i32* %67, i64 64, !dbg !13182
  %68 = load i32, i32* %add.ptr135, align 4, !dbg !13182
  %call136 = call i32 @__fswab32(i32 %68) #8, !dbg !13182
  br label %cond.end137, !dbg !13182

cond.end137:                                      ; preds = %cond.false134, %cond.true118
  %cond138 = phi i32 [ %or133, %cond.true118 ], [ %call136, %cond.false134 ], !dbg !13182
  %and139 = and i32 %cond138, -5, !dbg !13182
  %69 = load i32, i32* %_v, align 4, !dbg !13182
  %and140 = and i32 %69, 1, !dbg !13182
  %shl141 = shl i32 %and140, 2, !dbg !13182
  %or142 = or i32 %and139, %shl141, !dbg !13182
  %and143 = and i32 %or142, 255, !dbg !13182
  %shl144 = shl i32 %and143, 24, !dbg !13182
  %70 = load i8*, i8** %in, align 8, !dbg !13182
  %71 = bitcast i8* %70 to i32*, !dbg !13182
  %add.ptr145 = getelementptr i32, i32* %71, i64 64, !dbg !13182
  %72 = load i32, i32* %add.ptr145, align 4, !dbg !13182
  %73 = call i1 @llvm.is.constant.i32(i32 %72), !dbg !13182
  br i1 %73, label %cond.true146, label %cond.false162, !dbg !13182

cond.true146:                                     ; preds = %cond.end137
  %74 = load i8*, i8** %in, align 8, !dbg !13182
  %75 = bitcast i8* %74 to i32*, !dbg !13182
  %add.ptr147 = getelementptr i32, i32* %75, i64 64, !dbg !13182
  %76 = load i32, i32* %add.ptr147, align 4, !dbg !13182
  %and148 = and i32 %76, 255, !dbg !13182
  %shl149 = shl i32 %and148, 24, !dbg !13182
  %77 = load i8*, i8** %in, align 8, !dbg !13182
  %78 = bitcast i8* %77 to i32*, !dbg !13182
  %add.ptr150 = getelementptr i32, i32* %78, i64 64, !dbg !13182
  %79 = load i32, i32* %add.ptr150, align 4, !dbg !13182
  %and151 = and i32 %79, 65280, !dbg !13182
  %shl152 = shl i32 %and151, 8, !dbg !13182
  %or153 = or i32 %shl149, %shl152, !dbg !13182
  %80 = load i8*, i8** %in, align 8, !dbg !13182
  %81 = bitcast i8* %80 to i32*, !dbg !13182
  %add.ptr154 = getelementptr i32, i32* %81, i64 64, !dbg !13182
  %82 = load i32, i32* %add.ptr154, align 4, !dbg !13182
  %and155 = and i32 %82, 16711680, !dbg !13182
  %shr156 = lshr i32 %and155, 8, !dbg !13182
  %or157 = or i32 %or153, %shr156, !dbg !13182
  %83 = load i8*, i8** %in, align 8, !dbg !13182
  %84 = bitcast i8* %83 to i32*, !dbg !13182
  %add.ptr158 = getelementptr i32, i32* %84, i64 64, !dbg !13182
  %85 = load i32, i32* %add.ptr158, align 4, !dbg !13182
  %and159 = and i32 %85, -16777216, !dbg !13182
  %shr160 = lshr i32 %and159, 24, !dbg !13182
  %or161 = or i32 %or157, %shr160, !dbg !13182
  br label %cond.end165, !dbg !13182

cond.false162:                                    ; preds = %cond.end137
  %86 = load i8*, i8** %in, align 8, !dbg !13182
  %87 = bitcast i8* %86 to i32*, !dbg !13182
  %add.ptr163 = getelementptr i32, i32* %87, i64 64, !dbg !13182
  %88 = load i32, i32* %add.ptr163, align 4, !dbg !13182
  %call164 = call i32 @__fswab32(i32 %88) #8, !dbg !13182
  br label %cond.end165, !dbg !13182

cond.end165:                                      ; preds = %cond.false162, %cond.true146
  %cond166 = phi i32 [ %or161, %cond.true146 ], [ %call164, %cond.false162 ], !dbg !13182
  %and167 = and i32 %cond166, -5, !dbg !13182
  %89 = load i32, i32* %_v, align 4, !dbg !13182
  %and168 = and i32 %89, 1, !dbg !13182
  %shl169 = shl i32 %and168, 2, !dbg !13182
  %or170 = or i32 %and167, %shl169, !dbg !13182
  %and171 = and i32 %or170, 65280, !dbg !13182
  %shl172 = shl i32 %and171, 8, !dbg !13182
  %or173 = or i32 %shl144, %shl172, !dbg !13182
  %90 = load i8*, i8** %in, align 8, !dbg !13182
  %91 = bitcast i8* %90 to i32*, !dbg !13182
  %add.ptr174 = getelementptr i32, i32* %91, i64 64, !dbg !13182
  %92 = load i32, i32* %add.ptr174, align 4, !dbg !13182
  %93 = call i1 @llvm.is.constant.i32(i32 %92), !dbg !13182
  br i1 %93, label %cond.true175, label %cond.false191, !dbg !13182

cond.true175:                                     ; preds = %cond.end165
  %94 = load i8*, i8** %in, align 8, !dbg !13182
  %95 = bitcast i8* %94 to i32*, !dbg !13182
  %add.ptr176 = getelementptr i32, i32* %95, i64 64, !dbg !13182
  %96 = load i32, i32* %add.ptr176, align 4, !dbg !13182
  %and177 = and i32 %96, 255, !dbg !13182
  %shl178 = shl i32 %and177, 24, !dbg !13182
  %97 = load i8*, i8** %in, align 8, !dbg !13182
  %98 = bitcast i8* %97 to i32*, !dbg !13182
  %add.ptr179 = getelementptr i32, i32* %98, i64 64, !dbg !13182
  %99 = load i32, i32* %add.ptr179, align 4, !dbg !13182
  %and180 = and i32 %99, 65280, !dbg !13182
  %shl181 = shl i32 %and180, 8, !dbg !13182
  %or182 = or i32 %shl178, %shl181, !dbg !13182
  %100 = load i8*, i8** %in, align 8, !dbg !13182
  %101 = bitcast i8* %100 to i32*, !dbg !13182
  %add.ptr183 = getelementptr i32, i32* %101, i64 64, !dbg !13182
  %102 = load i32, i32* %add.ptr183, align 4, !dbg !13182
  %and184 = and i32 %102, 16711680, !dbg !13182
  %shr185 = lshr i32 %and184, 8, !dbg !13182
  %or186 = or i32 %or182, %shr185, !dbg !13182
  %103 = load i8*, i8** %in, align 8, !dbg !13182
  %104 = bitcast i8* %103 to i32*, !dbg !13182
  %add.ptr187 = getelementptr i32, i32* %104, i64 64, !dbg !13182
  %105 = load i32, i32* %add.ptr187, align 4, !dbg !13182
  %and188 = and i32 %105, -16777216, !dbg !13182
  %shr189 = lshr i32 %and188, 24, !dbg !13182
  %or190 = or i32 %or186, %shr189, !dbg !13182
  br label %cond.end194, !dbg !13182

cond.false191:                                    ; preds = %cond.end165
  %106 = load i8*, i8** %in, align 8, !dbg !13182
  %107 = bitcast i8* %106 to i32*, !dbg !13182
  %add.ptr192 = getelementptr i32, i32* %107, i64 64, !dbg !13182
  %108 = load i32, i32* %add.ptr192, align 4, !dbg !13182
  %call193 = call i32 @__fswab32(i32 %108) #8, !dbg !13182
  br label %cond.end194, !dbg !13182

cond.end194:                                      ; preds = %cond.false191, %cond.true175
  %cond195 = phi i32 [ %or190, %cond.true175 ], [ %call193, %cond.false191 ], !dbg !13182
  %and196 = and i32 %cond195, -5, !dbg !13182
  %109 = load i32, i32* %_v, align 4, !dbg !13182
  %and197 = and i32 %109, 1, !dbg !13182
  %shl198 = shl i32 %and197, 2, !dbg !13182
  %or199 = or i32 %and196, %shl198, !dbg !13182
  %and200 = and i32 %or199, 16711680, !dbg !13182
  %shr201 = lshr i32 %and200, 8, !dbg !13182
  %or202 = or i32 %or173, %shr201, !dbg !13182
  %110 = load i8*, i8** %in, align 8, !dbg !13182
  %111 = bitcast i8* %110 to i32*, !dbg !13182
  %add.ptr203 = getelementptr i32, i32* %111, i64 64, !dbg !13182
  %112 = load i32, i32* %add.ptr203, align 4, !dbg !13182
  %113 = call i1 @llvm.is.constant.i32(i32 %112), !dbg !13182
  br i1 %113, label %cond.true204, label %cond.false220, !dbg !13182

cond.true204:                                     ; preds = %cond.end194
  %114 = load i8*, i8** %in, align 8, !dbg !13182
  %115 = bitcast i8* %114 to i32*, !dbg !13182
  %add.ptr205 = getelementptr i32, i32* %115, i64 64, !dbg !13182
  %116 = load i32, i32* %add.ptr205, align 4, !dbg !13182
  %and206 = and i32 %116, 255, !dbg !13182
  %shl207 = shl i32 %and206, 24, !dbg !13182
  %117 = load i8*, i8** %in, align 8, !dbg !13182
  %118 = bitcast i8* %117 to i32*, !dbg !13182
  %add.ptr208 = getelementptr i32, i32* %118, i64 64, !dbg !13182
  %119 = load i32, i32* %add.ptr208, align 4, !dbg !13182
  %and209 = and i32 %119, 65280, !dbg !13182
  %shl210 = shl i32 %and209, 8, !dbg !13182
  %or211 = or i32 %shl207, %shl210, !dbg !13182
  %120 = load i8*, i8** %in, align 8, !dbg !13182
  %121 = bitcast i8* %120 to i32*, !dbg !13182
  %add.ptr212 = getelementptr i32, i32* %121, i64 64, !dbg !13182
  %122 = load i32, i32* %add.ptr212, align 4, !dbg !13182
  %and213 = and i32 %122, 16711680, !dbg !13182
  %shr214 = lshr i32 %and213, 8, !dbg !13182
  %or215 = or i32 %or211, %shr214, !dbg !13182
  %123 = load i8*, i8** %in, align 8, !dbg !13182
  %124 = bitcast i8* %123 to i32*, !dbg !13182
  %add.ptr216 = getelementptr i32, i32* %124, i64 64, !dbg !13182
  %125 = load i32, i32* %add.ptr216, align 4, !dbg !13182
  %and217 = and i32 %125, -16777216, !dbg !13182
  %shr218 = lshr i32 %and217, 24, !dbg !13182
  %or219 = or i32 %or215, %shr218, !dbg !13182
  br label %cond.end223, !dbg !13182

cond.false220:                                    ; preds = %cond.end194
  %126 = load i8*, i8** %in, align 8, !dbg !13182
  %127 = bitcast i8* %126 to i32*, !dbg !13182
  %add.ptr221 = getelementptr i32, i32* %127, i64 64, !dbg !13182
  %128 = load i32, i32* %add.ptr221, align 4, !dbg !13182
  %call222 = call i32 @__fswab32(i32 %128) #8, !dbg !13182
  br label %cond.end223, !dbg !13182

cond.end223:                                      ; preds = %cond.false220, %cond.true204
  %cond224 = phi i32 [ %or219, %cond.true204 ], [ %call222, %cond.false220 ], !dbg !13182
  %and225 = and i32 %cond224, -5, !dbg !13182
  %129 = load i32, i32* %_v, align 4, !dbg !13182
  %and226 = and i32 %129, 1, !dbg !13182
  %shl227 = shl i32 %and226, 2, !dbg !13182
  %or228 = or i32 %and225, %shl227, !dbg !13182
  %and229 = and i32 %or228, -16777216, !dbg !13182
  %shr230 = lshr i32 %and229, 24, !dbg !13182
  %or231 = or i32 %or202, %shr230, !dbg !13182
  br label %cond.end260, !dbg !13182

cond.false232:                                    ; preds = %cond.end110
  %130 = load i8*, i8** %in, align 8, !dbg !13182
  %131 = bitcast i8* %130 to i32*, !dbg !13182
  %add.ptr233 = getelementptr i32, i32* %131, i64 64, !dbg !13182
  %132 = load i32, i32* %add.ptr233, align 4, !dbg !13182
  %133 = call i1 @llvm.is.constant.i32(i32 %132), !dbg !13182
  br i1 %133, label %cond.true234, label %cond.false250, !dbg !13182

cond.true234:                                     ; preds = %cond.false232
  %134 = load i8*, i8** %in, align 8, !dbg !13182
  %135 = bitcast i8* %134 to i32*, !dbg !13182
  %add.ptr235 = getelementptr i32, i32* %135, i64 64, !dbg !13182
  %136 = load i32, i32* %add.ptr235, align 4, !dbg !13182
  %and236 = and i32 %136, 255, !dbg !13182
  %shl237 = shl i32 %and236, 24, !dbg !13182
  %137 = load i8*, i8** %in, align 8, !dbg !13182
  %138 = bitcast i8* %137 to i32*, !dbg !13182
  %add.ptr238 = getelementptr i32, i32* %138, i64 64, !dbg !13182
  %139 = load i32, i32* %add.ptr238, align 4, !dbg !13182
  %and239 = and i32 %139, 65280, !dbg !13182
  %shl240 = shl i32 %and239, 8, !dbg !13182
  %or241 = or i32 %shl237, %shl240, !dbg !13182
  %140 = load i8*, i8** %in, align 8, !dbg !13182
  %141 = bitcast i8* %140 to i32*, !dbg !13182
  %add.ptr242 = getelementptr i32, i32* %141, i64 64, !dbg !13182
  %142 = load i32, i32* %add.ptr242, align 4, !dbg !13182
  %and243 = and i32 %142, 16711680, !dbg !13182
  %shr244 = lshr i32 %and243, 8, !dbg !13182
  %or245 = or i32 %or241, %shr244, !dbg !13182
  %143 = load i8*, i8** %in, align 8, !dbg !13182
  %144 = bitcast i8* %143 to i32*, !dbg !13182
  %add.ptr246 = getelementptr i32, i32* %144, i64 64, !dbg !13182
  %145 = load i32, i32* %add.ptr246, align 4, !dbg !13182
  %and247 = and i32 %145, -16777216, !dbg !13182
  %shr248 = lshr i32 %and247, 24, !dbg !13182
  %or249 = or i32 %or245, %shr248, !dbg !13182
  br label %cond.end253, !dbg !13182

cond.false250:                                    ; preds = %cond.false232
  %146 = load i8*, i8** %in, align 8, !dbg !13182
  %147 = bitcast i8* %146 to i32*, !dbg !13182
  %add.ptr251 = getelementptr i32, i32* %147, i64 64, !dbg !13182
  %148 = load i32, i32* %add.ptr251, align 4, !dbg !13182
  %call252 = call i32 @__fswab32(i32 %148) #8, !dbg !13182
  br label %cond.end253, !dbg !13182

cond.end253:                                      ; preds = %cond.false250, %cond.true234
  %cond254 = phi i32 [ %or249, %cond.true234 ], [ %call252, %cond.false250 ], !dbg !13182
  %and255 = and i32 %cond254, -5, !dbg !13182
  %149 = load i32, i32* %_v, align 4, !dbg !13182
  %and256 = and i32 %149, 1, !dbg !13182
  %shl257 = shl i32 %and256, 2, !dbg !13182
  %or258 = or i32 %and255, %shl257, !dbg !13182
  %call259 = call i32 @__fswab32(i32 %or258) #8, !dbg !13182
  br label %cond.end260, !dbg !13182

cond.end260:                                      ; preds = %cond.end253, %cond.end223
  %cond261 = phi i32 [ %or231, %cond.end223 ], [ %call259, %cond.end253 ], !dbg !13182
  %150 = load i8*, i8** %in, align 8, !dbg !13182
  %151 = bitcast i8* %150 to i32*, !dbg !13182
  %add.ptr262 = getelementptr i32, i32* %151, i64 64, !dbg !13182
  store i32 %cond261, i32* %add.ptr262, align 4, !dbg !13182
  br label %do.end263, !dbg !13182

do.end263:                                        ; preds = %cond.end260
  br label %do.body264, !dbg !13185

do.body264:                                       ; preds = %do.end263
  call void @llvm.dbg.declare(metadata i32* %_v265, metadata !13186, metadata !DIExpression()), !dbg !13188
  %152 = load i8, i8* %enable.addr, align 1, !dbg !13188
  %tobool266 = trunc i8 %152 to i1, !dbg !13188
  %lnot267 = xor i1 %tobool266, true, !dbg !13188
  %lnot.ext268 = zext i1 %lnot267 to i32, !dbg !13188
  store i32 %lnot.ext268, i32* %_v265, align 4, !dbg !13188
  br label %do.body269, !dbg !13188

do.body269:                                       ; preds = %do.body264
  br label %do.end270, !dbg !13189

do.end270:                                        ; preds = %do.body269
  %153 = load i8*, i8** %in, align 8, !dbg !13188
  %154 = bitcast i8* %153 to i32*, !dbg !13188
  %add.ptr271 = getelementptr i32, i32* %154, i64 64, !dbg !13188
  %155 = load i32, i32* %add.ptr271, align 4, !dbg !13188
  %156 = call i1 @llvm.is.constant.i32(i32 %155), !dbg !13188
  br i1 %156, label %cond.true272, label %cond.false288, !dbg !13188

cond.true272:                                     ; preds = %do.end270
  %157 = load i8*, i8** %in, align 8, !dbg !13188
  %158 = bitcast i8* %157 to i32*, !dbg !13188
  %add.ptr273 = getelementptr i32, i32* %158, i64 64, !dbg !13188
  %159 = load i32, i32* %add.ptr273, align 4, !dbg !13188
  %and274 = and i32 %159, 255, !dbg !13188
  %shl275 = shl i32 %and274, 24, !dbg !13188
  %160 = load i8*, i8** %in, align 8, !dbg !13188
  %161 = bitcast i8* %160 to i32*, !dbg !13188
  %add.ptr276 = getelementptr i32, i32* %161, i64 64, !dbg !13188
  %162 = load i32, i32* %add.ptr276, align 4, !dbg !13188
  %and277 = and i32 %162, 65280, !dbg !13188
  %shl278 = shl i32 %and277, 8, !dbg !13188
  %or279 = or i32 %shl275, %shl278, !dbg !13188
  %163 = load i8*, i8** %in, align 8, !dbg !13188
  %164 = bitcast i8* %163 to i32*, !dbg !13188
  %add.ptr280 = getelementptr i32, i32* %164, i64 64, !dbg !13188
  %165 = load i32, i32* %add.ptr280, align 4, !dbg !13188
  %and281 = and i32 %165, 16711680, !dbg !13188
  %shr282 = lshr i32 %and281, 8, !dbg !13188
  %or283 = or i32 %or279, %shr282, !dbg !13188
  %166 = load i8*, i8** %in, align 8, !dbg !13188
  %167 = bitcast i8* %166 to i32*, !dbg !13188
  %add.ptr284 = getelementptr i32, i32* %167, i64 64, !dbg !13188
  %168 = load i32, i32* %add.ptr284, align 4, !dbg !13188
  %and285 = and i32 %168, -16777216, !dbg !13188
  %shr286 = lshr i32 %and285, 24, !dbg !13188
  %or287 = or i32 %or283, %shr286, !dbg !13188
  br label %cond.end291, !dbg !13188

cond.false288:                                    ; preds = %do.end270
  %169 = load i8*, i8** %in, align 8, !dbg !13188
  %170 = bitcast i8* %169 to i32*, !dbg !13188
  %add.ptr289 = getelementptr i32, i32* %170, i64 64, !dbg !13188
  %171 = load i32, i32* %add.ptr289, align 4, !dbg !13188
  %call290 = call i32 @__fswab32(i32 %171) #8, !dbg !13188
  br label %cond.end291, !dbg !13188

cond.end291:                                      ; preds = %cond.false288, %cond.true272
  %cond292 = phi i32 [ %or287, %cond.true272 ], [ %call290, %cond.false288 ], !dbg !13188
  %and293 = and i32 %cond292, -3, !dbg !13188
  %172 = load i32, i32* %_v265, align 4, !dbg !13188
  %and294 = and i32 %172, 1, !dbg !13188
  %shl295 = shl i32 %and294, 1, !dbg !13188
  %or296 = or i32 %and293, %shl295, !dbg !13188
  %173 = call i1 @llvm.is.constant.i32(i32 %or296), !dbg !13188
  br i1 %173, label %cond.true297, label %cond.false413, !dbg !13188

cond.true297:                                     ; preds = %cond.end291
  %174 = load i8*, i8** %in, align 8, !dbg !13188
  %175 = bitcast i8* %174 to i32*, !dbg !13188
  %add.ptr298 = getelementptr i32, i32* %175, i64 64, !dbg !13188
  %176 = load i32, i32* %add.ptr298, align 4, !dbg !13188
  %177 = call i1 @llvm.is.constant.i32(i32 %176), !dbg !13188
  br i1 %177, label %cond.true299, label %cond.false315, !dbg !13188

cond.true299:                                     ; preds = %cond.true297
  %178 = load i8*, i8** %in, align 8, !dbg !13188
  %179 = bitcast i8* %178 to i32*, !dbg !13188
  %add.ptr300 = getelementptr i32, i32* %179, i64 64, !dbg !13188
  %180 = load i32, i32* %add.ptr300, align 4, !dbg !13188
  %and301 = and i32 %180, 255, !dbg !13188
  %shl302 = shl i32 %and301, 24, !dbg !13188
  %181 = load i8*, i8** %in, align 8, !dbg !13188
  %182 = bitcast i8* %181 to i32*, !dbg !13188
  %add.ptr303 = getelementptr i32, i32* %182, i64 64, !dbg !13188
  %183 = load i32, i32* %add.ptr303, align 4, !dbg !13188
  %and304 = and i32 %183, 65280, !dbg !13188
  %shl305 = shl i32 %and304, 8, !dbg !13188
  %or306 = or i32 %shl302, %shl305, !dbg !13188
  %184 = load i8*, i8** %in, align 8, !dbg !13188
  %185 = bitcast i8* %184 to i32*, !dbg !13188
  %add.ptr307 = getelementptr i32, i32* %185, i64 64, !dbg !13188
  %186 = load i32, i32* %add.ptr307, align 4, !dbg !13188
  %and308 = and i32 %186, 16711680, !dbg !13188
  %shr309 = lshr i32 %and308, 8, !dbg !13188
  %or310 = or i32 %or306, %shr309, !dbg !13188
  %187 = load i8*, i8** %in, align 8, !dbg !13188
  %188 = bitcast i8* %187 to i32*, !dbg !13188
  %add.ptr311 = getelementptr i32, i32* %188, i64 64, !dbg !13188
  %189 = load i32, i32* %add.ptr311, align 4, !dbg !13188
  %and312 = and i32 %189, -16777216, !dbg !13188
  %shr313 = lshr i32 %and312, 24, !dbg !13188
  %or314 = or i32 %or310, %shr313, !dbg !13188
  br label %cond.end318, !dbg !13188

cond.false315:                                    ; preds = %cond.true297
  %190 = load i8*, i8** %in, align 8, !dbg !13188
  %191 = bitcast i8* %190 to i32*, !dbg !13188
  %add.ptr316 = getelementptr i32, i32* %191, i64 64, !dbg !13188
  %192 = load i32, i32* %add.ptr316, align 4, !dbg !13188
  %call317 = call i32 @__fswab32(i32 %192) #8, !dbg !13188
  br label %cond.end318, !dbg !13188

cond.end318:                                      ; preds = %cond.false315, %cond.true299
  %cond319 = phi i32 [ %or314, %cond.true299 ], [ %call317, %cond.false315 ], !dbg !13188
  %and320 = and i32 %cond319, -3, !dbg !13188
  %193 = load i32, i32* %_v265, align 4, !dbg !13188
  %and321 = and i32 %193, 1, !dbg !13188
  %shl322 = shl i32 %and321, 1, !dbg !13188
  %or323 = or i32 %and320, %shl322, !dbg !13188
  %and324 = and i32 %or323, 255, !dbg !13188
  %shl325 = shl i32 %and324, 24, !dbg !13188
  %194 = load i8*, i8** %in, align 8, !dbg !13188
  %195 = bitcast i8* %194 to i32*, !dbg !13188
  %add.ptr326 = getelementptr i32, i32* %195, i64 64, !dbg !13188
  %196 = load i32, i32* %add.ptr326, align 4, !dbg !13188
  %197 = call i1 @llvm.is.constant.i32(i32 %196), !dbg !13188
  br i1 %197, label %cond.true327, label %cond.false343, !dbg !13188

cond.true327:                                     ; preds = %cond.end318
  %198 = load i8*, i8** %in, align 8, !dbg !13188
  %199 = bitcast i8* %198 to i32*, !dbg !13188
  %add.ptr328 = getelementptr i32, i32* %199, i64 64, !dbg !13188
  %200 = load i32, i32* %add.ptr328, align 4, !dbg !13188
  %and329 = and i32 %200, 255, !dbg !13188
  %shl330 = shl i32 %and329, 24, !dbg !13188
  %201 = load i8*, i8** %in, align 8, !dbg !13188
  %202 = bitcast i8* %201 to i32*, !dbg !13188
  %add.ptr331 = getelementptr i32, i32* %202, i64 64, !dbg !13188
  %203 = load i32, i32* %add.ptr331, align 4, !dbg !13188
  %and332 = and i32 %203, 65280, !dbg !13188
  %shl333 = shl i32 %and332, 8, !dbg !13188
  %or334 = or i32 %shl330, %shl333, !dbg !13188
  %204 = load i8*, i8** %in, align 8, !dbg !13188
  %205 = bitcast i8* %204 to i32*, !dbg !13188
  %add.ptr335 = getelementptr i32, i32* %205, i64 64, !dbg !13188
  %206 = load i32, i32* %add.ptr335, align 4, !dbg !13188
  %and336 = and i32 %206, 16711680, !dbg !13188
  %shr337 = lshr i32 %and336, 8, !dbg !13188
  %or338 = or i32 %or334, %shr337, !dbg !13188
  %207 = load i8*, i8** %in, align 8, !dbg !13188
  %208 = bitcast i8* %207 to i32*, !dbg !13188
  %add.ptr339 = getelementptr i32, i32* %208, i64 64, !dbg !13188
  %209 = load i32, i32* %add.ptr339, align 4, !dbg !13188
  %and340 = and i32 %209, -16777216, !dbg !13188
  %shr341 = lshr i32 %and340, 24, !dbg !13188
  %or342 = or i32 %or338, %shr341, !dbg !13188
  br label %cond.end346, !dbg !13188

cond.false343:                                    ; preds = %cond.end318
  %210 = load i8*, i8** %in, align 8, !dbg !13188
  %211 = bitcast i8* %210 to i32*, !dbg !13188
  %add.ptr344 = getelementptr i32, i32* %211, i64 64, !dbg !13188
  %212 = load i32, i32* %add.ptr344, align 4, !dbg !13188
  %call345 = call i32 @__fswab32(i32 %212) #8, !dbg !13188
  br label %cond.end346, !dbg !13188

cond.end346:                                      ; preds = %cond.false343, %cond.true327
  %cond347 = phi i32 [ %or342, %cond.true327 ], [ %call345, %cond.false343 ], !dbg !13188
  %and348 = and i32 %cond347, -3, !dbg !13188
  %213 = load i32, i32* %_v265, align 4, !dbg !13188
  %and349 = and i32 %213, 1, !dbg !13188
  %shl350 = shl i32 %and349, 1, !dbg !13188
  %or351 = or i32 %and348, %shl350, !dbg !13188
  %and352 = and i32 %or351, 65280, !dbg !13188
  %shl353 = shl i32 %and352, 8, !dbg !13188
  %or354 = or i32 %shl325, %shl353, !dbg !13188
  %214 = load i8*, i8** %in, align 8, !dbg !13188
  %215 = bitcast i8* %214 to i32*, !dbg !13188
  %add.ptr355 = getelementptr i32, i32* %215, i64 64, !dbg !13188
  %216 = load i32, i32* %add.ptr355, align 4, !dbg !13188
  %217 = call i1 @llvm.is.constant.i32(i32 %216), !dbg !13188
  br i1 %217, label %cond.true356, label %cond.false372, !dbg !13188

cond.true356:                                     ; preds = %cond.end346
  %218 = load i8*, i8** %in, align 8, !dbg !13188
  %219 = bitcast i8* %218 to i32*, !dbg !13188
  %add.ptr357 = getelementptr i32, i32* %219, i64 64, !dbg !13188
  %220 = load i32, i32* %add.ptr357, align 4, !dbg !13188
  %and358 = and i32 %220, 255, !dbg !13188
  %shl359 = shl i32 %and358, 24, !dbg !13188
  %221 = load i8*, i8** %in, align 8, !dbg !13188
  %222 = bitcast i8* %221 to i32*, !dbg !13188
  %add.ptr360 = getelementptr i32, i32* %222, i64 64, !dbg !13188
  %223 = load i32, i32* %add.ptr360, align 4, !dbg !13188
  %and361 = and i32 %223, 65280, !dbg !13188
  %shl362 = shl i32 %and361, 8, !dbg !13188
  %or363 = or i32 %shl359, %shl362, !dbg !13188
  %224 = load i8*, i8** %in, align 8, !dbg !13188
  %225 = bitcast i8* %224 to i32*, !dbg !13188
  %add.ptr364 = getelementptr i32, i32* %225, i64 64, !dbg !13188
  %226 = load i32, i32* %add.ptr364, align 4, !dbg !13188
  %and365 = and i32 %226, 16711680, !dbg !13188
  %shr366 = lshr i32 %and365, 8, !dbg !13188
  %or367 = or i32 %or363, %shr366, !dbg !13188
  %227 = load i8*, i8** %in, align 8, !dbg !13188
  %228 = bitcast i8* %227 to i32*, !dbg !13188
  %add.ptr368 = getelementptr i32, i32* %228, i64 64, !dbg !13188
  %229 = load i32, i32* %add.ptr368, align 4, !dbg !13188
  %and369 = and i32 %229, -16777216, !dbg !13188
  %shr370 = lshr i32 %and369, 24, !dbg !13188
  %or371 = or i32 %or367, %shr370, !dbg !13188
  br label %cond.end375, !dbg !13188

cond.false372:                                    ; preds = %cond.end346
  %230 = load i8*, i8** %in, align 8, !dbg !13188
  %231 = bitcast i8* %230 to i32*, !dbg !13188
  %add.ptr373 = getelementptr i32, i32* %231, i64 64, !dbg !13188
  %232 = load i32, i32* %add.ptr373, align 4, !dbg !13188
  %call374 = call i32 @__fswab32(i32 %232) #8, !dbg !13188
  br label %cond.end375, !dbg !13188

cond.end375:                                      ; preds = %cond.false372, %cond.true356
  %cond376 = phi i32 [ %or371, %cond.true356 ], [ %call374, %cond.false372 ], !dbg !13188
  %and377 = and i32 %cond376, -3, !dbg !13188
  %233 = load i32, i32* %_v265, align 4, !dbg !13188
  %and378 = and i32 %233, 1, !dbg !13188
  %shl379 = shl i32 %and378, 1, !dbg !13188
  %or380 = or i32 %and377, %shl379, !dbg !13188
  %and381 = and i32 %or380, 16711680, !dbg !13188
  %shr382 = lshr i32 %and381, 8, !dbg !13188
  %or383 = or i32 %or354, %shr382, !dbg !13188
  %234 = load i8*, i8** %in, align 8, !dbg !13188
  %235 = bitcast i8* %234 to i32*, !dbg !13188
  %add.ptr384 = getelementptr i32, i32* %235, i64 64, !dbg !13188
  %236 = load i32, i32* %add.ptr384, align 4, !dbg !13188
  %237 = call i1 @llvm.is.constant.i32(i32 %236), !dbg !13188
  br i1 %237, label %cond.true385, label %cond.false401, !dbg !13188

cond.true385:                                     ; preds = %cond.end375
  %238 = load i8*, i8** %in, align 8, !dbg !13188
  %239 = bitcast i8* %238 to i32*, !dbg !13188
  %add.ptr386 = getelementptr i32, i32* %239, i64 64, !dbg !13188
  %240 = load i32, i32* %add.ptr386, align 4, !dbg !13188
  %and387 = and i32 %240, 255, !dbg !13188
  %shl388 = shl i32 %and387, 24, !dbg !13188
  %241 = load i8*, i8** %in, align 8, !dbg !13188
  %242 = bitcast i8* %241 to i32*, !dbg !13188
  %add.ptr389 = getelementptr i32, i32* %242, i64 64, !dbg !13188
  %243 = load i32, i32* %add.ptr389, align 4, !dbg !13188
  %and390 = and i32 %243, 65280, !dbg !13188
  %shl391 = shl i32 %and390, 8, !dbg !13188
  %or392 = or i32 %shl388, %shl391, !dbg !13188
  %244 = load i8*, i8** %in, align 8, !dbg !13188
  %245 = bitcast i8* %244 to i32*, !dbg !13188
  %add.ptr393 = getelementptr i32, i32* %245, i64 64, !dbg !13188
  %246 = load i32, i32* %add.ptr393, align 4, !dbg !13188
  %and394 = and i32 %246, 16711680, !dbg !13188
  %shr395 = lshr i32 %and394, 8, !dbg !13188
  %or396 = or i32 %or392, %shr395, !dbg !13188
  %247 = load i8*, i8** %in, align 8, !dbg !13188
  %248 = bitcast i8* %247 to i32*, !dbg !13188
  %add.ptr397 = getelementptr i32, i32* %248, i64 64, !dbg !13188
  %249 = load i32, i32* %add.ptr397, align 4, !dbg !13188
  %and398 = and i32 %249, -16777216, !dbg !13188
  %shr399 = lshr i32 %and398, 24, !dbg !13188
  %or400 = or i32 %or396, %shr399, !dbg !13188
  br label %cond.end404, !dbg !13188

cond.false401:                                    ; preds = %cond.end375
  %250 = load i8*, i8** %in, align 8, !dbg !13188
  %251 = bitcast i8* %250 to i32*, !dbg !13188
  %add.ptr402 = getelementptr i32, i32* %251, i64 64, !dbg !13188
  %252 = load i32, i32* %add.ptr402, align 4, !dbg !13188
  %call403 = call i32 @__fswab32(i32 %252) #8, !dbg !13188
  br label %cond.end404, !dbg !13188

cond.end404:                                      ; preds = %cond.false401, %cond.true385
  %cond405 = phi i32 [ %or400, %cond.true385 ], [ %call403, %cond.false401 ], !dbg !13188
  %and406 = and i32 %cond405, -3, !dbg !13188
  %253 = load i32, i32* %_v265, align 4, !dbg !13188
  %and407 = and i32 %253, 1, !dbg !13188
  %shl408 = shl i32 %and407, 1, !dbg !13188
  %or409 = or i32 %and406, %shl408, !dbg !13188
  %and410 = and i32 %or409, -16777216, !dbg !13188
  %shr411 = lshr i32 %and410, 24, !dbg !13188
  %or412 = or i32 %or383, %shr411, !dbg !13188
  br label %cond.end441, !dbg !13188

cond.false413:                                    ; preds = %cond.end291
  %254 = load i8*, i8** %in, align 8, !dbg !13188
  %255 = bitcast i8* %254 to i32*, !dbg !13188
  %add.ptr414 = getelementptr i32, i32* %255, i64 64, !dbg !13188
  %256 = load i32, i32* %add.ptr414, align 4, !dbg !13188
  %257 = call i1 @llvm.is.constant.i32(i32 %256), !dbg !13188
  br i1 %257, label %cond.true415, label %cond.false431, !dbg !13188

cond.true415:                                     ; preds = %cond.false413
  %258 = load i8*, i8** %in, align 8, !dbg !13188
  %259 = bitcast i8* %258 to i32*, !dbg !13188
  %add.ptr416 = getelementptr i32, i32* %259, i64 64, !dbg !13188
  %260 = load i32, i32* %add.ptr416, align 4, !dbg !13188
  %and417 = and i32 %260, 255, !dbg !13188
  %shl418 = shl i32 %and417, 24, !dbg !13188
  %261 = load i8*, i8** %in, align 8, !dbg !13188
  %262 = bitcast i8* %261 to i32*, !dbg !13188
  %add.ptr419 = getelementptr i32, i32* %262, i64 64, !dbg !13188
  %263 = load i32, i32* %add.ptr419, align 4, !dbg !13188
  %and420 = and i32 %263, 65280, !dbg !13188
  %shl421 = shl i32 %and420, 8, !dbg !13188
  %or422 = or i32 %shl418, %shl421, !dbg !13188
  %264 = load i8*, i8** %in, align 8, !dbg !13188
  %265 = bitcast i8* %264 to i32*, !dbg !13188
  %add.ptr423 = getelementptr i32, i32* %265, i64 64, !dbg !13188
  %266 = load i32, i32* %add.ptr423, align 4, !dbg !13188
  %and424 = and i32 %266, 16711680, !dbg !13188
  %shr425 = lshr i32 %and424, 8, !dbg !13188
  %or426 = or i32 %or422, %shr425, !dbg !13188
  %267 = load i8*, i8** %in, align 8, !dbg !13188
  %268 = bitcast i8* %267 to i32*, !dbg !13188
  %add.ptr427 = getelementptr i32, i32* %268, i64 64, !dbg !13188
  %269 = load i32, i32* %add.ptr427, align 4, !dbg !13188
  %and428 = and i32 %269, -16777216, !dbg !13188
  %shr429 = lshr i32 %and428, 24, !dbg !13188
  %or430 = or i32 %or426, %shr429, !dbg !13188
  br label %cond.end434, !dbg !13188

cond.false431:                                    ; preds = %cond.false413
  %270 = load i8*, i8** %in, align 8, !dbg !13188
  %271 = bitcast i8* %270 to i32*, !dbg !13188
  %add.ptr432 = getelementptr i32, i32* %271, i64 64, !dbg !13188
  %272 = load i32, i32* %add.ptr432, align 4, !dbg !13188
  %call433 = call i32 @__fswab32(i32 %272) #8, !dbg !13188
  br label %cond.end434, !dbg !13188

cond.end434:                                      ; preds = %cond.false431, %cond.true415
  %cond435 = phi i32 [ %or430, %cond.true415 ], [ %call433, %cond.false431 ], !dbg !13188
  %and436 = and i32 %cond435, -3, !dbg !13188
  %273 = load i32, i32* %_v265, align 4, !dbg !13188
  %and437 = and i32 %273, 1, !dbg !13188
  %shl438 = shl i32 %and437, 1, !dbg !13188
  %or439 = or i32 %and436, %shl438, !dbg !13188
  %call440 = call i32 @__fswab32(i32 %or439) #8, !dbg !13188
  br label %cond.end441, !dbg !13188

cond.end441:                                      ; preds = %cond.end434, %cond.end404
  %cond442 = phi i32 [ %or412, %cond.end404 ], [ %call440, %cond.end434 ], !dbg !13188
  %274 = load i8*, i8** %in, align 8, !dbg !13188
  %275 = bitcast i8* %274 to i32*, !dbg !13188
  %add.ptr443 = getelementptr i32, i32* %275, i64 64, !dbg !13188
  store i32 %cond442, i32* %add.ptr443, align 4, !dbg !13188
  br label %do.end444, !dbg !13188

do.end444:                                        ; preds = %cond.end441
  %276 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %mdev.addr, align 8, !dbg !13191
  %caps445 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %276, i32 0, i32 9, !dbg !13191
  %hca_cur446 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps445, i32 0, i32 0, !dbg !13191
  %arrayidx447 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur446, i64 0, i64 0, !dbg !13191
  %arraydecay448 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx447, i64 0, i64 0, !dbg !13191
  %add.ptr449 = getelementptr i32, i32* %arraydecay448, i64 31, !dbg !13191
  %277 = load i32, i32* %add.ptr449, align 4, !dbg !13191
  %278 = call i1 @llvm.is.constant.i32(i32 %277), !dbg !13191
  br i1 %278, label %cond.true450, label %cond.false482, !dbg !13191

cond.true450:                                     ; preds = %do.end444
  %279 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %mdev.addr, align 8, !dbg !13191
  %caps451 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %279, i32 0, i32 9, !dbg !13191
  %hca_cur452 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps451, i32 0, i32 0, !dbg !13191
  %arrayidx453 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur452, i64 0, i64 0, !dbg !13191
  %arraydecay454 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx453, i64 0, i64 0, !dbg !13191
  %add.ptr455 = getelementptr i32, i32* %arraydecay454, i64 31, !dbg !13191
  %280 = load i32, i32* %add.ptr455, align 4, !dbg !13191
  %and456 = and i32 %280, 255, !dbg !13191
  %shl457 = shl i32 %and456, 24, !dbg !13191
  %281 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %mdev.addr, align 8, !dbg !13191
  %caps458 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %281, i32 0, i32 9, !dbg !13191
  %hca_cur459 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps458, i32 0, i32 0, !dbg !13191
  %arrayidx460 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur459, i64 0, i64 0, !dbg !13191
  %arraydecay461 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx460, i64 0, i64 0, !dbg !13191
  %add.ptr462 = getelementptr i32, i32* %arraydecay461, i64 31, !dbg !13191
  %282 = load i32, i32* %add.ptr462, align 4, !dbg !13191
  %and463 = and i32 %282, 65280, !dbg !13191
  %shl464 = shl i32 %and463, 8, !dbg !13191
  %or465 = or i32 %shl457, %shl464, !dbg !13191
  %283 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %mdev.addr, align 8, !dbg !13191
  %caps466 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %283, i32 0, i32 9, !dbg !13191
  %hca_cur467 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps466, i32 0, i32 0, !dbg !13191
  %arrayidx468 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur467, i64 0, i64 0, !dbg !13191
  %arraydecay469 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx468, i64 0, i64 0, !dbg !13191
  %add.ptr470 = getelementptr i32, i32* %arraydecay469, i64 31, !dbg !13191
  %284 = load i32, i32* %add.ptr470, align 4, !dbg !13191
  %and471 = and i32 %284, 16711680, !dbg !13191
  %shr472 = lshr i32 %and471, 8, !dbg !13191
  %or473 = or i32 %or465, %shr472, !dbg !13191
  %285 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %mdev.addr, align 8, !dbg !13191
  %caps474 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %285, i32 0, i32 9, !dbg !13191
  %hca_cur475 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps474, i32 0, i32 0, !dbg !13191
  %arrayidx476 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur475, i64 0, i64 0, !dbg !13191
  %arraydecay477 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx476, i64 0, i64 0, !dbg !13191
  %add.ptr478 = getelementptr i32, i32* %arraydecay477, i64 31, !dbg !13191
  %286 = load i32, i32* %add.ptr478, align 4, !dbg !13191
  %and479 = and i32 %286, -16777216, !dbg !13191
  %shr480 = lshr i32 %and479, 24, !dbg !13191
  %or481 = or i32 %or473, %shr480, !dbg !13191
  br label %cond.end489, !dbg !13191

cond.false482:                                    ; preds = %do.end444
  %287 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %mdev.addr, align 8, !dbg !13191
  %caps483 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %287, i32 0, i32 9, !dbg !13191
  %hca_cur484 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps483, i32 0, i32 0, !dbg !13191
  %arrayidx485 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur484, i64 0, i64 0, !dbg !13191
  %arraydecay486 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx485, i64 0, i64 0, !dbg !13191
  %add.ptr487 = getelementptr i32, i32* %arraydecay486, i64 31, !dbg !13191
  %288 = load i32, i32* %add.ptr487, align 4, !dbg !13191
  %call488 = call i32 @__fswab32(i32 %288) #8, !dbg !13191
  br label %cond.end489, !dbg !13191

cond.end489:                                      ; preds = %cond.false482, %cond.true450
  %cond490 = phi i32 [ %or481, %cond.true450 ], [ %call488, %cond.false482 ], !dbg !13191
  %shr491 = lshr i32 %cond490, 29, !dbg !13191
  %and492 = and i32 %shr491, 1, !dbg !13191
  %tobool493 = icmp ne i32 %and492, 0, !dbg !13191
  br i1 %tobool493, label %if.then494, label %if.end673, !dbg !13193

if.then494:                                       ; preds = %cond.end489
  br label %do.body495, !dbg !13194

do.body495:                                       ; preds = %if.then494
  call void @llvm.dbg.declare(metadata i32* %_v496, metadata !13195, metadata !DIExpression()), !dbg !13197
  store i32 1, i32* %_v496, align 4, !dbg !13197
  br label %do.body497, !dbg !13197

do.body497:                                       ; preds = %do.body495
  br label %do.end498, !dbg !13198

do.end498:                                        ; preds = %do.body497
  %289 = load i8*, i8** %in, align 8, !dbg !13197
  %290 = bitcast i8* %289 to i32*, !dbg !13197
  %add.ptr499 = getelementptr i32, i32* %290, i64 3, !dbg !13197
  %291 = load i32, i32* %add.ptr499, align 4, !dbg !13197
  %292 = call i1 @llvm.is.constant.i32(i32 %291), !dbg !13197
  br i1 %292, label %cond.true500, label %cond.false516, !dbg !13197

cond.true500:                                     ; preds = %do.end498
  %293 = load i8*, i8** %in, align 8, !dbg !13197
  %294 = bitcast i8* %293 to i32*, !dbg !13197
  %add.ptr501 = getelementptr i32, i32* %294, i64 3, !dbg !13197
  %295 = load i32, i32* %add.ptr501, align 4, !dbg !13197
  %and502 = and i32 %295, 255, !dbg !13197
  %shl503 = shl i32 %and502, 24, !dbg !13197
  %296 = load i8*, i8** %in, align 8, !dbg !13197
  %297 = bitcast i8* %296 to i32*, !dbg !13197
  %add.ptr504 = getelementptr i32, i32* %297, i64 3, !dbg !13197
  %298 = load i32, i32* %add.ptr504, align 4, !dbg !13197
  %and505 = and i32 %298, 65280, !dbg !13197
  %shl506 = shl i32 %and505, 8, !dbg !13197
  %or507 = or i32 %shl503, %shl506, !dbg !13197
  %299 = load i8*, i8** %in, align 8, !dbg !13197
  %300 = bitcast i8* %299 to i32*, !dbg !13197
  %add.ptr508 = getelementptr i32, i32* %300, i64 3, !dbg !13197
  %301 = load i32, i32* %add.ptr508, align 4, !dbg !13197
  %and509 = and i32 %301, 16711680, !dbg !13197
  %shr510 = lshr i32 %and509, 8, !dbg !13197
  %or511 = or i32 %or507, %shr510, !dbg !13197
  %302 = load i8*, i8** %in, align 8, !dbg !13197
  %303 = bitcast i8* %302 to i32*, !dbg !13197
  %add.ptr512 = getelementptr i32, i32* %303, i64 3, !dbg !13197
  %304 = load i32, i32* %add.ptr512, align 4, !dbg !13197
  %and513 = and i32 %304, -16777216, !dbg !13197
  %shr514 = lshr i32 %and513, 24, !dbg !13197
  %or515 = or i32 %or511, %shr514, !dbg !13197
  br label %cond.end519, !dbg !13197

cond.false516:                                    ; preds = %do.end498
  %305 = load i8*, i8** %in, align 8, !dbg !13197
  %306 = bitcast i8* %305 to i32*, !dbg !13197
  %add.ptr517 = getelementptr i32, i32* %306, i64 3, !dbg !13197
  %307 = load i32, i32* %add.ptr517, align 4, !dbg !13197
  %call518 = call i32 @__fswab32(i32 %307) #8, !dbg !13197
  br label %cond.end519, !dbg !13197

cond.end519:                                      ; preds = %cond.false516, %cond.true500
  %cond520 = phi i32 [ %or515, %cond.true500 ], [ %call518, %cond.false516 ], !dbg !13197
  %and521 = and i32 %cond520, -1025, !dbg !13197
  %308 = load i32, i32* %_v496, align 4, !dbg !13197
  %and522 = and i32 %308, 1, !dbg !13197
  %shl523 = shl i32 %and522, 10, !dbg !13197
  %or524 = or i32 %and521, %shl523, !dbg !13197
  %309 = call i1 @llvm.is.constant.i32(i32 %or524), !dbg !13197
  br i1 %309, label %cond.true525, label %cond.false641, !dbg !13197

cond.true525:                                     ; preds = %cond.end519
  %310 = load i8*, i8** %in, align 8, !dbg !13197
  %311 = bitcast i8* %310 to i32*, !dbg !13197
  %add.ptr526 = getelementptr i32, i32* %311, i64 3, !dbg !13197
  %312 = load i32, i32* %add.ptr526, align 4, !dbg !13197
  %313 = call i1 @llvm.is.constant.i32(i32 %312), !dbg !13197
  br i1 %313, label %cond.true527, label %cond.false543, !dbg !13197

cond.true527:                                     ; preds = %cond.true525
  %314 = load i8*, i8** %in, align 8, !dbg !13197
  %315 = bitcast i8* %314 to i32*, !dbg !13197
  %add.ptr528 = getelementptr i32, i32* %315, i64 3, !dbg !13197
  %316 = load i32, i32* %add.ptr528, align 4, !dbg !13197
  %and529 = and i32 %316, 255, !dbg !13197
  %shl530 = shl i32 %and529, 24, !dbg !13197
  %317 = load i8*, i8** %in, align 8, !dbg !13197
  %318 = bitcast i8* %317 to i32*, !dbg !13197
  %add.ptr531 = getelementptr i32, i32* %318, i64 3, !dbg !13197
  %319 = load i32, i32* %add.ptr531, align 4, !dbg !13197
  %and532 = and i32 %319, 65280, !dbg !13197
  %shl533 = shl i32 %and532, 8, !dbg !13197
  %or534 = or i32 %shl530, %shl533, !dbg !13197
  %320 = load i8*, i8** %in, align 8, !dbg !13197
  %321 = bitcast i8* %320 to i32*, !dbg !13197
  %add.ptr535 = getelementptr i32, i32* %321, i64 3, !dbg !13197
  %322 = load i32, i32* %add.ptr535, align 4, !dbg !13197
  %and536 = and i32 %322, 16711680, !dbg !13197
  %shr537 = lshr i32 %and536, 8, !dbg !13197
  %or538 = or i32 %or534, %shr537, !dbg !13197
  %323 = load i8*, i8** %in, align 8, !dbg !13197
  %324 = bitcast i8* %323 to i32*, !dbg !13197
  %add.ptr539 = getelementptr i32, i32* %324, i64 3, !dbg !13197
  %325 = load i32, i32* %add.ptr539, align 4, !dbg !13197
  %and540 = and i32 %325, -16777216, !dbg !13197
  %shr541 = lshr i32 %and540, 24, !dbg !13197
  %or542 = or i32 %or538, %shr541, !dbg !13197
  br label %cond.end546, !dbg !13197

cond.false543:                                    ; preds = %cond.true525
  %326 = load i8*, i8** %in, align 8, !dbg !13197
  %327 = bitcast i8* %326 to i32*, !dbg !13197
  %add.ptr544 = getelementptr i32, i32* %327, i64 3, !dbg !13197
  %328 = load i32, i32* %add.ptr544, align 4, !dbg !13197
  %call545 = call i32 @__fswab32(i32 %328) #8, !dbg !13197
  br label %cond.end546, !dbg !13197

cond.end546:                                      ; preds = %cond.false543, %cond.true527
  %cond547 = phi i32 [ %or542, %cond.true527 ], [ %call545, %cond.false543 ], !dbg !13197
  %and548 = and i32 %cond547, -1025, !dbg !13197
  %329 = load i32, i32* %_v496, align 4, !dbg !13197
  %and549 = and i32 %329, 1, !dbg !13197
  %shl550 = shl i32 %and549, 10, !dbg !13197
  %or551 = or i32 %and548, %shl550, !dbg !13197
  %and552 = and i32 %or551, 255, !dbg !13197
  %shl553 = shl i32 %and552, 24, !dbg !13197
  %330 = load i8*, i8** %in, align 8, !dbg !13197
  %331 = bitcast i8* %330 to i32*, !dbg !13197
  %add.ptr554 = getelementptr i32, i32* %331, i64 3, !dbg !13197
  %332 = load i32, i32* %add.ptr554, align 4, !dbg !13197
  %333 = call i1 @llvm.is.constant.i32(i32 %332), !dbg !13197
  br i1 %333, label %cond.true555, label %cond.false571, !dbg !13197

cond.true555:                                     ; preds = %cond.end546
  %334 = load i8*, i8** %in, align 8, !dbg !13197
  %335 = bitcast i8* %334 to i32*, !dbg !13197
  %add.ptr556 = getelementptr i32, i32* %335, i64 3, !dbg !13197
  %336 = load i32, i32* %add.ptr556, align 4, !dbg !13197
  %and557 = and i32 %336, 255, !dbg !13197
  %shl558 = shl i32 %and557, 24, !dbg !13197
  %337 = load i8*, i8** %in, align 8, !dbg !13197
  %338 = bitcast i8* %337 to i32*, !dbg !13197
  %add.ptr559 = getelementptr i32, i32* %338, i64 3, !dbg !13197
  %339 = load i32, i32* %add.ptr559, align 4, !dbg !13197
  %and560 = and i32 %339, 65280, !dbg !13197
  %shl561 = shl i32 %and560, 8, !dbg !13197
  %or562 = or i32 %shl558, %shl561, !dbg !13197
  %340 = load i8*, i8** %in, align 8, !dbg !13197
  %341 = bitcast i8* %340 to i32*, !dbg !13197
  %add.ptr563 = getelementptr i32, i32* %341, i64 3, !dbg !13197
  %342 = load i32, i32* %add.ptr563, align 4, !dbg !13197
  %and564 = and i32 %342, 16711680, !dbg !13197
  %shr565 = lshr i32 %and564, 8, !dbg !13197
  %or566 = or i32 %or562, %shr565, !dbg !13197
  %343 = load i8*, i8** %in, align 8, !dbg !13197
  %344 = bitcast i8* %343 to i32*, !dbg !13197
  %add.ptr567 = getelementptr i32, i32* %344, i64 3, !dbg !13197
  %345 = load i32, i32* %add.ptr567, align 4, !dbg !13197
  %and568 = and i32 %345, -16777216, !dbg !13197
  %shr569 = lshr i32 %and568, 24, !dbg !13197
  %or570 = or i32 %or566, %shr569, !dbg !13197
  br label %cond.end574, !dbg !13197

cond.false571:                                    ; preds = %cond.end546
  %346 = load i8*, i8** %in, align 8, !dbg !13197
  %347 = bitcast i8* %346 to i32*, !dbg !13197
  %add.ptr572 = getelementptr i32, i32* %347, i64 3, !dbg !13197
  %348 = load i32, i32* %add.ptr572, align 4, !dbg !13197
  %call573 = call i32 @__fswab32(i32 %348) #8, !dbg !13197
  br label %cond.end574, !dbg !13197

cond.end574:                                      ; preds = %cond.false571, %cond.true555
  %cond575 = phi i32 [ %or570, %cond.true555 ], [ %call573, %cond.false571 ], !dbg !13197
  %and576 = and i32 %cond575, -1025, !dbg !13197
  %349 = load i32, i32* %_v496, align 4, !dbg !13197
  %and577 = and i32 %349, 1, !dbg !13197
  %shl578 = shl i32 %and577, 10, !dbg !13197
  %or579 = or i32 %and576, %shl578, !dbg !13197
  %and580 = and i32 %or579, 65280, !dbg !13197
  %shl581 = shl i32 %and580, 8, !dbg !13197
  %or582 = or i32 %shl553, %shl581, !dbg !13197
  %350 = load i8*, i8** %in, align 8, !dbg !13197
  %351 = bitcast i8* %350 to i32*, !dbg !13197
  %add.ptr583 = getelementptr i32, i32* %351, i64 3, !dbg !13197
  %352 = load i32, i32* %add.ptr583, align 4, !dbg !13197
  %353 = call i1 @llvm.is.constant.i32(i32 %352), !dbg !13197
  br i1 %353, label %cond.true584, label %cond.false600, !dbg !13197

cond.true584:                                     ; preds = %cond.end574
  %354 = load i8*, i8** %in, align 8, !dbg !13197
  %355 = bitcast i8* %354 to i32*, !dbg !13197
  %add.ptr585 = getelementptr i32, i32* %355, i64 3, !dbg !13197
  %356 = load i32, i32* %add.ptr585, align 4, !dbg !13197
  %and586 = and i32 %356, 255, !dbg !13197
  %shl587 = shl i32 %and586, 24, !dbg !13197
  %357 = load i8*, i8** %in, align 8, !dbg !13197
  %358 = bitcast i8* %357 to i32*, !dbg !13197
  %add.ptr588 = getelementptr i32, i32* %358, i64 3, !dbg !13197
  %359 = load i32, i32* %add.ptr588, align 4, !dbg !13197
  %and589 = and i32 %359, 65280, !dbg !13197
  %shl590 = shl i32 %and589, 8, !dbg !13197
  %or591 = or i32 %shl587, %shl590, !dbg !13197
  %360 = load i8*, i8** %in, align 8, !dbg !13197
  %361 = bitcast i8* %360 to i32*, !dbg !13197
  %add.ptr592 = getelementptr i32, i32* %361, i64 3, !dbg !13197
  %362 = load i32, i32* %add.ptr592, align 4, !dbg !13197
  %and593 = and i32 %362, 16711680, !dbg !13197
  %shr594 = lshr i32 %and593, 8, !dbg !13197
  %or595 = or i32 %or591, %shr594, !dbg !13197
  %363 = load i8*, i8** %in, align 8, !dbg !13197
  %364 = bitcast i8* %363 to i32*, !dbg !13197
  %add.ptr596 = getelementptr i32, i32* %364, i64 3, !dbg !13197
  %365 = load i32, i32* %add.ptr596, align 4, !dbg !13197
  %and597 = and i32 %365, -16777216, !dbg !13197
  %shr598 = lshr i32 %and597, 24, !dbg !13197
  %or599 = or i32 %or595, %shr598, !dbg !13197
  br label %cond.end603, !dbg !13197

cond.false600:                                    ; preds = %cond.end574
  %366 = load i8*, i8** %in, align 8, !dbg !13197
  %367 = bitcast i8* %366 to i32*, !dbg !13197
  %add.ptr601 = getelementptr i32, i32* %367, i64 3, !dbg !13197
  %368 = load i32, i32* %add.ptr601, align 4, !dbg !13197
  %call602 = call i32 @__fswab32(i32 %368) #8, !dbg !13197
  br label %cond.end603, !dbg !13197

cond.end603:                                      ; preds = %cond.false600, %cond.true584
  %cond604 = phi i32 [ %or599, %cond.true584 ], [ %call602, %cond.false600 ], !dbg !13197
  %and605 = and i32 %cond604, -1025, !dbg !13197
  %369 = load i32, i32* %_v496, align 4, !dbg !13197
  %and606 = and i32 %369, 1, !dbg !13197
  %shl607 = shl i32 %and606, 10, !dbg !13197
  %or608 = or i32 %and605, %shl607, !dbg !13197
  %and609 = and i32 %or608, 16711680, !dbg !13197
  %shr610 = lshr i32 %and609, 8, !dbg !13197
  %or611 = or i32 %or582, %shr610, !dbg !13197
  %370 = load i8*, i8** %in, align 8, !dbg !13197
  %371 = bitcast i8* %370 to i32*, !dbg !13197
  %add.ptr612 = getelementptr i32, i32* %371, i64 3, !dbg !13197
  %372 = load i32, i32* %add.ptr612, align 4, !dbg !13197
  %373 = call i1 @llvm.is.constant.i32(i32 %372), !dbg !13197
  br i1 %373, label %cond.true613, label %cond.false629, !dbg !13197

cond.true613:                                     ; preds = %cond.end603
  %374 = load i8*, i8** %in, align 8, !dbg !13197
  %375 = bitcast i8* %374 to i32*, !dbg !13197
  %add.ptr614 = getelementptr i32, i32* %375, i64 3, !dbg !13197
  %376 = load i32, i32* %add.ptr614, align 4, !dbg !13197
  %and615 = and i32 %376, 255, !dbg !13197
  %shl616 = shl i32 %and615, 24, !dbg !13197
  %377 = load i8*, i8** %in, align 8, !dbg !13197
  %378 = bitcast i8* %377 to i32*, !dbg !13197
  %add.ptr617 = getelementptr i32, i32* %378, i64 3, !dbg !13197
  %379 = load i32, i32* %add.ptr617, align 4, !dbg !13197
  %and618 = and i32 %379, 65280, !dbg !13197
  %shl619 = shl i32 %and618, 8, !dbg !13197
  %or620 = or i32 %shl616, %shl619, !dbg !13197
  %380 = load i8*, i8** %in, align 8, !dbg !13197
  %381 = bitcast i8* %380 to i32*, !dbg !13197
  %add.ptr621 = getelementptr i32, i32* %381, i64 3, !dbg !13197
  %382 = load i32, i32* %add.ptr621, align 4, !dbg !13197
  %and622 = and i32 %382, 16711680, !dbg !13197
  %shr623 = lshr i32 %and622, 8, !dbg !13197
  %or624 = or i32 %or620, %shr623, !dbg !13197
  %383 = load i8*, i8** %in, align 8, !dbg !13197
  %384 = bitcast i8* %383 to i32*, !dbg !13197
  %add.ptr625 = getelementptr i32, i32* %384, i64 3, !dbg !13197
  %385 = load i32, i32* %add.ptr625, align 4, !dbg !13197
  %and626 = and i32 %385, -16777216, !dbg !13197
  %shr627 = lshr i32 %and626, 24, !dbg !13197
  %or628 = or i32 %or624, %shr627, !dbg !13197
  br label %cond.end632, !dbg !13197

cond.false629:                                    ; preds = %cond.end603
  %386 = load i8*, i8** %in, align 8, !dbg !13197
  %387 = bitcast i8* %386 to i32*, !dbg !13197
  %add.ptr630 = getelementptr i32, i32* %387, i64 3, !dbg !13197
  %388 = load i32, i32* %add.ptr630, align 4, !dbg !13197
  %call631 = call i32 @__fswab32(i32 %388) #8, !dbg !13197
  br label %cond.end632, !dbg !13197

cond.end632:                                      ; preds = %cond.false629, %cond.true613
  %cond633 = phi i32 [ %or628, %cond.true613 ], [ %call631, %cond.false629 ], !dbg !13197
  %and634 = and i32 %cond633, -1025, !dbg !13197
  %389 = load i32, i32* %_v496, align 4, !dbg !13197
  %and635 = and i32 %389, 1, !dbg !13197
  %shl636 = shl i32 %and635, 10, !dbg !13197
  %or637 = or i32 %and634, %shl636, !dbg !13197
  %and638 = and i32 %or637, -16777216, !dbg !13197
  %shr639 = lshr i32 %and638, 24, !dbg !13197
  %or640 = or i32 %or611, %shr639, !dbg !13197
  br label %cond.end669, !dbg !13197

cond.false641:                                    ; preds = %cond.end519
  %390 = load i8*, i8** %in, align 8, !dbg !13197
  %391 = bitcast i8* %390 to i32*, !dbg !13197
  %add.ptr642 = getelementptr i32, i32* %391, i64 3, !dbg !13197
  %392 = load i32, i32* %add.ptr642, align 4, !dbg !13197
  %393 = call i1 @llvm.is.constant.i32(i32 %392), !dbg !13197
  br i1 %393, label %cond.true643, label %cond.false659, !dbg !13197

cond.true643:                                     ; preds = %cond.false641
  %394 = load i8*, i8** %in, align 8, !dbg !13197
  %395 = bitcast i8* %394 to i32*, !dbg !13197
  %add.ptr644 = getelementptr i32, i32* %395, i64 3, !dbg !13197
  %396 = load i32, i32* %add.ptr644, align 4, !dbg !13197
  %and645 = and i32 %396, 255, !dbg !13197
  %shl646 = shl i32 %and645, 24, !dbg !13197
  %397 = load i8*, i8** %in, align 8, !dbg !13197
  %398 = bitcast i8* %397 to i32*, !dbg !13197
  %add.ptr647 = getelementptr i32, i32* %398, i64 3, !dbg !13197
  %399 = load i32, i32* %add.ptr647, align 4, !dbg !13197
  %and648 = and i32 %399, 65280, !dbg !13197
  %shl649 = shl i32 %and648, 8, !dbg !13197
  %or650 = or i32 %shl646, %shl649, !dbg !13197
  %400 = load i8*, i8** %in, align 8, !dbg !13197
  %401 = bitcast i8* %400 to i32*, !dbg !13197
  %add.ptr651 = getelementptr i32, i32* %401, i64 3, !dbg !13197
  %402 = load i32, i32* %add.ptr651, align 4, !dbg !13197
  %and652 = and i32 %402, 16711680, !dbg !13197
  %shr653 = lshr i32 %and652, 8, !dbg !13197
  %or654 = or i32 %or650, %shr653, !dbg !13197
  %403 = load i8*, i8** %in, align 8, !dbg !13197
  %404 = bitcast i8* %403 to i32*, !dbg !13197
  %add.ptr655 = getelementptr i32, i32* %404, i64 3, !dbg !13197
  %405 = load i32, i32* %add.ptr655, align 4, !dbg !13197
  %and656 = and i32 %405, -16777216, !dbg !13197
  %shr657 = lshr i32 %and656, 24, !dbg !13197
  %or658 = or i32 %or654, %shr657, !dbg !13197
  br label %cond.end662, !dbg !13197

cond.false659:                                    ; preds = %cond.false641
  %406 = load i8*, i8** %in, align 8, !dbg !13197
  %407 = bitcast i8* %406 to i32*, !dbg !13197
  %add.ptr660 = getelementptr i32, i32* %407, i64 3, !dbg !13197
  %408 = load i32, i32* %add.ptr660, align 4, !dbg !13197
  %call661 = call i32 @__fswab32(i32 %408) #8, !dbg !13197
  br label %cond.end662, !dbg !13197

cond.end662:                                      ; preds = %cond.false659, %cond.true643
  %cond663 = phi i32 [ %or658, %cond.true643 ], [ %call661, %cond.false659 ], !dbg !13197
  %and664 = and i32 %cond663, -1025, !dbg !13197
  %409 = load i32, i32* %_v496, align 4, !dbg !13197
  %and665 = and i32 %409, 1, !dbg !13197
  %shl666 = shl i32 %and665, 10, !dbg !13197
  %or667 = or i32 %and664, %shl666, !dbg !13197
  %call668 = call i32 @__fswab32(i32 %or667) #8, !dbg !13197
  br label %cond.end669, !dbg !13197

cond.end669:                                      ; preds = %cond.end662, %cond.end632
  %cond670 = phi i32 [ %or640, %cond.end632 ], [ %call668, %cond.end662 ], !dbg !13197
  %410 = load i8*, i8** %in, align 8, !dbg !13197
  %411 = bitcast i8* %410 to i32*, !dbg !13197
  %add.ptr671 = getelementptr i32, i32* %411, i64 3, !dbg !13197
  store i32 %cond670, i32* %add.ptr671, align 4, !dbg !13197
  br label %do.end672, !dbg !13197

do.end672:                                        ; preds = %cond.end669
  br label %if.end673, !dbg !13197

if.end673:                                        ; preds = %do.end672, %cond.end489
  %412 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %mdev.addr, align 8, !dbg !13200
  %caps674 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %412, i32 0, i32 9, !dbg !13200
  %hca_cur675 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps674, i32 0, i32 0, !dbg !13200
  %arrayidx676 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur675, i64 0, i64 0, !dbg !13200
  %arraydecay677 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx676, i64 0, i64 0, !dbg !13200
  %add.ptr678 = getelementptr i32, i32* %arraydecay677, i64 31, !dbg !13200
  %413 = load i32, i32* %add.ptr678, align 4, !dbg !13200
  %414 = call i1 @llvm.is.constant.i32(i32 %413), !dbg !13200
  br i1 %414, label %cond.true679, label %cond.false711, !dbg !13200

cond.true679:                                     ; preds = %if.end673
  %415 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %mdev.addr, align 8, !dbg !13200
  %caps680 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %415, i32 0, i32 9, !dbg !13200
  %hca_cur681 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps680, i32 0, i32 0, !dbg !13200
  %arrayidx682 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur681, i64 0, i64 0, !dbg !13200
  %arraydecay683 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx682, i64 0, i64 0, !dbg !13200
  %add.ptr684 = getelementptr i32, i32* %arraydecay683, i64 31, !dbg !13200
  %416 = load i32, i32* %add.ptr684, align 4, !dbg !13200
  %and685 = and i32 %416, 255, !dbg !13200
  %shl686 = shl i32 %and685, 24, !dbg !13200
  %417 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %mdev.addr, align 8, !dbg !13200
  %caps687 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %417, i32 0, i32 9, !dbg !13200
  %hca_cur688 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps687, i32 0, i32 0, !dbg !13200
  %arrayidx689 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur688, i64 0, i64 0, !dbg !13200
  %arraydecay690 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx689, i64 0, i64 0, !dbg !13200
  %add.ptr691 = getelementptr i32, i32* %arraydecay690, i64 31, !dbg !13200
  %418 = load i32, i32* %add.ptr691, align 4, !dbg !13200
  %and692 = and i32 %418, 65280, !dbg !13200
  %shl693 = shl i32 %and692, 8, !dbg !13200
  %or694 = or i32 %shl686, %shl693, !dbg !13200
  %419 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %mdev.addr, align 8, !dbg !13200
  %caps695 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %419, i32 0, i32 9, !dbg !13200
  %hca_cur696 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps695, i32 0, i32 0, !dbg !13200
  %arrayidx697 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur696, i64 0, i64 0, !dbg !13200
  %arraydecay698 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx697, i64 0, i64 0, !dbg !13200
  %add.ptr699 = getelementptr i32, i32* %arraydecay698, i64 31, !dbg !13200
  %420 = load i32, i32* %add.ptr699, align 4, !dbg !13200
  %and700 = and i32 %420, 16711680, !dbg !13200
  %shr701 = lshr i32 %and700, 8, !dbg !13200
  %or702 = or i32 %or694, %shr701, !dbg !13200
  %421 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %mdev.addr, align 8, !dbg !13200
  %caps703 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %421, i32 0, i32 9, !dbg !13200
  %hca_cur704 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps703, i32 0, i32 0, !dbg !13200
  %arrayidx705 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur704, i64 0, i64 0, !dbg !13200
  %arraydecay706 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx705, i64 0, i64 0, !dbg !13200
  %add.ptr707 = getelementptr i32, i32* %arraydecay706, i64 31, !dbg !13200
  %422 = load i32, i32* %add.ptr707, align 4, !dbg !13200
  %and708 = and i32 %422, -16777216, !dbg !13200
  %shr709 = lshr i32 %and708, 24, !dbg !13200
  %or710 = or i32 %or702, %shr709, !dbg !13200
  br label %cond.end718, !dbg !13200

cond.false711:                                    ; preds = %if.end673
  %423 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %mdev.addr, align 8, !dbg !13200
  %caps712 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %423, i32 0, i32 9, !dbg !13200
  %hca_cur713 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps712, i32 0, i32 0, !dbg !13200
  %arrayidx714 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur713, i64 0, i64 0, !dbg !13200
  %arraydecay715 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx714, i64 0, i64 0, !dbg !13200
  %add.ptr716 = getelementptr i32, i32* %arraydecay715, i64 31, !dbg !13200
  %424 = load i32, i32* %add.ptr716, align 4, !dbg !13200
  %call717 = call i32 @__fswab32(i32 %424) #8, !dbg !13200
  br label %cond.end718, !dbg !13200

cond.end718:                                      ; preds = %cond.false711, %cond.true679
  %cond719 = phi i32 [ %or710, %cond.true679 ], [ %call717, %cond.false711 ], !dbg !13200
  %shr720 = lshr i32 %cond719, 30, !dbg !13200
  %and721 = and i32 %shr720, 1, !dbg !13200
  %tobool722 = icmp ne i32 %and721, 0, !dbg !13200
  br i1 %tobool722, label %if.then723, label %if.end902, !dbg !13202

if.then723:                                       ; preds = %cond.end718
  br label %do.body724, !dbg !13203

do.body724:                                       ; preds = %if.then723
  call void @llvm.dbg.declare(metadata i32* %_v725, metadata !13204, metadata !DIExpression()), !dbg !13206
  store i32 1, i32* %_v725, align 4, !dbg !13206
  br label %do.body726, !dbg !13206

do.body726:                                       ; preds = %do.body724
  br label %do.end727, !dbg !13207

do.end727:                                        ; preds = %do.body726
  %425 = load i8*, i8** %in, align 8, !dbg !13206
  %426 = bitcast i8* %425 to i32*, !dbg !13206
  %add.ptr728 = getelementptr i32, i32* %426, i64 3, !dbg !13206
  %427 = load i32, i32* %add.ptr728, align 4, !dbg !13206
  %428 = call i1 @llvm.is.constant.i32(i32 %427), !dbg !13206
  br i1 %428, label %cond.true729, label %cond.false745, !dbg !13206

cond.true729:                                     ; preds = %do.end727
  %429 = load i8*, i8** %in, align 8, !dbg !13206
  %430 = bitcast i8* %429 to i32*, !dbg !13206
  %add.ptr730 = getelementptr i32, i32* %430, i64 3, !dbg !13206
  %431 = load i32, i32* %add.ptr730, align 4, !dbg !13206
  %and731 = and i32 %431, 255, !dbg !13206
  %shl732 = shl i32 %and731, 24, !dbg !13206
  %432 = load i8*, i8** %in, align 8, !dbg !13206
  %433 = bitcast i8* %432 to i32*, !dbg !13206
  %add.ptr733 = getelementptr i32, i32* %433, i64 3, !dbg !13206
  %434 = load i32, i32* %add.ptr733, align 4, !dbg !13206
  %and734 = and i32 %434, 65280, !dbg !13206
  %shl735 = shl i32 %and734, 8, !dbg !13206
  %or736 = or i32 %shl732, %shl735, !dbg !13206
  %435 = load i8*, i8** %in, align 8, !dbg !13206
  %436 = bitcast i8* %435 to i32*, !dbg !13206
  %add.ptr737 = getelementptr i32, i32* %436, i64 3, !dbg !13206
  %437 = load i32, i32* %add.ptr737, align 4, !dbg !13206
  %and738 = and i32 %437, 16711680, !dbg !13206
  %shr739 = lshr i32 %and738, 8, !dbg !13206
  %or740 = or i32 %or736, %shr739, !dbg !13206
  %438 = load i8*, i8** %in, align 8, !dbg !13206
  %439 = bitcast i8* %438 to i32*, !dbg !13206
  %add.ptr741 = getelementptr i32, i32* %439, i64 3, !dbg !13206
  %440 = load i32, i32* %add.ptr741, align 4, !dbg !13206
  %and742 = and i32 %440, -16777216, !dbg !13206
  %shr743 = lshr i32 %and742, 24, !dbg !13206
  %or744 = or i32 %or740, %shr743, !dbg !13206
  br label %cond.end748, !dbg !13206

cond.false745:                                    ; preds = %do.end727
  %441 = load i8*, i8** %in, align 8, !dbg !13206
  %442 = bitcast i8* %441 to i32*, !dbg !13206
  %add.ptr746 = getelementptr i32, i32* %442, i64 3, !dbg !13206
  %443 = load i32, i32* %add.ptr746, align 4, !dbg !13206
  %call747 = call i32 @__fswab32(i32 %443) #8, !dbg !13206
  br label %cond.end748, !dbg !13206

cond.end748:                                      ; preds = %cond.false745, %cond.true729
  %cond749 = phi i32 [ %or744, %cond.true729 ], [ %call747, %cond.false745 ], !dbg !13206
  %and750 = and i32 %cond749, -2049, !dbg !13206
  %444 = load i32, i32* %_v725, align 4, !dbg !13206
  %and751 = and i32 %444, 1, !dbg !13206
  %shl752 = shl i32 %and751, 11, !dbg !13206
  %or753 = or i32 %and750, %shl752, !dbg !13206
  %445 = call i1 @llvm.is.constant.i32(i32 %or753), !dbg !13206
  br i1 %445, label %cond.true754, label %cond.false870, !dbg !13206

cond.true754:                                     ; preds = %cond.end748
  %446 = load i8*, i8** %in, align 8, !dbg !13206
  %447 = bitcast i8* %446 to i32*, !dbg !13206
  %add.ptr755 = getelementptr i32, i32* %447, i64 3, !dbg !13206
  %448 = load i32, i32* %add.ptr755, align 4, !dbg !13206
  %449 = call i1 @llvm.is.constant.i32(i32 %448), !dbg !13206
  br i1 %449, label %cond.true756, label %cond.false772, !dbg !13206

cond.true756:                                     ; preds = %cond.true754
  %450 = load i8*, i8** %in, align 8, !dbg !13206
  %451 = bitcast i8* %450 to i32*, !dbg !13206
  %add.ptr757 = getelementptr i32, i32* %451, i64 3, !dbg !13206
  %452 = load i32, i32* %add.ptr757, align 4, !dbg !13206
  %and758 = and i32 %452, 255, !dbg !13206
  %shl759 = shl i32 %and758, 24, !dbg !13206
  %453 = load i8*, i8** %in, align 8, !dbg !13206
  %454 = bitcast i8* %453 to i32*, !dbg !13206
  %add.ptr760 = getelementptr i32, i32* %454, i64 3, !dbg !13206
  %455 = load i32, i32* %add.ptr760, align 4, !dbg !13206
  %and761 = and i32 %455, 65280, !dbg !13206
  %shl762 = shl i32 %and761, 8, !dbg !13206
  %or763 = or i32 %shl759, %shl762, !dbg !13206
  %456 = load i8*, i8** %in, align 8, !dbg !13206
  %457 = bitcast i8* %456 to i32*, !dbg !13206
  %add.ptr764 = getelementptr i32, i32* %457, i64 3, !dbg !13206
  %458 = load i32, i32* %add.ptr764, align 4, !dbg !13206
  %and765 = and i32 %458, 16711680, !dbg !13206
  %shr766 = lshr i32 %and765, 8, !dbg !13206
  %or767 = or i32 %or763, %shr766, !dbg !13206
  %459 = load i8*, i8** %in, align 8, !dbg !13206
  %460 = bitcast i8* %459 to i32*, !dbg !13206
  %add.ptr768 = getelementptr i32, i32* %460, i64 3, !dbg !13206
  %461 = load i32, i32* %add.ptr768, align 4, !dbg !13206
  %and769 = and i32 %461, -16777216, !dbg !13206
  %shr770 = lshr i32 %and769, 24, !dbg !13206
  %or771 = or i32 %or767, %shr770, !dbg !13206
  br label %cond.end775, !dbg !13206

cond.false772:                                    ; preds = %cond.true754
  %462 = load i8*, i8** %in, align 8, !dbg !13206
  %463 = bitcast i8* %462 to i32*, !dbg !13206
  %add.ptr773 = getelementptr i32, i32* %463, i64 3, !dbg !13206
  %464 = load i32, i32* %add.ptr773, align 4, !dbg !13206
  %call774 = call i32 @__fswab32(i32 %464) #8, !dbg !13206
  br label %cond.end775, !dbg !13206

cond.end775:                                      ; preds = %cond.false772, %cond.true756
  %cond776 = phi i32 [ %or771, %cond.true756 ], [ %call774, %cond.false772 ], !dbg !13206
  %and777 = and i32 %cond776, -2049, !dbg !13206
  %465 = load i32, i32* %_v725, align 4, !dbg !13206
  %and778 = and i32 %465, 1, !dbg !13206
  %shl779 = shl i32 %and778, 11, !dbg !13206
  %or780 = or i32 %and777, %shl779, !dbg !13206
  %and781 = and i32 %or780, 255, !dbg !13206
  %shl782 = shl i32 %and781, 24, !dbg !13206
  %466 = load i8*, i8** %in, align 8, !dbg !13206
  %467 = bitcast i8* %466 to i32*, !dbg !13206
  %add.ptr783 = getelementptr i32, i32* %467, i64 3, !dbg !13206
  %468 = load i32, i32* %add.ptr783, align 4, !dbg !13206
  %469 = call i1 @llvm.is.constant.i32(i32 %468), !dbg !13206
  br i1 %469, label %cond.true784, label %cond.false800, !dbg !13206

cond.true784:                                     ; preds = %cond.end775
  %470 = load i8*, i8** %in, align 8, !dbg !13206
  %471 = bitcast i8* %470 to i32*, !dbg !13206
  %add.ptr785 = getelementptr i32, i32* %471, i64 3, !dbg !13206
  %472 = load i32, i32* %add.ptr785, align 4, !dbg !13206
  %and786 = and i32 %472, 255, !dbg !13206
  %shl787 = shl i32 %and786, 24, !dbg !13206
  %473 = load i8*, i8** %in, align 8, !dbg !13206
  %474 = bitcast i8* %473 to i32*, !dbg !13206
  %add.ptr788 = getelementptr i32, i32* %474, i64 3, !dbg !13206
  %475 = load i32, i32* %add.ptr788, align 4, !dbg !13206
  %and789 = and i32 %475, 65280, !dbg !13206
  %shl790 = shl i32 %and789, 8, !dbg !13206
  %or791 = or i32 %shl787, %shl790, !dbg !13206
  %476 = load i8*, i8** %in, align 8, !dbg !13206
  %477 = bitcast i8* %476 to i32*, !dbg !13206
  %add.ptr792 = getelementptr i32, i32* %477, i64 3, !dbg !13206
  %478 = load i32, i32* %add.ptr792, align 4, !dbg !13206
  %and793 = and i32 %478, 16711680, !dbg !13206
  %shr794 = lshr i32 %and793, 8, !dbg !13206
  %or795 = or i32 %or791, %shr794, !dbg !13206
  %479 = load i8*, i8** %in, align 8, !dbg !13206
  %480 = bitcast i8* %479 to i32*, !dbg !13206
  %add.ptr796 = getelementptr i32, i32* %480, i64 3, !dbg !13206
  %481 = load i32, i32* %add.ptr796, align 4, !dbg !13206
  %and797 = and i32 %481, -16777216, !dbg !13206
  %shr798 = lshr i32 %and797, 24, !dbg !13206
  %or799 = or i32 %or795, %shr798, !dbg !13206
  br label %cond.end803, !dbg !13206

cond.false800:                                    ; preds = %cond.end775
  %482 = load i8*, i8** %in, align 8, !dbg !13206
  %483 = bitcast i8* %482 to i32*, !dbg !13206
  %add.ptr801 = getelementptr i32, i32* %483, i64 3, !dbg !13206
  %484 = load i32, i32* %add.ptr801, align 4, !dbg !13206
  %call802 = call i32 @__fswab32(i32 %484) #8, !dbg !13206
  br label %cond.end803, !dbg !13206

cond.end803:                                      ; preds = %cond.false800, %cond.true784
  %cond804 = phi i32 [ %or799, %cond.true784 ], [ %call802, %cond.false800 ], !dbg !13206
  %and805 = and i32 %cond804, -2049, !dbg !13206
  %485 = load i32, i32* %_v725, align 4, !dbg !13206
  %and806 = and i32 %485, 1, !dbg !13206
  %shl807 = shl i32 %and806, 11, !dbg !13206
  %or808 = or i32 %and805, %shl807, !dbg !13206
  %and809 = and i32 %or808, 65280, !dbg !13206
  %shl810 = shl i32 %and809, 8, !dbg !13206
  %or811 = or i32 %shl782, %shl810, !dbg !13206
  %486 = load i8*, i8** %in, align 8, !dbg !13206
  %487 = bitcast i8* %486 to i32*, !dbg !13206
  %add.ptr812 = getelementptr i32, i32* %487, i64 3, !dbg !13206
  %488 = load i32, i32* %add.ptr812, align 4, !dbg !13206
  %489 = call i1 @llvm.is.constant.i32(i32 %488), !dbg !13206
  br i1 %489, label %cond.true813, label %cond.false829, !dbg !13206

cond.true813:                                     ; preds = %cond.end803
  %490 = load i8*, i8** %in, align 8, !dbg !13206
  %491 = bitcast i8* %490 to i32*, !dbg !13206
  %add.ptr814 = getelementptr i32, i32* %491, i64 3, !dbg !13206
  %492 = load i32, i32* %add.ptr814, align 4, !dbg !13206
  %and815 = and i32 %492, 255, !dbg !13206
  %shl816 = shl i32 %and815, 24, !dbg !13206
  %493 = load i8*, i8** %in, align 8, !dbg !13206
  %494 = bitcast i8* %493 to i32*, !dbg !13206
  %add.ptr817 = getelementptr i32, i32* %494, i64 3, !dbg !13206
  %495 = load i32, i32* %add.ptr817, align 4, !dbg !13206
  %and818 = and i32 %495, 65280, !dbg !13206
  %shl819 = shl i32 %and818, 8, !dbg !13206
  %or820 = or i32 %shl816, %shl819, !dbg !13206
  %496 = load i8*, i8** %in, align 8, !dbg !13206
  %497 = bitcast i8* %496 to i32*, !dbg !13206
  %add.ptr821 = getelementptr i32, i32* %497, i64 3, !dbg !13206
  %498 = load i32, i32* %add.ptr821, align 4, !dbg !13206
  %and822 = and i32 %498, 16711680, !dbg !13206
  %shr823 = lshr i32 %and822, 8, !dbg !13206
  %or824 = or i32 %or820, %shr823, !dbg !13206
  %499 = load i8*, i8** %in, align 8, !dbg !13206
  %500 = bitcast i8* %499 to i32*, !dbg !13206
  %add.ptr825 = getelementptr i32, i32* %500, i64 3, !dbg !13206
  %501 = load i32, i32* %add.ptr825, align 4, !dbg !13206
  %and826 = and i32 %501, -16777216, !dbg !13206
  %shr827 = lshr i32 %and826, 24, !dbg !13206
  %or828 = or i32 %or824, %shr827, !dbg !13206
  br label %cond.end832, !dbg !13206

cond.false829:                                    ; preds = %cond.end803
  %502 = load i8*, i8** %in, align 8, !dbg !13206
  %503 = bitcast i8* %502 to i32*, !dbg !13206
  %add.ptr830 = getelementptr i32, i32* %503, i64 3, !dbg !13206
  %504 = load i32, i32* %add.ptr830, align 4, !dbg !13206
  %call831 = call i32 @__fswab32(i32 %504) #8, !dbg !13206
  br label %cond.end832, !dbg !13206

cond.end832:                                      ; preds = %cond.false829, %cond.true813
  %cond833 = phi i32 [ %or828, %cond.true813 ], [ %call831, %cond.false829 ], !dbg !13206
  %and834 = and i32 %cond833, -2049, !dbg !13206
  %505 = load i32, i32* %_v725, align 4, !dbg !13206
  %and835 = and i32 %505, 1, !dbg !13206
  %shl836 = shl i32 %and835, 11, !dbg !13206
  %or837 = or i32 %and834, %shl836, !dbg !13206
  %and838 = and i32 %or837, 16711680, !dbg !13206
  %shr839 = lshr i32 %and838, 8, !dbg !13206
  %or840 = or i32 %or811, %shr839, !dbg !13206
  %506 = load i8*, i8** %in, align 8, !dbg !13206
  %507 = bitcast i8* %506 to i32*, !dbg !13206
  %add.ptr841 = getelementptr i32, i32* %507, i64 3, !dbg !13206
  %508 = load i32, i32* %add.ptr841, align 4, !dbg !13206
  %509 = call i1 @llvm.is.constant.i32(i32 %508), !dbg !13206
  br i1 %509, label %cond.true842, label %cond.false858, !dbg !13206

cond.true842:                                     ; preds = %cond.end832
  %510 = load i8*, i8** %in, align 8, !dbg !13206
  %511 = bitcast i8* %510 to i32*, !dbg !13206
  %add.ptr843 = getelementptr i32, i32* %511, i64 3, !dbg !13206
  %512 = load i32, i32* %add.ptr843, align 4, !dbg !13206
  %and844 = and i32 %512, 255, !dbg !13206
  %shl845 = shl i32 %and844, 24, !dbg !13206
  %513 = load i8*, i8** %in, align 8, !dbg !13206
  %514 = bitcast i8* %513 to i32*, !dbg !13206
  %add.ptr846 = getelementptr i32, i32* %514, i64 3, !dbg !13206
  %515 = load i32, i32* %add.ptr846, align 4, !dbg !13206
  %and847 = and i32 %515, 65280, !dbg !13206
  %shl848 = shl i32 %and847, 8, !dbg !13206
  %or849 = or i32 %shl845, %shl848, !dbg !13206
  %516 = load i8*, i8** %in, align 8, !dbg !13206
  %517 = bitcast i8* %516 to i32*, !dbg !13206
  %add.ptr850 = getelementptr i32, i32* %517, i64 3, !dbg !13206
  %518 = load i32, i32* %add.ptr850, align 4, !dbg !13206
  %and851 = and i32 %518, 16711680, !dbg !13206
  %shr852 = lshr i32 %and851, 8, !dbg !13206
  %or853 = or i32 %or849, %shr852, !dbg !13206
  %519 = load i8*, i8** %in, align 8, !dbg !13206
  %520 = bitcast i8* %519 to i32*, !dbg !13206
  %add.ptr854 = getelementptr i32, i32* %520, i64 3, !dbg !13206
  %521 = load i32, i32* %add.ptr854, align 4, !dbg !13206
  %and855 = and i32 %521, -16777216, !dbg !13206
  %shr856 = lshr i32 %and855, 24, !dbg !13206
  %or857 = or i32 %or853, %shr856, !dbg !13206
  br label %cond.end861, !dbg !13206

cond.false858:                                    ; preds = %cond.end832
  %522 = load i8*, i8** %in, align 8, !dbg !13206
  %523 = bitcast i8* %522 to i32*, !dbg !13206
  %add.ptr859 = getelementptr i32, i32* %523, i64 3, !dbg !13206
  %524 = load i32, i32* %add.ptr859, align 4, !dbg !13206
  %call860 = call i32 @__fswab32(i32 %524) #8, !dbg !13206
  br label %cond.end861, !dbg !13206

cond.end861:                                      ; preds = %cond.false858, %cond.true842
  %cond862 = phi i32 [ %or857, %cond.true842 ], [ %call860, %cond.false858 ], !dbg !13206
  %and863 = and i32 %cond862, -2049, !dbg !13206
  %525 = load i32, i32* %_v725, align 4, !dbg !13206
  %and864 = and i32 %525, 1, !dbg !13206
  %shl865 = shl i32 %and864, 11, !dbg !13206
  %or866 = or i32 %and863, %shl865, !dbg !13206
  %and867 = and i32 %or866, -16777216, !dbg !13206
  %shr868 = lshr i32 %and867, 24, !dbg !13206
  %or869 = or i32 %or840, %shr868, !dbg !13206
  br label %cond.end898, !dbg !13206

cond.false870:                                    ; preds = %cond.end748
  %526 = load i8*, i8** %in, align 8, !dbg !13206
  %527 = bitcast i8* %526 to i32*, !dbg !13206
  %add.ptr871 = getelementptr i32, i32* %527, i64 3, !dbg !13206
  %528 = load i32, i32* %add.ptr871, align 4, !dbg !13206
  %529 = call i1 @llvm.is.constant.i32(i32 %528), !dbg !13206
  br i1 %529, label %cond.true872, label %cond.false888, !dbg !13206

cond.true872:                                     ; preds = %cond.false870
  %530 = load i8*, i8** %in, align 8, !dbg !13206
  %531 = bitcast i8* %530 to i32*, !dbg !13206
  %add.ptr873 = getelementptr i32, i32* %531, i64 3, !dbg !13206
  %532 = load i32, i32* %add.ptr873, align 4, !dbg !13206
  %and874 = and i32 %532, 255, !dbg !13206
  %shl875 = shl i32 %and874, 24, !dbg !13206
  %533 = load i8*, i8** %in, align 8, !dbg !13206
  %534 = bitcast i8* %533 to i32*, !dbg !13206
  %add.ptr876 = getelementptr i32, i32* %534, i64 3, !dbg !13206
  %535 = load i32, i32* %add.ptr876, align 4, !dbg !13206
  %and877 = and i32 %535, 65280, !dbg !13206
  %shl878 = shl i32 %and877, 8, !dbg !13206
  %or879 = or i32 %shl875, %shl878, !dbg !13206
  %536 = load i8*, i8** %in, align 8, !dbg !13206
  %537 = bitcast i8* %536 to i32*, !dbg !13206
  %add.ptr880 = getelementptr i32, i32* %537, i64 3, !dbg !13206
  %538 = load i32, i32* %add.ptr880, align 4, !dbg !13206
  %and881 = and i32 %538, 16711680, !dbg !13206
  %shr882 = lshr i32 %and881, 8, !dbg !13206
  %or883 = or i32 %or879, %shr882, !dbg !13206
  %539 = load i8*, i8** %in, align 8, !dbg !13206
  %540 = bitcast i8* %539 to i32*, !dbg !13206
  %add.ptr884 = getelementptr i32, i32* %540, i64 3, !dbg !13206
  %541 = load i32, i32* %add.ptr884, align 4, !dbg !13206
  %and885 = and i32 %541, -16777216, !dbg !13206
  %shr886 = lshr i32 %and885, 24, !dbg !13206
  %or887 = or i32 %or883, %shr886, !dbg !13206
  br label %cond.end891, !dbg !13206

cond.false888:                                    ; preds = %cond.false870
  %542 = load i8*, i8** %in, align 8, !dbg !13206
  %543 = bitcast i8* %542 to i32*, !dbg !13206
  %add.ptr889 = getelementptr i32, i32* %543, i64 3, !dbg !13206
  %544 = load i32, i32* %add.ptr889, align 4, !dbg !13206
  %call890 = call i32 @__fswab32(i32 %544) #8, !dbg !13206
  br label %cond.end891, !dbg !13206

cond.end891:                                      ; preds = %cond.false888, %cond.true872
  %cond892 = phi i32 [ %or887, %cond.true872 ], [ %call890, %cond.false888 ], !dbg !13206
  %and893 = and i32 %cond892, -2049, !dbg !13206
  %545 = load i32, i32* %_v725, align 4, !dbg !13206
  %and894 = and i32 %545, 1, !dbg !13206
  %shl895 = shl i32 %and894, 11, !dbg !13206
  %or896 = or i32 %and893, %shl895, !dbg !13206
  %call897 = call i32 @__fswab32(i32 %or896) #8, !dbg !13206
  br label %cond.end898, !dbg !13206

cond.end898:                                      ; preds = %cond.end891, %cond.end861
  %cond899 = phi i32 [ %or869, %cond.end861 ], [ %call897, %cond.end891 ], !dbg !13206
  %546 = load i8*, i8** %in, align 8, !dbg !13206
  %547 = bitcast i8* %546 to i32*, !dbg !13206
  %add.ptr900 = getelementptr i32, i32* %547, i64 3, !dbg !13206
  store i32 %cond899, i32* %add.ptr900, align 4, !dbg !13206
  br label %do.end901, !dbg !13206

do.end901:                                        ; preds = %cond.end898
  br label %if.end902, !dbg !13206

if.end902:                                        ; preds = %do.end901, %cond.end718
  br label %do.body903, !dbg !13209

do.body903:                                       ; preds = %if.end902
  call void @llvm.dbg.declare(metadata i32* %_v904, metadata !13210, metadata !DIExpression()), !dbg !13212
  store i32 1877, i32* %_v904, align 4, !dbg !13212
  br label %do.body905, !dbg !13212

do.body905:                                       ; preds = %do.body903
  br label %do.end906, !dbg !13213

do.end906:                                        ; preds = %do.body905
  %548 = load i8*, i8** %in, align 8, !dbg !13212
  %549 = bitcast i8* %548 to i32*, !dbg !13212
  %add.ptr907 = getelementptr i32, i32* %549, i64 0, !dbg !13212
  %550 = load i32, i32* %add.ptr907, align 4, !dbg !13212
  %551 = call i1 @llvm.is.constant.i32(i32 %550), !dbg !13212
  br i1 %551, label %cond.true908, label %cond.false924, !dbg !13212

cond.true908:                                     ; preds = %do.end906
  %552 = load i8*, i8** %in, align 8, !dbg !13212
  %553 = bitcast i8* %552 to i32*, !dbg !13212
  %add.ptr909 = getelementptr i32, i32* %553, i64 0, !dbg !13212
  %554 = load i32, i32* %add.ptr909, align 4, !dbg !13212
  %and910 = and i32 %554, 255, !dbg !13212
  %shl911 = shl i32 %and910, 24, !dbg !13212
  %555 = load i8*, i8** %in, align 8, !dbg !13212
  %556 = bitcast i8* %555 to i32*, !dbg !13212
  %add.ptr912 = getelementptr i32, i32* %556, i64 0, !dbg !13212
  %557 = load i32, i32* %add.ptr912, align 4, !dbg !13212
  %and913 = and i32 %557, 65280, !dbg !13212
  %shl914 = shl i32 %and913, 8, !dbg !13212
  %or915 = or i32 %shl911, %shl914, !dbg !13212
  %558 = load i8*, i8** %in, align 8, !dbg !13212
  %559 = bitcast i8* %558 to i32*, !dbg !13212
  %add.ptr916 = getelementptr i32, i32* %559, i64 0, !dbg !13212
  %560 = load i32, i32* %add.ptr916, align 4, !dbg !13212
  %and917 = and i32 %560, 16711680, !dbg !13212
  %shr918 = lshr i32 %and917, 8, !dbg !13212
  %or919 = or i32 %or915, %shr918, !dbg !13212
  %561 = load i8*, i8** %in, align 8, !dbg !13212
  %562 = bitcast i8* %561 to i32*, !dbg !13212
  %add.ptr920 = getelementptr i32, i32* %562, i64 0, !dbg !13212
  %563 = load i32, i32* %add.ptr920, align 4, !dbg !13212
  %and921 = and i32 %563, -16777216, !dbg !13212
  %shr922 = lshr i32 %and921, 24, !dbg !13212
  %or923 = or i32 %or919, %shr922, !dbg !13212
  br label %cond.end927, !dbg !13212

cond.false924:                                    ; preds = %do.end906
  %564 = load i8*, i8** %in, align 8, !dbg !13212
  %565 = bitcast i8* %564 to i32*, !dbg !13212
  %add.ptr925 = getelementptr i32, i32* %565, i64 0, !dbg !13212
  %566 = load i32, i32* %add.ptr925, align 4, !dbg !13212
  %call926 = call i32 @__fswab32(i32 %566) #8, !dbg !13212
  br label %cond.end927, !dbg !13212

cond.end927:                                      ; preds = %cond.false924, %cond.true908
  %cond928 = phi i32 [ %or923, %cond.true908 ], [ %call926, %cond.false924 ], !dbg !13212
  %and929 = and i32 %cond928, 65535, !dbg !13212
  %567 = load i32, i32* %_v904, align 4, !dbg !13212
  %and930 = and i32 %567, 65535, !dbg !13212
  %shl931 = shl i32 %and930, 16, !dbg !13212
  %or932 = or i32 %and929, %shl931, !dbg !13212
  %568 = call i1 @llvm.is.constant.i32(i32 %or932), !dbg !13212
  br i1 %568, label %cond.true933, label %cond.false1049, !dbg !13212

cond.true933:                                     ; preds = %cond.end927
  %569 = load i8*, i8** %in, align 8, !dbg !13212
  %570 = bitcast i8* %569 to i32*, !dbg !13212
  %add.ptr934 = getelementptr i32, i32* %570, i64 0, !dbg !13212
  %571 = load i32, i32* %add.ptr934, align 4, !dbg !13212
  %572 = call i1 @llvm.is.constant.i32(i32 %571), !dbg !13212
  br i1 %572, label %cond.true935, label %cond.false951, !dbg !13212

cond.true935:                                     ; preds = %cond.true933
  %573 = load i8*, i8** %in, align 8, !dbg !13212
  %574 = bitcast i8* %573 to i32*, !dbg !13212
  %add.ptr936 = getelementptr i32, i32* %574, i64 0, !dbg !13212
  %575 = load i32, i32* %add.ptr936, align 4, !dbg !13212
  %and937 = and i32 %575, 255, !dbg !13212
  %shl938 = shl i32 %and937, 24, !dbg !13212
  %576 = load i8*, i8** %in, align 8, !dbg !13212
  %577 = bitcast i8* %576 to i32*, !dbg !13212
  %add.ptr939 = getelementptr i32, i32* %577, i64 0, !dbg !13212
  %578 = load i32, i32* %add.ptr939, align 4, !dbg !13212
  %and940 = and i32 %578, 65280, !dbg !13212
  %shl941 = shl i32 %and940, 8, !dbg !13212
  %or942 = or i32 %shl938, %shl941, !dbg !13212
  %579 = load i8*, i8** %in, align 8, !dbg !13212
  %580 = bitcast i8* %579 to i32*, !dbg !13212
  %add.ptr943 = getelementptr i32, i32* %580, i64 0, !dbg !13212
  %581 = load i32, i32* %add.ptr943, align 4, !dbg !13212
  %and944 = and i32 %581, 16711680, !dbg !13212
  %shr945 = lshr i32 %and944, 8, !dbg !13212
  %or946 = or i32 %or942, %shr945, !dbg !13212
  %582 = load i8*, i8** %in, align 8, !dbg !13212
  %583 = bitcast i8* %582 to i32*, !dbg !13212
  %add.ptr947 = getelementptr i32, i32* %583, i64 0, !dbg !13212
  %584 = load i32, i32* %add.ptr947, align 4, !dbg !13212
  %and948 = and i32 %584, -16777216, !dbg !13212
  %shr949 = lshr i32 %and948, 24, !dbg !13212
  %or950 = or i32 %or946, %shr949, !dbg !13212
  br label %cond.end954, !dbg !13212

cond.false951:                                    ; preds = %cond.true933
  %585 = load i8*, i8** %in, align 8, !dbg !13212
  %586 = bitcast i8* %585 to i32*, !dbg !13212
  %add.ptr952 = getelementptr i32, i32* %586, i64 0, !dbg !13212
  %587 = load i32, i32* %add.ptr952, align 4, !dbg !13212
  %call953 = call i32 @__fswab32(i32 %587) #8, !dbg !13212
  br label %cond.end954, !dbg !13212

cond.end954:                                      ; preds = %cond.false951, %cond.true935
  %cond955 = phi i32 [ %or950, %cond.true935 ], [ %call953, %cond.false951 ], !dbg !13212
  %and956 = and i32 %cond955, 65535, !dbg !13212
  %588 = load i32, i32* %_v904, align 4, !dbg !13212
  %and957 = and i32 %588, 65535, !dbg !13212
  %shl958 = shl i32 %and957, 16, !dbg !13212
  %or959 = or i32 %and956, %shl958, !dbg !13212
  %and960 = and i32 %or959, 255, !dbg !13212
  %shl961 = shl i32 %and960, 24, !dbg !13212
  %589 = load i8*, i8** %in, align 8, !dbg !13212
  %590 = bitcast i8* %589 to i32*, !dbg !13212
  %add.ptr962 = getelementptr i32, i32* %590, i64 0, !dbg !13212
  %591 = load i32, i32* %add.ptr962, align 4, !dbg !13212
  %592 = call i1 @llvm.is.constant.i32(i32 %591), !dbg !13212
  br i1 %592, label %cond.true963, label %cond.false979, !dbg !13212

cond.true963:                                     ; preds = %cond.end954
  %593 = load i8*, i8** %in, align 8, !dbg !13212
  %594 = bitcast i8* %593 to i32*, !dbg !13212
  %add.ptr964 = getelementptr i32, i32* %594, i64 0, !dbg !13212
  %595 = load i32, i32* %add.ptr964, align 4, !dbg !13212
  %and965 = and i32 %595, 255, !dbg !13212
  %shl966 = shl i32 %and965, 24, !dbg !13212
  %596 = load i8*, i8** %in, align 8, !dbg !13212
  %597 = bitcast i8* %596 to i32*, !dbg !13212
  %add.ptr967 = getelementptr i32, i32* %597, i64 0, !dbg !13212
  %598 = load i32, i32* %add.ptr967, align 4, !dbg !13212
  %and968 = and i32 %598, 65280, !dbg !13212
  %shl969 = shl i32 %and968, 8, !dbg !13212
  %or970 = or i32 %shl966, %shl969, !dbg !13212
  %599 = load i8*, i8** %in, align 8, !dbg !13212
  %600 = bitcast i8* %599 to i32*, !dbg !13212
  %add.ptr971 = getelementptr i32, i32* %600, i64 0, !dbg !13212
  %601 = load i32, i32* %add.ptr971, align 4, !dbg !13212
  %and972 = and i32 %601, 16711680, !dbg !13212
  %shr973 = lshr i32 %and972, 8, !dbg !13212
  %or974 = or i32 %or970, %shr973, !dbg !13212
  %602 = load i8*, i8** %in, align 8, !dbg !13212
  %603 = bitcast i8* %602 to i32*, !dbg !13212
  %add.ptr975 = getelementptr i32, i32* %603, i64 0, !dbg !13212
  %604 = load i32, i32* %add.ptr975, align 4, !dbg !13212
  %and976 = and i32 %604, -16777216, !dbg !13212
  %shr977 = lshr i32 %and976, 24, !dbg !13212
  %or978 = or i32 %or974, %shr977, !dbg !13212
  br label %cond.end982, !dbg !13212

cond.false979:                                    ; preds = %cond.end954
  %605 = load i8*, i8** %in, align 8, !dbg !13212
  %606 = bitcast i8* %605 to i32*, !dbg !13212
  %add.ptr980 = getelementptr i32, i32* %606, i64 0, !dbg !13212
  %607 = load i32, i32* %add.ptr980, align 4, !dbg !13212
  %call981 = call i32 @__fswab32(i32 %607) #8, !dbg !13212
  br label %cond.end982, !dbg !13212

cond.end982:                                      ; preds = %cond.false979, %cond.true963
  %cond983 = phi i32 [ %or978, %cond.true963 ], [ %call981, %cond.false979 ], !dbg !13212
  %and984 = and i32 %cond983, 65535, !dbg !13212
  %608 = load i32, i32* %_v904, align 4, !dbg !13212
  %and985 = and i32 %608, 65535, !dbg !13212
  %shl986 = shl i32 %and985, 16, !dbg !13212
  %or987 = or i32 %and984, %shl986, !dbg !13212
  %and988 = and i32 %or987, 65280, !dbg !13212
  %shl989 = shl i32 %and988, 8, !dbg !13212
  %or990 = or i32 %shl961, %shl989, !dbg !13212
  %609 = load i8*, i8** %in, align 8, !dbg !13212
  %610 = bitcast i8* %609 to i32*, !dbg !13212
  %add.ptr991 = getelementptr i32, i32* %610, i64 0, !dbg !13212
  %611 = load i32, i32* %add.ptr991, align 4, !dbg !13212
  %612 = call i1 @llvm.is.constant.i32(i32 %611), !dbg !13212
  br i1 %612, label %cond.true992, label %cond.false1008, !dbg !13212

cond.true992:                                     ; preds = %cond.end982
  %613 = load i8*, i8** %in, align 8, !dbg !13212
  %614 = bitcast i8* %613 to i32*, !dbg !13212
  %add.ptr993 = getelementptr i32, i32* %614, i64 0, !dbg !13212
  %615 = load i32, i32* %add.ptr993, align 4, !dbg !13212
  %and994 = and i32 %615, 255, !dbg !13212
  %shl995 = shl i32 %and994, 24, !dbg !13212
  %616 = load i8*, i8** %in, align 8, !dbg !13212
  %617 = bitcast i8* %616 to i32*, !dbg !13212
  %add.ptr996 = getelementptr i32, i32* %617, i64 0, !dbg !13212
  %618 = load i32, i32* %add.ptr996, align 4, !dbg !13212
  %and997 = and i32 %618, 65280, !dbg !13212
  %shl998 = shl i32 %and997, 8, !dbg !13212
  %or999 = or i32 %shl995, %shl998, !dbg !13212
  %619 = load i8*, i8** %in, align 8, !dbg !13212
  %620 = bitcast i8* %619 to i32*, !dbg !13212
  %add.ptr1000 = getelementptr i32, i32* %620, i64 0, !dbg !13212
  %621 = load i32, i32* %add.ptr1000, align 4, !dbg !13212
  %and1001 = and i32 %621, 16711680, !dbg !13212
  %shr1002 = lshr i32 %and1001, 8, !dbg !13212
  %or1003 = or i32 %or999, %shr1002, !dbg !13212
  %622 = load i8*, i8** %in, align 8, !dbg !13212
  %623 = bitcast i8* %622 to i32*, !dbg !13212
  %add.ptr1004 = getelementptr i32, i32* %623, i64 0, !dbg !13212
  %624 = load i32, i32* %add.ptr1004, align 4, !dbg !13212
  %and1005 = and i32 %624, -16777216, !dbg !13212
  %shr1006 = lshr i32 %and1005, 24, !dbg !13212
  %or1007 = or i32 %or1003, %shr1006, !dbg !13212
  br label %cond.end1011, !dbg !13212

cond.false1008:                                   ; preds = %cond.end982
  %625 = load i8*, i8** %in, align 8, !dbg !13212
  %626 = bitcast i8* %625 to i32*, !dbg !13212
  %add.ptr1009 = getelementptr i32, i32* %626, i64 0, !dbg !13212
  %627 = load i32, i32* %add.ptr1009, align 4, !dbg !13212
  %call1010 = call i32 @__fswab32(i32 %627) #8, !dbg !13212
  br label %cond.end1011, !dbg !13212

cond.end1011:                                     ; preds = %cond.false1008, %cond.true992
  %cond1012 = phi i32 [ %or1007, %cond.true992 ], [ %call1010, %cond.false1008 ], !dbg !13212
  %and1013 = and i32 %cond1012, 65535, !dbg !13212
  %628 = load i32, i32* %_v904, align 4, !dbg !13212
  %and1014 = and i32 %628, 65535, !dbg !13212
  %shl1015 = shl i32 %and1014, 16, !dbg !13212
  %or1016 = or i32 %and1013, %shl1015, !dbg !13212
  %and1017 = and i32 %or1016, 16711680, !dbg !13212
  %shr1018 = lshr i32 %and1017, 8, !dbg !13212
  %or1019 = or i32 %or990, %shr1018, !dbg !13212
  %629 = load i8*, i8** %in, align 8, !dbg !13212
  %630 = bitcast i8* %629 to i32*, !dbg !13212
  %add.ptr1020 = getelementptr i32, i32* %630, i64 0, !dbg !13212
  %631 = load i32, i32* %add.ptr1020, align 4, !dbg !13212
  %632 = call i1 @llvm.is.constant.i32(i32 %631), !dbg !13212
  br i1 %632, label %cond.true1021, label %cond.false1037, !dbg !13212

cond.true1021:                                    ; preds = %cond.end1011
  %633 = load i8*, i8** %in, align 8, !dbg !13212
  %634 = bitcast i8* %633 to i32*, !dbg !13212
  %add.ptr1022 = getelementptr i32, i32* %634, i64 0, !dbg !13212
  %635 = load i32, i32* %add.ptr1022, align 4, !dbg !13212
  %and1023 = and i32 %635, 255, !dbg !13212
  %shl1024 = shl i32 %and1023, 24, !dbg !13212
  %636 = load i8*, i8** %in, align 8, !dbg !13212
  %637 = bitcast i8* %636 to i32*, !dbg !13212
  %add.ptr1025 = getelementptr i32, i32* %637, i64 0, !dbg !13212
  %638 = load i32, i32* %add.ptr1025, align 4, !dbg !13212
  %and1026 = and i32 %638, 65280, !dbg !13212
  %shl1027 = shl i32 %and1026, 8, !dbg !13212
  %or1028 = or i32 %shl1024, %shl1027, !dbg !13212
  %639 = load i8*, i8** %in, align 8, !dbg !13212
  %640 = bitcast i8* %639 to i32*, !dbg !13212
  %add.ptr1029 = getelementptr i32, i32* %640, i64 0, !dbg !13212
  %641 = load i32, i32* %add.ptr1029, align 4, !dbg !13212
  %and1030 = and i32 %641, 16711680, !dbg !13212
  %shr1031 = lshr i32 %and1030, 8, !dbg !13212
  %or1032 = or i32 %or1028, %shr1031, !dbg !13212
  %642 = load i8*, i8** %in, align 8, !dbg !13212
  %643 = bitcast i8* %642 to i32*, !dbg !13212
  %add.ptr1033 = getelementptr i32, i32* %643, i64 0, !dbg !13212
  %644 = load i32, i32* %add.ptr1033, align 4, !dbg !13212
  %and1034 = and i32 %644, -16777216, !dbg !13212
  %shr1035 = lshr i32 %and1034, 24, !dbg !13212
  %or1036 = or i32 %or1032, %shr1035, !dbg !13212
  br label %cond.end1040, !dbg !13212

cond.false1037:                                   ; preds = %cond.end1011
  %645 = load i8*, i8** %in, align 8, !dbg !13212
  %646 = bitcast i8* %645 to i32*, !dbg !13212
  %add.ptr1038 = getelementptr i32, i32* %646, i64 0, !dbg !13212
  %647 = load i32, i32* %add.ptr1038, align 4, !dbg !13212
  %call1039 = call i32 @__fswab32(i32 %647) #8, !dbg !13212
  br label %cond.end1040, !dbg !13212

cond.end1040:                                     ; preds = %cond.false1037, %cond.true1021
  %cond1041 = phi i32 [ %or1036, %cond.true1021 ], [ %call1039, %cond.false1037 ], !dbg !13212
  %and1042 = and i32 %cond1041, 65535, !dbg !13212
  %648 = load i32, i32* %_v904, align 4, !dbg !13212
  %and1043 = and i32 %648, 65535, !dbg !13212
  %shl1044 = shl i32 %and1043, 16, !dbg !13212
  %or1045 = or i32 %and1042, %shl1044, !dbg !13212
  %and1046 = and i32 %or1045, -16777216, !dbg !13212
  %shr1047 = lshr i32 %and1046, 24, !dbg !13212
  %or1048 = or i32 %or1019, %shr1047, !dbg !13212
  br label %cond.end1077, !dbg !13212

cond.false1049:                                   ; preds = %cond.end927
  %649 = load i8*, i8** %in, align 8, !dbg !13212
  %650 = bitcast i8* %649 to i32*, !dbg !13212
  %add.ptr1050 = getelementptr i32, i32* %650, i64 0, !dbg !13212
  %651 = load i32, i32* %add.ptr1050, align 4, !dbg !13212
  %652 = call i1 @llvm.is.constant.i32(i32 %651), !dbg !13212
  br i1 %652, label %cond.true1051, label %cond.false1067, !dbg !13212

cond.true1051:                                    ; preds = %cond.false1049
  %653 = load i8*, i8** %in, align 8, !dbg !13212
  %654 = bitcast i8* %653 to i32*, !dbg !13212
  %add.ptr1052 = getelementptr i32, i32* %654, i64 0, !dbg !13212
  %655 = load i32, i32* %add.ptr1052, align 4, !dbg !13212
  %and1053 = and i32 %655, 255, !dbg !13212
  %shl1054 = shl i32 %and1053, 24, !dbg !13212
  %656 = load i8*, i8** %in, align 8, !dbg !13212
  %657 = bitcast i8* %656 to i32*, !dbg !13212
  %add.ptr1055 = getelementptr i32, i32* %657, i64 0, !dbg !13212
  %658 = load i32, i32* %add.ptr1055, align 4, !dbg !13212
  %and1056 = and i32 %658, 65280, !dbg !13212
  %shl1057 = shl i32 %and1056, 8, !dbg !13212
  %or1058 = or i32 %shl1054, %shl1057, !dbg !13212
  %659 = load i8*, i8** %in, align 8, !dbg !13212
  %660 = bitcast i8* %659 to i32*, !dbg !13212
  %add.ptr1059 = getelementptr i32, i32* %660, i64 0, !dbg !13212
  %661 = load i32, i32* %add.ptr1059, align 4, !dbg !13212
  %and1060 = and i32 %661, 16711680, !dbg !13212
  %shr1061 = lshr i32 %and1060, 8, !dbg !13212
  %or1062 = or i32 %or1058, %shr1061, !dbg !13212
  %662 = load i8*, i8** %in, align 8, !dbg !13212
  %663 = bitcast i8* %662 to i32*, !dbg !13212
  %add.ptr1063 = getelementptr i32, i32* %663, i64 0, !dbg !13212
  %664 = load i32, i32* %add.ptr1063, align 4, !dbg !13212
  %and1064 = and i32 %664, -16777216, !dbg !13212
  %shr1065 = lshr i32 %and1064, 24, !dbg !13212
  %or1066 = or i32 %or1062, %shr1065, !dbg !13212
  br label %cond.end1070, !dbg !13212

cond.false1067:                                   ; preds = %cond.false1049
  %665 = load i8*, i8** %in, align 8, !dbg !13212
  %666 = bitcast i8* %665 to i32*, !dbg !13212
  %add.ptr1068 = getelementptr i32, i32* %666, i64 0, !dbg !13212
  %667 = load i32, i32* %add.ptr1068, align 4, !dbg !13212
  %call1069 = call i32 @__fswab32(i32 %667) #8, !dbg !13212
  br label %cond.end1070, !dbg !13212

cond.end1070:                                     ; preds = %cond.false1067, %cond.true1051
  %cond1071 = phi i32 [ %or1066, %cond.true1051 ], [ %call1069, %cond.false1067 ], !dbg !13212
  %and1072 = and i32 %cond1071, 65535, !dbg !13212
  %668 = load i32, i32* %_v904, align 4, !dbg !13212
  %and1073 = and i32 %668, 65535, !dbg !13212
  %shl1074 = shl i32 %and1073, 16, !dbg !13212
  %or1075 = or i32 %and1072, %shl1074, !dbg !13212
  %call1076 = call i32 @__fswab32(i32 %or1075) #8, !dbg !13212
  br label %cond.end1077, !dbg !13212

cond.end1077:                                     ; preds = %cond.end1070, %cond.end1040
  %cond1078 = phi i32 [ %or1048, %cond.end1040 ], [ %call1076, %cond.end1070 ], !dbg !13212
  %669 = load i8*, i8** %in, align 8, !dbg !13212
  %670 = bitcast i8* %669 to i32*, !dbg !13212
  %add.ptr1079 = getelementptr i32, i32* %670, i64 0, !dbg !13212
  store i32 %cond1078, i32* %add.ptr1079, align 4, !dbg !13212
  br label %do.end1080, !dbg !13212

do.end1080:                                       ; preds = %cond.end1077
  call void @llvm.dbg.declare(metadata [4 x i32]* %_out, metadata !13215, metadata !DIExpression()), !dbg !13217
  %671 = bitcast [4 x i32]* %_out to i8*, !dbg !13217
  call void @llvm.memset.p0i8.i64(i8* align 16 %671, i8 0, i64 16, i1 false), !dbg !13217
  %672 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %mdev.addr, align 8, !dbg !13218
  %673 = load i8*, i8** %in, align 8, !dbg !13218
  %arraydecay1082 = getelementptr inbounds [4 x i32], [4 x i32]* %_out, i64 0, i64 0, !dbg !13218
  %674 = bitcast i32* %arraydecay1082 to i8*, !dbg !13218
  %call1083 = call i32 @mlx5_cmd_exec(%struct.mlx5_core_dev* %672, i8* %673, i32 512, i8* %674, i32 16) #9, !dbg !13218
  store i32 %call1083, i32* %tmp1081, align 4, !dbg !13217
  %675 = load i32, i32* %tmp1081, align 4, !dbg !13218
  store i32 %675, i32* %tmp, align 4, !dbg !13217
  %676 = load i32, i32* %tmp, align 4, !dbg !13217
  store i32 %676, i32* %err, align 4, !dbg !13220
  %677 = load i32, i32* %err, align 4, !dbg !13221
  %tobool1084 = icmp ne i32 %677, 0, !dbg !13221
  br i1 %tobool1084, label %if.end1086, label %if.then1085, !dbg !13223

if.then1085:                                      ; preds = %do.end1080
  br label %if.end1086, !dbg !13224

if.end1086:                                       ; preds = %if.then1085, %do.end1080
  %678 = load i8*, i8** %in, align 8, !dbg !13225
  call void @kvfree(i8* %678) #9, !dbg !13226
  %679 = load i32, i32* %err, align 4, !dbg !13227
  store i32 %679, i32* %retval, align 4, !dbg !13228
  br label %return, !dbg !13228

return:                                           ; preds = %if.end1086, %if.then86, %if.then
  %680 = load i32, i32* %retval, align 4, !dbg !13229
  ret i32 %680, !dbg !13229
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @mlx5_nic_vport_query_local_lb(%struct.mlx5_core_dev* %mdev, i8* %status) #0 !dbg !13230 {
entry:
  %retval = alloca i32, align 4
  %mdev.addr = alloca %struct.mlx5_core_dev*, align 8
  %status.addr = alloca i8*, align 8
  %outlen = alloca i32, align 4
  %out = alloca i32*, align 8
  %value = alloca i32, align 4
  %err = alloca i32, align 4
  store %struct.mlx5_core_dev* %mdev, %struct.mlx5_core_dev** %mdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_core_dev** %mdev.addr, metadata !13233, metadata !DIExpression()), !dbg !13234
  store i8* %status, i8** %status.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %status.addr, metadata !13235, metadata !DIExpression()), !dbg !13236
  call void @llvm.dbg.declare(metadata i32* %outlen, metadata !13237, metadata !DIExpression()), !dbg !13238
  store i32 272, i32* %outlen, align 4, !dbg !13238
  call void @llvm.dbg.declare(metadata i32** %out, metadata !13239, metadata !DIExpression()), !dbg !13240
  call void @llvm.dbg.declare(metadata i32* %value, metadata !13241, metadata !DIExpression()), !dbg !13242
  call void @llvm.dbg.declare(metadata i32* %err, metadata !13243, metadata !DIExpression()), !dbg !13244
  %0 = load i32, i32* %outlen, align 4, !dbg !13245
  %conv = sext i32 %0 to i64, !dbg !13245
  %call = call i8* @kzalloc(i64 %conv, i32 3264) #9, !dbg !13246
  %1 = bitcast i8* %call to i32*, !dbg !13246
  store i32* %1, i32** %out, align 8, !dbg !13247
  %2 = load i32*, i32** %out, align 8, !dbg !13248
  %tobool = icmp ne i32* %2, null, !dbg !13248
  br i1 %tobool, label %if.end, label %if.then, !dbg !13250

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !13251
  br label %return, !dbg !13251

if.end:                                           ; preds = %entry
  %3 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %mdev.addr, align 8, !dbg !13252
  %4 = load i32*, i32** %out, align 8, !dbg !13253
  %call1 = call i32 @mlx5_query_nic_vport_context(%struct.mlx5_core_dev* %3, i16 zeroext 0, i32* %4) #9, !dbg !13254
  store i32 %call1, i32* %err, align 4, !dbg !13255
  %5 = load i32, i32* %err, align 4, !dbg !13256
  %tobool2 = icmp ne i32 %5, 0, !dbg !13256
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !13258

if.then3:                                         ; preds = %if.end
  br label %out48, !dbg !13259

if.end4:                                          ; preds = %if.end
  %6 = load i32*, i32** %out, align 8, !dbg !13260
  %add.ptr = getelementptr i32, i32* %6, i64 4, !dbg !13260
  %7 = load i32, i32* %add.ptr, align 4, !dbg !13260
  %8 = call i1 @llvm.is.constant.i32(i32 %7), !dbg !13260
  br i1 %8, label %cond.true, label %cond.false, !dbg !13260

cond.true:                                        ; preds = %if.end4
  %9 = load i32*, i32** %out, align 8, !dbg !13260
  %add.ptr5 = getelementptr i32, i32* %9, i64 4, !dbg !13260
  %10 = load i32, i32* %add.ptr5, align 4, !dbg !13260
  %and = and i32 %10, 255, !dbg !13260
  %shl = shl i32 %and, 24, !dbg !13260
  %11 = load i32*, i32** %out, align 8, !dbg !13260
  %add.ptr6 = getelementptr i32, i32* %11, i64 4, !dbg !13260
  %12 = load i32, i32* %add.ptr6, align 4, !dbg !13260
  %and7 = and i32 %12, 65280, !dbg !13260
  %shl8 = shl i32 %and7, 8, !dbg !13260
  %or = or i32 %shl, %shl8, !dbg !13260
  %13 = load i32*, i32** %out, align 8, !dbg !13260
  %add.ptr9 = getelementptr i32, i32* %13, i64 4, !dbg !13260
  %14 = load i32, i32* %add.ptr9, align 4, !dbg !13260
  %and10 = and i32 %14, 16711680, !dbg !13260
  %shr = lshr i32 %and10, 8, !dbg !13260
  %or11 = or i32 %or, %shr, !dbg !13260
  %15 = load i32*, i32** %out, align 8, !dbg !13260
  %add.ptr12 = getelementptr i32, i32* %15, i64 4, !dbg !13260
  %16 = load i32, i32* %add.ptr12, align 4, !dbg !13260
  %and13 = and i32 %16, -16777216, !dbg !13260
  %shr14 = lshr i32 %and13, 24, !dbg !13260
  %or15 = or i32 %or11, %shr14, !dbg !13260
  br label %cond.end, !dbg !13260

cond.false:                                       ; preds = %if.end4
  %17 = load i32*, i32** %out, align 8, !dbg !13260
  %add.ptr16 = getelementptr i32, i32* %17, i64 4, !dbg !13260
  %18 = load i32, i32* %add.ptr16, align 4, !dbg !13260
  %call17 = call i32 @__fswab32(i32 %18) #8, !dbg !13260
  br label %cond.end, !dbg !13260

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %or15, %cond.true ], [ %call17, %cond.false ], !dbg !13260
  %shr18 = lshr i32 %cond, 2, !dbg !13260
  %and19 = and i32 %shr18, 1, !dbg !13260
  %shl20 = shl i32 %and19, 1, !dbg !13261
  store i32 %shl20, i32* %value, align 4, !dbg !13262
  %19 = load i32*, i32** %out, align 8, !dbg !13263
  %add.ptr21 = getelementptr i32, i32* %19, i64 4, !dbg !13263
  %20 = load i32, i32* %add.ptr21, align 4, !dbg !13263
  %21 = call i1 @llvm.is.constant.i32(i32 %20), !dbg !13263
  br i1 %21, label %cond.true22, label %cond.false38, !dbg !13263

cond.true22:                                      ; preds = %cond.end
  %22 = load i32*, i32** %out, align 8, !dbg !13263
  %add.ptr23 = getelementptr i32, i32* %22, i64 4, !dbg !13263
  %23 = load i32, i32* %add.ptr23, align 4, !dbg !13263
  %and24 = and i32 %23, 255, !dbg !13263
  %shl25 = shl i32 %and24, 24, !dbg !13263
  %24 = load i32*, i32** %out, align 8, !dbg !13263
  %add.ptr26 = getelementptr i32, i32* %24, i64 4, !dbg !13263
  %25 = load i32, i32* %add.ptr26, align 4, !dbg !13263
  %and27 = and i32 %25, 65280, !dbg !13263
  %shl28 = shl i32 %and27, 8, !dbg !13263
  %or29 = or i32 %shl25, %shl28, !dbg !13263
  %26 = load i32*, i32** %out, align 8, !dbg !13263
  %add.ptr30 = getelementptr i32, i32* %26, i64 4, !dbg !13263
  %27 = load i32, i32* %add.ptr30, align 4, !dbg !13263
  %and31 = and i32 %27, 16711680, !dbg !13263
  %shr32 = lshr i32 %and31, 8, !dbg !13263
  %or33 = or i32 %or29, %shr32, !dbg !13263
  %28 = load i32*, i32** %out, align 8, !dbg !13263
  %add.ptr34 = getelementptr i32, i32* %28, i64 4, !dbg !13263
  %29 = load i32, i32* %add.ptr34, align 4, !dbg !13263
  %and35 = and i32 %29, -16777216, !dbg !13263
  %shr36 = lshr i32 %and35, 24, !dbg !13263
  %or37 = or i32 %or33, %shr36, !dbg !13263
  br label %cond.end41, !dbg !13263

cond.false38:                                     ; preds = %cond.end
  %30 = load i32*, i32** %out, align 8, !dbg !13263
  %add.ptr39 = getelementptr i32, i32* %30, i64 4, !dbg !13263
  %31 = load i32, i32* %add.ptr39, align 4, !dbg !13263
  %call40 = call i32 @__fswab32(i32 %31) #8, !dbg !13263
  br label %cond.end41, !dbg !13263

cond.end41:                                       ; preds = %cond.false38, %cond.true22
  %cond42 = phi i32 [ %or37, %cond.true22 ], [ %call40, %cond.false38 ], !dbg !13263
  %shr43 = lshr i32 %cond42, 1, !dbg !13263
  %and44 = and i32 %shr43, 1, !dbg !13263
  %shl45 = shl i32 %and44, 0, !dbg !13264
  %32 = load i32, i32* %value, align 4, !dbg !13265
  %or46 = or i32 %32, %shl45, !dbg !13265
  store i32 %or46, i32* %value, align 4, !dbg !13265
  %33 = load i32, i32* %value, align 4, !dbg !13266
  %tobool47 = icmp ne i32 %33, 0, !dbg !13267
  %lnot = xor i1 %tobool47, true, !dbg !13267
  %34 = load i8*, i8** %status.addr, align 8, !dbg !13268
  %frombool = zext i1 %lnot to i8, !dbg !13269
  store i8 %frombool, i8* %34, align 1, !dbg !13269
  br label %out48, !dbg !13270

out48:                                            ; preds = %cond.end41, %if.then3
  call void @llvm.dbg.label(metadata !13271), !dbg !13272
  %35 = load i32*, i32** %out, align 8, !dbg !13273
  %36 = bitcast i32* %35 to i8*, !dbg !13273
  call void @kfree(i8* %36) #9, !dbg !13274
  %37 = load i32, i32* %err, align 4, !dbg !13275
  store i32 %37, i32* %retval, align 4, !dbg !13276
  br label %return, !dbg !13276

return:                                           ; preds = %out48, %if.then
  %38 = load i32, i32* %retval, align 4, !dbg !13277
  ret i32 %38, !dbg !13277
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @mlx5_nic_vport_enable_roce(%struct.mlx5_core_dev* %mdev) #0 !dbg !13278 {
entry:
  %mdev.addr = alloca %struct.mlx5_core_dev*, align 8
  %err = alloca i32, align 4
  store %struct.mlx5_core_dev* %mdev, %struct.mlx5_core_dev** %mdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_core_dev** %mdev.addr, metadata !13281, metadata !DIExpression()), !dbg !13282
  call void @llvm.dbg.declare(metadata i32* %err, metadata !13283, metadata !DIExpression()), !dbg !13284
  store i32 0, i32* %err, align 4, !dbg !13284
  call void @mutex_lock(%struct.mutex* @mlx5_roce_en_lock) #9, !dbg !13285
  %0 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %mdev.addr, align 8, !dbg !13286
  %roce = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %0, i32 0, i32 24, !dbg !13288
  %roce_en = getelementptr inbounds %struct.anon.139, %struct.anon.139* %roce, i32 0, i32 1, !dbg !13289
  %1 = load i32, i32* %roce_en, align 8, !dbg !13289
  %tobool = icmp ne i32 %1, 0, !dbg !13286
  br i1 %tobool, label %if.end, label %if.then, !dbg !13290

if.then:                                          ; preds = %entry
  %2 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %mdev.addr, align 8, !dbg !13291
  %call = call i32 @mlx5_nic_vport_update_roce_state(%struct.mlx5_core_dev* %2, i32 1) #9, !dbg !13292
  store i32 %call, i32* %err, align 4, !dbg !13293
  br label %if.end, !dbg !13294

if.end:                                           ; preds = %if.then, %entry
  %3 = load i32, i32* %err, align 4, !dbg !13295
  %tobool1 = icmp ne i32 %3, 0, !dbg !13295
  br i1 %tobool1, label %if.end5, label %if.then2, !dbg !13297

if.then2:                                         ; preds = %if.end
  %4 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %mdev.addr, align 8, !dbg !13298
  %roce3 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %4, i32 0, i32 24, !dbg !13299
  %roce_en4 = getelementptr inbounds %struct.anon.139, %struct.anon.139* %roce3, i32 0, i32 1, !dbg !13300
  %5 = load i32, i32* %roce_en4, align 8, !dbg !13301
  %inc = add i32 %5, 1, !dbg !13301
  store i32 %inc, i32* %roce_en4, align 8, !dbg !13301
  br label %if.end5, !dbg !13298

if.end5:                                          ; preds = %if.then2, %if.end
  call void @mutex_unlock(%struct.mutex* @mlx5_roce_en_lock) #9, !dbg !13302
  %6 = load i32, i32* %err, align 4, !dbg !13303
  ret i32 %6, !dbg !13304
}

; Function Attrs: noredzone
declare dso_local void @mutex_lock(%struct.mutex*) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mlx5_nic_vport_update_roce_state(%struct.mlx5_core_dev* %mdev, i32 %state) #0 !dbg !13305 {
entry:
  %retval = alloca i32, align 4
  %mdev.addr = alloca %struct.mlx5_core_dev*, align 8
  %state.addr = alloca i32, align 4
  %in = alloca i8*, align 8
  %inlen = alloca i32, align 4
  %err = alloca i32, align 4
  %_v = alloca i32, align 4
  %_v168 = alloca i32, align 4
  %_v346 = alloca i32, align 4
  %_out = alloca [4 x i32], align 16
  %tmp = alloca i32, align 4
  %tmp523 = alloca i32, align 4
  store %struct.mlx5_core_dev* %mdev, %struct.mlx5_core_dev** %mdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_core_dev** %mdev.addr, metadata !13308, metadata !DIExpression()), !dbg !13309
  store i32 %state, i32* %state.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %state.addr, metadata !13310, metadata !DIExpression()), !dbg !13311
  call void @llvm.dbg.declare(metadata i8** %in, metadata !13312, metadata !DIExpression()), !dbg !13313
  call void @llvm.dbg.declare(metadata i32* %inlen, metadata !13314, metadata !DIExpression()), !dbg !13315
  store i32 512, i32* %inlen, align 4, !dbg !13315
  call void @llvm.dbg.declare(metadata i32* %err, metadata !13316, metadata !DIExpression()), !dbg !13317
  %0 = load i32, i32* %inlen, align 4, !dbg !13318
  %conv = sext i32 %0 to i64, !dbg !13318
  %call = call i8* @kvzalloc(i64 %conv, i32 3264) #9, !dbg !13319
  store i8* %call, i8** %in, align 8, !dbg !13320
  %1 = load i8*, i8** %in, align 8, !dbg !13321
  %tobool = icmp ne i8* %1, null, !dbg !13321
  br i1 %tobool, label %if.end, label %if.then, !dbg !13323

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !13324
  br label %return, !dbg !13324

if.end:                                           ; preds = %entry
  br label %do.body, !dbg !13325

do.body:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %_v, metadata !13326, metadata !DIExpression()), !dbg !13328
  store i32 1, i32* %_v, align 4, !dbg !13328
  br label %do.body1, !dbg !13328

do.body1:                                         ; preds = %do.body
  br label %do.end, !dbg !13329

do.end:                                           ; preds = %do.body1
  %2 = load i8*, i8** %in, align 8, !dbg !13328
  %3 = bitcast i8* %2 to i32*, !dbg !13328
  %add.ptr = getelementptr i32, i32* %3, i64 3, !dbg !13328
  %4 = load i32, i32* %add.ptr, align 4, !dbg !13328
  %5 = call i1 @llvm.is.constant.i32(i32 %4), !dbg !13328
  br i1 %5, label %cond.true, label %cond.false, !dbg !13328

cond.true:                                        ; preds = %do.end
  %6 = load i8*, i8** %in, align 8, !dbg !13328
  %7 = bitcast i8* %6 to i32*, !dbg !13328
  %add.ptr2 = getelementptr i32, i32* %7, i64 3, !dbg !13328
  %8 = load i32, i32* %add.ptr2, align 4, !dbg !13328
  %and = and i32 %8, 255, !dbg !13328
  %shl = shl i32 %and, 24, !dbg !13328
  %9 = load i8*, i8** %in, align 8, !dbg !13328
  %10 = bitcast i8* %9 to i32*, !dbg !13328
  %add.ptr3 = getelementptr i32, i32* %10, i64 3, !dbg !13328
  %11 = load i32, i32* %add.ptr3, align 4, !dbg !13328
  %and4 = and i32 %11, 65280, !dbg !13328
  %shl5 = shl i32 %and4, 8, !dbg !13328
  %or = or i32 %shl, %shl5, !dbg !13328
  %12 = load i8*, i8** %in, align 8, !dbg !13328
  %13 = bitcast i8* %12 to i32*, !dbg !13328
  %add.ptr6 = getelementptr i32, i32* %13, i64 3, !dbg !13328
  %14 = load i32, i32* %add.ptr6, align 4, !dbg !13328
  %and7 = and i32 %14, 16711680, !dbg !13328
  %shr = lshr i32 %and7, 8, !dbg !13328
  %or8 = or i32 %or, %shr, !dbg !13328
  %15 = load i8*, i8** %in, align 8, !dbg !13328
  %16 = bitcast i8* %15 to i32*, !dbg !13328
  %add.ptr9 = getelementptr i32, i32* %16, i64 3, !dbg !13328
  %17 = load i32, i32* %add.ptr9, align 4, !dbg !13328
  %and10 = and i32 %17, -16777216, !dbg !13328
  %shr11 = lshr i32 %and10, 24, !dbg !13328
  %or12 = or i32 %or8, %shr11, !dbg !13328
  br label %cond.end, !dbg !13328

cond.false:                                       ; preds = %do.end
  %18 = load i8*, i8** %in, align 8, !dbg !13328
  %19 = bitcast i8* %18 to i32*, !dbg !13328
  %add.ptr13 = getelementptr i32, i32* %19, i64 3, !dbg !13328
  %20 = load i32, i32* %add.ptr13, align 4, !dbg !13328
  %call14 = call i32 @__fswab32(i32 %20) #8, !dbg !13328
  br label %cond.end, !dbg !13328

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %or12, %cond.true ], [ %call14, %cond.false ], !dbg !13328
  %and15 = and i32 %cond, -3, !dbg !13328
  %21 = load i32, i32* %_v, align 4, !dbg !13328
  %and16 = and i32 %21, 1, !dbg !13328
  %shl17 = shl i32 %and16, 1, !dbg !13328
  %or18 = or i32 %and15, %shl17, !dbg !13328
  %22 = call i1 @llvm.is.constant.i32(i32 %or18), !dbg !13328
  br i1 %22, label %cond.true19, label %cond.false135, !dbg !13328

cond.true19:                                      ; preds = %cond.end
  %23 = load i8*, i8** %in, align 8, !dbg !13328
  %24 = bitcast i8* %23 to i32*, !dbg !13328
  %add.ptr20 = getelementptr i32, i32* %24, i64 3, !dbg !13328
  %25 = load i32, i32* %add.ptr20, align 4, !dbg !13328
  %26 = call i1 @llvm.is.constant.i32(i32 %25), !dbg !13328
  br i1 %26, label %cond.true21, label %cond.false37, !dbg !13328

cond.true21:                                      ; preds = %cond.true19
  %27 = load i8*, i8** %in, align 8, !dbg !13328
  %28 = bitcast i8* %27 to i32*, !dbg !13328
  %add.ptr22 = getelementptr i32, i32* %28, i64 3, !dbg !13328
  %29 = load i32, i32* %add.ptr22, align 4, !dbg !13328
  %and23 = and i32 %29, 255, !dbg !13328
  %shl24 = shl i32 %and23, 24, !dbg !13328
  %30 = load i8*, i8** %in, align 8, !dbg !13328
  %31 = bitcast i8* %30 to i32*, !dbg !13328
  %add.ptr25 = getelementptr i32, i32* %31, i64 3, !dbg !13328
  %32 = load i32, i32* %add.ptr25, align 4, !dbg !13328
  %and26 = and i32 %32, 65280, !dbg !13328
  %shl27 = shl i32 %and26, 8, !dbg !13328
  %or28 = or i32 %shl24, %shl27, !dbg !13328
  %33 = load i8*, i8** %in, align 8, !dbg !13328
  %34 = bitcast i8* %33 to i32*, !dbg !13328
  %add.ptr29 = getelementptr i32, i32* %34, i64 3, !dbg !13328
  %35 = load i32, i32* %add.ptr29, align 4, !dbg !13328
  %and30 = and i32 %35, 16711680, !dbg !13328
  %shr31 = lshr i32 %and30, 8, !dbg !13328
  %or32 = or i32 %or28, %shr31, !dbg !13328
  %36 = load i8*, i8** %in, align 8, !dbg !13328
  %37 = bitcast i8* %36 to i32*, !dbg !13328
  %add.ptr33 = getelementptr i32, i32* %37, i64 3, !dbg !13328
  %38 = load i32, i32* %add.ptr33, align 4, !dbg !13328
  %and34 = and i32 %38, -16777216, !dbg !13328
  %shr35 = lshr i32 %and34, 24, !dbg !13328
  %or36 = or i32 %or32, %shr35, !dbg !13328
  br label %cond.end40, !dbg !13328

cond.false37:                                     ; preds = %cond.true19
  %39 = load i8*, i8** %in, align 8, !dbg !13328
  %40 = bitcast i8* %39 to i32*, !dbg !13328
  %add.ptr38 = getelementptr i32, i32* %40, i64 3, !dbg !13328
  %41 = load i32, i32* %add.ptr38, align 4, !dbg !13328
  %call39 = call i32 @__fswab32(i32 %41) #8, !dbg !13328
  br label %cond.end40, !dbg !13328

cond.end40:                                       ; preds = %cond.false37, %cond.true21
  %cond41 = phi i32 [ %or36, %cond.true21 ], [ %call39, %cond.false37 ], !dbg !13328
  %and42 = and i32 %cond41, -3, !dbg !13328
  %42 = load i32, i32* %_v, align 4, !dbg !13328
  %and43 = and i32 %42, 1, !dbg !13328
  %shl44 = shl i32 %and43, 1, !dbg !13328
  %or45 = or i32 %and42, %shl44, !dbg !13328
  %and46 = and i32 %or45, 255, !dbg !13328
  %shl47 = shl i32 %and46, 24, !dbg !13328
  %43 = load i8*, i8** %in, align 8, !dbg !13328
  %44 = bitcast i8* %43 to i32*, !dbg !13328
  %add.ptr48 = getelementptr i32, i32* %44, i64 3, !dbg !13328
  %45 = load i32, i32* %add.ptr48, align 4, !dbg !13328
  %46 = call i1 @llvm.is.constant.i32(i32 %45), !dbg !13328
  br i1 %46, label %cond.true49, label %cond.false65, !dbg !13328

cond.true49:                                      ; preds = %cond.end40
  %47 = load i8*, i8** %in, align 8, !dbg !13328
  %48 = bitcast i8* %47 to i32*, !dbg !13328
  %add.ptr50 = getelementptr i32, i32* %48, i64 3, !dbg !13328
  %49 = load i32, i32* %add.ptr50, align 4, !dbg !13328
  %and51 = and i32 %49, 255, !dbg !13328
  %shl52 = shl i32 %and51, 24, !dbg !13328
  %50 = load i8*, i8** %in, align 8, !dbg !13328
  %51 = bitcast i8* %50 to i32*, !dbg !13328
  %add.ptr53 = getelementptr i32, i32* %51, i64 3, !dbg !13328
  %52 = load i32, i32* %add.ptr53, align 4, !dbg !13328
  %and54 = and i32 %52, 65280, !dbg !13328
  %shl55 = shl i32 %and54, 8, !dbg !13328
  %or56 = or i32 %shl52, %shl55, !dbg !13328
  %53 = load i8*, i8** %in, align 8, !dbg !13328
  %54 = bitcast i8* %53 to i32*, !dbg !13328
  %add.ptr57 = getelementptr i32, i32* %54, i64 3, !dbg !13328
  %55 = load i32, i32* %add.ptr57, align 4, !dbg !13328
  %and58 = and i32 %55, 16711680, !dbg !13328
  %shr59 = lshr i32 %and58, 8, !dbg !13328
  %or60 = or i32 %or56, %shr59, !dbg !13328
  %56 = load i8*, i8** %in, align 8, !dbg !13328
  %57 = bitcast i8* %56 to i32*, !dbg !13328
  %add.ptr61 = getelementptr i32, i32* %57, i64 3, !dbg !13328
  %58 = load i32, i32* %add.ptr61, align 4, !dbg !13328
  %and62 = and i32 %58, -16777216, !dbg !13328
  %shr63 = lshr i32 %and62, 24, !dbg !13328
  %or64 = or i32 %or60, %shr63, !dbg !13328
  br label %cond.end68, !dbg !13328

cond.false65:                                     ; preds = %cond.end40
  %59 = load i8*, i8** %in, align 8, !dbg !13328
  %60 = bitcast i8* %59 to i32*, !dbg !13328
  %add.ptr66 = getelementptr i32, i32* %60, i64 3, !dbg !13328
  %61 = load i32, i32* %add.ptr66, align 4, !dbg !13328
  %call67 = call i32 @__fswab32(i32 %61) #8, !dbg !13328
  br label %cond.end68, !dbg !13328

cond.end68:                                       ; preds = %cond.false65, %cond.true49
  %cond69 = phi i32 [ %or64, %cond.true49 ], [ %call67, %cond.false65 ], !dbg !13328
  %and70 = and i32 %cond69, -3, !dbg !13328
  %62 = load i32, i32* %_v, align 4, !dbg !13328
  %and71 = and i32 %62, 1, !dbg !13328
  %shl72 = shl i32 %and71, 1, !dbg !13328
  %or73 = or i32 %and70, %shl72, !dbg !13328
  %and74 = and i32 %or73, 65280, !dbg !13328
  %shl75 = shl i32 %and74, 8, !dbg !13328
  %or76 = or i32 %shl47, %shl75, !dbg !13328
  %63 = load i8*, i8** %in, align 8, !dbg !13328
  %64 = bitcast i8* %63 to i32*, !dbg !13328
  %add.ptr77 = getelementptr i32, i32* %64, i64 3, !dbg !13328
  %65 = load i32, i32* %add.ptr77, align 4, !dbg !13328
  %66 = call i1 @llvm.is.constant.i32(i32 %65), !dbg !13328
  br i1 %66, label %cond.true78, label %cond.false94, !dbg !13328

cond.true78:                                      ; preds = %cond.end68
  %67 = load i8*, i8** %in, align 8, !dbg !13328
  %68 = bitcast i8* %67 to i32*, !dbg !13328
  %add.ptr79 = getelementptr i32, i32* %68, i64 3, !dbg !13328
  %69 = load i32, i32* %add.ptr79, align 4, !dbg !13328
  %and80 = and i32 %69, 255, !dbg !13328
  %shl81 = shl i32 %and80, 24, !dbg !13328
  %70 = load i8*, i8** %in, align 8, !dbg !13328
  %71 = bitcast i8* %70 to i32*, !dbg !13328
  %add.ptr82 = getelementptr i32, i32* %71, i64 3, !dbg !13328
  %72 = load i32, i32* %add.ptr82, align 4, !dbg !13328
  %and83 = and i32 %72, 65280, !dbg !13328
  %shl84 = shl i32 %and83, 8, !dbg !13328
  %or85 = or i32 %shl81, %shl84, !dbg !13328
  %73 = load i8*, i8** %in, align 8, !dbg !13328
  %74 = bitcast i8* %73 to i32*, !dbg !13328
  %add.ptr86 = getelementptr i32, i32* %74, i64 3, !dbg !13328
  %75 = load i32, i32* %add.ptr86, align 4, !dbg !13328
  %and87 = and i32 %75, 16711680, !dbg !13328
  %shr88 = lshr i32 %and87, 8, !dbg !13328
  %or89 = or i32 %or85, %shr88, !dbg !13328
  %76 = load i8*, i8** %in, align 8, !dbg !13328
  %77 = bitcast i8* %76 to i32*, !dbg !13328
  %add.ptr90 = getelementptr i32, i32* %77, i64 3, !dbg !13328
  %78 = load i32, i32* %add.ptr90, align 4, !dbg !13328
  %and91 = and i32 %78, -16777216, !dbg !13328
  %shr92 = lshr i32 %and91, 24, !dbg !13328
  %or93 = or i32 %or89, %shr92, !dbg !13328
  br label %cond.end97, !dbg !13328

cond.false94:                                     ; preds = %cond.end68
  %79 = load i8*, i8** %in, align 8, !dbg !13328
  %80 = bitcast i8* %79 to i32*, !dbg !13328
  %add.ptr95 = getelementptr i32, i32* %80, i64 3, !dbg !13328
  %81 = load i32, i32* %add.ptr95, align 4, !dbg !13328
  %call96 = call i32 @__fswab32(i32 %81) #8, !dbg !13328
  br label %cond.end97, !dbg !13328

cond.end97:                                       ; preds = %cond.false94, %cond.true78
  %cond98 = phi i32 [ %or93, %cond.true78 ], [ %call96, %cond.false94 ], !dbg !13328
  %and99 = and i32 %cond98, -3, !dbg !13328
  %82 = load i32, i32* %_v, align 4, !dbg !13328
  %and100 = and i32 %82, 1, !dbg !13328
  %shl101 = shl i32 %and100, 1, !dbg !13328
  %or102 = or i32 %and99, %shl101, !dbg !13328
  %and103 = and i32 %or102, 16711680, !dbg !13328
  %shr104 = lshr i32 %and103, 8, !dbg !13328
  %or105 = or i32 %or76, %shr104, !dbg !13328
  %83 = load i8*, i8** %in, align 8, !dbg !13328
  %84 = bitcast i8* %83 to i32*, !dbg !13328
  %add.ptr106 = getelementptr i32, i32* %84, i64 3, !dbg !13328
  %85 = load i32, i32* %add.ptr106, align 4, !dbg !13328
  %86 = call i1 @llvm.is.constant.i32(i32 %85), !dbg !13328
  br i1 %86, label %cond.true107, label %cond.false123, !dbg !13328

cond.true107:                                     ; preds = %cond.end97
  %87 = load i8*, i8** %in, align 8, !dbg !13328
  %88 = bitcast i8* %87 to i32*, !dbg !13328
  %add.ptr108 = getelementptr i32, i32* %88, i64 3, !dbg !13328
  %89 = load i32, i32* %add.ptr108, align 4, !dbg !13328
  %and109 = and i32 %89, 255, !dbg !13328
  %shl110 = shl i32 %and109, 24, !dbg !13328
  %90 = load i8*, i8** %in, align 8, !dbg !13328
  %91 = bitcast i8* %90 to i32*, !dbg !13328
  %add.ptr111 = getelementptr i32, i32* %91, i64 3, !dbg !13328
  %92 = load i32, i32* %add.ptr111, align 4, !dbg !13328
  %and112 = and i32 %92, 65280, !dbg !13328
  %shl113 = shl i32 %and112, 8, !dbg !13328
  %or114 = or i32 %shl110, %shl113, !dbg !13328
  %93 = load i8*, i8** %in, align 8, !dbg !13328
  %94 = bitcast i8* %93 to i32*, !dbg !13328
  %add.ptr115 = getelementptr i32, i32* %94, i64 3, !dbg !13328
  %95 = load i32, i32* %add.ptr115, align 4, !dbg !13328
  %and116 = and i32 %95, 16711680, !dbg !13328
  %shr117 = lshr i32 %and116, 8, !dbg !13328
  %or118 = or i32 %or114, %shr117, !dbg !13328
  %96 = load i8*, i8** %in, align 8, !dbg !13328
  %97 = bitcast i8* %96 to i32*, !dbg !13328
  %add.ptr119 = getelementptr i32, i32* %97, i64 3, !dbg !13328
  %98 = load i32, i32* %add.ptr119, align 4, !dbg !13328
  %and120 = and i32 %98, -16777216, !dbg !13328
  %shr121 = lshr i32 %and120, 24, !dbg !13328
  %or122 = or i32 %or118, %shr121, !dbg !13328
  br label %cond.end126, !dbg !13328

cond.false123:                                    ; preds = %cond.end97
  %99 = load i8*, i8** %in, align 8, !dbg !13328
  %100 = bitcast i8* %99 to i32*, !dbg !13328
  %add.ptr124 = getelementptr i32, i32* %100, i64 3, !dbg !13328
  %101 = load i32, i32* %add.ptr124, align 4, !dbg !13328
  %call125 = call i32 @__fswab32(i32 %101) #8, !dbg !13328
  br label %cond.end126, !dbg !13328

cond.end126:                                      ; preds = %cond.false123, %cond.true107
  %cond127 = phi i32 [ %or122, %cond.true107 ], [ %call125, %cond.false123 ], !dbg !13328
  %and128 = and i32 %cond127, -3, !dbg !13328
  %102 = load i32, i32* %_v, align 4, !dbg !13328
  %and129 = and i32 %102, 1, !dbg !13328
  %shl130 = shl i32 %and129, 1, !dbg !13328
  %or131 = or i32 %and128, %shl130, !dbg !13328
  %and132 = and i32 %or131, -16777216, !dbg !13328
  %shr133 = lshr i32 %and132, 24, !dbg !13328
  %or134 = or i32 %or105, %shr133, !dbg !13328
  br label %cond.end163, !dbg !13328

cond.false135:                                    ; preds = %cond.end
  %103 = load i8*, i8** %in, align 8, !dbg !13328
  %104 = bitcast i8* %103 to i32*, !dbg !13328
  %add.ptr136 = getelementptr i32, i32* %104, i64 3, !dbg !13328
  %105 = load i32, i32* %add.ptr136, align 4, !dbg !13328
  %106 = call i1 @llvm.is.constant.i32(i32 %105), !dbg !13328
  br i1 %106, label %cond.true137, label %cond.false153, !dbg !13328

cond.true137:                                     ; preds = %cond.false135
  %107 = load i8*, i8** %in, align 8, !dbg !13328
  %108 = bitcast i8* %107 to i32*, !dbg !13328
  %add.ptr138 = getelementptr i32, i32* %108, i64 3, !dbg !13328
  %109 = load i32, i32* %add.ptr138, align 4, !dbg !13328
  %and139 = and i32 %109, 255, !dbg !13328
  %shl140 = shl i32 %and139, 24, !dbg !13328
  %110 = load i8*, i8** %in, align 8, !dbg !13328
  %111 = bitcast i8* %110 to i32*, !dbg !13328
  %add.ptr141 = getelementptr i32, i32* %111, i64 3, !dbg !13328
  %112 = load i32, i32* %add.ptr141, align 4, !dbg !13328
  %and142 = and i32 %112, 65280, !dbg !13328
  %shl143 = shl i32 %and142, 8, !dbg !13328
  %or144 = or i32 %shl140, %shl143, !dbg !13328
  %113 = load i8*, i8** %in, align 8, !dbg !13328
  %114 = bitcast i8* %113 to i32*, !dbg !13328
  %add.ptr145 = getelementptr i32, i32* %114, i64 3, !dbg !13328
  %115 = load i32, i32* %add.ptr145, align 4, !dbg !13328
  %and146 = and i32 %115, 16711680, !dbg !13328
  %shr147 = lshr i32 %and146, 8, !dbg !13328
  %or148 = or i32 %or144, %shr147, !dbg !13328
  %116 = load i8*, i8** %in, align 8, !dbg !13328
  %117 = bitcast i8* %116 to i32*, !dbg !13328
  %add.ptr149 = getelementptr i32, i32* %117, i64 3, !dbg !13328
  %118 = load i32, i32* %add.ptr149, align 4, !dbg !13328
  %and150 = and i32 %118, -16777216, !dbg !13328
  %shr151 = lshr i32 %and150, 24, !dbg !13328
  %or152 = or i32 %or148, %shr151, !dbg !13328
  br label %cond.end156, !dbg !13328

cond.false153:                                    ; preds = %cond.false135
  %119 = load i8*, i8** %in, align 8, !dbg !13328
  %120 = bitcast i8* %119 to i32*, !dbg !13328
  %add.ptr154 = getelementptr i32, i32* %120, i64 3, !dbg !13328
  %121 = load i32, i32* %add.ptr154, align 4, !dbg !13328
  %call155 = call i32 @__fswab32(i32 %121) #8, !dbg !13328
  br label %cond.end156, !dbg !13328

cond.end156:                                      ; preds = %cond.false153, %cond.true137
  %cond157 = phi i32 [ %or152, %cond.true137 ], [ %call155, %cond.false153 ], !dbg !13328
  %and158 = and i32 %cond157, -3, !dbg !13328
  %122 = load i32, i32* %_v, align 4, !dbg !13328
  %and159 = and i32 %122, 1, !dbg !13328
  %shl160 = shl i32 %and159, 1, !dbg !13328
  %or161 = or i32 %and158, %shl160, !dbg !13328
  %call162 = call i32 @__fswab32(i32 %or161) #8, !dbg !13328
  br label %cond.end163, !dbg !13328

cond.end163:                                      ; preds = %cond.end156, %cond.end126
  %cond164 = phi i32 [ %or134, %cond.end126 ], [ %call162, %cond.end156 ], !dbg !13328
  %123 = load i8*, i8** %in, align 8, !dbg !13328
  %124 = bitcast i8* %123 to i32*, !dbg !13328
  %add.ptr165 = getelementptr i32, i32* %124, i64 3, !dbg !13328
  store i32 %cond164, i32* %add.ptr165, align 4, !dbg !13328
  br label %do.end166, !dbg !13328

do.end166:                                        ; preds = %cond.end163
  br label %do.body167, !dbg !13331

do.body167:                                       ; preds = %do.end166
  call void @llvm.dbg.declare(metadata i32* %_v168, metadata !13332, metadata !DIExpression()), !dbg !13334
  %125 = load i32, i32* %state.addr, align 4, !dbg !13334
  store i32 %125, i32* %_v168, align 4, !dbg !13334
  br label %do.body169, !dbg !13334

do.body169:                                       ; preds = %do.body167
  br label %do.end170, !dbg !13335

do.end170:                                        ; preds = %do.body169
  %126 = load i8*, i8** %in, align 8, !dbg !13334
  %127 = bitcast i8* %126 to i32*, !dbg !13334
  %add.ptr171 = getelementptr i32, i32* %127, i64 64, !dbg !13334
  %128 = load i32, i32* %add.ptr171, align 4, !dbg !13334
  %129 = call i1 @llvm.is.constant.i32(i32 %128), !dbg !13334
  br i1 %129, label %cond.true172, label %cond.false188, !dbg !13334

cond.true172:                                     ; preds = %do.end170
  %130 = load i8*, i8** %in, align 8, !dbg !13334
  %131 = bitcast i8* %130 to i32*, !dbg !13334
  %add.ptr173 = getelementptr i32, i32* %131, i64 64, !dbg !13334
  %132 = load i32, i32* %add.ptr173, align 4, !dbg !13334
  %and174 = and i32 %132, 255, !dbg !13334
  %shl175 = shl i32 %and174, 24, !dbg !13334
  %133 = load i8*, i8** %in, align 8, !dbg !13334
  %134 = bitcast i8* %133 to i32*, !dbg !13334
  %add.ptr176 = getelementptr i32, i32* %134, i64 64, !dbg !13334
  %135 = load i32, i32* %add.ptr176, align 4, !dbg !13334
  %and177 = and i32 %135, 65280, !dbg !13334
  %shl178 = shl i32 %and177, 8, !dbg !13334
  %or179 = or i32 %shl175, %shl178, !dbg !13334
  %136 = load i8*, i8** %in, align 8, !dbg !13334
  %137 = bitcast i8* %136 to i32*, !dbg !13334
  %add.ptr180 = getelementptr i32, i32* %137, i64 64, !dbg !13334
  %138 = load i32, i32* %add.ptr180, align 4, !dbg !13334
  %and181 = and i32 %138, 16711680, !dbg !13334
  %shr182 = lshr i32 %and181, 8, !dbg !13334
  %or183 = or i32 %or179, %shr182, !dbg !13334
  %139 = load i8*, i8** %in, align 8, !dbg !13334
  %140 = bitcast i8* %139 to i32*, !dbg !13334
  %add.ptr184 = getelementptr i32, i32* %140, i64 64, !dbg !13334
  %141 = load i32, i32* %add.ptr184, align 4, !dbg !13334
  %and185 = and i32 %141, -16777216, !dbg !13334
  %shr186 = lshr i32 %and185, 24, !dbg !13334
  %or187 = or i32 %or183, %shr186, !dbg !13334
  br label %cond.end191, !dbg !13334

cond.false188:                                    ; preds = %do.end170
  %142 = load i8*, i8** %in, align 8, !dbg !13334
  %143 = bitcast i8* %142 to i32*, !dbg !13334
  %add.ptr189 = getelementptr i32, i32* %143, i64 64, !dbg !13334
  %144 = load i32, i32* %add.ptr189, align 4, !dbg !13334
  %call190 = call i32 @__fswab32(i32 %144) #8, !dbg !13334
  br label %cond.end191, !dbg !13334

cond.end191:                                      ; preds = %cond.false188, %cond.true172
  %cond192 = phi i32 [ %or187, %cond.true172 ], [ %call190, %cond.false188 ], !dbg !13334
  %and193 = and i32 %cond192, -2, !dbg !13334
  %145 = load i32, i32* %_v168, align 4, !dbg !13334
  %and194 = and i32 %145, 1, !dbg !13334
  %shl195 = shl i32 %and194, 0, !dbg !13334
  %or196 = or i32 %and193, %shl195, !dbg !13334
  %146 = call i1 @llvm.is.constant.i32(i32 %or196), !dbg !13334
  br i1 %146, label %cond.true197, label %cond.false313, !dbg !13334

cond.true197:                                     ; preds = %cond.end191
  %147 = load i8*, i8** %in, align 8, !dbg !13334
  %148 = bitcast i8* %147 to i32*, !dbg !13334
  %add.ptr198 = getelementptr i32, i32* %148, i64 64, !dbg !13334
  %149 = load i32, i32* %add.ptr198, align 4, !dbg !13334
  %150 = call i1 @llvm.is.constant.i32(i32 %149), !dbg !13334
  br i1 %150, label %cond.true199, label %cond.false215, !dbg !13334

cond.true199:                                     ; preds = %cond.true197
  %151 = load i8*, i8** %in, align 8, !dbg !13334
  %152 = bitcast i8* %151 to i32*, !dbg !13334
  %add.ptr200 = getelementptr i32, i32* %152, i64 64, !dbg !13334
  %153 = load i32, i32* %add.ptr200, align 4, !dbg !13334
  %and201 = and i32 %153, 255, !dbg !13334
  %shl202 = shl i32 %and201, 24, !dbg !13334
  %154 = load i8*, i8** %in, align 8, !dbg !13334
  %155 = bitcast i8* %154 to i32*, !dbg !13334
  %add.ptr203 = getelementptr i32, i32* %155, i64 64, !dbg !13334
  %156 = load i32, i32* %add.ptr203, align 4, !dbg !13334
  %and204 = and i32 %156, 65280, !dbg !13334
  %shl205 = shl i32 %and204, 8, !dbg !13334
  %or206 = or i32 %shl202, %shl205, !dbg !13334
  %157 = load i8*, i8** %in, align 8, !dbg !13334
  %158 = bitcast i8* %157 to i32*, !dbg !13334
  %add.ptr207 = getelementptr i32, i32* %158, i64 64, !dbg !13334
  %159 = load i32, i32* %add.ptr207, align 4, !dbg !13334
  %and208 = and i32 %159, 16711680, !dbg !13334
  %shr209 = lshr i32 %and208, 8, !dbg !13334
  %or210 = or i32 %or206, %shr209, !dbg !13334
  %160 = load i8*, i8** %in, align 8, !dbg !13334
  %161 = bitcast i8* %160 to i32*, !dbg !13334
  %add.ptr211 = getelementptr i32, i32* %161, i64 64, !dbg !13334
  %162 = load i32, i32* %add.ptr211, align 4, !dbg !13334
  %and212 = and i32 %162, -16777216, !dbg !13334
  %shr213 = lshr i32 %and212, 24, !dbg !13334
  %or214 = or i32 %or210, %shr213, !dbg !13334
  br label %cond.end218, !dbg !13334

cond.false215:                                    ; preds = %cond.true197
  %163 = load i8*, i8** %in, align 8, !dbg !13334
  %164 = bitcast i8* %163 to i32*, !dbg !13334
  %add.ptr216 = getelementptr i32, i32* %164, i64 64, !dbg !13334
  %165 = load i32, i32* %add.ptr216, align 4, !dbg !13334
  %call217 = call i32 @__fswab32(i32 %165) #8, !dbg !13334
  br label %cond.end218, !dbg !13334

cond.end218:                                      ; preds = %cond.false215, %cond.true199
  %cond219 = phi i32 [ %or214, %cond.true199 ], [ %call217, %cond.false215 ], !dbg !13334
  %and220 = and i32 %cond219, -2, !dbg !13334
  %166 = load i32, i32* %_v168, align 4, !dbg !13334
  %and221 = and i32 %166, 1, !dbg !13334
  %shl222 = shl i32 %and221, 0, !dbg !13334
  %or223 = or i32 %and220, %shl222, !dbg !13334
  %and224 = and i32 %or223, 255, !dbg !13334
  %shl225 = shl i32 %and224, 24, !dbg !13334
  %167 = load i8*, i8** %in, align 8, !dbg !13334
  %168 = bitcast i8* %167 to i32*, !dbg !13334
  %add.ptr226 = getelementptr i32, i32* %168, i64 64, !dbg !13334
  %169 = load i32, i32* %add.ptr226, align 4, !dbg !13334
  %170 = call i1 @llvm.is.constant.i32(i32 %169), !dbg !13334
  br i1 %170, label %cond.true227, label %cond.false243, !dbg !13334

cond.true227:                                     ; preds = %cond.end218
  %171 = load i8*, i8** %in, align 8, !dbg !13334
  %172 = bitcast i8* %171 to i32*, !dbg !13334
  %add.ptr228 = getelementptr i32, i32* %172, i64 64, !dbg !13334
  %173 = load i32, i32* %add.ptr228, align 4, !dbg !13334
  %and229 = and i32 %173, 255, !dbg !13334
  %shl230 = shl i32 %and229, 24, !dbg !13334
  %174 = load i8*, i8** %in, align 8, !dbg !13334
  %175 = bitcast i8* %174 to i32*, !dbg !13334
  %add.ptr231 = getelementptr i32, i32* %175, i64 64, !dbg !13334
  %176 = load i32, i32* %add.ptr231, align 4, !dbg !13334
  %and232 = and i32 %176, 65280, !dbg !13334
  %shl233 = shl i32 %and232, 8, !dbg !13334
  %or234 = or i32 %shl230, %shl233, !dbg !13334
  %177 = load i8*, i8** %in, align 8, !dbg !13334
  %178 = bitcast i8* %177 to i32*, !dbg !13334
  %add.ptr235 = getelementptr i32, i32* %178, i64 64, !dbg !13334
  %179 = load i32, i32* %add.ptr235, align 4, !dbg !13334
  %and236 = and i32 %179, 16711680, !dbg !13334
  %shr237 = lshr i32 %and236, 8, !dbg !13334
  %or238 = or i32 %or234, %shr237, !dbg !13334
  %180 = load i8*, i8** %in, align 8, !dbg !13334
  %181 = bitcast i8* %180 to i32*, !dbg !13334
  %add.ptr239 = getelementptr i32, i32* %181, i64 64, !dbg !13334
  %182 = load i32, i32* %add.ptr239, align 4, !dbg !13334
  %and240 = and i32 %182, -16777216, !dbg !13334
  %shr241 = lshr i32 %and240, 24, !dbg !13334
  %or242 = or i32 %or238, %shr241, !dbg !13334
  br label %cond.end246, !dbg !13334

cond.false243:                                    ; preds = %cond.end218
  %183 = load i8*, i8** %in, align 8, !dbg !13334
  %184 = bitcast i8* %183 to i32*, !dbg !13334
  %add.ptr244 = getelementptr i32, i32* %184, i64 64, !dbg !13334
  %185 = load i32, i32* %add.ptr244, align 4, !dbg !13334
  %call245 = call i32 @__fswab32(i32 %185) #8, !dbg !13334
  br label %cond.end246, !dbg !13334

cond.end246:                                      ; preds = %cond.false243, %cond.true227
  %cond247 = phi i32 [ %or242, %cond.true227 ], [ %call245, %cond.false243 ], !dbg !13334
  %and248 = and i32 %cond247, -2, !dbg !13334
  %186 = load i32, i32* %_v168, align 4, !dbg !13334
  %and249 = and i32 %186, 1, !dbg !13334
  %shl250 = shl i32 %and249, 0, !dbg !13334
  %or251 = or i32 %and248, %shl250, !dbg !13334
  %and252 = and i32 %or251, 65280, !dbg !13334
  %shl253 = shl i32 %and252, 8, !dbg !13334
  %or254 = or i32 %shl225, %shl253, !dbg !13334
  %187 = load i8*, i8** %in, align 8, !dbg !13334
  %188 = bitcast i8* %187 to i32*, !dbg !13334
  %add.ptr255 = getelementptr i32, i32* %188, i64 64, !dbg !13334
  %189 = load i32, i32* %add.ptr255, align 4, !dbg !13334
  %190 = call i1 @llvm.is.constant.i32(i32 %189), !dbg !13334
  br i1 %190, label %cond.true256, label %cond.false272, !dbg !13334

cond.true256:                                     ; preds = %cond.end246
  %191 = load i8*, i8** %in, align 8, !dbg !13334
  %192 = bitcast i8* %191 to i32*, !dbg !13334
  %add.ptr257 = getelementptr i32, i32* %192, i64 64, !dbg !13334
  %193 = load i32, i32* %add.ptr257, align 4, !dbg !13334
  %and258 = and i32 %193, 255, !dbg !13334
  %shl259 = shl i32 %and258, 24, !dbg !13334
  %194 = load i8*, i8** %in, align 8, !dbg !13334
  %195 = bitcast i8* %194 to i32*, !dbg !13334
  %add.ptr260 = getelementptr i32, i32* %195, i64 64, !dbg !13334
  %196 = load i32, i32* %add.ptr260, align 4, !dbg !13334
  %and261 = and i32 %196, 65280, !dbg !13334
  %shl262 = shl i32 %and261, 8, !dbg !13334
  %or263 = or i32 %shl259, %shl262, !dbg !13334
  %197 = load i8*, i8** %in, align 8, !dbg !13334
  %198 = bitcast i8* %197 to i32*, !dbg !13334
  %add.ptr264 = getelementptr i32, i32* %198, i64 64, !dbg !13334
  %199 = load i32, i32* %add.ptr264, align 4, !dbg !13334
  %and265 = and i32 %199, 16711680, !dbg !13334
  %shr266 = lshr i32 %and265, 8, !dbg !13334
  %or267 = or i32 %or263, %shr266, !dbg !13334
  %200 = load i8*, i8** %in, align 8, !dbg !13334
  %201 = bitcast i8* %200 to i32*, !dbg !13334
  %add.ptr268 = getelementptr i32, i32* %201, i64 64, !dbg !13334
  %202 = load i32, i32* %add.ptr268, align 4, !dbg !13334
  %and269 = and i32 %202, -16777216, !dbg !13334
  %shr270 = lshr i32 %and269, 24, !dbg !13334
  %or271 = or i32 %or267, %shr270, !dbg !13334
  br label %cond.end275, !dbg !13334

cond.false272:                                    ; preds = %cond.end246
  %203 = load i8*, i8** %in, align 8, !dbg !13334
  %204 = bitcast i8* %203 to i32*, !dbg !13334
  %add.ptr273 = getelementptr i32, i32* %204, i64 64, !dbg !13334
  %205 = load i32, i32* %add.ptr273, align 4, !dbg !13334
  %call274 = call i32 @__fswab32(i32 %205) #8, !dbg !13334
  br label %cond.end275, !dbg !13334

cond.end275:                                      ; preds = %cond.false272, %cond.true256
  %cond276 = phi i32 [ %or271, %cond.true256 ], [ %call274, %cond.false272 ], !dbg !13334
  %and277 = and i32 %cond276, -2, !dbg !13334
  %206 = load i32, i32* %_v168, align 4, !dbg !13334
  %and278 = and i32 %206, 1, !dbg !13334
  %shl279 = shl i32 %and278, 0, !dbg !13334
  %or280 = or i32 %and277, %shl279, !dbg !13334
  %and281 = and i32 %or280, 16711680, !dbg !13334
  %shr282 = lshr i32 %and281, 8, !dbg !13334
  %or283 = or i32 %or254, %shr282, !dbg !13334
  %207 = load i8*, i8** %in, align 8, !dbg !13334
  %208 = bitcast i8* %207 to i32*, !dbg !13334
  %add.ptr284 = getelementptr i32, i32* %208, i64 64, !dbg !13334
  %209 = load i32, i32* %add.ptr284, align 4, !dbg !13334
  %210 = call i1 @llvm.is.constant.i32(i32 %209), !dbg !13334
  br i1 %210, label %cond.true285, label %cond.false301, !dbg !13334

cond.true285:                                     ; preds = %cond.end275
  %211 = load i8*, i8** %in, align 8, !dbg !13334
  %212 = bitcast i8* %211 to i32*, !dbg !13334
  %add.ptr286 = getelementptr i32, i32* %212, i64 64, !dbg !13334
  %213 = load i32, i32* %add.ptr286, align 4, !dbg !13334
  %and287 = and i32 %213, 255, !dbg !13334
  %shl288 = shl i32 %and287, 24, !dbg !13334
  %214 = load i8*, i8** %in, align 8, !dbg !13334
  %215 = bitcast i8* %214 to i32*, !dbg !13334
  %add.ptr289 = getelementptr i32, i32* %215, i64 64, !dbg !13334
  %216 = load i32, i32* %add.ptr289, align 4, !dbg !13334
  %and290 = and i32 %216, 65280, !dbg !13334
  %shl291 = shl i32 %and290, 8, !dbg !13334
  %or292 = or i32 %shl288, %shl291, !dbg !13334
  %217 = load i8*, i8** %in, align 8, !dbg !13334
  %218 = bitcast i8* %217 to i32*, !dbg !13334
  %add.ptr293 = getelementptr i32, i32* %218, i64 64, !dbg !13334
  %219 = load i32, i32* %add.ptr293, align 4, !dbg !13334
  %and294 = and i32 %219, 16711680, !dbg !13334
  %shr295 = lshr i32 %and294, 8, !dbg !13334
  %or296 = or i32 %or292, %shr295, !dbg !13334
  %220 = load i8*, i8** %in, align 8, !dbg !13334
  %221 = bitcast i8* %220 to i32*, !dbg !13334
  %add.ptr297 = getelementptr i32, i32* %221, i64 64, !dbg !13334
  %222 = load i32, i32* %add.ptr297, align 4, !dbg !13334
  %and298 = and i32 %222, -16777216, !dbg !13334
  %shr299 = lshr i32 %and298, 24, !dbg !13334
  %or300 = or i32 %or296, %shr299, !dbg !13334
  br label %cond.end304, !dbg !13334

cond.false301:                                    ; preds = %cond.end275
  %223 = load i8*, i8** %in, align 8, !dbg !13334
  %224 = bitcast i8* %223 to i32*, !dbg !13334
  %add.ptr302 = getelementptr i32, i32* %224, i64 64, !dbg !13334
  %225 = load i32, i32* %add.ptr302, align 4, !dbg !13334
  %call303 = call i32 @__fswab32(i32 %225) #8, !dbg !13334
  br label %cond.end304, !dbg !13334

cond.end304:                                      ; preds = %cond.false301, %cond.true285
  %cond305 = phi i32 [ %or300, %cond.true285 ], [ %call303, %cond.false301 ], !dbg !13334
  %and306 = and i32 %cond305, -2, !dbg !13334
  %226 = load i32, i32* %_v168, align 4, !dbg !13334
  %and307 = and i32 %226, 1, !dbg !13334
  %shl308 = shl i32 %and307, 0, !dbg !13334
  %or309 = or i32 %and306, %shl308, !dbg !13334
  %and310 = and i32 %or309, -16777216, !dbg !13334
  %shr311 = lshr i32 %and310, 24, !dbg !13334
  %or312 = or i32 %or283, %shr311, !dbg !13334
  br label %cond.end341, !dbg !13334

cond.false313:                                    ; preds = %cond.end191
  %227 = load i8*, i8** %in, align 8, !dbg !13334
  %228 = bitcast i8* %227 to i32*, !dbg !13334
  %add.ptr314 = getelementptr i32, i32* %228, i64 64, !dbg !13334
  %229 = load i32, i32* %add.ptr314, align 4, !dbg !13334
  %230 = call i1 @llvm.is.constant.i32(i32 %229), !dbg !13334
  br i1 %230, label %cond.true315, label %cond.false331, !dbg !13334

cond.true315:                                     ; preds = %cond.false313
  %231 = load i8*, i8** %in, align 8, !dbg !13334
  %232 = bitcast i8* %231 to i32*, !dbg !13334
  %add.ptr316 = getelementptr i32, i32* %232, i64 64, !dbg !13334
  %233 = load i32, i32* %add.ptr316, align 4, !dbg !13334
  %and317 = and i32 %233, 255, !dbg !13334
  %shl318 = shl i32 %and317, 24, !dbg !13334
  %234 = load i8*, i8** %in, align 8, !dbg !13334
  %235 = bitcast i8* %234 to i32*, !dbg !13334
  %add.ptr319 = getelementptr i32, i32* %235, i64 64, !dbg !13334
  %236 = load i32, i32* %add.ptr319, align 4, !dbg !13334
  %and320 = and i32 %236, 65280, !dbg !13334
  %shl321 = shl i32 %and320, 8, !dbg !13334
  %or322 = or i32 %shl318, %shl321, !dbg !13334
  %237 = load i8*, i8** %in, align 8, !dbg !13334
  %238 = bitcast i8* %237 to i32*, !dbg !13334
  %add.ptr323 = getelementptr i32, i32* %238, i64 64, !dbg !13334
  %239 = load i32, i32* %add.ptr323, align 4, !dbg !13334
  %and324 = and i32 %239, 16711680, !dbg !13334
  %shr325 = lshr i32 %and324, 8, !dbg !13334
  %or326 = or i32 %or322, %shr325, !dbg !13334
  %240 = load i8*, i8** %in, align 8, !dbg !13334
  %241 = bitcast i8* %240 to i32*, !dbg !13334
  %add.ptr327 = getelementptr i32, i32* %241, i64 64, !dbg !13334
  %242 = load i32, i32* %add.ptr327, align 4, !dbg !13334
  %and328 = and i32 %242, -16777216, !dbg !13334
  %shr329 = lshr i32 %and328, 24, !dbg !13334
  %or330 = or i32 %or326, %shr329, !dbg !13334
  br label %cond.end334, !dbg !13334

cond.false331:                                    ; preds = %cond.false313
  %243 = load i8*, i8** %in, align 8, !dbg !13334
  %244 = bitcast i8* %243 to i32*, !dbg !13334
  %add.ptr332 = getelementptr i32, i32* %244, i64 64, !dbg !13334
  %245 = load i32, i32* %add.ptr332, align 4, !dbg !13334
  %call333 = call i32 @__fswab32(i32 %245) #8, !dbg !13334
  br label %cond.end334, !dbg !13334

cond.end334:                                      ; preds = %cond.false331, %cond.true315
  %cond335 = phi i32 [ %or330, %cond.true315 ], [ %call333, %cond.false331 ], !dbg !13334
  %and336 = and i32 %cond335, -2, !dbg !13334
  %246 = load i32, i32* %_v168, align 4, !dbg !13334
  %and337 = and i32 %246, 1, !dbg !13334
  %shl338 = shl i32 %and337, 0, !dbg !13334
  %or339 = or i32 %and336, %shl338, !dbg !13334
  %call340 = call i32 @__fswab32(i32 %or339) #8, !dbg !13334
  br label %cond.end341, !dbg !13334

cond.end341:                                      ; preds = %cond.end334, %cond.end304
  %cond342 = phi i32 [ %or312, %cond.end304 ], [ %call340, %cond.end334 ], !dbg !13334
  %247 = load i8*, i8** %in, align 8, !dbg !13334
  %248 = bitcast i8* %247 to i32*, !dbg !13334
  %add.ptr343 = getelementptr i32, i32* %248, i64 64, !dbg !13334
  store i32 %cond342, i32* %add.ptr343, align 4, !dbg !13334
  br label %do.end344, !dbg !13334

do.end344:                                        ; preds = %cond.end341
  br label %do.body345, !dbg !13337

do.body345:                                       ; preds = %do.end344
  call void @llvm.dbg.declare(metadata i32* %_v346, metadata !13338, metadata !DIExpression()), !dbg !13340
  store i32 1877, i32* %_v346, align 4, !dbg !13340
  br label %do.body347, !dbg !13340

do.body347:                                       ; preds = %do.body345
  br label %do.end348, !dbg !13341

do.end348:                                        ; preds = %do.body347
  %249 = load i8*, i8** %in, align 8, !dbg !13340
  %250 = bitcast i8* %249 to i32*, !dbg !13340
  %add.ptr349 = getelementptr i32, i32* %250, i64 0, !dbg !13340
  %251 = load i32, i32* %add.ptr349, align 4, !dbg !13340
  %252 = call i1 @llvm.is.constant.i32(i32 %251), !dbg !13340
  br i1 %252, label %cond.true350, label %cond.false366, !dbg !13340

cond.true350:                                     ; preds = %do.end348
  %253 = load i8*, i8** %in, align 8, !dbg !13340
  %254 = bitcast i8* %253 to i32*, !dbg !13340
  %add.ptr351 = getelementptr i32, i32* %254, i64 0, !dbg !13340
  %255 = load i32, i32* %add.ptr351, align 4, !dbg !13340
  %and352 = and i32 %255, 255, !dbg !13340
  %shl353 = shl i32 %and352, 24, !dbg !13340
  %256 = load i8*, i8** %in, align 8, !dbg !13340
  %257 = bitcast i8* %256 to i32*, !dbg !13340
  %add.ptr354 = getelementptr i32, i32* %257, i64 0, !dbg !13340
  %258 = load i32, i32* %add.ptr354, align 4, !dbg !13340
  %and355 = and i32 %258, 65280, !dbg !13340
  %shl356 = shl i32 %and355, 8, !dbg !13340
  %or357 = or i32 %shl353, %shl356, !dbg !13340
  %259 = load i8*, i8** %in, align 8, !dbg !13340
  %260 = bitcast i8* %259 to i32*, !dbg !13340
  %add.ptr358 = getelementptr i32, i32* %260, i64 0, !dbg !13340
  %261 = load i32, i32* %add.ptr358, align 4, !dbg !13340
  %and359 = and i32 %261, 16711680, !dbg !13340
  %shr360 = lshr i32 %and359, 8, !dbg !13340
  %or361 = or i32 %or357, %shr360, !dbg !13340
  %262 = load i8*, i8** %in, align 8, !dbg !13340
  %263 = bitcast i8* %262 to i32*, !dbg !13340
  %add.ptr362 = getelementptr i32, i32* %263, i64 0, !dbg !13340
  %264 = load i32, i32* %add.ptr362, align 4, !dbg !13340
  %and363 = and i32 %264, -16777216, !dbg !13340
  %shr364 = lshr i32 %and363, 24, !dbg !13340
  %or365 = or i32 %or361, %shr364, !dbg !13340
  br label %cond.end369, !dbg !13340

cond.false366:                                    ; preds = %do.end348
  %265 = load i8*, i8** %in, align 8, !dbg !13340
  %266 = bitcast i8* %265 to i32*, !dbg !13340
  %add.ptr367 = getelementptr i32, i32* %266, i64 0, !dbg !13340
  %267 = load i32, i32* %add.ptr367, align 4, !dbg !13340
  %call368 = call i32 @__fswab32(i32 %267) #8, !dbg !13340
  br label %cond.end369, !dbg !13340

cond.end369:                                      ; preds = %cond.false366, %cond.true350
  %cond370 = phi i32 [ %or365, %cond.true350 ], [ %call368, %cond.false366 ], !dbg !13340
  %and371 = and i32 %cond370, 65535, !dbg !13340
  %268 = load i32, i32* %_v346, align 4, !dbg !13340
  %and372 = and i32 %268, 65535, !dbg !13340
  %shl373 = shl i32 %and372, 16, !dbg !13340
  %or374 = or i32 %and371, %shl373, !dbg !13340
  %269 = call i1 @llvm.is.constant.i32(i32 %or374), !dbg !13340
  br i1 %269, label %cond.true375, label %cond.false491, !dbg !13340

cond.true375:                                     ; preds = %cond.end369
  %270 = load i8*, i8** %in, align 8, !dbg !13340
  %271 = bitcast i8* %270 to i32*, !dbg !13340
  %add.ptr376 = getelementptr i32, i32* %271, i64 0, !dbg !13340
  %272 = load i32, i32* %add.ptr376, align 4, !dbg !13340
  %273 = call i1 @llvm.is.constant.i32(i32 %272), !dbg !13340
  br i1 %273, label %cond.true377, label %cond.false393, !dbg !13340

cond.true377:                                     ; preds = %cond.true375
  %274 = load i8*, i8** %in, align 8, !dbg !13340
  %275 = bitcast i8* %274 to i32*, !dbg !13340
  %add.ptr378 = getelementptr i32, i32* %275, i64 0, !dbg !13340
  %276 = load i32, i32* %add.ptr378, align 4, !dbg !13340
  %and379 = and i32 %276, 255, !dbg !13340
  %shl380 = shl i32 %and379, 24, !dbg !13340
  %277 = load i8*, i8** %in, align 8, !dbg !13340
  %278 = bitcast i8* %277 to i32*, !dbg !13340
  %add.ptr381 = getelementptr i32, i32* %278, i64 0, !dbg !13340
  %279 = load i32, i32* %add.ptr381, align 4, !dbg !13340
  %and382 = and i32 %279, 65280, !dbg !13340
  %shl383 = shl i32 %and382, 8, !dbg !13340
  %or384 = or i32 %shl380, %shl383, !dbg !13340
  %280 = load i8*, i8** %in, align 8, !dbg !13340
  %281 = bitcast i8* %280 to i32*, !dbg !13340
  %add.ptr385 = getelementptr i32, i32* %281, i64 0, !dbg !13340
  %282 = load i32, i32* %add.ptr385, align 4, !dbg !13340
  %and386 = and i32 %282, 16711680, !dbg !13340
  %shr387 = lshr i32 %and386, 8, !dbg !13340
  %or388 = or i32 %or384, %shr387, !dbg !13340
  %283 = load i8*, i8** %in, align 8, !dbg !13340
  %284 = bitcast i8* %283 to i32*, !dbg !13340
  %add.ptr389 = getelementptr i32, i32* %284, i64 0, !dbg !13340
  %285 = load i32, i32* %add.ptr389, align 4, !dbg !13340
  %and390 = and i32 %285, -16777216, !dbg !13340
  %shr391 = lshr i32 %and390, 24, !dbg !13340
  %or392 = or i32 %or388, %shr391, !dbg !13340
  br label %cond.end396, !dbg !13340

cond.false393:                                    ; preds = %cond.true375
  %286 = load i8*, i8** %in, align 8, !dbg !13340
  %287 = bitcast i8* %286 to i32*, !dbg !13340
  %add.ptr394 = getelementptr i32, i32* %287, i64 0, !dbg !13340
  %288 = load i32, i32* %add.ptr394, align 4, !dbg !13340
  %call395 = call i32 @__fswab32(i32 %288) #8, !dbg !13340
  br label %cond.end396, !dbg !13340

cond.end396:                                      ; preds = %cond.false393, %cond.true377
  %cond397 = phi i32 [ %or392, %cond.true377 ], [ %call395, %cond.false393 ], !dbg !13340
  %and398 = and i32 %cond397, 65535, !dbg !13340
  %289 = load i32, i32* %_v346, align 4, !dbg !13340
  %and399 = and i32 %289, 65535, !dbg !13340
  %shl400 = shl i32 %and399, 16, !dbg !13340
  %or401 = or i32 %and398, %shl400, !dbg !13340
  %and402 = and i32 %or401, 255, !dbg !13340
  %shl403 = shl i32 %and402, 24, !dbg !13340
  %290 = load i8*, i8** %in, align 8, !dbg !13340
  %291 = bitcast i8* %290 to i32*, !dbg !13340
  %add.ptr404 = getelementptr i32, i32* %291, i64 0, !dbg !13340
  %292 = load i32, i32* %add.ptr404, align 4, !dbg !13340
  %293 = call i1 @llvm.is.constant.i32(i32 %292), !dbg !13340
  br i1 %293, label %cond.true405, label %cond.false421, !dbg !13340

cond.true405:                                     ; preds = %cond.end396
  %294 = load i8*, i8** %in, align 8, !dbg !13340
  %295 = bitcast i8* %294 to i32*, !dbg !13340
  %add.ptr406 = getelementptr i32, i32* %295, i64 0, !dbg !13340
  %296 = load i32, i32* %add.ptr406, align 4, !dbg !13340
  %and407 = and i32 %296, 255, !dbg !13340
  %shl408 = shl i32 %and407, 24, !dbg !13340
  %297 = load i8*, i8** %in, align 8, !dbg !13340
  %298 = bitcast i8* %297 to i32*, !dbg !13340
  %add.ptr409 = getelementptr i32, i32* %298, i64 0, !dbg !13340
  %299 = load i32, i32* %add.ptr409, align 4, !dbg !13340
  %and410 = and i32 %299, 65280, !dbg !13340
  %shl411 = shl i32 %and410, 8, !dbg !13340
  %or412 = or i32 %shl408, %shl411, !dbg !13340
  %300 = load i8*, i8** %in, align 8, !dbg !13340
  %301 = bitcast i8* %300 to i32*, !dbg !13340
  %add.ptr413 = getelementptr i32, i32* %301, i64 0, !dbg !13340
  %302 = load i32, i32* %add.ptr413, align 4, !dbg !13340
  %and414 = and i32 %302, 16711680, !dbg !13340
  %shr415 = lshr i32 %and414, 8, !dbg !13340
  %or416 = or i32 %or412, %shr415, !dbg !13340
  %303 = load i8*, i8** %in, align 8, !dbg !13340
  %304 = bitcast i8* %303 to i32*, !dbg !13340
  %add.ptr417 = getelementptr i32, i32* %304, i64 0, !dbg !13340
  %305 = load i32, i32* %add.ptr417, align 4, !dbg !13340
  %and418 = and i32 %305, -16777216, !dbg !13340
  %shr419 = lshr i32 %and418, 24, !dbg !13340
  %or420 = or i32 %or416, %shr419, !dbg !13340
  br label %cond.end424, !dbg !13340

cond.false421:                                    ; preds = %cond.end396
  %306 = load i8*, i8** %in, align 8, !dbg !13340
  %307 = bitcast i8* %306 to i32*, !dbg !13340
  %add.ptr422 = getelementptr i32, i32* %307, i64 0, !dbg !13340
  %308 = load i32, i32* %add.ptr422, align 4, !dbg !13340
  %call423 = call i32 @__fswab32(i32 %308) #8, !dbg !13340
  br label %cond.end424, !dbg !13340

cond.end424:                                      ; preds = %cond.false421, %cond.true405
  %cond425 = phi i32 [ %or420, %cond.true405 ], [ %call423, %cond.false421 ], !dbg !13340
  %and426 = and i32 %cond425, 65535, !dbg !13340
  %309 = load i32, i32* %_v346, align 4, !dbg !13340
  %and427 = and i32 %309, 65535, !dbg !13340
  %shl428 = shl i32 %and427, 16, !dbg !13340
  %or429 = or i32 %and426, %shl428, !dbg !13340
  %and430 = and i32 %or429, 65280, !dbg !13340
  %shl431 = shl i32 %and430, 8, !dbg !13340
  %or432 = or i32 %shl403, %shl431, !dbg !13340
  %310 = load i8*, i8** %in, align 8, !dbg !13340
  %311 = bitcast i8* %310 to i32*, !dbg !13340
  %add.ptr433 = getelementptr i32, i32* %311, i64 0, !dbg !13340
  %312 = load i32, i32* %add.ptr433, align 4, !dbg !13340
  %313 = call i1 @llvm.is.constant.i32(i32 %312), !dbg !13340
  br i1 %313, label %cond.true434, label %cond.false450, !dbg !13340

cond.true434:                                     ; preds = %cond.end424
  %314 = load i8*, i8** %in, align 8, !dbg !13340
  %315 = bitcast i8* %314 to i32*, !dbg !13340
  %add.ptr435 = getelementptr i32, i32* %315, i64 0, !dbg !13340
  %316 = load i32, i32* %add.ptr435, align 4, !dbg !13340
  %and436 = and i32 %316, 255, !dbg !13340
  %shl437 = shl i32 %and436, 24, !dbg !13340
  %317 = load i8*, i8** %in, align 8, !dbg !13340
  %318 = bitcast i8* %317 to i32*, !dbg !13340
  %add.ptr438 = getelementptr i32, i32* %318, i64 0, !dbg !13340
  %319 = load i32, i32* %add.ptr438, align 4, !dbg !13340
  %and439 = and i32 %319, 65280, !dbg !13340
  %shl440 = shl i32 %and439, 8, !dbg !13340
  %or441 = or i32 %shl437, %shl440, !dbg !13340
  %320 = load i8*, i8** %in, align 8, !dbg !13340
  %321 = bitcast i8* %320 to i32*, !dbg !13340
  %add.ptr442 = getelementptr i32, i32* %321, i64 0, !dbg !13340
  %322 = load i32, i32* %add.ptr442, align 4, !dbg !13340
  %and443 = and i32 %322, 16711680, !dbg !13340
  %shr444 = lshr i32 %and443, 8, !dbg !13340
  %or445 = or i32 %or441, %shr444, !dbg !13340
  %323 = load i8*, i8** %in, align 8, !dbg !13340
  %324 = bitcast i8* %323 to i32*, !dbg !13340
  %add.ptr446 = getelementptr i32, i32* %324, i64 0, !dbg !13340
  %325 = load i32, i32* %add.ptr446, align 4, !dbg !13340
  %and447 = and i32 %325, -16777216, !dbg !13340
  %shr448 = lshr i32 %and447, 24, !dbg !13340
  %or449 = or i32 %or445, %shr448, !dbg !13340
  br label %cond.end453, !dbg !13340

cond.false450:                                    ; preds = %cond.end424
  %326 = load i8*, i8** %in, align 8, !dbg !13340
  %327 = bitcast i8* %326 to i32*, !dbg !13340
  %add.ptr451 = getelementptr i32, i32* %327, i64 0, !dbg !13340
  %328 = load i32, i32* %add.ptr451, align 4, !dbg !13340
  %call452 = call i32 @__fswab32(i32 %328) #8, !dbg !13340
  br label %cond.end453, !dbg !13340

cond.end453:                                      ; preds = %cond.false450, %cond.true434
  %cond454 = phi i32 [ %or449, %cond.true434 ], [ %call452, %cond.false450 ], !dbg !13340
  %and455 = and i32 %cond454, 65535, !dbg !13340
  %329 = load i32, i32* %_v346, align 4, !dbg !13340
  %and456 = and i32 %329, 65535, !dbg !13340
  %shl457 = shl i32 %and456, 16, !dbg !13340
  %or458 = or i32 %and455, %shl457, !dbg !13340
  %and459 = and i32 %or458, 16711680, !dbg !13340
  %shr460 = lshr i32 %and459, 8, !dbg !13340
  %or461 = or i32 %or432, %shr460, !dbg !13340
  %330 = load i8*, i8** %in, align 8, !dbg !13340
  %331 = bitcast i8* %330 to i32*, !dbg !13340
  %add.ptr462 = getelementptr i32, i32* %331, i64 0, !dbg !13340
  %332 = load i32, i32* %add.ptr462, align 4, !dbg !13340
  %333 = call i1 @llvm.is.constant.i32(i32 %332), !dbg !13340
  br i1 %333, label %cond.true463, label %cond.false479, !dbg !13340

cond.true463:                                     ; preds = %cond.end453
  %334 = load i8*, i8** %in, align 8, !dbg !13340
  %335 = bitcast i8* %334 to i32*, !dbg !13340
  %add.ptr464 = getelementptr i32, i32* %335, i64 0, !dbg !13340
  %336 = load i32, i32* %add.ptr464, align 4, !dbg !13340
  %and465 = and i32 %336, 255, !dbg !13340
  %shl466 = shl i32 %and465, 24, !dbg !13340
  %337 = load i8*, i8** %in, align 8, !dbg !13340
  %338 = bitcast i8* %337 to i32*, !dbg !13340
  %add.ptr467 = getelementptr i32, i32* %338, i64 0, !dbg !13340
  %339 = load i32, i32* %add.ptr467, align 4, !dbg !13340
  %and468 = and i32 %339, 65280, !dbg !13340
  %shl469 = shl i32 %and468, 8, !dbg !13340
  %or470 = or i32 %shl466, %shl469, !dbg !13340
  %340 = load i8*, i8** %in, align 8, !dbg !13340
  %341 = bitcast i8* %340 to i32*, !dbg !13340
  %add.ptr471 = getelementptr i32, i32* %341, i64 0, !dbg !13340
  %342 = load i32, i32* %add.ptr471, align 4, !dbg !13340
  %and472 = and i32 %342, 16711680, !dbg !13340
  %shr473 = lshr i32 %and472, 8, !dbg !13340
  %or474 = or i32 %or470, %shr473, !dbg !13340
  %343 = load i8*, i8** %in, align 8, !dbg !13340
  %344 = bitcast i8* %343 to i32*, !dbg !13340
  %add.ptr475 = getelementptr i32, i32* %344, i64 0, !dbg !13340
  %345 = load i32, i32* %add.ptr475, align 4, !dbg !13340
  %and476 = and i32 %345, -16777216, !dbg !13340
  %shr477 = lshr i32 %and476, 24, !dbg !13340
  %or478 = or i32 %or474, %shr477, !dbg !13340
  br label %cond.end482, !dbg !13340

cond.false479:                                    ; preds = %cond.end453
  %346 = load i8*, i8** %in, align 8, !dbg !13340
  %347 = bitcast i8* %346 to i32*, !dbg !13340
  %add.ptr480 = getelementptr i32, i32* %347, i64 0, !dbg !13340
  %348 = load i32, i32* %add.ptr480, align 4, !dbg !13340
  %call481 = call i32 @__fswab32(i32 %348) #8, !dbg !13340
  br label %cond.end482, !dbg !13340

cond.end482:                                      ; preds = %cond.false479, %cond.true463
  %cond483 = phi i32 [ %or478, %cond.true463 ], [ %call481, %cond.false479 ], !dbg !13340
  %and484 = and i32 %cond483, 65535, !dbg !13340
  %349 = load i32, i32* %_v346, align 4, !dbg !13340
  %and485 = and i32 %349, 65535, !dbg !13340
  %shl486 = shl i32 %and485, 16, !dbg !13340
  %or487 = or i32 %and484, %shl486, !dbg !13340
  %and488 = and i32 %or487, -16777216, !dbg !13340
  %shr489 = lshr i32 %and488, 24, !dbg !13340
  %or490 = or i32 %or461, %shr489, !dbg !13340
  br label %cond.end519, !dbg !13340

cond.false491:                                    ; preds = %cond.end369
  %350 = load i8*, i8** %in, align 8, !dbg !13340
  %351 = bitcast i8* %350 to i32*, !dbg !13340
  %add.ptr492 = getelementptr i32, i32* %351, i64 0, !dbg !13340
  %352 = load i32, i32* %add.ptr492, align 4, !dbg !13340
  %353 = call i1 @llvm.is.constant.i32(i32 %352), !dbg !13340
  br i1 %353, label %cond.true493, label %cond.false509, !dbg !13340

cond.true493:                                     ; preds = %cond.false491
  %354 = load i8*, i8** %in, align 8, !dbg !13340
  %355 = bitcast i8* %354 to i32*, !dbg !13340
  %add.ptr494 = getelementptr i32, i32* %355, i64 0, !dbg !13340
  %356 = load i32, i32* %add.ptr494, align 4, !dbg !13340
  %and495 = and i32 %356, 255, !dbg !13340
  %shl496 = shl i32 %and495, 24, !dbg !13340
  %357 = load i8*, i8** %in, align 8, !dbg !13340
  %358 = bitcast i8* %357 to i32*, !dbg !13340
  %add.ptr497 = getelementptr i32, i32* %358, i64 0, !dbg !13340
  %359 = load i32, i32* %add.ptr497, align 4, !dbg !13340
  %and498 = and i32 %359, 65280, !dbg !13340
  %shl499 = shl i32 %and498, 8, !dbg !13340
  %or500 = or i32 %shl496, %shl499, !dbg !13340
  %360 = load i8*, i8** %in, align 8, !dbg !13340
  %361 = bitcast i8* %360 to i32*, !dbg !13340
  %add.ptr501 = getelementptr i32, i32* %361, i64 0, !dbg !13340
  %362 = load i32, i32* %add.ptr501, align 4, !dbg !13340
  %and502 = and i32 %362, 16711680, !dbg !13340
  %shr503 = lshr i32 %and502, 8, !dbg !13340
  %or504 = or i32 %or500, %shr503, !dbg !13340
  %363 = load i8*, i8** %in, align 8, !dbg !13340
  %364 = bitcast i8* %363 to i32*, !dbg !13340
  %add.ptr505 = getelementptr i32, i32* %364, i64 0, !dbg !13340
  %365 = load i32, i32* %add.ptr505, align 4, !dbg !13340
  %and506 = and i32 %365, -16777216, !dbg !13340
  %shr507 = lshr i32 %and506, 24, !dbg !13340
  %or508 = or i32 %or504, %shr507, !dbg !13340
  br label %cond.end512, !dbg !13340

cond.false509:                                    ; preds = %cond.false491
  %366 = load i8*, i8** %in, align 8, !dbg !13340
  %367 = bitcast i8* %366 to i32*, !dbg !13340
  %add.ptr510 = getelementptr i32, i32* %367, i64 0, !dbg !13340
  %368 = load i32, i32* %add.ptr510, align 4, !dbg !13340
  %call511 = call i32 @__fswab32(i32 %368) #8, !dbg !13340
  br label %cond.end512, !dbg !13340

cond.end512:                                      ; preds = %cond.false509, %cond.true493
  %cond513 = phi i32 [ %or508, %cond.true493 ], [ %call511, %cond.false509 ], !dbg !13340
  %and514 = and i32 %cond513, 65535, !dbg !13340
  %369 = load i32, i32* %_v346, align 4, !dbg !13340
  %and515 = and i32 %369, 65535, !dbg !13340
  %shl516 = shl i32 %and515, 16, !dbg !13340
  %or517 = or i32 %and514, %shl516, !dbg !13340
  %call518 = call i32 @__fswab32(i32 %or517) #8, !dbg !13340
  br label %cond.end519, !dbg !13340

cond.end519:                                      ; preds = %cond.end512, %cond.end482
  %cond520 = phi i32 [ %or490, %cond.end482 ], [ %call518, %cond.end512 ], !dbg !13340
  %370 = load i8*, i8** %in, align 8, !dbg !13340
  %371 = bitcast i8* %370 to i32*, !dbg !13340
  %add.ptr521 = getelementptr i32, i32* %371, i64 0, !dbg !13340
  store i32 %cond520, i32* %add.ptr521, align 4, !dbg !13340
  br label %do.end522, !dbg !13340

do.end522:                                        ; preds = %cond.end519
  call void @llvm.dbg.declare(metadata [4 x i32]* %_out, metadata !13343, metadata !DIExpression()), !dbg !13345
  %372 = bitcast [4 x i32]* %_out to i8*, !dbg !13345
  call void @llvm.memset.p0i8.i64(i8* align 16 %372, i8 0, i64 16, i1 false), !dbg !13345
  %373 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %mdev.addr, align 8, !dbg !13346
  %374 = load i8*, i8** %in, align 8, !dbg !13346
  %arraydecay = getelementptr inbounds [4 x i32], [4 x i32]* %_out, i64 0, i64 0, !dbg !13346
  %375 = bitcast i32* %arraydecay to i8*, !dbg !13346
  %call524 = call i32 @mlx5_cmd_exec(%struct.mlx5_core_dev* %373, i8* %374, i32 512, i8* %375, i32 16) #9, !dbg !13346
  store i32 %call524, i32* %tmp523, align 4, !dbg !13345
  %376 = load i32, i32* %tmp523, align 4, !dbg !13346
  store i32 %376, i32* %tmp, align 4, !dbg !13345
  %377 = load i32, i32* %tmp, align 4, !dbg !13345
  store i32 %377, i32* %err, align 4, !dbg !13348
  %378 = load i8*, i8** %in, align 8, !dbg !13349
  call void @kvfree(i8* %378) #9, !dbg !13350
  %379 = load i32, i32* %err, align 4, !dbg !13351
  store i32 %379, i32* %retval, align 4, !dbg !13352
  br label %return, !dbg !13352

return:                                           ; preds = %do.end522, %if.then
  %380 = load i32, i32* %retval, align 4, !dbg !13353
  ret i32 %380, !dbg !13353
}

; Function Attrs: noredzone
declare dso_local void @mutex_unlock(%struct.mutex*) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @mlx5_nic_vport_disable_roce(%struct.mlx5_core_dev* %mdev) #0 !dbg !13354 {
entry:
  %mdev.addr = alloca %struct.mlx5_core_dev*, align 8
  %err = alloca i32, align 4
  store %struct.mlx5_core_dev* %mdev, %struct.mlx5_core_dev** %mdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_core_dev** %mdev.addr, metadata !13355, metadata !DIExpression()), !dbg !13356
  call void @llvm.dbg.declare(metadata i32* %err, metadata !13357, metadata !DIExpression()), !dbg !13358
  store i32 0, i32* %err, align 4, !dbg !13358
  call void @mutex_lock(%struct.mutex* @mlx5_roce_en_lock) #9, !dbg !13359
  %0 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %mdev.addr, align 8, !dbg !13360
  %roce = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %0, i32 0, i32 24, !dbg !13362
  %roce_en = getelementptr inbounds %struct.anon.139, %struct.anon.139* %roce, i32 0, i32 1, !dbg !13363
  %1 = load i32, i32* %roce_en, align 8, !dbg !13363
  %tobool = icmp ne i32 %1, 0, !dbg !13360
  br i1 %tobool, label %if.then, label %if.end11, !dbg !13364

if.then:                                          ; preds = %entry
  %2 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %mdev.addr, align 8, !dbg !13365
  %roce1 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %2, i32 0, i32 24, !dbg !13367
  %roce_en2 = getelementptr inbounds %struct.anon.139, %struct.anon.139* %roce1, i32 0, i32 1, !dbg !13368
  %3 = load i32, i32* %roce_en2, align 8, !dbg !13369
  %dec = add i32 %3, -1, !dbg !13369
  store i32 %dec, i32* %roce_en2, align 8, !dbg !13369
  %4 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %mdev.addr, align 8, !dbg !13370
  %roce3 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %4, i32 0, i32 24, !dbg !13372
  %roce_en4 = getelementptr inbounds %struct.anon.139, %struct.anon.139* %roce3, i32 0, i32 1, !dbg !13373
  %5 = load i32, i32* %roce_en4, align 8, !dbg !13373
  %cmp = icmp eq i32 %5, 0, !dbg !13374
  br i1 %cmp, label %if.then5, label %if.end, !dbg !13375

if.then5:                                         ; preds = %if.then
  %6 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %mdev.addr, align 8, !dbg !13376
  %call = call i32 @mlx5_nic_vport_update_roce_state(%struct.mlx5_core_dev* %6, i32 0) #9, !dbg !13377
  store i32 %call, i32* %err, align 4, !dbg !13378
  br label %if.end, !dbg !13379

if.end:                                           ; preds = %if.then5, %if.then
  %7 = load i32, i32* %err, align 4, !dbg !13380
  %tobool6 = icmp ne i32 %7, 0, !dbg !13380
  br i1 %tobool6, label %if.then7, label %if.end10, !dbg !13382

if.then7:                                         ; preds = %if.end
  %8 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %mdev.addr, align 8, !dbg !13383
  %roce8 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %8, i32 0, i32 24, !dbg !13384
  %roce_en9 = getelementptr inbounds %struct.anon.139, %struct.anon.139* %roce8, i32 0, i32 1, !dbg !13385
  %9 = load i32, i32* %roce_en9, align 8, !dbg !13386
  %inc = add i32 %9, 1, !dbg !13386
  store i32 %inc, i32* %roce_en9, align 8, !dbg !13386
  br label %if.end10, !dbg !13383

if.end10:                                         ; preds = %if.then7, %if.end
  br label %if.end11, !dbg !13387

if.end11:                                         ; preds = %if.end10, %entry
  call void @mutex_unlock(%struct.mutex* @mlx5_roce_en_lock) #9, !dbg !13388
  %10 = load i32, i32* %err, align 4, !dbg !13389
  ret i32 %10, !dbg !13390
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @mlx5_core_query_vport_counter(%struct.mlx5_core_dev* %dev, i8 zeroext %other_vport, i32 %vf, i8 zeroext %port_num, i8* %out) #0 !dbg !13391 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.mlx5_core_dev*, align 8
  %other_vport.addr = alloca i8, align 1
  %vf.addr = alloca i32, align 4
  %port_num.addr = alloca i8, align 1
  %out.addr = alloca i8*, align 8
  %in_sz = alloca i32, align 4
  %is_group_manager = alloca i32, align 4
  %in = alloca i8*, align 8
  %err = alloca i32, align 4
  %_v = alloca i32, align 4
  %_v216 = alloca i32, align 4
  %_v394 = alloca i32, align 4
  %_v624 = alloca i32, align 4
  %tmp = alloca i32, align 4
  store %struct.mlx5_core_dev* %dev, %struct.mlx5_core_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_core_dev** %dev.addr, metadata !13394, metadata !DIExpression()), !dbg !13395
  store i8 %other_vport, i8* %other_vport.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %other_vport.addr, metadata !13396, metadata !DIExpression()), !dbg !13397
  store i32 %vf, i32* %vf.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %vf.addr, metadata !13398, metadata !DIExpression()), !dbg !13399
  store i8 %port_num, i8* %port_num.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %port_num.addr, metadata !13400, metadata !DIExpression()), !dbg !13401
  store i8* %out, i8** %out.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %out.addr, metadata !13402, metadata !DIExpression()), !dbg !13403
  call void @llvm.dbg.declare(metadata i32* %in_sz, metadata !13404, metadata !DIExpression()), !dbg !13405
  store i32 32, i32* %in_sz, align 4, !dbg !13405
  call void @llvm.dbg.declare(metadata i32* %is_group_manager, metadata !13406, metadata !DIExpression()), !dbg !13407
  call void @llvm.dbg.declare(metadata i8** %in, metadata !13408, metadata !DIExpression()), !dbg !13409
  call void @llvm.dbg.declare(metadata i32* %err, metadata !13410, metadata !DIExpression()), !dbg !13411
  %0 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !13412
  %caps = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %0, i32 0, i32 9, !dbg !13412
  %hca_cur = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps, i32 0, i32 0, !dbg !13412
  %arrayidx = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur, i64 0, i64 0, !dbg !13412
  %arraydecay = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx, i64 0, i64 0, !dbg !13412
  %add.ptr = getelementptr i32, i32* %arraydecay, i64 13, !dbg !13412
  %1 = load i32, i32* %add.ptr, align 4, !dbg !13412
  %2 = call i1 @llvm.is.constant.i32(i32 %1), !dbg !13412
  br i1 %2, label %cond.true, label %cond.false, !dbg !13412

cond.true:                                        ; preds = %entry
  %3 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !13412
  %caps1 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %3, i32 0, i32 9, !dbg !13412
  %hca_cur2 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps1, i32 0, i32 0, !dbg !13412
  %arrayidx3 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur2, i64 0, i64 0, !dbg !13412
  %arraydecay4 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx3, i64 0, i64 0, !dbg !13412
  %add.ptr5 = getelementptr i32, i32* %arraydecay4, i64 13, !dbg !13412
  %4 = load i32, i32* %add.ptr5, align 4, !dbg !13412
  %and = and i32 %4, 255, !dbg !13412
  %shl = shl i32 %and, 24, !dbg !13412
  %5 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !13412
  %caps6 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %5, i32 0, i32 9, !dbg !13412
  %hca_cur7 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps6, i32 0, i32 0, !dbg !13412
  %arrayidx8 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur7, i64 0, i64 0, !dbg !13412
  %arraydecay9 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx8, i64 0, i64 0, !dbg !13412
  %add.ptr10 = getelementptr i32, i32* %arraydecay9, i64 13, !dbg !13412
  %6 = load i32, i32* %add.ptr10, align 4, !dbg !13412
  %and11 = and i32 %6, 65280, !dbg !13412
  %shl12 = shl i32 %and11, 8, !dbg !13412
  %or = or i32 %shl, %shl12, !dbg !13412
  %7 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !13412
  %caps13 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %7, i32 0, i32 9, !dbg !13412
  %hca_cur14 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps13, i32 0, i32 0, !dbg !13412
  %arrayidx15 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur14, i64 0, i64 0, !dbg !13412
  %arraydecay16 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx15, i64 0, i64 0, !dbg !13412
  %add.ptr17 = getelementptr i32, i32* %arraydecay16, i64 13, !dbg !13412
  %8 = load i32, i32* %add.ptr17, align 4, !dbg !13412
  %and18 = and i32 %8, 16711680, !dbg !13412
  %shr = lshr i32 %and18, 8, !dbg !13412
  %or19 = or i32 %or, %shr, !dbg !13412
  %9 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !13412
  %caps20 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %9, i32 0, i32 9, !dbg !13412
  %hca_cur21 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps20, i32 0, i32 0, !dbg !13412
  %arrayidx22 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur21, i64 0, i64 0, !dbg !13412
  %arraydecay23 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx22, i64 0, i64 0, !dbg !13412
  %add.ptr24 = getelementptr i32, i32* %arraydecay23, i64 13, !dbg !13412
  %10 = load i32, i32* %add.ptr24, align 4, !dbg !13412
  %and25 = and i32 %10, -16777216, !dbg !13412
  %shr26 = lshr i32 %and25, 24, !dbg !13412
  %or27 = or i32 %or19, %shr26, !dbg !13412
  br label %cond.end, !dbg !13412

cond.false:                                       ; preds = %entry
  %11 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !13412
  %caps28 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %11, i32 0, i32 9, !dbg !13412
  %hca_cur29 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps28, i32 0, i32 0, !dbg !13412
  %arrayidx30 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur29, i64 0, i64 0, !dbg !13412
  %arraydecay31 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx30, i64 0, i64 0, !dbg !13412
  %add.ptr32 = getelementptr i32, i32* %arraydecay31, i64 13, !dbg !13412
  %12 = load i32, i32* %add.ptr32, align 4, !dbg !13412
  %call = call i32 @__fswab32(i32 %12) #8, !dbg !13412
  br label %cond.end, !dbg !13412

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %or27, %cond.true ], [ %call, %cond.false ], !dbg !13412
  %shr33 = lshr i32 %cond, 31, !dbg !13412
  %and34 = and i32 %shr33, 1, !dbg !13412
  store i32 %and34, i32* %is_group_manager, align 4, !dbg !13413
  %13 = load i32, i32* %in_sz, align 4, !dbg !13414
  %conv = sext i32 %13 to i64, !dbg !13414
  %call35 = call i8* @kvzalloc(i64 %conv, i32 3264) #9, !dbg !13415
  store i8* %call35, i8** %in, align 8, !dbg !13416
  %14 = load i8*, i8** %in, align 8, !dbg !13417
  %tobool = icmp ne i8* %14, null, !dbg !13417
  br i1 %tobool, label %if.end, label %if.then, !dbg !13419

if.then:                                          ; preds = %cond.end
  store i32 -12, i32* %err, align 4, !dbg !13420
  %15 = load i32, i32* %err, align 4, !dbg !13422
  store i32 %15, i32* %retval, align 4, !dbg !13423
  br label %return, !dbg !13423

if.end:                                           ; preds = %cond.end
  br label %do.body, !dbg !13424

do.body:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %_v, metadata !13425, metadata !DIExpression()), !dbg !13427
  store i32 1904, i32* %_v, align 4, !dbg !13427
  br label %do.body36, !dbg !13427

do.body36:                                        ; preds = %do.body
  br label %do.end, !dbg !13428

do.end:                                           ; preds = %do.body36
  %16 = load i8*, i8** %in, align 8, !dbg !13427
  %17 = bitcast i8* %16 to i32*, !dbg !13427
  %add.ptr37 = getelementptr i32, i32* %17, i64 0, !dbg !13427
  %18 = load i32, i32* %add.ptr37, align 4, !dbg !13427
  %19 = call i1 @llvm.is.constant.i32(i32 %18), !dbg !13427
  br i1 %19, label %cond.true38, label %cond.false54, !dbg !13427

cond.true38:                                      ; preds = %do.end
  %20 = load i8*, i8** %in, align 8, !dbg !13427
  %21 = bitcast i8* %20 to i32*, !dbg !13427
  %add.ptr39 = getelementptr i32, i32* %21, i64 0, !dbg !13427
  %22 = load i32, i32* %add.ptr39, align 4, !dbg !13427
  %and40 = and i32 %22, 255, !dbg !13427
  %shl41 = shl i32 %and40, 24, !dbg !13427
  %23 = load i8*, i8** %in, align 8, !dbg !13427
  %24 = bitcast i8* %23 to i32*, !dbg !13427
  %add.ptr42 = getelementptr i32, i32* %24, i64 0, !dbg !13427
  %25 = load i32, i32* %add.ptr42, align 4, !dbg !13427
  %and43 = and i32 %25, 65280, !dbg !13427
  %shl44 = shl i32 %and43, 8, !dbg !13427
  %or45 = or i32 %shl41, %shl44, !dbg !13427
  %26 = load i8*, i8** %in, align 8, !dbg !13427
  %27 = bitcast i8* %26 to i32*, !dbg !13427
  %add.ptr46 = getelementptr i32, i32* %27, i64 0, !dbg !13427
  %28 = load i32, i32* %add.ptr46, align 4, !dbg !13427
  %and47 = and i32 %28, 16711680, !dbg !13427
  %shr48 = lshr i32 %and47, 8, !dbg !13427
  %or49 = or i32 %or45, %shr48, !dbg !13427
  %29 = load i8*, i8** %in, align 8, !dbg !13427
  %30 = bitcast i8* %29 to i32*, !dbg !13427
  %add.ptr50 = getelementptr i32, i32* %30, i64 0, !dbg !13427
  %31 = load i32, i32* %add.ptr50, align 4, !dbg !13427
  %and51 = and i32 %31, -16777216, !dbg !13427
  %shr52 = lshr i32 %and51, 24, !dbg !13427
  %or53 = or i32 %or49, %shr52, !dbg !13427
  br label %cond.end57, !dbg !13427

cond.false54:                                     ; preds = %do.end
  %32 = load i8*, i8** %in, align 8, !dbg !13427
  %33 = bitcast i8* %32 to i32*, !dbg !13427
  %add.ptr55 = getelementptr i32, i32* %33, i64 0, !dbg !13427
  %34 = load i32, i32* %add.ptr55, align 4, !dbg !13427
  %call56 = call i32 @__fswab32(i32 %34) #8, !dbg !13427
  br label %cond.end57, !dbg !13427

cond.end57:                                       ; preds = %cond.false54, %cond.true38
  %cond58 = phi i32 [ %or53, %cond.true38 ], [ %call56, %cond.false54 ], !dbg !13427
  %and59 = and i32 %cond58, 65535, !dbg !13427
  %35 = load i32, i32* %_v, align 4, !dbg !13427
  %and60 = and i32 %35, 65535, !dbg !13427
  %shl61 = shl i32 %and60, 16, !dbg !13427
  %or62 = or i32 %and59, %shl61, !dbg !13427
  %36 = call i1 @llvm.is.constant.i32(i32 %or62), !dbg !13427
  br i1 %36, label %cond.true63, label %cond.false179, !dbg !13427

cond.true63:                                      ; preds = %cond.end57
  %37 = load i8*, i8** %in, align 8, !dbg !13427
  %38 = bitcast i8* %37 to i32*, !dbg !13427
  %add.ptr64 = getelementptr i32, i32* %38, i64 0, !dbg !13427
  %39 = load i32, i32* %add.ptr64, align 4, !dbg !13427
  %40 = call i1 @llvm.is.constant.i32(i32 %39), !dbg !13427
  br i1 %40, label %cond.true65, label %cond.false81, !dbg !13427

cond.true65:                                      ; preds = %cond.true63
  %41 = load i8*, i8** %in, align 8, !dbg !13427
  %42 = bitcast i8* %41 to i32*, !dbg !13427
  %add.ptr66 = getelementptr i32, i32* %42, i64 0, !dbg !13427
  %43 = load i32, i32* %add.ptr66, align 4, !dbg !13427
  %and67 = and i32 %43, 255, !dbg !13427
  %shl68 = shl i32 %and67, 24, !dbg !13427
  %44 = load i8*, i8** %in, align 8, !dbg !13427
  %45 = bitcast i8* %44 to i32*, !dbg !13427
  %add.ptr69 = getelementptr i32, i32* %45, i64 0, !dbg !13427
  %46 = load i32, i32* %add.ptr69, align 4, !dbg !13427
  %and70 = and i32 %46, 65280, !dbg !13427
  %shl71 = shl i32 %and70, 8, !dbg !13427
  %or72 = or i32 %shl68, %shl71, !dbg !13427
  %47 = load i8*, i8** %in, align 8, !dbg !13427
  %48 = bitcast i8* %47 to i32*, !dbg !13427
  %add.ptr73 = getelementptr i32, i32* %48, i64 0, !dbg !13427
  %49 = load i32, i32* %add.ptr73, align 4, !dbg !13427
  %and74 = and i32 %49, 16711680, !dbg !13427
  %shr75 = lshr i32 %and74, 8, !dbg !13427
  %or76 = or i32 %or72, %shr75, !dbg !13427
  %50 = load i8*, i8** %in, align 8, !dbg !13427
  %51 = bitcast i8* %50 to i32*, !dbg !13427
  %add.ptr77 = getelementptr i32, i32* %51, i64 0, !dbg !13427
  %52 = load i32, i32* %add.ptr77, align 4, !dbg !13427
  %and78 = and i32 %52, -16777216, !dbg !13427
  %shr79 = lshr i32 %and78, 24, !dbg !13427
  %or80 = or i32 %or76, %shr79, !dbg !13427
  br label %cond.end84, !dbg !13427

cond.false81:                                     ; preds = %cond.true63
  %53 = load i8*, i8** %in, align 8, !dbg !13427
  %54 = bitcast i8* %53 to i32*, !dbg !13427
  %add.ptr82 = getelementptr i32, i32* %54, i64 0, !dbg !13427
  %55 = load i32, i32* %add.ptr82, align 4, !dbg !13427
  %call83 = call i32 @__fswab32(i32 %55) #8, !dbg !13427
  br label %cond.end84, !dbg !13427

cond.end84:                                       ; preds = %cond.false81, %cond.true65
  %cond85 = phi i32 [ %or80, %cond.true65 ], [ %call83, %cond.false81 ], !dbg !13427
  %and86 = and i32 %cond85, 65535, !dbg !13427
  %56 = load i32, i32* %_v, align 4, !dbg !13427
  %and87 = and i32 %56, 65535, !dbg !13427
  %shl88 = shl i32 %and87, 16, !dbg !13427
  %or89 = or i32 %and86, %shl88, !dbg !13427
  %and90 = and i32 %or89, 255, !dbg !13427
  %shl91 = shl i32 %and90, 24, !dbg !13427
  %57 = load i8*, i8** %in, align 8, !dbg !13427
  %58 = bitcast i8* %57 to i32*, !dbg !13427
  %add.ptr92 = getelementptr i32, i32* %58, i64 0, !dbg !13427
  %59 = load i32, i32* %add.ptr92, align 4, !dbg !13427
  %60 = call i1 @llvm.is.constant.i32(i32 %59), !dbg !13427
  br i1 %60, label %cond.true93, label %cond.false109, !dbg !13427

cond.true93:                                      ; preds = %cond.end84
  %61 = load i8*, i8** %in, align 8, !dbg !13427
  %62 = bitcast i8* %61 to i32*, !dbg !13427
  %add.ptr94 = getelementptr i32, i32* %62, i64 0, !dbg !13427
  %63 = load i32, i32* %add.ptr94, align 4, !dbg !13427
  %and95 = and i32 %63, 255, !dbg !13427
  %shl96 = shl i32 %and95, 24, !dbg !13427
  %64 = load i8*, i8** %in, align 8, !dbg !13427
  %65 = bitcast i8* %64 to i32*, !dbg !13427
  %add.ptr97 = getelementptr i32, i32* %65, i64 0, !dbg !13427
  %66 = load i32, i32* %add.ptr97, align 4, !dbg !13427
  %and98 = and i32 %66, 65280, !dbg !13427
  %shl99 = shl i32 %and98, 8, !dbg !13427
  %or100 = or i32 %shl96, %shl99, !dbg !13427
  %67 = load i8*, i8** %in, align 8, !dbg !13427
  %68 = bitcast i8* %67 to i32*, !dbg !13427
  %add.ptr101 = getelementptr i32, i32* %68, i64 0, !dbg !13427
  %69 = load i32, i32* %add.ptr101, align 4, !dbg !13427
  %and102 = and i32 %69, 16711680, !dbg !13427
  %shr103 = lshr i32 %and102, 8, !dbg !13427
  %or104 = or i32 %or100, %shr103, !dbg !13427
  %70 = load i8*, i8** %in, align 8, !dbg !13427
  %71 = bitcast i8* %70 to i32*, !dbg !13427
  %add.ptr105 = getelementptr i32, i32* %71, i64 0, !dbg !13427
  %72 = load i32, i32* %add.ptr105, align 4, !dbg !13427
  %and106 = and i32 %72, -16777216, !dbg !13427
  %shr107 = lshr i32 %and106, 24, !dbg !13427
  %or108 = or i32 %or104, %shr107, !dbg !13427
  br label %cond.end112, !dbg !13427

cond.false109:                                    ; preds = %cond.end84
  %73 = load i8*, i8** %in, align 8, !dbg !13427
  %74 = bitcast i8* %73 to i32*, !dbg !13427
  %add.ptr110 = getelementptr i32, i32* %74, i64 0, !dbg !13427
  %75 = load i32, i32* %add.ptr110, align 4, !dbg !13427
  %call111 = call i32 @__fswab32(i32 %75) #8, !dbg !13427
  br label %cond.end112, !dbg !13427

cond.end112:                                      ; preds = %cond.false109, %cond.true93
  %cond113 = phi i32 [ %or108, %cond.true93 ], [ %call111, %cond.false109 ], !dbg !13427
  %and114 = and i32 %cond113, 65535, !dbg !13427
  %76 = load i32, i32* %_v, align 4, !dbg !13427
  %and115 = and i32 %76, 65535, !dbg !13427
  %shl116 = shl i32 %and115, 16, !dbg !13427
  %or117 = or i32 %and114, %shl116, !dbg !13427
  %and118 = and i32 %or117, 65280, !dbg !13427
  %shl119 = shl i32 %and118, 8, !dbg !13427
  %or120 = or i32 %shl91, %shl119, !dbg !13427
  %77 = load i8*, i8** %in, align 8, !dbg !13427
  %78 = bitcast i8* %77 to i32*, !dbg !13427
  %add.ptr121 = getelementptr i32, i32* %78, i64 0, !dbg !13427
  %79 = load i32, i32* %add.ptr121, align 4, !dbg !13427
  %80 = call i1 @llvm.is.constant.i32(i32 %79), !dbg !13427
  br i1 %80, label %cond.true122, label %cond.false138, !dbg !13427

cond.true122:                                     ; preds = %cond.end112
  %81 = load i8*, i8** %in, align 8, !dbg !13427
  %82 = bitcast i8* %81 to i32*, !dbg !13427
  %add.ptr123 = getelementptr i32, i32* %82, i64 0, !dbg !13427
  %83 = load i32, i32* %add.ptr123, align 4, !dbg !13427
  %and124 = and i32 %83, 255, !dbg !13427
  %shl125 = shl i32 %and124, 24, !dbg !13427
  %84 = load i8*, i8** %in, align 8, !dbg !13427
  %85 = bitcast i8* %84 to i32*, !dbg !13427
  %add.ptr126 = getelementptr i32, i32* %85, i64 0, !dbg !13427
  %86 = load i32, i32* %add.ptr126, align 4, !dbg !13427
  %and127 = and i32 %86, 65280, !dbg !13427
  %shl128 = shl i32 %and127, 8, !dbg !13427
  %or129 = or i32 %shl125, %shl128, !dbg !13427
  %87 = load i8*, i8** %in, align 8, !dbg !13427
  %88 = bitcast i8* %87 to i32*, !dbg !13427
  %add.ptr130 = getelementptr i32, i32* %88, i64 0, !dbg !13427
  %89 = load i32, i32* %add.ptr130, align 4, !dbg !13427
  %and131 = and i32 %89, 16711680, !dbg !13427
  %shr132 = lshr i32 %and131, 8, !dbg !13427
  %or133 = or i32 %or129, %shr132, !dbg !13427
  %90 = load i8*, i8** %in, align 8, !dbg !13427
  %91 = bitcast i8* %90 to i32*, !dbg !13427
  %add.ptr134 = getelementptr i32, i32* %91, i64 0, !dbg !13427
  %92 = load i32, i32* %add.ptr134, align 4, !dbg !13427
  %and135 = and i32 %92, -16777216, !dbg !13427
  %shr136 = lshr i32 %and135, 24, !dbg !13427
  %or137 = or i32 %or133, %shr136, !dbg !13427
  br label %cond.end141, !dbg !13427

cond.false138:                                    ; preds = %cond.end112
  %93 = load i8*, i8** %in, align 8, !dbg !13427
  %94 = bitcast i8* %93 to i32*, !dbg !13427
  %add.ptr139 = getelementptr i32, i32* %94, i64 0, !dbg !13427
  %95 = load i32, i32* %add.ptr139, align 4, !dbg !13427
  %call140 = call i32 @__fswab32(i32 %95) #8, !dbg !13427
  br label %cond.end141, !dbg !13427

cond.end141:                                      ; preds = %cond.false138, %cond.true122
  %cond142 = phi i32 [ %or137, %cond.true122 ], [ %call140, %cond.false138 ], !dbg !13427
  %and143 = and i32 %cond142, 65535, !dbg !13427
  %96 = load i32, i32* %_v, align 4, !dbg !13427
  %and144 = and i32 %96, 65535, !dbg !13427
  %shl145 = shl i32 %and144, 16, !dbg !13427
  %or146 = or i32 %and143, %shl145, !dbg !13427
  %and147 = and i32 %or146, 16711680, !dbg !13427
  %shr148 = lshr i32 %and147, 8, !dbg !13427
  %or149 = or i32 %or120, %shr148, !dbg !13427
  %97 = load i8*, i8** %in, align 8, !dbg !13427
  %98 = bitcast i8* %97 to i32*, !dbg !13427
  %add.ptr150 = getelementptr i32, i32* %98, i64 0, !dbg !13427
  %99 = load i32, i32* %add.ptr150, align 4, !dbg !13427
  %100 = call i1 @llvm.is.constant.i32(i32 %99), !dbg !13427
  br i1 %100, label %cond.true151, label %cond.false167, !dbg !13427

cond.true151:                                     ; preds = %cond.end141
  %101 = load i8*, i8** %in, align 8, !dbg !13427
  %102 = bitcast i8* %101 to i32*, !dbg !13427
  %add.ptr152 = getelementptr i32, i32* %102, i64 0, !dbg !13427
  %103 = load i32, i32* %add.ptr152, align 4, !dbg !13427
  %and153 = and i32 %103, 255, !dbg !13427
  %shl154 = shl i32 %and153, 24, !dbg !13427
  %104 = load i8*, i8** %in, align 8, !dbg !13427
  %105 = bitcast i8* %104 to i32*, !dbg !13427
  %add.ptr155 = getelementptr i32, i32* %105, i64 0, !dbg !13427
  %106 = load i32, i32* %add.ptr155, align 4, !dbg !13427
  %and156 = and i32 %106, 65280, !dbg !13427
  %shl157 = shl i32 %and156, 8, !dbg !13427
  %or158 = or i32 %shl154, %shl157, !dbg !13427
  %107 = load i8*, i8** %in, align 8, !dbg !13427
  %108 = bitcast i8* %107 to i32*, !dbg !13427
  %add.ptr159 = getelementptr i32, i32* %108, i64 0, !dbg !13427
  %109 = load i32, i32* %add.ptr159, align 4, !dbg !13427
  %and160 = and i32 %109, 16711680, !dbg !13427
  %shr161 = lshr i32 %and160, 8, !dbg !13427
  %or162 = or i32 %or158, %shr161, !dbg !13427
  %110 = load i8*, i8** %in, align 8, !dbg !13427
  %111 = bitcast i8* %110 to i32*, !dbg !13427
  %add.ptr163 = getelementptr i32, i32* %111, i64 0, !dbg !13427
  %112 = load i32, i32* %add.ptr163, align 4, !dbg !13427
  %and164 = and i32 %112, -16777216, !dbg !13427
  %shr165 = lshr i32 %and164, 24, !dbg !13427
  %or166 = or i32 %or162, %shr165, !dbg !13427
  br label %cond.end170, !dbg !13427

cond.false167:                                    ; preds = %cond.end141
  %113 = load i8*, i8** %in, align 8, !dbg !13427
  %114 = bitcast i8* %113 to i32*, !dbg !13427
  %add.ptr168 = getelementptr i32, i32* %114, i64 0, !dbg !13427
  %115 = load i32, i32* %add.ptr168, align 4, !dbg !13427
  %call169 = call i32 @__fswab32(i32 %115) #8, !dbg !13427
  br label %cond.end170, !dbg !13427

cond.end170:                                      ; preds = %cond.false167, %cond.true151
  %cond171 = phi i32 [ %or166, %cond.true151 ], [ %call169, %cond.false167 ], !dbg !13427
  %and172 = and i32 %cond171, 65535, !dbg !13427
  %116 = load i32, i32* %_v, align 4, !dbg !13427
  %and173 = and i32 %116, 65535, !dbg !13427
  %shl174 = shl i32 %and173, 16, !dbg !13427
  %or175 = or i32 %and172, %shl174, !dbg !13427
  %and176 = and i32 %or175, -16777216, !dbg !13427
  %shr177 = lshr i32 %and176, 24, !dbg !13427
  %or178 = or i32 %or149, %shr177, !dbg !13427
  br label %cond.end207, !dbg !13427

cond.false179:                                    ; preds = %cond.end57
  %117 = load i8*, i8** %in, align 8, !dbg !13427
  %118 = bitcast i8* %117 to i32*, !dbg !13427
  %add.ptr180 = getelementptr i32, i32* %118, i64 0, !dbg !13427
  %119 = load i32, i32* %add.ptr180, align 4, !dbg !13427
  %120 = call i1 @llvm.is.constant.i32(i32 %119), !dbg !13427
  br i1 %120, label %cond.true181, label %cond.false197, !dbg !13427

cond.true181:                                     ; preds = %cond.false179
  %121 = load i8*, i8** %in, align 8, !dbg !13427
  %122 = bitcast i8* %121 to i32*, !dbg !13427
  %add.ptr182 = getelementptr i32, i32* %122, i64 0, !dbg !13427
  %123 = load i32, i32* %add.ptr182, align 4, !dbg !13427
  %and183 = and i32 %123, 255, !dbg !13427
  %shl184 = shl i32 %and183, 24, !dbg !13427
  %124 = load i8*, i8** %in, align 8, !dbg !13427
  %125 = bitcast i8* %124 to i32*, !dbg !13427
  %add.ptr185 = getelementptr i32, i32* %125, i64 0, !dbg !13427
  %126 = load i32, i32* %add.ptr185, align 4, !dbg !13427
  %and186 = and i32 %126, 65280, !dbg !13427
  %shl187 = shl i32 %and186, 8, !dbg !13427
  %or188 = or i32 %shl184, %shl187, !dbg !13427
  %127 = load i8*, i8** %in, align 8, !dbg !13427
  %128 = bitcast i8* %127 to i32*, !dbg !13427
  %add.ptr189 = getelementptr i32, i32* %128, i64 0, !dbg !13427
  %129 = load i32, i32* %add.ptr189, align 4, !dbg !13427
  %and190 = and i32 %129, 16711680, !dbg !13427
  %shr191 = lshr i32 %and190, 8, !dbg !13427
  %or192 = or i32 %or188, %shr191, !dbg !13427
  %130 = load i8*, i8** %in, align 8, !dbg !13427
  %131 = bitcast i8* %130 to i32*, !dbg !13427
  %add.ptr193 = getelementptr i32, i32* %131, i64 0, !dbg !13427
  %132 = load i32, i32* %add.ptr193, align 4, !dbg !13427
  %and194 = and i32 %132, -16777216, !dbg !13427
  %shr195 = lshr i32 %and194, 24, !dbg !13427
  %or196 = or i32 %or192, %shr195, !dbg !13427
  br label %cond.end200, !dbg !13427

cond.false197:                                    ; preds = %cond.false179
  %133 = load i8*, i8** %in, align 8, !dbg !13427
  %134 = bitcast i8* %133 to i32*, !dbg !13427
  %add.ptr198 = getelementptr i32, i32* %134, i64 0, !dbg !13427
  %135 = load i32, i32* %add.ptr198, align 4, !dbg !13427
  %call199 = call i32 @__fswab32(i32 %135) #8, !dbg !13427
  br label %cond.end200, !dbg !13427

cond.end200:                                      ; preds = %cond.false197, %cond.true181
  %cond201 = phi i32 [ %or196, %cond.true181 ], [ %call199, %cond.false197 ], !dbg !13427
  %and202 = and i32 %cond201, 65535, !dbg !13427
  %136 = load i32, i32* %_v, align 4, !dbg !13427
  %and203 = and i32 %136, 65535, !dbg !13427
  %shl204 = shl i32 %and203, 16, !dbg !13427
  %or205 = or i32 %and202, %shl204, !dbg !13427
  %call206 = call i32 @__fswab32(i32 %or205) #8, !dbg !13427
  br label %cond.end207, !dbg !13427

cond.end207:                                      ; preds = %cond.end200, %cond.end170
  %cond208 = phi i32 [ %or178, %cond.end170 ], [ %call206, %cond.end200 ], !dbg !13427
  %137 = load i8*, i8** %in, align 8, !dbg !13427
  %138 = bitcast i8* %137 to i32*, !dbg !13427
  %add.ptr209 = getelementptr i32, i32* %138, i64 0, !dbg !13427
  store i32 %cond208, i32* %add.ptr209, align 4, !dbg !13427
  br label %do.end210, !dbg !13427

do.end210:                                        ; preds = %cond.end207
  %139 = load i8, i8* %other_vport.addr, align 1, !dbg !13430
  %tobool211 = icmp ne i8 %139, 0, !dbg !13430
  br i1 %tobool211, label %if.then212, label %if.end572, !dbg !13432

if.then212:                                       ; preds = %do.end210
  %140 = load i32, i32* %is_group_manager, align 4, !dbg !13433
  %tobool213 = icmp ne i32 %140, 0, !dbg !13433
  br i1 %tobool213, label %if.then214, label %if.else, !dbg !13436

if.then214:                                       ; preds = %if.then212
  br label %do.body215, !dbg !13437

do.body215:                                       ; preds = %if.then214
  call void @llvm.dbg.declare(metadata i32* %_v216, metadata !13439, metadata !DIExpression()), !dbg !13441
  store i32 1, i32* %_v216, align 4, !dbg !13441
  br label %do.body217, !dbg !13441

do.body217:                                       ; preds = %do.body215
  br label %do.end218, !dbg !13442

do.end218:                                        ; preds = %do.body217
  %141 = load i8*, i8** %in, align 8, !dbg !13441
  %142 = bitcast i8* %141 to i32*, !dbg !13441
  %add.ptr219 = getelementptr i32, i32* %142, i64 2, !dbg !13441
  %143 = load i32, i32* %add.ptr219, align 4, !dbg !13441
  %144 = call i1 @llvm.is.constant.i32(i32 %143), !dbg !13441
  br i1 %144, label %cond.true220, label %cond.false236, !dbg !13441

cond.true220:                                     ; preds = %do.end218
  %145 = load i8*, i8** %in, align 8, !dbg !13441
  %146 = bitcast i8* %145 to i32*, !dbg !13441
  %add.ptr221 = getelementptr i32, i32* %146, i64 2, !dbg !13441
  %147 = load i32, i32* %add.ptr221, align 4, !dbg !13441
  %and222 = and i32 %147, 255, !dbg !13441
  %shl223 = shl i32 %and222, 24, !dbg !13441
  %148 = load i8*, i8** %in, align 8, !dbg !13441
  %149 = bitcast i8* %148 to i32*, !dbg !13441
  %add.ptr224 = getelementptr i32, i32* %149, i64 2, !dbg !13441
  %150 = load i32, i32* %add.ptr224, align 4, !dbg !13441
  %and225 = and i32 %150, 65280, !dbg !13441
  %shl226 = shl i32 %and225, 8, !dbg !13441
  %or227 = or i32 %shl223, %shl226, !dbg !13441
  %151 = load i8*, i8** %in, align 8, !dbg !13441
  %152 = bitcast i8* %151 to i32*, !dbg !13441
  %add.ptr228 = getelementptr i32, i32* %152, i64 2, !dbg !13441
  %153 = load i32, i32* %add.ptr228, align 4, !dbg !13441
  %and229 = and i32 %153, 16711680, !dbg !13441
  %shr230 = lshr i32 %and229, 8, !dbg !13441
  %or231 = or i32 %or227, %shr230, !dbg !13441
  %154 = load i8*, i8** %in, align 8, !dbg !13441
  %155 = bitcast i8* %154 to i32*, !dbg !13441
  %add.ptr232 = getelementptr i32, i32* %155, i64 2, !dbg !13441
  %156 = load i32, i32* %add.ptr232, align 4, !dbg !13441
  %and233 = and i32 %156, -16777216, !dbg !13441
  %shr234 = lshr i32 %and233, 24, !dbg !13441
  %or235 = or i32 %or231, %shr234, !dbg !13441
  br label %cond.end239, !dbg !13441

cond.false236:                                    ; preds = %do.end218
  %157 = load i8*, i8** %in, align 8, !dbg !13441
  %158 = bitcast i8* %157 to i32*, !dbg !13441
  %add.ptr237 = getelementptr i32, i32* %158, i64 2, !dbg !13441
  %159 = load i32, i32* %add.ptr237, align 4, !dbg !13441
  %call238 = call i32 @__fswab32(i32 %159) #8, !dbg !13441
  br label %cond.end239, !dbg !13441

cond.end239:                                      ; preds = %cond.false236, %cond.true220
  %cond240 = phi i32 [ %or235, %cond.true220 ], [ %call238, %cond.false236 ], !dbg !13441
  %and241 = and i32 %cond240, 2147483647, !dbg !13441
  %160 = load i32, i32* %_v216, align 4, !dbg !13441
  %and242 = and i32 %160, 1, !dbg !13441
  %shl243 = shl i32 %and242, 31, !dbg !13441
  %or244 = or i32 %and241, %shl243, !dbg !13441
  %161 = call i1 @llvm.is.constant.i32(i32 %or244), !dbg !13441
  br i1 %161, label %cond.true245, label %cond.false361, !dbg !13441

cond.true245:                                     ; preds = %cond.end239
  %162 = load i8*, i8** %in, align 8, !dbg !13441
  %163 = bitcast i8* %162 to i32*, !dbg !13441
  %add.ptr246 = getelementptr i32, i32* %163, i64 2, !dbg !13441
  %164 = load i32, i32* %add.ptr246, align 4, !dbg !13441
  %165 = call i1 @llvm.is.constant.i32(i32 %164), !dbg !13441
  br i1 %165, label %cond.true247, label %cond.false263, !dbg !13441

cond.true247:                                     ; preds = %cond.true245
  %166 = load i8*, i8** %in, align 8, !dbg !13441
  %167 = bitcast i8* %166 to i32*, !dbg !13441
  %add.ptr248 = getelementptr i32, i32* %167, i64 2, !dbg !13441
  %168 = load i32, i32* %add.ptr248, align 4, !dbg !13441
  %and249 = and i32 %168, 255, !dbg !13441
  %shl250 = shl i32 %and249, 24, !dbg !13441
  %169 = load i8*, i8** %in, align 8, !dbg !13441
  %170 = bitcast i8* %169 to i32*, !dbg !13441
  %add.ptr251 = getelementptr i32, i32* %170, i64 2, !dbg !13441
  %171 = load i32, i32* %add.ptr251, align 4, !dbg !13441
  %and252 = and i32 %171, 65280, !dbg !13441
  %shl253 = shl i32 %and252, 8, !dbg !13441
  %or254 = or i32 %shl250, %shl253, !dbg !13441
  %172 = load i8*, i8** %in, align 8, !dbg !13441
  %173 = bitcast i8* %172 to i32*, !dbg !13441
  %add.ptr255 = getelementptr i32, i32* %173, i64 2, !dbg !13441
  %174 = load i32, i32* %add.ptr255, align 4, !dbg !13441
  %and256 = and i32 %174, 16711680, !dbg !13441
  %shr257 = lshr i32 %and256, 8, !dbg !13441
  %or258 = or i32 %or254, %shr257, !dbg !13441
  %175 = load i8*, i8** %in, align 8, !dbg !13441
  %176 = bitcast i8* %175 to i32*, !dbg !13441
  %add.ptr259 = getelementptr i32, i32* %176, i64 2, !dbg !13441
  %177 = load i32, i32* %add.ptr259, align 4, !dbg !13441
  %and260 = and i32 %177, -16777216, !dbg !13441
  %shr261 = lshr i32 %and260, 24, !dbg !13441
  %or262 = or i32 %or258, %shr261, !dbg !13441
  br label %cond.end266, !dbg !13441

cond.false263:                                    ; preds = %cond.true245
  %178 = load i8*, i8** %in, align 8, !dbg !13441
  %179 = bitcast i8* %178 to i32*, !dbg !13441
  %add.ptr264 = getelementptr i32, i32* %179, i64 2, !dbg !13441
  %180 = load i32, i32* %add.ptr264, align 4, !dbg !13441
  %call265 = call i32 @__fswab32(i32 %180) #8, !dbg !13441
  br label %cond.end266, !dbg !13441

cond.end266:                                      ; preds = %cond.false263, %cond.true247
  %cond267 = phi i32 [ %or262, %cond.true247 ], [ %call265, %cond.false263 ], !dbg !13441
  %and268 = and i32 %cond267, 2147483647, !dbg !13441
  %181 = load i32, i32* %_v216, align 4, !dbg !13441
  %and269 = and i32 %181, 1, !dbg !13441
  %shl270 = shl i32 %and269, 31, !dbg !13441
  %or271 = or i32 %and268, %shl270, !dbg !13441
  %and272 = and i32 %or271, 255, !dbg !13441
  %shl273 = shl i32 %and272, 24, !dbg !13441
  %182 = load i8*, i8** %in, align 8, !dbg !13441
  %183 = bitcast i8* %182 to i32*, !dbg !13441
  %add.ptr274 = getelementptr i32, i32* %183, i64 2, !dbg !13441
  %184 = load i32, i32* %add.ptr274, align 4, !dbg !13441
  %185 = call i1 @llvm.is.constant.i32(i32 %184), !dbg !13441
  br i1 %185, label %cond.true275, label %cond.false291, !dbg !13441

cond.true275:                                     ; preds = %cond.end266
  %186 = load i8*, i8** %in, align 8, !dbg !13441
  %187 = bitcast i8* %186 to i32*, !dbg !13441
  %add.ptr276 = getelementptr i32, i32* %187, i64 2, !dbg !13441
  %188 = load i32, i32* %add.ptr276, align 4, !dbg !13441
  %and277 = and i32 %188, 255, !dbg !13441
  %shl278 = shl i32 %and277, 24, !dbg !13441
  %189 = load i8*, i8** %in, align 8, !dbg !13441
  %190 = bitcast i8* %189 to i32*, !dbg !13441
  %add.ptr279 = getelementptr i32, i32* %190, i64 2, !dbg !13441
  %191 = load i32, i32* %add.ptr279, align 4, !dbg !13441
  %and280 = and i32 %191, 65280, !dbg !13441
  %shl281 = shl i32 %and280, 8, !dbg !13441
  %or282 = or i32 %shl278, %shl281, !dbg !13441
  %192 = load i8*, i8** %in, align 8, !dbg !13441
  %193 = bitcast i8* %192 to i32*, !dbg !13441
  %add.ptr283 = getelementptr i32, i32* %193, i64 2, !dbg !13441
  %194 = load i32, i32* %add.ptr283, align 4, !dbg !13441
  %and284 = and i32 %194, 16711680, !dbg !13441
  %shr285 = lshr i32 %and284, 8, !dbg !13441
  %or286 = or i32 %or282, %shr285, !dbg !13441
  %195 = load i8*, i8** %in, align 8, !dbg !13441
  %196 = bitcast i8* %195 to i32*, !dbg !13441
  %add.ptr287 = getelementptr i32, i32* %196, i64 2, !dbg !13441
  %197 = load i32, i32* %add.ptr287, align 4, !dbg !13441
  %and288 = and i32 %197, -16777216, !dbg !13441
  %shr289 = lshr i32 %and288, 24, !dbg !13441
  %or290 = or i32 %or286, %shr289, !dbg !13441
  br label %cond.end294, !dbg !13441

cond.false291:                                    ; preds = %cond.end266
  %198 = load i8*, i8** %in, align 8, !dbg !13441
  %199 = bitcast i8* %198 to i32*, !dbg !13441
  %add.ptr292 = getelementptr i32, i32* %199, i64 2, !dbg !13441
  %200 = load i32, i32* %add.ptr292, align 4, !dbg !13441
  %call293 = call i32 @__fswab32(i32 %200) #8, !dbg !13441
  br label %cond.end294, !dbg !13441

cond.end294:                                      ; preds = %cond.false291, %cond.true275
  %cond295 = phi i32 [ %or290, %cond.true275 ], [ %call293, %cond.false291 ], !dbg !13441
  %and296 = and i32 %cond295, 2147483647, !dbg !13441
  %201 = load i32, i32* %_v216, align 4, !dbg !13441
  %and297 = and i32 %201, 1, !dbg !13441
  %shl298 = shl i32 %and297, 31, !dbg !13441
  %or299 = or i32 %and296, %shl298, !dbg !13441
  %and300 = and i32 %or299, 65280, !dbg !13441
  %shl301 = shl i32 %and300, 8, !dbg !13441
  %or302 = or i32 %shl273, %shl301, !dbg !13441
  %202 = load i8*, i8** %in, align 8, !dbg !13441
  %203 = bitcast i8* %202 to i32*, !dbg !13441
  %add.ptr303 = getelementptr i32, i32* %203, i64 2, !dbg !13441
  %204 = load i32, i32* %add.ptr303, align 4, !dbg !13441
  %205 = call i1 @llvm.is.constant.i32(i32 %204), !dbg !13441
  br i1 %205, label %cond.true304, label %cond.false320, !dbg !13441

cond.true304:                                     ; preds = %cond.end294
  %206 = load i8*, i8** %in, align 8, !dbg !13441
  %207 = bitcast i8* %206 to i32*, !dbg !13441
  %add.ptr305 = getelementptr i32, i32* %207, i64 2, !dbg !13441
  %208 = load i32, i32* %add.ptr305, align 4, !dbg !13441
  %and306 = and i32 %208, 255, !dbg !13441
  %shl307 = shl i32 %and306, 24, !dbg !13441
  %209 = load i8*, i8** %in, align 8, !dbg !13441
  %210 = bitcast i8* %209 to i32*, !dbg !13441
  %add.ptr308 = getelementptr i32, i32* %210, i64 2, !dbg !13441
  %211 = load i32, i32* %add.ptr308, align 4, !dbg !13441
  %and309 = and i32 %211, 65280, !dbg !13441
  %shl310 = shl i32 %and309, 8, !dbg !13441
  %or311 = or i32 %shl307, %shl310, !dbg !13441
  %212 = load i8*, i8** %in, align 8, !dbg !13441
  %213 = bitcast i8* %212 to i32*, !dbg !13441
  %add.ptr312 = getelementptr i32, i32* %213, i64 2, !dbg !13441
  %214 = load i32, i32* %add.ptr312, align 4, !dbg !13441
  %and313 = and i32 %214, 16711680, !dbg !13441
  %shr314 = lshr i32 %and313, 8, !dbg !13441
  %or315 = or i32 %or311, %shr314, !dbg !13441
  %215 = load i8*, i8** %in, align 8, !dbg !13441
  %216 = bitcast i8* %215 to i32*, !dbg !13441
  %add.ptr316 = getelementptr i32, i32* %216, i64 2, !dbg !13441
  %217 = load i32, i32* %add.ptr316, align 4, !dbg !13441
  %and317 = and i32 %217, -16777216, !dbg !13441
  %shr318 = lshr i32 %and317, 24, !dbg !13441
  %or319 = or i32 %or315, %shr318, !dbg !13441
  br label %cond.end323, !dbg !13441

cond.false320:                                    ; preds = %cond.end294
  %218 = load i8*, i8** %in, align 8, !dbg !13441
  %219 = bitcast i8* %218 to i32*, !dbg !13441
  %add.ptr321 = getelementptr i32, i32* %219, i64 2, !dbg !13441
  %220 = load i32, i32* %add.ptr321, align 4, !dbg !13441
  %call322 = call i32 @__fswab32(i32 %220) #8, !dbg !13441
  br label %cond.end323, !dbg !13441

cond.end323:                                      ; preds = %cond.false320, %cond.true304
  %cond324 = phi i32 [ %or319, %cond.true304 ], [ %call322, %cond.false320 ], !dbg !13441
  %and325 = and i32 %cond324, 2147483647, !dbg !13441
  %221 = load i32, i32* %_v216, align 4, !dbg !13441
  %and326 = and i32 %221, 1, !dbg !13441
  %shl327 = shl i32 %and326, 31, !dbg !13441
  %or328 = or i32 %and325, %shl327, !dbg !13441
  %and329 = and i32 %or328, 16711680, !dbg !13441
  %shr330 = lshr i32 %and329, 8, !dbg !13441
  %or331 = or i32 %or302, %shr330, !dbg !13441
  %222 = load i8*, i8** %in, align 8, !dbg !13441
  %223 = bitcast i8* %222 to i32*, !dbg !13441
  %add.ptr332 = getelementptr i32, i32* %223, i64 2, !dbg !13441
  %224 = load i32, i32* %add.ptr332, align 4, !dbg !13441
  %225 = call i1 @llvm.is.constant.i32(i32 %224), !dbg !13441
  br i1 %225, label %cond.true333, label %cond.false349, !dbg !13441

cond.true333:                                     ; preds = %cond.end323
  %226 = load i8*, i8** %in, align 8, !dbg !13441
  %227 = bitcast i8* %226 to i32*, !dbg !13441
  %add.ptr334 = getelementptr i32, i32* %227, i64 2, !dbg !13441
  %228 = load i32, i32* %add.ptr334, align 4, !dbg !13441
  %and335 = and i32 %228, 255, !dbg !13441
  %shl336 = shl i32 %and335, 24, !dbg !13441
  %229 = load i8*, i8** %in, align 8, !dbg !13441
  %230 = bitcast i8* %229 to i32*, !dbg !13441
  %add.ptr337 = getelementptr i32, i32* %230, i64 2, !dbg !13441
  %231 = load i32, i32* %add.ptr337, align 4, !dbg !13441
  %and338 = and i32 %231, 65280, !dbg !13441
  %shl339 = shl i32 %and338, 8, !dbg !13441
  %or340 = or i32 %shl336, %shl339, !dbg !13441
  %232 = load i8*, i8** %in, align 8, !dbg !13441
  %233 = bitcast i8* %232 to i32*, !dbg !13441
  %add.ptr341 = getelementptr i32, i32* %233, i64 2, !dbg !13441
  %234 = load i32, i32* %add.ptr341, align 4, !dbg !13441
  %and342 = and i32 %234, 16711680, !dbg !13441
  %shr343 = lshr i32 %and342, 8, !dbg !13441
  %or344 = or i32 %or340, %shr343, !dbg !13441
  %235 = load i8*, i8** %in, align 8, !dbg !13441
  %236 = bitcast i8* %235 to i32*, !dbg !13441
  %add.ptr345 = getelementptr i32, i32* %236, i64 2, !dbg !13441
  %237 = load i32, i32* %add.ptr345, align 4, !dbg !13441
  %and346 = and i32 %237, -16777216, !dbg !13441
  %shr347 = lshr i32 %and346, 24, !dbg !13441
  %or348 = or i32 %or344, %shr347, !dbg !13441
  br label %cond.end352, !dbg !13441

cond.false349:                                    ; preds = %cond.end323
  %238 = load i8*, i8** %in, align 8, !dbg !13441
  %239 = bitcast i8* %238 to i32*, !dbg !13441
  %add.ptr350 = getelementptr i32, i32* %239, i64 2, !dbg !13441
  %240 = load i32, i32* %add.ptr350, align 4, !dbg !13441
  %call351 = call i32 @__fswab32(i32 %240) #8, !dbg !13441
  br label %cond.end352, !dbg !13441

cond.end352:                                      ; preds = %cond.false349, %cond.true333
  %cond353 = phi i32 [ %or348, %cond.true333 ], [ %call351, %cond.false349 ], !dbg !13441
  %and354 = and i32 %cond353, 2147483647, !dbg !13441
  %241 = load i32, i32* %_v216, align 4, !dbg !13441
  %and355 = and i32 %241, 1, !dbg !13441
  %shl356 = shl i32 %and355, 31, !dbg !13441
  %or357 = or i32 %and354, %shl356, !dbg !13441
  %and358 = and i32 %or357, -16777216, !dbg !13441
  %shr359 = lshr i32 %and358, 24, !dbg !13441
  %or360 = or i32 %or331, %shr359, !dbg !13441
  br label %cond.end389, !dbg !13441

cond.false361:                                    ; preds = %cond.end239
  %242 = load i8*, i8** %in, align 8, !dbg !13441
  %243 = bitcast i8* %242 to i32*, !dbg !13441
  %add.ptr362 = getelementptr i32, i32* %243, i64 2, !dbg !13441
  %244 = load i32, i32* %add.ptr362, align 4, !dbg !13441
  %245 = call i1 @llvm.is.constant.i32(i32 %244), !dbg !13441
  br i1 %245, label %cond.true363, label %cond.false379, !dbg !13441

cond.true363:                                     ; preds = %cond.false361
  %246 = load i8*, i8** %in, align 8, !dbg !13441
  %247 = bitcast i8* %246 to i32*, !dbg !13441
  %add.ptr364 = getelementptr i32, i32* %247, i64 2, !dbg !13441
  %248 = load i32, i32* %add.ptr364, align 4, !dbg !13441
  %and365 = and i32 %248, 255, !dbg !13441
  %shl366 = shl i32 %and365, 24, !dbg !13441
  %249 = load i8*, i8** %in, align 8, !dbg !13441
  %250 = bitcast i8* %249 to i32*, !dbg !13441
  %add.ptr367 = getelementptr i32, i32* %250, i64 2, !dbg !13441
  %251 = load i32, i32* %add.ptr367, align 4, !dbg !13441
  %and368 = and i32 %251, 65280, !dbg !13441
  %shl369 = shl i32 %and368, 8, !dbg !13441
  %or370 = or i32 %shl366, %shl369, !dbg !13441
  %252 = load i8*, i8** %in, align 8, !dbg !13441
  %253 = bitcast i8* %252 to i32*, !dbg !13441
  %add.ptr371 = getelementptr i32, i32* %253, i64 2, !dbg !13441
  %254 = load i32, i32* %add.ptr371, align 4, !dbg !13441
  %and372 = and i32 %254, 16711680, !dbg !13441
  %shr373 = lshr i32 %and372, 8, !dbg !13441
  %or374 = or i32 %or370, %shr373, !dbg !13441
  %255 = load i8*, i8** %in, align 8, !dbg !13441
  %256 = bitcast i8* %255 to i32*, !dbg !13441
  %add.ptr375 = getelementptr i32, i32* %256, i64 2, !dbg !13441
  %257 = load i32, i32* %add.ptr375, align 4, !dbg !13441
  %and376 = and i32 %257, -16777216, !dbg !13441
  %shr377 = lshr i32 %and376, 24, !dbg !13441
  %or378 = or i32 %or374, %shr377, !dbg !13441
  br label %cond.end382, !dbg !13441

cond.false379:                                    ; preds = %cond.false361
  %258 = load i8*, i8** %in, align 8, !dbg !13441
  %259 = bitcast i8* %258 to i32*, !dbg !13441
  %add.ptr380 = getelementptr i32, i32* %259, i64 2, !dbg !13441
  %260 = load i32, i32* %add.ptr380, align 4, !dbg !13441
  %call381 = call i32 @__fswab32(i32 %260) #8, !dbg !13441
  br label %cond.end382, !dbg !13441

cond.end382:                                      ; preds = %cond.false379, %cond.true363
  %cond383 = phi i32 [ %or378, %cond.true363 ], [ %call381, %cond.false379 ], !dbg !13441
  %and384 = and i32 %cond383, 2147483647, !dbg !13441
  %261 = load i32, i32* %_v216, align 4, !dbg !13441
  %and385 = and i32 %261, 1, !dbg !13441
  %shl386 = shl i32 %and385, 31, !dbg !13441
  %or387 = or i32 %and384, %shl386, !dbg !13441
  %call388 = call i32 @__fswab32(i32 %or387) #8, !dbg !13441
  br label %cond.end389, !dbg !13441

cond.end389:                                      ; preds = %cond.end382, %cond.end352
  %cond390 = phi i32 [ %or360, %cond.end352 ], [ %call388, %cond.end382 ], !dbg !13441
  %262 = load i8*, i8** %in, align 8, !dbg !13441
  %263 = bitcast i8* %262 to i32*, !dbg !13441
  %add.ptr391 = getelementptr i32, i32* %263, i64 2, !dbg !13441
  store i32 %cond390, i32* %add.ptr391, align 4, !dbg !13441
  br label %do.end392, !dbg !13441

do.end392:                                        ; preds = %cond.end389
  br label %do.body393, !dbg !13444

do.body393:                                       ; preds = %do.end392
  call void @llvm.dbg.declare(metadata i32* %_v394, metadata !13445, metadata !DIExpression()), !dbg !13447
  %264 = load i32, i32* %vf.addr, align 4, !dbg !13447
  %add = add i32 %264, 1, !dbg !13447
  store i32 %add, i32* %_v394, align 4, !dbg !13447
  br label %do.body395, !dbg !13447

do.body395:                                       ; preds = %do.body393
  br label %do.end396, !dbg !13448

do.end396:                                        ; preds = %do.body395
  %265 = load i8*, i8** %in, align 8, !dbg !13447
  %266 = bitcast i8* %265 to i32*, !dbg !13447
  %add.ptr397 = getelementptr i32, i32* %266, i64 2, !dbg !13447
  %267 = load i32, i32* %add.ptr397, align 4, !dbg !13447
  %268 = call i1 @llvm.is.constant.i32(i32 %267), !dbg !13447
  br i1 %268, label %cond.true398, label %cond.false414, !dbg !13447

cond.true398:                                     ; preds = %do.end396
  %269 = load i8*, i8** %in, align 8, !dbg !13447
  %270 = bitcast i8* %269 to i32*, !dbg !13447
  %add.ptr399 = getelementptr i32, i32* %270, i64 2, !dbg !13447
  %271 = load i32, i32* %add.ptr399, align 4, !dbg !13447
  %and400 = and i32 %271, 255, !dbg !13447
  %shl401 = shl i32 %and400, 24, !dbg !13447
  %272 = load i8*, i8** %in, align 8, !dbg !13447
  %273 = bitcast i8* %272 to i32*, !dbg !13447
  %add.ptr402 = getelementptr i32, i32* %273, i64 2, !dbg !13447
  %274 = load i32, i32* %add.ptr402, align 4, !dbg !13447
  %and403 = and i32 %274, 65280, !dbg !13447
  %shl404 = shl i32 %and403, 8, !dbg !13447
  %or405 = or i32 %shl401, %shl404, !dbg !13447
  %275 = load i8*, i8** %in, align 8, !dbg !13447
  %276 = bitcast i8* %275 to i32*, !dbg !13447
  %add.ptr406 = getelementptr i32, i32* %276, i64 2, !dbg !13447
  %277 = load i32, i32* %add.ptr406, align 4, !dbg !13447
  %and407 = and i32 %277, 16711680, !dbg !13447
  %shr408 = lshr i32 %and407, 8, !dbg !13447
  %or409 = or i32 %or405, %shr408, !dbg !13447
  %278 = load i8*, i8** %in, align 8, !dbg !13447
  %279 = bitcast i8* %278 to i32*, !dbg !13447
  %add.ptr410 = getelementptr i32, i32* %279, i64 2, !dbg !13447
  %280 = load i32, i32* %add.ptr410, align 4, !dbg !13447
  %and411 = and i32 %280, -16777216, !dbg !13447
  %shr412 = lshr i32 %and411, 24, !dbg !13447
  %or413 = or i32 %or409, %shr412, !dbg !13447
  br label %cond.end417, !dbg !13447

cond.false414:                                    ; preds = %do.end396
  %281 = load i8*, i8** %in, align 8, !dbg !13447
  %282 = bitcast i8* %281 to i32*, !dbg !13447
  %add.ptr415 = getelementptr i32, i32* %282, i64 2, !dbg !13447
  %283 = load i32, i32* %add.ptr415, align 4, !dbg !13447
  %call416 = call i32 @__fswab32(i32 %283) #8, !dbg !13447
  br label %cond.end417, !dbg !13447

cond.end417:                                      ; preds = %cond.false414, %cond.true398
  %cond418 = phi i32 [ %or413, %cond.true398 ], [ %call416, %cond.false414 ], !dbg !13447
  %and419 = and i32 %cond418, -65536, !dbg !13447
  %284 = load i32, i32* %_v394, align 4, !dbg !13447
  %and420 = and i32 %284, 65535, !dbg !13447
  %shl421 = shl i32 %and420, 0, !dbg !13447
  %or422 = or i32 %and419, %shl421, !dbg !13447
  %285 = call i1 @llvm.is.constant.i32(i32 %or422), !dbg !13447
  br i1 %285, label %cond.true423, label %cond.false539, !dbg !13447

cond.true423:                                     ; preds = %cond.end417
  %286 = load i8*, i8** %in, align 8, !dbg !13447
  %287 = bitcast i8* %286 to i32*, !dbg !13447
  %add.ptr424 = getelementptr i32, i32* %287, i64 2, !dbg !13447
  %288 = load i32, i32* %add.ptr424, align 4, !dbg !13447
  %289 = call i1 @llvm.is.constant.i32(i32 %288), !dbg !13447
  br i1 %289, label %cond.true425, label %cond.false441, !dbg !13447

cond.true425:                                     ; preds = %cond.true423
  %290 = load i8*, i8** %in, align 8, !dbg !13447
  %291 = bitcast i8* %290 to i32*, !dbg !13447
  %add.ptr426 = getelementptr i32, i32* %291, i64 2, !dbg !13447
  %292 = load i32, i32* %add.ptr426, align 4, !dbg !13447
  %and427 = and i32 %292, 255, !dbg !13447
  %shl428 = shl i32 %and427, 24, !dbg !13447
  %293 = load i8*, i8** %in, align 8, !dbg !13447
  %294 = bitcast i8* %293 to i32*, !dbg !13447
  %add.ptr429 = getelementptr i32, i32* %294, i64 2, !dbg !13447
  %295 = load i32, i32* %add.ptr429, align 4, !dbg !13447
  %and430 = and i32 %295, 65280, !dbg !13447
  %shl431 = shl i32 %and430, 8, !dbg !13447
  %or432 = or i32 %shl428, %shl431, !dbg !13447
  %296 = load i8*, i8** %in, align 8, !dbg !13447
  %297 = bitcast i8* %296 to i32*, !dbg !13447
  %add.ptr433 = getelementptr i32, i32* %297, i64 2, !dbg !13447
  %298 = load i32, i32* %add.ptr433, align 4, !dbg !13447
  %and434 = and i32 %298, 16711680, !dbg !13447
  %shr435 = lshr i32 %and434, 8, !dbg !13447
  %or436 = or i32 %or432, %shr435, !dbg !13447
  %299 = load i8*, i8** %in, align 8, !dbg !13447
  %300 = bitcast i8* %299 to i32*, !dbg !13447
  %add.ptr437 = getelementptr i32, i32* %300, i64 2, !dbg !13447
  %301 = load i32, i32* %add.ptr437, align 4, !dbg !13447
  %and438 = and i32 %301, -16777216, !dbg !13447
  %shr439 = lshr i32 %and438, 24, !dbg !13447
  %or440 = or i32 %or436, %shr439, !dbg !13447
  br label %cond.end444, !dbg !13447

cond.false441:                                    ; preds = %cond.true423
  %302 = load i8*, i8** %in, align 8, !dbg !13447
  %303 = bitcast i8* %302 to i32*, !dbg !13447
  %add.ptr442 = getelementptr i32, i32* %303, i64 2, !dbg !13447
  %304 = load i32, i32* %add.ptr442, align 4, !dbg !13447
  %call443 = call i32 @__fswab32(i32 %304) #8, !dbg !13447
  br label %cond.end444, !dbg !13447

cond.end444:                                      ; preds = %cond.false441, %cond.true425
  %cond445 = phi i32 [ %or440, %cond.true425 ], [ %call443, %cond.false441 ], !dbg !13447
  %and446 = and i32 %cond445, -65536, !dbg !13447
  %305 = load i32, i32* %_v394, align 4, !dbg !13447
  %and447 = and i32 %305, 65535, !dbg !13447
  %shl448 = shl i32 %and447, 0, !dbg !13447
  %or449 = or i32 %and446, %shl448, !dbg !13447
  %and450 = and i32 %or449, 255, !dbg !13447
  %shl451 = shl i32 %and450, 24, !dbg !13447
  %306 = load i8*, i8** %in, align 8, !dbg !13447
  %307 = bitcast i8* %306 to i32*, !dbg !13447
  %add.ptr452 = getelementptr i32, i32* %307, i64 2, !dbg !13447
  %308 = load i32, i32* %add.ptr452, align 4, !dbg !13447
  %309 = call i1 @llvm.is.constant.i32(i32 %308), !dbg !13447
  br i1 %309, label %cond.true453, label %cond.false469, !dbg !13447

cond.true453:                                     ; preds = %cond.end444
  %310 = load i8*, i8** %in, align 8, !dbg !13447
  %311 = bitcast i8* %310 to i32*, !dbg !13447
  %add.ptr454 = getelementptr i32, i32* %311, i64 2, !dbg !13447
  %312 = load i32, i32* %add.ptr454, align 4, !dbg !13447
  %and455 = and i32 %312, 255, !dbg !13447
  %shl456 = shl i32 %and455, 24, !dbg !13447
  %313 = load i8*, i8** %in, align 8, !dbg !13447
  %314 = bitcast i8* %313 to i32*, !dbg !13447
  %add.ptr457 = getelementptr i32, i32* %314, i64 2, !dbg !13447
  %315 = load i32, i32* %add.ptr457, align 4, !dbg !13447
  %and458 = and i32 %315, 65280, !dbg !13447
  %shl459 = shl i32 %and458, 8, !dbg !13447
  %or460 = or i32 %shl456, %shl459, !dbg !13447
  %316 = load i8*, i8** %in, align 8, !dbg !13447
  %317 = bitcast i8* %316 to i32*, !dbg !13447
  %add.ptr461 = getelementptr i32, i32* %317, i64 2, !dbg !13447
  %318 = load i32, i32* %add.ptr461, align 4, !dbg !13447
  %and462 = and i32 %318, 16711680, !dbg !13447
  %shr463 = lshr i32 %and462, 8, !dbg !13447
  %or464 = or i32 %or460, %shr463, !dbg !13447
  %319 = load i8*, i8** %in, align 8, !dbg !13447
  %320 = bitcast i8* %319 to i32*, !dbg !13447
  %add.ptr465 = getelementptr i32, i32* %320, i64 2, !dbg !13447
  %321 = load i32, i32* %add.ptr465, align 4, !dbg !13447
  %and466 = and i32 %321, -16777216, !dbg !13447
  %shr467 = lshr i32 %and466, 24, !dbg !13447
  %or468 = or i32 %or464, %shr467, !dbg !13447
  br label %cond.end472, !dbg !13447

cond.false469:                                    ; preds = %cond.end444
  %322 = load i8*, i8** %in, align 8, !dbg !13447
  %323 = bitcast i8* %322 to i32*, !dbg !13447
  %add.ptr470 = getelementptr i32, i32* %323, i64 2, !dbg !13447
  %324 = load i32, i32* %add.ptr470, align 4, !dbg !13447
  %call471 = call i32 @__fswab32(i32 %324) #8, !dbg !13447
  br label %cond.end472, !dbg !13447

cond.end472:                                      ; preds = %cond.false469, %cond.true453
  %cond473 = phi i32 [ %or468, %cond.true453 ], [ %call471, %cond.false469 ], !dbg !13447
  %and474 = and i32 %cond473, -65536, !dbg !13447
  %325 = load i32, i32* %_v394, align 4, !dbg !13447
  %and475 = and i32 %325, 65535, !dbg !13447
  %shl476 = shl i32 %and475, 0, !dbg !13447
  %or477 = or i32 %and474, %shl476, !dbg !13447
  %and478 = and i32 %or477, 65280, !dbg !13447
  %shl479 = shl i32 %and478, 8, !dbg !13447
  %or480 = or i32 %shl451, %shl479, !dbg !13447
  %326 = load i8*, i8** %in, align 8, !dbg !13447
  %327 = bitcast i8* %326 to i32*, !dbg !13447
  %add.ptr481 = getelementptr i32, i32* %327, i64 2, !dbg !13447
  %328 = load i32, i32* %add.ptr481, align 4, !dbg !13447
  %329 = call i1 @llvm.is.constant.i32(i32 %328), !dbg !13447
  br i1 %329, label %cond.true482, label %cond.false498, !dbg !13447

cond.true482:                                     ; preds = %cond.end472
  %330 = load i8*, i8** %in, align 8, !dbg !13447
  %331 = bitcast i8* %330 to i32*, !dbg !13447
  %add.ptr483 = getelementptr i32, i32* %331, i64 2, !dbg !13447
  %332 = load i32, i32* %add.ptr483, align 4, !dbg !13447
  %and484 = and i32 %332, 255, !dbg !13447
  %shl485 = shl i32 %and484, 24, !dbg !13447
  %333 = load i8*, i8** %in, align 8, !dbg !13447
  %334 = bitcast i8* %333 to i32*, !dbg !13447
  %add.ptr486 = getelementptr i32, i32* %334, i64 2, !dbg !13447
  %335 = load i32, i32* %add.ptr486, align 4, !dbg !13447
  %and487 = and i32 %335, 65280, !dbg !13447
  %shl488 = shl i32 %and487, 8, !dbg !13447
  %or489 = or i32 %shl485, %shl488, !dbg !13447
  %336 = load i8*, i8** %in, align 8, !dbg !13447
  %337 = bitcast i8* %336 to i32*, !dbg !13447
  %add.ptr490 = getelementptr i32, i32* %337, i64 2, !dbg !13447
  %338 = load i32, i32* %add.ptr490, align 4, !dbg !13447
  %and491 = and i32 %338, 16711680, !dbg !13447
  %shr492 = lshr i32 %and491, 8, !dbg !13447
  %or493 = or i32 %or489, %shr492, !dbg !13447
  %339 = load i8*, i8** %in, align 8, !dbg !13447
  %340 = bitcast i8* %339 to i32*, !dbg !13447
  %add.ptr494 = getelementptr i32, i32* %340, i64 2, !dbg !13447
  %341 = load i32, i32* %add.ptr494, align 4, !dbg !13447
  %and495 = and i32 %341, -16777216, !dbg !13447
  %shr496 = lshr i32 %and495, 24, !dbg !13447
  %or497 = or i32 %or493, %shr496, !dbg !13447
  br label %cond.end501, !dbg !13447

cond.false498:                                    ; preds = %cond.end472
  %342 = load i8*, i8** %in, align 8, !dbg !13447
  %343 = bitcast i8* %342 to i32*, !dbg !13447
  %add.ptr499 = getelementptr i32, i32* %343, i64 2, !dbg !13447
  %344 = load i32, i32* %add.ptr499, align 4, !dbg !13447
  %call500 = call i32 @__fswab32(i32 %344) #8, !dbg !13447
  br label %cond.end501, !dbg !13447

cond.end501:                                      ; preds = %cond.false498, %cond.true482
  %cond502 = phi i32 [ %or497, %cond.true482 ], [ %call500, %cond.false498 ], !dbg !13447
  %and503 = and i32 %cond502, -65536, !dbg !13447
  %345 = load i32, i32* %_v394, align 4, !dbg !13447
  %and504 = and i32 %345, 65535, !dbg !13447
  %shl505 = shl i32 %and504, 0, !dbg !13447
  %or506 = or i32 %and503, %shl505, !dbg !13447
  %and507 = and i32 %or506, 16711680, !dbg !13447
  %shr508 = lshr i32 %and507, 8, !dbg !13447
  %or509 = or i32 %or480, %shr508, !dbg !13447
  %346 = load i8*, i8** %in, align 8, !dbg !13447
  %347 = bitcast i8* %346 to i32*, !dbg !13447
  %add.ptr510 = getelementptr i32, i32* %347, i64 2, !dbg !13447
  %348 = load i32, i32* %add.ptr510, align 4, !dbg !13447
  %349 = call i1 @llvm.is.constant.i32(i32 %348), !dbg !13447
  br i1 %349, label %cond.true511, label %cond.false527, !dbg !13447

cond.true511:                                     ; preds = %cond.end501
  %350 = load i8*, i8** %in, align 8, !dbg !13447
  %351 = bitcast i8* %350 to i32*, !dbg !13447
  %add.ptr512 = getelementptr i32, i32* %351, i64 2, !dbg !13447
  %352 = load i32, i32* %add.ptr512, align 4, !dbg !13447
  %and513 = and i32 %352, 255, !dbg !13447
  %shl514 = shl i32 %and513, 24, !dbg !13447
  %353 = load i8*, i8** %in, align 8, !dbg !13447
  %354 = bitcast i8* %353 to i32*, !dbg !13447
  %add.ptr515 = getelementptr i32, i32* %354, i64 2, !dbg !13447
  %355 = load i32, i32* %add.ptr515, align 4, !dbg !13447
  %and516 = and i32 %355, 65280, !dbg !13447
  %shl517 = shl i32 %and516, 8, !dbg !13447
  %or518 = or i32 %shl514, %shl517, !dbg !13447
  %356 = load i8*, i8** %in, align 8, !dbg !13447
  %357 = bitcast i8* %356 to i32*, !dbg !13447
  %add.ptr519 = getelementptr i32, i32* %357, i64 2, !dbg !13447
  %358 = load i32, i32* %add.ptr519, align 4, !dbg !13447
  %and520 = and i32 %358, 16711680, !dbg !13447
  %shr521 = lshr i32 %and520, 8, !dbg !13447
  %or522 = or i32 %or518, %shr521, !dbg !13447
  %359 = load i8*, i8** %in, align 8, !dbg !13447
  %360 = bitcast i8* %359 to i32*, !dbg !13447
  %add.ptr523 = getelementptr i32, i32* %360, i64 2, !dbg !13447
  %361 = load i32, i32* %add.ptr523, align 4, !dbg !13447
  %and524 = and i32 %361, -16777216, !dbg !13447
  %shr525 = lshr i32 %and524, 24, !dbg !13447
  %or526 = or i32 %or522, %shr525, !dbg !13447
  br label %cond.end530, !dbg !13447

cond.false527:                                    ; preds = %cond.end501
  %362 = load i8*, i8** %in, align 8, !dbg !13447
  %363 = bitcast i8* %362 to i32*, !dbg !13447
  %add.ptr528 = getelementptr i32, i32* %363, i64 2, !dbg !13447
  %364 = load i32, i32* %add.ptr528, align 4, !dbg !13447
  %call529 = call i32 @__fswab32(i32 %364) #8, !dbg !13447
  br label %cond.end530, !dbg !13447

cond.end530:                                      ; preds = %cond.false527, %cond.true511
  %cond531 = phi i32 [ %or526, %cond.true511 ], [ %call529, %cond.false527 ], !dbg !13447
  %and532 = and i32 %cond531, -65536, !dbg !13447
  %365 = load i32, i32* %_v394, align 4, !dbg !13447
  %and533 = and i32 %365, 65535, !dbg !13447
  %shl534 = shl i32 %and533, 0, !dbg !13447
  %or535 = or i32 %and532, %shl534, !dbg !13447
  %and536 = and i32 %or535, -16777216, !dbg !13447
  %shr537 = lshr i32 %and536, 24, !dbg !13447
  %or538 = or i32 %or509, %shr537, !dbg !13447
  br label %cond.end567, !dbg !13447

cond.false539:                                    ; preds = %cond.end417
  %366 = load i8*, i8** %in, align 8, !dbg !13447
  %367 = bitcast i8* %366 to i32*, !dbg !13447
  %add.ptr540 = getelementptr i32, i32* %367, i64 2, !dbg !13447
  %368 = load i32, i32* %add.ptr540, align 4, !dbg !13447
  %369 = call i1 @llvm.is.constant.i32(i32 %368), !dbg !13447
  br i1 %369, label %cond.true541, label %cond.false557, !dbg !13447

cond.true541:                                     ; preds = %cond.false539
  %370 = load i8*, i8** %in, align 8, !dbg !13447
  %371 = bitcast i8* %370 to i32*, !dbg !13447
  %add.ptr542 = getelementptr i32, i32* %371, i64 2, !dbg !13447
  %372 = load i32, i32* %add.ptr542, align 4, !dbg !13447
  %and543 = and i32 %372, 255, !dbg !13447
  %shl544 = shl i32 %and543, 24, !dbg !13447
  %373 = load i8*, i8** %in, align 8, !dbg !13447
  %374 = bitcast i8* %373 to i32*, !dbg !13447
  %add.ptr545 = getelementptr i32, i32* %374, i64 2, !dbg !13447
  %375 = load i32, i32* %add.ptr545, align 4, !dbg !13447
  %and546 = and i32 %375, 65280, !dbg !13447
  %shl547 = shl i32 %and546, 8, !dbg !13447
  %or548 = or i32 %shl544, %shl547, !dbg !13447
  %376 = load i8*, i8** %in, align 8, !dbg !13447
  %377 = bitcast i8* %376 to i32*, !dbg !13447
  %add.ptr549 = getelementptr i32, i32* %377, i64 2, !dbg !13447
  %378 = load i32, i32* %add.ptr549, align 4, !dbg !13447
  %and550 = and i32 %378, 16711680, !dbg !13447
  %shr551 = lshr i32 %and550, 8, !dbg !13447
  %or552 = or i32 %or548, %shr551, !dbg !13447
  %379 = load i8*, i8** %in, align 8, !dbg !13447
  %380 = bitcast i8* %379 to i32*, !dbg !13447
  %add.ptr553 = getelementptr i32, i32* %380, i64 2, !dbg !13447
  %381 = load i32, i32* %add.ptr553, align 4, !dbg !13447
  %and554 = and i32 %381, -16777216, !dbg !13447
  %shr555 = lshr i32 %and554, 24, !dbg !13447
  %or556 = or i32 %or552, %shr555, !dbg !13447
  br label %cond.end560, !dbg !13447

cond.false557:                                    ; preds = %cond.false539
  %382 = load i8*, i8** %in, align 8, !dbg !13447
  %383 = bitcast i8* %382 to i32*, !dbg !13447
  %add.ptr558 = getelementptr i32, i32* %383, i64 2, !dbg !13447
  %384 = load i32, i32* %add.ptr558, align 4, !dbg !13447
  %call559 = call i32 @__fswab32(i32 %384) #8, !dbg !13447
  br label %cond.end560, !dbg !13447

cond.end560:                                      ; preds = %cond.false557, %cond.true541
  %cond561 = phi i32 [ %or556, %cond.true541 ], [ %call559, %cond.false557 ], !dbg !13447
  %and562 = and i32 %cond561, -65536, !dbg !13447
  %385 = load i32, i32* %_v394, align 4, !dbg !13447
  %and563 = and i32 %385, 65535, !dbg !13447
  %shl564 = shl i32 %and563, 0, !dbg !13447
  %or565 = or i32 %and562, %shl564, !dbg !13447
  %call566 = call i32 @__fswab32(i32 %or565) #8, !dbg !13447
  br label %cond.end567, !dbg !13447

cond.end567:                                      ; preds = %cond.end560, %cond.end530
  %cond568 = phi i32 [ %or538, %cond.end530 ], [ %call566, %cond.end560 ], !dbg !13447
  %386 = load i8*, i8** %in, align 8, !dbg !13447
  %387 = bitcast i8* %386 to i32*, !dbg !13447
  %add.ptr569 = getelementptr i32, i32* %387, i64 2, !dbg !13447
  store i32 %cond568, i32* %add.ptr569, align 4, !dbg !13447
  br label %do.end570, !dbg !13447

do.end570:                                        ; preds = %cond.end567
  br label %if.end571, !dbg !13450

if.else:                                          ; preds = %if.then212
  store i32 -1, i32* %err, align 4, !dbg !13451
  br label %free, !dbg !13453

if.end571:                                        ; preds = %do.end570
  br label %if.end572, !dbg !13454

if.end572:                                        ; preds = %if.end571, %do.end210
  %388 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !13455
  %caps573 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %388, i32 0, i32 9, !dbg !13455
  %hca_cur574 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps573, i32 0, i32 0, !dbg !13455
  %arrayidx575 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur574, i64 0, i64 0, !dbg !13455
  %arraydecay576 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx575, i64 0, i64 0, !dbg !13455
  %add.ptr577 = getelementptr i32, i32* %arraydecay576, i64 13, !dbg !13455
  %389 = load i32, i32* %add.ptr577, align 4, !dbg !13455
  %390 = call i1 @llvm.is.constant.i32(i32 %389), !dbg !13455
  br i1 %390, label %cond.true578, label %cond.false610, !dbg !13455

cond.true578:                                     ; preds = %if.end572
  %391 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !13455
  %caps579 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %391, i32 0, i32 9, !dbg !13455
  %hca_cur580 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps579, i32 0, i32 0, !dbg !13455
  %arrayidx581 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur580, i64 0, i64 0, !dbg !13455
  %arraydecay582 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx581, i64 0, i64 0, !dbg !13455
  %add.ptr583 = getelementptr i32, i32* %arraydecay582, i64 13, !dbg !13455
  %392 = load i32, i32* %add.ptr583, align 4, !dbg !13455
  %and584 = and i32 %392, 255, !dbg !13455
  %shl585 = shl i32 %and584, 24, !dbg !13455
  %393 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !13455
  %caps586 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %393, i32 0, i32 9, !dbg !13455
  %hca_cur587 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps586, i32 0, i32 0, !dbg !13455
  %arrayidx588 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur587, i64 0, i64 0, !dbg !13455
  %arraydecay589 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx588, i64 0, i64 0, !dbg !13455
  %add.ptr590 = getelementptr i32, i32* %arraydecay589, i64 13, !dbg !13455
  %394 = load i32, i32* %add.ptr590, align 4, !dbg !13455
  %and591 = and i32 %394, 65280, !dbg !13455
  %shl592 = shl i32 %and591, 8, !dbg !13455
  %or593 = or i32 %shl585, %shl592, !dbg !13455
  %395 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !13455
  %caps594 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %395, i32 0, i32 9, !dbg !13455
  %hca_cur595 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps594, i32 0, i32 0, !dbg !13455
  %arrayidx596 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur595, i64 0, i64 0, !dbg !13455
  %arraydecay597 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx596, i64 0, i64 0, !dbg !13455
  %add.ptr598 = getelementptr i32, i32* %arraydecay597, i64 13, !dbg !13455
  %396 = load i32, i32* %add.ptr598, align 4, !dbg !13455
  %and599 = and i32 %396, 16711680, !dbg !13455
  %shr600 = lshr i32 %and599, 8, !dbg !13455
  %or601 = or i32 %or593, %shr600, !dbg !13455
  %397 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !13455
  %caps602 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %397, i32 0, i32 9, !dbg !13455
  %hca_cur603 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps602, i32 0, i32 0, !dbg !13455
  %arrayidx604 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur603, i64 0, i64 0, !dbg !13455
  %arraydecay605 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx604, i64 0, i64 0, !dbg !13455
  %add.ptr606 = getelementptr i32, i32* %arraydecay605, i64 13, !dbg !13455
  %398 = load i32, i32* %add.ptr606, align 4, !dbg !13455
  %and607 = and i32 %398, -16777216, !dbg !13455
  %shr608 = lshr i32 %and607, 24, !dbg !13455
  %or609 = or i32 %or601, %shr608, !dbg !13455
  br label %cond.end617, !dbg !13455

cond.false610:                                    ; preds = %if.end572
  %399 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !13455
  %caps611 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %399, i32 0, i32 9, !dbg !13455
  %hca_cur612 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps611, i32 0, i32 0, !dbg !13455
  %arrayidx613 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur612, i64 0, i64 0, !dbg !13455
  %arraydecay614 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx613, i64 0, i64 0, !dbg !13455
  %add.ptr615 = getelementptr i32, i32* %arraydecay614, i64 13, !dbg !13455
  %400 = load i32, i32* %add.ptr615, align 4, !dbg !13455
  %call616 = call i32 @__fswab32(i32 %400) #8, !dbg !13455
  br label %cond.end617, !dbg !13455

cond.end617:                                      ; preds = %cond.false610, %cond.true578
  %cond618 = phi i32 [ %or609, %cond.true578 ], [ %call616, %cond.false610 ], !dbg !13455
  %shr619 = lshr i32 %cond618, 0, !dbg !13455
  %and620 = and i32 %shr619, 255, !dbg !13455
  %cmp = icmp eq i32 %and620, 2, !dbg !13457
  br i1 %cmp, label %if.then622, label %if.end802, !dbg !13458

if.then622:                                       ; preds = %cond.end617
  br label %do.body623, !dbg !13459

do.body623:                                       ; preds = %if.then622
  call void @llvm.dbg.declare(metadata i32* %_v624, metadata !13460, metadata !DIExpression()), !dbg !13462
  %401 = load i8, i8* %port_num.addr, align 1, !dbg !13462
  %conv625 = zext i8 %401 to i32, !dbg !13462
  store i32 %conv625, i32* %_v624, align 4, !dbg !13462
  br label %do.body626, !dbg !13462

do.body626:                                       ; preds = %do.body623
  br label %do.end627, !dbg !13463

do.end627:                                        ; preds = %do.body626
  %402 = load i8*, i8** %in, align 8, !dbg !13462
  %403 = bitcast i8* %402 to i32*, !dbg !13462
  %add.ptr628 = getelementptr i32, i32* %403, i64 2, !dbg !13462
  %404 = load i32, i32* %add.ptr628, align 4, !dbg !13462
  %405 = call i1 @llvm.is.constant.i32(i32 %404), !dbg !13462
  br i1 %405, label %cond.true629, label %cond.false645, !dbg !13462

cond.true629:                                     ; preds = %do.end627
  %406 = load i8*, i8** %in, align 8, !dbg !13462
  %407 = bitcast i8* %406 to i32*, !dbg !13462
  %add.ptr630 = getelementptr i32, i32* %407, i64 2, !dbg !13462
  %408 = load i32, i32* %add.ptr630, align 4, !dbg !13462
  %and631 = and i32 %408, 255, !dbg !13462
  %shl632 = shl i32 %and631, 24, !dbg !13462
  %409 = load i8*, i8** %in, align 8, !dbg !13462
  %410 = bitcast i8* %409 to i32*, !dbg !13462
  %add.ptr633 = getelementptr i32, i32* %410, i64 2, !dbg !13462
  %411 = load i32, i32* %add.ptr633, align 4, !dbg !13462
  %and634 = and i32 %411, 65280, !dbg !13462
  %shl635 = shl i32 %and634, 8, !dbg !13462
  %or636 = or i32 %shl632, %shl635, !dbg !13462
  %412 = load i8*, i8** %in, align 8, !dbg !13462
  %413 = bitcast i8* %412 to i32*, !dbg !13462
  %add.ptr637 = getelementptr i32, i32* %413, i64 2, !dbg !13462
  %414 = load i32, i32* %add.ptr637, align 4, !dbg !13462
  %and638 = and i32 %414, 16711680, !dbg !13462
  %shr639 = lshr i32 %and638, 8, !dbg !13462
  %or640 = or i32 %or636, %shr639, !dbg !13462
  %415 = load i8*, i8** %in, align 8, !dbg !13462
  %416 = bitcast i8* %415 to i32*, !dbg !13462
  %add.ptr641 = getelementptr i32, i32* %416, i64 2, !dbg !13462
  %417 = load i32, i32* %add.ptr641, align 4, !dbg !13462
  %and642 = and i32 %417, -16777216, !dbg !13462
  %shr643 = lshr i32 %and642, 24, !dbg !13462
  %or644 = or i32 %or640, %shr643, !dbg !13462
  br label %cond.end648, !dbg !13462

cond.false645:                                    ; preds = %do.end627
  %418 = load i8*, i8** %in, align 8, !dbg !13462
  %419 = bitcast i8* %418 to i32*, !dbg !13462
  %add.ptr646 = getelementptr i32, i32* %419, i64 2, !dbg !13462
  %420 = load i32, i32* %add.ptr646, align 4, !dbg !13462
  %call647 = call i32 @__fswab32(i32 %420) #8, !dbg !13462
  br label %cond.end648, !dbg !13462

cond.end648:                                      ; preds = %cond.false645, %cond.true629
  %cond649 = phi i32 [ %or644, %cond.true629 ], [ %call647, %cond.false645 ], !dbg !13462
  %and650 = and i32 %cond649, -983041, !dbg !13462
  %421 = load i32, i32* %_v624, align 4, !dbg !13462
  %and651 = and i32 %421, 15, !dbg !13462
  %shl652 = shl i32 %and651, 16, !dbg !13462
  %or653 = or i32 %and650, %shl652, !dbg !13462
  %422 = call i1 @llvm.is.constant.i32(i32 %or653), !dbg !13462
  br i1 %422, label %cond.true654, label %cond.false770, !dbg !13462

cond.true654:                                     ; preds = %cond.end648
  %423 = load i8*, i8** %in, align 8, !dbg !13462
  %424 = bitcast i8* %423 to i32*, !dbg !13462
  %add.ptr655 = getelementptr i32, i32* %424, i64 2, !dbg !13462
  %425 = load i32, i32* %add.ptr655, align 4, !dbg !13462
  %426 = call i1 @llvm.is.constant.i32(i32 %425), !dbg !13462
  br i1 %426, label %cond.true656, label %cond.false672, !dbg !13462

cond.true656:                                     ; preds = %cond.true654
  %427 = load i8*, i8** %in, align 8, !dbg !13462
  %428 = bitcast i8* %427 to i32*, !dbg !13462
  %add.ptr657 = getelementptr i32, i32* %428, i64 2, !dbg !13462
  %429 = load i32, i32* %add.ptr657, align 4, !dbg !13462
  %and658 = and i32 %429, 255, !dbg !13462
  %shl659 = shl i32 %and658, 24, !dbg !13462
  %430 = load i8*, i8** %in, align 8, !dbg !13462
  %431 = bitcast i8* %430 to i32*, !dbg !13462
  %add.ptr660 = getelementptr i32, i32* %431, i64 2, !dbg !13462
  %432 = load i32, i32* %add.ptr660, align 4, !dbg !13462
  %and661 = and i32 %432, 65280, !dbg !13462
  %shl662 = shl i32 %and661, 8, !dbg !13462
  %or663 = or i32 %shl659, %shl662, !dbg !13462
  %433 = load i8*, i8** %in, align 8, !dbg !13462
  %434 = bitcast i8* %433 to i32*, !dbg !13462
  %add.ptr664 = getelementptr i32, i32* %434, i64 2, !dbg !13462
  %435 = load i32, i32* %add.ptr664, align 4, !dbg !13462
  %and665 = and i32 %435, 16711680, !dbg !13462
  %shr666 = lshr i32 %and665, 8, !dbg !13462
  %or667 = or i32 %or663, %shr666, !dbg !13462
  %436 = load i8*, i8** %in, align 8, !dbg !13462
  %437 = bitcast i8* %436 to i32*, !dbg !13462
  %add.ptr668 = getelementptr i32, i32* %437, i64 2, !dbg !13462
  %438 = load i32, i32* %add.ptr668, align 4, !dbg !13462
  %and669 = and i32 %438, -16777216, !dbg !13462
  %shr670 = lshr i32 %and669, 24, !dbg !13462
  %or671 = or i32 %or667, %shr670, !dbg !13462
  br label %cond.end675, !dbg !13462

cond.false672:                                    ; preds = %cond.true654
  %439 = load i8*, i8** %in, align 8, !dbg !13462
  %440 = bitcast i8* %439 to i32*, !dbg !13462
  %add.ptr673 = getelementptr i32, i32* %440, i64 2, !dbg !13462
  %441 = load i32, i32* %add.ptr673, align 4, !dbg !13462
  %call674 = call i32 @__fswab32(i32 %441) #8, !dbg !13462
  br label %cond.end675, !dbg !13462

cond.end675:                                      ; preds = %cond.false672, %cond.true656
  %cond676 = phi i32 [ %or671, %cond.true656 ], [ %call674, %cond.false672 ], !dbg !13462
  %and677 = and i32 %cond676, -983041, !dbg !13462
  %442 = load i32, i32* %_v624, align 4, !dbg !13462
  %and678 = and i32 %442, 15, !dbg !13462
  %shl679 = shl i32 %and678, 16, !dbg !13462
  %or680 = or i32 %and677, %shl679, !dbg !13462
  %and681 = and i32 %or680, 255, !dbg !13462
  %shl682 = shl i32 %and681, 24, !dbg !13462
  %443 = load i8*, i8** %in, align 8, !dbg !13462
  %444 = bitcast i8* %443 to i32*, !dbg !13462
  %add.ptr683 = getelementptr i32, i32* %444, i64 2, !dbg !13462
  %445 = load i32, i32* %add.ptr683, align 4, !dbg !13462
  %446 = call i1 @llvm.is.constant.i32(i32 %445), !dbg !13462
  br i1 %446, label %cond.true684, label %cond.false700, !dbg !13462

cond.true684:                                     ; preds = %cond.end675
  %447 = load i8*, i8** %in, align 8, !dbg !13462
  %448 = bitcast i8* %447 to i32*, !dbg !13462
  %add.ptr685 = getelementptr i32, i32* %448, i64 2, !dbg !13462
  %449 = load i32, i32* %add.ptr685, align 4, !dbg !13462
  %and686 = and i32 %449, 255, !dbg !13462
  %shl687 = shl i32 %and686, 24, !dbg !13462
  %450 = load i8*, i8** %in, align 8, !dbg !13462
  %451 = bitcast i8* %450 to i32*, !dbg !13462
  %add.ptr688 = getelementptr i32, i32* %451, i64 2, !dbg !13462
  %452 = load i32, i32* %add.ptr688, align 4, !dbg !13462
  %and689 = and i32 %452, 65280, !dbg !13462
  %shl690 = shl i32 %and689, 8, !dbg !13462
  %or691 = or i32 %shl687, %shl690, !dbg !13462
  %453 = load i8*, i8** %in, align 8, !dbg !13462
  %454 = bitcast i8* %453 to i32*, !dbg !13462
  %add.ptr692 = getelementptr i32, i32* %454, i64 2, !dbg !13462
  %455 = load i32, i32* %add.ptr692, align 4, !dbg !13462
  %and693 = and i32 %455, 16711680, !dbg !13462
  %shr694 = lshr i32 %and693, 8, !dbg !13462
  %or695 = or i32 %or691, %shr694, !dbg !13462
  %456 = load i8*, i8** %in, align 8, !dbg !13462
  %457 = bitcast i8* %456 to i32*, !dbg !13462
  %add.ptr696 = getelementptr i32, i32* %457, i64 2, !dbg !13462
  %458 = load i32, i32* %add.ptr696, align 4, !dbg !13462
  %and697 = and i32 %458, -16777216, !dbg !13462
  %shr698 = lshr i32 %and697, 24, !dbg !13462
  %or699 = or i32 %or695, %shr698, !dbg !13462
  br label %cond.end703, !dbg !13462

cond.false700:                                    ; preds = %cond.end675
  %459 = load i8*, i8** %in, align 8, !dbg !13462
  %460 = bitcast i8* %459 to i32*, !dbg !13462
  %add.ptr701 = getelementptr i32, i32* %460, i64 2, !dbg !13462
  %461 = load i32, i32* %add.ptr701, align 4, !dbg !13462
  %call702 = call i32 @__fswab32(i32 %461) #8, !dbg !13462
  br label %cond.end703, !dbg !13462

cond.end703:                                      ; preds = %cond.false700, %cond.true684
  %cond704 = phi i32 [ %or699, %cond.true684 ], [ %call702, %cond.false700 ], !dbg !13462
  %and705 = and i32 %cond704, -983041, !dbg !13462
  %462 = load i32, i32* %_v624, align 4, !dbg !13462
  %and706 = and i32 %462, 15, !dbg !13462
  %shl707 = shl i32 %and706, 16, !dbg !13462
  %or708 = or i32 %and705, %shl707, !dbg !13462
  %and709 = and i32 %or708, 65280, !dbg !13462
  %shl710 = shl i32 %and709, 8, !dbg !13462
  %or711 = or i32 %shl682, %shl710, !dbg !13462
  %463 = load i8*, i8** %in, align 8, !dbg !13462
  %464 = bitcast i8* %463 to i32*, !dbg !13462
  %add.ptr712 = getelementptr i32, i32* %464, i64 2, !dbg !13462
  %465 = load i32, i32* %add.ptr712, align 4, !dbg !13462
  %466 = call i1 @llvm.is.constant.i32(i32 %465), !dbg !13462
  br i1 %466, label %cond.true713, label %cond.false729, !dbg !13462

cond.true713:                                     ; preds = %cond.end703
  %467 = load i8*, i8** %in, align 8, !dbg !13462
  %468 = bitcast i8* %467 to i32*, !dbg !13462
  %add.ptr714 = getelementptr i32, i32* %468, i64 2, !dbg !13462
  %469 = load i32, i32* %add.ptr714, align 4, !dbg !13462
  %and715 = and i32 %469, 255, !dbg !13462
  %shl716 = shl i32 %and715, 24, !dbg !13462
  %470 = load i8*, i8** %in, align 8, !dbg !13462
  %471 = bitcast i8* %470 to i32*, !dbg !13462
  %add.ptr717 = getelementptr i32, i32* %471, i64 2, !dbg !13462
  %472 = load i32, i32* %add.ptr717, align 4, !dbg !13462
  %and718 = and i32 %472, 65280, !dbg !13462
  %shl719 = shl i32 %and718, 8, !dbg !13462
  %or720 = or i32 %shl716, %shl719, !dbg !13462
  %473 = load i8*, i8** %in, align 8, !dbg !13462
  %474 = bitcast i8* %473 to i32*, !dbg !13462
  %add.ptr721 = getelementptr i32, i32* %474, i64 2, !dbg !13462
  %475 = load i32, i32* %add.ptr721, align 4, !dbg !13462
  %and722 = and i32 %475, 16711680, !dbg !13462
  %shr723 = lshr i32 %and722, 8, !dbg !13462
  %or724 = or i32 %or720, %shr723, !dbg !13462
  %476 = load i8*, i8** %in, align 8, !dbg !13462
  %477 = bitcast i8* %476 to i32*, !dbg !13462
  %add.ptr725 = getelementptr i32, i32* %477, i64 2, !dbg !13462
  %478 = load i32, i32* %add.ptr725, align 4, !dbg !13462
  %and726 = and i32 %478, -16777216, !dbg !13462
  %shr727 = lshr i32 %and726, 24, !dbg !13462
  %or728 = or i32 %or724, %shr727, !dbg !13462
  br label %cond.end732, !dbg !13462

cond.false729:                                    ; preds = %cond.end703
  %479 = load i8*, i8** %in, align 8, !dbg !13462
  %480 = bitcast i8* %479 to i32*, !dbg !13462
  %add.ptr730 = getelementptr i32, i32* %480, i64 2, !dbg !13462
  %481 = load i32, i32* %add.ptr730, align 4, !dbg !13462
  %call731 = call i32 @__fswab32(i32 %481) #8, !dbg !13462
  br label %cond.end732, !dbg !13462

cond.end732:                                      ; preds = %cond.false729, %cond.true713
  %cond733 = phi i32 [ %or728, %cond.true713 ], [ %call731, %cond.false729 ], !dbg !13462
  %and734 = and i32 %cond733, -983041, !dbg !13462
  %482 = load i32, i32* %_v624, align 4, !dbg !13462
  %and735 = and i32 %482, 15, !dbg !13462
  %shl736 = shl i32 %and735, 16, !dbg !13462
  %or737 = or i32 %and734, %shl736, !dbg !13462
  %and738 = and i32 %or737, 16711680, !dbg !13462
  %shr739 = lshr i32 %and738, 8, !dbg !13462
  %or740 = or i32 %or711, %shr739, !dbg !13462
  %483 = load i8*, i8** %in, align 8, !dbg !13462
  %484 = bitcast i8* %483 to i32*, !dbg !13462
  %add.ptr741 = getelementptr i32, i32* %484, i64 2, !dbg !13462
  %485 = load i32, i32* %add.ptr741, align 4, !dbg !13462
  %486 = call i1 @llvm.is.constant.i32(i32 %485), !dbg !13462
  br i1 %486, label %cond.true742, label %cond.false758, !dbg !13462

cond.true742:                                     ; preds = %cond.end732
  %487 = load i8*, i8** %in, align 8, !dbg !13462
  %488 = bitcast i8* %487 to i32*, !dbg !13462
  %add.ptr743 = getelementptr i32, i32* %488, i64 2, !dbg !13462
  %489 = load i32, i32* %add.ptr743, align 4, !dbg !13462
  %and744 = and i32 %489, 255, !dbg !13462
  %shl745 = shl i32 %and744, 24, !dbg !13462
  %490 = load i8*, i8** %in, align 8, !dbg !13462
  %491 = bitcast i8* %490 to i32*, !dbg !13462
  %add.ptr746 = getelementptr i32, i32* %491, i64 2, !dbg !13462
  %492 = load i32, i32* %add.ptr746, align 4, !dbg !13462
  %and747 = and i32 %492, 65280, !dbg !13462
  %shl748 = shl i32 %and747, 8, !dbg !13462
  %or749 = or i32 %shl745, %shl748, !dbg !13462
  %493 = load i8*, i8** %in, align 8, !dbg !13462
  %494 = bitcast i8* %493 to i32*, !dbg !13462
  %add.ptr750 = getelementptr i32, i32* %494, i64 2, !dbg !13462
  %495 = load i32, i32* %add.ptr750, align 4, !dbg !13462
  %and751 = and i32 %495, 16711680, !dbg !13462
  %shr752 = lshr i32 %and751, 8, !dbg !13462
  %or753 = or i32 %or749, %shr752, !dbg !13462
  %496 = load i8*, i8** %in, align 8, !dbg !13462
  %497 = bitcast i8* %496 to i32*, !dbg !13462
  %add.ptr754 = getelementptr i32, i32* %497, i64 2, !dbg !13462
  %498 = load i32, i32* %add.ptr754, align 4, !dbg !13462
  %and755 = and i32 %498, -16777216, !dbg !13462
  %shr756 = lshr i32 %and755, 24, !dbg !13462
  %or757 = or i32 %or753, %shr756, !dbg !13462
  br label %cond.end761, !dbg !13462

cond.false758:                                    ; preds = %cond.end732
  %499 = load i8*, i8** %in, align 8, !dbg !13462
  %500 = bitcast i8* %499 to i32*, !dbg !13462
  %add.ptr759 = getelementptr i32, i32* %500, i64 2, !dbg !13462
  %501 = load i32, i32* %add.ptr759, align 4, !dbg !13462
  %call760 = call i32 @__fswab32(i32 %501) #8, !dbg !13462
  br label %cond.end761, !dbg !13462

cond.end761:                                      ; preds = %cond.false758, %cond.true742
  %cond762 = phi i32 [ %or757, %cond.true742 ], [ %call760, %cond.false758 ], !dbg !13462
  %and763 = and i32 %cond762, -983041, !dbg !13462
  %502 = load i32, i32* %_v624, align 4, !dbg !13462
  %and764 = and i32 %502, 15, !dbg !13462
  %shl765 = shl i32 %and764, 16, !dbg !13462
  %or766 = or i32 %and763, %shl765, !dbg !13462
  %and767 = and i32 %or766, -16777216, !dbg !13462
  %shr768 = lshr i32 %and767, 24, !dbg !13462
  %or769 = or i32 %or740, %shr768, !dbg !13462
  br label %cond.end798, !dbg !13462

cond.false770:                                    ; preds = %cond.end648
  %503 = load i8*, i8** %in, align 8, !dbg !13462
  %504 = bitcast i8* %503 to i32*, !dbg !13462
  %add.ptr771 = getelementptr i32, i32* %504, i64 2, !dbg !13462
  %505 = load i32, i32* %add.ptr771, align 4, !dbg !13462
  %506 = call i1 @llvm.is.constant.i32(i32 %505), !dbg !13462
  br i1 %506, label %cond.true772, label %cond.false788, !dbg !13462

cond.true772:                                     ; preds = %cond.false770
  %507 = load i8*, i8** %in, align 8, !dbg !13462
  %508 = bitcast i8* %507 to i32*, !dbg !13462
  %add.ptr773 = getelementptr i32, i32* %508, i64 2, !dbg !13462
  %509 = load i32, i32* %add.ptr773, align 4, !dbg !13462
  %and774 = and i32 %509, 255, !dbg !13462
  %shl775 = shl i32 %and774, 24, !dbg !13462
  %510 = load i8*, i8** %in, align 8, !dbg !13462
  %511 = bitcast i8* %510 to i32*, !dbg !13462
  %add.ptr776 = getelementptr i32, i32* %511, i64 2, !dbg !13462
  %512 = load i32, i32* %add.ptr776, align 4, !dbg !13462
  %and777 = and i32 %512, 65280, !dbg !13462
  %shl778 = shl i32 %and777, 8, !dbg !13462
  %or779 = or i32 %shl775, %shl778, !dbg !13462
  %513 = load i8*, i8** %in, align 8, !dbg !13462
  %514 = bitcast i8* %513 to i32*, !dbg !13462
  %add.ptr780 = getelementptr i32, i32* %514, i64 2, !dbg !13462
  %515 = load i32, i32* %add.ptr780, align 4, !dbg !13462
  %and781 = and i32 %515, 16711680, !dbg !13462
  %shr782 = lshr i32 %and781, 8, !dbg !13462
  %or783 = or i32 %or779, %shr782, !dbg !13462
  %516 = load i8*, i8** %in, align 8, !dbg !13462
  %517 = bitcast i8* %516 to i32*, !dbg !13462
  %add.ptr784 = getelementptr i32, i32* %517, i64 2, !dbg !13462
  %518 = load i32, i32* %add.ptr784, align 4, !dbg !13462
  %and785 = and i32 %518, -16777216, !dbg !13462
  %shr786 = lshr i32 %and785, 24, !dbg !13462
  %or787 = or i32 %or783, %shr786, !dbg !13462
  br label %cond.end791, !dbg !13462

cond.false788:                                    ; preds = %cond.false770
  %519 = load i8*, i8** %in, align 8, !dbg !13462
  %520 = bitcast i8* %519 to i32*, !dbg !13462
  %add.ptr789 = getelementptr i32, i32* %520, i64 2, !dbg !13462
  %521 = load i32, i32* %add.ptr789, align 4, !dbg !13462
  %call790 = call i32 @__fswab32(i32 %521) #8, !dbg !13462
  br label %cond.end791, !dbg !13462

cond.end791:                                      ; preds = %cond.false788, %cond.true772
  %cond792 = phi i32 [ %or787, %cond.true772 ], [ %call790, %cond.false788 ], !dbg !13462
  %and793 = and i32 %cond792, -983041, !dbg !13462
  %522 = load i32, i32* %_v624, align 4, !dbg !13462
  %and794 = and i32 %522, 15, !dbg !13462
  %shl795 = shl i32 %and794, 16, !dbg !13462
  %or796 = or i32 %and793, %shl795, !dbg !13462
  %call797 = call i32 @__fswab32(i32 %or796) #8, !dbg !13462
  br label %cond.end798, !dbg !13462

cond.end798:                                      ; preds = %cond.end791, %cond.end761
  %cond799 = phi i32 [ %or769, %cond.end761 ], [ %call797, %cond.end791 ], !dbg !13462
  %523 = load i8*, i8** %in, align 8, !dbg !13462
  %524 = bitcast i8* %523 to i32*, !dbg !13462
  %add.ptr800 = getelementptr i32, i32* %524, i64 2, !dbg !13462
  store i32 %cond799, i32* %add.ptr800, align 4, !dbg !13462
  br label %do.end801, !dbg !13462

do.end801:                                        ; preds = %cond.end798
  br label %if.end802, !dbg !13462

if.end802:                                        ; preds = %do.end801, %cond.end617
  %525 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !13465
  %526 = load i8*, i8** %in, align 8, !dbg !13465
  %527 = load i8*, i8** %out.addr, align 8, !dbg !13465
  %call803 = call i32 @mlx5_cmd_exec(%struct.mlx5_core_dev* %525, i8* %526, i32 32, i8* %527, i32 528) #9, !dbg !13465
  store i32 %call803, i32* %tmp, align 4, !dbg !13467
  %528 = load i32, i32* %tmp, align 4, !dbg !13465
  store i32 %528, i32* %err, align 4, !dbg !13468
  br label %free, !dbg !13469

free:                                             ; preds = %if.end802, %if.else
  call void @llvm.dbg.label(metadata !13470), !dbg !13471
  %529 = load i8*, i8** %in, align 8, !dbg !13472
  call void @kvfree(i8* %529) #9, !dbg !13473
  %530 = load i32, i32* %err, align 4, !dbg !13474
  store i32 %530, i32* %retval, align 4, !dbg !13475
  br label %return, !dbg !13475

return:                                           ; preds = %free, %if.then
  %531 = load i32, i32* %retval, align 4, !dbg !13476
  ret i32 %531, !dbg !13476
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @mlx5_query_vport_down_stats(%struct.mlx5_core_dev* %mdev, i16 zeroext %vport, i8 zeroext %other_vport, i64* %rx_discard_vport_down, i64* %tx_discard_vport_down) #0 !dbg !13477 {
entry:
  %retval = alloca i32, align 4
  %mdev.addr = alloca %struct.mlx5_core_dev*, align 8
  %vport.addr = alloca i16, align 2
  %other_vport.addr = alloca i8, align 1
  %rx_discard_vport_down.addr = alloca i64*, align 8
  %tx_discard_vport_down.addr = alloca i64*, align 8
  %out = alloca [132 x i32], align 16
  %in = alloca [4 x i32], align 16
  %err = alloca i32, align 4
  %_v = alloca i32, align 4
  %_v203 = alloca i32, align 4
  %_v418 = alloca i32, align 4
  %_v633 = alloca i32, align 4
  %tmp = alloca i32, align 4
  store %struct.mlx5_core_dev* %mdev, %struct.mlx5_core_dev** %mdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_core_dev** %mdev.addr, metadata !13480, metadata !DIExpression()), !dbg !13481
  store i16 %vport, i16* %vport.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %vport.addr, metadata !13482, metadata !DIExpression()), !dbg !13483
  store i8 %other_vport, i8* %other_vport.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %other_vport.addr, metadata !13484, metadata !DIExpression()), !dbg !13485
  store i64* %rx_discard_vport_down, i64** %rx_discard_vport_down.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %rx_discard_vport_down.addr, metadata !13486, metadata !DIExpression()), !dbg !13487
  store i64* %tx_discard_vport_down, i64** %tx_discard_vport_down.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %tx_discard_vport_down.addr, metadata !13488, metadata !DIExpression()), !dbg !13489
  call void @llvm.dbg.declare(metadata [132 x i32]* %out, metadata !13490, metadata !DIExpression()), !dbg !13494
  %0 = bitcast [132 x i32]* %out to i8*, !dbg !13494
  call void @llvm.memset.p0i8.i64(i8* align 16 %0, i8 0, i64 528, i1 false), !dbg !13494
  call void @llvm.dbg.declare(metadata [4 x i32]* %in, metadata !13495, metadata !DIExpression()), !dbg !13496
  %1 = bitcast [4 x i32]* %in to i8*, !dbg !13496
  call void @llvm.memset.p0i8.i64(i8* align 16 %1, i8 0, i64 16, i1 false), !dbg !13496
  call void @llvm.dbg.declare(metadata i32* %err, metadata !13497, metadata !DIExpression()), !dbg !13498
  br label %do.body, !dbg !13499

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %_v, metadata !13500, metadata !DIExpression()), !dbg !13502
  store i32 1903, i32* %_v, align 4, !dbg !13502
  br label %do.body1, !dbg !13502

do.body1:                                         ; preds = %do.body
  br label %do.end, !dbg !13503

do.end:                                           ; preds = %do.body1
  %arraydecay = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13502
  %add.ptr = getelementptr i32, i32* %arraydecay, i64 0, !dbg !13502
  %2 = load i32, i32* %add.ptr, align 4, !dbg !13502
  %3 = call i1 @llvm.is.constant.i32(i32 %2), !dbg !13502
  br i1 %3, label %cond.true, label %cond.false, !dbg !13502

cond.true:                                        ; preds = %do.end
  %arraydecay2 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13502
  %add.ptr3 = getelementptr i32, i32* %arraydecay2, i64 0, !dbg !13502
  %4 = load i32, i32* %add.ptr3, align 4, !dbg !13502
  %and = and i32 %4, 255, !dbg !13502
  %shl = shl i32 %and, 24, !dbg !13502
  %arraydecay4 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13502
  %add.ptr5 = getelementptr i32, i32* %arraydecay4, i64 0, !dbg !13502
  %5 = load i32, i32* %add.ptr5, align 4, !dbg !13502
  %and6 = and i32 %5, 65280, !dbg !13502
  %shl7 = shl i32 %and6, 8, !dbg !13502
  %or = or i32 %shl, %shl7, !dbg !13502
  %arraydecay8 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13502
  %add.ptr9 = getelementptr i32, i32* %arraydecay8, i64 0, !dbg !13502
  %6 = load i32, i32* %add.ptr9, align 4, !dbg !13502
  %and10 = and i32 %6, 16711680, !dbg !13502
  %shr = lshr i32 %and10, 8, !dbg !13502
  %or11 = or i32 %or, %shr, !dbg !13502
  %arraydecay12 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13502
  %add.ptr13 = getelementptr i32, i32* %arraydecay12, i64 0, !dbg !13502
  %7 = load i32, i32* %add.ptr13, align 4, !dbg !13502
  %and14 = and i32 %7, -16777216, !dbg !13502
  %shr15 = lshr i32 %and14, 24, !dbg !13502
  %or16 = or i32 %or11, %shr15, !dbg !13502
  br label %cond.end, !dbg !13502

cond.false:                                       ; preds = %do.end
  %arraydecay17 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13502
  %add.ptr18 = getelementptr i32, i32* %arraydecay17, i64 0, !dbg !13502
  %8 = load i32, i32* %add.ptr18, align 4, !dbg !13502
  %call = call i32 @__fswab32(i32 %8) #8, !dbg !13502
  br label %cond.end, !dbg !13502

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %or16, %cond.true ], [ %call, %cond.false ], !dbg !13502
  %and19 = and i32 %cond, 65535, !dbg !13502
  %9 = load i32, i32* %_v, align 4, !dbg !13502
  %and20 = and i32 %9, 65535, !dbg !13502
  %shl21 = shl i32 %and20, 16, !dbg !13502
  %or22 = or i32 %and19, %shl21, !dbg !13502
  %10 = call i1 @llvm.is.constant.i32(i32 %or22), !dbg !13502
  br i1 %10, label %cond.true23, label %cond.false163, !dbg !13502

cond.true23:                                      ; preds = %cond.end
  %arraydecay24 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13502
  %add.ptr25 = getelementptr i32, i32* %arraydecay24, i64 0, !dbg !13502
  %11 = load i32, i32* %add.ptr25, align 4, !dbg !13502
  %12 = call i1 @llvm.is.constant.i32(i32 %11), !dbg !13502
  br i1 %12, label %cond.true26, label %cond.false46, !dbg !13502

cond.true26:                                      ; preds = %cond.true23
  %arraydecay27 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13502
  %add.ptr28 = getelementptr i32, i32* %arraydecay27, i64 0, !dbg !13502
  %13 = load i32, i32* %add.ptr28, align 4, !dbg !13502
  %and29 = and i32 %13, 255, !dbg !13502
  %shl30 = shl i32 %and29, 24, !dbg !13502
  %arraydecay31 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13502
  %add.ptr32 = getelementptr i32, i32* %arraydecay31, i64 0, !dbg !13502
  %14 = load i32, i32* %add.ptr32, align 4, !dbg !13502
  %and33 = and i32 %14, 65280, !dbg !13502
  %shl34 = shl i32 %and33, 8, !dbg !13502
  %or35 = or i32 %shl30, %shl34, !dbg !13502
  %arraydecay36 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13502
  %add.ptr37 = getelementptr i32, i32* %arraydecay36, i64 0, !dbg !13502
  %15 = load i32, i32* %add.ptr37, align 4, !dbg !13502
  %and38 = and i32 %15, 16711680, !dbg !13502
  %shr39 = lshr i32 %and38, 8, !dbg !13502
  %or40 = or i32 %or35, %shr39, !dbg !13502
  %arraydecay41 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13502
  %add.ptr42 = getelementptr i32, i32* %arraydecay41, i64 0, !dbg !13502
  %16 = load i32, i32* %add.ptr42, align 4, !dbg !13502
  %and43 = and i32 %16, -16777216, !dbg !13502
  %shr44 = lshr i32 %and43, 24, !dbg !13502
  %or45 = or i32 %or40, %shr44, !dbg !13502
  br label %cond.end50, !dbg !13502

cond.false46:                                     ; preds = %cond.true23
  %arraydecay47 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13502
  %add.ptr48 = getelementptr i32, i32* %arraydecay47, i64 0, !dbg !13502
  %17 = load i32, i32* %add.ptr48, align 4, !dbg !13502
  %call49 = call i32 @__fswab32(i32 %17) #8, !dbg !13502
  br label %cond.end50, !dbg !13502

cond.end50:                                       ; preds = %cond.false46, %cond.true26
  %cond51 = phi i32 [ %or45, %cond.true26 ], [ %call49, %cond.false46 ], !dbg !13502
  %and52 = and i32 %cond51, 65535, !dbg !13502
  %18 = load i32, i32* %_v, align 4, !dbg !13502
  %and53 = and i32 %18, 65535, !dbg !13502
  %shl54 = shl i32 %and53, 16, !dbg !13502
  %or55 = or i32 %and52, %shl54, !dbg !13502
  %and56 = and i32 %or55, 255, !dbg !13502
  %shl57 = shl i32 %and56, 24, !dbg !13502
  %arraydecay58 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13502
  %add.ptr59 = getelementptr i32, i32* %arraydecay58, i64 0, !dbg !13502
  %19 = load i32, i32* %add.ptr59, align 4, !dbg !13502
  %20 = call i1 @llvm.is.constant.i32(i32 %19), !dbg !13502
  br i1 %20, label %cond.true60, label %cond.false80, !dbg !13502

cond.true60:                                      ; preds = %cond.end50
  %arraydecay61 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13502
  %add.ptr62 = getelementptr i32, i32* %arraydecay61, i64 0, !dbg !13502
  %21 = load i32, i32* %add.ptr62, align 4, !dbg !13502
  %and63 = and i32 %21, 255, !dbg !13502
  %shl64 = shl i32 %and63, 24, !dbg !13502
  %arraydecay65 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13502
  %add.ptr66 = getelementptr i32, i32* %arraydecay65, i64 0, !dbg !13502
  %22 = load i32, i32* %add.ptr66, align 4, !dbg !13502
  %and67 = and i32 %22, 65280, !dbg !13502
  %shl68 = shl i32 %and67, 8, !dbg !13502
  %or69 = or i32 %shl64, %shl68, !dbg !13502
  %arraydecay70 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13502
  %add.ptr71 = getelementptr i32, i32* %arraydecay70, i64 0, !dbg !13502
  %23 = load i32, i32* %add.ptr71, align 4, !dbg !13502
  %and72 = and i32 %23, 16711680, !dbg !13502
  %shr73 = lshr i32 %and72, 8, !dbg !13502
  %or74 = or i32 %or69, %shr73, !dbg !13502
  %arraydecay75 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13502
  %add.ptr76 = getelementptr i32, i32* %arraydecay75, i64 0, !dbg !13502
  %24 = load i32, i32* %add.ptr76, align 4, !dbg !13502
  %and77 = and i32 %24, -16777216, !dbg !13502
  %shr78 = lshr i32 %and77, 24, !dbg !13502
  %or79 = or i32 %or74, %shr78, !dbg !13502
  br label %cond.end84, !dbg !13502

cond.false80:                                     ; preds = %cond.end50
  %arraydecay81 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13502
  %add.ptr82 = getelementptr i32, i32* %arraydecay81, i64 0, !dbg !13502
  %25 = load i32, i32* %add.ptr82, align 4, !dbg !13502
  %call83 = call i32 @__fswab32(i32 %25) #8, !dbg !13502
  br label %cond.end84, !dbg !13502

cond.end84:                                       ; preds = %cond.false80, %cond.true60
  %cond85 = phi i32 [ %or79, %cond.true60 ], [ %call83, %cond.false80 ], !dbg !13502
  %and86 = and i32 %cond85, 65535, !dbg !13502
  %26 = load i32, i32* %_v, align 4, !dbg !13502
  %and87 = and i32 %26, 65535, !dbg !13502
  %shl88 = shl i32 %and87, 16, !dbg !13502
  %or89 = or i32 %and86, %shl88, !dbg !13502
  %and90 = and i32 %or89, 65280, !dbg !13502
  %shl91 = shl i32 %and90, 8, !dbg !13502
  %or92 = or i32 %shl57, %shl91, !dbg !13502
  %arraydecay93 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13502
  %add.ptr94 = getelementptr i32, i32* %arraydecay93, i64 0, !dbg !13502
  %27 = load i32, i32* %add.ptr94, align 4, !dbg !13502
  %28 = call i1 @llvm.is.constant.i32(i32 %27), !dbg !13502
  br i1 %28, label %cond.true95, label %cond.false115, !dbg !13502

cond.true95:                                      ; preds = %cond.end84
  %arraydecay96 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13502
  %add.ptr97 = getelementptr i32, i32* %arraydecay96, i64 0, !dbg !13502
  %29 = load i32, i32* %add.ptr97, align 4, !dbg !13502
  %and98 = and i32 %29, 255, !dbg !13502
  %shl99 = shl i32 %and98, 24, !dbg !13502
  %arraydecay100 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13502
  %add.ptr101 = getelementptr i32, i32* %arraydecay100, i64 0, !dbg !13502
  %30 = load i32, i32* %add.ptr101, align 4, !dbg !13502
  %and102 = and i32 %30, 65280, !dbg !13502
  %shl103 = shl i32 %and102, 8, !dbg !13502
  %or104 = or i32 %shl99, %shl103, !dbg !13502
  %arraydecay105 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13502
  %add.ptr106 = getelementptr i32, i32* %arraydecay105, i64 0, !dbg !13502
  %31 = load i32, i32* %add.ptr106, align 4, !dbg !13502
  %and107 = and i32 %31, 16711680, !dbg !13502
  %shr108 = lshr i32 %and107, 8, !dbg !13502
  %or109 = or i32 %or104, %shr108, !dbg !13502
  %arraydecay110 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13502
  %add.ptr111 = getelementptr i32, i32* %arraydecay110, i64 0, !dbg !13502
  %32 = load i32, i32* %add.ptr111, align 4, !dbg !13502
  %and112 = and i32 %32, -16777216, !dbg !13502
  %shr113 = lshr i32 %and112, 24, !dbg !13502
  %or114 = or i32 %or109, %shr113, !dbg !13502
  br label %cond.end119, !dbg !13502

cond.false115:                                    ; preds = %cond.end84
  %arraydecay116 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13502
  %add.ptr117 = getelementptr i32, i32* %arraydecay116, i64 0, !dbg !13502
  %33 = load i32, i32* %add.ptr117, align 4, !dbg !13502
  %call118 = call i32 @__fswab32(i32 %33) #8, !dbg !13502
  br label %cond.end119, !dbg !13502

cond.end119:                                      ; preds = %cond.false115, %cond.true95
  %cond120 = phi i32 [ %or114, %cond.true95 ], [ %call118, %cond.false115 ], !dbg !13502
  %and121 = and i32 %cond120, 65535, !dbg !13502
  %34 = load i32, i32* %_v, align 4, !dbg !13502
  %and122 = and i32 %34, 65535, !dbg !13502
  %shl123 = shl i32 %and122, 16, !dbg !13502
  %or124 = or i32 %and121, %shl123, !dbg !13502
  %and125 = and i32 %or124, 16711680, !dbg !13502
  %shr126 = lshr i32 %and125, 8, !dbg !13502
  %or127 = or i32 %or92, %shr126, !dbg !13502
  %arraydecay128 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13502
  %add.ptr129 = getelementptr i32, i32* %arraydecay128, i64 0, !dbg !13502
  %35 = load i32, i32* %add.ptr129, align 4, !dbg !13502
  %36 = call i1 @llvm.is.constant.i32(i32 %35), !dbg !13502
  br i1 %36, label %cond.true130, label %cond.false150, !dbg !13502

cond.true130:                                     ; preds = %cond.end119
  %arraydecay131 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13502
  %add.ptr132 = getelementptr i32, i32* %arraydecay131, i64 0, !dbg !13502
  %37 = load i32, i32* %add.ptr132, align 4, !dbg !13502
  %and133 = and i32 %37, 255, !dbg !13502
  %shl134 = shl i32 %and133, 24, !dbg !13502
  %arraydecay135 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13502
  %add.ptr136 = getelementptr i32, i32* %arraydecay135, i64 0, !dbg !13502
  %38 = load i32, i32* %add.ptr136, align 4, !dbg !13502
  %and137 = and i32 %38, 65280, !dbg !13502
  %shl138 = shl i32 %and137, 8, !dbg !13502
  %or139 = or i32 %shl134, %shl138, !dbg !13502
  %arraydecay140 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13502
  %add.ptr141 = getelementptr i32, i32* %arraydecay140, i64 0, !dbg !13502
  %39 = load i32, i32* %add.ptr141, align 4, !dbg !13502
  %and142 = and i32 %39, 16711680, !dbg !13502
  %shr143 = lshr i32 %and142, 8, !dbg !13502
  %or144 = or i32 %or139, %shr143, !dbg !13502
  %arraydecay145 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13502
  %add.ptr146 = getelementptr i32, i32* %arraydecay145, i64 0, !dbg !13502
  %40 = load i32, i32* %add.ptr146, align 4, !dbg !13502
  %and147 = and i32 %40, -16777216, !dbg !13502
  %shr148 = lshr i32 %and147, 24, !dbg !13502
  %or149 = or i32 %or144, %shr148, !dbg !13502
  br label %cond.end154, !dbg !13502

cond.false150:                                    ; preds = %cond.end119
  %arraydecay151 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13502
  %add.ptr152 = getelementptr i32, i32* %arraydecay151, i64 0, !dbg !13502
  %41 = load i32, i32* %add.ptr152, align 4, !dbg !13502
  %call153 = call i32 @__fswab32(i32 %41) #8, !dbg !13502
  br label %cond.end154, !dbg !13502

cond.end154:                                      ; preds = %cond.false150, %cond.true130
  %cond155 = phi i32 [ %or149, %cond.true130 ], [ %call153, %cond.false150 ], !dbg !13502
  %and156 = and i32 %cond155, 65535, !dbg !13502
  %42 = load i32, i32* %_v, align 4, !dbg !13502
  %and157 = and i32 %42, 65535, !dbg !13502
  %shl158 = shl i32 %and157, 16, !dbg !13502
  %or159 = or i32 %and156, %shl158, !dbg !13502
  %and160 = and i32 %or159, -16777216, !dbg !13502
  %shr161 = lshr i32 %and160, 24, !dbg !13502
  %or162 = or i32 %or127, %shr161, !dbg !13502
  br label %cond.end197, !dbg !13502

cond.false163:                                    ; preds = %cond.end
  %arraydecay164 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13502
  %add.ptr165 = getelementptr i32, i32* %arraydecay164, i64 0, !dbg !13502
  %43 = load i32, i32* %add.ptr165, align 4, !dbg !13502
  %44 = call i1 @llvm.is.constant.i32(i32 %43), !dbg !13502
  br i1 %44, label %cond.true166, label %cond.false186, !dbg !13502

cond.true166:                                     ; preds = %cond.false163
  %arraydecay167 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13502
  %add.ptr168 = getelementptr i32, i32* %arraydecay167, i64 0, !dbg !13502
  %45 = load i32, i32* %add.ptr168, align 4, !dbg !13502
  %and169 = and i32 %45, 255, !dbg !13502
  %shl170 = shl i32 %and169, 24, !dbg !13502
  %arraydecay171 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13502
  %add.ptr172 = getelementptr i32, i32* %arraydecay171, i64 0, !dbg !13502
  %46 = load i32, i32* %add.ptr172, align 4, !dbg !13502
  %and173 = and i32 %46, 65280, !dbg !13502
  %shl174 = shl i32 %and173, 8, !dbg !13502
  %or175 = or i32 %shl170, %shl174, !dbg !13502
  %arraydecay176 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13502
  %add.ptr177 = getelementptr i32, i32* %arraydecay176, i64 0, !dbg !13502
  %47 = load i32, i32* %add.ptr177, align 4, !dbg !13502
  %and178 = and i32 %47, 16711680, !dbg !13502
  %shr179 = lshr i32 %and178, 8, !dbg !13502
  %or180 = or i32 %or175, %shr179, !dbg !13502
  %arraydecay181 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13502
  %add.ptr182 = getelementptr i32, i32* %arraydecay181, i64 0, !dbg !13502
  %48 = load i32, i32* %add.ptr182, align 4, !dbg !13502
  %and183 = and i32 %48, -16777216, !dbg !13502
  %shr184 = lshr i32 %and183, 24, !dbg !13502
  %or185 = or i32 %or180, %shr184, !dbg !13502
  br label %cond.end190, !dbg !13502

cond.false186:                                    ; preds = %cond.false163
  %arraydecay187 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13502
  %add.ptr188 = getelementptr i32, i32* %arraydecay187, i64 0, !dbg !13502
  %49 = load i32, i32* %add.ptr188, align 4, !dbg !13502
  %call189 = call i32 @__fswab32(i32 %49) #8, !dbg !13502
  br label %cond.end190, !dbg !13502

cond.end190:                                      ; preds = %cond.false186, %cond.true166
  %cond191 = phi i32 [ %or185, %cond.true166 ], [ %call189, %cond.false186 ], !dbg !13502
  %and192 = and i32 %cond191, 65535, !dbg !13502
  %50 = load i32, i32* %_v, align 4, !dbg !13502
  %and193 = and i32 %50, 65535, !dbg !13502
  %shl194 = shl i32 %and193, 16, !dbg !13502
  %or195 = or i32 %and192, %shl194, !dbg !13502
  %call196 = call i32 @__fswab32(i32 %or195) #8, !dbg !13502
  br label %cond.end197, !dbg !13502

cond.end197:                                      ; preds = %cond.end190, %cond.end154
  %cond198 = phi i32 [ %or162, %cond.end154 ], [ %call196, %cond.end190 ], !dbg !13502
  %arraydecay199 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13502
  %add.ptr200 = getelementptr i32, i32* %arraydecay199, i64 0, !dbg !13502
  store i32 %cond198, i32* %add.ptr200, align 4, !dbg !13502
  br label %do.end201, !dbg !13502

do.end201:                                        ; preds = %cond.end197
  br label %do.body202, !dbg !13505

do.body202:                                       ; preds = %do.end201
  call void @llvm.dbg.declare(metadata i32* %_v203, metadata !13506, metadata !DIExpression()), !dbg !13508
  store i32 0, i32* %_v203, align 4, !dbg !13508
  br label %do.body204, !dbg !13508

do.body204:                                       ; preds = %do.body202
  br label %do.end205, !dbg !13509

do.end205:                                        ; preds = %do.body204
  %arraydecay206 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13508
  %add.ptr207 = getelementptr i32, i32* %arraydecay206, i64 1, !dbg !13508
  %51 = load i32, i32* %add.ptr207, align 4, !dbg !13508
  %52 = call i1 @llvm.is.constant.i32(i32 %51), !dbg !13508
  br i1 %52, label %cond.true208, label %cond.false228, !dbg !13508

cond.true208:                                     ; preds = %do.end205
  %arraydecay209 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13508
  %add.ptr210 = getelementptr i32, i32* %arraydecay209, i64 1, !dbg !13508
  %53 = load i32, i32* %add.ptr210, align 4, !dbg !13508
  %and211 = and i32 %53, 255, !dbg !13508
  %shl212 = shl i32 %and211, 24, !dbg !13508
  %arraydecay213 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13508
  %add.ptr214 = getelementptr i32, i32* %arraydecay213, i64 1, !dbg !13508
  %54 = load i32, i32* %add.ptr214, align 4, !dbg !13508
  %and215 = and i32 %54, 65280, !dbg !13508
  %shl216 = shl i32 %and215, 8, !dbg !13508
  %or217 = or i32 %shl212, %shl216, !dbg !13508
  %arraydecay218 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13508
  %add.ptr219 = getelementptr i32, i32* %arraydecay218, i64 1, !dbg !13508
  %55 = load i32, i32* %add.ptr219, align 4, !dbg !13508
  %and220 = and i32 %55, 16711680, !dbg !13508
  %shr221 = lshr i32 %and220, 8, !dbg !13508
  %or222 = or i32 %or217, %shr221, !dbg !13508
  %arraydecay223 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13508
  %add.ptr224 = getelementptr i32, i32* %arraydecay223, i64 1, !dbg !13508
  %56 = load i32, i32* %add.ptr224, align 4, !dbg !13508
  %and225 = and i32 %56, -16777216, !dbg !13508
  %shr226 = lshr i32 %and225, 24, !dbg !13508
  %or227 = or i32 %or222, %shr226, !dbg !13508
  br label %cond.end232, !dbg !13508

cond.false228:                                    ; preds = %do.end205
  %arraydecay229 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13508
  %add.ptr230 = getelementptr i32, i32* %arraydecay229, i64 1, !dbg !13508
  %57 = load i32, i32* %add.ptr230, align 4, !dbg !13508
  %call231 = call i32 @__fswab32(i32 %57) #8, !dbg !13508
  br label %cond.end232, !dbg !13508

cond.end232:                                      ; preds = %cond.false228, %cond.true208
  %cond233 = phi i32 [ %or227, %cond.true208 ], [ %call231, %cond.false228 ], !dbg !13508
  %and234 = and i32 %cond233, -65536, !dbg !13508
  %58 = load i32, i32* %_v203, align 4, !dbg !13508
  %and235 = and i32 %58, 65535, !dbg !13508
  %shl236 = shl i32 %and235, 0, !dbg !13508
  %or237 = or i32 %and234, %shl236, !dbg !13508
  %59 = call i1 @llvm.is.constant.i32(i32 %or237), !dbg !13508
  br i1 %59, label %cond.true238, label %cond.false378, !dbg !13508

cond.true238:                                     ; preds = %cond.end232
  %arraydecay239 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13508
  %add.ptr240 = getelementptr i32, i32* %arraydecay239, i64 1, !dbg !13508
  %60 = load i32, i32* %add.ptr240, align 4, !dbg !13508
  %61 = call i1 @llvm.is.constant.i32(i32 %60), !dbg !13508
  br i1 %61, label %cond.true241, label %cond.false261, !dbg !13508

cond.true241:                                     ; preds = %cond.true238
  %arraydecay242 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13508
  %add.ptr243 = getelementptr i32, i32* %arraydecay242, i64 1, !dbg !13508
  %62 = load i32, i32* %add.ptr243, align 4, !dbg !13508
  %and244 = and i32 %62, 255, !dbg !13508
  %shl245 = shl i32 %and244, 24, !dbg !13508
  %arraydecay246 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13508
  %add.ptr247 = getelementptr i32, i32* %arraydecay246, i64 1, !dbg !13508
  %63 = load i32, i32* %add.ptr247, align 4, !dbg !13508
  %and248 = and i32 %63, 65280, !dbg !13508
  %shl249 = shl i32 %and248, 8, !dbg !13508
  %or250 = or i32 %shl245, %shl249, !dbg !13508
  %arraydecay251 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13508
  %add.ptr252 = getelementptr i32, i32* %arraydecay251, i64 1, !dbg !13508
  %64 = load i32, i32* %add.ptr252, align 4, !dbg !13508
  %and253 = and i32 %64, 16711680, !dbg !13508
  %shr254 = lshr i32 %and253, 8, !dbg !13508
  %or255 = or i32 %or250, %shr254, !dbg !13508
  %arraydecay256 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13508
  %add.ptr257 = getelementptr i32, i32* %arraydecay256, i64 1, !dbg !13508
  %65 = load i32, i32* %add.ptr257, align 4, !dbg !13508
  %and258 = and i32 %65, -16777216, !dbg !13508
  %shr259 = lshr i32 %and258, 24, !dbg !13508
  %or260 = or i32 %or255, %shr259, !dbg !13508
  br label %cond.end265, !dbg !13508

cond.false261:                                    ; preds = %cond.true238
  %arraydecay262 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13508
  %add.ptr263 = getelementptr i32, i32* %arraydecay262, i64 1, !dbg !13508
  %66 = load i32, i32* %add.ptr263, align 4, !dbg !13508
  %call264 = call i32 @__fswab32(i32 %66) #8, !dbg !13508
  br label %cond.end265, !dbg !13508

cond.end265:                                      ; preds = %cond.false261, %cond.true241
  %cond266 = phi i32 [ %or260, %cond.true241 ], [ %call264, %cond.false261 ], !dbg !13508
  %and267 = and i32 %cond266, -65536, !dbg !13508
  %67 = load i32, i32* %_v203, align 4, !dbg !13508
  %and268 = and i32 %67, 65535, !dbg !13508
  %shl269 = shl i32 %and268, 0, !dbg !13508
  %or270 = or i32 %and267, %shl269, !dbg !13508
  %and271 = and i32 %or270, 255, !dbg !13508
  %shl272 = shl i32 %and271, 24, !dbg !13508
  %arraydecay273 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13508
  %add.ptr274 = getelementptr i32, i32* %arraydecay273, i64 1, !dbg !13508
  %68 = load i32, i32* %add.ptr274, align 4, !dbg !13508
  %69 = call i1 @llvm.is.constant.i32(i32 %68), !dbg !13508
  br i1 %69, label %cond.true275, label %cond.false295, !dbg !13508

cond.true275:                                     ; preds = %cond.end265
  %arraydecay276 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13508
  %add.ptr277 = getelementptr i32, i32* %arraydecay276, i64 1, !dbg !13508
  %70 = load i32, i32* %add.ptr277, align 4, !dbg !13508
  %and278 = and i32 %70, 255, !dbg !13508
  %shl279 = shl i32 %and278, 24, !dbg !13508
  %arraydecay280 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13508
  %add.ptr281 = getelementptr i32, i32* %arraydecay280, i64 1, !dbg !13508
  %71 = load i32, i32* %add.ptr281, align 4, !dbg !13508
  %and282 = and i32 %71, 65280, !dbg !13508
  %shl283 = shl i32 %and282, 8, !dbg !13508
  %or284 = or i32 %shl279, %shl283, !dbg !13508
  %arraydecay285 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13508
  %add.ptr286 = getelementptr i32, i32* %arraydecay285, i64 1, !dbg !13508
  %72 = load i32, i32* %add.ptr286, align 4, !dbg !13508
  %and287 = and i32 %72, 16711680, !dbg !13508
  %shr288 = lshr i32 %and287, 8, !dbg !13508
  %or289 = or i32 %or284, %shr288, !dbg !13508
  %arraydecay290 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13508
  %add.ptr291 = getelementptr i32, i32* %arraydecay290, i64 1, !dbg !13508
  %73 = load i32, i32* %add.ptr291, align 4, !dbg !13508
  %and292 = and i32 %73, -16777216, !dbg !13508
  %shr293 = lshr i32 %and292, 24, !dbg !13508
  %or294 = or i32 %or289, %shr293, !dbg !13508
  br label %cond.end299, !dbg !13508

cond.false295:                                    ; preds = %cond.end265
  %arraydecay296 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13508
  %add.ptr297 = getelementptr i32, i32* %arraydecay296, i64 1, !dbg !13508
  %74 = load i32, i32* %add.ptr297, align 4, !dbg !13508
  %call298 = call i32 @__fswab32(i32 %74) #8, !dbg !13508
  br label %cond.end299, !dbg !13508

cond.end299:                                      ; preds = %cond.false295, %cond.true275
  %cond300 = phi i32 [ %or294, %cond.true275 ], [ %call298, %cond.false295 ], !dbg !13508
  %and301 = and i32 %cond300, -65536, !dbg !13508
  %75 = load i32, i32* %_v203, align 4, !dbg !13508
  %and302 = and i32 %75, 65535, !dbg !13508
  %shl303 = shl i32 %and302, 0, !dbg !13508
  %or304 = or i32 %and301, %shl303, !dbg !13508
  %and305 = and i32 %or304, 65280, !dbg !13508
  %shl306 = shl i32 %and305, 8, !dbg !13508
  %or307 = or i32 %shl272, %shl306, !dbg !13508
  %arraydecay308 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13508
  %add.ptr309 = getelementptr i32, i32* %arraydecay308, i64 1, !dbg !13508
  %76 = load i32, i32* %add.ptr309, align 4, !dbg !13508
  %77 = call i1 @llvm.is.constant.i32(i32 %76), !dbg !13508
  br i1 %77, label %cond.true310, label %cond.false330, !dbg !13508

cond.true310:                                     ; preds = %cond.end299
  %arraydecay311 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13508
  %add.ptr312 = getelementptr i32, i32* %arraydecay311, i64 1, !dbg !13508
  %78 = load i32, i32* %add.ptr312, align 4, !dbg !13508
  %and313 = and i32 %78, 255, !dbg !13508
  %shl314 = shl i32 %and313, 24, !dbg !13508
  %arraydecay315 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13508
  %add.ptr316 = getelementptr i32, i32* %arraydecay315, i64 1, !dbg !13508
  %79 = load i32, i32* %add.ptr316, align 4, !dbg !13508
  %and317 = and i32 %79, 65280, !dbg !13508
  %shl318 = shl i32 %and317, 8, !dbg !13508
  %or319 = or i32 %shl314, %shl318, !dbg !13508
  %arraydecay320 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13508
  %add.ptr321 = getelementptr i32, i32* %arraydecay320, i64 1, !dbg !13508
  %80 = load i32, i32* %add.ptr321, align 4, !dbg !13508
  %and322 = and i32 %80, 16711680, !dbg !13508
  %shr323 = lshr i32 %and322, 8, !dbg !13508
  %or324 = or i32 %or319, %shr323, !dbg !13508
  %arraydecay325 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13508
  %add.ptr326 = getelementptr i32, i32* %arraydecay325, i64 1, !dbg !13508
  %81 = load i32, i32* %add.ptr326, align 4, !dbg !13508
  %and327 = and i32 %81, -16777216, !dbg !13508
  %shr328 = lshr i32 %and327, 24, !dbg !13508
  %or329 = or i32 %or324, %shr328, !dbg !13508
  br label %cond.end334, !dbg !13508

cond.false330:                                    ; preds = %cond.end299
  %arraydecay331 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13508
  %add.ptr332 = getelementptr i32, i32* %arraydecay331, i64 1, !dbg !13508
  %82 = load i32, i32* %add.ptr332, align 4, !dbg !13508
  %call333 = call i32 @__fswab32(i32 %82) #8, !dbg !13508
  br label %cond.end334, !dbg !13508

cond.end334:                                      ; preds = %cond.false330, %cond.true310
  %cond335 = phi i32 [ %or329, %cond.true310 ], [ %call333, %cond.false330 ], !dbg !13508
  %and336 = and i32 %cond335, -65536, !dbg !13508
  %83 = load i32, i32* %_v203, align 4, !dbg !13508
  %and337 = and i32 %83, 65535, !dbg !13508
  %shl338 = shl i32 %and337, 0, !dbg !13508
  %or339 = or i32 %and336, %shl338, !dbg !13508
  %and340 = and i32 %or339, 16711680, !dbg !13508
  %shr341 = lshr i32 %and340, 8, !dbg !13508
  %or342 = or i32 %or307, %shr341, !dbg !13508
  %arraydecay343 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13508
  %add.ptr344 = getelementptr i32, i32* %arraydecay343, i64 1, !dbg !13508
  %84 = load i32, i32* %add.ptr344, align 4, !dbg !13508
  %85 = call i1 @llvm.is.constant.i32(i32 %84), !dbg !13508
  br i1 %85, label %cond.true345, label %cond.false365, !dbg !13508

cond.true345:                                     ; preds = %cond.end334
  %arraydecay346 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13508
  %add.ptr347 = getelementptr i32, i32* %arraydecay346, i64 1, !dbg !13508
  %86 = load i32, i32* %add.ptr347, align 4, !dbg !13508
  %and348 = and i32 %86, 255, !dbg !13508
  %shl349 = shl i32 %and348, 24, !dbg !13508
  %arraydecay350 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13508
  %add.ptr351 = getelementptr i32, i32* %arraydecay350, i64 1, !dbg !13508
  %87 = load i32, i32* %add.ptr351, align 4, !dbg !13508
  %and352 = and i32 %87, 65280, !dbg !13508
  %shl353 = shl i32 %and352, 8, !dbg !13508
  %or354 = or i32 %shl349, %shl353, !dbg !13508
  %arraydecay355 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13508
  %add.ptr356 = getelementptr i32, i32* %arraydecay355, i64 1, !dbg !13508
  %88 = load i32, i32* %add.ptr356, align 4, !dbg !13508
  %and357 = and i32 %88, 16711680, !dbg !13508
  %shr358 = lshr i32 %and357, 8, !dbg !13508
  %or359 = or i32 %or354, %shr358, !dbg !13508
  %arraydecay360 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13508
  %add.ptr361 = getelementptr i32, i32* %arraydecay360, i64 1, !dbg !13508
  %89 = load i32, i32* %add.ptr361, align 4, !dbg !13508
  %and362 = and i32 %89, -16777216, !dbg !13508
  %shr363 = lshr i32 %and362, 24, !dbg !13508
  %or364 = or i32 %or359, %shr363, !dbg !13508
  br label %cond.end369, !dbg !13508

cond.false365:                                    ; preds = %cond.end334
  %arraydecay366 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13508
  %add.ptr367 = getelementptr i32, i32* %arraydecay366, i64 1, !dbg !13508
  %90 = load i32, i32* %add.ptr367, align 4, !dbg !13508
  %call368 = call i32 @__fswab32(i32 %90) #8, !dbg !13508
  br label %cond.end369, !dbg !13508

cond.end369:                                      ; preds = %cond.false365, %cond.true345
  %cond370 = phi i32 [ %or364, %cond.true345 ], [ %call368, %cond.false365 ], !dbg !13508
  %and371 = and i32 %cond370, -65536, !dbg !13508
  %91 = load i32, i32* %_v203, align 4, !dbg !13508
  %and372 = and i32 %91, 65535, !dbg !13508
  %shl373 = shl i32 %and372, 0, !dbg !13508
  %or374 = or i32 %and371, %shl373, !dbg !13508
  %and375 = and i32 %or374, -16777216, !dbg !13508
  %shr376 = lshr i32 %and375, 24, !dbg !13508
  %or377 = or i32 %or342, %shr376, !dbg !13508
  br label %cond.end412, !dbg !13508

cond.false378:                                    ; preds = %cond.end232
  %arraydecay379 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13508
  %add.ptr380 = getelementptr i32, i32* %arraydecay379, i64 1, !dbg !13508
  %92 = load i32, i32* %add.ptr380, align 4, !dbg !13508
  %93 = call i1 @llvm.is.constant.i32(i32 %92), !dbg !13508
  br i1 %93, label %cond.true381, label %cond.false401, !dbg !13508

cond.true381:                                     ; preds = %cond.false378
  %arraydecay382 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13508
  %add.ptr383 = getelementptr i32, i32* %arraydecay382, i64 1, !dbg !13508
  %94 = load i32, i32* %add.ptr383, align 4, !dbg !13508
  %and384 = and i32 %94, 255, !dbg !13508
  %shl385 = shl i32 %and384, 24, !dbg !13508
  %arraydecay386 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13508
  %add.ptr387 = getelementptr i32, i32* %arraydecay386, i64 1, !dbg !13508
  %95 = load i32, i32* %add.ptr387, align 4, !dbg !13508
  %and388 = and i32 %95, 65280, !dbg !13508
  %shl389 = shl i32 %and388, 8, !dbg !13508
  %or390 = or i32 %shl385, %shl389, !dbg !13508
  %arraydecay391 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13508
  %add.ptr392 = getelementptr i32, i32* %arraydecay391, i64 1, !dbg !13508
  %96 = load i32, i32* %add.ptr392, align 4, !dbg !13508
  %and393 = and i32 %96, 16711680, !dbg !13508
  %shr394 = lshr i32 %and393, 8, !dbg !13508
  %or395 = or i32 %or390, %shr394, !dbg !13508
  %arraydecay396 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13508
  %add.ptr397 = getelementptr i32, i32* %arraydecay396, i64 1, !dbg !13508
  %97 = load i32, i32* %add.ptr397, align 4, !dbg !13508
  %and398 = and i32 %97, -16777216, !dbg !13508
  %shr399 = lshr i32 %and398, 24, !dbg !13508
  %or400 = or i32 %or395, %shr399, !dbg !13508
  br label %cond.end405, !dbg !13508

cond.false401:                                    ; preds = %cond.false378
  %arraydecay402 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13508
  %add.ptr403 = getelementptr i32, i32* %arraydecay402, i64 1, !dbg !13508
  %98 = load i32, i32* %add.ptr403, align 4, !dbg !13508
  %call404 = call i32 @__fswab32(i32 %98) #8, !dbg !13508
  br label %cond.end405, !dbg !13508

cond.end405:                                      ; preds = %cond.false401, %cond.true381
  %cond406 = phi i32 [ %or400, %cond.true381 ], [ %call404, %cond.false401 ], !dbg !13508
  %and407 = and i32 %cond406, -65536, !dbg !13508
  %99 = load i32, i32* %_v203, align 4, !dbg !13508
  %and408 = and i32 %99, 65535, !dbg !13508
  %shl409 = shl i32 %and408, 0, !dbg !13508
  %or410 = or i32 %and407, %shl409, !dbg !13508
  %call411 = call i32 @__fswab32(i32 %or410) #8, !dbg !13508
  br label %cond.end412, !dbg !13508

cond.end412:                                      ; preds = %cond.end405, %cond.end369
  %cond413 = phi i32 [ %or377, %cond.end369 ], [ %call411, %cond.end405 ], !dbg !13508
  %arraydecay414 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13508
  %add.ptr415 = getelementptr i32, i32* %arraydecay414, i64 1, !dbg !13508
  store i32 %cond413, i32* %add.ptr415, align 4, !dbg !13508
  br label %do.end416, !dbg !13508

do.end416:                                        ; preds = %cond.end412
  br label %do.body417, !dbg !13511

do.body417:                                       ; preds = %do.end416
  call void @llvm.dbg.declare(metadata i32* %_v418, metadata !13512, metadata !DIExpression()), !dbg !13514
  %100 = load i16, i16* %vport.addr, align 2, !dbg !13514
  %conv = zext i16 %100 to i32, !dbg !13514
  store i32 %conv, i32* %_v418, align 4, !dbg !13514
  br label %do.body419, !dbg !13514

do.body419:                                       ; preds = %do.body417
  br label %do.end420, !dbg !13515

do.end420:                                        ; preds = %do.body419
  %arraydecay421 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13514
  %add.ptr422 = getelementptr i32, i32* %arraydecay421, i64 2, !dbg !13514
  %101 = load i32, i32* %add.ptr422, align 4, !dbg !13514
  %102 = call i1 @llvm.is.constant.i32(i32 %101), !dbg !13514
  br i1 %102, label %cond.true423, label %cond.false443, !dbg !13514

cond.true423:                                     ; preds = %do.end420
  %arraydecay424 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13514
  %add.ptr425 = getelementptr i32, i32* %arraydecay424, i64 2, !dbg !13514
  %103 = load i32, i32* %add.ptr425, align 4, !dbg !13514
  %and426 = and i32 %103, 255, !dbg !13514
  %shl427 = shl i32 %and426, 24, !dbg !13514
  %arraydecay428 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13514
  %add.ptr429 = getelementptr i32, i32* %arraydecay428, i64 2, !dbg !13514
  %104 = load i32, i32* %add.ptr429, align 4, !dbg !13514
  %and430 = and i32 %104, 65280, !dbg !13514
  %shl431 = shl i32 %and430, 8, !dbg !13514
  %or432 = or i32 %shl427, %shl431, !dbg !13514
  %arraydecay433 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13514
  %add.ptr434 = getelementptr i32, i32* %arraydecay433, i64 2, !dbg !13514
  %105 = load i32, i32* %add.ptr434, align 4, !dbg !13514
  %and435 = and i32 %105, 16711680, !dbg !13514
  %shr436 = lshr i32 %and435, 8, !dbg !13514
  %or437 = or i32 %or432, %shr436, !dbg !13514
  %arraydecay438 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13514
  %add.ptr439 = getelementptr i32, i32* %arraydecay438, i64 2, !dbg !13514
  %106 = load i32, i32* %add.ptr439, align 4, !dbg !13514
  %and440 = and i32 %106, -16777216, !dbg !13514
  %shr441 = lshr i32 %and440, 24, !dbg !13514
  %or442 = or i32 %or437, %shr441, !dbg !13514
  br label %cond.end447, !dbg !13514

cond.false443:                                    ; preds = %do.end420
  %arraydecay444 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13514
  %add.ptr445 = getelementptr i32, i32* %arraydecay444, i64 2, !dbg !13514
  %107 = load i32, i32* %add.ptr445, align 4, !dbg !13514
  %call446 = call i32 @__fswab32(i32 %107) #8, !dbg !13514
  br label %cond.end447, !dbg !13514

cond.end447:                                      ; preds = %cond.false443, %cond.true423
  %cond448 = phi i32 [ %or442, %cond.true423 ], [ %call446, %cond.false443 ], !dbg !13514
  %and449 = and i32 %cond448, -65536, !dbg !13514
  %108 = load i32, i32* %_v418, align 4, !dbg !13514
  %and450 = and i32 %108, 65535, !dbg !13514
  %shl451 = shl i32 %and450, 0, !dbg !13514
  %or452 = or i32 %and449, %shl451, !dbg !13514
  %109 = call i1 @llvm.is.constant.i32(i32 %or452), !dbg !13514
  br i1 %109, label %cond.true453, label %cond.false593, !dbg !13514

cond.true453:                                     ; preds = %cond.end447
  %arraydecay454 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13514
  %add.ptr455 = getelementptr i32, i32* %arraydecay454, i64 2, !dbg !13514
  %110 = load i32, i32* %add.ptr455, align 4, !dbg !13514
  %111 = call i1 @llvm.is.constant.i32(i32 %110), !dbg !13514
  br i1 %111, label %cond.true456, label %cond.false476, !dbg !13514

cond.true456:                                     ; preds = %cond.true453
  %arraydecay457 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13514
  %add.ptr458 = getelementptr i32, i32* %arraydecay457, i64 2, !dbg !13514
  %112 = load i32, i32* %add.ptr458, align 4, !dbg !13514
  %and459 = and i32 %112, 255, !dbg !13514
  %shl460 = shl i32 %and459, 24, !dbg !13514
  %arraydecay461 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13514
  %add.ptr462 = getelementptr i32, i32* %arraydecay461, i64 2, !dbg !13514
  %113 = load i32, i32* %add.ptr462, align 4, !dbg !13514
  %and463 = and i32 %113, 65280, !dbg !13514
  %shl464 = shl i32 %and463, 8, !dbg !13514
  %or465 = or i32 %shl460, %shl464, !dbg !13514
  %arraydecay466 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13514
  %add.ptr467 = getelementptr i32, i32* %arraydecay466, i64 2, !dbg !13514
  %114 = load i32, i32* %add.ptr467, align 4, !dbg !13514
  %and468 = and i32 %114, 16711680, !dbg !13514
  %shr469 = lshr i32 %and468, 8, !dbg !13514
  %or470 = or i32 %or465, %shr469, !dbg !13514
  %arraydecay471 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13514
  %add.ptr472 = getelementptr i32, i32* %arraydecay471, i64 2, !dbg !13514
  %115 = load i32, i32* %add.ptr472, align 4, !dbg !13514
  %and473 = and i32 %115, -16777216, !dbg !13514
  %shr474 = lshr i32 %and473, 24, !dbg !13514
  %or475 = or i32 %or470, %shr474, !dbg !13514
  br label %cond.end480, !dbg !13514

cond.false476:                                    ; preds = %cond.true453
  %arraydecay477 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13514
  %add.ptr478 = getelementptr i32, i32* %arraydecay477, i64 2, !dbg !13514
  %116 = load i32, i32* %add.ptr478, align 4, !dbg !13514
  %call479 = call i32 @__fswab32(i32 %116) #8, !dbg !13514
  br label %cond.end480, !dbg !13514

cond.end480:                                      ; preds = %cond.false476, %cond.true456
  %cond481 = phi i32 [ %or475, %cond.true456 ], [ %call479, %cond.false476 ], !dbg !13514
  %and482 = and i32 %cond481, -65536, !dbg !13514
  %117 = load i32, i32* %_v418, align 4, !dbg !13514
  %and483 = and i32 %117, 65535, !dbg !13514
  %shl484 = shl i32 %and483, 0, !dbg !13514
  %or485 = or i32 %and482, %shl484, !dbg !13514
  %and486 = and i32 %or485, 255, !dbg !13514
  %shl487 = shl i32 %and486, 24, !dbg !13514
  %arraydecay488 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13514
  %add.ptr489 = getelementptr i32, i32* %arraydecay488, i64 2, !dbg !13514
  %118 = load i32, i32* %add.ptr489, align 4, !dbg !13514
  %119 = call i1 @llvm.is.constant.i32(i32 %118), !dbg !13514
  br i1 %119, label %cond.true490, label %cond.false510, !dbg !13514

cond.true490:                                     ; preds = %cond.end480
  %arraydecay491 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13514
  %add.ptr492 = getelementptr i32, i32* %arraydecay491, i64 2, !dbg !13514
  %120 = load i32, i32* %add.ptr492, align 4, !dbg !13514
  %and493 = and i32 %120, 255, !dbg !13514
  %shl494 = shl i32 %and493, 24, !dbg !13514
  %arraydecay495 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13514
  %add.ptr496 = getelementptr i32, i32* %arraydecay495, i64 2, !dbg !13514
  %121 = load i32, i32* %add.ptr496, align 4, !dbg !13514
  %and497 = and i32 %121, 65280, !dbg !13514
  %shl498 = shl i32 %and497, 8, !dbg !13514
  %or499 = or i32 %shl494, %shl498, !dbg !13514
  %arraydecay500 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13514
  %add.ptr501 = getelementptr i32, i32* %arraydecay500, i64 2, !dbg !13514
  %122 = load i32, i32* %add.ptr501, align 4, !dbg !13514
  %and502 = and i32 %122, 16711680, !dbg !13514
  %shr503 = lshr i32 %and502, 8, !dbg !13514
  %or504 = or i32 %or499, %shr503, !dbg !13514
  %arraydecay505 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13514
  %add.ptr506 = getelementptr i32, i32* %arraydecay505, i64 2, !dbg !13514
  %123 = load i32, i32* %add.ptr506, align 4, !dbg !13514
  %and507 = and i32 %123, -16777216, !dbg !13514
  %shr508 = lshr i32 %and507, 24, !dbg !13514
  %or509 = or i32 %or504, %shr508, !dbg !13514
  br label %cond.end514, !dbg !13514

cond.false510:                                    ; preds = %cond.end480
  %arraydecay511 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13514
  %add.ptr512 = getelementptr i32, i32* %arraydecay511, i64 2, !dbg !13514
  %124 = load i32, i32* %add.ptr512, align 4, !dbg !13514
  %call513 = call i32 @__fswab32(i32 %124) #8, !dbg !13514
  br label %cond.end514, !dbg !13514

cond.end514:                                      ; preds = %cond.false510, %cond.true490
  %cond515 = phi i32 [ %or509, %cond.true490 ], [ %call513, %cond.false510 ], !dbg !13514
  %and516 = and i32 %cond515, -65536, !dbg !13514
  %125 = load i32, i32* %_v418, align 4, !dbg !13514
  %and517 = and i32 %125, 65535, !dbg !13514
  %shl518 = shl i32 %and517, 0, !dbg !13514
  %or519 = or i32 %and516, %shl518, !dbg !13514
  %and520 = and i32 %or519, 65280, !dbg !13514
  %shl521 = shl i32 %and520, 8, !dbg !13514
  %or522 = or i32 %shl487, %shl521, !dbg !13514
  %arraydecay523 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13514
  %add.ptr524 = getelementptr i32, i32* %arraydecay523, i64 2, !dbg !13514
  %126 = load i32, i32* %add.ptr524, align 4, !dbg !13514
  %127 = call i1 @llvm.is.constant.i32(i32 %126), !dbg !13514
  br i1 %127, label %cond.true525, label %cond.false545, !dbg !13514

cond.true525:                                     ; preds = %cond.end514
  %arraydecay526 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13514
  %add.ptr527 = getelementptr i32, i32* %arraydecay526, i64 2, !dbg !13514
  %128 = load i32, i32* %add.ptr527, align 4, !dbg !13514
  %and528 = and i32 %128, 255, !dbg !13514
  %shl529 = shl i32 %and528, 24, !dbg !13514
  %arraydecay530 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13514
  %add.ptr531 = getelementptr i32, i32* %arraydecay530, i64 2, !dbg !13514
  %129 = load i32, i32* %add.ptr531, align 4, !dbg !13514
  %and532 = and i32 %129, 65280, !dbg !13514
  %shl533 = shl i32 %and532, 8, !dbg !13514
  %or534 = or i32 %shl529, %shl533, !dbg !13514
  %arraydecay535 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13514
  %add.ptr536 = getelementptr i32, i32* %arraydecay535, i64 2, !dbg !13514
  %130 = load i32, i32* %add.ptr536, align 4, !dbg !13514
  %and537 = and i32 %130, 16711680, !dbg !13514
  %shr538 = lshr i32 %and537, 8, !dbg !13514
  %or539 = or i32 %or534, %shr538, !dbg !13514
  %arraydecay540 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13514
  %add.ptr541 = getelementptr i32, i32* %arraydecay540, i64 2, !dbg !13514
  %131 = load i32, i32* %add.ptr541, align 4, !dbg !13514
  %and542 = and i32 %131, -16777216, !dbg !13514
  %shr543 = lshr i32 %and542, 24, !dbg !13514
  %or544 = or i32 %or539, %shr543, !dbg !13514
  br label %cond.end549, !dbg !13514

cond.false545:                                    ; preds = %cond.end514
  %arraydecay546 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13514
  %add.ptr547 = getelementptr i32, i32* %arraydecay546, i64 2, !dbg !13514
  %132 = load i32, i32* %add.ptr547, align 4, !dbg !13514
  %call548 = call i32 @__fswab32(i32 %132) #8, !dbg !13514
  br label %cond.end549, !dbg !13514

cond.end549:                                      ; preds = %cond.false545, %cond.true525
  %cond550 = phi i32 [ %or544, %cond.true525 ], [ %call548, %cond.false545 ], !dbg !13514
  %and551 = and i32 %cond550, -65536, !dbg !13514
  %133 = load i32, i32* %_v418, align 4, !dbg !13514
  %and552 = and i32 %133, 65535, !dbg !13514
  %shl553 = shl i32 %and552, 0, !dbg !13514
  %or554 = or i32 %and551, %shl553, !dbg !13514
  %and555 = and i32 %or554, 16711680, !dbg !13514
  %shr556 = lshr i32 %and555, 8, !dbg !13514
  %or557 = or i32 %or522, %shr556, !dbg !13514
  %arraydecay558 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13514
  %add.ptr559 = getelementptr i32, i32* %arraydecay558, i64 2, !dbg !13514
  %134 = load i32, i32* %add.ptr559, align 4, !dbg !13514
  %135 = call i1 @llvm.is.constant.i32(i32 %134), !dbg !13514
  br i1 %135, label %cond.true560, label %cond.false580, !dbg !13514

cond.true560:                                     ; preds = %cond.end549
  %arraydecay561 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13514
  %add.ptr562 = getelementptr i32, i32* %arraydecay561, i64 2, !dbg !13514
  %136 = load i32, i32* %add.ptr562, align 4, !dbg !13514
  %and563 = and i32 %136, 255, !dbg !13514
  %shl564 = shl i32 %and563, 24, !dbg !13514
  %arraydecay565 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13514
  %add.ptr566 = getelementptr i32, i32* %arraydecay565, i64 2, !dbg !13514
  %137 = load i32, i32* %add.ptr566, align 4, !dbg !13514
  %and567 = and i32 %137, 65280, !dbg !13514
  %shl568 = shl i32 %and567, 8, !dbg !13514
  %or569 = or i32 %shl564, %shl568, !dbg !13514
  %arraydecay570 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13514
  %add.ptr571 = getelementptr i32, i32* %arraydecay570, i64 2, !dbg !13514
  %138 = load i32, i32* %add.ptr571, align 4, !dbg !13514
  %and572 = and i32 %138, 16711680, !dbg !13514
  %shr573 = lshr i32 %and572, 8, !dbg !13514
  %or574 = or i32 %or569, %shr573, !dbg !13514
  %arraydecay575 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13514
  %add.ptr576 = getelementptr i32, i32* %arraydecay575, i64 2, !dbg !13514
  %139 = load i32, i32* %add.ptr576, align 4, !dbg !13514
  %and577 = and i32 %139, -16777216, !dbg !13514
  %shr578 = lshr i32 %and577, 24, !dbg !13514
  %or579 = or i32 %or574, %shr578, !dbg !13514
  br label %cond.end584, !dbg !13514

cond.false580:                                    ; preds = %cond.end549
  %arraydecay581 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13514
  %add.ptr582 = getelementptr i32, i32* %arraydecay581, i64 2, !dbg !13514
  %140 = load i32, i32* %add.ptr582, align 4, !dbg !13514
  %call583 = call i32 @__fswab32(i32 %140) #8, !dbg !13514
  br label %cond.end584, !dbg !13514

cond.end584:                                      ; preds = %cond.false580, %cond.true560
  %cond585 = phi i32 [ %or579, %cond.true560 ], [ %call583, %cond.false580 ], !dbg !13514
  %and586 = and i32 %cond585, -65536, !dbg !13514
  %141 = load i32, i32* %_v418, align 4, !dbg !13514
  %and587 = and i32 %141, 65535, !dbg !13514
  %shl588 = shl i32 %and587, 0, !dbg !13514
  %or589 = or i32 %and586, %shl588, !dbg !13514
  %and590 = and i32 %or589, -16777216, !dbg !13514
  %shr591 = lshr i32 %and590, 24, !dbg !13514
  %or592 = or i32 %or557, %shr591, !dbg !13514
  br label %cond.end627, !dbg !13514

cond.false593:                                    ; preds = %cond.end447
  %arraydecay594 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13514
  %add.ptr595 = getelementptr i32, i32* %arraydecay594, i64 2, !dbg !13514
  %142 = load i32, i32* %add.ptr595, align 4, !dbg !13514
  %143 = call i1 @llvm.is.constant.i32(i32 %142), !dbg !13514
  br i1 %143, label %cond.true596, label %cond.false616, !dbg !13514

cond.true596:                                     ; preds = %cond.false593
  %arraydecay597 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13514
  %add.ptr598 = getelementptr i32, i32* %arraydecay597, i64 2, !dbg !13514
  %144 = load i32, i32* %add.ptr598, align 4, !dbg !13514
  %and599 = and i32 %144, 255, !dbg !13514
  %shl600 = shl i32 %and599, 24, !dbg !13514
  %arraydecay601 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13514
  %add.ptr602 = getelementptr i32, i32* %arraydecay601, i64 2, !dbg !13514
  %145 = load i32, i32* %add.ptr602, align 4, !dbg !13514
  %and603 = and i32 %145, 65280, !dbg !13514
  %shl604 = shl i32 %and603, 8, !dbg !13514
  %or605 = or i32 %shl600, %shl604, !dbg !13514
  %arraydecay606 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13514
  %add.ptr607 = getelementptr i32, i32* %arraydecay606, i64 2, !dbg !13514
  %146 = load i32, i32* %add.ptr607, align 4, !dbg !13514
  %and608 = and i32 %146, 16711680, !dbg !13514
  %shr609 = lshr i32 %and608, 8, !dbg !13514
  %or610 = or i32 %or605, %shr609, !dbg !13514
  %arraydecay611 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13514
  %add.ptr612 = getelementptr i32, i32* %arraydecay611, i64 2, !dbg !13514
  %147 = load i32, i32* %add.ptr612, align 4, !dbg !13514
  %and613 = and i32 %147, -16777216, !dbg !13514
  %shr614 = lshr i32 %and613, 24, !dbg !13514
  %or615 = or i32 %or610, %shr614, !dbg !13514
  br label %cond.end620, !dbg !13514

cond.false616:                                    ; preds = %cond.false593
  %arraydecay617 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13514
  %add.ptr618 = getelementptr i32, i32* %arraydecay617, i64 2, !dbg !13514
  %148 = load i32, i32* %add.ptr618, align 4, !dbg !13514
  %call619 = call i32 @__fswab32(i32 %148) #8, !dbg !13514
  br label %cond.end620, !dbg !13514

cond.end620:                                      ; preds = %cond.false616, %cond.true596
  %cond621 = phi i32 [ %or615, %cond.true596 ], [ %call619, %cond.false616 ], !dbg !13514
  %and622 = and i32 %cond621, -65536, !dbg !13514
  %149 = load i32, i32* %_v418, align 4, !dbg !13514
  %and623 = and i32 %149, 65535, !dbg !13514
  %shl624 = shl i32 %and623, 0, !dbg !13514
  %or625 = or i32 %and622, %shl624, !dbg !13514
  %call626 = call i32 @__fswab32(i32 %or625) #8, !dbg !13514
  br label %cond.end627, !dbg !13514

cond.end627:                                      ; preds = %cond.end620, %cond.end584
  %cond628 = phi i32 [ %or592, %cond.end584 ], [ %call626, %cond.end620 ], !dbg !13514
  %arraydecay629 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13514
  %add.ptr630 = getelementptr i32, i32* %arraydecay629, i64 2, !dbg !13514
  store i32 %cond628, i32* %add.ptr630, align 4, !dbg !13514
  br label %do.end631, !dbg !13514

do.end631:                                        ; preds = %cond.end627
  br label %do.body632, !dbg !13517

do.body632:                                       ; preds = %do.end631
  call void @llvm.dbg.declare(metadata i32* %_v633, metadata !13518, metadata !DIExpression()), !dbg !13520
  %150 = load i8, i8* %other_vport.addr, align 1, !dbg !13520
  %conv634 = zext i8 %150 to i32, !dbg !13520
  store i32 %conv634, i32* %_v633, align 4, !dbg !13520
  br label %do.body635, !dbg !13520

do.body635:                                       ; preds = %do.body632
  br label %do.end636, !dbg !13521

do.end636:                                        ; preds = %do.body635
  %arraydecay637 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13520
  %add.ptr638 = getelementptr i32, i32* %arraydecay637, i64 2, !dbg !13520
  %151 = load i32, i32* %add.ptr638, align 4, !dbg !13520
  %152 = call i1 @llvm.is.constant.i32(i32 %151), !dbg !13520
  br i1 %152, label %cond.true639, label %cond.false659, !dbg !13520

cond.true639:                                     ; preds = %do.end636
  %arraydecay640 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13520
  %add.ptr641 = getelementptr i32, i32* %arraydecay640, i64 2, !dbg !13520
  %153 = load i32, i32* %add.ptr641, align 4, !dbg !13520
  %and642 = and i32 %153, 255, !dbg !13520
  %shl643 = shl i32 %and642, 24, !dbg !13520
  %arraydecay644 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13520
  %add.ptr645 = getelementptr i32, i32* %arraydecay644, i64 2, !dbg !13520
  %154 = load i32, i32* %add.ptr645, align 4, !dbg !13520
  %and646 = and i32 %154, 65280, !dbg !13520
  %shl647 = shl i32 %and646, 8, !dbg !13520
  %or648 = or i32 %shl643, %shl647, !dbg !13520
  %arraydecay649 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13520
  %add.ptr650 = getelementptr i32, i32* %arraydecay649, i64 2, !dbg !13520
  %155 = load i32, i32* %add.ptr650, align 4, !dbg !13520
  %and651 = and i32 %155, 16711680, !dbg !13520
  %shr652 = lshr i32 %and651, 8, !dbg !13520
  %or653 = or i32 %or648, %shr652, !dbg !13520
  %arraydecay654 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13520
  %add.ptr655 = getelementptr i32, i32* %arraydecay654, i64 2, !dbg !13520
  %156 = load i32, i32* %add.ptr655, align 4, !dbg !13520
  %and656 = and i32 %156, -16777216, !dbg !13520
  %shr657 = lshr i32 %and656, 24, !dbg !13520
  %or658 = or i32 %or653, %shr657, !dbg !13520
  br label %cond.end663, !dbg !13520

cond.false659:                                    ; preds = %do.end636
  %arraydecay660 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13520
  %add.ptr661 = getelementptr i32, i32* %arraydecay660, i64 2, !dbg !13520
  %157 = load i32, i32* %add.ptr661, align 4, !dbg !13520
  %call662 = call i32 @__fswab32(i32 %157) #8, !dbg !13520
  br label %cond.end663, !dbg !13520

cond.end663:                                      ; preds = %cond.false659, %cond.true639
  %cond664 = phi i32 [ %or658, %cond.true639 ], [ %call662, %cond.false659 ], !dbg !13520
  %and665 = and i32 %cond664, 2147483647, !dbg !13520
  %158 = load i32, i32* %_v633, align 4, !dbg !13520
  %and666 = and i32 %158, 1, !dbg !13520
  %shl667 = shl i32 %and666, 31, !dbg !13520
  %or668 = or i32 %and665, %shl667, !dbg !13520
  %159 = call i1 @llvm.is.constant.i32(i32 %or668), !dbg !13520
  br i1 %159, label %cond.true669, label %cond.false809, !dbg !13520

cond.true669:                                     ; preds = %cond.end663
  %arraydecay670 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13520
  %add.ptr671 = getelementptr i32, i32* %arraydecay670, i64 2, !dbg !13520
  %160 = load i32, i32* %add.ptr671, align 4, !dbg !13520
  %161 = call i1 @llvm.is.constant.i32(i32 %160), !dbg !13520
  br i1 %161, label %cond.true672, label %cond.false692, !dbg !13520

cond.true672:                                     ; preds = %cond.true669
  %arraydecay673 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13520
  %add.ptr674 = getelementptr i32, i32* %arraydecay673, i64 2, !dbg !13520
  %162 = load i32, i32* %add.ptr674, align 4, !dbg !13520
  %and675 = and i32 %162, 255, !dbg !13520
  %shl676 = shl i32 %and675, 24, !dbg !13520
  %arraydecay677 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13520
  %add.ptr678 = getelementptr i32, i32* %arraydecay677, i64 2, !dbg !13520
  %163 = load i32, i32* %add.ptr678, align 4, !dbg !13520
  %and679 = and i32 %163, 65280, !dbg !13520
  %shl680 = shl i32 %and679, 8, !dbg !13520
  %or681 = or i32 %shl676, %shl680, !dbg !13520
  %arraydecay682 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13520
  %add.ptr683 = getelementptr i32, i32* %arraydecay682, i64 2, !dbg !13520
  %164 = load i32, i32* %add.ptr683, align 4, !dbg !13520
  %and684 = and i32 %164, 16711680, !dbg !13520
  %shr685 = lshr i32 %and684, 8, !dbg !13520
  %or686 = or i32 %or681, %shr685, !dbg !13520
  %arraydecay687 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13520
  %add.ptr688 = getelementptr i32, i32* %arraydecay687, i64 2, !dbg !13520
  %165 = load i32, i32* %add.ptr688, align 4, !dbg !13520
  %and689 = and i32 %165, -16777216, !dbg !13520
  %shr690 = lshr i32 %and689, 24, !dbg !13520
  %or691 = or i32 %or686, %shr690, !dbg !13520
  br label %cond.end696, !dbg !13520

cond.false692:                                    ; preds = %cond.true669
  %arraydecay693 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13520
  %add.ptr694 = getelementptr i32, i32* %arraydecay693, i64 2, !dbg !13520
  %166 = load i32, i32* %add.ptr694, align 4, !dbg !13520
  %call695 = call i32 @__fswab32(i32 %166) #8, !dbg !13520
  br label %cond.end696, !dbg !13520

cond.end696:                                      ; preds = %cond.false692, %cond.true672
  %cond697 = phi i32 [ %or691, %cond.true672 ], [ %call695, %cond.false692 ], !dbg !13520
  %and698 = and i32 %cond697, 2147483647, !dbg !13520
  %167 = load i32, i32* %_v633, align 4, !dbg !13520
  %and699 = and i32 %167, 1, !dbg !13520
  %shl700 = shl i32 %and699, 31, !dbg !13520
  %or701 = or i32 %and698, %shl700, !dbg !13520
  %and702 = and i32 %or701, 255, !dbg !13520
  %shl703 = shl i32 %and702, 24, !dbg !13520
  %arraydecay704 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13520
  %add.ptr705 = getelementptr i32, i32* %arraydecay704, i64 2, !dbg !13520
  %168 = load i32, i32* %add.ptr705, align 4, !dbg !13520
  %169 = call i1 @llvm.is.constant.i32(i32 %168), !dbg !13520
  br i1 %169, label %cond.true706, label %cond.false726, !dbg !13520

cond.true706:                                     ; preds = %cond.end696
  %arraydecay707 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13520
  %add.ptr708 = getelementptr i32, i32* %arraydecay707, i64 2, !dbg !13520
  %170 = load i32, i32* %add.ptr708, align 4, !dbg !13520
  %and709 = and i32 %170, 255, !dbg !13520
  %shl710 = shl i32 %and709, 24, !dbg !13520
  %arraydecay711 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13520
  %add.ptr712 = getelementptr i32, i32* %arraydecay711, i64 2, !dbg !13520
  %171 = load i32, i32* %add.ptr712, align 4, !dbg !13520
  %and713 = and i32 %171, 65280, !dbg !13520
  %shl714 = shl i32 %and713, 8, !dbg !13520
  %or715 = or i32 %shl710, %shl714, !dbg !13520
  %arraydecay716 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13520
  %add.ptr717 = getelementptr i32, i32* %arraydecay716, i64 2, !dbg !13520
  %172 = load i32, i32* %add.ptr717, align 4, !dbg !13520
  %and718 = and i32 %172, 16711680, !dbg !13520
  %shr719 = lshr i32 %and718, 8, !dbg !13520
  %or720 = or i32 %or715, %shr719, !dbg !13520
  %arraydecay721 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13520
  %add.ptr722 = getelementptr i32, i32* %arraydecay721, i64 2, !dbg !13520
  %173 = load i32, i32* %add.ptr722, align 4, !dbg !13520
  %and723 = and i32 %173, -16777216, !dbg !13520
  %shr724 = lshr i32 %and723, 24, !dbg !13520
  %or725 = or i32 %or720, %shr724, !dbg !13520
  br label %cond.end730, !dbg !13520

cond.false726:                                    ; preds = %cond.end696
  %arraydecay727 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13520
  %add.ptr728 = getelementptr i32, i32* %arraydecay727, i64 2, !dbg !13520
  %174 = load i32, i32* %add.ptr728, align 4, !dbg !13520
  %call729 = call i32 @__fswab32(i32 %174) #8, !dbg !13520
  br label %cond.end730, !dbg !13520

cond.end730:                                      ; preds = %cond.false726, %cond.true706
  %cond731 = phi i32 [ %or725, %cond.true706 ], [ %call729, %cond.false726 ], !dbg !13520
  %and732 = and i32 %cond731, 2147483647, !dbg !13520
  %175 = load i32, i32* %_v633, align 4, !dbg !13520
  %and733 = and i32 %175, 1, !dbg !13520
  %shl734 = shl i32 %and733, 31, !dbg !13520
  %or735 = or i32 %and732, %shl734, !dbg !13520
  %and736 = and i32 %or735, 65280, !dbg !13520
  %shl737 = shl i32 %and736, 8, !dbg !13520
  %or738 = or i32 %shl703, %shl737, !dbg !13520
  %arraydecay739 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13520
  %add.ptr740 = getelementptr i32, i32* %arraydecay739, i64 2, !dbg !13520
  %176 = load i32, i32* %add.ptr740, align 4, !dbg !13520
  %177 = call i1 @llvm.is.constant.i32(i32 %176), !dbg !13520
  br i1 %177, label %cond.true741, label %cond.false761, !dbg !13520

cond.true741:                                     ; preds = %cond.end730
  %arraydecay742 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13520
  %add.ptr743 = getelementptr i32, i32* %arraydecay742, i64 2, !dbg !13520
  %178 = load i32, i32* %add.ptr743, align 4, !dbg !13520
  %and744 = and i32 %178, 255, !dbg !13520
  %shl745 = shl i32 %and744, 24, !dbg !13520
  %arraydecay746 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13520
  %add.ptr747 = getelementptr i32, i32* %arraydecay746, i64 2, !dbg !13520
  %179 = load i32, i32* %add.ptr747, align 4, !dbg !13520
  %and748 = and i32 %179, 65280, !dbg !13520
  %shl749 = shl i32 %and748, 8, !dbg !13520
  %or750 = or i32 %shl745, %shl749, !dbg !13520
  %arraydecay751 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13520
  %add.ptr752 = getelementptr i32, i32* %arraydecay751, i64 2, !dbg !13520
  %180 = load i32, i32* %add.ptr752, align 4, !dbg !13520
  %and753 = and i32 %180, 16711680, !dbg !13520
  %shr754 = lshr i32 %and753, 8, !dbg !13520
  %or755 = or i32 %or750, %shr754, !dbg !13520
  %arraydecay756 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13520
  %add.ptr757 = getelementptr i32, i32* %arraydecay756, i64 2, !dbg !13520
  %181 = load i32, i32* %add.ptr757, align 4, !dbg !13520
  %and758 = and i32 %181, -16777216, !dbg !13520
  %shr759 = lshr i32 %and758, 24, !dbg !13520
  %or760 = or i32 %or755, %shr759, !dbg !13520
  br label %cond.end765, !dbg !13520

cond.false761:                                    ; preds = %cond.end730
  %arraydecay762 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13520
  %add.ptr763 = getelementptr i32, i32* %arraydecay762, i64 2, !dbg !13520
  %182 = load i32, i32* %add.ptr763, align 4, !dbg !13520
  %call764 = call i32 @__fswab32(i32 %182) #8, !dbg !13520
  br label %cond.end765, !dbg !13520

cond.end765:                                      ; preds = %cond.false761, %cond.true741
  %cond766 = phi i32 [ %or760, %cond.true741 ], [ %call764, %cond.false761 ], !dbg !13520
  %and767 = and i32 %cond766, 2147483647, !dbg !13520
  %183 = load i32, i32* %_v633, align 4, !dbg !13520
  %and768 = and i32 %183, 1, !dbg !13520
  %shl769 = shl i32 %and768, 31, !dbg !13520
  %or770 = or i32 %and767, %shl769, !dbg !13520
  %and771 = and i32 %or770, 16711680, !dbg !13520
  %shr772 = lshr i32 %and771, 8, !dbg !13520
  %or773 = or i32 %or738, %shr772, !dbg !13520
  %arraydecay774 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13520
  %add.ptr775 = getelementptr i32, i32* %arraydecay774, i64 2, !dbg !13520
  %184 = load i32, i32* %add.ptr775, align 4, !dbg !13520
  %185 = call i1 @llvm.is.constant.i32(i32 %184), !dbg !13520
  br i1 %185, label %cond.true776, label %cond.false796, !dbg !13520

cond.true776:                                     ; preds = %cond.end765
  %arraydecay777 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13520
  %add.ptr778 = getelementptr i32, i32* %arraydecay777, i64 2, !dbg !13520
  %186 = load i32, i32* %add.ptr778, align 4, !dbg !13520
  %and779 = and i32 %186, 255, !dbg !13520
  %shl780 = shl i32 %and779, 24, !dbg !13520
  %arraydecay781 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13520
  %add.ptr782 = getelementptr i32, i32* %arraydecay781, i64 2, !dbg !13520
  %187 = load i32, i32* %add.ptr782, align 4, !dbg !13520
  %and783 = and i32 %187, 65280, !dbg !13520
  %shl784 = shl i32 %and783, 8, !dbg !13520
  %or785 = or i32 %shl780, %shl784, !dbg !13520
  %arraydecay786 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13520
  %add.ptr787 = getelementptr i32, i32* %arraydecay786, i64 2, !dbg !13520
  %188 = load i32, i32* %add.ptr787, align 4, !dbg !13520
  %and788 = and i32 %188, 16711680, !dbg !13520
  %shr789 = lshr i32 %and788, 8, !dbg !13520
  %or790 = or i32 %or785, %shr789, !dbg !13520
  %arraydecay791 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13520
  %add.ptr792 = getelementptr i32, i32* %arraydecay791, i64 2, !dbg !13520
  %189 = load i32, i32* %add.ptr792, align 4, !dbg !13520
  %and793 = and i32 %189, -16777216, !dbg !13520
  %shr794 = lshr i32 %and793, 24, !dbg !13520
  %or795 = or i32 %or790, %shr794, !dbg !13520
  br label %cond.end800, !dbg !13520

cond.false796:                                    ; preds = %cond.end765
  %arraydecay797 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13520
  %add.ptr798 = getelementptr i32, i32* %arraydecay797, i64 2, !dbg !13520
  %190 = load i32, i32* %add.ptr798, align 4, !dbg !13520
  %call799 = call i32 @__fswab32(i32 %190) #8, !dbg !13520
  br label %cond.end800, !dbg !13520

cond.end800:                                      ; preds = %cond.false796, %cond.true776
  %cond801 = phi i32 [ %or795, %cond.true776 ], [ %call799, %cond.false796 ], !dbg !13520
  %and802 = and i32 %cond801, 2147483647, !dbg !13520
  %191 = load i32, i32* %_v633, align 4, !dbg !13520
  %and803 = and i32 %191, 1, !dbg !13520
  %shl804 = shl i32 %and803, 31, !dbg !13520
  %or805 = or i32 %and802, %shl804, !dbg !13520
  %and806 = and i32 %or805, -16777216, !dbg !13520
  %shr807 = lshr i32 %and806, 24, !dbg !13520
  %or808 = or i32 %or773, %shr807, !dbg !13520
  br label %cond.end843, !dbg !13520

cond.false809:                                    ; preds = %cond.end663
  %arraydecay810 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13520
  %add.ptr811 = getelementptr i32, i32* %arraydecay810, i64 2, !dbg !13520
  %192 = load i32, i32* %add.ptr811, align 4, !dbg !13520
  %193 = call i1 @llvm.is.constant.i32(i32 %192), !dbg !13520
  br i1 %193, label %cond.true812, label %cond.false832, !dbg !13520

cond.true812:                                     ; preds = %cond.false809
  %arraydecay813 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13520
  %add.ptr814 = getelementptr i32, i32* %arraydecay813, i64 2, !dbg !13520
  %194 = load i32, i32* %add.ptr814, align 4, !dbg !13520
  %and815 = and i32 %194, 255, !dbg !13520
  %shl816 = shl i32 %and815, 24, !dbg !13520
  %arraydecay817 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13520
  %add.ptr818 = getelementptr i32, i32* %arraydecay817, i64 2, !dbg !13520
  %195 = load i32, i32* %add.ptr818, align 4, !dbg !13520
  %and819 = and i32 %195, 65280, !dbg !13520
  %shl820 = shl i32 %and819, 8, !dbg !13520
  %or821 = or i32 %shl816, %shl820, !dbg !13520
  %arraydecay822 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13520
  %add.ptr823 = getelementptr i32, i32* %arraydecay822, i64 2, !dbg !13520
  %196 = load i32, i32* %add.ptr823, align 4, !dbg !13520
  %and824 = and i32 %196, 16711680, !dbg !13520
  %shr825 = lshr i32 %and824, 8, !dbg !13520
  %or826 = or i32 %or821, %shr825, !dbg !13520
  %arraydecay827 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13520
  %add.ptr828 = getelementptr i32, i32* %arraydecay827, i64 2, !dbg !13520
  %197 = load i32, i32* %add.ptr828, align 4, !dbg !13520
  %and829 = and i32 %197, -16777216, !dbg !13520
  %shr830 = lshr i32 %and829, 24, !dbg !13520
  %or831 = or i32 %or826, %shr830, !dbg !13520
  br label %cond.end836, !dbg !13520

cond.false832:                                    ; preds = %cond.false809
  %arraydecay833 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13520
  %add.ptr834 = getelementptr i32, i32* %arraydecay833, i64 2, !dbg !13520
  %198 = load i32, i32* %add.ptr834, align 4, !dbg !13520
  %call835 = call i32 @__fswab32(i32 %198) #8, !dbg !13520
  br label %cond.end836, !dbg !13520

cond.end836:                                      ; preds = %cond.false832, %cond.true812
  %cond837 = phi i32 [ %or831, %cond.true812 ], [ %call835, %cond.false832 ], !dbg !13520
  %and838 = and i32 %cond837, 2147483647, !dbg !13520
  %199 = load i32, i32* %_v633, align 4, !dbg !13520
  %and839 = and i32 %199, 1, !dbg !13520
  %shl840 = shl i32 %and839, 31, !dbg !13520
  %or841 = or i32 %and838, %shl840, !dbg !13520
  %call842 = call i32 @__fswab32(i32 %or841) #8, !dbg !13520
  br label %cond.end843, !dbg !13520

cond.end843:                                      ; preds = %cond.end836, %cond.end800
  %cond844 = phi i32 [ %or808, %cond.end800 ], [ %call842, %cond.end836 ], !dbg !13520
  %arraydecay845 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13520
  %add.ptr846 = getelementptr i32, i32* %arraydecay845, i64 2, !dbg !13520
  store i32 %cond844, i32* %add.ptr846, align 4, !dbg !13520
  br label %do.end847, !dbg !13520

do.end847:                                        ; preds = %cond.end843
  %200 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %mdev.addr, align 8, !dbg !13523
  %arraydecay848 = getelementptr inbounds [4 x i32], [4 x i32]* %in, i64 0, i64 0, !dbg !13523
  %201 = bitcast i32* %arraydecay848 to i8*, !dbg !13523
  %arraydecay849 = getelementptr inbounds [132 x i32], [132 x i32]* %out, i64 0, i64 0, !dbg !13523
  %202 = bitcast i32* %arraydecay849 to i8*, !dbg !13523
  %call850 = call i32 @mlx5_cmd_exec(%struct.mlx5_core_dev* %200, i8* %201, i32 16, i8* %202, i32 528) #9, !dbg !13523
  store i32 %call850, i32* %tmp, align 4, !dbg !13525
  %203 = load i32, i32* %tmp, align 4, !dbg !13523
  store i32 %203, i32* %err, align 4, !dbg !13526
  %204 = load i32, i32* %err, align 4, !dbg !13527
  %tobool = icmp ne i32 %204, 0, !dbg !13527
  br i1 %tobool, label %if.then, label %if.end, !dbg !13529

if.then:                                          ; preds = %do.end847
  %205 = load i32, i32* %err, align 4, !dbg !13530
  store i32 %205, i32* %retval, align 4, !dbg !13531
  br label %return, !dbg !13531

if.end:                                           ; preds = %do.end847
  %arraydecay851 = getelementptr inbounds [132 x i32], [132 x i32]* %out, i64 0, i64 0, !dbg !13532
  %206 = bitcast i32* %arraydecay851 to i64*, !dbg !13532
  %add.ptr852 = getelementptr i64, i64* %206, i64 5, !dbg !13532
  %207 = load i64, i64* %add.ptr852, align 8, !dbg !13532
  %208 = call i1 @llvm.is.constant.i64(i64 %207), !dbg !13532
  br i1 %208, label %cond.true853, label %cond.false893, !dbg !13532

cond.true853:                                     ; preds = %if.end
  %arraydecay854 = getelementptr inbounds [132 x i32], [132 x i32]* %out, i64 0, i64 0, !dbg !13532
  %209 = bitcast i32* %arraydecay854 to i64*, !dbg !13532
  %add.ptr855 = getelementptr i64, i64* %209, i64 5, !dbg !13532
  %210 = load i64, i64* %add.ptr855, align 8, !dbg !13532
  %and856 = and i64 %210, 255, !dbg !13532
  %shl857 = shl i64 %and856, 56, !dbg !13532
  %arraydecay858 = getelementptr inbounds [132 x i32], [132 x i32]* %out, i64 0, i64 0, !dbg !13532
  %211 = bitcast i32* %arraydecay858 to i64*, !dbg !13532
  %add.ptr859 = getelementptr i64, i64* %211, i64 5, !dbg !13532
  %212 = load i64, i64* %add.ptr859, align 8, !dbg !13532
  %and860 = and i64 %212, 65280, !dbg !13532
  %shl861 = shl i64 %and860, 40, !dbg !13532
  %or862 = or i64 %shl857, %shl861, !dbg !13532
  %arraydecay863 = getelementptr inbounds [132 x i32], [132 x i32]* %out, i64 0, i64 0, !dbg !13532
  %213 = bitcast i32* %arraydecay863 to i64*, !dbg !13532
  %add.ptr864 = getelementptr i64, i64* %213, i64 5, !dbg !13532
  %214 = load i64, i64* %add.ptr864, align 8, !dbg !13532
  %and865 = and i64 %214, 16711680, !dbg !13532
  %shl866 = shl i64 %and865, 24, !dbg !13532
  %or867 = or i64 %or862, %shl866, !dbg !13532
  %arraydecay868 = getelementptr inbounds [132 x i32], [132 x i32]* %out, i64 0, i64 0, !dbg !13532
  %215 = bitcast i32* %arraydecay868 to i64*, !dbg !13532
  %add.ptr869 = getelementptr i64, i64* %215, i64 5, !dbg !13532
  %216 = load i64, i64* %add.ptr869, align 8, !dbg !13532
  %and870 = and i64 %216, 4278190080, !dbg !13532
  %shl871 = shl i64 %and870, 8, !dbg !13532
  %or872 = or i64 %or867, %shl871, !dbg !13532
  %arraydecay873 = getelementptr inbounds [132 x i32], [132 x i32]* %out, i64 0, i64 0, !dbg !13532
  %217 = bitcast i32* %arraydecay873 to i64*, !dbg !13532
  %add.ptr874 = getelementptr i64, i64* %217, i64 5, !dbg !13532
  %218 = load i64, i64* %add.ptr874, align 8, !dbg !13532
  %and875 = and i64 %218, 1095216660480, !dbg !13532
  %shr876 = lshr i64 %and875, 8, !dbg !13532
  %or877 = or i64 %or872, %shr876, !dbg !13532
  %arraydecay878 = getelementptr inbounds [132 x i32], [132 x i32]* %out, i64 0, i64 0, !dbg !13532
  %219 = bitcast i32* %arraydecay878 to i64*, !dbg !13532
  %add.ptr879 = getelementptr i64, i64* %219, i64 5, !dbg !13532
  %220 = load i64, i64* %add.ptr879, align 8, !dbg !13532
  %and880 = and i64 %220, 280375465082880, !dbg !13532
  %shr881 = lshr i64 %and880, 24, !dbg !13532
  %or882 = or i64 %or877, %shr881, !dbg !13532
  %arraydecay883 = getelementptr inbounds [132 x i32], [132 x i32]* %out, i64 0, i64 0, !dbg !13532
  %221 = bitcast i32* %arraydecay883 to i64*, !dbg !13532
  %add.ptr884 = getelementptr i64, i64* %221, i64 5, !dbg !13532
  %222 = load i64, i64* %add.ptr884, align 8, !dbg !13532
  %and885 = and i64 %222, 71776119061217280, !dbg !13532
  %shr886 = lshr i64 %and885, 40, !dbg !13532
  %or887 = or i64 %or882, %shr886, !dbg !13532
  %arraydecay888 = getelementptr inbounds [132 x i32], [132 x i32]* %out, i64 0, i64 0, !dbg !13532
  %223 = bitcast i32* %arraydecay888 to i64*, !dbg !13532
  %add.ptr889 = getelementptr i64, i64* %223, i64 5, !dbg !13532
  %224 = load i64, i64* %add.ptr889, align 8, !dbg !13532
  %and890 = and i64 %224, -72057594037927936, !dbg !13532
  %shr891 = lshr i64 %and890, 56, !dbg !13532
  %or892 = or i64 %or887, %shr891, !dbg !13532
  br label %cond.end897, !dbg !13532

cond.false893:                                    ; preds = %if.end
  %arraydecay894 = getelementptr inbounds [132 x i32], [132 x i32]* %out, i64 0, i64 0, !dbg !13532
  %225 = bitcast i32* %arraydecay894 to i64*, !dbg !13532
  %add.ptr895 = getelementptr i64, i64* %225, i64 5, !dbg !13532
  %226 = load i64, i64* %add.ptr895, align 8, !dbg !13532
  %call896 = call i64 @__fswab64(i64 %226) #8, !dbg !13532
  br label %cond.end897, !dbg !13532

cond.end897:                                      ; preds = %cond.false893, %cond.true853
  %cond898 = phi i64 [ %or892, %cond.true853 ], [ %call896, %cond.false893 ], !dbg !13532
  %227 = load i64*, i64** %rx_discard_vport_down.addr, align 8, !dbg !13533
  store i64 %cond898, i64* %227, align 8, !dbg !13534
  %arraydecay899 = getelementptr inbounds [132 x i32], [132 x i32]* %out, i64 0, i64 0, !dbg !13535
  %228 = bitcast i32* %arraydecay899 to i64*, !dbg !13535
  %add.ptr900 = getelementptr i64, i64* %228, i64 6, !dbg !13535
  %229 = load i64, i64* %add.ptr900, align 8, !dbg !13535
  %230 = call i1 @llvm.is.constant.i64(i64 %229), !dbg !13535
  br i1 %230, label %cond.true901, label %cond.false941, !dbg !13535

cond.true901:                                     ; preds = %cond.end897
  %arraydecay902 = getelementptr inbounds [132 x i32], [132 x i32]* %out, i64 0, i64 0, !dbg !13535
  %231 = bitcast i32* %arraydecay902 to i64*, !dbg !13535
  %add.ptr903 = getelementptr i64, i64* %231, i64 6, !dbg !13535
  %232 = load i64, i64* %add.ptr903, align 8, !dbg !13535
  %and904 = and i64 %232, 255, !dbg !13535
  %shl905 = shl i64 %and904, 56, !dbg !13535
  %arraydecay906 = getelementptr inbounds [132 x i32], [132 x i32]* %out, i64 0, i64 0, !dbg !13535
  %233 = bitcast i32* %arraydecay906 to i64*, !dbg !13535
  %add.ptr907 = getelementptr i64, i64* %233, i64 6, !dbg !13535
  %234 = load i64, i64* %add.ptr907, align 8, !dbg !13535
  %and908 = and i64 %234, 65280, !dbg !13535
  %shl909 = shl i64 %and908, 40, !dbg !13535
  %or910 = or i64 %shl905, %shl909, !dbg !13535
  %arraydecay911 = getelementptr inbounds [132 x i32], [132 x i32]* %out, i64 0, i64 0, !dbg !13535
  %235 = bitcast i32* %arraydecay911 to i64*, !dbg !13535
  %add.ptr912 = getelementptr i64, i64* %235, i64 6, !dbg !13535
  %236 = load i64, i64* %add.ptr912, align 8, !dbg !13535
  %and913 = and i64 %236, 16711680, !dbg !13535
  %shl914 = shl i64 %and913, 24, !dbg !13535
  %or915 = or i64 %or910, %shl914, !dbg !13535
  %arraydecay916 = getelementptr inbounds [132 x i32], [132 x i32]* %out, i64 0, i64 0, !dbg !13535
  %237 = bitcast i32* %arraydecay916 to i64*, !dbg !13535
  %add.ptr917 = getelementptr i64, i64* %237, i64 6, !dbg !13535
  %238 = load i64, i64* %add.ptr917, align 8, !dbg !13535
  %and918 = and i64 %238, 4278190080, !dbg !13535
  %shl919 = shl i64 %and918, 8, !dbg !13535
  %or920 = or i64 %or915, %shl919, !dbg !13535
  %arraydecay921 = getelementptr inbounds [132 x i32], [132 x i32]* %out, i64 0, i64 0, !dbg !13535
  %239 = bitcast i32* %arraydecay921 to i64*, !dbg !13535
  %add.ptr922 = getelementptr i64, i64* %239, i64 6, !dbg !13535
  %240 = load i64, i64* %add.ptr922, align 8, !dbg !13535
  %and923 = and i64 %240, 1095216660480, !dbg !13535
  %shr924 = lshr i64 %and923, 8, !dbg !13535
  %or925 = or i64 %or920, %shr924, !dbg !13535
  %arraydecay926 = getelementptr inbounds [132 x i32], [132 x i32]* %out, i64 0, i64 0, !dbg !13535
  %241 = bitcast i32* %arraydecay926 to i64*, !dbg !13535
  %add.ptr927 = getelementptr i64, i64* %241, i64 6, !dbg !13535
  %242 = load i64, i64* %add.ptr927, align 8, !dbg !13535
  %and928 = and i64 %242, 280375465082880, !dbg !13535
  %shr929 = lshr i64 %and928, 24, !dbg !13535
  %or930 = or i64 %or925, %shr929, !dbg !13535
  %arraydecay931 = getelementptr inbounds [132 x i32], [132 x i32]* %out, i64 0, i64 0, !dbg !13535
  %243 = bitcast i32* %arraydecay931 to i64*, !dbg !13535
  %add.ptr932 = getelementptr i64, i64* %243, i64 6, !dbg !13535
  %244 = load i64, i64* %add.ptr932, align 8, !dbg !13535
  %and933 = and i64 %244, 71776119061217280, !dbg !13535
  %shr934 = lshr i64 %and933, 40, !dbg !13535
  %or935 = or i64 %or930, %shr934, !dbg !13535
  %arraydecay936 = getelementptr inbounds [132 x i32], [132 x i32]* %out, i64 0, i64 0, !dbg !13535
  %245 = bitcast i32* %arraydecay936 to i64*, !dbg !13535
  %add.ptr937 = getelementptr i64, i64* %245, i64 6, !dbg !13535
  %246 = load i64, i64* %add.ptr937, align 8, !dbg !13535
  %and938 = and i64 %246, -72057594037927936, !dbg !13535
  %shr939 = lshr i64 %and938, 56, !dbg !13535
  %or940 = or i64 %or935, %shr939, !dbg !13535
  br label %cond.end945, !dbg !13535

cond.false941:                                    ; preds = %cond.end897
  %arraydecay942 = getelementptr inbounds [132 x i32], [132 x i32]* %out, i64 0, i64 0, !dbg !13535
  %247 = bitcast i32* %arraydecay942 to i64*, !dbg !13535
  %add.ptr943 = getelementptr i64, i64* %247, i64 6, !dbg !13535
  %248 = load i64, i64* %add.ptr943, align 8, !dbg !13535
  %call944 = call i64 @__fswab64(i64 %248) #8, !dbg !13535
  br label %cond.end945, !dbg !13535

cond.end945:                                      ; preds = %cond.false941, %cond.true901
  %cond946 = phi i64 [ %or940, %cond.true901 ], [ %call944, %cond.false941 ], !dbg !13535
  %249 = load i64*, i64** %tx_discard_vport_down.addr, align 8, !dbg !13536
  store i64 %cond946, i64* %249, align 8, !dbg !13537
  store i32 0, i32* %retval, align 4, !dbg !13538
  br label %return, !dbg !13538

return:                                           ; preds = %cond.end945, %if.then
  %250 = load i32, i32* %retval, align 4, !dbg !13539
  ret i32 %250, !dbg !13539
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @mlx5_core_modify_hca_vport_context(%struct.mlx5_core_dev* %dev, i8 zeroext %other_vport, i8 zeroext %port_num, i32 %vf, %struct.mlx5_hca_vport_context* %req) #0 !dbg !13540 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.mlx5_core_dev*, align 8
  %other_vport.addr = alloca i8, align 1
  %port_num.addr = alloca i8, align 1
  %vf.addr = alloca i32, align 4
  %req.addr = alloca %struct.mlx5_hca_vport_context*, align 8
  %in_sz = alloca i32, align 4
  %is_group_manager = alloca i32, align 4
  %ctx = alloca i8*, align 8
  %in = alloca i8*, align 8
  %err = alloca i32, align 4
  %_v = alloca i32, align 4
  %_v216 = alloca i32, align 4
  %_v394 = alloca i32, align 4
  %_v624 = alloca i32, align 4
  %_v805 = alloca i32, align 4
  %_v981 = alloca i32, align 4
  %_v1262 = alloca i32, align 4
  %_v1434 = alloca i32, align 4
  %_out = alloca [4 x i32], align 16
  %tmp = alloca i32, align 4
  %tmp1605 = alloca i32, align 4
  store %struct.mlx5_core_dev* %dev, %struct.mlx5_core_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_core_dev** %dev.addr, metadata !13543, metadata !DIExpression()), !dbg !13544
  store i8 %other_vport, i8* %other_vport.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %other_vport.addr, metadata !13545, metadata !DIExpression()), !dbg !13546
  store i8 %port_num, i8* %port_num.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %port_num.addr, metadata !13547, metadata !DIExpression()), !dbg !13548
  store i32 %vf, i32* %vf.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %vf.addr, metadata !13549, metadata !DIExpression()), !dbg !13550
  store %struct.mlx5_hca_vport_context* %req, %struct.mlx5_hca_vport_context** %req.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_hca_vport_context** %req.addr, metadata !13551, metadata !DIExpression()), !dbg !13552
  call void @llvm.dbg.declare(metadata i32* %in_sz, metadata !13553, metadata !DIExpression()), !dbg !13554
  store i32 528, i32* %in_sz, align 4, !dbg !13554
  call void @llvm.dbg.declare(metadata i32* %is_group_manager, metadata !13555, metadata !DIExpression()), !dbg !13556
  call void @llvm.dbg.declare(metadata i8** %ctx, metadata !13557, metadata !DIExpression()), !dbg !13558
  call void @llvm.dbg.declare(metadata i8** %in, metadata !13559, metadata !DIExpression()), !dbg !13560
  call void @llvm.dbg.declare(metadata i32* %err, metadata !13561, metadata !DIExpression()), !dbg !13562
  %0 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !13563
  %caps = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %0, i32 0, i32 9, !dbg !13563
  %hca_cur = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps, i32 0, i32 0, !dbg !13563
  %arrayidx = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur, i64 0, i64 0, !dbg !13563
  %arraydecay = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx, i64 0, i64 0, !dbg !13563
  %add.ptr = getelementptr i32, i32* %arraydecay, i64 13, !dbg !13563
  %1 = load i32, i32* %add.ptr, align 4, !dbg !13563
  %2 = call i1 @llvm.is.constant.i32(i32 %1), !dbg !13563
  br i1 %2, label %cond.true, label %cond.false, !dbg !13563

cond.true:                                        ; preds = %entry
  %3 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !13563
  %caps1 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %3, i32 0, i32 9, !dbg !13563
  %hca_cur2 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps1, i32 0, i32 0, !dbg !13563
  %arrayidx3 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur2, i64 0, i64 0, !dbg !13563
  %arraydecay4 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx3, i64 0, i64 0, !dbg !13563
  %add.ptr5 = getelementptr i32, i32* %arraydecay4, i64 13, !dbg !13563
  %4 = load i32, i32* %add.ptr5, align 4, !dbg !13563
  %and = and i32 %4, 255, !dbg !13563
  %shl = shl i32 %and, 24, !dbg !13563
  %5 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !13563
  %caps6 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %5, i32 0, i32 9, !dbg !13563
  %hca_cur7 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps6, i32 0, i32 0, !dbg !13563
  %arrayidx8 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur7, i64 0, i64 0, !dbg !13563
  %arraydecay9 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx8, i64 0, i64 0, !dbg !13563
  %add.ptr10 = getelementptr i32, i32* %arraydecay9, i64 13, !dbg !13563
  %6 = load i32, i32* %add.ptr10, align 4, !dbg !13563
  %and11 = and i32 %6, 65280, !dbg !13563
  %shl12 = shl i32 %and11, 8, !dbg !13563
  %or = or i32 %shl, %shl12, !dbg !13563
  %7 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !13563
  %caps13 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %7, i32 0, i32 9, !dbg !13563
  %hca_cur14 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps13, i32 0, i32 0, !dbg !13563
  %arrayidx15 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur14, i64 0, i64 0, !dbg !13563
  %arraydecay16 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx15, i64 0, i64 0, !dbg !13563
  %add.ptr17 = getelementptr i32, i32* %arraydecay16, i64 13, !dbg !13563
  %8 = load i32, i32* %add.ptr17, align 4, !dbg !13563
  %and18 = and i32 %8, 16711680, !dbg !13563
  %shr = lshr i32 %and18, 8, !dbg !13563
  %or19 = or i32 %or, %shr, !dbg !13563
  %9 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !13563
  %caps20 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %9, i32 0, i32 9, !dbg !13563
  %hca_cur21 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps20, i32 0, i32 0, !dbg !13563
  %arrayidx22 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur21, i64 0, i64 0, !dbg !13563
  %arraydecay23 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx22, i64 0, i64 0, !dbg !13563
  %add.ptr24 = getelementptr i32, i32* %arraydecay23, i64 13, !dbg !13563
  %10 = load i32, i32* %add.ptr24, align 4, !dbg !13563
  %and25 = and i32 %10, -16777216, !dbg !13563
  %shr26 = lshr i32 %and25, 24, !dbg !13563
  %or27 = or i32 %or19, %shr26, !dbg !13563
  br label %cond.end, !dbg !13563

cond.false:                                       ; preds = %entry
  %11 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !13563
  %caps28 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %11, i32 0, i32 9, !dbg !13563
  %hca_cur29 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps28, i32 0, i32 0, !dbg !13563
  %arrayidx30 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur29, i64 0, i64 0, !dbg !13563
  %arraydecay31 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx30, i64 0, i64 0, !dbg !13563
  %add.ptr32 = getelementptr i32, i32* %arraydecay31, i64 13, !dbg !13563
  %12 = load i32, i32* %add.ptr32, align 4, !dbg !13563
  %call = call i32 @__fswab32(i32 %12) #8, !dbg !13563
  br label %cond.end, !dbg !13563

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %or27, %cond.true ], [ %call, %cond.false ], !dbg !13563
  %shr33 = lshr i32 %cond, 31, !dbg !13563
  %and34 = and i32 %shr33, 1, !dbg !13563
  store i32 %and34, i32* %is_group_manager, align 4, !dbg !13564
  %13 = load i32, i32* %in_sz, align 4, !dbg !13565
  %conv = sext i32 %13 to i64, !dbg !13565
  %call35 = call i8* @kzalloc(i64 %conv, i32 3264) #9, !dbg !13566
  store i8* %call35, i8** %in, align 8, !dbg !13567
  %14 = load i8*, i8** %in, align 8, !dbg !13568
  %tobool = icmp ne i8* %14, null, !dbg !13568
  br i1 %tobool, label %if.end, label %if.then, !dbg !13570

if.then:                                          ; preds = %cond.end
  store i32 -12, i32* %retval, align 4, !dbg !13571
  br label %return, !dbg !13571

if.end:                                           ; preds = %cond.end
  br label %do.body, !dbg !13572

do.body:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %_v, metadata !13573, metadata !DIExpression()), !dbg !13575
  store i32 1891, i32* %_v, align 4, !dbg !13575
  br label %do.body36, !dbg !13575

do.body36:                                        ; preds = %do.body
  br label %do.end, !dbg !13576

do.end:                                           ; preds = %do.body36
  %15 = load i8*, i8** %in, align 8, !dbg !13575
  %16 = bitcast i8* %15 to i32*, !dbg !13575
  %add.ptr37 = getelementptr i32, i32* %16, i64 0, !dbg !13575
  %17 = load i32, i32* %add.ptr37, align 4, !dbg !13575
  %18 = call i1 @llvm.is.constant.i32(i32 %17), !dbg !13575
  br i1 %18, label %cond.true38, label %cond.false54, !dbg !13575

cond.true38:                                      ; preds = %do.end
  %19 = load i8*, i8** %in, align 8, !dbg !13575
  %20 = bitcast i8* %19 to i32*, !dbg !13575
  %add.ptr39 = getelementptr i32, i32* %20, i64 0, !dbg !13575
  %21 = load i32, i32* %add.ptr39, align 4, !dbg !13575
  %and40 = and i32 %21, 255, !dbg !13575
  %shl41 = shl i32 %and40, 24, !dbg !13575
  %22 = load i8*, i8** %in, align 8, !dbg !13575
  %23 = bitcast i8* %22 to i32*, !dbg !13575
  %add.ptr42 = getelementptr i32, i32* %23, i64 0, !dbg !13575
  %24 = load i32, i32* %add.ptr42, align 4, !dbg !13575
  %and43 = and i32 %24, 65280, !dbg !13575
  %shl44 = shl i32 %and43, 8, !dbg !13575
  %or45 = or i32 %shl41, %shl44, !dbg !13575
  %25 = load i8*, i8** %in, align 8, !dbg !13575
  %26 = bitcast i8* %25 to i32*, !dbg !13575
  %add.ptr46 = getelementptr i32, i32* %26, i64 0, !dbg !13575
  %27 = load i32, i32* %add.ptr46, align 4, !dbg !13575
  %and47 = and i32 %27, 16711680, !dbg !13575
  %shr48 = lshr i32 %and47, 8, !dbg !13575
  %or49 = or i32 %or45, %shr48, !dbg !13575
  %28 = load i8*, i8** %in, align 8, !dbg !13575
  %29 = bitcast i8* %28 to i32*, !dbg !13575
  %add.ptr50 = getelementptr i32, i32* %29, i64 0, !dbg !13575
  %30 = load i32, i32* %add.ptr50, align 4, !dbg !13575
  %and51 = and i32 %30, -16777216, !dbg !13575
  %shr52 = lshr i32 %and51, 24, !dbg !13575
  %or53 = or i32 %or49, %shr52, !dbg !13575
  br label %cond.end57, !dbg !13575

cond.false54:                                     ; preds = %do.end
  %31 = load i8*, i8** %in, align 8, !dbg !13575
  %32 = bitcast i8* %31 to i32*, !dbg !13575
  %add.ptr55 = getelementptr i32, i32* %32, i64 0, !dbg !13575
  %33 = load i32, i32* %add.ptr55, align 4, !dbg !13575
  %call56 = call i32 @__fswab32(i32 %33) #8, !dbg !13575
  br label %cond.end57, !dbg !13575

cond.end57:                                       ; preds = %cond.false54, %cond.true38
  %cond58 = phi i32 [ %or53, %cond.true38 ], [ %call56, %cond.false54 ], !dbg !13575
  %and59 = and i32 %cond58, 65535, !dbg !13575
  %34 = load i32, i32* %_v, align 4, !dbg !13575
  %and60 = and i32 %34, 65535, !dbg !13575
  %shl61 = shl i32 %and60, 16, !dbg !13575
  %or62 = or i32 %and59, %shl61, !dbg !13575
  %35 = call i1 @llvm.is.constant.i32(i32 %or62), !dbg !13575
  br i1 %35, label %cond.true63, label %cond.false179, !dbg !13575

cond.true63:                                      ; preds = %cond.end57
  %36 = load i8*, i8** %in, align 8, !dbg !13575
  %37 = bitcast i8* %36 to i32*, !dbg !13575
  %add.ptr64 = getelementptr i32, i32* %37, i64 0, !dbg !13575
  %38 = load i32, i32* %add.ptr64, align 4, !dbg !13575
  %39 = call i1 @llvm.is.constant.i32(i32 %38), !dbg !13575
  br i1 %39, label %cond.true65, label %cond.false81, !dbg !13575

cond.true65:                                      ; preds = %cond.true63
  %40 = load i8*, i8** %in, align 8, !dbg !13575
  %41 = bitcast i8* %40 to i32*, !dbg !13575
  %add.ptr66 = getelementptr i32, i32* %41, i64 0, !dbg !13575
  %42 = load i32, i32* %add.ptr66, align 4, !dbg !13575
  %and67 = and i32 %42, 255, !dbg !13575
  %shl68 = shl i32 %and67, 24, !dbg !13575
  %43 = load i8*, i8** %in, align 8, !dbg !13575
  %44 = bitcast i8* %43 to i32*, !dbg !13575
  %add.ptr69 = getelementptr i32, i32* %44, i64 0, !dbg !13575
  %45 = load i32, i32* %add.ptr69, align 4, !dbg !13575
  %and70 = and i32 %45, 65280, !dbg !13575
  %shl71 = shl i32 %and70, 8, !dbg !13575
  %or72 = or i32 %shl68, %shl71, !dbg !13575
  %46 = load i8*, i8** %in, align 8, !dbg !13575
  %47 = bitcast i8* %46 to i32*, !dbg !13575
  %add.ptr73 = getelementptr i32, i32* %47, i64 0, !dbg !13575
  %48 = load i32, i32* %add.ptr73, align 4, !dbg !13575
  %and74 = and i32 %48, 16711680, !dbg !13575
  %shr75 = lshr i32 %and74, 8, !dbg !13575
  %or76 = or i32 %or72, %shr75, !dbg !13575
  %49 = load i8*, i8** %in, align 8, !dbg !13575
  %50 = bitcast i8* %49 to i32*, !dbg !13575
  %add.ptr77 = getelementptr i32, i32* %50, i64 0, !dbg !13575
  %51 = load i32, i32* %add.ptr77, align 4, !dbg !13575
  %and78 = and i32 %51, -16777216, !dbg !13575
  %shr79 = lshr i32 %and78, 24, !dbg !13575
  %or80 = or i32 %or76, %shr79, !dbg !13575
  br label %cond.end84, !dbg !13575

cond.false81:                                     ; preds = %cond.true63
  %52 = load i8*, i8** %in, align 8, !dbg !13575
  %53 = bitcast i8* %52 to i32*, !dbg !13575
  %add.ptr82 = getelementptr i32, i32* %53, i64 0, !dbg !13575
  %54 = load i32, i32* %add.ptr82, align 4, !dbg !13575
  %call83 = call i32 @__fswab32(i32 %54) #8, !dbg !13575
  br label %cond.end84, !dbg !13575

cond.end84:                                       ; preds = %cond.false81, %cond.true65
  %cond85 = phi i32 [ %or80, %cond.true65 ], [ %call83, %cond.false81 ], !dbg !13575
  %and86 = and i32 %cond85, 65535, !dbg !13575
  %55 = load i32, i32* %_v, align 4, !dbg !13575
  %and87 = and i32 %55, 65535, !dbg !13575
  %shl88 = shl i32 %and87, 16, !dbg !13575
  %or89 = or i32 %and86, %shl88, !dbg !13575
  %and90 = and i32 %or89, 255, !dbg !13575
  %shl91 = shl i32 %and90, 24, !dbg !13575
  %56 = load i8*, i8** %in, align 8, !dbg !13575
  %57 = bitcast i8* %56 to i32*, !dbg !13575
  %add.ptr92 = getelementptr i32, i32* %57, i64 0, !dbg !13575
  %58 = load i32, i32* %add.ptr92, align 4, !dbg !13575
  %59 = call i1 @llvm.is.constant.i32(i32 %58), !dbg !13575
  br i1 %59, label %cond.true93, label %cond.false109, !dbg !13575

cond.true93:                                      ; preds = %cond.end84
  %60 = load i8*, i8** %in, align 8, !dbg !13575
  %61 = bitcast i8* %60 to i32*, !dbg !13575
  %add.ptr94 = getelementptr i32, i32* %61, i64 0, !dbg !13575
  %62 = load i32, i32* %add.ptr94, align 4, !dbg !13575
  %and95 = and i32 %62, 255, !dbg !13575
  %shl96 = shl i32 %and95, 24, !dbg !13575
  %63 = load i8*, i8** %in, align 8, !dbg !13575
  %64 = bitcast i8* %63 to i32*, !dbg !13575
  %add.ptr97 = getelementptr i32, i32* %64, i64 0, !dbg !13575
  %65 = load i32, i32* %add.ptr97, align 4, !dbg !13575
  %and98 = and i32 %65, 65280, !dbg !13575
  %shl99 = shl i32 %and98, 8, !dbg !13575
  %or100 = or i32 %shl96, %shl99, !dbg !13575
  %66 = load i8*, i8** %in, align 8, !dbg !13575
  %67 = bitcast i8* %66 to i32*, !dbg !13575
  %add.ptr101 = getelementptr i32, i32* %67, i64 0, !dbg !13575
  %68 = load i32, i32* %add.ptr101, align 4, !dbg !13575
  %and102 = and i32 %68, 16711680, !dbg !13575
  %shr103 = lshr i32 %and102, 8, !dbg !13575
  %or104 = or i32 %or100, %shr103, !dbg !13575
  %69 = load i8*, i8** %in, align 8, !dbg !13575
  %70 = bitcast i8* %69 to i32*, !dbg !13575
  %add.ptr105 = getelementptr i32, i32* %70, i64 0, !dbg !13575
  %71 = load i32, i32* %add.ptr105, align 4, !dbg !13575
  %and106 = and i32 %71, -16777216, !dbg !13575
  %shr107 = lshr i32 %and106, 24, !dbg !13575
  %or108 = or i32 %or104, %shr107, !dbg !13575
  br label %cond.end112, !dbg !13575

cond.false109:                                    ; preds = %cond.end84
  %72 = load i8*, i8** %in, align 8, !dbg !13575
  %73 = bitcast i8* %72 to i32*, !dbg !13575
  %add.ptr110 = getelementptr i32, i32* %73, i64 0, !dbg !13575
  %74 = load i32, i32* %add.ptr110, align 4, !dbg !13575
  %call111 = call i32 @__fswab32(i32 %74) #8, !dbg !13575
  br label %cond.end112, !dbg !13575

cond.end112:                                      ; preds = %cond.false109, %cond.true93
  %cond113 = phi i32 [ %or108, %cond.true93 ], [ %call111, %cond.false109 ], !dbg !13575
  %and114 = and i32 %cond113, 65535, !dbg !13575
  %75 = load i32, i32* %_v, align 4, !dbg !13575
  %and115 = and i32 %75, 65535, !dbg !13575
  %shl116 = shl i32 %and115, 16, !dbg !13575
  %or117 = or i32 %and114, %shl116, !dbg !13575
  %and118 = and i32 %or117, 65280, !dbg !13575
  %shl119 = shl i32 %and118, 8, !dbg !13575
  %or120 = or i32 %shl91, %shl119, !dbg !13575
  %76 = load i8*, i8** %in, align 8, !dbg !13575
  %77 = bitcast i8* %76 to i32*, !dbg !13575
  %add.ptr121 = getelementptr i32, i32* %77, i64 0, !dbg !13575
  %78 = load i32, i32* %add.ptr121, align 4, !dbg !13575
  %79 = call i1 @llvm.is.constant.i32(i32 %78), !dbg !13575
  br i1 %79, label %cond.true122, label %cond.false138, !dbg !13575

cond.true122:                                     ; preds = %cond.end112
  %80 = load i8*, i8** %in, align 8, !dbg !13575
  %81 = bitcast i8* %80 to i32*, !dbg !13575
  %add.ptr123 = getelementptr i32, i32* %81, i64 0, !dbg !13575
  %82 = load i32, i32* %add.ptr123, align 4, !dbg !13575
  %and124 = and i32 %82, 255, !dbg !13575
  %shl125 = shl i32 %and124, 24, !dbg !13575
  %83 = load i8*, i8** %in, align 8, !dbg !13575
  %84 = bitcast i8* %83 to i32*, !dbg !13575
  %add.ptr126 = getelementptr i32, i32* %84, i64 0, !dbg !13575
  %85 = load i32, i32* %add.ptr126, align 4, !dbg !13575
  %and127 = and i32 %85, 65280, !dbg !13575
  %shl128 = shl i32 %and127, 8, !dbg !13575
  %or129 = or i32 %shl125, %shl128, !dbg !13575
  %86 = load i8*, i8** %in, align 8, !dbg !13575
  %87 = bitcast i8* %86 to i32*, !dbg !13575
  %add.ptr130 = getelementptr i32, i32* %87, i64 0, !dbg !13575
  %88 = load i32, i32* %add.ptr130, align 4, !dbg !13575
  %and131 = and i32 %88, 16711680, !dbg !13575
  %shr132 = lshr i32 %and131, 8, !dbg !13575
  %or133 = or i32 %or129, %shr132, !dbg !13575
  %89 = load i8*, i8** %in, align 8, !dbg !13575
  %90 = bitcast i8* %89 to i32*, !dbg !13575
  %add.ptr134 = getelementptr i32, i32* %90, i64 0, !dbg !13575
  %91 = load i32, i32* %add.ptr134, align 4, !dbg !13575
  %and135 = and i32 %91, -16777216, !dbg !13575
  %shr136 = lshr i32 %and135, 24, !dbg !13575
  %or137 = or i32 %or133, %shr136, !dbg !13575
  br label %cond.end141, !dbg !13575

cond.false138:                                    ; preds = %cond.end112
  %92 = load i8*, i8** %in, align 8, !dbg !13575
  %93 = bitcast i8* %92 to i32*, !dbg !13575
  %add.ptr139 = getelementptr i32, i32* %93, i64 0, !dbg !13575
  %94 = load i32, i32* %add.ptr139, align 4, !dbg !13575
  %call140 = call i32 @__fswab32(i32 %94) #8, !dbg !13575
  br label %cond.end141, !dbg !13575

cond.end141:                                      ; preds = %cond.false138, %cond.true122
  %cond142 = phi i32 [ %or137, %cond.true122 ], [ %call140, %cond.false138 ], !dbg !13575
  %and143 = and i32 %cond142, 65535, !dbg !13575
  %95 = load i32, i32* %_v, align 4, !dbg !13575
  %and144 = and i32 %95, 65535, !dbg !13575
  %shl145 = shl i32 %and144, 16, !dbg !13575
  %or146 = or i32 %and143, %shl145, !dbg !13575
  %and147 = and i32 %or146, 16711680, !dbg !13575
  %shr148 = lshr i32 %and147, 8, !dbg !13575
  %or149 = or i32 %or120, %shr148, !dbg !13575
  %96 = load i8*, i8** %in, align 8, !dbg !13575
  %97 = bitcast i8* %96 to i32*, !dbg !13575
  %add.ptr150 = getelementptr i32, i32* %97, i64 0, !dbg !13575
  %98 = load i32, i32* %add.ptr150, align 4, !dbg !13575
  %99 = call i1 @llvm.is.constant.i32(i32 %98), !dbg !13575
  br i1 %99, label %cond.true151, label %cond.false167, !dbg !13575

cond.true151:                                     ; preds = %cond.end141
  %100 = load i8*, i8** %in, align 8, !dbg !13575
  %101 = bitcast i8* %100 to i32*, !dbg !13575
  %add.ptr152 = getelementptr i32, i32* %101, i64 0, !dbg !13575
  %102 = load i32, i32* %add.ptr152, align 4, !dbg !13575
  %and153 = and i32 %102, 255, !dbg !13575
  %shl154 = shl i32 %and153, 24, !dbg !13575
  %103 = load i8*, i8** %in, align 8, !dbg !13575
  %104 = bitcast i8* %103 to i32*, !dbg !13575
  %add.ptr155 = getelementptr i32, i32* %104, i64 0, !dbg !13575
  %105 = load i32, i32* %add.ptr155, align 4, !dbg !13575
  %and156 = and i32 %105, 65280, !dbg !13575
  %shl157 = shl i32 %and156, 8, !dbg !13575
  %or158 = or i32 %shl154, %shl157, !dbg !13575
  %106 = load i8*, i8** %in, align 8, !dbg !13575
  %107 = bitcast i8* %106 to i32*, !dbg !13575
  %add.ptr159 = getelementptr i32, i32* %107, i64 0, !dbg !13575
  %108 = load i32, i32* %add.ptr159, align 4, !dbg !13575
  %and160 = and i32 %108, 16711680, !dbg !13575
  %shr161 = lshr i32 %and160, 8, !dbg !13575
  %or162 = or i32 %or158, %shr161, !dbg !13575
  %109 = load i8*, i8** %in, align 8, !dbg !13575
  %110 = bitcast i8* %109 to i32*, !dbg !13575
  %add.ptr163 = getelementptr i32, i32* %110, i64 0, !dbg !13575
  %111 = load i32, i32* %add.ptr163, align 4, !dbg !13575
  %and164 = and i32 %111, -16777216, !dbg !13575
  %shr165 = lshr i32 %and164, 24, !dbg !13575
  %or166 = or i32 %or162, %shr165, !dbg !13575
  br label %cond.end170, !dbg !13575

cond.false167:                                    ; preds = %cond.end141
  %112 = load i8*, i8** %in, align 8, !dbg !13575
  %113 = bitcast i8* %112 to i32*, !dbg !13575
  %add.ptr168 = getelementptr i32, i32* %113, i64 0, !dbg !13575
  %114 = load i32, i32* %add.ptr168, align 4, !dbg !13575
  %call169 = call i32 @__fswab32(i32 %114) #8, !dbg !13575
  br label %cond.end170, !dbg !13575

cond.end170:                                      ; preds = %cond.false167, %cond.true151
  %cond171 = phi i32 [ %or166, %cond.true151 ], [ %call169, %cond.false167 ], !dbg !13575
  %and172 = and i32 %cond171, 65535, !dbg !13575
  %115 = load i32, i32* %_v, align 4, !dbg !13575
  %and173 = and i32 %115, 65535, !dbg !13575
  %shl174 = shl i32 %and173, 16, !dbg !13575
  %or175 = or i32 %and172, %shl174, !dbg !13575
  %and176 = and i32 %or175, -16777216, !dbg !13575
  %shr177 = lshr i32 %and176, 24, !dbg !13575
  %or178 = or i32 %or149, %shr177, !dbg !13575
  br label %cond.end207, !dbg !13575

cond.false179:                                    ; preds = %cond.end57
  %116 = load i8*, i8** %in, align 8, !dbg !13575
  %117 = bitcast i8* %116 to i32*, !dbg !13575
  %add.ptr180 = getelementptr i32, i32* %117, i64 0, !dbg !13575
  %118 = load i32, i32* %add.ptr180, align 4, !dbg !13575
  %119 = call i1 @llvm.is.constant.i32(i32 %118), !dbg !13575
  br i1 %119, label %cond.true181, label %cond.false197, !dbg !13575

cond.true181:                                     ; preds = %cond.false179
  %120 = load i8*, i8** %in, align 8, !dbg !13575
  %121 = bitcast i8* %120 to i32*, !dbg !13575
  %add.ptr182 = getelementptr i32, i32* %121, i64 0, !dbg !13575
  %122 = load i32, i32* %add.ptr182, align 4, !dbg !13575
  %and183 = and i32 %122, 255, !dbg !13575
  %shl184 = shl i32 %and183, 24, !dbg !13575
  %123 = load i8*, i8** %in, align 8, !dbg !13575
  %124 = bitcast i8* %123 to i32*, !dbg !13575
  %add.ptr185 = getelementptr i32, i32* %124, i64 0, !dbg !13575
  %125 = load i32, i32* %add.ptr185, align 4, !dbg !13575
  %and186 = and i32 %125, 65280, !dbg !13575
  %shl187 = shl i32 %and186, 8, !dbg !13575
  %or188 = or i32 %shl184, %shl187, !dbg !13575
  %126 = load i8*, i8** %in, align 8, !dbg !13575
  %127 = bitcast i8* %126 to i32*, !dbg !13575
  %add.ptr189 = getelementptr i32, i32* %127, i64 0, !dbg !13575
  %128 = load i32, i32* %add.ptr189, align 4, !dbg !13575
  %and190 = and i32 %128, 16711680, !dbg !13575
  %shr191 = lshr i32 %and190, 8, !dbg !13575
  %or192 = or i32 %or188, %shr191, !dbg !13575
  %129 = load i8*, i8** %in, align 8, !dbg !13575
  %130 = bitcast i8* %129 to i32*, !dbg !13575
  %add.ptr193 = getelementptr i32, i32* %130, i64 0, !dbg !13575
  %131 = load i32, i32* %add.ptr193, align 4, !dbg !13575
  %and194 = and i32 %131, -16777216, !dbg !13575
  %shr195 = lshr i32 %and194, 24, !dbg !13575
  %or196 = or i32 %or192, %shr195, !dbg !13575
  br label %cond.end200, !dbg !13575

cond.false197:                                    ; preds = %cond.false179
  %132 = load i8*, i8** %in, align 8, !dbg !13575
  %133 = bitcast i8* %132 to i32*, !dbg !13575
  %add.ptr198 = getelementptr i32, i32* %133, i64 0, !dbg !13575
  %134 = load i32, i32* %add.ptr198, align 4, !dbg !13575
  %call199 = call i32 @__fswab32(i32 %134) #8, !dbg !13575
  br label %cond.end200, !dbg !13575

cond.end200:                                      ; preds = %cond.false197, %cond.true181
  %cond201 = phi i32 [ %or196, %cond.true181 ], [ %call199, %cond.false197 ], !dbg !13575
  %and202 = and i32 %cond201, 65535, !dbg !13575
  %135 = load i32, i32* %_v, align 4, !dbg !13575
  %and203 = and i32 %135, 65535, !dbg !13575
  %shl204 = shl i32 %and203, 16, !dbg !13575
  %or205 = or i32 %and202, %shl204, !dbg !13575
  %call206 = call i32 @__fswab32(i32 %or205) #8, !dbg !13575
  br label %cond.end207, !dbg !13575

cond.end207:                                      ; preds = %cond.end200, %cond.end170
  %cond208 = phi i32 [ %or178, %cond.end170 ], [ %call206, %cond.end200 ], !dbg !13575
  %136 = load i8*, i8** %in, align 8, !dbg !13575
  %137 = bitcast i8* %136 to i32*, !dbg !13575
  %add.ptr209 = getelementptr i32, i32* %137, i64 0, !dbg !13575
  store i32 %cond208, i32* %add.ptr209, align 4, !dbg !13575
  br label %do.end210, !dbg !13575

do.end210:                                        ; preds = %cond.end207
  %138 = load i8, i8* %other_vport.addr, align 1, !dbg !13578
  %tobool211 = icmp ne i8 %138, 0, !dbg !13578
  br i1 %tobool211, label %if.then212, label %if.end572, !dbg !13580

if.then212:                                       ; preds = %do.end210
  %139 = load i32, i32* %is_group_manager, align 4, !dbg !13581
  %tobool213 = icmp ne i32 %139, 0, !dbg !13581
  br i1 %tobool213, label %if.then214, label %if.else, !dbg !13584

if.then214:                                       ; preds = %if.then212
  br label %do.body215, !dbg !13585

do.body215:                                       ; preds = %if.then214
  call void @llvm.dbg.declare(metadata i32* %_v216, metadata !13587, metadata !DIExpression()), !dbg !13589
  store i32 1, i32* %_v216, align 4, !dbg !13589
  br label %do.body217, !dbg !13589

do.body217:                                       ; preds = %do.body215
  br label %do.end218, !dbg !13590

do.end218:                                        ; preds = %do.body217
  %140 = load i8*, i8** %in, align 8, !dbg !13589
  %141 = bitcast i8* %140 to i32*, !dbg !13589
  %add.ptr219 = getelementptr i32, i32* %141, i64 2, !dbg !13589
  %142 = load i32, i32* %add.ptr219, align 4, !dbg !13589
  %143 = call i1 @llvm.is.constant.i32(i32 %142), !dbg !13589
  br i1 %143, label %cond.true220, label %cond.false236, !dbg !13589

cond.true220:                                     ; preds = %do.end218
  %144 = load i8*, i8** %in, align 8, !dbg !13589
  %145 = bitcast i8* %144 to i32*, !dbg !13589
  %add.ptr221 = getelementptr i32, i32* %145, i64 2, !dbg !13589
  %146 = load i32, i32* %add.ptr221, align 4, !dbg !13589
  %and222 = and i32 %146, 255, !dbg !13589
  %shl223 = shl i32 %and222, 24, !dbg !13589
  %147 = load i8*, i8** %in, align 8, !dbg !13589
  %148 = bitcast i8* %147 to i32*, !dbg !13589
  %add.ptr224 = getelementptr i32, i32* %148, i64 2, !dbg !13589
  %149 = load i32, i32* %add.ptr224, align 4, !dbg !13589
  %and225 = and i32 %149, 65280, !dbg !13589
  %shl226 = shl i32 %and225, 8, !dbg !13589
  %or227 = or i32 %shl223, %shl226, !dbg !13589
  %150 = load i8*, i8** %in, align 8, !dbg !13589
  %151 = bitcast i8* %150 to i32*, !dbg !13589
  %add.ptr228 = getelementptr i32, i32* %151, i64 2, !dbg !13589
  %152 = load i32, i32* %add.ptr228, align 4, !dbg !13589
  %and229 = and i32 %152, 16711680, !dbg !13589
  %shr230 = lshr i32 %and229, 8, !dbg !13589
  %or231 = or i32 %or227, %shr230, !dbg !13589
  %153 = load i8*, i8** %in, align 8, !dbg !13589
  %154 = bitcast i8* %153 to i32*, !dbg !13589
  %add.ptr232 = getelementptr i32, i32* %154, i64 2, !dbg !13589
  %155 = load i32, i32* %add.ptr232, align 4, !dbg !13589
  %and233 = and i32 %155, -16777216, !dbg !13589
  %shr234 = lshr i32 %and233, 24, !dbg !13589
  %or235 = or i32 %or231, %shr234, !dbg !13589
  br label %cond.end239, !dbg !13589

cond.false236:                                    ; preds = %do.end218
  %156 = load i8*, i8** %in, align 8, !dbg !13589
  %157 = bitcast i8* %156 to i32*, !dbg !13589
  %add.ptr237 = getelementptr i32, i32* %157, i64 2, !dbg !13589
  %158 = load i32, i32* %add.ptr237, align 4, !dbg !13589
  %call238 = call i32 @__fswab32(i32 %158) #8, !dbg !13589
  br label %cond.end239, !dbg !13589

cond.end239:                                      ; preds = %cond.false236, %cond.true220
  %cond240 = phi i32 [ %or235, %cond.true220 ], [ %call238, %cond.false236 ], !dbg !13589
  %and241 = and i32 %cond240, 2147483647, !dbg !13589
  %159 = load i32, i32* %_v216, align 4, !dbg !13589
  %and242 = and i32 %159, 1, !dbg !13589
  %shl243 = shl i32 %and242, 31, !dbg !13589
  %or244 = or i32 %and241, %shl243, !dbg !13589
  %160 = call i1 @llvm.is.constant.i32(i32 %or244), !dbg !13589
  br i1 %160, label %cond.true245, label %cond.false361, !dbg !13589

cond.true245:                                     ; preds = %cond.end239
  %161 = load i8*, i8** %in, align 8, !dbg !13589
  %162 = bitcast i8* %161 to i32*, !dbg !13589
  %add.ptr246 = getelementptr i32, i32* %162, i64 2, !dbg !13589
  %163 = load i32, i32* %add.ptr246, align 4, !dbg !13589
  %164 = call i1 @llvm.is.constant.i32(i32 %163), !dbg !13589
  br i1 %164, label %cond.true247, label %cond.false263, !dbg !13589

cond.true247:                                     ; preds = %cond.true245
  %165 = load i8*, i8** %in, align 8, !dbg !13589
  %166 = bitcast i8* %165 to i32*, !dbg !13589
  %add.ptr248 = getelementptr i32, i32* %166, i64 2, !dbg !13589
  %167 = load i32, i32* %add.ptr248, align 4, !dbg !13589
  %and249 = and i32 %167, 255, !dbg !13589
  %shl250 = shl i32 %and249, 24, !dbg !13589
  %168 = load i8*, i8** %in, align 8, !dbg !13589
  %169 = bitcast i8* %168 to i32*, !dbg !13589
  %add.ptr251 = getelementptr i32, i32* %169, i64 2, !dbg !13589
  %170 = load i32, i32* %add.ptr251, align 4, !dbg !13589
  %and252 = and i32 %170, 65280, !dbg !13589
  %shl253 = shl i32 %and252, 8, !dbg !13589
  %or254 = or i32 %shl250, %shl253, !dbg !13589
  %171 = load i8*, i8** %in, align 8, !dbg !13589
  %172 = bitcast i8* %171 to i32*, !dbg !13589
  %add.ptr255 = getelementptr i32, i32* %172, i64 2, !dbg !13589
  %173 = load i32, i32* %add.ptr255, align 4, !dbg !13589
  %and256 = and i32 %173, 16711680, !dbg !13589
  %shr257 = lshr i32 %and256, 8, !dbg !13589
  %or258 = or i32 %or254, %shr257, !dbg !13589
  %174 = load i8*, i8** %in, align 8, !dbg !13589
  %175 = bitcast i8* %174 to i32*, !dbg !13589
  %add.ptr259 = getelementptr i32, i32* %175, i64 2, !dbg !13589
  %176 = load i32, i32* %add.ptr259, align 4, !dbg !13589
  %and260 = and i32 %176, -16777216, !dbg !13589
  %shr261 = lshr i32 %and260, 24, !dbg !13589
  %or262 = or i32 %or258, %shr261, !dbg !13589
  br label %cond.end266, !dbg !13589

cond.false263:                                    ; preds = %cond.true245
  %177 = load i8*, i8** %in, align 8, !dbg !13589
  %178 = bitcast i8* %177 to i32*, !dbg !13589
  %add.ptr264 = getelementptr i32, i32* %178, i64 2, !dbg !13589
  %179 = load i32, i32* %add.ptr264, align 4, !dbg !13589
  %call265 = call i32 @__fswab32(i32 %179) #8, !dbg !13589
  br label %cond.end266, !dbg !13589

cond.end266:                                      ; preds = %cond.false263, %cond.true247
  %cond267 = phi i32 [ %or262, %cond.true247 ], [ %call265, %cond.false263 ], !dbg !13589
  %and268 = and i32 %cond267, 2147483647, !dbg !13589
  %180 = load i32, i32* %_v216, align 4, !dbg !13589
  %and269 = and i32 %180, 1, !dbg !13589
  %shl270 = shl i32 %and269, 31, !dbg !13589
  %or271 = or i32 %and268, %shl270, !dbg !13589
  %and272 = and i32 %or271, 255, !dbg !13589
  %shl273 = shl i32 %and272, 24, !dbg !13589
  %181 = load i8*, i8** %in, align 8, !dbg !13589
  %182 = bitcast i8* %181 to i32*, !dbg !13589
  %add.ptr274 = getelementptr i32, i32* %182, i64 2, !dbg !13589
  %183 = load i32, i32* %add.ptr274, align 4, !dbg !13589
  %184 = call i1 @llvm.is.constant.i32(i32 %183), !dbg !13589
  br i1 %184, label %cond.true275, label %cond.false291, !dbg !13589

cond.true275:                                     ; preds = %cond.end266
  %185 = load i8*, i8** %in, align 8, !dbg !13589
  %186 = bitcast i8* %185 to i32*, !dbg !13589
  %add.ptr276 = getelementptr i32, i32* %186, i64 2, !dbg !13589
  %187 = load i32, i32* %add.ptr276, align 4, !dbg !13589
  %and277 = and i32 %187, 255, !dbg !13589
  %shl278 = shl i32 %and277, 24, !dbg !13589
  %188 = load i8*, i8** %in, align 8, !dbg !13589
  %189 = bitcast i8* %188 to i32*, !dbg !13589
  %add.ptr279 = getelementptr i32, i32* %189, i64 2, !dbg !13589
  %190 = load i32, i32* %add.ptr279, align 4, !dbg !13589
  %and280 = and i32 %190, 65280, !dbg !13589
  %shl281 = shl i32 %and280, 8, !dbg !13589
  %or282 = or i32 %shl278, %shl281, !dbg !13589
  %191 = load i8*, i8** %in, align 8, !dbg !13589
  %192 = bitcast i8* %191 to i32*, !dbg !13589
  %add.ptr283 = getelementptr i32, i32* %192, i64 2, !dbg !13589
  %193 = load i32, i32* %add.ptr283, align 4, !dbg !13589
  %and284 = and i32 %193, 16711680, !dbg !13589
  %shr285 = lshr i32 %and284, 8, !dbg !13589
  %or286 = or i32 %or282, %shr285, !dbg !13589
  %194 = load i8*, i8** %in, align 8, !dbg !13589
  %195 = bitcast i8* %194 to i32*, !dbg !13589
  %add.ptr287 = getelementptr i32, i32* %195, i64 2, !dbg !13589
  %196 = load i32, i32* %add.ptr287, align 4, !dbg !13589
  %and288 = and i32 %196, -16777216, !dbg !13589
  %shr289 = lshr i32 %and288, 24, !dbg !13589
  %or290 = or i32 %or286, %shr289, !dbg !13589
  br label %cond.end294, !dbg !13589

cond.false291:                                    ; preds = %cond.end266
  %197 = load i8*, i8** %in, align 8, !dbg !13589
  %198 = bitcast i8* %197 to i32*, !dbg !13589
  %add.ptr292 = getelementptr i32, i32* %198, i64 2, !dbg !13589
  %199 = load i32, i32* %add.ptr292, align 4, !dbg !13589
  %call293 = call i32 @__fswab32(i32 %199) #8, !dbg !13589
  br label %cond.end294, !dbg !13589

cond.end294:                                      ; preds = %cond.false291, %cond.true275
  %cond295 = phi i32 [ %or290, %cond.true275 ], [ %call293, %cond.false291 ], !dbg !13589
  %and296 = and i32 %cond295, 2147483647, !dbg !13589
  %200 = load i32, i32* %_v216, align 4, !dbg !13589
  %and297 = and i32 %200, 1, !dbg !13589
  %shl298 = shl i32 %and297, 31, !dbg !13589
  %or299 = or i32 %and296, %shl298, !dbg !13589
  %and300 = and i32 %or299, 65280, !dbg !13589
  %shl301 = shl i32 %and300, 8, !dbg !13589
  %or302 = or i32 %shl273, %shl301, !dbg !13589
  %201 = load i8*, i8** %in, align 8, !dbg !13589
  %202 = bitcast i8* %201 to i32*, !dbg !13589
  %add.ptr303 = getelementptr i32, i32* %202, i64 2, !dbg !13589
  %203 = load i32, i32* %add.ptr303, align 4, !dbg !13589
  %204 = call i1 @llvm.is.constant.i32(i32 %203), !dbg !13589
  br i1 %204, label %cond.true304, label %cond.false320, !dbg !13589

cond.true304:                                     ; preds = %cond.end294
  %205 = load i8*, i8** %in, align 8, !dbg !13589
  %206 = bitcast i8* %205 to i32*, !dbg !13589
  %add.ptr305 = getelementptr i32, i32* %206, i64 2, !dbg !13589
  %207 = load i32, i32* %add.ptr305, align 4, !dbg !13589
  %and306 = and i32 %207, 255, !dbg !13589
  %shl307 = shl i32 %and306, 24, !dbg !13589
  %208 = load i8*, i8** %in, align 8, !dbg !13589
  %209 = bitcast i8* %208 to i32*, !dbg !13589
  %add.ptr308 = getelementptr i32, i32* %209, i64 2, !dbg !13589
  %210 = load i32, i32* %add.ptr308, align 4, !dbg !13589
  %and309 = and i32 %210, 65280, !dbg !13589
  %shl310 = shl i32 %and309, 8, !dbg !13589
  %or311 = or i32 %shl307, %shl310, !dbg !13589
  %211 = load i8*, i8** %in, align 8, !dbg !13589
  %212 = bitcast i8* %211 to i32*, !dbg !13589
  %add.ptr312 = getelementptr i32, i32* %212, i64 2, !dbg !13589
  %213 = load i32, i32* %add.ptr312, align 4, !dbg !13589
  %and313 = and i32 %213, 16711680, !dbg !13589
  %shr314 = lshr i32 %and313, 8, !dbg !13589
  %or315 = or i32 %or311, %shr314, !dbg !13589
  %214 = load i8*, i8** %in, align 8, !dbg !13589
  %215 = bitcast i8* %214 to i32*, !dbg !13589
  %add.ptr316 = getelementptr i32, i32* %215, i64 2, !dbg !13589
  %216 = load i32, i32* %add.ptr316, align 4, !dbg !13589
  %and317 = and i32 %216, -16777216, !dbg !13589
  %shr318 = lshr i32 %and317, 24, !dbg !13589
  %or319 = or i32 %or315, %shr318, !dbg !13589
  br label %cond.end323, !dbg !13589

cond.false320:                                    ; preds = %cond.end294
  %217 = load i8*, i8** %in, align 8, !dbg !13589
  %218 = bitcast i8* %217 to i32*, !dbg !13589
  %add.ptr321 = getelementptr i32, i32* %218, i64 2, !dbg !13589
  %219 = load i32, i32* %add.ptr321, align 4, !dbg !13589
  %call322 = call i32 @__fswab32(i32 %219) #8, !dbg !13589
  br label %cond.end323, !dbg !13589

cond.end323:                                      ; preds = %cond.false320, %cond.true304
  %cond324 = phi i32 [ %or319, %cond.true304 ], [ %call322, %cond.false320 ], !dbg !13589
  %and325 = and i32 %cond324, 2147483647, !dbg !13589
  %220 = load i32, i32* %_v216, align 4, !dbg !13589
  %and326 = and i32 %220, 1, !dbg !13589
  %shl327 = shl i32 %and326, 31, !dbg !13589
  %or328 = or i32 %and325, %shl327, !dbg !13589
  %and329 = and i32 %or328, 16711680, !dbg !13589
  %shr330 = lshr i32 %and329, 8, !dbg !13589
  %or331 = or i32 %or302, %shr330, !dbg !13589
  %221 = load i8*, i8** %in, align 8, !dbg !13589
  %222 = bitcast i8* %221 to i32*, !dbg !13589
  %add.ptr332 = getelementptr i32, i32* %222, i64 2, !dbg !13589
  %223 = load i32, i32* %add.ptr332, align 4, !dbg !13589
  %224 = call i1 @llvm.is.constant.i32(i32 %223), !dbg !13589
  br i1 %224, label %cond.true333, label %cond.false349, !dbg !13589

cond.true333:                                     ; preds = %cond.end323
  %225 = load i8*, i8** %in, align 8, !dbg !13589
  %226 = bitcast i8* %225 to i32*, !dbg !13589
  %add.ptr334 = getelementptr i32, i32* %226, i64 2, !dbg !13589
  %227 = load i32, i32* %add.ptr334, align 4, !dbg !13589
  %and335 = and i32 %227, 255, !dbg !13589
  %shl336 = shl i32 %and335, 24, !dbg !13589
  %228 = load i8*, i8** %in, align 8, !dbg !13589
  %229 = bitcast i8* %228 to i32*, !dbg !13589
  %add.ptr337 = getelementptr i32, i32* %229, i64 2, !dbg !13589
  %230 = load i32, i32* %add.ptr337, align 4, !dbg !13589
  %and338 = and i32 %230, 65280, !dbg !13589
  %shl339 = shl i32 %and338, 8, !dbg !13589
  %or340 = or i32 %shl336, %shl339, !dbg !13589
  %231 = load i8*, i8** %in, align 8, !dbg !13589
  %232 = bitcast i8* %231 to i32*, !dbg !13589
  %add.ptr341 = getelementptr i32, i32* %232, i64 2, !dbg !13589
  %233 = load i32, i32* %add.ptr341, align 4, !dbg !13589
  %and342 = and i32 %233, 16711680, !dbg !13589
  %shr343 = lshr i32 %and342, 8, !dbg !13589
  %or344 = or i32 %or340, %shr343, !dbg !13589
  %234 = load i8*, i8** %in, align 8, !dbg !13589
  %235 = bitcast i8* %234 to i32*, !dbg !13589
  %add.ptr345 = getelementptr i32, i32* %235, i64 2, !dbg !13589
  %236 = load i32, i32* %add.ptr345, align 4, !dbg !13589
  %and346 = and i32 %236, -16777216, !dbg !13589
  %shr347 = lshr i32 %and346, 24, !dbg !13589
  %or348 = or i32 %or344, %shr347, !dbg !13589
  br label %cond.end352, !dbg !13589

cond.false349:                                    ; preds = %cond.end323
  %237 = load i8*, i8** %in, align 8, !dbg !13589
  %238 = bitcast i8* %237 to i32*, !dbg !13589
  %add.ptr350 = getelementptr i32, i32* %238, i64 2, !dbg !13589
  %239 = load i32, i32* %add.ptr350, align 4, !dbg !13589
  %call351 = call i32 @__fswab32(i32 %239) #8, !dbg !13589
  br label %cond.end352, !dbg !13589

cond.end352:                                      ; preds = %cond.false349, %cond.true333
  %cond353 = phi i32 [ %or348, %cond.true333 ], [ %call351, %cond.false349 ], !dbg !13589
  %and354 = and i32 %cond353, 2147483647, !dbg !13589
  %240 = load i32, i32* %_v216, align 4, !dbg !13589
  %and355 = and i32 %240, 1, !dbg !13589
  %shl356 = shl i32 %and355, 31, !dbg !13589
  %or357 = or i32 %and354, %shl356, !dbg !13589
  %and358 = and i32 %or357, -16777216, !dbg !13589
  %shr359 = lshr i32 %and358, 24, !dbg !13589
  %or360 = or i32 %or331, %shr359, !dbg !13589
  br label %cond.end389, !dbg !13589

cond.false361:                                    ; preds = %cond.end239
  %241 = load i8*, i8** %in, align 8, !dbg !13589
  %242 = bitcast i8* %241 to i32*, !dbg !13589
  %add.ptr362 = getelementptr i32, i32* %242, i64 2, !dbg !13589
  %243 = load i32, i32* %add.ptr362, align 4, !dbg !13589
  %244 = call i1 @llvm.is.constant.i32(i32 %243), !dbg !13589
  br i1 %244, label %cond.true363, label %cond.false379, !dbg !13589

cond.true363:                                     ; preds = %cond.false361
  %245 = load i8*, i8** %in, align 8, !dbg !13589
  %246 = bitcast i8* %245 to i32*, !dbg !13589
  %add.ptr364 = getelementptr i32, i32* %246, i64 2, !dbg !13589
  %247 = load i32, i32* %add.ptr364, align 4, !dbg !13589
  %and365 = and i32 %247, 255, !dbg !13589
  %shl366 = shl i32 %and365, 24, !dbg !13589
  %248 = load i8*, i8** %in, align 8, !dbg !13589
  %249 = bitcast i8* %248 to i32*, !dbg !13589
  %add.ptr367 = getelementptr i32, i32* %249, i64 2, !dbg !13589
  %250 = load i32, i32* %add.ptr367, align 4, !dbg !13589
  %and368 = and i32 %250, 65280, !dbg !13589
  %shl369 = shl i32 %and368, 8, !dbg !13589
  %or370 = or i32 %shl366, %shl369, !dbg !13589
  %251 = load i8*, i8** %in, align 8, !dbg !13589
  %252 = bitcast i8* %251 to i32*, !dbg !13589
  %add.ptr371 = getelementptr i32, i32* %252, i64 2, !dbg !13589
  %253 = load i32, i32* %add.ptr371, align 4, !dbg !13589
  %and372 = and i32 %253, 16711680, !dbg !13589
  %shr373 = lshr i32 %and372, 8, !dbg !13589
  %or374 = or i32 %or370, %shr373, !dbg !13589
  %254 = load i8*, i8** %in, align 8, !dbg !13589
  %255 = bitcast i8* %254 to i32*, !dbg !13589
  %add.ptr375 = getelementptr i32, i32* %255, i64 2, !dbg !13589
  %256 = load i32, i32* %add.ptr375, align 4, !dbg !13589
  %and376 = and i32 %256, -16777216, !dbg !13589
  %shr377 = lshr i32 %and376, 24, !dbg !13589
  %or378 = or i32 %or374, %shr377, !dbg !13589
  br label %cond.end382, !dbg !13589

cond.false379:                                    ; preds = %cond.false361
  %257 = load i8*, i8** %in, align 8, !dbg !13589
  %258 = bitcast i8* %257 to i32*, !dbg !13589
  %add.ptr380 = getelementptr i32, i32* %258, i64 2, !dbg !13589
  %259 = load i32, i32* %add.ptr380, align 4, !dbg !13589
  %call381 = call i32 @__fswab32(i32 %259) #8, !dbg !13589
  br label %cond.end382, !dbg !13589

cond.end382:                                      ; preds = %cond.false379, %cond.true363
  %cond383 = phi i32 [ %or378, %cond.true363 ], [ %call381, %cond.false379 ], !dbg !13589
  %and384 = and i32 %cond383, 2147483647, !dbg !13589
  %260 = load i32, i32* %_v216, align 4, !dbg !13589
  %and385 = and i32 %260, 1, !dbg !13589
  %shl386 = shl i32 %and385, 31, !dbg !13589
  %or387 = or i32 %and384, %shl386, !dbg !13589
  %call388 = call i32 @__fswab32(i32 %or387) #8, !dbg !13589
  br label %cond.end389, !dbg !13589

cond.end389:                                      ; preds = %cond.end382, %cond.end352
  %cond390 = phi i32 [ %or360, %cond.end352 ], [ %call388, %cond.end382 ], !dbg !13589
  %261 = load i8*, i8** %in, align 8, !dbg !13589
  %262 = bitcast i8* %261 to i32*, !dbg !13589
  %add.ptr391 = getelementptr i32, i32* %262, i64 2, !dbg !13589
  store i32 %cond390, i32* %add.ptr391, align 4, !dbg !13589
  br label %do.end392, !dbg !13589

do.end392:                                        ; preds = %cond.end389
  br label %do.body393, !dbg !13592

do.body393:                                       ; preds = %do.end392
  call void @llvm.dbg.declare(metadata i32* %_v394, metadata !13593, metadata !DIExpression()), !dbg !13595
  %263 = load i32, i32* %vf.addr, align 4, !dbg !13595
  store i32 %263, i32* %_v394, align 4, !dbg !13595
  br label %do.body395, !dbg !13595

do.body395:                                       ; preds = %do.body393
  br label %do.end396, !dbg !13596

do.end396:                                        ; preds = %do.body395
  %264 = load i8*, i8** %in, align 8, !dbg !13595
  %265 = bitcast i8* %264 to i32*, !dbg !13595
  %add.ptr397 = getelementptr i32, i32* %265, i64 2, !dbg !13595
  %266 = load i32, i32* %add.ptr397, align 4, !dbg !13595
  %267 = call i1 @llvm.is.constant.i32(i32 %266), !dbg !13595
  br i1 %267, label %cond.true398, label %cond.false414, !dbg !13595

cond.true398:                                     ; preds = %do.end396
  %268 = load i8*, i8** %in, align 8, !dbg !13595
  %269 = bitcast i8* %268 to i32*, !dbg !13595
  %add.ptr399 = getelementptr i32, i32* %269, i64 2, !dbg !13595
  %270 = load i32, i32* %add.ptr399, align 4, !dbg !13595
  %and400 = and i32 %270, 255, !dbg !13595
  %shl401 = shl i32 %and400, 24, !dbg !13595
  %271 = load i8*, i8** %in, align 8, !dbg !13595
  %272 = bitcast i8* %271 to i32*, !dbg !13595
  %add.ptr402 = getelementptr i32, i32* %272, i64 2, !dbg !13595
  %273 = load i32, i32* %add.ptr402, align 4, !dbg !13595
  %and403 = and i32 %273, 65280, !dbg !13595
  %shl404 = shl i32 %and403, 8, !dbg !13595
  %or405 = or i32 %shl401, %shl404, !dbg !13595
  %274 = load i8*, i8** %in, align 8, !dbg !13595
  %275 = bitcast i8* %274 to i32*, !dbg !13595
  %add.ptr406 = getelementptr i32, i32* %275, i64 2, !dbg !13595
  %276 = load i32, i32* %add.ptr406, align 4, !dbg !13595
  %and407 = and i32 %276, 16711680, !dbg !13595
  %shr408 = lshr i32 %and407, 8, !dbg !13595
  %or409 = or i32 %or405, %shr408, !dbg !13595
  %277 = load i8*, i8** %in, align 8, !dbg !13595
  %278 = bitcast i8* %277 to i32*, !dbg !13595
  %add.ptr410 = getelementptr i32, i32* %278, i64 2, !dbg !13595
  %279 = load i32, i32* %add.ptr410, align 4, !dbg !13595
  %and411 = and i32 %279, -16777216, !dbg !13595
  %shr412 = lshr i32 %and411, 24, !dbg !13595
  %or413 = or i32 %or409, %shr412, !dbg !13595
  br label %cond.end417, !dbg !13595

cond.false414:                                    ; preds = %do.end396
  %280 = load i8*, i8** %in, align 8, !dbg !13595
  %281 = bitcast i8* %280 to i32*, !dbg !13595
  %add.ptr415 = getelementptr i32, i32* %281, i64 2, !dbg !13595
  %282 = load i32, i32* %add.ptr415, align 4, !dbg !13595
  %call416 = call i32 @__fswab32(i32 %282) #8, !dbg !13595
  br label %cond.end417, !dbg !13595

cond.end417:                                      ; preds = %cond.false414, %cond.true398
  %cond418 = phi i32 [ %or413, %cond.true398 ], [ %call416, %cond.false414 ], !dbg !13595
  %and419 = and i32 %cond418, -65536, !dbg !13595
  %283 = load i32, i32* %_v394, align 4, !dbg !13595
  %and420 = and i32 %283, 65535, !dbg !13595
  %shl421 = shl i32 %and420, 0, !dbg !13595
  %or422 = or i32 %and419, %shl421, !dbg !13595
  %284 = call i1 @llvm.is.constant.i32(i32 %or422), !dbg !13595
  br i1 %284, label %cond.true423, label %cond.false539, !dbg !13595

cond.true423:                                     ; preds = %cond.end417
  %285 = load i8*, i8** %in, align 8, !dbg !13595
  %286 = bitcast i8* %285 to i32*, !dbg !13595
  %add.ptr424 = getelementptr i32, i32* %286, i64 2, !dbg !13595
  %287 = load i32, i32* %add.ptr424, align 4, !dbg !13595
  %288 = call i1 @llvm.is.constant.i32(i32 %287), !dbg !13595
  br i1 %288, label %cond.true425, label %cond.false441, !dbg !13595

cond.true425:                                     ; preds = %cond.true423
  %289 = load i8*, i8** %in, align 8, !dbg !13595
  %290 = bitcast i8* %289 to i32*, !dbg !13595
  %add.ptr426 = getelementptr i32, i32* %290, i64 2, !dbg !13595
  %291 = load i32, i32* %add.ptr426, align 4, !dbg !13595
  %and427 = and i32 %291, 255, !dbg !13595
  %shl428 = shl i32 %and427, 24, !dbg !13595
  %292 = load i8*, i8** %in, align 8, !dbg !13595
  %293 = bitcast i8* %292 to i32*, !dbg !13595
  %add.ptr429 = getelementptr i32, i32* %293, i64 2, !dbg !13595
  %294 = load i32, i32* %add.ptr429, align 4, !dbg !13595
  %and430 = and i32 %294, 65280, !dbg !13595
  %shl431 = shl i32 %and430, 8, !dbg !13595
  %or432 = or i32 %shl428, %shl431, !dbg !13595
  %295 = load i8*, i8** %in, align 8, !dbg !13595
  %296 = bitcast i8* %295 to i32*, !dbg !13595
  %add.ptr433 = getelementptr i32, i32* %296, i64 2, !dbg !13595
  %297 = load i32, i32* %add.ptr433, align 4, !dbg !13595
  %and434 = and i32 %297, 16711680, !dbg !13595
  %shr435 = lshr i32 %and434, 8, !dbg !13595
  %or436 = or i32 %or432, %shr435, !dbg !13595
  %298 = load i8*, i8** %in, align 8, !dbg !13595
  %299 = bitcast i8* %298 to i32*, !dbg !13595
  %add.ptr437 = getelementptr i32, i32* %299, i64 2, !dbg !13595
  %300 = load i32, i32* %add.ptr437, align 4, !dbg !13595
  %and438 = and i32 %300, -16777216, !dbg !13595
  %shr439 = lshr i32 %and438, 24, !dbg !13595
  %or440 = or i32 %or436, %shr439, !dbg !13595
  br label %cond.end444, !dbg !13595

cond.false441:                                    ; preds = %cond.true423
  %301 = load i8*, i8** %in, align 8, !dbg !13595
  %302 = bitcast i8* %301 to i32*, !dbg !13595
  %add.ptr442 = getelementptr i32, i32* %302, i64 2, !dbg !13595
  %303 = load i32, i32* %add.ptr442, align 4, !dbg !13595
  %call443 = call i32 @__fswab32(i32 %303) #8, !dbg !13595
  br label %cond.end444, !dbg !13595

cond.end444:                                      ; preds = %cond.false441, %cond.true425
  %cond445 = phi i32 [ %or440, %cond.true425 ], [ %call443, %cond.false441 ], !dbg !13595
  %and446 = and i32 %cond445, -65536, !dbg !13595
  %304 = load i32, i32* %_v394, align 4, !dbg !13595
  %and447 = and i32 %304, 65535, !dbg !13595
  %shl448 = shl i32 %and447, 0, !dbg !13595
  %or449 = or i32 %and446, %shl448, !dbg !13595
  %and450 = and i32 %or449, 255, !dbg !13595
  %shl451 = shl i32 %and450, 24, !dbg !13595
  %305 = load i8*, i8** %in, align 8, !dbg !13595
  %306 = bitcast i8* %305 to i32*, !dbg !13595
  %add.ptr452 = getelementptr i32, i32* %306, i64 2, !dbg !13595
  %307 = load i32, i32* %add.ptr452, align 4, !dbg !13595
  %308 = call i1 @llvm.is.constant.i32(i32 %307), !dbg !13595
  br i1 %308, label %cond.true453, label %cond.false469, !dbg !13595

cond.true453:                                     ; preds = %cond.end444
  %309 = load i8*, i8** %in, align 8, !dbg !13595
  %310 = bitcast i8* %309 to i32*, !dbg !13595
  %add.ptr454 = getelementptr i32, i32* %310, i64 2, !dbg !13595
  %311 = load i32, i32* %add.ptr454, align 4, !dbg !13595
  %and455 = and i32 %311, 255, !dbg !13595
  %shl456 = shl i32 %and455, 24, !dbg !13595
  %312 = load i8*, i8** %in, align 8, !dbg !13595
  %313 = bitcast i8* %312 to i32*, !dbg !13595
  %add.ptr457 = getelementptr i32, i32* %313, i64 2, !dbg !13595
  %314 = load i32, i32* %add.ptr457, align 4, !dbg !13595
  %and458 = and i32 %314, 65280, !dbg !13595
  %shl459 = shl i32 %and458, 8, !dbg !13595
  %or460 = or i32 %shl456, %shl459, !dbg !13595
  %315 = load i8*, i8** %in, align 8, !dbg !13595
  %316 = bitcast i8* %315 to i32*, !dbg !13595
  %add.ptr461 = getelementptr i32, i32* %316, i64 2, !dbg !13595
  %317 = load i32, i32* %add.ptr461, align 4, !dbg !13595
  %and462 = and i32 %317, 16711680, !dbg !13595
  %shr463 = lshr i32 %and462, 8, !dbg !13595
  %or464 = or i32 %or460, %shr463, !dbg !13595
  %318 = load i8*, i8** %in, align 8, !dbg !13595
  %319 = bitcast i8* %318 to i32*, !dbg !13595
  %add.ptr465 = getelementptr i32, i32* %319, i64 2, !dbg !13595
  %320 = load i32, i32* %add.ptr465, align 4, !dbg !13595
  %and466 = and i32 %320, -16777216, !dbg !13595
  %shr467 = lshr i32 %and466, 24, !dbg !13595
  %or468 = or i32 %or464, %shr467, !dbg !13595
  br label %cond.end472, !dbg !13595

cond.false469:                                    ; preds = %cond.end444
  %321 = load i8*, i8** %in, align 8, !dbg !13595
  %322 = bitcast i8* %321 to i32*, !dbg !13595
  %add.ptr470 = getelementptr i32, i32* %322, i64 2, !dbg !13595
  %323 = load i32, i32* %add.ptr470, align 4, !dbg !13595
  %call471 = call i32 @__fswab32(i32 %323) #8, !dbg !13595
  br label %cond.end472, !dbg !13595

cond.end472:                                      ; preds = %cond.false469, %cond.true453
  %cond473 = phi i32 [ %or468, %cond.true453 ], [ %call471, %cond.false469 ], !dbg !13595
  %and474 = and i32 %cond473, -65536, !dbg !13595
  %324 = load i32, i32* %_v394, align 4, !dbg !13595
  %and475 = and i32 %324, 65535, !dbg !13595
  %shl476 = shl i32 %and475, 0, !dbg !13595
  %or477 = or i32 %and474, %shl476, !dbg !13595
  %and478 = and i32 %or477, 65280, !dbg !13595
  %shl479 = shl i32 %and478, 8, !dbg !13595
  %or480 = or i32 %shl451, %shl479, !dbg !13595
  %325 = load i8*, i8** %in, align 8, !dbg !13595
  %326 = bitcast i8* %325 to i32*, !dbg !13595
  %add.ptr481 = getelementptr i32, i32* %326, i64 2, !dbg !13595
  %327 = load i32, i32* %add.ptr481, align 4, !dbg !13595
  %328 = call i1 @llvm.is.constant.i32(i32 %327), !dbg !13595
  br i1 %328, label %cond.true482, label %cond.false498, !dbg !13595

cond.true482:                                     ; preds = %cond.end472
  %329 = load i8*, i8** %in, align 8, !dbg !13595
  %330 = bitcast i8* %329 to i32*, !dbg !13595
  %add.ptr483 = getelementptr i32, i32* %330, i64 2, !dbg !13595
  %331 = load i32, i32* %add.ptr483, align 4, !dbg !13595
  %and484 = and i32 %331, 255, !dbg !13595
  %shl485 = shl i32 %and484, 24, !dbg !13595
  %332 = load i8*, i8** %in, align 8, !dbg !13595
  %333 = bitcast i8* %332 to i32*, !dbg !13595
  %add.ptr486 = getelementptr i32, i32* %333, i64 2, !dbg !13595
  %334 = load i32, i32* %add.ptr486, align 4, !dbg !13595
  %and487 = and i32 %334, 65280, !dbg !13595
  %shl488 = shl i32 %and487, 8, !dbg !13595
  %or489 = or i32 %shl485, %shl488, !dbg !13595
  %335 = load i8*, i8** %in, align 8, !dbg !13595
  %336 = bitcast i8* %335 to i32*, !dbg !13595
  %add.ptr490 = getelementptr i32, i32* %336, i64 2, !dbg !13595
  %337 = load i32, i32* %add.ptr490, align 4, !dbg !13595
  %and491 = and i32 %337, 16711680, !dbg !13595
  %shr492 = lshr i32 %and491, 8, !dbg !13595
  %or493 = or i32 %or489, %shr492, !dbg !13595
  %338 = load i8*, i8** %in, align 8, !dbg !13595
  %339 = bitcast i8* %338 to i32*, !dbg !13595
  %add.ptr494 = getelementptr i32, i32* %339, i64 2, !dbg !13595
  %340 = load i32, i32* %add.ptr494, align 4, !dbg !13595
  %and495 = and i32 %340, -16777216, !dbg !13595
  %shr496 = lshr i32 %and495, 24, !dbg !13595
  %or497 = or i32 %or493, %shr496, !dbg !13595
  br label %cond.end501, !dbg !13595

cond.false498:                                    ; preds = %cond.end472
  %341 = load i8*, i8** %in, align 8, !dbg !13595
  %342 = bitcast i8* %341 to i32*, !dbg !13595
  %add.ptr499 = getelementptr i32, i32* %342, i64 2, !dbg !13595
  %343 = load i32, i32* %add.ptr499, align 4, !dbg !13595
  %call500 = call i32 @__fswab32(i32 %343) #8, !dbg !13595
  br label %cond.end501, !dbg !13595

cond.end501:                                      ; preds = %cond.false498, %cond.true482
  %cond502 = phi i32 [ %or497, %cond.true482 ], [ %call500, %cond.false498 ], !dbg !13595
  %and503 = and i32 %cond502, -65536, !dbg !13595
  %344 = load i32, i32* %_v394, align 4, !dbg !13595
  %and504 = and i32 %344, 65535, !dbg !13595
  %shl505 = shl i32 %and504, 0, !dbg !13595
  %or506 = or i32 %and503, %shl505, !dbg !13595
  %and507 = and i32 %or506, 16711680, !dbg !13595
  %shr508 = lshr i32 %and507, 8, !dbg !13595
  %or509 = or i32 %or480, %shr508, !dbg !13595
  %345 = load i8*, i8** %in, align 8, !dbg !13595
  %346 = bitcast i8* %345 to i32*, !dbg !13595
  %add.ptr510 = getelementptr i32, i32* %346, i64 2, !dbg !13595
  %347 = load i32, i32* %add.ptr510, align 4, !dbg !13595
  %348 = call i1 @llvm.is.constant.i32(i32 %347), !dbg !13595
  br i1 %348, label %cond.true511, label %cond.false527, !dbg !13595

cond.true511:                                     ; preds = %cond.end501
  %349 = load i8*, i8** %in, align 8, !dbg !13595
  %350 = bitcast i8* %349 to i32*, !dbg !13595
  %add.ptr512 = getelementptr i32, i32* %350, i64 2, !dbg !13595
  %351 = load i32, i32* %add.ptr512, align 4, !dbg !13595
  %and513 = and i32 %351, 255, !dbg !13595
  %shl514 = shl i32 %and513, 24, !dbg !13595
  %352 = load i8*, i8** %in, align 8, !dbg !13595
  %353 = bitcast i8* %352 to i32*, !dbg !13595
  %add.ptr515 = getelementptr i32, i32* %353, i64 2, !dbg !13595
  %354 = load i32, i32* %add.ptr515, align 4, !dbg !13595
  %and516 = and i32 %354, 65280, !dbg !13595
  %shl517 = shl i32 %and516, 8, !dbg !13595
  %or518 = or i32 %shl514, %shl517, !dbg !13595
  %355 = load i8*, i8** %in, align 8, !dbg !13595
  %356 = bitcast i8* %355 to i32*, !dbg !13595
  %add.ptr519 = getelementptr i32, i32* %356, i64 2, !dbg !13595
  %357 = load i32, i32* %add.ptr519, align 4, !dbg !13595
  %and520 = and i32 %357, 16711680, !dbg !13595
  %shr521 = lshr i32 %and520, 8, !dbg !13595
  %or522 = or i32 %or518, %shr521, !dbg !13595
  %358 = load i8*, i8** %in, align 8, !dbg !13595
  %359 = bitcast i8* %358 to i32*, !dbg !13595
  %add.ptr523 = getelementptr i32, i32* %359, i64 2, !dbg !13595
  %360 = load i32, i32* %add.ptr523, align 4, !dbg !13595
  %and524 = and i32 %360, -16777216, !dbg !13595
  %shr525 = lshr i32 %and524, 24, !dbg !13595
  %or526 = or i32 %or522, %shr525, !dbg !13595
  br label %cond.end530, !dbg !13595

cond.false527:                                    ; preds = %cond.end501
  %361 = load i8*, i8** %in, align 8, !dbg !13595
  %362 = bitcast i8* %361 to i32*, !dbg !13595
  %add.ptr528 = getelementptr i32, i32* %362, i64 2, !dbg !13595
  %363 = load i32, i32* %add.ptr528, align 4, !dbg !13595
  %call529 = call i32 @__fswab32(i32 %363) #8, !dbg !13595
  br label %cond.end530, !dbg !13595

cond.end530:                                      ; preds = %cond.false527, %cond.true511
  %cond531 = phi i32 [ %or526, %cond.true511 ], [ %call529, %cond.false527 ], !dbg !13595
  %and532 = and i32 %cond531, -65536, !dbg !13595
  %364 = load i32, i32* %_v394, align 4, !dbg !13595
  %and533 = and i32 %364, 65535, !dbg !13595
  %shl534 = shl i32 %and533, 0, !dbg !13595
  %or535 = or i32 %and532, %shl534, !dbg !13595
  %and536 = and i32 %or535, -16777216, !dbg !13595
  %shr537 = lshr i32 %and536, 24, !dbg !13595
  %or538 = or i32 %or509, %shr537, !dbg !13595
  br label %cond.end567, !dbg !13595

cond.false539:                                    ; preds = %cond.end417
  %365 = load i8*, i8** %in, align 8, !dbg !13595
  %366 = bitcast i8* %365 to i32*, !dbg !13595
  %add.ptr540 = getelementptr i32, i32* %366, i64 2, !dbg !13595
  %367 = load i32, i32* %add.ptr540, align 4, !dbg !13595
  %368 = call i1 @llvm.is.constant.i32(i32 %367), !dbg !13595
  br i1 %368, label %cond.true541, label %cond.false557, !dbg !13595

cond.true541:                                     ; preds = %cond.false539
  %369 = load i8*, i8** %in, align 8, !dbg !13595
  %370 = bitcast i8* %369 to i32*, !dbg !13595
  %add.ptr542 = getelementptr i32, i32* %370, i64 2, !dbg !13595
  %371 = load i32, i32* %add.ptr542, align 4, !dbg !13595
  %and543 = and i32 %371, 255, !dbg !13595
  %shl544 = shl i32 %and543, 24, !dbg !13595
  %372 = load i8*, i8** %in, align 8, !dbg !13595
  %373 = bitcast i8* %372 to i32*, !dbg !13595
  %add.ptr545 = getelementptr i32, i32* %373, i64 2, !dbg !13595
  %374 = load i32, i32* %add.ptr545, align 4, !dbg !13595
  %and546 = and i32 %374, 65280, !dbg !13595
  %shl547 = shl i32 %and546, 8, !dbg !13595
  %or548 = or i32 %shl544, %shl547, !dbg !13595
  %375 = load i8*, i8** %in, align 8, !dbg !13595
  %376 = bitcast i8* %375 to i32*, !dbg !13595
  %add.ptr549 = getelementptr i32, i32* %376, i64 2, !dbg !13595
  %377 = load i32, i32* %add.ptr549, align 4, !dbg !13595
  %and550 = and i32 %377, 16711680, !dbg !13595
  %shr551 = lshr i32 %and550, 8, !dbg !13595
  %or552 = or i32 %or548, %shr551, !dbg !13595
  %378 = load i8*, i8** %in, align 8, !dbg !13595
  %379 = bitcast i8* %378 to i32*, !dbg !13595
  %add.ptr553 = getelementptr i32, i32* %379, i64 2, !dbg !13595
  %380 = load i32, i32* %add.ptr553, align 4, !dbg !13595
  %and554 = and i32 %380, -16777216, !dbg !13595
  %shr555 = lshr i32 %and554, 24, !dbg !13595
  %or556 = or i32 %or552, %shr555, !dbg !13595
  br label %cond.end560, !dbg !13595

cond.false557:                                    ; preds = %cond.false539
  %381 = load i8*, i8** %in, align 8, !dbg !13595
  %382 = bitcast i8* %381 to i32*, !dbg !13595
  %add.ptr558 = getelementptr i32, i32* %382, i64 2, !dbg !13595
  %383 = load i32, i32* %add.ptr558, align 4, !dbg !13595
  %call559 = call i32 @__fswab32(i32 %383) #8, !dbg !13595
  br label %cond.end560, !dbg !13595

cond.end560:                                      ; preds = %cond.false557, %cond.true541
  %cond561 = phi i32 [ %or556, %cond.true541 ], [ %call559, %cond.false557 ], !dbg !13595
  %and562 = and i32 %cond561, -65536, !dbg !13595
  %384 = load i32, i32* %_v394, align 4, !dbg !13595
  %and563 = and i32 %384, 65535, !dbg !13595
  %shl564 = shl i32 %and563, 0, !dbg !13595
  %or565 = or i32 %and562, %shl564, !dbg !13595
  %call566 = call i32 @__fswab32(i32 %or565) #8, !dbg !13595
  br label %cond.end567, !dbg !13595

cond.end567:                                      ; preds = %cond.end560, %cond.end530
  %cond568 = phi i32 [ %or538, %cond.end530 ], [ %call566, %cond.end560 ], !dbg !13595
  %385 = load i8*, i8** %in, align 8, !dbg !13595
  %386 = bitcast i8* %385 to i32*, !dbg !13595
  %add.ptr569 = getelementptr i32, i32* %386, i64 2, !dbg !13595
  store i32 %cond568, i32* %add.ptr569, align 4, !dbg !13595
  br label %do.end570, !dbg !13595

do.end570:                                        ; preds = %cond.end567
  br label %if.end571, !dbg !13598

if.else:                                          ; preds = %if.then212
  store i32 -1, i32* %err, align 4, !dbg !13599
  br label %ex, !dbg !13601

if.end571:                                        ; preds = %do.end570
  br label %if.end572, !dbg !13602

if.end572:                                        ; preds = %if.end571, %do.end210
  %387 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !13603
  %caps573 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %387, i32 0, i32 9, !dbg !13603
  %hca_cur574 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps573, i32 0, i32 0, !dbg !13603
  %arrayidx575 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur574, i64 0, i64 0, !dbg !13603
  %arraydecay576 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx575, i64 0, i64 0, !dbg !13603
  %add.ptr577 = getelementptr i32, i32* %arraydecay576, i64 13, !dbg !13603
  %388 = load i32, i32* %add.ptr577, align 4, !dbg !13603
  %389 = call i1 @llvm.is.constant.i32(i32 %388), !dbg !13603
  br i1 %389, label %cond.true578, label %cond.false610, !dbg !13603

cond.true578:                                     ; preds = %if.end572
  %390 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !13603
  %caps579 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %390, i32 0, i32 9, !dbg !13603
  %hca_cur580 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps579, i32 0, i32 0, !dbg !13603
  %arrayidx581 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur580, i64 0, i64 0, !dbg !13603
  %arraydecay582 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx581, i64 0, i64 0, !dbg !13603
  %add.ptr583 = getelementptr i32, i32* %arraydecay582, i64 13, !dbg !13603
  %391 = load i32, i32* %add.ptr583, align 4, !dbg !13603
  %and584 = and i32 %391, 255, !dbg !13603
  %shl585 = shl i32 %and584, 24, !dbg !13603
  %392 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !13603
  %caps586 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %392, i32 0, i32 9, !dbg !13603
  %hca_cur587 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps586, i32 0, i32 0, !dbg !13603
  %arrayidx588 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur587, i64 0, i64 0, !dbg !13603
  %arraydecay589 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx588, i64 0, i64 0, !dbg !13603
  %add.ptr590 = getelementptr i32, i32* %arraydecay589, i64 13, !dbg !13603
  %393 = load i32, i32* %add.ptr590, align 4, !dbg !13603
  %and591 = and i32 %393, 65280, !dbg !13603
  %shl592 = shl i32 %and591, 8, !dbg !13603
  %or593 = or i32 %shl585, %shl592, !dbg !13603
  %394 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !13603
  %caps594 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %394, i32 0, i32 9, !dbg !13603
  %hca_cur595 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps594, i32 0, i32 0, !dbg !13603
  %arrayidx596 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur595, i64 0, i64 0, !dbg !13603
  %arraydecay597 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx596, i64 0, i64 0, !dbg !13603
  %add.ptr598 = getelementptr i32, i32* %arraydecay597, i64 13, !dbg !13603
  %395 = load i32, i32* %add.ptr598, align 4, !dbg !13603
  %and599 = and i32 %395, 16711680, !dbg !13603
  %shr600 = lshr i32 %and599, 8, !dbg !13603
  %or601 = or i32 %or593, %shr600, !dbg !13603
  %396 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !13603
  %caps602 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %396, i32 0, i32 9, !dbg !13603
  %hca_cur603 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps602, i32 0, i32 0, !dbg !13603
  %arrayidx604 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur603, i64 0, i64 0, !dbg !13603
  %arraydecay605 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx604, i64 0, i64 0, !dbg !13603
  %add.ptr606 = getelementptr i32, i32* %arraydecay605, i64 13, !dbg !13603
  %397 = load i32, i32* %add.ptr606, align 4, !dbg !13603
  %and607 = and i32 %397, -16777216, !dbg !13603
  %shr608 = lshr i32 %and607, 24, !dbg !13603
  %or609 = or i32 %or601, %shr608, !dbg !13603
  br label %cond.end617, !dbg !13603

cond.false610:                                    ; preds = %if.end572
  %398 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !13603
  %caps611 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %398, i32 0, i32 9, !dbg !13603
  %hca_cur612 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps611, i32 0, i32 0, !dbg !13603
  %arrayidx613 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur612, i64 0, i64 0, !dbg !13603
  %arraydecay614 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx613, i64 0, i64 0, !dbg !13603
  %add.ptr615 = getelementptr i32, i32* %arraydecay614, i64 13, !dbg !13603
  %399 = load i32, i32* %add.ptr615, align 4, !dbg !13603
  %call616 = call i32 @__fswab32(i32 %399) #8, !dbg !13603
  br label %cond.end617, !dbg !13603

cond.end617:                                      ; preds = %cond.false610, %cond.true578
  %cond618 = phi i32 [ %or609, %cond.true578 ], [ %call616, %cond.false610 ], !dbg !13603
  %shr619 = lshr i32 %cond618, 0, !dbg !13603
  %and620 = and i32 %shr619, 255, !dbg !13603
  %cmp = icmp ugt i32 %and620, 1, !dbg !13605
  br i1 %cmp, label %if.then622, label %if.end802, !dbg !13606

if.then622:                                       ; preds = %cond.end617
  br label %do.body623, !dbg !13607

do.body623:                                       ; preds = %if.then622
  call void @llvm.dbg.declare(metadata i32* %_v624, metadata !13608, metadata !DIExpression()), !dbg !13610
  %400 = load i8, i8* %port_num.addr, align 1, !dbg !13610
  %conv625 = zext i8 %400 to i32, !dbg !13610
  store i32 %conv625, i32* %_v624, align 4, !dbg !13610
  br label %do.body626, !dbg !13610

do.body626:                                       ; preds = %do.body623
  br label %do.end627, !dbg !13611

do.end627:                                        ; preds = %do.body626
  %401 = load i8*, i8** %in, align 8, !dbg !13610
  %402 = bitcast i8* %401 to i32*, !dbg !13610
  %add.ptr628 = getelementptr i32, i32* %402, i64 2, !dbg !13610
  %403 = load i32, i32* %add.ptr628, align 4, !dbg !13610
  %404 = call i1 @llvm.is.constant.i32(i32 %403), !dbg !13610
  br i1 %404, label %cond.true629, label %cond.false645, !dbg !13610

cond.true629:                                     ; preds = %do.end627
  %405 = load i8*, i8** %in, align 8, !dbg !13610
  %406 = bitcast i8* %405 to i32*, !dbg !13610
  %add.ptr630 = getelementptr i32, i32* %406, i64 2, !dbg !13610
  %407 = load i32, i32* %add.ptr630, align 4, !dbg !13610
  %and631 = and i32 %407, 255, !dbg !13610
  %shl632 = shl i32 %and631, 24, !dbg !13610
  %408 = load i8*, i8** %in, align 8, !dbg !13610
  %409 = bitcast i8* %408 to i32*, !dbg !13610
  %add.ptr633 = getelementptr i32, i32* %409, i64 2, !dbg !13610
  %410 = load i32, i32* %add.ptr633, align 4, !dbg !13610
  %and634 = and i32 %410, 65280, !dbg !13610
  %shl635 = shl i32 %and634, 8, !dbg !13610
  %or636 = or i32 %shl632, %shl635, !dbg !13610
  %411 = load i8*, i8** %in, align 8, !dbg !13610
  %412 = bitcast i8* %411 to i32*, !dbg !13610
  %add.ptr637 = getelementptr i32, i32* %412, i64 2, !dbg !13610
  %413 = load i32, i32* %add.ptr637, align 4, !dbg !13610
  %and638 = and i32 %413, 16711680, !dbg !13610
  %shr639 = lshr i32 %and638, 8, !dbg !13610
  %or640 = or i32 %or636, %shr639, !dbg !13610
  %414 = load i8*, i8** %in, align 8, !dbg !13610
  %415 = bitcast i8* %414 to i32*, !dbg !13610
  %add.ptr641 = getelementptr i32, i32* %415, i64 2, !dbg !13610
  %416 = load i32, i32* %add.ptr641, align 4, !dbg !13610
  %and642 = and i32 %416, -16777216, !dbg !13610
  %shr643 = lshr i32 %and642, 24, !dbg !13610
  %or644 = or i32 %or640, %shr643, !dbg !13610
  br label %cond.end648, !dbg !13610

cond.false645:                                    ; preds = %do.end627
  %417 = load i8*, i8** %in, align 8, !dbg !13610
  %418 = bitcast i8* %417 to i32*, !dbg !13610
  %add.ptr646 = getelementptr i32, i32* %418, i64 2, !dbg !13610
  %419 = load i32, i32* %add.ptr646, align 4, !dbg !13610
  %call647 = call i32 @__fswab32(i32 %419) #8, !dbg !13610
  br label %cond.end648, !dbg !13610

cond.end648:                                      ; preds = %cond.false645, %cond.true629
  %cond649 = phi i32 [ %or644, %cond.true629 ], [ %call647, %cond.false645 ], !dbg !13610
  %and650 = and i32 %cond649, -983041, !dbg !13610
  %420 = load i32, i32* %_v624, align 4, !dbg !13610
  %and651 = and i32 %420, 15, !dbg !13610
  %shl652 = shl i32 %and651, 16, !dbg !13610
  %or653 = or i32 %and650, %shl652, !dbg !13610
  %421 = call i1 @llvm.is.constant.i32(i32 %or653), !dbg !13610
  br i1 %421, label %cond.true654, label %cond.false770, !dbg !13610

cond.true654:                                     ; preds = %cond.end648
  %422 = load i8*, i8** %in, align 8, !dbg !13610
  %423 = bitcast i8* %422 to i32*, !dbg !13610
  %add.ptr655 = getelementptr i32, i32* %423, i64 2, !dbg !13610
  %424 = load i32, i32* %add.ptr655, align 4, !dbg !13610
  %425 = call i1 @llvm.is.constant.i32(i32 %424), !dbg !13610
  br i1 %425, label %cond.true656, label %cond.false672, !dbg !13610

cond.true656:                                     ; preds = %cond.true654
  %426 = load i8*, i8** %in, align 8, !dbg !13610
  %427 = bitcast i8* %426 to i32*, !dbg !13610
  %add.ptr657 = getelementptr i32, i32* %427, i64 2, !dbg !13610
  %428 = load i32, i32* %add.ptr657, align 4, !dbg !13610
  %and658 = and i32 %428, 255, !dbg !13610
  %shl659 = shl i32 %and658, 24, !dbg !13610
  %429 = load i8*, i8** %in, align 8, !dbg !13610
  %430 = bitcast i8* %429 to i32*, !dbg !13610
  %add.ptr660 = getelementptr i32, i32* %430, i64 2, !dbg !13610
  %431 = load i32, i32* %add.ptr660, align 4, !dbg !13610
  %and661 = and i32 %431, 65280, !dbg !13610
  %shl662 = shl i32 %and661, 8, !dbg !13610
  %or663 = or i32 %shl659, %shl662, !dbg !13610
  %432 = load i8*, i8** %in, align 8, !dbg !13610
  %433 = bitcast i8* %432 to i32*, !dbg !13610
  %add.ptr664 = getelementptr i32, i32* %433, i64 2, !dbg !13610
  %434 = load i32, i32* %add.ptr664, align 4, !dbg !13610
  %and665 = and i32 %434, 16711680, !dbg !13610
  %shr666 = lshr i32 %and665, 8, !dbg !13610
  %or667 = or i32 %or663, %shr666, !dbg !13610
  %435 = load i8*, i8** %in, align 8, !dbg !13610
  %436 = bitcast i8* %435 to i32*, !dbg !13610
  %add.ptr668 = getelementptr i32, i32* %436, i64 2, !dbg !13610
  %437 = load i32, i32* %add.ptr668, align 4, !dbg !13610
  %and669 = and i32 %437, -16777216, !dbg !13610
  %shr670 = lshr i32 %and669, 24, !dbg !13610
  %or671 = or i32 %or667, %shr670, !dbg !13610
  br label %cond.end675, !dbg !13610

cond.false672:                                    ; preds = %cond.true654
  %438 = load i8*, i8** %in, align 8, !dbg !13610
  %439 = bitcast i8* %438 to i32*, !dbg !13610
  %add.ptr673 = getelementptr i32, i32* %439, i64 2, !dbg !13610
  %440 = load i32, i32* %add.ptr673, align 4, !dbg !13610
  %call674 = call i32 @__fswab32(i32 %440) #8, !dbg !13610
  br label %cond.end675, !dbg !13610

cond.end675:                                      ; preds = %cond.false672, %cond.true656
  %cond676 = phi i32 [ %or671, %cond.true656 ], [ %call674, %cond.false672 ], !dbg !13610
  %and677 = and i32 %cond676, -983041, !dbg !13610
  %441 = load i32, i32* %_v624, align 4, !dbg !13610
  %and678 = and i32 %441, 15, !dbg !13610
  %shl679 = shl i32 %and678, 16, !dbg !13610
  %or680 = or i32 %and677, %shl679, !dbg !13610
  %and681 = and i32 %or680, 255, !dbg !13610
  %shl682 = shl i32 %and681, 24, !dbg !13610
  %442 = load i8*, i8** %in, align 8, !dbg !13610
  %443 = bitcast i8* %442 to i32*, !dbg !13610
  %add.ptr683 = getelementptr i32, i32* %443, i64 2, !dbg !13610
  %444 = load i32, i32* %add.ptr683, align 4, !dbg !13610
  %445 = call i1 @llvm.is.constant.i32(i32 %444), !dbg !13610
  br i1 %445, label %cond.true684, label %cond.false700, !dbg !13610

cond.true684:                                     ; preds = %cond.end675
  %446 = load i8*, i8** %in, align 8, !dbg !13610
  %447 = bitcast i8* %446 to i32*, !dbg !13610
  %add.ptr685 = getelementptr i32, i32* %447, i64 2, !dbg !13610
  %448 = load i32, i32* %add.ptr685, align 4, !dbg !13610
  %and686 = and i32 %448, 255, !dbg !13610
  %shl687 = shl i32 %and686, 24, !dbg !13610
  %449 = load i8*, i8** %in, align 8, !dbg !13610
  %450 = bitcast i8* %449 to i32*, !dbg !13610
  %add.ptr688 = getelementptr i32, i32* %450, i64 2, !dbg !13610
  %451 = load i32, i32* %add.ptr688, align 4, !dbg !13610
  %and689 = and i32 %451, 65280, !dbg !13610
  %shl690 = shl i32 %and689, 8, !dbg !13610
  %or691 = or i32 %shl687, %shl690, !dbg !13610
  %452 = load i8*, i8** %in, align 8, !dbg !13610
  %453 = bitcast i8* %452 to i32*, !dbg !13610
  %add.ptr692 = getelementptr i32, i32* %453, i64 2, !dbg !13610
  %454 = load i32, i32* %add.ptr692, align 4, !dbg !13610
  %and693 = and i32 %454, 16711680, !dbg !13610
  %shr694 = lshr i32 %and693, 8, !dbg !13610
  %or695 = or i32 %or691, %shr694, !dbg !13610
  %455 = load i8*, i8** %in, align 8, !dbg !13610
  %456 = bitcast i8* %455 to i32*, !dbg !13610
  %add.ptr696 = getelementptr i32, i32* %456, i64 2, !dbg !13610
  %457 = load i32, i32* %add.ptr696, align 4, !dbg !13610
  %and697 = and i32 %457, -16777216, !dbg !13610
  %shr698 = lshr i32 %and697, 24, !dbg !13610
  %or699 = or i32 %or695, %shr698, !dbg !13610
  br label %cond.end703, !dbg !13610

cond.false700:                                    ; preds = %cond.end675
  %458 = load i8*, i8** %in, align 8, !dbg !13610
  %459 = bitcast i8* %458 to i32*, !dbg !13610
  %add.ptr701 = getelementptr i32, i32* %459, i64 2, !dbg !13610
  %460 = load i32, i32* %add.ptr701, align 4, !dbg !13610
  %call702 = call i32 @__fswab32(i32 %460) #8, !dbg !13610
  br label %cond.end703, !dbg !13610

cond.end703:                                      ; preds = %cond.false700, %cond.true684
  %cond704 = phi i32 [ %or699, %cond.true684 ], [ %call702, %cond.false700 ], !dbg !13610
  %and705 = and i32 %cond704, -983041, !dbg !13610
  %461 = load i32, i32* %_v624, align 4, !dbg !13610
  %and706 = and i32 %461, 15, !dbg !13610
  %shl707 = shl i32 %and706, 16, !dbg !13610
  %or708 = or i32 %and705, %shl707, !dbg !13610
  %and709 = and i32 %or708, 65280, !dbg !13610
  %shl710 = shl i32 %and709, 8, !dbg !13610
  %or711 = or i32 %shl682, %shl710, !dbg !13610
  %462 = load i8*, i8** %in, align 8, !dbg !13610
  %463 = bitcast i8* %462 to i32*, !dbg !13610
  %add.ptr712 = getelementptr i32, i32* %463, i64 2, !dbg !13610
  %464 = load i32, i32* %add.ptr712, align 4, !dbg !13610
  %465 = call i1 @llvm.is.constant.i32(i32 %464), !dbg !13610
  br i1 %465, label %cond.true713, label %cond.false729, !dbg !13610

cond.true713:                                     ; preds = %cond.end703
  %466 = load i8*, i8** %in, align 8, !dbg !13610
  %467 = bitcast i8* %466 to i32*, !dbg !13610
  %add.ptr714 = getelementptr i32, i32* %467, i64 2, !dbg !13610
  %468 = load i32, i32* %add.ptr714, align 4, !dbg !13610
  %and715 = and i32 %468, 255, !dbg !13610
  %shl716 = shl i32 %and715, 24, !dbg !13610
  %469 = load i8*, i8** %in, align 8, !dbg !13610
  %470 = bitcast i8* %469 to i32*, !dbg !13610
  %add.ptr717 = getelementptr i32, i32* %470, i64 2, !dbg !13610
  %471 = load i32, i32* %add.ptr717, align 4, !dbg !13610
  %and718 = and i32 %471, 65280, !dbg !13610
  %shl719 = shl i32 %and718, 8, !dbg !13610
  %or720 = or i32 %shl716, %shl719, !dbg !13610
  %472 = load i8*, i8** %in, align 8, !dbg !13610
  %473 = bitcast i8* %472 to i32*, !dbg !13610
  %add.ptr721 = getelementptr i32, i32* %473, i64 2, !dbg !13610
  %474 = load i32, i32* %add.ptr721, align 4, !dbg !13610
  %and722 = and i32 %474, 16711680, !dbg !13610
  %shr723 = lshr i32 %and722, 8, !dbg !13610
  %or724 = or i32 %or720, %shr723, !dbg !13610
  %475 = load i8*, i8** %in, align 8, !dbg !13610
  %476 = bitcast i8* %475 to i32*, !dbg !13610
  %add.ptr725 = getelementptr i32, i32* %476, i64 2, !dbg !13610
  %477 = load i32, i32* %add.ptr725, align 4, !dbg !13610
  %and726 = and i32 %477, -16777216, !dbg !13610
  %shr727 = lshr i32 %and726, 24, !dbg !13610
  %or728 = or i32 %or724, %shr727, !dbg !13610
  br label %cond.end732, !dbg !13610

cond.false729:                                    ; preds = %cond.end703
  %478 = load i8*, i8** %in, align 8, !dbg !13610
  %479 = bitcast i8* %478 to i32*, !dbg !13610
  %add.ptr730 = getelementptr i32, i32* %479, i64 2, !dbg !13610
  %480 = load i32, i32* %add.ptr730, align 4, !dbg !13610
  %call731 = call i32 @__fswab32(i32 %480) #8, !dbg !13610
  br label %cond.end732, !dbg !13610

cond.end732:                                      ; preds = %cond.false729, %cond.true713
  %cond733 = phi i32 [ %or728, %cond.true713 ], [ %call731, %cond.false729 ], !dbg !13610
  %and734 = and i32 %cond733, -983041, !dbg !13610
  %481 = load i32, i32* %_v624, align 4, !dbg !13610
  %and735 = and i32 %481, 15, !dbg !13610
  %shl736 = shl i32 %and735, 16, !dbg !13610
  %or737 = or i32 %and734, %shl736, !dbg !13610
  %and738 = and i32 %or737, 16711680, !dbg !13610
  %shr739 = lshr i32 %and738, 8, !dbg !13610
  %or740 = or i32 %or711, %shr739, !dbg !13610
  %482 = load i8*, i8** %in, align 8, !dbg !13610
  %483 = bitcast i8* %482 to i32*, !dbg !13610
  %add.ptr741 = getelementptr i32, i32* %483, i64 2, !dbg !13610
  %484 = load i32, i32* %add.ptr741, align 4, !dbg !13610
  %485 = call i1 @llvm.is.constant.i32(i32 %484), !dbg !13610
  br i1 %485, label %cond.true742, label %cond.false758, !dbg !13610

cond.true742:                                     ; preds = %cond.end732
  %486 = load i8*, i8** %in, align 8, !dbg !13610
  %487 = bitcast i8* %486 to i32*, !dbg !13610
  %add.ptr743 = getelementptr i32, i32* %487, i64 2, !dbg !13610
  %488 = load i32, i32* %add.ptr743, align 4, !dbg !13610
  %and744 = and i32 %488, 255, !dbg !13610
  %shl745 = shl i32 %and744, 24, !dbg !13610
  %489 = load i8*, i8** %in, align 8, !dbg !13610
  %490 = bitcast i8* %489 to i32*, !dbg !13610
  %add.ptr746 = getelementptr i32, i32* %490, i64 2, !dbg !13610
  %491 = load i32, i32* %add.ptr746, align 4, !dbg !13610
  %and747 = and i32 %491, 65280, !dbg !13610
  %shl748 = shl i32 %and747, 8, !dbg !13610
  %or749 = or i32 %shl745, %shl748, !dbg !13610
  %492 = load i8*, i8** %in, align 8, !dbg !13610
  %493 = bitcast i8* %492 to i32*, !dbg !13610
  %add.ptr750 = getelementptr i32, i32* %493, i64 2, !dbg !13610
  %494 = load i32, i32* %add.ptr750, align 4, !dbg !13610
  %and751 = and i32 %494, 16711680, !dbg !13610
  %shr752 = lshr i32 %and751, 8, !dbg !13610
  %or753 = or i32 %or749, %shr752, !dbg !13610
  %495 = load i8*, i8** %in, align 8, !dbg !13610
  %496 = bitcast i8* %495 to i32*, !dbg !13610
  %add.ptr754 = getelementptr i32, i32* %496, i64 2, !dbg !13610
  %497 = load i32, i32* %add.ptr754, align 4, !dbg !13610
  %and755 = and i32 %497, -16777216, !dbg !13610
  %shr756 = lshr i32 %and755, 24, !dbg !13610
  %or757 = or i32 %or753, %shr756, !dbg !13610
  br label %cond.end761, !dbg !13610

cond.false758:                                    ; preds = %cond.end732
  %498 = load i8*, i8** %in, align 8, !dbg !13610
  %499 = bitcast i8* %498 to i32*, !dbg !13610
  %add.ptr759 = getelementptr i32, i32* %499, i64 2, !dbg !13610
  %500 = load i32, i32* %add.ptr759, align 4, !dbg !13610
  %call760 = call i32 @__fswab32(i32 %500) #8, !dbg !13610
  br label %cond.end761, !dbg !13610

cond.end761:                                      ; preds = %cond.false758, %cond.true742
  %cond762 = phi i32 [ %or757, %cond.true742 ], [ %call760, %cond.false758 ], !dbg !13610
  %and763 = and i32 %cond762, -983041, !dbg !13610
  %501 = load i32, i32* %_v624, align 4, !dbg !13610
  %and764 = and i32 %501, 15, !dbg !13610
  %shl765 = shl i32 %and764, 16, !dbg !13610
  %or766 = or i32 %and763, %shl765, !dbg !13610
  %and767 = and i32 %or766, -16777216, !dbg !13610
  %shr768 = lshr i32 %and767, 24, !dbg !13610
  %or769 = or i32 %or740, %shr768, !dbg !13610
  br label %cond.end798, !dbg !13610

cond.false770:                                    ; preds = %cond.end648
  %502 = load i8*, i8** %in, align 8, !dbg !13610
  %503 = bitcast i8* %502 to i32*, !dbg !13610
  %add.ptr771 = getelementptr i32, i32* %503, i64 2, !dbg !13610
  %504 = load i32, i32* %add.ptr771, align 4, !dbg !13610
  %505 = call i1 @llvm.is.constant.i32(i32 %504), !dbg !13610
  br i1 %505, label %cond.true772, label %cond.false788, !dbg !13610

cond.true772:                                     ; preds = %cond.false770
  %506 = load i8*, i8** %in, align 8, !dbg !13610
  %507 = bitcast i8* %506 to i32*, !dbg !13610
  %add.ptr773 = getelementptr i32, i32* %507, i64 2, !dbg !13610
  %508 = load i32, i32* %add.ptr773, align 4, !dbg !13610
  %and774 = and i32 %508, 255, !dbg !13610
  %shl775 = shl i32 %and774, 24, !dbg !13610
  %509 = load i8*, i8** %in, align 8, !dbg !13610
  %510 = bitcast i8* %509 to i32*, !dbg !13610
  %add.ptr776 = getelementptr i32, i32* %510, i64 2, !dbg !13610
  %511 = load i32, i32* %add.ptr776, align 4, !dbg !13610
  %and777 = and i32 %511, 65280, !dbg !13610
  %shl778 = shl i32 %and777, 8, !dbg !13610
  %or779 = or i32 %shl775, %shl778, !dbg !13610
  %512 = load i8*, i8** %in, align 8, !dbg !13610
  %513 = bitcast i8* %512 to i32*, !dbg !13610
  %add.ptr780 = getelementptr i32, i32* %513, i64 2, !dbg !13610
  %514 = load i32, i32* %add.ptr780, align 4, !dbg !13610
  %and781 = and i32 %514, 16711680, !dbg !13610
  %shr782 = lshr i32 %and781, 8, !dbg !13610
  %or783 = or i32 %or779, %shr782, !dbg !13610
  %515 = load i8*, i8** %in, align 8, !dbg !13610
  %516 = bitcast i8* %515 to i32*, !dbg !13610
  %add.ptr784 = getelementptr i32, i32* %516, i64 2, !dbg !13610
  %517 = load i32, i32* %add.ptr784, align 4, !dbg !13610
  %and785 = and i32 %517, -16777216, !dbg !13610
  %shr786 = lshr i32 %and785, 24, !dbg !13610
  %or787 = or i32 %or783, %shr786, !dbg !13610
  br label %cond.end791, !dbg !13610

cond.false788:                                    ; preds = %cond.false770
  %518 = load i8*, i8** %in, align 8, !dbg !13610
  %519 = bitcast i8* %518 to i32*, !dbg !13610
  %add.ptr789 = getelementptr i32, i32* %519, i64 2, !dbg !13610
  %520 = load i32, i32* %add.ptr789, align 4, !dbg !13610
  %call790 = call i32 @__fswab32(i32 %520) #8, !dbg !13610
  br label %cond.end791, !dbg !13610

cond.end791:                                      ; preds = %cond.false788, %cond.true772
  %cond792 = phi i32 [ %or787, %cond.true772 ], [ %call790, %cond.false788 ], !dbg !13610
  %and793 = and i32 %cond792, -983041, !dbg !13610
  %521 = load i32, i32* %_v624, align 4, !dbg !13610
  %and794 = and i32 %521, 15, !dbg !13610
  %shl795 = shl i32 %and794, 16, !dbg !13610
  %or796 = or i32 %and793, %shl795, !dbg !13610
  %call797 = call i32 @__fswab32(i32 %or796) #8, !dbg !13610
  br label %cond.end798, !dbg !13610

cond.end798:                                      ; preds = %cond.end791, %cond.end761
  %cond799 = phi i32 [ %or769, %cond.end761 ], [ %call797, %cond.end791 ], !dbg !13610
  %522 = load i8*, i8** %in, align 8, !dbg !13610
  %523 = bitcast i8* %522 to i32*, !dbg !13610
  %add.ptr800 = getelementptr i32, i32* %523, i64 2, !dbg !13610
  store i32 %cond799, i32* %add.ptr800, align 4, !dbg !13610
  br label %do.end801, !dbg !13610

do.end801:                                        ; preds = %cond.end798
  br label %if.end802, !dbg !13610

if.end802:                                        ; preds = %do.end801, %cond.end617
  %524 = load i8*, i8** %in, align 8, !dbg !13613
  %add.ptr803 = getelementptr i8, i8* %524, i64 16, !dbg !13613
  store i8* %add.ptr803, i8** %ctx, align 8, !dbg !13614
  br label %do.body804, !dbg !13615

do.body804:                                       ; preds = %if.end802
  call void @llvm.dbg.declare(metadata i32* %_v805, metadata !13616, metadata !DIExpression()), !dbg !13618
  %525 = load %struct.mlx5_hca_vport_context*, %struct.mlx5_hca_vport_context** %req.addr, align 8, !dbg !13618
  %field_select = getelementptr inbounds %struct.mlx5_hca_vport_context, %struct.mlx5_hca_vport_context* %525, i32 0, i32 0, !dbg !13618
  %526 = load i32, i32* %field_select, align 8, !dbg !13618
  store i32 %526, i32* %_v805, align 4, !dbg !13618
  br label %do.body806, !dbg !13618

do.body806:                                       ; preds = %do.body804
  br label %do.end807, !dbg !13619

do.end807:                                        ; preds = %do.body806
  %527 = load i8*, i8** %ctx, align 8, !dbg !13618
  %528 = bitcast i8* %527 to i32*, !dbg !13618
  %add.ptr808 = getelementptr i32, i32* %528, i64 0, !dbg !13618
  %529 = load i32, i32* %add.ptr808, align 4, !dbg !13618
  %530 = call i1 @llvm.is.constant.i32(i32 %529), !dbg !13618
  br i1 %530, label %cond.true809, label %cond.false825, !dbg !13618

cond.true809:                                     ; preds = %do.end807
  %531 = load i8*, i8** %ctx, align 8, !dbg !13618
  %532 = bitcast i8* %531 to i32*, !dbg !13618
  %add.ptr810 = getelementptr i32, i32* %532, i64 0, !dbg !13618
  %533 = load i32, i32* %add.ptr810, align 4, !dbg !13618
  %and811 = and i32 %533, 255, !dbg !13618
  %shl812 = shl i32 %and811, 24, !dbg !13618
  %534 = load i8*, i8** %ctx, align 8, !dbg !13618
  %535 = bitcast i8* %534 to i32*, !dbg !13618
  %add.ptr813 = getelementptr i32, i32* %535, i64 0, !dbg !13618
  %536 = load i32, i32* %add.ptr813, align 4, !dbg !13618
  %and814 = and i32 %536, 65280, !dbg !13618
  %shl815 = shl i32 %and814, 8, !dbg !13618
  %or816 = or i32 %shl812, %shl815, !dbg !13618
  %537 = load i8*, i8** %ctx, align 8, !dbg !13618
  %538 = bitcast i8* %537 to i32*, !dbg !13618
  %add.ptr817 = getelementptr i32, i32* %538, i64 0, !dbg !13618
  %539 = load i32, i32* %add.ptr817, align 4, !dbg !13618
  %and818 = and i32 %539, 16711680, !dbg !13618
  %shr819 = lshr i32 %and818, 8, !dbg !13618
  %or820 = or i32 %or816, %shr819, !dbg !13618
  %540 = load i8*, i8** %ctx, align 8, !dbg !13618
  %541 = bitcast i8* %540 to i32*, !dbg !13618
  %add.ptr821 = getelementptr i32, i32* %541, i64 0, !dbg !13618
  %542 = load i32, i32* %add.ptr821, align 4, !dbg !13618
  %and822 = and i32 %542, -16777216, !dbg !13618
  %shr823 = lshr i32 %and822, 24, !dbg !13618
  %or824 = or i32 %or820, %shr823, !dbg !13618
  br label %cond.end828, !dbg !13618

cond.false825:                                    ; preds = %do.end807
  %543 = load i8*, i8** %ctx, align 8, !dbg !13618
  %544 = bitcast i8* %543 to i32*, !dbg !13618
  %add.ptr826 = getelementptr i32, i32* %544, i64 0, !dbg !13618
  %545 = load i32, i32* %add.ptr826, align 4, !dbg !13618
  %call827 = call i32 @__fswab32(i32 %545) #8, !dbg !13618
  br label %cond.end828, !dbg !13618

cond.end828:                                      ; preds = %cond.false825, %cond.true809
  %cond829 = phi i32 [ %or824, %cond.true809 ], [ %call827, %cond.false825 ], !dbg !13618
  %and830 = and i32 %cond829, 0, !dbg !13618
  %546 = load i32, i32* %_v805, align 4, !dbg !13618
  %shl831 = shl i32 %546, 0, !dbg !13618
  %or832 = or i32 %and830, %shl831, !dbg !13618
  %547 = call i1 @llvm.is.constant.i32(i32 %or832), !dbg !13618
  br i1 %547, label %cond.true833, label %cond.false945, !dbg !13618

cond.true833:                                     ; preds = %cond.end828
  %548 = load i8*, i8** %ctx, align 8, !dbg !13618
  %549 = bitcast i8* %548 to i32*, !dbg !13618
  %add.ptr834 = getelementptr i32, i32* %549, i64 0, !dbg !13618
  %550 = load i32, i32* %add.ptr834, align 4, !dbg !13618
  %551 = call i1 @llvm.is.constant.i32(i32 %550), !dbg !13618
  br i1 %551, label %cond.true835, label %cond.false851, !dbg !13618

cond.true835:                                     ; preds = %cond.true833
  %552 = load i8*, i8** %ctx, align 8, !dbg !13618
  %553 = bitcast i8* %552 to i32*, !dbg !13618
  %add.ptr836 = getelementptr i32, i32* %553, i64 0, !dbg !13618
  %554 = load i32, i32* %add.ptr836, align 4, !dbg !13618
  %and837 = and i32 %554, 255, !dbg !13618
  %shl838 = shl i32 %and837, 24, !dbg !13618
  %555 = load i8*, i8** %ctx, align 8, !dbg !13618
  %556 = bitcast i8* %555 to i32*, !dbg !13618
  %add.ptr839 = getelementptr i32, i32* %556, i64 0, !dbg !13618
  %557 = load i32, i32* %add.ptr839, align 4, !dbg !13618
  %and840 = and i32 %557, 65280, !dbg !13618
  %shl841 = shl i32 %and840, 8, !dbg !13618
  %or842 = or i32 %shl838, %shl841, !dbg !13618
  %558 = load i8*, i8** %ctx, align 8, !dbg !13618
  %559 = bitcast i8* %558 to i32*, !dbg !13618
  %add.ptr843 = getelementptr i32, i32* %559, i64 0, !dbg !13618
  %560 = load i32, i32* %add.ptr843, align 4, !dbg !13618
  %and844 = and i32 %560, 16711680, !dbg !13618
  %shr845 = lshr i32 %and844, 8, !dbg !13618
  %or846 = or i32 %or842, %shr845, !dbg !13618
  %561 = load i8*, i8** %ctx, align 8, !dbg !13618
  %562 = bitcast i8* %561 to i32*, !dbg !13618
  %add.ptr847 = getelementptr i32, i32* %562, i64 0, !dbg !13618
  %563 = load i32, i32* %add.ptr847, align 4, !dbg !13618
  %and848 = and i32 %563, -16777216, !dbg !13618
  %shr849 = lshr i32 %and848, 24, !dbg !13618
  %or850 = or i32 %or846, %shr849, !dbg !13618
  br label %cond.end854, !dbg !13618

cond.false851:                                    ; preds = %cond.true833
  %564 = load i8*, i8** %ctx, align 8, !dbg !13618
  %565 = bitcast i8* %564 to i32*, !dbg !13618
  %add.ptr852 = getelementptr i32, i32* %565, i64 0, !dbg !13618
  %566 = load i32, i32* %add.ptr852, align 4, !dbg !13618
  %call853 = call i32 @__fswab32(i32 %566) #8, !dbg !13618
  br label %cond.end854, !dbg !13618

cond.end854:                                      ; preds = %cond.false851, %cond.true835
  %cond855 = phi i32 [ %or850, %cond.true835 ], [ %call853, %cond.false851 ], !dbg !13618
  %and856 = and i32 %cond855, 0, !dbg !13618
  %567 = load i32, i32* %_v805, align 4, !dbg !13618
  %shl857 = shl i32 %567, 0, !dbg !13618
  %or858 = or i32 %and856, %shl857, !dbg !13618
  %and859 = and i32 %or858, 255, !dbg !13618
  %shl860 = shl i32 %and859, 24, !dbg !13618
  %568 = load i8*, i8** %ctx, align 8, !dbg !13618
  %569 = bitcast i8* %568 to i32*, !dbg !13618
  %add.ptr861 = getelementptr i32, i32* %569, i64 0, !dbg !13618
  %570 = load i32, i32* %add.ptr861, align 4, !dbg !13618
  %571 = call i1 @llvm.is.constant.i32(i32 %570), !dbg !13618
  br i1 %571, label %cond.true862, label %cond.false878, !dbg !13618

cond.true862:                                     ; preds = %cond.end854
  %572 = load i8*, i8** %ctx, align 8, !dbg !13618
  %573 = bitcast i8* %572 to i32*, !dbg !13618
  %add.ptr863 = getelementptr i32, i32* %573, i64 0, !dbg !13618
  %574 = load i32, i32* %add.ptr863, align 4, !dbg !13618
  %and864 = and i32 %574, 255, !dbg !13618
  %shl865 = shl i32 %and864, 24, !dbg !13618
  %575 = load i8*, i8** %ctx, align 8, !dbg !13618
  %576 = bitcast i8* %575 to i32*, !dbg !13618
  %add.ptr866 = getelementptr i32, i32* %576, i64 0, !dbg !13618
  %577 = load i32, i32* %add.ptr866, align 4, !dbg !13618
  %and867 = and i32 %577, 65280, !dbg !13618
  %shl868 = shl i32 %and867, 8, !dbg !13618
  %or869 = or i32 %shl865, %shl868, !dbg !13618
  %578 = load i8*, i8** %ctx, align 8, !dbg !13618
  %579 = bitcast i8* %578 to i32*, !dbg !13618
  %add.ptr870 = getelementptr i32, i32* %579, i64 0, !dbg !13618
  %580 = load i32, i32* %add.ptr870, align 4, !dbg !13618
  %and871 = and i32 %580, 16711680, !dbg !13618
  %shr872 = lshr i32 %and871, 8, !dbg !13618
  %or873 = or i32 %or869, %shr872, !dbg !13618
  %581 = load i8*, i8** %ctx, align 8, !dbg !13618
  %582 = bitcast i8* %581 to i32*, !dbg !13618
  %add.ptr874 = getelementptr i32, i32* %582, i64 0, !dbg !13618
  %583 = load i32, i32* %add.ptr874, align 4, !dbg !13618
  %and875 = and i32 %583, -16777216, !dbg !13618
  %shr876 = lshr i32 %and875, 24, !dbg !13618
  %or877 = or i32 %or873, %shr876, !dbg !13618
  br label %cond.end881, !dbg !13618

cond.false878:                                    ; preds = %cond.end854
  %584 = load i8*, i8** %ctx, align 8, !dbg !13618
  %585 = bitcast i8* %584 to i32*, !dbg !13618
  %add.ptr879 = getelementptr i32, i32* %585, i64 0, !dbg !13618
  %586 = load i32, i32* %add.ptr879, align 4, !dbg !13618
  %call880 = call i32 @__fswab32(i32 %586) #8, !dbg !13618
  br label %cond.end881, !dbg !13618

cond.end881:                                      ; preds = %cond.false878, %cond.true862
  %cond882 = phi i32 [ %or877, %cond.true862 ], [ %call880, %cond.false878 ], !dbg !13618
  %and883 = and i32 %cond882, 0, !dbg !13618
  %587 = load i32, i32* %_v805, align 4, !dbg !13618
  %shl884 = shl i32 %587, 0, !dbg !13618
  %or885 = or i32 %and883, %shl884, !dbg !13618
  %and886 = and i32 %or885, 65280, !dbg !13618
  %shl887 = shl i32 %and886, 8, !dbg !13618
  %or888 = or i32 %shl860, %shl887, !dbg !13618
  %588 = load i8*, i8** %ctx, align 8, !dbg !13618
  %589 = bitcast i8* %588 to i32*, !dbg !13618
  %add.ptr889 = getelementptr i32, i32* %589, i64 0, !dbg !13618
  %590 = load i32, i32* %add.ptr889, align 4, !dbg !13618
  %591 = call i1 @llvm.is.constant.i32(i32 %590), !dbg !13618
  br i1 %591, label %cond.true890, label %cond.false906, !dbg !13618

cond.true890:                                     ; preds = %cond.end881
  %592 = load i8*, i8** %ctx, align 8, !dbg !13618
  %593 = bitcast i8* %592 to i32*, !dbg !13618
  %add.ptr891 = getelementptr i32, i32* %593, i64 0, !dbg !13618
  %594 = load i32, i32* %add.ptr891, align 4, !dbg !13618
  %and892 = and i32 %594, 255, !dbg !13618
  %shl893 = shl i32 %and892, 24, !dbg !13618
  %595 = load i8*, i8** %ctx, align 8, !dbg !13618
  %596 = bitcast i8* %595 to i32*, !dbg !13618
  %add.ptr894 = getelementptr i32, i32* %596, i64 0, !dbg !13618
  %597 = load i32, i32* %add.ptr894, align 4, !dbg !13618
  %and895 = and i32 %597, 65280, !dbg !13618
  %shl896 = shl i32 %and895, 8, !dbg !13618
  %or897 = or i32 %shl893, %shl896, !dbg !13618
  %598 = load i8*, i8** %ctx, align 8, !dbg !13618
  %599 = bitcast i8* %598 to i32*, !dbg !13618
  %add.ptr898 = getelementptr i32, i32* %599, i64 0, !dbg !13618
  %600 = load i32, i32* %add.ptr898, align 4, !dbg !13618
  %and899 = and i32 %600, 16711680, !dbg !13618
  %shr900 = lshr i32 %and899, 8, !dbg !13618
  %or901 = or i32 %or897, %shr900, !dbg !13618
  %601 = load i8*, i8** %ctx, align 8, !dbg !13618
  %602 = bitcast i8* %601 to i32*, !dbg !13618
  %add.ptr902 = getelementptr i32, i32* %602, i64 0, !dbg !13618
  %603 = load i32, i32* %add.ptr902, align 4, !dbg !13618
  %and903 = and i32 %603, -16777216, !dbg !13618
  %shr904 = lshr i32 %and903, 24, !dbg !13618
  %or905 = or i32 %or901, %shr904, !dbg !13618
  br label %cond.end909, !dbg !13618

cond.false906:                                    ; preds = %cond.end881
  %604 = load i8*, i8** %ctx, align 8, !dbg !13618
  %605 = bitcast i8* %604 to i32*, !dbg !13618
  %add.ptr907 = getelementptr i32, i32* %605, i64 0, !dbg !13618
  %606 = load i32, i32* %add.ptr907, align 4, !dbg !13618
  %call908 = call i32 @__fswab32(i32 %606) #8, !dbg !13618
  br label %cond.end909, !dbg !13618

cond.end909:                                      ; preds = %cond.false906, %cond.true890
  %cond910 = phi i32 [ %or905, %cond.true890 ], [ %call908, %cond.false906 ], !dbg !13618
  %and911 = and i32 %cond910, 0, !dbg !13618
  %607 = load i32, i32* %_v805, align 4, !dbg !13618
  %shl912 = shl i32 %607, 0, !dbg !13618
  %or913 = or i32 %and911, %shl912, !dbg !13618
  %and914 = and i32 %or913, 16711680, !dbg !13618
  %shr915 = lshr i32 %and914, 8, !dbg !13618
  %or916 = or i32 %or888, %shr915, !dbg !13618
  %608 = load i8*, i8** %ctx, align 8, !dbg !13618
  %609 = bitcast i8* %608 to i32*, !dbg !13618
  %add.ptr917 = getelementptr i32, i32* %609, i64 0, !dbg !13618
  %610 = load i32, i32* %add.ptr917, align 4, !dbg !13618
  %611 = call i1 @llvm.is.constant.i32(i32 %610), !dbg !13618
  br i1 %611, label %cond.true918, label %cond.false934, !dbg !13618

cond.true918:                                     ; preds = %cond.end909
  %612 = load i8*, i8** %ctx, align 8, !dbg !13618
  %613 = bitcast i8* %612 to i32*, !dbg !13618
  %add.ptr919 = getelementptr i32, i32* %613, i64 0, !dbg !13618
  %614 = load i32, i32* %add.ptr919, align 4, !dbg !13618
  %and920 = and i32 %614, 255, !dbg !13618
  %shl921 = shl i32 %and920, 24, !dbg !13618
  %615 = load i8*, i8** %ctx, align 8, !dbg !13618
  %616 = bitcast i8* %615 to i32*, !dbg !13618
  %add.ptr922 = getelementptr i32, i32* %616, i64 0, !dbg !13618
  %617 = load i32, i32* %add.ptr922, align 4, !dbg !13618
  %and923 = and i32 %617, 65280, !dbg !13618
  %shl924 = shl i32 %and923, 8, !dbg !13618
  %or925 = or i32 %shl921, %shl924, !dbg !13618
  %618 = load i8*, i8** %ctx, align 8, !dbg !13618
  %619 = bitcast i8* %618 to i32*, !dbg !13618
  %add.ptr926 = getelementptr i32, i32* %619, i64 0, !dbg !13618
  %620 = load i32, i32* %add.ptr926, align 4, !dbg !13618
  %and927 = and i32 %620, 16711680, !dbg !13618
  %shr928 = lshr i32 %and927, 8, !dbg !13618
  %or929 = or i32 %or925, %shr928, !dbg !13618
  %621 = load i8*, i8** %ctx, align 8, !dbg !13618
  %622 = bitcast i8* %621 to i32*, !dbg !13618
  %add.ptr930 = getelementptr i32, i32* %622, i64 0, !dbg !13618
  %623 = load i32, i32* %add.ptr930, align 4, !dbg !13618
  %and931 = and i32 %623, -16777216, !dbg !13618
  %shr932 = lshr i32 %and931, 24, !dbg !13618
  %or933 = or i32 %or929, %shr932, !dbg !13618
  br label %cond.end937, !dbg !13618

cond.false934:                                    ; preds = %cond.end909
  %624 = load i8*, i8** %ctx, align 8, !dbg !13618
  %625 = bitcast i8* %624 to i32*, !dbg !13618
  %add.ptr935 = getelementptr i32, i32* %625, i64 0, !dbg !13618
  %626 = load i32, i32* %add.ptr935, align 4, !dbg !13618
  %call936 = call i32 @__fswab32(i32 %626) #8, !dbg !13618
  br label %cond.end937, !dbg !13618

cond.end937:                                      ; preds = %cond.false934, %cond.true918
  %cond938 = phi i32 [ %or933, %cond.true918 ], [ %call936, %cond.false934 ], !dbg !13618
  %and939 = and i32 %cond938, 0, !dbg !13618
  %627 = load i32, i32* %_v805, align 4, !dbg !13618
  %shl940 = shl i32 %627, 0, !dbg !13618
  %or941 = or i32 %and939, %shl940, !dbg !13618
  %and942 = and i32 %or941, -16777216, !dbg !13618
  %shr943 = lshr i32 %and942, 24, !dbg !13618
  %or944 = or i32 %or916, %shr943, !dbg !13618
  br label %cond.end972, !dbg !13618

cond.false945:                                    ; preds = %cond.end828
  %628 = load i8*, i8** %ctx, align 8, !dbg !13618
  %629 = bitcast i8* %628 to i32*, !dbg !13618
  %add.ptr946 = getelementptr i32, i32* %629, i64 0, !dbg !13618
  %630 = load i32, i32* %add.ptr946, align 4, !dbg !13618
  %631 = call i1 @llvm.is.constant.i32(i32 %630), !dbg !13618
  br i1 %631, label %cond.true947, label %cond.false963, !dbg !13618

cond.true947:                                     ; preds = %cond.false945
  %632 = load i8*, i8** %ctx, align 8, !dbg !13618
  %633 = bitcast i8* %632 to i32*, !dbg !13618
  %add.ptr948 = getelementptr i32, i32* %633, i64 0, !dbg !13618
  %634 = load i32, i32* %add.ptr948, align 4, !dbg !13618
  %and949 = and i32 %634, 255, !dbg !13618
  %shl950 = shl i32 %and949, 24, !dbg !13618
  %635 = load i8*, i8** %ctx, align 8, !dbg !13618
  %636 = bitcast i8* %635 to i32*, !dbg !13618
  %add.ptr951 = getelementptr i32, i32* %636, i64 0, !dbg !13618
  %637 = load i32, i32* %add.ptr951, align 4, !dbg !13618
  %and952 = and i32 %637, 65280, !dbg !13618
  %shl953 = shl i32 %and952, 8, !dbg !13618
  %or954 = or i32 %shl950, %shl953, !dbg !13618
  %638 = load i8*, i8** %ctx, align 8, !dbg !13618
  %639 = bitcast i8* %638 to i32*, !dbg !13618
  %add.ptr955 = getelementptr i32, i32* %639, i64 0, !dbg !13618
  %640 = load i32, i32* %add.ptr955, align 4, !dbg !13618
  %and956 = and i32 %640, 16711680, !dbg !13618
  %shr957 = lshr i32 %and956, 8, !dbg !13618
  %or958 = or i32 %or954, %shr957, !dbg !13618
  %641 = load i8*, i8** %ctx, align 8, !dbg !13618
  %642 = bitcast i8* %641 to i32*, !dbg !13618
  %add.ptr959 = getelementptr i32, i32* %642, i64 0, !dbg !13618
  %643 = load i32, i32* %add.ptr959, align 4, !dbg !13618
  %and960 = and i32 %643, -16777216, !dbg !13618
  %shr961 = lshr i32 %and960, 24, !dbg !13618
  %or962 = or i32 %or958, %shr961, !dbg !13618
  br label %cond.end966, !dbg !13618

cond.false963:                                    ; preds = %cond.false945
  %644 = load i8*, i8** %ctx, align 8, !dbg !13618
  %645 = bitcast i8* %644 to i32*, !dbg !13618
  %add.ptr964 = getelementptr i32, i32* %645, i64 0, !dbg !13618
  %646 = load i32, i32* %add.ptr964, align 4, !dbg !13618
  %call965 = call i32 @__fswab32(i32 %646) #8, !dbg !13618
  br label %cond.end966, !dbg !13618

cond.end966:                                      ; preds = %cond.false963, %cond.true947
  %cond967 = phi i32 [ %or962, %cond.true947 ], [ %call965, %cond.false963 ], !dbg !13618
  %and968 = and i32 %cond967, 0, !dbg !13618
  %647 = load i32, i32* %_v805, align 4, !dbg !13618
  %shl969 = shl i32 %647, 0, !dbg !13618
  %or970 = or i32 %and968, %shl969, !dbg !13618
  %call971 = call i32 @__fswab32(i32 %or970) #8, !dbg !13618
  br label %cond.end972, !dbg !13618

cond.end972:                                      ; preds = %cond.end966, %cond.end937
  %cond973 = phi i32 [ %or944, %cond.end937 ], [ %call971, %cond.end966 ], !dbg !13618
  %648 = load i8*, i8** %ctx, align 8, !dbg !13618
  %649 = bitcast i8* %648 to i32*, !dbg !13618
  %add.ptr974 = getelementptr i32, i32* %649, i64 0, !dbg !13618
  store i32 %cond973, i32* %add.ptr974, align 4, !dbg !13618
  br label %do.end975, !dbg !13618

do.end975:                                        ; preds = %cond.end972
  %650 = load %struct.mlx5_hca_vport_context*, %struct.mlx5_hca_vport_context** %req.addr, align 8, !dbg !13621
  %field_select976 = getelementptr inbounds %struct.mlx5_hca_vport_context, %struct.mlx5_hca_vport_context* %650, i32 0, i32 0, !dbg !13623
  %651 = load i32, i32* %field_select976, align 8, !dbg !13623
  %and977 = and i32 %651, 4, !dbg !13624
  %tobool978 = icmp ne i32 %and977, 0, !dbg !13624
  br i1 %tobool978, label %if.then979, label %if.end1158, !dbg !13625

if.then979:                                       ; preds = %do.end975
  br label %do.body980, !dbg !13626

do.body980:                                       ; preds = %if.then979
  call void @llvm.dbg.declare(metadata i32* %_v981, metadata !13627, metadata !DIExpression()), !dbg !13629
  %652 = load %struct.mlx5_hca_vport_context*, %struct.mlx5_hca_vport_context** %req.addr, align 8, !dbg !13629
  %policy = getelementptr inbounds %struct.mlx5_hca_vport_context, %struct.mlx5_hca_vport_context* %652, i32 0, i32 4, !dbg !13629
  %653 = load i32, i32* %policy, align 8, !dbg !13629
  store i32 %653, i32* %_v981, align 4, !dbg !13629
  br label %do.body982, !dbg !13629

do.body982:                                       ; preds = %do.body980
  br label %do.end983, !dbg !13630

do.end983:                                        ; preds = %do.body982
  %654 = load i8*, i8** %ctx, align 8, !dbg !13629
  %655 = bitcast i8* %654 to i32*, !dbg !13629
  %add.ptr984 = getelementptr i32, i32* %655, i64 8, !dbg !13629
  %656 = load i32, i32* %add.ptr984, align 4, !dbg !13629
  %657 = call i1 @llvm.is.constant.i32(i32 %656), !dbg !13629
  br i1 %657, label %cond.true985, label %cond.false1001, !dbg !13629

cond.true985:                                     ; preds = %do.end983
  %658 = load i8*, i8** %ctx, align 8, !dbg !13629
  %659 = bitcast i8* %658 to i32*, !dbg !13629
  %add.ptr986 = getelementptr i32, i32* %659, i64 8, !dbg !13629
  %660 = load i32, i32* %add.ptr986, align 4, !dbg !13629
  %and987 = and i32 %660, 255, !dbg !13629
  %shl988 = shl i32 %and987, 24, !dbg !13629
  %661 = load i8*, i8** %ctx, align 8, !dbg !13629
  %662 = bitcast i8* %661 to i32*, !dbg !13629
  %add.ptr989 = getelementptr i32, i32* %662, i64 8, !dbg !13629
  %663 = load i32, i32* %add.ptr989, align 4, !dbg !13629
  %and990 = and i32 %663, 65280, !dbg !13629
  %shl991 = shl i32 %and990, 8, !dbg !13629
  %or992 = or i32 %shl988, %shl991, !dbg !13629
  %664 = load i8*, i8** %ctx, align 8, !dbg !13629
  %665 = bitcast i8* %664 to i32*, !dbg !13629
  %add.ptr993 = getelementptr i32, i32* %665, i64 8, !dbg !13629
  %666 = load i32, i32* %add.ptr993, align 4, !dbg !13629
  %and994 = and i32 %666, 16711680, !dbg !13629
  %shr995 = lshr i32 %and994, 8, !dbg !13629
  %or996 = or i32 %or992, %shr995, !dbg !13629
  %667 = load i8*, i8** %ctx, align 8, !dbg !13629
  %668 = bitcast i8* %667 to i32*, !dbg !13629
  %add.ptr997 = getelementptr i32, i32* %668, i64 8, !dbg !13629
  %669 = load i32, i32* %add.ptr997, align 4, !dbg !13629
  %and998 = and i32 %669, -16777216, !dbg !13629
  %shr999 = lshr i32 %and998, 24, !dbg !13629
  %or1000 = or i32 %or996, %shr999, !dbg !13629
  br label %cond.end1004, !dbg !13629

cond.false1001:                                   ; preds = %do.end983
  %670 = load i8*, i8** %ctx, align 8, !dbg !13629
  %671 = bitcast i8* %670 to i32*, !dbg !13629
  %add.ptr1002 = getelementptr i32, i32* %671, i64 8, !dbg !13629
  %672 = load i32, i32* %add.ptr1002, align 4, !dbg !13629
  %call1003 = call i32 @__fswab32(i32 %672) #8, !dbg !13629
  br label %cond.end1004, !dbg !13629

cond.end1004:                                     ; preds = %cond.false1001, %cond.true985
  %cond1005 = phi i32 [ %or1000, %cond.true985 ], [ %call1003, %cond.false1001 ], !dbg !13629
  %and1006 = and i32 %cond1005, -3841, !dbg !13629
  %673 = load i32, i32* %_v981, align 4, !dbg !13629
  %and1007 = and i32 %673, 15, !dbg !13629
  %shl1008 = shl i32 %and1007, 8, !dbg !13629
  %or1009 = or i32 %and1006, %shl1008, !dbg !13629
  %674 = call i1 @llvm.is.constant.i32(i32 %or1009), !dbg !13629
  br i1 %674, label %cond.true1010, label %cond.false1126, !dbg !13629

cond.true1010:                                    ; preds = %cond.end1004
  %675 = load i8*, i8** %ctx, align 8, !dbg !13629
  %676 = bitcast i8* %675 to i32*, !dbg !13629
  %add.ptr1011 = getelementptr i32, i32* %676, i64 8, !dbg !13629
  %677 = load i32, i32* %add.ptr1011, align 4, !dbg !13629
  %678 = call i1 @llvm.is.constant.i32(i32 %677), !dbg !13629
  br i1 %678, label %cond.true1012, label %cond.false1028, !dbg !13629

cond.true1012:                                    ; preds = %cond.true1010
  %679 = load i8*, i8** %ctx, align 8, !dbg !13629
  %680 = bitcast i8* %679 to i32*, !dbg !13629
  %add.ptr1013 = getelementptr i32, i32* %680, i64 8, !dbg !13629
  %681 = load i32, i32* %add.ptr1013, align 4, !dbg !13629
  %and1014 = and i32 %681, 255, !dbg !13629
  %shl1015 = shl i32 %and1014, 24, !dbg !13629
  %682 = load i8*, i8** %ctx, align 8, !dbg !13629
  %683 = bitcast i8* %682 to i32*, !dbg !13629
  %add.ptr1016 = getelementptr i32, i32* %683, i64 8, !dbg !13629
  %684 = load i32, i32* %add.ptr1016, align 4, !dbg !13629
  %and1017 = and i32 %684, 65280, !dbg !13629
  %shl1018 = shl i32 %and1017, 8, !dbg !13629
  %or1019 = or i32 %shl1015, %shl1018, !dbg !13629
  %685 = load i8*, i8** %ctx, align 8, !dbg !13629
  %686 = bitcast i8* %685 to i32*, !dbg !13629
  %add.ptr1020 = getelementptr i32, i32* %686, i64 8, !dbg !13629
  %687 = load i32, i32* %add.ptr1020, align 4, !dbg !13629
  %and1021 = and i32 %687, 16711680, !dbg !13629
  %shr1022 = lshr i32 %and1021, 8, !dbg !13629
  %or1023 = or i32 %or1019, %shr1022, !dbg !13629
  %688 = load i8*, i8** %ctx, align 8, !dbg !13629
  %689 = bitcast i8* %688 to i32*, !dbg !13629
  %add.ptr1024 = getelementptr i32, i32* %689, i64 8, !dbg !13629
  %690 = load i32, i32* %add.ptr1024, align 4, !dbg !13629
  %and1025 = and i32 %690, -16777216, !dbg !13629
  %shr1026 = lshr i32 %and1025, 24, !dbg !13629
  %or1027 = or i32 %or1023, %shr1026, !dbg !13629
  br label %cond.end1031, !dbg !13629

cond.false1028:                                   ; preds = %cond.true1010
  %691 = load i8*, i8** %ctx, align 8, !dbg !13629
  %692 = bitcast i8* %691 to i32*, !dbg !13629
  %add.ptr1029 = getelementptr i32, i32* %692, i64 8, !dbg !13629
  %693 = load i32, i32* %add.ptr1029, align 4, !dbg !13629
  %call1030 = call i32 @__fswab32(i32 %693) #8, !dbg !13629
  br label %cond.end1031, !dbg !13629

cond.end1031:                                     ; preds = %cond.false1028, %cond.true1012
  %cond1032 = phi i32 [ %or1027, %cond.true1012 ], [ %call1030, %cond.false1028 ], !dbg !13629
  %and1033 = and i32 %cond1032, -3841, !dbg !13629
  %694 = load i32, i32* %_v981, align 4, !dbg !13629
  %and1034 = and i32 %694, 15, !dbg !13629
  %shl1035 = shl i32 %and1034, 8, !dbg !13629
  %or1036 = or i32 %and1033, %shl1035, !dbg !13629
  %and1037 = and i32 %or1036, 255, !dbg !13629
  %shl1038 = shl i32 %and1037, 24, !dbg !13629
  %695 = load i8*, i8** %ctx, align 8, !dbg !13629
  %696 = bitcast i8* %695 to i32*, !dbg !13629
  %add.ptr1039 = getelementptr i32, i32* %696, i64 8, !dbg !13629
  %697 = load i32, i32* %add.ptr1039, align 4, !dbg !13629
  %698 = call i1 @llvm.is.constant.i32(i32 %697), !dbg !13629
  br i1 %698, label %cond.true1040, label %cond.false1056, !dbg !13629

cond.true1040:                                    ; preds = %cond.end1031
  %699 = load i8*, i8** %ctx, align 8, !dbg !13629
  %700 = bitcast i8* %699 to i32*, !dbg !13629
  %add.ptr1041 = getelementptr i32, i32* %700, i64 8, !dbg !13629
  %701 = load i32, i32* %add.ptr1041, align 4, !dbg !13629
  %and1042 = and i32 %701, 255, !dbg !13629
  %shl1043 = shl i32 %and1042, 24, !dbg !13629
  %702 = load i8*, i8** %ctx, align 8, !dbg !13629
  %703 = bitcast i8* %702 to i32*, !dbg !13629
  %add.ptr1044 = getelementptr i32, i32* %703, i64 8, !dbg !13629
  %704 = load i32, i32* %add.ptr1044, align 4, !dbg !13629
  %and1045 = and i32 %704, 65280, !dbg !13629
  %shl1046 = shl i32 %and1045, 8, !dbg !13629
  %or1047 = or i32 %shl1043, %shl1046, !dbg !13629
  %705 = load i8*, i8** %ctx, align 8, !dbg !13629
  %706 = bitcast i8* %705 to i32*, !dbg !13629
  %add.ptr1048 = getelementptr i32, i32* %706, i64 8, !dbg !13629
  %707 = load i32, i32* %add.ptr1048, align 4, !dbg !13629
  %and1049 = and i32 %707, 16711680, !dbg !13629
  %shr1050 = lshr i32 %and1049, 8, !dbg !13629
  %or1051 = or i32 %or1047, %shr1050, !dbg !13629
  %708 = load i8*, i8** %ctx, align 8, !dbg !13629
  %709 = bitcast i8* %708 to i32*, !dbg !13629
  %add.ptr1052 = getelementptr i32, i32* %709, i64 8, !dbg !13629
  %710 = load i32, i32* %add.ptr1052, align 4, !dbg !13629
  %and1053 = and i32 %710, -16777216, !dbg !13629
  %shr1054 = lshr i32 %and1053, 24, !dbg !13629
  %or1055 = or i32 %or1051, %shr1054, !dbg !13629
  br label %cond.end1059, !dbg !13629

cond.false1056:                                   ; preds = %cond.end1031
  %711 = load i8*, i8** %ctx, align 8, !dbg !13629
  %712 = bitcast i8* %711 to i32*, !dbg !13629
  %add.ptr1057 = getelementptr i32, i32* %712, i64 8, !dbg !13629
  %713 = load i32, i32* %add.ptr1057, align 4, !dbg !13629
  %call1058 = call i32 @__fswab32(i32 %713) #8, !dbg !13629
  br label %cond.end1059, !dbg !13629

cond.end1059:                                     ; preds = %cond.false1056, %cond.true1040
  %cond1060 = phi i32 [ %or1055, %cond.true1040 ], [ %call1058, %cond.false1056 ], !dbg !13629
  %and1061 = and i32 %cond1060, -3841, !dbg !13629
  %714 = load i32, i32* %_v981, align 4, !dbg !13629
  %and1062 = and i32 %714, 15, !dbg !13629
  %shl1063 = shl i32 %and1062, 8, !dbg !13629
  %or1064 = or i32 %and1061, %shl1063, !dbg !13629
  %and1065 = and i32 %or1064, 65280, !dbg !13629
  %shl1066 = shl i32 %and1065, 8, !dbg !13629
  %or1067 = or i32 %shl1038, %shl1066, !dbg !13629
  %715 = load i8*, i8** %ctx, align 8, !dbg !13629
  %716 = bitcast i8* %715 to i32*, !dbg !13629
  %add.ptr1068 = getelementptr i32, i32* %716, i64 8, !dbg !13629
  %717 = load i32, i32* %add.ptr1068, align 4, !dbg !13629
  %718 = call i1 @llvm.is.constant.i32(i32 %717), !dbg !13629
  br i1 %718, label %cond.true1069, label %cond.false1085, !dbg !13629

cond.true1069:                                    ; preds = %cond.end1059
  %719 = load i8*, i8** %ctx, align 8, !dbg !13629
  %720 = bitcast i8* %719 to i32*, !dbg !13629
  %add.ptr1070 = getelementptr i32, i32* %720, i64 8, !dbg !13629
  %721 = load i32, i32* %add.ptr1070, align 4, !dbg !13629
  %and1071 = and i32 %721, 255, !dbg !13629
  %shl1072 = shl i32 %and1071, 24, !dbg !13629
  %722 = load i8*, i8** %ctx, align 8, !dbg !13629
  %723 = bitcast i8* %722 to i32*, !dbg !13629
  %add.ptr1073 = getelementptr i32, i32* %723, i64 8, !dbg !13629
  %724 = load i32, i32* %add.ptr1073, align 4, !dbg !13629
  %and1074 = and i32 %724, 65280, !dbg !13629
  %shl1075 = shl i32 %and1074, 8, !dbg !13629
  %or1076 = or i32 %shl1072, %shl1075, !dbg !13629
  %725 = load i8*, i8** %ctx, align 8, !dbg !13629
  %726 = bitcast i8* %725 to i32*, !dbg !13629
  %add.ptr1077 = getelementptr i32, i32* %726, i64 8, !dbg !13629
  %727 = load i32, i32* %add.ptr1077, align 4, !dbg !13629
  %and1078 = and i32 %727, 16711680, !dbg !13629
  %shr1079 = lshr i32 %and1078, 8, !dbg !13629
  %or1080 = or i32 %or1076, %shr1079, !dbg !13629
  %728 = load i8*, i8** %ctx, align 8, !dbg !13629
  %729 = bitcast i8* %728 to i32*, !dbg !13629
  %add.ptr1081 = getelementptr i32, i32* %729, i64 8, !dbg !13629
  %730 = load i32, i32* %add.ptr1081, align 4, !dbg !13629
  %and1082 = and i32 %730, -16777216, !dbg !13629
  %shr1083 = lshr i32 %and1082, 24, !dbg !13629
  %or1084 = or i32 %or1080, %shr1083, !dbg !13629
  br label %cond.end1088, !dbg !13629

cond.false1085:                                   ; preds = %cond.end1059
  %731 = load i8*, i8** %ctx, align 8, !dbg !13629
  %732 = bitcast i8* %731 to i32*, !dbg !13629
  %add.ptr1086 = getelementptr i32, i32* %732, i64 8, !dbg !13629
  %733 = load i32, i32* %add.ptr1086, align 4, !dbg !13629
  %call1087 = call i32 @__fswab32(i32 %733) #8, !dbg !13629
  br label %cond.end1088, !dbg !13629

cond.end1088:                                     ; preds = %cond.false1085, %cond.true1069
  %cond1089 = phi i32 [ %or1084, %cond.true1069 ], [ %call1087, %cond.false1085 ], !dbg !13629
  %and1090 = and i32 %cond1089, -3841, !dbg !13629
  %734 = load i32, i32* %_v981, align 4, !dbg !13629
  %and1091 = and i32 %734, 15, !dbg !13629
  %shl1092 = shl i32 %and1091, 8, !dbg !13629
  %or1093 = or i32 %and1090, %shl1092, !dbg !13629
  %and1094 = and i32 %or1093, 16711680, !dbg !13629
  %shr1095 = lshr i32 %and1094, 8, !dbg !13629
  %or1096 = or i32 %or1067, %shr1095, !dbg !13629
  %735 = load i8*, i8** %ctx, align 8, !dbg !13629
  %736 = bitcast i8* %735 to i32*, !dbg !13629
  %add.ptr1097 = getelementptr i32, i32* %736, i64 8, !dbg !13629
  %737 = load i32, i32* %add.ptr1097, align 4, !dbg !13629
  %738 = call i1 @llvm.is.constant.i32(i32 %737), !dbg !13629
  br i1 %738, label %cond.true1098, label %cond.false1114, !dbg !13629

cond.true1098:                                    ; preds = %cond.end1088
  %739 = load i8*, i8** %ctx, align 8, !dbg !13629
  %740 = bitcast i8* %739 to i32*, !dbg !13629
  %add.ptr1099 = getelementptr i32, i32* %740, i64 8, !dbg !13629
  %741 = load i32, i32* %add.ptr1099, align 4, !dbg !13629
  %and1100 = and i32 %741, 255, !dbg !13629
  %shl1101 = shl i32 %and1100, 24, !dbg !13629
  %742 = load i8*, i8** %ctx, align 8, !dbg !13629
  %743 = bitcast i8* %742 to i32*, !dbg !13629
  %add.ptr1102 = getelementptr i32, i32* %743, i64 8, !dbg !13629
  %744 = load i32, i32* %add.ptr1102, align 4, !dbg !13629
  %and1103 = and i32 %744, 65280, !dbg !13629
  %shl1104 = shl i32 %and1103, 8, !dbg !13629
  %or1105 = or i32 %shl1101, %shl1104, !dbg !13629
  %745 = load i8*, i8** %ctx, align 8, !dbg !13629
  %746 = bitcast i8* %745 to i32*, !dbg !13629
  %add.ptr1106 = getelementptr i32, i32* %746, i64 8, !dbg !13629
  %747 = load i32, i32* %add.ptr1106, align 4, !dbg !13629
  %and1107 = and i32 %747, 16711680, !dbg !13629
  %shr1108 = lshr i32 %and1107, 8, !dbg !13629
  %or1109 = or i32 %or1105, %shr1108, !dbg !13629
  %748 = load i8*, i8** %ctx, align 8, !dbg !13629
  %749 = bitcast i8* %748 to i32*, !dbg !13629
  %add.ptr1110 = getelementptr i32, i32* %749, i64 8, !dbg !13629
  %750 = load i32, i32* %add.ptr1110, align 4, !dbg !13629
  %and1111 = and i32 %750, -16777216, !dbg !13629
  %shr1112 = lshr i32 %and1111, 24, !dbg !13629
  %or1113 = or i32 %or1109, %shr1112, !dbg !13629
  br label %cond.end1117, !dbg !13629

cond.false1114:                                   ; preds = %cond.end1088
  %751 = load i8*, i8** %ctx, align 8, !dbg !13629
  %752 = bitcast i8* %751 to i32*, !dbg !13629
  %add.ptr1115 = getelementptr i32, i32* %752, i64 8, !dbg !13629
  %753 = load i32, i32* %add.ptr1115, align 4, !dbg !13629
  %call1116 = call i32 @__fswab32(i32 %753) #8, !dbg !13629
  br label %cond.end1117, !dbg !13629

cond.end1117:                                     ; preds = %cond.false1114, %cond.true1098
  %cond1118 = phi i32 [ %or1113, %cond.true1098 ], [ %call1116, %cond.false1114 ], !dbg !13629
  %and1119 = and i32 %cond1118, -3841, !dbg !13629
  %754 = load i32, i32* %_v981, align 4, !dbg !13629
  %and1120 = and i32 %754, 15, !dbg !13629
  %shl1121 = shl i32 %and1120, 8, !dbg !13629
  %or1122 = or i32 %and1119, %shl1121, !dbg !13629
  %and1123 = and i32 %or1122, -16777216, !dbg !13629
  %shr1124 = lshr i32 %and1123, 24, !dbg !13629
  %or1125 = or i32 %or1096, %shr1124, !dbg !13629
  br label %cond.end1154, !dbg !13629

cond.false1126:                                   ; preds = %cond.end1004
  %755 = load i8*, i8** %ctx, align 8, !dbg !13629
  %756 = bitcast i8* %755 to i32*, !dbg !13629
  %add.ptr1127 = getelementptr i32, i32* %756, i64 8, !dbg !13629
  %757 = load i32, i32* %add.ptr1127, align 4, !dbg !13629
  %758 = call i1 @llvm.is.constant.i32(i32 %757), !dbg !13629
  br i1 %758, label %cond.true1128, label %cond.false1144, !dbg !13629

cond.true1128:                                    ; preds = %cond.false1126
  %759 = load i8*, i8** %ctx, align 8, !dbg !13629
  %760 = bitcast i8* %759 to i32*, !dbg !13629
  %add.ptr1129 = getelementptr i32, i32* %760, i64 8, !dbg !13629
  %761 = load i32, i32* %add.ptr1129, align 4, !dbg !13629
  %and1130 = and i32 %761, 255, !dbg !13629
  %shl1131 = shl i32 %and1130, 24, !dbg !13629
  %762 = load i8*, i8** %ctx, align 8, !dbg !13629
  %763 = bitcast i8* %762 to i32*, !dbg !13629
  %add.ptr1132 = getelementptr i32, i32* %763, i64 8, !dbg !13629
  %764 = load i32, i32* %add.ptr1132, align 4, !dbg !13629
  %and1133 = and i32 %764, 65280, !dbg !13629
  %shl1134 = shl i32 %and1133, 8, !dbg !13629
  %or1135 = or i32 %shl1131, %shl1134, !dbg !13629
  %765 = load i8*, i8** %ctx, align 8, !dbg !13629
  %766 = bitcast i8* %765 to i32*, !dbg !13629
  %add.ptr1136 = getelementptr i32, i32* %766, i64 8, !dbg !13629
  %767 = load i32, i32* %add.ptr1136, align 4, !dbg !13629
  %and1137 = and i32 %767, 16711680, !dbg !13629
  %shr1138 = lshr i32 %and1137, 8, !dbg !13629
  %or1139 = or i32 %or1135, %shr1138, !dbg !13629
  %768 = load i8*, i8** %ctx, align 8, !dbg !13629
  %769 = bitcast i8* %768 to i32*, !dbg !13629
  %add.ptr1140 = getelementptr i32, i32* %769, i64 8, !dbg !13629
  %770 = load i32, i32* %add.ptr1140, align 4, !dbg !13629
  %and1141 = and i32 %770, -16777216, !dbg !13629
  %shr1142 = lshr i32 %and1141, 24, !dbg !13629
  %or1143 = or i32 %or1139, %shr1142, !dbg !13629
  br label %cond.end1147, !dbg !13629

cond.false1144:                                   ; preds = %cond.false1126
  %771 = load i8*, i8** %ctx, align 8, !dbg !13629
  %772 = bitcast i8* %771 to i32*, !dbg !13629
  %add.ptr1145 = getelementptr i32, i32* %772, i64 8, !dbg !13629
  %773 = load i32, i32* %add.ptr1145, align 4, !dbg !13629
  %call1146 = call i32 @__fswab32(i32 %773) #8, !dbg !13629
  br label %cond.end1147, !dbg !13629

cond.end1147:                                     ; preds = %cond.false1144, %cond.true1128
  %cond1148 = phi i32 [ %or1143, %cond.true1128 ], [ %call1146, %cond.false1144 ], !dbg !13629
  %and1149 = and i32 %cond1148, -3841, !dbg !13629
  %774 = load i32, i32* %_v981, align 4, !dbg !13629
  %and1150 = and i32 %774, 15, !dbg !13629
  %shl1151 = shl i32 %and1150, 8, !dbg !13629
  %or1152 = or i32 %and1149, %shl1151, !dbg !13629
  %call1153 = call i32 @__fswab32(i32 %or1152) #8, !dbg !13629
  br label %cond.end1154, !dbg !13629

cond.end1154:                                     ; preds = %cond.end1147, %cond.end1117
  %cond1155 = phi i32 [ %or1125, %cond.end1117 ], [ %call1153, %cond.end1147 ], !dbg !13629
  %775 = load i8*, i8** %ctx, align 8, !dbg !13629
  %776 = bitcast i8* %775 to i32*, !dbg !13629
  %add.ptr1156 = getelementptr i32, i32* %776, i64 8, !dbg !13629
  store i32 %cond1155, i32* %add.ptr1156, align 4, !dbg !13629
  br label %do.end1157, !dbg !13629

do.end1157:                                       ; preds = %cond.end1154
  br label %if.end1158, !dbg !13629

if.end1158:                                       ; preds = %do.end1157, %do.end975
  %777 = load %struct.mlx5_hca_vport_context*, %struct.mlx5_hca_vport_context** %req.addr, align 8, !dbg !13632
  %field_select1159 = getelementptr inbounds %struct.mlx5_hca_vport_context, %struct.mlx5_hca_vport_context* %777, i32 0, i32 0, !dbg !13634
  %778 = load i32, i32* %field_select1159, align 8, !dbg !13634
  %and1160 = and i32 %778, 1, !dbg !13635
  %tobool1161 = icmp ne i32 %and1160, 0, !dbg !13635
  br i1 %tobool1161, label %if.then1162, label %if.end1209, !dbg !13636

if.then1162:                                      ; preds = %if.end1158
  br label %do.body1163, !dbg !13637

do.body1163:                                      ; preds = %if.then1162
  br label %do.body1164, !dbg !13638

do.body1164:                                      ; preds = %do.body1163
  br label %do.end1165, !dbg !13640

do.end1165:                                       ; preds = %do.body1164
  br label %do.body1166, !dbg !13638

do.body1166:                                      ; preds = %do.end1165
  br label %do.body1167, !dbg !13642

do.body1167:                                      ; preds = %do.body1166
  br label %do.end1168, !dbg !13644

do.end1168:                                       ; preds = %do.body1167
  %779 = load %struct.mlx5_hca_vport_context*, %struct.mlx5_hca_vport_context** %req.addr, align 8, !dbg !13642
  %port_guid = getelementptr inbounds %struct.mlx5_hca_vport_context, %struct.mlx5_hca_vport_context* %779, i32 0, i32 9, !dbg !13642
  %780 = load i64, i64* %port_guid, align 8, !dbg !13642
  %781 = call i1 @llvm.is.constant.i64(i64 %780), !dbg !13642
  br i1 %781, label %cond.true1169, label %cond.false1201, !dbg !13642

cond.true1169:                                    ; preds = %do.end1168
  %782 = load %struct.mlx5_hca_vport_context*, %struct.mlx5_hca_vport_context** %req.addr, align 8, !dbg !13642
  %port_guid1170 = getelementptr inbounds %struct.mlx5_hca_vport_context, %struct.mlx5_hca_vport_context* %782, i32 0, i32 9, !dbg !13642
  %783 = load i64, i64* %port_guid1170, align 8, !dbg !13642
  %and1171 = and i64 %783, 255, !dbg !13642
  %shl1172 = shl i64 %and1171, 56, !dbg !13642
  %784 = load %struct.mlx5_hca_vport_context*, %struct.mlx5_hca_vport_context** %req.addr, align 8, !dbg !13642
  %port_guid1173 = getelementptr inbounds %struct.mlx5_hca_vport_context, %struct.mlx5_hca_vport_context* %784, i32 0, i32 9, !dbg !13642
  %785 = load i64, i64* %port_guid1173, align 8, !dbg !13642
  %and1174 = and i64 %785, 65280, !dbg !13642
  %shl1175 = shl i64 %and1174, 40, !dbg !13642
  %or1176 = or i64 %shl1172, %shl1175, !dbg !13642
  %786 = load %struct.mlx5_hca_vport_context*, %struct.mlx5_hca_vport_context** %req.addr, align 8, !dbg !13642
  %port_guid1177 = getelementptr inbounds %struct.mlx5_hca_vport_context, %struct.mlx5_hca_vport_context* %786, i32 0, i32 9, !dbg !13642
  %787 = load i64, i64* %port_guid1177, align 8, !dbg !13642
  %and1178 = and i64 %787, 16711680, !dbg !13642
  %shl1179 = shl i64 %and1178, 24, !dbg !13642
  %or1180 = or i64 %or1176, %shl1179, !dbg !13642
  %788 = load %struct.mlx5_hca_vport_context*, %struct.mlx5_hca_vport_context** %req.addr, align 8, !dbg !13642
  %port_guid1181 = getelementptr inbounds %struct.mlx5_hca_vport_context, %struct.mlx5_hca_vport_context* %788, i32 0, i32 9, !dbg !13642
  %789 = load i64, i64* %port_guid1181, align 8, !dbg !13642
  %and1182 = and i64 %789, 4278190080, !dbg !13642
  %shl1183 = shl i64 %and1182, 8, !dbg !13642
  %or1184 = or i64 %or1180, %shl1183, !dbg !13642
  %790 = load %struct.mlx5_hca_vport_context*, %struct.mlx5_hca_vport_context** %req.addr, align 8, !dbg !13642
  %port_guid1185 = getelementptr inbounds %struct.mlx5_hca_vport_context, %struct.mlx5_hca_vport_context* %790, i32 0, i32 9, !dbg !13642
  %791 = load i64, i64* %port_guid1185, align 8, !dbg !13642
  %and1186 = and i64 %791, 1095216660480, !dbg !13642
  %shr1187 = lshr i64 %and1186, 8, !dbg !13642
  %or1188 = or i64 %or1184, %shr1187, !dbg !13642
  %792 = load %struct.mlx5_hca_vport_context*, %struct.mlx5_hca_vport_context** %req.addr, align 8, !dbg !13642
  %port_guid1189 = getelementptr inbounds %struct.mlx5_hca_vport_context, %struct.mlx5_hca_vport_context* %792, i32 0, i32 9, !dbg !13642
  %793 = load i64, i64* %port_guid1189, align 8, !dbg !13642
  %and1190 = and i64 %793, 280375465082880, !dbg !13642
  %shr1191 = lshr i64 %and1190, 24, !dbg !13642
  %or1192 = or i64 %or1188, %shr1191, !dbg !13642
  %794 = load %struct.mlx5_hca_vport_context*, %struct.mlx5_hca_vport_context** %req.addr, align 8, !dbg !13642
  %port_guid1193 = getelementptr inbounds %struct.mlx5_hca_vport_context, %struct.mlx5_hca_vport_context* %794, i32 0, i32 9, !dbg !13642
  %795 = load i64, i64* %port_guid1193, align 8, !dbg !13642
  %and1194 = and i64 %795, 71776119061217280, !dbg !13642
  %shr1195 = lshr i64 %and1194, 40, !dbg !13642
  %or1196 = or i64 %or1192, %shr1195, !dbg !13642
  %796 = load %struct.mlx5_hca_vport_context*, %struct.mlx5_hca_vport_context** %req.addr, align 8, !dbg !13642
  %port_guid1197 = getelementptr inbounds %struct.mlx5_hca_vport_context, %struct.mlx5_hca_vport_context* %796, i32 0, i32 9, !dbg !13642
  %797 = load i64, i64* %port_guid1197, align 8, !dbg !13642
  %and1198 = and i64 %797, -72057594037927936, !dbg !13642
  %shr1199 = lshr i64 %and1198, 56, !dbg !13642
  %or1200 = or i64 %or1196, %shr1199, !dbg !13642
  br label %cond.end1204, !dbg !13642

cond.false1201:                                   ; preds = %do.end1168
  %798 = load %struct.mlx5_hca_vport_context*, %struct.mlx5_hca_vport_context** %req.addr, align 8, !dbg !13642
  %port_guid1202 = getelementptr inbounds %struct.mlx5_hca_vport_context, %struct.mlx5_hca_vport_context* %798, i32 0, i32 9, !dbg !13642
  %799 = load i64, i64* %port_guid1202, align 8, !dbg !13642
  %call1203 = call i64 @__fswab64(i64 %799) #8, !dbg !13642
  br label %cond.end1204, !dbg !13642

cond.end1204:                                     ; preds = %cond.false1201, %cond.true1169
  %cond1205 = phi i64 [ %or1200, %cond.true1169 ], [ %call1203, %cond.false1201 ], !dbg !13642
  %800 = load i8*, i8** %ctx, align 8, !dbg !13642
  %801 = bitcast i8* %800 to i64*, !dbg !13642
  %add.ptr1206 = getelementptr i64, i64* %801, i64 6, !dbg !13642
  store i64 %cond1205, i64* %add.ptr1206, align 8, !dbg !13642
  br label %do.end1207, !dbg !13642

do.end1207:                                       ; preds = %cond.end1204
  br label %do.end1208, !dbg !13638

do.end1208:                                       ; preds = %do.end1207
  br label %if.end1209, !dbg !13638

if.end1209:                                       ; preds = %do.end1208, %if.end1158
  %802 = load %struct.mlx5_hca_vport_context*, %struct.mlx5_hca_vport_context** %req.addr, align 8, !dbg !13646
  %field_select1210 = getelementptr inbounds %struct.mlx5_hca_vport_context, %struct.mlx5_hca_vport_context* %802, i32 0, i32 0, !dbg !13648
  %803 = load i32, i32* %field_select1210, align 8, !dbg !13648
  %and1211 = and i32 %803, 2, !dbg !13649
  %tobool1212 = icmp ne i32 %and1211, 0, !dbg !13649
  br i1 %tobool1212, label %if.then1213, label %if.end1260, !dbg !13650

if.then1213:                                      ; preds = %if.end1209
  br label %do.body1214, !dbg !13651

do.body1214:                                      ; preds = %if.then1213
  br label %do.body1215, !dbg !13652

do.body1215:                                      ; preds = %do.body1214
  br label %do.end1216, !dbg !13654

do.end1216:                                       ; preds = %do.body1215
  br label %do.body1217, !dbg !13652

do.body1217:                                      ; preds = %do.end1216
  br label %do.body1218, !dbg !13656

do.body1218:                                      ; preds = %do.body1217
  br label %do.end1219, !dbg !13658

do.end1219:                                       ; preds = %do.body1218
  %804 = load %struct.mlx5_hca_vport_context*, %struct.mlx5_hca_vport_context** %req.addr, align 8, !dbg !13656
  %node_guid = getelementptr inbounds %struct.mlx5_hca_vport_context, %struct.mlx5_hca_vport_context* %804, i32 0, i32 10, !dbg !13656
  %805 = load i64, i64* %node_guid, align 8, !dbg !13656
  %806 = call i1 @llvm.is.constant.i64(i64 %805), !dbg !13656
  br i1 %806, label %cond.true1220, label %cond.false1252, !dbg !13656

cond.true1220:                                    ; preds = %do.end1219
  %807 = load %struct.mlx5_hca_vport_context*, %struct.mlx5_hca_vport_context** %req.addr, align 8, !dbg !13656
  %node_guid1221 = getelementptr inbounds %struct.mlx5_hca_vport_context, %struct.mlx5_hca_vport_context* %807, i32 0, i32 10, !dbg !13656
  %808 = load i64, i64* %node_guid1221, align 8, !dbg !13656
  %and1222 = and i64 %808, 255, !dbg !13656
  %shl1223 = shl i64 %and1222, 56, !dbg !13656
  %809 = load %struct.mlx5_hca_vport_context*, %struct.mlx5_hca_vport_context** %req.addr, align 8, !dbg !13656
  %node_guid1224 = getelementptr inbounds %struct.mlx5_hca_vport_context, %struct.mlx5_hca_vport_context* %809, i32 0, i32 10, !dbg !13656
  %810 = load i64, i64* %node_guid1224, align 8, !dbg !13656
  %and1225 = and i64 %810, 65280, !dbg !13656
  %shl1226 = shl i64 %and1225, 40, !dbg !13656
  %or1227 = or i64 %shl1223, %shl1226, !dbg !13656
  %811 = load %struct.mlx5_hca_vport_context*, %struct.mlx5_hca_vport_context** %req.addr, align 8, !dbg !13656
  %node_guid1228 = getelementptr inbounds %struct.mlx5_hca_vport_context, %struct.mlx5_hca_vport_context* %811, i32 0, i32 10, !dbg !13656
  %812 = load i64, i64* %node_guid1228, align 8, !dbg !13656
  %and1229 = and i64 %812, 16711680, !dbg !13656
  %shl1230 = shl i64 %and1229, 24, !dbg !13656
  %or1231 = or i64 %or1227, %shl1230, !dbg !13656
  %813 = load %struct.mlx5_hca_vport_context*, %struct.mlx5_hca_vport_context** %req.addr, align 8, !dbg !13656
  %node_guid1232 = getelementptr inbounds %struct.mlx5_hca_vport_context, %struct.mlx5_hca_vport_context* %813, i32 0, i32 10, !dbg !13656
  %814 = load i64, i64* %node_guid1232, align 8, !dbg !13656
  %and1233 = and i64 %814, 4278190080, !dbg !13656
  %shl1234 = shl i64 %and1233, 8, !dbg !13656
  %or1235 = or i64 %or1231, %shl1234, !dbg !13656
  %815 = load %struct.mlx5_hca_vport_context*, %struct.mlx5_hca_vport_context** %req.addr, align 8, !dbg !13656
  %node_guid1236 = getelementptr inbounds %struct.mlx5_hca_vport_context, %struct.mlx5_hca_vport_context* %815, i32 0, i32 10, !dbg !13656
  %816 = load i64, i64* %node_guid1236, align 8, !dbg !13656
  %and1237 = and i64 %816, 1095216660480, !dbg !13656
  %shr1238 = lshr i64 %and1237, 8, !dbg !13656
  %or1239 = or i64 %or1235, %shr1238, !dbg !13656
  %817 = load %struct.mlx5_hca_vport_context*, %struct.mlx5_hca_vport_context** %req.addr, align 8, !dbg !13656
  %node_guid1240 = getelementptr inbounds %struct.mlx5_hca_vport_context, %struct.mlx5_hca_vport_context* %817, i32 0, i32 10, !dbg !13656
  %818 = load i64, i64* %node_guid1240, align 8, !dbg !13656
  %and1241 = and i64 %818, 280375465082880, !dbg !13656
  %shr1242 = lshr i64 %and1241, 24, !dbg !13656
  %or1243 = or i64 %or1239, %shr1242, !dbg !13656
  %819 = load %struct.mlx5_hca_vport_context*, %struct.mlx5_hca_vport_context** %req.addr, align 8, !dbg !13656
  %node_guid1244 = getelementptr inbounds %struct.mlx5_hca_vport_context, %struct.mlx5_hca_vport_context* %819, i32 0, i32 10, !dbg !13656
  %820 = load i64, i64* %node_guid1244, align 8, !dbg !13656
  %and1245 = and i64 %820, 71776119061217280, !dbg !13656
  %shr1246 = lshr i64 %and1245, 40, !dbg !13656
  %or1247 = or i64 %or1243, %shr1246, !dbg !13656
  %821 = load %struct.mlx5_hca_vport_context*, %struct.mlx5_hca_vport_context** %req.addr, align 8, !dbg !13656
  %node_guid1248 = getelementptr inbounds %struct.mlx5_hca_vport_context, %struct.mlx5_hca_vport_context* %821, i32 0, i32 10, !dbg !13656
  %822 = load i64, i64* %node_guid1248, align 8, !dbg !13656
  %and1249 = and i64 %822, -72057594037927936, !dbg !13656
  %shr1250 = lshr i64 %and1249, 56, !dbg !13656
  %or1251 = or i64 %or1247, %shr1250, !dbg !13656
  br label %cond.end1255, !dbg !13656

cond.false1252:                                   ; preds = %do.end1219
  %823 = load %struct.mlx5_hca_vport_context*, %struct.mlx5_hca_vport_context** %req.addr, align 8, !dbg !13656
  %node_guid1253 = getelementptr inbounds %struct.mlx5_hca_vport_context, %struct.mlx5_hca_vport_context* %823, i32 0, i32 10, !dbg !13656
  %824 = load i64, i64* %node_guid1253, align 8, !dbg !13656
  %call1254 = call i64 @__fswab64(i64 %824) #8, !dbg !13656
  br label %cond.end1255, !dbg !13656

cond.end1255:                                     ; preds = %cond.false1252, %cond.true1220
  %cond1256 = phi i64 [ %or1251, %cond.true1220 ], [ %call1254, %cond.false1252 ], !dbg !13656
  %825 = load i8*, i8** %ctx, align 8, !dbg !13656
  %826 = bitcast i8* %825 to i64*, !dbg !13656
  %add.ptr1257 = getelementptr i64, i64* %826, i64 7, !dbg !13656
  store i64 %cond1256, i64* %add.ptr1257, align 8, !dbg !13656
  br label %do.end1258, !dbg !13656

do.end1258:                                       ; preds = %cond.end1255
  br label %do.end1259, !dbg !13652

do.end1259:                                       ; preds = %do.end1258
  br label %if.end1260, !dbg !13652

if.end1260:                                       ; preds = %do.end1259, %if.end1209
  br label %do.body1261, !dbg !13660

do.body1261:                                      ; preds = %if.end1260
  call void @llvm.dbg.declare(metadata i32* %_v1262, metadata !13661, metadata !DIExpression()), !dbg !13663
  %827 = load %struct.mlx5_hca_vport_context*, %struct.mlx5_hca_vport_context** %req.addr, align 8, !dbg !13663
  %cap_mask1 = getelementptr inbounds %struct.mlx5_hca_vport_context, %struct.mlx5_hca_vport_context* %827, i32 0, i32 11, !dbg !13663
  %828 = load i32, i32* %cap_mask1, align 8, !dbg !13663
  store i32 %828, i32* %_v1262, align 4, !dbg !13663
  br label %do.body1263, !dbg !13663

do.body1263:                                      ; preds = %do.body1261
  br label %do.end1264, !dbg !13664

do.end1264:                                       ; preds = %do.body1263
  %829 = load i8*, i8** %ctx, align 8, !dbg !13663
  %830 = bitcast i8* %829 to i32*, !dbg !13663
  %add.ptr1265 = getelementptr i32, i32* %830, i64 16, !dbg !13663
  %831 = load i32, i32* %add.ptr1265, align 4, !dbg !13663
  %832 = call i1 @llvm.is.constant.i32(i32 %831), !dbg !13663
  br i1 %832, label %cond.true1266, label %cond.false1282, !dbg !13663

cond.true1266:                                    ; preds = %do.end1264
  %833 = load i8*, i8** %ctx, align 8, !dbg !13663
  %834 = bitcast i8* %833 to i32*, !dbg !13663
  %add.ptr1267 = getelementptr i32, i32* %834, i64 16, !dbg !13663
  %835 = load i32, i32* %add.ptr1267, align 4, !dbg !13663
  %and1268 = and i32 %835, 255, !dbg !13663
  %shl1269 = shl i32 %and1268, 24, !dbg !13663
  %836 = load i8*, i8** %ctx, align 8, !dbg !13663
  %837 = bitcast i8* %836 to i32*, !dbg !13663
  %add.ptr1270 = getelementptr i32, i32* %837, i64 16, !dbg !13663
  %838 = load i32, i32* %add.ptr1270, align 4, !dbg !13663
  %and1271 = and i32 %838, 65280, !dbg !13663
  %shl1272 = shl i32 %and1271, 8, !dbg !13663
  %or1273 = or i32 %shl1269, %shl1272, !dbg !13663
  %839 = load i8*, i8** %ctx, align 8, !dbg !13663
  %840 = bitcast i8* %839 to i32*, !dbg !13663
  %add.ptr1274 = getelementptr i32, i32* %840, i64 16, !dbg !13663
  %841 = load i32, i32* %add.ptr1274, align 4, !dbg !13663
  %and1275 = and i32 %841, 16711680, !dbg !13663
  %shr1276 = lshr i32 %and1275, 8, !dbg !13663
  %or1277 = or i32 %or1273, %shr1276, !dbg !13663
  %842 = load i8*, i8** %ctx, align 8, !dbg !13663
  %843 = bitcast i8* %842 to i32*, !dbg !13663
  %add.ptr1278 = getelementptr i32, i32* %843, i64 16, !dbg !13663
  %844 = load i32, i32* %add.ptr1278, align 4, !dbg !13663
  %and1279 = and i32 %844, -16777216, !dbg !13663
  %shr1280 = lshr i32 %and1279, 24, !dbg !13663
  %or1281 = or i32 %or1277, %shr1280, !dbg !13663
  br label %cond.end1285, !dbg !13663

cond.false1282:                                   ; preds = %do.end1264
  %845 = load i8*, i8** %ctx, align 8, !dbg !13663
  %846 = bitcast i8* %845 to i32*, !dbg !13663
  %add.ptr1283 = getelementptr i32, i32* %846, i64 16, !dbg !13663
  %847 = load i32, i32* %add.ptr1283, align 4, !dbg !13663
  %call1284 = call i32 @__fswab32(i32 %847) #8, !dbg !13663
  br label %cond.end1285, !dbg !13663

cond.end1285:                                     ; preds = %cond.false1282, %cond.true1266
  %cond1286 = phi i32 [ %or1281, %cond.true1266 ], [ %call1284, %cond.false1282 ], !dbg !13663
  %and1287 = and i32 %cond1286, 0, !dbg !13663
  %848 = load i32, i32* %_v1262, align 4, !dbg !13663
  %shl1288 = shl i32 %848, 0, !dbg !13663
  %or1289 = or i32 %and1287, %shl1288, !dbg !13663
  %849 = call i1 @llvm.is.constant.i32(i32 %or1289), !dbg !13663
  br i1 %849, label %cond.true1290, label %cond.false1402, !dbg !13663

cond.true1290:                                    ; preds = %cond.end1285
  %850 = load i8*, i8** %ctx, align 8, !dbg !13663
  %851 = bitcast i8* %850 to i32*, !dbg !13663
  %add.ptr1291 = getelementptr i32, i32* %851, i64 16, !dbg !13663
  %852 = load i32, i32* %add.ptr1291, align 4, !dbg !13663
  %853 = call i1 @llvm.is.constant.i32(i32 %852), !dbg !13663
  br i1 %853, label %cond.true1292, label %cond.false1308, !dbg !13663

cond.true1292:                                    ; preds = %cond.true1290
  %854 = load i8*, i8** %ctx, align 8, !dbg !13663
  %855 = bitcast i8* %854 to i32*, !dbg !13663
  %add.ptr1293 = getelementptr i32, i32* %855, i64 16, !dbg !13663
  %856 = load i32, i32* %add.ptr1293, align 4, !dbg !13663
  %and1294 = and i32 %856, 255, !dbg !13663
  %shl1295 = shl i32 %and1294, 24, !dbg !13663
  %857 = load i8*, i8** %ctx, align 8, !dbg !13663
  %858 = bitcast i8* %857 to i32*, !dbg !13663
  %add.ptr1296 = getelementptr i32, i32* %858, i64 16, !dbg !13663
  %859 = load i32, i32* %add.ptr1296, align 4, !dbg !13663
  %and1297 = and i32 %859, 65280, !dbg !13663
  %shl1298 = shl i32 %and1297, 8, !dbg !13663
  %or1299 = or i32 %shl1295, %shl1298, !dbg !13663
  %860 = load i8*, i8** %ctx, align 8, !dbg !13663
  %861 = bitcast i8* %860 to i32*, !dbg !13663
  %add.ptr1300 = getelementptr i32, i32* %861, i64 16, !dbg !13663
  %862 = load i32, i32* %add.ptr1300, align 4, !dbg !13663
  %and1301 = and i32 %862, 16711680, !dbg !13663
  %shr1302 = lshr i32 %and1301, 8, !dbg !13663
  %or1303 = or i32 %or1299, %shr1302, !dbg !13663
  %863 = load i8*, i8** %ctx, align 8, !dbg !13663
  %864 = bitcast i8* %863 to i32*, !dbg !13663
  %add.ptr1304 = getelementptr i32, i32* %864, i64 16, !dbg !13663
  %865 = load i32, i32* %add.ptr1304, align 4, !dbg !13663
  %and1305 = and i32 %865, -16777216, !dbg !13663
  %shr1306 = lshr i32 %and1305, 24, !dbg !13663
  %or1307 = or i32 %or1303, %shr1306, !dbg !13663
  br label %cond.end1311, !dbg !13663

cond.false1308:                                   ; preds = %cond.true1290
  %866 = load i8*, i8** %ctx, align 8, !dbg !13663
  %867 = bitcast i8* %866 to i32*, !dbg !13663
  %add.ptr1309 = getelementptr i32, i32* %867, i64 16, !dbg !13663
  %868 = load i32, i32* %add.ptr1309, align 4, !dbg !13663
  %call1310 = call i32 @__fswab32(i32 %868) #8, !dbg !13663
  br label %cond.end1311, !dbg !13663

cond.end1311:                                     ; preds = %cond.false1308, %cond.true1292
  %cond1312 = phi i32 [ %or1307, %cond.true1292 ], [ %call1310, %cond.false1308 ], !dbg !13663
  %and1313 = and i32 %cond1312, 0, !dbg !13663
  %869 = load i32, i32* %_v1262, align 4, !dbg !13663
  %shl1314 = shl i32 %869, 0, !dbg !13663
  %or1315 = or i32 %and1313, %shl1314, !dbg !13663
  %and1316 = and i32 %or1315, 255, !dbg !13663
  %shl1317 = shl i32 %and1316, 24, !dbg !13663
  %870 = load i8*, i8** %ctx, align 8, !dbg !13663
  %871 = bitcast i8* %870 to i32*, !dbg !13663
  %add.ptr1318 = getelementptr i32, i32* %871, i64 16, !dbg !13663
  %872 = load i32, i32* %add.ptr1318, align 4, !dbg !13663
  %873 = call i1 @llvm.is.constant.i32(i32 %872), !dbg !13663
  br i1 %873, label %cond.true1319, label %cond.false1335, !dbg !13663

cond.true1319:                                    ; preds = %cond.end1311
  %874 = load i8*, i8** %ctx, align 8, !dbg !13663
  %875 = bitcast i8* %874 to i32*, !dbg !13663
  %add.ptr1320 = getelementptr i32, i32* %875, i64 16, !dbg !13663
  %876 = load i32, i32* %add.ptr1320, align 4, !dbg !13663
  %and1321 = and i32 %876, 255, !dbg !13663
  %shl1322 = shl i32 %and1321, 24, !dbg !13663
  %877 = load i8*, i8** %ctx, align 8, !dbg !13663
  %878 = bitcast i8* %877 to i32*, !dbg !13663
  %add.ptr1323 = getelementptr i32, i32* %878, i64 16, !dbg !13663
  %879 = load i32, i32* %add.ptr1323, align 4, !dbg !13663
  %and1324 = and i32 %879, 65280, !dbg !13663
  %shl1325 = shl i32 %and1324, 8, !dbg !13663
  %or1326 = or i32 %shl1322, %shl1325, !dbg !13663
  %880 = load i8*, i8** %ctx, align 8, !dbg !13663
  %881 = bitcast i8* %880 to i32*, !dbg !13663
  %add.ptr1327 = getelementptr i32, i32* %881, i64 16, !dbg !13663
  %882 = load i32, i32* %add.ptr1327, align 4, !dbg !13663
  %and1328 = and i32 %882, 16711680, !dbg !13663
  %shr1329 = lshr i32 %and1328, 8, !dbg !13663
  %or1330 = or i32 %or1326, %shr1329, !dbg !13663
  %883 = load i8*, i8** %ctx, align 8, !dbg !13663
  %884 = bitcast i8* %883 to i32*, !dbg !13663
  %add.ptr1331 = getelementptr i32, i32* %884, i64 16, !dbg !13663
  %885 = load i32, i32* %add.ptr1331, align 4, !dbg !13663
  %and1332 = and i32 %885, -16777216, !dbg !13663
  %shr1333 = lshr i32 %and1332, 24, !dbg !13663
  %or1334 = or i32 %or1330, %shr1333, !dbg !13663
  br label %cond.end1338, !dbg !13663

cond.false1335:                                   ; preds = %cond.end1311
  %886 = load i8*, i8** %ctx, align 8, !dbg !13663
  %887 = bitcast i8* %886 to i32*, !dbg !13663
  %add.ptr1336 = getelementptr i32, i32* %887, i64 16, !dbg !13663
  %888 = load i32, i32* %add.ptr1336, align 4, !dbg !13663
  %call1337 = call i32 @__fswab32(i32 %888) #8, !dbg !13663
  br label %cond.end1338, !dbg !13663

cond.end1338:                                     ; preds = %cond.false1335, %cond.true1319
  %cond1339 = phi i32 [ %or1334, %cond.true1319 ], [ %call1337, %cond.false1335 ], !dbg !13663
  %and1340 = and i32 %cond1339, 0, !dbg !13663
  %889 = load i32, i32* %_v1262, align 4, !dbg !13663
  %shl1341 = shl i32 %889, 0, !dbg !13663
  %or1342 = or i32 %and1340, %shl1341, !dbg !13663
  %and1343 = and i32 %or1342, 65280, !dbg !13663
  %shl1344 = shl i32 %and1343, 8, !dbg !13663
  %or1345 = or i32 %shl1317, %shl1344, !dbg !13663
  %890 = load i8*, i8** %ctx, align 8, !dbg !13663
  %891 = bitcast i8* %890 to i32*, !dbg !13663
  %add.ptr1346 = getelementptr i32, i32* %891, i64 16, !dbg !13663
  %892 = load i32, i32* %add.ptr1346, align 4, !dbg !13663
  %893 = call i1 @llvm.is.constant.i32(i32 %892), !dbg !13663
  br i1 %893, label %cond.true1347, label %cond.false1363, !dbg !13663

cond.true1347:                                    ; preds = %cond.end1338
  %894 = load i8*, i8** %ctx, align 8, !dbg !13663
  %895 = bitcast i8* %894 to i32*, !dbg !13663
  %add.ptr1348 = getelementptr i32, i32* %895, i64 16, !dbg !13663
  %896 = load i32, i32* %add.ptr1348, align 4, !dbg !13663
  %and1349 = and i32 %896, 255, !dbg !13663
  %shl1350 = shl i32 %and1349, 24, !dbg !13663
  %897 = load i8*, i8** %ctx, align 8, !dbg !13663
  %898 = bitcast i8* %897 to i32*, !dbg !13663
  %add.ptr1351 = getelementptr i32, i32* %898, i64 16, !dbg !13663
  %899 = load i32, i32* %add.ptr1351, align 4, !dbg !13663
  %and1352 = and i32 %899, 65280, !dbg !13663
  %shl1353 = shl i32 %and1352, 8, !dbg !13663
  %or1354 = or i32 %shl1350, %shl1353, !dbg !13663
  %900 = load i8*, i8** %ctx, align 8, !dbg !13663
  %901 = bitcast i8* %900 to i32*, !dbg !13663
  %add.ptr1355 = getelementptr i32, i32* %901, i64 16, !dbg !13663
  %902 = load i32, i32* %add.ptr1355, align 4, !dbg !13663
  %and1356 = and i32 %902, 16711680, !dbg !13663
  %shr1357 = lshr i32 %and1356, 8, !dbg !13663
  %or1358 = or i32 %or1354, %shr1357, !dbg !13663
  %903 = load i8*, i8** %ctx, align 8, !dbg !13663
  %904 = bitcast i8* %903 to i32*, !dbg !13663
  %add.ptr1359 = getelementptr i32, i32* %904, i64 16, !dbg !13663
  %905 = load i32, i32* %add.ptr1359, align 4, !dbg !13663
  %and1360 = and i32 %905, -16777216, !dbg !13663
  %shr1361 = lshr i32 %and1360, 24, !dbg !13663
  %or1362 = or i32 %or1358, %shr1361, !dbg !13663
  br label %cond.end1366, !dbg !13663

cond.false1363:                                   ; preds = %cond.end1338
  %906 = load i8*, i8** %ctx, align 8, !dbg !13663
  %907 = bitcast i8* %906 to i32*, !dbg !13663
  %add.ptr1364 = getelementptr i32, i32* %907, i64 16, !dbg !13663
  %908 = load i32, i32* %add.ptr1364, align 4, !dbg !13663
  %call1365 = call i32 @__fswab32(i32 %908) #8, !dbg !13663
  br label %cond.end1366, !dbg !13663

cond.end1366:                                     ; preds = %cond.false1363, %cond.true1347
  %cond1367 = phi i32 [ %or1362, %cond.true1347 ], [ %call1365, %cond.false1363 ], !dbg !13663
  %and1368 = and i32 %cond1367, 0, !dbg !13663
  %909 = load i32, i32* %_v1262, align 4, !dbg !13663
  %shl1369 = shl i32 %909, 0, !dbg !13663
  %or1370 = or i32 %and1368, %shl1369, !dbg !13663
  %and1371 = and i32 %or1370, 16711680, !dbg !13663
  %shr1372 = lshr i32 %and1371, 8, !dbg !13663
  %or1373 = or i32 %or1345, %shr1372, !dbg !13663
  %910 = load i8*, i8** %ctx, align 8, !dbg !13663
  %911 = bitcast i8* %910 to i32*, !dbg !13663
  %add.ptr1374 = getelementptr i32, i32* %911, i64 16, !dbg !13663
  %912 = load i32, i32* %add.ptr1374, align 4, !dbg !13663
  %913 = call i1 @llvm.is.constant.i32(i32 %912), !dbg !13663
  br i1 %913, label %cond.true1375, label %cond.false1391, !dbg !13663

cond.true1375:                                    ; preds = %cond.end1366
  %914 = load i8*, i8** %ctx, align 8, !dbg !13663
  %915 = bitcast i8* %914 to i32*, !dbg !13663
  %add.ptr1376 = getelementptr i32, i32* %915, i64 16, !dbg !13663
  %916 = load i32, i32* %add.ptr1376, align 4, !dbg !13663
  %and1377 = and i32 %916, 255, !dbg !13663
  %shl1378 = shl i32 %and1377, 24, !dbg !13663
  %917 = load i8*, i8** %ctx, align 8, !dbg !13663
  %918 = bitcast i8* %917 to i32*, !dbg !13663
  %add.ptr1379 = getelementptr i32, i32* %918, i64 16, !dbg !13663
  %919 = load i32, i32* %add.ptr1379, align 4, !dbg !13663
  %and1380 = and i32 %919, 65280, !dbg !13663
  %shl1381 = shl i32 %and1380, 8, !dbg !13663
  %or1382 = or i32 %shl1378, %shl1381, !dbg !13663
  %920 = load i8*, i8** %ctx, align 8, !dbg !13663
  %921 = bitcast i8* %920 to i32*, !dbg !13663
  %add.ptr1383 = getelementptr i32, i32* %921, i64 16, !dbg !13663
  %922 = load i32, i32* %add.ptr1383, align 4, !dbg !13663
  %and1384 = and i32 %922, 16711680, !dbg !13663
  %shr1385 = lshr i32 %and1384, 8, !dbg !13663
  %or1386 = or i32 %or1382, %shr1385, !dbg !13663
  %923 = load i8*, i8** %ctx, align 8, !dbg !13663
  %924 = bitcast i8* %923 to i32*, !dbg !13663
  %add.ptr1387 = getelementptr i32, i32* %924, i64 16, !dbg !13663
  %925 = load i32, i32* %add.ptr1387, align 4, !dbg !13663
  %and1388 = and i32 %925, -16777216, !dbg !13663
  %shr1389 = lshr i32 %and1388, 24, !dbg !13663
  %or1390 = or i32 %or1386, %shr1389, !dbg !13663
  br label %cond.end1394, !dbg !13663

cond.false1391:                                   ; preds = %cond.end1366
  %926 = load i8*, i8** %ctx, align 8, !dbg !13663
  %927 = bitcast i8* %926 to i32*, !dbg !13663
  %add.ptr1392 = getelementptr i32, i32* %927, i64 16, !dbg !13663
  %928 = load i32, i32* %add.ptr1392, align 4, !dbg !13663
  %call1393 = call i32 @__fswab32(i32 %928) #8, !dbg !13663
  br label %cond.end1394, !dbg !13663

cond.end1394:                                     ; preds = %cond.false1391, %cond.true1375
  %cond1395 = phi i32 [ %or1390, %cond.true1375 ], [ %call1393, %cond.false1391 ], !dbg !13663
  %and1396 = and i32 %cond1395, 0, !dbg !13663
  %929 = load i32, i32* %_v1262, align 4, !dbg !13663
  %shl1397 = shl i32 %929, 0, !dbg !13663
  %or1398 = or i32 %and1396, %shl1397, !dbg !13663
  %and1399 = and i32 %or1398, -16777216, !dbg !13663
  %shr1400 = lshr i32 %and1399, 24, !dbg !13663
  %or1401 = or i32 %or1373, %shr1400, !dbg !13663
  br label %cond.end1429, !dbg !13663

cond.false1402:                                   ; preds = %cond.end1285
  %930 = load i8*, i8** %ctx, align 8, !dbg !13663
  %931 = bitcast i8* %930 to i32*, !dbg !13663
  %add.ptr1403 = getelementptr i32, i32* %931, i64 16, !dbg !13663
  %932 = load i32, i32* %add.ptr1403, align 4, !dbg !13663
  %933 = call i1 @llvm.is.constant.i32(i32 %932), !dbg !13663
  br i1 %933, label %cond.true1404, label %cond.false1420, !dbg !13663

cond.true1404:                                    ; preds = %cond.false1402
  %934 = load i8*, i8** %ctx, align 8, !dbg !13663
  %935 = bitcast i8* %934 to i32*, !dbg !13663
  %add.ptr1405 = getelementptr i32, i32* %935, i64 16, !dbg !13663
  %936 = load i32, i32* %add.ptr1405, align 4, !dbg !13663
  %and1406 = and i32 %936, 255, !dbg !13663
  %shl1407 = shl i32 %and1406, 24, !dbg !13663
  %937 = load i8*, i8** %ctx, align 8, !dbg !13663
  %938 = bitcast i8* %937 to i32*, !dbg !13663
  %add.ptr1408 = getelementptr i32, i32* %938, i64 16, !dbg !13663
  %939 = load i32, i32* %add.ptr1408, align 4, !dbg !13663
  %and1409 = and i32 %939, 65280, !dbg !13663
  %shl1410 = shl i32 %and1409, 8, !dbg !13663
  %or1411 = or i32 %shl1407, %shl1410, !dbg !13663
  %940 = load i8*, i8** %ctx, align 8, !dbg !13663
  %941 = bitcast i8* %940 to i32*, !dbg !13663
  %add.ptr1412 = getelementptr i32, i32* %941, i64 16, !dbg !13663
  %942 = load i32, i32* %add.ptr1412, align 4, !dbg !13663
  %and1413 = and i32 %942, 16711680, !dbg !13663
  %shr1414 = lshr i32 %and1413, 8, !dbg !13663
  %or1415 = or i32 %or1411, %shr1414, !dbg !13663
  %943 = load i8*, i8** %ctx, align 8, !dbg !13663
  %944 = bitcast i8* %943 to i32*, !dbg !13663
  %add.ptr1416 = getelementptr i32, i32* %944, i64 16, !dbg !13663
  %945 = load i32, i32* %add.ptr1416, align 4, !dbg !13663
  %and1417 = and i32 %945, -16777216, !dbg !13663
  %shr1418 = lshr i32 %and1417, 24, !dbg !13663
  %or1419 = or i32 %or1415, %shr1418, !dbg !13663
  br label %cond.end1423, !dbg !13663

cond.false1420:                                   ; preds = %cond.false1402
  %946 = load i8*, i8** %ctx, align 8, !dbg !13663
  %947 = bitcast i8* %946 to i32*, !dbg !13663
  %add.ptr1421 = getelementptr i32, i32* %947, i64 16, !dbg !13663
  %948 = load i32, i32* %add.ptr1421, align 4, !dbg !13663
  %call1422 = call i32 @__fswab32(i32 %948) #8, !dbg !13663
  br label %cond.end1423, !dbg !13663

cond.end1423:                                     ; preds = %cond.false1420, %cond.true1404
  %cond1424 = phi i32 [ %or1419, %cond.true1404 ], [ %call1422, %cond.false1420 ], !dbg !13663
  %and1425 = and i32 %cond1424, 0, !dbg !13663
  %949 = load i32, i32* %_v1262, align 4, !dbg !13663
  %shl1426 = shl i32 %949, 0, !dbg !13663
  %or1427 = or i32 %and1425, %shl1426, !dbg !13663
  %call1428 = call i32 @__fswab32(i32 %or1427) #8, !dbg !13663
  br label %cond.end1429, !dbg !13663

cond.end1429:                                     ; preds = %cond.end1423, %cond.end1394
  %cond1430 = phi i32 [ %or1401, %cond.end1394 ], [ %call1428, %cond.end1423 ], !dbg !13663
  %950 = load i8*, i8** %ctx, align 8, !dbg !13663
  %951 = bitcast i8* %950 to i32*, !dbg !13663
  %add.ptr1431 = getelementptr i32, i32* %951, i64 16, !dbg !13663
  store i32 %cond1430, i32* %add.ptr1431, align 4, !dbg !13663
  br label %do.end1432, !dbg !13663

do.end1432:                                       ; preds = %cond.end1429
  br label %do.body1433, !dbg !13666

do.body1433:                                      ; preds = %do.end1432
  call void @llvm.dbg.declare(metadata i32* %_v1434, metadata !13667, metadata !DIExpression()), !dbg !13669
  %952 = load %struct.mlx5_hca_vport_context*, %struct.mlx5_hca_vport_context** %req.addr, align 8, !dbg !13669
  %cap_mask1_perm = getelementptr inbounds %struct.mlx5_hca_vport_context, %struct.mlx5_hca_vport_context* %952, i32 0, i32 12, !dbg !13669
  %953 = load i32, i32* %cap_mask1_perm, align 4, !dbg !13669
  store i32 %953, i32* %_v1434, align 4, !dbg !13669
  br label %do.body1435, !dbg !13669

do.body1435:                                      ; preds = %do.body1433
  br label %do.end1436, !dbg !13670

do.end1436:                                       ; preds = %do.body1435
  %954 = load i8*, i8** %ctx, align 8, !dbg !13669
  %955 = bitcast i8* %954 to i32*, !dbg !13669
  %add.ptr1437 = getelementptr i32, i32* %955, i64 17, !dbg !13669
  %956 = load i32, i32* %add.ptr1437, align 4, !dbg !13669
  %957 = call i1 @llvm.is.constant.i32(i32 %956), !dbg !13669
  br i1 %957, label %cond.true1438, label %cond.false1454, !dbg !13669

cond.true1438:                                    ; preds = %do.end1436
  %958 = load i8*, i8** %ctx, align 8, !dbg !13669
  %959 = bitcast i8* %958 to i32*, !dbg !13669
  %add.ptr1439 = getelementptr i32, i32* %959, i64 17, !dbg !13669
  %960 = load i32, i32* %add.ptr1439, align 4, !dbg !13669
  %and1440 = and i32 %960, 255, !dbg !13669
  %shl1441 = shl i32 %and1440, 24, !dbg !13669
  %961 = load i8*, i8** %ctx, align 8, !dbg !13669
  %962 = bitcast i8* %961 to i32*, !dbg !13669
  %add.ptr1442 = getelementptr i32, i32* %962, i64 17, !dbg !13669
  %963 = load i32, i32* %add.ptr1442, align 4, !dbg !13669
  %and1443 = and i32 %963, 65280, !dbg !13669
  %shl1444 = shl i32 %and1443, 8, !dbg !13669
  %or1445 = or i32 %shl1441, %shl1444, !dbg !13669
  %964 = load i8*, i8** %ctx, align 8, !dbg !13669
  %965 = bitcast i8* %964 to i32*, !dbg !13669
  %add.ptr1446 = getelementptr i32, i32* %965, i64 17, !dbg !13669
  %966 = load i32, i32* %add.ptr1446, align 4, !dbg !13669
  %and1447 = and i32 %966, 16711680, !dbg !13669
  %shr1448 = lshr i32 %and1447, 8, !dbg !13669
  %or1449 = or i32 %or1445, %shr1448, !dbg !13669
  %967 = load i8*, i8** %ctx, align 8, !dbg !13669
  %968 = bitcast i8* %967 to i32*, !dbg !13669
  %add.ptr1450 = getelementptr i32, i32* %968, i64 17, !dbg !13669
  %969 = load i32, i32* %add.ptr1450, align 4, !dbg !13669
  %and1451 = and i32 %969, -16777216, !dbg !13669
  %shr1452 = lshr i32 %and1451, 24, !dbg !13669
  %or1453 = or i32 %or1449, %shr1452, !dbg !13669
  br label %cond.end1457, !dbg !13669

cond.false1454:                                   ; preds = %do.end1436
  %970 = load i8*, i8** %ctx, align 8, !dbg !13669
  %971 = bitcast i8* %970 to i32*, !dbg !13669
  %add.ptr1455 = getelementptr i32, i32* %971, i64 17, !dbg !13669
  %972 = load i32, i32* %add.ptr1455, align 4, !dbg !13669
  %call1456 = call i32 @__fswab32(i32 %972) #8, !dbg !13669
  br label %cond.end1457, !dbg !13669

cond.end1457:                                     ; preds = %cond.false1454, %cond.true1438
  %cond1458 = phi i32 [ %or1453, %cond.true1438 ], [ %call1456, %cond.false1454 ], !dbg !13669
  %and1459 = and i32 %cond1458, 0, !dbg !13669
  %973 = load i32, i32* %_v1434, align 4, !dbg !13669
  %shl1460 = shl i32 %973, 0, !dbg !13669
  %or1461 = or i32 %and1459, %shl1460, !dbg !13669
  %974 = call i1 @llvm.is.constant.i32(i32 %or1461), !dbg !13669
  br i1 %974, label %cond.true1462, label %cond.false1574, !dbg !13669

cond.true1462:                                    ; preds = %cond.end1457
  %975 = load i8*, i8** %ctx, align 8, !dbg !13669
  %976 = bitcast i8* %975 to i32*, !dbg !13669
  %add.ptr1463 = getelementptr i32, i32* %976, i64 17, !dbg !13669
  %977 = load i32, i32* %add.ptr1463, align 4, !dbg !13669
  %978 = call i1 @llvm.is.constant.i32(i32 %977), !dbg !13669
  br i1 %978, label %cond.true1464, label %cond.false1480, !dbg !13669

cond.true1464:                                    ; preds = %cond.true1462
  %979 = load i8*, i8** %ctx, align 8, !dbg !13669
  %980 = bitcast i8* %979 to i32*, !dbg !13669
  %add.ptr1465 = getelementptr i32, i32* %980, i64 17, !dbg !13669
  %981 = load i32, i32* %add.ptr1465, align 4, !dbg !13669
  %and1466 = and i32 %981, 255, !dbg !13669
  %shl1467 = shl i32 %and1466, 24, !dbg !13669
  %982 = load i8*, i8** %ctx, align 8, !dbg !13669
  %983 = bitcast i8* %982 to i32*, !dbg !13669
  %add.ptr1468 = getelementptr i32, i32* %983, i64 17, !dbg !13669
  %984 = load i32, i32* %add.ptr1468, align 4, !dbg !13669
  %and1469 = and i32 %984, 65280, !dbg !13669
  %shl1470 = shl i32 %and1469, 8, !dbg !13669
  %or1471 = or i32 %shl1467, %shl1470, !dbg !13669
  %985 = load i8*, i8** %ctx, align 8, !dbg !13669
  %986 = bitcast i8* %985 to i32*, !dbg !13669
  %add.ptr1472 = getelementptr i32, i32* %986, i64 17, !dbg !13669
  %987 = load i32, i32* %add.ptr1472, align 4, !dbg !13669
  %and1473 = and i32 %987, 16711680, !dbg !13669
  %shr1474 = lshr i32 %and1473, 8, !dbg !13669
  %or1475 = or i32 %or1471, %shr1474, !dbg !13669
  %988 = load i8*, i8** %ctx, align 8, !dbg !13669
  %989 = bitcast i8* %988 to i32*, !dbg !13669
  %add.ptr1476 = getelementptr i32, i32* %989, i64 17, !dbg !13669
  %990 = load i32, i32* %add.ptr1476, align 4, !dbg !13669
  %and1477 = and i32 %990, -16777216, !dbg !13669
  %shr1478 = lshr i32 %and1477, 24, !dbg !13669
  %or1479 = or i32 %or1475, %shr1478, !dbg !13669
  br label %cond.end1483, !dbg !13669

cond.false1480:                                   ; preds = %cond.true1462
  %991 = load i8*, i8** %ctx, align 8, !dbg !13669
  %992 = bitcast i8* %991 to i32*, !dbg !13669
  %add.ptr1481 = getelementptr i32, i32* %992, i64 17, !dbg !13669
  %993 = load i32, i32* %add.ptr1481, align 4, !dbg !13669
  %call1482 = call i32 @__fswab32(i32 %993) #8, !dbg !13669
  br label %cond.end1483, !dbg !13669

cond.end1483:                                     ; preds = %cond.false1480, %cond.true1464
  %cond1484 = phi i32 [ %or1479, %cond.true1464 ], [ %call1482, %cond.false1480 ], !dbg !13669
  %and1485 = and i32 %cond1484, 0, !dbg !13669
  %994 = load i32, i32* %_v1434, align 4, !dbg !13669
  %shl1486 = shl i32 %994, 0, !dbg !13669
  %or1487 = or i32 %and1485, %shl1486, !dbg !13669
  %and1488 = and i32 %or1487, 255, !dbg !13669
  %shl1489 = shl i32 %and1488, 24, !dbg !13669
  %995 = load i8*, i8** %ctx, align 8, !dbg !13669
  %996 = bitcast i8* %995 to i32*, !dbg !13669
  %add.ptr1490 = getelementptr i32, i32* %996, i64 17, !dbg !13669
  %997 = load i32, i32* %add.ptr1490, align 4, !dbg !13669
  %998 = call i1 @llvm.is.constant.i32(i32 %997), !dbg !13669
  br i1 %998, label %cond.true1491, label %cond.false1507, !dbg !13669

cond.true1491:                                    ; preds = %cond.end1483
  %999 = load i8*, i8** %ctx, align 8, !dbg !13669
  %1000 = bitcast i8* %999 to i32*, !dbg !13669
  %add.ptr1492 = getelementptr i32, i32* %1000, i64 17, !dbg !13669
  %1001 = load i32, i32* %add.ptr1492, align 4, !dbg !13669
  %and1493 = and i32 %1001, 255, !dbg !13669
  %shl1494 = shl i32 %and1493, 24, !dbg !13669
  %1002 = load i8*, i8** %ctx, align 8, !dbg !13669
  %1003 = bitcast i8* %1002 to i32*, !dbg !13669
  %add.ptr1495 = getelementptr i32, i32* %1003, i64 17, !dbg !13669
  %1004 = load i32, i32* %add.ptr1495, align 4, !dbg !13669
  %and1496 = and i32 %1004, 65280, !dbg !13669
  %shl1497 = shl i32 %and1496, 8, !dbg !13669
  %or1498 = or i32 %shl1494, %shl1497, !dbg !13669
  %1005 = load i8*, i8** %ctx, align 8, !dbg !13669
  %1006 = bitcast i8* %1005 to i32*, !dbg !13669
  %add.ptr1499 = getelementptr i32, i32* %1006, i64 17, !dbg !13669
  %1007 = load i32, i32* %add.ptr1499, align 4, !dbg !13669
  %and1500 = and i32 %1007, 16711680, !dbg !13669
  %shr1501 = lshr i32 %and1500, 8, !dbg !13669
  %or1502 = or i32 %or1498, %shr1501, !dbg !13669
  %1008 = load i8*, i8** %ctx, align 8, !dbg !13669
  %1009 = bitcast i8* %1008 to i32*, !dbg !13669
  %add.ptr1503 = getelementptr i32, i32* %1009, i64 17, !dbg !13669
  %1010 = load i32, i32* %add.ptr1503, align 4, !dbg !13669
  %and1504 = and i32 %1010, -16777216, !dbg !13669
  %shr1505 = lshr i32 %and1504, 24, !dbg !13669
  %or1506 = or i32 %or1502, %shr1505, !dbg !13669
  br label %cond.end1510, !dbg !13669

cond.false1507:                                   ; preds = %cond.end1483
  %1011 = load i8*, i8** %ctx, align 8, !dbg !13669
  %1012 = bitcast i8* %1011 to i32*, !dbg !13669
  %add.ptr1508 = getelementptr i32, i32* %1012, i64 17, !dbg !13669
  %1013 = load i32, i32* %add.ptr1508, align 4, !dbg !13669
  %call1509 = call i32 @__fswab32(i32 %1013) #8, !dbg !13669
  br label %cond.end1510, !dbg !13669

cond.end1510:                                     ; preds = %cond.false1507, %cond.true1491
  %cond1511 = phi i32 [ %or1506, %cond.true1491 ], [ %call1509, %cond.false1507 ], !dbg !13669
  %and1512 = and i32 %cond1511, 0, !dbg !13669
  %1014 = load i32, i32* %_v1434, align 4, !dbg !13669
  %shl1513 = shl i32 %1014, 0, !dbg !13669
  %or1514 = or i32 %and1512, %shl1513, !dbg !13669
  %and1515 = and i32 %or1514, 65280, !dbg !13669
  %shl1516 = shl i32 %and1515, 8, !dbg !13669
  %or1517 = or i32 %shl1489, %shl1516, !dbg !13669
  %1015 = load i8*, i8** %ctx, align 8, !dbg !13669
  %1016 = bitcast i8* %1015 to i32*, !dbg !13669
  %add.ptr1518 = getelementptr i32, i32* %1016, i64 17, !dbg !13669
  %1017 = load i32, i32* %add.ptr1518, align 4, !dbg !13669
  %1018 = call i1 @llvm.is.constant.i32(i32 %1017), !dbg !13669
  br i1 %1018, label %cond.true1519, label %cond.false1535, !dbg !13669

cond.true1519:                                    ; preds = %cond.end1510
  %1019 = load i8*, i8** %ctx, align 8, !dbg !13669
  %1020 = bitcast i8* %1019 to i32*, !dbg !13669
  %add.ptr1520 = getelementptr i32, i32* %1020, i64 17, !dbg !13669
  %1021 = load i32, i32* %add.ptr1520, align 4, !dbg !13669
  %and1521 = and i32 %1021, 255, !dbg !13669
  %shl1522 = shl i32 %and1521, 24, !dbg !13669
  %1022 = load i8*, i8** %ctx, align 8, !dbg !13669
  %1023 = bitcast i8* %1022 to i32*, !dbg !13669
  %add.ptr1523 = getelementptr i32, i32* %1023, i64 17, !dbg !13669
  %1024 = load i32, i32* %add.ptr1523, align 4, !dbg !13669
  %and1524 = and i32 %1024, 65280, !dbg !13669
  %shl1525 = shl i32 %and1524, 8, !dbg !13669
  %or1526 = or i32 %shl1522, %shl1525, !dbg !13669
  %1025 = load i8*, i8** %ctx, align 8, !dbg !13669
  %1026 = bitcast i8* %1025 to i32*, !dbg !13669
  %add.ptr1527 = getelementptr i32, i32* %1026, i64 17, !dbg !13669
  %1027 = load i32, i32* %add.ptr1527, align 4, !dbg !13669
  %and1528 = and i32 %1027, 16711680, !dbg !13669
  %shr1529 = lshr i32 %and1528, 8, !dbg !13669
  %or1530 = or i32 %or1526, %shr1529, !dbg !13669
  %1028 = load i8*, i8** %ctx, align 8, !dbg !13669
  %1029 = bitcast i8* %1028 to i32*, !dbg !13669
  %add.ptr1531 = getelementptr i32, i32* %1029, i64 17, !dbg !13669
  %1030 = load i32, i32* %add.ptr1531, align 4, !dbg !13669
  %and1532 = and i32 %1030, -16777216, !dbg !13669
  %shr1533 = lshr i32 %and1532, 24, !dbg !13669
  %or1534 = or i32 %or1530, %shr1533, !dbg !13669
  br label %cond.end1538, !dbg !13669

cond.false1535:                                   ; preds = %cond.end1510
  %1031 = load i8*, i8** %ctx, align 8, !dbg !13669
  %1032 = bitcast i8* %1031 to i32*, !dbg !13669
  %add.ptr1536 = getelementptr i32, i32* %1032, i64 17, !dbg !13669
  %1033 = load i32, i32* %add.ptr1536, align 4, !dbg !13669
  %call1537 = call i32 @__fswab32(i32 %1033) #8, !dbg !13669
  br label %cond.end1538, !dbg !13669

cond.end1538:                                     ; preds = %cond.false1535, %cond.true1519
  %cond1539 = phi i32 [ %or1534, %cond.true1519 ], [ %call1537, %cond.false1535 ], !dbg !13669
  %and1540 = and i32 %cond1539, 0, !dbg !13669
  %1034 = load i32, i32* %_v1434, align 4, !dbg !13669
  %shl1541 = shl i32 %1034, 0, !dbg !13669
  %or1542 = or i32 %and1540, %shl1541, !dbg !13669
  %and1543 = and i32 %or1542, 16711680, !dbg !13669
  %shr1544 = lshr i32 %and1543, 8, !dbg !13669
  %or1545 = or i32 %or1517, %shr1544, !dbg !13669
  %1035 = load i8*, i8** %ctx, align 8, !dbg !13669
  %1036 = bitcast i8* %1035 to i32*, !dbg !13669
  %add.ptr1546 = getelementptr i32, i32* %1036, i64 17, !dbg !13669
  %1037 = load i32, i32* %add.ptr1546, align 4, !dbg !13669
  %1038 = call i1 @llvm.is.constant.i32(i32 %1037), !dbg !13669
  br i1 %1038, label %cond.true1547, label %cond.false1563, !dbg !13669

cond.true1547:                                    ; preds = %cond.end1538
  %1039 = load i8*, i8** %ctx, align 8, !dbg !13669
  %1040 = bitcast i8* %1039 to i32*, !dbg !13669
  %add.ptr1548 = getelementptr i32, i32* %1040, i64 17, !dbg !13669
  %1041 = load i32, i32* %add.ptr1548, align 4, !dbg !13669
  %and1549 = and i32 %1041, 255, !dbg !13669
  %shl1550 = shl i32 %and1549, 24, !dbg !13669
  %1042 = load i8*, i8** %ctx, align 8, !dbg !13669
  %1043 = bitcast i8* %1042 to i32*, !dbg !13669
  %add.ptr1551 = getelementptr i32, i32* %1043, i64 17, !dbg !13669
  %1044 = load i32, i32* %add.ptr1551, align 4, !dbg !13669
  %and1552 = and i32 %1044, 65280, !dbg !13669
  %shl1553 = shl i32 %and1552, 8, !dbg !13669
  %or1554 = or i32 %shl1550, %shl1553, !dbg !13669
  %1045 = load i8*, i8** %ctx, align 8, !dbg !13669
  %1046 = bitcast i8* %1045 to i32*, !dbg !13669
  %add.ptr1555 = getelementptr i32, i32* %1046, i64 17, !dbg !13669
  %1047 = load i32, i32* %add.ptr1555, align 4, !dbg !13669
  %and1556 = and i32 %1047, 16711680, !dbg !13669
  %shr1557 = lshr i32 %and1556, 8, !dbg !13669
  %or1558 = or i32 %or1554, %shr1557, !dbg !13669
  %1048 = load i8*, i8** %ctx, align 8, !dbg !13669
  %1049 = bitcast i8* %1048 to i32*, !dbg !13669
  %add.ptr1559 = getelementptr i32, i32* %1049, i64 17, !dbg !13669
  %1050 = load i32, i32* %add.ptr1559, align 4, !dbg !13669
  %and1560 = and i32 %1050, -16777216, !dbg !13669
  %shr1561 = lshr i32 %and1560, 24, !dbg !13669
  %or1562 = or i32 %or1558, %shr1561, !dbg !13669
  br label %cond.end1566, !dbg !13669

cond.false1563:                                   ; preds = %cond.end1538
  %1051 = load i8*, i8** %ctx, align 8, !dbg !13669
  %1052 = bitcast i8* %1051 to i32*, !dbg !13669
  %add.ptr1564 = getelementptr i32, i32* %1052, i64 17, !dbg !13669
  %1053 = load i32, i32* %add.ptr1564, align 4, !dbg !13669
  %call1565 = call i32 @__fswab32(i32 %1053) #8, !dbg !13669
  br label %cond.end1566, !dbg !13669

cond.end1566:                                     ; preds = %cond.false1563, %cond.true1547
  %cond1567 = phi i32 [ %or1562, %cond.true1547 ], [ %call1565, %cond.false1563 ], !dbg !13669
  %and1568 = and i32 %cond1567, 0, !dbg !13669
  %1054 = load i32, i32* %_v1434, align 4, !dbg !13669
  %shl1569 = shl i32 %1054, 0, !dbg !13669
  %or1570 = or i32 %and1568, %shl1569, !dbg !13669
  %and1571 = and i32 %or1570, -16777216, !dbg !13669
  %shr1572 = lshr i32 %and1571, 24, !dbg !13669
  %or1573 = or i32 %or1545, %shr1572, !dbg !13669
  br label %cond.end1601, !dbg !13669

cond.false1574:                                   ; preds = %cond.end1457
  %1055 = load i8*, i8** %ctx, align 8, !dbg !13669
  %1056 = bitcast i8* %1055 to i32*, !dbg !13669
  %add.ptr1575 = getelementptr i32, i32* %1056, i64 17, !dbg !13669
  %1057 = load i32, i32* %add.ptr1575, align 4, !dbg !13669
  %1058 = call i1 @llvm.is.constant.i32(i32 %1057), !dbg !13669
  br i1 %1058, label %cond.true1576, label %cond.false1592, !dbg !13669

cond.true1576:                                    ; preds = %cond.false1574
  %1059 = load i8*, i8** %ctx, align 8, !dbg !13669
  %1060 = bitcast i8* %1059 to i32*, !dbg !13669
  %add.ptr1577 = getelementptr i32, i32* %1060, i64 17, !dbg !13669
  %1061 = load i32, i32* %add.ptr1577, align 4, !dbg !13669
  %and1578 = and i32 %1061, 255, !dbg !13669
  %shl1579 = shl i32 %and1578, 24, !dbg !13669
  %1062 = load i8*, i8** %ctx, align 8, !dbg !13669
  %1063 = bitcast i8* %1062 to i32*, !dbg !13669
  %add.ptr1580 = getelementptr i32, i32* %1063, i64 17, !dbg !13669
  %1064 = load i32, i32* %add.ptr1580, align 4, !dbg !13669
  %and1581 = and i32 %1064, 65280, !dbg !13669
  %shl1582 = shl i32 %and1581, 8, !dbg !13669
  %or1583 = or i32 %shl1579, %shl1582, !dbg !13669
  %1065 = load i8*, i8** %ctx, align 8, !dbg !13669
  %1066 = bitcast i8* %1065 to i32*, !dbg !13669
  %add.ptr1584 = getelementptr i32, i32* %1066, i64 17, !dbg !13669
  %1067 = load i32, i32* %add.ptr1584, align 4, !dbg !13669
  %and1585 = and i32 %1067, 16711680, !dbg !13669
  %shr1586 = lshr i32 %and1585, 8, !dbg !13669
  %or1587 = or i32 %or1583, %shr1586, !dbg !13669
  %1068 = load i8*, i8** %ctx, align 8, !dbg !13669
  %1069 = bitcast i8* %1068 to i32*, !dbg !13669
  %add.ptr1588 = getelementptr i32, i32* %1069, i64 17, !dbg !13669
  %1070 = load i32, i32* %add.ptr1588, align 4, !dbg !13669
  %and1589 = and i32 %1070, -16777216, !dbg !13669
  %shr1590 = lshr i32 %and1589, 24, !dbg !13669
  %or1591 = or i32 %or1587, %shr1590, !dbg !13669
  br label %cond.end1595, !dbg !13669

cond.false1592:                                   ; preds = %cond.false1574
  %1071 = load i8*, i8** %ctx, align 8, !dbg !13669
  %1072 = bitcast i8* %1071 to i32*, !dbg !13669
  %add.ptr1593 = getelementptr i32, i32* %1072, i64 17, !dbg !13669
  %1073 = load i32, i32* %add.ptr1593, align 4, !dbg !13669
  %call1594 = call i32 @__fswab32(i32 %1073) #8, !dbg !13669
  br label %cond.end1595, !dbg !13669

cond.end1595:                                     ; preds = %cond.false1592, %cond.true1576
  %cond1596 = phi i32 [ %or1591, %cond.true1576 ], [ %call1594, %cond.false1592 ], !dbg !13669
  %and1597 = and i32 %cond1596, 0, !dbg !13669
  %1074 = load i32, i32* %_v1434, align 4, !dbg !13669
  %shl1598 = shl i32 %1074, 0, !dbg !13669
  %or1599 = or i32 %and1597, %shl1598, !dbg !13669
  %call1600 = call i32 @__fswab32(i32 %or1599) #8, !dbg !13669
  br label %cond.end1601, !dbg !13669

cond.end1601:                                     ; preds = %cond.end1595, %cond.end1566
  %cond1602 = phi i32 [ %or1573, %cond.end1566 ], [ %call1600, %cond.end1595 ], !dbg !13669
  %1075 = load i8*, i8** %ctx, align 8, !dbg !13669
  %1076 = bitcast i8* %1075 to i32*, !dbg !13669
  %add.ptr1603 = getelementptr i32, i32* %1076, i64 17, !dbg !13669
  store i32 %cond1602, i32* %add.ptr1603, align 4, !dbg !13669
  br label %do.end1604, !dbg !13669

do.end1604:                                       ; preds = %cond.end1601
  call void @llvm.dbg.declare(metadata [4 x i32]* %_out, metadata !13672, metadata !DIExpression()), !dbg !13674
  %1077 = bitcast [4 x i32]* %_out to i8*, !dbg !13674
  call void @llvm.memset.p0i8.i64(i8* align 16 %1077, i8 0, i64 16, i1 false), !dbg !13674
  %1078 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !13675
  %1079 = load i8*, i8** %in, align 8, !dbg !13675
  %arraydecay1606 = getelementptr inbounds [4 x i32], [4 x i32]* %_out, i64 0, i64 0, !dbg !13675
  %1080 = bitcast i32* %arraydecay1606 to i8*, !dbg !13675
  %call1607 = call i32 @mlx5_cmd_exec(%struct.mlx5_core_dev* %1078, i8* %1079, i32 528, i8* %1080, i32 16) #9, !dbg !13675
  store i32 %call1607, i32* %tmp1605, align 4, !dbg !13674
  %1081 = load i32, i32* %tmp1605, align 4, !dbg !13675
  store i32 %1081, i32* %tmp, align 4, !dbg !13674
  %1082 = load i32, i32* %tmp, align 4, !dbg !13674
  store i32 %1082, i32* %err, align 4, !dbg !13677
  br label %ex, !dbg !13678

ex:                                               ; preds = %do.end1604, %if.else
  call void @llvm.dbg.label(metadata !13679), !dbg !13680
  %1083 = load i8*, i8** %in, align 8, !dbg !13681
  call void @kfree(i8* %1083) #9, !dbg !13682
  %1084 = load i32, i32* %err, align 4, !dbg !13683
  store i32 %1084, i32* %retval, align 4, !dbg !13684
  br label %return, !dbg !13684

return:                                           ; preds = %ex, %if.then
  %1085 = load i32, i32* %retval, align 4, !dbg !13685
  ret i32 %1085, !dbg !13685
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @mlx5_nic_vport_affiliate_multiport(%struct.mlx5_core_dev* %master_mdev, %struct.mlx5_core_dev* %port_mdev) #0 !dbg !13686 {
entry:
  %retval = alloca i32, align 4
  %master_mdev.addr = alloca %struct.mlx5_core_dev*, align 8
  %port_mdev.addr = alloca %struct.mlx5_core_dev*, align 8
  %inlen = alloca i32, align 4
  %in = alloca i8*, align 8
  %err = alloca i32, align 4
  %_v = alloca i32, align 4
  %_v172 = alloca i32, align 4
  %_v394 = alloca i32, align 4
  %_v620 = alloca i32, align 4
  %_out = alloca [4 x i32], align 16
  %tmp = alloca i32, align 4
  %tmp797 = alloca i32, align 4
  store %struct.mlx5_core_dev* %master_mdev, %struct.mlx5_core_dev** %master_mdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_core_dev** %master_mdev.addr, metadata !13689, metadata !DIExpression()), !dbg !13690
  store %struct.mlx5_core_dev* %port_mdev, %struct.mlx5_core_dev** %port_mdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_core_dev** %port_mdev.addr, metadata !13691, metadata !DIExpression()), !dbg !13692
  call void @llvm.dbg.declare(metadata i32* %inlen, metadata !13693, metadata !DIExpression()), !dbg !13694
  store i32 512, i32* %inlen, align 4, !dbg !13694
  call void @llvm.dbg.declare(metadata i8** %in, metadata !13695, metadata !DIExpression()), !dbg !13696
  call void @llvm.dbg.declare(metadata i32* %err, metadata !13697, metadata !DIExpression()), !dbg !13698
  %0 = load i32, i32* %inlen, align 4, !dbg !13699
  %conv = sext i32 %0 to i64, !dbg !13699
  %call = call i8* @kvzalloc(i64 %conv, i32 3264) #9, !dbg !13700
  store i8* %call, i8** %in, align 8, !dbg !13701
  %1 = load i8*, i8** %in, align 8, !dbg !13702
  %tobool = icmp ne i8* %1, null, !dbg !13702
  br i1 %tobool, label %if.end, label %if.then, !dbg !13704

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !13705
  br label %return, !dbg !13705

if.end:                                           ; preds = %entry
  %2 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %port_mdev.addr, align 8, !dbg !13706
  %call1 = call i32 @mlx5_nic_vport_enable_roce(%struct.mlx5_core_dev* %2) #9, !dbg !13707
  store i32 %call1, i32* %err, align 4, !dbg !13708
  %3 = load i32, i32* %err, align 4, !dbg !13709
  %tobool2 = icmp ne i32 %3, 0, !dbg !13709
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !13711

if.then3:                                         ; preds = %if.end
  br label %free, !dbg !13712

if.end4:                                          ; preds = %if.end
  br label %do.body, !dbg !13713

do.body:                                          ; preds = %if.end4
  call void @llvm.dbg.declare(metadata i32* %_v, metadata !13714, metadata !DIExpression()), !dbg !13716
  store i32 1, i32* %_v, align 4, !dbg !13716
  br label %do.body5, !dbg !13716

do.body5:                                         ; preds = %do.body
  br label %do.end, !dbg !13717

do.end:                                           ; preds = %do.body5
  %4 = load i8*, i8** %in, align 8, !dbg !13716
  %5 = bitcast i8* %4 to i32*, !dbg !13716
  %add.ptr = getelementptr i32, i32* %5, i64 3, !dbg !13716
  %6 = load i32, i32* %add.ptr, align 4, !dbg !13716
  %7 = call i1 @llvm.is.constant.i32(i32 %6), !dbg !13716
  br i1 %7, label %cond.true, label %cond.false, !dbg !13716

cond.true:                                        ; preds = %do.end
  %8 = load i8*, i8** %in, align 8, !dbg !13716
  %9 = bitcast i8* %8 to i32*, !dbg !13716
  %add.ptr6 = getelementptr i32, i32* %9, i64 3, !dbg !13716
  %10 = load i32, i32* %add.ptr6, align 4, !dbg !13716
  %and = and i32 %10, 255, !dbg !13716
  %shl = shl i32 %and, 24, !dbg !13716
  %11 = load i8*, i8** %in, align 8, !dbg !13716
  %12 = bitcast i8* %11 to i32*, !dbg !13716
  %add.ptr7 = getelementptr i32, i32* %12, i64 3, !dbg !13716
  %13 = load i32, i32* %add.ptr7, align 4, !dbg !13716
  %and8 = and i32 %13, 65280, !dbg !13716
  %shl9 = shl i32 %and8, 8, !dbg !13716
  %or = or i32 %shl, %shl9, !dbg !13716
  %14 = load i8*, i8** %in, align 8, !dbg !13716
  %15 = bitcast i8* %14 to i32*, !dbg !13716
  %add.ptr10 = getelementptr i32, i32* %15, i64 3, !dbg !13716
  %16 = load i32, i32* %add.ptr10, align 4, !dbg !13716
  %and11 = and i32 %16, 16711680, !dbg !13716
  %shr = lshr i32 %and11, 8, !dbg !13716
  %or12 = or i32 %or, %shr, !dbg !13716
  %17 = load i8*, i8** %in, align 8, !dbg !13716
  %18 = bitcast i8* %17 to i32*, !dbg !13716
  %add.ptr13 = getelementptr i32, i32* %18, i64 3, !dbg !13716
  %19 = load i32, i32* %add.ptr13, align 4, !dbg !13716
  %and14 = and i32 %19, -16777216, !dbg !13716
  %shr15 = lshr i32 %and14, 24, !dbg !13716
  %or16 = or i32 %or12, %shr15, !dbg !13716
  br label %cond.end, !dbg !13716

cond.false:                                       ; preds = %do.end
  %20 = load i8*, i8** %in, align 8, !dbg !13716
  %21 = bitcast i8* %20 to i32*, !dbg !13716
  %add.ptr17 = getelementptr i32, i32* %21, i64 3, !dbg !13716
  %22 = load i32, i32* %add.ptr17, align 4, !dbg !13716
  %call18 = call i32 @__fswab32(i32 %22) #8, !dbg !13716
  br label %cond.end, !dbg !13716

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %or16, %cond.true ], [ %call18, %cond.false ], !dbg !13716
  %and19 = and i32 %cond, -8193, !dbg !13716
  %23 = load i32, i32* %_v, align 4, !dbg !13716
  %and20 = and i32 %23, 1, !dbg !13716
  %shl21 = shl i32 %and20, 13, !dbg !13716
  %or22 = or i32 %and19, %shl21, !dbg !13716
  %24 = call i1 @llvm.is.constant.i32(i32 %or22), !dbg !13716
  br i1 %24, label %cond.true23, label %cond.false139, !dbg !13716

cond.true23:                                      ; preds = %cond.end
  %25 = load i8*, i8** %in, align 8, !dbg !13716
  %26 = bitcast i8* %25 to i32*, !dbg !13716
  %add.ptr24 = getelementptr i32, i32* %26, i64 3, !dbg !13716
  %27 = load i32, i32* %add.ptr24, align 4, !dbg !13716
  %28 = call i1 @llvm.is.constant.i32(i32 %27), !dbg !13716
  br i1 %28, label %cond.true25, label %cond.false41, !dbg !13716

cond.true25:                                      ; preds = %cond.true23
  %29 = load i8*, i8** %in, align 8, !dbg !13716
  %30 = bitcast i8* %29 to i32*, !dbg !13716
  %add.ptr26 = getelementptr i32, i32* %30, i64 3, !dbg !13716
  %31 = load i32, i32* %add.ptr26, align 4, !dbg !13716
  %and27 = and i32 %31, 255, !dbg !13716
  %shl28 = shl i32 %and27, 24, !dbg !13716
  %32 = load i8*, i8** %in, align 8, !dbg !13716
  %33 = bitcast i8* %32 to i32*, !dbg !13716
  %add.ptr29 = getelementptr i32, i32* %33, i64 3, !dbg !13716
  %34 = load i32, i32* %add.ptr29, align 4, !dbg !13716
  %and30 = and i32 %34, 65280, !dbg !13716
  %shl31 = shl i32 %and30, 8, !dbg !13716
  %or32 = or i32 %shl28, %shl31, !dbg !13716
  %35 = load i8*, i8** %in, align 8, !dbg !13716
  %36 = bitcast i8* %35 to i32*, !dbg !13716
  %add.ptr33 = getelementptr i32, i32* %36, i64 3, !dbg !13716
  %37 = load i32, i32* %add.ptr33, align 4, !dbg !13716
  %and34 = and i32 %37, 16711680, !dbg !13716
  %shr35 = lshr i32 %and34, 8, !dbg !13716
  %or36 = or i32 %or32, %shr35, !dbg !13716
  %38 = load i8*, i8** %in, align 8, !dbg !13716
  %39 = bitcast i8* %38 to i32*, !dbg !13716
  %add.ptr37 = getelementptr i32, i32* %39, i64 3, !dbg !13716
  %40 = load i32, i32* %add.ptr37, align 4, !dbg !13716
  %and38 = and i32 %40, -16777216, !dbg !13716
  %shr39 = lshr i32 %and38, 24, !dbg !13716
  %or40 = or i32 %or36, %shr39, !dbg !13716
  br label %cond.end44, !dbg !13716

cond.false41:                                     ; preds = %cond.true23
  %41 = load i8*, i8** %in, align 8, !dbg !13716
  %42 = bitcast i8* %41 to i32*, !dbg !13716
  %add.ptr42 = getelementptr i32, i32* %42, i64 3, !dbg !13716
  %43 = load i32, i32* %add.ptr42, align 4, !dbg !13716
  %call43 = call i32 @__fswab32(i32 %43) #8, !dbg !13716
  br label %cond.end44, !dbg !13716

cond.end44:                                       ; preds = %cond.false41, %cond.true25
  %cond45 = phi i32 [ %or40, %cond.true25 ], [ %call43, %cond.false41 ], !dbg !13716
  %and46 = and i32 %cond45, -8193, !dbg !13716
  %44 = load i32, i32* %_v, align 4, !dbg !13716
  %and47 = and i32 %44, 1, !dbg !13716
  %shl48 = shl i32 %and47, 13, !dbg !13716
  %or49 = or i32 %and46, %shl48, !dbg !13716
  %and50 = and i32 %or49, 255, !dbg !13716
  %shl51 = shl i32 %and50, 24, !dbg !13716
  %45 = load i8*, i8** %in, align 8, !dbg !13716
  %46 = bitcast i8* %45 to i32*, !dbg !13716
  %add.ptr52 = getelementptr i32, i32* %46, i64 3, !dbg !13716
  %47 = load i32, i32* %add.ptr52, align 4, !dbg !13716
  %48 = call i1 @llvm.is.constant.i32(i32 %47), !dbg !13716
  br i1 %48, label %cond.true53, label %cond.false69, !dbg !13716

cond.true53:                                      ; preds = %cond.end44
  %49 = load i8*, i8** %in, align 8, !dbg !13716
  %50 = bitcast i8* %49 to i32*, !dbg !13716
  %add.ptr54 = getelementptr i32, i32* %50, i64 3, !dbg !13716
  %51 = load i32, i32* %add.ptr54, align 4, !dbg !13716
  %and55 = and i32 %51, 255, !dbg !13716
  %shl56 = shl i32 %and55, 24, !dbg !13716
  %52 = load i8*, i8** %in, align 8, !dbg !13716
  %53 = bitcast i8* %52 to i32*, !dbg !13716
  %add.ptr57 = getelementptr i32, i32* %53, i64 3, !dbg !13716
  %54 = load i32, i32* %add.ptr57, align 4, !dbg !13716
  %and58 = and i32 %54, 65280, !dbg !13716
  %shl59 = shl i32 %and58, 8, !dbg !13716
  %or60 = or i32 %shl56, %shl59, !dbg !13716
  %55 = load i8*, i8** %in, align 8, !dbg !13716
  %56 = bitcast i8* %55 to i32*, !dbg !13716
  %add.ptr61 = getelementptr i32, i32* %56, i64 3, !dbg !13716
  %57 = load i32, i32* %add.ptr61, align 4, !dbg !13716
  %and62 = and i32 %57, 16711680, !dbg !13716
  %shr63 = lshr i32 %and62, 8, !dbg !13716
  %or64 = or i32 %or60, %shr63, !dbg !13716
  %58 = load i8*, i8** %in, align 8, !dbg !13716
  %59 = bitcast i8* %58 to i32*, !dbg !13716
  %add.ptr65 = getelementptr i32, i32* %59, i64 3, !dbg !13716
  %60 = load i32, i32* %add.ptr65, align 4, !dbg !13716
  %and66 = and i32 %60, -16777216, !dbg !13716
  %shr67 = lshr i32 %and66, 24, !dbg !13716
  %or68 = or i32 %or64, %shr67, !dbg !13716
  br label %cond.end72, !dbg !13716

cond.false69:                                     ; preds = %cond.end44
  %61 = load i8*, i8** %in, align 8, !dbg !13716
  %62 = bitcast i8* %61 to i32*, !dbg !13716
  %add.ptr70 = getelementptr i32, i32* %62, i64 3, !dbg !13716
  %63 = load i32, i32* %add.ptr70, align 4, !dbg !13716
  %call71 = call i32 @__fswab32(i32 %63) #8, !dbg !13716
  br label %cond.end72, !dbg !13716

cond.end72:                                       ; preds = %cond.false69, %cond.true53
  %cond73 = phi i32 [ %or68, %cond.true53 ], [ %call71, %cond.false69 ], !dbg !13716
  %and74 = and i32 %cond73, -8193, !dbg !13716
  %64 = load i32, i32* %_v, align 4, !dbg !13716
  %and75 = and i32 %64, 1, !dbg !13716
  %shl76 = shl i32 %and75, 13, !dbg !13716
  %or77 = or i32 %and74, %shl76, !dbg !13716
  %and78 = and i32 %or77, 65280, !dbg !13716
  %shl79 = shl i32 %and78, 8, !dbg !13716
  %or80 = or i32 %shl51, %shl79, !dbg !13716
  %65 = load i8*, i8** %in, align 8, !dbg !13716
  %66 = bitcast i8* %65 to i32*, !dbg !13716
  %add.ptr81 = getelementptr i32, i32* %66, i64 3, !dbg !13716
  %67 = load i32, i32* %add.ptr81, align 4, !dbg !13716
  %68 = call i1 @llvm.is.constant.i32(i32 %67), !dbg !13716
  br i1 %68, label %cond.true82, label %cond.false98, !dbg !13716

cond.true82:                                      ; preds = %cond.end72
  %69 = load i8*, i8** %in, align 8, !dbg !13716
  %70 = bitcast i8* %69 to i32*, !dbg !13716
  %add.ptr83 = getelementptr i32, i32* %70, i64 3, !dbg !13716
  %71 = load i32, i32* %add.ptr83, align 4, !dbg !13716
  %and84 = and i32 %71, 255, !dbg !13716
  %shl85 = shl i32 %and84, 24, !dbg !13716
  %72 = load i8*, i8** %in, align 8, !dbg !13716
  %73 = bitcast i8* %72 to i32*, !dbg !13716
  %add.ptr86 = getelementptr i32, i32* %73, i64 3, !dbg !13716
  %74 = load i32, i32* %add.ptr86, align 4, !dbg !13716
  %and87 = and i32 %74, 65280, !dbg !13716
  %shl88 = shl i32 %and87, 8, !dbg !13716
  %or89 = or i32 %shl85, %shl88, !dbg !13716
  %75 = load i8*, i8** %in, align 8, !dbg !13716
  %76 = bitcast i8* %75 to i32*, !dbg !13716
  %add.ptr90 = getelementptr i32, i32* %76, i64 3, !dbg !13716
  %77 = load i32, i32* %add.ptr90, align 4, !dbg !13716
  %and91 = and i32 %77, 16711680, !dbg !13716
  %shr92 = lshr i32 %and91, 8, !dbg !13716
  %or93 = or i32 %or89, %shr92, !dbg !13716
  %78 = load i8*, i8** %in, align 8, !dbg !13716
  %79 = bitcast i8* %78 to i32*, !dbg !13716
  %add.ptr94 = getelementptr i32, i32* %79, i64 3, !dbg !13716
  %80 = load i32, i32* %add.ptr94, align 4, !dbg !13716
  %and95 = and i32 %80, -16777216, !dbg !13716
  %shr96 = lshr i32 %and95, 24, !dbg !13716
  %or97 = or i32 %or93, %shr96, !dbg !13716
  br label %cond.end101, !dbg !13716

cond.false98:                                     ; preds = %cond.end72
  %81 = load i8*, i8** %in, align 8, !dbg !13716
  %82 = bitcast i8* %81 to i32*, !dbg !13716
  %add.ptr99 = getelementptr i32, i32* %82, i64 3, !dbg !13716
  %83 = load i32, i32* %add.ptr99, align 4, !dbg !13716
  %call100 = call i32 @__fswab32(i32 %83) #8, !dbg !13716
  br label %cond.end101, !dbg !13716

cond.end101:                                      ; preds = %cond.false98, %cond.true82
  %cond102 = phi i32 [ %or97, %cond.true82 ], [ %call100, %cond.false98 ], !dbg !13716
  %and103 = and i32 %cond102, -8193, !dbg !13716
  %84 = load i32, i32* %_v, align 4, !dbg !13716
  %and104 = and i32 %84, 1, !dbg !13716
  %shl105 = shl i32 %and104, 13, !dbg !13716
  %or106 = or i32 %and103, %shl105, !dbg !13716
  %and107 = and i32 %or106, 16711680, !dbg !13716
  %shr108 = lshr i32 %and107, 8, !dbg !13716
  %or109 = or i32 %or80, %shr108, !dbg !13716
  %85 = load i8*, i8** %in, align 8, !dbg !13716
  %86 = bitcast i8* %85 to i32*, !dbg !13716
  %add.ptr110 = getelementptr i32, i32* %86, i64 3, !dbg !13716
  %87 = load i32, i32* %add.ptr110, align 4, !dbg !13716
  %88 = call i1 @llvm.is.constant.i32(i32 %87), !dbg !13716
  br i1 %88, label %cond.true111, label %cond.false127, !dbg !13716

cond.true111:                                     ; preds = %cond.end101
  %89 = load i8*, i8** %in, align 8, !dbg !13716
  %90 = bitcast i8* %89 to i32*, !dbg !13716
  %add.ptr112 = getelementptr i32, i32* %90, i64 3, !dbg !13716
  %91 = load i32, i32* %add.ptr112, align 4, !dbg !13716
  %and113 = and i32 %91, 255, !dbg !13716
  %shl114 = shl i32 %and113, 24, !dbg !13716
  %92 = load i8*, i8** %in, align 8, !dbg !13716
  %93 = bitcast i8* %92 to i32*, !dbg !13716
  %add.ptr115 = getelementptr i32, i32* %93, i64 3, !dbg !13716
  %94 = load i32, i32* %add.ptr115, align 4, !dbg !13716
  %and116 = and i32 %94, 65280, !dbg !13716
  %shl117 = shl i32 %and116, 8, !dbg !13716
  %or118 = or i32 %shl114, %shl117, !dbg !13716
  %95 = load i8*, i8** %in, align 8, !dbg !13716
  %96 = bitcast i8* %95 to i32*, !dbg !13716
  %add.ptr119 = getelementptr i32, i32* %96, i64 3, !dbg !13716
  %97 = load i32, i32* %add.ptr119, align 4, !dbg !13716
  %and120 = and i32 %97, 16711680, !dbg !13716
  %shr121 = lshr i32 %and120, 8, !dbg !13716
  %or122 = or i32 %or118, %shr121, !dbg !13716
  %98 = load i8*, i8** %in, align 8, !dbg !13716
  %99 = bitcast i8* %98 to i32*, !dbg !13716
  %add.ptr123 = getelementptr i32, i32* %99, i64 3, !dbg !13716
  %100 = load i32, i32* %add.ptr123, align 4, !dbg !13716
  %and124 = and i32 %100, -16777216, !dbg !13716
  %shr125 = lshr i32 %and124, 24, !dbg !13716
  %or126 = or i32 %or122, %shr125, !dbg !13716
  br label %cond.end130, !dbg !13716

cond.false127:                                    ; preds = %cond.end101
  %101 = load i8*, i8** %in, align 8, !dbg !13716
  %102 = bitcast i8* %101 to i32*, !dbg !13716
  %add.ptr128 = getelementptr i32, i32* %102, i64 3, !dbg !13716
  %103 = load i32, i32* %add.ptr128, align 4, !dbg !13716
  %call129 = call i32 @__fswab32(i32 %103) #8, !dbg !13716
  br label %cond.end130, !dbg !13716

cond.end130:                                      ; preds = %cond.false127, %cond.true111
  %cond131 = phi i32 [ %or126, %cond.true111 ], [ %call129, %cond.false127 ], !dbg !13716
  %and132 = and i32 %cond131, -8193, !dbg !13716
  %104 = load i32, i32* %_v, align 4, !dbg !13716
  %and133 = and i32 %104, 1, !dbg !13716
  %shl134 = shl i32 %and133, 13, !dbg !13716
  %or135 = or i32 %and132, %shl134, !dbg !13716
  %and136 = and i32 %or135, -16777216, !dbg !13716
  %shr137 = lshr i32 %and136, 24, !dbg !13716
  %or138 = or i32 %or109, %shr137, !dbg !13716
  br label %cond.end167, !dbg !13716

cond.false139:                                    ; preds = %cond.end
  %105 = load i8*, i8** %in, align 8, !dbg !13716
  %106 = bitcast i8* %105 to i32*, !dbg !13716
  %add.ptr140 = getelementptr i32, i32* %106, i64 3, !dbg !13716
  %107 = load i32, i32* %add.ptr140, align 4, !dbg !13716
  %108 = call i1 @llvm.is.constant.i32(i32 %107), !dbg !13716
  br i1 %108, label %cond.true141, label %cond.false157, !dbg !13716

cond.true141:                                     ; preds = %cond.false139
  %109 = load i8*, i8** %in, align 8, !dbg !13716
  %110 = bitcast i8* %109 to i32*, !dbg !13716
  %add.ptr142 = getelementptr i32, i32* %110, i64 3, !dbg !13716
  %111 = load i32, i32* %add.ptr142, align 4, !dbg !13716
  %and143 = and i32 %111, 255, !dbg !13716
  %shl144 = shl i32 %and143, 24, !dbg !13716
  %112 = load i8*, i8** %in, align 8, !dbg !13716
  %113 = bitcast i8* %112 to i32*, !dbg !13716
  %add.ptr145 = getelementptr i32, i32* %113, i64 3, !dbg !13716
  %114 = load i32, i32* %add.ptr145, align 4, !dbg !13716
  %and146 = and i32 %114, 65280, !dbg !13716
  %shl147 = shl i32 %and146, 8, !dbg !13716
  %or148 = or i32 %shl144, %shl147, !dbg !13716
  %115 = load i8*, i8** %in, align 8, !dbg !13716
  %116 = bitcast i8* %115 to i32*, !dbg !13716
  %add.ptr149 = getelementptr i32, i32* %116, i64 3, !dbg !13716
  %117 = load i32, i32* %add.ptr149, align 4, !dbg !13716
  %and150 = and i32 %117, 16711680, !dbg !13716
  %shr151 = lshr i32 %and150, 8, !dbg !13716
  %or152 = or i32 %or148, %shr151, !dbg !13716
  %118 = load i8*, i8** %in, align 8, !dbg !13716
  %119 = bitcast i8* %118 to i32*, !dbg !13716
  %add.ptr153 = getelementptr i32, i32* %119, i64 3, !dbg !13716
  %120 = load i32, i32* %add.ptr153, align 4, !dbg !13716
  %and154 = and i32 %120, -16777216, !dbg !13716
  %shr155 = lshr i32 %and154, 24, !dbg !13716
  %or156 = or i32 %or152, %shr155, !dbg !13716
  br label %cond.end160, !dbg !13716

cond.false157:                                    ; preds = %cond.false139
  %121 = load i8*, i8** %in, align 8, !dbg !13716
  %122 = bitcast i8* %121 to i32*, !dbg !13716
  %add.ptr158 = getelementptr i32, i32* %122, i64 3, !dbg !13716
  %123 = load i32, i32* %add.ptr158, align 4, !dbg !13716
  %call159 = call i32 @__fswab32(i32 %123) #8, !dbg !13716
  br label %cond.end160, !dbg !13716

cond.end160:                                      ; preds = %cond.false157, %cond.true141
  %cond161 = phi i32 [ %or156, %cond.true141 ], [ %call159, %cond.false157 ], !dbg !13716
  %and162 = and i32 %cond161, -8193, !dbg !13716
  %124 = load i32, i32* %_v, align 4, !dbg !13716
  %and163 = and i32 %124, 1, !dbg !13716
  %shl164 = shl i32 %and163, 13, !dbg !13716
  %or165 = or i32 %and162, %shl164, !dbg !13716
  %call166 = call i32 @__fswab32(i32 %or165) #8, !dbg !13716
  br label %cond.end167, !dbg !13716

cond.end167:                                      ; preds = %cond.end160, %cond.end130
  %cond168 = phi i32 [ %or138, %cond.end130 ], [ %call166, %cond.end160 ], !dbg !13716
  %125 = load i8*, i8** %in, align 8, !dbg !13716
  %126 = bitcast i8* %125 to i32*, !dbg !13716
  %add.ptr169 = getelementptr i32, i32* %126, i64 3, !dbg !13716
  store i32 %cond168, i32* %add.ptr169, align 4, !dbg !13716
  br label %do.end170, !dbg !13716

do.end170:                                        ; preds = %cond.end167
  br label %do.body171, !dbg !13719

do.body171:                                       ; preds = %do.end170
  call void @llvm.dbg.declare(metadata i32* %_v172, metadata !13720, metadata !DIExpression()), !dbg !13722
  %127 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %master_mdev.addr, align 8, !dbg !13722
  %caps = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %127, i32 0, i32 9, !dbg !13722
  %hca_cur = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps, i32 0, i32 0, !dbg !13722
  %arrayidx = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur, i64 0, i64 0, !dbg !13722
  %arraydecay = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx, i64 0, i64 0, !dbg !13722
  %add.ptr173 = getelementptr i32, i32* %arraydecay, i64 1, !dbg !13722
  %128 = load i32, i32* %add.ptr173, align 4, !dbg !13722
  %129 = call i1 @llvm.is.constant.i32(i32 %128), !dbg !13722
  br i1 %129, label %cond.true174, label %cond.false206, !dbg !13722

cond.true174:                                     ; preds = %do.body171
  %130 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %master_mdev.addr, align 8, !dbg !13722
  %caps175 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %130, i32 0, i32 9, !dbg !13722
  %hca_cur176 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps175, i32 0, i32 0, !dbg !13722
  %arrayidx177 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur176, i64 0, i64 0, !dbg !13722
  %arraydecay178 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx177, i64 0, i64 0, !dbg !13722
  %add.ptr179 = getelementptr i32, i32* %arraydecay178, i64 1, !dbg !13722
  %131 = load i32, i32* %add.ptr179, align 4, !dbg !13722
  %and180 = and i32 %131, 255, !dbg !13722
  %shl181 = shl i32 %and180, 24, !dbg !13722
  %132 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %master_mdev.addr, align 8, !dbg !13722
  %caps182 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %132, i32 0, i32 9, !dbg !13722
  %hca_cur183 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps182, i32 0, i32 0, !dbg !13722
  %arrayidx184 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur183, i64 0, i64 0, !dbg !13722
  %arraydecay185 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx184, i64 0, i64 0, !dbg !13722
  %add.ptr186 = getelementptr i32, i32* %arraydecay185, i64 1, !dbg !13722
  %133 = load i32, i32* %add.ptr186, align 4, !dbg !13722
  %and187 = and i32 %133, 65280, !dbg !13722
  %shl188 = shl i32 %and187, 8, !dbg !13722
  %or189 = or i32 %shl181, %shl188, !dbg !13722
  %134 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %master_mdev.addr, align 8, !dbg !13722
  %caps190 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %134, i32 0, i32 9, !dbg !13722
  %hca_cur191 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps190, i32 0, i32 0, !dbg !13722
  %arrayidx192 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur191, i64 0, i64 0, !dbg !13722
  %arraydecay193 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx192, i64 0, i64 0, !dbg !13722
  %add.ptr194 = getelementptr i32, i32* %arraydecay193, i64 1, !dbg !13722
  %135 = load i32, i32* %add.ptr194, align 4, !dbg !13722
  %and195 = and i32 %135, 16711680, !dbg !13722
  %shr196 = lshr i32 %and195, 8, !dbg !13722
  %or197 = or i32 %or189, %shr196, !dbg !13722
  %136 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %master_mdev.addr, align 8, !dbg !13722
  %caps198 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %136, i32 0, i32 9, !dbg !13722
  %hca_cur199 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps198, i32 0, i32 0, !dbg !13722
  %arrayidx200 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur199, i64 0, i64 0, !dbg !13722
  %arraydecay201 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx200, i64 0, i64 0, !dbg !13722
  %add.ptr202 = getelementptr i32, i32* %arraydecay201, i64 1, !dbg !13722
  %137 = load i32, i32* %add.ptr202, align 4, !dbg !13722
  %and203 = and i32 %137, -16777216, !dbg !13722
  %shr204 = lshr i32 %and203, 24, !dbg !13722
  %or205 = or i32 %or197, %shr204, !dbg !13722
  br label %cond.end213, !dbg !13722

cond.false206:                                    ; preds = %do.body171
  %138 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %master_mdev.addr, align 8, !dbg !13722
  %caps207 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %138, i32 0, i32 9, !dbg !13722
  %hca_cur208 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps207, i32 0, i32 0, !dbg !13722
  %arrayidx209 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur208, i64 0, i64 0, !dbg !13722
  %arraydecay210 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx209, i64 0, i64 0, !dbg !13722
  %add.ptr211 = getelementptr i32, i32* %arraydecay210, i64 1, !dbg !13722
  %139 = load i32, i32* %add.ptr211, align 4, !dbg !13722
  %call212 = call i32 @__fswab32(i32 %139) #8, !dbg !13722
  br label %cond.end213, !dbg !13722

cond.end213:                                      ; preds = %cond.false206, %cond.true174
  %cond214 = phi i32 [ %or205, %cond.true174 ], [ %call212, %cond.false206 ], !dbg !13722
  %shr215 = lshr i32 %cond214, 0, !dbg !13722
  %and216 = and i32 %shr215, 65535, !dbg !13722
  store i32 %and216, i32* %_v172, align 4, !dbg !13722
  br label %do.body217, !dbg !13722

do.body217:                                       ; preds = %cond.end213
  br label %do.end218, !dbg !13723

do.end218:                                        ; preds = %do.body217
  %140 = load i8*, i8** %in, align 8, !dbg !13722
  %141 = bitcast i8* %140 to i32*, !dbg !13722
  %add.ptr219 = getelementptr i32, i32* %141, i64 66, !dbg !13722
  %142 = load i32, i32* %add.ptr219, align 4, !dbg !13722
  %143 = call i1 @llvm.is.constant.i32(i32 %142), !dbg !13722
  br i1 %143, label %cond.true220, label %cond.false236, !dbg !13722

cond.true220:                                     ; preds = %do.end218
  %144 = load i8*, i8** %in, align 8, !dbg !13722
  %145 = bitcast i8* %144 to i32*, !dbg !13722
  %add.ptr221 = getelementptr i32, i32* %145, i64 66, !dbg !13722
  %146 = load i32, i32* %add.ptr221, align 4, !dbg !13722
  %and222 = and i32 %146, 255, !dbg !13722
  %shl223 = shl i32 %and222, 24, !dbg !13722
  %147 = load i8*, i8** %in, align 8, !dbg !13722
  %148 = bitcast i8* %147 to i32*, !dbg !13722
  %add.ptr224 = getelementptr i32, i32* %148, i64 66, !dbg !13722
  %149 = load i32, i32* %add.ptr224, align 4, !dbg !13722
  %and225 = and i32 %149, 65280, !dbg !13722
  %shl226 = shl i32 %and225, 8, !dbg !13722
  %or227 = or i32 %shl223, %shl226, !dbg !13722
  %150 = load i8*, i8** %in, align 8, !dbg !13722
  %151 = bitcast i8* %150 to i32*, !dbg !13722
  %add.ptr228 = getelementptr i32, i32* %151, i64 66, !dbg !13722
  %152 = load i32, i32* %add.ptr228, align 4, !dbg !13722
  %and229 = and i32 %152, 16711680, !dbg !13722
  %shr230 = lshr i32 %and229, 8, !dbg !13722
  %or231 = or i32 %or227, %shr230, !dbg !13722
  %153 = load i8*, i8** %in, align 8, !dbg !13722
  %154 = bitcast i8* %153 to i32*, !dbg !13722
  %add.ptr232 = getelementptr i32, i32* %154, i64 66, !dbg !13722
  %155 = load i32, i32* %add.ptr232, align 4, !dbg !13722
  %and233 = and i32 %155, -16777216, !dbg !13722
  %shr234 = lshr i32 %and233, 24, !dbg !13722
  %or235 = or i32 %or231, %shr234, !dbg !13722
  br label %cond.end239, !dbg !13722

cond.false236:                                    ; preds = %do.end218
  %156 = load i8*, i8** %in, align 8, !dbg !13722
  %157 = bitcast i8* %156 to i32*, !dbg !13722
  %add.ptr237 = getelementptr i32, i32* %157, i64 66, !dbg !13722
  %158 = load i32, i32* %add.ptr237, align 4, !dbg !13722
  %call238 = call i32 @__fswab32(i32 %158) #8, !dbg !13722
  br label %cond.end239, !dbg !13722

cond.end239:                                      ; preds = %cond.false236, %cond.true220
  %cond240 = phi i32 [ %or235, %cond.true220 ], [ %call238, %cond.false236 ], !dbg !13722
  %and241 = and i32 %cond240, -65536, !dbg !13722
  %159 = load i32, i32* %_v172, align 4, !dbg !13722
  %and242 = and i32 %159, 65535, !dbg !13722
  %shl243 = shl i32 %and242, 0, !dbg !13722
  %or244 = or i32 %and241, %shl243, !dbg !13722
  %160 = call i1 @llvm.is.constant.i32(i32 %or244), !dbg !13722
  br i1 %160, label %cond.true245, label %cond.false361, !dbg !13722

cond.true245:                                     ; preds = %cond.end239
  %161 = load i8*, i8** %in, align 8, !dbg !13722
  %162 = bitcast i8* %161 to i32*, !dbg !13722
  %add.ptr246 = getelementptr i32, i32* %162, i64 66, !dbg !13722
  %163 = load i32, i32* %add.ptr246, align 4, !dbg !13722
  %164 = call i1 @llvm.is.constant.i32(i32 %163), !dbg !13722
  br i1 %164, label %cond.true247, label %cond.false263, !dbg !13722

cond.true247:                                     ; preds = %cond.true245
  %165 = load i8*, i8** %in, align 8, !dbg !13722
  %166 = bitcast i8* %165 to i32*, !dbg !13722
  %add.ptr248 = getelementptr i32, i32* %166, i64 66, !dbg !13722
  %167 = load i32, i32* %add.ptr248, align 4, !dbg !13722
  %and249 = and i32 %167, 255, !dbg !13722
  %shl250 = shl i32 %and249, 24, !dbg !13722
  %168 = load i8*, i8** %in, align 8, !dbg !13722
  %169 = bitcast i8* %168 to i32*, !dbg !13722
  %add.ptr251 = getelementptr i32, i32* %169, i64 66, !dbg !13722
  %170 = load i32, i32* %add.ptr251, align 4, !dbg !13722
  %and252 = and i32 %170, 65280, !dbg !13722
  %shl253 = shl i32 %and252, 8, !dbg !13722
  %or254 = or i32 %shl250, %shl253, !dbg !13722
  %171 = load i8*, i8** %in, align 8, !dbg !13722
  %172 = bitcast i8* %171 to i32*, !dbg !13722
  %add.ptr255 = getelementptr i32, i32* %172, i64 66, !dbg !13722
  %173 = load i32, i32* %add.ptr255, align 4, !dbg !13722
  %and256 = and i32 %173, 16711680, !dbg !13722
  %shr257 = lshr i32 %and256, 8, !dbg !13722
  %or258 = or i32 %or254, %shr257, !dbg !13722
  %174 = load i8*, i8** %in, align 8, !dbg !13722
  %175 = bitcast i8* %174 to i32*, !dbg !13722
  %add.ptr259 = getelementptr i32, i32* %175, i64 66, !dbg !13722
  %176 = load i32, i32* %add.ptr259, align 4, !dbg !13722
  %and260 = and i32 %176, -16777216, !dbg !13722
  %shr261 = lshr i32 %and260, 24, !dbg !13722
  %or262 = or i32 %or258, %shr261, !dbg !13722
  br label %cond.end266, !dbg !13722

cond.false263:                                    ; preds = %cond.true245
  %177 = load i8*, i8** %in, align 8, !dbg !13722
  %178 = bitcast i8* %177 to i32*, !dbg !13722
  %add.ptr264 = getelementptr i32, i32* %178, i64 66, !dbg !13722
  %179 = load i32, i32* %add.ptr264, align 4, !dbg !13722
  %call265 = call i32 @__fswab32(i32 %179) #8, !dbg !13722
  br label %cond.end266, !dbg !13722

cond.end266:                                      ; preds = %cond.false263, %cond.true247
  %cond267 = phi i32 [ %or262, %cond.true247 ], [ %call265, %cond.false263 ], !dbg !13722
  %and268 = and i32 %cond267, -65536, !dbg !13722
  %180 = load i32, i32* %_v172, align 4, !dbg !13722
  %and269 = and i32 %180, 65535, !dbg !13722
  %shl270 = shl i32 %and269, 0, !dbg !13722
  %or271 = or i32 %and268, %shl270, !dbg !13722
  %and272 = and i32 %or271, 255, !dbg !13722
  %shl273 = shl i32 %and272, 24, !dbg !13722
  %181 = load i8*, i8** %in, align 8, !dbg !13722
  %182 = bitcast i8* %181 to i32*, !dbg !13722
  %add.ptr274 = getelementptr i32, i32* %182, i64 66, !dbg !13722
  %183 = load i32, i32* %add.ptr274, align 4, !dbg !13722
  %184 = call i1 @llvm.is.constant.i32(i32 %183), !dbg !13722
  br i1 %184, label %cond.true275, label %cond.false291, !dbg !13722

cond.true275:                                     ; preds = %cond.end266
  %185 = load i8*, i8** %in, align 8, !dbg !13722
  %186 = bitcast i8* %185 to i32*, !dbg !13722
  %add.ptr276 = getelementptr i32, i32* %186, i64 66, !dbg !13722
  %187 = load i32, i32* %add.ptr276, align 4, !dbg !13722
  %and277 = and i32 %187, 255, !dbg !13722
  %shl278 = shl i32 %and277, 24, !dbg !13722
  %188 = load i8*, i8** %in, align 8, !dbg !13722
  %189 = bitcast i8* %188 to i32*, !dbg !13722
  %add.ptr279 = getelementptr i32, i32* %189, i64 66, !dbg !13722
  %190 = load i32, i32* %add.ptr279, align 4, !dbg !13722
  %and280 = and i32 %190, 65280, !dbg !13722
  %shl281 = shl i32 %and280, 8, !dbg !13722
  %or282 = or i32 %shl278, %shl281, !dbg !13722
  %191 = load i8*, i8** %in, align 8, !dbg !13722
  %192 = bitcast i8* %191 to i32*, !dbg !13722
  %add.ptr283 = getelementptr i32, i32* %192, i64 66, !dbg !13722
  %193 = load i32, i32* %add.ptr283, align 4, !dbg !13722
  %and284 = and i32 %193, 16711680, !dbg !13722
  %shr285 = lshr i32 %and284, 8, !dbg !13722
  %or286 = or i32 %or282, %shr285, !dbg !13722
  %194 = load i8*, i8** %in, align 8, !dbg !13722
  %195 = bitcast i8* %194 to i32*, !dbg !13722
  %add.ptr287 = getelementptr i32, i32* %195, i64 66, !dbg !13722
  %196 = load i32, i32* %add.ptr287, align 4, !dbg !13722
  %and288 = and i32 %196, -16777216, !dbg !13722
  %shr289 = lshr i32 %and288, 24, !dbg !13722
  %or290 = or i32 %or286, %shr289, !dbg !13722
  br label %cond.end294, !dbg !13722

cond.false291:                                    ; preds = %cond.end266
  %197 = load i8*, i8** %in, align 8, !dbg !13722
  %198 = bitcast i8* %197 to i32*, !dbg !13722
  %add.ptr292 = getelementptr i32, i32* %198, i64 66, !dbg !13722
  %199 = load i32, i32* %add.ptr292, align 4, !dbg !13722
  %call293 = call i32 @__fswab32(i32 %199) #8, !dbg !13722
  br label %cond.end294, !dbg !13722

cond.end294:                                      ; preds = %cond.false291, %cond.true275
  %cond295 = phi i32 [ %or290, %cond.true275 ], [ %call293, %cond.false291 ], !dbg !13722
  %and296 = and i32 %cond295, -65536, !dbg !13722
  %200 = load i32, i32* %_v172, align 4, !dbg !13722
  %and297 = and i32 %200, 65535, !dbg !13722
  %shl298 = shl i32 %and297, 0, !dbg !13722
  %or299 = or i32 %and296, %shl298, !dbg !13722
  %and300 = and i32 %or299, 65280, !dbg !13722
  %shl301 = shl i32 %and300, 8, !dbg !13722
  %or302 = or i32 %shl273, %shl301, !dbg !13722
  %201 = load i8*, i8** %in, align 8, !dbg !13722
  %202 = bitcast i8* %201 to i32*, !dbg !13722
  %add.ptr303 = getelementptr i32, i32* %202, i64 66, !dbg !13722
  %203 = load i32, i32* %add.ptr303, align 4, !dbg !13722
  %204 = call i1 @llvm.is.constant.i32(i32 %203), !dbg !13722
  br i1 %204, label %cond.true304, label %cond.false320, !dbg !13722

cond.true304:                                     ; preds = %cond.end294
  %205 = load i8*, i8** %in, align 8, !dbg !13722
  %206 = bitcast i8* %205 to i32*, !dbg !13722
  %add.ptr305 = getelementptr i32, i32* %206, i64 66, !dbg !13722
  %207 = load i32, i32* %add.ptr305, align 4, !dbg !13722
  %and306 = and i32 %207, 255, !dbg !13722
  %shl307 = shl i32 %and306, 24, !dbg !13722
  %208 = load i8*, i8** %in, align 8, !dbg !13722
  %209 = bitcast i8* %208 to i32*, !dbg !13722
  %add.ptr308 = getelementptr i32, i32* %209, i64 66, !dbg !13722
  %210 = load i32, i32* %add.ptr308, align 4, !dbg !13722
  %and309 = and i32 %210, 65280, !dbg !13722
  %shl310 = shl i32 %and309, 8, !dbg !13722
  %or311 = or i32 %shl307, %shl310, !dbg !13722
  %211 = load i8*, i8** %in, align 8, !dbg !13722
  %212 = bitcast i8* %211 to i32*, !dbg !13722
  %add.ptr312 = getelementptr i32, i32* %212, i64 66, !dbg !13722
  %213 = load i32, i32* %add.ptr312, align 4, !dbg !13722
  %and313 = and i32 %213, 16711680, !dbg !13722
  %shr314 = lshr i32 %and313, 8, !dbg !13722
  %or315 = or i32 %or311, %shr314, !dbg !13722
  %214 = load i8*, i8** %in, align 8, !dbg !13722
  %215 = bitcast i8* %214 to i32*, !dbg !13722
  %add.ptr316 = getelementptr i32, i32* %215, i64 66, !dbg !13722
  %216 = load i32, i32* %add.ptr316, align 4, !dbg !13722
  %and317 = and i32 %216, -16777216, !dbg !13722
  %shr318 = lshr i32 %and317, 24, !dbg !13722
  %or319 = or i32 %or315, %shr318, !dbg !13722
  br label %cond.end323, !dbg !13722

cond.false320:                                    ; preds = %cond.end294
  %217 = load i8*, i8** %in, align 8, !dbg !13722
  %218 = bitcast i8* %217 to i32*, !dbg !13722
  %add.ptr321 = getelementptr i32, i32* %218, i64 66, !dbg !13722
  %219 = load i32, i32* %add.ptr321, align 4, !dbg !13722
  %call322 = call i32 @__fswab32(i32 %219) #8, !dbg !13722
  br label %cond.end323, !dbg !13722

cond.end323:                                      ; preds = %cond.false320, %cond.true304
  %cond324 = phi i32 [ %or319, %cond.true304 ], [ %call322, %cond.false320 ], !dbg !13722
  %and325 = and i32 %cond324, -65536, !dbg !13722
  %220 = load i32, i32* %_v172, align 4, !dbg !13722
  %and326 = and i32 %220, 65535, !dbg !13722
  %shl327 = shl i32 %and326, 0, !dbg !13722
  %or328 = or i32 %and325, %shl327, !dbg !13722
  %and329 = and i32 %or328, 16711680, !dbg !13722
  %shr330 = lshr i32 %and329, 8, !dbg !13722
  %or331 = or i32 %or302, %shr330, !dbg !13722
  %221 = load i8*, i8** %in, align 8, !dbg !13722
  %222 = bitcast i8* %221 to i32*, !dbg !13722
  %add.ptr332 = getelementptr i32, i32* %222, i64 66, !dbg !13722
  %223 = load i32, i32* %add.ptr332, align 4, !dbg !13722
  %224 = call i1 @llvm.is.constant.i32(i32 %223), !dbg !13722
  br i1 %224, label %cond.true333, label %cond.false349, !dbg !13722

cond.true333:                                     ; preds = %cond.end323
  %225 = load i8*, i8** %in, align 8, !dbg !13722
  %226 = bitcast i8* %225 to i32*, !dbg !13722
  %add.ptr334 = getelementptr i32, i32* %226, i64 66, !dbg !13722
  %227 = load i32, i32* %add.ptr334, align 4, !dbg !13722
  %and335 = and i32 %227, 255, !dbg !13722
  %shl336 = shl i32 %and335, 24, !dbg !13722
  %228 = load i8*, i8** %in, align 8, !dbg !13722
  %229 = bitcast i8* %228 to i32*, !dbg !13722
  %add.ptr337 = getelementptr i32, i32* %229, i64 66, !dbg !13722
  %230 = load i32, i32* %add.ptr337, align 4, !dbg !13722
  %and338 = and i32 %230, 65280, !dbg !13722
  %shl339 = shl i32 %and338, 8, !dbg !13722
  %or340 = or i32 %shl336, %shl339, !dbg !13722
  %231 = load i8*, i8** %in, align 8, !dbg !13722
  %232 = bitcast i8* %231 to i32*, !dbg !13722
  %add.ptr341 = getelementptr i32, i32* %232, i64 66, !dbg !13722
  %233 = load i32, i32* %add.ptr341, align 4, !dbg !13722
  %and342 = and i32 %233, 16711680, !dbg !13722
  %shr343 = lshr i32 %and342, 8, !dbg !13722
  %or344 = or i32 %or340, %shr343, !dbg !13722
  %234 = load i8*, i8** %in, align 8, !dbg !13722
  %235 = bitcast i8* %234 to i32*, !dbg !13722
  %add.ptr345 = getelementptr i32, i32* %235, i64 66, !dbg !13722
  %236 = load i32, i32* %add.ptr345, align 4, !dbg !13722
  %and346 = and i32 %236, -16777216, !dbg !13722
  %shr347 = lshr i32 %and346, 24, !dbg !13722
  %or348 = or i32 %or344, %shr347, !dbg !13722
  br label %cond.end352, !dbg !13722

cond.false349:                                    ; preds = %cond.end323
  %237 = load i8*, i8** %in, align 8, !dbg !13722
  %238 = bitcast i8* %237 to i32*, !dbg !13722
  %add.ptr350 = getelementptr i32, i32* %238, i64 66, !dbg !13722
  %239 = load i32, i32* %add.ptr350, align 4, !dbg !13722
  %call351 = call i32 @__fswab32(i32 %239) #8, !dbg !13722
  br label %cond.end352, !dbg !13722

cond.end352:                                      ; preds = %cond.false349, %cond.true333
  %cond353 = phi i32 [ %or348, %cond.true333 ], [ %call351, %cond.false349 ], !dbg !13722
  %and354 = and i32 %cond353, -65536, !dbg !13722
  %240 = load i32, i32* %_v172, align 4, !dbg !13722
  %and355 = and i32 %240, 65535, !dbg !13722
  %shl356 = shl i32 %and355, 0, !dbg !13722
  %or357 = or i32 %and354, %shl356, !dbg !13722
  %and358 = and i32 %or357, -16777216, !dbg !13722
  %shr359 = lshr i32 %and358, 24, !dbg !13722
  %or360 = or i32 %or331, %shr359, !dbg !13722
  br label %cond.end389, !dbg !13722

cond.false361:                                    ; preds = %cond.end239
  %241 = load i8*, i8** %in, align 8, !dbg !13722
  %242 = bitcast i8* %241 to i32*, !dbg !13722
  %add.ptr362 = getelementptr i32, i32* %242, i64 66, !dbg !13722
  %243 = load i32, i32* %add.ptr362, align 4, !dbg !13722
  %244 = call i1 @llvm.is.constant.i32(i32 %243), !dbg !13722
  br i1 %244, label %cond.true363, label %cond.false379, !dbg !13722

cond.true363:                                     ; preds = %cond.false361
  %245 = load i8*, i8** %in, align 8, !dbg !13722
  %246 = bitcast i8* %245 to i32*, !dbg !13722
  %add.ptr364 = getelementptr i32, i32* %246, i64 66, !dbg !13722
  %247 = load i32, i32* %add.ptr364, align 4, !dbg !13722
  %and365 = and i32 %247, 255, !dbg !13722
  %shl366 = shl i32 %and365, 24, !dbg !13722
  %248 = load i8*, i8** %in, align 8, !dbg !13722
  %249 = bitcast i8* %248 to i32*, !dbg !13722
  %add.ptr367 = getelementptr i32, i32* %249, i64 66, !dbg !13722
  %250 = load i32, i32* %add.ptr367, align 4, !dbg !13722
  %and368 = and i32 %250, 65280, !dbg !13722
  %shl369 = shl i32 %and368, 8, !dbg !13722
  %or370 = or i32 %shl366, %shl369, !dbg !13722
  %251 = load i8*, i8** %in, align 8, !dbg !13722
  %252 = bitcast i8* %251 to i32*, !dbg !13722
  %add.ptr371 = getelementptr i32, i32* %252, i64 66, !dbg !13722
  %253 = load i32, i32* %add.ptr371, align 4, !dbg !13722
  %and372 = and i32 %253, 16711680, !dbg !13722
  %shr373 = lshr i32 %and372, 8, !dbg !13722
  %or374 = or i32 %or370, %shr373, !dbg !13722
  %254 = load i8*, i8** %in, align 8, !dbg !13722
  %255 = bitcast i8* %254 to i32*, !dbg !13722
  %add.ptr375 = getelementptr i32, i32* %255, i64 66, !dbg !13722
  %256 = load i32, i32* %add.ptr375, align 4, !dbg !13722
  %and376 = and i32 %256, -16777216, !dbg !13722
  %shr377 = lshr i32 %and376, 24, !dbg !13722
  %or378 = or i32 %or374, %shr377, !dbg !13722
  br label %cond.end382, !dbg !13722

cond.false379:                                    ; preds = %cond.false361
  %257 = load i8*, i8** %in, align 8, !dbg !13722
  %258 = bitcast i8* %257 to i32*, !dbg !13722
  %add.ptr380 = getelementptr i32, i32* %258, i64 66, !dbg !13722
  %259 = load i32, i32* %add.ptr380, align 4, !dbg !13722
  %call381 = call i32 @__fswab32(i32 %259) #8, !dbg !13722
  br label %cond.end382, !dbg !13722

cond.end382:                                      ; preds = %cond.false379, %cond.true363
  %cond383 = phi i32 [ %or378, %cond.true363 ], [ %call381, %cond.false379 ], !dbg !13722
  %and384 = and i32 %cond383, -65536, !dbg !13722
  %260 = load i32, i32* %_v172, align 4, !dbg !13722
  %and385 = and i32 %260, 65535, !dbg !13722
  %shl386 = shl i32 %and385, 0, !dbg !13722
  %or387 = or i32 %and384, %shl386, !dbg !13722
  %call388 = call i32 @__fswab32(i32 %or387) #8, !dbg !13722
  br label %cond.end389, !dbg !13722

cond.end389:                                      ; preds = %cond.end382, %cond.end352
  %cond390 = phi i32 [ %or360, %cond.end352 ], [ %call388, %cond.end382 ], !dbg !13722
  %261 = load i8*, i8** %in, align 8, !dbg !13722
  %262 = bitcast i8* %261 to i32*, !dbg !13722
  %add.ptr391 = getelementptr i32, i32* %262, i64 66, !dbg !13722
  store i32 %cond390, i32* %add.ptr391, align 4, !dbg !13722
  br label %do.end392, !dbg !13722

do.end392:                                        ; preds = %cond.end389
  br label %do.body393, !dbg !13725

do.body393:                                       ; preds = %do.end392
  call void @llvm.dbg.declare(metadata i32* %_v394, metadata !13726, metadata !DIExpression()), !dbg !13728
  %263 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %port_mdev.addr, align 8, !dbg !13728
  %caps395 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %263, i32 0, i32 9, !dbg !13728
  %hca_cur396 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps395, i32 0, i32 0, !dbg !13728
  %arrayidx397 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur396, i64 0, i64 0, !dbg !13728
  %arraydecay398 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx397, i64 0, i64 0, !dbg !13728
  %add.ptr399 = getelementptr i32, i32* %arraydecay398, i64 48, !dbg !13728
  %264 = load i32, i32* %add.ptr399, align 4, !dbg !13728
  %265 = call i1 @llvm.is.constant.i32(i32 %264), !dbg !13728
  br i1 %265, label %cond.true400, label %cond.false432, !dbg !13728

cond.true400:                                     ; preds = %do.body393
  %266 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %port_mdev.addr, align 8, !dbg !13728
  %caps401 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %266, i32 0, i32 9, !dbg !13728
  %hca_cur402 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps401, i32 0, i32 0, !dbg !13728
  %arrayidx403 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur402, i64 0, i64 0, !dbg !13728
  %arraydecay404 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx403, i64 0, i64 0, !dbg !13728
  %add.ptr405 = getelementptr i32, i32* %arraydecay404, i64 48, !dbg !13728
  %267 = load i32, i32* %add.ptr405, align 4, !dbg !13728
  %and406 = and i32 %267, 255, !dbg !13728
  %shl407 = shl i32 %and406, 24, !dbg !13728
  %268 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %port_mdev.addr, align 8, !dbg !13728
  %caps408 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %268, i32 0, i32 9, !dbg !13728
  %hca_cur409 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps408, i32 0, i32 0, !dbg !13728
  %arrayidx410 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur409, i64 0, i64 0, !dbg !13728
  %arraydecay411 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx410, i64 0, i64 0, !dbg !13728
  %add.ptr412 = getelementptr i32, i32* %arraydecay411, i64 48, !dbg !13728
  %269 = load i32, i32* %add.ptr412, align 4, !dbg !13728
  %and413 = and i32 %269, 65280, !dbg !13728
  %shl414 = shl i32 %and413, 8, !dbg !13728
  %or415 = or i32 %shl407, %shl414, !dbg !13728
  %270 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %port_mdev.addr, align 8, !dbg !13728
  %caps416 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %270, i32 0, i32 9, !dbg !13728
  %hca_cur417 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps416, i32 0, i32 0, !dbg !13728
  %arrayidx418 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur417, i64 0, i64 0, !dbg !13728
  %arraydecay419 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx418, i64 0, i64 0, !dbg !13728
  %add.ptr420 = getelementptr i32, i32* %arraydecay419, i64 48, !dbg !13728
  %271 = load i32, i32* %add.ptr420, align 4, !dbg !13728
  %and421 = and i32 %271, 16711680, !dbg !13728
  %shr422 = lshr i32 %and421, 8, !dbg !13728
  %or423 = or i32 %or415, %shr422, !dbg !13728
  %272 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %port_mdev.addr, align 8, !dbg !13728
  %caps424 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %272, i32 0, i32 9, !dbg !13728
  %hca_cur425 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps424, i32 0, i32 0, !dbg !13728
  %arrayidx426 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur425, i64 0, i64 0, !dbg !13728
  %arraydecay427 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx426, i64 0, i64 0, !dbg !13728
  %add.ptr428 = getelementptr i32, i32* %arraydecay427, i64 48, !dbg !13728
  %273 = load i32, i32* %add.ptr428, align 4, !dbg !13728
  %and429 = and i32 %273, -16777216, !dbg !13728
  %shr430 = lshr i32 %and429, 24, !dbg !13728
  %or431 = or i32 %or423, %shr430, !dbg !13728
  br label %cond.end439, !dbg !13728

cond.false432:                                    ; preds = %do.body393
  %274 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %port_mdev.addr, align 8, !dbg !13728
  %caps433 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %274, i32 0, i32 9, !dbg !13728
  %hca_cur434 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps433, i32 0, i32 0, !dbg !13728
  %arrayidx435 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur434, i64 0, i64 0, !dbg !13728
  %arraydecay436 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx435, i64 0, i64 0, !dbg !13728
  %add.ptr437 = getelementptr i32, i32* %arraydecay436, i64 48, !dbg !13728
  %275 = load i32, i32* %add.ptr437, align 4, !dbg !13728
  %call438 = call i32 @__fswab32(i32 %275) #8, !dbg !13728
  br label %cond.end439, !dbg !13728

cond.end439:                                      ; preds = %cond.false432, %cond.true400
  %cond440 = phi i32 [ %or431, %cond.true400 ], [ %call438, %cond.false432 ], !dbg !13728
  %shr441 = lshr i32 %cond440, 24, !dbg !13728
  %and442 = and i32 %shr441, 255, !dbg !13728
  store i32 %and442, i32* %_v394, align 4, !dbg !13728
  br label %do.body443, !dbg !13728

do.body443:                                       ; preds = %cond.end439
  br label %do.end444, !dbg !13729

do.end444:                                        ; preds = %do.body443
  %276 = load i8*, i8** %in, align 8, !dbg !13728
  %277 = bitcast i8* %276 to i32*, !dbg !13728
  %add.ptr445 = getelementptr i32, i32* %277, i64 66, !dbg !13728
  %278 = load i32, i32* %add.ptr445, align 4, !dbg !13728
  %279 = call i1 @llvm.is.constant.i32(i32 %278), !dbg !13728
  br i1 %279, label %cond.true446, label %cond.false462, !dbg !13728

cond.true446:                                     ; preds = %do.end444
  %280 = load i8*, i8** %in, align 8, !dbg !13728
  %281 = bitcast i8* %280 to i32*, !dbg !13728
  %add.ptr447 = getelementptr i32, i32* %281, i64 66, !dbg !13728
  %282 = load i32, i32* %add.ptr447, align 4, !dbg !13728
  %and448 = and i32 %282, 255, !dbg !13728
  %shl449 = shl i32 %and448, 24, !dbg !13728
  %283 = load i8*, i8** %in, align 8, !dbg !13728
  %284 = bitcast i8* %283 to i32*, !dbg !13728
  %add.ptr450 = getelementptr i32, i32* %284, i64 66, !dbg !13728
  %285 = load i32, i32* %add.ptr450, align 4, !dbg !13728
  %and451 = and i32 %285, 65280, !dbg !13728
  %shl452 = shl i32 %and451, 8, !dbg !13728
  %or453 = or i32 %shl449, %shl452, !dbg !13728
  %286 = load i8*, i8** %in, align 8, !dbg !13728
  %287 = bitcast i8* %286 to i32*, !dbg !13728
  %add.ptr454 = getelementptr i32, i32* %287, i64 66, !dbg !13728
  %288 = load i32, i32* %add.ptr454, align 4, !dbg !13728
  %and455 = and i32 %288, 16711680, !dbg !13728
  %shr456 = lshr i32 %and455, 8, !dbg !13728
  %or457 = or i32 %or453, %shr456, !dbg !13728
  %289 = load i8*, i8** %in, align 8, !dbg !13728
  %290 = bitcast i8* %289 to i32*, !dbg !13728
  %add.ptr458 = getelementptr i32, i32* %290, i64 66, !dbg !13728
  %291 = load i32, i32* %add.ptr458, align 4, !dbg !13728
  %and459 = and i32 %291, -16777216, !dbg !13728
  %shr460 = lshr i32 %and459, 24, !dbg !13728
  %or461 = or i32 %or457, %shr460, !dbg !13728
  br label %cond.end465, !dbg !13728

cond.false462:                                    ; preds = %do.end444
  %292 = load i8*, i8** %in, align 8, !dbg !13728
  %293 = bitcast i8* %292 to i32*, !dbg !13728
  %add.ptr463 = getelementptr i32, i32* %293, i64 66, !dbg !13728
  %294 = load i32, i32* %add.ptr463, align 4, !dbg !13728
  %call464 = call i32 @__fswab32(i32 %294) #8, !dbg !13728
  br label %cond.end465, !dbg !13728

cond.end465:                                      ; preds = %cond.false462, %cond.true446
  %cond466 = phi i32 [ %or461, %cond.true446 ], [ %call464, %cond.false462 ], !dbg !13728
  %and467 = and i32 %cond466, -983041, !dbg !13728
  %295 = load i32, i32* %_v394, align 4, !dbg !13728
  %and468 = and i32 %295, 15, !dbg !13728
  %shl469 = shl i32 %and468, 16, !dbg !13728
  %or470 = or i32 %and467, %shl469, !dbg !13728
  %296 = call i1 @llvm.is.constant.i32(i32 %or470), !dbg !13728
  br i1 %296, label %cond.true471, label %cond.false587, !dbg !13728

cond.true471:                                     ; preds = %cond.end465
  %297 = load i8*, i8** %in, align 8, !dbg !13728
  %298 = bitcast i8* %297 to i32*, !dbg !13728
  %add.ptr472 = getelementptr i32, i32* %298, i64 66, !dbg !13728
  %299 = load i32, i32* %add.ptr472, align 4, !dbg !13728
  %300 = call i1 @llvm.is.constant.i32(i32 %299), !dbg !13728
  br i1 %300, label %cond.true473, label %cond.false489, !dbg !13728

cond.true473:                                     ; preds = %cond.true471
  %301 = load i8*, i8** %in, align 8, !dbg !13728
  %302 = bitcast i8* %301 to i32*, !dbg !13728
  %add.ptr474 = getelementptr i32, i32* %302, i64 66, !dbg !13728
  %303 = load i32, i32* %add.ptr474, align 4, !dbg !13728
  %and475 = and i32 %303, 255, !dbg !13728
  %shl476 = shl i32 %and475, 24, !dbg !13728
  %304 = load i8*, i8** %in, align 8, !dbg !13728
  %305 = bitcast i8* %304 to i32*, !dbg !13728
  %add.ptr477 = getelementptr i32, i32* %305, i64 66, !dbg !13728
  %306 = load i32, i32* %add.ptr477, align 4, !dbg !13728
  %and478 = and i32 %306, 65280, !dbg !13728
  %shl479 = shl i32 %and478, 8, !dbg !13728
  %or480 = or i32 %shl476, %shl479, !dbg !13728
  %307 = load i8*, i8** %in, align 8, !dbg !13728
  %308 = bitcast i8* %307 to i32*, !dbg !13728
  %add.ptr481 = getelementptr i32, i32* %308, i64 66, !dbg !13728
  %309 = load i32, i32* %add.ptr481, align 4, !dbg !13728
  %and482 = and i32 %309, 16711680, !dbg !13728
  %shr483 = lshr i32 %and482, 8, !dbg !13728
  %or484 = or i32 %or480, %shr483, !dbg !13728
  %310 = load i8*, i8** %in, align 8, !dbg !13728
  %311 = bitcast i8* %310 to i32*, !dbg !13728
  %add.ptr485 = getelementptr i32, i32* %311, i64 66, !dbg !13728
  %312 = load i32, i32* %add.ptr485, align 4, !dbg !13728
  %and486 = and i32 %312, -16777216, !dbg !13728
  %shr487 = lshr i32 %and486, 24, !dbg !13728
  %or488 = or i32 %or484, %shr487, !dbg !13728
  br label %cond.end492, !dbg !13728

cond.false489:                                    ; preds = %cond.true471
  %313 = load i8*, i8** %in, align 8, !dbg !13728
  %314 = bitcast i8* %313 to i32*, !dbg !13728
  %add.ptr490 = getelementptr i32, i32* %314, i64 66, !dbg !13728
  %315 = load i32, i32* %add.ptr490, align 4, !dbg !13728
  %call491 = call i32 @__fswab32(i32 %315) #8, !dbg !13728
  br label %cond.end492, !dbg !13728

cond.end492:                                      ; preds = %cond.false489, %cond.true473
  %cond493 = phi i32 [ %or488, %cond.true473 ], [ %call491, %cond.false489 ], !dbg !13728
  %and494 = and i32 %cond493, -983041, !dbg !13728
  %316 = load i32, i32* %_v394, align 4, !dbg !13728
  %and495 = and i32 %316, 15, !dbg !13728
  %shl496 = shl i32 %and495, 16, !dbg !13728
  %or497 = or i32 %and494, %shl496, !dbg !13728
  %and498 = and i32 %or497, 255, !dbg !13728
  %shl499 = shl i32 %and498, 24, !dbg !13728
  %317 = load i8*, i8** %in, align 8, !dbg !13728
  %318 = bitcast i8* %317 to i32*, !dbg !13728
  %add.ptr500 = getelementptr i32, i32* %318, i64 66, !dbg !13728
  %319 = load i32, i32* %add.ptr500, align 4, !dbg !13728
  %320 = call i1 @llvm.is.constant.i32(i32 %319), !dbg !13728
  br i1 %320, label %cond.true501, label %cond.false517, !dbg !13728

cond.true501:                                     ; preds = %cond.end492
  %321 = load i8*, i8** %in, align 8, !dbg !13728
  %322 = bitcast i8* %321 to i32*, !dbg !13728
  %add.ptr502 = getelementptr i32, i32* %322, i64 66, !dbg !13728
  %323 = load i32, i32* %add.ptr502, align 4, !dbg !13728
  %and503 = and i32 %323, 255, !dbg !13728
  %shl504 = shl i32 %and503, 24, !dbg !13728
  %324 = load i8*, i8** %in, align 8, !dbg !13728
  %325 = bitcast i8* %324 to i32*, !dbg !13728
  %add.ptr505 = getelementptr i32, i32* %325, i64 66, !dbg !13728
  %326 = load i32, i32* %add.ptr505, align 4, !dbg !13728
  %and506 = and i32 %326, 65280, !dbg !13728
  %shl507 = shl i32 %and506, 8, !dbg !13728
  %or508 = or i32 %shl504, %shl507, !dbg !13728
  %327 = load i8*, i8** %in, align 8, !dbg !13728
  %328 = bitcast i8* %327 to i32*, !dbg !13728
  %add.ptr509 = getelementptr i32, i32* %328, i64 66, !dbg !13728
  %329 = load i32, i32* %add.ptr509, align 4, !dbg !13728
  %and510 = and i32 %329, 16711680, !dbg !13728
  %shr511 = lshr i32 %and510, 8, !dbg !13728
  %or512 = or i32 %or508, %shr511, !dbg !13728
  %330 = load i8*, i8** %in, align 8, !dbg !13728
  %331 = bitcast i8* %330 to i32*, !dbg !13728
  %add.ptr513 = getelementptr i32, i32* %331, i64 66, !dbg !13728
  %332 = load i32, i32* %add.ptr513, align 4, !dbg !13728
  %and514 = and i32 %332, -16777216, !dbg !13728
  %shr515 = lshr i32 %and514, 24, !dbg !13728
  %or516 = or i32 %or512, %shr515, !dbg !13728
  br label %cond.end520, !dbg !13728

cond.false517:                                    ; preds = %cond.end492
  %333 = load i8*, i8** %in, align 8, !dbg !13728
  %334 = bitcast i8* %333 to i32*, !dbg !13728
  %add.ptr518 = getelementptr i32, i32* %334, i64 66, !dbg !13728
  %335 = load i32, i32* %add.ptr518, align 4, !dbg !13728
  %call519 = call i32 @__fswab32(i32 %335) #8, !dbg !13728
  br label %cond.end520, !dbg !13728

cond.end520:                                      ; preds = %cond.false517, %cond.true501
  %cond521 = phi i32 [ %or516, %cond.true501 ], [ %call519, %cond.false517 ], !dbg !13728
  %and522 = and i32 %cond521, -983041, !dbg !13728
  %336 = load i32, i32* %_v394, align 4, !dbg !13728
  %and523 = and i32 %336, 15, !dbg !13728
  %shl524 = shl i32 %and523, 16, !dbg !13728
  %or525 = or i32 %and522, %shl524, !dbg !13728
  %and526 = and i32 %or525, 65280, !dbg !13728
  %shl527 = shl i32 %and526, 8, !dbg !13728
  %or528 = or i32 %shl499, %shl527, !dbg !13728
  %337 = load i8*, i8** %in, align 8, !dbg !13728
  %338 = bitcast i8* %337 to i32*, !dbg !13728
  %add.ptr529 = getelementptr i32, i32* %338, i64 66, !dbg !13728
  %339 = load i32, i32* %add.ptr529, align 4, !dbg !13728
  %340 = call i1 @llvm.is.constant.i32(i32 %339), !dbg !13728
  br i1 %340, label %cond.true530, label %cond.false546, !dbg !13728

cond.true530:                                     ; preds = %cond.end520
  %341 = load i8*, i8** %in, align 8, !dbg !13728
  %342 = bitcast i8* %341 to i32*, !dbg !13728
  %add.ptr531 = getelementptr i32, i32* %342, i64 66, !dbg !13728
  %343 = load i32, i32* %add.ptr531, align 4, !dbg !13728
  %and532 = and i32 %343, 255, !dbg !13728
  %shl533 = shl i32 %and532, 24, !dbg !13728
  %344 = load i8*, i8** %in, align 8, !dbg !13728
  %345 = bitcast i8* %344 to i32*, !dbg !13728
  %add.ptr534 = getelementptr i32, i32* %345, i64 66, !dbg !13728
  %346 = load i32, i32* %add.ptr534, align 4, !dbg !13728
  %and535 = and i32 %346, 65280, !dbg !13728
  %shl536 = shl i32 %and535, 8, !dbg !13728
  %or537 = or i32 %shl533, %shl536, !dbg !13728
  %347 = load i8*, i8** %in, align 8, !dbg !13728
  %348 = bitcast i8* %347 to i32*, !dbg !13728
  %add.ptr538 = getelementptr i32, i32* %348, i64 66, !dbg !13728
  %349 = load i32, i32* %add.ptr538, align 4, !dbg !13728
  %and539 = and i32 %349, 16711680, !dbg !13728
  %shr540 = lshr i32 %and539, 8, !dbg !13728
  %or541 = or i32 %or537, %shr540, !dbg !13728
  %350 = load i8*, i8** %in, align 8, !dbg !13728
  %351 = bitcast i8* %350 to i32*, !dbg !13728
  %add.ptr542 = getelementptr i32, i32* %351, i64 66, !dbg !13728
  %352 = load i32, i32* %add.ptr542, align 4, !dbg !13728
  %and543 = and i32 %352, -16777216, !dbg !13728
  %shr544 = lshr i32 %and543, 24, !dbg !13728
  %or545 = or i32 %or541, %shr544, !dbg !13728
  br label %cond.end549, !dbg !13728

cond.false546:                                    ; preds = %cond.end520
  %353 = load i8*, i8** %in, align 8, !dbg !13728
  %354 = bitcast i8* %353 to i32*, !dbg !13728
  %add.ptr547 = getelementptr i32, i32* %354, i64 66, !dbg !13728
  %355 = load i32, i32* %add.ptr547, align 4, !dbg !13728
  %call548 = call i32 @__fswab32(i32 %355) #8, !dbg !13728
  br label %cond.end549, !dbg !13728

cond.end549:                                      ; preds = %cond.false546, %cond.true530
  %cond550 = phi i32 [ %or545, %cond.true530 ], [ %call548, %cond.false546 ], !dbg !13728
  %and551 = and i32 %cond550, -983041, !dbg !13728
  %356 = load i32, i32* %_v394, align 4, !dbg !13728
  %and552 = and i32 %356, 15, !dbg !13728
  %shl553 = shl i32 %and552, 16, !dbg !13728
  %or554 = or i32 %and551, %shl553, !dbg !13728
  %and555 = and i32 %or554, 16711680, !dbg !13728
  %shr556 = lshr i32 %and555, 8, !dbg !13728
  %or557 = or i32 %or528, %shr556, !dbg !13728
  %357 = load i8*, i8** %in, align 8, !dbg !13728
  %358 = bitcast i8* %357 to i32*, !dbg !13728
  %add.ptr558 = getelementptr i32, i32* %358, i64 66, !dbg !13728
  %359 = load i32, i32* %add.ptr558, align 4, !dbg !13728
  %360 = call i1 @llvm.is.constant.i32(i32 %359), !dbg !13728
  br i1 %360, label %cond.true559, label %cond.false575, !dbg !13728

cond.true559:                                     ; preds = %cond.end549
  %361 = load i8*, i8** %in, align 8, !dbg !13728
  %362 = bitcast i8* %361 to i32*, !dbg !13728
  %add.ptr560 = getelementptr i32, i32* %362, i64 66, !dbg !13728
  %363 = load i32, i32* %add.ptr560, align 4, !dbg !13728
  %and561 = and i32 %363, 255, !dbg !13728
  %shl562 = shl i32 %and561, 24, !dbg !13728
  %364 = load i8*, i8** %in, align 8, !dbg !13728
  %365 = bitcast i8* %364 to i32*, !dbg !13728
  %add.ptr563 = getelementptr i32, i32* %365, i64 66, !dbg !13728
  %366 = load i32, i32* %add.ptr563, align 4, !dbg !13728
  %and564 = and i32 %366, 65280, !dbg !13728
  %shl565 = shl i32 %and564, 8, !dbg !13728
  %or566 = or i32 %shl562, %shl565, !dbg !13728
  %367 = load i8*, i8** %in, align 8, !dbg !13728
  %368 = bitcast i8* %367 to i32*, !dbg !13728
  %add.ptr567 = getelementptr i32, i32* %368, i64 66, !dbg !13728
  %369 = load i32, i32* %add.ptr567, align 4, !dbg !13728
  %and568 = and i32 %369, 16711680, !dbg !13728
  %shr569 = lshr i32 %and568, 8, !dbg !13728
  %or570 = or i32 %or566, %shr569, !dbg !13728
  %370 = load i8*, i8** %in, align 8, !dbg !13728
  %371 = bitcast i8* %370 to i32*, !dbg !13728
  %add.ptr571 = getelementptr i32, i32* %371, i64 66, !dbg !13728
  %372 = load i32, i32* %add.ptr571, align 4, !dbg !13728
  %and572 = and i32 %372, -16777216, !dbg !13728
  %shr573 = lshr i32 %and572, 24, !dbg !13728
  %or574 = or i32 %or570, %shr573, !dbg !13728
  br label %cond.end578, !dbg !13728

cond.false575:                                    ; preds = %cond.end549
  %373 = load i8*, i8** %in, align 8, !dbg !13728
  %374 = bitcast i8* %373 to i32*, !dbg !13728
  %add.ptr576 = getelementptr i32, i32* %374, i64 66, !dbg !13728
  %375 = load i32, i32* %add.ptr576, align 4, !dbg !13728
  %call577 = call i32 @__fswab32(i32 %375) #8, !dbg !13728
  br label %cond.end578, !dbg !13728

cond.end578:                                      ; preds = %cond.false575, %cond.true559
  %cond579 = phi i32 [ %or574, %cond.true559 ], [ %call577, %cond.false575 ], !dbg !13728
  %and580 = and i32 %cond579, -983041, !dbg !13728
  %376 = load i32, i32* %_v394, align 4, !dbg !13728
  %and581 = and i32 %376, 15, !dbg !13728
  %shl582 = shl i32 %and581, 16, !dbg !13728
  %or583 = or i32 %and580, %shl582, !dbg !13728
  %and584 = and i32 %or583, -16777216, !dbg !13728
  %shr585 = lshr i32 %and584, 24, !dbg !13728
  %or586 = or i32 %or557, %shr585, !dbg !13728
  br label %cond.end615, !dbg !13728

cond.false587:                                    ; preds = %cond.end465
  %377 = load i8*, i8** %in, align 8, !dbg !13728
  %378 = bitcast i8* %377 to i32*, !dbg !13728
  %add.ptr588 = getelementptr i32, i32* %378, i64 66, !dbg !13728
  %379 = load i32, i32* %add.ptr588, align 4, !dbg !13728
  %380 = call i1 @llvm.is.constant.i32(i32 %379), !dbg !13728
  br i1 %380, label %cond.true589, label %cond.false605, !dbg !13728

cond.true589:                                     ; preds = %cond.false587
  %381 = load i8*, i8** %in, align 8, !dbg !13728
  %382 = bitcast i8* %381 to i32*, !dbg !13728
  %add.ptr590 = getelementptr i32, i32* %382, i64 66, !dbg !13728
  %383 = load i32, i32* %add.ptr590, align 4, !dbg !13728
  %and591 = and i32 %383, 255, !dbg !13728
  %shl592 = shl i32 %and591, 24, !dbg !13728
  %384 = load i8*, i8** %in, align 8, !dbg !13728
  %385 = bitcast i8* %384 to i32*, !dbg !13728
  %add.ptr593 = getelementptr i32, i32* %385, i64 66, !dbg !13728
  %386 = load i32, i32* %add.ptr593, align 4, !dbg !13728
  %and594 = and i32 %386, 65280, !dbg !13728
  %shl595 = shl i32 %and594, 8, !dbg !13728
  %or596 = or i32 %shl592, %shl595, !dbg !13728
  %387 = load i8*, i8** %in, align 8, !dbg !13728
  %388 = bitcast i8* %387 to i32*, !dbg !13728
  %add.ptr597 = getelementptr i32, i32* %388, i64 66, !dbg !13728
  %389 = load i32, i32* %add.ptr597, align 4, !dbg !13728
  %and598 = and i32 %389, 16711680, !dbg !13728
  %shr599 = lshr i32 %and598, 8, !dbg !13728
  %or600 = or i32 %or596, %shr599, !dbg !13728
  %390 = load i8*, i8** %in, align 8, !dbg !13728
  %391 = bitcast i8* %390 to i32*, !dbg !13728
  %add.ptr601 = getelementptr i32, i32* %391, i64 66, !dbg !13728
  %392 = load i32, i32* %add.ptr601, align 4, !dbg !13728
  %and602 = and i32 %392, -16777216, !dbg !13728
  %shr603 = lshr i32 %and602, 24, !dbg !13728
  %or604 = or i32 %or600, %shr603, !dbg !13728
  br label %cond.end608, !dbg !13728

cond.false605:                                    ; preds = %cond.false587
  %393 = load i8*, i8** %in, align 8, !dbg !13728
  %394 = bitcast i8* %393 to i32*, !dbg !13728
  %add.ptr606 = getelementptr i32, i32* %394, i64 66, !dbg !13728
  %395 = load i32, i32* %add.ptr606, align 4, !dbg !13728
  %call607 = call i32 @__fswab32(i32 %395) #8, !dbg !13728
  br label %cond.end608, !dbg !13728

cond.end608:                                      ; preds = %cond.false605, %cond.true589
  %cond609 = phi i32 [ %or604, %cond.true589 ], [ %call607, %cond.false605 ], !dbg !13728
  %and610 = and i32 %cond609, -983041, !dbg !13728
  %396 = load i32, i32* %_v394, align 4, !dbg !13728
  %and611 = and i32 %396, 15, !dbg !13728
  %shl612 = shl i32 %and611, 16, !dbg !13728
  %or613 = or i32 %and610, %shl612, !dbg !13728
  %call614 = call i32 @__fswab32(i32 %or613) #8, !dbg !13728
  br label %cond.end615, !dbg !13728

cond.end615:                                      ; preds = %cond.end608, %cond.end578
  %cond616 = phi i32 [ %or586, %cond.end578 ], [ %call614, %cond.end608 ], !dbg !13728
  %397 = load i8*, i8** %in, align 8, !dbg !13728
  %398 = bitcast i8* %397 to i32*, !dbg !13728
  %add.ptr617 = getelementptr i32, i32* %398, i64 66, !dbg !13728
  store i32 %cond616, i32* %add.ptr617, align 4, !dbg !13728
  br label %do.end618, !dbg !13728

do.end618:                                        ; preds = %cond.end615
  br label %do.body619, !dbg !13731

do.body619:                                       ; preds = %do.end618
  call void @llvm.dbg.declare(metadata i32* %_v620, metadata !13732, metadata !DIExpression()), !dbg !13734
  store i32 1877, i32* %_v620, align 4, !dbg !13734
  br label %do.body621, !dbg !13734

do.body621:                                       ; preds = %do.body619
  br label %do.end622, !dbg !13735

do.end622:                                        ; preds = %do.body621
  %399 = load i8*, i8** %in, align 8, !dbg !13734
  %400 = bitcast i8* %399 to i32*, !dbg !13734
  %add.ptr623 = getelementptr i32, i32* %400, i64 0, !dbg !13734
  %401 = load i32, i32* %add.ptr623, align 4, !dbg !13734
  %402 = call i1 @llvm.is.constant.i32(i32 %401), !dbg !13734
  br i1 %402, label %cond.true624, label %cond.false640, !dbg !13734

cond.true624:                                     ; preds = %do.end622
  %403 = load i8*, i8** %in, align 8, !dbg !13734
  %404 = bitcast i8* %403 to i32*, !dbg !13734
  %add.ptr625 = getelementptr i32, i32* %404, i64 0, !dbg !13734
  %405 = load i32, i32* %add.ptr625, align 4, !dbg !13734
  %and626 = and i32 %405, 255, !dbg !13734
  %shl627 = shl i32 %and626, 24, !dbg !13734
  %406 = load i8*, i8** %in, align 8, !dbg !13734
  %407 = bitcast i8* %406 to i32*, !dbg !13734
  %add.ptr628 = getelementptr i32, i32* %407, i64 0, !dbg !13734
  %408 = load i32, i32* %add.ptr628, align 4, !dbg !13734
  %and629 = and i32 %408, 65280, !dbg !13734
  %shl630 = shl i32 %and629, 8, !dbg !13734
  %or631 = or i32 %shl627, %shl630, !dbg !13734
  %409 = load i8*, i8** %in, align 8, !dbg !13734
  %410 = bitcast i8* %409 to i32*, !dbg !13734
  %add.ptr632 = getelementptr i32, i32* %410, i64 0, !dbg !13734
  %411 = load i32, i32* %add.ptr632, align 4, !dbg !13734
  %and633 = and i32 %411, 16711680, !dbg !13734
  %shr634 = lshr i32 %and633, 8, !dbg !13734
  %or635 = or i32 %or631, %shr634, !dbg !13734
  %412 = load i8*, i8** %in, align 8, !dbg !13734
  %413 = bitcast i8* %412 to i32*, !dbg !13734
  %add.ptr636 = getelementptr i32, i32* %413, i64 0, !dbg !13734
  %414 = load i32, i32* %add.ptr636, align 4, !dbg !13734
  %and637 = and i32 %414, -16777216, !dbg !13734
  %shr638 = lshr i32 %and637, 24, !dbg !13734
  %or639 = or i32 %or635, %shr638, !dbg !13734
  br label %cond.end643, !dbg !13734

cond.false640:                                    ; preds = %do.end622
  %415 = load i8*, i8** %in, align 8, !dbg !13734
  %416 = bitcast i8* %415 to i32*, !dbg !13734
  %add.ptr641 = getelementptr i32, i32* %416, i64 0, !dbg !13734
  %417 = load i32, i32* %add.ptr641, align 4, !dbg !13734
  %call642 = call i32 @__fswab32(i32 %417) #8, !dbg !13734
  br label %cond.end643, !dbg !13734

cond.end643:                                      ; preds = %cond.false640, %cond.true624
  %cond644 = phi i32 [ %or639, %cond.true624 ], [ %call642, %cond.false640 ], !dbg !13734
  %and645 = and i32 %cond644, 65535, !dbg !13734
  %418 = load i32, i32* %_v620, align 4, !dbg !13734
  %and646 = and i32 %418, 65535, !dbg !13734
  %shl647 = shl i32 %and646, 16, !dbg !13734
  %or648 = or i32 %and645, %shl647, !dbg !13734
  %419 = call i1 @llvm.is.constant.i32(i32 %or648), !dbg !13734
  br i1 %419, label %cond.true649, label %cond.false765, !dbg !13734

cond.true649:                                     ; preds = %cond.end643
  %420 = load i8*, i8** %in, align 8, !dbg !13734
  %421 = bitcast i8* %420 to i32*, !dbg !13734
  %add.ptr650 = getelementptr i32, i32* %421, i64 0, !dbg !13734
  %422 = load i32, i32* %add.ptr650, align 4, !dbg !13734
  %423 = call i1 @llvm.is.constant.i32(i32 %422), !dbg !13734
  br i1 %423, label %cond.true651, label %cond.false667, !dbg !13734

cond.true651:                                     ; preds = %cond.true649
  %424 = load i8*, i8** %in, align 8, !dbg !13734
  %425 = bitcast i8* %424 to i32*, !dbg !13734
  %add.ptr652 = getelementptr i32, i32* %425, i64 0, !dbg !13734
  %426 = load i32, i32* %add.ptr652, align 4, !dbg !13734
  %and653 = and i32 %426, 255, !dbg !13734
  %shl654 = shl i32 %and653, 24, !dbg !13734
  %427 = load i8*, i8** %in, align 8, !dbg !13734
  %428 = bitcast i8* %427 to i32*, !dbg !13734
  %add.ptr655 = getelementptr i32, i32* %428, i64 0, !dbg !13734
  %429 = load i32, i32* %add.ptr655, align 4, !dbg !13734
  %and656 = and i32 %429, 65280, !dbg !13734
  %shl657 = shl i32 %and656, 8, !dbg !13734
  %or658 = or i32 %shl654, %shl657, !dbg !13734
  %430 = load i8*, i8** %in, align 8, !dbg !13734
  %431 = bitcast i8* %430 to i32*, !dbg !13734
  %add.ptr659 = getelementptr i32, i32* %431, i64 0, !dbg !13734
  %432 = load i32, i32* %add.ptr659, align 4, !dbg !13734
  %and660 = and i32 %432, 16711680, !dbg !13734
  %shr661 = lshr i32 %and660, 8, !dbg !13734
  %or662 = or i32 %or658, %shr661, !dbg !13734
  %433 = load i8*, i8** %in, align 8, !dbg !13734
  %434 = bitcast i8* %433 to i32*, !dbg !13734
  %add.ptr663 = getelementptr i32, i32* %434, i64 0, !dbg !13734
  %435 = load i32, i32* %add.ptr663, align 4, !dbg !13734
  %and664 = and i32 %435, -16777216, !dbg !13734
  %shr665 = lshr i32 %and664, 24, !dbg !13734
  %or666 = or i32 %or662, %shr665, !dbg !13734
  br label %cond.end670, !dbg !13734

cond.false667:                                    ; preds = %cond.true649
  %436 = load i8*, i8** %in, align 8, !dbg !13734
  %437 = bitcast i8* %436 to i32*, !dbg !13734
  %add.ptr668 = getelementptr i32, i32* %437, i64 0, !dbg !13734
  %438 = load i32, i32* %add.ptr668, align 4, !dbg !13734
  %call669 = call i32 @__fswab32(i32 %438) #8, !dbg !13734
  br label %cond.end670, !dbg !13734

cond.end670:                                      ; preds = %cond.false667, %cond.true651
  %cond671 = phi i32 [ %or666, %cond.true651 ], [ %call669, %cond.false667 ], !dbg !13734
  %and672 = and i32 %cond671, 65535, !dbg !13734
  %439 = load i32, i32* %_v620, align 4, !dbg !13734
  %and673 = and i32 %439, 65535, !dbg !13734
  %shl674 = shl i32 %and673, 16, !dbg !13734
  %or675 = or i32 %and672, %shl674, !dbg !13734
  %and676 = and i32 %or675, 255, !dbg !13734
  %shl677 = shl i32 %and676, 24, !dbg !13734
  %440 = load i8*, i8** %in, align 8, !dbg !13734
  %441 = bitcast i8* %440 to i32*, !dbg !13734
  %add.ptr678 = getelementptr i32, i32* %441, i64 0, !dbg !13734
  %442 = load i32, i32* %add.ptr678, align 4, !dbg !13734
  %443 = call i1 @llvm.is.constant.i32(i32 %442), !dbg !13734
  br i1 %443, label %cond.true679, label %cond.false695, !dbg !13734

cond.true679:                                     ; preds = %cond.end670
  %444 = load i8*, i8** %in, align 8, !dbg !13734
  %445 = bitcast i8* %444 to i32*, !dbg !13734
  %add.ptr680 = getelementptr i32, i32* %445, i64 0, !dbg !13734
  %446 = load i32, i32* %add.ptr680, align 4, !dbg !13734
  %and681 = and i32 %446, 255, !dbg !13734
  %shl682 = shl i32 %and681, 24, !dbg !13734
  %447 = load i8*, i8** %in, align 8, !dbg !13734
  %448 = bitcast i8* %447 to i32*, !dbg !13734
  %add.ptr683 = getelementptr i32, i32* %448, i64 0, !dbg !13734
  %449 = load i32, i32* %add.ptr683, align 4, !dbg !13734
  %and684 = and i32 %449, 65280, !dbg !13734
  %shl685 = shl i32 %and684, 8, !dbg !13734
  %or686 = or i32 %shl682, %shl685, !dbg !13734
  %450 = load i8*, i8** %in, align 8, !dbg !13734
  %451 = bitcast i8* %450 to i32*, !dbg !13734
  %add.ptr687 = getelementptr i32, i32* %451, i64 0, !dbg !13734
  %452 = load i32, i32* %add.ptr687, align 4, !dbg !13734
  %and688 = and i32 %452, 16711680, !dbg !13734
  %shr689 = lshr i32 %and688, 8, !dbg !13734
  %or690 = or i32 %or686, %shr689, !dbg !13734
  %453 = load i8*, i8** %in, align 8, !dbg !13734
  %454 = bitcast i8* %453 to i32*, !dbg !13734
  %add.ptr691 = getelementptr i32, i32* %454, i64 0, !dbg !13734
  %455 = load i32, i32* %add.ptr691, align 4, !dbg !13734
  %and692 = and i32 %455, -16777216, !dbg !13734
  %shr693 = lshr i32 %and692, 24, !dbg !13734
  %or694 = or i32 %or690, %shr693, !dbg !13734
  br label %cond.end698, !dbg !13734

cond.false695:                                    ; preds = %cond.end670
  %456 = load i8*, i8** %in, align 8, !dbg !13734
  %457 = bitcast i8* %456 to i32*, !dbg !13734
  %add.ptr696 = getelementptr i32, i32* %457, i64 0, !dbg !13734
  %458 = load i32, i32* %add.ptr696, align 4, !dbg !13734
  %call697 = call i32 @__fswab32(i32 %458) #8, !dbg !13734
  br label %cond.end698, !dbg !13734

cond.end698:                                      ; preds = %cond.false695, %cond.true679
  %cond699 = phi i32 [ %or694, %cond.true679 ], [ %call697, %cond.false695 ], !dbg !13734
  %and700 = and i32 %cond699, 65535, !dbg !13734
  %459 = load i32, i32* %_v620, align 4, !dbg !13734
  %and701 = and i32 %459, 65535, !dbg !13734
  %shl702 = shl i32 %and701, 16, !dbg !13734
  %or703 = or i32 %and700, %shl702, !dbg !13734
  %and704 = and i32 %or703, 65280, !dbg !13734
  %shl705 = shl i32 %and704, 8, !dbg !13734
  %or706 = or i32 %shl677, %shl705, !dbg !13734
  %460 = load i8*, i8** %in, align 8, !dbg !13734
  %461 = bitcast i8* %460 to i32*, !dbg !13734
  %add.ptr707 = getelementptr i32, i32* %461, i64 0, !dbg !13734
  %462 = load i32, i32* %add.ptr707, align 4, !dbg !13734
  %463 = call i1 @llvm.is.constant.i32(i32 %462), !dbg !13734
  br i1 %463, label %cond.true708, label %cond.false724, !dbg !13734

cond.true708:                                     ; preds = %cond.end698
  %464 = load i8*, i8** %in, align 8, !dbg !13734
  %465 = bitcast i8* %464 to i32*, !dbg !13734
  %add.ptr709 = getelementptr i32, i32* %465, i64 0, !dbg !13734
  %466 = load i32, i32* %add.ptr709, align 4, !dbg !13734
  %and710 = and i32 %466, 255, !dbg !13734
  %shl711 = shl i32 %and710, 24, !dbg !13734
  %467 = load i8*, i8** %in, align 8, !dbg !13734
  %468 = bitcast i8* %467 to i32*, !dbg !13734
  %add.ptr712 = getelementptr i32, i32* %468, i64 0, !dbg !13734
  %469 = load i32, i32* %add.ptr712, align 4, !dbg !13734
  %and713 = and i32 %469, 65280, !dbg !13734
  %shl714 = shl i32 %and713, 8, !dbg !13734
  %or715 = or i32 %shl711, %shl714, !dbg !13734
  %470 = load i8*, i8** %in, align 8, !dbg !13734
  %471 = bitcast i8* %470 to i32*, !dbg !13734
  %add.ptr716 = getelementptr i32, i32* %471, i64 0, !dbg !13734
  %472 = load i32, i32* %add.ptr716, align 4, !dbg !13734
  %and717 = and i32 %472, 16711680, !dbg !13734
  %shr718 = lshr i32 %and717, 8, !dbg !13734
  %or719 = or i32 %or715, %shr718, !dbg !13734
  %473 = load i8*, i8** %in, align 8, !dbg !13734
  %474 = bitcast i8* %473 to i32*, !dbg !13734
  %add.ptr720 = getelementptr i32, i32* %474, i64 0, !dbg !13734
  %475 = load i32, i32* %add.ptr720, align 4, !dbg !13734
  %and721 = and i32 %475, -16777216, !dbg !13734
  %shr722 = lshr i32 %and721, 24, !dbg !13734
  %or723 = or i32 %or719, %shr722, !dbg !13734
  br label %cond.end727, !dbg !13734

cond.false724:                                    ; preds = %cond.end698
  %476 = load i8*, i8** %in, align 8, !dbg !13734
  %477 = bitcast i8* %476 to i32*, !dbg !13734
  %add.ptr725 = getelementptr i32, i32* %477, i64 0, !dbg !13734
  %478 = load i32, i32* %add.ptr725, align 4, !dbg !13734
  %call726 = call i32 @__fswab32(i32 %478) #8, !dbg !13734
  br label %cond.end727, !dbg !13734

cond.end727:                                      ; preds = %cond.false724, %cond.true708
  %cond728 = phi i32 [ %or723, %cond.true708 ], [ %call726, %cond.false724 ], !dbg !13734
  %and729 = and i32 %cond728, 65535, !dbg !13734
  %479 = load i32, i32* %_v620, align 4, !dbg !13734
  %and730 = and i32 %479, 65535, !dbg !13734
  %shl731 = shl i32 %and730, 16, !dbg !13734
  %or732 = or i32 %and729, %shl731, !dbg !13734
  %and733 = and i32 %or732, 16711680, !dbg !13734
  %shr734 = lshr i32 %and733, 8, !dbg !13734
  %or735 = or i32 %or706, %shr734, !dbg !13734
  %480 = load i8*, i8** %in, align 8, !dbg !13734
  %481 = bitcast i8* %480 to i32*, !dbg !13734
  %add.ptr736 = getelementptr i32, i32* %481, i64 0, !dbg !13734
  %482 = load i32, i32* %add.ptr736, align 4, !dbg !13734
  %483 = call i1 @llvm.is.constant.i32(i32 %482), !dbg !13734
  br i1 %483, label %cond.true737, label %cond.false753, !dbg !13734

cond.true737:                                     ; preds = %cond.end727
  %484 = load i8*, i8** %in, align 8, !dbg !13734
  %485 = bitcast i8* %484 to i32*, !dbg !13734
  %add.ptr738 = getelementptr i32, i32* %485, i64 0, !dbg !13734
  %486 = load i32, i32* %add.ptr738, align 4, !dbg !13734
  %and739 = and i32 %486, 255, !dbg !13734
  %shl740 = shl i32 %and739, 24, !dbg !13734
  %487 = load i8*, i8** %in, align 8, !dbg !13734
  %488 = bitcast i8* %487 to i32*, !dbg !13734
  %add.ptr741 = getelementptr i32, i32* %488, i64 0, !dbg !13734
  %489 = load i32, i32* %add.ptr741, align 4, !dbg !13734
  %and742 = and i32 %489, 65280, !dbg !13734
  %shl743 = shl i32 %and742, 8, !dbg !13734
  %or744 = or i32 %shl740, %shl743, !dbg !13734
  %490 = load i8*, i8** %in, align 8, !dbg !13734
  %491 = bitcast i8* %490 to i32*, !dbg !13734
  %add.ptr745 = getelementptr i32, i32* %491, i64 0, !dbg !13734
  %492 = load i32, i32* %add.ptr745, align 4, !dbg !13734
  %and746 = and i32 %492, 16711680, !dbg !13734
  %shr747 = lshr i32 %and746, 8, !dbg !13734
  %or748 = or i32 %or744, %shr747, !dbg !13734
  %493 = load i8*, i8** %in, align 8, !dbg !13734
  %494 = bitcast i8* %493 to i32*, !dbg !13734
  %add.ptr749 = getelementptr i32, i32* %494, i64 0, !dbg !13734
  %495 = load i32, i32* %add.ptr749, align 4, !dbg !13734
  %and750 = and i32 %495, -16777216, !dbg !13734
  %shr751 = lshr i32 %and750, 24, !dbg !13734
  %or752 = or i32 %or748, %shr751, !dbg !13734
  br label %cond.end756, !dbg !13734

cond.false753:                                    ; preds = %cond.end727
  %496 = load i8*, i8** %in, align 8, !dbg !13734
  %497 = bitcast i8* %496 to i32*, !dbg !13734
  %add.ptr754 = getelementptr i32, i32* %497, i64 0, !dbg !13734
  %498 = load i32, i32* %add.ptr754, align 4, !dbg !13734
  %call755 = call i32 @__fswab32(i32 %498) #8, !dbg !13734
  br label %cond.end756, !dbg !13734

cond.end756:                                      ; preds = %cond.false753, %cond.true737
  %cond757 = phi i32 [ %or752, %cond.true737 ], [ %call755, %cond.false753 ], !dbg !13734
  %and758 = and i32 %cond757, 65535, !dbg !13734
  %499 = load i32, i32* %_v620, align 4, !dbg !13734
  %and759 = and i32 %499, 65535, !dbg !13734
  %shl760 = shl i32 %and759, 16, !dbg !13734
  %or761 = or i32 %and758, %shl760, !dbg !13734
  %and762 = and i32 %or761, -16777216, !dbg !13734
  %shr763 = lshr i32 %and762, 24, !dbg !13734
  %or764 = or i32 %or735, %shr763, !dbg !13734
  br label %cond.end793, !dbg !13734

cond.false765:                                    ; preds = %cond.end643
  %500 = load i8*, i8** %in, align 8, !dbg !13734
  %501 = bitcast i8* %500 to i32*, !dbg !13734
  %add.ptr766 = getelementptr i32, i32* %501, i64 0, !dbg !13734
  %502 = load i32, i32* %add.ptr766, align 4, !dbg !13734
  %503 = call i1 @llvm.is.constant.i32(i32 %502), !dbg !13734
  br i1 %503, label %cond.true767, label %cond.false783, !dbg !13734

cond.true767:                                     ; preds = %cond.false765
  %504 = load i8*, i8** %in, align 8, !dbg !13734
  %505 = bitcast i8* %504 to i32*, !dbg !13734
  %add.ptr768 = getelementptr i32, i32* %505, i64 0, !dbg !13734
  %506 = load i32, i32* %add.ptr768, align 4, !dbg !13734
  %and769 = and i32 %506, 255, !dbg !13734
  %shl770 = shl i32 %and769, 24, !dbg !13734
  %507 = load i8*, i8** %in, align 8, !dbg !13734
  %508 = bitcast i8* %507 to i32*, !dbg !13734
  %add.ptr771 = getelementptr i32, i32* %508, i64 0, !dbg !13734
  %509 = load i32, i32* %add.ptr771, align 4, !dbg !13734
  %and772 = and i32 %509, 65280, !dbg !13734
  %shl773 = shl i32 %and772, 8, !dbg !13734
  %or774 = or i32 %shl770, %shl773, !dbg !13734
  %510 = load i8*, i8** %in, align 8, !dbg !13734
  %511 = bitcast i8* %510 to i32*, !dbg !13734
  %add.ptr775 = getelementptr i32, i32* %511, i64 0, !dbg !13734
  %512 = load i32, i32* %add.ptr775, align 4, !dbg !13734
  %and776 = and i32 %512, 16711680, !dbg !13734
  %shr777 = lshr i32 %and776, 8, !dbg !13734
  %or778 = or i32 %or774, %shr777, !dbg !13734
  %513 = load i8*, i8** %in, align 8, !dbg !13734
  %514 = bitcast i8* %513 to i32*, !dbg !13734
  %add.ptr779 = getelementptr i32, i32* %514, i64 0, !dbg !13734
  %515 = load i32, i32* %add.ptr779, align 4, !dbg !13734
  %and780 = and i32 %515, -16777216, !dbg !13734
  %shr781 = lshr i32 %and780, 24, !dbg !13734
  %or782 = or i32 %or778, %shr781, !dbg !13734
  br label %cond.end786, !dbg !13734

cond.false783:                                    ; preds = %cond.false765
  %516 = load i8*, i8** %in, align 8, !dbg !13734
  %517 = bitcast i8* %516 to i32*, !dbg !13734
  %add.ptr784 = getelementptr i32, i32* %517, i64 0, !dbg !13734
  %518 = load i32, i32* %add.ptr784, align 4, !dbg !13734
  %call785 = call i32 @__fswab32(i32 %518) #8, !dbg !13734
  br label %cond.end786, !dbg !13734

cond.end786:                                      ; preds = %cond.false783, %cond.true767
  %cond787 = phi i32 [ %or782, %cond.true767 ], [ %call785, %cond.false783 ], !dbg !13734
  %and788 = and i32 %cond787, 65535, !dbg !13734
  %519 = load i32, i32* %_v620, align 4, !dbg !13734
  %and789 = and i32 %519, 65535, !dbg !13734
  %shl790 = shl i32 %and789, 16, !dbg !13734
  %or791 = or i32 %and788, %shl790, !dbg !13734
  %call792 = call i32 @__fswab32(i32 %or791) #8, !dbg !13734
  br label %cond.end793, !dbg !13734

cond.end793:                                      ; preds = %cond.end786, %cond.end756
  %cond794 = phi i32 [ %or764, %cond.end756 ], [ %call792, %cond.end786 ], !dbg !13734
  %520 = load i8*, i8** %in, align 8, !dbg !13734
  %521 = bitcast i8* %520 to i32*, !dbg !13734
  %add.ptr795 = getelementptr i32, i32* %521, i64 0, !dbg !13734
  store i32 %cond794, i32* %add.ptr795, align 4, !dbg !13734
  br label %do.end796, !dbg !13734

do.end796:                                        ; preds = %cond.end793
  call void @llvm.dbg.declare(metadata [4 x i32]* %_out, metadata !13737, metadata !DIExpression()), !dbg !13739
  %522 = bitcast [4 x i32]* %_out to i8*, !dbg !13739
  call void @llvm.memset.p0i8.i64(i8* align 16 %522, i8 0, i64 16, i1 false), !dbg !13739
  %523 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %port_mdev.addr, align 8, !dbg !13740
  %524 = load i8*, i8** %in, align 8, !dbg !13740
  %arraydecay798 = getelementptr inbounds [4 x i32], [4 x i32]* %_out, i64 0, i64 0, !dbg !13740
  %525 = bitcast i32* %arraydecay798 to i8*, !dbg !13740
  %call799 = call i32 @mlx5_cmd_exec(%struct.mlx5_core_dev* %523, i8* %524, i32 512, i8* %525, i32 16) #9, !dbg !13740
  store i32 %call799, i32* %tmp797, align 4, !dbg !13739
  %526 = load i32, i32* %tmp797, align 4, !dbg !13740
  store i32 %526, i32* %tmp, align 4, !dbg !13739
  %527 = load i32, i32* %tmp, align 4, !dbg !13739
  store i32 %527, i32* %err, align 4, !dbg !13742
  %528 = load i32, i32* %err, align 4, !dbg !13743
  %tobool800 = icmp ne i32 %528, 0, !dbg !13743
  br i1 %tobool800, label %if.then801, label %if.end803, !dbg !13745

if.then801:                                       ; preds = %do.end796
  %529 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %port_mdev.addr, align 8, !dbg !13746
  %call802 = call i32 @mlx5_nic_vport_disable_roce(%struct.mlx5_core_dev* %529) #9, !dbg !13747
  br label %if.end803, !dbg !13747

if.end803:                                        ; preds = %if.then801, %do.end796
  br label %free, !dbg !13743

free:                                             ; preds = %if.end803, %if.then3
  call void @llvm.dbg.label(metadata !13748), !dbg !13749
  %530 = load i8*, i8** %in, align 8, !dbg !13750
  call void @kvfree(i8* %530) #9, !dbg !13751
  %531 = load i32, i32* %err, align 4, !dbg !13752
  store i32 %531, i32* %retval, align 4, !dbg !13753
  br label %return, !dbg !13753

return:                                           ; preds = %free, %if.then
  %532 = load i32, i32* %retval, align 4, !dbg !13754
  ret i32 %532, !dbg !13754
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @mlx5_nic_vport_unaffiliate_multiport(%struct.mlx5_core_dev* %port_mdev) #0 !dbg !13755 {
entry:
  %retval = alloca i32, align 4
  %port_mdev.addr = alloca %struct.mlx5_core_dev*, align 8
  %inlen = alloca i32, align 4
  %in = alloca i8*, align 8
  %err = alloca i32, align 4
  %_v = alloca i32, align 4
  %_v168 = alloca i32, align 4
  %_v346 = alloca i32, align 4
  %_v524 = alloca i32, align 4
  %_out = alloca [4 x i32], align 16
  %tmp = alloca i32, align 4
  %tmp701 = alloca i32, align 4
  store %struct.mlx5_core_dev* %port_mdev, %struct.mlx5_core_dev** %port_mdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_core_dev** %port_mdev.addr, metadata !13756, metadata !DIExpression()), !dbg !13757
  call void @llvm.dbg.declare(metadata i32* %inlen, metadata !13758, metadata !DIExpression()), !dbg !13759
  store i32 512, i32* %inlen, align 4, !dbg !13759
  call void @llvm.dbg.declare(metadata i8** %in, metadata !13760, metadata !DIExpression()), !dbg !13761
  call void @llvm.dbg.declare(metadata i32* %err, metadata !13762, metadata !DIExpression()), !dbg !13763
  %0 = load i32, i32* %inlen, align 4, !dbg !13764
  %conv = sext i32 %0 to i64, !dbg !13764
  %call = call i8* @kvzalloc(i64 %conv, i32 3264) #9, !dbg !13765
  store i8* %call, i8** %in, align 8, !dbg !13766
  %1 = load i8*, i8** %in, align 8, !dbg !13767
  %tobool = icmp ne i8* %1, null, !dbg !13767
  br i1 %tobool, label %if.end, label %if.then, !dbg !13769

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !13770
  br label %return, !dbg !13770

if.end:                                           ; preds = %entry
  br label %do.body, !dbg !13771

do.body:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %_v, metadata !13772, metadata !DIExpression()), !dbg !13774
  store i32 1, i32* %_v, align 4, !dbg !13774
  br label %do.body1, !dbg !13774

do.body1:                                         ; preds = %do.body
  br label %do.end, !dbg !13775

do.end:                                           ; preds = %do.body1
  %2 = load i8*, i8** %in, align 8, !dbg !13774
  %3 = bitcast i8* %2 to i32*, !dbg !13774
  %add.ptr = getelementptr i32, i32* %3, i64 3, !dbg !13774
  %4 = load i32, i32* %add.ptr, align 4, !dbg !13774
  %5 = call i1 @llvm.is.constant.i32(i32 %4), !dbg !13774
  br i1 %5, label %cond.true, label %cond.false, !dbg !13774

cond.true:                                        ; preds = %do.end
  %6 = load i8*, i8** %in, align 8, !dbg !13774
  %7 = bitcast i8* %6 to i32*, !dbg !13774
  %add.ptr2 = getelementptr i32, i32* %7, i64 3, !dbg !13774
  %8 = load i32, i32* %add.ptr2, align 4, !dbg !13774
  %and = and i32 %8, 255, !dbg !13774
  %shl = shl i32 %and, 24, !dbg !13774
  %9 = load i8*, i8** %in, align 8, !dbg !13774
  %10 = bitcast i8* %9 to i32*, !dbg !13774
  %add.ptr3 = getelementptr i32, i32* %10, i64 3, !dbg !13774
  %11 = load i32, i32* %add.ptr3, align 4, !dbg !13774
  %and4 = and i32 %11, 65280, !dbg !13774
  %shl5 = shl i32 %and4, 8, !dbg !13774
  %or = or i32 %shl, %shl5, !dbg !13774
  %12 = load i8*, i8** %in, align 8, !dbg !13774
  %13 = bitcast i8* %12 to i32*, !dbg !13774
  %add.ptr6 = getelementptr i32, i32* %13, i64 3, !dbg !13774
  %14 = load i32, i32* %add.ptr6, align 4, !dbg !13774
  %and7 = and i32 %14, 16711680, !dbg !13774
  %shr = lshr i32 %and7, 8, !dbg !13774
  %or8 = or i32 %or, %shr, !dbg !13774
  %15 = load i8*, i8** %in, align 8, !dbg !13774
  %16 = bitcast i8* %15 to i32*, !dbg !13774
  %add.ptr9 = getelementptr i32, i32* %16, i64 3, !dbg !13774
  %17 = load i32, i32* %add.ptr9, align 4, !dbg !13774
  %and10 = and i32 %17, -16777216, !dbg !13774
  %shr11 = lshr i32 %and10, 24, !dbg !13774
  %or12 = or i32 %or8, %shr11, !dbg !13774
  br label %cond.end, !dbg !13774

cond.false:                                       ; preds = %do.end
  %18 = load i8*, i8** %in, align 8, !dbg !13774
  %19 = bitcast i8* %18 to i32*, !dbg !13774
  %add.ptr13 = getelementptr i32, i32* %19, i64 3, !dbg !13774
  %20 = load i32, i32* %add.ptr13, align 4, !dbg !13774
  %call14 = call i32 @__fswab32(i32 %20) #8, !dbg !13774
  br label %cond.end, !dbg !13774

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %or12, %cond.true ], [ %call14, %cond.false ], !dbg !13774
  %and15 = and i32 %cond, -8193, !dbg !13774
  %21 = load i32, i32* %_v, align 4, !dbg !13774
  %and16 = and i32 %21, 1, !dbg !13774
  %shl17 = shl i32 %and16, 13, !dbg !13774
  %or18 = or i32 %and15, %shl17, !dbg !13774
  %22 = call i1 @llvm.is.constant.i32(i32 %or18), !dbg !13774
  br i1 %22, label %cond.true19, label %cond.false135, !dbg !13774

cond.true19:                                      ; preds = %cond.end
  %23 = load i8*, i8** %in, align 8, !dbg !13774
  %24 = bitcast i8* %23 to i32*, !dbg !13774
  %add.ptr20 = getelementptr i32, i32* %24, i64 3, !dbg !13774
  %25 = load i32, i32* %add.ptr20, align 4, !dbg !13774
  %26 = call i1 @llvm.is.constant.i32(i32 %25), !dbg !13774
  br i1 %26, label %cond.true21, label %cond.false37, !dbg !13774

cond.true21:                                      ; preds = %cond.true19
  %27 = load i8*, i8** %in, align 8, !dbg !13774
  %28 = bitcast i8* %27 to i32*, !dbg !13774
  %add.ptr22 = getelementptr i32, i32* %28, i64 3, !dbg !13774
  %29 = load i32, i32* %add.ptr22, align 4, !dbg !13774
  %and23 = and i32 %29, 255, !dbg !13774
  %shl24 = shl i32 %and23, 24, !dbg !13774
  %30 = load i8*, i8** %in, align 8, !dbg !13774
  %31 = bitcast i8* %30 to i32*, !dbg !13774
  %add.ptr25 = getelementptr i32, i32* %31, i64 3, !dbg !13774
  %32 = load i32, i32* %add.ptr25, align 4, !dbg !13774
  %and26 = and i32 %32, 65280, !dbg !13774
  %shl27 = shl i32 %and26, 8, !dbg !13774
  %or28 = or i32 %shl24, %shl27, !dbg !13774
  %33 = load i8*, i8** %in, align 8, !dbg !13774
  %34 = bitcast i8* %33 to i32*, !dbg !13774
  %add.ptr29 = getelementptr i32, i32* %34, i64 3, !dbg !13774
  %35 = load i32, i32* %add.ptr29, align 4, !dbg !13774
  %and30 = and i32 %35, 16711680, !dbg !13774
  %shr31 = lshr i32 %and30, 8, !dbg !13774
  %or32 = or i32 %or28, %shr31, !dbg !13774
  %36 = load i8*, i8** %in, align 8, !dbg !13774
  %37 = bitcast i8* %36 to i32*, !dbg !13774
  %add.ptr33 = getelementptr i32, i32* %37, i64 3, !dbg !13774
  %38 = load i32, i32* %add.ptr33, align 4, !dbg !13774
  %and34 = and i32 %38, -16777216, !dbg !13774
  %shr35 = lshr i32 %and34, 24, !dbg !13774
  %or36 = or i32 %or32, %shr35, !dbg !13774
  br label %cond.end40, !dbg !13774

cond.false37:                                     ; preds = %cond.true19
  %39 = load i8*, i8** %in, align 8, !dbg !13774
  %40 = bitcast i8* %39 to i32*, !dbg !13774
  %add.ptr38 = getelementptr i32, i32* %40, i64 3, !dbg !13774
  %41 = load i32, i32* %add.ptr38, align 4, !dbg !13774
  %call39 = call i32 @__fswab32(i32 %41) #8, !dbg !13774
  br label %cond.end40, !dbg !13774

cond.end40:                                       ; preds = %cond.false37, %cond.true21
  %cond41 = phi i32 [ %or36, %cond.true21 ], [ %call39, %cond.false37 ], !dbg !13774
  %and42 = and i32 %cond41, -8193, !dbg !13774
  %42 = load i32, i32* %_v, align 4, !dbg !13774
  %and43 = and i32 %42, 1, !dbg !13774
  %shl44 = shl i32 %and43, 13, !dbg !13774
  %or45 = or i32 %and42, %shl44, !dbg !13774
  %and46 = and i32 %or45, 255, !dbg !13774
  %shl47 = shl i32 %and46, 24, !dbg !13774
  %43 = load i8*, i8** %in, align 8, !dbg !13774
  %44 = bitcast i8* %43 to i32*, !dbg !13774
  %add.ptr48 = getelementptr i32, i32* %44, i64 3, !dbg !13774
  %45 = load i32, i32* %add.ptr48, align 4, !dbg !13774
  %46 = call i1 @llvm.is.constant.i32(i32 %45), !dbg !13774
  br i1 %46, label %cond.true49, label %cond.false65, !dbg !13774

cond.true49:                                      ; preds = %cond.end40
  %47 = load i8*, i8** %in, align 8, !dbg !13774
  %48 = bitcast i8* %47 to i32*, !dbg !13774
  %add.ptr50 = getelementptr i32, i32* %48, i64 3, !dbg !13774
  %49 = load i32, i32* %add.ptr50, align 4, !dbg !13774
  %and51 = and i32 %49, 255, !dbg !13774
  %shl52 = shl i32 %and51, 24, !dbg !13774
  %50 = load i8*, i8** %in, align 8, !dbg !13774
  %51 = bitcast i8* %50 to i32*, !dbg !13774
  %add.ptr53 = getelementptr i32, i32* %51, i64 3, !dbg !13774
  %52 = load i32, i32* %add.ptr53, align 4, !dbg !13774
  %and54 = and i32 %52, 65280, !dbg !13774
  %shl55 = shl i32 %and54, 8, !dbg !13774
  %or56 = or i32 %shl52, %shl55, !dbg !13774
  %53 = load i8*, i8** %in, align 8, !dbg !13774
  %54 = bitcast i8* %53 to i32*, !dbg !13774
  %add.ptr57 = getelementptr i32, i32* %54, i64 3, !dbg !13774
  %55 = load i32, i32* %add.ptr57, align 4, !dbg !13774
  %and58 = and i32 %55, 16711680, !dbg !13774
  %shr59 = lshr i32 %and58, 8, !dbg !13774
  %or60 = or i32 %or56, %shr59, !dbg !13774
  %56 = load i8*, i8** %in, align 8, !dbg !13774
  %57 = bitcast i8* %56 to i32*, !dbg !13774
  %add.ptr61 = getelementptr i32, i32* %57, i64 3, !dbg !13774
  %58 = load i32, i32* %add.ptr61, align 4, !dbg !13774
  %and62 = and i32 %58, -16777216, !dbg !13774
  %shr63 = lshr i32 %and62, 24, !dbg !13774
  %or64 = or i32 %or60, %shr63, !dbg !13774
  br label %cond.end68, !dbg !13774

cond.false65:                                     ; preds = %cond.end40
  %59 = load i8*, i8** %in, align 8, !dbg !13774
  %60 = bitcast i8* %59 to i32*, !dbg !13774
  %add.ptr66 = getelementptr i32, i32* %60, i64 3, !dbg !13774
  %61 = load i32, i32* %add.ptr66, align 4, !dbg !13774
  %call67 = call i32 @__fswab32(i32 %61) #8, !dbg !13774
  br label %cond.end68, !dbg !13774

cond.end68:                                       ; preds = %cond.false65, %cond.true49
  %cond69 = phi i32 [ %or64, %cond.true49 ], [ %call67, %cond.false65 ], !dbg !13774
  %and70 = and i32 %cond69, -8193, !dbg !13774
  %62 = load i32, i32* %_v, align 4, !dbg !13774
  %and71 = and i32 %62, 1, !dbg !13774
  %shl72 = shl i32 %and71, 13, !dbg !13774
  %or73 = or i32 %and70, %shl72, !dbg !13774
  %and74 = and i32 %or73, 65280, !dbg !13774
  %shl75 = shl i32 %and74, 8, !dbg !13774
  %or76 = or i32 %shl47, %shl75, !dbg !13774
  %63 = load i8*, i8** %in, align 8, !dbg !13774
  %64 = bitcast i8* %63 to i32*, !dbg !13774
  %add.ptr77 = getelementptr i32, i32* %64, i64 3, !dbg !13774
  %65 = load i32, i32* %add.ptr77, align 4, !dbg !13774
  %66 = call i1 @llvm.is.constant.i32(i32 %65), !dbg !13774
  br i1 %66, label %cond.true78, label %cond.false94, !dbg !13774

cond.true78:                                      ; preds = %cond.end68
  %67 = load i8*, i8** %in, align 8, !dbg !13774
  %68 = bitcast i8* %67 to i32*, !dbg !13774
  %add.ptr79 = getelementptr i32, i32* %68, i64 3, !dbg !13774
  %69 = load i32, i32* %add.ptr79, align 4, !dbg !13774
  %and80 = and i32 %69, 255, !dbg !13774
  %shl81 = shl i32 %and80, 24, !dbg !13774
  %70 = load i8*, i8** %in, align 8, !dbg !13774
  %71 = bitcast i8* %70 to i32*, !dbg !13774
  %add.ptr82 = getelementptr i32, i32* %71, i64 3, !dbg !13774
  %72 = load i32, i32* %add.ptr82, align 4, !dbg !13774
  %and83 = and i32 %72, 65280, !dbg !13774
  %shl84 = shl i32 %and83, 8, !dbg !13774
  %or85 = or i32 %shl81, %shl84, !dbg !13774
  %73 = load i8*, i8** %in, align 8, !dbg !13774
  %74 = bitcast i8* %73 to i32*, !dbg !13774
  %add.ptr86 = getelementptr i32, i32* %74, i64 3, !dbg !13774
  %75 = load i32, i32* %add.ptr86, align 4, !dbg !13774
  %and87 = and i32 %75, 16711680, !dbg !13774
  %shr88 = lshr i32 %and87, 8, !dbg !13774
  %or89 = or i32 %or85, %shr88, !dbg !13774
  %76 = load i8*, i8** %in, align 8, !dbg !13774
  %77 = bitcast i8* %76 to i32*, !dbg !13774
  %add.ptr90 = getelementptr i32, i32* %77, i64 3, !dbg !13774
  %78 = load i32, i32* %add.ptr90, align 4, !dbg !13774
  %and91 = and i32 %78, -16777216, !dbg !13774
  %shr92 = lshr i32 %and91, 24, !dbg !13774
  %or93 = or i32 %or89, %shr92, !dbg !13774
  br label %cond.end97, !dbg !13774

cond.false94:                                     ; preds = %cond.end68
  %79 = load i8*, i8** %in, align 8, !dbg !13774
  %80 = bitcast i8* %79 to i32*, !dbg !13774
  %add.ptr95 = getelementptr i32, i32* %80, i64 3, !dbg !13774
  %81 = load i32, i32* %add.ptr95, align 4, !dbg !13774
  %call96 = call i32 @__fswab32(i32 %81) #8, !dbg !13774
  br label %cond.end97, !dbg !13774

cond.end97:                                       ; preds = %cond.false94, %cond.true78
  %cond98 = phi i32 [ %or93, %cond.true78 ], [ %call96, %cond.false94 ], !dbg !13774
  %and99 = and i32 %cond98, -8193, !dbg !13774
  %82 = load i32, i32* %_v, align 4, !dbg !13774
  %and100 = and i32 %82, 1, !dbg !13774
  %shl101 = shl i32 %and100, 13, !dbg !13774
  %or102 = or i32 %and99, %shl101, !dbg !13774
  %and103 = and i32 %or102, 16711680, !dbg !13774
  %shr104 = lshr i32 %and103, 8, !dbg !13774
  %or105 = or i32 %or76, %shr104, !dbg !13774
  %83 = load i8*, i8** %in, align 8, !dbg !13774
  %84 = bitcast i8* %83 to i32*, !dbg !13774
  %add.ptr106 = getelementptr i32, i32* %84, i64 3, !dbg !13774
  %85 = load i32, i32* %add.ptr106, align 4, !dbg !13774
  %86 = call i1 @llvm.is.constant.i32(i32 %85), !dbg !13774
  br i1 %86, label %cond.true107, label %cond.false123, !dbg !13774

cond.true107:                                     ; preds = %cond.end97
  %87 = load i8*, i8** %in, align 8, !dbg !13774
  %88 = bitcast i8* %87 to i32*, !dbg !13774
  %add.ptr108 = getelementptr i32, i32* %88, i64 3, !dbg !13774
  %89 = load i32, i32* %add.ptr108, align 4, !dbg !13774
  %and109 = and i32 %89, 255, !dbg !13774
  %shl110 = shl i32 %and109, 24, !dbg !13774
  %90 = load i8*, i8** %in, align 8, !dbg !13774
  %91 = bitcast i8* %90 to i32*, !dbg !13774
  %add.ptr111 = getelementptr i32, i32* %91, i64 3, !dbg !13774
  %92 = load i32, i32* %add.ptr111, align 4, !dbg !13774
  %and112 = and i32 %92, 65280, !dbg !13774
  %shl113 = shl i32 %and112, 8, !dbg !13774
  %or114 = or i32 %shl110, %shl113, !dbg !13774
  %93 = load i8*, i8** %in, align 8, !dbg !13774
  %94 = bitcast i8* %93 to i32*, !dbg !13774
  %add.ptr115 = getelementptr i32, i32* %94, i64 3, !dbg !13774
  %95 = load i32, i32* %add.ptr115, align 4, !dbg !13774
  %and116 = and i32 %95, 16711680, !dbg !13774
  %shr117 = lshr i32 %and116, 8, !dbg !13774
  %or118 = or i32 %or114, %shr117, !dbg !13774
  %96 = load i8*, i8** %in, align 8, !dbg !13774
  %97 = bitcast i8* %96 to i32*, !dbg !13774
  %add.ptr119 = getelementptr i32, i32* %97, i64 3, !dbg !13774
  %98 = load i32, i32* %add.ptr119, align 4, !dbg !13774
  %and120 = and i32 %98, -16777216, !dbg !13774
  %shr121 = lshr i32 %and120, 24, !dbg !13774
  %or122 = or i32 %or118, %shr121, !dbg !13774
  br label %cond.end126, !dbg !13774

cond.false123:                                    ; preds = %cond.end97
  %99 = load i8*, i8** %in, align 8, !dbg !13774
  %100 = bitcast i8* %99 to i32*, !dbg !13774
  %add.ptr124 = getelementptr i32, i32* %100, i64 3, !dbg !13774
  %101 = load i32, i32* %add.ptr124, align 4, !dbg !13774
  %call125 = call i32 @__fswab32(i32 %101) #8, !dbg !13774
  br label %cond.end126, !dbg !13774

cond.end126:                                      ; preds = %cond.false123, %cond.true107
  %cond127 = phi i32 [ %or122, %cond.true107 ], [ %call125, %cond.false123 ], !dbg !13774
  %and128 = and i32 %cond127, -8193, !dbg !13774
  %102 = load i32, i32* %_v, align 4, !dbg !13774
  %and129 = and i32 %102, 1, !dbg !13774
  %shl130 = shl i32 %and129, 13, !dbg !13774
  %or131 = or i32 %and128, %shl130, !dbg !13774
  %and132 = and i32 %or131, -16777216, !dbg !13774
  %shr133 = lshr i32 %and132, 24, !dbg !13774
  %or134 = or i32 %or105, %shr133, !dbg !13774
  br label %cond.end163, !dbg !13774

cond.false135:                                    ; preds = %cond.end
  %103 = load i8*, i8** %in, align 8, !dbg !13774
  %104 = bitcast i8* %103 to i32*, !dbg !13774
  %add.ptr136 = getelementptr i32, i32* %104, i64 3, !dbg !13774
  %105 = load i32, i32* %add.ptr136, align 4, !dbg !13774
  %106 = call i1 @llvm.is.constant.i32(i32 %105), !dbg !13774
  br i1 %106, label %cond.true137, label %cond.false153, !dbg !13774

cond.true137:                                     ; preds = %cond.false135
  %107 = load i8*, i8** %in, align 8, !dbg !13774
  %108 = bitcast i8* %107 to i32*, !dbg !13774
  %add.ptr138 = getelementptr i32, i32* %108, i64 3, !dbg !13774
  %109 = load i32, i32* %add.ptr138, align 4, !dbg !13774
  %and139 = and i32 %109, 255, !dbg !13774
  %shl140 = shl i32 %and139, 24, !dbg !13774
  %110 = load i8*, i8** %in, align 8, !dbg !13774
  %111 = bitcast i8* %110 to i32*, !dbg !13774
  %add.ptr141 = getelementptr i32, i32* %111, i64 3, !dbg !13774
  %112 = load i32, i32* %add.ptr141, align 4, !dbg !13774
  %and142 = and i32 %112, 65280, !dbg !13774
  %shl143 = shl i32 %and142, 8, !dbg !13774
  %or144 = or i32 %shl140, %shl143, !dbg !13774
  %113 = load i8*, i8** %in, align 8, !dbg !13774
  %114 = bitcast i8* %113 to i32*, !dbg !13774
  %add.ptr145 = getelementptr i32, i32* %114, i64 3, !dbg !13774
  %115 = load i32, i32* %add.ptr145, align 4, !dbg !13774
  %and146 = and i32 %115, 16711680, !dbg !13774
  %shr147 = lshr i32 %and146, 8, !dbg !13774
  %or148 = or i32 %or144, %shr147, !dbg !13774
  %116 = load i8*, i8** %in, align 8, !dbg !13774
  %117 = bitcast i8* %116 to i32*, !dbg !13774
  %add.ptr149 = getelementptr i32, i32* %117, i64 3, !dbg !13774
  %118 = load i32, i32* %add.ptr149, align 4, !dbg !13774
  %and150 = and i32 %118, -16777216, !dbg !13774
  %shr151 = lshr i32 %and150, 24, !dbg !13774
  %or152 = or i32 %or148, %shr151, !dbg !13774
  br label %cond.end156, !dbg !13774

cond.false153:                                    ; preds = %cond.false135
  %119 = load i8*, i8** %in, align 8, !dbg !13774
  %120 = bitcast i8* %119 to i32*, !dbg !13774
  %add.ptr154 = getelementptr i32, i32* %120, i64 3, !dbg !13774
  %121 = load i32, i32* %add.ptr154, align 4, !dbg !13774
  %call155 = call i32 @__fswab32(i32 %121) #8, !dbg !13774
  br label %cond.end156, !dbg !13774

cond.end156:                                      ; preds = %cond.false153, %cond.true137
  %cond157 = phi i32 [ %or152, %cond.true137 ], [ %call155, %cond.false153 ], !dbg !13774
  %and158 = and i32 %cond157, -8193, !dbg !13774
  %122 = load i32, i32* %_v, align 4, !dbg !13774
  %and159 = and i32 %122, 1, !dbg !13774
  %shl160 = shl i32 %and159, 13, !dbg !13774
  %or161 = or i32 %and158, %shl160, !dbg !13774
  %call162 = call i32 @__fswab32(i32 %or161) #8, !dbg !13774
  br label %cond.end163, !dbg !13774

cond.end163:                                      ; preds = %cond.end156, %cond.end126
  %cond164 = phi i32 [ %or134, %cond.end126 ], [ %call162, %cond.end156 ], !dbg !13774
  %123 = load i8*, i8** %in, align 8, !dbg !13774
  %124 = bitcast i8* %123 to i32*, !dbg !13774
  %add.ptr165 = getelementptr i32, i32* %124, i64 3, !dbg !13774
  store i32 %cond164, i32* %add.ptr165, align 4, !dbg !13774
  br label %do.end166, !dbg !13774

do.end166:                                        ; preds = %cond.end163
  br label %do.body167, !dbg !13777

do.body167:                                       ; preds = %do.end166
  call void @llvm.dbg.declare(metadata i32* %_v168, metadata !13778, metadata !DIExpression()), !dbg !13780
  store i32 0, i32* %_v168, align 4, !dbg !13780
  br label %do.body169, !dbg !13780

do.body169:                                       ; preds = %do.body167
  br label %do.end170, !dbg !13781

do.end170:                                        ; preds = %do.body169
  %125 = load i8*, i8** %in, align 8, !dbg !13780
  %126 = bitcast i8* %125 to i32*, !dbg !13780
  %add.ptr171 = getelementptr i32, i32* %126, i64 66, !dbg !13780
  %127 = load i32, i32* %add.ptr171, align 4, !dbg !13780
  %128 = call i1 @llvm.is.constant.i32(i32 %127), !dbg !13780
  br i1 %128, label %cond.true172, label %cond.false188, !dbg !13780

cond.true172:                                     ; preds = %do.end170
  %129 = load i8*, i8** %in, align 8, !dbg !13780
  %130 = bitcast i8* %129 to i32*, !dbg !13780
  %add.ptr173 = getelementptr i32, i32* %130, i64 66, !dbg !13780
  %131 = load i32, i32* %add.ptr173, align 4, !dbg !13780
  %and174 = and i32 %131, 255, !dbg !13780
  %shl175 = shl i32 %and174, 24, !dbg !13780
  %132 = load i8*, i8** %in, align 8, !dbg !13780
  %133 = bitcast i8* %132 to i32*, !dbg !13780
  %add.ptr176 = getelementptr i32, i32* %133, i64 66, !dbg !13780
  %134 = load i32, i32* %add.ptr176, align 4, !dbg !13780
  %and177 = and i32 %134, 65280, !dbg !13780
  %shl178 = shl i32 %and177, 8, !dbg !13780
  %or179 = or i32 %shl175, %shl178, !dbg !13780
  %135 = load i8*, i8** %in, align 8, !dbg !13780
  %136 = bitcast i8* %135 to i32*, !dbg !13780
  %add.ptr180 = getelementptr i32, i32* %136, i64 66, !dbg !13780
  %137 = load i32, i32* %add.ptr180, align 4, !dbg !13780
  %and181 = and i32 %137, 16711680, !dbg !13780
  %shr182 = lshr i32 %and181, 8, !dbg !13780
  %or183 = or i32 %or179, %shr182, !dbg !13780
  %138 = load i8*, i8** %in, align 8, !dbg !13780
  %139 = bitcast i8* %138 to i32*, !dbg !13780
  %add.ptr184 = getelementptr i32, i32* %139, i64 66, !dbg !13780
  %140 = load i32, i32* %add.ptr184, align 4, !dbg !13780
  %and185 = and i32 %140, -16777216, !dbg !13780
  %shr186 = lshr i32 %and185, 24, !dbg !13780
  %or187 = or i32 %or183, %shr186, !dbg !13780
  br label %cond.end191, !dbg !13780

cond.false188:                                    ; preds = %do.end170
  %141 = load i8*, i8** %in, align 8, !dbg !13780
  %142 = bitcast i8* %141 to i32*, !dbg !13780
  %add.ptr189 = getelementptr i32, i32* %142, i64 66, !dbg !13780
  %143 = load i32, i32* %add.ptr189, align 4, !dbg !13780
  %call190 = call i32 @__fswab32(i32 %143) #8, !dbg !13780
  br label %cond.end191, !dbg !13780

cond.end191:                                      ; preds = %cond.false188, %cond.true172
  %cond192 = phi i32 [ %or187, %cond.true172 ], [ %call190, %cond.false188 ], !dbg !13780
  %and193 = and i32 %cond192, -65536, !dbg !13780
  %144 = load i32, i32* %_v168, align 4, !dbg !13780
  %and194 = and i32 %144, 65535, !dbg !13780
  %shl195 = shl i32 %and194, 0, !dbg !13780
  %or196 = or i32 %and193, %shl195, !dbg !13780
  %145 = call i1 @llvm.is.constant.i32(i32 %or196), !dbg !13780
  br i1 %145, label %cond.true197, label %cond.false313, !dbg !13780

cond.true197:                                     ; preds = %cond.end191
  %146 = load i8*, i8** %in, align 8, !dbg !13780
  %147 = bitcast i8* %146 to i32*, !dbg !13780
  %add.ptr198 = getelementptr i32, i32* %147, i64 66, !dbg !13780
  %148 = load i32, i32* %add.ptr198, align 4, !dbg !13780
  %149 = call i1 @llvm.is.constant.i32(i32 %148), !dbg !13780
  br i1 %149, label %cond.true199, label %cond.false215, !dbg !13780

cond.true199:                                     ; preds = %cond.true197
  %150 = load i8*, i8** %in, align 8, !dbg !13780
  %151 = bitcast i8* %150 to i32*, !dbg !13780
  %add.ptr200 = getelementptr i32, i32* %151, i64 66, !dbg !13780
  %152 = load i32, i32* %add.ptr200, align 4, !dbg !13780
  %and201 = and i32 %152, 255, !dbg !13780
  %shl202 = shl i32 %and201, 24, !dbg !13780
  %153 = load i8*, i8** %in, align 8, !dbg !13780
  %154 = bitcast i8* %153 to i32*, !dbg !13780
  %add.ptr203 = getelementptr i32, i32* %154, i64 66, !dbg !13780
  %155 = load i32, i32* %add.ptr203, align 4, !dbg !13780
  %and204 = and i32 %155, 65280, !dbg !13780
  %shl205 = shl i32 %and204, 8, !dbg !13780
  %or206 = or i32 %shl202, %shl205, !dbg !13780
  %156 = load i8*, i8** %in, align 8, !dbg !13780
  %157 = bitcast i8* %156 to i32*, !dbg !13780
  %add.ptr207 = getelementptr i32, i32* %157, i64 66, !dbg !13780
  %158 = load i32, i32* %add.ptr207, align 4, !dbg !13780
  %and208 = and i32 %158, 16711680, !dbg !13780
  %shr209 = lshr i32 %and208, 8, !dbg !13780
  %or210 = or i32 %or206, %shr209, !dbg !13780
  %159 = load i8*, i8** %in, align 8, !dbg !13780
  %160 = bitcast i8* %159 to i32*, !dbg !13780
  %add.ptr211 = getelementptr i32, i32* %160, i64 66, !dbg !13780
  %161 = load i32, i32* %add.ptr211, align 4, !dbg !13780
  %and212 = and i32 %161, -16777216, !dbg !13780
  %shr213 = lshr i32 %and212, 24, !dbg !13780
  %or214 = or i32 %or210, %shr213, !dbg !13780
  br label %cond.end218, !dbg !13780

cond.false215:                                    ; preds = %cond.true197
  %162 = load i8*, i8** %in, align 8, !dbg !13780
  %163 = bitcast i8* %162 to i32*, !dbg !13780
  %add.ptr216 = getelementptr i32, i32* %163, i64 66, !dbg !13780
  %164 = load i32, i32* %add.ptr216, align 4, !dbg !13780
  %call217 = call i32 @__fswab32(i32 %164) #8, !dbg !13780
  br label %cond.end218, !dbg !13780

cond.end218:                                      ; preds = %cond.false215, %cond.true199
  %cond219 = phi i32 [ %or214, %cond.true199 ], [ %call217, %cond.false215 ], !dbg !13780
  %and220 = and i32 %cond219, -65536, !dbg !13780
  %165 = load i32, i32* %_v168, align 4, !dbg !13780
  %and221 = and i32 %165, 65535, !dbg !13780
  %shl222 = shl i32 %and221, 0, !dbg !13780
  %or223 = or i32 %and220, %shl222, !dbg !13780
  %and224 = and i32 %or223, 255, !dbg !13780
  %shl225 = shl i32 %and224, 24, !dbg !13780
  %166 = load i8*, i8** %in, align 8, !dbg !13780
  %167 = bitcast i8* %166 to i32*, !dbg !13780
  %add.ptr226 = getelementptr i32, i32* %167, i64 66, !dbg !13780
  %168 = load i32, i32* %add.ptr226, align 4, !dbg !13780
  %169 = call i1 @llvm.is.constant.i32(i32 %168), !dbg !13780
  br i1 %169, label %cond.true227, label %cond.false243, !dbg !13780

cond.true227:                                     ; preds = %cond.end218
  %170 = load i8*, i8** %in, align 8, !dbg !13780
  %171 = bitcast i8* %170 to i32*, !dbg !13780
  %add.ptr228 = getelementptr i32, i32* %171, i64 66, !dbg !13780
  %172 = load i32, i32* %add.ptr228, align 4, !dbg !13780
  %and229 = and i32 %172, 255, !dbg !13780
  %shl230 = shl i32 %and229, 24, !dbg !13780
  %173 = load i8*, i8** %in, align 8, !dbg !13780
  %174 = bitcast i8* %173 to i32*, !dbg !13780
  %add.ptr231 = getelementptr i32, i32* %174, i64 66, !dbg !13780
  %175 = load i32, i32* %add.ptr231, align 4, !dbg !13780
  %and232 = and i32 %175, 65280, !dbg !13780
  %shl233 = shl i32 %and232, 8, !dbg !13780
  %or234 = or i32 %shl230, %shl233, !dbg !13780
  %176 = load i8*, i8** %in, align 8, !dbg !13780
  %177 = bitcast i8* %176 to i32*, !dbg !13780
  %add.ptr235 = getelementptr i32, i32* %177, i64 66, !dbg !13780
  %178 = load i32, i32* %add.ptr235, align 4, !dbg !13780
  %and236 = and i32 %178, 16711680, !dbg !13780
  %shr237 = lshr i32 %and236, 8, !dbg !13780
  %or238 = or i32 %or234, %shr237, !dbg !13780
  %179 = load i8*, i8** %in, align 8, !dbg !13780
  %180 = bitcast i8* %179 to i32*, !dbg !13780
  %add.ptr239 = getelementptr i32, i32* %180, i64 66, !dbg !13780
  %181 = load i32, i32* %add.ptr239, align 4, !dbg !13780
  %and240 = and i32 %181, -16777216, !dbg !13780
  %shr241 = lshr i32 %and240, 24, !dbg !13780
  %or242 = or i32 %or238, %shr241, !dbg !13780
  br label %cond.end246, !dbg !13780

cond.false243:                                    ; preds = %cond.end218
  %182 = load i8*, i8** %in, align 8, !dbg !13780
  %183 = bitcast i8* %182 to i32*, !dbg !13780
  %add.ptr244 = getelementptr i32, i32* %183, i64 66, !dbg !13780
  %184 = load i32, i32* %add.ptr244, align 4, !dbg !13780
  %call245 = call i32 @__fswab32(i32 %184) #8, !dbg !13780
  br label %cond.end246, !dbg !13780

cond.end246:                                      ; preds = %cond.false243, %cond.true227
  %cond247 = phi i32 [ %or242, %cond.true227 ], [ %call245, %cond.false243 ], !dbg !13780
  %and248 = and i32 %cond247, -65536, !dbg !13780
  %185 = load i32, i32* %_v168, align 4, !dbg !13780
  %and249 = and i32 %185, 65535, !dbg !13780
  %shl250 = shl i32 %and249, 0, !dbg !13780
  %or251 = or i32 %and248, %shl250, !dbg !13780
  %and252 = and i32 %or251, 65280, !dbg !13780
  %shl253 = shl i32 %and252, 8, !dbg !13780
  %or254 = or i32 %shl225, %shl253, !dbg !13780
  %186 = load i8*, i8** %in, align 8, !dbg !13780
  %187 = bitcast i8* %186 to i32*, !dbg !13780
  %add.ptr255 = getelementptr i32, i32* %187, i64 66, !dbg !13780
  %188 = load i32, i32* %add.ptr255, align 4, !dbg !13780
  %189 = call i1 @llvm.is.constant.i32(i32 %188), !dbg !13780
  br i1 %189, label %cond.true256, label %cond.false272, !dbg !13780

cond.true256:                                     ; preds = %cond.end246
  %190 = load i8*, i8** %in, align 8, !dbg !13780
  %191 = bitcast i8* %190 to i32*, !dbg !13780
  %add.ptr257 = getelementptr i32, i32* %191, i64 66, !dbg !13780
  %192 = load i32, i32* %add.ptr257, align 4, !dbg !13780
  %and258 = and i32 %192, 255, !dbg !13780
  %shl259 = shl i32 %and258, 24, !dbg !13780
  %193 = load i8*, i8** %in, align 8, !dbg !13780
  %194 = bitcast i8* %193 to i32*, !dbg !13780
  %add.ptr260 = getelementptr i32, i32* %194, i64 66, !dbg !13780
  %195 = load i32, i32* %add.ptr260, align 4, !dbg !13780
  %and261 = and i32 %195, 65280, !dbg !13780
  %shl262 = shl i32 %and261, 8, !dbg !13780
  %or263 = or i32 %shl259, %shl262, !dbg !13780
  %196 = load i8*, i8** %in, align 8, !dbg !13780
  %197 = bitcast i8* %196 to i32*, !dbg !13780
  %add.ptr264 = getelementptr i32, i32* %197, i64 66, !dbg !13780
  %198 = load i32, i32* %add.ptr264, align 4, !dbg !13780
  %and265 = and i32 %198, 16711680, !dbg !13780
  %shr266 = lshr i32 %and265, 8, !dbg !13780
  %or267 = or i32 %or263, %shr266, !dbg !13780
  %199 = load i8*, i8** %in, align 8, !dbg !13780
  %200 = bitcast i8* %199 to i32*, !dbg !13780
  %add.ptr268 = getelementptr i32, i32* %200, i64 66, !dbg !13780
  %201 = load i32, i32* %add.ptr268, align 4, !dbg !13780
  %and269 = and i32 %201, -16777216, !dbg !13780
  %shr270 = lshr i32 %and269, 24, !dbg !13780
  %or271 = or i32 %or267, %shr270, !dbg !13780
  br label %cond.end275, !dbg !13780

cond.false272:                                    ; preds = %cond.end246
  %202 = load i8*, i8** %in, align 8, !dbg !13780
  %203 = bitcast i8* %202 to i32*, !dbg !13780
  %add.ptr273 = getelementptr i32, i32* %203, i64 66, !dbg !13780
  %204 = load i32, i32* %add.ptr273, align 4, !dbg !13780
  %call274 = call i32 @__fswab32(i32 %204) #8, !dbg !13780
  br label %cond.end275, !dbg !13780

cond.end275:                                      ; preds = %cond.false272, %cond.true256
  %cond276 = phi i32 [ %or271, %cond.true256 ], [ %call274, %cond.false272 ], !dbg !13780
  %and277 = and i32 %cond276, -65536, !dbg !13780
  %205 = load i32, i32* %_v168, align 4, !dbg !13780
  %and278 = and i32 %205, 65535, !dbg !13780
  %shl279 = shl i32 %and278, 0, !dbg !13780
  %or280 = or i32 %and277, %shl279, !dbg !13780
  %and281 = and i32 %or280, 16711680, !dbg !13780
  %shr282 = lshr i32 %and281, 8, !dbg !13780
  %or283 = or i32 %or254, %shr282, !dbg !13780
  %206 = load i8*, i8** %in, align 8, !dbg !13780
  %207 = bitcast i8* %206 to i32*, !dbg !13780
  %add.ptr284 = getelementptr i32, i32* %207, i64 66, !dbg !13780
  %208 = load i32, i32* %add.ptr284, align 4, !dbg !13780
  %209 = call i1 @llvm.is.constant.i32(i32 %208), !dbg !13780
  br i1 %209, label %cond.true285, label %cond.false301, !dbg !13780

cond.true285:                                     ; preds = %cond.end275
  %210 = load i8*, i8** %in, align 8, !dbg !13780
  %211 = bitcast i8* %210 to i32*, !dbg !13780
  %add.ptr286 = getelementptr i32, i32* %211, i64 66, !dbg !13780
  %212 = load i32, i32* %add.ptr286, align 4, !dbg !13780
  %and287 = and i32 %212, 255, !dbg !13780
  %shl288 = shl i32 %and287, 24, !dbg !13780
  %213 = load i8*, i8** %in, align 8, !dbg !13780
  %214 = bitcast i8* %213 to i32*, !dbg !13780
  %add.ptr289 = getelementptr i32, i32* %214, i64 66, !dbg !13780
  %215 = load i32, i32* %add.ptr289, align 4, !dbg !13780
  %and290 = and i32 %215, 65280, !dbg !13780
  %shl291 = shl i32 %and290, 8, !dbg !13780
  %or292 = or i32 %shl288, %shl291, !dbg !13780
  %216 = load i8*, i8** %in, align 8, !dbg !13780
  %217 = bitcast i8* %216 to i32*, !dbg !13780
  %add.ptr293 = getelementptr i32, i32* %217, i64 66, !dbg !13780
  %218 = load i32, i32* %add.ptr293, align 4, !dbg !13780
  %and294 = and i32 %218, 16711680, !dbg !13780
  %shr295 = lshr i32 %and294, 8, !dbg !13780
  %or296 = or i32 %or292, %shr295, !dbg !13780
  %219 = load i8*, i8** %in, align 8, !dbg !13780
  %220 = bitcast i8* %219 to i32*, !dbg !13780
  %add.ptr297 = getelementptr i32, i32* %220, i64 66, !dbg !13780
  %221 = load i32, i32* %add.ptr297, align 4, !dbg !13780
  %and298 = and i32 %221, -16777216, !dbg !13780
  %shr299 = lshr i32 %and298, 24, !dbg !13780
  %or300 = or i32 %or296, %shr299, !dbg !13780
  br label %cond.end304, !dbg !13780

cond.false301:                                    ; preds = %cond.end275
  %222 = load i8*, i8** %in, align 8, !dbg !13780
  %223 = bitcast i8* %222 to i32*, !dbg !13780
  %add.ptr302 = getelementptr i32, i32* %223, i64 66, !dbg !13780
  %224 = load i32, i32* %add.ptr302, align 4, !dbg !13780
  %call303 = call i32 @__fswab32(i32 %224) #8, !dbg !13780
  br label %cond.end304, !dbg !13780

cond.end304:                                      ; preds = %cond.false301, %cond.true285
  %cond305 = phi i32 [ %or300, %cond.true285 ], [ %call303, %cond.false301 ], !dbg !13780
  %and306 = and i32 %cond305, -65536, !dbg !13780
  %225 = load i32, i32* %_v168, align 4, !dbg !13780
  %and307 = and i32 %225, 65535, !dbg !13780
  %shl308 = shl i32 %and307, 0, !dbg !13780
  %or309 = or i32 %and306, %shl308, !dbg !13780
  %and310 = and i32 %or309, -16777216, !dbg !13780
  %shr311 = lshr i32 %and310, 24, !dbg !13780
  %or312 = or i32 %or283, %shr311, !dbg !13780
  br label %cond.end341, !dbg !13780

cond.false313:                                    ; preds = %cond.end191
  %226 = load i8*, i8** %in, align 8, !dbg !13780
  %227 = bitcast i8* %226 to i32*, !dbg !13780
  %add.ptr314 = getelementptr i32, i32* %227, i64 66, !dbg !13780
  %228 = load i32, i32* %add.ptr314, align 4, !dbg !13780
  %229 = call i1 @llvm.is.constant.i32(i32 %228), !dbg !13780
  br i1 %229, label %cond.true315, label %cond.false331, !dbg !13780

cond.true315:                                     ; preds = %cond.false313
  %230 = load i8*, i8** %in, align 8, !dbg !13780
  %231 = bitcast i8* %230 to i32*, !dbg !13780
  %add.ptr316 = getelementptr i32, i32* %231, i64 66, !dbg !13780
  %232 = load i32, i32* %add.ptr316, align 4, !dbg !13780
  %and317 = and i32 %232, 255, !dbg !13780
  %shl318 = shl i32 %and317, 24, !dbg !13780
  %233 = load i8*, i8** %in, align 8, !dbg !13780
  %234 = bitcast i8* %233 to i32*, !dbg !13780
  %add.ptr319 = getelementptr i32, i32* %234, i64 66, !dbg !13780
  %235 = load i32, i32* %add.ptr319, align 4, !dbg !13780
  %and320 = and i32 %235, 65280, !dbg !13780
  %shl321 = shl i32 %and320, 8, !dbg !13780
  %or322 = or i32 %shl318, %shl321, !dbg !13780
  %236 = load i8*, i8** %in, align 8, !dbg !13780
  %237 = bitcast i8* %236 to i32*, !dbg !13780
  %add.ptr323 = getelementptr i32, i32* %237, i64 66, !dbg !13780
  %238 = load i32, i32* %add.ptr323, align 4, !dbg !13780
  %and324 = and i32 %238, 16711680, !dbg !13780
  %shr325 = lshr i32 %and324, 8, !dbg !13780
  %or326 = or i32 %or322, %shr325, !dbg !13780
  %239 = load i8*, i8** %in, align 8, !dbg !13780
  %240 = bitcast i8* %239 to i32*, !dbg !13780
  %add.ptr327 = getelementptr i32, i32* %240, i64 66, !dbg !13780
  %241 = load i32, i32* %add.ptr327, align 4, !dbg !13780
  %and328 = and i32 %241, -16777216, !dbg !13780
  %shr329 = lshr i32 %and328, 24, !dbg !13780
  %or330 = or i32 %or326, %shr329, !dbg !13780
  br label %cond.end334, !dbg !13780

cond.false331:                                    ; preds = %cond.false313
  %242 = load i8*, i8** %in, align 8, !dbg !13780
  %243 = bitcast i8* %242 to i32*, !dbg !13780
  %add.ptr332 = getelementptr i32, i32* %243, i64 66, !dbg !13780
  %244 = load i32, i32* %add.ptr332, align 4, !dbg !13780
  %call333 = call i32 @__fswab32(i32 %244) #8, !dbg !13780
  br label %cond.end334, !dbg !13780

cond.end334:                                      ; preds = %cond.false331, %cond.true315
  %cond335 = phi i32 [ %or330, %cond.true315 ], [ %call333, %cond.false331 ], !dbg !13780
  %and336 = and i32 %cond335, -65536, !dbg !13780
  %245 = load i32, i32* %_v168, align 4, !dbg !13780
  %and337 = and i32 %245, 65535, !dbg !13780
  %shl338 = shl i32 %and337, 0, !dbg !13780
  %or339 = or i32 %and336, %shl338, !dbg !13780
  %call340 = call i32 @__fswab32(i32 %or339) #8, !dbg !13780
  br label %cond.end341, !dbg !13780

cond.end341:                                      ; preds = %cond.end334, %cond.end304
  %cond342 = phi i32 [ %or312, %cond.end304 ], [ %call340, %cond.end334 ], !dbg !13780
  %246 = load i8*, i8** %in, align 8, !dbg !13780
  %247 = bitcast i8* %246 to i32*, !dbg !13780
  %add.ptr343 = getelementptr i32, i32* %247, i64 66, !dbg !13780
  store i32 %cond342, i32* %add.ptr343, align 4, !dbg !13780
  br label %do.end344, !dbg !13780

do.end344:                                        ; preds = %cond.end341
  br label %do.body345, !dbg !13783

do.body345:                                       ; preds = %do.end344
  call void @llvm.dbg.declare(metadata i32* %_v346, metadata !13784, metadata !DIExpression()), !dbg !13786
  store i32 0, i32* %_v346, align 4, !dbg !13786
  br label %do.body347, !dbg !13786

do.body347:                                       ; preds = %do.body345
  br label %do.end348, !dbg !13787

do.end348:                                        ; preds = %do.body347
  %248 = load i8*, i8** %in, align 8, !dbg !13786
  %249 = bitcast i8* %248 to i32*, !dbg !13786
  %add.ptr349 = getelementptr i32, i32* %249, i64 66, !dbg !13786
  %250 = load i32, i32* %add.ptr349, align 4, !dbg !13786
  %251 = call i1 @llvm.is.constant.i32(i32 %250), !dbg !13786
  br i1 %251, label %cond.true350, label %cond.false366, !dbg !13786

cond.true350:                                     ; preds = %do.end348
  %252 = load i8*, i8** %in, align 8, !dbg !13786
  %253 = bitcast i8* %252 to i32*, !dbg !13786
  %add.ptr351 = getelementptr i32, i32* %253, i64 66, !dbg !13786
  %254 = load i32, i32* %add.ptr351, align 4, !dbg !13786
  %and352 = and i32 %254, 255, !dbg !13786
  %shl353 = shl i32 %and352, 24, !dbg !13786
  %255 = load i8*, i8** %in, align 8, !dbg !13786
  %256 = bitcast i8* %255 to i32*, !dbg !13786
  %add.ptr354 = getelementptr i32, i32* %256, i64 66, !dbg !13786
  %257 = load i32, i32* %add.ptr354, align 4, !dbg !13786
  %and355 = and i32 %257, 65280, !dbg !13786
  %shl356 = shl i32 %and355, 8, !dbg !13786
  %or357 = or i32 %shl353, %shl356, !dbg !13786
  %258 = load i8*, i8** %in, align 8, !dbg !13786
  %259 = bitcast i8* %258 to i32*, !dbg !13786
  %add.ptr358 = getelementptr i32, i32* %259, i64 66, !dbg !13786
  %260 = load i32, i32* %add.ptr358, align 4, !dbg !13786
  %and359 = and i32 %260, 16711680, !dbg !13786
  %shr360 = lshr i32 %and359, 8, !dbg !13786
  %or361 = or i32 %or357, %shr360, !dbg !13786
  %261 = load i8*, i8** %in, align 8, !dbg !13786
  %262 = bitcast i8* %261 to i32*, !dbg !13786
  %add.ptr362 = getelementptr i32, i32* %262, i64 66, !dbg !13786
  %263 = load i32, i32* %add.ptr362, align 4, !dbg !13786
  %and363 = and i32 %263, -16777216, !dbg !13786
  %shr364 = lshr i32 %and363, 24, !dbg !13786
  %or365 = or i32 %or361, %shr364, !dbg !13786
  br label %cond.end369, !dbg !13786

cond.false366:                                    ; preds = %do.end348
  %264 = load i8*, i8** %in, align 8, !dbg !13786
  %265 = bitcast i8* %264 to i32*, !dbg !13786
  %add.ptr367 = getelementptr i32, i32* %265, i64 66, !dbg !13786
  %266 = load i32, i32* %add.ptr367, align 4, !dbg !13786
  %call368 = call i32 @__fswab32(i32 %266) #8, !dbg !13786
  br label %cond.end369, !dbg !13786

cond.end369:                                      ; preds = %cond.false366, %cond.true350
  %cond370 = phi i32 [ %or365, %cond.true350 ], [ %call368, %cond.false366 ], !dbg !13786
  %and371 = and i32 %cond370, -983041, !dbg !13786
  %267 = load i32, i32* %_v346, align 4, !dbg !13786
  %and372 = and i32 %267, 15, !dbg !13786
  %shl373 = shl i32 %and372, 16, !dbg !13786
  %or374 = or i32 %and371, %shl373, !dbg !13786
  %268 = call i1 @llvm.is.constant.i32(i32 %or374), !dbg !13786
  br i1 %268, label %cond.true375, label %cond.false491, !dbg !13786

cond.true375:                                     ; preds = %cond.end369
  %269 = load i8*, i8** %in, align 8, !dbg !13786
  %270 = bitcast i8* %269 to i32*, !dbg !13786
  %add.ptr376 = getelementptr i32, i32* %270, i64 66, !dbg !13786
  %271 = load i32, i32* %add.ptr376, align 4, !dbg !13786
  %272 = call i1 @llvm.is.constant.i32(i32 %271), !dbg !13786
  br i1 %272, label %cond.true377, label %cond.false393, !dbg !13786

cond.true377:                                     ; preds = %cond.true375
  %273 = load i8*, i8** %in, align 8, !dbg !13786
  %274 = bitcast i8* %273 to i32*, !dbg !13786
  %add.ptr378 = getelementptr i32, i32* %274, i64 66, !dbg !13786
  %275 = load i32, i32* %add.ptr378, align 4, !dbg !13786
  %and379 = and i32 %275, 255, !dbg !13786
  %shl380 = shl i32 %and379, 24, !dbg !13786
  %276 = load i8*, i8** %in, align 8, !dbg !13786
  %277 = bitcast i8* %276 to i32*, !dbg !13786
  %add.ptr381 = getelementptr i32, i32* %277, i64 66, !dbg !13786
  %278 = load i32, i32* %add.ptr381, align 4, !dbg !13786
  %and382 = and i32 %278, 65280, !dbg !13786
  %shl383 = shl i32 %and382, 8, !dbg !13786
  %or384 = or i32 %shl380, %shl383, !dbg !13786
  %279 = load i8*, i8** %in, align 8, !dbg !13786
  %280 = bitcast i8* %279 to i32*, !dbg !13786
  %add.ptr385 = getelementptr i32, i32* %280, i64 66, !dbg !13786
  %281 = load i32, i32* %add.ptr385, align 4, !dbg !13786
  %and386 = and i32 %281, 16711680, !dbg !13786
  %shr387 = lshr i32 %and386, 8, !dbg !13786
  %or388 = or i32 %or384, %shr387, !dbg !13786
  %282 = load i8*, i8** %in, align 8, !dbg !13786
  %283 = bitcast i8* %282 to i32*, !dbg !13786
  %add.ptr389 = getelementptr i32, i32* %283, i64 66, !dbg !13786
  %284 = load i32, i32* %add.ptr389, align 4, !dbg !13786
  %and390 = and i32 %284, -16777216, !dbg !13786
  %shr391 = lshr i32 %and390, 24, !dbg !13786
  %or392 = or i32 %or388, %shr391, !dbg !13786
  br label %cond.end396, !dbg !13786

cond.false393:                                    ; preds = %cond.true375
  %285 = load i8*, i8** %in, align 8, !dbg !13786
  %286 = bitcast i8* %285 to i32*, !dbg !13786
  %add.ptr394 = getelementptr i32, i32* %286, i64 66, !dbg !13786
  %287 = load i32, i32* %add.ptr394, align 4, !dbg !13786
  %call395 = call i32 @__fswab32(i32 %287) #8, !dbg !13786
  br label %cond.end396, !dbg !13786

cond.end396:                                      ; preds = %cond.false393, %cond.true377
  %cond397 = phi i32 [ %or392, %cond.true377 ], [ %call395, %cond.false393 ], !dbg !13786
  %and398 = and i32 %cond397, -983041, !dbg !13786
  %288 = load i32, i32* %_v346, align 4, !dbg !13786
  %and399 = and i32 %288, 15, !dbg !13786
  %shl400 = shl i32 %and399, 16, !dbg !13786
  %or401 = or i32 %and398, %shl400, !dbg !13786
  %and402 = and i32 %or401, 255, !dbg !13786
  %shl403 = shl i32 %and402, 24, !dbg !13786
  %289 = load i8*, i8** %in, align 8, !dbg !13786
  %290 = bitcast i8* %289 to i32*, !dbg !13786
  %add.ptr404 = getelementptr i32, i32* %290, i64 66, !dbg !13786
  %291 = load i32, i32* %add.ptr404, align 4, !dbg !13786
  %292 = call i1 @llvm.is.constant.i32(i32 %291), !dbg !13786
  br i1 %292, label %cond.true405, label %cond.false421, !dbg !13786

cond.true405:                                     ; preds = %cond.end396
  %293 = load i8*, i8** %in, align 8, !dbg !13786
  %294 = bitcast i8* %293 to i32*, !dbg !13786
  %add.ptr406 = getelementptr i32, i32* %294, i64 66, !dbg !13786
  %295 = load i32, i32* %add.ptr406, align 4, !dbg !13786
  %and407 = and i32 %295, 255, !dbg !13786
  %shl408 = shl i32 %and407, 24, !dbg !13786
  %296 = load i8*, i8** %in, align 8, !dbg !13786
  %297 = bitcast i8* %296 to i32*, !dbg !13786
  %add.ptr409 = getelementptr i32, i32* %297, i64 66, !dbg !13786
  %298 = load i32, i32* %add.ptr409, align 4, !dbg !13786
  %and410 = and i32 %298, 65280, !dbg !13786
  %shl411 = shl i32 %and410, 8, !dbg !13786
  %or412 = or i32 %shl408, %shl411, !dbg !13786
  %299 = load i8*, i8** %in, align 8, !dbg !13786
  %300 = bitcast i8* %299 to i32*, !dbg !13786
  %add.ptr413 = getelementptr i32, i32* %300, i64 66, !dbg !13786
  %301 = load i32, i32* %add.ptr413, align 4, !dbg !13786
  %and414 = and i32 %301, 16711680, !dbg !13786
  %shr415 = lshr i32 %and414, 8, !dbg !13786
  %or416 = or i32 %or412, %shr415, !dbg !13786
  %302 = load i8*, i8** %in, align 8, !dbg !13786
  %303 = bitcast i8* %302 to i32*, !dbg !13786
  %add.ptr417 = getelementptr i32, i32* %303, i64 66, !dbg !13786
  %304 = load i32, i32* %add.ptr417, align 4, !dbg !13786
  %and418 = and i32 %304, -16777216, !dbg !13786
  %shr419 = lshr i32 %and418, 24, !dbg !13786
  %or420 = or i32 %or416, %shr419, !dbg !13786
  br label %cond.end424, !dbg !13786

cond.false421:                                    ; preds = %cond.end396
  %305 = load i8*, i8** %in, align 8, !dbg !13786
  %306 = bitcast i8* %305 to i32*, !dbg !13786
  %add.ptr422 = getelementptr i32, i32* %306, i64 66, !dbg !13786
  %307 = load i32, i32* %add.ptr422, align 4, !dbg !13786
  %call423 = call i32 @__fswab32(i32 %307) #8, !dbg !13786
  br label %cond.end424, !dbg !13786

cond.end424:                                      ; preds = %cond.false421, %cond.true405
  %cond425 = phi i32 [ %or420, %cond.true405 ], [ %call423, %cond.false421 ], !dbg !13786
  %and426 = and i32 %cond425, -983041, !dbg !13786
  %308 = load i32, i32* %_v346, align 4, !dbg !13786
  %and427 = and i32 %308, 15, !dbg !13786
  %shl428 = shl i32 %and427, 16, !dbg !13786
  %or429 = or i32 %and426, %shl428, !dbg !13786
  %and430 = and i32 %or429, 65280, !dbg !13786
  %shl431 = shl i32 %and430, 8, !dbg !13786
  %or432 = or i32 %shl403, %shl431, !dbg !13786
  %309 = load i8*, i8** %in, align 8, !dbg !13786
  %310 = bitcast i8* %309 to i32*, !dbg !13786
  %add.ptr433 = getelementptr i32, i32* %310, i64 66, !dbg !13786
  %311 = load i32, i32* %add.ptr433, align 4, !dbg !13786
  %312 = call i1 @llvm.is.constant.i32(i32 %311), !dbg !13786
  br i1 %312, label %cond.true434, label %cond.false450, !dbg !13786

cond.true434:                                     ; preds = %cond.end424
  %313 = load i8*, i8** %in, align 8, !dbg !13786
  %314 = bitcast i8* %313 to i32*, !dbg !13786
  %add.ptr435 = getelementptr i32, i32* %314, i64 66, !dbg !13786
  %315 = load i32, i32* %add.ptr435, align 4, !dbg !13786
  %and436 = and i32 %315, 255, !dbg !13786
  %shl437 = shl i32 %and436, 24, !dbg !13786
  %316 = load i8*, i8** %in, align 8, !dbg !13786
  %317 = bitcast i8* %316 to i32*, !dbg !13786
  %add.ptr438 = getelementptr i32, i32* %317, i64 66, !dbg !13786
  %318 = load i32, i32* %add.ptr438, align 4, !dbg !13786
  %and439 = and i32 %318, 65280, !dbg !13786
  %shl440 = shl i32 %and439, 8, !dbg !13786
  %or441 = or i32 %shl437, %shl440, !dbg !13786
  %319 = load i8*, i8** %in, align 8, !dbg !13786
  %320 = bitcast i8* %319 to i32*, !dbg !13786
  %add.ptr442 = getelementptr i32, i32* %320, i64 66, !dbg !13786
  %321 = load i32, i32* %add.ptr442, align 4, !dbg !13786
  %and443 = and i32 %321, 16711680, !dbg !13786
  %shr444 = lshr i32 %and443, 8, !dbg !13786
  %or445 = or i32 %or441, %shr444, !dbg !13786
  %322 = load i8*, i8** %in, align 8, !dbg !13786
  %323 = bitcast i8* %322 to i32*, !dbg !13786
  %add.ptr446 = getelementptr i32, i32* %323, i64 66, !dbg !13786
  %324 = load i32, i32* %add.ptr446, align 4, !dbg !13786
  %and447 = and i32 %324, -16777216, !dbg !13786
  %shr448 = lshr i32 %and447, 24, !dbg !13786
  %or449 = or i32 %or445, %shr448, !dbg !13786
  br label %cond.end453, !dbg !13786

cond.false450:                                    ; preds = %cond.end424
  %325 = load i8*, i8** %in, align 8, !dbg !13786
  %326 = bitcast i8* %325 to i32*, !dbg !13786
  %add.ptr451 = getelementptr i32, i32* %326, i64 66, !dbg !13786
  %327 = load i32, i32* %add.ptr451, align 4, !dbg !13786
  %call452 = call i32 @__fswab32(i32 %327) #8, !dbg !13786
  br label %cond.end453, !dbg !13786

cond.end453:                                      ; preds = %cond.false450, %cond.true434
  %cond454 = phi i32 [ %or449, %cond.true434 ], [ %call452, %cond.false450 ], !dbg !13786
  %and455 = and i32 %cond454, -983041, !dbg !13786
  %328 = load i32, i32* %_v346, align 4, !dbg !13786
  %and456 = and i32 %328, 15, !dbg !13786
  %shl457 = shl i32 %and456, 16, !dbg !13786
  %or458 = or i32 %and455, %shl457, !dbg !13786
  %and459 = and i32 %or458, 16711680, !dbg !13786
  %shr460 = lshr i32 %and459, 8, !dbg !13786
  %or461 = or i32 %or432, %shr460, !dbg !13786
  %329 = load i8*, i8** %in, align 8, !dbg !13786
  %330 = bitcast i8* %329 to i32*, !dbg !13786
  %add.ptr462 = getelementptr i32, i32* %330, i64 66, !dbg !13786
  %331 = load i32, i32* %add.ptr462, align 4, !dbg !13786
  %332 = call i1 @llvm.is.constant.i32(i32 %331), !dbg !13786
  br i1 %332, label %cond.true463, label %cond.false479, !dbg !13786

cond.true463:                                     ; preds = %cond.end453
  %333 = load i8*, i8** %in, align 8, !dbg !13786
  %334 = bitcast i8* %333 to i32*, !dbg !13786
  %add.ptr464 = getelementptr i32, i32* %334, i64 66, !dbg !13786
  %335 = load i32, i32* %add.ptr464, align 4, !dbg !13786
  %and465 = and i32 %335, 255, !dbg !13786
  %shl466 = shl i32 %and465, 24, !dbg !13786
  %336 = load i8*, i8** %in, align 8, !dbg !13786
  %337 = bitcast i8* %336 to i32*, !dbg !13786
  %add.ptr467 = getelementptr i32, i32* %337, i64 66, !dbg !13786
  %338 = load i32, i32* %add.ptr467, align 4, !dbg !13786
  %and468 = and i32 %338, 65280, !dbg !13786
  %shl469 = shl i32 %and468, 8, !dbg !13786
  %or470 = or i32 %shl466, %shl469, !dbg !13786
  %339 = load i8*, i8** %in, align 8, !dbg !13786
  %340 = bitcast i8* %339 to i32*, !dbg !13786
  %add.ptr471 = getelementptr i32, i32* %340, i64 66, !dbg !13786
  %341 = load i32, i32* %add.ptr471, align 4, !dbg !13786
  %and472 = and i32 %341, 16711680, !dbg !13786
  %shr473 = lshr i32 %and472, 8, !dbg !13786
  %or474 = or i32 %or470, %shr473, !dbg !13786
  %342 = load i8*, i8** %in, align 8, !dbg !13786
  %343 = bitcast i8* %342 to i32*, !dbg !13786
  %add.ptr475 = getelementptr i32, i32* %343, i64 66, !dbg !13786
  %344 = load i32, i32* %add.ptr475, align 4, !dbg !13786
  %and476 = and i32 %344, -16777216, !dbg !13786
  %shr477 = lshr i32 %and476, 24, !dbg !13786
  %or478 = or i32 %or474, %shr477, !dbg !13786
  br label %cond.end482, !dbg !13786

cond.false479:                                    ; preds = %cond.end453
  %345 = load i8*, i8** %in, align 8, !dbg !13786
  %346 = bitcast i8* %345 to i32*, !dbg !13786
  %add.ptr480 = getelementptr i32, i32* %346, i64 66, !dbg !13786
  %347 = load i32, i32* %add.ptr480, align 4, !dbg !13786
  %call481 = call i32 @__fswab32(i32 %347) #8, !dbg !13786
  br label %cond.end482, !dbg !13786

cond.end482:                                      ; preds = %cond.false479, %cond.true463
  %cond483 = phi i32 [ %or478, %cond.true463 ], [ %call481, %cond.false479 ], !dbg !13786
  %and484 = and i32 %cond483, -983041, !dbg !13786
  %348 = load i32, i32* %_v346, align 4, !dbg !13786
  %and485 = and i32 %348, 15, !dbg !13786
  %shl486 = shl i32 %and485, 16, !dbg !13786
  %or487 = or i32 %and484, %shl486, !dbg !13786
  %and488 = and i32 %or487, -16777216, !dbg !13786
  %shr489 = lshr i32 %and488, 24, !dbg !13786
  %or490 = or i32 %or461, %shr489, !dbg !13786
  br label %cond.end519, !dbg !13786

cond.false491:                                    ; preds = %cond.end369
  %349 = load i8*, i8** %in, align 8, !dbg !13786
  %350 = bitcast i8* %349 to i32*, !dbg !13786
  %add.ptr492 = getelementptr i32, i32* %350, i64 66, !dbg !13786
  %351 = load i32, i32* %add.ptr492, align 4, !dbg !13786
  %352 = call i1 @llvm.is.constant.i32(i32 %351), !dbg !13786
  br i1 %352, label %cond.true493, label %cond.false509, !dbg !13786

cond.true493:                                     ; preds = %cond.false491
  %353 = load i8*, i8** %in, align 8, !dbg !13786
  %354 = bitcast i8* %353 to i32*, !dbg !13786
  %add.ptr494 = getelementptr i32, i32* %354, i64 66, !dbg !13786
  %355 = load i32, i32* %add.ptr494, align 4, !dbg !13786
  %and495 = and i32 %355, 255, !dbg !13786
  %shl496 = shl i32 %and495, 24, !dbg !13786
  %356 = load i8*, i8** %in, align 8, !dbg !13786
  %357 = bitcast i8* %356 to i32*, !dbg !13786
  %add.ptr497 = getelementptr i32, i32* %357, i64 66, !dbg !13786
  %358 = load i32, i32* %add.ptr497, align 4, !dbg !13786
  %and498 = and i32 %358, 65280, !dbg !13786
  %shl499 = shl i32 %and498, 8, !dbg !13786
  %or500 = or i32 %shl496, %shl499, !dbg !13786
  %359 = load i8*, i8** %in, align 8, !dbg !13786
  %360 = bitcast i8* %359 to i32*, !dbg !13786
  %add.ptr501 = getelementptr i32, i32* %360, i64 66, !dbg !13786
  %361 = load i32, i32* %add.ptr501, align 4, !dbg !13786
  %and502 = and i32 %361, 16711680, !dbg !13786
  %shr503 = lshr i32 %and502, 8, !dbg !13786
  %or504 = or i32 %or500, %shr503, !dbg !13786
  %362 = load i8*, i8** %in, align 8, !dbg !13786
  %363 = bitcast i8* %362 to i32*, !dbg !13786
  %add.ptr505 = getelementptr i32, i32* %363, i64 66, !dbg !13786
  %364 = load i32, i32* %add.ptr505, align 4, !dbg !13786
  %and506 = and i32 %364, -16777216, !dbg !13786
  %shr507 = lshr i32 %and506, 24, !dbg !13786
  %or508 = or i32 %or504, %shr507, !dbg !13786
  br label %cond.end512, !dbg !13786

cond.false509:                                    ; preds = %cond.false491
  %365 = load i8*, i8** %in, align 8, !dbg !13786
  %366 = bitcast i8* %365 to i32*, !dbg !13786
  %add.ptr510 = getelementptr i32, i32* %366, i64 66, !dbg !13786
  %367 = load i32, i32* %add.ptr510, align 4, !dbg !13786
  %call511 = call i32 @__fswab32(i32 %367) #8, !dbg !13786
  br label %cond.end512, !dbg !13786

cond.end512:                                      ; preds = %cond.false509, %cond.true493
  %cond513 = phi i32 [ %or508, %cond.true493 ], [ %call511, %cond.false509 ], !dbg !13786
  %and514 = and i32 %cond513, -983041, !dbg !13786
  %368 = load i32, i32* %_v346, align 4, !dbg !13786
  %and515 = and i32 %368, 15, !dbg !13786
  %shl516 = shl i32 %and515, 16, !dbg !13786
  %or517 = or i32 %and514, %shl516, !dbg !13786
  %call518 = call i32 @__fswab32(i32 %or517) #8, !dbg !13786
  br label %cond.end519, !dbg !13786

cond.end519:                                      ; preds = %cond.end512, %cond.end482
  %cond520 = phi i32 [ %or490, %cond.end482 ], [ %call518, %cond.end512 ], !dbg !13786
  %369 = load i8*, i8** %in, align 8, !dbg !13786
  %370 = bitcast i8* %369 to i32*, !dbg !13786
  %add.ptr521 = getelementptr i32, i32* %370, i64 66, !dbg !13786
  store i32 %cond520, i32* %add.ptr521, align 4, !dbg !13786
  br label %do.end522, !dbg !13786

do.end522:                                        ; preds = %cond.end519
  br label %do.body523, !dbg !13789

do.body523:                                       ; preds = %do.end522
  call void @llvm.dbg.declare(metadata i32* %_v524, metadata !13790, metadata !DIExpression()), !dbg !13792
  store i32 1877, i32* %_v524, align 4, !dbg !13792
  br label %do.body525, !dbg !13792

do.body525:                                       ; preds = %do.body523
  br label %do.end526, !dbg !13793

do.end526:                                        ; preds = %do.body525
  %371 = load i8*, i8** %in, align 8, !dbg !13792
  %372 = bitcast i8* %371 to i32*, !dbg !13792
  %add.ptr527 = getelementptr i32, i32* %372, i64 0, !dbg !13792
  %373 = load i32, i32* %add.ptr527, align 4, !dbg !13792
  %374 = call i1 @llvm.is.constant.i32(i32 %373), !dbg !13792
  br i1 %374, label %cond.true528, label %cond.false544, !dbg !13792

cond.true528:                                     ; preds = %do.end526
  %375 = load i8*, i8** %in, align 8, !dbg !13792
  %376 = bitcast i8* %375 to i32*, !dbg !13792
  %add.ptr529 = getelementptr i32, i32* %376, i64 0, !dbg !13792
  %377 = load i32, i32* %add.ptr529, align 4, !dbg !13792
  %and530 = and i32 %377, 255, !dbg !13792
  %shl531 = shl i32 %and530, 24, !dbg !13792
  %378 = load i8*, i8** %in, align 8, !dbg !13792
  %379 = bitcast i8* %378 to i32*, !dbg !13792
  %add.ptr532 = getelementptr i32, i32* %379, i64 0, !dbg !13792
  %380 = load i32, i32* %add.ptr532, align 4, !dbg !13792
  %and533 = and i32 %380, 65280, !dbg !13792
  %shl534 = shl i32 %and533, 8, !dbg !13792
  %or535 = or i32 %shl531, %shl534, !dbg !13792
  %381 = load i8*, i8** %in, align 8, !dbg !13792
  %382 = bitcast i8* %381 to i32*, !dbg !13792
  %add.ptr536 = getelementptr i32, i32* %382, i64 0, !dbg !13792
  %383 = load i32, i32* %add.ptr536, align 4, !dbg !13792
  %and537 = and i32 %383, 16711680, !dbg !13792
  %shr538 = lshr i32 %and537, 8, !dbg !13792
  %or539 = or i32 %or535, %shr538, !dbg !13792
  %384 = load i8*, i8** %in, align 8, !dbg !13792
  %385 = bitcast i8* %384 to i32*, !dbg !13792
  %add.ptr540 = getelementptr i32, i32* %385, i64 0, !dbg !13792
  %386 = load i32, i32* %add.ptr540, align 4, !dbg !13792
  %and541 = and i32 %386, -16777216, !dbg !13792
  %shr542 = lshr i32 %and541, 24, !dbg !13792
  %or543 = or i32 %or539, %shr542, !dbg !13792
  br label %cond.end547, !dbg !13792

cond.false544:                                    ; preds = %do.end526
  %387 = load i8*, i8** %in, align 8, !dbg !13792
  %388 = bitcast i8* %387 to i32*, !dbg !13792
  %add.ptr545 = getelementptr i32, i32* %388, i64 0, !dbg !13792
  %389 = load i32, i32* %add.ptr545, align 4, !dbg !13792
  %call546 = call i32 @__fswab32(i32 %389) #8, !dbg !13792
  br label %cond.end547, !dbg !13792

cond.end547:                                      ; preds = %cond.false544, %cond.true528
  %cond548 = phi i32 [ %or543, %cond.true528 ], [ %call546, %cond.false544 ], !dbg !13792
  %and549 = and i32 %cond548, 65535, !dbg !13792
  %390 = load i32, i32* %_v524, align 4, !dbg !13792
  %and550 = and i32 %390, 65535, !dbg !13792
  %shl551 = shl i32 %and550, 16, !dbg !13792
  %or552 = or i32 %and549, %shl551, !dbg !13792
  %391 = call i1 @llvm.is.constant.i32(i32 %or552), !dbg !13792
  br i1 %391, label %cond.true553, label %cond.false669, !dbg !13792

cond.true553:                                     ; preds = %cond.end547
  %392 = load i8*, i8** %in, align 8, !dbg !13792
  %393 = bitcast i8* %392 to i32*, !dbg !13792
  %add.ptr554 = getelementptr i32, i32* %393, i64 0, !dbg !13792
  %394 = load i32, i32* %add.ptr554, align 4, !dbg !13792
  %395 = call i1 @llvm.is.constant.i32(i32 %394), !dbg !13792
  br i1 %395, label %cond.true555, label %cond.false571, !dbg !13792

cond.true555:                                     ; preds = %cond.true553
  %396 = load i8*, i8** %in, align 8, !dbg !13792
  %397 = bitcast i8* %396 to i32*, !dbg !13792
  %add.ptr556 = getelementptr i32, i32* %397, i64 0, !dbg !13792
  %398 = load i32, i32* %add.ptr556, align 4, !dbg !13792
  %and557 = and i32 %398, 255, !dbg !13792
  %shl558 = shl i32 %and557, 24, !dbg !13792
  %399 = load i8*, i8** %in, align 8, !dbg !13792
  %400 = bitcast i8* %399 to i32*, !dbg !13792
  %add.ptr559 = getelementptr i32, i32* %400, i64 0, !dbg !13792
  %401 = load i32, i32* %add.ptr559, align 4, !dbg !13792
  %and560 = and i32 %401, 65280, !dbg !13792
  %shl561 = shl i32 %and560, 8, !dbg !13792
  %or562 = or i32 %shl558, %shl561, !dbg !13792
  %402 = load i8*, i8** %in, align 8, !dbg !13792
  %403 = bitcast i8* %402 to i32*, !dbg !13792
  %add.ptr563 = getelementptr i32, i32* %403, i64 0, !dbg !13792
  %404 = load i32, i32* %add.ptr563, align 4, !dbg !13792
  %and564 = and i32 %404, 16711680, !dbg !13792
  %shr565 = lshr i32 %and564, 8, !dbg !13792
  %or566 = or i32 %or562, %shr565, !dbg !13792
  %405 = load i8*, i8** %in, align 8, !dbg !13792
  %406 = bitcast i8* %405 to i32*, !dbg !13792
  %add.ptr567 = getelementptr i32, i32* %406, i64 0, !dbg !13792
  %407 = load i32, i32* %add.ptr567, align 4, !dbg !13792
  %and568 = and i32 %407, -16777216, !dbg !13792
  %shr569 = lshr i32 %and568, 24, !dbg !13792
  %or570 = or i32 %or566, %shr569, !dbg !13792
  br label %cond.end574, !dbg !13792

cond.false571:                                    ; preds = %cond.true553
  %408 = load i8*, i8** %in, align 8, !dbg !13792
  %409 = bitcast i8* %408 to i32*, !dbg !13792
  %add.ptr572 = getelementptr i32, i32* %409, i64 0, !dbg !13792
  %410 = load i32, i32* %add.ptr572, align 4, !dbg !13792
  %call573 = call i32 @__fswab32(i32 %410) #8, !dbg !13792
  br label %cond.end574, !dbg !13792

cond.end574:                                      ; preds = %cond.false571, %cond.true555
  %cond575 = phi i32 [ %or570, %cond.true555 ], [ %call573, %cond.false571 ], !dbg !13792
  %and576 = and i32 %cond575, 65535, !dbg !13792
  %411 = load i32, i32* %_v524, align 4, !dbg !13792
  %and577 = and i32 %411, 65535, !dbg !13792
  %shl578 = shl i32 %and577, 16, !dbg !13792
  %or579 = or i32 %and576, %shl578, !dbg !13792
  %and580 = and i32 %or579, 255, !dbg !13792
  %shl581 = shl i32 %and580, 24, !dbg !13792
  %412 = load i8*, i8** %in, align 8, !dbg !13792
  %413 = bitcast i8* %412 to i32*, !dbg !13792
  %add.ptr582 = getelementptr i32, i32* %413, i64 0, !dbg !13792
  %414 = load i32, i32* %add.ptr582, align 4, !dbg !13792
  %415 = call i1 @llvm.is.constant.i32(i32 %414), !dbg !13792
  br i1 %415, label %cond.true583, label %cond.false599, !dbg !13792

cond.true583:                                     ; preds = %cond.end574
  %416 = load i8*, i8** %in, align 8, !dbg !13792
  %417 = bitcast i8* %416 to i32*, !dbg !13792
  %add.ptr584 = getelementptr i32, i32* %417, i64 0, !dbg !13792
  %418 = load i32, i32* %add.ptr584, align 4, !dbg !13792
  %and585 = and i32 %418, 255, !dbg !13792
  %shl586 = shl i32 %and585, 24, !dbg !13792
  %419 = load i8*, i8** %in, align 8, !dbg !13792
  %420 = bitcast i8* %419 to i32*, !dbg !13792
  %add.ptr587 = getelementptr i32, i32* %420, i64 0, !dbg !13792
  %421 = load i32, i32* %add.ptr587, align 4, !dbg !13792
  %and588 = and i32 %421, 65280, !dbg !13792
  %shl589 = shl i32 %and588, 8, !dbg !13792
  %or590 = or i32 %shl586, %shl589, !dbg !13792
  %422 = load i8*, i8** %in, align 8, !dbg !13792
  %423 = bitcast i8* %422 to i32*, !dbg !13792
  %add.ptr591 = getelementptr i32, i32* %423, i64 0, !dbg !13792
  %424 = load i32, i32* %add.ptr591, align 4, !dbg !13792
  %and592 = and i32 %424, 16711680, !dbg !13792
  %shr593 = lshr i32 %and592, 8, !dbg !13792
  %or594 = or i32 %or590, %shr593, !dbg !13792
  %425 = load i8*, i8** %in, align 8, !dbg !13792
  %426 = bitcast i8* %425 to i32*, !dbg !13792
  %add.ptr595 = getelementptr i32, i32* %426, i64 0, !dbg !13792
  %427 = load i32, i32* %add.ptr595, align 4, !dbg !13792
  %and596 = and i32 %427, -16777216, !dbg !13792
  %shr597 = lshr i32 %and596, 24, !dbg !13792
  %or598 = or i32 %or594, %shr597, !dbg !13792
  br label %cond.end602, !dbg !13792

cond.false599:                                    ; preds = %cond.end574
  %428 = load i8*, i8** %in, align 8, !dbg !13792
  %429 = bitcast i8* %428 to i32*, !dbg !13792
  %add.ptr600 = getelementptr i32, i32* %429, i64 0, !dbg !13792
  %430 = load i32, i32* %add.ptr600, align 4, !dbg !13792
  %call601 = call i32 @__fswab32(i32 %430) #8, !dbg !13792
  br label %cond.end602, !dbg !13792

cond.end602:                                      ; preds = %cond.false599, %cond.true583
  %cond603 = phi i32 [ %or598, %cond.true583 ], [ %call601, %cond.false599 ], !dbg !13792
  %and604 = and i32 %cond603, 65535, !dbg !13792
  %431 = load i32, i32* %_v524, align 4, !dbg !13792
  %and605 = and i32 %431, 65535, !dbg !13792
  %shl606 = shl i32 %and605, 16, !dbg !13792
  %or607 = or i32 %and604, %shl606, !dbg !13792
  %and608 = and i32 %or607, 65280, !dbg !13792
  %shl609 = shl i32 %and608, 8, !dbg !13792
  %or610 = or i32 %shl581, %shl609, !dbg !13792
  %432 = load i8*, i8** %in, align 8, !dbg !13792
  %433 = bitcast i8* %432 to i32*, !dbg !13792
  %add.ptr611 = getelementptr i32, i32* %433, i64 0, !dbg !13792
  %434 = load i32, i32* %add.ptr611, align 4, !dbg !13792
  %435 = call i1 @llvm.is.constant.i32(i32 %434), !dbg !13792
  br i1 %435, label %cond.true612, label %cond.false628, !dbg !13792

cond.true612:                                     ; preds = %cond.end602
  %436 = load i8*, i8** %in, align 8, !dbg !13792
  %437 = bitcast i8* %436 to i32*, !dbg !13792
  %add.ptr613 = getelementptr i32, i32* %437, i64 0, !dbg !13792
  %438 = load i32, i32* %add.ptr613, align 4, !dbg !13792
  %and614 = and i32 %438, 255, !dbg !13792
  %shl615 = shl i32 %and614, 24, !dbg !13792
  %439 = load i8*, i8** %in, align 8, !dbg !13792
  %440 = bitcast i8* %439 to i32*, !dbg !13792
  %add.ptr616 = getelementptr i32, i32* %440, i64 0, !dbg !13792
  %441 = load i32, i32* %add.ptr616, align 4, !dbg !13792
  %and617 = and i32 %441, 65280, !dbg !13792
  %shl618 = shl i32 %and617, 8, !dbg !13792
  %or619 = or i32 %shl615, %shl618, !dbg !13792
  %442 = load i8*, i8** %in, align 8, !dbg !13792
  %443 = bitcast i8* %442 to i32*, !dbg !13792
  %add.ptr620 = getelementptr i32, i32* %443, i64 0, !dbg !13792
  %444 = load i32, i32* %add.ptr620, align 4, !dbg !13792
  %and621 = and i32 %444, 16711680, !dbg !13792
  %shr622 = lshr i32 %and621, 8, !dbg !13792
  %or623 = or i32 %or619, %shr622, !dbg !13792
  %445 = load i8*, i8** %in, align 8, !dbg !13792
  %446 = bitcast i8* %445 to i32*, !dbg !13792
  %add.ptr624 = getelementptr i32, i32* %446, i64 0, !dbg !13792
  %447 = load i32, i32* %add.ptr624, align 4, !dbg !13792
  %and625 = and i32 %447, -16777216, !dbg !13792
  %shr626 = lshr i32 %and625, 24, !dbg !13792
  %or627 = or i32 %or623, %shr626, !dbg !13792
  br label %cond.end631, !dbg !13792

cond.false628:                                    ; preds = %cond.end602
  %448 = load i8*, i8** %in, align 8, !dbg !13792
  %449 = bitcast i8* %448 to i32*, !dbg !13792
  %add.ptr629 = getelementptr i32, i32* %449, i64 0, !dbg !13792
  %450 = load i32, i32* %add.ptr629, align 4, !dbg !13792
  %call630 = call i32 @__fswab32(i32 %450) #8, !dbg !13792
  br label %cond.end631, !dbg !13792

cond.end631:                                      ; preds = %cond.false628, %cond.true612
  %cond632 = phi i32 [ %or627, %cond.true612 ], [ %call630, %cond.false628 ], !dbg !13792
  %and633 = and i32 %cond632, 65535, !dbg !13792
  %451 = load i32, i32* %_v524, align 4, !dbg !13792
  %and634 = and i32 %451, 65535, !dbg !13792
  %shl635 = shl i32 %and634, 16, !dbg !13792
  %or636 = or i32 %and633, %shl635, !dbg !13792
  %and637 = and i32 %or636, 16711680, !dbg !13792
  %shr638 = lshr i32 %and637, 8, !dbg !13792
  %or639 = or i32 %or610, %shr638, !dbg !13792
  %452 = load i8*, i8** %in, align 8, !dbg !13792
  %453 = bitcast i8* %452 to i32*, !dbg !13792
  %add.ptr640 = getelementptr i32, i32* %453, i64 0, !dbg !13792
  %454 = load i32, i32* %add.ptr640, align 4, !dbg !13792
  %455 = call i1 @llvm.is.constant.i32(i32 %454), !dbg !13792
  br i1 %455, label %cond.true641, label %cond.false657, !dbg !13792

cond.true641:                                     ; preds = %cond.end631
  %456 = load i8*, i8** %in, align 8, !dbg !13792
  %457 = bitcast i8* %456 to i32*, !dbg !13792
  %add.ptr642 = getelementptr i32, i32* %457, i64 0, !dbg !13792
  %458 = load i32, i32* %add.ptr642, align 4, !dbg !13792
  %and643 = and i32 %458, 255, !dbg !13792
  %shl644 = shl i32 %and643, 24, !dbg !13792
  %459 = load i8*, i8** %in, align 8, !dbg !13792
  %460 = bitcast i8* %459 to i32*, !dbg !13792
  %add.ptr645 = getelementptr i32, i32* %460, i64 0, !dbg !13792
  %461 = load i32, i32* %add.ptr645, align 4, !dbg !13792
  %and646 = and i32 %461, 65280, !dbg !13792
  %shl647 = shl i32 %and646, 8, !dbg !13792
  %or648 = or i32 %shl644, %shl647, !dbg !13792
  %462 = load i8*, i8** %in, align 8, !dbg !13792
  %463 = bitcast i8* %462 to i32*, !dbg !13792
  %add.ptr649 = getelementptr i32, i32* %463, i64 0, !dbg !13792
  %464 = load i32, i32* %add.ptr649, align 4, !dbg !13792
  %and650 = and i32 %464, 16711680, !dbg !13792
  %shr651 = lshr i32 %and650, 8, !dbg !13792
  %or652 = or i32 %or648, %shr651, !dbg !13792
  %465 = load i8*, i8** %in, align 8, !dbg !13792
  %466 = bitcast i8* %465 to i32*, !dbg !13792
  %add.ptr653 = getelementptr i32, i32* %466, i64 0, !dbg !13792
  %467 = load i32, i32* %add.ptr653, align 4, !dbg !13792
  %and654 = and i32 %467, -16777216, !dbg !13792
  %shr655 = lshr i32 %and654, 24, !dbg !13792
  %or656 = or i32 %or652, %shr655, !dbg !13792
  br label %cond.end660, !dbg !13792

cond.false657:                                    ; preds = %cond.end631
  %468 = load i8*, i8** %in, align 8, !dbg !13792
  %469 = bitcast i8* %468 to i32*, !dbg !13792
  %add.ptr658 = getelementptr i32, i32* %469, i64 0, !dbg !13792
  %470 = load i32, i32* %add.ptr658, align 4, !dbg !13792
  %call659 = call i32 @__fswab32(i32 %470) #8, !dbg !13792
  br label %cond.end660, !dbg !13792

cond.end660:                                      ; preds = %cond.false657, %cond.true641
  %cond661 = phi i32 [ %or656, %cond.true641 ], [ %call659, %cond.false657 ], !dbg !13792
  %and662 = and i32 %cond661, 65535, !dbg !13792
  %471 = load i32, i32* %_v524, align 4, !dbg !13792
  %and663 = and i32 %471, 65535, !dbg !13792
  %shl664 = shl i32 %and663, 16, !dbg !13792
  %or665 = or i32 %and662, %shl664, !dbg !13792
  %and666 = and i32 %or665, -16777216, !dbg !13792
  %shr667 = lshr i32 %and666, 24, !dbg !13792
  %or668 = or i32 %or639, %shr667, !dbg !13792
  br label %cond.end697, !dbg !13792

cond.false669:                                    ; preds = %cond.end547
  %472 = load i8*, i8** %in, align 8, !dbg !13792
  %473 = bitcast i8* %472 to i32*, !dbg !13792
  %add.ptr670 = getelementptr i32, i32* %473, i64 0, !dbg !13792
  %474 = load i32, i32* %add.ptr670, align 4, !dbg !13792
  %475 = call i1 @llvm.is.constant.i32(i32 %474), !dbg !13792
  br i1 %475, label %cond.true671, label %cond.false687, !dbg !13792

cond.true671:                                     ; preds = %cond.false669
  %476 = load i8*, i8** %in, align 8, !dbg !13792
  %477 = bitcast i8* %476 to i32*, !dbg !13792
  %add.ptr672 = getelementptr i32, i32* %477, i64 0, !dbg !13792
  %478 = load i32, i32* %add.ptr672, align 4, !dbg !13792
  %and673 = and i32 %478, 255, !dbg !13792
  %shl674 = shl i32 %and673, 24, !dbg !13792
  %479 = load i8*, i8** %in, align 8, !dbg !13792
  %480 = bitcast i8* %479 to i32*, !dbg !13792
  %add.ptr675 = getelementptr i32, i32* %480, i64 0, !dbg !13792
  %481 = load i32, i32* %add.ptr675, align 4, !dbg !13792
  %and676 = and i32 %481, 65280, !dbg !13792
  %shl677 = shl i32 %and676, 8, !dbg !13792
  %or678 = or i32 %shl674, %shl677, !dbg !13792
  %482 = load i8*, i8** %in, align 8, !dbg !13792
  %483 = bitcast i8* %482 to i32*, !dbg !13792
  %add.ptr679 = getelementptr i32, i32* %483, i64 0, !dbg !13792
  %484 = load i32, i32* %add.ptr679, align 4, !dbg !13792
  %and680 = and i32 %484, 16711680, !dbg !13792
  %shr681 = lshr i32 %and680, 8, !dbg !13792
  %or682 = or i32 %or678, %shr681, !dbg !13792
  %485 = load i8*, i8** %in, align 8, !dbg !13792
  %486 = bitcast i8* %485 to i32*, !dbg !13792
  %add.ptr683 = getelementptr i32, i32* %486, i64 0, !dbg !13792
  %487 = load i32, i32* %add.ptr683, align 4, !dbg !13792
  %and684 = and i32 %487, -16777216, !dbg !13792
  %shr685 = lshr i32 %and684, 24, !dbg !13792
  %or686 = or i32 %or682, %shr685, !dbg !13792
  br label %cond.end690, !dbg !13792

cond.false687:                                    ; preds = %cond.false669
  %488 = load i8*, i8** %in, align 8, !dbg !13792
  %489 = bitcast i8* %488 to i32*, !dbg !13792
  %add.ptr688 = getelementptr i32, i32* %489, i64 0, !dbg !13792
  %490 = load i32, i32* %add.ptr688, align 4, !dbg !13792
  %call689 = call i32 @__fswab32(i32 %490) #8, !dbg !13792
  br label %cond.end690, !dbg !13792

cond.end690:                                      ; preds = %cond.false687, %cond.true671
  %cond691 = phi i32 [ %or686, %cond.true671 ], [ %call689, %cond.false687 ], !dbg !13792
  %and692 = and i32 %cond691, 65535, !dbg !13792
  %491 = load i32, i32* %_v524, align 4, !dbg !13792
  %and693 = and i32 %491, 65535, !dbg !13792
  %shl694 = shl i32 %and693, 16, !dbg !13792
  %or695 = or i32 %and692, %shl694, !dbg !13792
  %call696 = call i32 @__fswab32(i32 %or695) #8, !dbg !13792
  br label %cond.end697, !dbg !13792

cond.end697:                                      ; preds = %cond.end690, %cond.end660
  %cond698 = phi i32 [ %or668, %cond.end660 ], [ %call696, %cond.end690 ], !dbg !13792
  %492 = load i8*, i8** %in, align 8, !dbg !13792
  %493 = bitcast i8* %492 to i32*, !dbg !13792
  %add.ptr699 = getelementptr i32, i32* %493, i64 0, !dbg !13792
  store i32 %cond698, i32* %add.ptr699, align 4, !dbg !13792
  br label %do.end700, !dbg !13792

do.end700:                                        ; preds = %cond.end697
  call void @llvm.dbg.declare(metadata [4 x i32]* %_out, metadata !13795, metadata !DIExpression()), !dbg !13797
  %494 = bitcast [4 x i32]* %_out to i8*, !dbg !13797
  call void @llvm.memset.p0i8.i64(i8* align 16 %494, i8 0, i64 16, i1 false), !dbg !13797
  %495 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %port_mdev.addr, align 8, !dbg !13798
  %496 = load i8*, i8** %in, align 8, !dbg !13798
  %arraydecay = getelementptr inbounds [4 x i32], [4 x i32]* %_out, i64 0, i64 0, !dbg !13798
  %497 = bitcast i32* %arraydecay to i8*, !dbg !13798
  %call702 = call i32 @mlx5_cmd_exec(%struct.mlx5_core_dev* %495, i8* %496, i32 512, i8* %497, i32 16) #9, !dbg !13798
  store i32 %call702, i32* %tmp701, align 4, !dbg !13797
  %498 = load i32, i32* %tmp701, align 4, !dbg !13798
  store i32 %498, i32* %tmp, align 4, !dbg !13797
  %499 = load i32, i32* %tmp, align 4, !dbg !13797
  store i32 %499, i32* %err, align 4, !dbg !13800
  %500 = load i32, i32* %err, align 4, !dbg !13801
  %tobool703 = icmp ne i32 %500, 0, !dbg !13801
  br i1 %tobool703, label %if.end706, label %if.then704, !dbg !13803

if.then704:                                       ; preds = %do.end700
  %501 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %port_mdev.addr, align 8, !dbg !13804
  %call705 = call i32 @mlx5_nic_vport_disable_roce(%struct.mlx5_core_dev* %501) #9, !dbg !13805
  br label %if.end706, !dbg !13805

if.end706:                                        ; preds = %if.then704, %do.end700
  %502 = load i8*, i8** %in, align 8, !dbg !13806
  call void @kvfree(i8* %502) #9, !dbg !13807
  %503 = load i32, i32* %err, align 4, !dbg !13808
  store i32 %503, i32* %retval, align 4, !dbg !13809
  br label %return, !dbg !13809

return:                                           ; preds = %if.end706, %if.then
  %504 = load i32, i32* %retval, align 4, !dbg !13810
  ret i32 %504, !dbg !13810
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i64 @mlx5_query_nic_system_image_guid(%struct.mlx5_core_dev* %mdev) #0 !dbg !13811 {
entry:
  %retval = alloca i64, align 8
  %mdev.addr = alloca %struct.mlx5_core_dev*, align 8
  %port_type_cap = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.mlx5_core_dev* %mdev, %struct.mlx5_core_dev** %mdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_core_dev** %mdev.addr, metadata !13814, metadata !DIExpression()), !dbg !13815
  call void @llvm.dbg.declare(metadata i32* %port_type_cap, metadata !13816, metadata !DIExpression()), !dbg !13817
  %0 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %mdev.addr, align 8, !dbg !13818
  %caps = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %0, i32 0, i32 9, !dbg !13818
  %hca_cur = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps, i32 0, i32 0, !dbg !13818
  %arrayidx = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur, i64 0, i64 0, !dbg !13818
  %arraydecay = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx, i64 0, i64 0, !dbg !13818
  %add.ptr = getelementptr i32, i32* %arraydecay, i64 13, !dbg !13818
  %1 = load i32, i32* %add.ptr, align 4, !dbg !13818
  %2 = call i1 @llvm.is.constant.i32(i32 %1), !dbg !13818
  br i1 %2, label %cond.true, label %cond.false, !dbg !13818

cond.true:                                        ; preds = %entry
  %3 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %mdev.addr, align 8, !dbg !13818
  %caps1 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %3, i32 0, i32 9, !dbg !13818
  %hca_cur2 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps1, i32 0, i32 0, !dbg !13818
  %arrayidx3 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur2, i64 0, i64 0, !dbg !13818
  %arraydecay4 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx3, i64 0, i64 0, !dbg !13818
  %add.ptr5 = getelementptr i32, i32* %arraydecay4, i64 13, !dbg !13818
  %4 = load i32, i32* %add.ptr5, align 4, !dbg !13818
  %and = and i32 %4, 255, !dbg !13818
  %shl = shl i32 %and, 24, !dbg !13818
  %5 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %mdev.addr, align 8, !dbg !13818
  %caps6 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %5, i32 0, i32 9, !dbg !13818
  %hca_cur7 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps6, i32 0, i32 0, !dbg !13818
  %arrayidx8 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur7, i64 0, i64 0, !dbg !13818
  %arraydecay9 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx8, i64 0, i64 0, !dbg !13818
  %add.ptr10 = getelementptr i32, i32* %arraydecay9, i64 13, !dbg !13818
  %6 = load i32, i32* %add.ptr10, align 4, !dbg !13818
  %and11 = and i32 %6, 65280, !dbg !13818
  %shl12 = shl i32 %and11, 8, !dbg !13818
  %or = or i32 %shl, %shl12, !dbg !13818
  %7 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %mdev.addr, align 8, !dbg !13818
  %caps13 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %7, i32 0, i32 9, !dbg !13818
  %hca_cur14 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps13, i32 0, i32 0, !dbg !13818
  %arrayidx15 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur14, i64 0, i64 0, !dbg !13818
  %arraydecay16 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx15, i64 0, i64 0, !dbg !13818
  %add.ptr17 = getelementptr i32, i32* %arraydecay16, i64 13, !dbg !13818
  %8 = load i32, i32* %add.ptr17, align 4, !dbg !13818
  %and18 = and i32 %8, 16711680, !dbg !13818
  %shr = lshr i32 %and18, 8, !dbg !13818
  %or19 = or i32 %or, %shr, !dbg !13818
  %9 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %mdev.addr, align 8, !dbg !13818
  %caps20 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %9, i32 0, i32 9, !dbg !13818
  %hca_cur21 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps20, i32 0, i32 0, !dbg !13818
  %arrayidx22 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur21, i64 0, i64 0, !dbg !13818
  %arraydecay23 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx22, i64 0, i64 0, !dbg !13818
  %add.ptr24 = getelementptr i32, i32* %arraydecay23, i64 13, !dbg !13818
  %10 = load i32, i32* %add.ptr24, align 4, !dbg !13818
  %and25 = and i32 %10, -16777216, !dbg !13818
  %shr26 = lshr i32 %and25, 24, !dbg !13818
  %or27 = or i32 %or19, %shr26, !dbg !13818
  br label %cond.end, !dbg !13818

cond.false:                                       ; preds = %entry
  %11 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %mdev.addr, align 8, !dbg !13818
  %caps28 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %11, i32 0, i32 9, !dbg !13818
  %hca_cur29 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps28, i32 0, i32 0, !dbg !13818
  %arrayidx30 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur29, i64 0, i64 0, !dbg !13818
  %arraydecay31 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx30, i64 0, i64 0, !dbg !13818
  %add.ptr32 = getelementptr i32, i32* %arraydecay31, i64 13, !dbg !13818
  %12 = load i32, i32* %add.ptr32, align 4, !dbg !13818
  %call = call i32 @__fswab32(i32 %12) #8, !dbg !13818
  br label %cond.end, !dbg !13818

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %or27, %cond.true ], [ %call, %cond.false ], !dbg !13818
  %shr33 = lshr i32 %cond, 8, !dbg !13818
  %and34 = and i32 %shr33, 3, !dbg !13818
  store i32 %and34, i32* %port_type_cap, align 4, !dbg !13817
  call void @llvm.dbg.declare(metadata i64* %tmp, metadata !13819, metadata !DIExpression()), !dbg !13820
  store i64 0, i64* %tmp, align 8, !dbg !13820
  %13 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %mdev.addr, align 8, !dbg !13821
  %sys_image_guid = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %13, i32 0, i32 10, !dbg !13823
  %14 = load i64, i64* %sys_image_guid, align 8, !dbg !13823
  %tobool = icmp ne i64 %14, 0, !dbg !13821
  br i1 %tobool, label %if.then, label %if.end, !dbg !13824

if.then:                                          ; preds = %cond.end
  %15 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %mdev.addr, align 8, !dbg !13825
  %sys_image_guid35 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %15, i32 0, i32 10, !dbg !13826
  %16 = load i64, i64* %sys_image_guid35, align 8, !dbg !13826
  store i64 %16, i64* %retval, align 8, !dbg !13827
  br label %return, !dbg !13827

if.end:                                           ; preds = %cond.end
  %17 = load i32, i32* %port_type_cap, align 4, !dbg !13828
  %cmp = icmp eq i32 %17, 1, !dbg !13830
  br i1 %cmp, label %if.then36, label %if.else, !dbg !13831

if.then36:                                        ; preds = %if.end
  %18 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %mdev.addr, align 8, !dbg !13832
  %call37 = call i32 @mlx5_query_nic_vport_system_image_guid(%struct.mlx5_core_dev* %18, i64* %tmp) #9, !dbg !13833
  br label %if.end39, !dbg !13833

if.else:                                          ; preds = %if.end
  %19 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %mdev.addr, align 8, !dbg !13834
  %call38 = call i32 @mlx5_query_hca_vport_system_image_guid(%struct.mlx5_core_dev* %19, i64* %tmp) #9, !dbg !13835
  br label %if.end39

if.end39:                                         ; preds = %if.else, %if.then36
  %20 = load i64, i64* %tmp, align 8, !dbg !13836
  %21 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %mdev.addr, align 8, !dbg !13837
  %sys_image_guid40 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %21, i32 0, i32 10, !dbg !13838
  store i64 %20, i64* %sys_image_guid40, align 8, !dbg !13839
  %22 = load i64, i64* %tmp, align 8, !dbg !13840
  store i64 %22, i64* %retval, align 8, !dbg !13841
  br label %return, !dbg !13841

return:                                           ; preds = %if.end39, %if.then
  %23 = load i64, i64* %retval, align 8, !dbg !13842
  ret i64 %23, !dbg !13842
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local zeroext i16 @mlx5_eswitch_get_total_vports(%struct.mlx5_core_dev* %dev) #0 !dbg !13843 {
entry:
  %dev.addr = alloca %struct.mlx5_core_dev*, align 8
  store %struct.mlx5_core_dev* %dev, %struct.mlx5_core_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_core_dev** %dev.addr, metadata !13848, metadata !DIExpression()), !dbg !13849
  %0 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !13850
  %call = call zeroext i1 @mlx5_ecpf_vport_exists(%struct.mlx5_core_dev* %0) #9, !dbg !13850
  %conv = zext i1 %call to i32, !dbg !13850
  %add = add i32 2, %conv, !dbg !13850
  %1 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !13851
  %call1 = call zeroext i16 @mlx5_core_max_vfs(%struct.mlx5_core_dev* %1) #9, !dbg !13852
  %conv2 = zext i16 %call1 to i32, !dbg !13852
  %add3 = add i32 %add, %conv2, !dbg !13853
  %conv4 = trunc i32 %add3 to i16, !dbg !13850
  ret i16 %conv4, !dbg !13854
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @mlx5_ecpf_vport_exists(%struct.mlx5_core_dev* %dev) #0 !dbg !13855 {
entry:
  %dev.addr = alloca %struct.mlx5_core_dev*, align 8
  store %struct.mlx5_core_dev* %dev, %struct.mlx5_core_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_core_dev** %dev.addr, metadata !13858, metadata !DIExpression()), !dbg !13859
  %0 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !13860
  %call = call zeroext i1 @mlx5_core_is_pf(%struct.mlx5_core_dev* %0) #9, !dbg !13861
  br i1 %call, label %land.rhs, label %land.end, !dbg !13862

land.rhs:                                         ; preds = %entry
  %1 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !13863
  %caps = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %1, i32 0, i32 9, !dbg !13863
  %hca_cur = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps, i32 0, i32 0, !dbg !13863
  %arrayidx = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur, i64 0, i64 9, !dbg !13863
  %arraydecay = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx, i64 0, i64 0, !dbg !13863
  %add.ptr = getelementptr i32, i32* %arraydecay, i64 0, !dbg !13863
  %2 = load i32, i32* %add.ptr, align 4, !dbg !13863
  %3 = call i1 @llvm.is.constant.i32(i32 %2), !dbg !13863
  br i1 %3, label %cond.true, label %cond.false, !dbg !13863

cond.true:                                        ; preds = %land.rhs
  %4 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !13863
  %caps1 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %4, i32 0, i32 9, !dbg !13863
  %hca_cur2 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps1, i32 0, i32 0, !dbg !13863
  %arrayidx3 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur2, i64 0, i64 9, !dbg !13863
  %arraydecay4 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx3, i64 0, i64 0, !dbg !13863
  %add.ptr5 = getelementptr i32, i32* %arraydecay4, i64 0, !dbg !13863
  %5 = load i32, i32* %add.ptr5, align 4, !dbg !13863
  %and = and i32 %5, 255, !dbg !13863
  %shl = shl i32 %and, 24, !dbg !13863
  %6 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !13863
  %caps6 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %6, i32 0, i32 9, !dbg !13863
  %hca_cur7 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps6, i32 0, i32 0, !dbg !13863
  %arrayidx8 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur7, i64 0, i64 9, !dbg !13863
  %arraydecay9 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx8, i64 0, i64 0, !dbg !13863
  %add.ptr10 = getelementptr i32, i32* %arraydecay9, i64 0, !dbg !13863
  %7 = load i32, i32* %add.ptr10, align 4, !dbg !13863
  %and11 = and i32 %7, 65280, !dbg !13863
  %shl12 = shl i32 %and11, 8, !dbg !13863
  %or = or i32 %shl, %shl12, !dbg !13863
  %8 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !13863
  %caps13 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %8, i32 0, i32 9, !dbg !13863
  %hca_cur14 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps13, i32 0, i32 0, !dbg !13863
  %arrayidx15 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur14, i64 0, i64 9, !dbg !13863
  %arraydecay16 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx15, i64 0, i64 0, !dbg !13863
  %add.ptr17 = getelementptr i32, i32* %arraydecay16, i64 0, !dbg !13863
  %9 = load i32, i32* %add.ptr17, align 4, !dbg !13863
  %and18 = and i32 %9, 16711680, !dbg !13863
  %shr = lshr i32 %and18, 8, !dbg !13863
  %or19 = or i32 %or, %shr, !dbg !13863
  %10 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !13863
  %caps20 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %10, i32 0, i32 9, !dbg !13863
  %hca_cur21 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps20, i32 0, i32 0, !dbg !13863
  %arrayidx22 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur21, i64 0, i64 9, !dbg !13863
  %arraydecay23 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx22, i64 0, i64 0, !dbg !13863
  %add.ptr24 = getelementptr i32, i32* %arraydecay23, i64 0, !dbg !13863
  %11 = load i32, i32* %add.ptr24, align 4, !dbg !13863
  %and25 = and i32 %11, -16777216, !dbg !13863
  %shr26 = lshr i32 %and25, 24, !dbg !13863
  %or27 = or i32 %or19, %shr26, !dbg !13863
  br label %cond.end, !dbg !13863

cond.false:                                       ; preds = %land.rhs
  %12 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !13863
  %caps28 = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %12, i32 0, i32 9, !dbg !13863
  %hca_cur29 = getelementptr inbounds %struct.anon.137, %struct.anon.137* %caps28, i32 0, i32 0, !dbg !13863
  %arrayidx30 = getelementptr [22 x [1024 x i32]], [22 x [1024 x i32]]* %hca_cur29, i64 0, i64 9, !dbg !13863
  %arraydecay31 = getelementptr inbounds [1024 x i32], [1024 x i32]* %arrayidx30, i64 0, i64 0, !dbg !13863
  %add.ptr32 = getelementptr i32, i32* %arraydecay31, i64 0, !dbg !13863
  %13 = load i32, i32* %add.ptr32, align 4, !dbg !13863
  %call33 = call i32 @__fswab32(i32 %13) #8, !dbg !13863
  br label %cond.end, !dbg !13863

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %or27, %cond.true ], [ %call33, %cond.false ], !dbg !13863
  %shr34 = lshr i32 %cond, 4, !dbg !13863
  %and35 = and i32 %shr34, 1, !dbg !13863
  %tobool = icmp ne i32 %and35, 0, !dbg !13862
  br label %land.end

land.end:                                         ; preds = %cond.end, %entry
  %14 = phi i1 [ false, %entry ], [ %tobool, %cond.end ], !dbg !13864
  ret i1 %14, !dbg !13865
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i16 @mlx5_core_max_vfs(%struct.mlx5_core_dev* %dev) #0 !dbg !13866 {
entry:
  %dev.addr = alloca %struct.mlx5_core_dev*, align 8
  store %struct.mlx5_core_dev* %dev, %struct.mlx5_core_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_core_dev** %dev.addr, metadata !13867, metadata !DIExpression()), !dbg !13868
  %0 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !13869
  %priv = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %0, i32 0, i32 17, !dbg !13870
  %sriov = getelementptr inbounds %struct.mlx5_priv, %struct.mlx5_priv* %priv, i32 0, i32 27, !dbg !13871
  %max_vfs = getelementptr inbounds %struct.mlx5_core_sriov, %struct.mlx5_core_sriov* %sriov, i32 0, i32 2, !dbg !13872
  %1 = load i16, i16* %max_vfs, align 4, !dbg !13872
  ret i16 %1, !dbg !13873
}

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @__arch_swab32(i32 %val) #4 !dbg !13874 {
entry:
  %val.addr = alloca i32, align 4
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !13876, metadata !DIExpression()), !dbg !13877
  %0 = load i32, i32* %val.addr, align 4, !dbg !13878
  %1 = call i32 asm "bswapl $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %0) #10, !dbg !13879, !srcloc !13880
  store i32 %1, i32* %val.addr, align 4, !dbg !13879
  %2 = load i32, i32* %val.addr, align 4, !dbg !13881
  ret i32 %2, !dbg !13882
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kvmalloc(i64 %size, i32 %flags) #0 !dbg !13883 {
entry:
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !13884, metadata !DIExpression()), !dbg !13885
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !13886, metadata !DIExpression()), !dbg !13887
  %0 = load i64, i64* %size.addr, align 8, !dbg !13888
  %1 = load i32, i32* %flags.addr, align 4, !dbg !13889
  %call = call i8* @kvmalloc_node(i64 %0, i32 %1, i32 -1) #9, !dbg !13890
  ret i8* %call, !dbg !13891
}

; Function Attrs: noredzone
declare dso_local i8* @kvmalloc_node(i64, i32, i32) #5

; Function Attrs: noredzone
declare dso_local noalias i8* @__kmalloc(i64, i32) #5

; Function Attrs: nounwind willreturn
declare void @llvm.assume(i1) #7

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @get_order(i64 %size) #4 !dbg !13892 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !13896, metadata !DIExpression()), !dbg !13901
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !13903, metadata !DIExpression()), !dbg !13904
  %retval = alloca i32, align 4
  %size.addr = alloca i64, align 8
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !13905, metadata !DIExpression()), !dbg !13906
  %0 = load i64, i64* %size.addr, align 8, !dbg !13907
  %1 = call i1 @llvm.is.constant.i64(i64 %0), !dbg !13909
  br i1 %1, label %if.then, label %if.end447, !dbg !13910

if.then:                                          ; preds = %entry
  %2 = load i64, i64* %size.addr, align 8, !dbg !13911
  %tobool = icmp ne i64 %2, 0, !dbg !13911
  br i1 %tobool, label %if.end, label %if.then1, !dbg !13914

if.then1:                                         ; preds = %if.then
  store i32 52, i32* %retval, align 4, !dbg !13915
  br label %return, !dbg !13915

if.end:                                           ; preds = %if.then
  %3 = load i64, i64* %size.addr, align 8, !dbg !13916
  %cmp = icmp ult i64 %3, 4096, !dbg !13918
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !13919

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !13920
  br label %return, !dbg !13920

if.end3:                                          ; preds = %if.end
  %4 = load i64, i64* %size.addr, align 8, !dbg !13921
  %sub = sub i64 %4, 1, !dbg !13921
  %5 = call i1 @llvm.is.constant.i64(i64 %sub), !dbg !13921
  br i1 %5, label %cond.true, label %cond.false442, !dbg !13921

cond.true:                                        ; preds = %if.end3
  %6 = load i64, i64* %size.addr, align 8, !dbg !13921
  %sub4 = sub i64 %6, 1, !dbg !13921
  %7 = call i1 @llvm.is.constant.i64(i64 %sub4), !dbg !13921
  br i1 %7, label %cond.true5, label %cond.false439, !dbg !13921

cond.true5:                                       ; preds = %cond.true
  %8 = load i64, i64* %size.addr, align 8, !dbg !13921
  %sub6 = sub i64 %8, 1, !dbg !13921
  %cmp7 = icmp ult i64 %sub6, 2, !dbg !13921
  br i1 %cmp7, label %cond.true8, label %cond.false, !dbg !13921

cond.true8:                                       ; preds = %cond.true5
  br label %cond.end437, !dbg !13921

cond.false:                                       ; preds = %cond.true5
  %9 = load i64, i64* %size.addr, align 8, !dbg !13921
  %sub9 = sub i64 %9, 1, !dbg !13921
  %and = and i64 %sub9, -9223372036854775808, !dbg !13921
  %tobool10 = icmp ne i64 %and, 0, !dbg !13921
  br i1 %tobool10, label %cond.true11, label %cond.false12, !dbg !13921

cond.true11:                                      ; preds = %cond.false
  br label %cond.end435, !dbg !13921

cond.false12:                                     ; preds = %cond.false
  %10 = load i64, i64* %size.addr, align 8, !dbg !13921
  %sub13 = sub i64 %10, 1, !dbg !13921
  %and14 = and i64 %sub13, 4611686018427387904, !dbg !13921
  %tobool15 = icmp ne i64 %and14, 0, !dbg !13921
  br i1 %tobool15, label %cond.true16, label %cond.false17, !dbg !13921

cond.true16:                                      ; preds = %cond.false12
  br label %cond.end433, !dbg !13921

cond.false17:                                     ; preds = %cond.false12
  %11 = load i64, i64* %size.addr, align 8, !dbg !13921
  %sub18 = sub i64 %11, 1, !dbg !13921
  %and19 = and i64 %sub18, 2305843009213693952, !dbg !13921
  %tobool20 = icmp ne i64 %and19, 0, !dbg !13921
  br i1 %tobool20, label %cond.true21, label %cond.false22, !dbg !13921

cond.true21:                                      ; preds = %cond.false17
  br label %cond.end431, !dbg !13921

cond.false22:                                     ; preds = %cond.false17
  %12 = load i64, i64* %size.addr, align 8, !dbg !13921
  %sub23 = sub i64 %12, 1, !dbg !13921
  %and24 = and i64 %sub23, 1152921504606846976, !dbg !13921
  %tobool25 = icmp ne i64 %and24, 0, !dbg !13921
  br i1 %tobool25, label %cond.true26, label %cond.false27, !dbg !13921

cond.true26:                                      ; preds = %cond.false22
  br label %cond.end429, !dbg !13921

cond.false27:                                     ; preds = %cond.false22
  %13 = load i64, i64* %size.addr, align 8, !dbg !13921
  %sub28 = sub i64 %13, 1, !dbg !13921
  %and29 = and i64 %sub28, 576460752303423488, !dbg !13921
  %tobool30 = icmp ne i64 %and29, 0, !dbg !13921
  br i1 %tobool30, label %cond.true31, label %cond.false32, !dbg !13921

cond.true31:                                      ; preds = %cond.false27
  br label %cond.end427, !dbg !13921

cond.false32:                                     ; preds = %cond.false27
  %14 = load i64, i64* %size.addr, align 8, !dbg !13921
  %sub33 = sub i64 %14, 1, !dbg !13921
  %and34 = and i64 %sub33, 288230376151711744, !dbg !13921
  %tobool35 = icmp ne i64 %and34, 0, !dbg !13921
  br i1 %tobool35, label %cond.true36, label %cond.false37, !dbg !13921

cond.true36:                                      ; preds = %cond.false32
  br label %cond.end425, !dbg !13921

cond.false37:                                     ; preds = %cond.false32
  %15 = load i64, i64* %size.addr, align 8, !dbg !13921
  %sub38 = sub i64 %15, 1, !dbg !13921
  %and39 = and i64 %sub38, 144115188075855872, !dbg !13921
  %tobool40 = icmp ne i64 %and39, 0, !dbg !13921
  br i1 %tobool40, label %cond.true41, label %cond.false42, !dbg !13921

cond.true41:                                      ; preds = %cond.false37
  br label %cond.end423, !dbg !13921

cond.false42:                                     ; preds = %cond.false37
  %16 = load i64, i64* %size.addr, align 8, !dbg !13921
  %sub43 = sub i64 %16, 1, !dbg !13921
  %and44 = and i64 %sub43, 72057594037927936, !dbg !13921
  %tobool45 = icmp ne i64 %and44, 0, !dbg !13921
  br i1 %tobool45, label %cond.true46, label %cond.false47, !dbg !13921

cond.true46:                                      ; preds = %cond.false42
  br label %cond.end421, !dbg !13921

cond.false47:                                     ; preds = %cond.false42
  %17 = load i64, i64* %size.addr, align 8, !dbg !13921
  %sub48 = sub i64 %17, 1, !dbg !13921
  %and49 = and i64 %sub48, 36028797018963968, !dbg !13921
  %tobool50 = icmp ne i64 %and49, 0, !dbg !13921
  br i1 %tobool50, label %cond.true51, label %cond.false52, !dbg !13921

cond.true51:                                      ; preds = %cond.false47
  br label %cond.end419, !dbg !13921

cond.false52:                                     ; preds = %cond.false47
  %18 = load i64, i64* %size.addr, align 8, !dbg !13921
  %sub53 = sub i64 %18, 1, !dbg !13921
  %and54 = and i64 %sub53, 18014398509481984, !dbg !13921
  %tobool55 = icmp ne i64 %and54, 0, !dbg !13921
  br i1 %tobool55, label %cond.true56, label %cond.false57, !dbg !13921

cond.true56:                                      ; preds = %cond.false52
  br label %cond.end417, !dbg !13921

cond.false57:                                     ; preds = %cond.false52
  %19 = load i64, i64* %size.addr, align 8, !dbg !13921
  %sub58 = sub i64 %19, 1, !dbg !13921
  %and59 = and i64 %sub58, 9007199254740992, !dbg !13921
  %tobool60 = icmp ne i64 %and59, 0, !dbg !13921
  br i1 %tobool60, label %cond.true61, label %cond.false62, !dbg !13921

cond.true61:                                      ; preds = %cond.false57
  br label %cond.end415, !dbg !13921

cond.false62:                                     ; preds = %cond.false57
  %20 = load i64, i64* %size.addr, align 8, !dbg !13921
  %sub63 = sub i64 %20, 1, !dbg !13921
  %and64 = and i64 %sub63, 4503599627370496, !dbg !13921
  %tobool65 = icmp ne i64 %and64, 0, !dbg !13921
  br i1 %tobool65, label %cond.true66, label %cond.false67, !dbg !13921

cond.true66:                                      ; preds = %cond.false62
  br label %cond.end413, !dbg !13921

cond.false67:                                     ; preds = %cond.false62
  %21 = load i64, i64* %size.addr, align 8, !dbg !13921
  %sub68 = sub i64 %21, 1, !dbg !13921
  %and69 = and i64 %sub68, 2251799813685248, !dbg !13921
  %tobool70 = icmp ne i64 %and69, 0, !dbg !13921
  br i1 %tobool70, label %cond.true71, label %cond.false72, !dbg !13921

cond.true71:                                      ; preds = %cond.false67
  br label %cond.end411, !dbg !13921

cond.false72:                                     ; preds = %cond.false67
  %22 = load i64, i64* %size.addr, align 8, !dbg !13921
  %sub73 = sub i64 %22, 1, !dbg !13921
  %and74 = and i64 %sub73, 1125899906842624, !dbg !13921
  %tobool75 = icmp ne i64 %and74, 0, !dbg !13921
  br i1 %tobool75, label %cond.true76, label %cond.false77, !dbg !13921

cond.true76:                                      ; preds = %cond.false72
  br label %cond.end409, !dbg !13921

cond.false77:                                     ; preds = %cond.false72
  %23 = load i64, i64* %size.addr, align 8, !dbg !13921
  %sub78 = sub i64 %23, 1, !dbg !13921
  %and79 = and i64 %sub78, 562949953421312, !dbg !13921
  %tobool80 = icmp ne i64 %and79, 0, !dbg !13921
  br i1 %tobool80, label %cond.true81, label %cond.false82, !dbg !13921

cond.true81:                                      ; preds = %cond.false77
  br label %cond.end407, !dbg !13921

cond.false82:                                     ; preds = %cond.false77
  %24 = load i64, i64* %size.addr, align 8, !dbg !13921
  %sub83 = sub i64 %24, 1, !dbg !13921
  %and84 = and i64 %sub83, 281474976710656, !dbg !13921
  %tobool85 = icmp ne i64 %and84, 0, !dbg !13921
  br i1 %tobool85, label %cond.true86, label %cond.false87, !dbg !13921

cond.true86:                                      ; preds = %cond.false82
  br label %cond.end405, !dbg !13921

cond.false87:                                     ; preds = %cond.false82
  %25 = load i64, i64* %size.addr, align 8, !dbg !13921
  %sub88 = sub i64 %25, 1, !dbg !13921
  %and89 = and i64 %sub88, 140737488355328, !dbg !13921
  %tobool90 = icmp ne i64 %and89, 0, !dbg !13921
  br i1 %tobool90, label %cond.true91, label %cond.false92, !dbg !13921

cond.true91:                                      ; preds = %cond.false87
  br label %cond.end403, !dbg !13921

cond.false92:                                     ; preds = %cond.false87
  %26 = load i64, i64* %size.addr, align 8, !dbg !13921
  %sub93 = sub i64 %26, 1, !dbg !13921
  %and94 = and i64 %sub93, 70368744177664, !dbg !13921
  %tobool95 = icmp ne i64 %and94, 0, !dbg !13921
  br i1 %tobool95, label %cond.true96, label %cond.false97, !dbg !13921

cond.true96:                                      ; preds = %cond.false92
  br label %cond.end401, !dbg !13921

cond.false97:                                     ; preds = %cond.false92
  %27 = load i64, i64* %size.addr, align 8, !dbg !13921
  %sub98 = sub i64 %27, 1, !dbg !13921
  %and99 = and i64 %sub98, 35184372088832, !dbg !13921
  %tobool100 = icmp ne i64 %and99, 0, !dbg !13921
  br i1 %tobool100, label %cond.true101, label %cond.false102, !dbg !13921

cond.true101:                                     ; preds = %cond.false97
  br label %cond.end399, !dbg !13921

cond.false102:                                    ; preds = %cond.false97
  %28 = load i64, i64* %size.addr, align 8, !dbg !13921
  %sub103 = sub i64 %28, 1, !dbg !13921
  %and104 = and i64 %sub103, 17592186044416, !dbg !13921
  %tobool105 = icmp ne i64 %and104, 0, !dbg !13921
  br i1 %tobool105, label %cond.true106, label %cond.false107, !dbg !13921

cond.true106:                                     ; preds = %cond.false102
  br label %cond.end397, !dbg !13921

cond.false107:                                    ; preds = %cond.false102
  %29 = load i64, i64* %size.addr, align 8, !dbg !13921
  %sub108 = sub i64 %29, 1, !dbg !13921
  %and109 = and i64 %sub108, 8796093022208, !dbg !13921
  %tobool110 = icmp ne i64 %and109, 0, !dbg !13921
  br i1 %tobool110, label %cond.true111, label %cond.false112, !dbg !13921

cond.true111:                                     ; preds = %cond.false107
  br label %cond.end395, !dbg !13921

cond.false112:                                    ; preds = %cond.false107
  %30 = load i64, i64* %size.addr, align 8, !dbg !13921
  %sub113 = sub i64 %30, 1, !dbg !13921
  %and114 = and i64 %sub113, 4398046511104, !dbg !13921
  %tobool115 = icmp ne i64 %and114, 0, !dbg !13921
  br i1 %tobool115, label %cond.true116, label %cond.false117, !dbg !13921

cond.true116:                                     ; preds = %cond.false112
  br label %cond.end393, !dbg !13921

cond.false117:                                    ; preds = %cond.false112
  %31 = load i64, i64* %size.addr, align 8, !dbg !13921
  %sub118 = sub i64 %31, 1, !dbg !13921
  %and119 = and i64 %sub118, 2199023255552, !dbg !13921
  %tobool120 = icmp ne i64 %and119, 0, !dbg !13921
  br i1 %tobool120, label %cond.true121, label %cond.false122, !dbg !13921

cond.true121:                                     ; preds = %cond.false117
  br label %cond.end391, !dbg !13921

cond.false122:                                    ; preds = %cond.false117
  %32 = load i64, i64* %size.addr, align 8, !dbg !13921
  %sub123 = sub i64 %32, 1, !dbg !13921
  %and124 = and i64 %sub123, 1099511627776, !dbg !13921
  %tobool125 = icmp ne i64 %and124, 0, !dbg !13921
  br i1 %tobool125, label %cond.true126, label %cond.false127, !dbg !13921

cond.true126:                                     ; preds = %cond.false122
  br label %cond.end389, !dbg !13921

cond.false127:                                    ; preds = %cond.false122
  %33 = load i64, i64* %size.addr, align 8, !dbg !13921
  %sub128 = sub i64 %33, 1, !dbg !13921
  %and129 = and i64 %sub128, 549755813888, !dbg !13921
  %tobool130 = icmp ne i64 %and129, 0, !dbg !13921
  br i1 %tobool130, label %cond.true131, label %cond.false132, !dbg !13921

cond.true131:                                     ; preds = %cond.false127
  br label %cond.end387, !dbg !13921

cond.false132:                                    ; preds = %cond.false127
  %34 = load i64, i64* %size.addr, align 8, !dbg !13921
  %sub133 = sub i64 %34, 1, !dbg !13921
  %and134 = and i64 %sub133, 274877906944, !dbg !13921
  %tobool135 = icmp ne i64 %and134, 0, !dbg !13921
  br i1 %tobool135, label %cond.true136, label %cond.false137, !dbg !13921

cond.true136:                                     ; preds = %cond.false132
  br label %cond.end385, !dbg !13921

cond.false137:                                    ; preds = %cond.false132
  %35 = load i64, i64* %size.addr, align 8, !dbg !13921
  %sub138 = sub i64 %35, 1, !dbg !13921
  %and139 = and i64 %sub138, 137438953472, !dbg !13921
  %tobool140 = icmp ne i64 %and139, 0, !dbg !13921
  br i1 %tobool140, label %cond.true141, label %cond.false142, !dbg !13921

cond.true141:                                     ; preds = %cond.false137
  br label %cond.end383, !dbg !13921

cond.false142:                                    ; preds = %cond.false137
  %36 = load i64, i64* %size.addr, align 8, !dbg !13921
  %sub143 = sub i64 %36, 1, !dbg !13921
  %and144 = and i64 %sub143, 68719476736, !dbg !13921
  %tobool145 = icmp ne i64 %and144, 0, !dbg !13921
  br i1 %tobool145, label %cond.true146, label %cond.false147, !dbg !13921

cond.true146:                                     ; preds = %cond.false142
  br label %cond.end381, !dbg !13921

cond.false147:                                    ; preds = %cond.false142
  %37 = load i64, i64* %size.addr, align 8, !dbg !13921
  %sub148 = sub i64 %37, 1, !dbg !13921
  %and149 = and i64 %sub148, 34359738368, !dbg !13921
  %tobool150 = icmp ne i64 %and149, 0, !dbg !13921
  br i1 %tobool150, label %cond.true151, label %cond.false152, !dbg !13921

cond.true151:                                     ; preds = %cond.false147
  br label %cond.end379, !dbg !13921

cond.false152:                                    ; preds = %cond.false147
  %38 = load i64, i64* %size.addr, align 8, !dbg !13921
  %sub153 = sub i64 %38, 1, !dbg !13921
  %and154 = and i64 %sub153, 17179869184, !dbg !13921
  %tobool155 = icmp ne i64 %and154, 0, !dbg !13921
  br i1 %tobool155, label %cond.true156, label %cond.false157, !dbg !13921

cond.true156:                                     ; preds = %cond.false152
  br label %cond.end377, !dbg !13921

cond.false157:                                    ; preds = %cond.false152
  %39 = load i64, i64* %size.addr, align 8, !dbg !13921
  %sub158 = sub i64 %39, 1, !dbg !13921
  %and159 = and i64 %sub158, 8589934592, !dbg !13921
  %tobool160 = icmp ne i64 %and159, 0, !dbg !13921
  br i1 %tobool160, label %cond.true161, label %cond.false162, !dbg !13921

cond.true161:                                     ; preds = %cond.false157
  br label %cond.end375, !dbg !13921

cond.false162:                                    ; preds = %cond.false157
  %40 = load i64, i64* %size.addr, align 8, !dbg !13921
  %sub163 = sub i64 %40, 1, !dbg !13921
  %and164 = and i64 %sub163, 4294967296, !dbg !13921
  %tobool165 = icmp ne i64 %and164, 0, !dbg !13921
  br i1 %tobool165, label %cond.true166, label %cond.false167, !dbg !13921

cond.true166:                                     ; preds = %cond.false162
  br label %cond.end373, !dbg !13921

cond.false167:                                    ; preds = %cond.false162
  %41 = load i64, i64* %size.addr, align 8, !dbg !13921
  %sub168 = sub i64 %41, 1, !dbg !13921
  %and169 = and i64 %sub168, 2147483648, !dbg !13921
  %tobool170 = icmp ne i64 %and169, 0, !dbg !13921
  br i1 %tobool170, label %cond.true171, label %cond.false172, !dbg !13921

cond.true171:                                     ; preds = %cond.false167
  br label %cond.end371, !dbg !13921

cond.false172:                                    ; preds = %cond.false167
  %42 = load i64, i64* %size.addr, align 8, !dbg !13921
  %sub173 = sub i64 %42, 1, !dbg !13921
  %and174 = and i64 %sub173, 1073741824, !dbg !13921
  %tobool175 = icmp ne i64 %and174, 0, !dbg !13921
  br i1 %tobool175, label %cond.true176, label %cond.false177, !dbg !13921

cond.true176:                                     ; preds = %cond.false172
  br label %cond.end369, !dbg !13921

cond.false177:                                    ; preds = %cond.false172
  %43 = load i64, i64* %size.addr, align 8, !dbg !13921
  %sub178 = sub i64 %43, 1, !dbg !13921
  %and179 = and i64 %sub178, 536870912, !dbg !13921
  %tobool180 = icmp ne i64 %and179, 0, !dbg !13921
  br i1 %tobool180, label %cond.true181, label %cond.false182, !dbg !13921

cond.true181:                                     ; preds = %cond.false177
  br label %cond.end367, !dbg !13921

cond.false182:                                    ; preds = %cond.false177
  %44 = load i64, i64* %size.addr, align 8, !dbg !13921
  %sub183 = sub i64 %44, 1, !dbg !13921
  %and184 = and i64 %sub183, 268435456, !dbg !13921
  %tobool185 = icmp ne i64 %and184, 0, !dbg !13921
  br i1 %tobool185, label %cond.true186, label %cond.false187, !dbg !13921

cond.true186:                                     ; preds = %cond.false182
  br label %cond.end365, !dbg !13921

cond.false187:                                    ; preds = %cond.false182
  %45 = load i64, i64* %size.addr, align 8, !dbg !13921
  %sub188 = sub i64 %45, 1, !dbg !13921
  %and189 = and i64 %sub188, 134217728, !dbg !13921
  %tobool190 = icmp ne i64 %and189, 0, !dbg !13921
  br i1 %tobool190, label %cond.true191, label %cond.false192, !dbg !13921

cond.true191:                                     ; preds = %cond.false187
  br label %cond.end363, !dbg !13921

cond.false192:                                    ; preds = %cond.false187
  %46 = load i64, i64* %size.addr, align 8, !dbg !13921
  %sub193 = sub i64 %46, 1, !dbg !13921
  %and194 = and i64 %sub193, 67108864, !dbg !13921
  %tobool195 = icmp ne i64 %and194, 0, !dbg !13921
  br i1 %tobool195, label %cond.true196, label %cond.false197, !dbg !13921

cond.true196:                                     ; preds = %cond.false192
  br label %cond.end361, !dbg !13921

cond.false197:                                    ; preds = %cond.false192
  %47 = load i64, i64* %size.addr, align 8, !dbg !13921
  %sub198 = sub i64 %47, 1, !dbg !13921
  %and199 = and i64 %sub198, 33554432, !dbg !13921
  %tobool200 = icmp ne i64 %and199, 0, !dbg !13921
  br i1 %tobool200, label %cond.true201, label %cond.false202, !dbg !13921

cond.true201:                                     ; preds = %cond.false197
  br label %cond.end359, !dbg !13921

cond.false202:                                    ; preds = %cond.false197
  %48 = load i64, i64* %size.addr, align 8, !dbg !13921
  %sub203 = sub i64 %48, 1, !dbg !13921
  %and204 = and i64 %sub203, 16777216, !dbg !13921
  %tobool205 = icmp ne i64 %and204, 0, !dbg !13921
  br i1 %tobool205, label %cond.true206, label %cond.false207, !dbg !13921

cond.true206:                                     ; preds = %cond.false202
  br label %cond.end357, !dbg !13921

cond.false207:                                    ; preds = %cond.false202
  %49 = load i64, i64* %size.addr, align 8, !dbg !13921
  %sub208 = sub i64 %49, 1, !dbg !13921
  %and209 = and i64 %sub208, 8388608, !dbg !13921
  %tobool210 = icmp ne i64 %and209, 0, !dbg !13921
  br i1 %tobool210, label %cond.true211, label %cond.false212, !dbg !13921

cond.true211:                                     ; preds = %cond.false207
  br label %cond.end355, !dbg !13921

cond.false212:                                    ; preds = %cond.false207
  %50 = load i64, i64* %size.addr, align 8, !dbg !13921
  %sub213 = sub i64 %50, 1, !dbg !13921
  %and214 = and i64 %sub213, 4194304, !dbg !13921
  %tobool215 = icmp ne i64 %and214, 0, !dbg !13921
  br i1 %tobool215, label %cond.true216, label %cond.false217, !dbg !13921

cond.true216:                                     ; preds = %cond.false212
  br label %cond.end353, !dbg !13921

cond.false217:                                    ; preds = %cond.false212
  %51 = load i64, i64* %size.addr, align 8, !dbg !13921
  %sub218 = sub i64 %51, 1, !dbg !13921
  %and219 = and i64 %sub218, 2097152, !dbg !13921
  %tobool220 = icmp ne i64 %and219, 0, !dbg !13921
  br i1 %tobool220, label %cond.true221, label %cond.false222, !dbg !13921

cond.true221:                                     ; preds = %cond.false217
  br label %cond.end351, !dbg !13921

cond.false222:                                    ; preds = %cond.false217
  %52 = load i64, i64* %size.addr, align 8, !dbg !13921
  %sub223 = sub i64 %52, 1, !dbg !13921
  %and224 = and i64 %sub223, 1048576, !dbg !13921
  %tobool225 = icmp ne i64 %and224, 0, !dbg !13921
  br i1 %tobool225, label %cond.true226, label %cond.false227, !dbg !13921

cond.true226:                                     ; preds = %cond.false222
  br label %cond.end349, !dbg !13921

cond.false227:                                    ; preds = %cond.false222
  %53 = load i64, i64* %size.addr, align 8, !dbg !13921
  %sub228 = sub i64 %53, 1, !dbg !13921
  %and229 = and i64 %sub228, 524288, !dbg !13921
  %tobool230 = icmp ne i64 %and229, 0, !dbg !13921
  br i1 %tobool230, label %cond.true231, label %cond.false232, !dbg !13921

cond.true231:                                     ; preds = %cond.false227
  br label %cond.end347, !dbg !13921

cond.false232:                                    ; preds = %cond.false227
  %54 = load i64, i64* %size.addr, align 8, !dbg !13921
  %sub233 = sub i64 %54, 1, !dbg !13921
  %and234 = and i64 %sub233, 262144, !dbg !13921
  %tobool235 = icmp ne i64 %and234, 0, !dbg !13921
  br i1 %tobool235, label %cond.true236, label %cond.false237, !dbg !13921

cond.true236:                                     ; preds = %cond.false232
  br label %cond.end345, !dbg !13921

cond.false237:                                    ; preds = %cond.false232
  %55 = load i64, i64* %size.addr, align 8, !dbg !13921
  %sub238 = sub i64 %55, 1, !dbg !13921
  %and239 = and i64 %sub238, 131072, !dbg !13921
  %tobool240 = icmp ne i64 %and239, 0, !dbg !13921
  br i1 %tobool240, label %cond.true241, label %cond.false242, !dbg !13921

cond.true241:                                     ; preds = %cond.false237
  br label %cond.end343, !dbg !13921

cond.false242:                                    ; preds = %cond.false237
  %56 = load i64, i64* %size.addr, align 8, !dbg !13921
  %sub243 = sub i64 %56, 1, !dbg !13921
  %and244 = and i64 %sub243, 65536, !dbg !13921
  %tobool245 = icmp ne i64 %and244, 0, !dbg !13921
  br i1 %tobool245, label %cond.true246, label %cond.false247, !dbg !13921

cond.true246:                                     ; preds = %cond.false242
  br label %cond.end341, !dbg !13921

cond.false247:                                    ; preds = %cond.false242
  %57 = load i64, i64* %size.addr, align 8, !dbg !13921
  %sub248 = sub i64 %57, 1, !dbg !13921
  %and249 = and i64 %sub248, 32768, !dbg !13921
  %tobool250 = icmp ne i64 %and249, 0, !dbg !13921
  br i1 %tobool250, label %cond.true251, label %cond.false252, !dbg !13921

cond.true251:                                     ; preds = %cond.false247
  br label %cond.end339, !dbg !13921

cond.false252:                                    ; preds = %cond.false247
  %58 = load i64, i64* %size.addr, align 8, !dbg !13921
  %sub253 = sub i64 %58, 1, !dbg !13921
  %and254 = and i64 %sub253, 16384, !dbg !13921
  %tobool255 = icmp ne i64 %and254, 0, !dbg !13921
  br i1 %tobool255, label %cond.true256, label %cond.false257, !dbg !13921

cond.true256:                                     ; preds = %cond.false252
  br label %cond.end337, !dbg !13921

cond.false257:                                    ; preds = %cond.false252
  %59 = load i64, i64* %size.addr, align 8, !dbg !13921
  %sub258 = sub i64 %59, 1, !dbg !13921
  %and259 = and i64 %sub258, 8192, !dbg !13921
  %tobool260 = icmp ne i64 %and259, 0, !dbg !13921
  br i1 %tobool260, label %cond.true261, label %cond.false262, !dbg !13921

cond.true261:                                     ; preds = %cond.false257
  br label %cond.end335, !dbg !13921

cond.false262:                                    ; preds = %cond.false257
  %60 = load i64, i64* %size.addr, align 8, !dbg !13921
  %sub263 = sub i64 %60, 1, !dbg !13921
  %and264 = and i64 %sub263, 4096, !dbg !13921
  %tobool265 = icmp ne i64 %and264, 0, !dbg !13921
  br i1 %tobool265, label %cond.true266, label %cond.false267, !dbg !13921

cond.true266:                                     ; preds = %cond.false262
  br label %cond.end333, !dbg !13921

cond.false267:                                    ; preds = %cond.false262
  %61 = load i64, i64* %size.addr, align 8, !dbg !13921
  %sub268 = sub i64 %61, 1, !dbg !13921
  %and269 = and i64 %sub268, 2048, !dbg !13921
  %tobool270 = icmp ne i64 %and269, 0, !dbg !13921
  br i1 %tobool270, label %cond.true271, label %cond.false272, !dbg !13921

cond.true271:                                     ; preds = %cond.false267
  br label %cond.end331, !dbg !13921

cond.false272:                                    ; preds = %cond.false267
  %62 = load i64, i64* %size.addr, align 8, !dbg !13921
  %sub273 = sub i64 %62, 1, !dbg !13921
  %and274 = and i64 %sub273, 1024, !dbg !13921
  %tobool275 = icmp ne i64 %and274, 0, !dbg !13921
  br i1 %tobool275, label %cond.true276, label %cond.false277, !dbg !13921

cond.true276:                                     ; preds = %cond.false272
  br label %cond.end329, !dbg !13921

cond.false277:                                    ; preds = %cond.false272
  %63 = load i64, i64* %size.addr, align 8, !dbg !13921
  %sub278 = sub i64 %63, 1, !dbg !13921
  %and279 = and i64 %sub278, 512, !dbg !13921
  %tobool280 = icmp ne i64 %and279, 0, !dbg !13921
  br i1 %tobool280, label %cond.true281, label %cond.false282, !dbg !13921

cond.true281:                                     ; preds = %cond.false277
  br label %cond.end327, !dbg !13921

cond.false282:                                    ; preds = %cond.false277
  %64 = load i64, i64* %size.addr, align 8, !dbg !13921
  %sub283 = sub i64 %64, 1, !dbg !13921
  %and284 = and i64 %sub283, 256, !dbg !13921
  %tobool285 = icmp ne i64 %and284, 0, !dbg !13921
  br i1 %tobool285, label %cond.true286, label %cond.false287, !dbg !13921

cond.true286:                                     ; preds = %cond.false282
  br label %cond.end325, !dbg !13921

cond.false287:                                    ; preds = %cond.false282
  %65 = load i64, i64* %size.addr, align 8, !dbg !13921
  %sub288 = sub i64 %65, 1, !dbg !13921
  %and289 = and i64 %sub288, 128, !dbg !13921
  %tobool290 = icmp ne i64 %and289, 0, !dbg !13921
  br i1 %tobool290, label %cond.true291, label %cond.false292, !dbg !13921

cond.true291:                                     ; preds = %cond.false287
  br label %cond.end323, !dbg !13921

cond.false292:                                    ; preds = %cond.false287
  %66 = load i64, i64* %size.addr, align 8, !dbg !13921
  %sub293 = sub i64 %66, 1, !dbg !13921
  %and294 = and i64 %sub293, 64, !dbg !13921
  %tobool295 = icmp ne i64 %and294, 0, !dbg !13921
  br i1 %tobool295, label %cond.true296, label %cond.false297, !dbg !13921

cond.true296:                                     ; preds = %cond.false292
  br label %cond.end321, !dbg !13921

cond.false297:                                    ; preds = %cond.false292
  %67 = load i64, i64* %size.addr, align 8, !dbg !13921
  %sub298 = sub i64 %67, 1, !dbg !13921
  %and299 = and i64 %sub298, 32, !dbg !13921
  %tobool300 = icmp ne i64 %and299, 0, !dbg !13921
  br i1 %tobool300, label %cond.true301, label %cond.false302, !dbg !13921

cond.true301:                                     ; preds = %cond.false297
  br label %cond.end319, !dbg !13921

cond.false302:                                    ; preds = %cond.false297
  %68 = load i64, i64* %size.addr, align 8, !dbg !13921
  %sub303 = sub i64 %68, 1, !dbg !13921
  %and304 = and i64 %sub303, 16, !dbg !13921
  %tobool305 = icmp ne i64 %and304, 0, !dbg !13921
  br i1 %tobool305, label %cond.true306, label %cond.false307, !dbg !13921

cond.true306:                                     ; preds = %cond.false302
  br label %cond.end317, !dbg !13921

cond.false307:                                    ; preds = %cond.false302
  %69 = load i64, i64* %size.addr, align 8, !dbg !13921
  %sub308 = sub i64 %69, 1, !dbg !13921
  %and309 = and i64 %sub308, 8, !dbg !13921
  %tobool310 = icmp ne i64 %and309, 0, !dbg !13921
  br i1 %tobool310, label %cond.true311, label %cond.false312, !dbg !13921

cond.true311:                                     ; preds = %cond.false307
  br label %cond.end, !dbg !13921

cond.false312:                                    ; preds = %cond.false307
  %70 = load i64, i64* %size.addr, align 8, !dbg !13921
  %sub313 = sub i64 %70, 1, !dbg !13921
  %and314 = and i64 %sub313, 4, !dbg !13921
  %tobool315 = icmp ne i64 %and314, 0, !dbg !13921
  %71 = zext i1 %tobool315 to i64, !dbg !13921
  %cond = select i1 %tobool315, i32 2, i32 1, !dbg !13921
  br label %cond.end, !dbg !13921

cond.end:                                         ; preds = %cond.false312, %cond.true311
  %cond316 = phi i32 [ 3, %cond.true311 ], [ %cond, %cond.false312 ], !dbg !13921
  br label %cond.end317, !dbg !13921

cond.end317:                                      ; preds = %cond.end, %cond.true306
  %cond318 = phi i32 [ 4, %cond.true306 ], [ %cond316, %cond.end ], !dbg !13921
  br label %cond.end319, !dbg !13921

cond.end319:                                      ; preds = %cond.end317, %cond.true301
  %cond320 = phi i32 [ 5, %cond.true301 ], [ %cond318, %cond.end317 ], !dbg !13921
  br label %cond.end321, !dbg !13921

cond.end321:                                      ; preds = %cond.end319, %cond.true296
  %cond322 = phi i32 [ 6, %cond.true296 ], [ %cond320, %cond.end319 ], !dbg !13921
  br label %cond.end323, !dbg !13921

cond.end323:                                      ; preds = %cond.end321, %cond.true291
  %cond324 = phi i32 [ 7, %cond.true291 ], [ %cond322, %cond.end321 ], !dbg !13921
  br label %cond.end325, !dbg !13921

cond.end325:                                      ; preds = %cond.end323, %cond.true286
  %cond326 = phi i32 [ 8, %cond.true286 ], [ %cond324, %cond.end323 ], !dbg !13921
  br label %cond.end327, !dbg !13921

cond.end327:                                      ; preds = %cond.end325, %cond.true281
  %cond328 = phi i32 [ 9, %cond.true281 ], [ %cond326, %cond.end325 ], !dbg !13921
  br label %cond.end329, !dbg !13921

cond.end329:                                      ; preds = %cond.end327, %cond.true276
  %cond330 = phi i32 [ 10, %cond.true276 ], [ %cond328, %cond.end327 ], !dbg !13921
  br label %cond.end331, !dbg !13921

cond.end331:                                      ; preds = %cond.end329, %cond.true271
  %cond332 = phi i32 [ 11, %cond.true271 ], [ %cond330, %cond.end329 ], !dbg !13921
  br label %cond.end333, !dbg !13921

cond.end333:                                      ; preds = %cond.end331, %cond.true266
  %cond334 = phi i32 [ 12, %cond.true266 ], [ %cond332, %cond.end331 ], !dbg !13921
  br label %cond.end335, !dbg !13921

cond.end335:                                      ; preds = %cond.end333, %cond.true261
  %cond336 = phi i32 [ 13, %cond.true261 ], [ %cond334, %cond.end333 ], !dbg !13921
  br label %cond.end337, !dbg !13921

cond.end337:                                      ; preds = %cond.end335, %cond.true256
  %cond338 = phi i32 [ 14, %cond.true256 ], [ %cond336, %cond.end335 ], !dbg !13921
  br label %cond.end339, !dbg !13921

cond.end339:                                      ; preds = %cond.end337, %cond.true251
  %cond340 = phi i32 [ 15, %cond.true251 ], [ %cond338, %cond.end337 ], !dbg !13921
  br label %cond.end341, !dbg !13921

cond.end341:                                      ; preds = %cond.end339, %cond.true246
  %cond342 = phi i32 [ 16, %cond.true246 ], [ %cond340, %cond.end339 ], !dbg !13921
  br label %cond.end343, !dbg !13921

cond.end343:                                      ; preds = %cond.end341, %cond.true241
  %cond344 = phi i32 [ 17, %cond.true241 ], [ %cond342, %cond.end341 ], !dbg !13921
  br label %cond.end345, !dbg !13921

cond.end345:                                      ; preds = %cond.end343, %cond.true236
  %cond346 = phi i32 [ 18, %cond.true236 ], [ %cond344, %cond.end343 ], !dbg !13921
  br label %cond.end347, !dbg !13921

cond.end347:                                      ; preds = %cond.end345, %cond.true231
  %cond348 = phi i32 [ 19, %cond.true231 ], [ %cond346, %cond.end345 ], !dbg !13921
  br label %cond.end349, !dbg !13921

cond.end349:                                      ; preds = %cond.end347, %cond.true226
  %cond350 = phi i32 [ 20, %cond.true226 ], [ %cond348, %cond.end347 ], !dbg !13921
  br label %cond.end351, !dbg !13921

cond.end351:                                      ; preds = %cond.end349, %cond.true221
  %cond352 = phi i32 [ 21, %cond.true221 ], [ %cond350, %cond.end349 ], !dbg !13921
  br label %cond.end353, !dbg !13921

cond.end353:                                      ; preds = %cond.end351, %cond.true216
  %cond354 = phi i32 [ 22, %cond.true216 ], [ %cond352, %cond.end351 ], !dbg !13921
  br label %cond.end355, !dbg !13921

cond.end355:                                      ; preds = %cond.end353, %cond.true211
  %cond356 = phi i32 [ 23, %cond.true211 ], [ %cond354, %cond.end353 ], !dbg !13921
  br label %cond.end357, !dbg !13921

cond.end357:                                      ; preds = %cond.end355, %cond.true206
  %cond358 = phi i32 [ 24, %cond.true206 ], [ %cond356, %cond.end355 ], !dbg !13921
  br label %cond.end359, !dbg !13921

cond.end359:                                      ; preds = %cond.end357, %cond.true201
  %cond360 = phi i32 [ 25, %cond.true201 ], [ %cond358, %cond.end357 ], !dbg !13921
  br label %cond.end361, !dbg !13921

cond.end361:                                      ; preds = %cond.end359, %cond.true196
  %cond362 = phi i32 [ 26, %cond.true196 ], [ %cond360, %cond.end359 ], !dbg !13921
  br label %cond.end363, !dbg !13921

cond.end363:                                      ; preds = %cond.end361, %cond.true191
  %cond364 = phi i32 [ 27, %cond.true191 ], [ %cond362, %cond.end361 ], !dbg !13921
  br label %cond.end365, !dbg !13921

cond.end365:                                      ; preds = %cond.end363, %cond.true186
  %cond366 = phi i32 [ 28, %cond.true186 ], [ %cond364, %cond.end363 ], !dbg !13921
  br label %cond.end367, !dbg !13921

cond.end367:                                      ; preds = %cond.end365, %cond.true181
  %cond368 = phi i32 [ 29, %cond.true181 ], [ %cond366, %cond.end365 ], !dbg !13921
  br label %cond.end369, !dbg !13921

cond.end369:                                      ; preds = %cond.end367, %cond.true176
  %cond370 = phi i32 [ 30, %cond.true176 ], [ %cond368, %cond.end367 ], !dbg !13921
  br label %cond.end371, !dbg !13921

cond.end371:                                      ; preds = %cond.end369, %cond.true171
  %cond372 = phi i32 [ 31, %cond.true171 ], [ %cond370, %cond.end369 ], !dbg !13921
  br label %cond.end373, !dbg !13921

cond.end373:                                      ; preds = %cond.end371, %cond.true166
  %cond374 = phi i32 [ 32, %cond.true166 ], [ %cond372, %cond.end371 ], !dbg !13921
  br label %cond.end375, !dbg !13921

cond.end375:                                      ; preds = %cond.end373, %cond.true161
  %cond376 = phi i32 [ 33, %cond.true161 ], [ %cond374, %cond.end373 ], !dbg !13921
  br label %cond.end377, !dbg !13921

cond.end377:                                      ; preds = %cond.end375, %cond.true156
  %cond378 = phi i32 [ 34, %cond.true156 ], [ %cond376, %cond.end375 ], !dbg !13921
  br label %cond.end379, !dbg !13921

cond.end379:                                      ; preds = %cond.end377, %cond.true151
  %cond380 = phi i32 [ 35, %cond.true151 ], [ %cond378, %cond.end377 ], !dbg !13921
  br label %cond.end381, !dbg !13921

cond.end381:                                      ; preds = %cond.end379, %cond.true146
  %cond382 = phi i32 [ 36, %cond.true146 ], [ %cond380, %cond.end379 ], !dbg !13921
  br label %cond.end383, !dbg !13921

cond.end383:                                      ; preds = %cond.end381, %cond.true141
  %cond384 = phi i32 [ 37, %cond.true141 ], [ %cond382, %cond.end381 ], !dbg !13921
  br label %cond.end385, !dbg !13921

cond.end385:                                      ; preds = %cond.end383, %cond.true136
  %cond386 = phi i32 [ 38, %cond.true136 ], [ %cond384, %cond.end383 ], !dbg !13921
  br label %cond.end387, !dbg !13921

cond.end387:                                      ; preds = %cond.end385, %cond.true131
  %cond388 = phi i32 [ 39, %cond.true131 ], [ %cond386, %cond.end385 ], !dbg !13921
  br label %cond.end389, !dbg !13921

cond.end389:                                      ; preds = %cond.end387, %cond.true126
  %cond390 = phi i32 [ 40, %cond.true126 ], [ %cond388, %cond.end387 ], !dbg !13921
  br label %cond.end391, !dbg !13921

cond.end391:                                      ; preds = %cond.end389, %cond.true121
  %cond392 = phi i32 [ 41, %cond.true121 ], [ %cond390, %cond.end389 ], !dbg !13921
  br label %cond.end393, !dbg !13921

cond.end393:                                      ; preds = %cond.end391, %cond.true116
  %cond394 = phi i32 [ 42, %cond.true116 ], [ %cond392, %cond.end391 ], !dbg !13921
  br label %cond.end395, !dbg !13921

cond.end395:                                      ; preds = %cond.end393, %cond.true111
  %cond396 = phi i32 [ 43, %cond.true111 ], [ %cond394, %cond.end393 ], !dbg !13921
  br label %cond.end397, !dbg !13921

cond.end397:                                      ; preds = %cond.end395, %cond.true106
  %cond398 = phi i32 [ 44, %cond.true106 ], [ %cond396, %cond.end395 ], !dbg !13921
  br label %cond.end399, !dbg !13921

cond.end399:                                      ; preds = %cond.end397, %cond.true101
  %cond400 = phi i32 [ 45, %cond.true101 ], [ %cond398, %cond.end397 ], !dbg !13921
  br label %cond.end401, !dbg !13921

cond.end401:                                      ; preds = %cond.end399, %cond.true96
  %cond402 = phi i32 [ 46, %cond.true96 ], [ %cond400, %cond.end399 ], !dbg !13921
  br label %cond.end403, !dbg !13921

cond.end403:                                      ; preds = %cond.end401, %cond.true91
  %cond404 = phi i32 [ 47, %cond.true91 ], [ %cond402, %cond.end401 ], !dbg !13921
  br label %cond.end405, !dbg !13921

cond.end405:                                      ; preds = %cond.end403, %cond.true86
  %cond406 = phi i32 [ 48, %cond.true86 ], [ %cond404, %cond.end403 ], !dbg !13921
  br label %cond.end407, !dbg !13921

cond.end407:                                      ; preds = %cond.end405, %cond.true81
  %cond408 = phi i32 [ 49, %cond.true81 ], [ %cond406, %cond.end405 ], !dbg !13921
  br label %cond.end409, !dbg !13921

cond.end409:                                      ; preds = %cond.end407, %cond.true76
  %cond410 = phi i32 [ 50, %cond.true76 ], [ %cond408, %cond.end407 ], !dbg !13921
  br label %cond.end411, !dbg !13921

cond.end411:                                      ; preds = %cond.end409, %cond.true71
  %cond412 = phi i32 [ 51, %cond.true71 ], [ %cond410, %cond.end409 ], !dbg !13921
  br label %cond.end413, !dbg !13921

cond.end413:                                      ; preds = %cond.end411, %cond.true66
  %cond414 = phi i32 [ 52, %cond.true66 ], [ %cond412, %cond.end411 ], !dbg !13921
  br label %cond.end415, !dbg !13921

cond.end415:                                      ; preds = %cond.end413, %cond.true61
  %cond416 = phi i32 [ 53, %cond.true61 ], [ %cond414, %cond.end413 ], !dbg !13921
  br label %cond.end417, !dbg !13921

cond.end417:                                      ; preds = %cond.end415, %cond.true56
  %cond418 = phi i32 [ 54, %cond.true56 ], [ %cond416, %cond.end415 ], !dbg !13921
  br label %cond.end419, !dbg !13921

cond.end419:                                      ; preds = %cond.end417, %cond.true51
  %cond420 = phi i32 [ 55, %cond.true51 ], [ %cond418, %cond.end417 ], !dbg !13921
  br label %cond.end421, !dbg !13921

cond.end421:                                      ; preds = %cond.end419, %cond.true46
  %cond422 = phi i32 [ 56, %cond.true46 ], [ %cond420, %cond.end419 ], !dbg !13921
  br label %cond.end423, !dbg !13921

cond.end423:                                      ; preds = %cond.end421, %cond.true41
  %cond424 = phi i32 [ 57, %cond.true41 ], [ %cond422, %cond.end421 ], !dbg !13921
  br label %cond.end425, !dbg !13921

cond.end425:                                      ; preds = %cond.end423, %cond.true36
  %cond426 = phi i32 [ 58, %cond.true36 ], [ %cond424, %cond.end423 ], !dbg !13921
  br label %cond.end427, !dbg !13921

cond.end427:                                      ; preds = %cond.end425, %cond.true31
  %cond428 = phi i32 [ 59, %cond.true31 ], [ %cond426, %cond.end425 ], !dbg !13921
  br label %cond.end429, !dbg !13921

cond.end429:                                      ; preds = %cond.end427, %cond.true26
  %cond430 = phi i32 [ 60, %cond.true26 ], [ %cond428, %cond.end427 ], !dbg !13921
  br label %cond.end431, !dbg !13921

cond.end431:                                      ; preds = %cond.end429, %cond.true21
  %cond432 = phi i32 [ 61, %cond.true21 ], [ %cond430, %cond.end429 ], !dbg !13921
  br label %cond.end433, !dbg !13921

cond.end433:                                      ; preds = %cond.end431, %cond.true16
  %cond434 = phi i32 [ 62, %cond.true16 ], [ %cond432, %cond.end431 ], !dbg !13921
  br label %cond.end435, !dbg !13921

cond.end435:                                      ; preds = %cond.end433, %cond.true11
  %cond436 = phi i32 [ 63, %cond.true11 ], [ %cond434, %cond.end433 ], !dbg !13921
  br label %cond.end437, !dbg !13921

cond.end437:                                      ; preds = %cond.end435, %cond.true8
  %cond438 = phi i32 [ 0, %cond.true8 ], [ %cond436, %cond.end435 ], !dbg !13921
  br label %cond.end440, !dbg !13921

cond.false439:                                    ; preds = %cond.true
  br label %cond.end440, !dbg !13921

cond.end440:                                      ; preds = %cond.false439, %cond.end437
  %cond441 = phi i32 [ %cond438, %cond.end437 ], [ -1, %cond.false439 ], !dbg !13921
  br label %cond.end444, !dbg !13921

cond.false442:                                    ; preds = %if.end3
  %72 = load i64, i64* %size.addr, align 8, !dbg !13921
  %sub443 = sub i64 %72, 1, !dbg !13921
  %call = call i32 @__ilog2_u64(i64 %sub443) #8, !dbg !13921
  br label %cond.end444, !dbg !13921

cond.end444:                                      ; preds = %cond.false442, %cond.end440
  %cond445 = phi i32 [ %cond441, %cond.end440 ], [ %call, %cond.false442 ], !dbg !13921
  %sub446 = sub i32 %cond445, 12, !dbg !13922
  %add = add i32 %sub446, 1, !dbg !13923
  store i32 %add, i32* %retval, align 4, !dbg !13924
  br label %return, !dbg !13924

if.end447:                                        ; preds = %entry
  %73 = load i64, i64* %size.addr, align 8, !dbg !13925
  %dec = add i64 %73, -1, !dbg !13925
  store i64 %dec, i64* %size.addr, align 8, !dbg !13925
  %74 = load i64, i64* %size.addr, align 8, !dbg !13926
  %shr = lshr i64 %74, 12, !dbg !13926
  store i64 %shr, i64* %size.addr, align 8, !dbg !13926
  %75 = load i64, i64* %size.addr, align 8, !dbg !13927
  store i64 %75, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !13904
  %76 = load i32, i32* %bitpos.i, align 4, !dbg !13928
  %77 = load i64, i64* %x.addr.i, align 8, !dbg !13929
  %78 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %77, i32 %76) #14, !dbg !13928, !srcloc !13930
  store i32 %78, i32* %bitpos.i, align 4, !dbg !13928
  %79 = load i32, i32* %bitpos.i, align 4, !dbg !13931
  %add.i = add i32 %79, 1, !dbg !13932
  store i32 %add.i, i32* %retval, align 4, !dbg !13933
  br label %return, !dbg !13933

return:                                           ; preds = %if.end447, %cond.end444, %if.then2, %if.then1
  %80 = load i32, i32* %retval, align 4, !dbg !13934
  ret i32 %80, !dbg !13934
}

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @__ilog2_u64(i64 %n) #4 !dbg !13935 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !13896, metadata !DIExpression()), !dbg !13939
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !13903, metadata !DIExpression()), !dbg !13941
  %n.addr = alloca i64, align 8
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !13942, metadata !DIExpression()), !dbg !13943
  %0 = load i64, i64* %n.addr, align 8, !dbg !13944
  store i64 %0, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !13941
  %1 = load i32, i32* %bitpos.i, align 4, !dbg !13945
  %2 = load i64, i64* %x.addr.i, align 8, !dbg !13946
  %3 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %2, i32 %1) #14, !dbg !13945, !srcloc !13930
  store i32 %3, i32* %bitpos.i, align 4, !dbg !13945
  %4 = load i32, i32* %bitpos.i, align 4, !dbg !13947
  %add.i = add i32 %4, 1, !dbg !13948
  %sub = sub i32 %add.i, 1, !dbg !13949
  ret i32 %sub, !dbg !13950
}

; Function Attrs: noredzone
declare dso_local noalias i8* @kmalloc_order(i64, i32, i32) #5

; Function Attrs: noredzone
declare dso_local noalias i8* @kmem_cache_alloc(%struct.kmem_cache*, i32) #5

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kasan_kmalloc(%struct.kmem_cache* %s, i8* %object, i64 %size, i32 %flags) #0 !dbg !13951 {
entry:
  %s.addr = alloca %struct.kmem_cache*, align 8
  %object.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store %struct.kmem_cache* %s, %struct.kmem_cache** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr, metadata !13955, metadata !DIExpression()), !dbg !13956
  store i8* %object, i8** %object.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %object.addr, metadata !13957, metadata !DIExpression()), !dbg !13958
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !13959, metadata !DIExpression()), !dbg !13960
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !13961, metadata !DIExpression()), !dbg !13962
  %0 = load i8*, i8** %object.addr, align 8, !dbg !13963
  ret i8* %0, !dbg !13964
}

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i64 @__arch_swab64(i64 %val) #4 !dbg !13965 {
entry:
  %val.addr = alloca i64, align 8
  store i64 %val, i64* %val.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %val.addr, metadata !13966, metadata !DIExpression()), !dbg !13967
  %0 = load i64, i64* %val.addr, align 8, !dbg !13968
  %1 = call i64 asm "bswapq $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i64 %0) #10, !dbg !13969, !srcloc !13970
  store i64 %1, i64* %val.addr, align 8, !dbg !13969
  %2 = load i64, i64* %val.addr, align 8, !dbg !13971
  ret i64 %2, !dbg !13972
}

; Function Attrs: cold noredzone
declare dso_local i32 @printk(i8*, ...) #6

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @mlx5_core_is_pf(%struct.mlx5_core_dev* %dev) #0 !dbg !13973 {
entry:
  %dev.addr = alloca %struct.mlx5_core_dev*, align 8
  store %struct.mlx5_core_dev* %dev, %struct.mlx5_core_dev** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mlx5_core_dev** %dev.addr, metadata !13974, metadata !DIExpression()), !dbg !13975
  %0 = load %struct.mlx5_core_dev*, %struct.mlx5_core_dev** %dev.addr, align 8, !dbg !13976
  %coredev_type = getelementptr inbounds %struct.mlx5_core_dev, %struct.mlx5_core_dev* %0, i32 0, i32 1, !dbg !13977
  %1 = load i32, i32* %coredev_type, align 8, !dbg !13977
  %cmp = icmp eq i32 %1, 0, !dbg !13978
  ret i1 %cmp, !dbg !13979
}

attributes #0 = { noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { nounwind readnone willreturn }
attributes #4 = { noinline noredzone nounwind optnone readnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { cold noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind willreturn }
attributes #8 = { noredzone nounwind readnone }
attributes #9 = { noredzone }
attributes #10 = { nounwind readnone }
attributes #11 = { cold noredzone }
attributes #12 = { nounwind }
attributes #13 = { noredzone nounwind }
attributes #14 = { nounwind readonly }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!10065, !10066, !10067, !10068}
!llvm.ident = !{!10069}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "mlx5_roce_en_lock", scope: !2, file: !3, line: 41, type: !1008, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C89, file: !3, producer: "clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !10055, globals: !10064, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "drivers/net/ethernet/mellanox/mlx5/core/vport.c", directory: "/home/lizy2001/genbc/linux")
!4 = !{!5, !11, !18, !24, !29, !35, !42, !62, !69, !103, !144, !175, !182, !213, !218, !225, !231, !237, !241, !245, !249, !254, !259, !268, !281, !289, !295, !302, !306, !310, !317, !323, !9547, !7300, !4862, !5054, !5147, !4552, !5341, !6946, !6244, !6135, !6154, !4063, !4388, !4468, !4544, !9709, !9714, !9718, !9723, !9728, !9734, !9776, !9782, !9974, !9999, !10005, !10010, !10015, !10018, !10027, !10031, !10035, !10040, !10044, !10051}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "writeback_sync_modes", file: !6, line: 41, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./include/linux/writeback.h", directory: "/home/lizy2001/genbc/linux")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10}
!9 = !DIEnumerator(name: "WB_SYNC_NONE", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "WB_SYNC_ALL", value: 1, isUnsigned: true)
!11 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "migrate_mode", file: !12, line: 15, baseType: !7, size: 32, elements: !13)
!12 = !DIFile(filename: "./include/linux/migrate_mode.h", directory: "/home/lizy2001/genbc/linux")
!13 = !{!14, !15, !16, !17}
!14 = !DIEnumerator(name: "MIGRATE_ASYNC", value: 0, isUnsigned: true)
!15 = !DIEnumerator(name: "MIGRATE_SYNC_LIGHT", value: 1, isUnsigned: true)
!16 = !DIEnumerator(name: "MIGRATE_SYNC", value: 2, isUnsigned: true)
!17 = !DIEnumerator(name: "MIGRATE_SYNC_NO_COPY", value: 3, isUnsigned: true)
!18 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "page_entry_size", file: !19, line: 546, baseType: !7, size: 32, elements: !20)
!19 = !DIFile(filename: "./include/linux/mm.h", directory: "/home/lizy2001/genbc/linux")
!20 = !{!21, !22, !23}
!21 = !DIEnumerator(name: "PE_SIZE_PTE", value: 0, isUnsigned: true)
!22 = !DIEnumerator(name: "PE_SIZE_PMD", value: 1, isUnsigned: true)
!23 = !DIEnumerator(name: "PE_SIZE_PUD", value: 2, isUnsigned: true)
!24 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hrtimer_restart", file: !25, line: 65, baseType: !7, size: 32, elements: !26)
!25 = !DIFile(filename: "./include/linux/hrtimer.h", directory: "/home/lizy2001/genbc/linux")
!26 = !{!27, !28}
!27 = !DIEnumerator(name: "HRTIMER_NORESTART", value: 0, isUnsigned: true)
!28 = !DIEnumerator(name: "HRTIMER_RESTART", value: 1, isUnsigned: true)
!29 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "timespec_type", file: !30, line: 16, baseType: !7, size: 32, elements: !31)
!30 = !DIFile(filename: "./include/linux/restart_block.h", directory: "/home/lizy2001/genbc/linux")
!31 = !{!32, !33, !34}
!32 = !DIEnumerator(name: "TT_NONE", value: 0, isUnsigned: true)
!33 = !DIEnumerator(name: "TT_NATIVE", value: 1, isUnsigned: true)
!34 = !DIEnumerator(name: "TT_COMPAT", value: 2, isUnsigned: true)
!35 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "netdev_tx", file: !36, line: 115, baseType: !37, size: 32, elements: !38)
!36 = !DIFile(filename: "./include/linux/netdevice.h", directory: "/home/lizy2001/genbc/linux")
!37 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!38 = !{!39, !40, !41}
!39 = !DIEnumerator(name: "__NETDEV_TX_MIN", value: -2147483648)
!40 = !DIEnumerator(name: "NETDEV_TX_OK", value: 0)
!41 = !DIEnumerator(name: "NETDEV_TX_BUSY", value: 16)
!42 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "tc_setup_type", file: !36, line: 836, baseType: !7, size: 32, elements: !43)
!43 = !{!44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61}
!44 = !DIEnumerator(name: "TC_SETUP_QDISC_MQPRIO", value: 0, isUnsigned: true)
!45 = !DIEnumerator(name: "TC_SETUP_CLSU32", value: 1, isUnsigned: true)
!46 = !DIEnumerator(name: "TC_SETUP_CLSFLOWER", value: 2, isUnsigned: true)
!47 = !DIEnumerator(name: "TC_SETUP_CLSMATCHALL", value: 3, isUnsigned: true)
!48 = !DIEnumerator(name: "TC_SETUP_CLSBPF", value: 4, isUnsigned: true)
!49 = !DIEnumerator(name: "TC_SETUP_BLOCK", value: 5, isUnsigned: true)
!50 = !DIEnumerator(name: "TC_SETUP_QDISC_CBS", value: 6, isUnsigned: true)
!51 = !DIEnumerator(name: "TC_SETUP_QDISC_RED", value: 7, isUnsigned: true)
!52 = !DIEnumerator(name: "TC_SETUP_QDISC_PRIO", value: 8, isUnsigned: true)
!53 = !DIEnumerator(name: "TC_SETUP_QDISC_MQ", value: 9, isUnsigned: true)
!54 = !DIEnumerator(name: "TC_SETUP_QDISC_ETF", value: 10, isUnsigned: true)
!55 = !DIEnumerator(name: "TC_SETUP_ROOT_QDISC", value: 11, isUnsigned: true)
!56 = !DIEnumerator(name: "TC_SETUP_QDISC_GRED", value: 12, isUnsigned: true)
!57 = !DIEnumerator(name: "TC_SETUP_QDISC_TAPRIO", value: 13, isUnsigned: true)
!58 = !DIEnumerator(name: "TC_SETUP_FT", value: 14, isUnsigned: true)
!59 = !DIEnumerator(name: "TC_SETUP_QDISC_ETS", value: 15, isUnsigned: true)
!60 = !DIEnumerator(name: "TC_SETUP_QDISC_TBF", value: 16, isUnsigned: true)
!61 = !DIEnumerator(name: "TC_SETUP_QDISC_FIFO", value: 17, isUnsigned: true)
!62 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_netdev_command", file: !36, line: 860, baseType: !7, size: 32, elements: !63)
!63 = !{!64, !65, !66, !67, !68}
!64 = !DIEnumerator(name: "XDP_SETUP_PROG", value: 0, isUnsigned: true)
!65 = !DIEnumerator(name: "XDP_SETUP_PROG_HW", value: 1, isUnsigned: true)
!66 = !DIEnumerator(name: "BPF_OFFLOAD_MAP_ALLOC", value: 2, isUnsigned: true)
!67 = !DIEnumerator(name: "BPF_OFFLOAD_MAP_FREE", value: 3, isUnsigned: true)
!68 = !DIEnumerator(name: "XDP_SETUP_XSK_POOL", value: 4, isUnsigned: true)
!69 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_prog_type", file: !70, line: 170, baseType: !7, size: 32, elements: !71)
!70 = !DIFile(filename: "./include/uapi/linux/bpf.h", directory: "/home/lizy2001/genbc/linux")
!71 = !{!72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102}
!72 = !DIEnumerator(name: "BPF_PROG_TYPE_UNSPEC", value: 0, isUnsigned: true)
!73 = !DIEnumerator(name: "BPF_PROG_TYPE_SOCKET_FILTER", value: 1, isUnsigned: true)
!74 = !DIEnumerator(name: "BPF_PROG_TYPE_KPROBE", value: 2, isUnsigned: true)
!75 = !DIEnumerator(name: "BPF_PROG_TYPE_SCHED_CLS", value: 3, isUnsigned: true)
!76 = !DIEnumerator(name: "BPF_PROG_TYPE_SCHED_ACT", value: 4, isUnsigned: true)
!77 = !DIEnumerator(name: "BPF_PROG_TYPE_TRACEPOINT", value: 5, isUnsigned: true)
!78 = !DIEnumerator(name: "BPF_PROG_TYPE_XDP", value: 6, isUnsigned: true)
!79 = !DIEnumerator(name: "BPF_PROG_TYPE_PERF_EVENT", value: 7, isUnsigned: true)
!80 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_SKB", value: 8, isUnsigned: true)
!81 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_SOCK", value: 9, isUnsigned: true)
!82 = !DIEnumerator(name: "BPF_PROG_TYPE_LWT_IN", value: 10, isUnsigned: true)
!83 = !DIEnumerator(name: "BPF_PROG_TYPE_LWT_OUT", value: 11, isUnsigned: true)
!84 = !DIEnumerator(name: "BPF_PROG_TYPE_LWT_XMIT", value: 12, isUnsigned: true)
!85 = !DIEnumerator(name: "BPF_PROG_TYPE_SOCK_OPS", value: 13, isUnsigned: true)
!86 = !DIEnumerator(name: "BPF_PROG_TYPE_SK_SKB", value: 14, isUnsigned: true)
!87 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_DEVICE", value: 15, isUnsigned: true)
!88 = !DIEnumerator(name: "BPF_PROG_TYPE_SK_MSG", value: 16, isUnsigned: true)
!89 = !DIEnumerator(name: "BPF_PROG_TYPE_RAW_TRACEPOINT", value: 17, isUnsigned: true)
!90 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_SOCK_ADDR", value: 18, isUnsigned: true)
!91 = !DIEnumerator(name: "BPF_PROG_TYPE_LWT_SEG6LOCAL", value: 19, isUnsigned: true)
!92 = !DIEnumerator(name: "BPF_PROG_TYPE_LIRC_MODE2", value: 20, isUnsigned: true)
!93 = !DIEnumerator(name: "BPF_PROG_TYPE_SK_REUSEPORT", value: 21, isUnsigned: true)
!94 = !DIEnumerator(name: "BPF_PROG_TYPE_FLOW_DISSECTOR", value: 22, isUnsigned: true)
!95 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_SYSCTL", value: 23, isUnsigned: true)
!96 = !DIEnumerator(name: "BPF_PROG_TYPE_RAW_TRACEPOINT_WRITABLE", value: 24, isUnsigned: true)
!97 = !DIEnumerator(name: "BPF_PROG_TYPE_CGROUP_SOCKOPT", value: 25, isUnsigned: true)
!98 = !DIEnumerator(name: "BPF_PROG_TYPE_TRACING", value: 26, isUnsigned: true)
!99 = !DIEnumerator(name: "BPF_PROG_TYPE_STRUCT_OPS", value: 27, isUnsigned: true)
!100 = !DIEnumerator(name: "BPF_PROG_TYPE_EXT", value: 28, isUnsigned: true)
!101 = !DIEnumerator(name: "BPF_PROG_TYPE_LSM", value: 29, isUnsigned: true)
!102 = !DIEnumerator(name: "BPF_PROG_TYPE_SK_LOOKUP", value: 30, isUnsigned: true)
!103 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_attach_type", file: !70, line: 204, baseType: !7, size: 32, elements: !104)
!104 = !{!105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143}
!105 = !DIEnumerator(name: "BPF_CGROUP_INET_INGRESS", value: 0, isUnsigned: true)
!106 = !DIEnumerator(name: "BPF_CGROUP_INET_EGRESS", value: 1, isUnsigned: true)
!107 = !DIEnumerator(name: "BPF_CGROUP_INET_SOCK_CREATE", value: 2, isUnsigned: true)
!108 = !DIEnumerator(name: "BPF_CGROUP_SOCK_OPS", value: 3, isUnsigned: true)
!109 = !DIEnumerator(name: "BPF_SK_SKB_STREAM_PARSER", value: 4, isUnsigned: true)
!110 = !DIEnumerator(name: "BPF_SK_SKB_STREAM_VERDICT", value: 5, isUnsigned: true)
!111 = !DIEnumerator(name: "BPF_CGROUP_DEVICE", value: 6, isUnsigned: true)
!112 = !DIEnumerator(name: "BPF_SK_MSG_VERDICT", value: 7, isUnsigned: true)
!113 = !DIEnumerator(name: "BPF_CGROUP_INET4_BIND", value: 8, isUnsigned: true)
!114 = !DIEnumerator(name: "BPF_CGROUP_INET6_BIND", value: 9, isUnsigned: true)
!115 = !DIEnumerator(name: "BPF_CGROUP_INET4_CONNECT", value: 10, isUnsigned: true)
!116 = !DIEnumerator(name: "BPF_CGROUP_INET6_CONNECT", value: 11, isUnsigned: true)
!117 = !DIEnumerator(name: "BPF_CGROUP_INET4_POST_BIND", value: 12, isUnsigned: true)
!118 = !DIEnumerator(name: "BPF_CGROUP_INET6_POST_BIND", value: 13, isUnsigned: true)
!119 = !DIEnumerator(name: "BPF_CGROUP_UDP4_SENDMSG", value: 14, isUnsigned: true)
!120 = !DIEnumerator(name: "BPF_CGROUP_UDP6_SENDMSG", value: 15, isUnsigned: true)
!121 = !DIEnumerator(name: "BPF_LIRC_MODE2", value: 16, isUnsigned: true)
!122 = !DIEnumerator(name: "BPF_FLOW_DISSECTOR", value: 17, isUnsigned: true)
!123 = !DIEnumerator(name: "BPF_CGROUP_SYSCTL", value: 18, isUnsigned: true)
!124 = !DIEnumerator(name: "BPF_CGROUP_UDP4_RECVMSG", value: 19, isUnsigned: true)
!125 = !DIEnumerator(name: "BPF_CGROUP_UDP6_RECVMSG", value: 20, isUnsigned: true)
!126 = !DIEnumerator(name: "BPF_CGROUP_GETSOCKOPT", value: 21, isUnsigned: true)
!127 = !DIEnumerator(name: "BPF_CGROUP_SETSOCKOPT", value: 22, isUnsigned: true)
!128 = !DIEnumerator(name: "BPF_TRACE_RAW_TP", value: 23, isUnsigned: true)
!129 = !DIEnumerator(name: "BPF_TRACE_FENTRY", value: 24, isUnsigned: true)
!130 = !DIEnumerator(name: "BPF_TRACE_FEXIT", value: 25, isUnsigned: true)
!131 = !DIEnumerator(name: "BPF_MODIFY_RETURN", value: 26, isUnsigned: true)
!132 = !DIEnumerator(name: "BPF_LSM_MAC", value: 27, isUnsigned: true)
!133 = !DIEnumerator(name: "BPF_TRACE_ITER", value: 28, isUnsigned: true)
!134 = !DIEnumerator(name: "BPF_CGROUP_INET4_GETPEERNAME", value: 29, isUnsigned: true)
!135 = !DIEnumerator(name: "BPF_CGROUP_INET6_GETPEERNAME", value: 30, isUnsigned: true)
!136 = !DIEnumerator(name: "BPF_CGROUP_INET4_GETSOCKNAME", value: 31, isUnsigned: true)
!137 = !DIEnumerator(name: "BPF_CGROUP_INET6_GETSOCKNAME", value: 32, isUnsigned: true)
!138 = !DIEnumerator(name: "BPF_XDP_DEVMAP", value: 33, isUnsigned: true)
!139 = !DIEnumerator(name: "BPF_CGROUP_INET_SOCK_RELEASE", value: 34, isUnsigned: true)
!140 = !DIEnumerator(name: "BPF_XDP_CPUMAP", value: 35, isUnsigned: true)
!141 = !DIEnumerator(name: "BPF_SK_LOOKUP", value: 36, isUnsigned: true)
!142 = !DIEnumerator(name: "BPF_XDP", value: 37, isUnsigned: true)
!143 = !DIEnumerator(name: "__MAX_BPF_ATTACH_TYPE", value: 38, isUnsigned: true)
!144 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_reg_type", file: !145, line: 369, baseType: !7, size: 32, elements: !146)
!145 = !DIFile(filename: "./include/linux/bpf.h", directory: "/home/lizy2001/genbc/linux")
!146 = !{!147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174}
!147 = !DIEnumerator(name: "NOT_INIT", value: 0, isUnsigned: true)
!148 = !DIEnumerator(name: "SCALAR_VALUE", value: 1, isUnsigned: true)
!149 = !DIEnumerator(name: "PTR_TO_CTX", value: 2, isUnsigned: true)
!150 = !DIEnumerator(name: "CONST_PTR_TO_MAP", value: 3, isUnsigned: true)
!151 = !DIEnumerator(name: "PTR_TO_MAP_VALUE", value: 4, isUnsigned: true)
!152 = !DIEnumerator(name: "PTR_TO_MAP_VALUE_OR_NULL", value: 5, isUnsigned: true)
!153 = !DIEnumerator(name: "PTR_TO_STACK", value: 6, isUnsigned: true)
!154 = !DIEnumerator(name: "PTR_TO_PACKET_META", value: 7, isUnsigned: true)
!155 = !DIEnumerator(name: "PTR_TO_PACKET", value: 8, isUnsigned: true)
!156 = !DIEnumerator(name: "PTR_TO_PACKET_END", value: 9, isUnsigned: true)
!157 = !DIEnumerator(name: "PTR_TO_FLOW_KEYS", value: 10, isUnsigned: true)
!158 = !DIEnumerator(name: "PTR_TO_SOCKET", value: 11, isUnsigned: true)
!159 = !DIEnumerator(name: "PTR_TO_SOCKET_OR_NULL", value: 12, isUnsigned: true)
!160 = !DIEnumerator(name: "PTR_TO_SOCK_COMMON", value: 13, isUnsigned: true)
!161 = !DIEnumerator(name: "PTR_TO_SOCK_COMMON_OR_NULL", value: 14, isUnsigned: true)
!162 = !DIEnumerator(name: "PTR_TO_TCP_SOCK", value: 15, isUnsigned: true)
!163 = !DIEnumerator(name: "PTR_TO_TCP_SOCK_OR_NULL", value: 16, isUnsigned: true)
!164 = !DIEnumerator(name: "PTR_TO_TP_BUFFER", value: 17, isUnsigned: true)
!165 = !DIEnumerator(name: "PTR_TO_XDP_SOCK", value: 18, isUnsigned: true)
!166 = !DIEnumerator(name: "PTR_TO_BTF_ID", value: 19, isUnsigned: true)
!167 = !DIEnumerator(name: "PTR_TO_BTF_ID_OR_NULL", value: 20, isUnsigned: true)
!168 = !DIEnumerator(name: "PTR_TO_MEM", value: 21, isUnsigned: true)
!169 = !DIEnumerator(name: "PTR_TO_MEM_OR_NULL", value: 22, isUnsigned: true)
!170 = !DIEnumerator(name: "PTR_TO_RDONLY_BUF", value: 23, isUnsigned: true)
!171 = !DIEnumerator(name: "PTR_TO_RDONLY_BUF_OR_NULL", value: 24, isUnsigned: true)
!172 = !DIEnumerator(name: "PTR_TO_RDWR_BUF", value: 25, isUnsigned: true)
!173 = !DIEnumerator(name: "PTR_TO_RDWR_BUF_OR_NULL", value: 26, isUnsigned: true)
!174 = !DIEnumerator(name: "PTR_TO_PERCPU_BTF_ID", value: 27, isUnsigned: true)
!175 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_tramp_prog_type", file: !145, line: 578, baseType: !7, size: 32, elements: !176)
!176 = !{!177, !178, !179, !180, !181}
!177 = !DIEnumerator(name: "BPF_TRAMP_FENTRY", value: 0, isUnsigned: true)
!178 = !DIEnumerator(name: "BPF_TRAMP_FEXIT", value: 1, isUnsigned: true)
!179 = !DIEnumerator(name: "BPF_TRAMP_MODIFY_RETURN", value: 2, isUnsigned: true)
!180 = !DIEnumerator(name: "BPF_TRAMP_MAX", value: 3, isUnsigned: true)
!181 = !DIEnumerator(name: "BPF_TRAMP_REPLACE", value: 4, isUnsigned: true)
!182 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "bpf_map_type", file: !70, line: 130, baseType: !7, size: 32, elements: !183)
!183 = !{!184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212}
!184 = !DIEnumerator(name: "BPF_MAP_TYPE_UNSPEC", value: 0, isUnsigned: true)
!185 = !DIEnumerator(name: "BPF_MAP_TYPE_HASH", value: 1, isUnsigned: true)
!186 = !DIEnumerator(name: "BPF_MAP_TYPE_ARRAY", value: 2, isUnsigned: true)
!187 = !DIEnumerator(name: "BPF_MAP_TYPE_PROG_ARRAY", value: 3, isUnsigned: true)
!188 = !DIEnumerator(name: "BPF_MAP_TYPE_PERF_EVENT_ARRAY", value: 4, isUnsigned: true)
!189 = !DIEnumerator(name: "BPF_MAP_TYPE_PERCPU_HASH", value: 5, isUnsigned: true)
!190 = !DIEnumerator(name: "BPF_MAP_TYPE_PERCPU_ARRAY", value: 6, isUnsigned: true)
!191 = !DIEnumerator(name: "BPF_MAP_TYPE_STACK_TRACE", value: 7, isUnsigned: true)
!192 = !DIEnumerator(name: "BPF_MAP_TYPE_CGROUP_ARRAY", value: 8, isUnsigned: true)
!193 = !DIEnumerator(name: "BPF_MAP_TYPE_LRU_HASH", value: 9, isUnsigned: true)
!194 = !DIEnumerator(name: "BPF_MAP_TYPE_LRU_PERCPU_HASH", value: 10, isUnsigned: true)
!195 = !DIEnumerator(name: "BPF_MAP_TYPE_LPM_TRIE", value: 11, isUnsigned: true)
!196 = !DIEnumerator(name: "BPF_MAP_TYPE_ARRAY_OF_MAPS", value: 12, isUnsigned: true)
!197 = !DIEnumerator(name: "BPF_MAP_TYPE_HASH_OF_MAPS", value: 13, isUnsigned: true)
!198 = !DIEnumerator(name: "BPF_MAP_TYPE_DEVMAP", value: 14, isUnsigned: true)
!199 = !DIEnumerator(name: "BPF_MAP_TYPE_SOCKMAP", value: 15, isUnsigned: true)
!200 = !DIEnumerator(name: "BPF_MAP_TYPE_CPUMAP", value: 16, isUnsigned: true)
!201 = !DIEnumerator(name: "BPF_MAP_TYPE_XSKMAP", value: 17, isUnsigned: true)
!202 = !DIEnumerator(name: "BPF_MAP_TYPE_SOCKHASH", value: 18, isUnsigned: true)
!203 = !DIEnumerator(name: "BPF_MAP_TYPE_CGROUP_STORAGE", value: 19, isUnsigned: true)
!204 = !DIEnumerator(name: "BPF_MAP_TYPE_REUSEPORT_SOCKARRAY", value: 20, isUnsigned: true)
!205 = !DIEnumerator(name: "BPF_MAP_TYPE_PERCPU_CGROUP_STORAGE", value: 21, isUnsigned: true)
!206 = !DIEnumerator(name: "BPF_MAP_TYPE_QUEUE", value: 22, isUnsigned: true)
!207 = !DIEnumerator(name: "BPF_MAP_TYPE_STACK", value: 23, isUnsigned: true)
!208 = !DIEnumerator(name: "BPF_MAP_TYPE_SK_STORAGE", value: 24, isUnsigned: true)
!209 = !DIEnumerator(name: "BPF_MAP_TYPE_DEVMAP_HASH", value: 25, isUnsigned: true)
!210 = !DIEnumerator(name: "BPF_MAP_TYPE_STRUCT_OPS", value: 26, isUnsigned: true)
!211 = !DIEnumerator(name: "BPF_MAP_TYPE_RINGBUF", value: 27, isUnsigned: true)
!212 = !DIEnumerator(name: "BPF_MAP_TYPE_INODE_STORAGE", value: 28, isUnsigned: true)
!213 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "devlink_dpipe_field_mapping_type", file: !214, line: 541, baseType: !7, size: 32, elements: !215)
!214 = !DIFile(filename: "./include/uapi/linux/devlink.h", directory: "/home/lizy2001/genbc/linux")
!215 = !{!216, !217}
!216 = !DIEnumerator(name: "DEVLINK_DPIPE_FIELD_MAPPING_TYPE_NONE", value: 0, isUnsigned: true)
!217 = !DIEnumerator(name: "DEVLINK_DPIPE_FIELD_MAPPING_TYPE_IFINDEX", value: 1, isUnsigned: true)
!218 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "devlink_reload_action", file: !214, line: 304, baseType: !7, size: 32, elements: !219)
!219 = !{!220, !221, !222, !223, !224}
!220 = !DIEnumerator(name: "DEVLINK_RELOAD_ACTION_UNSPEC", value: 0, isUnsigned: true)
!221 = !DIEnumerator(name: "DEVLINK_RELOAD_ACTION_DRIVER_REINIT", value: 1, isUnsigned: true)
!222 = !DIEnumerator(name: "DEVLINK_RELOAD_ACTION_FW_ACTIVATE", value: 2, isUnsigned: true)
!223 = !DIEnumerator(name: "__DEVLINK_RELOAD_ACTION_MAX", value: 3, isUnsigned: true)
!224 = !DIEnumerator(name: "DEVLINK_RELOAD_ACTION_MAX", value: 2, isUnsigned: true)
!225 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "devlink_reload_limit", file: !214, line: 314, baseType: !7, size: 32, elements: !226)
!226 = !{!227, !228, !229, !230}
!227 = !DIEnumerator(name: "DEVLINK_RELOAD_LIMIT_UNSPEC", value: 0, isUnsigned: true)
!228 = !DIEnumerator(name: "DEVLINK_RELOAD_LIMIT_NO_RESET", value: 1, isUnsigned: true)
!229 = !DIEnumerator(name: "__DEVLINK_RELOAD_LIMIT_MAX", value: 2, isUnsigned: true)
!230 = !DIEnumerator(name: "DEVLINK_RELOAD_LIMIT_MAX", value: 1, isUnsigned: true)
!231 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "devlink_port_type", file: !214, line: 134, baseType: !7, size: 32, elements: !232)
!232 = !{!233, !234, !235, !236}
!233 = !DIEnumerator(name: "DEVLINK_PORT_TYPE_NOTSET", value: 0, isUnsigned: true)
!234 = !DIEnumerator(name: "DEVLINK_PORT_TYPE_AUTO", value: 1, isUnsigned: true)
!235 = !DIEnumerator(name: "DEVLINK_PORT_TYPE_ETH", value: 2, isUnsigned: true)
!236 = !DIEnumerator(name: "DEVLINK_PORT_TYPE_IB", value: 3, isUnsigned: true)
!237 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "devlink_sb_pool_type", file: !214, line: 141, baseType: !7, size: 32, elements: !238)
!238 = !{!239, !240}
!239 = !DIEnumerator(name: "DEVLINK_SB_POOL_TYPE_INGRESS", value: 0, isUnsigned: true)
!240 = !DIEnumerator(name: "DEVLINK_SB_POOL_TYPE_EGRESS", value: 1, isUnsigned: true)
!241 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "devlink_sb_threshold_type", file: !214, line: 159, baseType: !7, size: 32, elements: !242)
!242 = !{!243, !244}
!243 = !DIEnumerator(name: "DEVLINK_SB_THRESHOLD_TYPE_STATIC", value: 0, isUnsigned: true)
!244 = !DIEnumerator(name: "DEVLINK_SB_THRESHOLD_TYPE_DYNAMIC", value: 1, isUnsigned: true)
!245 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "devlink_eswitch_encap_mode", file: !214, line: 178, baseType: !7, size: 32, elements: !246)
!246 = !{!247, !248}
!247 = !DIEnumerator(name: "DEVLINK_ESWITCH_ENCAP_MODE_NONE", value: 0, isUnsigned: true)
!248 = !DIEnumerator(name: "DEVLINK_ESWITCH_ENCAP_MODE_BASIC", value: 1, isUnsigned: true)
!249 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "devlink_trap_type", file: !214, line: 291, baseType: !7, size: 32, elements: !250)
!250 = !{!251, !252, !253}
!251 = !DIEnumerator(name: "DEVLINK_TRAP_TYPE_DROP", value: 0, isUnsigned: true)
!252 = !DIEnumerator(name: "DEVLINK_TRAP_TYPE_EXCEPTION", value: 1, isUnsigned: true)
!253 = !DIEnumerator(name: "DEVLINK_TRAP_TYPE_CONTROL", value: 2, isUnsigned: true)
!254 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "devlink_trap_action", file: !214, line: 268, baseType: !7, size: 32, elements: !255)
!255 = !{!256, !257, !258}
!256 = !DIEnumerator(name: "DEVLINK_TRAP_ACTION_DROP", value: 0, isUnsigned: true)
!257 = !DIEnumerator(name: "DEVLINK_TRAP_ACTION_TRAP", value: 1, isUnsigned: true)
!258 = !DIEnumerator(name: "DEVLINK_TRAP_ACTION_MIRROR", value: 2, isUnsigned: true)
!259 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "devlink_port_flavour", file: !214, line: 183, baseType: !7, size: 32, elements: !260)
!260 = !{!261, !262, !263, !264, !265, !266, !267}
!261 = !DIEnumerator(name: "DEVLINK_PORT_FLAVOUR_PHYSICAL", value: 0, isUnsigned: true)
!262 = !DIEnumerator(name: "DEVLINK_PORT_FLAVOUR_CPU", value: 1, isUnsigned: true)
!263 = !DIEnumerator(name: "DEVLINK_PORT_FLAVOUR_DSA", value: 2, isUnsigned: true)
!264 = !DIEnumerator(name: "DEVLINK_PORT_FLAVOUR_PCI_PF", value: 3, isUnsigned: true)
!265 = !DIEnumerator(name: "DEVLINK_PORT_FLAVOUR_PCI_VF", value: 4, isUnsigned: true)
!266 = !DIEnumerator(name: "DEVLINK_PORT_FLAVOUR_VIRTUAL", value: 5, isUnsigned: true)
!267 = !DIEnumerator(name: "DEVLINK_PORT_FLAVOUR_UNUSED", value: 6, isUnsigned: true)
!268 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_state", file: !269, line: 585, baseType: !7, size: 32, elements: !270)
!269 = !DIFile(filename: "./include/uapi/linux/ethtool.h", directory: "/home/lizy2001/genbc/linux")
!270 = !{!271, !272, !273, !274, !275, !276, !277, !278, !279, !280}
!271 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_AUTONEG", value: 0, isUnsigned: true)
!272 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_LINK_TRAINING_FAILURE", value: 1, isUnsigned: true)
!273 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_LINK_LOGICAL_MISMATCH", value: 2, isUnsigned: true)
!274 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_BAD_SIGNAL_INTEGRITY", value: 3, isUnsigned: true)
!275 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_NO_CABLE", value: 4, isUnsigned: true)
!276 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_CABLE_ISSUE", value: 5, isUnsigned: true)
!277 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_EEPROM_ISSUE", value: 6, isUnsigned: true)
!278 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_CALIBRATION_FAILURE", value: 7, isUnsigned: true)
!279 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_POWER_BUDGET_EXCEEDED", value: 8, isUnsigned: true)
!280 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_STATE_OVERHEAT", value: 9, isUnsigned: true)
!281 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_substate_autoneg", file: !269, line: 602, baseType: !7, size: 32, elements: !282)
!282 = !{!283, !284, !285, !286, !287, !288}
!283 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_NO_PARTNER_DETECTED", value: 1, isUnsigned: true)
!284 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_ACK_NOT_RECEIVED", value: 2, isUnsigned: true)
!285 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_NEXT_PAGE_EXCHANGE_FAILED", value: 3, isUnsigned: true)
!286 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_NO_PARTNER_DETECTED_FORCE_MODE", value: 4, isUnsigned: true)
!287 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_FEC_MISMATCH_DURING_OVERRIDE", value: 5, isUnsigned: true)
!288 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_AN_NO_HCD", value: 6, isUnsigned: true)
!289 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_substate_link_training", file: !269, line: 615, baseType: !7, size: 32, elements: !290)
!290 = !{!291, !292, !293, !294}
!291 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LT_KR_FRAME_LOCK_NOT_ACQUIRED", value: 1, isUnsigned: true)
!292 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LT_KR_LINK_INHIBIT_TIMEOUT", value: 2, isUnsigned: true)
!293 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LT_KR_LINK_PARTNER_DID_NOT_SET_RECEIVER_READY", value: 3, isUnsigned: true)
!294 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LT_REMOTE_FAULT", value: 4, isUnsigned: true)
!295 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_substate_link_logical_mismatch", file: !269, line: 626, baseType: !7, size: 32, elements: !296)
!296 = !{!297, !298, !299, !300, !301}
!297 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LLM_PCS_DID_NOT_ACQUIRE_BLOCK_LOCK", value: 1, isUnsigned: true)
!298 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LLM_PCS_DID_NOT_ACQUIRE_AM_LOCK", value: 2, isUnsigned: true)
!299 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LLM_PCS_DID_NOT_GET_ALIGN_STATUS", value: 3, isUnsigned: true)
!300 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LLM_FC_FEC_IS_NOT_LOCKED", value: 4, isUnsigned: true)
!301 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_LLM_RS_FEC_IS_NOT_LOCKED", value: 5, isUnsigned: true)
!302 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_substate_bad_signal_integrity", file: !269, line: 638, baseType: !7, size: 32, elements: !303)
!303 = !{!304, !305}
!304 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_BSI_LARGE_NUMBER_OF_PHYSICAL_ERRORS", value: 1, isUnsigned: true)
!305 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_BSI_UNSUPPORTED_RATE", value: 2, isUnsigned: true)
!306 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_link_ext_substate_cable_issue", file: !269, line: 647, baseType: !7, size: 32, elements: !307)
!307 = !{!308, !309}
!308 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_CI_UNSUPPORTED_CABLE", value: 1, isUnsigned: true)
!309 = !DIEnumerator(name: "ETHTOOL_LINK_EXT_SUBSTATE_CI_CABLE_TEST_FAILURE", value: 2, isUnsigned: true)
!310 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ethtool_phys_id_state", file: !311, line: 54, baseType: !7, size: 32, elements: !312)
!311 = !DIFile(filename: "./include/linux/ethtool.h", directory: "/home/lizy2001/genbc/linux")
!312 = !{!313, !314, !315, !316}
!313 = !DIEnumerator(name: "ETHTOOL_ID_INACTIVE", value: 0, isUnsigned: true)
!314 = !DIEnumerator(name: "ETHTOOL_ID_ACTIVE", value: 1, isUnsigned: true)
!315 = !DIEnumerator(name: "ETHTOOL_ID_ON", value: 2, isUnsigned: true)
!316 = !DIEnumerator(name: "ETHTOOL_ID_OFF", value: 3, isUnsigned: true)
!317 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rx_handler_result", file: !36, line: 423, baseType: !7, size: 32, elements: !318)
!318 = !{!319, !320, !321, !322}
!319 = !DIEnumerator(name: "RX_HANDLER_CONSUMED", value: 0, isUnsigned: true)
!320 = !DIEnumerator(name: "RX_HANDLER_ANOTHER", value: 1, isUnsigned: true)
!321 = !DIEnumerator(name: "RX_HANDLER_EXACT", value: 2, isUnsigned: true)
!322 = !DIEnumerator(name: "RX_HANDLER_PASS", value: 3, isUnsigned: true)
!323 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !324, file: !36, line: 2085, baseType: !7, size: 32, elements: !9702)
!324 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "net_device", file: !36, line: 1858, size: 15808, elements: !325)
!325 = !{!326, !331, !354, !371, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !388, !396, !397, !398, !399, !400, !401, !402, !403, !404, !430, !440, !441, !442, !447, !448, !452, !455, !8355, !8868, !9009, !9041, !9042, !9043, !9044, !9045, !9046, !9047, !9048, !9049, !9050, !9051, !9052, !9053, !9054, !9055, !9056, !9057, !9058, !9059, !9060, !9061, !9062, !9063, !9064, !9065, !9066, !9067, !9072, !9073, !9074, !9075, !9076, !9077, !9078, !9081, !9084, !9085, !9088, !9091, !9092, !9105, !9106, !9107, !9108, !9109, !9110, !9117, !9118, !9527, !9528, !9529, !9530, !9531, !9532, !9533, !9534, !9535, !9538, !9539, !9540, !9541, !9542, !9543, !9544, !9545, !9546, !9551, !9552, !9553, !9554, !9591, !9592, !9594, !9595, !9664, !9665, !9666, !9667, !9673, !9675, !9678, !9681, !9683, !9684, !9685, !9686, !9687, !9691, !9694}
!326 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !324, file: !36, line: 1859, baseType: !327, size: 128)
!327 = !DICompositeType(tag: DW_TAG_array_type, baseType: !328, size: 128, elements: !329)
!328 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!329 = !{!330}
!330 = !DISubrange(count: 16)
!331 = !DIDerivedType(tag: DW_TAG_member, name: "name_node", scope: !324, file: !36, line: 1860, baseType: !332, size: 64, offset: 128)
!332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !333, size: 64)
!333 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_name_node", file: !36, line: 938, size: 384, elements: !334)
!334 = !{!335, !343, !349, !351}
!335 = !DIDerivedType(tag: DW_TAG_member, name: "hlist", scope: !333, file: !36, line: 939, baseType: !336, size: 128)
!336 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_node", file: !337, line: 186, size: 128, elements: !338)
!337 = !DIFile(filename: "./include/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!338 = !{!339, !341}
!339 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !336, file: !337, line: 187, baseType: !340, size: 64)
!340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !336, size: 64)
!341 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !336, file: !337, line: 187, baseType: !342, size: 64, offset: 64)
!342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !340, size: 64)
!343 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !333, file: !36, line: 940, baseType: !344, size: 128, offset: 128)
!344 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_head", file: !337, line: 178, size: 128, elements: !345)
!345 = !{!346, !348}
!346 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !344, file: !337, line: 179, baseType: !347, size: 64)
!347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !344, size: 64)
!348 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !344, file: !337, line: 179, baseType: !347, size: 64, offset: 64)
!349 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !333, file: !36, line: 941, baseType: !350, size: 64, offset: 256)
!350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !324, size: 64)
!351 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !333, file: !36, line: 942, baseType: !352, size: 64, offset: 320)
!352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !353, size: 64)
!353 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !328)
!354 = !DIDerivedType(tag: DW_TAG_member, name: "ifalias", scope: !324, file: !36, line: 1861, baseType: !355, size: 64, offset: 192)
!355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !356, size: 64)
!356 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_ifalias", file: !36, line: 930, size: 128, elements: !357)
!357 = !{!358, !367}
!358 = !DIDerivedType(tag: DW_TAG_member, name: "rcuhead", scope: !356, file: !36, line: 931, baseType: !359, size: 128, align: 64)
!359 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "callback_head", file: !337, line: 216, size: 128, align: 64, elements: !360)
!360 = !{!361, !363}
!361 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !359, file: !337, line: 217, baseType: !362, size: 64)
!362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !359, size: 64)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !359, file: !337, line: 218, baseType: !364, size: 64, offset: 64)
!364 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !365, size: 64)
!365 = !DISubroutineType(types: !366)
!366 = !{null, !362}
!367 = !DIDerivedType(tag: DW_TAG_member, name: "ifalias", scope: !356, file: !36, line: 932, baseType: !368, offset: 128)
!368 = !DICompositeType(tag: DW_TAG_array_type, baseType: !328, elements: !369)
!369 = !{!370}
!370 = !DISubrange(count: -1)
!371 = !DIDerivedType(tag: DW_TAG_member, name: "mem_end", scope: !324, file: !36, line: 1866, baseType: !372, size: 64, offset: 256)
!372 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!373 = !DIDerivedType(tag: DW_TAG_member, name: "mem_start", scope: !324, file: !36, line: 1867, baseType: !372, size: 64, offset: 320)
!374 = !DIDerivedType(tag: DW_TAG_member, name: "base_addr", scope: !324, file: !36, line: 1868, baseType: !372, size: 64, offset: 384)
!375 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !324, file: !36, line: 1869, baseType: !37, size: 32, offset: 448)
!376 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !324, file: !36, line: 1877, baseType: !372, size: 64, offset: 512)
!377 = !DIDerivedType(tag: DW_TAG_member, name: "dev_list", scope: !324, file: !36, line: 1879, baseType: !344, size: 128, offset: 576)
!378 = !DIDerivedType(tag: DW_TAG_member, name: "napi_list", scope: !324, file: !36, line: 1880, baseType: !344, size: 128, offset: 704)
!379 = !DIDerivedType(tag: DW_TAG_member, name: "unreg_list", scope: !324, file: !36, line: 1881, baseType: !344, size: 128, offset: 832)
!380 = !DIDerivedType(tag: DW_TAG_member, name: "close_list", scope: !324, file: !36, line: 1882, baseType: !344, size: 128, offset: 960)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "ptype_all", scope: !324, file: !36, line: 1883, baseType: !344, size: 128, offset: 1088)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "ptype_specific", scope: !324, file: !36, line: 1884, baseType: !344, size: 128, offset: 1216)
!383 = !DIDerivedType(tag: DW_TAG_member, name: "adj_list", scope: !324, file: !36, line: 1889, baseType: !384, size: 256, offset: 1344)
!384 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !324, file: !36, line: 1886, size: 256, elements: !385)
!385 = !{!386, !387}
!386 = !DIDerivedType(tag: DW_TAG_member, name: "upper", scope: !384, file: !36, line: 1887, baseType: !344, size: 128)
!387 = !DIDerivedType(tag: DW_TAG_member, name: "lower", scope: !384, file: !36, line: 1888, baseType: !344, size: 128, offset: 128)
!388 = !DIDerivedType(tag: DW_TAG_member, name: "features", scope: !324, file: !36, line: 1891, baseType: !389, size: 64, offset: 1600)
!389 = !DIDerivedType(tag: DW_TAG_typedef, name: "netdev_features_t", file: !390, line: 12, baseType: !391)
!390 = !DIFile(filename: "./include/linux/netdev_features.h", directory: "/home/lizy2001/genbc/linux")
!391 = !DIDerivedType(tag: DW_TAG_typedef, name: "u64", file: !392, line: 23, baseType: !393)
!392 = !DIFile(filename: "./include/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!393 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u64", file: !394, line: 31, baseType: !395)
!394 = !DIFile(filename: "./include/uapi/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!395 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!396 = !DIDerivedType(tag: DW_TAG_member, name: "hw_features", scope: !324, file: !36, line: 1892, baseType: !389, size: 64, offset: 1664)
!397 = !DIDerivedType(tag: DW_TAG_member, name: "wanted_features", scope: !324, file: !36, line: 1893, baseType: !389, size: 64, offset: 1728)
!398 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_features", scope: !324, file: !36, line: 1894, baseType: !389, size: 64, offset: 1792)
!399 = !DIDerivedType(tag: DW_TAG_member, name: "hw_enc_features", scope: !324, file: !36, line: 1895, baseType: !389, size: 64, offset: 1856)
!400 = !DIDerivedType(tag: DW_TAG_member, name: "mpls_features", scope: !324, file: !36, line: 1896, baseType: !389, size: 64, offset: 1920)
!401 = !DIDerivedType(tag: DW_TAG_member, name: "gso_partial_features", scope: !324, file: !36, line: 1897, baseType: !389, size: 64, offset: 1984)
!402 = !DIDerivedType(tag: DW_TAG_member, name: "ifindex", scope: !324, file: !36, line: 1899, baseType: !37, size: 32, offset: 2048)
!403 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !324, file: !36, line: 1900, baseType: !37, size: 32, offset: 2080)
!404 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !324, file: !36, line: 1902, baseType: !405, size: 1472, offset: 2112)
!405 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "net_device_stats", file: !36, line: 169, size: 1472, elements: !406)
!406 = !{!407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429}
!407 = !DIDerivedType(tag: DW_TAG_member, name: "rx_packets", scope: !405, file: !36, line: 170, baseType: !372, size: 64)
!408 = !DIDerivedType(tag: DW_TAG_member, name: "tx_packets", scope: !405, file: !36, line: 171, baseType: !372, size: 64, offset: 64)
!409 = !DIDerivedType(tag: DW_TAG_member, name: "rx_bytes", scope: !405, file: !36, line: 172, baseType: !372, size: 64, offset: 128)
!410 = !DIDerivedType(tag: DW_TAG_member, name: "tx_bytes", scope: !405, file: !36, line: 173, baseType: !372, size: 64, offset: 192)
!411 = !DIDerivedType(tag: DW_TAG_member, name: "rx_errors", scope: !405, file: !36, line: 174, baseType: !372, size: 64, offset: 256)
!412 = !DIDerivedType(tag: DW_TAG_member, name: "tx_errors", scope: !405, file: !36, line: 175, baseType: !372, size: 64, offset: 320)
!413 = !DIDerivedType(tag: DW_TAG_member, name: "rx_dropped", scope: !405, file: !36, line: 176, baseType: !372, size: 64, offset: 384)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "tx_dropped", scope: !405, file: !36, line: 177, baseType: !372, size: 64, offset: 448)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "multicast", scope: !405, file: !36, line: 178, baseType: !372, size: 64, offset: 512)
!416 = !DIDerivedType(tag: DW_TAG_member, name: "collisions", scope: !405, file: !36, line: 179, baseType: !372, size: 64, offset: 576)
!417 = !DIDerivedType(tag: DW_TAG_member, name: "rx_length_errors", scope: !405, file: !36, line: 180, baseType: !372, size: 64, offset: 640)
!418 = !DIDerivedType(tag: DW_TAG_member, name: "rx_over_errors", scope: !405, file: !36, line: 181, baseType: !372, size: 64, offset: 704)
!419 = !DIDerivedType(tag: DW_TAG_member, name: "rx_crc_errors", scope: !405, file: !36, line: 182, baseType: !372, size: 64, offset: 768)
!420 = !DIDerivedType(tag: DW_TAG_member, name: "rx_frame_errors", scope: !405, file: !36, line: 183, baseType: !372, size: 64, offset: 832)
!421 = !DIDerivedType(tag: DW_TAG_member, name: "rx_fifo_errors", scope: !405, file: !36, line: 184, baseType: !372, size: 64, offset: 896)
!422 = !DIDerivedType(tag: DW_TAG_member, name: "rx_missed_errors", scope: !405, file: !36, line: 185, baseType: !372, size: 64, offset: 960)
!423 = !DIDerivedType(tag: DW_TAG_member, name: "tx_aborted_errors", scope: !405, file: !36, line: 186, baseType: !372, size: 64, offset: 1024)
!424 = !DIDerivedType(tag: DW_TAG_member, name: "tx_carrier_errors", scope: !405, file: !36, line: 187, baseType: !372, size: 64, offset: 1088)
!425 = !DIDerivedType(tag: DW_TAG_member, name: "tx_fifo_errors", scope: !405, file: !36, line: 188, baseType: !372, size: 64, offset: 1152)
!426 = !DIDerivedType(tag: DW_TAG_member, name: "tx_heartbeat_errors", scope: !405, file: !36, line: 189, baseType: !372, size: 64, offset: 1216)
!427 = !DIDerivedType(tag: DW_TAG_member, name: "tx_window_errors", scope: !405, file: !36, line: 190, baseType: !372, size: 64, offset: 1280)
!428 = !DIDerivedType(tag: DW_TAG_member, name: "rx_compressed", scope: !405, file: !36, line: 191, baseType: !372, size: 64, offset: 1344)
!429 = !DIDerivedType(tag: DW_TAG_member, name: "tx_compressed", scope: !405, file: !36, line: 192, baseType: !372, size: 64, offset: 1408)
!430 = !DIDerivedType(tag: DW_TAG_member, name: "rx_dropped", scope: !324, file: !36, line: 1904, baseType: !431, size: 64, offset: 3584)
!431 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_long_t", file: !432, line: 13, baseType: !433)
!432 = !DIFile(filename: "./include/asm-generic/atomic-long.h", directory: "/home/lizy2001/genbc/linux")
!433 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic64_t", file: !337, line: 175, baseType: !434)
!434 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !337, line: 173, size: 64, elements: !435)
!435 = !{!436}
!436 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !434, file: !337, line: 174, baseType: !437, size: 64)
!437 = !DIDerivedType(tag: DW_TAG_typedef, name: "s64", file: !392, line: 22, baseType: !438)
!438 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s64", file: !394, line: 30, baseType: !439)
!439 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!440 = !DIDerivedType(tag: DW_TAG_member, name: "tx_dropped", scope: !324, file: !36, line: 1905, baseType: !431, size: 64, offset: 3648)
!441 = !DIDerivedType(tag: DW_TAG_member, name: "rx_nohandler", scope: !324, file: !36, line: 1906, baseType: !431, size: 64, offset: 3712)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "carrier_up_count", scope: !324, file: !36, line: 1909, baseType: !443, size: 32, offset: 3776)
!443 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !337, line: 168, baseType: !444)
!444 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !337, line: 166, size: 32, elements: !445)
!445 = !{!446}
!446 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !444, file: !337, line: 167, baseType: !37, size: 32)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "carrier_down_count", scope: !324, file: !36, line: 1910, baseType: !443, size: 32, offset: 3808)
!448 = !DIDerivedType(tag: DW_TAG_member, name: "wireless_handlers", scope: !324, file: !36, line: 1913, baseType: !449, size: 64, offset: 3840)
!449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !450, size: 64)
!450 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !451)
!451 = !DICompositeType(tag: DW_TAG_structure_type, name: "iw_handler_def", file: !36, line: 1913, flags: DIFlagFwdDecl)
!452 = !DIDerivedType(tag: DW_TAG_member, name: "wireless_data", scope: !324, file: !36, line: 1914, baseType: !453, size: 64, offset: 3904)
!453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !454, size: 64)
!454 = !DICompositeType(tag: DW_TAG_structure_type, name: "iw_public_data", file: !36, line: 1914, flags: DIFlagFwdDecl)
!455 = !DIDerivedType(tag: DW_TAG_member, name: "netdev_ops", scope: !324, file: !36, line: 1916, baseType: !456, size: 64, offset: 3968)
!456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !457, size: 64)
!457 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !458)
!458 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "net_device_ops", file: !36, line: 1283, size: 4416, elements: !459)
!459 = !{!460, !464, !468, !469, !470, !7536, !7540, !7544, !7548, !7549, !7553, !7554, !7665, !7670, !7674, !7678, !7682, !7714, !7718, !7722, !7727, !7731, !7732, !7737, !7741, !7745, !7749, !7750, !7770, !7774, !7789, !7795, !7799, !7808, !7812, !7813, !7817, !7821, !7825, !7829, !7833, !7837, !7841, !7845, !7860, !7864, !7906, !7910, !7915, !7919, !7923, !7927, !7936, !7937, !7941, !7947, !7948, !7952, !7956, !7960, !7964, !7965, !7969, !7970, !8023, !8043, !8047, !8345, !8351}
!460 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_init", scope: !458, file: !36, line: 1284, baseType: !461, size: 64)
!461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !462, size: 64)
!462 = !DISubroutineType(types: !463)
!463 = !{!37, !350}
!464 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_uninit", scope: !458, file: !36, line: 1285, baseType: !465, size: 64, offset: 64)
!465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !466, size: 64)
!466 = !DISubroutineType(types: !467)
!467 = !{null, !350}
!468 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_open", scope: !458, file: !36, line: 1286, baseType: !461, size: 64, offset: 128)
!469 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_stop", scope: !458, file: !36, line: 1287, baseType: !461, size: 64, offset: 192)
!470 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_start_xmit", scope: !458, file: !36, line: 1288, baseType: !471, size: 64, offset: 256)
!471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !472, size: 64)
!472 = !DISubroutineType(types: !473)
!473 = !{!474, !475, !350}
!474 = !DIDerivedType(tag: DW_TAG_typedef, name: "netdev_tx_t", file: !36, line: 120, baseType: !35)
!475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !476, size: 64)
!476 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sk_buff", file: !477, line: 713, size: 1600, elements: !478)
!477 = !DIFile(filename: "./include/linux/skbuff.h", directory: "/home/lizy2001/genbc/linux")
!478 = !{!479, !501, !7431, !7436, !7440, !7449, !7450, !7451, !7452, !7453, !7454, !7456, !7457, !7458, !7459, !7460, !7461, !7462, !7464, !7465, !7466, !7467, !7468, !7469, !7470, !7471, !7472, !7473, !7474, !7475, !7476, !7477, !7478, !7479, !7480, !7481, !7482, !7483, !7484, !7485, !7486, !7487, !7488, !7489, !7490, !7500, !7501, !7502, !7503, !7504, !7505, !7510, !7515, !7520, !7521, !7522, !7523, !7524, !7525, !7526, !7527, !7528, !7530, !7531, !7533, !7534, !7535}
!479 = !DIDerivedType(tag: DW_TAG_member, scope: !476, file: !477, line: 714, baseType: !480, size: 192)
!480 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !476, file: !477, line: 714, size: 192, elements: !481)
!481 = !{!482, !492, !500}
!482 = !DIDerivedType(tag: DW_TAG_member, scope: !480, file: !477, line: 715, baseType: !483, size: 192)
!483 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !480, file: !477, line: 715, size: 192, elements: !484)
!484 = !{!485, !486, !487}
!485 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !483, file: !477, line: 717, baseType: !475, size: 64)
!486 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !483, file: !477, line: 718, baseType: !475, size: 64, offset: 64)
!487 = !DIDerivedType(tag: DW_TAG_member, scope: !483, file: !477, line: 720, baseType: !488, size: 64, offset: 128)
!488 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !483, file: !477, line: 720, size: 64, elements: !489)
!489 = !{!490, !491}
!490 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !488, file: !477, line: 721, baseType: !350, size: 64)
!491 = !DIDerivedType(tag: DW_TAG_member, name: "dev_scratch", scope: !488, file: !477, line: 726, baseType: !372, size: 64)
!492 = !DIDerivedType(tag: DW_TAG_member, name: "rbnode", scope: !480, file: !477, line: 729, baseType: !493, size: 192, align: 64)
!493 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_node", file: !494, line: 24, size: 192, align: 64, elements: !495)
!494 = !DIFile(filename: "./include/linux/rbtree.h", directory: "/home/lizy2001/genbc/linux")
!495 = !{!496, !497, !499}
!496 = !DIDerivedType(tag: DW_TAG_member, name: "__rb_parent_color", scope: !493, file: !494, line: 25, baseType: !372, size: 64)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "rb_right", scope: !493, file: !494, line: 26, baseType: !498, size: 64, offset: 64)
!498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !493, size: 64)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "rb_left", scope: !493, file: !494, line: 27, baseType: !498, size: 64, offset: 128)
!500 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !480, file: !477, line: 730, baseType: !344, size: 128)
!501 = !DIDerivedType(tag: DW_TAG_member, scope: !476, file: !477, line: 733, baseType: !502, size: 64, offset: 192)
!502 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !476, file: !477, line: 733, size: 64, elements: !503)
!503 = !{!504, !7430}
!504 = !DIDerivedType(tag: DW_TAG_member, name: "sk", scope: !502, file: !477, line: 734, baseType: !505, size: 64)
!505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !506, size: 64)
!506 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sock", file: !507, line: 347, size: 5568, elements: !508)
!507 = !DIFile(filename: "./include/net/sock.h", directory: "/home/lizy2001/genbc/linux")
!508 = !{!509, !7189, !7196, !7197, !7198, !7199, !7200, !7201, !7208, !7209, !7210, !7211, !7212, !7219, !7232, !7233, !7234, !7235, !7236, !7237, !7238, !7239, !7244, !7245, !7246, !7247, !7248, !7249, !7250, !7251, !7252, !7253, !7254, !7255, !7256, !7257, !7258, !7259, !7260, !7261, !7262, !7263, !7264, !7265, !7266, !7267, !7268, !7269, !7270, !7271, !7272, !7273, !7274, !7275, !7276, !7277, !7278, !7279, !7280, !7281, !7282, !7283, !7284, !7285, !7286, !7287, !7288, !7289, !7290, !7291, !7292, !7293, !7415, !7416, !7419, !7420, !7421, !7422, !7423, !7424, !7425, !7426, !7429}
!509 = !DIDerivedType(tag: DW_TAG_member, name: "__sk_common", scope: !506, file: !507, line: 352, baseType: !510, size: 1088)
!510 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sock_common", file: !507, line: 162, size: 1088, elements: !511)
!511 = !{!512, !525, !535, !546, !547, !550, !551, !552, !553, !554, !555, !560, !7149, !7150, !7151, !7152, !7153, !7160, !7162, !7174, !7175, !7181, !7182, !7183}
!512 = !DIDerivedType(tag: DW_TAG_member, scope: !510, file: !507, line: 166, baseType: !513, size: 64)
!513 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !510, file: !507, line: 166, size: 64, elements: !514)
!514 = !{!515, !517}
!515 = !DIDerivedType(tag: DW_TAG_member, name: "skc_addrpair", scope: !513, file: !507, line: 167, baseType: !516, size: 64)
!516 = !DIDerivedType(tag: DW_TAG_typedef, name: "__addrpair", file: !507, line: 115, baseType: !393)
!517 = !DIDerivedType(tag: DW_TAG_member, scope: !513, file: !507, line: 168, baseType: !518, size: 64)
!518 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !513, file: !507, line: 168, size: 64, elements: !519)
!519 = !{!520, !524}
!520 = !DIDerivedType(tag: DW_TAG_member, name: "skc_daddr", scope: !518, file: !507, line: 169, baseType: !521, size: 32)
!521 = !DIDerivedType(tag: DW_TAG_typedef, name: "__be32", file: !522, line: 32, baseType: !523)
!522 = !DIFile(filename: "./include/uapi/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!523 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u32", file: !394, line: 27, baseType: !7)
!524 = !DIDerivedType(tag: DW_TAG_member, name: "skc_rcv_saddr", scope: !518, file: !507, line: 170, baseType: !521, size: 32, offset: 32)
!525 = !DIDerivedType(tag: DW_TAG_member, scope: !510, file: !507, line: 173, baseType: !526, size: 32, offset: 64)
!526 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !510, file: !507, line: 173, size: 32, elements: !527)
!527 = !{!528, !529}
!528 = !DIDerivedType(tag: DW_TAG_member, name: "skc_hash", scope: !526, file: !507, line: 174, baseType: !7, size: 32)
!529 = !DIDerivedType(tag: DW_TAG_member, name: "skc_u16hashes", scope: !526, file: !507, line: 175, baseType: !530, size: 32)
!530 = !DICompositeType(tag: DW_TAG_array_type, baseType: !531, size: 32, elements: !533)
!531 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u16", file: !394, line: 24, baseType: !532)
!532 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!533 = !{!534}
!534 = !DISubrange(count: 2)
!535 = !DIDerivedType(tag: DW_TAG_member, scope: !510, file: !507, line: 178, baseType: !536, size: 32, offset: 96)
!536 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !510, file: !507, line: 178, size: 32, elements: !537)
!537 = !{!538, !540}
!538 = !DIDerivedType(tag: DW_TAG_member, name: "skc_portpair", scope: !536, file: !507, line: 179, baseType: !539, size: 32)
!539 = !DIDerivedType(tag: DW_TAG_typedef, name: "__portpair", file: !507, line: 114, baseType: !523)
!540 = !DIDerivedType(tag: DW_TAG_member, scope: !536, file: !507, line: 180, baseType: !541, size: 32)
!541 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !536, file: !507, line: 180, size: 32, elements: !542)
!542 = !{!543, !545}
!543 = !DIDerivedType(tag: DW_TAG_member, name: "skc_dport", scope: !541, file: !507, line: 181, baseType: !544, size: 16)
!544 = !DIDerivedType(tag: DW_TAG_typedef, name: "__be16", file: !522, line: 30, baseType: !531)
!545 = !DIDerivedType(tag: DW_TAG_member, name: "skc_num", scope: !541, file: !507, line: 182, baseType: !531, size: 16, offset: 16)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "skc_family", scope: !510, file: !507, line: 186, baseType: !532, size: 16, offset: 128)
!547 = !DIDerivedType(tag: DW_TAG_member, name: "skc_state", scope: !510, file: !507, line: 187, baseType: !548, size: 8, offset: 144)
!548 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !549)
!549 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!550 = !DIDerivedType(tag: DW_TAG_member, name: "skc_reuse", scope: !510, file: !507, line: 188, baseType: !549, size: 4, offset: 152, flags: DIFlagBitField, extraData: i64 152)
!551 = !DIDerivedType(tag: DW_TAG_member, name: "skc_reuseport", scope: !510, file: !507, line: 189, baseType: !549, size: 1, offset: 156, flags: DIFlagBitField, extraData: i64 152)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "skc_ipv6only", scope: !510, file: !507, line: 190, baseType: !549, size: 1, offset: 157, flags: DIFlagBitField, extraData: i64 152)
!553 = !DIDerivedType(tag: DW_TAG_member, name: "skc_net_refcnt", scope: !510, file: !507, line: 191, baseType: !549, size: 1, offset: 158, flags: DIFlagBitField, extraData: i64 152)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "skc_bound_dev_if", scope: !510, file: !507, line: 192, baseType: !37, size: 32, offset: 160)
!555 = !DIDerivedType(tag: DW_TAG_member, scope: !510, file: !507, line: 193, baseType: !556, size: 128, offset: 192)
!556 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !510, file: !507, line: 193, size: 128, elements: !557)
!557 = !{!558, !559}
!558 = !DIDerivedType(tag: DW_TAG_member, name: "skc_bind_node", scope: !556, file: !507, line: 194, baseType: !336, size: 128)
!559 = !DIDerivedType(tag: DW_TAG_member, name: "skc_portaddr_node", scope: !556, file: !507, line: 195, baseType: !336, size: 128)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "skc_prot", scope: !510, file: !507, line: 197, baseType: !561, size: 64, offset: 320)
!561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !562, size: 64)
!562 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "proto", file: !507, line: 1127, size: 3264, elements: !563)
!563 = !{!564, !569, !585, !586, !590, !597, !601, !605, !609, !613, !628, !633, !634, !7009, !7013, !7017, !7018, !7019, !7023, !7024, !7025, !7026, !7027, !7031, !7032, !7038, !7042, !7043, !7044, !7045, !7047, !7048, !7050, !7051, !7052, !7053, !7054, !7055, !7056, !7057, !7058, !7060, !7061, !7062, !7063, !7119, !7132, !7145, !7146, !7147, !7148}
!564 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !562, file: !507, line: 1128, baseType: !565, size: 64)
!565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !566, size: 64)
!566 = !DISubroutineType(types: !567)
!567 = !{null, !505, !568}
!568 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!569 = !DIDerivedType(tag: DW_TAG_member, name: "pre_connect", scope: !562, file: !507, line: 1130, baseType: !570, size: 64, offset: 64)
!570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !571, size: 64)
!571 = !DISubroutineType(types: !572)
!572 = !{!37, !505, !573, !37}
!573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !574, size: 64)
!574 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sockaddr", file: !575, line: 32, size: 128, elements: !576)
!575 = !DIFile(filename: "./include/linux/socket.h", directory: "/home/lizy2001/genbc/linux")
!576 = !{!577, !581}
!577 = !DIDerivedType(tag: DW_TAG_member, name: "sa_family", scope: !574, file: !575, line: 33, baseType: !578, size: 16)
!578 = !DIDerivedType(tag: DW_TAG_typedef, name: "sa_family_t", file: !575, line: 26, baseType: !579)
!579 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_sa_family_t", file: !580, line: 10, baseType: !532)
!580 = !DIFile(filename: "./include/uapi/linux/socket.h", directory: "/home/lizy2001/genbc/linux")
!581 = !DIDerivedType(tag: DW_TAG_member, name: "sa_data", scope: !574, file: !575, line: 34, baseType: !582, size: 112, offset: 16)
!582 = !DICompositeType(tag: DW_TAG_array_type, baseType: !328, size: 112, elements: !583)
!583 = !{!584}
!584 = !DISubrange(count: 14)
!585 = !DIDerivedType(tag: DW_TAG_member, name: "connect", scope: !562, file: !507, line: 1133, baseType: !570, size: 64, offset: 128)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "disconnect", scope: !562, file: !507, line: 1136, baseType: !587, size: 64, offset: 192)
!587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !588, size: 64)
!588 = !DISubroutineType(types: !589)
!589 = !{!37, !505, !37}
!590 = !DIDerivedType(tag: DW_TAG_member, name: "accept", scope: !562, file: !507, line: 1138, baseType: !591, size: 64, offset: 256)
!591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !592, size: 64)
!592 = !DISubroutineType(types: !593)
!593 = !{!505, !505, !37, !594, !595}
!594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !37, size: 64)
!595 = !DIDerivedType(tag: DW_TAG_typedef, name: "bool", file: !337, line: 30, baseType: !596)
!596 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!597 = !DIDerivedType(tag: DW_TAG_member, name: "ioctl", scope: !562, file: !507, line: 1141, baseType: !598, size: 64, offset: 320)
!598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !599, size: 64)
!599 = !DISubroutineType(types: !600)
!600 = !{!37, !505, !37, !372}
!601 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !562, file: !507, line: 1143, baseType: !602, size: 64, offset: 384)
!602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !603, size: 64)
!603 = !DISubroutineType(types: !604)
!604 = !{!37, !505}
!605 = !DIDerivedType(tag: DW_TAG_member, name: "destroy", scope: !562, file: !507, line: 1144, baseType: !606, size: 64, offset: 448)
!606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !607, size: 64)
!607 = !DISubroutineType(types: !608)
!608 = !{null, !505}
!609 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !562, file: !507, line: 1145, baseType: !610, size: 64, offset: 512)
!610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !611, size: 64)
!611 = !DISubroutineType(types: !612)
!612 = !{null, !505, !37}
!613 = !DIDerivedType(tag: DW_TAG_member, name: "setsockopt", scope: !562, file: !507, line: 1146, baseType: !614, size: 64, offset: 576)
!614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !615, size: 64)
!615 = !DISubroutineType(types: !616)
!616 = !{!37, !505, !37, !37, !617, !7}
!617 = !DIDerivedType(tag: DW_TAG_typedef, name: "sockptr_t", file: !618, line: 20, baseType: !619)
!618 = !DIFile(filename: "./include/linux/sockptr.h", directory: "/home/lizy2001/genbc/linux")
!619 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !618, line: 14, size: 128, elements: !620)
!620 = !{!621, !627}
!621 = !DIDerivedType(tag: DW_TAG_member, scope: !619, file: !618, line: 15, baseType: !622, size: 64)
!622 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !619, file: !618, line: 15, size: 64, elements: !623)
!623 = !{!624, !626}
!624 = !DIDerivedType(tag: DW_TAG_member, name: "kernel", scope: !622, file: !618, line: 16, baseType: !625, size: 64)
!625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!626 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !622, file: !618, line: 17, baseType: !625, size: 64)
!627 = !DIDerivedType(tag: DW_TAG_member, name: "is_kernel", scope: !619, file: !618, line: 19, baseType: !595, size: 1, offset: 64, flags: DIFlagBitField, extraData: i64 64)
!628 = !DIDerivedType(tag: DW_TAG_member, name: "getsockopt", scope: !562, file: !507, line: 1149, baseType: !629, size: 64, offset: 640)
!629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !630, size: 64)
!630 = !DISubroutineType(types: !631)
!631 = !{!37, !505, !37, !37, !632, !594}
!632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !328, size: 64)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "keepalive", scope: !562, file: !507, line: 1152, baseType: !610, size: 64, offset: 704)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "sendmsg", scope: !562, file: !507, line: 1157, baseType: !635, size: 64, offset: 768)
!635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !636, size: 64)
!636 = !DISubroutineType(types: !637)
!637 = !{!37, !505, !638, !649}
!638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !639, size: 64)
!639 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "msghdr", file: !575, line: 50, size: 768, elements: !640)
!640 = !{!641, !642, !643, !7000, !7005, !7006, !7007, !7008}
!641 = !DIDerivedType(tag: DW_TAG_member, name: "msg_name", scope: !639, file: !575, line: 51, baseType: !625, size: 64)
!642 = !DIDerivedType(tag: DW_TAG_member, name: "msg_namelen", scope: !639, file: !575, line: 52, baseType: !37, size: 32, offset: 64)
!643 = !DIDerivedType(tag: DW_TAG_member, name: "msg_iter", scope: !639, file: !575, line: 53, baseType: !644, size: 320, offset: 128)
!644 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iov_iter", file: !645, line: 29, size: 320, elements: !646)
!645 = !DIFile(filename: "./include/linux/uio.h", directory: "/home/lizy2001/genbc/linux")
!646 = !{!647, !648, !653, !654, !6991}
!647 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !644, file: !645, line: 35, baseType: !7, size: 32)
!648 = !DIDerivedType(tag: DW_TAG_member, name: "iov_offset", scope: !644, file: !645, line: 36, baseType: !649, size: 64, offset: 64)
!649 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !337, line: 55, baseType: !650)
!650 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_size_t", file: !651, line: 72, baseType: !652)
!651 = !DIFile(filename: "./include/uapi/asm-generic/posix_types.h", directory: "/home/lizy2001/genbc/linux")
!652 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ulong_t", file: !651, line: 16, baseType: !372)
!653 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !644, file: !645, line: 37, baseType: !649, size: 64, offset: 128)
!654 = !DIDerivedType(tag: DW_TAG_member, scope: !644, file: !645, line: 38, baseType: !655, size: 64, offset: 192)
!655 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !644, file: !645, line: 38, size: 64, elements: !656)
!656 = !{!657, !665, !672, !6990}
!657 = !DIDerivedType(tag: DW_TAG_member, name: "iov", scope: !655, file: !645, line: 39, baseType: !658, size: 64)
!658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !659, size: 64)
!659 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !660)
!660 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iovec", file: !661, line: 17, size: 128, elements: !662)
!661 = !DIFile(filename: "./include/uapi/linux/uio.h", directory: "/home/lizy2001/genbc/linux")
!662 = !{!663, !664}
!663 = !DIDerivedType(tag: DW_TAG_member, name: "iov_base", scope: !660, file: !661, line: 19, baseType: !625, size: 64)
!664 = !DIDerivedType(tag: DW_TAG_member, name: "iov_len", scope: !660, file: !661, line: 20, baseType: !650, size: 64, offset: 64)
!665 = !DIDerivedType(tag: DW_TAG_member, name: "kvec", scope: !655, file: !645, line: 40, baseType: !666, size: 64)
!666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !667, size: 64)
!667 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !668)
!668 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kvec", file: !645, line: 15, size: 128, elements: !669)
!669 = !{!670, !671}
!670 = !DIDerivedType(tag: DW_TAG_member, name: "iov_base", scope: !668, file: !645, line: 16, baseType: !625, size: 64)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "iov_len", scope: !668, file: !645, line: 17, baseType: !649, size: 64, offset: 64)
!672 = !DIDerivedType(tag: DW_TAG_member, name: "bvec", scope: !655, file: !645, line: 41, baseType: !673, size: 64)
!673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !674, size: 64)
!674 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !675)
!675 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_vec", file: !676, line: 31, size: 128, elements: !677)
!676 = !DIFile(filename: "./include/linux/bvec.h", directory: "/home/lizy2001/genbc/linux")
!677 = !{!678, !6988, !6989}
!678 = !DIDerivedType(tag: DW_TAG_member, name: "bv_page", scope: !675, file: !676, line: 32, baseType: !679, size: 64)
!679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !680, size: 64)
!680 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page", file: !681, line: 68, size: 512, align: 128, elements: !682)
!681 = !DIFile(filename: "./include/linux/mm_types.h", directory: "/home/lizy2001/genbc/linux")
!682 = !{!683, !684, !6980, !6987}
!683 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !680, file: !681, line: 69, baseType: !372, size: 64)
!684 = !DIDerivedType(tag: DW_TAG_member, scope: !680, file: !681, line: 77, baseType: !685, size: 320, offset: 64)
!685 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !680, file: !681, line: 77, size: 320, elements: !686)
!686 = !{!687, !6867, !6872, !6898, !6906, !6912, !6924, !6979}
!687 = !DIDerivedType(tag: DW_TAG_member, scope: !685, file: !681, line: 78, baseType: !688, size: 320)
!688 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !685, file: !681, line: 78, size: 320, elements: !689)
!689 = !{!690, !691, !6865, !6866}
!690 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !688, file: !681, line: 84, baseType: !344, size: 128)
!691 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !688, file: !681, line: 86, baseType: !692, size: 64, offset: 128)
!692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !693, size: 64)
!693 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space", file: !694, line: 451, size: 1216, align: 64, elements: !695)
!694 = !DIFile(filename: "./include/linux/fs.h", directory: "/home/lizy2001/genbc/linux")
!695 = !{!696, !6754, !6755, !6756, !6757, !6758, !6759, !6760, !6761, !6762, !6860, !6861, !6862, !6863, !6864}
!696 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !693, file: !694, line: 452, baseType: !697, size: 64)
!697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !698, size: 64)
!698 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode", file: !694, line: 610, size: 4224, elements: !699)
!699 = !{!700, !702, !703, !711, !718, !719, !6679, !6680, !6681, !6682, !6687, !6688, !6689, !6690, !6691, !6692, !6693, !6694, !6695, !6696, !6697, !6698, !6699, !6700, !6701, !6702, !6703, !6704, !6705, !6706, !6711, !6712, !6713, !6714, !6715, !6716, !6717, !6722, !6730, !6731, !6732, !6750, !6751, !6752, !6753}
!700 = !DIDerivedType(tag: DW_TAG_member, name: "i_mode", scope: !698, file: !694, line: 611, baseType: !701, size: 16)
!701 = !DIDerivedType(tag: DW_TAG_typedef, name: "umode_t", file: !337, line: 19, baseType: !532)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "i_opflags", scope: !698, file: !694, line: 612, baseType: !532, size: 16, offset: 16)
!703 = !DIDerivedType(tag: DW_TAG_member, name: "i_uid", scope: !698, file: !694, line: 613, baseType: !704, size: 32, offset: 32)
!704 = !DIDerivedType(tag: DW_TAG_typedef, name: "kuid_t", file: !705, line: 23, baseType: !706)
!705 = !DIFile(filename: "./include/linux/uidgid.h", directory: "/home/lizy2001/genbc/linux")
!706 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !705, line: 21, size: 32, elements: !707)
!707 = !{!708}
!708 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !706, file: !705, line: 22, baseType: !709, size: 32)
!709 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !337, line: 32, baseType: !710)
!710 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_uid32_t", file: !651, line: 49, baseType: !7)
!711 = !DIDerivedType(tag: DW_TAG_member, name: "i_gid", scope: !698, file: !694, line: 614, baseType: !712, size: 32, offset: 64)
!712 = !DIDerivedType(tag: DW_TAG_typedef, name: "kgid_t", file: !705, line: 28, baseType: !713)
!713 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !705, line: 26, size: 32, elements: !714)
!714 = !{!715}
!715 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !713, file: !705, line: 27, baseType: !716, size: 32)
!716 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !337, line: 33, baseType: !717)
!717 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_gid32_t", file: !651, line: 50, baseType: !7)
!718 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !698, file: !694, line: 615, baseType: !7, size: 32, offset: 96)
!719 = !DIDerivedType(tag: DW_TAG_member, name: "i_op", scope: !698, file: !694, line: 622, baseType: !720, size: 64, offset: 128)
!720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !721, size: 64)
!721 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !722)
!722 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode_operations", file: !694, line: 1864, size: 1536, align: 512, elements: !723)
!723 = !{!724, !6556, !6566, !6570, !6576, !6580, !6584, !6588, !6592, !6596, !6600, !6601, !6605, !6609, !6629, !6655, !6659, !6665, !6670, !6674, !6675}
!724 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !722, file: !694, line: 1865, baseType: !725, size: 64)
!725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !726, size: 64)
!726 = !DISubroutineType(types: !727)
!727 = !{!728, !697, !728, !7}
!728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !729, size: 64)
!729 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry", file: !730, line: 89, size: 1536, elements: !731)
!730 = !DIFile(filename: "./include/linux/dcache.h", directory: "/home/lizy2001/genbc/linux")
!731 = !{!732, !733, !743, !751, !752, !768, !769, !773, !800, !868, !6541, !6542, !6543, !6548, !6549, !6550}
!732 = !DIDerivedType(tag: DW_TAG_member, name: "d_flags", scope: !729, file: !730, line: 91, baseType: !7, size: 32)
!733 = !DIDerivedType(tag: DW_TAG_member, name: "d_seq", scope: !729, file: !730, line: 92, baseType: !734, size: 32, offset: 32)
!734 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_spinlock_t", file: !735, line: 277, baseType: !736)
!735 = !DIFile(filename: "./include/linux/seqlock.h", directory: "/home/lizy2001/genbc/linux")
!736 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_spinlock", file: !735, line: 277, size: 32, elements: !737)
!737 = !{!738}
!738 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !736, file: !735, line: 277, baseType: !739, size: 32)
!739 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_t", file: !735, line: 70, baseType: !740)
!740 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount", file: !735, line: 65, size: 32, elements: !741)
!741 = !{!742}
!742 = !DIDerivedType(tag: DW_TAG_member, name: "sequence", scope: !740, file: !735, line: 66, baseType: !7, size: 32)
!743 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !729, file: !730, line: 93, baseType: !744, size: 128, offset: 64)
!744 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_node", file: !745, line: 38, size: 128, elements: !746)
!745 = !DIFile(filename: "./include/linux/list_bl.h", directory: "/home/lizy2001/genbc/linux")
!746 = !{!747, !749}
!747 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !744, file: !745, line: 39, baseType: !748, size: 64)
!748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !744, size: 64)
!749 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !744, file: !745, line: 39, baseType: !750, size: 64, offset: 64)
!750 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !748, size: 64)
!751 = !DIDerivedType(tag: DW_TAG_member, name: "d_parent", scope: !729, file: !730, line: 94, baseType: !728, size: 64, offset: 192)
!752 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !729, file: !730, line: 95, baseType: !753, size: 128, offset: 256)
!753 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qstr", file: !730, line: 47, size: 128, elements: !754)
!754 = !{!755, !765}
!755 = !DIDerivedType(tag: DW_TAG_member, scope: !753, file: !730, line: 48, baseType: !756, size: 64)
!756 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !753, file: !730, line: 48, size: 64, elements: !757)
!757 = !{!758, !764}
!758 = !DIDerivedType(tag: DW_TAG_member, scope: !756, file: !730, line: 49, baseType: !759, size: 64)
!759 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !756, file: !730, line: 49, size: 64, elements: !760)
!760 = !{!761, !763}
!761 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !759, file: !730, line: 50, baseType: !762, size: 32)
!762 = !DIDerivedType(tag: DW_TAG_typedef, name: "u32", file: !392, line: 21, baseType: !523)
!763 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !759, file: !730, line: 50, baseType: !762, size: 32, offset: 32)
!764 = !DIDerivedType(tag: DW_TAG_member, name: "hash_len", scope: !756, file: !730, line: 52, baseType: !391, size: 64)
!765 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !753, file: !730, line: 54, baseType: !766, size: 64, offset: 64)
!766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !767, size: 64)
!767 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !549)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "d_inode", scope: !729, file: !730, line: 96, baseType: !697, size: 64, offset: 384)
!769 = !DIDerivedType(tag: DW_TAG_member, name: "d_iname", scope: !729, file: !730, line: 98, baseType: !770, size: 256, offset: 448)
!770 = !DICompositeType(tag: DW_TAG_array_type, baseType: !549, size: 256, elements: !771)
!771 = !{!772}
!772 = !DISubrange(count: 32)
!773 = !DIDerivedType(tag: DW_TAG_member, name: "d_lockref", scope: !729, file: !730, line: 101, baseType: !774, size: 32, offset: 704)
!774 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lockref", file: !775, line: 25, size: 32, elements: !776)
!775 = !DIFile(filename: "./include/linux/lockref.h", directory: "/home/lizy2001/genbc/linux")
!776 = !{!777}
!777 = !DIDerivedType(tag: DW_TAG_member, scope: !774, file: !775, line: 26, baseType: !778, size: 32)
!778 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !774, file: !775, line: 26, size: 32, elements: !779)
!779 = !{!780}
!780 = !DIDerivedType(tag: DW_TAG_member, scope: !778, file: !775, line: 30, baseType: !781, size: 32)
!781 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !778, file: !775, line: 30, size: 32, elements: !782)
!782 = !{!783, !799}
!783 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !781, file: !775, line: 31, baseType: !784)
!784 = !DIDerivedType(tag: DW_TAG_typedef, name: "spinlock_t", file: !785, line: 83, baseType: !786)
!785 = !DIFile(filename: "./include/linux/spinlock_types.h", directory: "/home/lizy2001/genbc/linux")
!786 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spinlock", file: !785, line: 71, elements: !787)
!787 = !{!788}
!788 = !DIDerivedType(tag: DW_TAG_member, scope: !786, file: !785, line: 72, baseType: !789)
!789 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !786, file: !785, line: 72, elements: !790)
!790 = !{!791}
!791 = !DIDerivedType(tag: DW_TAG_member, name: "rlock", scope: !789, file: !785, line: 73, baseType: !792)
!792 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raw_spinlock", file: !785, line: 20, elements: !793)
!793 = !{!794}
!794 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !792, file: !785, line: 21, baseType: !795)
!795 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_spinlock_t", file: !796, line: 25, baseType: !797)
!796 = !DIFile(filename: "./include/linux/spinlock_types_up.h", directory: "/home/lizy2001/genbc/linux")
!797 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !796, line: 25, elements: !798)
!798 = !{}
!799 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !781, file: !775, line: 32, baseType: !37, size: 32)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "d_op", scope: !729, file: !730, line: 102, baseType: !801, size: 64, offset: 768)
!801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !802, size: 64)
!802 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !803)
!803 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry_operations", file: !730, line: 135, size: 1024, align: 512, elements: !804)
!804 = !{!805, !809, !810, !817, !823, !827, !831, !835, !836, !840, !844, !856, !862}
!805 = !DIDerivedType(tag: DW_TAG_member, name: "d_revalidate", scope: !803, file: !730, line: 136, baseType: !806, size: 64)
!806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !807, size: 64)
!807 = !DISubroutineType(types: !808)
!808 = !{!37, !728, !7}
!809 = !DIDerivedType(tag: DW_TAG_member, name: "d_weak_revalidate", scope: !803, file: !730, line: 137, baseType: !806, size: 64, offset: 64)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !803, file: !730, line: 138, baseType: !811, size: 64, offset: 128)
!811 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !812, size: 64)
!812 = !DISubroutineType(types: !813)
!813 = !{!37, !814, !816}
!814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !815, size: 64)
!815 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !729)
!816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !753, size: 64)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "d_compare", scope: !803, file: !730, line: 139, baseType: !818, size: 64, offset: 192)
!818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !819, size: 64)
!819 = !DISubroutineType(types: !820)
!820 = !{!37, !814, !7, !352, !821}
!821 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !822, size: 64)
!822 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !753)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "d_delete", scope: !803, file: !730, line: 141, baseType: !824, size: 64, offset: 256)
!824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !825, size: 64)
!825 = !DISubroutineType(types: !826)
!826 = !{!37, !814}
!827 = !DIDerivedType(tag: DW_TAG_member, name: "d_init", scope: !803, file: !730, line: 142, baseType: !828, size: 64, offset: 320)
!828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !829, size: 64)
!829 = !DISubroutineType(types: !830)
!830 = !{!37, !728}
!831 = !DIDerivedType(tag: DW_TAG_member, name: "d_release", scope: !803, file: !730, line: 143, baseType: !832, size: 64, offset: 384)
!832 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !833, size: 64)
!833 = !DISubroutineType(types: !834)
!834 = !{null, !728}
!835 = !DIDerivedType(tag: DW_TAG_member, name: "d_prune", scope: !803, file: !730, line: 144, baseType: !832, size: 64, offset: 448)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "d_iput", scope: !803, file: !730, line: 145, baseType: !837, size: 64, offset: 512)
!837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !838, size: 64)
!838 = !DISubroutineType(types: !839)
!839 = !{null, !728, !697}
!840 = !DIDerivedType(tag: DW_TAG_member, name: "d_dname", scope: !803, file: !730, line: 146, baseType: !841, size: 64, offset: 576)
!841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !842, size: 64)
!842 = !DISubroutineType(types: !843)
!843 = !{!632, !728, !632, !37}
!844 = !DIDerivedType(tag: DW_TAG_member, name: "d_automount", scope: !803, file: !730, line: 147, baseType: !845, size: 64, offset: 640)
!845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !846, size: 64)
!846 = !DISubroutineType(types: !847)
!847 = !{!848, !850}
!848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !849, size: 64)
!849 = !DICompositeType(tag: DW_TAG_structure_type, name: "vfsmount", file: !730, line: 18, flags: DIFlagFwdDecl)
!850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !851, size: 64)
!851 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "path", file: !852, line: 8, size: 128, elements: !853)
!852 = !DIFile(filename: "./include/linux/path.h", directory: "/home/lizy2001/genbc/linux")
!853 = !{!854, !855}
!854 = !DIDerivedType(tag: DW_TAG_member, name: "mnt", scope: !851, file: !852, line: 9, baseType: !848, size: 64)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "dentry", scope: !851, file: !852, line: 10, baseType: !728, size: 64, offset: 64)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "d_manage", scope: !803, file: !730, line: 148, baseType: !857, size: 64, offset: 704)
!857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !858, size: 64)
!858 = !DISubroutineType(types: !859)
!859 = !{!37, !860, !595}
!860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !861, size: 64)
!861 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !851)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "d_real", scope: !803, file: !730, line: 149, baseType: !863, size: 64, offset: 768)
!863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !864, size: 64)
!864 = !DISubroutineType(types: !865)
!865 = !{!728, !728, !866}
!866 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !867, size: 64)
!867 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !698)
!868 = !DIDerivedType(tag: DW_TAG_member, name: "d_sb", scope: !729, file: !730, line: 103, baseType: !869, size: 64, offset: 832)
!869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !870, size: 64)
!870 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_block", file: !694, line: 1416, size: 9472, elements: !871)
!871 = !{!872, !873, !876, !877, !878, !881, !926, !6207, !6295, !6378, !6382, !6383, !6384, !6385, !6386, !6387, !6388, !6389, !6394, !6398, !6399, !6400, !6401, !6404, !6405, !6406, !6447, !6474, !6475, !6476, !6477, !6478, !6479, !6482, !6483, !6489, !6490, !6491, !6492, !6493, !6494, !6495, !6510, !6511, !6512, !6513, !6514, !6515, !6516, !6517, !6532, !6533, !6534, !6535, !6536, !6537, !6538, !6539, !6540}
!872 = !DIDerivedType(tag: DW_TAG_member, name: "s_list", scope: !870, file: !694, line: 1417, baseType: !344, size: 128)
!873 = !DIDerivedType(tag: DW_TAG_member, name: "s_dev", scope: !870, file: !694, line: 1418, baseType: !874, size: 32, offset: 128)
!874 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !337, line: 16, baseType: !875)
!875 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_dev_t", file: !337, line: 13, baseType: !762)
!876 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize_bits", scope: !870, file: !694, line: 1419, baseType: !549, size: 8, offset: 160)
!877 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize", scope: !870, file: !694, line: 1420, baseType: !372, size: 64, offset: 192)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "s_maxbytes", scope: !870, file: !694, line: 1421, baseType: !879, size: 64, offset: 256)
!879 = !DIDerivedType(tag: DW_TAG_typedef, name: "loff_t", file: !337, line: 46, baseType: !880)
!880 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_loff_t", file: !651, line: 88, baseType: !439)
!881 = !DIDerivedType(tag: DW_TAG_member, name: "s_type", scope: !870, file: !694, line: 1422, baseType: !882, size: 64, offset: 320)
!882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !883, size: 64)
!883 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_system_type", file: !694, line: 2228, size: 576, elements: !884)
!884 = !{!885, !886, !887, !893, !897, !901, !905, !909, !910, !914, !917, !918, !919, !923, !924, !925}
!885 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !883, file: !694, line: 2229, baseType: !352, size: 64)
!886 = !DIDerivedType(tag: DW_TAG_member, name: "fs_flags", scope: !883, file: !694, line: 2230, baseType: !37, size: 32, offset: 64)
!887 = !DIDerivedType(tag: DW_TAG_member, name: "init_fs_context", scope: !883, file: !694, line: 2238, baseType: !888, size: 64, offset: 128)
!888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !889, size: 64)
!889 = !DISubroutineType(types: !890)
!890 = !{!37, !891}
!891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !892, size: 64)
!892 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_context", file: !694, line: 69, flags: DIFlagFwdDecl)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "parameters", scope: !883, file: !694, line: 2239, baseType: !894, size: 64, offset: 192)
!894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !895, size: 64)
!895 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !896)
!896 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_parameter_spec", file: !694, line: 70, flags: DIFlagFwdDecl)
!897 = !DIDerivedType(tag: DW_TAG_member, name: "mount", scope: !883, file: !694, line: 2240, baseType: !898, size: 64, offset: 256)
!898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !899, size: 64)
!899 = !DISubroutineType(types: !900)
!900 = !{!728, !882, !37, !352, !625}
!901 = !DIDerivedType(tag: DW_TAG_member, name: "kill_sb", scope: !883, file: !694, line: 2242, baseType: !902, size: 64, offset: 320)
!902 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !903, size: 64)
!903 = !DISubroutineType(types: !904)
!904 = !{null, !869}
!905 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !883, file: !694, line: 2243, baseType: !906, size: 64, offset: 384)
!906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !907, size: 64)
!907 = !DICompositeType(tag: DW_TAG_structure_type, name: "module", file: !908, line: 76, flags: DIFlagFwdDecl)
!908 = !DIFile(filename: "./arch/x86/include/asm/alternative.h", directory: "/home/lizy2001/genbc/linux")
!909 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !883, file: !694, line: 2244, baseType: !882, size: 64, offset: 448)
!910 = !DIDerivedType(tag: DW_TAG_member, name: "fs_supers", scope: !883, file: !694, line: 2245, baseType: !911, size: 64, offset: 512)
!911 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_head", file: !337, line: 182, size: 64, elements: !912)
!912 = !{!913}
!913 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !911, file: !337, line: 183, baseType: !340, size: 64)
!914 = !DIDerivedType(tag: DW_TAG_member, name: "s_lock_key", scope: !883, file: !694, line: 2247, baseType: !915, offset: 576)
!915 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_class_key", file: !916, line: 187, elements: !798)
!916 = !DIFile(filename: "./include/linux/lockdep_types.h", directory: "/home/lizy2001/genbc/linux")
!917 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount_key", scope: !883, file: !694, line: 2248, baseType: !915, offset: 576)
!918 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_key", scope: !883, file: !694, line: 2249, baseType: !915, offset: 576)
!919 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers_key", scope: !883, file: !694, line: 2250, baseType: !920, offset: 576)
!920 = !DICompositeType(tag: DW_TAG_array_type, baseType: !915, elements: !921)
!921 = !{!922}
!922 = !DISubrange(count: 3)
!923 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock_key", scope: !883, file: !694, line: 2252, baseType: !915, offset: 576)
!924 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_key", scope: !883, file: !694, line: 2253, baseType: !915, offset: 576)
!925 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_dir_key", scope: !883, file: !694, line: 2254, baseType: !915, offset: 576)
!926 = !DIDerivedType(tag: DW_TAG_member, name: "s_op", scope: !870, file: !694, line: 1423, baseType: !927, size: 64, offset: 384)
!927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !928, size: 64)
!928 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !929)
!929 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_operations", file: !694, line: 1935, size: 1472, elements: !930)
!930 = !{!931, !935, !939, !940, !944, !964, !968, !969, !970, !974, !978, !979, !980, !981, !987, !991, !992, !6184, !6185, !6186, !6187, !6191, !6206}
!931 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_inode", scope: !929, file: !694, line: 1936, baseType: !932, size: 64)
!932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !933, size: 64)
!933 = !DISubroutineType(types: !934)
!934 = !{!697, !869}
!935 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_inode", scope: !929, file: !694, line: 1937, baseType: !936, size: 64, offset: 64)
!936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !937, size: 64)
!937 = !DISubroutineType(types: !938)
!938 = !{null, !697}
!939 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !929, file: !694, line: 1938, baseType: !936, size: 64, offset: 128)
!940 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_inode", scope: !929, file: !694, line: 1940, baseType: !941, size: 64, offset: 192)
!941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !942, size: 64)
!942 = !DISubroutineType(types: !943)
!943 = !{null, !697, !37}
!944 = !DIDerivedType(tag: DW_TAG_member, name: "write_inode", scope: !929, file: !694, line: 1941, baseType: !945, size: 64, offset: 256)
!945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !946, size: 64)
!946 = !DISubroutineType(types: !947)
!947 = !{!37, !697, !948}
!948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !949, size: 64)
!949 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "writeback_control", file: !6, line: 51, size: 320, elements: !950)
!950 = !{!951, !952, !953, !954, !955, !956, !957, !958, !959, !960, !961, !962, !963}
!951 = !DIDerivedType(tag: DW_TAG_member, name: "nr_to_write", scope: !949, file: !6, line: 52, baseType: !568, size: 64)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "pages_skipped", scope: !949, file: !6, line: 54, baseType: !568, size: 64, offset: 64)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "range_start", scope: !949, file: !6, line: 61, baseType: !879, size: 64, offset: 128)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "range_end", scope: !949, file: !6, line: 62, baseType: !879, size: 64, offset: 192)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "sync_mode", scope: !949, file: !6, line: 64, baseType: !5, size: 32, offset: 256)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "for_kupdate", scope: !949, file: !6, line: 66, baseType: !7, size: 1, offset: 288, flags: DIFlagBitField, extraData: i64 288)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "for_background", scope: !949, file: !6, line: 67, baseType: !7, size: 1, offset: 289, flags: DIFlagBitField, extraData: i64 288)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "tagged_writepages", scope: !949, file: !6, line: 68, baseType: !7, size: 1, offset: 290, flags: DIFlagBitField, extraData: i64 288)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "for_reclaim", scope: !949, file: !6, line: 69, baseType: !7, size: 1, offset: 291, flags: DIFlagBitField, extraData: i64 288)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "range_cyclic", scope: !949, file: !6, line: 70, baseType: !7, size: 1, offset: 292, flags: DIFlagBitField, extraData: i64 288)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "for_sync", scope: !949, file: !6, line: 71, baseType: !7, size: 1, offset: 293, flags: DIFlagBitField, extraData: i64 288)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "no_cgroup_owner", scope: !949, file: !6, line: 79, baseType: !7, size: 1, offset: 294, flags: DIFlagBitField, extraData: i64 288)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "punt_to_cgroup", scope: !949, file: !6, line: 81, baseType: !7, size: 1, offset: 295, flags: DIFlagBitField, extraData: i64 288)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "drop_inode", scope: !929, file: !694, line: 1942, baseType: !965, size: 64, offset: 320)
!965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !966, size: 64)
!966 = !DISubroutineType(types: !967)
!967 = !{!37, !697}
!968 = !DIDerivedType(tag: DW_TAG_member, name: "evict_inode", scope: !929, file: !694, line: 1943, baseType: !936, size: 64, offset: 384)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "put_super", scope: !929, file: !694, line: 1944, baseType: !902, size: 64, offset: 448)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "sync_fs", scope: !929, file: !694, line: 1945, baseType: !971, size: 64, offset: 512)
!971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !972, size: 64)
!972 = !DISubroutineType(types: !973)
!973 = !{!37, !869, !37}
!974 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_super", scope: !929, file: !694, line: 1946, baseType: !975, size: 64, offset: 576)
!975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !976, size: 64)
!976 = !DISubroutineType(types: !977)
!977 = !{!37, !869}
!978 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_fs", scope: !929, file: !694, line: 1947, baseType: !975, size: 64, offset: 640)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_super", scope: !929, file: !694, line: 1948, baseType: !975, size: 64, offset: 704)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "unfreeze_fs", scope: !929, file: !694, line: 1949, baseType: !975, size: 64, offset: 768)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "statfs", scope: !929, file: !694, line: 1950, baseType: !982, size: 64, offset: 832)
!982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !983, size: 64)
!983 = !DISubroutineType(types: !984)
!984 = !{!37, !728, !985}
!985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !986, size: 64)
!986 = !DICompositeType(tag: DW_TAG_structure_type, name: "kstatfs", file: !694, line: 57, flags: DIFlagFwdDecl)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "remount_fs", scope: !929, file: !694, line: 1951, baseType: !988, size: 64, offset: 896)
!988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !989, size: 64)
!989 = !DISubroutineType(types: !990)
!990 = !{!37, !869, !594, !632}
!991 = !DIDerivedType(tag: DW_TAG_member, name: "umount_begin", scope: !929, file: !694, line: 1952, baseType: !902, size: 64, offset: 960)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !929, file: !694, line: 1954, baseType: !993, size: 64, offset: 1024)
!993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !994, size: 64)
!994 = !DISubroutineType(types: !995)
!995 = !{!37, !996, !728}
!996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !997, size: 64)
!997 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seq_file", file: !998, line: 16, size: 896, elements: !999)
!998 = !DIFile(filename: "./include/linux/seq_file.h", directory: "/home/lizy2001/genbc/linux")
!999 = !{!1000, !1001, !1002, !1003, !1004, !1005, !1006, !1007, !1014, !1036, !1037, !6183}
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !997, file: !998, line: 17, baseType: !632, size: 64)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !997, file: !998, line: 18, baseType: !649, size: 64, offset: 64)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "from", scope: !997, file: !998, line: 19, baseType: !649, size: 64, offset: 128)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !997, file: !998, line: 20, baseType: !649, size: 64, offset: 192)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "pad_until", scope: !997, file: !998, line: 21, baseType: !649, size: 64, offset: 256)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !997, file: !998, line: 22, baseType: !879, size: 64, offset: 320)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "read_pos", scope: !997, file: !998, line: 23, baseType: !879, size: 64, offset: 384)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !997, file: !998, line: 24, baseType: !1008, size: 192, offset: 448)
!1008 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mutex", file: !1009, line: 53, size: 192, elements: !1010)
!1009 = !DIFile(filename: "./include/linux/mutex.h", directory: "/home/lizy2001/genbc/linux")
!1010 = !{!1011, !1012, !1013}
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1008, file: !1009, line: 54, baseType: !431, size: 64)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !1008, file: !1009, line: 55, baseType: !784, offset: 64)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !1008, file: !1009, line: 59, baseType: !344, size: 128, offset: 64)
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !997, file: !998, line: 25, baseType: !1015, size: 64, offset: 640)
!1015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1016, size: 64)
!1016 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1017)
!1017 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seq_operations", file: !998, line: 31, size: 256, elements: !1018)
!1018 = !{!1019, !1024, !1028, !1032}
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1017, file: !998, line: 32, baseType: !1020, size: 64)
!1020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1021, size: 64)
!1021 = !DISubroutineType(types: !1022)
!1022 = !{!625, !996, !1023}
!1023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !879, size: 64)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !1017, file: !998, line: 33, baseType: !1025, size: 64, offset: 64)
!1025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1026, size: 64)
!1026 = !DISubroutineType(types: !1027)
!1027 = !{null, !996, !625}
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1017, file: !998, line: 34, baseType: !1029, size: 64, offset: 128)
!1029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1030, size: 64)
!1030 = !DISubroutineType(types: !1031)
!1031 = !{!625, !996, !625, !1023}
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !1017, file: !998, line: 35, baseType: !1033, size: 64, offset: 192)
!1033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1034, size: 64)
!1034 = !DISubroutineType(types: !1035)
!1035 = !{!37, !996, !625}
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "poll_event", scope: !997, file: !998, line: 26, baseType: !37, size: 32, offset: 704)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !997, file: !998, line: 27, baseType: !1038, size: 64, offset: 768)
!1038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1039, size: 64)
!1039 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1040)
!1040 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file", file: !694, line: 916, size: 1856, align: 32, elements: !1041)
!1041 = !{!1042, !1052, !1053, !1054, !6133, !6134, !6143, !6144, !6145, !6146, !6147, !6148, !6164, !6165, !6174, !6175, !6176, !6177, !6178, !6179, !6182}
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "f_u", scope: !1040, file: !694, line: 920, baseType: !1043, size: 128)
!1043 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1040, file: !694, line: 917, size: 128, elements: !1044)
!1044 = !{!1045, !1051}
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "fu_llist", scope: !1043, file: !694, line: 918, baseType: !1046, size: 64)
!1046 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "llist_node", file: !1047, line: 58, size: 64, elements: !1048)
!1047 = !DIFile(filename: "./include/linux/llist.h", directory: "/home/lizy2001/genbc/linux")
!1048 = !{!1049}
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1046, file: !1047, line: 59, baseType: !1050, size: 64)
!1050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1046, size: 64)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "fu_rcuhead", scope: !1043, file: !694, line: 919, baseType: !359, size: 128, align: 64)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "f_path", scope: !1040, file: !694, line: 921, baseType: !851, size: 128, offset: 128)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "f_inode", scope: !1040, file: !694, line: 922, baseType: !697, size: 64, offset: 256)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "f_op", scope: !1040, file: !694, line: 923, baseType: !1055, size: 64, offset: 320)
!1055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1056, size: 64)
!1056 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1057)
!1057 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_operations", file: !694, line: 1822, size: 2048, elements: !1058)
!1058 = !{!1059, !1060, !1065, !1072, !1076, !1120, !1121, !1125, !1138, !1139, !1160, !1164, !1165, !5982, !5983, !5987, !5992, !5993, !5997, !6001, !6093, !6097, !6098, !6102, !6103, !6107, !6111, !6116, !6120, !6124, !6128, !6132}
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1057, file: !694, line: 1823, baseType: !906, size: 64)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "llseek", scope: !1057, file: !694, line: 1824, baseType: !1061, size: 64, offset: 64)
!1061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1062, size: 64)
!1062 = !DISubroutineType(types: !1063)
!1063 = !{!879, !1064, !879, !37}
!1064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1040, size: 64)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !1057, file: !694, line: 1825, baseType: !1066, size: 64, offset: 128)
!1066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1067, size: 64)
!1067 = !DISubroutineType(types: !1068)
!1068 = !{!1069, !1064, !632, !649, !1023}
!1069 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !337, line: 60, baseType: !1070)
!1070 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ssize_t", file: !651, line: 73, baseType: !1071)
!1071 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_long_t", file: !651, line: 15, baseType: !568)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !1057, file: !694, line: 1826, baseType: !1073, size: 64, offset: 192)
!1073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1074, size: 64)
!1074 = !DISubroutineType(types: !1075)
!1075 = !{!1069, !1064, !352, !649, !1023}
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "read_iter", scope: !1057, file: !694, line: 1827, baseType: !1077, size: 64, offset: 256)
!1077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1078, size: 64)
!1078 = !DISubroutineType(types: !1079)
!1079 = !{!1069, !1080, !1119}
!1080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1081, size: 64)
!1081 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kiocb", file: !694, line: 320, size: 384, elements: !1082)
!1082 = !{!1083, !1084, !1085, !1089, !1090, !1091, !1093, !1094}
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "ki_filp", scope: !1081, file: !694, line: 321, baseType: !1064, size: 64)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "ki_pos", scope: !1081, file: !694, line: 326, baseType: !879, size: 64, offset: 64)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "ki_complete", scope: !1081, file: !694, line: 327, baseType: !1086, size: 64, offset: 128)
!1086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1087, size: 64)
!1087 = !DISubroutineType(types: !1088)
!1088 = !{null, !1080, !568, !568}
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1081, file: !694, line: 328, baseType: !625, size: 64, offset: 192)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "ki_flags", scope: !1081, file: !694, line: 329, baseType: !37, size: 32, offset: 256)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "ki_hint", scope: !1081, file: !694, line: 330, baseType: !1092, size: 16, offset: 288)
!1092 = !DIDerivedType(tag: DW_TAG_typedef, name: "u16", file: !392, line: 19, baseType: !531)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "ki_ioprio", scope: !1081, file: !694, line: 331, baseType: !1092, size: 16, offset: 304)
!1094 = !DIDerivedType(tag: DW_TAG_member, scope: !1081, file: !694, line: 332, baseType: !1095, size: 64, offset: 320)
!1095 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1081, file: !694, line: 332, size: 64, elements: !1096)
!1096 = !{!1097, !1098}
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "ki_cookie", scope: !1095, file: !694, line: 333, baseType: !7, size: 32)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "ki_waitq", scope: !1095, file: !694, line: 334, baseType: !1099, size: 64)
!1099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1100, size: 64)
!1100 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_page_queue", file: !1101, line: 569, size: 448, elements: !1102)
!1101 = !DIFile(filename: "./include/linux/pagemap.h", directory: "/home/lizy2001/genbc/linux")
!1102 = !{!1103, !1104, !1105}
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !1100, file: !1101, line: 570, baseType: !679, size: 64)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "bit_nr", scope: !1100, file: !1101, line: 571, baseType: !37, size: 32, offset: 64)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !1100, file: !1101, line: 572, baseType: !1106, size: 320, offset: 128)
!1106 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_entry_t", file: !1107, line: 14, baseType: !1108)
!1107 = !DIFile(filename: "./include/linux/wait.h", directory: "/home/lizy2001/genbc/linux")
!1108 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_entry", file: !1107, line: 29, size: 320, elements: !1109)
!1109 = !{!1110, !1111, !1112, !1118}
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1108, file: !1107, line: 30, baseType: !7, size: 32)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1108, file: !1107, line: 31, baseType: !625, size: 64, offset: 64)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1108, file: !1107, line: 32, baseType: !1113, size: 64, offset: 128)
!1113 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_func_t", file: !1107, line: 16, baseType: !1114)
!1114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1115, size: 64)
!1115 = !DISubroutineType(types: !1116)
!1116 = !{!37, !1117, !7, !37, !625}
!1117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1108, size: 64)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !1108, file: !1107, line: 33, baseType: !344, size: 128, offset: 192)
!1119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !644, size: 64)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "write_iter", scope: !1057, file: !694, line: 1828, baseType: !1077, size: 64, offset: 320)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "iopoll", scope: !1057, file: !694, line: 1829, baseType: !1122, size: 64, offset: 384)
!1122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1123, size: 64)
!1123 = !DISubroutineType(types: !1124)
!1124 = !{!37, !1080, !595}
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "iterate", scope: !1057, file: !694, line: 1830, baseType: !1126, size: 64, offset: 448)
!1126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1127, size: 64)
!1127 = !DISubroutineType(types: !1128)
!1128 = !{!37, !1064, !1129}
!1129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1130, size: 64)
!1130 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dir_context", file: !694, line: 1776, size: 128, elements: !1131)
!1131 = !{!1132, !1137}
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "actor", scope: !1130, file: !694, line: 1777, baseType: !1133, size: 64)
!1133 = !DIDerivedType(tag: DW_TAG_typedef, name: "filldir_t", file: !694, line: 1773, baseType: !1134)
!1134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1135, size: 64)
!1135 = !DISubroutineType(types: !1136)
!1136 = !{!37, !1129, !352, !37, !879, !391, !7}
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !1130, file: !694, line: 1778, baseType: !879, size: 64, offset: 64)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "iterate_shared", scope: !1057, file: !694, line: 1831, baseType: !1126, size: 64, offset: 512)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !1057, file: !694, line: 1832, baseType: !1140, size: 64, offset: 576)
!1140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1141, size: 64)
!1141 = !DISubroutineType(types: !1142)
!1142 = !{!1143, !1064, !1144}
!1143 = !DIDerivedType(tag: DW_TAG_typedef, name: "__poll_t", file: !522, line: 52, baseType: !7)
!1144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1145, size: 64)
!1145 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "poll_table_struct", file: !1146, line: 43, size: 128, elements: !1147)
!1146 = !DIFile(filename: "./include/linux/poll.h", directory: "/home/lizy2001/genbc/linux")
!1147 = !{!1148, !1159}
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "_qproc", scope: !1145, file: !1146, line: 44, baseType: !1149, size: 64)
!1149 = !DIDerivedType(tag: DW_TAG_typedef, name: "poll_queue_proc", file: !1146, line: 37, baseType: !1150)
!1150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1151, size: 64)
!1151 = !DISubroutineType(types: !1152)
!1152 = !{null, !1064, !1153, !1144}
!1153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1154, size: 64)
!1154 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_head_t", file: !1107, line: 40, baseType: !1155)
!1155 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_head", file: !1107, line: 36, size: 128, elements: !1156)
!1156 = !{!1157, !1158}
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1155, file: !1107, line: 37, baseType: !784)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1155, file: !1107, line: 38, baseType: !344, size: 128)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "_key", scope: !1145, file: !1146, line: 45, baseType: !1143, size: 32, offset: 64)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "unlocked_ioctl", scope: !1057, file: !694, line: 1833, baseType: !1161, size: 64, offset: 640)
!1161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1162, size: 64)
!1162 = !DISubroutineType(types: !1163)
!1163 = !{!568, !1064, !7, !372}
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !1057, file: !694, line: 1834, baseType: !1161, size: 64, offset: 704)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !1057, file: !694, line: 1835, baseType: !1166, size: 64, offset: 768)
!1166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1167, size: 64)
!1167 = !DISubroutineType(types: !1168)
!1168 = !{!37, !1064, !1169}
!1169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1170, size: 64)
!1170 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_area_struct", file: !681, line: 305, size: 1472, elements: !1171)
!1171 = !{!1172, !1173, !1174, !1175, !1176, !1177, !1178, !5959, !5965, !5966, !5971, !5972, !5975, !5976, !5977, !5978, !5979, !5980}
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "vm_start", scope: !1170, file: !681, line: 308, baseType: !372, size: 64)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "vm_end", scope: !1170, file: !681, line: 309, baseType: !372, size: 64, offset: 64)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "vm_next", scope: !1170, file: !681, line: 313, baseType: !1169, size: 64, offset: 128)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "vm_prev", scope: !1170, file: !681, line: 313, baseType: !1169, size: 64, offset: 192)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "vm_rb", scope: !1170, file: !681, line: 315, baseType: !493, size: 192, align: 64, offset: 256)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_gap", scope: !1170, file: !681, line: 323, baseType: !372, size: 64, offset: 448)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "vm_mm", scope: !1170, file: !681, line: 327, baseType: !1179, size: 64, offset: 512)
!1179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1180, size: 64)
!1180 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_struct", file: !681, line: 388, size: 7296, elements: !1181)
!1181 = !{!1182, !5957}
!1182 = !DIDerivedType(tag: DW_TAG_member, scope: !1180, file: !681, line: 389, baseType: !1183, size: 7296)
!1183 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1180, file: !681, line: 389, size: 7296, elements: !1184)
!1184 = !{!1185, !1186, !1190, !1191, !1195, !1196, !1197, !1198, !1199, !1208, !1209, !1210, !1211, !1212, !1213, !1214, !1215, !1224, !1225, !1226, !1227, !1228, !1229, !1230, !1231, !1232, !1233, !1234, !1235, !1236, !1237, !1238, !1239, !1240, !1241, !1242, !1243, !1244, !1245, !1246, !1250, !1258, !1261, !1301, !1302, !5941, !5942, !5945, !5946, !5947, !5950, !5951, !5952, !5955, !5956}
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !1183, file: !681, line: 390, baseType: !1169, size: 64)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "mm_rb", scope: !1183, file: !681, line: 391, baseType: !1187, size: 64, offset: 64)
!1187 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root", file: !494, line: 31, size: 64, elements: !1188)
!1188 = !{!1189}
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !1187, file: !494, line: 32, baseType: !498, size: 64)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache_seqnum", scope: !1183, file: !681, line: 392, baseType: !391, size: 64, offset: 128)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !1183, file: !681, line: 394, baseType: !1192, size: 64, offset: 192)
!1192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1193, size: 64)
!1193 = !DISubroutineType(types: !1194)
!1194 = !{!372, !1064, !372, !372, !372, !372}
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_base", scope: !1183, file: !681, line: 398, baseType: !372, size: 64, offset: 256)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_legacy_base", scope: !1183, file: !681, line: 399, baseType: !372, size: 64, offset: 320)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "task_size", scope: !1183, file: !681, line: 405, baseType: !372, size: 64, offset: 384)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "highest_vm_end", scope: !1183, file: !681, line: 406, baseType: !372, size: 64, offset: 448)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !1183, file: !681, line: 407, baseType: !1200, size: 64, offset: 512)
!1200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1201, size: 64)
!1201 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgd_t", file: !1202, line: 286, baseType: !1203)
!1202 = !DIFile(filename: "./arch/x86/include/asm/pgtable_types.h", directory: "/home/lizy2001/genbc/linux")
!1203 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1202, line: 286, size: 64, elements: !1204)
!1204 = !{!1205}
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !1203, file: !1202, line: 286, baseType: !1206, size: 64)
!1206 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgdval_t", file: !1207, line: 18, baseType: !372)
!1207 = !DIFile(filename: "./arch/x86/include/asm/pgtable_64_types.h", directory: "/home/lizy2001/genbc/linux")
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "membarrier_state", scope: !1183, file: !681, line: 416, baseType: !443, size: 32, offset: 576)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "mm_users", scope: !1183, file: !681, line: 428, baseType: !443, size: 32, offset: 608)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "mm_count", scope: !1183, file: !681, line: 437, baseType: !443, size: 32, offset: 640)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "has_pinned", scope: !1183, file: !681, line: 447, baseType: !443, size: 32, offset: 672)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "pgtables_bytes", scope: !1183, file: !681, line: 450, baseType: !431, size: 64, offset: 704)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "map_count", scope: !1183, file: !681, line: 452, baseType: !37, size: 32, offset: 768)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "page_table_lock", scope: !1183, file: !681, line: 454, baseType: !784, offset: 800)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_lock", scope: !1183, file: !681, line: 457, baseType: !1216, size: 256, offset: 832)
!1216 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rw_semaphore", file: !1217, line: 35, size: 256, elements: !1218)
!1217 = !DIFile(filename: "./include/linux/rwsem.h", directory: "/home/lizy2001/genbc/linux")
!1218 = !{!1219, !1220, !1221, !1223}
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1216, file: !1217, line: 36, baseType: !431, size: 64)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1216, file: !1217, line: 42, baseType: !431, size: 64, offset: 64)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !1216, file: !1217, line: 46, baseType: !1222, offset: 128)
!1222 = !DIDerivedType(tag: DW_TAG_typedef, name: "raw_spinlock_t", file: !785, line: 29, baseType: !792)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !1216, file: !1217, line: 47, baseType: !344, size: 128, offset: 128)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "mmlist", scope: !1183, file: !681, line: 459, baseType: !344, size: 128, offset: 1088)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_rss", scope: !1183, file: !681, line: 466, baseType: !372, size: 64, offset: 1216)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_vm", scope: !1183, file: !681, line: 467, baseType: !372, size: 64, offset: 1280)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "total_vm", scope: !1183, file: !681, line: 469, baseType: !372, size: 64, offset: 1344)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !1183, file: !681, line: 470, baseType: !372, size: 64, offset: 1408)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "pinned_vm", scope: !1183, file: !681, line: 471, baseType: !433, size: 64, offset: 1472)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "data_vm", scope: !1183, file: !681, line: 472, baseType: !372, size: 64, offset: 1536)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "exec_vm", scope: !1183, file: !681, line: 473, baseType: !372, size: 64, offset: 1600)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm", scope: !1183, file: !681, line: 474, baseType: !372, size: 64, offset: 1664)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "def_flags", scope: !1183, file: !681, line: 475, baseType: !372, size: 64, offset: 1728)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "arg_lock", scope: !1183, file: !681, line: 477, baseType: !784, offset: 1792)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "start_code", scope: !1183, file: !681, line: 478, baseType: !372, size: 64, offset: 1792)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "end_code", scope: !1183, file: !681, line: 478, baseType: !372, size: 64, offset: 1856)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "start_data", scope: !1183, file: !681, line: 478, baseType: !372, size: 64, offset: 1920)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "end_data", scope: !1183, file: !681, line: 478, baseType: !372, size: 64, offset: 1984)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "start_brk", scope: !1183, file: !681, line: 479, baseType: !372, size: 64, offset: 2048)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "brk", scope: !1183, file: !681, line: 479, baseType: !372, size: 64, offset: 2112)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "start_stack", scope: !1183, file: !681, line: 479, baseType: !372, size: 64, offset: 2176)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "arg_start", scope: !1183, file: !681, line: 480, baseType: !372, size: 64, offset: 2240)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "arg_end", scope: !1183, file: !681, line: 480, baseType: !372, size: 64, offset: 2304)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "env_start", scope: !1183, file: !681, line: 480, baseType: !372, size: 64, offset: 2368)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "env_end", scope: !1183, file: !681, line: 480, baseType: !372, size: 64, offset: 2432)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "saved_auxv", scope: !1183, file: !681, line: 482, baseType: !1247, size: 2816, offset: 2496)
!1247 = !DICompositeType(tag: DW_TAG_array_type, baseType: !372, size: 2816, elements: !1248)
!1248 = !{!1249}
!1249 = !DISubrange(count: 44)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "rss_stat", scope: !1183, file: !681, line: 488, baseType: !1251, size: 256, offset: 5312)
!1251 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_rss_stat", file: !1252, line: 60, size: 256, elements: !1253)
!1252 = !DIFile(filename: "./include/linux/mm_types_task.h", directory: "/home/lizy2001/genbc/linux")
!1253 = !{!1254}
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1251, file: !1252, line: 61, baseType: !1255, size: 256)
!1255 = !DICompositeType(tag: DW_TAG_array_type, baseType: !431, size: 256, elements: !1256)
!1256 = !{!1257}
!1257 = !DISubrange(count: 4)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "binfmt", scope: !1183, file: !681, line: 490, baseType: !1259, size: 64, offset: 5568)
!1259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1260, size: 64)
!1260 = !DICompositeType(tag: DW_TAG_structure_type, name: "linux_binfmt", file: !681, line: 490, flags: DIFlagFwdDecl)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1183, file: !681, line: 493, baseType: !1262, size: 896, offset: 5632)
!1262 = !DIDerivedType(tag: DW_TAG_typedef, name: "mm_context_t", file: !1263, line: 53, baseType: !1264)
!1263 = !DIFile(filename: "./arch/x86/include/asm/mmu.h", directory: "/home/lizy2001/genbc/linux")
!1264 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1263, line: 13, size: 896, elements: !1265)
!1265 = !{!1266, !1267, !1268, !1269, !1272, !1273, !1274, !1275, !1295, !1296, !1297}
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_id", scope: !1264, file: !1263, line: 18, baseType: !391, size: 64)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_gen", scope: !1264, file: !1263, line: 28, baseType: !433, size: 64, offset: 64)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "ldt_usr_sem", scope: !1264, file: !1263, line: 31, baseType: !1216, size: 256, offset: 128)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "ldt", scope: !1264, file: !1263, line: 32, baseType: !1270, size: 64, offset: 384)
!1270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1271, size: 64)
!1271 = !DICompositeType(tag: DW_TAG_structure_type, name: "ldt_struct", file: !1263, line: 32, flags: DIFlagFwdDecl)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "ia32_compat", scope: !1264, file: !1263, line: 37, baseType: !532, size: 16, offset: 448)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1264, file: !1263, line: 40, baseType: !1008, size: 192, offset: 512)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "vdso", scope: !1264, file: !1263, line: 41, baseType: !625, size: 64, offset: 704)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "vdso_image", scope: !1264, file: !1263, line: 42, baseType: !1276, size: 64, offset: 768)
!1276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1277, size: 64)
!1277 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1278)
!1278 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vdso_image", file: !1279, line: 13, size: 896, elements: !1280)
!1279 = !DIFile(filename: "./arch/x86/include/asm/vdso.h", directory: "/home/lizy2001/genbc/linux")
!1280 = !{!1281, !1282, !1283, !1284, !1285, !1286, !1287, !1288, !1289, !1290, !1291, !1292, !1293, !1294}
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1278, file: !1279, line: 14, baseType: !625, size: 64)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1278, file: !1279, line: 15, baseType: !372, size: 64, offset: 64)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "alt", scope: !1278, file: !1279, line: 17, baseType: !372, size: 64, offset: 128)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "alt_len", scope: !1278, file: !1279, line: 17, baseType: !372, size: 64, offset: 192)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_start", scope: !1278, file: !1279, line: 19, baseType: !568, size: 64, offset: 256)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_page", scope: !1278, file: !1279, line: 21, baseType: !568, size: 64, offset: 320)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "sym_pvclock_page", scope: !1278, file: !1279, line: 22, baseType: !568, size: 64, offset: 384)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "sym_hvclock_page", scope: !1278, file: !1279, line: 23, baseType: !568, size: 64, offset: 448)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "sym_timens_page", scope: !1278, file: !1279, line: 24, baseType: !568, size: 64, offset: 512)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "sym_VDSO32_NOTE_MASK", scope: !1278, file: !1279, line: 25, baseType: !568, size: 64, offset: 576)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_sigreturn", scope: !1278, file: !1279, line: 26, baseType: !568, size: 64, offset: 640)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_rt_sigreturn", scope: !1278, file: !1279, line: 27, baseType: !568, size: 64, offset: 704)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_vsyscall", scope: !1278, file: !1279, line: 28, baseType: !568, size: 64, offset: 768)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "sym_int80_landing_pad", scope: !1278, file: !1279, line: 29, baseType: !568, size: 64, offset: 832)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "perf_rdpmc_allowed", scope: !1264, file: !1263, line: 44, baseType: !443, size: 32, offset: 832)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "pkey_allocation_map", scope: !1264, file: !1263, line: 50, baseType: !1092, size: 16, offset: 864)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "execute_only_pkey", scope: !1264, file: !1263, line: 51, baseType: !1298, size: 16, offset: 880)
!1298 = !DIDerivedType(tag: DW_TAG_typedef, name: "s16", file: !392, line: 18, baseType: !1299)
!1299 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s16", file: !394, line: 23, baseType: !1300)
!1300 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1183, file: !681, line: 495, baseType: !372, size: 64, offset: 6528)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "core_state", scope: !1183, file: !681, line: 497, baseType: !1303, size: 64, offset: 6592)
!1303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1304, size: 64)
!1304 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_state", file: !681, line: 381, size: 384, elements: !1305)
!1305 = !{!1306, !1307, !5940}
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !1304, file: !681, line: 382, baseType: !443, size: 32)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "dumper", scope: !1304, file: !681, line: 383, baseType: !1308, size: 128, offset: 64)
!1308 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_thread", file: !681, line: 376, size: 128, elements: !1309)
!1309 = !{!1310, !5938}
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !1308, file: !681, line: 377, baseType: !1311, size: 64)
!1311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1312, size: 64)
!1312 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_struct", file: !1313, line: 640, size: 48640, elements: !1314)
!1313 = !DIFile(filename: "./include/linux/sched.h", directory: "/home/lizy2001/genbc/linux")
!1314 = !{!1315, !1321, !1323, !1324, !1330, !1331, !1332, !1333, !1334, !1335, !1336, !1337, !1341, !1359, !1370, !1459, !1460, !1461, !1472, !1473, !1475, !1476, !1477, !1478, !1484, !1485, !1486, !1487, !1488, !1489, !1490, !1491, !1492, !1493, !1494, !1495, !1496, !1497, !1498, !1499, !1562, !1565, !1566, !1567, !1568, !1569, !1570, !1571, !1572, !1573, !1574, !1903, !1905, !1906, !1907, !1908, !1909, !1910, !1911, !1912, !1913, !1919, !1920, !1921, !1922, !1923, !1924, !1925, !1937, !1942, !2016, !2017, !2018, !2019, !2020, !2023, !2026, !2029, !2032, !3719, !3815, !3846, !3847, !3848, !3849, !3850, !3851, !3852, !3853, !3854, !3863, !3864, !3865, !3866, !3867, !3872, !3873, !3874, !3877, !3878, !5535, !5544, !5547, !5548, !5549, !5552, !5553, !5632, !5633, !5636, !5637, !5640, !5641, !5642, !5646, !5647, !5648, !5661, !5662, !5663, !5673, !5678, !5736, !5742, !5743, !5744, !5745, !5746, !5747, !5748, !5749, !5764, !5765, !5766, !5767, !5768, !5769, !5770, !5771, !5772}
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "thread_info", scope: !1312, file: !1313, line: 646, baseType: !1316, size: 128)
!1316 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_info", file: !1317, line: 56, size: 128, elements: !1318)
!1317 = !DIFile(filename: "./arch/x86/include/asm/thread_info.h", directory: "/home/lizy2001/genbc/linux")
!1318 = !{!1319, !1320}
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1316, file: !1317, line: 57, baseType: !372, size: 64)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !1316, file: !1317, line: 58, baseType: !762, size: 32, offset: 64)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1312, file: !1313, line: 649, baseType: !1322, size: 64, offset: 128)
!1322 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !568)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !1312, file: !1313, line: 657, baseType: !625, size: 64, offset: 192)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1312, file: !1313, line: 658, baseType: !1325, size: 32, offset: 256)
!1325 = !DIDerivedType(tag: DW_TAG_typedef, name: "refcount_t", file: !1326, line: 113, baseType: !1327)
!1326 = !DIFile(filename: "./include/linux/refcount.h", directory: "/home/lizy2001/genbc/linux")
!1327 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "refcount_struct", file: !1326, line: 111, size: 32, elements: !1328)
!1328 = !{!1329}
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !1327, file: !1326, line: 112, baseType: !443, size: 32)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1312, file: !1313, line: 660, baseType: !7, size: 32, offset: 288)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace", scope: !1312, file: !1313, line: 661, baseType: !7, size: 32, offset: 320)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1312, file: !1313, line: 684, baseType: !37, size: 32, offset: 352)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1312, file: !1313, line: 686, baseType: !37, size: 32, offset: 384)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "static_prio", scope: !1312, file: !1313, line: 687, baseType: !37, size: 32, offset: 416)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "normal_prio", scope: !1312, file: !1313, line: 688, baseType: !37, size: 32, offset: 448)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "rt_priority", scope: !1312, file: !1313, line: 689, baseType: !7, size: 32, offset: 480)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "sched_class", scope: !1312, file: !1313, line: 691, baseType: !1338, size: 64, offset: 512)
!1338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1339, size: 64)
!1339 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1340)
!1340 = !DICompositeType(tag: DW_TAG_structure_type, name: "sched_class", file: !1313, line: 691, flags: DIFlagFwdDecl)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "se", scope: !1312, file: !1313, line: 692, baseType: !1342, size: 832, offset: 576)
!1342 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_entity", file: !1313, line: 451, size: 832, elements: !1343)
!1343 = !{!1344, !1349, !1350, !1351, !1352, !1353, !1354, !1355, !1356, !1357}
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "load", scope: !1342, file: !1313, line: 453, baseType: !1345, size: 128)
!1345 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "load_weight", file: !1313, line: 325, size: 128, elements: !1346)
!1346 = !{!1347, !1348}
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1345, file: !1313, line: 326, baseType: !372, size: 64)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "inv_weight", scope: !1345, file: !1313, line: 327, baseType: !762, size: 32, offset: 64)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "run_node", scope: !1342, file: !1313, line: 454, baseType: !493, size: 192, align: 64, offset: 128)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "group_node", scope: !1342, file: !1313, line: 455, baseType: !344, size: 128, offset: 320)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1342, file: !1313, line: 456, baseType: !7, size: 32, offset: 448)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "exec_start", scope: !1342, file: !1313, line: 458, baseType: !391, size: 64, offset: 512)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !1342, file: !1313, line: 459, baseType: !391, size: 64, offset: 576)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "vruntime", scope: !1342, file: !1313, line: 460, baseType: !391, size: 64, offset: 640)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "prev_sum_exec_runtime", scope: !1342, file: !1313, line: 461, baseType: !391, size: 64, offset: 704)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "nr_migrations", scope: !1342, file: !1313, line: 463, baseType: !391, size: 64, offset: 768)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "statistics", scope: !1342, file: !1313, line: 465, baseType: !1358, offset: 832)
!1358 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_statistics", file: !1313, line: 415, elements: !798)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1312, file: !1313, line: 693, baseType: !1360, size: 384, offset: 1408)
!1360 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_rt_entity", file: !1313, line: 489, size: 384, elements: !1361)
!1361 = !{!1362, !1363, !1364, !1365, !1366, !1367, !1368}
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "run_list", scope: !1360, file: !1313, line: 490, baseType: !344, size: 128)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1360, file: !1313, line: 491, baseType: !372, size: 64, offset: 128)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_stamp", scope: !1360, file: !1313, line: 492, baseType: !372, size: 64, offset: 192)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "time_slice", scope: !1360, file: !1313, line: 493, baseType: !7, size: 32, offset: 256)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1360, file: !1313, line: 494, baseType: !532, size: 16, offset: 288)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "on_list", scope: !1360, file: !1313, line: 495, baseType: !532, size: 16, offset: 304)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !1360, file: !1313, line: 497, baseType: !1369, size: 64, offset: 320)
!1369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1360, size: 64)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "dl", scope: !1312, file: !1313, line: 697, baseType: !1371, size: 1792, offset: 1792)
!1371 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_dl_entity", file: !1313, line: 507, size: 1792, elements: !1372)
!1372 = !{!1373, !1374, !1375, !1376, !1377, !1378, !1379, !1380, !1381, !1382, !1383, !1384, !1385, !1386, !1456, !1457}
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !1371, file: !1313, line: 508, baseType: !493, size: 192, align: 64)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "dl_runtime", scope: !1371, file: !1313, line: 515, baseType: !391, size: 64, offset: 192)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "dl_deadline", scope: !1371, file: !1313, line: 516, baseType: !391, size: 64, offset: 256)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "dl_period", scope: !1371, file: !1313, line: 517, baseType: !391, size: 64, offset: 320)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "dl_bw", scope: !1371, file: !1313, line: 518, baseType: !391, size: 64, offset: 384)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "dl_density", scope: !1371, file: !1313, line: 519, baseType: !391, size: 64, offset: 448)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "runtime", scope: !1371, file: !1313, line: 526, baseType: !437, size: 64, offset: 512)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", scope: !1371, file: !1313, line: 527, baseType: !391, size: 64, offset: 576)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1371, file: !1313, line: 528, baseType: !7, size: 32, offset: 640)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "dl_throttled", scope: !1371, file: !1313, line: 554, baseType: !7, size: 1, offset: 672, flags: DIFlagBitField, extraData: i64 672)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "dl_yielded", scope: !1371, file: !1313, line: 555, baseType: !7, size: 1, offset: 673, flags: DIFlagBitField, extraData: i64 672)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "dl_non_contending", scope: !1371, file: !1313, line: 556, baseType: !7, size: 1, offset: 674, flags: DIFlagBitField, extraData: i64 672)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "dl_overrun", scope: !1371, file: !1313, line: 557, baseType: !7, size: 1, offset: 675, flags: DIFlagBitField, extraData: i64 672)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "dl_timer", scope: !1371, file: !1313, line: 563, baseType: !1387, size: 512, offset: 704)
!1387 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer", file: !25, line: 118, size: 512, elements: !1388)
!1388 = !{!1389, !1397, !1398, !1403, !1450, !1453, !1454, !1455}
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1387, file: !25, line: 119, baseType: !1390, size: 256)
!1390 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_node", file: !1391, line: 9, size: 256, elements: !1392)
!1391 = !DIFile(filename: "./include/linux/timerqueue.h", directory: "/home/lizy2001/genbc/linux")
!1392 = !{!1393, !1394}
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1390, file: !1391, line: 10, baseType: !493, size: 192, align: 64)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1390, file: !1391, line: 11, baseType: !1395, size: 64, offset: 192)
!1395 = !DIDerivedType(tag: DW_TAG_typedef, name: "ktime_t", file: !1396, line: 29, baseType: !437)
!1396 = !DIFile(filename: "./include/linux/ktime.h", directory: "/home/lizy2001/genbc/linux")
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "_softexpires", scope: !1387, file: !25, line: 120, baseType: !1395, size: 64, offset: 256)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !1387, file: !25, line: 121, baseType: !1399, size: 64, offset: 320)
!1399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1400, size: 64)
!1400 = !DISubroutineType(types: !1401)
!1401 = !{!24, !1402}
!1402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1387, size: 64)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1387, file: !25, line: 122, baseType: !1404, size: 64, offset: 384)
!1404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1405, size: 64)
!1405 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_clock_base", file: !25, line: 159, size: 512, align: 512, elements: !1406)
!1406 = !{!1407, !1427, !1428, !1431, !1436, !1437, !1445, !1449}
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_base", scope: !1405, file: !25, line: 160, baseType: !1408, size: 64)
!1408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1409, size: 64)
!1409 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_cpu_base", file: !25, line: 214, size: 4608, align: 512, elements: !1410)
!1410 = !{!1411, !1412, !1413, !1414, !1415, !1416, !1417, !1418, !1419, !1420, !1421, !1422, !1423}
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1409, file: !25, line: 215, baseType: !1222)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !1409, file: !25, line: 216, baseType: !7, size: 32)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "active_bases", scope: !1409, file: !25, line: 217, baseType: !7, size: 32, offset: 32)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "clock_was_set_seq", scope: !1409, file: !25, line: 218, baseType: !7, size: 32, offset: 64)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "hres_active", scope: !1409, file: !25, line: 219, baseType: !7, size: 1, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "in_hrtirq", scope: !1409, file: !25, line: 220, baseType: !7, size: 1, offset: 97, flags: DIFlagBitField, extraData: i64 96)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "hang_detected", scope: !1409, file: !25, line: 221, baseType: !7, size: 1, offset: 98, flags: DIFlagBitField, extraData: i64 96)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_activated", scope: !1409, file: !25, line: 222, baseType: !7, size: 1, offset: 99, flags: DIFlagBitField, extraData: i64 96)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "expires_next", scope: !1409, file: !25, line: 233, baseType: !1395, size: 64, offset: 128)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "next_timer", scope: !1409, file: !25, line: 234, baseType: !1402, size: 64, offset: 192)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_expires_next", scope: !1409, file: !25, line: 235, baseType: !1395, size: 64, offset: 256)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_next_timer", scope: !1409, file: !25, line: 236, baseType: !1402, size: 64, offset: 320)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "clock_base", scope: !1409, file: !25, line: 237, baseType: !1424, size: 4096, offset: 512)
!1424 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1405, size: 4096, elements: !1425)
!1425 = !{!1426}
!1426 = !DISubrange(count: 8)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1405, file: !25, line: 161, baseType: !7, size: 32, offset: 64)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !1405, file: !25, line: 162, baseType: !1429, size: 32, offset: 96)
!1429 = !DIDerivedType(tag: DW_TAG_typedef, name: "clockid_t", file: !337, line: 27, baseType: !1430)
!1430 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clockid_t", file: !651, line: 96, baseType: !37)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !1405, file: !25, line: 163, baseType: !1432, size: 32, offset: 128)
!1432 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_raw_spinlock_t", file: !735, line: 276, baseType: !1433)
!1433 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_raw_spinlock", file: !735, line: 276, size: 32, elements: !1434)
!1434 = !{!1435}
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !1433, file: !735, line: 276, baseType: !739, size: 32)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "running", scope: !1405, file: !25, line: 164, baseType: !1402, size: 64, offset: 192)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !1405, file: !25, line: 165, baseType: !1438, size: 128, offset: 256)
!1438 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_head", file: !1391, line: 14, size: 128, elements: !1439)
!1439 = !{!1440}
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !1438, file: !1391, line: 15, baseType: !1441, size: 128)
!1441 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root_cached", file: !494, line: 125, size: 128, elements: !1442)
!1442 = !{!1443, !1444}
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !1441, file: !494, line: 126, baseType: !1187, size: 64)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "rb_leftmost", scope: !1441, file: !494, line: 127, baseType: !498, size: 64, offset: 64)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "get_time", scope: !1405, file: !25, line: 166, baseType: !1446, size: 64, offset: 384)
!1446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1447, size: 64)
!1447 = !DISubroutineType(types: !1448)
!1448 = !{!1395}
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1405, file: !25, line: 167, baseType: !1395, size: 64, offset: 448)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1387, file: !25, line: 123, baseType: !1451, size: 8, offset: 448)
!1451 = !DIDerivedType(tag: DW_TAG_typedef, name: "u8", file: !392, line: 17, baseType: !1452)
!1452 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u8", file: !394, line: 21, baseType: !549)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "is_rel", scope: !1387, file: !25, line: 124, baseType: !1451, size: 8, offset: 456)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "is_soft", scope: !1387, file: !25, line: 125, baseType: !1451, size: 8, offset: 464)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "is_hard", scope: !1387, file: !25, line: 126, baseType: !1451, size: 8, offset: 472)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "inactive_timer", scope: !1371, file: !1313, line: 572, baseType: !1387, size: 512, offset: 1216)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "pi_se", scope: !1371, file: !1313, line: 580, baseType: !1458, size: 64, offset: 1728)
!1458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1371, size: 64)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !1312, file: !1313, line: 721, baseType: !7, size: 32, offset: 3584)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cpus_allowed", scope: !1312, file: !1313, line: 722, baseType: !37, size: 32, offset: 3616)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_ptr", scope: !1312, file: !1313, line: 723, baseType: !1462, size: 64, offset: 3648)
!1462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1463, size: 64)
!1463 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1464)
!1464 = !DIDerivedType(tag: DW_TAG_typedef, name: "cpumask_t", file: !1465, line: 17, baseType: !1466)
!1465 = !DIFile(filename: "./include/linux/cpumask.h", directory: "/home/lizy2001/genbc/linux")
!1466 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpumask", file: !1465, line: 17, size: 64, elements: !1467)
!1467 = !{!1468}
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !1466, file: !1465, line: 17, baseType: !1469, size: 64)
!1469 = !DICompositeType(tag: DW_TAG_array_type, baseType: !372, size: 64, elements: !1470)
!1470 = !{!1471}
!1471 = !DISubrange(count: 1)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_mask", scope: !1312, file: !1313, line: 724, baseType: !1464, size: 64, offset: 3712)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "sched_info", scope: !1312, file: !1313, line: 749, baseType: !1474, offset: 3776)
!1474 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_info", file: !1313, line: 290, elements: !798)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !1312, file: !1313, line: 751, baseType: !344, size: 128, offset: 3776)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "mm", scope: !1312, file: !1313, line: 757, baseType: !1179, size: 64, offset: 3904)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "active_mm", scope: !1312, file: !1313, line: 758, baseType: !1179, size: 64, offset: 3968)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache", scope: !1312, file: !1313, line: 761, baseType: !1479, size: 320, offset: 4032)
!1479 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmacache", file: !1252, line: 34, size: 320, elements: !1480)
!1480 = !{!1481, !1482}
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "seqnum", scope: !1479, file: !1252, line: 35, baseType: !391, size: 64)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "vmas", scope: !1479, file: !1252, line: 36, baseType: !1483, size: 256, offset: 64)
!1483 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1169, size: 256, elements: !1256)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "exit_state", scope: !1312, file: !1313, line: 766, baseType: !37, size: 32, offset: 4352)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "exit_code", scope: !1312, file: !1313, line: 767, baseType: !37, size: 32, offset: 4384)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "exit_signal", scope: !1312, file: !1313, line: 768, baseType: !37, size: 32, offset: 4416)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "pdeath_signal", scope: !1312, file: !1313, line: 770, baseType: !37, size: 32, offset: 4448)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "jobctl", scope: !1312, file: !1313, line: 772, baseType: !372, size: 64, offset: 4480)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !1312, file: !1313, line: 775, baseType: !7, size: 32, offset: 4544)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "sched_reset_on_fork", scope: !1312, file: !1313, line: 778, baseType: !7, size: 1, offset: 4576, flags: DIFlagBitField, extraData: i64 4576)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "sched_contributes_to_load", scope: !1312, file: !1313, line: 779, baseType: !7, size: 1, offset: 4577, flags: DIFlagBitField, extraData: i64 4576)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "sched_migrated", scope: !1312, file: !1313, line: 780, baseType: !7, size: 1, offset: 4578, flags: DIFlagBitField, extraData: i64 4576)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "sched_remote_wakeup", scope: !1312, file: !1313, line: 803, baseType: !7, size: 1, offset: 4608, flags: DIFlagBitField, extraData: i64 4608)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "in_execve", scope: !1312, file: !1313, line: 806, baseType: !7, size: 1, offset: 4609, flags: DIFlagBitField, extraData: i64 4608)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "in_iowait", scope: !1312, file: !1313, line: 807, baseType: !7, size: 1, offset: 4610, flags: DIFlagBitField, extraData: i64 4608)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "restore_sigmask", scope: !1312, file: !1313, line: 809, baseType: !7, size: 1, offset: 4611, flags: DIFlagBitField, extraData: i64 4608)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "brk_randomized", scope: !1312, file: !1313, line: 815, baseType: !7, size: 1, offset: 4612, flags: DIFlagBitField, extraData: i64 4608)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_flags", scope: !1312, file: !1313, line: 831, baseType: !372, size: 64, offset: 4672)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "restart_block", scope: !1312, file: !1313, line: 833, baseType: !1500, size: 384, offset: 4736)
!1500 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "restart_block", file: !30, line: 25, size: 384, elements: !1501)
!1501 = !{!1502, !1507}
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1500, file: !30, line: 26, baseType: !1503, size: 64)
!1503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1504, size: 64)
!1504 = !DISubroutineType(types: !1505)
!1505 = !{!568, !1506}
!1506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1500, size: 64)
!1507 = !DIDerivedType(tag: DW_TAG_member, scope: !1500, file: !30, line: 27, baseType: !1508, size: 320, offset: 64)
!1508 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1500, file: !30, line: 27, size: 320, elements: !1509)
!1509 = !{!1510, !1520, !1547}
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "futex", scope: !1508, file: !30, line: 36, baseType: !1511, size: 320)
!1511 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1508, file: !30, line: 29, size: 320, elements: !1512)
!1512 = !{!1513, !1515, !1516, !1517, !1518, !1519}
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr", scope: !1511, file: !30, line: 30, baseType: !1514, size: 64)
!1514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !762, size: 64)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1511, file: !30, line: 31, baseType: !762, size: 32, offset: 64)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1511, file: !30, line: 32, baseType: !762, size: 32, offset: 96)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "bitset", scope: !1511, file: !30, line: 33, baseType: !762, size: 32, offset: 128)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !1511, file: !30, line: 34, baseType: !391, size: 64, offset: 192)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr2", scope: !1511, file: !30, line: 35, baseType: !1514, size: 64, offset: 256)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "nanosleep", scope: !1508, file: !30, line: 46, baseType: !1521, size: 192)
!1521 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1508, file: !30, line: 38, size: 192, elements: !1522)
!1522 = !{!1523, !1524, !1525, !1546}
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !1521, file: !30, line: 39, baseType: !1429, size: 32)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1521, file: !30, line: 40, baseType: !29, size: 32, offset: 32)
!1525 = !DIDerivedType(tag: DW_TAG_member, scope: !1521, file: !30, line: 41, baseType: !1526, size: 64, offset: 64)
!1526 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1521, file: !30, line: 41, size: 64, elements: !1527)
!1527 = !{!1528, !1536}
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "rmtp", scope: !1526, file: !30, line: 42, baseType: !1529, size: 64)
!1529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1530, size: 64)
!1530 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__kernel_timespec", file: !1531, line: 7, size: 128, elements: !1532)
!1531 = !DIFile(filename: "./include/uapi/linux/time_types.h", directory: "/home/lizy2001/genbc/linux")
!1532 = !{!1533, !1535}
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1530, file: !1531, line: 8, baseType: !1534, size: 64)
!1534 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_time64_t", file: !651, line: 93, baseType: !439)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1530, file: !1531, line: 9, baseType: !439, size: 64, offset: 64)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "compat_rmtp", scope: !1526, file: !30, line: 43, baseType: !1537, size: 64)
!1537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1538, size: 64)
!1538 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "old_timespec32", file: !1539, line: 7, size: 64, elements: !1540)
!1539 = !DIFile(filename: "./include/vdso/time32.h", directory: "/home/lizy2001/genbc/linux")
!1540 = !{!1541, !1545}
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1538, file: !1539, line: 8, baseType: !1542, size: 32)
!1542 = !DIDerivedType(tag: DW_TAG_typedef, name: "old_time32_t", file: !1539, line: 5, baseType: !1543)
!1543 = !DIDerivedType(tag: DW_TAG_typedef, name: "s32", file: !392, line: 20, baseType: !1544)
!1544 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s32", file: !394, line: 26, baseType: !37)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1538, file: !1539, line: 9, baseType: !1543, size: 32, offset: 32)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1521, file: !30, line: 45, baseType: !391, size: 64, offset: 128)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !1508, file: !30, line: 54, baseType: !1548, size: 256)
!1548 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1508, file: !30, line: 48, size: 256, elements: !1549)
!1549 = !{!1550, !1558, !1559, !1560, !1561}
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "ufds", scope: !1548, file: !30, line: 49, baseType: !1551, size: 64)
!1551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1552, size: 64)
!1552 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pollfd", file: !1553, line: 36, size: 64, elements: !1554)
!1553 = !DIFile(filename: "./include/uapi/asm-generic/poll.h", directory: "/home/lizy2001/genbc/linux")
!1554 = !{!1555, !1556, !1557}
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !1552, file: !1553, line: 37, baseType: !37, size: 32)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "events", scope: !1552, file: !1553, line: 38, baseType: !1300, size: 16, offset: 32)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "revents", scope: !1552, file: !1553, line: 39, baseType: !1300, size: 16, offset: 48)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "nfds", scope: !1548, file: !30, line: 50, baseType: !37, size: 32, offset: 64)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "has_timeout", scope: !1548, file: !30, line: 51, baseType: !37, size: 32, offset: 96)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1548, file: !30, line: 52, baseType: !372, size: 64, offset: 128)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1548, file: !30, line: 53, baseType: !372, size: 64, offset: 192)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !1312, file: !1313, line: 835, baseType: !1563, size: 32, offset: 5120)
!1563 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !337, line: 22, baseType: !1564)
!1564 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_pid_t", file: !651, line: 28, baseType: !37)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "tgid", scope: !1312, file: !1313, line: 836, baseType: !1563, size: 32, offset: 5152)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "stack_canary", scope: !1312, file: !1313, line: 840, baseType: !372, size: 64, offset: 5184)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "real_parent", scope: !1312, file: !1313, line: 849, baseType: !1311, size: 64, offset: 5248)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1312, file: !1313, line: 852, baseType: !1311, size: 64, offset: 5312)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1312, file: !1313, line: 857, baseType: !344, size: 128, offset: 5376)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !1312, file: !1313, line: 858, baseType: !344, size: 128, offset: 5504)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "group_leader", scope: !1312, file: !1313, line: 859, baseType: !1311, size: 64, offset: 5632)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "ptraced", scope: !1312, file: !1313, line: 867, baseType: !344, size: 128, offset: 5696)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_entry", scope: !1312, file: !1313, line: 868, baseType: !344, size: 128, offset: 5824)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "thread_pid", scope: !1312, file: !1313, line: 871, baseType: !1575, size: 64, offset: 5952)
!1575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1576, size: 64)
!1576 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pid", file: !1577, line: 59, size: 768, elements: !1578)
!1577 = !DIFile(filename: "./include/linux/pid.h", directory: "/home/lizy2001/genbc/linux")
!1578 = !{!1579, !1580, !1581, !1582, !1584, !1585, !1586, !1587}
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1576, file: !1577, line: 61, baseType: !1325, size: 32)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1576, file: !1577, line: 62, baseType: !7, size: 32, offset: 32)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1576, file: !1577, line: 63, baseType: !784, offset: 64)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !1576, file: !1577, line: 65, baseType: !1583, size: 256, offset: 64)
!1583 = !DICompositeType(tag: DW_TAG_array_type, baseType: !911, size: 256, elements: !1256)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "inodes", scope: !1576, file: !1577, line: 66, baseType: !911, size: 64, offset: 320)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "wait_pidfd", scope: !1576, file: !1577, line: 68, baseType: !1154, size: 128, offset: 384)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1576, file: !1577, line: 69, baseType: !359, size: 128, align: 64, offset: 512)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "numbers", scope: !1576, file: !1577, line: 70, baseType: !1588, size: 128, offset: 640)
!1588 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1589, size: 128, elements: !1470)
!1589 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "upid", file: !1577, line: 54, size: 128, elements: !1590)
!1590 = !{!1591, !1592}
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !1589, file: !1577, line: 55, baseType: !37, size: 32)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !1589, file: !1577, line: 56, baseType: !1593, size: 64, offset: 64)
!1593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1594, size: 64)
!1594 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pid_namespace", file: !1595, line: 20, size: 1088, elements: !1596)
!1595 = !DIFile(filename: "./include/linux/pid_namespace.h", directory: "/home/lizy2001/genbc/linux")
!1596 = !{!1597, !1602, !1616, !1617, !1618, !1619, !1622, !1623, !1624, !1900, !1901, !1902}
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !1594, file: !1595, line: 21, baseType: !1598, size: 32)
!1598 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kref", file: !1599, line: 19, size: 32, elements: !1600)
!1599 = !DIFile(filename: "./include/linux/kref.h", directory: "/home/lizy2001/genbc/linux")
!1600 = !{!1601}
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !1598, file: !1599, line: 20, baseType: !1325, size: 32)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "idr", scope: !1594, file: !1595, line: 22, baseType: !1603, size: 192, offset: 64)
!1603 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "idr", file: !1604, line: 19, size: 192, elements: !1605)
!1604 = !DIFile(filename: "./include/linux/idr.h", directory: "/home/lizy2001/genbc/linux")
!1605 = !{!1606, !1614, !1615}
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "idr_rt", scope: !1603, file: !1604, line: 20, baseType: !1607, size: 128)
!1607 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xarray", file: !1608, line: 292, size: 128, elements: !1609)
!1608 = !DIFile(filename: "./include/linux/xarray.h", directory: "/home/lizy2001/genbc/linux")
!1609 = !{!1610, !1611, !1613}
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "xa_lock", scope: !1607, file: !1608, line: 293, baseType: !784)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "xa_flags", scope: !1607, file: !1608, line: 295, baseType: !1612, size: 32)
!1612 = !DIDerivedType(tag: DW_TAG_typedef, name: "gfp_t", file: !337, line: 148, baseType: !7)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "xa_head", scope: !1607, file: !1608, line: 296, baseType: !625, size: 64, offset: 64)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "idr_base", scope: !1603, file: !1604, line: 21, baseType: !7, size: 32, offset: 128)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "idr_next", scope: !1603, file: !1604, line: 22, baseType: !7, size: 32, offset: 160)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1594, file: !1595, line: 23, baseType: !359, size: 128, align: 64, offset: 256)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "pid_allocated", scope: !1594, file: !1595, line: 24, baseType: !7, size: 32, offset: 384)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "child_reaper", scope: !1594, file: !1595, line: 25, baseType: !1311, size: 64, offset: 448)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "pid_cachep", scope: !1594, file: !1595, line: 26, baseType: !1620, size: 64, offset: 512)
!1620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1621, size: 64)
!1621 = !DICompositeType(tag: DW_TAG_structure_type, name: "kmem_cache", file: !681, line: 117, flags: DIFlagFwdDecl)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1594, file: !1595, line: 27, baseType: !7, size: 32, offset: 576)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1594, file: !1595, line: 28, baseType: !1593, size: 64, offset: 640)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1594, file: !1595, line: 32, baseType: !1625, size: 64, offset: 704)
!1625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1626, size: 64)
!1626 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "user_namespace", file: !1627, line: 56, size: 4160, elements: !1628)
!1627 = !DIFile(filename: "./include/linux/user_namespace.h", directory: "/home/lizy2001/genbc/linux")
!1628 = !{!1629, !1651, !1652, !1653, !1654, !1655, !1656, !1657, !1658, !1668, !1669, !1670, !1780, !1781, !1793, !1885, !1886, !1898}
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "uid_map", scope: !1626, file: !1627, line: 57, baseType: !1630, size: 576)
!1630 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uid_gid_map", file: !1627, line: 23, size: 576, elements: !1631)
!1631 = !{!1632, !1633}
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "nr_extents", scope: !1630, file: !1627, line: 24, baseType: !762, size: 32)
!1633 = !DIDerivedType(tag: DW_TAG_member, scope: !1630, file: !1627, line: 25, baseType: !1634, size: 512, offset: 64)
!1634 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1630, file: !1627, line: 25, size: 512, elements: !1635)
!1635 = !{!1636, !1645}
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "extent", scope: !1634, file: !1627, line: 26, baseType: !1637, size: 480)
!1637 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1638, size: 480, elements: !1643)
!1638 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uid_gid_extent", file: !1627, line: 17, size: 96, elements: !1639)
!1639 = !{!1640, !1641, !1642}
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !1638, file: !1627, line: 18, baseType: !762, size: 32)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "lower_first", scope: !1638, file: !1627, line: 19, baseType: !762, size: 32, offset: 32)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1638, file: !1627, line: 20, baseType: !762, size: 32, offset: 64)
!1643 = !{!1644}
!1644 = !DISubrange(count: 5)
!1645 = !DIDerivedType(tag: DW_TAG_member, scope: !1634, file: !1627, line: 27, baseType: !1646, size: 128)
!1646 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1634, file: !1627, line: 27, size: 128, elements: !1647)
!1647 = !{!1648, !1650}
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "forward", scope: !1646, file: !1627, line: 28, baseType: !1649, size: 64)
!1649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1638, size: 64)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "reverse", scope: !1646, file: !1627, line: 29, baseType: !1649, size: 64, offset: 64)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "gid_map", scope: !1626, file: !1627, line: 58, baseType: !1630, size: 576, offset: 576)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "projid_map", scope: !1626, file: !1627, line: 59, baseType: !1630, size: 576, offset: 1152)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1626, file: !1627, line: 60, baseType: !443, size: 32, offset: 1728)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1626, file: !1627, line: 61, baseType: !1625, size: 64, offset: 1792)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1626, file: !1627, line: 62, baseType: !37, size: 32, offset: 1856)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1626, file: !1627, line: 63, baseType: !704, size: 32, offset: 1888)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !1626, file: !1627, line: 64, baseType: !712, size: 32, offset: 1920)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !1626, file: !1627, line: 65, baseType: !1659, size: 192, offset: 1984)
!1659 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ns_common", file: !1660, line: 7, size: 192, elements: !1661)
!1660 = !DIFile(filename: "./include/linux/ns_common.h", directory: "/home/lizy2001/genbc/linux")
!1661 = !{!1662, !1663, !1667}
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "stashed", scope: !1659, file: !1660, line: 8, baseType: !431, size: 64)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1659, file: !1660, line: 9, baseType: !1664, size: 64, offset: 64)
!1664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1665, size: 64)
!1665 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1666)
!1666 = !DICompositeType(tag: DW_TAG_structure_type, name: "proc_ns_operations", file: !1660, line: 5, flags: DIFlagFwdDecl)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "inum", scope: !1659, file: !1660, line: 10, baseType: !7, size: 32, offset: 128)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1626, file: !1627, line: 66, baseType: !372, size: 64, offset: 2176)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "keyring_name_list", scope: !1626, file: !1627, line: 74, baseType: !344, size: 128, offset: 2240)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "user_keyring_register", scope: !1626, file: !1627, line: 75, baseType: !1671, size: 64, offset: 2368)
!1671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1672, size: 64)
!1672 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key", file: !1673, line: 189, size: 1664, elements: !1674)
!1673 = !DIFile(filename: "./include/linux/key.h", directory: "/home/lizy2001/genbc/linux")
!1674 = !{!1675, !1676, !1679, !1684, !1685, !1688, !1689, !1696, !1697, !1698, !1699, !1702, !1703, !1704, !1705, !1706, !1744, !1765}
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1672, file: !1673, line: 190, baseType: !1325, size: 32)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !1672, file: !1673, line: 191, baseType: !1677, size: 32, offset: 32)
!1677 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_serial_t", file: !1673, line: 28, baseType: !1678)
!1678 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !337, line: 98, baseType: !1543)
!1679 = !DIDerivedType(tag: DW_TAG_member, scope: !1672, file: !1673, line: 192, baseType: !1680, size: 192, offset: 64)
!1680 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1672, file: !1673, line: 192, size: 192, elements: !1681)
!1681 = !{!1682, !1683}
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "graveyard_link", scope: !1680, file: !1673, line: 193, baseType: !344, size: 128)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "serial_node", scope: !1680, file: !1673, line: 194, baseType: !493, size: 192, align: 64)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "sem", scope: !1672, file: !1673, line: 199, baseType: !1216, size: 256, offset: 256)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1672, file: !1673, line: 200, baseType: !1686, size: 64, offset: 512)
!1686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1687, size: 64)
!1687 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_user", file: !1673, line: 200, flags: DIFlagFwdDecl)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "security", scope: !1672, file: !1673, line: 201, baseType: !625, size: 64, offset: 576)
!1689 = !DIDerivedType(tag: DW_TAG_member, scope: !1672, file: !1673, line: 202, baseType: !1690, size: 64, offset: 640)
!1690 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1672, file: !1673, line: 202, size: 64, elements: !1691)
!1691 = !{!1692, !1695}
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "expiry", scope: !1690, file: !1673, line: 203, baseType: !1693, size: 64)
!1693 = !DIDerivedType(tag: DW_TAG_typedef, name: "time64_t", file: !1694, line: 8, baseType: !438)
!1694 = !DIFile(filename: "./include/linux/time64.h", directory: "/home/lizy2001/genbc/linux")
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "revoked_at", scope: !1690, file: !1673, line: 204, baseType: !1693, size: 64)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "last_used_at", scope: !1672, file: !1673, line: 206, baseType: !1693, size: 64, offset: 704)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1672, file: !1673, line: 207, baseType: !704, size: 32, offset: 768)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1672, file: !1673, line: 208, baseType: !712, size: 32, offset: 800)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !1672, file: !1673, line: 209, baseType: !1700, size: 32, offset: 832)
!1700 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_perm_t", file: !1673, line: 31, baseType: !1701)
!1701 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !337, line: 104, baseType: !762)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "quotalen", scope: !1672, file: !1673, line: 210, baseType: !532, size: 16, offset: 864)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "datalen", scope: !1672, file: !1673, line: 211, baseType: !532, size: 16, offset: 880)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1672, file: !1673, line: 215, baseType: !1300, size: 16, offset: 896)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1672, file: !1673, line: 222, baseType: !372, size: 64, offset: 960)
!1706 = !DIDerivedType(tag: DW_TAG_member, scope: !1672, file: !1673, line: 239, baseType: !1707, size: 320, offset: 1024)
!1707 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1672, file: !1673, line: 239, size: 320, elements: !1708)
!1708 = !{!1709, !1736}
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "index_key", scope: !1707, file: !1673, line: 240, baseType: !1710, size: 320)
!1710 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "keyring_index_key", file: !1673, line: 108, size: 320, elements: !1711)
!1711 = !{!1712, !1713, !1725, !1728, !1735}
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1710, file: !1673, line: 110, baseType: !372, size: 64)
!1713 = !DIDerivedType(tag: DW_TAG_member, scope: !1710, file: !1673, line: 111, baseType: !1714, size: 64, offset: 64)
!1714 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1710, file: !1673, line: 111, size: 64, elements: !1715)
!1715 = !{!1716, !1724}
!1716 = !DIDerivedType(tag: DW_TAG_member, scope: !1714, file: !1673, line: 112, baseType: !1717, size: 64)
!1717 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1714, file: !1673, line: 112, size: 64, elements: !1718)
!1718 = !{!1719, !1720}
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "desc_len", scope: !1717, file: !1673, line: 114, baseType: !1092, size: 16)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !1717, file: !1673, line: 115, baseType: !1721, size: 48, offset: 16)
!1721 = !DICompositeType(tag: DW_TAG_array_type, baseType: !328, size: 48, elements: !1722)
!1722 = !{!1723}
!1723 = !DISubrange(count: 6)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1714, file: !1673, line: 121, baseType: !372, size: 64)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1710, file: !1673, line: 123, baseType: !1726, size: 64, offset: 128)
!1726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1727, size: 64)
!1727 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_type", file: !1673, line: 96, flags: DIFlagFwdDecl)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !1710, file: !1673, line: 124, baseType: !1729, size: 64, offset: 192)
!1729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1730, size: 64)
!1730 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_tag", file: !1673, line: 102, size: 192, elements: !1731)
!1731 = !{!1732, !1733, !1734}
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1730, file: !1673, line: 103, baseType: !359, size: 128, align: 64)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1730, file: !1673, line: 104, baseType: !1325, size: 32, offset: 128)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "removed", scope: !1730, file: !1673, line: 105, baseType: !595, size: 8, offset: 160)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1710, file: !1673, line: 125, baseType: !352, size: 64, offset: 256)
!1736 = !DIDerivedType(tag: DW_TAG_member, scope: !1707, file: !1673, line: 241, baseType: !1737, size: 320)
!1737 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1707, file: !1673, line: 241, size: 320, elements: !1738)
!1738 = !{!1739, !1740, !1741, !1742, !1743}
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1737, file: !1673, line: 242, baseType: !372, size: 64)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "len_desc", scope: !1737, file: !1673, line: 243, baseType: !372, size: 64, offset: 64)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1737, file: !1673, line: 244, baseType: !1726, size: 64, offset: 128)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !1737, file: !1673, line: 245, baseType: !1729, size: 64, offset: 192)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1737, file: !1673, line: 246, baseType: !632, size: 64, offset: 256)
!1744 = !DIDerivedType(tag: DW_TAG_member, scope: !1672, file: !1673, line: 254, baseType: !1745, size: 256, offset: 1344)
!1745 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1672, file: !1673, line: 254, size: 256, elements: !1746)
!1746 = !{!1747, !1753}
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "payload", scope: !1745, file: !1673, line: 255, baseType: !1748, size: 256)
!1748 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "key_payload", file: !1673, line: 128, size: 256, elements: !1749)
!1749 = !{!1750, !1751}
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_data0", scope: !1748, file: !1673, line: 129, baseType: !625, size: 64)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1748, file: !1673, line: 130, baseType: !1752, size: 256)
!1752 = !DICompositeType(tag: DW_TAG_array_type, baseType: !625, size: 256, elements: !1256)
!1753 = !DIDerivedType(tag: DW_TAG_member, scope: !1745, file: !1673, line: 256, baseType: !1754, size: 256)
!1754 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1745, file: !1673, line: 256, size: 256, elements: !1755)
!1755 = !{!1756, !1757}
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "name_link", scope: !1754, file: !1673, line: 258, baseType: !344, size: 128)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !1754, file: !1673, line: 259, baseType: !1758, size: 128, offset: 128)
!1758 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array", file: !1759, line: 22, size: 128, elements: !1760)
!1759 = !DIFile(filename: "./include/linux/assoc_array.h", directory: "/home/lizy2001/genbc/linux")
!1760 = !{!1761, !1764}
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !1758, file: !1759, line: 23, baseType: !1762, size: 64)
!1762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1763, size: 64)
!1763 = !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array_ptr", file: !1759, line: 23, flags: DIFlagFwdDecl)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "nr_leaves_on_tree", scope: !1758, file: !1759, line: 24, baseType: !372, size: 64, offset: 64)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_link", scope: !1672, file: !1673, line: 274, baseType: !1766, size: 64, offset: 1600)
!1766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1767, size: 64)
!1767 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_restriction", file: !1673, line: 170, size: 192, elements: !1768)
!1768 = !{!1769, !1778, !1779}
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !1767, file: !1673, line: 171, baseType: !1770, size: 64)
!1770 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_restrict_link_func_t", file: !1673, line: 165, baseType: !1771)
!1771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1772, size: 64)
!1772 = !DISubroutineType(types: !1773)
!1773 = !{!37, !1671, !1774, !1776, !1671}
!1774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1775, size: 64)
!1775 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1727)
!1776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1777, size: 64)
!1777 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1748)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1767, file: !1673, line: 172, baseType: !1671, size: 64, offset: 64)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "keytype", scope: !1767, file: !1673, line: 173, baseType: !1726, size: 64, offset: 128)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "keyring_sem", scope: !1626, file: !1627, line: 76, baseType: !1216, size: 256, offset: 2432)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !1626, file: !1627, line: 83, baseType: !1782, size: 256, offset: 2688)
!1782 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "work_struct", file: !1783, line: 102, size: 256, elements: !1784)
!1783 = !DIFile(filename: "./include/linux/workqueue.h", directory: "/home/lizy2001/genbc/linux")
!1784 = !{!1785, !1786, !1787}
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1782, file: !1783, line: 103, baseType: !431, size: 64)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !1782, file: !1783, line: 104, baseType: !344, size: 128, offset: 64)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1782, file: !1783, line: 105, baseType: !1788, size: 64, offset: 192)
!1788 = !DIDerivedType(tag: DW_TAG_typedef, name: "work_func_t", file: !1783, line: 21, baseType: !1789)
!1789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1790, size: 64)
!1790 = !DISubroutineType(types: !1791)
!1791 = !{null, !1792}
!1792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1782, size: 64)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !1626, file: !1627, line: 85, baseType: !1794, size: 768, offset: 2944)
!1794 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_set", file: !1795, line: 156, size: 768, elements: !1796)
!1795 = !DIFile(filename: "./include/linux/sysctl.h", directory: "/home/lizy2001/genbc/linux")
!1796 = !{!1797, !1802}
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "is_seen", scope: !1794, file: !1795, line: 157, baseType: !1798, size: 64)
!1798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1799, size: 64)
!1799 = !DISubroutineType(types: !1800)
!1800 = !{!37, !1801}
!1801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1794, size: 64)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !1794, file: !1795, line: 158, baseType: !1803, size: 704, offset: 64)
!1803 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_dir", file: !1795, line: 150, size: 704, elements: !1804)
!1804 = !{!1805, !1884}
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !1803, file: !1795, line: 152, baseType: !1806, size: 640)
!1806 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_header", file: !1795, line: 131, size: 640, elements: !1807)
!1807 = !{!1808, !1841, !1853, !1854, !1874, !1875, !1877, !1883}
!1808 = !DIDerivedType(tag: DW_TAG_member, scope: !1806, file: !1795, line: 132, baseType: !1809, size: 192)
!1809 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1806, file: !1795, line: 132, size: 192, elements: !1810)
!1810 = !{!1811, !1840}
!1811 = !DIDerivedType(tag: DW_TAG_member, scope: !1809, file: !1795, line: 133, baseType: !1812, size: 192)
!1812 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1809, file: !1795, line: 133, size: 192, elements: !1813)
!1813 = !{!1814, !1837, !1838, !1839}
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "ctl_table", scope: !1812, file: !1795, line: 134, baseType: !1815, size: 64)
!1815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1816, size: 64)
!1816 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table", file: !1795, line: 112, size: 512, elements: !1817)
!1817 = !{!1818, !1819, !1820, !1821, !1822, !1823, !1829, !1835, !1836}
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "procname", scope: !1816, file: !1795, line: 113, baseType: !352, size: 64)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1816, file: !1795, line: 114, baseType: !625, size: 64, offset: 64)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "maxlen", scope: !1816, file: !1795, line: 115, baseType: !37, size: 32, offset: 128)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1816, file: !1795, line: 116, baseType: !701, size: 16, offset: 160)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !1816, file: !1795, line: 117, baseType: !1815, size: 64, offset: 192)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "proc_handler", scope: !1816, file: !1795, line: 118, baseType: !1824, size: 64, offset: 256)
!1824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1825, size: 64)
!1825 = !DIDerivedType(tag: DW_TAG_typedef, name: "proc_handler", file: !1795, line: 47, baseType: !1826)
!1826 = !DISubroutineType(types: !1827)
!1827 = !{!37, !1815, !37, !625, !1828, !1023}
!1828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !649, size: 64)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !1816, file: !1795, line: 119, baseType: !1830, size: 64, offset: 320)
!1830 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1831, size: 64)
!1831 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_poll", file: !1795, line: 94, size: 192, elements: !1832)
!1832 = !{!1833, !1834}
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !1831, file: !1795, line: 95, baseType: !443, size: 32)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !1831, file: !1795, line: 96, baseType: !1154, size: 128, offset: 64)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "extra1", scope: !1816, file: !1795, line: 120, baseType: !625, size: 64, offset: 384)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "extra2", scope: !1816, file: !1795, line: 121, baseType: !625, size: 64, offset: 448)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !1812, file: !1795, line: 135, baseType: !37, size: 32, offset: 64)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1812, file: !1795, line: 136, baseType: !37, size: 32, offset: 96)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "nreg", scope: !1812, file: !1795, line: 137, baseType: !37, size: 32, offset: 128)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1809, file: !1795, line: 139, baseType: !359, size: 128, align: 64)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "unregistering", scope: !1806, file: !1795, line: 141, baseType: !1842, size: 64, offset: 192)
!1842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1843, size: 64)
!1843 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "completion", file: !1844, line: 26, size: 192, elements: !1845)
!1844 = !DIFile(filename: "./include/linux/completion.h", directory: "/home/lizy2001/genbc/linux")
!1845 = !{!1846, !1847}
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !1843, file: !1844, line: 27, baseType: !7, size: 32)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !1843, file: !1844, line: 28, baseType: !1848, size: 128, offset: 64)
!1848 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swait_queue_head", file: !1849, line: 43, size: 128, elements: !1850)
!1849 = !DIFile(filename: "./include/linux/swait.h", directory: "/home/lizy2001/genbc/linux")
!1850 = !{!1851, !1852}
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1848, file: !1849, line: 44, baseType: !1222)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "task_list", scope: !1848, file: !1849, line: 45, baseType: !344, size: 128)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "ctl_table_arg", scope: !1806, file: !1795, line: 142, baseType: !1815, size: 64, offset: 256)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !1806, file: !1795, line: 143, baseType: !1855, size: 64, offset: 320)
!1855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1856, size: 64)
!1856 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_table_root", file: !1795, line: 161, size: 960, elements: !1857)
!1857 = !{!1858, !1859, !1863, !1870}
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "default_set", scope: !1856, file: !1795, line: 162, baseType: !1794, size: 768)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !1856, file: !1795, line: 163, baseType: !1860, size: 64, offset: 768)
!1860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1861, size: 64)
!1861 = !DISubroutineType(types: !1862)
!1862 = !{!1801, !1855}
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "set_ownership", scope: !1856, file: !1795, line: 164, baseType: !1864, size: 64, offset: 832)
!1864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1865, size: 64)
!1865 = !DISubroutineType(types: !1866)
!1866 = !{null, !1867, !1815, !1868, !1869}
!1867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1806, size: 64)
!1868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !704, size: 64)
!1869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !712, size: 64)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "permissions", scope: !1856, file: !1795, line: 167, baseType: !1871, size: 64, offset: 896)
!1871 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1872, size: 64)
!1872 = !DISubroutineType(types: !1873)
!1873 = !{!37, !1867, !1815}
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !1806, file: !1795, line: 144, baseType: !1801, size: 64, offset: 384)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1806, file: !1795, line: 145, baseType: !1876, size: 64, offset: 448)
!1876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1803, size: 64)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1806, file: !1795, line: 146, baseType: !1878, size: 64, offset: 512)
!1878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1879, size: 64)
!1879 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ctl_node", file: !1795, line: 124, size: 256, elements: !1880)
!1880 = !{!1881, !1882}
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1879, file: !1795, line: 125, baseType: !493, size: 192, align: 64)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !1879, file: !1795, line: 126, baseType: !1867, size: 64, offset: 192)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "inodes", scope: !1806, file: !1795, line: 147, baseType: !911, size: 64, offset: 576)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !1803, file: !1795, line: 153, baseType: !1187, size: 64, offset: 640)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "sysctls", scope: !1626, file: !1627, line: 86, baseType: !1867, size: 64, offset: 3712)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "ucounts", scope: !1626, file: !1627, line: 88, baseType: !1887, size: 64, offset: 3776)
!1887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1888, size: 64)
!1888 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ucounts", file: !1627, line: 92, size: 576, elements: !1889)
!1889 = !{!1890, !1891, !1892, !1893, !1894}
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1888, file: !1627, line: 93, baseType: !336, size: 128)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !1888, file: !1627, line: 94, baseType: !1625, size: 64, offset: 128)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1888, file: !1627, line: 95, baseType: !704, size: 32, offset: 192)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1888, file: !1627, line: 96, baseType: !37, size: 32, offset: 224)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "ucount", scope: !1888, file: !1627, line: 97, baseType: !1895, size: 320, offset: 256)
!1895 = !DICompositeType(tag: DW_TAG_array_type, baseType: !443, size: 320, elements: !1896)
!1896 = !{!1897}
!1897 = !DISubrange(count: 10)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "ucount_max", scope: !1626, file: !1627, line: 89, baseType: !1899, size: 320, offset: 3840)
!1899 = !DICompositeType(tag: DW_TAG_array_type, baseType: !37, size: 320, elements: !1896)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "ucounts", scope: !1594, file: !1595, line: 33, baseType: !1887, size: 64, offset: 768)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "reboot", scope: !1594, file: !1595, line: 34, baseType: !37, size: 32, offset: 832)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !1594, file: !1595, line: 35, baseType: !1659, size: 192, offset: 896)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "pid_links", scope: !1312, file: !1313, line: 872, baseType: !1904, size: 512, offset: 6016)
!1904 = !DICompositeType(tag: DW_TAG_array_type, baseType: !336, size: 512, elements: !1256)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "thread_group", scope: !1312, file: !1313, line: 873, baseType: !344, size: 128, offset: 6528)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "thread_node", scope: !1312, file: !1313, line: 874, baseType: !344, size: 128, offset: 6656)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "vfork_done", scope: !1312, file: !1313, line: 876, baseType: !1842, size: 64, offset: 6784)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "set_child_tid", scope: !1312, file: !1313, line: 879, baseType: !594, size: 64, offset: 6848)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "clear_child_tid", scope: !1312, file: !1313, line: 882, baseType: !594, size: 64, offset: 6912)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1312, file: !1313, line: 884, baseType: !391, size: 64, offset: 6976)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1312, file: !1313, line: 885, baseType: !391, size: 64, offset: 7040)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !1312, file: !1313, line: 890, baseType: !391, size: 64, offset: 7104)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !1312, file: !1313, line: 891, baseType: !1914, size: 128, offset: 7168)
!1914 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "prev_cputime", file: !1313, line: 242, size: 128, elements: !1915)
!1915 = !{!1916, !1917, !1918}
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1914, file: !1313, line: 244, baseType: !391, size: 64)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1914, file: !1313, line: 245, baseType: !391, size: 64, offset: 64)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1914, file: !1313, line: 246, baseType: !1222, offset: 128)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !1312, file: !1313, line: 900, baseType: !372, size: 64, offset: 7296)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !1312, file: !1313, line: 901, baseType: !372, size: 64, offset: 7360)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "start_time", scope: !1312, file: !1313, line: 904, baseType: !391, size: 64, offset: 7424)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "start_boottime", scope: !1312, file: !1313, line: 907, baseType: !391, size: 64, offset: 7488)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !1312, file: !1313, line: 910, baseType: !372, size: 64, offset: 7552)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !1312, file: !1313, line: 911, baseType: !372, size: 64, offset: 7616)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !1312, file: !1313, line: 914, baseType: !1926, size: 640, offset: 7680)
!1926 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers", file: !1927, line: 123, size: 640, elements: !1928)
!1927 = !DIFile(filename: "./include/linux/posix-timers.h", directory: "/home/lizy2001/genbc/linux")
!1928 = !{!1929, !1935, !1936}
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "bases", scope: !1926, file: !1927, line: 124, baseType: !1930, size: 576)
!1930 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1931, size: 576, elements: !921)
!1931 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimer_base", file: !1927, line: 108, size: 192, elements: !1932)
!1932 = !{!1933, !1934}
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "nextevt", scope: !1931, file: !1927, line: 109, baseType: !391, size: 64)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "tqhead", scope: !1931, file: !1927, line: 110, baseType: !1438, size: 128, offset: 64)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "timers_active", scope: !1926, file: !1927, line: 125, baseType: !7, size: 32, offset: 576)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "expiry_active", scope: !1926, file: !1927, line: 126, baseType: !7, size: 32, offset: 608)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers_work", scope: !1312, file: !1313, line: 917, baseType: !1938, size: 192, offset: 8320)
!1938 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers_work", file: !1927, line: 134, size: 192, elements: !1939)
!1939 = !{!1940, !1941}
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !1938, file: !1927, line: 135, baseType: !359, size: 128, align: 64)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "scheduled", scope: !1938, file: !1927, line: 136, baseType: !7, size: 32, offset: 128)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "ptracer_cred", scope: !1312, file: !1313, line: 923, baseType: !1943, size: 64, offset: 8512)
!1943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1944, size: 64)
!1944 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1945)
!1945 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cred", file: !1946, line: 111, size: 1280, elements: !1947)
!1946 = !DIFile(filename: "./include/linux/cred.h", directory: "/home/lizy2001/genbc/linux")
!1947 = !{!1948, !1949, !1950, !1951, !1952, !1953, !1954, !1955, !1956, !1957, !1958, !1965, !1966, !1967, !1968, !1969, !1970, !1971, !1972, !1973, !1974, !2000, !2001, !2011}
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1945, file: !1946, line: 112, baseType: !443, size: 32)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1945, file: !1946, line: 120, baseType: !704, size: 32, offset: 32)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1945, file: !1946, line: 121, baseType: !712, size: 32, offset: 64)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "suid", scope: !1945, file: !1946, line: 122, baseType: !704, size: 32, offset: 96)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "sgid", scope: !1945, file: !1946, line: 123, baseType: !712, size: 32, offset: 128)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !1945, file: !1946, line: 124, baseType: !704, size: 32, offset: 160)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "egid", scope: !1945, file: !1946, line: 125, baseType: !712, size: 32, offset: 192)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "fsuid", scope: !1945, file: !1946, line: 126, baseType: !704, size: 32, offset: 224)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "fsgid", scope: !1945, file: !1946, line: 127, baseType: !712, size: 32, offset: 256)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "securebits", scope: !1945, file: !1946, line: 128, baseType: !7, size: 32, offset: 288)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "cap_inheritable", scope: !1945, file: !1946, line: 129, baseType: !1959, size: 64, offset: 320)
!1959 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_cap_t", file: !1960, line: 26, baseType: !1961)
!1960 = !DIFile(filename: "./include/linux/capability.h", directory: "/home/lizy2001/genbc/linux")
!1961 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_cap_struct", file: !1960, line: 24, size: 64, elements: !1962)
!1962 = !{!1963}
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !1961, file: !1960, line: 25, baseType: !1964, size: 64)
!1964 = !DICompositeType(tag: DW_TAG_array_type, baseType: !523, size: 64, elements: !533)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "cap_permitted", scope: !1945, file: !1946, line: 130, baseType: !1959, size: 64, offset: 384)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "cap_effective", scope: !1945, file: !1946, line: 131, baseType: !1959, size: 64, offset: 448)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "cap_bset", scope: !1945, file: !1946, line: 132, baseType: !1959, size: 64, offset: 512)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "cap_ambient", scope: !1945, file: !1946, line: 133, baseType: !1959, size: 64, offset: 576)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "jit_keyring", scope: !1945, file: !1946, line: 135, baseType: !549, size: 8, offset: 640)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "session_keyring", scope: !1945, file: !1946, line: 137, baseType: !1671, size: 64, offset: 704)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "process_keyring", scope: !1945, file: !1946, line: 138, baseType: !1671, size: 64, offset: 768)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "thread_keyring", scope: !1945, file: !1946, line: 139, baseType: !1671, size: 64, offset: 832)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "request_key_auth", scope: !1945, file: !1946, line: 140, baseType: !1671, size: 64, offset: 896)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1945, file: !1946, line: 145, baseType: !1975, size: 64, offset: 960)
!1975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1976, size: 64)
!1976 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "user_struct", file: !1977, line: 13, size: 896, elements: !1978)
!1977 = !DIFile(filename: "./include/linux/sched/user.h", directory: "/home/lizy2001/genbc/linux")
!1978 = !{!1979, !1980, !1981, !1982, !1983, !1984, !1985, !1986, !1987, !1988, !1989}
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !1976, file: !1977, line: 14, baseType: !1325, size: 32)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "processes", scope: !1976, file: !1977, line: 15, baseType: !443, size: 32, offset: 32)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "sigpending", scope: !1976, file: !1977, line: 16, baseType: !443, size: 32, offset: 64)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "epoll_watches", scope: !1976, file: !1977, line: 21, baseType: !431, size: 64, offset: 128)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "locked_shm", scope: !1976, file: !1977, line: 27, baseType: !372, size: 64, offset: 192)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "unix_inflight", scope: !1976, file: !1977, line: 28, baseType: !372, size: 64, offset: 256)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "pipe_bufs", scope: !1976, file: !1977, line: 29, baseType: !431, size: 64, offset: 320)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "uidhash_node", scope: !1976, file: !1977, line: 32, baseType: !336, size: 128, offset: 384)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1976, file: !1977, line: 33, baseType: !704, size: 32, offset: 512)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !1976, file: !1977, line: 37, baseType: !431, size: 64, offset: 576)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "ratelimit", scope: !1976, file: !1977, line: 44, baseType: !1990, size: 256, offset: 640)
!1990 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ratelimit_state", file: !1991, line: 15, size: 256, elements: !1992)
!1991 = !DIFile(filename: "./include/linux/ratelimit_types.h", directory: "/home/lizy2001/genbc/linux")
!1992 = !{!1993, !1994, !1995, !1996, !1997, !1998, !1999}
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1990, file: !1991, line: 16, baseType: !1222)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !1990, file: !1991, line: 18, baseType: !37, size: 32)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "burst", scope: !1990, file: !1991, line: 19, baseType: !37, size: 32, offset: 32)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "printed", scope: !1990, file: !1991, line: 20, baseType: !37, size: 32, offset: 64)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "missed", scope: !1990, file: !1991, line: 21, baseType: !37, size: 32, offset: 96)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !1990, file: !1991, line: 22, baseType: !372, size: 64, offset: 128)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1990, file: !1991, line: 23, baseType: !372, size: 64, offset: 192)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1945, file: !1946, line: 146, baseType: !1625, size: 64, offset: 1024)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "group_info", scope: !1945, file: !1946, line: 147, baseType: !2002, size: 64, offset: 1088)
!2002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2003, size: 64)
!2003 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group_info", file: !1946, line: 25, size: 64, elements: !2004)
!2004 = !{!2005, !2006, !2007}
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !2003, file: !1946, line: 26, baseType: !443, size: 32)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "ngroups", scope: !2003, file: !1946, line: 27, baseType: !37, size: 32, offset: 32)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !2003, file: !1946, line: 28, baseType: !2008, offset: 64)
!2008 = !DICompositeType(tag: DW_TAG_array_type, baseType: !712, elements: !2009)
!2009 = !{!2010}
!2010 = !DISubrange(count: 0)
!2011 = !DIDerivedType(tag: DW_TAG_member, scope: !1945, file: !1946, line: 149, baseType: !2012, size: 128, offset: 1152)
!2012 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1945, file: !1946, line: 149, size: 128, elements: !2013)
!2013 = !{!2014, !2015}
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "non_rcu", scope: !2012, file: !1946, line: 150, baseType: !37, size: 32)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2012, file: !1946, line: 151, baseType: !359, size: 128, align: 64)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "real_cred", scope: !1312, file: !1313, line: 926, baseType: !1943, size: 64, offset: 8576)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "cred", scope: !1312, file: !1313, line: 929, baseType: !1943, size: 64, offset: 8640)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "cached_requested_key", scope: !1312, file: !1313, line: 933, baseType: !1671, size: 64, offset: 8704)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "comm", scope: !1312, file: !1313, line: 943, baseType: !327, size: 128, offset: 8768)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "nameidata", scope: !1312, file: !1313, line: 945, baseType: !2021, size: 64, offset: 8896)
!2021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2022, size: 64)
!2022 = !DICompositeType(tag: DW_TAG_structure_type, name: "nameidata", file: !1313, line: 49, flags: DIFlagFwdDecl)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !1312, file: !1313, line: 956, baseType: !2024, size: 64, offset: 8960)
!2024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2025, size: 64)
!2025 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_struct", file: !1313, line: 45, flags: DIFlagFwdDecl)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !1312, file: !1313, line: 959, baseType: !2027, size: 64, offset: 9024)
!2027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2028, size: 64)
!2028 = !DICompositeType(tag: DW_TAG_structure_type, name: "files_struct", file: !1313, line: 959, flags: DIFlagFwdDecl)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "io_uring", scope: !1312, file: !1313, line: 962, baseType: !2030, size: 64, offset: 9088)
!2030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2031, size: 64)
!2031 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_uring_task", file: !1313, line: 66, flags: DIFlagFwdDecl)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "nsproxy", scope: !1312, file: !1313, line: 966, baseType: !2033, size: 64, offset: 9152)
!2033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2034, size: 64)
!2034 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nsproxy", file: !2035, line: 31, size: 576, elements: !2036)
!2035 = !DIFile(filename: "./include/linux/nsproxy.h", directory: "/home/lizy2001/genbc/linux")
!2036 = !{!2037, !2038, !2041, !2044, !2047, !2048, !3702, !3705, !3706}
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2034, file: !2035, line: 32, baseType: !443, size: 32)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "uts_ns", scope: !2034, file: !2035, line: 33, baseType: !2039, size: 64, offset: 64)
!2039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2040, size: 64)
!2040 = !DICompositeType(tag: DW_TAG_structure_type, name: "uts_namespace", file: !2035, line: 9, flags: DIFlagFwdDecl)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "ipc_ns", scope: !2034, file: !2035, line: 34, baseType: !2042, size: 64, offset: 128)
!2042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2043, size: 64)
!2043 = !DICompositeType(tag: DW_TAG_structure_type, name: "ipc_namespace", file: !2035, line: 10, flags: DIFlagFwdDecl)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_ns", scope: !2034, file: !2035, line: 35, baseType: !2045, size: 64, offset: 192)
!2045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2046, size: 64)
!2046 = !DICompositeType(tag: DW_TAG_structure_type, name: "mnt_namespace", file: !2035, line: 8, flags: DIFlagFwdDecl)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "pid_ns_for_children", scope: !2034, file: !2035, line: 36, baseType: !1593, size: 64, offset: 256)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "net_ns", scope: !2034, file: !2035, line: 37, baseType: !2049, size: 64, offset: 320)
!2049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2050, size: 64)
!2050 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "net", file: !2051, line: 56, size: 16896, elements: !2052)
!2051 = !DIFile(filename: "./include/net/net_namespace.h", directory: "/home/lizy2001/genbc/linux")
!2052 = !{!2053, !2054, !2055, !2056, !2057, !2058, !2059, !2060, !2061, !2062, !2063, !2064, !2065, !2066, !2067, !2068, !2069, !2070, !2074, !2075, !2076, !2077, !2078, !2081, !2083, !2084, !2099, !2100, !2101, !2102, !2112, !2181, !2187, !2193, !2206, !2600, !3027, !3028, !3031, !3674, !3675, !3701}
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "passive", scope: !2050, file: !2051, line: 60, baseType: !1325, size: 32)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2050, file: !2051, line: 63, baseType: !1325, size: 32, offset: 32)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "rules_mod_lock", scope: !2050, file: !2051, line: 66, baseType: !784, offset: 64)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "dev_unreg_count", scope: !2050, file: !2051, line: 68, baseType: !7, size: 32, offset: 64)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "dev_base_seq", scope: !2050, file: !2051, line: 70, baseType: !7, size: 32, offset: 96)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "ifindex", scope: !2050, file: !2051, line: 71, baseType: !37, size: 32, offset: 128)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "nsid_lock", scope: !2050, file: !2051, line: 73, baseType: !784, offset: 160)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "fnhe_genid", scope: !2050, file: !2051, line: 74, baseType: !443, size: 32, offset: 160)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2050, file: !2051, line: 76, baseType: !344, size: 128, offset: 192)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "exit_list", scope: !2050, file: !2051, line: 77, baseType: !344, size: 128, offset: 320)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup_list", scope: !2050, file: !2051, line: 83, baseType: !1046, size: 64, offset: 448)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "key_domain", scope: !2050, file: !2051, line: 86, baseType: !1729, size: 64, offset: 512)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !2050, file: !2051, line: 88, baseType: !1625, size: 64, offset: 576)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "ucounts", scope: !2050, file: !2051, line: 89, baseType: !1887, size: 64, offset: 640)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "netns_ids", scope: !2050, file: !2051, line: 90, baseType: !1603, size: 192, offset: 704)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !2050, file: !2051, line: 92, baseType: !1659, size: 192, offset: 896)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "dev_base_head", scope: !2050, file: !2051, line: 94, baseType: !344, size: 128, offset: 1088)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "proc_net", scope: !2050, file: !2051, line: 95, baseType: !2071, size: 64, offset: 1216)
!2071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2072, size: 64)
!2072 = !DICompositeType(tag: DW_TAG_structure_type, name: "proc_dir_entry", file: !2073, line: 17, flags: DIFlagFwdDecl)
!2073 = !DIFile(filename: "./include/net/netns/mib.h", directory: "/home/lizy2001/genbc/linux")
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "proc_net_stat", scope: !2050, file: !2051, line: 96, baseType: !2071, size: 64, offset: 1280)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "sysctls", scope: !2050, file: !2051, line: 99, baseType: !1794, size: 768, offset: 1344)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "rtnl", scope: !2050, file: !2051, line: 102, baseType: !505, size: 64, offset: 2112)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "genl_sock", scope: !2050, file: !2051, line: 103, baseType: !505, size: 64, offset: 2176)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_sock", scope: !2050, file: !2051, line: 105, baseType: !2079, size: 64, offset: 2240)
!2079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2080, size: 64)
!2080 = !DICompositeType(tag: DW_TAG_structure_type, name: "uevent_sock", file: !2051, line: 48, flags: DIFlagFwdDecl)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name_head", scope: !2050, file: !2051, line: 107, baseType: !2082, size: 64, offset: 2304)
!2082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !911, size: 64)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "dev_index_head", scope: !2050, file: !2051, line: 108, baseType: !2082, size: 64, offset: 2368)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "netdev_chain", scope: !2050, file: !2051, line: 109, baseType: !2085, size: 64, offset: 2432)
!2085 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raw_notifier_head", file: !2086, line: 70, size: 64, elements: !2087)
!2086 = !DIFile(filename: "./include/linux/notifier.h", directory: "/home/lizy2001/genbc/linux")
!2087 = !{!2088}
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2085, file: !2086, line: 71, baseType: !2089, size: 64)
!2089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2090, size: 64)
!2090 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "notifier_block", file: !2086, line: 54, size: 192, elements: !2091)
!2091 = !{!2092, !2097, !2098}
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_call", scope: !2090, file: !2086, line: 55, baseType: !2093, size: 64)
!2093 = !DIDerivedType(tag: DW_TAG_typedef, name: "notifier_fn_t", file: !2086, line: 51, baseType: !2094)
!2094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2095, size: 64)
!2095 = !DISubroutineType(types: !2096)
!2096 = !{!37, !2089, !372, !625}
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2090, file: !2086, line: 56, baseType: !2089, size: 64, offset: 64)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "priority", scope: !2090, file: !2086, line: 57, baseType: !37, size: 32, offset: 128)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "hash_mix", scope: !2050, file: !2051, line: 114, baseType: !762, size: 32, offset: 2496)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "loopback_dev", scope: !2050, file: !2051, line: 116, baseType: !350, size: 64, offset: 2560)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "rules_ops", scope: !2050, file: !2051, line: 119, baseType: !344, size: 128, offset: 2624)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "core", scope: !2050, file: !2051, line: 121, baseType: !2103, size: 256, offset: 2752)
!2103 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_core", file: !2104, line: 8, size: 256, elements: !2105)
!2104 = !DIFile(filename: "./include/net/netns/core.h", directory: "/home/lizy2001/genbc/linux")
!2105 = !{!2106, !2107, !2108, !2109}
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_hdr", scope: !2103, file: !2104, line: 10, baseType: !1867, size: 64)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_somaxconn", scope: !2103, file: !2104, line: 12, baseType: !37, size: 32, offset: 64)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "sock_inuse", scope: !2103, file: !2104, line: 15, baseType: !594, size: 64, offset: 128)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "prot_inuse", scope: !2103, file: !2104, line: 16, baseType: !2110, size: 64, offset: 192)
!2110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2111, size: 64)
!2111 = !DICompositeType(tag: DW_TAG_structure_type, name: "prot_inuse", file: !2104, line: 6, flags: DIFlagFwdDecl)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "mib", scope: !2050, file: !2051, line: 122, baseType: !2113, size: 832, offset: 3008)
!2113 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_mib", file: !2073, line: 7, size: 832, elements: !2114)
!2114 = !{!2115, !2122, !2133, !2141, !2149, !2150, !2158, !2166, !2167, !2168, !2169, !2170, !2176}
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_statistics", scope: !2113, file: !2073, line: 8, baseType: !2116, size: 64)
!2116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2117, size: 64)
!2117 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tcp_mib", file: !2118, line: 92, size: 1024, elements: !2119)
!2118 = !DIFile(filename: "./include/net/snmp.h", directory: "/home/lizy2001/genbc/linux")
!2119 = !{!2120}
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !2117, file: !2118, line: 93, baseType: !2121, size: 1024)
!2121 = !DICompositeType(tag: DW_TAG_array_type, baseType: !372, size: 1024, elements: !329)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "ip_statistics", scope: !2113, file: !2073, line: 9, baseType: !2123, size: 64, offset: 64)
!2123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2124, size: 64)
!2124 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ipstats_mib", file: !2118, line: 51, size: 2368, elements: !2125)
!2125 = !{!2126, !2130}
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !2124, file: !2118, line: 53, baseType: !2127, size: 2368)
!2127 = !DICompositeType(tag: DW_TAG_array_type, baseType: !391, size: 2368, elements: !2128)
!2128 = !{!2129}
!2129 = !DISubrange(count: 37)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "syncp", scope: !2124, file: !2118, line: 54, baseType: !2131, offset: 2368)
!2131 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "u64_stats_sync", file: !2132, line: 68, elements: !798)
!2132 = !DIFile(filename: "./include/linux/u64_stats_sync.h", directory: "/home/lizy2001/genbc/linux")
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "net_statistics", scope: !2113, file: !2073, line: 10, baseType: !2134, size: 64, offset: 128)
!2134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2135, size: 64)
!2135 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "linux_mib", file: !2118, line: 104, size: 7936, elements: !2136)
!2136 = !{!2137}
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !2135, file: !2118, line: 105, baseType: !2138, size: 7936)
!2138 = !DICompositeType(tag: DW_TAG_array_type, baseType: !372, size: 7936, elements: !2139)
!2139 = !{!2140}
!2140 = !DISubrange(count: 124)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "udp_statistics", scope: !2113, file: !2073, line: 11, baseType: !2142, size: 64, offset: 192)
!2142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2143, size: 64)
!2143 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "udp_mib", file: !2118, line: 98, size: 576, elements: !2144)
!2144 = !{!2145}
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !2143, file: !2118, line: 99, baseType: !2146, size: 576)
!2146 = !DICompositeType(tag: DW_TAG_array_type, baseType: !372, size: 576, elements: !2147)
!2147 = !{!2148}
!2148 = !DISubrange(count: 9)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "udplite_statistics", scope: !2113, file: !2073, line: 12, baseType: !2142, size: 64, offset: 256)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "icmp_statistics", scope: !2113, file: !2073, line: 13, baseType: !2151, size: 64, offset: 320)
!2151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2152, size: 64)
!2152 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "icmp_mib", file: !2118, line: 59, size: 1792, elements: !2153)
!2153 = !{!2154}
!2154 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !2152, file: !2118, line: 60, baseType: !2155, size: 1792)
!2155 = !DICompositeType(tag: DW_TAG_array_type, baseType: !372, size: 1792, elements: !2156)
!2156 = !{!2157}
!2157 = !DISubrange(count: 28)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "icmpmsg_statistics", scope: !2113, file: !2073, line: 14, baseType: !2159, size: 64, offset: 384)
!2159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2160, size: 64)
!2160 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "icmpmsg_mib", file: !2118, line: 64, size: 32768, elements: !2161)
!2161 = !{!2162}
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !2160, file: !2118, line: 65, baseType: !2163, size: 32768)
!2163 = !DICompositeType(tag: DW_TAG_array_type, baseType: !431, size: 32768, elements: !2164)
!2164 = !{!2165}
!2165 = !DISubrange(count: 512)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "proc_net_devsnmp6", scope: !2113, file: !2073, line: 17, baseType: !2071, size: 64, offset: 448)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "udp_stats_in6", scope: !2113, file: !2073, line: 18, baseType: !2142, size: 64, offset: 512)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "udplite_stats_in6", scope: !2113, file: !2073, line: 19, baseType: !2142, size: 64, offset: 576)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "ipv6_statistics", scope: !2113, file: !2073, line: 20, baseType: !2123, size: 64, offset: 640)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_statistics", scope: !2113, file: !2073, line: 21, baseType: !2171, size: 64, offset: 704)
!2171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2172, size: 64)
!2172 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "icmpv6_mib", file: !2118, line: 71, size: 384, elements: !2173)
!2173 = !{!2174}
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !2172, file: !2118, line: 72, baseType: !2175, size: 384)
!2175 = !DICompositeType(tag: DW_TAG_array_type, baseType: !372, size: 384, elements: !1722)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6msg_statistics", scope: !2113, file: !2073, line: 22, baseType: !2177, size: 64, offset: 768)
!2177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2178, size: 64)
!2178 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "icmpv6msg_mib", file: !2118, line: 81, size: 32768, elements: !2179)
!2179 = !{!2180}
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !2178, file: !2118, line: 82, baseType: !2163, size: 32768)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "packet", scope: !2050, file: !2051, line: 123, baseType: !2182, size: 256, offset: 3840)
!2182 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_packet", file: !2183, line: 11, size: 256, elements: !2184)
!2183 = !DIFile(filename: "./include/net/netns/packet.h", directory: "/home/lizy2001/genbc/linux")
!2184 = !{!2185, !2186}
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "sklist_lock", scope: !2182, file: !2183, line: 12, baseType: !1008, size: 192)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "sklist", scope: !2182, file: !2183, line: 13, baseType: !911, size: 64, offset: 192)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "unx", scope: !2050, file: !2051, line: 124, baseType: !2188, size: 128, offset: 4096)
!2188 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_unix", file: !2189, line: 9, size: 128, elements: !2190)
!2189 = !DIFile(filename: "./include/net/netns/unix.h", directory: "/home/lizy2001/genbc/linux")
!2190 = !{!2191, !2192}
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_max_dgram_qlen", scope: !2188, file: !2189, line: 10, baseType: !37, size: 32)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "ctl", scope: !2188, file: !2189, line: 11, baseType: !1867, size: 64, offset: 64)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "nexthop", scope: !2050, file: !2051, line: 125, baseType: !2194, size: 512, offset: 4224)
!2194 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_nexthop", file: !2195, line: 11, size: 512, elements: !2196)
!2195 = !DIFile(filename: "./include/net/netns/nexthop.h", directory: "/home/lizy2001/genbc/linux")
!2196 = !{!2197, !2198, !2199, !2200, !2201}
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !2194, file: !2195, line: 12, baseType: !1187, size: 64)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "devhash", scope: !2194, file: !2195, line: 13, baseType: !2082, size: 64, offset: 64)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !2194, file: !2195, line: 15, baseType: !7, size: 32, offset: 128)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "last_id_allocated", scope: !2194, file: !2195, line: 16, baseType: !762, size: 32, offset: 160)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_chain", scope: !2194, file: !2195, line: 17, baseType: !2202, size: 320, offset: 192)
!2202 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blocking_notifier_head", file: !2086, line: 65, size: 320, elements: !2203)
!2203 = !{!2204, !2205}
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "rwsem", scope: !2202, file: !2086, line: 66, baseType: !1216, size: 256)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2202, file: !2086, line: 67, baseType: !2089, size: 64, offset: 256)
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "ipv4", scope: !2050, file: !2051, line: 126, baseType: !2207, size: 5440, offset: 4736)
!2207 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_ipv4", file: !2208, line: 43, size: 5440, elements: !2209)
!2208 = !DIFile(filename: "./include/net/netns/ipv4.h", directory: "/home/lizy2001/genbc/linux")
!2209 = !{!2210, !2211, !2212, !2213, !2214, !2215, !2218, !2219, !2232, !2233, !2234, !2235, !2236, !2237, !2239, !2240, !2253, !2254, !2394, !2395, !2396, !2397, !2398, !2399, !2400, !2407, !2408, !2409, !2410, !2411, !2412, !2413, !2414, !2415, !2416, !2417, !2418, !2419, !2420, !2421, !2422, !2423, !2424, !2425, !2426, !2427, !2428, !2429, !2430, !2431, !2432, !2433, !2434, !2435, !2436, !2437, !2438, !2439, !2440, !2441, !2442, !2443, !2444, !2445, !2446, !2447, !2448, !2449, !2450, !2451, !2452, !2453, !2454, !2455, !2456, !2457, !2458, !2459, !2460, !2461, !2462, !2463, !2464, !2465, !2466, !2467, !2468, !2469, !2470, !2471, !2473, !2474, !2475, !2476, !2477, !2485, !2486, !2487, !2491, !2494, !2495, !2496, !2497, !2498, !2499, !2500, !2501, !2502, !2503, !2504, !2505, !2511, !2512, !2514, !2515, !2589, !2590, !2591, !2592, !2593}
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "forw_hdr", scope: !2207, file: !2208, line: 45, baseType: !1867, size: 64)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "frags_hdr", scope: !2207, file: !2208, line: 46, baseType: !1867, size: 64, offset: 64)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "ipv4_hdr", scope: !2207, file: !2208, line: 47, baseType: !1867, size: 64, offset: 128)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "route_hdr", scope: !2207, file: !2208, line: 48, baseType: !1867, size: 64, offset: 192)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "xfrm4_hdr", scope: !2207, file: !2208, line: 49, baseType: !1867, size: 64, offset: 256)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "devconf_all", scope: !2207, file: !2208, line: 51, baseType: !2216, size: 64, offset: 320)
!2216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2217, size: 64)
!2217 = !DICompositeType(tag: DW_TAG_structure_type, name: "ipv4_devconf", file: !2208, line: 16, flags: DIFlagFwdDecl)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "devconf_dflt", scope: !2207, file: !2208, line: 52, baseType: !2216, size: 64, offset: 384)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "ra_chain", scope: !2207, file: !2208, line: 53, baseType: !2220, size: 64, offset: 448)
!2220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2221, size: 64)
!2221 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ip_ra_chain", file: !2222, line: 122, size: 320, elements: !2223)
!2222 = !DIFile(filename: "./include/net/ip.h", directory: "/home/lizy2001/genbc/linux")
!2223 = !{!2224, !2225, !2226, !2231}
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2221, file: !2222, line: 123, baseType: !2220, size: 64)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "sk", scope: !2221, file: !2222, line: 124, baseType: !505, size: 64, offset: 64)
!2226 = !DIDerivedType(tag: DW_TAG_member, scope: !2221, file: !2222, line: 125, baseType: !2227, size: 64, offset: 128)
!2227 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2221, file: !2222, line: 125, size: 64, elements: !2228)
!2228 = !{!2229, !2230}
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "destructor", scope: !2227, file: !2222, line: 126, baseType: !606, size: 64)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "saved_sk", scope: !2227, file: !2222, line: 127, baseType: !505, size: 64)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2221, file: !2222, line: 129, baseType: !359, size: 128, align: 64, offset: 192)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "ra_mutex", scope: !2207, file: !2208, line: 54, baseType: !1008, size: 192, offset: 512)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "fib_has_custom_local_routes", scope: !2207, file: !2208, line: 62, baseType: !595, size: 8, offset: 704)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "fib_table_hash", scope: !2207, file: !2208, line: 66, baseType: !2082, size: 64, offset: 768)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "fib_offload_disabled", scope: !2207, file: !2208, line: 67, baseType: !595, size: 8, offset: 832)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "fibnl", scope: !2207, file: !2208, line: 68, baseType: !505, size: 64, offset: 896)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "icmp_sk", scope: !2207, file: !2208, line: 70, baseType: !2238, size: 64, offset: 960)
!2238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !505, size: 64)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "mc_autojoin_sk", scope: !2207, file: !2208, line: 71, baseType: !505, size: 64, offset: 1024)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "peers", scope: !2207, file: !2208, line: 73, baseType: !2241, size: 64, offset: 1088)
!2241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2242, size: 64)
!2242 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inet_peer_base", file: !2243, line: 61, size: 128, elements: !2244)
!2243 = !DIFile(filename: "./include/net/inetpeer.h", directory: "/home/lizy2001/genbc/linux")
!2244 = !{!2245, !2246, !2252}
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !2242, file: !2243, line: 62, baseType: !1187, size: 64)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2242, file: !2243, line: 63, baseType: !2247, size: 32, offset: 64)
!2247 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqlock_t", file: !735, line: 805, baseType: !2248)
!2248 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !735, line: 798, size: 32, elements: !2249)
!2249 = !{!2250, !2251}
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !2248, file: !735, line: 803, baseType: !734, size: 32)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2248, file: !735, line: 804, baseType: !784, offset: 32)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "total", scope: !2242, file: !2243, line: 64, baseType: !37, size: 32, offset: 96)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_sk", scope: !2207, file: !2208, line: 74, baseType: !2238, size: 64, offset: 1152)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "fqdir", scope: !2207, file: !2208, line: 75, baseType: !2255, size: 64, offset: 1216)
!2255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2256, size: 64)
!2256 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fqdir", file: !2257, line: 9, size: 1728, elements: !2258)
!2257 = !DIFile(filename: "./include/net/inet_frag.h", directory: "/home/lizy2001/genbc/linux")
!2258 = !{!2259, !2260, !2261, !2262, !2263, !2389, !2390, !2391, !2392, !2393}
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "high_thresh", scope: !2256, file: !2257, line: 11, baseType: !568, size: 64)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "low_thresh", scope: !2256, file: !2257, line: 12, baseType: !568, size: 64, offset: 64)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2256, file: !2257, line: 13, baseType: !37, size: 32, offset: 128)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "max_dist", scope: !2256, file: !2257, line: 14, baseType: !37, size: 32, offset: 160)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !2256, file: !2257, line: 15, baseType: !2264, size: 64, offset: 192)
!2264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2265, size: 64)
!2265 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inet_frags", file: !2257, line: 98, size: 960, elements: !2266)
!2266 = !{!2267, !2268, !2339, !2343, !2344, !2345, !2346, !2387, !2388}
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "qsize", scope: !2265, file: !2257, line: 99, baseType: !7, size: 32)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "constructor", scope: !2265, file: !2257, line: 101, baseType: !2269, size: 64, offset: 64)
!2269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2270, size: 64)
!2270 = !DISubroutineType(types: !2271)
!2271 = !{null, !2272, !2337}
!2272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2273, size: 64)
!2273 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inet_frag_queue", file: !2257, line: 77, size: 1408, elements: !2274)
!2274 = !{!2275, !2281, !2313, !2325, !2326, !2327, !2328, !2329, !2330, !2331, !2332, !2333, !2334, !2335, !2336}
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2273, file: !2257, line: 78, baseType: !2276, size: 64)
!2276 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rhash_head", file: !2277, line: 17, size: 64, elements: !2278)
!2277 = !DIFile(filename: "./include/linux/rhashtable-types.h", directory: "/home/lizy2001/genbc/linux")
!2278 = !{!2279}
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2276, file: !2277, line: 18, baseType: !2280, size: 64)
!2280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2276, size: 64)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !2273, file: !2257, line: 82, baseType: !2282, size: 352, offset: 64)
!2282 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2273, file: !2257, line: 79, size: 352, elements: !2283)
!2283 = !{!2284, !2293}
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2282, file: !2257, line: 80, baseType: !2285, size: 160)
!2285 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "frag_v4_compare_key", file: !2257, line: 41, size: 160, elements: !2286)
!2286 = !{!2287, !2288, !2289, !2290, !2291, !2292}
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "saddr", scope: !2285, file: !2257, line: 42, baseType: !521, size: 32)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "daddr", scope: !2285, file: !2257, line: 43, baseType: !521, size: 32, offset: 32)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !2285, file: !2257, line: 44, baseType: !762, size: 32, offset: 64)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "vif", scope: !2285, file: !2257, line: 45, baseType: !762, size: 32, offset: 96)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2285, file: !2257, line: 46, baseType: !544, size: 16, offset: 128)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !2285, file: !2257, line: 47, baseType: !1092, size: 16, offset: 144)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2282, file: !2257, line: 81, baseType: !2294, size: 352)
!2294 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "frag_v6_compare_key", file: !2257, line: 50, size: 352, elements: !2295)
!2295 = !{!2296, !2309, !2310, !2311, !2312}
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "saddr", scope: !2294, file: !2257, line: 51, baseType: !2297, size: 128)
!2297 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "in6_addr", file: !2298, line: 33, size: 128, elements: !2299)
!2298 = !DIFile(filename: "./include/uapi/linux/in6.h", directory: "/home/lizy2001/genbc/linux")
!2299 = !{!2300}
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "in6_u", scope: !2297, file: !2298, line: 40, baseType: !2301, size: 128)
!2301 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2297, file: !2298, line: 34, size: 128, elements: !2302)
!2302 = !{!2303, !2305, !2307}
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "u6_addr8", scope: !2301, file: !2298, line: 35, baseType: !2304, size: 128)
!2304 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1452, size: 128, elements: !329)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "u6_addr16", scope: !2301, file: !2298, line: 37, baseType: !2306, size: 128)
!2306 = !DICompositeType(tag: DW_TAG_array_type, baseType: !544, size: 128, elements: !1425)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "u6_addr32", scope: !2301, file: !2298, line: 38, baseType: !2308, size: 128)
!2308 = !DICompositeType(tag: DW_TAG_array_type, baseType: !521, size: 128, elements: !1256)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "daddr", scope: !2294, file: !2257, line: 52, baseType: !2297, size: 128, offset: 128)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !2294, file: !2257, line: 53, baseType: !762, size: 32, offset: 256)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2294, file: !2257, line: 54, baseType: !521, size: 32, offset: 288)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "iif", scope: !2294, file: !2257, line: 55, baseType: !762, size: 32, offset: 320)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !2273, file: !2257, line: 83, baseType: !2314, size: 320, offset: 448)
!2314 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timer_list", file: !2315, line: 11, size: 320, elements: !2316)
!2315 = !DIFile(filename: "./include/linux/timer.h", directory: "/home/lizy2001/genbc/linux")
!2316 = !{!2317, !2318, !2319, !2324}
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !2314, file: !2315, line: 16, baseType: !336, size: 128)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !2314, file: !2315, line: 17, baseType: !372, size: 64, offset: 128)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !2314, file: !2315, line: 18, baseType: !2320, size: 64, offset: 192)
!2320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2321, size: 64)
!2321 = !DISubroutineType(types: !2322)
!2322 = !{null, !2323}
!2323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2314, size: 64)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2314, file: !2315, line: 19, baseType: !762, size: 32, offset: 256)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2273, file: !2257, line: 84, baseType: !784, offset: 768)
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !2273, file: !2257, line: 85, baseType: !1325, size: 32, offset: 768)
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "rb_fragments", scope: !2273, file: !2257, line: 86, baseType: !1187, size: 64, offset: 832)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "fragments_tail", scope: !2273, file: !2257, line: 87, baseType: !475, size: 64, offset: 896)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "last_run_head", scope: !2273, file: !2257, line: 88, baseType: !475, size: 64, offset: 960)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "stamp", scope: !2273, file: !2257, line: 89, baseType: !1395, size: 64, offset: 1024)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !2273, file: !2257, line: 90, baseType: !37, size: 32, offset: 1088)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "meat", scope: !2273, file: !2257, line: 91, baseType: !37, size: 32, offset: 1120)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2273, file: !2257, line: 92, baseType: !1452, size: 8, offset: 1152)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "max_size", scope: !2273, file: !2257, line: 93, baseType: !1092, size: 16, offset: 1168)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "fqdir", scope: !2273, file: !2257, line: 94, baseType: !2255, size: 64, offset: 1216)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2273, file: !2257, line: 95, baseType: !359, size: 128, align: 64, offset: 1280)
!2337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2338, size: 64)
!2338 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "destructor", scope: !2265, file: !2257, line: 103, baseType: !2340, size: 64, offset: 128)
!2340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2341, size: 64)
!2341 = !DISubroutineType(types: !2342)
!2342 = !{null, !2272}
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "frag_expire", scope: !2265, file: !2257, line: 104, baseType: !2320, size: 64, offset: 192)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "frags_cachep", scope: !2265, file: !2257, line: 105, baseType: !1620, size: 64, offset: 256)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "frags_cache_name", scope: !2265, file: !2257, line: 106, baseType: !352, size: 64, offset: 320)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "rhash_params", scope: !2265, file: !2257, line: 107, baseType: !2347, size: 320, offset: 384)
!2347 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rhashtable_params", file: !2277, line: 56, size: 320, elements: !2348)
!2348 = !{!2349, !2350, !2351, !2352, !2353, !2354, !2355, !2356, !2361, !2363}
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "nelem_hint", scope: !2347, file: !2277, line: 57, baseType: !1092, size: 16)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "key_len", scope: !2347, file: !2277, line: 58, baseType: !1092, size: 16, offset: 16)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "key_offset", scope: !2347, file: !2277, line: 59, baseType: !1092, size: 16, offset: 32)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "head_offset", scope: !2347, file: !2277, line: 60, baseType: !1092, size: 16, offset: 48)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "max_size", scope: !2347, file: !2277, line: 61, baseType: !7, size: 32, offset: 64)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "min_size", scope: !2347, file: !2277, line: 62, baseType: !1092, size: 16, offset: 96)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "automatic_shrinking", scope: !2347, file: !2277, line: 63, baseType: !595, size: 8, offset: 112)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "hashfn", scope: !2347, file: !2277, line: 64, baseType: !2357, size: 64, offset: 128)
!2357 = !DIDerivedType(tag: DW_TAG_typedef, name: "rht_hashfn_t", file: !2277, line: 38, baseType: !2358)
!2358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2359, size: 64)
!2359 = !DISubroutineType(types: !2360)
!2360 = !{!762, !2337, !762, !762}
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "obj_hashfn", scope: !2347, file: !2277, line: 65, baseType: !2362, size: 64, offset: 192)
!2362 = !DIDerivedType(tag: DW_TAG_typedef, name: "rht_obj_hashfn_t", file: !2277, line: 39, baseType: !2358)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "obj_cmpfn", scope: !2347, file: !2277, line: 66, baseType: !2364, size: 64, offset: 256)
!2364 = !DIDerivedType(tag: DW_TAG_typedef, name: "rht_obj_cmpfn_t", file: !2277, line: 40, baseType: !2365)
!2365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2366, size: 64)
!2366 = !DISubroutineType(types: !2367)
!2367 = !{!37, !2368, !2337}
!2368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2369, size: 64)
!2369 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rhashtable_compare_arg", file: !2277, line: 33, size: 128, elements: !2370)
!2370 = !{!2371, !2386}
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "ht", scope: !2369, file: !2277, line: 34, baseType: !2372, size: 64)
!2372 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2373, size: 64)
!2373 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rhashtable", file: !2277, line: 81, size: 1024, elements: !2374)
!2374 = !{!2375, !2378, !2379, !2380, !2381, !2382, !2383, !2384, !2385}
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "tbl", scope: !2373, file: !2277, line: 82, baseType: !2376, size: 64)
!2376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2377, size: 64)
!2377 = !DICompositeType(tag: DW_TAG_structure_type, name: "bucket_table", file: !2277, line: 26, flags: DIFlagFwdDecl)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "key_len", scope: !2373, file: !2277, line: 83, baseType: !7, size: 32, offset: 64)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "max_elems", scope: !2373, file: !2277, line: 84, baseType: !7, size: 32, offset: 96)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !2373, file: !2277, line: 85, baseType: !2347, size: 320, offset: 128)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "rhlist", scope: !2373, file: !2277, line: 86, baseType: !595, size: 8, offset: 448)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "run_work", scope: !2373, file: !2277, line: 87, baseType: !1782, size: 256, offset: 512)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !2373, file: !2277, line: 88, baseType: !1008, size: 192, offset: 768)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2373, file: !2277, line: 89, baseType: !784, offset: 960)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "nelems", scope: !2373, file: !2277, line: 90, baseType: !443, size: 32, offset: 960)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !2369, file: !2277, line: 35, baseType: !2337, size: 64, offset: 64)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !2265, file: !2257, line: 108, baseType: !1325, size: 32, offset: 704)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "completion", scope: !2265, file: !2257, line: 109, baseType: !1843, size: 192, offset: 768)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "net", scope: !2256, file: !2257, line: 16, baseType: !2049, size: 64, offset: 256)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "dead", scope: !2256, file: !2257, line: 17, baseType: !595, size: 8, offset: 320)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "rhashtable", scope: !2256, file: !2257, line: 19, baseType: !2373, size: 1024, offset: 384)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "mem", scope: !2256, file: !2257, line: 22, baseType: !431, size: 64, offset: 1408)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_work", scope: !2256, file: !2257, line: 23, baseType: !1782, size: 256, offset: 1472)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_echo_ignore_all", scope: !2207, file: !2208, line: 87, baseType: !37, size: 32, offset: 1280)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_echo_ignore_broadcasts", scope: !2207, file: !2208, line: 88, baseType: !37, size: 32, offset: 1312)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_ignore_bogus_error_responses", scope: !2207, file: !2208, line: 89, baseType: !37, size: 32, offset: 1344)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_ratelimit", scope: !2207, file: !2208, line: 90, baseType: !37, size: 32, offset: 1376)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_ratemask", scope: !2207, file: !2208, line: 91, baseType: !37, size: 32, offset: 1408)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_icmp_errors_use_inbound_ifaddr", scope: !2207, file: !2208, line: 92, baseType: !37, size: 32, offset: 1440)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "ip_local_ports", scope: !2207, file: !2208, line: 94, baseType: !2401, size: 128, offset: 1472)
!2401 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "local_ports", file: !2208, line: 21, size: 128, elements: !2402)
!2402 = !{!2403, !2404, !2406}
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2401, file: !2208, line: 22, baseType: !2247, size: 32)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !2401, file: !2208, line: 23, baseType: !2405, size: 64, offset: 32)
!2405 = !DICompositeType(tag: DW_TAG_array_type, baseType: !37, size: 64, elements: !533)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "warned", scope: !2401, file: !2208, line: 24, baseType: !595, size: 8, offset: 96)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_ecn", scope: !2207, file: !2208, line: 96, baseType: !37, size: 32, offset: 1600)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_ecn_fallback", scope: !2207, file: !2208, line: 97, baseType: !37, size: 32, offset: 1632)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_default_ttl", scope: !2207, file: !2208, line: 99, baseType: !37, size: 32, offset: 1664)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_no_pmtu_disc", scope: !2207, file: !2208, line: 100, baseType: !37, size: 32, offset: 1696)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_fwd_use_pmtu", scope: !2207, file: !2208, line: 101, baseType: !37, size: 32, offset: 1728)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_fwd_update_priority", scope: !2207, file: !2208, line: 102, baseType: !37, size: 32, offset: 1760)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_nonlocal_bind", scope: !2207, file: !2208, line: 103, baseType: !37, size: 32, offset: 1792)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_autobind_reuse", scope: !2207, file: !2208, line: 104, baseType: !37, size: 32, offset: 1824)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_dynaddr", scope: !2207, file: !2208, line: 106, baseType: !37, size: 32, offset: 1856)
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_early_demux", scope: !2207, file: !2208, line: 107, baseType: !37, size: 32, offset: 1888)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_early_demux", scope: !2207, file: !2208, line: 111, baseType: !37, size: 32, offset: 1920)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_udp_early_demux", scope: !2207, file: !2208, line: 112, baseType: !37, size: 32, offset: 1952)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_nexthop_compat_mode", scope: !2207, file: !2208, line: 114, baseType: !37, size: 32, offset: 1984)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_fwmark_reflect", scope: !2207, file: !2208, line: 116, baseType: !37, size: 32, offset: 2016)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_fwmark_accept", scope: !2207, file: !2208, line: 117, baseType: !37, size: 32, offset: 2048)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_mtu_probing", scope: !2207, file: !2208, line: 121, baseType: !37, size: 32, offset: 2080)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_mtu_probe_floor", scope: !2207, file: !2208, line: 122, baseType: !37, size: 32, offset: 2112)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_base_mss", scope: !2207, file: !2208, line: 123, baseType: !37, size: 32, offset: 2144)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_min_snd_mss", scope: !2207, file: !2208, line: 124, baseType: !37, size: 32, offset: 2176)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_probe_threshold", scope: !2207, file: !2208, line: 125, baseType: !37, size: 32, offset: 2208)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_probe_interval", scope: !2207, file: !2208, line: 126, baseType: !762, size: 32, offset: 2240)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_keepalive_time", scope: !2207, file: !2208, line: 128, baseType: !37, size: 32, offset: 2272)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_keepalive_probes", scope: !2207, file: !2208, line: 129, baseType: !37, size: 32, offset: 2304)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_keepalive_intvl", scope: !2207, file: !2208, line: 130, baseType: !37, size: 32, offset: 2336)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_syn_retries", scope: !2207, file: !2208, line: 132, baseType: !37, size: 32, offset: 2368)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_synack_retries", scope: !2207, file: !2208, line: 133, baseType: !37, size: 32, offset: 2400)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_syncookies", scope: !2207, file: !2208, line: 134, baseType: !37, size: 32, offset: 2432)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_reordering", scope: !2207, file: !2208, line: 135, baseType: !37, size: 32, offset: 2464)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_retries1", scope: !2207, file: !2208, line: 136, baseType: !37, size: 32, offset: 2496)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_retries2", scope: !2207, file: !2208, line: 137, baseType: !37, size: 32, offset: 2528)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_orphan_retries", scope: !2207, file: !2208, line: 138, baseType: !37, size: 32, offset: 2560)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_fin_timeout", scope: !2207, file: !2208, line: 139, baseType: !37, size: 32, offset: 2592)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_notsent_lowat", scope: !2207, file: !2208, line: 140, baseType: !7, size: 32, offset: 2624)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_tw_reuse", scope: !2207, file: !2208, line: 141, baseType: !37, size: 32, offset: 2656)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_sack", scope: !2207, file: !2208, line: 142, baseType: !37, size: 32, offset: 2688)
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_window_scaling", scope: !2207, file: !2208, line: 143, baseType: !37, size: 32, offset: 2720)
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_timestamps", scope: !2207, file: !2208, line: 144, baseType: !37, size: 32, offset: 2752)
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_early_retrans", scope: !2207, file: !2208, line: 145, baseType: !37, size: 32, offset: 2784)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_recovery", scope: !2207, file: !2208, line: 146, baseType: !37, size: 32, offset: 2816)
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_thin_linear_timeouts", scope: !2207, file: !2208, line: 147, baseType: !37, size: 32, offset: 2848)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_slow_start_after_idle", scope: !2207, file: !2208, line: 148, baseType: !37, size: 32, offset: 2880)
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_retrans_collapse", scope: !2207, file: !2208, line: 149, baseType: !37, size: 32, offset: 2912)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_stdurg", scope: !2207, file: !2208, line: 150, baseType: !37, size: 32, offset: 2944)
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_rfc1337", scope: !2207, file: !2208, line: 151, baseType: !37, size: 32, offset: 2976)
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_abort_on_overflow", scope: !2207, file: !2208, line: 152, baseType: !37, size: 32, offset: 3008)
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_fack", scope: !2207, file: !2208, line: 153, baseType: !37, size: 32, offset: 3040)
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_max_reordering", scope: !2207, file: !2208, line: 154, baseType: !37, size: 32, offset: 3072)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_dsack", scope: !2207, file: !2208, line: 155, baseType: !37, size: 32, offset: 3104)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_app_win", scope: !2207, file: !2208, line: 156, baseType: !37, size: 32, offset: 3136)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_adv_win_scale", scope: !2207, file: !2208, line: 157, baseType: !37, size: 32, offset: 3168)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_frto", scope: !2207, file: !2208, line: 158, baseType: !37, size: 32, offset: 3200)
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_nometrics_save", scope: !2207, file: !2208, line: 159, baseType: !37, size: 32, offset: 3232)
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_no_ssthresh_metrics_save", scope: !2207, file: !2208, line: 160, baseType: !37, size: 32, offset: 3264)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_moderate_rcvbuf", scope: !2207, file: !2208, line: 161, baseType: !37, size: 32, offset: 3296)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_tso_win_divisor", scope: !2207, file: !2208, line: 162, baseType: !37, size: 32, offset: 3328)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_workaround_signed_windows", scope: !2207, file: !2208, line: 163, baseType: !37, size: 32, offset: 3360)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_limit_output_bytes", scope: !2207, file: !2208, line: 164, baseType: !37, size: 32, offset: 3392)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_challenge_ack_limit", scope: !2207, file: !2208, line: 165, baseType: !37, size: 32, offset: 3424)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_min_tso_segs", scope: !2207, file: !2208, line: 166, baseType: !37, size: 32, offset: 3456)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_min_rtt_wlen", scope: !2207, file: !2208, line: 167, baseType: !37, size: 32, offset: 3488)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_autocorking", scope: !2207, file: !2208, line: 168, baseType: !37, size: 32, offset: 3520)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_invalid_ratelimit", scope: !2207, file: !2208, line: 169, baseType: !37, size: 32, offset: 3552)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_pacing_ss_ratio", scope: !2207, file: !2208, line: 170, baseType: !37, size: 32, offset: 3584)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_pacing_ca_ratio", scope: !2207, file: !2208, line: 171, baseType: !37, size: 32, offset: 3616)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_wmem", scope: !2207, file: !2208, line: 172, baseType: !2472, size: 96, offset: 3648)
!2472 = !DICompositeType(tag: DW_TAG_array_type, baseType: !37, size: 96, elements: !921)
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_rmem", scope: !2207, file: !2208, line: 173, baseType: !2472, size: 96, offset: 3744)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_comp_sack_nr", scope: !2207, file: !2208, line: 174, baseType: !37, size: 32, offset: 3840)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_comp_sack_delay_ns", scope: !2207, file: !2208, line: 175, baseType: !372, size: 64, offset: 3904)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_comp_sack_slack_ns", scope: !2207, file: !2208, line: 176, baseType: !372, size: 64, offset: 3968)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_death_row", scope: !2207, file: !2208, line: 177, baseType: !2478, size: 192, offset: 4032)
!2478 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inet_timewait_death_row", file: !2208, line: 34, size: 192, elements: !2479)
!2479 = !{!2480, !2481, !2484}
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "tw_count", scope: !2478, file: !2208, line: 35, baseType: !443, size: 32)
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "hashinfo", scope: !2478, file: !2208, line: 37, baseType: !2482, size: 64, offset: 64)
!2482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2483, size: 64)
!2483 = !DICompositeType(tag: DW_TAG_structure_type, name: "inet_hashinfo", file: !2208, line: 32, flags: DIFlagFwdDecl)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_max_tw_buckets", scope: !2478, file: !2208, line: 38, baseType: !37, size: 32, offset: 128)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_max_syn_backlog", scope: !2207, file: !2208, line: 178, baseType: !37, size: 32, offset: 4224)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_fastopen", scope: !2207, file: !2208, line: 179, baseType: !37, size: 32, offset: 4256)
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_congestion_control", scope: !2207, file: !2208, line: 180, baseType: !2488, size: 64, offset: 4288)
!2488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2489, size: 64)
!2489 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2490)
!2490 = !DICompositeType(tag: DW_TAG_structure_type, name: "tcp_congestion_ops", file: !2208, line: 180, flags: DIFlagFwdDecl)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_fastopen_ctx", scope: !2207, file: !2208, line: 181, baseType: !2492, size: 64, offset: 4352)
!2492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2493, size: 64)
!2493 = !DICompositeType(tag: DW_TAG_structure_type, name: "tcp_fastopen_context", file: !2208, line: 41, flags: DIFlagFwdDecl)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_fastopen_ctx_lock", scope: !2207, file: !2208, line: 182, baseType: !784, offset: 4416)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_fastopen_blackhole_timeout", scope: !2207, file: !2208, line: 183, baseType: !7, size: 32, offset: 4416)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "tfo_active_disable_times", scope: !2207, file: !2208, line: 184, baseType: !443, size: 32, offset: 4448)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "tfo_active_disable_stamp", scope: !2207, file: !2208, line: 185, baseType: !372, size: 64, offset: 4480)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_tcp_reflect_tos", scope: !2207, file: !2208, line: 186, baseType: !37, size: 32, offset: 4544)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_udp_wmem_min", scope: !2207, file: !2208, line: 188, baseType: !37, size: 32, offset: 4576)
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_udp_rmem_min", scope: !2207, file: !2208, line: 189, baseType: !37, size: 32, offset: 4608)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_igmp_max_memberships", scope: !2207, file: !2208, line: 195, baseType: !37, size: 32, offset: 4640)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_igmp_max_msf", scope: !2207, file: !2208, line: 196, baseType: !37, size: 32, offset: 4672)
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_igmp_llm_reports", scope: !2207, file: !2208, line: 197, baseType: !37, size: 32, offset: 4704)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_igmp_qrv", scope: !2207, file: !2208, line: 198, baseType: !37, size: 32, offset: 4736)
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "ping_group_range", scope: !2207, file: !2208, line: 200, baseType: !2506, size: 96, offset: 4768)
!2506 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ping_group_range", file: !2208, line: 27, size: 96, elements: !2507)
!2507 = !{!2508, !2509}
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2506, file: !2208, line: 28, baseType: !2247, size: 32)
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !2506, file: !2208, line: 29, baseType: !2510, size: 64, offset: 32)
!2510 = !DICompositeType(tag: DW_TAG_array_type, baseType: !712, size: 64, elements: !533)
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "dev_addr_genid", scope: !2207, file: !2208, line: 202, baseType: !443, size: 32, offset: 4864)
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_local_reserved_ports", scope: !2207, file: !2208, line: 205, baseType: !2513, size: 64, offset: 4928)
!2513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !372, size: 64)
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_ip_prot_sock", scope: !2207, file: !2208, line: 206, baseType: !37, size: 32, offset: 4992)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_ops", scope: !2207, file: !2208, line: 222, baseType: !2516, size: 64, offset: 5056)
!2516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2517, size: 64)
!2517 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fib_notifier_ops", file: !2518, line: 28, size: 512, elements: !2519)
!2518 = !DIFile(filename: "./include/net/fib_notifier.h", directory: "/home/lizy2001/genbc/linux")
!2519 = !{!2520, !2521, !2522, !2526, !2587, !2588}
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !2517, file: !2518, line: 29, baseType: !37, size: 32)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2517, file: !2518, line: 30, baseType: !344, size: 128, offset: 64)
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "fib_seq_read", scope: !2517, file: !2518, line: 31, baseType: !2523, size: 64, offset: 192)
!2523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2524, size: 64)
!2524 = !DISubroutineType(types: !2525)
!2525 = !{!7, !2049}
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "fib_dump", scope: !2517, file: !2518, line: 32, baseType: !2527, size: 64, offset: 256)
!2527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2528, size: 64)
!2528 = !DISubroutineType(types: !2529)
!2529 = !{!37, !2049, !2089, !2530}
!2530 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2531, size: 64)
!2531 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netlink_ext_ack", file: !2532, line: 75, size: 384, elements: !2533)
!2532 = !DIFile(filename: "./include/linux/netlink.h", directory: "/home/lizy2001/genbc/linux")
!2533 = !{!2534, !2535, !2543, !2582, !2586}
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "_msg", scope: !2531, file: !2532, line: 76, baseType: !352, size: 64)
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "bad_attr", scope: !2531, file: !2532, line: 77, baseType: !2536, size: 64, offset: 64)
!2536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2537, size: 64)
!2537 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2538)
!2538 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nlattr", file: !2539, line: 213, size: 32, elements: !2540)
!2539 = !DIFile(filename: "./include/uapi/linux/netlink.h", directory: "/home/lizy2001/genbc/linux")
!2540 = !{!2541, !2542}
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "nla_len", scope: !2538, file: !2539, line: 214, baseType: !531, size: 16)
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "nla_type", scope: !2538, file: !2539, line: 215, baseType: !531, size: 16, offset: 16)
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !2531, file: !2532, line: 78, baseType: !2544, size: 64, offset: 128)
!2544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2545, size: 64)
!2545 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2546)
!2546 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nla_policy", file: !2547, line: 315, size: 128, elements: !2548)
!2547 = !DIFile(filename: "./include/net/netlink.h", directory: "/home/lizy2001/genbc/linux")
!2548 = !{!2549, !2550, !2551, !2552}
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2546, file: !2547, line: 316, baseType: !1451, size: 8)
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "validation_type", scope: !2546, file: !2547, line: 317, baseType: !1451, size: 8, offset: 8)
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !2546, file: !2547, line: 318, baseType: !1092, size: 16, offset: 16)
!2552 = !DIDerivedType(tag: DW_TAG_member, scope: !2546, file: !2547, line: 319, baseType: !2553, size: 64, offset: 64)
!2553 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2546, file: !2547, line: 319, size: 64, elements: !2554)
!2554 = !{!2555, !2557, !2558, !2559, !2560, !2566, !2572, !2577, !2581}
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "bitfield32_valid", scope: !2553, file: !2547, line: 320, baseType: !2556, size: 32)
!2556 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !762)
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !2553, file: !2547, line: 321, baseType: !2556, size: 32)
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "reject_message", scope: !2553, file: !2547, line: 322, baseType: !352, size: 64)
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "nested_policy", scope: !2553, file: !2547, line: 323, baseType: !2544, size: 64)
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !2553, file: !2547, line: 324, baseType: !2561, size: 64)
!2561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2562, size: 64)
!2562 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netlink_range_validation", file: !2547, line: 189, size: 128, elements: !2563)
!2563 = !{!2564, !2565}
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !2562, file: !2547, line: 190, baseType: !391, size: 64)
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !2562, file: !2547, line: 190, baseType: !391, size: 64, offset: 64)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "range_signed", scope: !2553, file: !2547, line: 325, baseType: !2567, size: 64)
!2567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2568, size: 64)
!2568 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netlink_range_validation_signed", file: !2547, line: 193, size: 128, elements: !2569)
!2569 = !{!2570, !2571}
!2570 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !2568, file: !2547, line: 194, baseType: !437, size: 64)
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !2568, file: !2547, line: 194, baseType: !437, size: 64, offset: 64)
!2572 = !DIDerivedType(tag: DW_TAG_member, scope: !2553, file: !2547, line: 326, baseType: !2573, size: 32)
!2573 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2553, file: !2547, line: 326, size: 32, elements: !2574)
!2574 = !{!2575, !2576}
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !2573, file: !2547, line: 327, baseType: !1298, size: 16)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !2573, file: !2547, line: 327, baseType: !1298, size: 16, offset: 16)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "validate", scope: !2553, file: !2547, line: 329, baseType: !2578, size: 64)
!2578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2579, size: 64)
!2579 = !DISubroutineType(types: !2580)
!2580 = !{!37, !2536, !2530}
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "strict_start_type", scope: !2553, file: !2547, line: 349, baseType: !1092, size: 16)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "cookie", scope: !2531, file: !2532, line: 79, baseType: !2583, size: 160, offset: 192)
!2583 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1451, size: 160, elements: !2584)
!2584 = !{!2585}
!2585 = !DISubrange(count: 20)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "cookie_len", scope: !2531, file: !2532, line: 80, baseType: !1451, size: 8, offset: 352)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2517, file: !2518, line: 34, baseType: !906, size: 64, offset: 320)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2517, file: !2518, line: 35, baseType: !359, size: 128, align: 64, offset: 384)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "fib_seq", scope: !2207, file: !2208, line: 223, baseType: !7, size: 32, offset: 5120)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "ipmr_notifier_ops", scope: !2207, file: !2208, line: 225, baseType: !2516, size: 64, offset: 5184)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "ipmr_seq", scope: !2207, file: !2208, line: 226, baseType: !7, size: 32, offset: 5248)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "rt_genid", scope: !2207, file: !2208, line: 228, baseType: !443, size: 32, offset: 5280)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "ip_id_key", scope: !2207, file: !2208, line: 229, baseType: !2594, size: 128, offset: 5312)
!2594 = !DIDerivedType(tag: DW_TAG_typedef, name: "siphash_key_t", file: !2595, line: 22, baseType: !2596)
!2595 = !DIFile(filename: "./include/linux/siphash.h", directory: "/home/lizy2001/genbc/linux")
!2596 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2595, line: 20, size: 128, elements: !2597)
!2597 = !{!2598}
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !2596, file: !2595, line: 21, baseType: !2599, size: 128)
!2599 = !DICompositeType(tag: DW_TAG_array_type, baseType: !391, size: 128, elements: !533)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "ipv6", scope: !2050, file: !2051, line: 128, baseType: !2601, size: 4608, offset: 10176)
!2601 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_ipv6", file: !2602, line: 56, size: 4608, elements: !2603)
!2602 = !DIFile(filename: "./include/net/netns/ipv6.h", directory: "/home/lizy2001/genbc/linux")
!2603 = !{!2604, !2644, !2698, !2699, !2700, !2701, !2704, !2707, !2710, !2711, !2712, !2715, !2716, !3004, !3005, !3006, !3007, !3008, !3009, !3010, !3011, !3012, !3013, !3014, !3015, !3018, !3019, !3020, !3021}
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl", scope: !2601, file: !2602, line: 57, baseType: !2605, size: 1600)
!2605 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_sysctl_ipv6", file: !2602, line: 15, size: 1600, elements: !2606)
!2606 = !{!2607, !2608, !2609, !2610, !2611, !2612, !2613, !2614, !2615, !2616, !2617, !2618, !2619, !2620, !2621, !2622, !2623, !2624, !2625, !2626, !2627, !2628, !2630, !2631, !2632, !2633, !2634, !2635, !2636, !2637, !2638, !2639, !2640, !2641, !2642, !2643}
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "hdr", scope: !2605, file: !2602, line: 17, baseType: !1867, size: 64)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "route_hdr", scope: !2605, file: !2602, line: 18, baseType: !1867, size: 64, offset: 64)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "icmp_hdr", scope: !2605, file: !2602, line: 19, baseType: !1867, size: 64, offset: 128)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "frags_hdr", scope: !2605, file: !2602, line: 20, baseType: !1867, size: 64, offset: 192)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "xfrm6_hdr", scope: !2605, file: !2602, line: 21, baseType: !1867, size: 64, offset: 256)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "bindv6only", scope: !2605, file: !2602, line: 23, baseType: !37, size: 32, offset: 320)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "flush_delay", scope: !2605, file: !2602, line: 24, baseType: !37, size: 32, offset: 352)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_max_size", scope: !2605, file: !2602, line: 25, baseType: !37, size: 32, offset: 384)
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_gc_min_interval", scope: !2605, file: !2602, line: 26, baseType: !37, size: 32, offset: 416)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_gc_timeout", scope: !2605, file: !2602, line: 27, baseType: !37, size: 32, offset: 448)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_gc_interval", scope: !2605, file: !2602, line: 28, baseType: !37, size: 32, offset: 480)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_gc_elasticity", scope: !2605, file: !2602, line: 29, baseType: !37, size: 32, offset: 512)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_mtu_expires", scope: !2605, file: !2602, line: 30, baseType: !37, size: 32, offset: 544)
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_min_advmss", scope: !2605, file: !2602, line: 31, baseType: !37, size: 32, offset: 576)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "multipath_hash_policy", scope: !2605, file: !2602, line: 32, baseType: !37, size: 32, offset: 608)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "flowlabel_consistency", scope: !2605, file: !2602, line: 33, baseType: !37, size: 32, offset: 640)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "auto_flowlabels", scope: !2605, file: !2602, line: 34, baseType: !37, size: 32, offset: 672)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_time", scope: !2605, file: !2602, line: 35, baseType: !37, size: 32, offset: 704)
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_echo_ignore_all", scope: !2605, file: !2602, line: 36, baseType: !37, size: 32, offset: 736)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_echo_ignore_multicast", scope: !2605, file: !2602, line: 37, baseType: !37, size: 32, offset: 768)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_echo_ignore_anycast", scope: !2605, file: !2602, line: 38, baseType: !37, size: 32, offset: 800)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_ratemask", scope: !2605, file: !2602, line: 39, baseType: !2629, size: 256, offset: 832)
!2629 = !DICompositeType(tag: DW_TAG_array_type, baseType: !372, size: 256, elements: !1256)
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6_ratemask_ptr", scope: !2605, file: !2602, line: 40, baseType: !2513, size: 64, offset: 1088)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "anycast_src_echo_reply", scope: !2605, file: !2602, line: 41, baseType: !37, size: 32, offset: 1152)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "ip_nonlocal_bind", scope: !2605, file: !2602, line: 42, baseType: !37, size: 32, offset: 1184)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "fwmark_reflect", scope: !2605, file: !2602, line: 43, baseType: !37, size: 32, offset: 1216)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "idgen_retries", scope: !2605, file: !2602, line: 44, baseType: !37, size: 32, offset: 1248)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "idgen_delay", scope: !2605, file: !2602, line: 45, baseType: !37, size: 32, offset: 1280)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "flowlabel_state_ranges", scope: !2605, file: !2602, line: 46, baseType: !37, size: 32, offset: 1312)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "flowlabel_reflect", scope: !2605, file: !2602, line: 47, baseType: !37, size: 32, offset: 1344)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "max_dst_opts_cnt", scope: !2605, file: !2602, line: 48, baseType: !37, size: 32, offset: 1376)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "max_hbh_opts_cnt", scope: !2605, file: !2602, line: 49, baseType: !37, size: 32, offset: 1408)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "max_dst_opts_len", scope: !2605, file: !2602, line: 50, baseType: !37, size: 32, offset: 1440)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "max_hbh_opts_len", scope: !2605, file: !2602, line: 51, baseType: !37, size: 32, offset: 1472)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "seg6_flowlabel", scope: !2605, file: !2602, line: 52, baseType: !37, size: 32, offset: 1504)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "skip_notify_on_dev_down", scope: !2605, file: !2602, line: 53, baseType: !595, size: 8, offset: 1536)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "devconf_all", scope: !2601, file: !2602, line: 58, baseType: !2645, size: 64, offset: 1600)
!2645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2646, size: 64)
!2646 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ipv6_devconf", file: !2647, line: 12, size: 1600, elements: !2648)
!2647 = !DIFile(filename: "./include/linux/ipv6.h", directory: "/home/lizy2001/genbc/linux")
!2648 = !{!2649, !2650, !2651, !2652, !2653, !2654, !2655, !2656, !2657, !2658, !2659, !2660, !2661, !2662, !2663, !2664, !2665, !2666, !2667, !2668, !2669, !2670, !2671, !2672, !2673, !2674, !2675, !2676, !2677, !2678, !2679, !2680, !2681, !2682, !2683, !2684, !2689, !2690, !2691, !2692, !2693, !2694, !2695, !2696, !2697}
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "forwarding", scope: !2646, file: !2647, line: 13, baseType: !1544, size: 32)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "hop_limit", scope: !2646, file: !2647, line: 14, baseType: !1544, size: 32, offset: 32)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "mtu6", scope: !2646, file: !2647, line: 15, baseType: !1544, size: 32, offset: 64)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "accept_ra", scope: !2646, file: !2647, line: 16, baseType: !1544, size: 32, offset: 96)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "accept_redirects", scope: !2646, file: !2647, line: 17, baseType: !1544, size: 32, offset: 128)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "autoconf", scope: !2646, file: !2647, line: 18, baseType: !1544, size: 32, offset: 160)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "dad_transmits", scope: !2646, file: !2647, line: 19, baseType: !1544, size: 32, offset: 192)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "rtr_solicits", scope: !2646, file: !2647, line: 20, baseType: !1544, size: 32, offset: 224)
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "rtr_solicit_interval", scope: !2646, file: !2647, line: 21, baseType: !1544, size: 32, offset: 256)
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "rtr_solicit_max_interval", scope: !2646, file: !2647, line: 22, baseType: !1544, size: 32, offset: 288)
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "rtr_solicit_delay", scope: !2646, file: !2647, line: 23, baseType: !1544, size: 32, offset: 320)
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "force_mld_version", scope: !2646, file: !2647, line: 24, baseType: !1544, size: 32, offset: 352)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "mldv1_unsolicited_report_interval", scope: !2646, file: !2647, line: 25, baseType: !1544, size: 32, offset: 384)
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "mldv2_unsolicited_report_interval", scope: !2646, file: !2647, line: 26, baseType: !1544, size: 32, offset: 416)
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "use_tempaddr", scope: !2646, file: !2647, line: 27, baseType: !1544, size: 32, offset: 448)
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "temp_valid_lft", scope: !2646, file: !2647, line: 28, baseType: !1544, size: 32, offset: 480)
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "temp_prefered_lft", scope: !2646, file: !2647, line: 29, baseType: !1544, size: 32, offset: 512)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "regen_max_retry", scope: !2646, file: !2647, line: 30, baseType: !1544, size: 32, offset: 544)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "max_desync_factor", scope: !2646, file: !2647, line: 31, baseType: !1544, size: 32, offset: 576)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "max_addresses", scope: !2646, file: !2647, line: 32, baseType: !1544, size: 32, offset: 608)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "accept_ra_defrtr", scope: !2646, file: !2647, line: 33, baseType: !1544, size: 32, offset: 640)
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "accept_ra_min_hop_limit", scope: !2646, file: !2647, line: 34, baseType: !1544, size: 32, offset: 672)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "accept_ra_pinfo", scope: !2646, file: !2647, line: 35, baseType: !1544, size: 32, offset: 704)
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_routes_with_linkdown", scope: !2646, file: !2647, line: 36, baseType: !1544, size: 32, offset: 736)
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_ndp", scope: !2646, file: !2647, line: 45, baseType: !1544, size: 32, offset: 768)
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "accept_source_route", scope: !2646, file: !2647, line: 46, baseType: !1544, size: 32, offset: 800)
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "accept_ra_from_local", scope: !2646, file: !2647, line: 47, baseType: !1544, size: 32, offset: 832)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "disable_ipv6", scope: !2646, file: !2647, line: 55, baseType: !1544, size: 32, offset: 864)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "drop_unicast_in_l2_multicast", scope: !2646, file: !2647, line: 56, baseType: !1544, size: 32, offset: 896)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "accept_dad", scope: !2646, file: !2647, line: 57, baseType: !1544, size: 32, offset: 928)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "force_tllao", scope: !2646, file: !2647, line: 58, baseType: !1544, size: 32, offset: 960)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "ndisc_notify", scope: !2646, file: !2647, line: 59, baseType: !1544, size: 32, offset: 992)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "suppress_frag_ndisc", scope: !2646, file: !2647, line: 60, baseType: !1544, size: 32, offset: 1024)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "accept_ra_mtu", scope: !2646, file: !2647, line: 61, baseType: !1544, size: 32, offset: 1056)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "drop_unsolicited_na", scope: !2646, file: !2647, line: 62, baseType: !1544, size: 32, offset: 1088)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "stable_secret", scope: !2646, file: !2647, line: 66, baseType: !2685, size: 160, offset: 1120)
!2685 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ipv6_stable_secret", file: !2647, line: 63, size: 160, elements: !2686)
!2686 = !{!2687, !2688}
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !2685, file: !2647, line: 64, baseType: !595, size: 8)
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "secret", scope: !2685, file: !2647, line: 65, baseType: !2297, size: 128, offset: 32)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "use_oif_addrs_only", scope: !2646, file: !2647, line: 67, baseType: !1544, size: 32, offset: 1280)
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "keep_addr_on_down", scope: !2646, file: !2647, line: 68, baseType: !1544, size: 32, offset: 1312)
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "seg6_enabled", scope: !2646, file: !2647, line: 69, baseType: !1544, size: 32, offset: 1344)
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "enhanced_dad", scope: !2646, file: !2647, line: 73, baseType: !523, size: 32, offset: 1376)
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "addr_gen_mode", scope: !2646, file: !2647, line: 74, baseType: !523, size: 32, offset: 1408)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "disable_policy", scope: !2646, file: !2647, line: 75, baseType: !1544, size: 32, offset: 1440)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "ndisc_tclass", scope: !2646, file: !2647, line: 76, baseType: !1544, size: 32, offset: 1472)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "rpl_seg_enabled", scope: !2646, file: !2647, line: 77, baseType: !1544, size: 32, offset: 1504)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_header", scope: !2646, file: !2647, line: 79, baseType: !1867, size: 64, offset: 1536)
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "devconf_dflt", scope: !2601, file: !2602, line: 59, baseType: !2645, size: 64, offset: 1664)
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "peers", scope: !2601, file: !2602, line: 60, baseType: !2241, size: 64, offset: 1728)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "fqdir", scope: !2601, file: !2602, line: 61, baseType: !2255, size: 64, offset: 1792)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_null_entry", scope: !2601, file: !2602, line: 71, baseType: !2702, size: 64, offset: 1856)
!2702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2703, size: 64)
!2703 = !DICompositeType(tag: DW_TAG_structure_type, name: "fib6_info", file: !2602, line: 71, flags: DIFlagFwdDecl)
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_null_entry", scope: !2601, file: !2602, line: 72, baseType: !2705, size: 64, offset: 1920)
!2705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2706, size: 64)
!2706 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt6_info", file: !2602, line: 72, flags: DIFlagFwdDecl)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "rt6_stats", scope: !2601, file: !2602, line: 73, baseType: !2708, size: 64, offset: 1984)
!2708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2709, size: 64)
!2709 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt6_statistics", file: !2602, line: 73, flags: DIFlagFwdDecl)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_fib_timer", scope: !2601, file: !2602, line: 74, baseType: !2314, size: 320, offset: 2048)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "fib_table_hash", scope: !2601, file: !2602, line: 75, baseType: !2082, size: 64, offset: 2368)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_main_tbl", scope: !2601, file: !2602, line: 76, baseType: !2713, size: 64, offset: 2432)
!2713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2714, size: 64)
!2714 = !DICompositeType(tag: DW_TAG_structure_type, name: "fib6_table", file: !2602, line: 76, flags: DIFlagFwdDecl)
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_walkers", scope: !2601, file: !2602, line: 77, baseType: !344, size: 128, offset: 2496)
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_dst_ops", scope: !2601, file: !2602, line: 78, baseType: !2717, size: 1088, offset: 2624)
!2717 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dst_ops", file: !2718, line: 15, size: 1088, elements: !2719)
!2718 = !DIFile(filename: "./include/net/dst_ops.h", directory: "/home/lizy2001/genbc/linux")
!2719 = !{!2720, !2721, !2722, !2727, !2762, !2768, !2769, !2773, !2777, !2781, !2785, !2789, !2793, !2797, !2798, !2994, !2998, !2999}
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !2717, file: !2718, line: 16, baseType: !532, size: 16)
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "gc_thresh", scope: !2717, file: !2718, line: 17, baseType: !7, size: 32, offset: 32)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "gc", scope: !2717, file: !2718, line: 19, baseType: !2723, size: 64, offset: 64)
!2723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2724, size: 64)
!2724 = !DISubroutineType(types: !2725)
!2725 = !{!37, !2726}
!2726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2717, size: 64)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !2717, file: !2718, line: 20, baseType: !2728, size: 64, offset: 128)
!2728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2729, size: 64)
!2729 = !DISubroutineType(types: !2730)
!2730 = !{!2731, !2731, !523}
!2731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2732, size: 64)
!2732 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dst_entry", file: !2733, line: 24, size: 896, elements: !2734)
!2733 = !DIFile(filename: "./include/net/dst.h", directory: "/home/lizy2001/genbc/linux")
!2734 = !{!2735, !2736, !2737, !2738, !2739, !2740, !2744, !2748, !2749, !2750, !2751, !2752, !2753, !2754, !2755, !2758, !2759, !2760, !2761}
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2732, file: !2733, line: 25, baseType: !350, size: 64)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2732, file: !2733, line: 26, baseType: !2726, size: 64, offset: 64)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "_metrics", scope: !2732, file: !2733, line: 27, baseType: !372, size: 64, offset: 128)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !2732, file: !2733, line: 28, baseType: !372, size: 64, offset: 192)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "__pad1", scope: !2732, file: !2733, line: 32, baseType: !625, size: 64, offset: 256)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "input", scope: !2732, file: !2733, line: 34, baseType: !2741, size: 64, offset: 320)
!2741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2742, size: 64)
!2742 = !DISubroutineType(types: !2743)
!2743 = !{!37, !475}
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "output", scope: !2732, file: !2733, line: 35, baseType: !2745, size: 64, offset: 384)
!2745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2746, size: 64)
!2746 = !DISubroutineType(types: !2747)
!2747 = !{!37, !2049, !505, !475}
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2732, file: !2733, line: 37, baseType: !532, size: 16, offset: 448)
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "obsolete", scope: !2732, file: !2733, line: 54, baseType: !1300, size: 16, offset: 464)
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "header_len", scope: !2732, file: !2733, line: 59, baseType: !532, size: 16, offset: 480)
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "trailer_len", scope: !2732, file: !2733, line: 60, baseType: !532, size: 16, offset: 496)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "__refcnt", scope: !2732, file: !2733, line: 67, baseType: !443, size: 32, offset: 512)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "__use", scope: !2732, file: !2733, line: 69, baseType: !37, size: 32, offset: 544)
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "lastuse", scope: !2732, file: !2733, line: 70, baseType: !372, size: 64, offset: 576)
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "lwtstate", scope: !2732, file: !2733, line: 71, baseType: !2756, size: 64, offset: 640)
!2756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2757, size: 64)
!2757 = !DICompositeType(tag: DW_TAG_structure_type, name: "lwtunnel_state", file: !2733, line: 71, flags: DIFlagFwdDecl)
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !2732, file: !2733, line: 72, baseType: !359, size: 128, align: 64, offset: 704)
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !2732, file: !2733, line: 73, baseType: !1300, size: 16, offset: 832)
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "__pad", scope: !2732, file: !2733, line: 74, baseType: !1300, size: 16, offset: 848)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "tclassid", scope: !2732, file: !2733, line: 75, baseType: !523, size: 32, offset: 864)
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "default_advmss", scope: !2717, file: !2718, line: 21, baseType: !2763, size: 64, offset: 192)
!2763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2764, size: 64)
!2764 = !DISubroutineType(types: !2765)
!2765 = !{!7, !2766}
!2766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2767, size: 64)
!2767 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2732)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "mtu", scope: !2717, file: !2718, line: 22, baseType: !2763, size: 64, offset: 256)
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "cow_metrics", scope: !2717, file: !2718, line: 23, baseType: !2770, size: 64, offset: 320)
!2770 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2771, size: 64)
!2771 = !DISubroutineType(types: !2772)
!2772 = !{!1514, !2731, !372}
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "destroy", scope: !2717, file: !2718, line: 24, baseType: !2774, size: 64, offset: 384)
!2774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2775, size: 64)
!2775 = !DISubroutineType(types: !2776)
!2776 = !{null, !2731}
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "ifdown", scope: !2717, file: !2718, line: 25, baseType: !2778, size: 64, offset: 448)
!2778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2779, size: 64)
!2779 = !DISubroutineType(types: !2780)
!2780 = !{null, !2731, !350, !37}
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "negative_advice", scope: !2717, file: !2718, line: 27, baseType: !2782, size: 64, offset: 512)
!2782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2783, size: 64)
!2783 = !DISubroutineType(types: !2784)
!2784 = !{!2731, !2731}
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "link_failure", scope: !2717, file: !2718, line: 28, baseType: !2786, size: 64, offset: 576)
!2786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2787, size: 64)
!2787 = !DISubroutineType(types: !2788)
!2788 = !{null, !475}
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "update_pmtu", scope: !2717, file: !2718, line: 29, baseType: !2790, size: 64, offset: 640)
!2790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2791, size: 64)
!2791 = !DISubroutineType(types: !2792)
!2792 = !{null, !2731, !505, !475, !762, !595}
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "redirect", scope: !2717, file: !2718, line: 32, baseType: !2794, size: 64, offset: 704)
!2794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2795, size: 64)
!2795 = !DISubroutineType(types: !2796)
!2796 = !{null, !2731, !505, !475}
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "local_out", scope: !2717, file: !2718, line: 34, baseType: !2745, size: 64, offset: 768)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "neigh_lookup", scope: !2717, file: !2718, line: 35, baseType: !2799, size: 64, offset: 832)
!2799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2800, size: 64)
!2800 = !DISubroutineType(types: !2801)
!2801 = !{!2802, !2766, !475, !2337}
!2802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2803, size: 64)
!2803 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "neighbour", file: !2804, line: 134, size: 2624, elements: !2805)
!2804 = !DIFile(filename: "./include/net/neighbour.h", directory: "/home/lizy2001/genbc/linux")
!2805 = !{!2806, !2807, !2945, !2947, !2948, !2949, !2950, !2951, !2952, !2953, !2954, !2955, !2956, !2957, !2958, !2959, !2960, !2961, !2962, !2963, !2972, !2976, !2989, !2990, !2991, !2992}
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2803, file: !2804, line: 135, baseType: !2802, size: 64)
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "tbl", scope: !2803, file: !2804, line: 136, baseType: !2808, size: 64, offset: 64)
!2808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2809, size: 64)
!2809 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "neigh_table", file: !2804, line: 194, size: 3840, elements: !2810)
!2810 = !{!2811, !2812, !2813, !2814, !2815, !2822, !2828, !2832, !2850, !2854, !2855, !2859, !2863, !2864, !2882, !2883, !2884, !2885, !2886, !2887, !2888, !2897, !2898, !2905, !2906, !2907, !2908, !2916, !2917, !2933, !2943}
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !2809, file: !2804, line: 195, baseType: !37, size: 32)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "entry_size", scope: !2809, file: !2804, line: 196, baseType: !7, size: 32, offset: 32)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "key_len", scope: !2809, file: !2804, line: 197, baseType: !7, size: 32, offset: 64)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !2809, file: !2804, line: 198, baseType: !544, size: 16, offset: 96)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !2809, file: !2804, line: 199, baseType: !2816, size: 64, offset: 128)
!2816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2817, size: 64)
!2817 = !DISubroutineType(types: !2818)
!2818 = !{!523, !2337, !2819, !2821}
!2819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2820, size: 64)
!2820 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !324)
!2821 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !523, size: 64)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "key_eq", scope: !2809, file: !2804, line: 202, baseType: !2823, size: 64, offset: 192)
!2823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2824, size: 64)
!2824 = !DISubroutineType(types: !2825)
!2825 = !{!595, !2826, !2337}
!2826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2827, size: 64)
!2827 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2803)
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "constructor", scope: !2809, file: !2804, line: 203, baseType: !2829, size: 64, offset: 256)
!2829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2830, size: 64)
!2830 = !DISubroutineType(types: !2831)
!2831 = !{!37, !2802}
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "pconstructor", scope: !2809, file: !2804, line: 204, baseType: !2833, size: 64, offset: 320)
!2833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2834, size: 64)
!2834 = !DISubroutineType(types: !2835)
!2835 = !{!37, !2836}
!2836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2837, size: 64)
!2837 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pneigh_entry", file: !2804, line: 171, size: 256, elements: !2838)
!2838 = !{!2839, !2840, !2845, !2846, !2847, !2848}
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2837, file: !2804, line: 172, baseType: !2836, size: 64)
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "net", scope: !2837, file: !2804, line: 173, baseType: !2841, size: 64, offset: 64)
!2841 = !DIDerivedType(tag: DW_TAG_typedef, name: "possible_net_t", file: !2051, line: 318, baseType: !2842)
!2842 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2051, line: 314, size: 64, elements: !2843)
!2843 = !{!2844}
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "net", scope: !2842, file: !2051, line: 316, baseType: !2049, size: 64)
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2837, file: !2804, line: 174, baseType: !350, size: 64, offset: 128)
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2837, file: !2804, line: 175, baseType: !1451, size: 8, offset: 192)
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !2837, file: !2804, line: 176, baseType: !1451, size: 8, offset: 200)
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !2837, file: !2804, line: 177, baseType: !2849, offset: 208)
!2849 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1451, elements: !369)
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "pdestructor", scope: !2809, file: !2804, line: 205, baseType: !2851, size: 64, offset: 384)
!2851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2852, size: 64)
!2852 = !DISubroutineType(types: !2853)
!2853 = !{null, !2836}
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_redo", scope: !2809, file: !2804, line: 206, baseType: !2786, size: 64, offset: 448)
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "is_multicast", scope: !2809, file: !2804, line: 207, baseType: !2856, size: 64, offset: 512)
!2856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2857, size: 64)
!2857 = !DISubroutineType(types: !2858)
!2858 = !{!37, !2337}
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "allow_add", scope: !2809, file: !2804, line: 208, baseType: !2860, size: 64, offset: 576)
!2860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2861, size: 64)
!2861 = !DISubroutineType(types: !2862)
!2862 = !{!595, !2819, !2530}
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2809, file: !2804, line: 210, baseType: !632, size: 64, offset: 640)
!2864 = !DIDerivedType(tag: DW_TAG_member, name: "parms", scope: !2809, file: !2804, line: 211, baseType: !2865, size: 1152, offset: 704)
!2865 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "neigh_parms", file: !2804, line: 70, size: 1152, elements: !2866)
!2866 = !{!2867, !2868, !2869, !2870, !2871, !2872, !2873, !2874, !2875, !2876, !2877, !2881}
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "net", scope: !2865, file: !2804, line: 71, baseType: !2841, size: 64)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2865, file: !2804, line: 72, baseType: !350, size: 64, offset: 64)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2865, file: !2804, line: 73, baseType: !344, size: 128, offset: 128)
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "neigh_setup", scope: !2865, file: !2804, line: 74, baseType: !2829, size: 64, offset: 256)
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "tbl", scope: !2865, file: !2804, line: 75, baseType: !2808, size: 64, offset: 320)
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_table", scope: !2865, file: !2804, line: 77, baseType: !625, size: 64, offset: 384)
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "dead", scope: !2865, file: !2804, line: 79, baseType: !37, size: 32, offset: 448)
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !2865, file: !2804, line: 80, baseType: !1325, size: 32, offset: 480)
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !2865, file: !2804, line: 81, baseType: !359, size: 128, align: 64, offset: 512)
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "reachable_time", scope: !2865, file: !2804, line: 83, baseType: !37, size: 32, offset: 640)
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2865, file: !2804, line: 84, baseType: !2878, size: 416, offset: 672)
!2878 = !DICompositeType(tag: DW_TAG_array_type, baseType: !37, size: 416, elements: !2879)
!2879 = !{!2880}
!2880 = !DISubrange(count: 13)
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "data_state", scope: !2865, file: !2804, line: 85, baseType: !1469, size: 64, offset: 1088)
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "parms_list", scope: !2809, file: !2804, line: 212, baseType: !344, size: 128, offset: 1856)
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "gc_interval", scope: !2809, file: !2804, line: 213, baseType: !37, size: 32, offset: 1984)
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "gc_thresh1", scope: !2809, file: !2804, line: 214, baseType: !37, size: 32, offset: 2016)
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "gc_thresh2", scope: !2809, file: !2804, line: 215, baseType: !37, size: 32, offset: 2048)
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "gc_thresh3", scope: !2809, file: !2804, line: 216, baseType: !37, size: 32, offset: 2080)
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "last_flush", scope: !2809, file: !2804, line: 217, baseType: !372, size: 64, offset: 2112)
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "gc_work", scope: !2809, file: !2804, line: 218, baseType: !2889, size: 704, offset: 2176)
!2889 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_work", file: !1783, line: 115, size: 704, elements: !2890)
!2890 = !{!2891, !2892, !2893, !2896}
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !2889, file: !1783, line: 116, baseType: !1782, size: 256)
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !2889, file: !1783, line: 117, baseType: !2314, size: 320, offset: 256)
!2893 = !DIDerivedType(tag: DW_TAG_member, name: "wq", scope: !2889, file: !1783, line: 120, baseType: !2894, size: 64, offset: 576)
!2894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2895, size: 64)
!2895 = !DICompositeType(tag: DW_TAG_structure_type, name: "workqueue_struct", file: !1783, line: 18, flags: DIFlagFwdDecl)
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !2889, file: !1783, line: 121, baseType: !37, size: 32, offset: 640)
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_timer", scope: !2809, file: !2804, line: 219, baseType: !2314, size: 320, offset: 2880)
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_queue", scope: !2809, file: !2804, line: 220, baseType: !2899, size: 192, offset: 3200)
!2899 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sk_buff_head", file: !477, line: 291, size: 192, elements: !2900)
!2900 = !{!2901, !2902, !2903, !2904}
!2901 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2899, file: !477, line: 293, baseType: !475, size: 64)
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2899, file: !477, line: 294, baseType: !475, size: 64, offset: 64)
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "qlen", scope: !2899, file: !477, line: 296, baseType: !523, size: 32, offset: 128)
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2899, file: !477, line: 297, baseType: !784, offset: 160)
!2905 = !DIDerivedType(tag: DW_TAG_member, name: "entries", scope: !2809, file: !2804, line: 221, baseType: !443, size: 32, offset: 3392)
!2906 = !DIDerivedType(tag: DW_TAG_member, name: "gc_entries", scope: !2809, file: !2804, line: 222, baseType: !443, size: 32, offset: 3424)
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "gc_list", scope: !2809, file: !2804, line: 223, baseType: !344, size: 128, offset: 3456)
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2809, file: !2804, line: 224, baseType: !2909, offset: 3584)
!2909 = !DIDerivedType(tag: DW_TAG_typedef, name: "rwlock_t", file: !2910, line: 20, baseType: !2911)
!2910 = !DIFile(filename: "./include/linux/rwlock_types.h", directory: "/home/lizy2001/genbc/linux")
!2911 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2910, line: 11, elements: !2912)
!2912 = !{!2913}
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !2911, file: !2910, line: 12, baseType: !2914)
!2914 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_rwlock_t", file: !796, line: 33, baseType: !2915)
!2915 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !796, line: 31, elements: !798)
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "last_rand", scope: !2809, file: !2804, line: 225, baseType: !372, size: 64, offset: 3584)
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !2809, file: !2804, line: 226, baseType: !2918, size: 64, offset: 3648)
!2918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2919, size: 64)
!2919 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "neigh_statistics", file: !2804, line: 112, size: 768, elements: !2920)
!2920 = !{!2921, !2922, !2923, !2924, !2925, !2926, !2927, !2928, !2929, !2930, !2931, !2932}
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "allocs", scope: !2919, file: !2804, line: 113, baseType: !372, size: 64)
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "destroys", scope: !2919, file: !2804, line: 114, baseType: !372, size: 64, offset: 64)
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "hash_grows", scope: !2919, file: !2804, line: 115, baseType: !372, size: 64, offset: 128)
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "res_failed", scope: !2919, file: !2804, line: 117, baseType: !372, size: 64, offset: 192)
!2925 = !DIDerivedType(tag: DW_TAG_member, name: "lookups", scope: !2919, file: !2804, line: 119, baseType: !372, size: 64, offset: 256)
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "hits", scope: !2919, file: !2804, line: 120, baseType: !372, size: 64, offset: 320)
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "rcv_probes_mcast", scope: !2919, file: !2804, line: 122, baseType: !372, size: 64, offset: 384)
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "rcv_probes_ucast", scope: !2919, file: !2804, line: 123, baseType: !372, size: 64, offset: 448)
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "periodic_gc_runs", scope: !2919, file: !2804, line: 125, baseType: !372, size: 64, offset: 512)
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "forced_gc_runs", scope: !2919, file: !2804, line: 126, baseType: !372, size: 64, offset: 576)
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "unres_discards", scope: !2919, file: !2804, line: 128, baseType: !372, size: 64, offset: 640)
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "table_fulls", scope: !2919, file: !2804, line: 129, baseType: !372, size: 64, offset: 704)
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "nht", scope: !2809, file: !2804, line: 227, baseType: !2934, size: 64, offset: 3712)
!2934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2935, size: 64)
!2935 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "neigh_hash_table", file: !2804, line: 186, size: 384, elements: !2936)
!2936 = !{!2937, !2939, !2940, !2942}
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "hash_buckets", scope: !2935, file: !2804, line: 187, baseType: !2938, size: 64)
!2938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2802, size: 64)
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "hash_shift", scope: !2935, file: !2804, line: 188, baseType: !7, size: 32, offset: 64)
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "hash_rnd", scope: !2935, file: !2804, line: 189, baseType: !2941, size: 128, offset: 96)
!2941 = !DICompositeType(tag: DW_TAG_array_type, baseType: !523, size: 128, elements: !1256)
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2935, file: !2804, line: 190, baseType: !359, size: 128, align: 64, offset: 256)
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "phash_buckets", scope: !2809, file: !2804, line: 228, baseType: !2944, size: 64, offset: 3776)
!2944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2836, size: 64)
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "parms", scope: !2803, file: !2804, line: 137, baseType: !2946, size: 64, offset: 128)
!2946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2865, size: 64)
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "confirmed", scope: !2803, file: !2804, line: 138, baseType: !372, size: 64, offset: 192)
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "updated", scope: !2803, file: !2804, line: 139, baseType: !372, size: 64, offset: 256)
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2803, file: !2804, line: 140, baseType: !2909, offset: 320)
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !2803, file: !2804, line: 141, baseType: !1325, size: 32, offset: 320)
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "arp_queue_len_bytes", scope: !2803, file: !2804, line: 142, baseType: !7, size: 32, offset: 352)
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "arp_queue", scope: !2803, file: !2804, line: 143, baseType: !2899, size: 192, offset: 384)
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !2803, file: !2804, line: 144, baseType: !2314, size: 320, offset: 576)
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !2803, file: !2804, line: 145, baseType: !372, size: 64, offset: 896)
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "probes", scope: !2803, file: !2804, line: 146, baseType: !443, size: 32, offset: 960)
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2803, file: !2804, line: 147, baseType: !1452, size: 8, offset: 992)
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "nud_state", scope: !2803, file: !2804, line: 148, baseType: !1452, size: 8, offset: 1000)
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2803, file: !2804, line: 149, baseType: !1452, size: 8, offset: 1008)
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "dead", scope: !2803, file: !2804, line: 150, baseType: !1452, size: 8, offset: 1016)
!2960 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !2803, file: !2804, line: 151, baseType: !1451, size: 8, offset: 1024)
!2961 = !DIDerivedType(tag: DW_TAG_member, name: "ha_lock", scope: !2803, file: !2804, line: 152, baseType: !2247, size: 32, offset: 1056)
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "ha", scope: !2803, file: !2804, line: 153, baseType: !770, size: 256, align: 64, offset: 1088)
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "hh", scope: !2803, file: !2804, line: 154, baseType: !2964, size: 832, offset: 1344)
!2964 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hh_cache", file: !36, line: 244, size: 832, elements: !2965)
!2965 = !{!2966, !2967, !2968}
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "hh_len", scope: !2964, file: !36, line: 245, baseType: !7, size: 32)
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "hh_lock", scope: !2964, file: !36, line: 246, baseType: !2247, size: 32, offset: 32)
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "hh_data", scope: !2964, file: !36, line: 254, baseType: !2969, size: 768, offset: 64)
!2969 = !DICompositeType(tag: DW_TAG_array_type, baseType: !372, size: 768, elements: !2970)
!2970 = !{!2971}
!2971 = !DISubrange(count: 12)
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "output", scope: !2803, file: !2804, line: 155, baseType: !2973, size: 64, offset: 2176)
!2973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2974, size: 64)
!2974 = !DISubroutineType(types: !2975)
!2975 = !{!37, !2802, !475}
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2803, file: !2804, line: 156, baseType: !2977, size: 64, offset: 2240)
!2977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2978, size: 64)
!2978 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2979)
!2979 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "neigh_ops", file: !2804, line: 163, size: 320, elements: !2980)
!2980 = !{!2981, !2982, !2986, !2987, !2988}
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !2979, file: !2804, line: 164, baseType: !37, size: 32)
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "solicit", scope: !2979, file: !2804, line: 165, baseType: !2983, size: 64, offset: 64)
!2983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2984, size: 64)
!2984 = !DISubroutineType(types: !2985)
!2985 = !{null, !2802, !475}
!2986 = !DIDerivedType(tag: DW_TAG_member, name: "error_report", scope: !2979, file: !2804, line: 166, baseType: !2983, size: 64, offset: 128)
!2987 = !DIDerivedType(tag: DW_TAG_member, name: "output", scope: !2979, file: !2804, line: 167, baseType: !2973, size: 64, offset: 192)
!2988 = !DIDerivedType(tag: DW_TAG_member, name: "connected_output", scope: !2979, file: !2804, line: 168, baseType: !2973, size: 64, offset: 256)
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "gc_list", scope: !2803, file: !2804, line: 157, baseType: !344, size: 128, offset: 2304)
!2990 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2803, file: !2804, line: 158, baseType: !359, size: 128, align: 64, offset: 2432)
!2991 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2803, file: !2804, line: 159, baseType: !350, size: 64, offset: 2560)
!2992 = !DIDerivedType(tag: DW_TAG_member, name: "primary_key", scope: !2803, file: !2804, line: 160, baseType: !2993, offset: 2624)
!2993 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1451, elements: !2009)
!2994 = !DIDerivedType(tag: DW_TAG_member, name: "confirm_neigh", scope: !2717, file: !2718, line: 38, baseType: !2995, size: 64, offset: 896)
!2995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2996, size: 64)
!2996 = !DISubroutineType(types: !2997)
!2997 = !{null, !2766, !2337}
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "kmem_cachep", scope: !2717, file: !2718, line: 41, baseType: !1620, size: 64, offset: 960)
!2999 = !DIDerivedType(tag: DW_TAG_member, name: "pcpuc_entries", scope: !2717, file: !2718, line: 43, baseType: !3000, size: 64, offset: 1024)
!3000 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_counter", file: !3001, line: 97, size: 64, elements: !3002)
!3001 = !DIFile(filename: "./include/linux/percpu_counter.h", directory: "/home/lizy2001/genbc/linux")
!3002 = !{!3003}
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3000, file: !3001, line: 98, baseType: !437, size: 64)
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_walker_lock", scope: !2601, file: !2602, line: 79, baseType: !2909, offset: 3712)
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_gc_lock", scope: !2601, file: !2602, line: 80, baseType: !784, offset: 3712)
!3006 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_gc_expire", scope: !2601, file: !2602, line: 81, baseType: !7, size: 32, offset: 3712)
!3007 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_rt_last_gc", scope: !2601, file: !2602, line: 82, baseType: !372, size: 64, offset: 3776)
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "icmp_sk", scope: !2601, file: !2602, line: 94, baseType: !2238, size: 64, offset: 3840)
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "ndisc_sk", scope: !2601, file: !2602, line: 95, baseType: !505, size: 64, offset: 3904)
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_sk", scope: !2601, file: !2602, line: 96, baseType: !505, size: 64, offset: 3968)
!3011 = !DIDerivedType(tag: DW_TAG_member, name: "igmp_sk", scope: !2601, file: !2602, line: 97, baseType: !505, size: 64, offset: 4032)
!3012 = !DIDerivedType(tag: DW_TAG_member, name: "mc_autojoin_sk", scope: !2601, file: !2602, line: 98, baseType: !505, size: 64, offset: 4096)
!3013 = !DIDerivedType(tag: DW_TAG_member, name: "dev_addr_genid", scope: !2601, file: !2602, line: 107, baseType: !443, size: 32, offset: 4160)
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "fib6_sernum", scope: !2601, file: !2602, line: 108, baseType: !443, size: 32, offset: 4192)
!3015 = !DIDerivedType(tag: DW_TAG_member, name: "seg6_data", scope: !2601, file: !2602, line: 109, baseType: !3016, size: 64, offset: 4224)
!3016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3017, size: 64)
!3017 = !DICompositeType(tag: DW_TAG_structure_type, name: "seg6_pernet_data", file: !2602, line: 109, flags: DIFlagFwdDecl)
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_ops", scope: !2601, file: !2602, line: 110, baseType: !2516, size: 64, offset: 4288)
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "ip6mr_notifier_ops", scope: !2601, file: !2602, line: 111, baseType: !2516, size: 64, offset: 4352)
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "ipmr_seq", scope: !2601, file: !2602, line: 112, baseType: !7, size: 32, offset: 4416)
!3021 = !DIDerivedType(tag: DW_TAG_member, name: "ip6addrlbl_table", scope: !2601, file: !2602, line: 117, baseType: !3022, size: 128, offset: 4480)
!3022 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2601, file: !2602, line: 113, size: 128, elements: !3023)
!3023 = !{!3024, !3025, !3026}
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3022, file: !2602, line: 114, baseType: !911, size: 64)
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3022, file: !2602, line: 115, baseType: !784, offset: 64)
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !3022, file: !2602, line: 116, baseType: !762, size: 32, offset: 64)
!3027 = !DIDerivedType(tag: DW_TAG_member, name: "wext_nlevents", scope: !2050, file: !2051, line: 162, baseType: !2899, size: 192, offset: 14784)
!3028 = !DIDerivedType(tag: DW_TAG_member, name: "gen", scope: !2050, file: !2051, line: 164, baseType: !3029, size: 64, offset: 14976)
!3029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3030, size: 64)
!3030 = !DICompositeType(tag: DW_TAG_structure_type, name: "net_generic", file: !2051, line: 47, flags: DIFlagFwdDecl)
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "bpf", scope: !2050, file: !2051, line: 167, baseType: !3032, size: 512, offset: 15040)
!3032 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_bpf", file: !3033, line: 14, size: 512, elements: !3034)
!3033 = !DIFile(filename: "./include/net/netns/bpf.h", directory: "/home/lizy2001/genbc/linux")
!3034 = !{!3035, !3670, !3672}
!3035 = !DIDerivedType(tag: DW_TAG_member, name: "run_array", scope: !3032, file: !3033, line: 16, baseType: !3036, size: 128)
!3036 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3037, size: 128, elements: !533)
!3037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3038, size: 64)
!3038 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_array", file: !145, line: 1037, size: 128, elements: !3039)
!3039 = !{!3040, !3041}
!3040 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !3038, file: !145, line: 1038, baseType: !359, size: 128, align: 64)
!3041 = !DIDerivedType(tag: DW_TAG_member, name: "items", scope: !3038, file: !145, line: 1039, baseType: !3042, offset: 128)
!3042 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3043, elements: !369)
!3043 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_array_item", file: !145, line: 1032, size: 192, elements: !3044)
!3044 = !{!3045, !3666}
!3045 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !3043, file: !145, line: 1033, baseType: !3046, size: 64)
!3046 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3047, size: 64)
!3047 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog", file: !3048, line: 525, size: 448, elements: !3049)
!3048 = !DIFile(filename: "./include/linux/filter.h", directory: "/home/lizy2001/genbc/linux")
!3049 = !{!3050, !3051, !3052, !3053, !3054, !3055, !3056, !3057, !3058, !3059, !3060, !3061, !3062, !3063, !3064, !3065, !3066, !3068, !3642, !3656, !3662, !3664}
!3050 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !3047, file: !3048, line: 526, baseType: !1092, size: 16)
!3051 = !DIDerivedType(tag: DW_TAG_member, name: "jited", scope: !3047, file: !3048, line: 527, baseType: !1092, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 16)
!3052 = !DIDerivedType(tag: DW_TAG_member, name: "jit_requested", scope: !3047, file: !3048, line: 528, baseType: !1092, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 16)
!3053 = !DIDerivedType(tag: DW_TAG_member, name: "gpl_compatible", scope: !3047, file: !3048, line: 529, baseType: !1092, size: 1, offset: 18, flags: DIFlagBitField, extraData: i64 16)
!3054 = !DIDerivedType(tag: DW_TAG_member, name: "cb_access", scope: !3047, file: !3048, line: 530, baseType: !1092, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 16)
!3055 = !DIDerivedType(tag: DW_TAG_member, name: "dst_needed", scope: !3047, file: !3048, line: 531, baseType: !1092, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 16)
!3056 = !DIDerivedType(tag: DW_TAG_member, name: "blinded", scope: !3047, file: !3048, line: 532, baseType: !1092, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 16)
!3057 = !DIDerivedType(tag: DW_TAG_member, name: "is_func", scope: !3047, file: !3048, line: 533, baseType: !1092, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 16)
!3058 = !DIDerivedType(tag: DW_TAG_member, name: "kprobe_override", scope: !3047, file: !3048, line: 534, baseType: !1092, size: 1, offset: 23, flags: DIFlagBitField, extraData: i64 16)
!3059 = !DIDerivedType(tag: DW_TAG_member, name: "has_callchain_buf", scope: !3047, file: !3048, line: 535, baseType: !1092, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 16)
!3060 = !DIDerivedType(tag: DW_TAG_member, name: "enforce_expected_attach_type", scope: !3047, file: !3048, line: 536, baseType: !1092, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 16)
!3061 = !DIDerivedType(tag: DW_TAG_member, name: "call_get_stack", scope: !3047, file: !3048, line: 537, baseType: !1092, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 16)
!3062 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3047, file: !3048, line: 538, baseType: !69, size: 32, offset: 32)
!3063 = !DIDerivedType(tag: DW_TAG_member, name: "expected_attach_type", scope: !3047, file: !3048, line: 539, baseType: !103, size: 32, offset: 64)
!3064 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !3047, file: !3048, line: 540, baseType: !762, size: 32, offset: 96)
!3065 = !DIDerivedType(tag: DW_TAG_member, name: "jited_len", scope: !3047, file: !3048, line: 541, baseType: !762, size: 32, offset: 128)
!3066 = !DIDerivedType(tag: DW_TAG_member, name: "tag", scope: !3047, file: !3048, line: 542, baseType: !3067, size: 64, offset: 160)
!3067 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1451, size: 64, elements: !1425)
!3068 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !3047, file: !3048, line: 543, baseType: !3069, size: 64, offset: 256)
!3069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3070, size: 64)
!3070 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_aux", file: !145, line: 757, size: 4928, elements: !3071)
!3071 = !{!3072, !3073, !3074, !3075, !3076, !3077, !3078, !3079, !3080, !3081, !3082, !3083, !3084, !3085, !3093, !3094, !3095, !3138, !3139, !3140, !3141, !3142, !3143, !3144, !3145, !3146, !3147, !3148, !3152, !3153, !3155, !3156, !3560, !3561, !3562, !3571, !3573, !3574, !3575, !3576, !3577, !3579, !3580, !3595, !3596, !3602, !3608, !3616, !3618, !3619, !3620, !3621, !3622, !3630, !3637}
!3072 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !3070, file: !145, line: 758, baseType: !433, size: 64)
!3073 = !DIDerivedType(tag: DW_TAG_member, name: "used_map_cnt", scope: !3070, file: !145, line: 759, baseType: !762, size: 32, offset: 64)
!3074 = !DIDerivedType(tag: DW_TAG_member, name: "max_ctx_offset", scope: !3070, file: !145, line: 760, baseType: !762, size: 32, offset: 96)
!3075 = !DIDerivedType(tag: DW_TAG_member, name: "max_pkt_offset", scope: !3070, file: !145, line: 761, baseType: !762, size: 32, offset: 128)
!3076 = !DIDerivedType(tag: DW_TAG_member, name: "max_tp_access", scope: !3070, file: !145, line: 762, baseType: !762, size: 32, offset: 160)
!3077 = !DIDerivedType(tag: DW_TAG_member, name: "stack_depth", scope: !3070, file: !145, line: 763, baseType: !762, size: 32, offset: 192)
!3078 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3070, file: !145, line: 764, baseType: !762, size: 32, offset: 224)
!3079 = !DIDerivedType(tag: DW_TAG_member, name: "func_cnt", scope: !3070, file: !145, line: 765, baseType: !762, size: 32, offset: 256)
!3080 = !DIDerivedType(tag: DW_TAG_member, name: "func_idx", scope: !3070, file: !145, line: 766, baseType: !762, size: 32, offset: 288)
!3081 = !DIDerivedType(tag: DW_TAG_member, name: "attach_btf_id", scope: !3070, file: !145, line: 767, baseType: !762, size: 32, offset: 320)
!3082 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_arg_info_size", scope: !3070, file: !145, line: 768, baseType: !762, size: 32, offset: 352)
!3083 = !DIDerivedType(tag: DW_TAG_member, name: "max_rdonly_access", scope: !3070, file: !145, line: 769, baseType: !762, size: 32, offset: 384)
!3084 = !DIDerivedType(tag: DW_TAG_member, name: "max_rdwr_access", scope: !3070, file: !145, line: 770, baseType: !762, size: 32, offset: 416)
!3085 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_arg_info", scope: !3070, file: !145, line: 771, baseType: !3086, size: 64, offset: 448)
!3086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3087, size: 64)
!3087 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3088)
!3088 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_ctx_arg_aux", file: !145, line: 751, size: 96, elements: !3089)
!3089 = !{!3090, !3091, !3092}
!3090 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !3088, file: !145, line: 752, baseType: !762, size: 32)
!3091 = !DIDerivedType(tag: DW_TAG_member, name: "reg_type", scope: !3088, file: !145, line: 753, baseType: !144, size: 32, offset: 32)
!3092 = !DIDerivedType(tag: DW_TAG_member, name: "btf_id", scope: !3088, file: !145, line: 754, baseType: !762, size: 32, offset: 64)
!3093 = !DIDerivedType(tag: DW_TAG_member, name: "dst_mutex", scope: !3070, file: !145, line: 772, baseType: !1008, size: 192, offset: 512)
!3094 = !DIDerivedType(tag: DW_TAG_member, name: "dst_prog", scope: !3070, file: !145, line: 773, baseType: !3046, size: 64, offset: 704)
!3095 = !DIDerivedType(tag: DW_TAG_member, name: "dst_trampoline", scope: !3070, file: !145, line: 774, baseType: !3096, size: 64, offset: 768)
!3096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3097, size: 64)
!3097 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_trampoline", file: !145, line: 586, size: 2944, elements: !3098)
!3098 = !{!3099, !3100, !3101, !3102, !3103, !3115, !3116, !3118, !3119, !3120, !3121}
!3099 = !DIDerivedType(tag: DW_TAG_member, name: "hlist", scope: !3097, file: !145, line: 588, baseType: !336, size: 128)
!3100 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !3097, file: !145, line: 590, baseType: !1008, size: 192, offset: 128)
!3101 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !3097, file: !145, line: 591, baseType: !1325, size: 32, offset: 320)
!3102 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !3097, file: !145, line: 592, baseType: !391, size: 64, offset: 384)
!3103 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !3097, file: !145, line: 597, baseType: !3104, size: 256, offset: 448)
!3104 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3097, file: !145, line: 593, size: 256, elements: !3105)
!3105 = !{!3106, !3113, !3114}
!3106 = !DIDerivedType(tag: DW_TAG_member, name: "model", scope: !3104, file: !145, line: 594, baseType: !3107, size: 112)
!3107 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "btf_func_model", file: !145, line: 509, size: 112, elements: !3108)
!3108 = !{!3109, !3110, !3111}
!3109 = !DIDerivedType(tag: DW_TAG_member, name: "ret_size", scope: !3107, file: !145, line: 510, baseType: !1451, size: 8)
!3110 = !DIDerivedType(tag: DW_TAG_member, name: "nr_args", scope: !3107, file: !145, line: 511, baseType: !1451, size: 8, offset: 8)
!3111 = !DIDerivedType(tag: DW_TAG_member, name: "arg_size", scope: !3107, file: !145, line: 512, baseType: !3112, size: 96, offset: 16)
!3112 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1451, size: 96, elements: !2970)
!3113 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !3104, file: !145, line: 595, baseType: !625, size: 64, offset: 128)
!3114 = !DIDerivedType(tag: DW_TAG_member, name: "ftrace_managed", scope: !3104, file: !145, line: 596, baseType: !595, size: 8, offset: 192)
!3115 = !DIDerivedType(tag: DW_TAG_member, name: "extension_prog", scope: !3097, file: !145, line: 602, baseType: !3046, size: 64, offset: 704)
!3116 = !DIDerivedType(tag: DW_TAG_member, name: "progs_hlist", scope: !3097, file: !145, line: 604, baseType: !3117, size: 192, offset: 768)
!3117 = !DICompositeType(tag: DW_TAG_array_type, baseType: !911, size: 192, elements: !921)
!3118 = !DIDerivedType(tag: DW_TAG_member, name: "progs_cnt", scope: !3097, file: !145, line: 606, baseType: !2472, size: 96, offset: 960)
!3119 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !3097, file: !145, line: 608, baseType: !625, size: 64, offset: 1088)
!3120 = !DIDerivedType(tag: DW_TAG_member, name: "selector", scope: !3097, file: !145, line: 609, baseType: !391, size: 64, offset: 1152)
!3121 = !DIDerivedType(tag: DW_TAG_member, name: "ksym", scope: !3097, file: !145, line: 610, baseType: !3122, size: 1728, offset: 1216)
!3122 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_ksym", file: !145, line: 569, size: 1728, elements: !3123)
!3123 = !{!3124, !3125, !3126, !3130, !3131, !3137}
!3124 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3122, file: !145, line: 570, baseType: !372, size: 64)
!3125 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !3122, file: !145, line: 571, baseType: !372, size: 64, offset: 64)
!3126 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3122, file: !145, line: 572, baseType: !3127, size: 1024, offset: 128)
!3127 = !DICompositeType(tag: DW_TAG_array_type, baseType: !328, size: 1024, elements: !3128)
!3128 = !{!3129}
!3129 = !DISubrange(count: 128)
!3130 = !DIDerivedType(tag: DW_TAG_member, name: "lnode", scope: !3122, file: !145, line: 573, baseType: !344, size: 128, offset: 1152)
!3131 = !DIDerivedType(tag: DW_TAG_member, name: "tnode", scope: !3122, file: !145, line: 574, baseType: !3132, size: 384, offset: 1280)
!3132 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "latch_tree_node", file: !3133, line: 40, size: 384, elements: !3134)
!3133 = !DIFile(filename: "./include/linux/rbtree_latch.h", directory: "/home/lizy2001/genbc/linux")
!3134 = !{!3135}
!3135 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3132, file: !3133, line: 41, baseType: !3136, size: 384)
!3136 = !DICompositeType(tag: DW_TAG_array_type, baseType: !493, size: 384, elements: !533)
!3137 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !3122, file: !145, line: 575, baseType: !595, size: 8, offset: 1664)
!3138 = !DIDerivedType(tag: DW_TAG_member, name: "saved_dst_prog_type", scope: !3070, file: !145, line: 775, baseType: !69, size: 32, offset: 832)
!3139 = !DIDerivedType(tag: DW_TAG_member, name: "saved_dst_attach_type", scope: !3070, file: !145, line: 776, baseType: !103, size: 32, offset: 864)
!3140 = !DIDerivedType(tag: DW_TAG_member, name: "verifier_zext", scope: !3070, file: !145, line: 777, baseType: !595, size: 8, offset: 896)
!3141 = !DIDerivedType(tag: DW_TAG_member, name: "offload_requested", scope: !3070, file: !145, line: 778, baseType: !595, size: 8, offset: 904)
!3142 = !DIDerivedType(tag: DW_TAG_member, name: "attach_btf_trace", scope: !3070, file: !145, line: 779, baseType: !595, size: 8, offset: 912)
!3143 = !DIDerivedType(tag: DW_TAG_member, name: "func_proto_unreliable", scope: !3070, file: !145, line: 780, baseType: !595, size: 8, offset: 920)
!3144 = !DIDerivedType(tag: DW_TAG_member, name: "sleepable", scope: !3070, file: !145, line: 781, baseType: !595, size: 8, offset: 928)
!3145 = !DIDerivedType(tag: DW_TAG_member, name: "tail_call_reachable", scope: !3070, file: !145, line: 782, baseType: !595, size: 8, offset: 936)
!3146 = !DIDerivedType(tag: DW_TAG_member, name: "trampoline_prog_type", scope: !3070, file: !145, line: 783, baseType: !175, size: 32, offset: 960)
!3147 = !DIDerivedType(tag: DW_TAG_member, name: "tramp_hlist", scope: !3070, file: !145, line: 784, baseType: !336, size: 128, offset: 1024)
!3148 = !DIDerivedType(tag: DW_TAG_member, name: "attach_func_proto", scope: !3070, file: !145, line: 786, baseType: !3149, size: 64, offset: 1152)
!3149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3150, size: 64)
!3150 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3151)
!3151 = !DICompositeType(tag: DW_TAG_structure_type, name: "btf_type", file: !145, line: 33, flags: DIFlagFwdDecl)
!3152 = !DIDerivedType(tag: DW_TAG_member, name: "attach_func_name", scope: !3070, file: !145, line: 788, baseType: !352, size: 64, offset: 1216)
!3153 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !3070, file: !145, line: 789, baseType: !3154, size: 64, offset: 1280)
!3154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3046, size: 64)
!3155 = !DIDerivedType(tag: DW_TAG_member, name: "jit_data", scope: !3070, file: !145, line: 790, baseType: !625, size: 64, offset: 1344)
!3156 = !DIDerivedType(tag: DW_TAG_member, name: "poke_tab", scope: !3070, file: !145, line: 791, baseType: !3157, size: 64, offset: 1408)
!3157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3158, size: 64)
!3158 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_jit_poke_descriptor", file: !145, line: 734, size: 384, elements: !3159)
!3159 = !{!3160, !3161, !3162, !3163, !3556, !3557, !3558, !3559}
!3160 = !DIDerivedType(tag: DW_TAG_member, name: "tailcall_target", scope: !3158, file: !145, line: 735, baseType: !625, size: 64)
!3161 = !DIDerivedType(tag: DW_TAG_member, name: "tailcall_bypass", scope: !3158, file: !145, line: 736, baseType: !625, size: 64, offset: 64)
!3162 = !DIDerivedType(tag: DW_TAG_member, name: "bypass_addr", scope: !3158, file: !145, line: 737, baseType: !625, size: 64, offset: 128)
!3163 = !DIDerivedType(tag: DW_TAG_member, scope: !3158, file: !145, line: 738, baseType: !3164, size: 128, offset: 192)
!3164 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3158, file: !145, line: 738, size: 128, elements: !3165)
!3165 = !{!3166}
!3166 = !DIDerivedType(tag: DW_TAG_member, name: "tail_call", scope: !3164, file: !145, line: 742, baseType: !3167, size: 128)
!3167 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3164, file: !145, line: 739, size: 128, elements: !3168)
!3168 = !{!3169, !3555}
!3169 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !3167, file: !145, line: 740, baseType: !3170, size: 64)
!3170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3171, size: 64)
!3171 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_map", file: !145, line: 141, size: 2048, elements: !3172)
!3172 = !{!3173, !3528, !3529, !3530, !3531, !3532, !3533, !3534, !3535, !3536, !3537, !3538, !3539, !3541, !3546, !3547, !3548, !3549, !3550, !3551, !3552, !3553, !3554}
!3173 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3171, file: !145, line: 145, baseType: !3174, size: 64, align: 512)
!3174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3175, size: 64)
!3175 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3176)
!3176 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_map_ops", file: !145, line: 54, size: 2368, elements: !3177)
!3177 = !{!3178, !3377, !3381, !3385, !3389, !3393, !3394, !3398, !3404, !3405, !3406, !3407, !3408, !3412, !3416, !3420, !3421, !3422, !3426, !3430, !3442, !3446, !3450, !3459, !3463, !3467, !3471, !3476, !3480, !3484, !3488, !3494, !3498, !3505, !3509, !3511, !3512}
!3178 = !DIDerivedType(tag: DW_TAG_member, name: "map_alloc_check", scope: !3176, file: !145, line: 56, baseType: !3179, size: 64)
!3179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3180, size: 64)
!3180 = !DISubroutineType(types: !3181)
!3181 = !{!37, !3182}
!3182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3183, size: 64)
!3183 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "bpf_attr", file: !70, line: 483, size: 960, align: 64, elements: !3184)
!3184 = !{!3185, !3201, !3212, !3223, !3247, !3253, !3261, !3278, !3291, !3297, !3306, !3311, !3319, !3331, !3351, !3358, !3362, !3366, !3371}
!3185 = !DIDerivedType(tag: DW_TAG_member, scope: !3183, file: !70, line: 484, baseType: !3186, size: 512)
!3186 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3183, file: !70, line: 484, size: 512, elements: !3187)
!3187 = !{!3188, !3189, !3190, !3191, !3192, !3193, !3194, !3195, !3196, !3197, !3198, !3199, !3200}
!3188 = !DIDerivedType(tag: DW_TAG_member, name: "map_type", scope: !3186, file: !70, line: 485, baseType: !523, size: 32)
!3189 = !DIDerivedType(tag: DW_TAG_member, name: "key_size", scope: !3186, file: !70, line: 486, baseType: !523, size: 32, offset: 32)
!3190 = !DIDerivedType(tag: DW_TAG_member, name: "value_size", scope: !3186, file: !70, line: 487, baseType: !523, size: 32, offset: 64)
!3191 = !DIDerivedType(tag: DW_TAG_member, name: "max_entries", scope: !3186, file: !70, line: 488, baseType: !523, size: 32, offset: 96)
!3192 = !DIDerivedType(tag: DW_TAG_member, name: "map_flags", scope: !3186, file: !70, line: 489, baseType: !523, size: 32, offset: 128)
!3193 = !DIDerivedType(tag: DW_TAG_member, name: "inner_map_fd", scope: !3186, file: !70, line: 492, baseType: !523, size: 32, offset: 160)
!3194 = !DIDerivedType(tag: DW_TAG_member, name: "numa_node", scope: !3186, file: !70, line: 493, baseType: !523, size: 32, offset: 192)
!3195 = !DIDerivedType(tag: DW_TAG_member, name: "map_name", scope: !3186, file: !70, line: 496, baseType: !327, size: 128, offset: 224)
!3196 = !DIDerivedType(tag: DW_TAG_member, name: "map_ifindex", scope: !3186, file: !70, line: 497, baseType: !523, size: 32, offset: 352)
!3197 = !DIDerivedType(tag: DW_TAG_member, name: "btf_fd", scope: !3186, file: !70, line: 498, baseType: !523, size: 32, offset: 384)
!3198 = !DIDerivedType(tag: DW_TAG_member, name: "btf_key_type_id", scope: !3186, file: !70, line: 499, baseType: !523, size: 32, offset: 416)
!3199 = !DIDerivedType(tag: DW_TAG_member, name: "btf_value_type_id", scope: !3186, file: !70, line: 500, baseType: !523, size: 32, offset: 448)
!3200 = !DIDerivedType(tag: DW_TAG_member, name: "btf_vmlinux_value_type_id", scope: !3186, file: !70, line: 501, baseType: !523, size: 32, offset: 480)
!3201 = !DIDerivedType(tag: DW_TAG_member, scope: !3183, file: !70, line: 507, baseType: !3202, size: 256)
!3202 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3183, file: !70, line: 507, size: 256, elements: !3203)
!3203 = !{!3204, !3205, !3206, !3211}
!3204 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd", scope: !3202, file: !70, line: 508, baseType: !523, size: 32)
!3205 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !3202, file: !70, line: 509, baseType: !393, size: 64, align: 64, offset: 64)
!3206 = !DIDerivedType(tag: DW_TAG_member, scope: !3202, file: !70, line: 510, baseType: !3207, size: 64, offset: 128)
!3207 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3202, file: !70, line: 510, size: 64, elements: !3208)
!3208 = !{!3209, !3210}
!3209 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !3207, file: !70, line: 511, baseType: !393, size: 64, align: 64)
!3210 = !DIDerivedType(tag: DW_TAG_member, name: "next_key", scope: !3207, file: !70, line: 512, baseType: !393, size: 64, align: 64)
!3211 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3202, file: !70, line: 514, baseType: !393, size: 64, offset: 192)
!3212 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !3183, file: !70, line: 532, baseType: !3213, size: 448)
!3213 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3183, file: !70, line: 517, size: 448, elements: !3214)
!3214 = !{!3215, !3216, !3217, !3218, !3219, !3220, !3221, !3222}
!3215 = !DIDerivedType(tag: DW_TAG_member, name: "in_batch", scope: !3213, file: !70, line: 518, baseType: !393, size: 64, align: 64)
!3216 = !DIDerivedType(tag: DW_TAG_member, name: "out_batch", scope: !3213, file: !70, line: 521, baseType: !393, size: 64, align: 64, offset: 64)
!3217 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !3213, file: !70, line: 522, baseType: !393, size: 64, align: 64, offset: 128)
!3218 = !DIDerivedType(tag: DW_TAG_member, name: "values", scope: !3213, file: !70, line: 523, baseType: !393, size: 64, align: 64, offset: 192)
!3219 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3213, file: !70, line: 524, baseType: !523, size: 32, offset: 256)
!3220 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd", scope: !3213, file: !70, line: 529, baseType: !523, size: 32, offset: 288)
!3221 = !DIDerivedType(tag: DW_TAG_member, name: "elem_flags", scope: !3213, file: !70, line: 530, baseType: !393, size: 64, offset: 320)
!3222 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3213, file: !70, line: 531, baseType: !393, size: 64, offset: 384)
!3223 = !DIDerivedType(tag: DW_TAG_member, scope: !3183, file: !70, line: 534, baseType: !3224, size: 960)
!3224 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3183, file: !70, line: 534, size: 960, elements: !3225)
!3225 = !{!3226, !3227, !3228, !3229, !3230, !3231, !3232, !3233, !3234, !3235, !3236, !3237, !3238, !3239, !3240, !3241, !3242, !3243, !3244, !3245, !3246}
!3226 = !DIDerivedType(tag: DW_TAG_member, name: "prog_type", scope: !3224, file: !70, line: 535, baseType: !523, size: 32)
!3227 = !DIDerivedType(tag: DW_TAG_member, name: "insn_cnt", scope: !3224, file: !70, line: 536, baseType: !523, size: 32, offset: 32)
!3228 = !DIDerivedType(tag: DW_TAG_member, name: "insns", scope: !3224, file: !70, line: 537, baseType: !393, size: 64, align: 64, offset: 64)
!3229 = !DIDerivedType(tag: DW_TAG_member, name: "license", scope: !3224, file: !70, line: 538, baseType: !393, size: 64, align: 64, offset: 128)
!3230 = !DIDerivedType(tag: DW_TAG_member, name: "log_level", scope: !3224, file: !70, line: 539, baseType: !523, size: 32, offset: 192)
!3231 = !DIDerivedType(tag: DW_TAG_member, name: "log_size", scope: !3224, file: !70, line: 540, baseType: !523, size: 32, offset: 224)
!3232 = !DIDerivedType(tag: DW_TAG_member, name: "log_buf", scope: !3224, file: !70, line: 541, baseType: !393, size: 64, align: 64, offset: 256)
!3233 = !DIDerivedType(tag: DW_TAG_member, name: "kern_version", scope: !3224, file: !70, line: 542, baseType: !523, size: 32, offset: 320)
!3234 = !DIDerivedType(tag: DW_TAG_member, name: "prog_flags", scope: !3224, file: !70, line: 543, baseType: !523, size: 32, offset: 352)
!3235 = !DIDerivedType(tag: DW_TAG_member, name: "prog_name", scope: !3224, file: !70, line: 544, baseType: !327, size: 128, offset: 384)
!3236 = !DIDerivedType(tag: DW_TAG_member, name: "prog_ifindex", scope: !3224, file: !70, line: 545, baseType: !523, size: 32, offset: 512)
!3237 = !DIDerivedType(tag: DW_TAG_member, name: "expected_attach_type", scope: !3224, file: !70, line: 550, baseType: !523, size: 32, offset: 544)
!3238 = !DIDerivedType(tag: DW_TAG_member, name: "prog_btf_fd", scope: !3224, file: !70, line: 551, baseType: !523, size: 32, offset: 576)
!3239 = !DIDerivedType(tag: DW_TAG_member, name: "func_info_rec_size", scope: !3224, file: !70, line: 552, baseType: !523, size: 32, offset: 608)
!3240 = !DIDerivedType(tag: DW_TAG_member, name: "func_info", scope: !3224, file: !70, line: 553, baseType: !393, size: 64, align: 64, offset: 640)
!3241 = !DIDerivedType(tag: DW_TAG_member, name: "func_info_cnt", scope: !3224, file: !70, line: 554, baseType: !523, size: 32, offset: 704)
!3242 = !DIDerivedType(tag: DW_TAG_member, name: "line_info_rec_size", scope: !3224, file: !70, line: 555, baseType: !523, size: 32, offset: 736)
!3243 = !DIDerivedType(tag: DW_TAG_member, name: "line_info", scope: !3224, file: !70, line: 556, baseType: !393, size: 64, align: 64, offset: 768)
!3244 = !DIDerivedType(tag: DW_TAG_member, name: "line_info_cnt", scope: !3224, file: !70, line: 557, baseType: !523, size: 32, offset: 832)
!3245 = !DIDerivedType(tag: DW_TAG_member, name: "attach_btf_id", scope: !3224, file: !70, line: 558, baseType: !523, size: 32, offset: 864)
!3246 = !DIDerivedType(tag: DW_TAG_member, name: "attach_prog_fd", scope: !3224, file: !70, line: 559, baseType: !523, size: 32, offset: 896)
!3247 = !DIDerivedType(tag: DW_TAG_member, scope: !3183, file: !70, line: 562, baseType: !3248, size: 128)
!3248 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3183, file: !70, line: 562, size: 128, elements: !3249)
!3249 = !{!3250, !3251, !3252}
!3250 = !DIDerivedType(tag: DW_TAG_member, name: "pathname", scope: !3248, file: !70, line: 563, baseType: !393, size: 64, align: 64)
!3251 = !DIDerivedType(tag: DW_TAG_member, name: "bpf_fd", scope: !3248, file: !70, line: 564, baseType: !523, size: 32, offset: 64)
!3252 = !DIDerivedType(tag: DW_TAG_member, name: "file_flags", scope: !3248, file: !70, line: 565, baseType: !523, size: 32, offset: 96)
!3253 = !DIDerivedType(tag: DW_TAG_member, scope: !3183, file: !70, line: 568, baseType: !3254, size: 160)
!3254 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3183, file: !70, line: 568, size: 160, elements: !3255)
!3255 = !{!3256, !3257, !3258, !3259, !3260}
!3256 = !DIDerivedType(tag: DW_TAG_member, name: "target_fd", scope: !3254, file: !70, line: 569, baseType: !523, size: 32)
!3257 = !DIDerivedType(tag: DW_TAG_member, name: "attach_bpf_fd", scope: !3254, file: !70, line: 570, baseType: !523, size: 32, offset: 32)
!3258 = !DIDerivedType(tag: DW_TAG_member, name: "attach_type", scope: !3254, file: !70, line: 571, baseType: !523, size: 32, offset: 64)
!3259 = !DIDerivedType(tag: DW_TAG_member, name: "attach_flags", scope: !3254, file: !70, line: 572, baseType: !523, size: 32, offset: 96)
!3260 = !DIDerivedType(tag: DW_TAG_member, name: "replace_bpf_fd", scope: !3254, file: !70, line: 573, baseType: !523, size: 32, offset: 128)
!3261 = !DIDerivedType(tag: DW_TAG_member, name: "test", scope: !3183, file: !70, line: 600, baseType: !3262, size: 576)
!3262 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3183, file: !70, line: 579, size: 576, elements: !3263)
!3263 = !{!3264, !3265, !3266, !3267, !3268, !3269, !3270, !3271, !3272, !3273, !3274, !3275, !3276, !3277}
!3264 = !DIDerivedType(tag: DW_TAG_member, name: "prog_fd", scope: !3262, file: !70, line: 580, baseType: !523, size: 32)
!3265 = !DIDerivedType(tag: DW_TAG_member, name: "retval", scope: !3262, file: !70, line: 581, baseType: !523, size: 32, offset: 32)
!3266 = !DIDerivedType(tag: DW_TAG_member, name: "data_size_in", scope: !3262, file: !70, line: 582, baseType: !523, size: 32, offset: 64)
!3267 = !DIDerivedType(tag: DW_TAG_member, name: "data_size_out", scope: !3262, file: !70, line: 583, baseType: !523, size: 32, offset: 96)
!3268 = !DIDerivedType(tag: DW_TAG_member, name: "data_in", scope: !3262, file: !70, line: 587, baseType: !393, size: 64, align: 64, offset: 128)
!3269 = !DIDerivedType(tag: DW_TAG_member, name: "data_out", scope: !3262, file: !70, line: 588, baseType: !393, size: 64, align: 64, offset: 192)
!3270 = !DIDerivedType(tag: DW_TAG_member, name: "repeat", scope: !3262, file: !70, line: 589, baseType: !523, size: 32, offset: 256)
!3271 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !3262, file: !70, line: 590, baseType: !523, size: 32, offset: 288)
!3272 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_size_in", scope: !3262, file: !70, line: 591, baseType: !523, size: 32, offset: 320)
!3273 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_size_out", scope: !3262, file: !70, line: 592, baseType: !523, size: 32, offset: 352)
!3274 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_in", scope: !3262, file: !70, line: 596, baseType: !393, size: 64, align: 64, offset: 384)
!3275 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_out", scope: !3262, file: !70, line: 597, baseType: !393, size: 64, align: 64, offset: 448)
!3276 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3262, file: !70, line: 598, baseType: !523, size: 32, offset: 512)
!3277 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !3262, file: !70, line: 599, baseType: !523, size: 32, offset: 544)
!3278 = !DIDerivedType(tag: DW_TAG_member, scope: !3183, file: !70, line: 602, baseType: !3279, size: 96)
!3279 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3183, file: !70, line: 602, size: 96, elements: !3280)
!3280 = !{!3281, !3289, !3290}
!3281 = !DIDerivedType(tag: DW_TAG_member, scope: !3279, file: !70, line: 603, baseType: !3282, size: 32)
!3282 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3279, file: !70, line: 603, size: 32, elements: !3283)
!3283 = !{!3284, !3285, !3286, !3287, !3288}
!3284 = !DIDerivedType(tag: DW_TAG_member, name: "start_id", scope: !3282, file: !70, line: 604, baseType: !523, size: 32)
!3285 = !DIDerivedType(tag: DW_TAG_member, name: "prog_id", scope: !3282, file: !70, line: 605, baseType: !523, size: 32)
!3286 = !DIDerivedType(tag: DW_TAG_member, name: "map_id", scope: !3282, file: !70, line: 606, baseType: !523, size: 32)
!3287 = !DIDerivedType(tag: DW_TAG_member, name: "btf_id", scope: !3282, file: !70, line: 607, baseType: !523, size: 32)
!3288 = !DIDerivedType(tag: DW_TAG_member, name: "link_id", scope: !3282, file: !70, line: 608, baseType: !523, size: 32)
!3289 = !DIDerivedType(tag: DW_TAG_member, name: "next_id", scope: !3279, file: !70, line: 610, baseType: !523, size: 32, offset: 32)
!3290 = !DIDerivedType(tag: DW_TAG_member, name: "open_flags", scope: !3279, file: !70, line: 611, baseType: !523, size: 32, offset: 64)
!3291 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !3183, file: !70, line: 618, baseType: !3292, size: 128)
!3292 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3183, file: !70, line: 614, size: 128, elements: !3293)
!3293 = !{!3294, !3295, !3296}
!3294 = !DIDerivedType(tag: DW_TAG_member, name: "bpf_fd", scope: !3292, file: !70, line: 615, baseType: !523, size: 32)
!3295 = !DIDerivedType(tag: DW_TAG_member, name: "info_len", scope: !3292, file: !70, line: 616, baseType: !523, size: 32, offset: 32)
!3296 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !3292, file: !70, line: 617, baseType: !393, size: 64, align: 64, offset: 64)
!3297 = !DIDerivedType(tag: DW_TAG_member, name: "query", scope: !3183, file: !70, line: 627, baseType: !3298, size: 256)
!3298 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3183, file: !70, line: 620, size: 256, elements: !3299)
!3299 = !{!3300, !3301, !3302, !3303, !3304, !3305}
!3300 = !DIDerivedType(tag: DW_TAG_member, name: "target_fd", scope: !3298, file: !70, line: 621, baseType: !523, size: 32)
!3301 = !DIDerivedType(tag: DW_TAG_member, name: "attach_type", scope: !3298, file: !70, line: 622, baseType: !523, size: 32, offset: 32)
!3302 = !DIDerivedType(tag: DW_TAG_member, name: "query_flags", scope: !3298, file: !70, line: 623, baseType: !523, size: 32, offset: 64)
!3303 = !DIDerivedType(tag: DW_TAG_member, name: "attach_flags", scope: !3298, file: !70, line: 624, baseType: !523, size: 32, offset: 96)
!3304 = !DIDerivedType(tag: DW_TAG_member, name: "prog_ids", scope: !3298, file: !70, line: 625, baseType: !393, size: 64, align: 64, offset: 128)
!3305 = !DIDerivedType(tag: DW_TAG_member, name: "prog_cnt", scope: !3298, file: !70, line: 626, baseType: !523, size: 32, offset: 192)
!3306 = !DIDerivedType(tag: DW_TAG_member, name: "raw_tracepoint", scope: !3183, file: !70, line: 632, baseType: !3307, size: 128)
!3307 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3183, file: !70, line: 629, size: 128, elements: !3308)
!3308 = !{!3309, !3310}
!3309 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3307, file: !70, line: 630, baseType: !393, size: 64)
!3310 = !DIDerivedType(tag: DW_TAG_member, name: "prog_fd", scope: !3307, file: !70, line: 631, baseType: !523, size: 32, offset: 64)
!3311 = !DIDerivedType(tag: DW_TAG_member, scope: !3183, file: !70, line: 634, baseType: !3312, size: 256)
!3312 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3183, file: !70, line: 634, size: 256, elements: !3313)
!3313 = !{!3314, !3315, !3316, !3317, !3318}
!3314 = !DIDerivedType(tag: DW_TAG_member, name: "btf", scope: !3312, file: !70, line: 635, baseType: !393, size: 64, align: 64)
!3315 = !DIDerivedType(tag: DW_TAG_member, name: "btf_log_buf", scope: !3312, file: !70, line: 636, baseType: !393, size: 64, align: 64, offset: 64)
!3316 = !DIDerivedType(tag: DW_TAG_member, name: "btf_size", scope: !3312, file: !70, line: 637, baseType: !523, size: 32, offset: 128)
!3317 = !DIDerivedType(tag: DW_TAG_member, name: "btf_log_size", scope: !3312, file: !70, line: 638, baseType: !523, size: 32, offset: 160)
!3318 = !DIDerivedType(tag: DW_TAG_member, name: "btf_log_level", scope: !3312, file: !70, line: 639, baseType: !523, size: 32, offset: 192)
!3319 = !DIDerivedType(tag: DW_TAG_member, name: "task_fd_query", scope: !3183, file: !70, line: 656, baseType: !3320, size: 384)
!3320 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3183, file: !70, line: 642, size: 384, elements: !3321)
!3321 = !{!3322, !3323, !3324, !3325, !3326, !3327, !3328, !3329, !3330}
!3322 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !3320, file: !70, line: 643, baseType: !523, size: 32)
!3323 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !3320, file: !70, line: 644, baseType: !523, size: 32, offset: 32)
!3324 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3320, file: !70, line: 645, baseType: !523, size: 32, offset: 64)
!3325 = !DIDerivedType(tag: DW_TAG_member, name: "buf_len", scope: !3320, file: !70, line: 646, baseType: !523, size: 32, offset: 96)
!3326 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !3320, file: !70, line: 647, baseType: !393, size: 64, align: 64, offset: 128)
!3327 = !DIDerivedType(tag: DW_TAG_member, name: "prog_id", scope: !3320, file: !70, line: 652, baseType: !523, size: 32, offset: 192)
!3328 = !DIDerivedType(tag: DW_TAG_member, name: "fd_type", scope: !3320, file: !70, line: 653, baseType: !523, size: 32, offset: 224)
!3329 = !DIDerivedType(tag: DW_TAG_member, name: "probe_offset", scope: !3320, file: !70, line: 654, baseType: !393, size: 64, offset: 256)
!3330 = !DIDerivedType(tag: DW_TAG_member, name: "probe_addr", scope: !3320, file: !70, line: 655, baseType: !393, size: 64, offset: 320)
!3331 = !DIDerivedType(tag: DW_TAG_member, name: "link_create", scope: !3183, file: !70, line: 673, baseType: !3332, size: 256)
!3332 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3183, file: !70, line: 658, size: 256, elements: !3333)
!3333 = !{!3334, !3335, !3340, !3341, !3342}
!3334 = !DIDerivedType(tag: DW_TAG_member, name: "prog_fd", scope: !3332, file: !70, line: 659, baseType: !523, size: 32)
!3335 = !DIDerivedType(tag: DW_TAG_member, scope: !3332, file: !70, line: 660, baseType: !3336, size: 32, offset: 32)
!3336 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3332, file: !70, line: 660, size: 32, elements: !3337)
!3337 = !{!3338, !3339}
!3338 = !DIDerivedType(tag: DW_TAG_member, name: "target_fd", scope: !3336, file: !70, line: 661, baseType: !523, size: 32)
!3339 = !DIDerivedType(tag: DW_TAG_member, name: "target_ifindex", scope: !3336, file: !70, line: 662, baseType: !523, size: 32)
!3340 = !DIDerivedType(tag: DW_TAG_member, name: "attach_type", scope: !3332, file: !70, line: 664, baseType: !523, size: 32, offset: 64)
!3341 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3332, file: !70, line: 665, baseType: !523, size: 32, offset: 96)
!3342 = !DIDerivedType(tag: DW_TAG_member, scope: !3332, file: !70, line: 666, baseType: !3343, size: 128, offset: 128)
!3343 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3332, file: !70, line: 666, size: 128, elements: !3344)
!3344 = !{!3345, !3346}
!3345 = !DIDerivedType(tag: DW_TAG_member, name: "target_btf_id", scope: !3343, file: !70, line: 667, baseType: !523, size: 32)
!3346 = !DIDerivedType(tag: DW_TAG_member, scope: !3343, file: !70, line: 668, baseType: !3347, size: 128)
!3347 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3343, file: !70, line: 668, size: 128, elements: !3348)
!3348 = !{!3349, !3350}
!3349 = !DIDerivedType(tag: DW_TAG_member, name: "iter_info", scope: !3347, file: !70, line: 669, baseType: !393, size: 64, align: 64)
!3350 = !DIDerivedType(tag: DW_TAG_member, name: "iter_info_len", scope: !3347, file: !70, line: 670, baseType: !523, size: 32, offset: 64)
!3351 = !DIDerivedType(tag: DW_TAG_member, name: "link_update", scope: !3183, file: !70, line: 683, baseType: !3352, size: 128)
!3352 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3183, file: !70, line: 675, size: 128, elements: !3353)
!3353 = !{!3354, !3355, !3356, !3357}
!3354 = !DIDerivedType(tag: DW_TAG_member, name: "link_fd", scope: !3352, file: !70, line: 676, baseType: !523, size: 32)
!3355 = !DIDerivedType(tag: DW_TAG_member, name: "new_prog_fd", scope: !3352, file: !70, line: 678, baseType: !523, size: 32, offset: 32)
!3356 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3352, file: !70, line: 679, baseType: !523, size: 32, offset: 64)
!3357 = !DIDerivedType(tag: DW_TAG_member, name: "old_prog_fd", scope: !3352, file: !70, line: 682, baseType: !523, size: 32, offset: 96)
!3358 = !DIDerivedType(tag: DW_TAG_member, name: "link_detach", scope: !3183, file: !70, line: 687, baseType: !3359, size: 32)
!3359 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3183, file: !70, line: 685, size: 32, elements: !3360)
!3360 = !{!3361}
!3361 = !DIDerivedType(tag: DW_TAG_member, name: "link_fd", scope: !3359, file: !70, line: 686, baseType: !523, size: 32)
!3362 = !DIDerivedType(tag: DW_TAG_member, name: "enable_stats", scope: !3183, file: !70, line: 691, baseType: !3363, size: 32)
!3363 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3183, file: !70, line: 689, size: 32, elements: !3364)
!3364 = !{!3365}
!3365 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3363, file: !70, line: 690, baseType: !523, size: 32)
!3366 = !DIDerivedType(tag: DW_TAG_member, name: "iter_create", scope: !3183, file: !70, line: 696, baseType: !3367, size: 64)
!3367 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3183, file: !70, line: 693, size: 64, elements: !3368)
!3368 = !{!3369, !3370}
!3369 = !DIDerivedType(tag: DW_TAG_member, name: "link_fd", scope: !3367, file: !70, line: 694, baseType: !523, size: 32)
!3370 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3367, file: !70, line: 695, baseType: !523, size: 32, offset: 32)
!3371 = !DIDerivedType(tag: DW_TAG_member, name: "prog_bind_map", scope: !3183, file: !70, line: 702, baseType: !3372, size: 96)
!3372 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3183, file: !70, line: 698, size: 96, elements: !3373)
!3373 = !{!3374, !3375, !3376}
!3374 = !DIDerivedType(tag: DW_TAG_member, name: "prog_fd", scope: !3372, file: !70, line: 699, baseType: !523, size: 32)
!3375 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd", scope: !3372, file: !70, line: 700, baseType: !523, size: 32, offset: 32)
!3376 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3372, file: !70, line: 701, baseType: !523, size: 32, offset: 64)
!3377 = !DIDerivedType(tag: DW_TAG_member, name: "map_alloc", scope: !3176, file: !145, line: 57, baseType: !3378, size: 64, offset: 64)
!3378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3379, size: 64)
!3379 = !DISubroutineType(types: !3380)
!3380 = !{!3170, !3182}
!3381 = !DIDerivedType(tag: DW_TAG_member, name: "map_release", scope: !3176, file: !145, line: 58, baseType: !3382, size: 64, offset: 128)
!3382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3383, size: 64)
!3383 = !DISubroutineType(types: !3384)
!3384 = !{null, !3170, !1064}
!3385 = !DIDerivedType(tag: DW_TAG_member, name: "map_free", scope: !3176, file: !145, line: 59, baseType: !3386, size: 64, offset: 192)
!3386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3387, size: 64)
!3387 = !DISubroutineType(types: !3388)
!3388 = !{null, !3170}
!3389 = !DIDerivedType(tag: DW_TAG_member, name: "map_get_next_key", scope: !3176, file: !145, line: 60, baseType: !3390, size: 64, offset: 256)
!3390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3391, size: 64)
!3391 = !DISubroutineType(types: !3392)
!3392 = !{!37, !3170, !625, !625}
!3393 = !DIDerivedType(tag: DW_TAG_member, name: "map_release_uref", scope: !3176, file: !145, line: 61, baseType: !3386, size: 64, offset: 320)
!3394 = !DIDerivedType(tag: DW_TAG_member, name: "map_lookup_elem_sys_only", scope: !3176, file: !145, line: 62, baseType: !3395, size: 64, offset: 384)
!3395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3396, size: 64)
!3396 = !DISubroutineType(types: !3397)
!3397 = !{!625, !3170, !625}
!3398 = !DIDerivedType(tag: DW_TAG_member, name: "map_lookup_batch", scope: !3176, file: !145, line: 63, baseType: !3399, size: 64, offset: 448)
!3399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3400, size: 64)
!3400 = !DISubroutineType(types: !3401)
!3401 = !{!37, !3170, !3402, !3182}
!3402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3403, size: 64)
!3403 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3183)
!3404 = !DIDerivedType(tag: DW_TAG_member, name: "map_lookup_and_delete_batch", scope: !3176, file: !145, line: 65, baseType: !3399, size: 64, offset: 512)
!3405 = !DIDerivedType(tag: DW_TAG_member, name: "map_update_batch", scope: !3176, file: !145, line: 68, baseType: !3399, size: 64, offset: 576)
!3406 = !DIDerivedType(tag: DW_TAG_member, name: "map_delete_batch", scope: !3176, file: !145, line: 70, baseType: !3399, size: 64, offset: 640)
!3407 = !DIDerivedType(tag: DW_TAG_member, name: "map_lookup_elem", scope: !3176, file: !145, line: 74, baseType: !3395, size: 64, offset: 704)
!3408 = !DIDerivedType(tag: DW_TAG_member, name: "map_update_elem", scope: !3176, file: !145, line: 75, baseType: !3409, size: 64, offset: 768)
!3409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3410, size: 64)
!3410 = !DISubroutineType(types: !3411)
!3411 = !{!37, !3170, !625, !625, !391}
!3412 = !DIDerivedType(tag: DW_TAG_member, name: "map_delete_elem", scope: !3176, file: !145, line: 76, baseType: !3413, size: 64, offset: 832)
!3413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3414, size: 64)
!3414 = !DISubroutineType(types: !3415)
!3415 = !{!37, !3170, !625}
!3416 = !DIDerivedType(tag: DW_TAG_member, name: "map_push_elem", scope: !3176, file: !145, line: 77, baseType: !3417, size: 64, offset: 896)
!3417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3418, size: 64)
!3418 = !DISubroutineType(types: !3419)
!3419 = !{!37, !3170, !625, !391}
!3420 = !DIDerivedType(tag: DW_TAG_member, name: "map_pop_elem", scope: !3176, file: !145, line: 78, baseType: !3413, size: 64, offset: 960)
!3421 = !DIDerivedType(tag: DW_TAG_member, name: "map_peek_elem", scope: !3176, file: !145, line: 79, baseType: !3413, size: 64, offset: 1024)
!3422 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd_get_ptr", scope: !3176, file: !145, line: 82, baseType: !3423, size: 64, offset: 1088)
!3423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3424, size: 64)
!3424 = !DISubroutineType(types: !3425)
!3425 = !{!625, !3170, !1064, !37}
!3426 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd_put_ptr", scope: !3176, file: !145, line: 84, baseType: !3427, size: 64, offset: 1152)
!3427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3428, size: 64)
!3428 = !DISubroutineType(types: !3429)
!3429 = !{null, !625}
!3430 = !DIDerivedType(tag: DW_TAG_member, name: "map_gen_lookup", scope: !3176, file: !145, line: 85, baseType: !3431, size: 64, offset: 1216)
!3431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3432, size: 64)
!3432 = !DISubroutineType(types: !3433)
!3433 = !{!37, !3170, !3434}
!3434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3435, size: 64)
!3435 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_insn", file: !70, line: 65, size: 64, elements: !3436)
!3436 = !{!3437, !3438, !3439, !3440, !3441}
!3437 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !3435, file: !70, line: 66, baseType: !1452, size: 8)
!3438 = !DIDerivedType(tag: DW_TAG_member, name: "dst_reg", scope: !3435, file: !70, line: 67, baseType: !1452, size: 4, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!3439 = !DIDerivedType(tag: DW_TAG_member, name: "src_reg", scope: !3435, file: !70, line: 68, baseType: !1452, size: 4, offset: 12, flags: DIFlagBitField, extraData: i64 8)
!3440 = !DIDerivedType(tag: DW_TAG_member, name: "off", scope: !3435, file: !70, line: 69, baseType: !1299, size: 16, offset: 16)
!3441 = !DIDerivedType(tag: DW_TAG_member, name: "imm", scope: !3435, file: !70, line: 70, baseType: !1544, size: 32, offset: 32)
!3442 = !DIDerivedType(tag: DW_TAG_member, name: "map_fd_sys_lookup_elem", scope: !3176, file: !145, line: 86, baseType: !3443, size: 64, offset: 1280)
!3443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3444, size: 64)
!3444 = !DISubroutineType(types: !3445)
!3445 = !{!762, !625}
!3446 = !DIDerivedType(tag: DW_TAG_member, name: "map_seq_show_elem", scope: !3176, file: !145, line: 87, baseType: !3447, size: 64, offset: 1344)
!3447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3448, size: 64)
!3448 = !DISubroutineType(types: !3449)
!3449 = !{null, !3170, !625, !996}
!3450 = !DIDerivedType(tag: DW_TAG_member, name: "map_check_btf", scope: !3176, file: !145, line: 89, baseType: !3451, size: 64, offset: 1408)
!3451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3452, size: 64)
!3452 = !DISubroutineType(types: !3453)
!3453 = !{!37, !3454, !3456, !3149, !3149}
!3454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3455, size: 64)
!3455 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3171)
!3456 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3457, size: 64)
!3457 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3458)
!3458 = !DICompositeType(tag: DW_TAG_structure_type, name: "btf", file: !145, line: 32, flags: DIFlagFwdDecl)
!3459 = !DIDerivedType(tag: DW_TAG_member, name: "map_poke_track", scope: !3176, file: !145, line: 95, baseType: !3460, size: 64, offset: 1472)
!3460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3461, size: 64)
!3461 = !DISubroutineType(types: !3462)
!3462 = !{!37, !3170, !3069}
!3463 = !DIDerivedType(tag: DW_TAG_member, name: "map_poke_untrack", scope: !3176, file: !145, line: 96, baseType: !3464, size: 64, offset: 1536)
!3464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3465, size: 64)
!3465 = !DISubroutineType(types: !3466)
!3466 = !{null, !3170, !3069}
!3467 = !DIDerivedType(tag: DW_TAG_member, name: "map_poke_run", scope: !3176, file: !145, line: 97, baseType: !3468, size: 64, offset: 1600)
!3468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3469, size: 64)
!3469 = !DISubroutineType(types: !3470)
!3470 = !{null, !3170, !762, !3046, !3046}
!3471 = !DIDerivedType(tag: DW_TAG_member, name: "map_direct_value_addr", scope: !3176, file: !145, line: 101, baseType: !3472, size: 64, offset: 1664)
!3472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3473, size: 64)
!3473 = !DISubroutineType(types: !3474)
!3474 = !{!37, !3454, !3475, !762}
!3475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !391, size: 64)
!3476 = !DIDerivedType(tag: DW_TAG_member, name: "map_direct_value_meta", scope: !3176, file: !145, line: 103, baseType: !3477, size: 64, offset: 1728)
!3477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3478, size: 64)
!3478 = !DISubroutineType(types: !3479)
!3479 = !{!37, !3454, !391, !1514}
!3480 = !DIDerivedType(tag: DW_TAG_member, name: "map_mmap", scope: !3176, file: !145, line: 105, baseType: !3481, size: 64, offset: 1792)
!3481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3482, size: 64)
!3482 = !DISubroutineType(types: !3483)
!3483 = !{!37, !3170, !1169}
!3484 = !DIDerivedType(tag: DW_TAG_member, name: "map_poll", scope: !3176, file: !145, line: 106, baseType: !3485, size: 64, offset: 1856)
!3485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3486, size: 64)
!3486 = !DISubroutineType(types: !3487)
!3487 = !{!1143, !3170, !1064, !1144}
!3488 = !DIDerivedType(tag: DW_TAG_member, name: "map_local_storage_charge", scope: !3176, file: !145, line: 110, baseType: !3489, size: 64, offset: 1920)
!3489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3490, size: 64)
!3490 = !DISubroutineType(types: !3491)
!3491 = !{!37, !3492, !625, !762}
!3492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3493, size: 64)
!3493 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_local_storage_map", file: !145, line: 38, flags: DIFlagFwdDecl)
!3494 = !DIDerivedType(tag: DW_TAG_member, name: "map_local_storage_uncharge", scope: !3176, file: !145, line: 112, baseType: !3495, size: 64, offset: 1984)
!3495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3496, size: 64)
!3496 = !DISubroutineType(types: !3497)
!3497 = !{null, !3492, !625, !762}
!3498 = !DIDerivedType(tag: DW_TAG_member, name: "map_owner_storage_ptr", scope: !3176, file: !145, line: 114, baseType: !3499, size: 64, offset: 2048)
!3499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3500, size: 64)
!3500 = !DISubroutineType(types: !3501)
!3501 = !{!3502, !625}
!3502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3503, size: 64)
!3503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3504, size: 64)
!3504 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_local_storage", file: !145, line: 37, flags: DIFlagFwdDecl)
!3505 = !DIDerivedType(tag: DW_TAG_member, name: "map_meta_equal", scope: !3176, file: !145, line: 125, baseType: !3506, size: 64, offset: 2112)
!3506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3507, size: 64)
!3507 = !DISubroutineType(types: !3508)
!3508 = !{!595, !3454, !3454}
!3509 = !DIDerivedType(tag: DW_TAG_member, name: "map_btf_name", scope: !3176, file: !145, line: 129, baseType: !3510, size: 64, offset: 2176)
!3510 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !352)
!3511 = !DIDerivedType(tag: DW_TAG_member, name: "map_btf_id", scope: !3176, file: !145, line: 130, baseType: !594, size: 64, offset: 2240)
!3512 = !DIDerivedType(tag: DW_TAG_member, name: "iter_seq_info", scope: !3176, file: !145, line: 133, baseType: !3513, size: 64, offset: 2304)
!3513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3514, size: 64)
!3514 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3515)
!3515 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_iter_seq_info", file: !145, line: 46, size: 256, elements: !3516)
!3516 = !{!3517, !3518, !3525, !3527}
!3517 = !DIDerivedType(tag: DW_TAG_member, name: "seq_ops", scope: !3515, file: !145, line: 47, baseType: !1015, size: 64)
!3518 = !DIDerivedType(tag: DW_TAG_member, name: "init_seq_private", scope: !3515, file: !145, line: 48, baseType: !3519, size: 64, offset: 64)
!3519 = !DIDerivedType(tag: DW_TAG_typedef, name: "bpf_iter_init_seq_priv_t", file: !145, line: 43, baseType: !3520)
!3520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3521, size: 64)
!3521 = !DISubroutineType(types: !3522)
!3522 = !{!37, !625, !3523}
!3523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3524, size: 64)
!3524 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_iter_aux_info", file: !145, line: 36, flags: DIFlagFwdDecl)
!3525 = !DIDerivedType(tag: DW_TAG_member, name: "fini_seq_private", scope: !3515, file: !145, line: 49, baseType: !3526, size: 64, offset: 128)
!3526 = !DIDerivedType(tag: DW_TAG_typedef, name: "bpf_iter_fini_seq_priv_t", file: !145, line: 45, baseType: !3427)
!3527 = !DIDerivedType(tag: DW_TAG_member, name: "seq_priv_size", scope: !3515, file: !145, line: 50, baseType: !762, size: 32, offset: 192)
!3528 = !DIDerivedType(tag: DW_TAG_member, name: "inner_map_meta", scope: !3171, file: !145, line: 146, baseType: !3170, size: 64, offset: 64)
!3529 = !DIDerivedType(tag: DW_TAG_member, name: "map_type", scope: !3171, file: !145, line: 150, baseType: !182, size: 32, offset: 128)
!3530 = !DIDerivedType(tag: DW_TAG_member, name: "key_size", scope: !3171, file: !145, line: 151, baseType: !762, size: 32, offset: 160)
!3531 = !DIDerivedType(tag: DW_TAG_member, name: "value_size", scope: !3171, file: !145, line: 152, baseType: !762, size: 32, offset: 192)
!3532 = !DIDerivedType(tag: DW_TAG_member, name: "max_entries", scope: !3171, file: !145, line: 153, baseType: !762, size: 32, offset: 224)
!3533 = !DIDerivedType(tag: DW_TAG_member, name: "map_flags", scope: !3171, file: !145, line: 154, baseType: !762, size: 32, offset: 256)
!3534 = !DIDerivedType(tag: DW_TAG_member, name: "spin_lock_off", scope: !3171, file: !145, line: 155, baseType: !37, size: 32, offset: 288)
!3535 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3171, file: !145, line: 156, baseType: !762, size: 32, offset: 320)
!3536 = !DIDerivedType(tag: DW_TAG_member, name: "numa_node", scope: !3171, file: !145, line: 157, baseType: !37, size: 32, offset: 352)
!3537 = !DIDerivedType(tag: DW_TAG_member, name: "btf_key_type_id", scope: !3171, file: !145, line: 158, baseType: !762, size: 32, offset: 384)
!3538 = !DIDerivedType(tag: DW_TAG_member, name: "btf_value_type_id", scope: !3171, file: !145, line: 159, baseType: !762, size: 32, offset: 416)
!3539 = !DIDerivedType(tag: DW_TAG_member, name: "btf", scope: !3171, file: !145, line: 160, baseType: !3540, size: 64, offset: 448)
!3540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3458, size: 64)
!3541 = !DIDerivedType(tag: DW_TAG_member, name: "memory", scope: !3171, file: !145, line: 161, baseType: !3542, size: 128, offset: 512)
!3542 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_map_memory", file: !145, line: 136, size: 128, elements: !3543)
!3543 = !{!3544, !3545}
!3544 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !3542, file: !145, line: 137, baseType: !762, size: 32)
!3545 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !3542, file: !145, line: 138, baseType: !1975, size: 64, offset: 64)
!3546 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3171, file: !145, line: 162, baseType: !327, size: 128, offset: 640)
!3547 = !DIDerivedType(tag: DW_TAG_member, name: "btf_vmlinux_value_type_id", scope: !3171, file: !145, line: 163, baseType: !762, size: 32, offset: 768)
!3548 = !DIDerivedType(tag: DW_TAG_member, name: "bypass_spec_v1", scope: !3171, file: !145, line: 164, baseType: !595, size: 8, offset: 800)
!3549 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !3171, file: !145, line: 165, baseType: !595, size: 8, offset: 808)
!3550 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !3171, file: !145, line: 171, baseType: !433, size: 64, align: 512, offset: 1024)
!3551 = !DIDerivedType(tag: DW_TAG_member, name: "usercnt", scope: !3171, file: !145, line: 172, baseType: !433, size: 64, offset: 1088)
!3552 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !3171, file: !145, line: 173, baseType: !1782, size: 256, offset: 1152)
!3553 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_mutex", scope: !3171, file: !145, line: 174, baseType: !1008, size: 192, offset: 1408)
!3554 = !DIDerivedType(tag: DW_TAG_member, name: "writecnt", scope: !3171, file: !145, line: 175, baseType: !391, size: 64, offset: 1600)
!3555 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !3167, file: !145, line: 741, baseType: !762, size: 32, offset: 64)
!3556 = !DIDerivedType(tag: DW_TAG_member, name: "tailcall_target_stable", scope: !3158, file: !145, line: 744, baseType: !595, size: 8, offset: 320)
!3557 = !DIDerivedType(tag: DW_TAG_member, name: "adj_off", scope: !3158, file: !145, line: 745, baseType: !1451, size: 8, offset: 328)
!3558 = !DIDerivedType(tag: DW_TAG_member, name: "reason", scope: !3158, file: !145, line: 746, baseType: !1092, size: 16, offset: 336)
!3559 = !DIDerivedType(tag: DW_TAG_member, name: "insn_idx", scope: !3158, file: !145, line: 747, baseType: !762, size: 32, offset: 352)
!3560 = !DIDerivedType(tag: DW_TAG_member, name: "size_poke_tab", scope: !3070, file: !145, line: 792, baseType: !762, size: 32, offset: 1472)
!3561 = !DIDerivedType(tag: DW_TAG_member, name: "ksym", scope: !3070, file: !145, line: 793, baseType: !3122, size: 1728, offset: 1536)
!3562 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3070, file: !145, line: 794, baseType: !3563, size: 64, offset: 3264)
!3563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3564, size: 64)
!3564 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3565)
!3565 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_ops", file: !145, line: 432, size: 64, elements: !3566)
!3566 = !{!3567}
!3567 = !DIDerivedType(tag: DW_TAG_member, name: "test_run", scope: !3565, file: !145, line: 433, baseType: !3568, size: 64)
!3568 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3569, size: 64)
!3569 = !DISubroutineType(types: !3570)
!3570 = !{!37, !3046, !3402, !3182}
!3571 = !DIDerivedType(tag: DW_TAG_member, name: "used_maps", scope: !3070, file: !145, line: 795, baseType: !3572, size: 64, offset: 3328)
!3572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3170, size: 64)
!3573 = !DIDerivedType(tag: DW_TAG_member, name: "used_maps_mutex", scope: !3070, file: !145, line: 796, baseType: !1008, size: 192, offset: 3392)
!3574 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !3070, file: !145, line: 797, baseType: !3046, size: 64, offset: 3584)
!3575 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !3070, file: !145, line: 798, baseType: !1975, size: 64, offset: 3648)
!3576 = !DIDerivedType(tag: DW_TAG_member, name: "load_time", scope: !3070, file: !145, line: 799, baseType: !391, size: 64, offset: 3712)
!3577 = !DIDerivedType(tag: DW_TAG_member, name: "cgroup_storage", scope: !3070, file: !145, line: 800, baseType: !3578, size: 128, offset: 3776)
!3578 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3170, size: 128, elements: !533)
!3579 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3070, file: !145, line: 801, baseType: !327, size: 128, offset: 3904)
!3580 = !DIDerivedType(tag: DW_TAG_member, name: "offload", scope: !3070, file: !145, line: 805, baseType: !3581, size: 64, offset: 4032)
!3581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3582, size: 64)
!3582 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_offload", file: !145, line: 478, size: 576, elements: !3583)
!3583 = !{!3584, !3585, !3586, !3589, !3590, !3591, !3592, !3593, !3594}
!3584 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !3582, file: !145, line: 479, baseType: !3046, size: 64)
!3585 = !DIDerivedType(tag: DW_TAG_member, name: "netdev", scope: !3582, file: !145, line: 480, baseType: !350, size: 64, offset: 64)
!3586 = !DIDerivedType(tag: DW_TAG_member, name: "offdev", scope: !3582, file: !145, line: 481, baseType: !3587, size: 64, offset: 128)
!3587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3588, size: 64)
!3588 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_offload_dev", file: !145, line: 209, flags: DIFlagFwdDecl)
!3589 = !DIDerivedType(tag: DW_TAG_member, name: "dev_priv", scope: !3582, file: !145, line: 482, baseType: !625, size: 64, offset: 192)
!3590 = !DIDerivedType(tag: DW_TAG_member, name: "offloads", scope: !3582, file: !145, line: 483, baseType: !344, size: 128, offset: 256)
!3591 = !DIDerivedType(tag: DW_TAG_member, name: "dev_state", scope: !3582, file: !145, line: 484, baseType: !595, size: 8, offset: 384)
!3592 = !DIDerivedType(tag: DW_TAG_member, name: "opt_failed", scope: !3582, file: !145, line: 485, baseType: !595, size: 8, offset: 392)
!3593 = !DIDerivedType(tag: DW_TAG_member, name: "jited_image", scope: !3582, file: !145, line: 486, baseType: !625, size: 64, offset: 448)
!3594 = !DIDerivedType(tag: DW_TAG_member, name: "jited_len", scope: !3582, file: !145, line: 487, baseType: !762, size: 32, offset: 512)
!3595 = !DIDerivedType(tag: DW_TAG_member, name: "btf", scope: !3070, file: !145, line: 806, baseType: !3540, size: 64, offset: 4096)
!3596 = !DIDerivedType(tag: DW_TAG_member, name: "func_info", scope: !3070, file: !145, line: 807, baseType: !3597, size: 64, offset: 4160)
!3597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3598, size: 64)
!3598 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_func_info", file: !70, line: 4963, size: 64, elements: !3599)
!3599 = !{!3600, !3601}
!3600 = !DIDerivedType(tag: DW_TAG_member, name: "insn_off", scope: !3598, file: !70, line: 4964, baseType: !523, size: 32)
!3601 = !DIDerivedType(tag: DW_TAG_member, name: "type_id", scope: !3598, file: !70, line: 4965, baseType: !523, size: 32, offset: 32)
!3602 = !DIDerivedType(tag: DW_TAG_member, name: "func_info_aux", scope: !3070, file: !145, line: 808, baseType: !3603, size: 64, offset: 4224)
!3603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3604, size: 64)
!3604 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_func_info_aux", file: !145, line: 724, size: 32, elements: !3605)
!3605 = !{!3606, !3607}
!3606 = !DIDerivedType(tag: DW_TAG_member, name: "linkage", scope: !3604, file: !145, line: 725, baseType: !1092, size: 16)
!3607 = !DIDerivedType(tag: DW_TAG_member, name: "unreliable", scope: !3604, file: !145, line: 726, baseType: !595, size: 8, offset: 16)
!3608 = !DIDerivedType(tag: DW_TAG_member, name: "linfo", scope: !3070, file: !145, line: 815, baseType: !3609, size: 64, offset: 4288)
!3609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3610, size: 64)
!3610 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_line_info", file: !70, line: 4971, size: 128, elements: !3611)
!3611 = !{!3612, !3613, !3614, !3615}
!3612 = !DIDerivedType(tag: DW_TAG_member, name: "insn_off", scope: !3610, file: !70, line: 4972, baseType: !523, size: 32)
!3613 = !DIDerivedType(tag: DW_TAG_member, name: "file_name_off", scope: !3610, file: !70, line: 4973, baseType: !523, size: 32, offset: 32)
!3614 = !DIDerivedType(tag: DW_TAG_member, name: "line_off", scope: !3610, file: !70, line: 4974, baseType: !523, size: 32, offset: 64)
!3615 = !DIDerivedType(tag: DW_TAG_member, name: "line_col", scope: !3610, file: !70, line: 4975, baseType: !523, size: 32, offset: 96)
!3616 = !DIDerivedType(tag: DW_TAG_member, name: "jited_linfo", scope: !3070, file: !145, line: 823, baseType: !3617, size: 64, offset: 4352)
!3617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !625, size: 64)
!3618 = !DIDerivedType(tag: DW_TAG_member, name: "func_info_cnt", scope: !3070, file: !145, line: 824, baseType: !762, size: 32, offset: 4416)
!3619 = !DIDerivedType(tag: DW_TAG_member, name: "nr_linfo", scope: !3070, file: !145, line: 825, baseType: !762, size: 32, offset: 4448)
!3620 = !DIDerivedType(tag: DW_TAG_member, name: "linfo_idx", scope: !3070, file: !145, line: 830, baseType: !762, size: 32, offset: 4480)
!3621 = !DIDerivedType(tag: DW_TAG_member, name: "num_exentries", scope: !3070, file: !145, line: 831, baseType: !762, size: 32, offset: 4512)
!3622 = !DIDerivedType(tag: DW_TAG_member, name: "extable", scope: !3070, file: !145, line: 832, baseType: !3623, size: 64, offset: 4544)
!3623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3624, size: 64)
!3624 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "exception_table_entry", file: !3625, line: 17, size: 96, elements: !3626)
!3625 = !DIFile(filename: "./arch/x86/include/asm/extable.h", directory: "/home/lizy2001/genbc/linux")
!3626 = !{!3627, !3628, !3629}
!3627 = !DIDerivedType(tag: DW_TAG_member, name: "insn", scope: !3624, file: !3625, line: 18, baseType: !37, size: 32)
!3628 = !DIDerivedType(tag: DW_TAG_member, name: "fixup", scope: !3624, file: !3625, line: 18, baseType: !37, size: 32, offset: 32)
!3629 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !3624, file: !3625, line: 18, baseType: !37, size: 32, offset: 64)
!3630 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !3070, file: !145, line: 833, baseType: !3631, size: 64, offset: 4608)
!3631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3632, size: 64)
!3632 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_prog_stats", file: !145, line: 503, size: 128, align: 128, elements: !3633)
!3633 = !{!3634, !3635, !3636}
!3634 = !DIDerivedType(tag: DW_TAG_member, name: "cnt", scope: !3632, file: !145, line: 504, baseType: !391, size: 64)
!3635 = !DIDerivedType(tag: DW_TAG_member, name: "nsecs", scope: !3632, file: !145, line: 505, baseType: !391, size: 64, offset: 64)
!3636 = !DIDerivedType(tag: DW_TAG_member, name: "syncp", scope: !3632, file: !145, line: 506, baseType: !2131, offset: 128)
!3637 = !DIDerivedType(tag: DW_TAG_member, scope: !3070, file: !145, line: 834, baseType: !3638, size: 256, offset: 4672)
!3638 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3070, file: !145, line: 834, size: 256, elements: !3639)
!3639 = !{!3640, !3641}
!3640 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !3638, file: !145, line: 835, baseType: !1782, size: 256)
!3641 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !3638, file: !145, line: 836, baseType: !359, size: 128, align: 64)
!3642 = !DIDerivedType(tag: DW_TAG_member, name: "orig_prog", scope: !3047, file: !3048, line: 544, baseType: !3643, size: 64, offset: 320)
!3643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3644, size: 64)
!3644 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sock_fprog_kern", file: !3048, line: 512, size: 128, elements: !3645)
!3645 = !{!3646, !3647}
!3646 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !3644, file: !3048, line: 513, baseType: !1092, size: 16)
!3647 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !3644, file: !3048, line: 514, baseType: !3648, size: 64, offset: 64)
!3648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3649, size: 64)
!3649 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sock_filter", file: !3650, line: 24, size: 64, elements: !3651)
!3650 = !DIFile(filename: "./include/uapi/linux/filter.h", directory: "/home/lizy2001/genbc/linux")
!3651 = !{!3652, !3653, !3654, !3655}
!3652 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !3649, file: !3650, line: 25, baseType: !531, size: 16)
!3653 = !DIDerivedType(tag: DW_TAG_member, name: "jt", scope: !3649, file: !3650, line: 26, baseType: !1452, size: 8, offset: 16)
!3654 = !DIDerivedType(tag: DW_TAG_member, name: "jf", scope: !3649, file: !3650, line: 27, baseType: !1452, size: 8, offset: 24)
!3655 = !DIDerivedType(tag: DW_TAG_member, name: "k", scope: !3649, file: !3650, line: 28, baseType: !523, size: 32, offset: 32)
!3656 = !DIDerivedType(tag: DW_TAG_member, name: "bpf_func", scope: !3047, file: !3048, line: 545, baseType: !3657, size: 64, offset: 384)
!3657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3658, size: 64)
!3658 = !DISubroutineType(types: !3659)
!3659 = !{!7, !2337, !3660}
!3660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3661, size: 64)
!3661 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3435)
!3662 = !DIDerivedType(tag: DW_TAG_member, name: "insns", scope: !3047, file: !3048, line: 548, baseType: !3663, offset: 448)
!3663 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3649, elements: !2009)
!3664 = !DIDerivedType(tag: DW_TAG_member, name: "insnsi", scope: !3047, file: !3048, line: 549, baseType: !3665, offset: 448)
!3665 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3435, elements: !369)
!3666 = !DIDerivedType(tag: DW_TAG_member, name: "cgroup_storage", scope: !3043, file: !145, line: 1034, baseType: !3667, size: 128, offset: 64)
!3667 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3668, size: 128, elements: !533)
!3668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3669, size: 64)
!3669 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_cgroup_storage", file: !145, line: 1034, flags: DIFlagFwdDecl)
!3670 = !DIDerivedType(tag: DW_TAG_member, name: "progs", scope: !3032, file: !3033, line: 17, baseType: !3671, size: 128, offset: 128)
!3671 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3046, size: 128, elements: !533)
!3672 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !3032, file: !3033, line: 18, baseType: !3673, size: 256, offset: 256)
!3673 = !DICompositeType(tag: DW_TAG_array_type, baseType: !344, size: 256, elements: !533)
!3674 = !DIDerivedType(tag: DW_TAG_member, name: "net_cookie", scope: !2050, file: !2051, line: 174, baseType: !433, size: 64, offset: 15552)
!3675 = !DIDerivedType(tag: DW_TAG_member, name: "can", scope: !2050, file: !2051, line: 183, baseType: !3676, size: 1216, offset: 15616)
!3676 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netns_can", file: !3677, line: 15, size: 1216, elements: !3678)
!3677 = !DIFile(filename: "./include/net/netns/can.h", directory: "/home/lizy2001/genbc/linux")
!3678 = !{!3679, !3680, !3681, !3682, !3683, !3684, !3685, !3686, !3687, !3688, !3689, !3692, !3693, !3694, !3697, !3700}
!3679 = !DIDerivedType(tag: DW_TAG_member, name: "proc_dir", scope: !3676, file: !3677, line: 17, baseType: !2071, size: 64)
!3680 = !DIDerivedType(tag: DW_TAG_member, name: "pde_stats", scope: !3676, file: !3677, line: 18, baseType: !2071, size: 64, offset: 64)
!3681 = !DIDerivedType(tag: DW_TAG_member, name: "pde_reset_stats", scope: !3676, file: !3677, line: 19, baseType: !2071, size: 64, offset: 128)
!3682 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_all", scope: !3676, file: !3677, line: 20, baseType: !2071, size: 64, offset: 192)
!3683 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_fil", scope: !3676, file: !3677, line: 21, baseType: !2071, size: 64, offset: 256)
!3684 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_inv", scope: !3676, file: !3677, line: 22, baseType: !2071, size: 64, offset: 320)
!3685 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_sff", scope: !3676, file: !3677, line: 23, baseType: !2071, size: 64, offset: 384)
!3686 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_eff", scope: !3676, file: !3677, line: 24, baseType: !2071, size: 64, offset: 448)
!3687 = !DIDerivedType(tag: DW_TAG_member, name: "pde_rcvlist_err", scope: !3676, file: !3677, line: 25, baseType: !2071, size: 64, offset: 512)
!3688 = !DIDerivedType(tag: DW_TAG_member, name: "bcmproc_dir", scope: !3676, file: !3677, line: 26, baseType: !2071, size: 64, offset: 576)
!3689 = !DIDerivedType(tag: DW_TAG_member, name: "rx_alldev_list", scope: !3676, file: !3677, line: 30, baseType: !3690, size: 64, offset: 640)
!3690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3691, size: 64)
!3691 = !DICompositeType(tag: DW_TAG_structure_type, name: "can_dev_rcv_lists", file: !3677, line: 11, flags: DIFlagFwdDecl)
!3692 = !DIDerivedType(tag: DW_TAG_member, name: "rcvlists_lock", scope: !3676, file: !3677, line: 31, baseType: !784, offset: 704)
!3693 = !DIDerivedType(tag: DW_TAG_member, name: "stattimer", scope: !3676, file: !3677, line: 32, baseType: !2314, size: 320, offset: 704)
!3694 = !DIDerivedType(tag: DW_TAG_member, name: "pkg_stats", scope: !3676, file: !3677, line: 33, baseType: !3695, size: 64, offset: 1024)
!3695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3696, size: 64)
!3696 = !DICompositeType(tag: DW_TAG_structure_type, name: "can_pkg_stats", file: !3677, line: 12, flags: DIFlagFwdDecl)
!3697 = !DIDerivedType(tag: DW_TAG_member, name: "rcv_lists_stats", scope: !3676, file: !3677, line: 34, baseType: !3698, size: 64, offset: 1088)
!3698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3699, size: 64)
!3699 = !DICompositeType(tag: DW_TAG_structure_type, name: "can_rcv_lists_stats", file: !3677, line: 13, flags: DIFlagFwdDecl)
!3700 = !DIDerivedType(tag: DW_TAG_member, name: "cgw_list", scope: !3676, file: !3677, line: 37, baseType: !911, size: 64, offset: 1152)
!3701 = !DIDerivedType(tag: DW_TAG_member, name: "diag_nlsk", scope: !2050, file: !2051, line: 191, baseType: !505, size: 64, offset: 16832)
!3702 = !DIDerivedType(tag: DW_TAG_member, name: "time_ns", scope: !2034, file: !2035, line: 38, baseType: !3703, size: 64, offset: 384)
!3703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3704, size: 64)
!3704 = !DICompositeType(tag: DW_TAG_structure_type, name: "time_namespace", file: !2035, line: 38, flags: DIFlagFwdDecl)
!3705 = !DIDerivedType(tag: DW_TAG_member, name: "time_ns_for_children", scope: !2034, file: !2035, line: 39, baseType: !3703, size: 64, offset: 448)
!3706 = !DIDerivedType(tag: DW_TAG_member, name: "cgroup_ns", scope: !2034, file: !2035, line: 40, baseType: !3707, size: 64, offset: 512)
!3707 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3708, size: 64)
!3708 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cgroup_namespace", file: !3709, line: 856, size: 448, elements: !3710)
!3709 = !DIFile(filename: "./include/linux/cgroup.h", directory: "/home/lizy2001/genbc/linux")
!3710 = !{!3711, !3712, !3713, !3714, !3715}
!3711 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3708, file: !3709, line: 857, baseType: !1325, size: 32)
!3712 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !3708, file: !3709, line: 858, baseType: !1659, size: 192, offset: 64)
!3713 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !3708, file: !3709, line: 859, baseType: !1625, size: 64, offset: 256)
!3714 = !DIDerivedType(tag: DW_TAG_member, name: "ucounts", scope: !3708, file: !3709, line: 860, baseType: !1887, size: 64, offset: 320)
!3715 = !DIDerivedType(tag: DW_TAG_member, name: "root_cset", scope: !3708, file: !3709, line: 861, baseType: !3716, size: 64, offset: 384)
!3716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3717, size: 64)
!3717 = !DICompositeType(tag: DW_TAG_structure_type, name: "css_set", file: !3718, line: 16, flags: DIFlagFwdDecl)
!3718 = !DIFile(filename: "./include/linux/sched/task.h", directory: "/home/lizy2001/genbc/linux")
!3719 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !1312, file: !1313, line: 969, baseType: !3720, size: 64, offset: 9216)
!3720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3721, size: 64)
!3721 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "signal_struct", file: !3722, line: 82, size: 7296, elements: !3723)
!3722 = !DIFile(filename: "./include/linux/sched/signal.h", directory: "/home/lizy2001/genbc/linux")
!3723 = !{!3724, !3725, !3726, !3727, !3728, !3729, !3730, !3741, !3742, !3743, !3744, !3745, !3746, !3747, !3748, !3749, !3750, !3751, !3752, !3753, !3759, !3768, !3769, !3771, !3772, !3773, !3776, !3777, !3778, !3779, !3780, !3781, !3782, !3783, !3784, !3785, !3786, !3787, !3788, !3789, !3790, !3791, !3792, !3793, !3794, !3795, !3796, !3797, !3798, !3801, !3802, !3809, !3810, !3811, !3812, !3813, !3814}
!3724 = !DIDerivedType(tag: DW_TAG_member, name: "sigcnt", scope: !3721, file: !3722, line: 83, baseType: !1325, size: 32)
!3725 = !DIDerivedType(tag: DW_TAG_member, name: "live", scope: !3721, file: !3722, line: 84, baseType: !443, size: 32, offset: 32)
!3726 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !3721, file: !3722, line: 85, baseType: !37, size: 32, offset: 64)
!3727 = !DIDerivedType(tag: DW_TAG_member, name: "thread_head", scope: !3721, file: !3722, line: 86, baseType: !344, size: 128, offset: 128)
!3728 = !DIDerivedType(tag: DW_TAG_member, name: "wait_chldexit", scope: !3721, file: !3722, line: 88, baseType: !1154, size: 128, offset: 256)
!3729 = !DIDerivedType(tag: DW_TAG_member, name: "curr_target", scope: !3721, file: !3722, line: 91, baseType: !1311, size: 64, offset: 384)
!3730 = !DIDerivedType(tag: DW_TAG_member, name: "shared_pending", scope: !3721, file: !3722, line: 94, baseType: !3731, size: 192, offset: 448)
!3731 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigpending", file: !3732, line: 30, size: 192, elements: !3733)
!3732 = !DIFile(filename: "./include/linux/signal_types.h", directory: "/home/lizy2001/genbc/linux")
!3733 = !{!3734, !3735}
!3734 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3731, file: !3732, line: 31, baseType: !344, size: 128)
!3735 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !3731, file: !3732, line: 32, baseType: !3736, size: 64, offset: 128)
!3736 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigset_t", file: !3737, line: 25, baseType: !3738)
!3737 = !DIFile(filename: "./arch/x86/include/asm/signal.h", directory: "/home/lizy2001/genbc/linux")
!3738 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3737, line: 23, size: 64, elements: !3739)
!3739 = !{!3740}
!3740 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !3738, file: !3737, line: 24, baseType: !1469, size: 64)
!3741 = !DIDerivedType(tag: DW_TAG_member, name: "multiprocess", scope: !3721, file: !3722, line: 97, baseType: !911, size: 64, offset: 640)
!3742 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_code", scope: !3721, file: !3722, line: 100, baseType: !37, size: 32, offset: 704)
!3743 = !DIDerivedType(tag: DW_TAG_member, name: "notify_count", scope: !3721, file: !3722, line: 106, baseType: !37, size: 32, offset: 736)
!3744 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_task", scope: !3721, file: !3722, line: 107, baseType: !1311, size: 64, offset: 768)
!3745 = !DIDerivedType(tag: DW_TAG_member, name: "group_stop_count", scope: !3721, file: !3722, line: 110, baseType: !37, size: 32, offset: 832)
!3746 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3721, file: !3722, line: 111, baseType: !7, size: 32, offset: 864)
!3747 = !DIDerivedType(tag: DW_TAG_member, name: "is_child_subreaper", scope: !3721, file: !3722, line: 122, baseType: !7, size: 1, offset: 896, flags: DIFlagBitField, extraData: i64 896)
!3748 = !DIDerivedType(tag: DW_TAG_member, name: "has_child_subreaper", scope: !3721, file: !3722, line: 123, baseType: !7, size: 1, offset: 897, flags: DIFlagBitField, extraData: i64 896)
!3749 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timer_id", scope: !3721, file: !3722, line: 128, baseType: !37, size: 32, offset: 928)
!3750 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timers", scope: !3721, file: !3722, line: 129, baseType: !344, size: 128, offset: 960)
!3751 = !DIDerivedType(tag: DW_TAG_member, name: "real_timer", scope: !3721, file: !3722, line: 132, baseType: !1387, size: 512, offset: 1088)
!3752 = !DIDerivedType(tag: DW_TAG_member, name: "it_real_incr", scope: !3721, file: !3722, line: 133, baseType: !1395, size: 64, offset: 1600)
!3753 = !DIDerivedType(tag: DW_TAG_member, name: "it", scope: !3721, file: !3722, line: 140, baseType: !3754, size: 256, offset: 1664)
!3754 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3755, size: 256, elements: !533)
!3755 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpu_itimer", file: !3722, line: 38, size: 128, elements: !3756)
!3756 = !{!3757, !3758}
!3757 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !3755, file: !3722, line: 39, baseType: !391, size: 64)
!3758 = !DIDerivedType(tag: DW_TAG_member, name: "incr", scope: !3755, file: !3722, line: 40, baseType: !391, size: 64, offset: 64)
!3759 = !DIDerivedType(tag: DW_TAG_member, name: "cputimer", scope: !3721, file: !3722, line: 146, baseType: !3760, size: 192, offset: 1920)
!3760 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_group_cputimer", file: !3722, line: 66, size: 192, elements: !3761)
!3761 = !{!3762}
!3762 = !DIDerivedType(tag: DW_TAG_member, name: "cputime_atomic", scope: !3760, file: !3722, line: 67, baseType: !3763, size: 192)
!3763 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_cputime_atomic", file: !3722, line: 47, size: 192, elements: !3764)
!3764 = !{!3765, !3766, !3767}
!3765 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !3763, file: !3722, line: 48, baseType: !433, size: 64)
!3766 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !3763, file: !3722, line: 49, baseType: !433, size: 64, offset: 64)
!3767 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !3763, file: !3722, line: 50, baseType: !433, size: 64, offset: 128)
!3768 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !3721, file: !3722, line: 150, baseType: !1926, size: 640, offset: 2112)
!3769 = !DIDerivedType(tag: DW_TAG_member, name: "pids", scope: !3721, file: !3722, line: 153, baseType: !3770, size: 256, offset: 2752)
!3770 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1575, size: 256, elements: !1256)
!3771 = !DIDerivedType(tag: DW_TAG_member, name: "tty_old_pgrp", scope: !3721, file: !3722, line: 159, baseType: !1575, size: 64, offset: 3008)
!3772 = !DIDerivedType(tag: DW_TAG_member, name: "leader", scope: !3721, file: !3722, line: 162, baseType: !37, size: 32, offset: 3072)
!3773 = !DIDerivedType(tag: DW_TAG_member, name: "tty", scope: !3721, file: !3722, line: 164, baseType: !3774, size: 64, offset: 3136)
!3774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3775, size: 64)
!3775 = !DICompositeType(tag: DW_TAG_structure_type, name: "tty_struct", file: !3722, line: 164, flags: DIFlagFwdDecl)
!3776 = !DIDerivedType(tag: DW_TAG_member, name: "stats_lock", scope: !3721, file: !3722, line: 175, baseType: !2247, size: 32, offset: 3200)
!3777 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !3721, file: !3722, line: 176, baseType: !391, size: 64, offset: 3264)
!3778 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !3721, file: !3722, line: 176, baseType: !391, size: 64, offset: 3328)
!3779 = !DIDerivedType(tag: DW_TAG_member, name: "cutime", scope: !3721, file: !3722, line: 176, baseType: !391, size: 64, offset: 3392)
!3780 = !DIDerivedType(tag: DW_TAG_member, name: "cstime", scope: !3721, file: !3722, line: 176, baseType: !391, size: 64, offset: 3456)
!3781 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !3721, file: !3722, line: 177, baseType: !391, size: 64, offset: 3520)
!3782 = !DIDerivedType(tag: DW_TAG_member, name: "cgtime", scope: !3721, file: !3722, line: 178, baseType: !391, size: 64, offset: 3584)
!3783 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !3721, file: !3722, line: 179, baseType: !1914, size: 128, offset: 3648)
!3784 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !3721, file: !3722, line: 180, baseType: !372, size: 64, offset: 3776)
!3785 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !3721, file: !3722, line: 180, baseType: !372, size: 64, offset: 3840)
!3786 = !DIDerivedType(tag: DW_TAG_member, name: "cnvcsw", scope: !3721, file: !3722, line: 180, baseType: !372, size: 64, offset: 3904)
!3787 = !DIDerivedType(tag: DW_TAG_member, name: "cnivcsw", scope: !3721, file: !3722, line: 180, baseType: !372, size: 64, offset: 3968)
!3788 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !3721, file: !3722, line: 181, baseType: !372, size: 64, offset: 4032)
!3789 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !3721, file: !3722, line: 181, baseType: !372, size: 64, offset: 4096)
!3790 = !DIDerivedType(tag: DW_TAG_member, name: "cmin_flt", scope: !3721, file: !3722, line: 181, baseType: !372, size: 64, offset: 4160)
!3791 = !DIDerivedType(tag: DW_TAG_member, name: "cmaj_flt", scope: !3721, file: !3722, line: 181, baseType: !372, size: 64, offset: 4224)
!3792 = !DIDerivedType(tag: DW_TAG_member, name: "inblock", scope: !3721, file: !3722, line: 182, baseType: !372, size: 64, offset: 4288)
!3793 = !DIDerivedType(tag: DW_TAG_member, name: "oublock", scope: !3721, file: !3722, line: 182, baseType: !372, size: 64, offset: 4352)
!3794 = !DIDerivedType(tag: DW_TAG_member, name: "cinblock", scope: !3721, file: !3722, line: 182, baseType: !372, size: 64, offset: 4416)
!3795 = !DIDerivedType(tag: DW_TAG_member, name: "coublock", scope: !3721, file: !3722, line: 182, baseType: !372, size: 64, offset: 4480)
!3796 = !DIDerivedType(tag: DW_TAG_member, name: "maxrss", scope: !3721, file: !3722, line: 183, baseType: !372, size: 64, offset: 4544)
!3797 = !DIDerivedType(tag: DW_TAG_member, name: "cmaxrss", scope: !3721, file: !3722, line: 183, baseType: !372, size: 64, offset: 4608)
!3798 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !3721, file: !3722, line: 184, baseType: !3799, offset: 4672)
!3799 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_io_accounting", file: !3800, line: 12, elements: !798)
!3800 = !DIFile(filename: "./include/linux/task_io_accounting.h", directory: "/home/lizy2001/genbc/linux")
!3801 = !DIDerivedType(tag: DW_TAG_member, name: "sum_sched_runtime", scope: !3721, file: !3722, line: 192, baseType: !395, size: 64, offset: 4672)
!3802 = !DIDerivedType(tag: DW_TAG_member, name: "rlim", scope: !3721, file: !3722, line: 203, baseType: !3803, size: 2048, offset: 4736)
!3803 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3804, size: 2048, elements: !329)
!3804 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rlimit", file: !3805, line: 43, size: 128, elements: !3806)
!3805 = !DIFile(filename: "./include/uapi/linux/resource.h", directory: "/home/lizy2001/genbc/linux")
!3806 = !{!3807, !3808}
!3807 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_cur", scope: !3804, file: !3805, line: 44, baseType: !652, size: 64)
!3808 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_max", scope: !3804, file: !3805, line: 45, baseType: !652, size: 64, offset: 64)
!3809 = !DIDerivedType(tag: DW_TAG_member, name: "oom_flag_origin", scope: !3721, file: !3722, line: 220, baseType: !595, size: 8, offset: 6784)
!3810 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj", scope: !3721, file: !3722, line: 221, baseType: !1300, size: 16, offset: 6800)
!3811 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj_min", scope: !3721, file: !3722, line: 222, baseType: !1300, size: 16, offset: 6816)
!3812 = !DIDerivedType(tag: DW_TAG_member, name: "oom_mm", scope: !3721, file: !3722, line: 224, baseType: !1179, size: 64, offset: 6848)
!3813 = !DIDerivedType(tag: DW_TAG_member, name: "cred_guard_mutex", scope: !3721, file: !3722, line: 227, baseType: !1008, size: 192, offset: 6912)
!3814 = !DIDerivedType(tag: DW_TAG_member, name: "exec_update_mutex", scope: !3721, file: !3722, line: 233, baseType: !1008, size: 192, offset: 7104)
!3815 = !DIDerivedType(tag: DW_TAG_member, name: "sighand", scope: !1312, file: !1313, line: 970, baseType: !3816, size: 64, offset: 9280)
!3816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3817, size: 64)
!3817 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sighand_struct", file: !3722, line: 20, size: 16576, elements: !3818)
!3818 = !{!3819, !3820, !3821, !3822}
!3819 = !DIDerivedType(tag: DW_TAG_member, name: "siglock", scope: !3817, file: !3722, line: 21, baseType: !784)
!3820 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3817, file: !3722, line: 22, baseType: !1325, size: 32)
!3821 = !DIDerivedType(tag: DW_TAG_member, name: "signalfd_wqh", scope: !3817, file: !3722, line: 23, baseType: !1154, size: 128, offset: 64)
!3822 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !3817, file: !3722, line: 24, baseType: !3823, size: 16384, offset: 192)
!3823 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3824, size: 16384, elements: !3844)
!3824 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sigaction", file: !3732, line: 49, size: 256, elements: !3825)
!3825 = !{!3826}
!3826 = !DIDerivedType(tag: DW_TAG_member, name: "sa", scope: !3824, file: !3732, line: 50, baseType: !3827, size: 256)
!3827 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigaction", file: !3732, line: 35, size: 256, elements: !3828)
!3828 = !{!3829, !3836, !3837, !3843}
!3829 = !DIDerivedType(tag: DW_TAG_member, name: "sa_handler", scope: !3827, file: !3732, line: 37, baseType: !3830, size: 64)
!3830 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sighandler_t", file: !3831, line: 19, baseType: !3832)
!3831 = !DIFile(filename: "./include/uapi/asm-generic/signal-defs.h", directory: "/home/lizy2001/genbc/linux")
!3832 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3833, size: 64)
!3833 = !DIDerivedType(tag: DW_TAG_typedef, name: "__signalfn_t", file: !3831, line: 18, baseType: !3834)
!3834 = !DISubroutineType(types: !3835)
!3835 = !{null, !37}
!3836 = !DIDerivedType(tag: DW_TAG_member, name: "sa_flags", scope: !3827, file: !3732, line: 38, baseType: !372, size: 64, offset: 64)
!3837 = !DIDerivedType(tag: DW_TAG_member, name: "sa_restorer", scope: !3827, file: !3732, line: 44, baseType: !3838, size: 64, offset: 128)
!3838 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sigrestore_t", file: !3831, line: 22, baseType: !3839)
!3839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3840, size: 64)
!3840 = !DIDerivedType(tag: DW_TAG_typedef, name: "__restorefn_t", file: !3831, line: 21, baseType: !3841)
!3841 = !DISubroutineType(types: !3842)
!3842 = !{null}
!3843 = !DIDerivedType(tag: DW_TAG_member, name: "sa_mask", scope: !3827, file: !3732, line: 46, baseType: !3736, size: 64, offset: 192)
!3844 = !{!3845}
!3845 = !DISubrange(count: 64)
!3846 = !DIDerivedType(tag: DW_TAG_member, name: "blocked", scope: !1312, file: !1313, line: 971, baseType: !3736, size: 64, offset: 9344)
!3847 = !DIDerivedType(tag: DW_TAG_member, name: "real_blocked", scope: !1312, file: !1313, line: 972, baseType: !3736, size: 64, offset: 9408)
!3848 = !DIDerivedType(tag: DW_TAG_member, name: "saved_sigmask", scope: !1312, file: !1313, line: 974, baseType: !3736, size: 64, offset: 9472)
!3849 = !DIDerivedType(tag: DW_TAG_member, name: "pending", scope: !1312, file: !1313, line: 975, baseType: !3731, size: 192, offset: 9536)
!3850 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_sp", scope: !1312, file: !1313, line: 976, baseType: !372, size: 64, offset: 9728)
!3851 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_size", scope: !1312, file: !1313, line: 977, baseType: !649, size: 64, offset: 9792)
!3852 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_flags", scope: !1312, file: !1313, line: 978, baseType: !7, size: 32, offset: 9856)
!3853 = !DIDerivedType(tag: DW_TAG_member, name: "task_works", scope: !1312, file: !1313, line: 980, baseType: !362, size: 64, offset: 9920)
!3854 = !DIDerivedType(tag: DW_TAG_member, name: "seccomp", scope: !1312, file: !1313, line: 989, baseType: !3855, size: 128, offset: 9984)
!3855 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp", file: !3856, line: 35, size: 128, elements: !3857)
!3856 = !DIFile(filename: "./include/linux/seccomp.h", directory: "/home/lizy2001/genbc/linux")
!3857 = !{!3858, !3859, !3860}
!3858 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3855, file: !3856, line: 36, baseType: !37, size: 32)
!3859 = !DIDerivedType(tag: DW_TAG_member, name: "filter_count", scope: !3855, file: !3856, line: 37, baseType: !443, size: 32, offset: 32)
!3860 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !3855, file: !3856, line: 38, baseType: !3861, size: 64, offset: 64)
!3861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3862, size: 64)
!3862 = !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp_filter", file: !3856, line: 23, flags: DIFlagFwdDecl)
!3863 = !DIDerivedType(tag: DW_TAG_member, name: "parent_exec_id", scope: !1312, file: !1313, line: 992, baseType: !391, size: 64, offset: 10112)
!3864 = !DIDerivedType(tag: DW_TAG_member, name: "self_exec_id", scope: !1312, file: !1313, line: 993, baseType: !391, size: 64, offset: 10176)
!3865 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_lock", scope: !1312, file: !1313, line: 996, baseType: !784, offset: 10240)
!3866 = !DIDerivedType(tag: DW_TAG_member, name: "pi_lock", scope: !1312, file: !1313, line: 999, baseType: !1222, offset: 10240)
!3867 = !DIDerivedType(tag: DW_TAG_member, name: "wake_q", scope: !1312, file: !1313, line: 1001, baseType: !3868, size: 64, offset: 10240)
!3868 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wake_q_node", file: !1313, line: 636, size: 64, elements: !3869)
!3869 = !{!3870}
!3870 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3868, file: !1313, line: 637, baseType: !3871, size: 64)
!3871 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3868, size: 64)
!3872 = !DIDerivedType(tag: DW_TAG_member, name: "pi_waiters", scope: !1312, file: !1313, line: 1005, baseType: !1441, size: 128, offset: 10304)
!3873 = !DIDerivedType(tag: DW_TAG_member, name: "pi_top_task", scope: !1312, file: !1313, line: 1007, baseType: !1311, size: 64, offset: 10432)
!3874 = !DIDerivedType(tag: DW_TAG_member, name: "pi_blocked_on", scope: !1312, file: !1313, line: 1009, baseType: !3875, size: 64, offset: 10496)
!3875 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3876, size: 64)
!3876 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt_mutex_waiter", file: !1313, line: 1009, flags: DIFlagFwdDecl)
!3877 = !DIDerivedType(tag: DW_TAG_member, name: "journal_info", scope: !1312, file: !1313, line: 1043, baseType: !625, size: 64, offset: 10560)
!3878 = !DIDerivedType(tag: DW_TAG_member, name: "bio_list", scope: !1312, file: !1313, line: 1046, baseType: !3879, size: 64, offset: 10624)
!3879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3880, size: 64)
!3880 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_list", file: !3881, line: 554, size: 128, elements: !3882)
!3881 = !DIFile(filename: "./include/linux/bio.h", directory: "/home/lizy2001/genbc/linux")
!3882 = !{!3883, !5534}
!3883 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3880, file: !3881, line: 555, baseType: !3884, size: 64)
!3884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3885, size: 64)
!3885 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio", file: !3886, line: 203, size: 832, elements: !3887)
!3886 = !DIFile(filename: "./include/linux/blk_types.h", directory: "/home/lizy2001/genbc/linux")
!3887 = !{!3888, !3889, !5488, !5489, !5490, !5491, !5492, !5493, !5494, !5495, !5502, !5507, !5508, !5527, !5528, !5529, !5530, !5531, !5533}
!3888 = !DIDerivedType(tag: DW_TAG_member, name: "bi_next", scope: !3885, file: !3886, line: 204, baseType: !3884, size: 64)
!3889 = !DIDerivedType(tag: DW_TAG_member, name: "bi_disk", scope: !3885, file: !3886, line: 205, baseType: !3890, size: 64, offset: 64)
!3890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3891, size: 64)
!3891 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gendisk", file: !3892, line: 167, size: 8512, elements: !3893)
!3892 = !DIFile(filename: "./include/linux/genhd.h", directory: "/home/lizy2001/genbc/linux")
!3893 = !{!3894, !3895, !3896, !3897, !3899, !3900, !3901, !4781, !4782, !4958, !5469, !5470, !5471, !5472, !5473, !5474, !5477, !5478, !5481, !5482, !5483, !5486}
!3894 = !DIDerivedType(tag: DW_TAG_member, name: "major", scope: !3891, file: !3892, line: 171, baseType: !37, size: 32)
!3895 = !DIDerivedType(tag: DW_TAG_member, name: "first_minor", scope: !3891, file: !3892, line: 172, baseType: !37, size: 32, offset: 32)
!3896 = !DIDerivedType(tag: DW_TAG_member, name: "minors", scope: !3891, file: !3892, line: 173, baseType: !37, size: 32, offset: 64)
!3897 = !DIDerivedType(tag: DW_TAG_member, name: "disk_name", scope: !3891, file: !3892, line: 176, baseType: !3898, size: 256, offset: 96)
!3898 = !DICompositeType(tag: DW_TAG_array_type, baseType: !328, size: 256, elements: !771)
!3899 = !DIDerivedType(tag: DW_TAG_member, name: "events", scope: !3891, file: !3892, line: 178, baseType: !532, size: 16, offset: 352)
!3900 = !DIDerivedType(tag: DW_TAG_member, name: "event_flags", scope: !3891, file: !3892, line: 179, baseType: !532, size: 16, offset: 368)
!3901 = !DIDerivedType(tag: DW_TAG_member, name: "part_tbl", scope: !3891, file: !3892, line: 186, baseType: !3902, size: 64, offset: 384)
!3902 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3903, size: 64)
!3903 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "disk_part_tbl", file: !3892, line: 149, size: 256, elements: !3904)
!3904 = !{!3905, !3906, !3907, !4779}
!3905 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !3903, file: !3892, line: 150, baseType: !359, size: 128, align: 64)
!3906 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !3903, file: !3892, line: 151, baseType: !37, size: 32, offset: 128)
!3907 = !DIDerivedType(tag: DW_TAG_member, name: "last_lookup", scope: !3903, file: !3892, line: 152, baseType: !3908, size: 64, offset: 192)
!3908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3909, size: 64)
!3909 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hd_struct", file: !3892, line: 53, size: 6592, elements: !3910)
!3910 = !{!3911, !3913, !3914, !3915, !3918, !3939, !4762, !4763, !4764, !4765, !4773}
!3911 = !DIDerivedType(tag: DW_TAG_member, name: "start_sect", scope: !3909, file: !3892, line: 54, baseType: !3912, size: 64)
!3912 = !DIDerivedType(tag: DW_TAG_typedef, name: "sector_t", file: !337, line: 125, baseType: !391)
!3913 = !DIDerivedType(tag: DW_TAG_member, name: "nr_sects", scope: !3909, file: !3892, line: 60, baseType: !3912, size: 64, offset: 64)
!3914 = !DIDerivedType(tag: DW_TAG_member, name: "stamp", scope: !3909, file: !3892, line: 64, baseType: !372, size: 64, offset: 128)
!3915 = !DIDerivedType(tag: DW_TAG_member, name: "dkstats", scope: !3909, file: !3892, line: 65, baseType: !3916, size: 64, offset: 192)
!3916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3917, size: 64)
!3917 = !DICompositeType(tag: DW_TAG_structure_type, name: "disk_stats", file: !3892, line: 65, flags: DIFlagFwdDecl)
!3918 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !3909, file: !3892, line: 66, baseType: !3919, size: 128, offset: 256)
!3919 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref", file: !3920, line: 105, size: 128, elements: !3921)
!3920 = !DIFile(filename: "./include/linux/percpu-refcount.h", directory: "/home/lizy2001/genbc/linux")
!3921 = !{!3922, !3923}
!3922 = !DIDerivedType(tag: DW_TAG_member, name: "percpu_count_ptr", scope: !3919, file: !3920, line: 110, baseType: !372, size: 64)
!3923 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3919, file: !3920, line: 118, baseType: !3924, size: 64, offset: 64)
!3924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3925, size: 64)
!3925 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref_data", file: !3920, line: 95, size: 448, elements: !3926)
!3926 = !{!3927, !3928, !3934, !3935, !3936, !3937, !3938}
!3927 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3925, file: !3920, line: 96, baseType: !431, size: 64)
!3928 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3925, file: !3920, line: 97, baseType: !3929, size: 64, offset: 64)
!3929 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3930, size: 64)
!3930 = !DIDerivedType(tag: DW_TAG_typedef, name: "percpu_ref_func_t", file: !3920, line: 60, baseType: !3931)
!3931 = !DISubroutineType(types: !3932)
!3932 = !{null, !3933}
!3933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3919, size: 64)
!3934 = !DIDerivedType(tag: DW_TAG_member, name: "confirm_switch", scope: !3925, file: !3920, line: 98, baseType: !3929, size: 64, offset: 128)
!3935 = !DIDerivedType(tag: DW_TAG_member, name: "force_atomic", scope: !3925, file: !3920, line: 99, baseType: !595, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!3936 = !DIDerivedType(tag: DW_TAG_member, name: "allow_reinit", scope: !3925, file: !3920, line: 100, baseType: !595, size: 1, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!3937 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !3925, file: !3920, line: 101, baseType: !359, size: 128, align: 64, offset: 256)
!3938 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !3925, file: !3920, line: 102, baseType: !3933, size: 64, offset: 384)
!3939 = !DIDerivedType(tag: DW_TAG_member, name: "__dev", scope: !3909, file: !3892, line: 68, baseType: !3940, size: 5568, offset: 384)
!3940 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !3941, line: 461, size: 5568, elements: !3942)
!3941 = !DIFile(filename: "./include/linux/device.h", directory: "/home/lizy2001/genbc/linux")
!3942 = !{!3943, !4305, !4307, !4310, !4311, !4363, !4455, !4456, !4457, !4458, !4459, !4474, !4581, !4594, !4598, !4599, !4603, !4604, !4605, !4606, !4610, !4616, !4617, !4620, !4624, !4714, !4715, !4716, !4717, !4718, !4750, !4751, !4752, !4755, !4758, !4759, !4760, !4761}
!3943 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !3940, file: !3941, line: 462, baseType: !3944, size: 512)
!3944 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobject", file: !3945, line: 64, size: 512, elements: !3946)
!3945 = !DIFile(filename: "./include/linux/kobject.h", directory: "/home/lizy2001/genbc/linux")
!3946 = !{!3947, !3948, !3949, !3951, !3991, !4093, !4299, !4300, !4301, !4302, !4303, !4304}
!3947 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3944, file: !3945, line: 65, baseType: !352, size: 64)
!3948 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3944, file: !3945, line: 66, baseType: !344, size: 128, offset: 64)
!3949 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3944, file: !3945, line: 67, baseType: !3950, size: 64, offset: 192)
!3950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3944, size: 64)
!3951 = !DIDerivedType(tag: DW_TAG_member, name: "kset", scope: !3944, file: !3945, line: 68, baseType: !3952, size: 64, offset: 256)
!3952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3953, size: 64)
!3953 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset", file: !3945, line: 192, size: 704, elements: !3954)
!3954 = !{!3955, !3956, !3957, !3958}
!3955 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3953, file: !3945, line: 193, baseType: !344, size: 128)
!3956 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !3953, file: !3945, line: 194, baseType: !784, offset: 128)
!3957 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !3953, file: !3945, line: 195, baseType: !3944, size: 512, offset: 128)
!3958 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_ops", scope: !3953, file: !3945, line: 196, baseType: !3959, size: 64, offset: 640)
!3959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3960, size: 64)
!3960 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3961)
!3961 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset_uevent_ops", file: !3945, line: 156, size: 192, elements: !3962)
!3962 = !{!3963, !3968, !3973}
!3963 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !3961, file: !3945, line: 157, baseType: !3964, size: 64)
!3964 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3965)
!3965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3966, size: 64)
!3966 = !DISubroutineType(types: !3967)
!3967 = !{!37, !3952, !3950}
!3968 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3961, file: !3945, line: 158, baseType: !3969, size: 64, offset: 64)
!3969 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3970)
!3970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3971, size: 64)
!3971 = !DISubroutineType(types: !3972)
!3972 = !{!352, !3952, !3950}
!3973 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !3961, file: !3945, line: 159, baseType: !3974, size: 64, offset: 128)
!3974 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3975)
!3975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3976, size: 64)
!3976 = !DISubroutineType(types: !3977)
!3977 = !{!37, !3952, !3950, !3978}
!3978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3979, size: 64)
!3979 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_uevent_env", file: !3945, line: 148, size: 20736, elements: !3980)
!3980 = !{!3981, !3983, !3985, !3986, !3990}
!3981 = !DIDerivedType(tag: DW_TAG_member, name: "argv", scope: !3979, file: !3945, line: 149, baseType: !3982, size: 192)
!3982 = !DICompositeType(tag: DW_TAG_array_type, baseType: !632, size: 192, elements: !921)
!3983 = !DIDerivedType(tag: DW_TAG_member, name: "envp", scope: !3979, file: !3945, line: 150, baseType: !3984, size: 4096, offset: 192)
!3984 = !DICompositeType(tag: DW_TAG_array_type, baseType: !632, size: 4096, elements: !3844)
!3985 = !DIDerivedType(tag: DW_TAG_member, name: "envp_idx", scope: !3979, file: !3945, line: 151, baseType: !37, size: 32, offset: 4288)
!3986 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !3979, file: !3945, line: 152, baseType: !3987, size: 16384, offset: 4320)
!3987 = !DICompositeType(tag: DW_TAG_array_type, baseType: !328, size: 16384, elements: !3988)
!3988 = !{!3989}
!3989 = !DISubrange(count: 2048)
!3990 = !DIDerivedType(tag: DW_TAG_member, name: "buflen", scope: !3979, file: !3945, line: 153, baseType: !37, size: 32, offset: 20704)
!3991 = !DIDerivedType(tag: DW_TAG_member, name: "ktype", scope: !3944, file: !3945, line: 69, baseType: !3992, size: 64, offset: 320)
!3992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3993, size: 64)
!3993 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_type", file: !3945, line: 138, size: 448, elements: !3994)
!3994 = !{!3995, !3999, !4018, !4020, !4053, !4085, !4089}
!3995 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3993, file: !3945, line: 139, baseType: !3996, size: 64)
!3996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3997, size: 64)
!3997 = !DISubroutineType(types: !3998)
!3998 = !{null, !3950}
!3999 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_ops", scope: !3993, file: !3945, line: 140, baseType: !4000, size: 64, offset: 64)
!4000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4001, size: 64)
!4001 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4002)
!4002 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sysfs_ops", file: !4003, line: 230, size: 128, elements: !4004)
!4003 = !DIFile(filename: "./include/linux/sysfs.h", directory: "/home/lizy2001/genbc/linux")
!4004 = !{!4005, !4014}
!4005 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !4002, file: !4003, line: 231, baseType: !4006, size: 64)
!4006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4007, size: 64)
!4007 = !DISubroutineType(types: !4008)
!4008 = !{!1069, !3950, !4009, !632}
!4009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4010, size: 64)
!4010 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute", file: !4003, line: 30, size: 128, elements: !4011)
!4011 = !{!4012, !4013}
!4012 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4010, file: !4003, line: 31, baseType: !352, size: 64)
!4013 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !4010, file: !4003, line: 32, baseType: !701, size: 16, offset: 64)
!4014 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !4002, file: !4003, line: 232, baseType: !4015, size: 64, offset: 64)
!4015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4016, size: 64)
!4016 = !DISubroutineType(types: !4017)
!4017 = !{!1069, !3950, !4009, !352, !649}
!4018 = !DIDerivedType(tag: DW_TAG_member, name: "default_attrs", scope: !3993, file: !3945, line: 141, baseType: !4019, size: 64, offset: 128)
!4019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4009, size: 64)
!4020 = !DIDerivedType(tag: DW_TAG_member, name: "default_groups", scope: !3993, file: !3945, line: 142, baseType: !4021, size: 64, offset: 192)
!4021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4022, size: 64)
!4022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4023, size: 64)
!4023 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4024)
!4024 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute_group", file: !4003, line: 84, size: 320, elements: !4025)
!4025 = !{!4026, !4027, !4031, !4050, !4051}
!4026 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4024, file: !4003, line: 85, baseType: !352, size: 64)
!4027 = !DIDerivedType(tag: DW_TAG_member, name: "is_visible", scope: !4024, file: !4003, line: 86, baseType: !4028, size: 64, offset: 64)
!4028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4029, size: 64)
!4029 = !DISubroutineType(types: !4030)
!4030 = !{!701, !3950, !4009, !37}
!4031 = !DIDerivedType(tag: DW_TAG_member, name: "is_bin_visible", scope: !4024, file: !4003, line: 88, baseType: !4032, size: 64, offset: 128)
!4032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4033, size: 64)
!4033 = !DISubroutineType(types: !4034)
!4034 = !{!701, !3950, !4035, !37}
!4035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4036, size: 64)
!4036 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bin_attribute", file: !4003, line: 168, size: 448, elements: !4037)
!4037 = !{!4038, !4039, !4040, !4041, !4045, !4046}
!4038 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !4036, file: !4003, line: 169, baseType: !4010, size: 128)
!4039 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4036, file: !4003, line: 170, baseType: !649, size: 64, offset: 128)
!4040 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !4036, file: !4003, line: 171, baseType: !625, size: 64, offset: 192)
!4041 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !4036, file: !4003, line: 172, baseType: !4042, size: 64, offset: 256)
!4042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4043, size: 64)
!4043 = !DISubroutineType(types: !4044)
!4044 = !{!1069, !1064, !3950, !4035, !632, !879, !649}
!4045 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !4036, file: !4003, line: 174, baseType: !4042, size: 64, offset: 320)
!4046 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !4036, file: !4003, line: 176, baseType: !4047, size: 64, offset: 384)
!4047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4048, size: 64)
!4048 = !DISubroutineType(types: !4049)
!4049 = !{!37, !1064, !3950, !4035, !1169}
!4050 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !4024, file: !4003, line: 90, baseType: !4019, size: 64, offset: 192)
!4051 = !DIDerivedType(tag: DW_TAG_member, name: "bin_attrs", scope: !4024, file: !4003, line: 91, baseType: !4052, size: 64, offset: 256)
!4052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4035, size: 64)
!4053 = !DIDerivedType(tag: DW_TAG_member, name: "child_ns_type", scope: !3993, file: !3945, line: 143, baseType: !4054, size: 64, offset: 256)
!4054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4055, size: 64)
!4055 = !DISubroutineType(types: !4056)
!4056 = !{!4057, !3950}
!4057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4058, size: 64)
!4058 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4059)
!4059 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_ns_type_operations", file: !4060, line: 39, size: 384, elements: !4061)
!4060 = !DIFile(filename: "./include/linux/kobject_ns.h", directory: "/home/lizy2001/genbc/linux")
!4061 = !{!4062, !4068, !4072, !4076, !4080, !4084}
!4062 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4059, file: !4060, line: 40, baseType: !4063, size: 32)
!4063 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kobj_ns_type", file: !4060, line: 26, baseType: !7, size: 32, elements: !4064)
!4064 = !{!4065, !4066, !4067}
!4065 = !DIEnumerator(name: "KOBJ_NS_TYPE_NONE", value: 0, isUnsigned: true)
!4066 = !DIEnumerator(name: "KOBJ_NS_TYPE_NET", value: 1, isUnsigned: true)
!4067 = !DIEnumerator(name: "KOBJ_NS_TYPES", value: 2, isUnsigned: true)
!4068 = !DIDerivedType(tag: DW_TAG_member, name: "current_may_mount", scope: !4059, file: !4060, line: 41, baseType: !4069, size: 64, offset: 64)
!4069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4070, size: 64)
!4070 = !DISubroutineType(types: !4071)
!4071 = !{!595}
!4072 = !DIDerivedType(tag: DW_TAG_member, name: "grab_current_ns", scope: !4059, file: !4060, line: 42, baseType: !4073, size: 64, offset: 128)
!4073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4074, size: 64)
!4074 = !DISubroutineType(types: !4075)
!4075 = !{!625}
!4076 = !DIDerivedType(tag: DW_TAG_member, name: "netlink_ns", scope: !4059, file: !4060, line: 43, baseType: !4077, size: 64, offset: 192)
!4077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4078, size: 64)
!4078 = !DISubroutineType(types: !4079)
!4079 = !{!2337, !505}
!4080 = !DIDerivedType(tag: DW_TAG_member, name: "initial_ns", scope: !4059, file: !4060, line: 44, baseType: !4081, size: 64, offset: 256)
!4081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4082, size: 64)
!4082 = !DISubroutineType(types: !4083)
!4083 = !{!2337}
!4084 = !DIDerivedType(tag: DW_TAG_member, name: "drop_ns", scope: !4059, file: !4060, line: 45, baseType: !3427, size: 64, offset: 320)
!4085 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !3993, file: !3945, line: 144, baseType: !4086, size: 64, offset: 320)
!4086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4087, size: 64)
!4087 = !DISubroutineType(types: !4088)
!4088 = !{!2337, !3950}
!4089 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !3993, file: !3945, line: 145, baseType: !4090, size: 64, offset: 384)
!4090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4091, size: 64)
!4091 = !DISubroutineType(types: !4092)
!4092 = !{null, !3950, !1868, !1869}
!4093 = !DIDerivedType(tag: DW_TAG_member, name: "sd", scope: !3944, file: !3945, line: 70, baseType: !4094, size: 64, offset: 384)
!4094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4095, size: 64)
!4095 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_node", file: !4096, line: 123, size: 1024, elements: !4097)
!4096 = !DIFile(filename: "./include/linux/kernfs.h", directory: "/home/lizy2001/genbc/linux")
!4097 = !{!4098, !4099, !4100, !4101, !4102, !4103, !4104, !4105, !4292, !4293, !4294, !4295, !4296}
!4098 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4095, file: !4096, line: 124, baseType: !443, size: 32)
!4099 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !4095, file: !4096, line: 125, baseType: !443, size: 32, offset: 32)
!4100 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !4095, file: !4096, line: 135, baseType: !4094, size: 64, offset: 64)
!4101 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4095, file: !4096, line: 136, baseType: !352, size: 64, offset: 128)
!4102 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !4095, file: !4096, line: 138, baseType: !493, size: 192, align: 64, offset: 192)
!4103 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !4095, file: !4096, line: 140, baseType: !2337, size: 64, offset: 384)
!4104 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !4095, file: !4096, line: 141, baseType: !7, size: 32, offset: 448)
!4105 = !DIDerivedType(tag: DW_TAG_member, scope: !4095, file: !4096, line: 142, baseType: !4106, size: 256, offset: 512)
!4106 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4095, file: !4096, line: 142, size: 256, elements: !4107)
!4107 = !{!4108, !4148, !4152}
!4108 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !4106, file: !4096, line: 143, baseType: !4109, size: 192)
!4109 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_dir", file: !4096, line: 91, size: 192, elements: !4110)
!4110 = !{!4111, !4112, !4113}
!4111 = !DIDerivedType(tag: DW_TAG_member, name: "subdirs", scope: !4109, file: !4096, line: 92, baseType: !372, size: 64)
!4112 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !4109, file: !4096, line: 94, baseType: !1187, size: 64, offset: 64)
!4113 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !4109, file: !4096, line: 100, baseType: !4114, size: 64, offset: 128)
!4114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4115, size: 64)
!4115 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_root", file: !4096, line: 180, size: 704, elements: !4116)
!4116 = !{!4117, !4118, !4119, !4120, !4121, !4122, !4146, !4147}
!4117 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !4115, file: !4096, line: 182, baseType: !4094, size: 64)
!4118 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4115, file: !4096, line: 183, baseType: !7, size: 32, offset: 64)
!4119 = !DIDerivedType(tag: DW_TAG_member, name: "ino_idr", scope: !4115, file: !4096, line: 186, baseType: !1603, size: 192, offset: 128)
!4120 = !DIDerivedType(tag: DW_TAG_member, name: "last_id_lowbits", scope: !4115, file: !4096, line: 187, baseType: !762, size: 32, offset: 320)
!4121 = !DIDerivedType(tag: DW_TAG_member, name: "id_highbits", scope: !4115, file: !4096, line: 188, baseType: !762, size: 32, offset: 352)
!4122 = !DIDerivedType(tag: DW_TAG_member, name: "syscall_ops", scope: !4115, file: !4096, line: 189, baseType: !4123, size: 64, offset: 384)
!4123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4124, size: 64)
!4124 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_syscall_ops", file: !4096, line: 168, size: 320, elements: !4125)
!4125 = !{!4126, !4130, !4134, !4138, !4142}
!4126 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !4124, file: !4096, line: 169, baseType: !4127, size: 64)
!4127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4128, size: 64)
!4128 = !DISubroutineType(types: !4129)
!4129 = !{!37, !996, !4114}
!4130 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !4124, file: !4096, line: 171, baseType: !4131, size: 64, offset: 64)
!4131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4132, size: 64)
!4132 = !DISubroutineType(types: !4133)
!4133 = !{!37, !4094, !352, !701}
!4134 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !4124, file: !4096, line: 173, baseType: !4135, size: 64, offset: 128)
!4135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4136, size: 64)
!4136 = !DISubroutineType(types: !4137)
!4137 = !{!37, !4094}
!4138 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !4124, file: !4096, line: 174, baseType: !4139, size: 64, offset: 192)
!4139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4140, size: 64)
!4140 = !DISubroutineType(types: !4141)
!4141 = !{!37, !4094, !4094, !352}
!4142 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !4124, file: !4096, line: 176, baseType: !4143, size: 64, offset: 256)
!4143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4144, size: 64)
!4144 = !DISubroutineType(types: !4145)
!4145 = !{!37, !996, !4094, !4114}
!4146 = !DIDerivedType(tag: DW_TAG_member, name: "supers", scope: !4115, file: !4096, line: 192, baseType: !344, size: 128, offset: 448)
!4147 = !DIDerivedType(tag: DW_TAG_member, name: "deactivate_waitq", scope: !4115, file: !4096, line: 194, baseType: !1154, size: 128, offset: 576)
!4148 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !4106, file: !4096, line: 144, baseType: !4149, size: 64)
!4149 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_symlink", file: !4096, line: 103, size: 64, elements: !4150)
!4150 = !{!4151}
!4151 = !DIDerivedType(tag: DW_TAG_member, name: "target_kn", scope: !4149, file: !4096, line: 104, baseType: !4094, size: 64)
!4152 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !4106, file: !4096, line: 145, baseType: !4153, size: 256)
!4153 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_attr", file: !4096, line: 107, size: 256, elements: !4154)
!4154 = !{!4155, !4287, !4290, !4291}
!4155 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4153, file: !4096, line: 108, baseType: !4156, size: 64)
!4156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4157, size: 64)
!4157 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4158)
!4158 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_ops", file: !4096, line: 217, size: 768, elements: !4159)
!4159 = !{!4160, !4264, !4268, !4269, !4270, !4271, !4272, !4276, !4277, !4278, !4279, !4283}
!4160 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !4158, file: !4096, line: 222, baseType: !4161, size: 64)
!4161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4162, size: 64)
!4162 = !DISubroutineType(types: !4163)
!4163 = !{!37, !4164}
!4164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4165, size: 64)
!4165 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_file", file: !4096, line: 197, size: 1088, elements: !4166)
!4166 = !{!4167, !4168, !4169, !4170, !4171, !4172, !4173, !4174, !4175, !4176, !4177, !4178, !4179}
!4167 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !4165, file: !4096, line: 199, baseType: !4094, size: 64)
!4168 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !4165, file: !4096, line: 200, baseType: !1064, size: 64, offset: 64)
!4169 = !DIDerivedType(tag: DW_TAG_member, name: "seq_file", scope: !4165, file: !4096, line: 201, baseType: !996, size: 64, offset: 128)
!4170 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !4165, file: !4096, line: 202, baseType: !625, size: 64, offset: 192)
!4171 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !4165, file: !4096, line: 205, baseType: !1008, size: 192, offset: 256)
!4172 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_mutex", scope: !4165, file: !4096, line: 206, baseType: !1008, size: 192, offset: 448)
!4173 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !4165, file: !4096, line: 207, baseType: !37, size: 32, offset: 640)
!4174 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4165, file: !4096, line: 208, baseType: !344, size: 128, offset: 704)
!4175 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_buf", scope: !4165, file: !4096, line: 209, baseType: !632, size: 64, offset: 832)
!4176 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !4165, file: !4096, line: 211, baseType: !649, size: 64, offset: 896)
!4177 = !DIDerivedType(tag: DW_TAG_member, name: "mmapped", scope: !4165, file: !4096, line: 212, baseType: !595, size: 1, offset: 960, flags: DIFlagBitField, extraData: i64 960)
!4178 = !DIDerivedType(tag: DW_TAG_member, name: "released", scope: !4165, file: !4096, line: 213, baseType: !595, size: 1, offset: 961, flags: DIFlagBitField, extraData: i64 960)
!4179 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !4165, file: !4096, line: 214, baseType: !4180, size: 64, offset: 1024)
!4180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4181, size: 64)
!4181 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4182)
!4182 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_operations_struct", file: !19, line: 557, size: 832, elements: !4183)
!4183 = !{!4184, !4188, !4189, !4193, !4197, !4238, !4242, !4246, !4250, !4251, !4252, !4256, !4260}
!4184 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !4182, file: !19, line: 558, baseType: !4185, size: 64)
!4185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4186, size: 64)
!4186 = !DISubroutineType(types: !4187)
!4187 = !{null, !1169}
!4188 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !4182, file: !19, line: 559, baseType: !4185, size: 64, offset: 64)
!4189 = !DIDerivedType(tag: DW_TAG_member, name: "split", scope: !4182, file: !19, line: 560, baseType: !4190, size: 64, offset: 128)
!4190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4191, size: 64)
!4191 = !DISubroutineType(types: !4192)
!4192 = !{!37, !1169, !372}
!4193 = !DIDerivedType(tag: DW_TAG_member, name: "mremap", scope: !4182, file: !19, line: 561, baseType: !4194, size: 64, offset: 192)
!4194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4195, size: 64)
!4195 = !DISubroutineType(types: !4196)
!4196 = !{!37, !1169}
!4197 = !DIDerivedType(tag: DW_TAG_member, name: "fault", scope: !4182, file: !19, line: 562, baseType: !4198, size: 64, offset: 256)
!4198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4199, size: 64)
!4199 = !DISubroutineType(types: !4200)
!4200 = !{!4201, !4202}
!4201 = !DIDerivedType(tag: DW_TAG_typedef, name: "vm_fault_t", file: !681, line: 682, baseType: !7)
!4202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4203, size: 64)
!4203 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_fault", file: !19, line: 508, size: 768, elements: !4204)
!4204 = !{!4205, !4206, !4207, !4208, !4209, !4210, !4217, !4224, !4230, !4231, !4232, !4234, !4236}
!4205 = !DIDerivedType(tag: DW_TAG_member, name: "vma", scope: !4203, file: !19, line: 509, baseType: !1169, size: 64)
!4206 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4203, file: !19, line: 510, baseType: !7, size: 32, offset: 64)
!4207 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !4203, file: !19, line: 511, baseType: !1612, size: 32, offset: 96)
!4208 = !DIDerivedType(tag: DW_TAG_member, name: "pgoff", scope: !4203, file: !19, line: 512, baseType: !372, size: 64, offset: 128)
!4209 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !4203, file: !19, line: 513, baseType: !372, size: 64, offset: 192)
!4210 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !4203, file: !19, line: 514, baseType: !4211, size: 64, offset: 256)
!4211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4212, size: 64)
!4212 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmd_t", file: !1202, line: 385, baseType: !4213)
!4213 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1202, line: 385, size: 64, elements: !4214)
!4214 = !{!4215}
!4215 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !4213, file: !1202, line: 385, baseType: !4216, size: 64)
!4216 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmdval_t", file: !1207, line: 15, baseType: !372)
!4217 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !4203, file: !19, line: 516, baseType: !4218, size: 64, offset: 320)
!4218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4219, size: 64)
!4219 = !DIDerivedType(tag: DW_TAG_typedef, name: "pud_t", file: !1202, line: 359, baseType: !4220)
!4220 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1202, line: 359, size: 64, elements: !4221)
!4221 = !{!4222}
!4222 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !4220, file: !1202, line: 359, baseType: !4223, size: 64)
!4223 = !DIDerivedType(tag: DW_TAG_typedef, name: "pudval_t", file: !1207, line: 16, baseType: !372)
!4224 = !DIDerivedType(tag: DW_TAG_member, name: "orig_pte", scope: !4203, file: !19, line: 519, baseType: !4225, size: 64, offset: 384)
!4225 = !DIDerivedType(tag: DW_TAG_typedef, name: "pte_t", file: !1207, line: 21, baseType: !4226)
!4226 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1207, line: 21, size: 64, elements: !4227)
!4227 = !{!4228}
!4228 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !4226, file: !1207, line: 21, baseType: !4229, size: 64)
!4229 = !DIDerivedType(tag: DW_TAG_typedef, name: "pteval_t", file: !1207, line: 14, baseType: !372)
!4230 = !DIDerivedType(tag: DW_TAG_member, name: "cow_page", scope: !4203, file: !19, line: 521, baseType: !679, size: 64, offset: 448)
!4231 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !4203, file: !19, line: 522, baseType: !679, size: 64, offset: 512)
!4232 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !4203, file: !19, line: 528, baseType: !4233, size: 64, offset: 576)
!4233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4225, size: 64)
!4234 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !4203, file: !19, line: 532, baseType: !4235, size: 64, offset: 640)
!4235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !784, size: 64)
!4236 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_pte", scope: !4203, file: !19, line: 536, baseType: !4237, size: 64, offset: 704)
!4237 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgtable_t", file: !1202, line: 509, baseType: !679)
!4238 = !DIDerivedType(tag: DW_TAG_member, name: "huge_fault", scope: !4182, file: !19, line: 563, baseType: !4239, size: 64, offset: 320)
!4239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4240, size: 64)
!4240 = !DISubroutineType(types: !4241)
!4241 = !{!4201, !4202, !18}
!4242 = !DIDerivedType(tag: DW_TAG_member, name: "map_pages", scope: !4182, file: !19, line: 565, baseType: !4243, size: 64, offset: 384)
!4243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4244, size: 64)
!4244 = !DISubroutineType(types: !4245)
!4245 = !{null, !4202, !372, !372}
!4246 = !DIDerivedType(tag: DW_TAG_member, name: "pagesize", scope: !4182, file: !19, line: 567, baseType: !4247, size: 64, offset: 448)
!4247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4248, size: 64)
!4248 = !DISubroutineType(types: !4249)
!4249 = !{!372, !1169}
!4250 = !DIDerivedType(tag: DW_TAG_member, name: "page_mkwrite", scope: !4182, file: !19, line: 571, baseType: !4198, size: 64, offset: 512)
!4251 = !DIDerivedType(tag: DW_TAG_member, name: "pfn_mkwrite", scope: !4182, file: !19, line: 574, baseType: !4198, size: 64, offset: 576)
!4252 = !DIDerivedType(tag: DW_TAG_member, name: "access", scope: !4182, file: !19, line: 579, baseType: !4253, size: 64, offset: 640)
!4253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4254, size: 64)
!4254 = !DISubroutineType(types: !4255)
!4255 = !{!37, !1169, !372, !625, !37, !37}
!4256 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4182, file: !19, line: 585, baseType: !4257, size: 64, offset: 704)
!4257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4258, size: 64)
!4258 = !DISubroutineType(types: !4259)
!4259 = !{!352, !1169}
!4260 = !DIDerivedType(tag: DW_TAG_member, name: "find_special_page", scope: !4182, file: !19, line: 615, baseType: !4261, size: 64, offset: 768)
!4261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4262, size: 64)
!4262 = !DISubroutineType(types: !4263)
!4263 = !{!679, !1169, !372}
!4264 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !4158, file: !4096, line: 223, baseType: !4265, size: 64, offset: 64)
!4265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4266, size: 64)
!4266 = !DISubroutineType(types: !4267)
!4267 = !{null, !4164}
!4268 = !DIDerivedType(tag: DW_TAG_member, name: "seq_show", scope: !4158, file: !4096, line: 236, baseType: !1033, size: 64, offset: 128)
!4269 = !DIDerivedType(tag: DW_TAG_member, name: "seq_start", scope: !4158, file: !4096, line: 238, baseType: !1020, size: 64, offset: 192)
!4270 = !DIDerivedType(tag: DW_TAG_member, name: "seq_next", scope: !4158, file: !4096, line: 239, baseType: !1029, size: 64, offset: 256)
!4271 = !DIDerivedType(tag: DW_TAG_member, name: "seq_stop", scope: !4158, file: !4096, line: 240, baseType: !1025, size: 64, offset: 320)
!4272 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !4158, file: !4096, line: 242, baseType: !4273, size: 64, offset: 384)
!4273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4274, size: 64)
!4274 = !DISubroutineType(types: !4275)
!4275 = !{!1069, !4164, !632, !649, !879}
!4276 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !4158, file: !4096, line: 252, baseType: !649, size: 64, offset: 448)
!4277 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc", scope: !4158, file: !4096, line: 259, baseType: !595, size: 8, offset: 512)
!4278 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !4158, file: !4096, line: 260, baseType: !4273, size: 64, offset: 576)
!4279 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !4158, file: !4096, line: 263, baseType: !4280, size: 64, offset: 640)
!4280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4281, size: 64)
!4281 = !DISubroutineType(types: !4282)
!4282 = !{!1143, !4164, !1144}
!4283 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !4158, file: !4096, line: 266, baseType: !4284, size: 64, offset: 704)
!4284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4285, size: 64)
!4285 = !DISubroutineType(types: !4286)
!4286 = !{!37, !4164, !1169}
!4287 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !4153, file: !4096, line: 109, baseType: !4288, size: 64, offset: 64)
!4288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4289, size: 64)
!4289 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_node", file: !4096, line: 31, flags: DIFlagFwdDecl)
!4290 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4153, file: !4096, line: 110, baseType: !879, size: 64, offset: 128)
!4291 = !DIDerivedType(tag: DW_TAG_member, name: "notify_next", scope: !4153, file: !4096, line: 111, baseType: !4094, size: 64, offset: 192)
!4292 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !4095, file: !4096, line: 148, baseType: !625, size: 64, offset: 768)
!4293 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4095, file: !4096, line: 154, baseType: !391, size: 64, offset: 832)
!4294 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4095, file: !4096, line: 156, baseType: !532, size: 16, offset: 896)
!4295 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !4095, file: !4096, line: 157, baseType: !701, size: 16, offset: 912)
!4296 = !DIDerivedType(tag: DW_TAG_member, name: "iattr", scope: !4095, file: !4096, line: 158, baseType: !4297, size: 64, offset: 960)
!4297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4298, size: 64)
!4298 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_iattrs", file: !4096, line: 32, flags: DIFlagFwdDecl)
!4299 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !3944, file: !3945, line: 71, baseType: !1598, size: 32, offset: 448)
!4300 = !DIDerivedType(tag: DW_TAG_member, name: "state_initialized", scope: !3944, file: !3945, line: 75, baseType: !7, size: 1, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!4301 = !DIDerivedType(tag: DW_TAG_member, name: "state_in_sysfs", scope: !3944, file: !3945, line: 76, baseType: !7, size: 1, offset: 481, flags: DIFlagBitField, extraData: i64 480)
!4302 = !DIDerivedType(tag: DW_TAG_member, name: "state_add_uevent_sent", scope: !3944, file: !3945, line: 77, baseType: !7, size: 1, offset: 482, flags: DIFlagBitField, extraData: i64 480)
!4303 = !DIDerivedType(tag: DW_TAG_member, name: "state_remove_uevent_sent", scope: !3944, file: !3945, line: 78, baseType: !7, size: 1, offset: 483, flags: DIFlagBitField, extraData: i64 480)
!4304 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_suppress", scope: !3944, file: !3945, line: 79, baseType: !7, size: 1, offset: 484, flags: DIFlagBitField, extraData: i64 480)
!4305 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3940, file: !3941, line: 463, baseType: !4306, size: 64, offset: 512)
!4306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3940, size: 64)
!4307 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3940, file: !3941, line: 465, baseType: !4308, size: 64, offset: 576)
!4308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4309, size: 64)
!4309 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_private", file: !3941, line: 36, flags: DIFlagFwdDecl)
!4310 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !3940, file: !3941, line: 467, baseType: !352, size: 64, offset: 640)
!4311 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3940, file: !3941, line: 468, baseType: !4312, size: 64, offset: 704)
!4312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4313, size: 64)
!4313 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4314)
!4314 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_type", file: !3941, line: 87, size: 384, elements: !4315)
!4315 = !{!4316, !4317, !4318, !4322, !4327, !4331}
!4316 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4314, file: !3941, line: 88, baseType: !352, size: 64)
!4317 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !4314, file: !3941, line: 89, baseType: !4021, size: 64, offset: 64)
!4318 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !4314, file: !3941, line: 90, baseType: !4319, size: 64, offset: 128)
!4319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4320, size: 64)
!4320 = !DISubroutineType(types: !4321)
!4321 = !{!37, !4306, !3978}
!4322 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !4314, file: !3941, line: 91, baseType: !4323, size: 64, offset: 192)
!4323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4324, size: 64)
!4324 = !DISubroutineType(types: !4325)
!4325 = !{!632, !4306, !4326, !1868, !1869}
!4326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !701, size: 64)
!4327 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !4314, file: !3941, line: 93, baseType: !4328, size: 64, offset: 256)
!4328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4329, size: 64)
!4329 = !DISubroutineType(types: !4330)
!4330 = !{null, !4306}
!4331 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !4314, file: !3941, line: 95, baseType: !4332, size: 64, offset: 320)
!4332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4333, size: 64)
!4333 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4334)
!4334 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_ops", file: !4335, line: 278, size: 1472, elements: !4336)
!4335 = !DIFile(filename: "./include/linux/pm.h", directory: "/home/lizy2001/genbc/linux")
!4336 = !{!4337, !4341, !4342, !4343, !4344, !4345, !4346, !4347, !4348, !4349, !4350, !4351, !4352, !4353, !4354, !4355, !4356, !4357, !4358, !4359, !4360, !4361, !4362}
!4337 = !DIDerivedType(tag: DW_TAG_member, name: "prepare", scope: !4334, file: !4335, line: 279, baseType: !4338, size: 64)
!4338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4339, size: 64)
!4339 = !DISubroutineType(types: !4340)
!4340 = !{!37, !4306}
!4341 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !4334, file: !4335, line: 280, baseType: !4328, size: 64, offset: 64)
!4342 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !4334, file: !4335, line: 281, baseType: !4338, size: 64, offset: 128)
!4343 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !4334, file: !4335, line: 282, baseType: !4338, size: 64, offset: 192)
!4344 = !DIDerivedType(tag: DW_TAG_member, name: "freeze", scope: !4334, file: !4335, line: 283, baseType: !4338, size: 64, offset: 256)
!4345 = !DIDerivedType(tag: DW_TAG_member, name: "thaw", scope: !4334, file: !4335, line: 284, baseType: !4338, size: 64, offset: 320)
!4346 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff", scope: !4334, file: !4335, line: 285, baseType: !4338, size: 64, offset: 384)
!4347 = !DIDerivedType(tag: DW_TAG_member, name: "restore", scope: !4334, file: !4335, line: 286, baseType: !4338, size: 64, offset: 448)
!4348 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_late", scope: !4334, file: !4335, line: 287, baseType: !4338, size: 64, offset: 512)
!4349 = !DIDerivedType(tag: DW_TAG_member, name: "resume_early", scope: !4334, file: !4335, line: 288, baseType: !4338, size: 64, offset: 576)
!4350 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_late", scope: !4334, file: !4335, line: 289, baseType: !4338, size: 64, offset: 640)
!4351 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_early", scope: !4334, file: !4335, line: 290, baseType: !4338, size: 64, offset: 704)
!4352 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_late", scope: !4334, file: !4335, line: 291, baseType: !4338, size: 64, offset: 768)
!4353 = !DIDerivedType(tag: DW_TAG_member, name: "restore_early", scope: !4334, file: !4335, line: 292, baseType: !4338, size: 64, offset: 832)
!4354 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_noirq", scope: !4334, file: !4335, line: 293, baseType: !4338, size: 64, offset: 896)
!4355 = !DIDerivedType(tag: DW_TAG_member, name: "resume_noirq", scope: !4334, file: !4335, line: 294, baseType: !4338, size: 64, offset: 960)
!4356 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_noirq", scope: !4334, file: !4335, line: 295, baseType: !4338, size: 64, offset: 1024)
!4357 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_noirq", scope: !4334, file: !4335, line: 296, baseType: !4338, size: 64, offset: 1088)
!4358 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_noirq", scope: !4334, file: !4335, line: 297, baseType: !4338, size: 64, offset: 1152)
!4359 = !DIDerivedType(tag: DW_TAG_member, name: "restore_noirq", scope: !4334, file: !4335, line: 298, baseType: !4338, size: 64, offset: 1216)
!4360 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_suspend", scope: !4334, file: !4335, line: 299, baseType: !4338, size: 64, offset: 1280)
!4361 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_resume", scope: !4334, file: !4335, line: 300, baseType: !4338, size: 64, offset: 1344)
!4362 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_idle", scope: !4334, file: !4335, line: 301, baseType: !4338, size: 64, offset: 1408)
!4363 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !3940, file: !3941, line: 470, baseType: !4364, size: 64, offset: 768)
!4364 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4365, size: 64)
!4365 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bus_type", file: !4366, line: 82, size: 1408, elements: !4367)
!4366 = !DIFile(filename: "./include/linux/device/bus.h", directory: "/home/lizy2001/genbc/linux")
!4367 = !{!4368, !4369, !4370, !4371, !4372, !4373, !4374, !4434, !4435, !4436, !4437, !4438, !4439, !4440, !4441, !4442, !4443, !4444, !4445, !4446, !4450, !4453, !4454}
!4368 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4365, file: !4366, line: 83, baseType: !352, size: 64)
!4369 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name", scope: !4365, file: !4366, line: 84, baseType: !352, size: 64, offset: 64)
!4370 = !DIDerivedType(tag: DW_TAG_member, name: "dev_root", scope: !4365, file: !4366, line: 85, baseType: !4306, size: 64, offset: 128)
!4371 = !DIDerivedType(tag: DW_TAG_member, name: "bus_groups", scope: !4365, file: !4366, line: 86, baseType: !4021, size: 64, offset: 192)
!4372 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !4365, file: !4366, line: 87, baseType: !4021, size: 64, offset: 256)
!4373 = !DIDerivedType(tag: DW_TAG_member, name: "drv_groups", scope: !4365, file: !4366, line: 88, baseType: !4021, size: 64, offset: 320)
!4374 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !4365, file: !4366, line: 90, baseType: !4375, size: 64, offset: 384)
!4375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4376, size: 64)
!4376 = !DISubroutineType(types: !4377)
!4377 = !{!37, !4306, !4378}
!4378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4379, size: 64)
!4379 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_driver", file: !4380, line: 95, size: 1152, elements: !4381)
!4380 = !DIFile(filename: "./include/linux/device/driver.h", directory: "/home/lizy2001/genbc/linux")
!4381 = !{!4382, !4383, !4384, !4385, !4386, !4387, !4393, !4403, !4414, !4415, !4416, !4417, !4418, !4426, !4427, !4428, !4429, !4430, !4431}
!4382 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4379, file: !4380, line: 96, baseType: !352, size: 64)
!4383 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !4379, file: !4380, line: 97, baseType: !4364, size: 64, offset: 64)
!4384 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4379, file: !4380, line: 99, baseType: !906, size: 64, offset: 128)
!4385 = !DIDerivedType(tag: DW_TAG_member, name: "mod_name", scope: !4379, file: !4380, line: 100, baseType: !352, size: 64, offset: 192)
!4386 = !DIDerivedType(tag: DW_TAG_member, name: "suppress_bind_attrs", scope: !4379, file: !4380, line: 102, baseType: !595, size: 8, offset: 256)
!4387 = !DIDerivedType(tag: DW_TAG_member, name: "probe_type", scope: !4379, file: !4380, line: 103, baseType: !4388, size: 32, offset: 288)
!4388 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "probe_type", file: !4380, line: 44, baseType: !7, size: 32, elements: !4389)
!4389 = !{!4390, !4391, !4392}
!4390 = !DIEnumerator(name: "PROBE_DEFAULT_STRATEGY", value: 0, isUnsigned: true)
!4391 = !DIEnumerator(name: "PROBE_PREFER_ASYNCHRONOUS", value: 1, isUnsigned: true)
!4392 = !DIEnumerator(name: "PROBE_FORCE_SYNCHRONOUS", value: 2, isUnsigned: true)
!4393 = !DIDerivedType(tag: DW_TAG_member, name: "of_match_table", scope: !4379, file: !4380, line: 105, baseType: !4394, size: 64, offset: 320)
!4394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4395, size: 64)
!4395 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4396)
!4396 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "of_device_id", file: !4397, line: 262, size: 1600, elements: !4398)
!4397 = !DIFile(filename: "./include/linux/mod_devicetable.h", directory: "/home/lizy2001/genbc/linux")
!4398 = !{!4399, !4400, !4401, !4402}
!4399 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4396, file: !4397, line: 263, baseType: !3898, size: 256)
!4400 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4396, file: !4397, line: 264, baseType: !3898, size: 256, offset: 256)
!4401 = !DIDerivedType(tag: DW_TAG_member, name: "compatible", scope: !4396, file: !4397, line: 265, baseType: !3127, size: 1024, offset: 512)
!4402 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4396, file: !4397, line: 266, baseType: !2337, size: 64, offset: 1536)
!4403 = !DIDerivedType(tag: DW_TAG_member, name: "acpi_match_table", scope: !4379, file: !4380, line: 106, baseType: !4404, size: 64, offset: 384)
!4404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4405, size: 64)
!4405 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4406)
!4406 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_id", file: !4397, line: 210, size: 256, elements: !4407)
!4407 = !{!4408, !4410, !4412, !4413}
!4408 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4406, file: !4397, line: 211, baseType: !4409, size: 72)
!4409 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1452, size: 72, elements: !2147)
!4410 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !4406, file: !4397, line: 212, baseType: !4411, size: 64, offset: 128)
!4411 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_ulong_t", file: !4397, line: 14, baseType: !372)
!4412 = !DIDerivedType(tag: DW_TAG_member, name: "cls", scope: !4406, file: !4397, line: 213, baseType: !523, size: 32, offset: 192)
!4413 = !DIDerivedType(tag: DW_TAG_member, name: "cls_msk", scope: !4406, file: !4397, line: 214, baseType: !523, size: 32, offset: 224)
!4414 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !4379, file: !4380, line: 108, baseType: !4338, size: 64, offset: 448)
!4415 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !4379, file: !4380, line: 109, baseType: !4328, size: 64, offset: 512)
!4416 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !4379, file: !4380, line: 110, baseType: !4338, size: 64, offset: 576)
!4417 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !4379, file: !4380, line: 111, baseType: !4328, size: 64, offset: 640)
!4418 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !4379, file: !4380, line: 112, baseType: !4419, size: 64, offset: 704)
!4419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4420, size: 64)
!4420 = !DISubroutineType(types: !4421)
!4421 = !{!37, !4306, !4422}
!4422 = !DIDerivedType(tag: DW_TAG_typedef, name: "pm_message_t", file: !4335, line: 52, baseType: !4423)
!4423 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_message", file: !4335, line: 50, size: 32, elements: !4424)
!4424 = !{!4425}
!4425 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !4423, file: !4335, line: 51, baseType: !37, size: 32)
!4426 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !4379, file: !4380, line: 113, baseType: !4338, size: 64, offset: 768)
!4427 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !4379, file: !4380, line: 114, baseType: !4021, size: 64, offset: 832)
!4428 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !4379, file: !4380, line: 115, baseType: !4021, size: 64, offset: 896)
!4429 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !4379, file: !4380, line: 117, baseType: !4332, size: 64, offset: 960)
!4430 = !DIDerivedType(tag: DW_TAG_member, name: "coredump", scope: !4379, file: !4380, line: 118, baseType: !4328, size: 64, offset: 1024)
!4431 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !4379, file: !4380, line: 120, baseType: !4432, size: 64, offset: 1088)
!4432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4433, size: 64)
!4433 = !DICompositeType(tag: DW_TAG_structure_type, name: "driver_private", file: !4380, line: 120, flags: DIFlagFwdDecl)
!4434 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !4365, file: !4366, line: 91, baseType: !4319, size: 64, offset: 448)
!4435 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !4365, file: !4366, line: 92, baseType: !4338, size: 64, offset: 512)
!4436 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !4365, file: !4366, line: 93, baseType: !4328, size: 64, offset: 576)
!4437 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !4365, file: !4366, line: 94, baseType: !4338, size: 64, offset: 640)
!4438 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !4365, file: !4366, line: 95, baseType: !4328, size: 64, offset: 704)
!4439 = !DIDerivedType(tag: DW_TAG_member, name: "online", scope: !4365, file: !4366, line: 97, baseType: !4338, size: 64, offset: 768)
!4440 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !4365, file: !4366, line: 98, baseType: !4338, size: 64, offset: 832)
!4441 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !4365, file: !4366, line: 100, baseType: !4419, size: 64, offset: 896)
!4442 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !4365, file: !4366, line: 101, baseType: !4338, size: 64, offset: 960)
!4443 = !DIDerivedType(tag: DW_TAG_member, name: "num_vf", scope: !4365, file: !4366, line: 103, baseType: !4338, size: 64, offset: 1024)
!4444 = !DIDerivedType(tag: DW_TAG_member, name: "dma_configure", scope: !4365, file: !4366, line: 105, baseType: !4338, size: 64, offset: 1088)
!4445 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !4365, file: !4366, line: 107, baseType: !4332, size: 64, offset: 1152)
!4446 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_ops", scope: !4365, file: !4366, line: 109, baseType: !4447, size: 64, offset: 1216)
!4447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4448, size: 64)
!4448 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4449)
!4449 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_ops", file: !4366, line: 109, flags: DIFlagFwdDecl)
!4450 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !4365, file: !4366, line: 111, baseType: !4451, size: 64, offset: 1280)
!4451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4452, size: 64)
!4452 = !DICompositeType(tag: DW_TAG_structure_type, name: "subsys_private", file: !4366, line: 111, flags: DIFlagFwdDecl)
!4453 = !DIDerivedType(tag: DW_TAG_member, name: "lock_key", scope: !4365, file: !4366, line: 112, baseType: !915, offset: 1344)
!4454 = !DIDerivedType(tag: DW_TAG_member, name: "need_parent_lock", scope: !4365, file: !4366, line: 114, baseType: !595, size: 8, offset: 1344)
!4455 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !3940, file: !3941, line: 471, baseType: !4378, size: 64, offset: 832)
!4456 = !DIDerivedType(tag: DW_TAG_member, name: "platform_data", scope: !3940, file: !3941, line: 473, baseType: !625, size: 64, offset: 896)
!4457 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !3940, file: !3941, line: 475, baseType: !625, size: 64, offset: 960)
!4458 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !3940, file: !3941, line: 480, baseType: !1008, size: 192, offset: 1024)
!4459 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !3940, file: !3941, line: 484, baseType: !4460, size: 576, offset: 1216)
!4460 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_links_info", file: !3941, line: 361, size: 576, elements: !4461)
!4461 = !{!4462, !4463, !4464, !4465, !4466, !4467}
!4462 = !DIDerivedType(tag: DW_TAG_member, name: "suppliers", scope: !4460, file: !3941, line: 362, baseType: !344, size: 128)
!4463 = !DIDerivedType(tag: DW_TAG_member, name: "consumers", scope: !4460, file: !3941, line: 363, baseType: !344, size: 128, offset: 128)
!4464 = !DIDerivedType(tag: DW_TAG_member, name: "needs_suppliers", scope: !4460, file: !3941, line: 364, baseType: !344, size: 128, offset: 256)
!4465 = !DIDerivedType(tag: DW_TAG_member, name: "defer_hook", scope: !4460, file: !3941, line: 365, baseType: !344, size: 128, offset: 384)
!4466 = !DIDerivedType(tag: DW_TAG_member, name: "need_for_probe", scope: !4460, file: !3941, line: 366, baseType: !595, size: 8, offset: 512)
!4467 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !4460, file: !3941, line: 367, baseType: !4468, size: 32, offset: 544)
!4468 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dl_dev_state", file: !3941, line: 343, baseType: !7, size: 32, elements: !4469)
!4469 = !{!4470, !4471, !4472, !4473}
!4470 = !DIEnumerator(name: "DL_DEV_NO_DRIVER", value: 0, isUnsigned: true)
!4471 = !DIEnumerator(name: "DL_DEV_PROBING", value: 1, isUnsigned: true)
!4472 = !DIEnumerator(name: "DL_DEV_DRIVER_BOUND", value: 2, isUnsigned: true)
!4473 = !DIEnumerator(name: "DL_DEV_UNBINDING", value: 3, isUnsigned: true)
!4474 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !3940, file: !3941, line: 485, baseType: !4475, size: 2304, offset: 1792)
!4475 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_info", file: !4335, line: 565, size: 2304, elements: !4476)
!4476 = !{!4477, !4478, !4479, !4480, !4481, !4482, !4483, !4484, !4485, !4486, !4487, !4488, !4489, !4490, !4491, !4492, !4519, !4520, !4521, !4522, !4523, !4524, !4525, !4526, !4527, !4528, !4529, !4530, !4531, !4532, !4533, !4534, !4535, !4536, !4537, !4538, !4539, !4540, !4541, !4542, !4543, !4551, !4558, !4559, !4560, !4561, !4562, !4563, !4564, !4574, !4578}
!4477 = !DIDerivedType(tag: DW_TAG_member, name: "power_state", scope: !4475, file: !4335, line: 566, baseType: !4422, size: 32)
!4478 = !DIDerivedType(tag: DW_TAG_member, name: "can_wakeup", scope: !4475, file: !4335, line: 567, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!4479 = !DIDerivedType(tag: DW_TAG_member, name: "async_suspend", scope: !4475, file: !4335, line: 568, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 32)
!4480 = !DIDerivedType(tag: DW_TAG_member, name: "in_dpm_list", scope: !4475, file: !4335, line: 569, baseType: !595, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 32)
!4481 = !DIDerivedType(tag: DW_TAG_member, name: "is_prepared", scope: !4475, file: !4335, line: 570, baseType: !595, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 32)
!4482 = !DIDerivedType(tag: DW_TAG_member, name: "is_suspended", scope: !4475, file: !4335, line: 571, baseType: !595, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 32)
!4483 = !DIDerivedType(tag: DW_TAG_member, name: "is_noirq_suspended", scope: !4475, file: !4335, line: 572, baseType: !595, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 32)
!4484 = !DIDerivedType(tag: DW_TAG_member, name: "is_late_suspended", scope: !4475, file: !4335, line: 573, baseType: !595, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 32)
!4485 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm", scope: !4475, file: !4335, line: 574, baseType: !595, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 32)
!4486 = !DIDerivedType(tag: DW_TAG_member, name: "early_init", scope: !4475, file: !4335, line: 575, baseType: !595, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!4487 = !DIDerivedType(tag: DW_TAG_member, name: "direct_complete", scope: !4475, file: !4335, line: 576, baseType: !595, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 32)
!4488 = !DIDerivedType(tag: DW_TAG_member, name: "driver_flags", scope: !4475, file: !4335, line: 577, baseType: !762, size: 32, offset: 64)
!4489 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4475, file: !4335, line: 578, baseType: !784, offset: 96)
!4490 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !4475, file: !4335, line: 580, baseType: !344, size: 128, offset: 128)
!4491 = !DIDerivedType(tag: DW_TAG_member, name: "completion", scope: !4475, file: !4335, line: 581, baseType: !1843, size: 192, offset: 256)
!4492 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup", scope: !4475, file: !4335, line: 582, baseType: !4493, size: 64, offset: 448)
!4493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4494, size: 64)
!4494 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wakeup_source", file: !4495, line: 43, size: 1472, elements: !4496)
!4495 = !DIFile(filename: "./include/linux/pm_wakeup.h", directory: "/home/lizy2001/genbc/linux")
!4496 = !{!4497, !4498, !4499, !4500, !4501, !4504, !4505, !4506, !4507, !4508, !4509, !4510, !4511, !4512, !4513, !4514, !4515, !4516, !4517, !4518}
!4497 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4494, file: !4495, line: 44, baseType: !352, size: 64)
!4498 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4494, file: !4495, line: 45, baseType: !37, size: 32, offset: 64)
!4499 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !4494, file: !4495, line: 46, baseType: !344, size: 128, offset: 128)
!4500 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4494, file: !4495, line: 47, baseType: !784, offset: 256)
!4501 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !4494, file: !4495, line: 48, baseType: !4502, size: 64, offset: 256)
!4502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4503, size: 64)
!4503 = !DICompositeType(tag: DW_TAG_structure_type, name: "wake_irq", file: !4335, line: 533, flags: DIFlagFwdDecl)
!4504 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !4494, file: !4495, line: 49, baseType: !2314, size: 320, offset: 320)
!4505 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !4494, file: !4495, line: 50, baseType: !372, size: 64, offset: 640)
!4506 = !DIDerivedType(tag: DW_TAG_member, name: "total_time", scope: !4494, file: !4495, line: 51, baseType: !1395, size: 64, offset: 704)
!4507 = !DIDerivedType(tag: DW_TAG_member, name: "max_time", scope: !4494, file: !4495, line: 52, baseType: !1395, size: 64, offset: 768)
!4508 = !DIDerivedType(tag: DW_TAG_member, name: "last_time", scope: !4494, file: !4495, line: 53, baseType: !1395, size: 64, offset: 832)
!4509 = !DIDerivedType(tag: DW_TAG_member, name: "start_prevent_time", scope: !4494, file: !4495, line: 54, baseType: !1395, size: 64, offset: 896)
!4510 = !DIDerivedType(tag: DW_TAG_member, name: "prevent_sleep_time", scope: !4494, file: !4495, line: 55, baseType: !1395, size: 64, offset: 960)
!4511 = !DIDerivedType(tag: DW_TAG_member, name: "event_count", scope: !4494, file: !4495, line: 56, baseType: !372, size: 64, offset: 1024)
!4512 = !DIDerivedType(tag: DW_TAG_member, name: "active_count", scope: !4494, file: !4495, line: 57, baseType: !372, size: 64, offset: 1088)
!4513 = !DIDerivedType(tag: DW_TAG_member, name: "relax_count", scope: !4494, file: !4495, line: 58, baseType: !372, size: 64, offset: 1152)
!4514 = !DIDerivedType(tag: DW_TAG_member, name: "expire_count", scope: !4494, file: !4495, line: 59, baseType: !372, size: 64, offset: 1216)
!4515 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_count", scope: !4494, file: !4495, line: 60, baseType: !372, size: 64, offset: 1280)
!4516 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4494, file: !4495, line: 61, baseType: !4306, size: 64, offset: 1344)
!4517 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !4494, file: !4495, line: 62, baseType: !595, size: 1, offset: 1408, flags: DIFlagBitField, extraData: i64 1408)
!4518 = !DIDerivedType(tag: DW_TAG_member, name: "autosleep_enabled", scope: !4494, file: !4495, line: 63, baseType: !595, size: 1, offset: 1409, flags: DIFlagBitField, extraData: i64 1408)
!4519 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_path", scope: !4475, file: !4335, line: 583, baseType: !595, size: 1, offset: 512, flags: DIFlagBitField, extraData: i64 512)
!4520 = !DIDerivedType(tag: DW_TAG_member, name: "syscore", scope: !4475, file: !4335, line: 584, baseType: !595, size: 1, offset: 513, flags: DIFlagBitField, extraData: i64 512)
!4521 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm_callbacks", scope: !4475, file: !4335, line: 585, baseType: !595, size: 1, offset: 514, flags: DIFlagBitField, extraData: i64 512)
!4522 = !DIDerivedType(tag: DW_TAG_member, name: "must_resume", scope: !4475, file: !4335, line: 586, baseType: !7, size: 1, offset: 515, flags: DIFlagBitField, extraData: i64 512)
!4523 = !DIDerivedType(tag: DW_TAG_member, name: "may_skip_resume", scope: !4475, file: !4335, line: 587, baseType: !7, size: 1, offset: 516, flags: DIFlagBitField, extraData: i64 512)
!4524 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_timer", scope: !4475, file: !4335, line: 592, baseType: !1387, size: 512, offset: 576)
!4525 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !4475, file: !4335, line: 593, baseType: !391, size: 64, offset: 1088)
!4526 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !4475, file: !4335, line: 594, baseType: !1782, size: 256, offset: 1152)
!4527 = !DIDerivedType(tag: DW_TAG_member, name: "wait_queue", scope: !4475, file: !4335, line: 595, baseType: !1154, size: 128, offset: 1408)
!4528 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !4475, file: !4335, line: 596, baseType: !4502, size: 64, offset: 1536)
!4529 = !DIDerivedType(tag: DW_TAG_member, name: "usage_count", scope: !4475, file: !4335, line: 597, baseType: !443, size: 32, offset: 1600)
!4530 = !DIDerivedType(tag: DW_TAG_member, name: "child_count", scope: !4475, file: !4335, line: 598, baseType: !443, size: 32, offset: 1632)
!4531 = !DIDerivedType(tag: DW_TAG_member, name: "disable_depth", scope: !4475, file: !4335, line: 599, baseType: !7, size: 3, offset: 1664, flags: DIFlagBitField, extraData: i64 1664)
!4532 = !DIDerivedType(tag: DW_TAG_member, name: "idle_notification", scope: !4475, file: !4335, line: 600, baseType: !7, size: 1, offset: 1667, flags: DIFlagBitField, extraData: i64 1664)
!4533 = !DIDerivedType(tag: DW_TAG_member, name: "request_pending", scope: !4475, file: !4335, line: 601, baseType: !7, size: 1, offset: 1668, flags: DIFlagBitField, extraData: i64 1664)
!4534 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_resume", scope: !4475, file: !4335, line: 602, baseType: !7, size: 1, offset: 1669, flags: DIFlagBitField, extraData: i64 1664)
!4535 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_auto", scope: !4475, file: !4335, line: 603, baseType: !7, size: 1, offset: 1670, flags: DIFlagBitField, extraData: i64 1664)
!4536 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_children", scope: !4475, file: !4335, line: 604, baseType: !595, size: 1, offset: 1671, flags: DIFlagBitField, extraData: i64 1664)
!4537 = !DIDerivedType(tag: DW_TAG_member, name: "no_callbacks", scope: !4475, file: !4335, line: 605, baseType: !7, size: 1, offset: 1672, flags: DIFlagBitField, extraData: i64 1664)
!4538 = !DIDerivedType(tag: DW_TAG_member, name: "irq_safe", scope: !4475, file: !4335, line: 606, baseType: !7, size: 1, offset: 1673, flags: DIFlagBitField, extraData: i64 1664)
!4539 = !DIDerivedType(tag: DW_TAG_member, name: "use_autosuspend", scope: !4475, file: !4335, line: 607, baseType: !7, size: 1, offset: 1674, flags: DIFlagBitField, extraData: i64 1664)
!4540 = !DIDerivedType(tag: DW_TAG_member, name: "timer_autosuspends", scope: !4475, file: !4335, line: 608, baseType: !7, size: 1, offset: 1675, flags: DIFlagBitField, extraData: i64 1664)
!4541 = !DIDerivedType(tag: DW_TAG_member, name: "memalloc_noio", scope: !4475, file: !4335, line: 609, baseType: !7, size: 1, offset: 1676, flags: DIFlagBitField, extraData: i64 1664)
!4542 = !DIDerivedType(tag: DW_TAG_member, name: "links_count", scope: !4475, file: !4335, line: 610, baseType: !7, size: 32, offset: 1696)
!4543 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !4475, file: !4335, line: 611, baseType: !4544, size: 32, offset: 1728)
!4544 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_request", file: !4335, line: 524, baseType: !7, size: 32, elements: !4545)
!4545 = !{!4546, !4547, !4548, !4549, !4550}
!4546 = !DIEnumerator(name: "RPM_REQ_NONE", value: 0, isUnsigned: true)
!4547 = !DIEnumerator(name: "RPM_REQ_IDLE", value: 1, isUnsigned: true)
!4548 = !DIEnumerator(name: "RPM_REQ_SUSPEND", value: 2, isUnsigned: true)
!4549 = !DIEnumerator(name: "RPM_REQ_AUTOSUSPEND", value: 3, isUnsigned: true)
!4550 = !DIEnumerator(name: "RPM_REQ_RESUME", value: 4, isUnsigned: true)
!4551 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_status", scope: !4475, file: !4335, line: 612, baseType: !4552, size: 32, offset: 1760)
!4552 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_status", file: !4335, line: 502, baseType: !7, size: 32, elements: !4553)
!4553 = !{!4554, !4555, !4556, !4557}
!4554 = !DIEnumerator(name: "RPM_ACTIVE", value: 0, isUnsigned: true)
!4555 = !DIEnumerator(name: "RPM_RESUMING", value: 1, isUnsigned: true)
!4556 = !DIEnumerator(name: "RPM_SUSPENDED", value: 2, isUnsigned: true)
!4557 = !DIEnumerator(name: "RPM_SUSPENDING", value: 3, isUnsigned: true)
!4558 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_error", scope: !4475, file: !4335, line: 613, baseType: !37, size: 32, offset: 1792)
!4559 = !DIDerivedType(tag: DW_TAG_member, name: "autosuspend_delay", scope: !4475, file: !4335, line: 614, baseType: !37, size: 32, offset: 1824)
!4560 = !DIDerivedType(tag: DW_TAG_member, name: "last_busy", scope: !4475, file: !4335, line: 615, baseType: !391, size: 64, offset: 1856)
!4561 = !DIDerivedType(tag: DW_TAG_member, name: "active_time", scope: !4475, file: !4335, line: 616, baseType: !391, size: 64, offset: 1920)
!4562 = !DIDerivedType(tag: DW_TAG_member, name: "suspended_time", scope: !4475, file: !4335, line: 617, baseType: !391, size: 64, offset: 1984)
!4563 = !DIDerivedType(tag: DW_TAG_member, name: "accounting_timestamp", scope: !4475, file: !4335, line: 618, baseType: !391, size: 64, offset: 2048)
!4564 = !DIDerivedType(tag: DW_TAG_member, name: "subsys_data", scope: !4475, file: !4335, line: 620, baseType: !4565, size: 64, offset: 2112)
!4565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4566, size: 64)
!4566 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_subsys_data", file: !4335, line: 536, size: 256, elements: !4567)
!4567 = !{!4568, !4569, !4570, !4571}
!4568 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4566, file: !4335, line: 537, baseType: !784)
!4569 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !4566, file: !4335, line: 538, baseType: !7, size: 32)
!4570 = !DIDerivedType(tag: DW_TAG_member, name: "clock_list", scope: !4566, file: !4335, line: 540, baseType: !344, size: 128, offset: 64)
!4571 = !DIDerivedType(tag: DW_TAG_member, name: "domain_data", scope: !4566, file: !4335, line: 543, baseType: !4572, size: 64, offset: 192)
!4572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4573, size: 64)
!4573 = !DICompositeType(tag: DW_TAG_structure_type, name: "pm_domain_data", file: !4335, line: 534, flags: DIFlagFwdDecl)
!4574 = !DIDerivedType(tag: DW_TAG_member, name: "set_latency_tolerance", scope: !4475, file: !4335, line: 621, baseType: !4575, size: 64, offset: 2176)
!4575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4576, size: 64)
!4576 = !DISubroutineType(types: !4577)
!4577 = !{null, !4306, !1543}
!4578 = !DIDerivedType(tag: DW_TAG_member, name: "qos", scope: !4475, file: !4335, line: 622, baseType: !4579, size: 64, offset: 2240)
!4579 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4580, size: 64)
!4580 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_qos", file: !4335, line: 622, flags: DIFlagFwdDecl)
!4581 = !DIDerivedType(tag: DW_TAG_member, name: "pm_domain", scope: !3940, file: !3941, line: 486, baseType: !4582, size: 64, offset: 4096)
!4582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4583, size: 64)
!4583 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_domain", file: !4335, line: 642, size: 1792, elements: !4584)
!4584 = !{!4585, !4586, !4587, !4591, !4592, !4593}
!4585 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4583, file: !4335, line: 643, baseType: !4334, size: 1472)
!4586 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4583, file: !4335, line: 644, baseType: !4338, size: 64, offset: 1472)
!4587 = !DIDerivedType(tag: DW_TAG_member, name: "detach", scope: !4583, file: !4335, line: 645, baseType: !4588, size: 64, offset: 1536)
!4588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4589, size: 64)
!4589 = !DISubroutineType(types: !4590)
!4590 = !{null, !4306, !595}
!4591 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !4583, file: !4335, line: 646, baseType: !4338, size: 64, offset: 1600)
!4592 = !DIDerivedType(tag: DW_TAG_member, name: "sync", scope: !4583, file: !4335, line: 647, baseType: !4328, size: 64, offset: 1664)
!4593 = !DIDerivedType(tag: DW_TAG_member, name: "dismiss", scope: !4583, file: !4335, line: 648, baseType: !4328, size: 64, offset: 1728)
!4594 = !DIDerivedType(tag: DW_TAG_member, name: "msi_domain", scope: !3940, file: !3941, line: 493, baseType: !4595, size: 64, offset: 4160)
!4595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4596, size: 64)
!4596 = !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain", file: !4597, line: 13, flags: DIFlagFwdDecl)
!4597 = !DIFile(filename: "./arch/x86/include/asm/x86_init.h", directory: "/home/lizy2001/genbc/linux")
!4598 = !DIDerivedType(tag: DW_TAG_member, name: "msi_list", scope: !3940, file: !3941, line: 499, baseType: !344, size: 128, offset: 4224)
!4599 = !DIDerivedType(tag: DW_TAG_member, name: "dma_ops", scope: !3940, file: !3941, line: 502, baseType: !4600, size: 64, offset: 4352)
!4600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4601, size: 64)
!4601 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4602)
!4602 = !DICompositeType(tag: DW_TAG_structure_type, name: "dma_map_ops", file: !3941, line: 502, flags: DIFlagFwdDecl)
!4603 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !3940, file: !3941, line: 504, baseType: !3475, size: 64, offset: 4416)
!4604 = !DIDerivedType(tag: DW_TAG_member, name: "coherent_dma_mask", scope: !3940, file: !3941, line: 505, baseType: !391, size: 64, offset: 4480)
!4605 = !DIDerivedType(tag: DW_TAG_member, name: "bus_dma_limit", scope: !3940, file: !3941, line: 510, baseType: !391, size: 64, offset: 4544)
!4606 = !DIDerivedType(tag: DW_TAG_member, name: "dma_range_map", scope: !3940, file: !3941, line: 511, baseType: !4607, size: 64, offset: 4608)
!4607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4608, size: 64)
!4608 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4609)
!4609 = !DICompositeType(tag: DW_TAG_structure_type, name: "bus_dma_region", file: !3941, line: 511, flags: DIFlagFwdDecl)
!4610 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !3940, file: !3941, line: 513, baseType: !4611, size: 64, offset: 4672)
!4611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4612, size: 64)
!4612 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_dma_parameters", file: !3941, line: 288, size: 128, elements: !4613)
!4613 = !{!4614, !4615}
!4614 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !4612, file: !3941, line: 293, baseType: !7, size: 32)
!4615 = !DIDerivedType(tag: DW_TAG_member, name: "segment_boundary_mask", scope: !4612, file: !3941, line: 294, baseType: !372, size: 64, offset: 64)
!4616 = !DIDerivedType(tag: DW_TAG_member, name: "dma_pools", scope: !3940, file: !3941, line: 515, baseType: !344, size: 128, offset: 4736)
!4617 = !DIDerivedType(tag: DW_TAG_member, name: "archdata", scope: !3940, file: !3941, line: 526, baseType: !4618, offset: 4864)
!4618 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_archdata", file: !4619, line: 5, elements: !798)
!4619 = !DIFile(filename: "./arch/x86/include/asm/device.h", directory: "/home/lizy2001/genbc/linux")
!4620 = !DIDerivedType(tag: DW_TAG_member, name: "of_node", scope: !3940, file: !3941, line: 528, baseType: !4621, size: 64, offset: 4864)
!4621 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4622, size: 64)
!4622 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_node", file: !4623, line: 14, flags: DIFlagFwdDecl)
!4623 = !DIFile(filename: "./include/linux/arch_topology.h", directory: "/home/lizy2001/genbc/linux")
!4624 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !3940, file: !3941, line: 529, baseType: !4625, size: 64, offset: 4928)
!4625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4626, size: 64)
!4626 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_handle", file: !4627, line: 17, size: 192, elements: !4628)
!4627 = !DIFile(filename: "./include/linux/fwnode.h", directory: "/home/lizy2001/genbc/linux")
!4628 = !{!4629, !4630, !4713}
!4629 = !DIDerivedType(tag: DW_TAG_member, name: "secondary", scope: !4626, file: !4627, line: 18, baseType: !4625, size: 64)
!4630 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4626, file: !4627, line: 19, baseType: !4631, size: 64, offset: 64)
!4631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4632, size: 64)
!4632 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4633)
!4633 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_operations", file: !4627, line: 110, size: 1152, elements: !4634)
!4634 = !{!4635, !4639, !4643, !4649, !4655, !4659, !4663, !4668, !4672, !4673, !4677, !4681, !4685, !4696, !4697, !4698, !4699, !4709}
!4635 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !4633, file: !4627, line: 111, baseType: !4636, size: 64)
!4636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4637, size: 64)
!4637 = !DISubroutineType(types: !4638)
!4638 = !{!4625, !4625}
!4639 = !DIDerivedType(tag: DW_TAG_member, name: "put", scope: !4633, file: !4627, line: 112, baseType: !4640, size: 64, offset: 64)
!4640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4641, size: 64)
!4641 = !DISubroutineType(types: !4642)
!4642 = !{null, !4625}
!4643 = !DIDerivedType(tag: DW_TAG_member, name: "device_is_available", scope: !4633, file: !4627, line: 113, baseType: !4644, size: 64, offset: 128)
!4644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4645, size: 64)
!4645 = !DISubroutineType(types: !4646)
!4646 = !{!595, !4647}
!4647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4648, size: 64)
!4648 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4626)
!4649 = !DIDerivedType(tag: DW_TAG_member, name: "device_get_match_data", scope: !4633, file: !4627, line: 114, baseType: !4650, size: 64, offset: 192)
!4650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4651, size: 64)
!4651 = !DISubroutineType(types: !4652)
!4652 = !{!2337, !4647, !4653}
!4653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4654, size: 64)
!4654 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3940)
!4655 = !DIDerivedType(tag: DW_TAG_member, name: "property_present", scope: !4633, file: !4627, line: 116, baseType: !4656, size: 64, offset: 256)
!4656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4657, size: 64)
!4657 = !DISubroutineType(types: !4658)
!4658 = !{!595, !4647, !352}
!4659 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_int_array", scope: !4633, file: !4627, line: 118, baseType: !4660, size: 64, offset: 320)
!4660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4661, size: 64)
!4661 = !DISubroutineType(types: !4662)
!4662 = !{!37, !4647, !352, !7, !625, !649}
!4663 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_string_array", scope: !4633, file: !4627, line: 123, baseType: !4664, size: 64, offset: 384)
!4664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4665, size: 64)
!4665 = !DISubroutineType(types: !4666)
!4666 = !{!37, !4647, !352, !4667, !649}
!4667 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !352, size: 64)
!4668 = !DIDerivedType(tag: DW_TAG_member, name: "get_name", scope: !4633, file: !4627, line: 126, baseType: !4669, size: 64, offset: 448)
!4669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4670, size: 64)
!4670 = !DISubroutineType(types: !4671)
!4671 = !{!352, !4647}
!4672 = !DIDerivedType(tag: DW_TAG_member, name: "get_name_prefix", scope: !4633, file: !4627, line: 127, baseType: !4669, size: 64, offset: 512)
!4673 = !DIDerivedType(tag: DW_TAG_member, name: "get_parent", scope: !4633, file: !4627, line: 128, baseType: !4674, size: 64, offset: 576)
!4674 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4675, size: 64)
!4675 = !DISubroutineType(types: !4676)
!4676 = !{!4625, !4647}
!4677 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_child_node", scope: !4633, file: !4627, line: 130, baseType: !4678, size: 64, offset: 640)
!4678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4679, size: 64)
!4679 = !DISubroutineType(types: !4680)
!4680 = !{!4625, !4647, !4625}
!4681 = !DIDerivedType(tag: DW_TAG_member, name: "get_named_child_node", scope: !4633, file: !4627, line: 133, baseType: !4682, size: 64, offset: 704)
!4682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4683, size: 64)
!4683 = !DISubroutineType(types: !4684)
!4684 = !{!4625, !4647, !352}
!4685 = !DIDerivedType(tag: DW_TAG_member, name: "get_reference_args", scope: !4633, file: !4627, line: 135, baseType: !4686, size: 64, offset: 768)
!4686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4687, size: 64)
!4687 = !DISubroutineType(types: !4688)
!4688 = !{!37, !4647, !352, !352, !7, !7, !4689}
!4689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4690, size: 64)
!4690 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_reference_args", file: !4627, line: 43, size: 640, elements: !4691)
!4691 = !{!4692, !4693, !4694}
!4692 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !4690, file: !4627, line: 44, baseType: !4625, size: 64)
!4693 = !DIDerivedType(tag: DW_TAG_member, name: "nargs", scope: !4690, file: !4627, line: 45, baseType: !7, size: 32, offset: 64)
!4694 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !4690, file: !4627, line: 46, baseType: !4695, size: 512, offset: 128)
!4695 = !DICompositeType(tag: DW_TAG_array_type, baseType: !391, size: 512, elements: !1425)
!4696 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_next_endpoint", scope: !4633, file: !4627, line: 140, baseType: !4678, size: 64, offset: 832)
!4697 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_remote_endpoint", scope: !4633, file: !4627, line: 143, baseType: !4674, size: 64, offset: 896)
!4698 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_port_parent", scope: !4633, file: !4627, line: 145, baseType: !4636, size: 64, offset: 960)
!4699 = !DIDerivedType(tag: DW_TAG_member, name: "graph_parse_endpoint", scope: !4633, file: !4627, line: 146, baseType: !4700, size: 64, offset: 1024)
!4700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4701, size: 64)
!4701 = !DISubroutineType(types: !4702)
!4702 = !{!37, !4647, !4703}
!4703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4704, size: 64)
!4704 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_endpoint", file: !4627, line: 29, size: 128, elements: !4705)
!4705 = !{!4706, !4707, !4708}
!4706 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !4704, file: !4627, line: 30, baseType: !7, size: 32)
!4707 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4704, file: !4627, line: 31, baseType: !7, size: 32, offset: 32)
!4708 = !DIDerivedType(tag: DW_TAG_member, name: "local_fwnode", scope: !4704, file: !4627, line: 32, baseType: !4647, size: 64, offset: 64)
!4709 = !DIDerivedType(tag: DW_TAG_member, name: "add_links", scope: !4633, file: !4627, line: 148, baseType: !4710, size: 64, offset: 1088)
!4710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4711, size: 64)
!4711 = !DISubroutineType(types: !4712)
!4712 = !{!37, !4647, !4306}
!4713 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4626, file: !4627, line: 20, baseType: !4306, size: 64, offset: 128)
!4714 = !DIDerivedType(tag: DW_TAG_member, name: "devt", scope: !3940, file: !3941, line: 534, baseType: !874, size: 32, offset: 4992)
!4715 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3940, file: !3941, line: 535, baseType: !762, size: 32, offset: 5024)
!4716 = !DIDerivedType(tag: DW_TAG_member, name: "devres_lock", scope: !3940, file: !3941, line: 537, baseType: !784, offset: 5056)
!4717 = !DIDerivedType(tag: DW_TAG_member, name: "devres_head", scope: !3940, file: !3941, line: 538, baseType: !344, size: 128, offset: 5056)
!4718 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !3940, file: !3941, line: 540, baseType: !4719, size: 64, offset: 5184)
!4719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4720, size: 64)
!4720 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "class", file: !4721, line: 54, size: 960, elements: !4722)
!4721 = !DIFile(filename: "./include/linux/device/class.h", directory: "/home/lizy2001/genbc/linux")
!4722 = !{!4723, !4724, !4725, !4726, !4727, !4728, !4729, !4733, !4737, !4738, !4739, !4740, !4744, !4748, !4749}
!4723 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4720, file: !4721, line: 55, baseType: !352, size: 64)
!4724 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4720, file: !4721, line: 56, baseType: !906, size: 64, offset: 64)
!4725 = !DIDerivedType(tag: DW_TAG_member, name: "class_groups", scope: !4720, file: !4721, line: 58, baseType: !4021, size: 64, offset: 128)
!4726 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !4720, file: !4721, line: 59, baseType: !4021, size: 64, offset: 192)
!4727 = !DIDerivedType(tag: DW_TAG_member, name: "dev_kobj", scope: !4720, file: !4721, line: 60, baseType: !3950, size: 64, offset: 256)
!4728 = !DIDerivedType(tag: DW_TAG_member, name: "dev_uevent", scope: !4720, file: !4721, line: 62, baseType: !4319, size: 64, offset: 320)
!4729 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !4720, file: !4721, line: 63, baseType: !4730, size: 64, offset: 384)
!4730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4731, size: 64)
!4731 = !DISubroutineType(types: !4732)
!4732 = !{!632, !4306, !4326}
!4733 = !DIDerivedType(tag: DW_TAG_member, name: "class_release", scope: !4720, file: !4721, line: 65, baseType: !4734, size: 64, offset: 448)
!4734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4735, size: 64)
!4735 = !DISubroutineType(types: !4736)
!4736 = !{null, !4719}
!4737 = !DIDerivedType(tag: DW_TAG_member, name: "dev_release", scope: !4720, file: !4721, line: 66, baseType: !4328, size: 64, offset: 512)
!4738 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown_pre", scope: !4720, file: !4721, line: 68, baseType: !4338, size: 64, offset: 576)
!4739 = !DIDerivedType(tag: DW_TAG_member, name: "ns_type", scope: !4720, file: !4721, line: 70, baseType: !4057, size: 64, offset: 640)
!4740 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !4720, file: !4721, line: 71, baseType: !4741, size: 64, offset: 704)
!4741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4742, size: 64)
!4742 = !DISubroutineType(types: !4743)
!4743 = !{!2337, !4306}
!4744 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !4720, file: !4721, line: 73, baseType: !4745, size: 64, offset: 768)
!4745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4746, size: 64)
!4746 = !DISubroutineType(types: !4747)
!4747 = !{null, !4306, !1868, !1869}
!4748 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !4720, file: !4721, line: 75, baseType: !4332, size: 64, offset: 832)
!4749 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !4720, file: !4721, line: 77, baseType: !4451, size: 64, offset: 896)
!4750 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !3940, file: !3941, line: 541, baseType: !4021, size: 64, offset: 5248)
!4751 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3940, file: !3941, line: 543, baseType: !4328, size: 64, offset: 5312)
!4752 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_group", scope: !3940, file: !3941, line: 544, baseType: !4753, size: 64, offset: 5376)
!4753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4754, size: 64)
!4754 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_group", file: !3941, line: 45, flags: DIFlagFwdDecl)
!4755 = !DIDerivedType(tag: DW_TAG_member, name: "iommu", scope: !3940, file: !3941, line: 545, baseType: !4756, size: 64, offset: 5440)
!4756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4757, size: 64)
!4757 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_iommu", file: !3941, line: 47, flags: DIFlagFwdDecl)
!4758 = !DIDerivedType(tag: DW_TAG_member, name: "offline_disabled", scope: !3940, file: !3941, line: 547, baseType: !595, size: 1, offset: 5504, flags: DIFlagBitField, extraData: i64 5504)
!4759 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !3940, file: !3941, line: 548, baseType: !595, size: 1, offset: 5505, flags: DIFlagBitField, extraData: i64 5504)
!4760 = !DIDerivedType(tag: DW_TAG_member, name: "of_node_reused", scope: !3940, file: !3941, line: 549, baseType: !595, size: 1, offset: 5506, flags: DIFlagBitField, extraData: i64 5504)
!4761 = !DIDerivedType(tag: DW_TAG_member, name: "state_synced", scope: !3940, file: !3941, line: 550, baseType: !595, size: 1, offset: 5507, flags: DIFlagBitField, extraData: i64 5504)
!4762 = !DIDerivedType(tag: DW_TAG_member, name: "holder_dir", scope: !3909, file: !3892, line: 69, baseType: !3950, size: 64, offset: 5952)
!4763 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !3909, file: !3892, line: 70, baseType: !37, size: 32, offset: 6016)
!4764 = !DIDerivedType(tag: DW_TAG_member, name: "partno", scope: !3909, file: !3892, line: 70, baseType: !37, size: 32, offset: 6048)
!4765 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !3909, file: !3892, line: 71, baseType: !4766, size: 64, offset: 6080)
!4766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4767, size: 64)
!4767 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "partition_meta_info", file: !3892, line: 48, size: 808, elements: !4768)
!4768 = !{!4769, !4771}
!4769 = !DIDerivedType(tag: DW_TAG_member, name: "uuid", scope: !4767, file: !3892, line: 49, baseType: !4770, size: 296)
!4770 = !DICompositeType(tag: DW_TAG_array_type, baseType: !328, size: 296, elements: !2128)
!4771 = !DIDerivedType(tag: DW_TAG_member, name: "volname", scope: !4767, file: !3892, line: 50, baseType: !4772, size: 512, offset: 296)
!4772 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1451, size: 512, elements: !3844)
!4773 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_work", scope: !3909, file: !3892, line: 75, baseType: !4774, size: 448, offset: 6144)
!4774 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcu_work", file: !1783, line: 124, size: 448, elements: !4775)
!4775 = !{!4776, !4777, !4778}
!4776 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !4774, file: !1783, line: 125, baseType: !1782, size: 256)
!4777 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !4774, file: !1783, line: 126, baseType: !359, size: 128, align: 64, offset: 256)
!4778 = !DIDerivedType(tag: DW_TAG_member, name: "wq", scope: !4774, file: !1783, line: 129, baseType: !2894, size: 64, offset: 384)
!4779 = !DIDerivedType(tag: DW_TAG_member, name: "part", scope: !3903, file: !3892, line: 153, baseType: !4780, offset: 256)
!4780 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3908, elements: !369)
!4781 = !DIDerivedType(tag: DW_TAG_member, name: "part0", scope: !3891, file: !3892, line: 187, baseType: !3909, size: 6592, offset: 448)
!4782 = !DIDerivedType(tag: DW_TAG_member, name: "fops", scope: !3891, file: !3892, line: 189, baseType: !4783, size: 64, offset: 7040)
!4783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4784, size: 64)
!4784 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4785)
!4785 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_device_operations", file: !4786, line: 1844, size: 960, elements: !4787)
!4786 = !DIFile(filename: "./include/linux/blkdev.h", directory: "/home/lizy2001/genbc/linux")
!4787 = !{!4788, !4793, !4888, !4892, !4896, !4900, !4901, !4905, !4909, !4913, !4919, !4923, !4949, !4953, !4954}
!4788 = !DIDerivedType(tag: DW_TAG_member, name: "submit_bio", scope: !4785, file: !4786, line: 1845, baseType: !4789, size: 64)
!4789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4790, size: 64)
!4790 = !DISubroutineType(types: !4791)
!4791 = !{!4792, !3884}
!4792 = !DIDerivedType(tag: DW_TAG_typedef, name: "blk_qc_t", file: !3886, line: 515, baseType: !7)
!4793 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !4785, file: !4786, line: 1846, baseType: !4794, size: 64, offset: 64)
!4794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4795, size: 64)
!4795 = !DISubroutineType(types: !4796)
!4796 = !{!37, !4797, !4887}
!4797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4798, size: 64)
!4798 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_device", file: !3886, line: 22, size: 1344, elements: !4799)
!4799 = !{!4800, !4801, !4802, !4803, !4804, !4805, !4806, !4807, !4808, !4809, !4810, !4811, !4812, !4813, !4814, !4815, !4816, !4885, !4886}
!4800 = !DIDerivedType(tag: DW_TAG_member, name: "bd_dev", scope: !4798, file: !3886, line: 23, baseType: !874, size: 32)
!4801 = !DIDerivedType(tag: DW_TAG_member, name: "bd_openers", scope: !4798, file: !3886, line: 24, baseType: !37, size: 32, offset: 32)
!4802 = !DIDerivedType(tag: DW_TAG_member, name: "bd_inode", scope: !4798, file: !3886, line: 25, baseType: !697, size: 64, offset: 64)
!4803 = !DIDerivedType(tag: DW_TAG_member, name: "bd_super", scope: !4798, file: !3886, line: 26, baseType: !869, size: 64, offset: 128)
!4804 = !DIDerivedType(tag: DW_TAG_member, name: "bd_mutex", scope: !4798, file: !3886, line: 27, baseType: !1008, size: 192, offset: 192)
!4805 = !DIDerivedType(tag: DW_TAG_member, name: "bd_claiming", scope: !4798, file: !3886, line: 28, baseType: !625, size: 64, offset: 384)
!4806 = !DIDerivedType(tag: DW_TAG_member, name: "bd_holder", scope: !4798, file: !3886, line: 29, baseType: !625, size: 64, offset: 448)
!4807 = !DIDerivedType(tag: DW_TAG_member, name: "bd_holders", scope: !4798, file: !3886, line: 30, baseType: !37, size: 32, offset: 512)
!4808 = !DIDerivedType(tag: DW_TAG_member, name: "bd_write_holder", scope: !4798, file: !3886, line: 31, baseType: !595, size: 8, offset: 544)
!4809 = !DIDerivedType(tag: DW_TAG_member, name: "bd_holder_disks", scope: !4798, file: !3886, line: 33, baseType: !344, size: 128, offset: 576)
!4810 = !DIDerivedType(tag: DW_TAG_member, name: "bd_contains", scope: !4798, file: !3886, line: 35, baseType: !4797, size: 64, offset: 704)
!4811 = !DIDerivedType(tag: DW_TAG_member, name: "bd_partno", scope: !4798, file: !3886, line: 36, baseType: !1451, size: 8, offset: 768)
!4812 = !DIDerivedType(tag: DW_TAG_member, name: "bd_part", scope: !4798, file: !3886, line: 37, baseType: !3908, size: 64, offset: 832)
!4813 = !DIDerivedType(tag: DW_TAG_member, name: "bd_part_count", scope: !4798, file: !3886, line: 39, baseType: !7, size: 32, offset: 896)
!4814 = !DIDerivedType(tag: DW_TAG_member, name: "bd_size_lock", scope: !4798, file: !3886, line: 41, baseType: !784, offset: 928)
!4815 = !DIDerivedType(tag: DW_TAG_member, name: "bd_disk", scope: !4798, file: !3886, line: 42, baseType: !3890, size: 64, offset: 960)
!4816 = !DIDerivedType(tag: DW_TAG_member, name: "bd_bdi", scope: !4798, file: !3886, line: 43, baseType: !4817, size: 64, offset: 1024)
!4817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4818, size: 64)
!4818 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "backing_dev_info", file: !4819, line: 165, size: 4672, elements: !4820)
!4819 = !DIFile(filename: "./include/linux/backing-dev-defs.h", directory: "/home/lizy2001/genbc/linux")
!4820 = !{!4821, !4822, !4823, !4824, !4825, !4826, !4827, !4828, !4829, !4830, !4831, !4832, !4878, !4879, !4880, !4881, !4883, !4884}
!4821 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4818, file: !4819, line: 166, baseType: !391, size: 64)
!4822 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !4818, file: !4819, line: 167, baseType: !493, size: 192, align: 64, offset: 64)
!4823 = !DIDerivedType(tag: DW_TAG_member, name: "bdi_list", scope: !4818, file: !4819, line: 168, baseType: !344, size: 128, offset: 256)
!4824 = !DIDerivedType(tag: DW_TAG_member, name: "ra_pages", scope: !4818, file: !4819, line: 169, baseType: !372, size: 64, offset: 384)
!4825 = !DIDerivedType(tag: DW_TAG_member, name: "io_pages", scope: !4818, file: !4819, line: 170, baseType: !372, size: 64, offset: 448)
!4826 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !4818, file: !4819, line: 172, baseType: !1598, size: 32, offset: 512)
!4827 = !DIDerivedType(tag: DW_TAG_member, name: "capabilities", scope: !4818, file: !4819, line: 173, baseType: !7, size: 32, offset: 544)
!4828 = !DIDerivedType(tag: DW_TAG_member, name: "min_ratio", scope: !4818, file: !4819, line: 174, baseType: !7, size: 32, offset: 576)
!4829 = !DIDerivedType(tag: DW_TAG_member, name: "max_ratio", scope: !4818, file: !4819, line: 175, baseType: !7, size: 32, offset: 608)
!4830 = !DIDerivedType(tag: DW_TAG_member, name: "max_prop_frac", scope: !4818, file: !4819, line: 175, baseType: !7, size: 32, offset: 640)
!4831 = !DIDerivedType(tag: DW_TAG_member, name: "tot_write_bandwidth", scope: !4818, file: !4819, line: 181, baseType: !431, size: 64, offset: 704)
!4832 = !DIDerivedType(tag: DW_TAG_member, name: "wb", scope: !4818, file: !4819, line: 183, baseType: !4833, size: 2688, offset: 768)
!4833 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bdi_writeback", file: !4819, line: 107, size: 2688, elements: !4834)
!4834 = !{!4835, !4836, !4837, !4838, !4839, !4840, !4841, !4842, !4843, !4845, !4846, !4847, !4848, !4849, !4850, !4851, !4852, !4853, !4860, !4861, !4873, !4874, !4875, !4876, !4877}
!4835 = !DIDerivedType(tag: DW_TAG_member, name: "bdi", scope: !4833, file: !4819, line: 108, baseType: !4817, size: 64)
!4836 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4833, file: !4819, line: 110, baseType: !372, size: 64, offset: 64)
!4837 = !DIDerivedType(tag: DW_TAG_member, name: "last_old_flush", scope: !4833, file: !4819, line: 111, baseType: !372, size: 64, offset: 128)
!4838 = !DIDerivedType(tag: DW_TAG_member, name: "b_dirty", scope: !4833, file: !4819, line: 113, baseType: !344, size: 128, offset: 192)
!4839 = !DIDerivedType(tag: DW_TAG_member, name: "b_io", scope: !4833, file: !4819, line: 114, baseType: !344, size: 128, offset: 320)
!4840 = !DIDerivedType(tag: DW_TAG_member, name: "b_more_io", scope: !4833, file: !4819, line: 115, baseType: !344, size: 128, offset: 448)
!4841 = !DIDerivedType(tag: DW_TAG_member, name: "b_dirty_time", scope: !4833, file: !4819, line: 116, baseType: !344, size: 128, offset: 576)
!4842 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !4833, file: !4819, line: 117, baseType: !784, offset: 704)
!4843 = !DIDerivedType(tag: DW_TAG_member, name: "stat", scope: !4833, file: !4819, line: 119, baseType: !4844, size: 256, offset: 704)
!4844 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3000, size: 256, elements: !1256)
!4845 = !DIDerivedType(tag: DW_TAG_member, name: "congested", scope: !4833, file: !4819, line: 121, baseType: !372, size: 64, offset: 960)
!4846 = !DIDerivedType(tag: DW_TAG_member, name: "bw_time_stamp", scope: !4833, file: !4819, line: 123, baseType: !372, size: 64, offset: 1024)
!4847 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_stamp", scope: !4833, file: !4819, line: 124, baseType: !372, size: 64, offset: 1088)
!4848 = !DIDerivedType(tag: DW_TAG_member, name: "written_stamp", scope: !4833, file: !4819, line: 125, baseType: !372, size: 64, offset: 1152)
!4849 = !DIDerivedType(tag: DW_TAG_member, name: "write_bandwidth", scope: !4833, file: !4819, line: 126, baseType: !372, size: 64, offset: 1216)
!4850 = !DIDerivedType(tag: DW_TAG_member, name: "avg_write_bandwidth", scope: !4833, file: !4819, line: 127, baseType: !372, size: 64, offset: 1280)
!4851 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_ratelimit", scope: !4833, file: !4819, line: 135, baseType: !372, size: 64, offset: 1344)
!4852 = !DIDerivedType(tag: DW_TAG_member, name: "balanced_dirty_ratelimit", scope: !4833, file: !4819, line: 136, baseType: !372, size: 64, offset: 1408)
!4853 = !DIDerivedType(tag: DW_TAG_member, name: "completions", scope: !4833, file: !4819, line: 138, baseType: !4854, size: 128, offset: 1472)
!4854 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fprop_local_percpu", file: !4855, line: 76, size: 128, elements: !4856)
!4855 = !DIFile(filename: "./include/linux/flex_proportions.h", directory: "/home/lizy2001/genbc/linux")
!4856 = !{!4857, !4858, !4859}
!4857 = !DIDerivedType(tag: DW_TAG_member, name: "events", scope: !4854, file: !4855, line: 78, baseType: !3000, size: 64)
!4858 = !DIDerivedType(tag: DW_TAG_member, name: "period", scope: !4854, file: !4855, line: 80, baseType: !7, size: 32, offset: 64)
!4859 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4854, file: !4855, line: 81, baseType: !1222, offset: 96)
!4860 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_exceeded", scope: !4833, file: !4819, line: 139, baseType: !37, size: 32, offset: 1600)
!4861 = !DIDerivedType(tag: DW_TAG_member, name: "start_all_reason", scope: !4833, file: !4819, line: 140, baseType: !4862, size: 32, offset: 1632)
!4862 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "wb_reason", file: !4819, line: 49, baseType: !7, size: 32, elements: !4863)
!4863 = !{!4864, !4865, !4866, !4867, !4868, !4869, !4870, !4871, !4872}
!4864 = !DIEnumerator(name: "WB_REASON_BACKGROUND", value: 0, isUnsigned: true)
!4865 = !DIEnumerator(name: "WB_REASON_VMSCAN", value: 1, isUnsigned: true)
!4866 = !DIEnumerator(name: "WB_REASON_SYNC", value: 2, isUnsigned: true)
!4867 = !DIEnumerator(name: "WB_REASON_PERIODIC", value: 3, isUnsigned: true)
!4868 = !DIEnumerator(name: "WB_REASON_LAPTOP_TIMER", value: 4, isUnsigned: true)
!4869 = !DIEnumerator(name: "WB_REASON_FS_FREE_SPACE", value: 5, isUnsigned: true)
!4870 = !DIEnumerator(name: "WB_REASON_FORKER_THREAD", value: 6, isUnsigned: true)
!4871 = !DIEnumerator(name: "WB_REASON_FOREIGN_FLUSH", value: 7, isUnsigned: true)
!4872 = !DIEnumerator(name: "WB_REASON_MAX", value: 8, isUnsigned: true)
!4873 = !DIDerivedType(tag: DW_TAG_member, name: "work_lock", scope: !4833, file: !4819, line: 142, baseType: !784, offset: 1664)
!4874 = !DIDerivedType(tag: DW_TAG_member, name: "work_list", scope: !4833, file: !4819, line: 143, baseType: !344, size: 128, offset: 1664)
!4875 = !DIDerivedType(tag: DW_TAG_member, name: "dwork", scope: !4833, file: !4819, line: 144, baseType: !2889, size: 704, offset: 1792)
!4876 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_sleep", scope: !4833, file: !4819, line: 146, baseType: !372, size: 64, offset: 2496)
!4877 = !DIDerivedType(tag: DW_TAG_member, name: "bdi_node", scope: !4833, file: !4819, line: 148, baseType: !344, size: 128, offset: 2560)
!4878 = !DIDerivedType(tag: DW_TAG_member, name: "wb_list", scope: !4818, file: !4819, line: 184, baseType: !344, size: 128, offset: 3456)
!4879 = !DIDerivedType(tag: DW_TAG_member, name: "wb_waitq", scope: !4818, file: !4819, line: 190, baseType: !1154, size: 128, offset: 3584)
!4880 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4818, file: !4819, line: 192, baseType: !4306, size: 64, offset: 3712)
!4881 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name", scope: !4818, file: !4819, line: 193, baseType: !4882, size: 512, offset: 3776)
!4882 = !DICompositeType(tag: DW_TAG_array_type, baseType: !328, size: 512, elements: !3844)
!4883 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4818, file: !4819, line: 194, baseType: !4306, size: 64, offset: 4288)
!4884 = !DIDerivedType(tag: DW_TAG_member, name: "laptop_mode_wb_timer", scope: !4818, file: !4819, line: 196, baseType: !2314, size: 320, offset: 4352)
!4885 = !DIDerivedType(tag: DW_TAG_member, name: "bd_fsfreeze_count", scope: !4798, file: !3886, line: 46, baseType: !37, size: 32, offset: 1088)
!4886 = !DIDerivedType(tag: DW_TAG_member, name: "bd_fsfreeze_mutex", scope: !4798, file: !3886, line: 48, baseType: !1008, size: 192, offset: 1152)
!4887 = !DIDerivedType(tag: DW_TAG_typedef, name: "fmode_t", file: !337, line: 150, baseType: !7)
!4888 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !4785, file: !4786, line: 1847, baseType: !4889, size: 64, offset: 128)
!4889 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4890, size: 64)
!4890 = !DISubroutineType(types: !4891)
!4891 = !{null, !3890, !4887}
!4892 = !DIDerivedType(tag: DW_TAG_member, name: "rw_page", scope: !4785, file: !4786, line: 1848, baseType: !4893, size: 64, offset: 192)
!4893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4894, size: 64)
!4894 = !DISubroutineType(types: !4895)
!4895 = !{!37, !4797, !3912, !679, !7}
!4896 = !DIDerivedType(tag: DW_TAG_member, name: "ioctl", scope: !4785, file: !4786, line: 1849, baseType: !4897, size: 64, offset: 256)
!4897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4898, size: 64)
!4898 = !DISubroutineType(types: !4899)
!4899 = !{!37, !4797, !4887, !7, !372}
!4900 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !4785, file: !4786, line: 1850, baseType: !4897, size: 64, offset: 320)
!4901 = !DIDerivedType(tag: DW_TAG_member, name: "check_events", scope: !4785, file: !4786, line: 1851, baseType: !4902, size: 64, offset: 384)
!4902 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4903, size: 64)
!4903 = !DISubroutineType(types: !4904)
!4904 = !{!7, !3890, !7}
!4905 = !DIDerivedType(tag: DW_TAG_member, name: "unlock_native_capacity", scope: !4785, file: !4786, line: 1853, baseType: !4906, size: 64, offset: 448)
!4906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4907, size: 64)
!4907 = !DISubroutineType(types: !4908)
!4908 = !{null, !3890}
!4909 = !DIDerivedType(tag: DW_TAG_member, name: "revalidate_disk", scope: !4785, file: !4786, line: 1854, baseType: !4910, size: 64, offset: 512)
!4910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4911, size: 64)
!4911 = !DISubroutineType(types: !4912)
!4912 = !{!37, !3890}
!4913 = !DIDerivedType(tag: DW_TAG_member, name: "getgeo", scope: !4785, file: !4786, line: 1855, baseType: !4914, size: 64, offset: 576)
!4914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4915, size: 64)
!4915 = !DISubroutineType(types: !4916)
!4916 = !{!37, !4797, !4917}
!4917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4918, size: 64)
!4918 = !DICompositeType(tag: DW_TAG_structure_type, name: "hd_geometry", file: !694, line: 51, flags: DIFlagFwdDecl)
!4919 = !DIDerivedType(tag: DW_TAG_member, name: "swap_slot_free_notify", scope: !4785, file: !4786, line: 1857, baseType: !4920, size: 64, offset: 640)
!4920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4921, size: 64)
!4921 = !DISubroutineType(types: !4922)
!4922 = !{null, !4797, !372}
!4923 = !DIDerivedType(tag: DW_TAG_member, name: "report_zones", scope: !4785, file: !4786, line: 1858, baseType: !4924, size: 64, offset: 704)
!4924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4925, size: 64)
!4925 = !DISubroutineType(types: !4926)
!4926 = !{!37, !3890, !3912, !7, !4927, !625}
!4927 = !DIDerivedType(tag: DW_TAG_typedef, name: "report_zones_cb", file: !4786, line: 354, baseType: !4928)
!4928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4929, size: 64)
!4929 = !DISubroutineType(types: !4930)
!4930 = !{!37, !4931, !7, !625}
!4931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4932, size: 64)
!4932 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_zone", file: !4933, line: 106, size: 512, elements: !4934)
!4933 = !DIFile(filename: "./include/uapi/linux/blkzoned.h", directory: "/home/lizy2001/genbc/linux")
!4934 = !{!4935, !4936, !4937, !4938, !4939, !4940, !4941, !4942, !4944, !4945}
!4935 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4932, file: !4933, line: 107, baseType: !393, size: 64)
!4936 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !4932, file: !4933, line: 108, baseType: !393, size: 64, offset: 64)
!4937 = !DIDerivedType(tag: DW_TAG_member, name: "wp", scope: !4932, file: !4933, line: 109, baseType: !393, size: 64, offset: 128)
!4938 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4932, file: !4933, line: 110, baseType: !1452, size: 8, offset: 192)
!4939 = !DIDerivedType(tag: DW_TAG_member, name: "cond", scope: !4932, file: !4933, line: 111, baseType: !1452, size: 8, offset: 200)
!4940 = !DIDerivedType(tag: DW_TAG_member, name: "non_seq", scope: !4932, file: !4933, line: 112, baseType: !1452, size: 8, offset: 208)
!4941 = !DIDerivedType(tag: DW_TAG_member, name: "reset", scope: !4932, file: !4933, line: 113, baseType: !1452, size: 8, offset: 216)
!4942 = !DIDerivedType(tag: DW_TAG_member, name: "resv", scope: !4932, file: !4933, line: 114, baseType: !4943, size: 32, offset: 224)
!4943 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1452, size: 32, elements: !1256)
!4944 = !DIDerivedType(tag: DW_TAG_member, name: "capacity", scope: !4932, file: !4933, line: 115, baseType: !393, size: 64, offset: 256)
!4945 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !4932, file: !4933, line: 116, baseType: !4946, size: 192, offset: 320)
!4946 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1452, size: 192, elements: !4947)
!4947 = !{!4948}
!4948 = !DISubrange(count: 24)
!4949 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !4785, file: !4786, line: 1860, baseType: !4950, size: 64, offset: 768)
!4950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4951, size: 64)
!4951 = !DISubroutineType(types: !4952)
!4952 = !{!632, !3890, !4326}
!4953 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4785, file: !4786, line: 1861, baseType: !906, size: 64, offset: 832)
!4954 = !DIDerivedType(tag: DW_TAG_member, name: "pr_ops", scope: !4785, file: !4786, line: 1862, baseType: !4955, size: 64, offset: 896)
!4955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4956, size: 64)
!4956 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4957)
!4957 = !DICompositeType(tag: DW_TAG_structure_type, name: "pr_ops", file: !4786, line: 41, flags: DIFlagFwdDecl)
!4958 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !3891, file: !3892, line: 190, baseType: !4959, size: 64, offset: 7104)
!4959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4960, size: 64)
!4960 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "request_queue", file: !4786, line: 399, size: 14464, elements: !4961)
!4961 = !{!4962, !5097, !5226, !5227, !5230, !5233, !5237, !5238, !5239, !5241, !5242, !5243, !5244, !5245, !5246, !5247, !5248, !5249, !5250, !5251, !5287, !5288, !5289, !5290, !5291, !5292, !5293, !5294, !5295, !5298, !5307, !5308, !5309, !5310, !5311, !5346, !5347, !5348, !5349, !5350, !5351, !5354, !5355, !5356, !5357, !5358, !5359, !5360, !5361, !5362, !5424, !5425, !5426, !5427, !5430, !5431, !5464, !5465, !5466, !5467}
!4962 = !DIDerivedType(tag: DW_TAG_member, name: "last_merge", scope: !4960, file: !4786, line: 400, baseType: !4963, size: 64)
!4963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4964, size: 64)
!4964 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "request", file: !4786, line: 130, size: 2176, elements: !4965)
!4965 = !{!4966, !4967, !4970, !4973, !4974, !4976, !4977, !4978, !4979, !4980, !4981, !4982, !4983, !4988, !4995, !5044, !5045, !5046, !5047, !5048, !5049, !5050, !5051, !5052, !5053, !5059, !5060, !5061, !5062, !5095, !5096}
!4966 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !4964, file: !4786, line: 131, baseType: !4959, size: 64)
!4967 = !DIDerivedType(tag: DW_TAG_member, name: "mq_ctx", scope: !4964, file: !4786, line: 132, baseType: !4968, size: 64, offset: 64)
!4968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4969, size: 64)
!4969 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_ctx", file: !4786, line: 132, flags: DIFlagFwdDecl)
!4970 = !DIDerivedType(tag: DW_TAG_member, name: "mq_hctx", scope: !4964, file: !4786, line: 133, baseType: !4971, size: 64, offset: 128)
!4971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4972, size: 64)
!4972 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_hw_ctx", file: !4786, line: 133, flags: DIFlagFwdDecl)
!4973 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_flags", scope: !4964, file: !4786, line: 135, baseType: !7, size: 32, offset: 192)
!4974 = !DIDerivedType(tag: DW_TAG_member, name: "rq_flags", scope: !4964, file: !4786, line: 136, baseType: !4975, size: 32, offset: 224)
!4975 = !DIDerivedType(tag: DW_TAG_typedef, name: "req_flags_t", file: !4786, line: 66, baseType: !523)
!4976 = !DIDerivedType(tag: DW_TAG_member, name: "tag", scope: !4964, file: !4786, line: 138, baseType: !37, size: 32, offset: 256)
!4977 = !DIDerivedType(tag: DW_TAG_member, name: "internal_tag", scope: !4964, file: !4786, line: 139, baseType: !37, size: 32, offset: 288)
!4978 = !DIDerivedType(tag: DW_TAG_member, name: "__data_len", scope: !4964, file: !4786, line: 142, baseType: !7, size: 32, offset: 320)
!4979 = !DIDerivedType(tag: DW_TAG_member, name: "__sector", scope: !4964, file: !4786, line: 143, baseType: !3912, size: 64, offset: 384)
!4980 = !DIDerivedType(tag: DW_TAG_member, name: "bio", scope: !4964, file: !4786, line: 145, baseType: !3884, size: 64, offset: 448)
!4981 = !DIDerivedType(tag: DW_TAG_member, name: "biotail", scope: !4964, file: !4786, line: 146, baseType: !3884, size: 64, offset: 512)
!4982 = !DIDerivedType(tag: DW_TAG_member, name: "queuelist", scope: !4964, file: !4786, line: 148, baseType: !344, size: 128, offset: 576)
!4983 = !DIDerivedType(tag: DW_TAG_member, scope: !4964, file: !4786, line: 157, baseType: !4984, size: 128, offset: 704)
!4984 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4964, file: !4786, line: 157, size: 128, elements: !4985)
!4985 = !{!4986, !4987}
!4986 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !4984, file: !4786, line: 158, baseType: !336, size: 128)
!4987 = !DIDerivedType(tag: DW_TAG_member, name: "ipi_list", scope: !4984, file: !4786, line: 159, baseType: !344, size: 128)
!4988 = !DIDerivedType(tag: DW_TAG_member, scope: !4964, file: !4786, line: 167, baseType: !4989, size: 192, offset: 832)
!4989 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4964, file: !4786, line: 167, size: 192, elements: !4990)
!4990 = !{!4991, !4992, !4993, !4994}
!4991 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !4989, file: !4786, line: 168, baseType: !493, size: 192, align: 64)
!4992 = !DIDerivedType(tag: DW_TAG_member, name: "special_vec", scope: !4989, file: !4786, line: 169, baseType: !675, size: 128)
!4993 = !DIDerivedType(tag: DW_TAG_member, name: "completion_data", scope: !4989, file: !4786, line: 170, baseType: !625, size: 64)
!4994 = !DIDerivedType(tag: DW_TAG_member, name: "error_count", scope: !4989, file: !4786, line: 171, baseType: !37, size: 32)
!4995 = !DIDerivedType(tag: DW_TAG_member, scope: !4964, file: !4786, line: 180, baseType: !4996, size: 256, offset: 1024)
!4996 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4964, file: !4786, line: 180, size: 256, elements: !4997)
!4997 = !{!4998, !5033}
!4998 = !DIDerivedType(tag: DW_TAG_member, name: "elv", scope: !4996, file: !4786, line: 184, baseType: !4999, size: 192)
!4999 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4996, file: !4786, line: 181, size: 192, elements: !5000)
!5000 = !{!5001, !5031}
!5001 = !DIDerivedType(tag: DW_TAG_member, name: "icq", scope: !4999, file: !4786, line: 182, baseType: !5002, size: 64)
!5002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5003, size: 64)
!5003 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_cq", file: !5004, line: 73, size: 448, elements: !5005)
!5004 = !DIFile(filename: "./include/linux/iocontext.h", directory: "/home/lizy2001/genbc/linux")
!5005 = !{!5006, !5007, !5020, !5025, !5030}
!5006 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !5003, file: !5004, line: 74, baseType: !4959, size: 64)
!5007 = !DIDerivedType(tag: DW_TAG_member, name: "ioc", scope: !5003, file: !5004, line: 75, baseType: !5008, size: 64, offset: 64)
!5008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5009, size: 64)
!5009 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_context", file: !5004, line: 99, size: 704, elements: !5010)
!5010 = !{!5011, !5012, !5013, !5014, !5015, !5016, !5017, !5018, !5019}
!5011 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !5009, file: !5004, line: 100, baseType: !431, size: 64)
!5012 = !DIDerivedType(tag: DW_TAG_member, name: "active_ref", scope: !5009, file: !5004, line: 101, baseType: !443, size: 32, offset: 64)
!5013 = !DIDerivedType(tag: DW_TAG_member, name: "nr_tasks", scope: !5009, file: !5004, line: 102, baseType: !443, size: 32, offset: 96)
!5014 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5009, file: !5004, line: 105, baseType: !784, offset: 128)
!5015 = !DIDerivedType(tag: DW_TAG_member, name: "ioprio", scope: !5009, file: !5004, line: 107, baseType: !532, size: 16, offset: 128)
!5016 = !DIDerivedType(tag: DW_TAG_member, name: "icq_tree", scope: !5009, file: !5004, line: 109, baseType: !1607, size: 128, offset: 192)
!5017 = !DIDerivedType(tag: DW_TAG_member, name: "icq_hint", scope: !5009, file: !5004, line: 110, baseType: !5002, size: 64, offset: 320)
!5018 = !DIDerivedType(tag: DW_TAG_member, name: "icq_list", scope: !5009, file: !5004, line: 111, baseType: !911, size: 64, offset: 384)
!5019 = !DIDerivedType(tag: DW_TAG_member, name: "release_work", scope: !5009, file: !5004, line: 113, baseType: !1782, size: 256, offset: 448)
!5020 = !DIDerivedType(tag: DW_TAG_member, scope: !5003, file: !5004, line: 83, baseType: !5021, size: 128, offset: 128)
!5021 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5003, file: !5004, line: 83, size: 128, elements: !5022)
!5022 = !{!5023, !5024}
!5023 = !DIDerivedType(tag: DW_TAG_member, name: "q_node", scope: !5021, file: !5004, line: 84, baseType: !344, size: 128)
!5024 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_icq_cache", scope: !5021, file: !5004, line: 85, baseType: !1620, size: 64)
!5025 = !DIDerivedType(tag: DW_TAG_member, scope: !5003, file: !5004, line: 87, baseType: !5026, size: 128, offset: 256)
!5026 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5003, file: !5004, line: 87, size: 128, elements: !5027)
!5027 = !{!5028, !5029}
!5028 = !DIDerivedType(tag: DW_TAG_member, name: "ioc_node", scope: !5026, file: !5004, line: 88, baseType: !336, size: 128)
!5029 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_head", scope: !5026, file: !5004, line: 89, baseType: !359, size: 128, align: 64)
!5030 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5003, file: !5004, line: 92, baseType: !7, size: 32, offset: 384)
!5031 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !4999, file: !4786, line: 183, baseType: !5032, size: 128, offset: 64)
!5032 = !DICompositeType(tag: DW_TAG_array_type, baseType: !625, size: 128, elements: !533)
!5033 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !4996, file: !4786, line: 190, baseType: !5034, size: 256)
!5034 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4996, file: !4786, line: 186, size: 256, elements: !5035)
!5035 = !{!5036, !5037, !5038}
!5036 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !5034, file: !4786, line: 187, baseType: !7, size: 32)
!5037 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !5034, file: !4786, line: 188, baseType: !344, size: 128, offset: 64)
!5038 = !DIDerivedType(tag: DW_TAG_member, name: "saved_end_io", scope: !5034, file: !4786, line: 189, baseType: !5039, size: 64, offset: 192)
!5039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5040, size: 64)
!5040 = !DIDerivedType(tag: DW_TAG_typedef, name: "rq_end_io_fn", file: !4786, line: 62, baseType: !5041)
!5041 = !DISubroutineType(types: !5042)
!5042 = !{null, !4963, !5043}
!5043 = !DIDerivedType(tag: DW_TAG_typedef, name: "blk_status_t", file: !3886, line: 58, baseType: !1451)
!5044 = !DIDerivedType(tag: DW_TAG_member, name: "rq_disk", scope: !4964, file: !4786, line: 193, baseType: !3890, size: 64, offset: 1280)
!5045 = !DIDerivedType(tag: DW_TAG_member, name: "part", scope: !4964, file: !4786, line: 194, baseType: !3908, size: 64, offset: 1344)
!5046 = !DIDerivedType(tag: DW_TAG_member, name: "start_time_ns", scope: !4964, file: !4786, line: 200, baseType: !391, size: 64, offset: 1408)
!5047 = !DIDerivedType(tag: DW_TAG_member, name: "io_start_time_ns", scope: !4964, file: !4786, line: 202, baseType: !391, size: 64, offset: 1472)
!5048 = !DIDerivedType(tag: DW_TAG_member, name: "stats_sectors", scope: !4964, file: !4786, line: 212, baseType: !532, size: 16, offset: 1536)
!5049 = !DIDerivedType(tag: DW_TAG_member, name: "nr_phys_segments", scope: !4964, file: !4786, line: 218, baseType: !532, size: 16, offset: 1552)
!5050 = !DIDerivedType(tag: DW_TAG_member, name: "nr_integrity_segments", scope: !4964, file: !4786, line: 221, baseType: !532, size: 16, offset: 1568)
!5051 = !DIDerivedType(tag: DW_TAG_member, name: "write_hint", scope: !4964, file: !4786, line: 229, baseType: !532, size: 16, offset: 1584)
!5052 = !DIDerivedType(tag: DW_TAG_member, name: "ioprio", scope: !4964, file: !4786, line: 230, baseType: !532, size: 16, offset: 1600)
!5053 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4964, file: !4786, line: 232, baseType: !5054, size: 32, offset: 1632)
!5054 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mq_rq_state", file: !4786, line: 118, baseType: !7, size: 32, elements: !5055)
!5055 = !{!5056, !5057, !5058}
!5056 = !DIEnumerator(name: "MQ_RQ_IDLE", value: 0, isUnsigned: true)
!5057 = !DIEnumerator(name: "MQ_RQ_IN_FLIGHT", value: 1, isUnsigned: true)
!5058 = !DIEnumerator(name: "MQ_RQ_COMPLETE", value: 2, isUnsigned: true)
!5059 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !4964, file: !4786, line: 233, baseType: !1325, size: 32, offset: 1664)
!5060 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !4964, file: !4786, line: 235, baseType: !7, size: 32, offset: 1696)
!5061 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", scope: !4964, file: !4786, line: 236, baseType: !372, size: 64, offset: 1728)
!5062 = !DIDerivedType(tag: DW_TAG_member, scope: !4964, file: !4786, line: 238, baseType: !5063, size: 256, offset: 1792)
!5063 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4964, file: !4786, line: 238, size: 256, elements: !5064)
!5064 = !{!5065, !5094}
!5065 = !DIDerivedType(tag: DW_TAG_member, name: "csd", scope: !5063, file: !4786, line: 239, baseType: !5066, size: 256)
!5066 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__call_single_data", file: !5067, line: 23, size: 256, elements: !5068)
!5067 = !DIFile(filename: "./include/linux/smp.h", directory: "/home/lizy2001/genbc/linux")
!5068 = !{!5069, !5091, !5093}
!5069 = !DIDerivedType(tag: DW_TAG_member, scope: !5066, file: !5067, line: 24, baseType: !5070, size: 128)
!5070 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5066, file: !5067, line: 24, size: 128, elements: !5071)
!5071 = !{!5072, !5084}
!5072 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !5070, file: !5067, line: 25, baseType: !5073, size: 128)
!5073 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__call_single_node", file: !5074, line: 58, size: 128, elements: !5075)
!5074 = !DIFile(filename: "./include/linux/smp_types.h", directory: "/home/lizy2001/genbc/linux")
!5075 = !{!5076, !5077, !5082, !5083}
!5076 = !DIDerivedType(tag: DW_TAG_member, name: "llist", scope: !5073, file: !5074, line: 59, baseType: !1046, size: 64)
!5077 = !DIDerivedType(tag: DW_TAG_member, scope: !5073, file: !5074, line: 60, baseType: !5078, size: 32, offset: 64)
!5078 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5073, file: !5074, line: 60, size: 32, elements: !5079)
!5079 = !{!5080, !5081}
!5080 = !DIDerivedType(tag: DW_TAG_member, name: "u_flags", scope: !5078, file: !5074, line: 61, baseType: !7, size: 32)
!5081 = !DIDerivedType(tag: DW_TAG_member, name: "a_flags", scope: !5078, file: !5074, line: 62, baseType: !443, size: 32)
!5082 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !5073, file: !5074, line: 65, baseType: !1092, size: 16, offset: 96)
!5083 = !DIDerivedType(tag: DW_TAG_member, name: "dst", scope: !5073, file: !5074, line: 65, baseType: !1092, size: 16, offset: 112)
!5084 = !DIDerivedType(tag: DW_TAG_member, scope: !5070, file: !5067, line: 26, baseType: !5085, size: 128)
!5085 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5070, file: !5067, line: 26, size: 128, elements: !5086)
!5086 = !{!5087, !5088, !5089, !5090}
!5087 = !DIDerivedType(tag: DW_TAG_member, name: "llist", scope: !5085, file: !5067, line: 27, baseType: !1046, size: 64)
!5088 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5085, file: !5067, line: 28, baseType: !7, size: 32, offset: 64)
!5089 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !5085, file: !5067, line: 30, baseType: !1092, size: 16, offset: 96)
!5090 = !DIDerivedType(tag: DW_TAG_member, name: "dst", scope: !5085, file: !5067, line: 30, baseType: !1092, size: 16, offset: 112)
!5091 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !5066, file: !5067, line: 34, baseType: !5092, size: 64, offset: 128)
!5092 = !DIDerivedType(tag: DW_TAG_typedef, name: "smp_call_func_t", file: !5067, line: 17, baseType: !3427)
!5093 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !5066, file: !5067, line: 35, baseType: !625, size: 64, offset: 192)
!5094 = !DIDerivedType(tag: DW_TAG_member, name: "fifo_time", scope: !5063, file: !4786, line: 240, baseType: !391, size: 64)
!5095 = !DIDerivedType(tag: DW_TAG_member, name: "end_io", scope: !4964, file: !4786, line: 246, baseType: !5039, size: 64, offset: 2048)
!5096 = !DIDerivedType(tag: DW_TAG_member, name: "end_io_data", scope: !4964, file: !4786, line: 247, baseType: !625, size: 64, offset: 2112)
!5097 = !DIDerivedType(tag: DW_TAG_member, name: "elevator", scope: !4960, file: !4786, line: 401, baseType: !5098, size: 64, offset: 64)
!5098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5099, size: 64)
!5099 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elevator_queue", file: !5100, line: 101, size: 4992, elements: !5101)
!5100 = !DIFile(filename: "./include/linux/elevator.h", directory: "/home/lizy2001/genbc/linux")
!5101 = !{!5102, !5220, !5221, !5222, !5223, !5224}
!5102 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5099, file: !5100, line: 103, baseType: !5103, size: 64)
!5103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5104, size: 64)
!5104 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elevator_type", file: !5100, line: 66, size: 2240, elements: !5105)
!5105 = !{!5106, !5107, !5195, !5196, !5197, !5210, !5211, !5212, !5214, !5215, !5219}
!5106 = !DIDerivedType(tag: DW_TAG_member, name: "icq_cache", scope: !5104, file: !5100, line: 69, baseType: !1620, size: 64)
!5107 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !5104, file: !5100, line: 72, baseType: !5108, size: 1408, offset: 64)
!5108 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elevator_mq_ops", file: !5100, line: 29, size: 1408, elements: !5109)
!5109 = !{!5110, !5114, !5118, !5122, !5126, !5130, !5134, !5138, !5143, !5153, !5157, !5163, !5167, !5168, !5172, !5176, !5180, !5184, !5185, !5189, !5190, !5194}
!5110 = !DIDerivedType(tag: DW_TAG_member, name: "init_sched", scope: !5108, file: !5100, line: 30, baseType: !5111, size: 64)
!5111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5112, size: 64)
!5112 = !DISubroutineType(types: !5113)
!5113 = !{!37, !4959, !5103}
!5114 = !DIDerivedType(tag: DW_TAG_member, name: "exit_sched", scope: !5108, file: !5100, line: 31, baseType: !5115, size: 64, offset: 64)
!5115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5116, size: 64)
!5116 = !DISubroutineType(types: !5117)
!5117 = !{null, !5098}
!5118 = !DIDerivedType(tag: DW_TAG_member, name: "init_hctx", scope: !5108, file: !5100, line: 32, baseType: !5119, size: 64, offset: 128)
!5119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5120, size: 64)
!5120 = !DISubroutineType(types: !5121)
!5121 = !{!37, !4971, !7}
!5122 = !DIDerivedType(tag: DW_TAG_member, name: "exit_hctx", scope: !5108, file: !5100, line: 33, baseType: !5123, size: 64, offset: 192)
!5123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5124, size: 64)
!5124 = !DISubroutineType(types: !5125)
!5125 = !{null, !4971, !7}
!5126 = !DIDerivedType(tag: DW_TAG_member, name: "depth_updated", scope: !5108, file: !5100, line: 34, baseType: !5127, size: 64, offset: 256)
!5127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5128, size: 64)
!5128 = !DISubroutineType(types: !5129)
!5129 = !{null, !4971}
!5130 = !DIDerivedType(tag: DW_TAG_member, name: "allow_merge", scope: !5108, file: !5100, line: 36, baseType: !5131, size: 64, offset: 320)
!5131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5132, size: 64)
!5132 = !DISubroutineType(types: !5133)
!5133 = !{!595, !4959, !4963, !3884}
!5134 = !DIDerivedType(tag: DW_TAG_member, name: "bio_merge", scope: !5108, file: !5100, line: 37, baseType: !5135, size: 64, offset: 384)
!5135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5136, size: 64)
!5136 = !DISubroutineType(types: !5137)
!5137 = !{!595, !4971, !3884, !7}
!5138 = !DIDerivedType(tag: DW_TAG_member, name: "request_merge", scope: !5108, file: !5100, line: 38, baseType: !5139, size: 64, offset: 448)
!5139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5140, size: 64)
!5140 = !DISubroutineType(types: !5141)
!5141 = !{!37, !4959, !5142, !3884}
!5142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4963, size: 64)
!5143 = !DIDerivedType(tag: DW_TAG_member, name: "request_merged", scope: !5108, file: !5100, line: 39, baseType: !5144, size: 64, offset: 512)
!5144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5145, size: 64)
!5145 = !DISubroutineType(types: !5146)
!5146 = !{null, !4959, !4963, !5147}
!5147 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "elv_merge", file: !5100, line: 19, baseType: !7, size: 32, elements: !5148)
!5148 = !{!5149, !5150, !5151, !5152}
!5149 = !DIEnumerator(name: "ELEVATOR_NO_MERGE", value: 0, isUnsigned: true)
!5150 = !DIEnumerator(name: "ELEVATOR_FRONT_MERGE", value: 1, isUnsigned: true)
!5151 = !DIEnumerator(name: "ELEVATOR_BACK_MERGE", value: 2, isUnsigned: true)
!5152 = !DIEnumerator(name: "ELEVATOR_DISCARD_MERGE", value: 3, isUnsigned: true)
!5153 = !DIDerivedType(tag: DW_TAG_member, name: "requests_merged", scope: !5108, file: !5100, line: 40, baseType: !5154, size: 64, offset: 576)
!5154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5155, size: 64)
!5155 = !DISubroutineType(types: !5156)
!5156 = !{null, !4959, !4963, !4963}
!5157 = !DIDerivedType(tag: DW_TAG_member, name: "limit_depth", scope: !5108, file: !5100, line: 41, baseType: !5158, size: 64, offset: 640)
!5158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5159, size: 64)
!5159 = !DISubroutineType(types: !5160)
!5160 = !{null, !7, !5161}
!5161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5162, size: 64)
!5162 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_alloc_data", file: !5100, line: 26, flags: DIFlagFwdDecl)
!5163 = !DIDerivedType(tag: DW_TAG_member, name: "prepare_request", scope: !5108, file: !5100, line: 42, baseType: !5164, size: 64, offset: 704)
!5164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5165, size: 64)
!5165 = !DISubroutineType(types: !5166)
!5166 = !{null, !4963}
!5167 = !DIDerivedType(tag: DW_TAG_member, name: "finish_request", scope: !5108, file: !5100, line: 43, baseType: !5164, size: 64, offset: 768)
!5168 = !DIDerivedType(tag: DW_TAG_member, name: "insert_requests", scope: !5108, file: !5100, line: 44, baseType: !5169, size: 64, offset: 832)
!5169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5170, size: 64)
!5170 = !DISubroutineType(types: !5171)
!5171 = !{null, !4971, !347, !595}
!5172 = !DIDerivedType(tag: DW_TAG_member, name: "dispatch_request", scope: !5108, file: !5100, line: 45, baseType: !5173, size: 64, offset: 896)
!5173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5174, size: 64)
!5174 = !DISubroutineType(types: !5175)
!5175 = !{!4963, !4971}
!5176 = !DIDerivedType(tag: DW_TAG_member, name: "has_work", scope: !5108, file: !5100, line: 46, baseType: !5177, size: 64, offset: 960)
!5177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5178, size: 64)
!5178 = !DISubroutineType(types: !5179)
!5179 = !{!595, !4971}
!5180 = !DIDerivedType(tag: DW_TAG_member, name: "completed_request", scope: !5108, file: !5100, line: 47, baseType: !5181, size: 64, offset: 1024)
!5181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5182, size: 64)
!5182 = !DISubroutineType(types: !5183)
!5183 = !{null, !4963, !391}
!5184 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_request", scope: !5108, file: !5100, line: 48, baseType: !5164, size: 64, offset: 1088)
!5185 = !DIDerivedType(tag: DW_TAG_member, name: "former_request", scope: !5108, file: !5100, line: 49, baseType: !5186, size: 64, offset: 1152)
!5186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5187, size: 64)
!5187 = !DISubroutineType(types: !5188)
!5188 = !{!4963, !4959, !4963}
!5189 = !DIDerivedType(tag: DW_TAG_member, name: "next_request", scope: !5108, file: !5100, line: 50, baseType: !5186, size: 64, offset: 1216)
!5190 = !DIDerivedType(tag: DW_TAG_member, name: "init_icq", scope: !5108, file: !5100, line: 51, baseType: !5191, size: 64, offset: 1280)
!5191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5192, size: 64)
!5192 = !DISubroutineType(types: !5193)
!5193 = !{null, !5002}
!5194 = !DIDerivedType(tag: DW_TAG_member, name: "exit_icq", scope: !5108, file: !5100, line: 52, baseType: !5191, size: 64, offset: 1344)
!5195 = !DIDerivedType(tag: DW_TAG_member, name: "icq_size", scope: !5104, file: !5100, line: 74, baseType: !649, size: 64, offset: 1472)
!5196 = !DIDerivedType(tag: DW_TAG_member, name: "icq_align", scope: !5104, file: !5100, line: 75, baseType: !649, size: 64, offset: 1536)
!5197 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_attrs", scope: !5104, file: !5100, line: 76, baseType: !5198, size: 64, offset: 1600)
!5198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5199, size: 64)
!5199 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elv_fs_entry", file: !5100, line: 57, size: 256, elements: !5200)
!5200 = !{!5201, !5202, !5206}
!5201 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !5199, file: !5100, line: 58, baseType: !4010, size: 128)
!5202 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !5199, file: !5100, line: 59, baseType: !5203, size: 64, offset: 128)
!5203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5204, size: 64)
!5204 = !DISubroutineType(types: !5205)
!5205 = !{!1069, !5098, !632}
!5206 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !5199, file: !5100, line: 60, baseType: !5207, size: 64, offset: 192)
!5207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5208, size: 64)
!5208 = !DISubroutineType(types: !5209)
!5209 = !{!1069, !5098, !352, !649}
!5210 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_name", scope: !5104, file: !5100, line: 77, baseType: !352, size: 64, offset: 1664)
!5211 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_alias", scope: !5104, file: !5100, line: 78, baseType: !352, size: 64, offset: 1728)
!5212 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_features", scope: !5104, file: !5100, line: 79, baseType: !5213, size: 32, offset: 1792)
!5213 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!5214 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_owner", scope: !5104, file: !5100, line: 80, baseType: !906, size: 64, offset: 1856)
!5215 = !DIDerivedType(tag: DW_TAG_member, name: "icq_cache_name", scope: !5104, file: !5100, line: 87, baseType: !5216, size: 176, offset: 1920)
!5216 = !DICompositeType(tag: DW_TAG_array_type, baseType: !328, size: 176, elements: !5217)
!5217 = !{!5218}
!5218 = !DISubrange(count: 22)
!5219 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !5104, file: !5100, line: 88, baseType: !344, size: 128, offset: 2112)
!5220 = !DIDerivedType(tag: DW_TAG_member, name: "elevator_data", scope: !5099, file: !5100, line: 104, baseType: !625, size: 64, offset: 64)
!5221 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !5099, file: !5100, line: 105, baseType: !3944, size: 512, offset: 128)
!5222 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_lock", scope: !5099, file: !5100, line: 106, baseType: !1008, size: 192, offset: 640)
!5223 = !DIDerivedType(tag: DW_TAG_member, name: "registered", scope: !5099, file: !5100, line: 107, baseType: !7, size: 1, offset: 832, flags: DIFlagBitField, extraData: i64 832)
!5224 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !5099, file: !5100, line: 108, baseType: !5225, size: 4096, offset: 896)
!5225 = !DICompositeType(tag: DW_TAG_array_type, baseType: !911, size: 4096, elements: !3844)
!5226 = !DIDerivedType(tag: DW_TAG_member, name: "q_usage_counter", scope: !4960, file: !4786, line: 403, baseType: !3919, size: 128, offset: 128)
!5227 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !4960, file: !4786, line: 405, baseType: !5228, size: 64, offset: 256)
!5228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5229, size: 64)
!5229 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_queue_stats", file: !4786, line: 43, flags: DIFlagFwdDecl)
!5230 = !DIDerivedType(tag: DW_TAG_member, name: "rq_qos", scope: !4960, file: !4786, line: 406, baseType: !5231, size: 64, offset: 320)
!5231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5232, size: 64)
!5232 = !DICompositeType(tag: DW_TAG_structure_type, name: "rq_qos", file: !4786, line: 42, flags: DIFlagFwdDecl)
!5233 = !DIDerivedType(tag: DW_TAG_member, name: "mq_ops", scope: !4960, file: !4786, line: 408, baseType: !5234, size: 64, offset: 384)
!5234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5235, size: 64)
!5235 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5236)
!5236 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_ops", file: !4786, line: 408, flags: DIFlagFwdDecl)
!5237 = !DIDerivedType(tag: DW_TAG_member, name: "queue_ctx", scope: !4960, file: !4786, line: 411, baseType: !4968, size: 64, offset: 448)
!5238 = !DIDerivedType(tag: DW_TAG_member, name: "queue_depth", scope: !4960, file: !4786, line: 413, baseType: !7, size: 32, offset: 512)
!5239 = !DIDerivedType(tag: DW_TAG_member, name: "queue_hw_ctx", scope: !4960, file: !4786, line: 416, baseType: !5240, size: 64, offset: 576)
!5240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4971, size: 64)
!5241 = !DIDerivedType(tag: DW_TAG_member, name: "nr_hw_queues", scope: !4960, file: !4786, line: 417, baseType: !7, size: 32, offset: 640)
!5242 = !DIDerivedType(tag: DW_TAG_member, name: "backing_dev_info", scope: !4960, file: !4786, line: 419, baseType: !4817, size: 64, offset: 704)
!5243 = !DIDerivedType(tag: DW_TAG_member, name: "queuedata", scope: !4960, file: !4786, line: 425, baseType: !625, size: 64, offset: 768)
!5244 = !DIDerivedType(tag: DW_TAG_member, name: "queue_flags", scope: !4960, file: !4786, line: 430, baseType: !372, size: 64, offset: 832)
!5245 = !DIDerivedType(tag: DW_TAG_member, name: "pm_only", scope: !4960, file: !4786, line: 436, baseType: !443, size: 32, offset: 896)
!5246 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4960, file: !4786, line: 442, baseType: !37, size: 32, offset: 928)
!5247 = !DIDerivedType(tag: DW_TAG_member, name: "bounce_gfp", scope: !4960, file: !4786, line: 447, baseType: !1612, size: 32, offset: 960)
!5248 = !DIDerivedType(tag: DW_TAG_member, name: "queue_lock", scope: !4960, file: !4786, line: 449, baseType: !784, offset: 992)
!5249 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !4960, file: !4786, line: 454, baseType: !3944, size: 512, offset: 1024)
!5250 = !DIDerivedType(tag: DW_TAG_member, name: "mq_kobj", scope: !4960, file: !4786, line: 459, baseType: !3950, size: 64, offset: 1536)
!5251 = !DIDerivedType(tag: DW_TAG_member, name: "integrity", scope: !4960, file: !4786, line: 462, baseType: !5252, size: 128, offset: 1600)
!5252 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_integrity", file: !3892, line: 159, size: 128, elements: !5253)
!5253 = !{!5254, !5283, !5284, !5285, !5286}
!5254 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !5252, file: !3892, line: 160, baseType: !5255, size: 64)
!5255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5256, size: 64)
!5256 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5257)
!5257 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_integrity_profile", file: !4786, line: 1664, size: 320, elements: !5258)
!5258 = !{!5259, !5273, !5274, !5277, !5282}
!5259 = !DIDerivedType(tag: DW_TAG_member, name: "generate_fn", scope: !5257, file: !4786, line: 1665, baseType: !5260, size: 64)
!5260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5261, size: 64)
!5261 = !DIDerivedType(tag: DW_TAG_typedef, name: "integrity_processing_fn", file: !4786, line: 1660, baseType: !5262)
!5262 = !DISubroutineType(types: !5263)
!5263 = !{!5043, !5264}
!5264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5265, size: 64)
!5265 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_integrity_iter", file: !4786, line: 1651, size: 320, elements: !5266)
!5266 = !{!5267, !5268, !5269, !5270, !5271, !5272}
!5267 = !DIDerivedType(tag: DW_TAG_member, name: "prot_buf", scope: !5265, file: !4786, line: 1652, baseType: !625, size: 64)
!5268 = !DIDerivedType(tag: DW_TAG_member, name: "data_buf", scope: !5265, file: !4786, line: 1653, baseType: !625, size: 64, offset: 64)
!5269 = !DIDerivedType(tag: DW_TAG_member, name: "seed", scope: !5265, file: !4786, line: 1654, baseType: !3912, size: 64, offset: 128)
!5270 = !DIDerivedType(tag: DW_TAG_member, name: "data_size", scope: !5265, file: !4786, line: 1655, baseType: !7, size: 32, offset: 192)
!5271 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !5265, file: !4786, line: 1656, baseType: !532, size: 16, offset: 224)
!5272 = !DIDerivedType(tag: DW_TAG_member, name: "disk_name", scope: !5265, file: !4786, line: 1657, baseType: !352, size: 64, offset: 256)
!5273 = !DIDerivedType(tag: DW_TAG_member, name: "verify_fn", scope: !5257, file: !4786, line: 1666, baseType: !5260, size: 64, offset: 64)
!5274 = !DIDerivedType(tag: DW_TAG_member, name: "prepare_fn", scope: !5257, file: !4786, line: 1667, baseType: !5275, size: 64, offset: 128)
!5275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5276, size: 64)
!5276 = !DIDerivedType(tag: DW_TAG_typedef, name: "integrity_prepare_fn", file: !4786, line: 1661, baseType: !5165)
!5277 = !DIDerivedType(tag: DW_TAG_member, name: "complete_fn", scope: !5257, file: !4786, line: 1668, baseType: !5278, size: 64, offset: 192)
!5278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5279, size: 64)
!5279 = !DIDerivedType(tag: DW_TAG_typedef, name: "integrity_complete_fn", file: !4786, line: 1662, baseType: !5280)
!5280 = !DISubroutineType(types: !5281)
!5281 = !{null, !4963, !7}
!5282 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5257, file: !4786, line: 1669, baseType: !352, size: 64, offset: 256)
!5283 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5252, file: !3892, line: 161, baseType: !549, size: 8, offset: 64)
!5284 = !DIDerivedType(tag: DW_TAG_member, name: "tuple_size", scope: !5252, file: !3892, line: 162, baseType: !549, size: 8, offset: 72)
!5285 = !DIDerivedType(tag: DW_TAG_member, name: "interval_exp", scope: !5252, file: !3892, line: 163, baseType: !549, size: 8, offset: 80)
!5286 = !DIDerivedType(tag: DW_TAG_member, name: "tag_size", scope: !5252, file: !3892, line: 164, baseType: !549, size: 8, offset: 88)
!5287 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4960, file: !4786, line: 466, baseType: !4306, size: 64, offset: 1728)
!5288 = !DIDerivedType(tag: DW_TAG_member, name: "rpm_status", scope: !4960, file: !4786, line: 467, baseType: !4552, size: 32, offset: 1792)
!5289 = !DIDerivedType(tag: DW_TAG_member, name: "nr_pending", scope: !4960, file: !4786, line: 468, baseType: !7, size: 32, offset: 1824)
!5290 = !DIDerivedType(tag: DW_TAG_member, name: "nr_requests", scope: !4960, file: !4786, line: 474, baseType: !372, size: 64, offset: 1856)
!5291 = !DIDerivedType(tag: DW_TAG_member, name: "dma_pad_mask", scope: !4960, file: !4786, line: 476, baseType: !7, size: 32, offset: 1920)
!5292 = !DIDerivedType(tag: DW_TAG_member, name: "dma_alignment", scope: !4960, file: !4786, line: 477, baseType: !7, size: 32, offset: 1952)
!5293 = !DIDerivedType(tag: DW_TAG_member, name: "rq_timeout", scope: !4960, file: !4786, line: 484, baseType: !7, size: 32, offset: 1984)
!5294 = !DIDerivedType(tag: DW_TAG_member, name: "poll_nsec", scope: !4960, file: !4786, line: 485, baseType: !37, size: 32, offset: 2016)
!5295 = !DIDerivedType(tag: DW_TAG_member, name: "poll_cb", scope: !4960, file: !4786, line: 487, baseType: !5296, size: 64, offset: 2048)
!5296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5297, size: 64)
!5297 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_stat_callback", file: !4786, line: 44, flags: DIFlagFwdDecl)
!5298 = !DIDerivedType(tag: DW_TAG_member, name: "poll_stat", scope: !4960, file: !4786, line: 488, baseType: !5299, size: 5120, offset: 2112)
!5299 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5300, size: 5120, elements: !329)
!5300 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_rq_stat", file: !3886, line: 540, size: 320, elements: !5301)
!5301 = !{!5302, !5303, !5304, !5305, !5306}
!5302 = !DIDerivedType(tag: DW_TAG_member, name: "mean", scope: !5300, file: !3886, line: 541, baseType: !391, size: 64)
!5303 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !5300, file: !3886, line: 542, baseType: !391, size: 64, offset: 64)
!5304 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !5300, file: !3886, line: 543, baseType: !391, size: 64, offset: 128)
!5305 = !DIDerivedType(tag: DW_TAG_member, name: "nr_samples", scope: !5300, file: !3886, line: 544, baseType: !762, size: 32, offset: 192)
!5306 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !5300, file: !3886, line: 545, baseType: !391, size: 64, offset: 256)
!5307 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !4960, file: !4786, line: 490, baseType: !2314, size: 320, offset: 7232)
!5308 = !DIDerivedType(tag: DW_TAG_member, name: "timeout_work", scope: !4960, file: !4786, line: 491, baseType: !1782, size: 256, offset: 7552)
!5309 = !DIDerivedType(tag: DW_TAG_member, name: "nr_active_requests_shared_sbitmap", scope: !4960, file: !4786, line: 493, baseType: !443, size: 32, offset: 7808)
!5310 = !DIDerivedType(tag: DW_TAG_member, name: "icq_list", scope: !4960, file: !4786, line: 495, baseType: !344, size: 128, offset: 7872)
!5311 = !DIDerivedType(tag: DW_TAG_member, name: "limits", scope: !4960, file: !4786, line: 502, baseType: !5312, size: 896, offset: 8000)
!5312 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "queue_limits", file: !4786, line: 321, size: 896, elements: !5313)
!5313 = !{!5314, !5315, !5316, !5317, !5318, !5319, !5320, !5321, !5322, !5323, !5324, !5325, !5326, !5327, !5328, !5329, !5330, !5331, !5332, !5333, !5334, !5335, !5336, !5337, !5338, !5339, !5340}
!5314 = !DIDerivedType(tag: DW_TAG_member, name: "bounce_pfn", scope: !5312, file: !4786, line: 322, baseType: !372, size: 64)
!5315 = !DIDerivedType(tag: DW_TAG_member, name: "seg_boundary_mask", scope: !5312, file: !4786, line: 323, baseType: !372, size: 64, offset: 64)
!5316 = !DIDerivedType(tag: DW_TAG_member, name: "virt_boundary_mask", scope: !5312, file: !4786, line: 324, baseType: !372, size: 64, offset: 128)
!5317 = !DIDerivedType(tag: DW_TAG_member, name: "max_hw_sectors", scope: !5312, file: !4786, line: 326, baseType: !7, size: 32, offset: 192)
!5318 = !DIDerivedType(tag: DW_TAG_member, name: "max_dev_sectors", scope: !5312, file: !4786, line: 327, baseType: !7, size: 32, offset: 224)
!5319 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_sectors", scope: !5312, file: !4786, line: 328, baseType: !7, size: 32, offset: 256)
!5320 = !DIDerivedType(tag: DW_TAG_member, name: "max_sectors", scope: !5312, file: !4786, line: 329, baseType: !7, size: 32, offset: 288)
!5321 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !5312, file: !4786, line: 330, baseType: !7, size: 32, offset: 320)
!5322 = !DIDerivedType(tag: DW_TAG_member, name: "physical_block_size", scope: !5312, file: !4786, line: 331, baseType: !7, size: 32, offset: 352)
!5323 = !DIDerivedType(tag: DW_TAG_member, name: "logical_block_size", scope: !5312, file: !4786, line: 332, baseType: !7, size: 32, offset: 384)
!5324 = !DIDerivedType(tag: DW_TAG_member, name: "alignment_offset", scope: !5312, file: !4786, line: 333, baseType: !7, size: 32, offset: 416)
!5325 = !DIDerivedType(tag: DW_TAG_member, name: "io_min", scope: !5312, file: !4786, line: 334, baseType: !7, size: 32, offset: 448)
!5326 = !DIDerivedType(tag: DW_TAG_member, name: "io_opt", scope: !5312, file: !4786, line: 335, baseType: !7, size: 32, offset: 480)
!5327 = !DIDerivedType(tag: DW_TAG_member, name: "max_discard_sectors", scope: !5312, file: !4786, line: 336, baseType: !7, size: 32, offset: 512)
!5328 = !DIDerivedType(tag: DW_TAG_member, name: "max_hw_discard_sectors", scope: !5312, file: !4786, line: 337, baseType: !7, size: 32, offset: 544)
!5329 = !DIDerivedType(tag: DW_TAG_member, name: "max_write_same_sectors", scope: !5312, file: !4786, line: 338, baseType: !7, size: 32, offset: 576)
!5330 = !DIDerivedType(tag: DW_TAG_member, name: "max_write_zeroes_sectors", scope: !5312, file: !4786, line: 339, baseType: !7, size: 32, offset: 608)
!5331 = !DIDerivedType(tag: DW_TAG_member, name: "max_zone_append_sectors", scope: !5312, file: !4786, line: 340, baseType: !7, size: 32, offset: 640)
!5332 = !DIDerivedType(tag: DW_TAG_member, name: "discard_granularity", scope: !5312, file: !4786, line: 341, baseType: !7, size: 32, offset: 672)
!5333 = !DIDerivedType(tag: DW_TAG_member, name: "discard_alignment", scope: !5312, file: !4786, line: 342, baseType: !7, size: 32, offset: 704)
!5334 = !DIDerivedType(tag: DW_TAG_member, name: "max_segments", scope: !5312, file: !4786, line: 344, baseType: !532, size: 16, offset: 736)
!5335 = !DIDerivedType(tag: DW_TAG_member, name: "max_integrity_segments", scope: !5312, file: !4786, line: 345, baseType: !532, size: 16, offset: 752)
!5336 = !DIDerivedType(tag: DW_TAG_member, name: "max_discard_segments", scope: !5312, file: !4786, line: 346, baseType: !532, size: 16, offset: 768)
!5337 = !DIDerivedType(tag: DW_TAG_member, name: "misaligned", scope: !5312, file: !4786, line: 348, baseType: !549, size: 8, offset: 784)
!5338 = !DIDerivedType(tag: DW_TAG_member, name: "discard_misaligned", scope: !5312, file: !4786, line: 349, baseType: !549, size: 8, offset: 792)
!5339 = !DIDerivedType(tag: DW_TAG_member, name: "raid_partial_stripes_expensive", scope: !5312, file: !4786, line: 350, baseType: !549, size: 8, offset: 800)
!5340 = !DIDerivedType(tag: DW_TAG_member, name: "zoned", scope: !5312, file: !4786, line: 351, baseType: !5341, size: 32, offset: 832)
!5341 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "blk_zoned_model", file: !4786, line: 315, baseType: !7, size: 32, elements: !5342)
!5342 = !{!5343, !5344, !5345}
!5343 = !DIEnumerator(name: "BLK_ZONED_NONE", value: 0, isUnsigned: true)
!5344 = !DIEnumerator(name: "BLK_ZONED_HA", value: 1, isUnsigned: true)
!5345 = !DIEnumerator(name: "BLK_ZONED_HM", value: 2, isUnsigned: true)
!5346 = !DIDerivedType(tag: DW_TAG_member, name: "required_elevator_features", scope: !4960, file: !4786, line: 504, baseType: !7, size: 32, offset: 8896)
!5347 = !DIDerivedType(tag: DW_TAG_member, name: "sg_timeout", scope: !4960, file: !4786, line: 534, baseType: !7, size: 32, offset: 8928)
!5348 = !DIDerivedType(tag: DW_TAG_member, name: "sg_reserved_size", scope: !4960, file: !4786, line: 535, baseType: !7, size: 32, offset: 8960)
!5349 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !4960, file: !4786, line: 536, baseType: !37, size: 32, offset: 8992)
!5350 = !DIDerivedType(tag: DW_TAG_member, name: "debugfs_mutex", scope: !4960, file: !4786, line: 537, baseType: !1008, size: 192, offset: 9024)
!5351 = !DIDerivedType(tag: DW_TAG_member, name: "fq", scope: !4960, file: !4786, line: 544, baseType: !5352, size: 64, offset: 9216)
!5352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5353, size: 64)
!5353 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_flush_queue", file: !4786, line: 40, flags: DIFlagFwdDecl)
!5354 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_list", scope: !4960, file: !4786, line: 546, baseType: !344, size: 128, offset: 9280)
!5355 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_lock", scope: !4960, file: !4786, line: 547, baseType: !784, offset: 9408)
!5356 = !DIDerivedType(tag: DW_TAG_member, name: "requeue_work", scope: !4960, file: !4786, line: 548, baseType: !2889, size: 704, offset: 9408)
!5357 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_lock", scope: !4960, file: !4786, line: 550, baseType: !1008, size: 192, offset: 10112)
!5358 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_dir_lock", scope: !4960, file: !4786, line: 551, baseType: !1008, size: 192, offset: 10304)
!5359 = !DIDerivedType(tag: DW_TAG_member, name: "unused_hctx_list", scope: !4960, file: !4786, line: 557, baseType: !344, size: 128, offset: 10496)
!5360 = !DIDerivedType(tag: DW_TAG_member, name: "unused_hctx_lock", scope: !4960, file: !4786, line: 558, baseType: !784, offset: 10624)
!5361 = !DIDerivedType(tag: DW_TAG_member, name: "mq_freeze_depth", scope: !4960, file: !4786, line: 560, baseType: !37, size: 32, offset: 10624)
!5362 = !DIDerivedType(tag: DW_TAG_member, name: "bsg_dev", scope: !4960, file: !4786, line: 563, baseType: !5363, size: 256, offset: 10688)
!5363 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bsg_class_device", file: !5364, line: 18, size: 256, elements: !5365)
!5364 = !DIFile(filename: "./include/linux/bsg.h", directory: "/home/lizy2001/genbc/linux")
!5365 = !{!5366, !5367, !5368, !5369}
!5366 = !DIDerivedType(tag: DW_TAG_member, name: "class_dev", scope: !5363, file: !5364, line: 19, baseType: !4306, size: 64)
!5367 = !DIDerivedType(tag: DW_TAG_member, name: "minor", scope: !5363, file: !5364, line: 20, baseType: !37, size: 32, offset: 64)
!5368 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !5363, file: !5364, line: 21, baseType: !4959, size: 64, offset: 128)
!5369 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !5363, file: !5364, line: 22, baseType: !5370, size: 64, offset: 192)
!5370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5371, size: 64)
!5371 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5372)
!5372 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bsg_ops", file: !5364, line: 10, size: 256, elements: !5373)
!5373 = !{!5374, !5415, !5419, !5423}
!5374 = !DIDerivedType(tag: DW_TAG_member, name: "check_proto", scope: !5372, file: !5364, line: 11, baseType: !5375, size: 64)
!5375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5376, size: 64)
!5376 = !DISubroutineType(types: !5377)
!5377 = !{!37, !5378}
!5378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5379, size: 64)
!5379 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sg_io_v4", file: !5380, line: 22, size: 1280, elements: !5381)
!5380 = !DIFile(filename: "./include/uapi/linux/bsg.h", directory: "/home/lizy2001/genbc/linux")
!5381 = !{!5382, !5383, !5384, !5385, !5386, !5387, !5388, !5389, !5390, !5391, !5392, !5393, !5394, !5395, !5396, !5397, !5398, !5399, !5400, !5401, !5402, !5403, !5404, !5405, !5406, !5407, !5408, !5409, !5410, !5411, !5412, !5413, !5414}
!5382 = !DIDerivedType(tag: DW_TAG_member, name: "guard", scope: !5379, file: !5380, line: 23, baseType: !1544, size: 32)
!5383 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !5379, file: !5380, line: 24, baseType: !523, size: 32, offset: 32)
!5384 = !DIDerivedType(tag: DW_TAG_member, name: "subprotocol", scope: !5379, file: !5380, line: 25, baseType: !523, size: 32, offset: 64)
!5385 = !DIDerivedType(tag: DW_TAG_member, name: "request_len", scope: !5379, file: !5380, line: 28, baseType: !523, size: 32, offset: 96)
!5386 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !5379, file: !5380, line: 29, baseType: !393, size: 64, offset: 128)
!5387 = !DIDerivedType(tag: DW_TAG_member, name: "request_tag", scope: !5379, file: !5380, line: 30, baseType: !393, size: 64, offset: 192)
!5388 = !DIDerivedType(tag: DW_TAG_member, name: "request_attr", scope: !5379, file: !5380, line: 31, baseType: !523, size: 32, offset: 256)
!5389 = !DIDerivedType(tag: DW_TAG_member, name: "request_priority", scope: !5379, file: !5380, line: 32, baseType: !523, size: 32, offset: 288)
!5390 = !DIDerivedType(tag: DW_TAG_member, name: "request_extra", scope: !5379, file: !5380, line: 33, baseType: !523, size: 32, offset: 320)
!5391 = !DIDerivedType(tag: DW_TAG_member, name: "max_response_len", scope: !5379, file: !5380, line: 34, baseType: !523, size: 32, offset: 352)
!5392 = !DIDerivedType(tag: DW_TAG_member, name: "response", scope: !5379, file: !5380, line: 35, baseType: !393, size: 64, offset: 384)
!5393 = !DIDerivedType(tag: DW_TAG_member, name: "dout_iovec_count", scope: !5379, file: !5380, line: 38, baseType: !523, size: 32, offset: 448)
!5394 = !DIDerivedType(tag: DW_TAG_member, name: "dout_xfer_len", scope: !5379, file: !5380, line: 40, baseType: !523, size: 32, offset: 480)
!5395 = !DIDerivedType(tag: DW_TAG_member, name: "din_iovec_count", scope: !5379, file: !5380, line: 41, baseType: !523, size: 32, offset: 512)
!5396 = !DIDerivedType(tag: DW_TAG_member, name: "din_xfer_len", scope: !5379, file: !5380, line: 42, baseType: !523, size: 32, offset: 544)
!5397 = !DIDerivedType(tag: DW_TAG_member, name: "dout_xferp", scope: !5379, file: !5380, line: 43, baseType: !393, size: 64, offset: 576)
!5398 = !DIDerivedType(tag: DW_TAG_member, name: "din_xferp", scope: !5379, file: !5380, line: 44, baseType: !393, size: 64, offset: 640)
!5399 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !5379, file: !5380, line: 46, baseType: !523, size: 32, offset: 704)
!5400 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5379, file: !5380, line: 47, baseType: !523, size: 32, offset: 736)
!5401 = !DIDerivedType(tag: DW_TAG_member, name: "usr_ptr", scope: !5379, file: !5380, line: 48, baseType: !393, size: 64, offset: 768)
!5402 = !DIDerivedType(tag: DW_TAG_member, name: "spare_in", scope: !5379, file: !5380, line: 49, baseType: !523, size: 32, offset: 832)
!5403 = !DIDerivedType(tag: DW_TAG_member, name: "driver_status", scope: !5379, file: !5380, line: 51, baseType: !523, size: 32, offset: 864)
!5404 = !DIDerivedType(tag: DW_TAG_member, name: "transport_status", scope: !5379, file: !5380, line: 52, baseType: !523, size: 32, offset: 896)
!5405 = !DIDerivedType(tag: DW_TAG_member, name: "device_status", scope: !5379, file: !5380, line: 53, baseType: !523, size: 32, offset: 928)
!5406 = !DIDerivedType(tag: DW_TAG_member, name: "retry_delay", scope: !5379, file: !5380, line: 54, baseType: !523, size: 32, offset: 960)
!5407 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !5379, file: !5380, line: 55, baseType: !523, size: 32, offset: 992)
!5408 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !5379, file: !5380, line: 56, baseType: !523, size: 32, offset: 1024)
!5409 = !DIDerivedType(tag: DW_TAG_member, name: "response_len", scope: !5379, file: !5380, line: 57, baseType: !523, size: 32, offset: 1056)
!5410 = !DIDerivedType(tag: DW_TAG_member, name: "din_resid", scope: !5379, file: !5380, line: 58, baseType: !1544, size: 32, offset: 1088)
!5411 = !DIDerivedType(tag: DW_TAG_member, name: "dout_resid", scope: !5379, file: !5380, line: 59, baseType: !1544, size: 32, offset: 1120)
!5412 = !DIDerivedType(tag: DW_TAG_member, name: "generated_tag", scope: !5379, file: !5380, line: 60, baseType: !393, size: 64, offset: 1152)
!5413 = !DIDerivedType(tag: DW_TAG_member, name: "spare_out", scope: !5379, file: !5380, line: 61, baseType: !523, size: 32, offset: 1216)
!5414 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !5379, file: !5380, line: 63, baseType: !523, size: 32, offset: 1248)
!5415 = !DIDerivedType(tag: DW_TAG_member, name: "fill_hdr", scope: !5372, file: !5364, line: 12, baseType: !5416, size: 64, offset: 64)
!5416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5417, size: 64)
!5417 = !DISubroutineType(types: !5418)
!5418 = !{!37, !4963, !5378, !4887}
!5419 = !DIDerivedType(tag: DW_TAG_member, name: "complete_rq", scope: !5372, file: !5364, line: 14, baseType: !5420, size: 64, offset: 128)
!5420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5421, size: 64)
!5421 = !DISubroutineType(types: !5422)
!5422 = !{!37, !4963, !5378}
!5423 = !DIDerivedType(tag: DW_TAG_member, name: "free_rq", scope: !5372, file: !5364, line: 15, baseType: !5164, size: 64, offset: 192)
!5424 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !4960, file: !4786, line: 570, baseType: !359, size: 128, align: 64, offset: 10944)
!5425 = !DIDerivedType(tag: DW_TAG_member, name: "mq_freeze_wq", scope: !4960, file: !4786, line: 571, baseType: !1154, size: 128, offset: 11072)
!5426 = !DIDerivedType(tag: DW_TAG_member, name: "mq_freeze_lock", scope: !4960, file: !4786, line: 576, baseType: !1008, size: 192, offset: 11200)
!5427 = !DIDerivedType(tag: DW_TAG_member, name: "tag_set", scope: !4960, file: !4786, line: 578, baseType: !5428, size: 64, offset: 11392)
!5428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5429, size: 64)
!5429 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_mq_tag_set", file: !4786, line: 578, flags: DIFlagFwdDecl)
!5430 = !DIDerivedType(tag: DW_TAG_member, name: "tag_set_list", scope: !4960, file: !4786, line: 579, baseType: !344, size: 128, offset: 11456)
!5431 = !DIDerivedType(tag: DW_TAG_member, name: "bio_split", scope: !4960, file: !4786, line: 580, baseType: !5432, size: 2368, offset: 11584)
!5432 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_set", file: !3881, line: 682, size: 2368, elements: !5433)
!5433 = !{!5434, !5435, !5436, !5457, !5458, !5459, !5460, !5461, !5462, !5463}
!5434 = !DIDerivedType(tag: DW_TAG_member, name: "bio_slab", scope: !5432, file: !3881, line: 683, baseType: !1620, size: 64)
!5435 = !DIDerivedType(tag: DW_TAG_member, name: "front_pad", scope: !5432, file: !3881, line: 684, baseType: !7, size: 32, offset: 64)
!5436 = !DIDerivedType(tag: DW_TAG_member, name: "bio_pool", scope: !5432, file: !3881, line: 686, baseType: !5437, size: 448, offset: 128)
!5437 = !DIDerivedType(tag: DW_TAG_typedef, name: "mempool_t", file: !5438, line: 26, baseType: !5439)
!5438 = !DIFile(filename: "./include/linux/mempool.h", directory: "/home/lizy2001/genbc/linux")
!5439 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mempool_s", file: !5438, line: 16, size: 448, elements: !5440)
!5440 = !{!5441, !5442, !5443, !5444, !5445, !5446, !5451, !5456}
!5441 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5439, file: !5438, line: 17, baseType: !784)
!5442 = !DIDerivedType(tag: DW_TAG_member, name: "min_nr", scope: !5439, file: !5438, line: 18, baseType: !37, size: 32)
!5443 = !DIDerivedType(tag: DW_TAG_member, name: "curr_nr", scope: !5439, file: !5438, line: 19, baseType: !37, size: 32, offset: 32)
!5444 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !5439, file: !5438, line: 20, baseType: !3617, size: 64, offset: 64)
!5445 = !DIDerivedType(tag: DW_TAG_member, name: "pool_data", scope: !5439, file: !5438, line: 22, baseType: !625, size: 64, offset: 128)
!5446 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !5439, file: !5438, line: 23, baseType: !5447, size: 64, offset: 192)
!5447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5448, size: 64)
!5448 = !DIDerivedType(tag: DW_TAG_typedef, name: "mempool_alloc_t", file: !5438, line: 13, baseType: !5449)
!5449 = !DISubroutineType(types: !5450)
!5450 = !{!625, !1612, !625}
!5451 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !5439, file: !5438, line: 24, baseType: !5452, size: 64, offset: 256)
!5452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5453, size: 64)
!5453 = !DIDerivedType(tag: DW_TAG_typedef, name: "mempool_free_t", file: !5438, line: 14, baseType: !5454)
!5454 = !DISubroutineType(types: !5455)
!5455 = !{null, !625, !625}
!5456 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !5439, file: !5438, line: 25, baseType: !1154, size: 128, offset: 320)
!5457 = !DIDerivedType(tag: DW_TAG_member, name: "bvec_pool", scope: !5432, file: !3881, line: 687, baseType: !5437, size: 448, offset: 576)
!5458 = !DIDerivedType(tag: DW_TAG_member, name: "bio_integrity_pool", scope: !5432, file: !3881, line: 689, baseType: !5437, size: 448, offset: 1024)
!5459 = !DIDerivedType(tag: DW_TAG_member, name: "bvec_integrity_pool", scope: !5432, file: !3881, line: 690, baseType: !5437, size: 448, offset: 1472)
!5460 = !DIDerivedType(tag: DW_TAG_member, name: "rescue_lock", scope: !5432, file: !3881, line: 697, baseType: !784, offset: 1920)
!5461 = !DIDerivedType(tag: DW_TAG_member, name: "rescue_list", scope: !5432, file: !3881, line: 698, baseType: !3880, size: 128, offset: 1920)
!5462 = !DIDerivedType(tag: DW_TAG_member, name: "rescue_work", scope: !5432, file: !3881, line: 699, baseType: !1782, size: 256, offset: 2048)
!5463 = !DIDerivedType(tag: DW_TAG_member, name: "rescue_workqueue", scope: !5432, file: !3881, line: 700, baseType: !2894, size: 64, offset: 2304)
!5464 = !DIDerivedType(tag: DW_TAG_member, name: "debugfs_dir", scope: !4960, file: !4786, line: 582, baseType: !728, size: 64, offset: 13952)
!5465 = !DIDerivedType(tag: DW_TAG_member, name: "mq_sysfs_init_done", scope: !4960, file: !4786, line: 589, baseType: !595, size: 8, offset: 14016)
!5466 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_size", scope: !4960, file: !4786, line: 591, baseType: !649, size: 64, offset: 14080)
!5467 = !DIDerivedType(tag: DW_TAG_member, name: "write_hints", scope: !4960, file: !4786, line: 594, baseType: !5468, size: 320, offset: 14144)
!5468 = !DICompositeType(tag: DW_TAG_array_type, baseType: !391, size: 320, elements: !1643)
!5469 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !3891, file: !3892, line: 191, baseType: !625, size: 64, offset: 7168)
!5470 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3891, file: !3892, line: 193, baseType: !37, size: 32, offset: 7232)
!5471 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !3891, file: !3892, line: 194, baseType: !372, size: 64, offset: 7296)
!5472 = !DIDerivedType(tag: DW_TAG_member, name: "lookup_sem", scope: !3891, file: !3892, line: 196, baseType: !1216, size: 256, offset: 7360)
!5473 = !DIDerivedType(tag: DW_TAG_member, name: "slave_dir", scope: !3891, file: !3892, line: 197, baseType: !3950, size: 64, offset: 7616)
!5474 = !DIDerivedType(tag: DW_TAG_member, name: "random", scope: !3891, file: !3892, line: 199, baseType: !5475, size: 64, offset: 7680)
!5475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5476, size: 64)
!5476 = !DICompositeType(tag: DW_TAG_structure_type, name: "timer_rand_state", file: !3892, line: 199, flags: DIFlagFwdDecl)
!5477 = !DIDerivedType(tag: DW_TAG_member, name: "sync_io", scope: !3891, file: !3892, line: 200, baseType: !443, size: 32, offset: 7744)
!5478 = !DIDerivedType(tag: DW_TAG_member, name: "ev", scope: !3891, file: !3892, line: 201, baseType: !5479, size: 64, offset: 7808)
!5479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5480, size: 64)
!5480 = !DICompositeType(tag: DW_TAG_structure_type, name: "disk_events", file: !3892, line: 156, flags: DIFlagFwdDecl)
!5481 = !DIDerivedType(tag: DW_TAG_member, name: "integrity_kobj", scope: !3891, file: !3892, line: 203, baseType: !3944, size: 512, offset: 7872)
!5482 = !DIDerivedType(tag: DW_TAG_member, name: "node_id", scope: !3891, file: !3892, line: 208, baseType: !37, size: 32, offset: 8384)
!5483 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !3891, file: !3892, line: 209, baseType: !5484, size: 64, offset: 8448)
!5484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5485, size: 64)
!5485 = !DICompositeType(tag: DW_TAG_structure_type, name: "badblocks", file: !3892, line: 157, flags: DIFlagFwdDecl)
!5486 = !DIDerivedType(tag: DW_TAG_member, name: "lockdep_map", scope: !3891, file: !3892, line: 210, baseType: !5487, offset: 8512)
!5487 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lockdep_map", file: !916, line: 192, elements: !798)
!5488 = !DIDerivedType(tag: DW_TAG_member, name: "bi_opf", scope: !3885, file: !3886, line: 206, baseType: !7, size: 32, offset: 128)
!5489 = !DIDerivedType(tag: DW_TAG_member, name: "bi_flags", scope: !3885, file: !3886, line: 210, baseType: !532, size: 16, offset: 160)
!5490 = !DIDerivedType(tag: DW_TAG_member, name: "bi_ioprio", scope: !3885, file: !3886, line: 211, baseType: !532, size: 16, offset: 176)
!5491 = !DIDerivedType(tag: DW_TAG_member, name: "bi_write_hint", scope: !3885, file: !3886, line: 212, baseType: !532, size: 16, offset: 192)
!5492 = !DIDerivedType(tag: DW_TAG_member, name: "bi_status", scope: !3885, file: !3886, line: 213, baseType: !5043, size: 8, offset: 208)
!5493 = !DIDerivedType(tag: DW_TAG_member, name: "bi_partno", scope: !3885, file: !3886, line: 214, baseType: !1451, size: 8, offset: 216)
!5494 = !DIDerivedType(tag: DW_TAG_member, name: "__bi_remaining", scope: !3885, file: !3886, line: 215, baseType: !443, size: 32, offset: 224)
!5495 = !DIDerivedType(tag: DW_TAG_member, name: "bi_iter", scope: !3885, file: !3886, line: 217, baseType: !5496, size: 192, offset: 256)
!5496 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bvec_iter", file: !676, line: 37, size: 192, elements: !5497)
!5497 = !{!5498, !5499, !5500, !5501}
!5498 = !DIDerivedType(tag: DW_TAG_member, name: "bi_sector", scope: !5496, file: !676, line: 38, baseType: !3912, size: 64)
!5499 = !DIDerivedType(tag: DW_TAG_member, name: "bi_size", scope: !5496, file: !676, line: 40, baseType: !7, size: 32, offset: 64)
!5500 = !DIDerivedType(tag: DW_TAG_member, name: "bi_idx", scope: !5496, file: !676, line: 42, baseType: !7, size: 32, offset: 96)
!5501 = !DIDerivedType(tag: DW_TAG_member, name: "bi_bvec_done", scope: !5496, file: !676, line: 44, baseType: !7, size: 32, offset: 128)
!5502 = !DIDerivedType(tag: DW_TAG_member, name: "bi_end_io", scope: !3885, file: !3886, line: 219, baseType: !5503, size: 64, offset: 448)
!5503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5504, size: 64)
!5504 = !DIDerivedType(tag: DW_TAG_typedef, name: "bio_end_io_t", file: !3886, line: 19, baseType: !5505)
!5505 = !DISubroutineType(types: !5506)
!5506 = !{null, !3884}
!5507 = !DIDerivedType(tag: DW_TAG_member, name: "bi_private", scope: !3885, file: !3886, line: 221, baseType: !625, size: 64, offset: 512)
!5508 = !DIDerivedType(tag: DW_TAG_member, scope: !3885, file: !3886, line: 240, baseType: !5509, size: 64, offset: 576)
!5509 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3885, file: !3886, line: 240, size: 64, elements: !5510)
!5510 = !{!5511}
!5511 = !DIDerivedType(tag: DW_TAG_member, name: "bi_integrity", scope: !5509, file: !3886, line: 242, baseType: !5512, size: 64)
!5512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5513, size: 64)
!5513 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bio_integrity_payload", file: !3881, line: 313, size: 832, elements: !5514)
!5514 = !{!5515, !5516, !5517, !5518, !5519, !5520, !5521, !5522, !5523, !5525}
!5515 = !DIDerivedType(tag: DW_TAG_member, name: "bip_bio", scope: !5513, file: !3881, line: 314, baseType: !3884, size: 64)
!5516 = !DIDerivedType(tag: DW_TAG_member, name: "bip_iter", scope: !5513, file: !3881, line: 316, baseType: !5496, size: 192, offset: 64)
!5517 = !DIDerivedType(tag: DW_TAG_member, name: "bip_slab", scope: !5513, file: !3881, line: 318, baseType: !532, size: 16, offset: 256)
!5518 = !DIDerivedType(tag: DW_TAG_member, name: "bip_vcnt", scope: !5513, file: !3881, line: 319, baseType: !532, size: 16, offset: 272)
!5519 = !DIDerivedType(tag: DW_TAG_member, name: "bip_max_vcnt", scope: !5513, file: !3881, line: 320, baseType: !532, size: 16, offset: 288)
!5520 = !DIDerivedType(tag: DW_TAG_member, name: "bip_flags", scope: !5513, file: !3881, line: 321, baseType: !532, size: 16, offset: 304)
!5521 = !DIDerivedType(tag: DW_TAG_member, name: "bio_iter", scope: !5513, file: !3881, line: 323, baseType: !5496, size: 192, offset: 320)
!5522 = !DIDerivedType(tag: DW_TAG_member, name: "bip_work", scope: !5513, file: !3881, line: 325, baseType: !1782, size: 256, offset: 512)
!5523 = !DIDerivedType(tag: DW_TAG_member, name: "bip_vec", scope: !5513, file: !3881, line: 327, baseType: !5524, size: 64, offset: 768)
!5524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !675, size: 64)
!5525 = !DIDerivedType(tag: DW_TAG_member, name: "bip_inline_vecs", scope: !5513, file: !3881, line: 328, baseType: !5526, offset: 832)
!5526 = !DICompositeType(tag: DW_TAG_array_type, baseType: !675, elements: !369)
!5527 = !DIDerivedType(tag: DW_TAG_member, name: "bi_vcnt", scope: !3885, file: !3886, line: 246, baseType: !532, size: 16, offset: 640)
!5528 = !DIDerivedType(tag: DW_TAG_member, name: "bi_max_vecs", scope: !3885, file: !3886, line: 252, baseType: !532, size: 16, offset: 656)
!5529 = !DIDerivedType(tag: DW_TAG_member, name: "__bi_cnt", scope: !3885, file: !3886, line: 254, baseType: !443, size: 32, offset: 672)
!5530 = !DIDerivedType(tag: DW_TAG_member, name: "bi_io_vec", scope: !3885, file: !3886, line: 256, baseType: !5524, size: 64, offset: 704)
!5531 = !DIDerivedType(tag: DW_TAG_member, name: "bi_pool", scope: !3885, file: !3886, line: 258, baseType: !5532, size: 64, offset: 768)
!5532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5432, size: 64)
!5533 = !DIDerivedType(tag: DW_TAG_member, name: "bi_inline_vecs", scope: !3885, file: !3886, line: 265, baseType: !5526, offset: 832)
!5534 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3880, file: !3881, line: 556, baseType: !3884, size: 64, offset: 64)
!5535 = !DIDerivedType(tag: DW_TAG_member, name: "plug", scope: !1312, file: !1313, line: 1050, baseType: !5536, size: 64, offset: 10688)
!5536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5537, size: 64)
!5537 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "blk_plug", file: !4786, line: 1236, size: 320, elements: !5538)
!5538 = !{!5539, !5540, !5541, !5542, !5543}
!5539 = !DIDerivedType(tag: DW_TAG_member, name: "mq_list", scope: !5537, file: !4786, line: 1237, baseType: !344, size: 128)
!5540 = !DIDerivedType(tag: DW_TAG_member, name: "cb_list", scope: !5537, file: !4786, line: 1238, baseType: !344, size: 128, offset: 128)
!5541 = !DIDerivedType(tag: DW_TAG_member, name: "rq_count", scope: !5537, file: !4786, line: 1239, baseType: !532, size: 16, offset: 256)
!5542 = !DIDerivedType(tag: DW_TAG_member, name: "multiple_queues", scope: !5537, file: !4786, line: 1240, baseType: !595, size: 8, offset: 272)
!5543 = !DIDerivedType(tag: DW_TAG_member, name: "nowait", scope: !5537, file: !4786, line: 1241, baseType: !595, size: 8, offset: 280)
!5544 = !DIDerivedType(tag: DW_TAG_member, name: "reclaim_state", scope: !1312, file: !1313, line: 1054, baseType: !5545, size: 64, offset: 10752)
!5545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5546, size: 64)
!5546 = !DICompositeType(tag: DW_TAG_structure_type, name: "reclaim_state", file: !1313, line: 55, flags: DIFlagFwdDecl)
!5547 = !DIDerivedType(tag: DW_TAG_member, name: "backing_dev_info", scope: !1312, file: !1313, line: 1056, baseType: !4817, size: 64, offset: 10816)
!5548 = !DIDerivedType(tag: DW_TAG_member, name: "io_context", scope: !1312, file: !1313, line: 1058, baseType: !5008, size: 64, offset: 10880)
!5549 = !DIDerivedType(tag: DW_TAG_member, name: "capture_control", scope: !1312, file: !1313, line: 1061, baseType: !5550, size: 64, offset: 10944)
!5550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5551, size: 64)
!5551 = !DICompositeType(tag: DW_TAG_structure_type, name: "capture_control", file: !1313, line: 43, flags: DIFlagFwdDecl)
!5552 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_message", scope: !1312, file: !1313, line: 1064, baseType: !372, size: 64, offset: 11008)
!5553 = !DIDerivedType(tag: DW_TAG_member, name: "last_siginfo", scope: !1312, file: !1313, line: 1065, baseType: !5554, size: 64, offset: 11072)
!5554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5555, size: 64)
!5555 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_siginfo_t", file: !3732, line: 14, baseType: !5556)
!5556 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_siginfo", file: !3732, line: 12, size: 384, elements: !5557)
!5557 = !{!5558}
!5558 = !DIDerivedType(tag: DW_TAG_member, scope: !5556, file: !3732, line: 13, baseType: !5559, size: 384)
!5559 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5556, file: !3732, line: 13, size: 384, elements: !5560)
!5560 = !{!5561, !5562, !5563, !5564}
!5561 = !DIDerivedType(tag: DW_TAG_member, name: "si_signo", scope: !5559, file: !3732, line: 13, baseType: !37, size: 32)
!5562 = !DIDerivedType(tag: DW_TAG_member, name: "si_errno", scope: !5559, file: !3732, line: 13, baseType: !37, size: 32, offset: 32)
!5563 = !DIDerivedType(tag: DW_TAG_member, name: "si_code", scope: !5559, file: !3732, line: 13, baseType: !37, size: 32, offset: 64)
!5564 = !DIDerivedType(tag: DW_TAG_member, name: "_sifields", scope: !5559, file: !3732, line: 13, baseType: !5565, size: 256, offset: 128)
!5565 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "__sifields", file: !5566, line: 32, size: 256, elements: !5567)
!5566 = !DIFile(filename: "./include/uapi/asm-generic/siginfo.h", directory: "/home/lizy2001/genbc/linux")
!5567 = !{!5568, !5573, !5586, !5592, !5601, !5621, !5626}
!5568 = !DIDerivedType(tag: DW_TAG_member, name: "_kill", scope: !5565, file: !5566, line: 37, baseType: !5569, size: 64)
!5569 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5565, file: !5566, line: 34, size: 64, elements: !5570)
!5570 = !{!5571, !5572}
!5571 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !5569, file: !5566, line: 35, baseType: !1564, size: 32)
!5572 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !5569, file: !5566, line: 36, baseType: !710, size: 32, offset: 32)
!5573 = !DIDerivedType(tag: DW_TAG_member, name: "_timer", scope: !5565, file: !5566, line: 45, baseType: !5574, size: 192)
!5574 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5565, file: !5566, line: 40, size: 192, elements: !5575)
!5575 = !{!5576, !5578, !5579, !5585}
!5576 = !DIDerivedType(tag: DW_TAG_member, name: "_tid", scope: !5574, file: !5566, line: 41, baseType: !5577, size: 32)
!5577 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_timer_t", file: !651, line: 95, baseType: !37)
!5578 = !DIDerivedType(tag: DW_TAG_member, name: "_overrun", scope: !5574, file: !5566, line: 42, baseType: !37, size: 32, offset: 32)
!5579 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !5574, file: !5566, line: 43, baseType: !5580, size: 64, offset: 64)
!5580 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigval_t", file: !5566, line: 11, baseType: !5581)
!5581 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "sigval", file: !5566, line: 8, size: 64, elements: !5582)
!5582 = !{!5583, !5584}
!5583 = !DIDerivedType(tag: DW_TAG_member, name: "sival_int", scope: !5581, file: !5566, line: 9, baseType: !37, size: 32)
!5584 = !DIDerivedType(tag: DW_TAG_member, name: "sival_ptr", scope: !5581, file: !5566, line: 10, baseType: !625, size: 64)
!5585 = !DIDerivedType(tag: DW_TAG_member, name: "_sys_private", scope: !5574, file: !5566, line: 44, baseType: !37, size: 32, offset: 128)
!5586 = !DIDerivedType(tag: DW_TAG_member, name: "_rt", scope: !5565, file: !5566, line: 52, baseType: !5587, size: 128)
!5587 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5565, file: !5566, line: 48, size: 128, elements: !5588)
!5588 = !{!5589, !5590, !5591}
!5589 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !5587, file: !5566, line: 49, baseType: !1564, size: 32)
!5590 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !5587, file: !5566, line: 50, baseType: !710, size: 32, offset: 32)
!5591 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !5587, file: !5566, line: 51, baseType: !5580, size: 64, offset: 64)
!5592 = !DIDerivedType(tag: DW_TAG_member, name: "_sigchld", scope: !5565, file: !5566, line: 61, baseType: !5593, size: 256)
!5593 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5565, file: !5566, line: 55, size: 256, elements: !5594)
!5594 = !{!5595, !5596, !5597, !5598, !5600}
!5595 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !5593, file: !5566, line: 56, baseType: !1564, size: 32)
!5596 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !5593, file: !5566, line: 57, baseType: !710, size: 32, offset: 32)
!5597 = !DIDerivedType(tag: DW_TAG_member, name: "_status", scope: !5593, file: !5566, line: 58, baseType: !37, size: 32, offset: 64)
!5598 = !DIDerivedType(tag: DW_TAG_member, name: "_utime", scope: !5593, file: !5566, line: 59, baseType: !5599, size: 64, offset: 128)
!5599 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clock_t", file: !651, line: 94, baseType: !1071)
!5600 = !DIDerivedType(tag: DW_TAG_member, name: "_stime", scope: !5593, file: !5566, line: 60, baseType: !5599, size: 64, offset: 192)
!5601 = !DIDerivedType(tag: DW_TAG_member, name: "_sigfault", scope: !5565, file: !5566, line: 95, baseType: !5602, size: 256)
!5602 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5565, file: !5566, line: 64, size: 256, elements: !5603)
!5603 = !{!5604, !5605}
!5604 = !DIDerivedType(tag: DW_TAG_member, name: "_addr", scope: !5602, file: !5566, line: 65, baseType: !625, size: 64)
!5605 = !DIDerivedType(tag: DW_TAG_member, scope: !5602, file: !5566, line: 77, baseType: !5606, size: 192, offset: 64)
!5606 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5602, file: !5566, line: 77, size: 192, elements: !5607)
!5607 = !{!5608, !5609, !5616}
!5608 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_lsb", scope: !5606, file: !5566, line: 82, baseType: !1300, size: 16)
!5609 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_bnd", scope: !5606, file: !5566, line: 88, baseType: !5610, size: 192)
!5610 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5606, file: !5566, line: 84, size: 192, elements: !5611)
!5611 = !{!5612, !5614, !5615}
!5612 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_bnd", scope: !5610, file: !5566, line: 85, baseType: !5613, size: 64)
!5613 = !DICompositeType(tag: DW_TAG_array_type, baseType: !328, size: 64, elements: !1425)
!5614 = !DIDerivedType(tag: DW_TAG_member, name: "_lower", scope: !5610, file: !5566, line: 86, baseType: !625, size: 64, offset: 64)
!5615 = !DIDerivedType(tag: DW_TAG_member, name: "_upper", scope: !5610, file: !5566, line: 87, baseType: !625, size: 64, offset: 128)
!5616 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_pkey", scope: !5606, file: !5566, line: 93, baseType: !5617, size: 96)
!5617 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5606, file: !5566, line: 90, size: 96, elements: !5618)
!5618 = !{!5619, !5620}
!5619 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_pkey", scope: !5617, file: !5566, line: 91, baseType: !5613, size: 64)
!5620 = !DIDerivedType(tag: DW_TAG_member, name: "_pkey", scope: !5617, file: !5566, line: 92, baseType: !523, size: 32, offset: 64)
!5621 = !DIDerivedType(tag: DW_TAG_member, name: "_sigpoll", scope: !5565, file: !5566, line: 101, baseType: !5622, size: 128)
!5622 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5565, file: !5566, line: 98, size: 128, elements: !5623)
!5623 = !{!5624, !5625}
!5624 = !DIDerivedType(tag: DW_TAG_member, name: "_band", scope: !5622, file: !5566, line: 99, baseType: !568, size: 64)
!5625 = !DIDerivedType(tag: DW_TAG_member, name: "_fd", scope: !5622, file: !5566, line: 100, baseType: !37, size: 32, offset: 64)
!5626 = !DIDerivedType(tag: DW_TAG_member, name: "_sigsys", scope: !5565, file: !5566, line: 108, baseType: !5627, size: 128)
!5627 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5565, file: !5566, line: 104, size: 128, elements: !5628)
!5628 = !{!5629, !5630, !5631}
!5629 = !DIDerivedType(tag: DW_TAG_member, name: "_call_addr", scope: !5627, file: !5566, line: 105, baseType: !625, size: 64)
!5630 = !DIDerivedType(tag: DW_TAG_member, name: "_syscall", scope: !5627, file: !5566, line: 106, baseType: !37, size: 32, offset: 64)
!5631 = !DIDerivedType(tag: DW_TAG_member, name: "_arch", scope: !5627, file: !5566, line: 107, baseType: !7, size: 32, offset: 96)
!5632 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !1312, file: !1313, line: 1067, baseType: !3799, offset: 11136)
!5633 = !DIDerivedType(tag: DW_TAG_member, name: "robust_list", scope: !1312, file: !1313, line: 1099, baseType: !5634, size: 64, offset: 11136)
!5634 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5635, size: 64)
!5635 = !DICompositeType(tag: DW_TAG_structure_type, name: "robust_list_head", file: !1313, line: 56, flags: DIFlagFwdDecl)
!5636 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_list", scope: !1312, file: !1313, line: 1103, baseType: !344, size: 128, offset: 11200)
!5637 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_cache", scope: !1312, file: !1313, line: 1104, baseType: !5638, size: 64, offset: 11328)
!5638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5639, size: 64)
!5639 = !DICompositeType(tag: DW_TAG_structure_type, name: "futex_pi_state", file: !1313, line: 46, flags: DIFlagFwdDecl)
!5640 = !DIDerivedType(tag: DW_TAG_member, name: "futex_exit_mutex", scope: !1312, file: !1313, line: 1105, baseType: !1008, size: 192, offset: 11392)
!5641 = !DIDerivedType(tag: DW_TAG_member, name: "futex_state", scope: !1312, file: !1313, line: 1106, baseType: !7, size: 32, offset: 11584)
!5642 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_ctxp", scope: !1312, file: !1313, line: 1109, baseType: !5643, size: 128, offset: 11648)
!5643 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5644, size: 128, elements: !533)
!5644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5645, size: 64)
!5645 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event_context", file: !1313, line: 51, flags: DIFlagFwdDecl)
!5646 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_mutex", scope: !1312, file: !1313, line: 1110, baseType: !1008, size: 192, offset: 11776)
!5647 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_list", scope: !1312, file: !1313, line: 1111, baseType: !344, size: 128, offset: 11968)
!5648 = !DIDerivedType(tag: DW_TAG_member, name: "rseq", scope: !1312, file: !1313, line: 1173, baseType: !5649, size: 64, offset: 12096)
!5649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5650, size: 64)
!5650 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rseq", file: !5651, line: 62, size: 256, align: 256, elements: !5652)
!5651 = !DIFile(filename: "./include/uapi/linux/rseq.h", directory: "/home/lizy2001/genbc/linux")
!5652 = !{!5653, !5654, !5655, !5660}
!5653 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id_start", scope: !5650, file: !5651, line: 75, baseType: !523, size: 32)
!5654 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id", scope: !5650, file: !5651, line: 90, baseType: !523, size: 32, offset: 32)
!5655 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_cs", scope: !5650, file: !5651, line: 124, baseType: !5656, size: 64, offset: 64)
!5656 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5650, file: !5651, line: 109, size: 64, elements: !5657)
!5657 = !{!5658, !5659}
!5658 = !DIDerivedType(tag: DW_TAG_member, name: "ptr64", scope: !5656, file: !5651, line: 110, baseType: !393, size: 64)
!5659 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !5656, file: !5651, line: 112, baseType: !393, size: 64)
!5660 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5650, file: !5651, line: 144, baseType: !523, size: 32, offset: 128)
!5661 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_sig", scope: !1312, file: !1313, line: 1174, baseType: !762, size: 32, offset: 12160)
!5662 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_event_mask", scope: !1312, file: !1313, line: 1179, baseType: !372, size: 64, offset: 12224)
!5663 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_ubc", scope: !1312, file: !1313, line: 1182, baseType: !5664, size: 128, offset: 12288)
!5664 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tlbflush_unmap_batch", file: !1252, line: 76, size: 128, elements: !5665)
!5665 = !{!5666, !5671, !5672}
!5666 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !5664, file: !1252, line: 85, baseType: !5667, size: 64)
!5667 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arch_tlbflush_unmap_batch", file: !5668, line: 7, size: 64, elements: !5669)
!5668 = !DIFile(filename: "./arch/x86/include/asm/tlbbatch.h", directory: "/home/lizy2001/genbc/linux")
!5669 = !{!5670}
!5670 = !DIDerivedType(tag: DW_TAG_member, name: "cpumask", scope: !5667, file: !5668, line: 12, baseType: !1466, size: 64)
!5671 = !DIDerivedType(tag: DW_TAG_member, name: "flush_required", scope: !5664, file: !1252, line: 88, baseType: !595, size: 8, offset: 64)
!5672 = !DIDerivedType(tag: DW_TAG_member, name: "writable", scope: !5664, file: !1252, line: 95, baseType: !595, size: 8, offset: 72)
!5673 = !DIDerivedType(tag: DW_TAG_member, scope: !1312, file: !1313, line: 1184, baseType: !5674, size: 128, offset: 12416)
!5674 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1312, file: !1313, line: 1184, size: 128, elements: !5675)
!5675 = !{!5676, !5677}
!5676 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_users", scope: !5674, file: !1313, line: 1185, baseType: !1325, size: 32)
!5677 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !5674, file: !1313, line: 1186, baseType: !359, size: 128, align: 64)
!5678 = !DIDerivedType(tag: DW_TAG_member, name: "splice_pipe", scope: !1312, file: !1313, line: 1190, baseType: !5679, size: 64, offset: 12544)
!5679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5680, size: 64)
!5680 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_inode_info", file: !5681, line: 57, size: 1088, elements: !5682)
!5681 = !DIFile(filename: "./include/linux/pipe_fs_i.h", directory: "/home/lizy2001/genbc/linux")
!5682 = !{!5683, !5684, !5685, !5686, !5687, !5688, !5689, !5690, !5691, !5692, !5693, !5694, !5695, !5696, !5697, !5707, !5708, !5735}
!5683 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !5680, file: !5681, line: 58, baseType: !1008, size: 192)
!5684 = !DIDerivedType(tag: DW_TAG_member, name: "rd_wait", scope: !5680, file: !5681, line: 59, baseType: !1154, size: 128, offset: 192)
!5685 = !DIDerivedType(tag: DW_TAG_member, name: "wr_wait", scope: !5680, file: !5681, line: 59, baseType: !1154, size: 128, offset: 320)
!5686 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !5680, file: !5681, line: 60, baseType: !7, size: 32, offset: 448)
!5687 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !5680, file: !5681, line: 61, baseType: !7, size: 32, offset: 480)
!5688 = !DIDerivedType(tag: DW_TAG_member, name: "max_usage", scope: !5680, file: !5681, line: 62, baseType: !7, size: 32, offset: 512)
!5689 = !DIDerivedType(tag: DW_TAG_member, name: "ring_size", scope: !5680, file: !5681, line: 63, baseType: !7, size: 32, offset: 544)
!5690 = !DIDerivedType(tag: DW_TAG_member, name: "nr_accounted", scope: !5680, file: !5681, line: 67, baseType: !7, size: 32, offset: 576)
!5691 = !DIDerivedType(tag: DW_TAG_member, name: "readers", scope: !5680, file: !5681, line: 68, baseType: !7, size: 32, offset: 608)
!5692 = !DIDerivedType(tag: DW_TAG_member, name: "writers", scope: !5680, file: !5681, line: 69, baseType: !7, size: 32, offset: 640)
!5693 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !5680, file: !5681, line: 70, baseType: !7, size: 32, offset: 672)
!5694 = !DIDerivedType(tag: DW_TAG_member, name: "r_counter", scope: !5680, file: !5681, line: 71, baseType: !7, size: 32, offset: 704)
!5695 = !DIDerivedType(tag: DW_TAG_member, name: "w_counter", scope: !5680, file: !5681, line: 72, baseType: !7, size: 32, offset: 736)
!5696 = !DIDerivedType(tag: DW_TAG_member, name: "tmp_page", scope: !5680, file: !5681, line: 73, baseType: !679, size: 64, offset: 768)
!5697 = !DIDerivedType(tag: DW_TAG_member, name: "fasync_readers", scope: !5680, file: !5681, line: 74, baseType: !5698, size: 64, offset: 832)
!5698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5699, size: 64)
!5699 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fasync_struct", file: !694, line: 1314, size: 320, elements: !5700)
!5700 = !{!5701, !5702, !5703, !5704, !5705, !5706}
!5701 = !DIDerivedType(tag: DW_TAG_member, name: "fa_lock", scope: !5699, file: !694, line: 1315, baseType: !2909)
!5702 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !5699, file: !694, line: 1316, baseType: !37, size: 32)
!5703 = !DIDerivedType(tag: DW_TAG_member, name: "fa_fd", scope: !5699, file: !694, line: 1317, baseType: !37, size: 32, offset: 32)
!5704 = !DIDerivedType(tag: DW_TAG_member, name: "fa_next", scope: !5699, file: !694, line: 1318, baseType: !5698, size: 64, offset: 64)
!5705 = !DIDerivedType(tag: DW_TAG_member, name: "fa_file", scope: !5699, file: !694, line: 1319, baseType: !1064, size: 64, offset: 128)
!5706 = !DIDerivedType(tag: DW_TAG_member, name: "fa_rcu", scope: !5699, file: !694, line: 1320, baseType: !359, size: 128, align: 64, offset: 192)
!5707 = !DIDerivedType(tag: DW_TAG_member, name: "fasync_writers", scope: !5680, file: !5681, line: 75, baseType: !5698, size: 64, offset: 896)
!5708 = !DIDerivedType(tag: DW_TAG_member, name: "bufs", scope: !5680, file: !5681, line: 76, baseType: !5709, size: 64, offset: 960)
!5709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5710, size: 64)
!5710 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_buffer", file: !5681, line: 26, size: 320, elements: !5711)
!5711 = !{!5712, !5713, !5714, !5715, !5733, !5734}
!5712 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !5710, file: !5681, line: 27, baseType: !679, size: 64)
!5713 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !5710, file: !5681, line: 28, baseType: !7, size: 32, offset: 64)
!5714 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !5710, file: !5681, line: 28, baseType: !7, size: 32, offset: 96)
!5715 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !5710, file: !5681, line: 29, baseType: !5716, size: 64, offset: 128)
!5716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5717, size: 64)
!5717 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5718)
!5718 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_buf_operations", file: !5681, line: 93, size: 256, elements: !5719)
!5719 = !{!5720, !5724, !5728, !5732}
!5720 = !DIDerivedType(tag: DW_TAG_member, name: "confirm", scope: !5718, file: !5681, line: 101, baseType: !5721, size: 64)
!5721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5722, size: 64)
!5722 = !DISubroutineType(types: !5723)
!5723 = !{!37, !5679, !5709}
!5724 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !5718, file: !5681, line: 107, baseType: !5725, size: 64, offset: 64)
!5725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5726, size: 64)
!5726 = !DISubroutineType(types: !5727)
!5727 = !{null, !5679, !5709}
!5728 = !DIDerivedType(tag: DW_TAG_member, name: "try_steal", scope: !5718, file: !5681, line: 117, baseType: !5729, size: 64, offset: 128)
!5729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5730, size: 64)
!5730 = !DISubroutineType(types: !5731)
!5731 = !{!595, !5679, !5709}
!5732 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !5718, file: !5681, line: 122, baseType: !5729, size: 64, offset: 192)
!5733 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5710, file: !5681, line: 30, baseType: !7, size: 32, offset: 192)
!5734 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !5710, file: !5681, line: 31, baseType: !372, size: 64, offset: 256)
!5735 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !5680, file: !5681, line: 77, baseType: !1975, size: 64, offset: 1024)
!5736 = !DIDerivedType(tag: DW_TAG_member, name: "task_frag", scope: !1312, file: !1313, line: 1192, baseType: !5737, size: 128, offset: 12608)
!5737 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page_frag", file: !1252, line: 64, size: 128, elements: !5738)
!5738 = !{!5739, !5740, !5741}
!5739 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !5737, file: !1252, line: 65, baseType: !679, size: 64)
!5740 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !5737, file: !1252, line: 67, baseType: !523, size: 32, offset: 64)
!5741 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5737, file: !1252, line: 68, baseType: !523, size: 32, offset: 96)
!5742 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied", scope: !1312, file: !1313, line: 1206, baseType: !37, size: 32, offset: 12736)
!5743 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied_pause", scope: !1312, file: !1313, line: 1207, baseType: !37, size: 32, offset: 12768)
!5744 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_paused_when", scope: !1312, file: !1313, line: 1209, baseType: !372, size: 64, offset: 12800)
!5745 = !DIDerivedType(tag: DW_TAG_member, name: "timer_slack_ns", scope: !1312, file: !1313, line: 1219, baseType: !391, size: 64, offset: 12864)
!5746 = !DIDerivedType(tag: DW_TAG_member, name: "default_timer_slack_ns", scope: !1312, file: !1313, line: 1220, baseType: !391, size: 64, offset: 12928)
!5747 = !DIDerivedType(tag: DW_TAG_member, name: "pagefault_disabled", scope: !1312, file: !1313, line: 1317, baseType: !37, size: 32, offset: 12992)
!5748 = !DIDerivedType(tag: DW_TAG_member, name: "oom_reaper_list", scope: !1312, file: !1313, line: 1319, baseType: !1311, size: 64, offset: 13056)
!5749 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm_area", scope: !1312, file: !1313, line: 1322, baseType: !5750, size: 64, offset: 13120)
!5750 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5751, size: 64)
!5751 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_struct", file: !5752, line: 56, size: 512, elements: !5753)
!5752 = !DIFile(filename: "./include/linux/vmalloc.h", directory: "/home/lizy2001/genbc/linux")
!5753 = !{!5754, !5755, !5756, !5757, !5758, !5760, !5761, !5763}
!5754 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5751, file: !5752, line: 57, baseType: !5750, size: 64)
!5755 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !5751, file: !5752, line: 58, baseType: !625, size: 64, offset: 64)
!5756 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5751, file: !5752, line: 59, baseType: !372, size: 64, offset: 128)
!5757 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5751, file: !5752, line: 60, baseType: !372, size: 64, offset: 192)
!5758 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !5751, file: !5752, line: 61, baseType: !5759, size: 64, offset: 256)
!5759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !679, size: 64)
!5760 = !DIDerivedType(tag: DW_TAG_member, name: "nr_pages", scope: !5751, file: !5752, line: 62, baseType: !7, size: 32, offset: 320)
!5761 = !DIDerivedType(tag: DW_TAG_member, name: "phys_addr", scope: !5751, file: !5752, line: 63, baseType: !5762, size: 64, offset: 384)
!5762 = !DIDerivedType(tag: DW_TAG_typedef, name: "phys_addr_t", file: !337, line: 153, baseType: !391)
!5763 = !DIDerivedType(tag: DW_TAG_member, name: "caller", scope: !5751, file: !5752, line: 64, baseType: !2337, size: 64, offset: 448)
!5764 = !DIDerivedType(tag: DW_TAG_member, name: "stack_refcount", scope: !1312, file: !1313, line: 1326, baseType: !1325, size: 32, offset: 13184)
!5765 = !DIDerivedType(tag: DW_TAG_member, name: "mce_vaddr", scope: !1312, file: !1313, line: 1342, baseType: !625, size: 64, offset: 13248)
!5766 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kflags", scope: !1312, file: !1313, line: 1343, baseType: !393, size: 64, offset: 13312)
!5767 = !DIDerivedType(tag: DW_TAG_member, name: "mce_addr", scope: !1312, file: !1313, line: 1344, baseType: !391, size: 64, offset: 13376)
!5768 = !DIDerivedType(tag: DW_TAG_member, name: "mce_ripv", scope: !1312, file: !1313, line: 1345, baseType: !393, size: 1, offset: 13440, flags: DIFlagBitField, extraData: i64 13440)
!5769 = !DIDerivedType(tag: DW_TAG_member, name: "mce_whole_page", scope: !1312, file: !1313, line: 1346, baseType: !393, size: 1, offset: 13441, flags: DIFlagBitField, extraData: i64 13440)
!5770 = !DIDerivedType(tag: DW_TAG_member, name: "__mce_reserved", scope: !1312, file: !1313, line: 1347, baseType: !393, size: 62, offset: 13442, flags: DIFlagBitField, extraData: i64 13440)
!5771 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kill_me", scope: !1312, file: !1313, line: 1348, baseType: !359, size: 128, align: 64, offset: 13504)
!5772 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !1312, file: !1313, line: 1358, baseType: !5773, size: 34816, offset: 13824)
!5773 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_struct", file: !5774, line: 485, size: 34816, elements: !5775)
!5774 = !DIFile(filename: "./arch/x86/include/asm/processor.h", directory: "/home/lizy2001/genbc/linux")
!5775 = !{!5776, !5794, !5795, !5796, !5797, !5798, !5799, !5800, !5801, !5805, !5806, !5807, !5808, !5809, !5810, !5813, !5814, !5815}
!5776 = !DIDerivedType(tag: DW_TAG_member, name: "tls_array", scope: !5773, file: !5774, line: 487, baseType: !5777, size: 192)
!5777 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5778, size: 192, elements: !921)
!5778 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "desc_struct", file: !5779, line: 16, size: 64, elements: !5780)
!5779 = !DIFile(filename: "./arch/x86/include/asm/desc_defs.h", directory: "/home/lizy2001/genbc/linux")
!5780 = !{!5781, !5782, !5783, !5784, !5785, !5786, !5787, !5788, !5789, !5790, !5791, !5792, !5793}
!5781 = !DIDerivedType(tag: DW_TAG_member, name: "limit0", scope: !5778, file: !5779, line: 17, baseType: !1092, size: 16)
!5782 = !DIDerivedType(tag: DW_TAG_member, name: "base0", scope: !5778, file: !5779, line: 18, baseType: !1092, size: 16, offset: 16)
!5783 = !DIDerivedType(tag: DW_TAG_member, name: "base1", scope: !5778, file: !5779, line: 19, baseType: !1092, size: 8, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!5784 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5778, file: !5779, line: 19, baseType: !1092, size: 4, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!5785 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !5778, file: !5779, line: 19, baseType: !1092, size: 1, offset: 44, flags: DIFlagBitField, extraData: i64 32)
!5786 = !DIDerivedType(tag: DW_TAG_member, name: "dpl", scope: !5778, file: !5779, line: 19, baseType: !1092, size: 2, offset: 45, flags: DIFlagBitField, extraData: i64 32)
!5787 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !5778, file: !5779, line: 19, baseType: !1092, size: 1, offset: 47, flags: DIFlagBitField, extraData: i64 32)
!5788 = !DIDerivedType(tag: DW_TAG_member, name: "limit1", scope: !5778, file: !5779, line: 20, baseType: !1092, size: 4, offset: 48, flags: DIFlagBitField, extraData: i64 32)
!5789 = !DIDerivedType(tag: DW_TAG_member, name: "avl", scope: !5778, file: !5779, line: 20, baseType: !1092, size: 1, offset: 52, flags: DIFlagBitField, extraData: i64 32)
!5790 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !5778, file: !5779, line: 20, baseType: !1092, size: 1, offset: 53, flags: DIFlagBitField, extraData: i64 32)
!5791 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !5778, file: !5779, line: 20, baseType: !1092, size: 1, offset: 54, flags: DIFlagBitField, extraData: i64 32)
!5792 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !5778, file: !5779, line: 20, baseType: !1092, size: 1, offset: 55, flags: DIFlagBitField, extraData: i64 32)
!5793 = !DIDerivedType(tag: DW_TAG_member, name: "base2", scope: !5778, file: !5779, line: 20, baseType: !1092, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 32)
!5794 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !5773, file: !5774, line: 491, baseType: !372, size: 64, offset: 192)
!5795 = !DIDerivedType(tag: DW_TAG_member, name: "es", scope: !5773, file: !5774, line: 495, baseType: !532, size: 16, offset: 256)
!5796 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !5773, file: !5774, line: 496, baseType: !532, size: 16, offset: 272)
!5797 = !DIDerivedType(tag: DW_TAG_member, name: "fsindex", scope: !5773, file: !5774, line: 497, baseType: !532, size: 16, offset: 288)
!5798 = !DIDerivedType(tag: DW_TAG_member, name: "gsindex", scope: !5773, file: !5774, line: 498, baseType: !532, size: 16, offset: 304)
!5799 = !DIDerivedType(tag: DW_TAG_member, name: "fsbase", scope: !5773, file: !5774, line: 502, baseType: !372, size: 64, offset: 320)
!5800 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !5773, file: !5774, line: 503, baseType: !372, size: 64, offset: 384)
!5801 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_bps", scope: !5773, file: !5774, line: 514, baseType: !5802, size: 256, offset: 448)
!5802 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5803, size: 256, elements: !1256)
!5803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5804, size: 64)
!5804 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event", file: !5774, line: 483, flags: DIFlagFwdDecl)
!5805 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_dr6", scope: !5773, file: !5774, line: 516, baseType: !372, size: 64, offset: 704)
!5806 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_dr7", scope: !5773, file: !5774, line: 518, baseType: !372, size: 64, offset: 768)
!5807 = !DIDerivedType(tag: DW_TAG_member, name: "cr2", scope: !5773, file: !5774, line: 520, baseType: !372, size: 64, offset: 832)
!5808 = !DIDerivedType(tag: DW_TAG_member, name: "trap_nr", scope: !5773, file: !5774, line: 521, baseType: !372, size: 64, offset: 896)
!5809 = !DIDerivedType(tag: DW_TAG_member, name: "error_code", scope: !5773, file: !5774, line: 522, baseType: !372, size: 64, offset: 960)
!5810 = !DIDerivedType(tag: DW_TAG_member, name: "io_bitmap", scope: !5773, file: !5774, line: 528, baseType: !5811, size: 64, offset: 1024)
!5811 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5812, size: 64)
!5812 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_bitmap", file: !5774, line: 10, flags: DIFlagFwdDecl)
!5813 = !DIDerivedType(tag: DW_TAG_member, name: "iopl_emul", scope: !5773, file: !5774, line: 535, baseType: !372, size: 64, offset: 1088)
!5814 = !DIDerivedType(tag: DW_TAG_member, name: "sig_on_uaccess_err", scope: !5773, file: !5774, line: 537, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!5815 = !DIDerivedType(tag: DW_TAG_member, name: "fpu", scope: !5773, file: !5774, line: 540, baseType: !5816, size: 33280, offset: 1536)
!5816 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fpu", file: !5817, line: 317, size: 33280, elements: !5818)
!5817 = !DIFile(filename: "./arch/x86/include/asm/fpu/types.h", directory: "/home/lizy2001/genbc/linux")
!5818 = !{!5819, !5820, !5821}
!5819 = !DIDerivedType(tag: DW_TAG_member, name: "last_cpu", scope: !5816, file: !5817, line: 330, baseType: !7, size: 32)
!5820 = !DIDerivedType(tag: DW_TAG_member, name: "avx512_timestamp", scope: !5816, file: !5817, line: 337, baseType: !372, size: 64, offset: 64)
!5821 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !5816, file: !5817, line: 348, baseType: !5822, size: 32768, offset: 512)
!5822 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "fpregs_state", file: !5817, line: 304, size: 32768, elements: !5823)
!5823 = !{!5824, !5837, !5872, !5922, !5934}
!5824 = !DIDerivedType(tag: DW_TAG_member, name: "fsave", scope: !5822, file: !5817, line: 305, baseType: !5825, size: 896)
!5825 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fregs_state", file: !5817, line: 12, size: 896, elements: !5826)
!5826 = !{!5827, !5828, !5829, !5830, !5831, !5832, !5833, !5834, !5836}
!5827 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !5825, file: !5817, line: 13, baseType: !762, size: 32)
!5828 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !5825, file: !5817, line: 14, baseType: !762, size: 32, offset: 32)
!5829 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !5825, file: !5817, line: 15, baseType: !762, size: 32, offset: 64)
!5830 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !5825, file: !5817, line: 16, baseType: !762, size: 32, offset: 96)
!5831 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !5825, file: !5817, line: 17, baseType: !762, size: 32, offset: 128)
!5832 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !5825, file: !5817, line: 18, baseType: !762, size: 32, offset: 160)
!5833 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !5825, file: !5817, line: 19, baseType: !762, size: 32, offset: 192)
!5834 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !5825, file: !5817, line: 22, baseType: !5835, size: 640, offset: 224)
!5835 = !DICompositeType(tag: DW_TAG_array_type, baseType: !762, size: 640, elements: !2584)
!5836 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !5825, file: !5817, line: 25, baseType: !762, size: 32, offset: 864)
!5837 = !DIDerivedType(tag: DW_TAG_member, name: "fxsave", scope: !5822, file: !5817, line: 306, baseType: !5838, size: 4096, align: 128)
!5838 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fxregs_state", file: !5817, line: 34, size: 4096, align: 128, elements: !5839)
!5839 = !{!5840, !5841, !5842, !5843, !5844, !5859, !5860, !5861, !5863, !5865, !5867}
!5840 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !5838, file: !5817, line: 35, baseType: !1092, size: 16)
!5841 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !5838, file: !5817, line: 36, baseType: !1092, size: 16, offset: 16)
!5842 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !5838, file: !5817, line: 37, baseType: !1092, size: 16, offset: 32)
!5843 = !DIDerivedType(tag: DW_TAG_member, name: "fop", scope: !5838, file: !5817, line: 38, baseType: !1092, size: 16, offset: 48)
!5844 = !DIDerivedType(tag: DW_TAG_member, scope: !5838, file: !5817, line: 39, baseType: !5845, size: 128, offset: 64)
!5845 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5838, file: !5817, line: 39, size: 128, elements: !5846)
!5846 = !{!5847, !5852}
!5847 = !DIDerivedType(tag: DW_TAG_member, scope: !5845, file: !5817, line: 40, baseType: !5848, size: 128)
!5848 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5845, file: !5817, line: 40, size: 128, elements: !5849)
!5849 = !{!5850, !5851}
!5850 = !DIDerivedType(tag: DW_TAG_member, name: "rip", scope: !5848, file: !5817, line: 41, baseType: !391, size: 64)
!5851 = !DIDerivedType(tag: DW_TAG_member, name: "rdp", scope: !5848, file: !5817, line: 42, baseType: !391, size: 64, offset: 64)
!5852 = !DIDerivedType(tag: DW_TAG_member, scope: !5845, file: !5817, line: 44, baseType: !5853, size: 128)
!5853 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5845, file: !5817, line: 44, size: 128, elements: !5854)
!5854 = !{!5855, !5856, !5857, !5858}
!5855 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !5853, file: !5817, line: 45, baseType: !762, size: 32)
!5856 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !5853, file: !5817, line: 46, baseType: !762, size: 32, offset: 32)
!5857 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !5853, file: !5817, line: 47, baseType: !762, size: 32, offset: 64)
!5858 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !5853, file: !5817, line: 48, baseType: !762, size: 32, offset: 96)
!5859 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr", scope: !5838, file: !5817, line: 51, baseType: !762, size: 32, offset: 192)
!5860 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr_mask", scope: !5838, file: !5817, line: 52, baseType: !762, size: 32, offset: 224)
!5861 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !5838, file: !5817, line: 55, baseType: !5862, size: 1024, offset: 256)
!5862 = !DICompositeType(tag: DW_TAG_array_type, baseType: !762, size: 1024, elements: !771)
!5863 = !DIDerivedType(tag: DW_TAG_member, name: "xmm_space", scope: !5838, file: !5817, line: 58, baseType: !5864, size: 2048, offset: 1280)
!5864 = !DICompositeType(tag: DW_TAG_array_type, baseType: !762, size: 2048, elements: !3844)
!5865 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !5838, file: !5817, line: 60, baseType: !5866, size: 384, offset: 3328)
!5866 = !DICompositeType(tag: DW_TAG_array_type, baseType: !762, size: 384, elements: !2970)
!5867 = !DIDerivedType(tag: DW_TAG_member, scope: !5838, file: !5817, line: 62, baseType: !5868, size: 384, offset: 3712)
!5868 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5838, file: !5817, line: 62, size: 384, elements: !5869)
!5869 = !{!5870, !5871}
!5870 = !DIDerivedType(tag: DW_TAG_member, name: "padding1", scope: !5868, file: !5817, line: 63, baseType: !5866, size: 384)
!5871 = !DIDerivedType(tag: DW_TAG_member, name: "sw_reserved", scope: !5868, file: !5817, line: 64, baseType: !5866, size: 384)
!5872 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !5822, file: !5817, line: 307, baseType: !5873, size: 1088)
!5873 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swregs_state", file: !5817, line: 79, size: 1088, elements: !5874)
!5874 = !{!5875, !5876, !5877, !5878, !5879, !5880, !5881, !5882, !5883, !5884, !5885, !5886, !5887, !5888, !5889, !5921}
!5875 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !5873, file: !5817, line: 80, baseType: !762, size: 32)
!5876 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !5873, file: !5817, line: 81, baseType: !762, size: 32, offset: 32)
!5877 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !5873, file: !5817, line: 82, baseType: !762, size: 32, offset: 64)
!5878 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !5873, file: !5817, line: 83, baseType: !762, size: 32, offset: 96)
!5879 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !5873, file: !5817, line: 84, baseType: !762, size: 32, offset: 128)
!5880 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !5873, file: !5817, line: 85, baseType: !762, size: 32, offset: 160)
!5881 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !5873, file: !5817, line: 86, baseType: !762, size: 32, offset: 192)
!5882 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !5873, file: !5817, line: 88, baseType: !5835, size: 640, offset: 224)
!5883 = !DIDerivedType(tag: DW_TAG_member, name: "ftop", scope: !5873, file: !5817, line: 89, baseType: !1451, size: 8, offset: 864)
!5884 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !5873, file: !5817, line: 90, baseType: !1451, size: 8, offset: 872)
!5885 = !DIDerivedType(tag: DW_TAG_member, name: "lookahead", scope: !5873, file: !5817, line: 91, baseType: !1451, size: 8, offset: 880)
!5886 = !DIDerivedType(tag: DW_TAG_member, name: "no_update", scope: !5873, file: !5817, line: 92, baseType: !1451, size: 8, offset: 888)
!5887 = !DIDerivedType(tag: DW_TAG_member, name: "rm", scope: !5873, file: !5817, line: 93, baseType: !1451, size: 8, offset: 896)
!5888 = !DIDerivedType(tag: DW_TAG_member, name: "alimit", scope: !5873, file: !5817, line: 94, baseType: !1451, size: 8, offset: 904)
!5889 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !5873, file: !5817, line: 95, baseType: !5890, size: 64, offset: 960)
!5890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5891, size: 64)
!5891 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "math_emu_info", file: !5892, line: 11, size: 128, elements: !5893)
!5892 = !DIFile(filename: "./arch/x86/include/asm/math_emu.h", directory: "/home/lizy2001/genbc/linux")
!5893 = !{!5894, !5895}
!5894 = !DIDerivedType(tag: DW_TAG_member, name: "___orig_eip", scope: !5891, file: !5892, line: 12, baseType: !568, size: 64)
!5895 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !5891, file: !5892, line: 13, baseType: !5896, size: 64, offset: 64)
!5896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5897, size: 64)
!5897 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pt_regs", file: !5898, line: 56, size: 1344, elements: !5899)
!5898 = !DIFile(filename: "./arch/x86/include/asm/ptrace.h", directory: "/home/lizy2001/genbc/linux")
!5899 = !{!5900, !5901, !5902, !5903, !5904, !5905, !5906, !5907, !5908, !5909, !5910, !5911, !5912, !5913, !5914, !5915, !5916, !5917, !5918, !5919, !5920}
!5900 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !5897, file: !5898, line: 61, baseType: !372, size: 64)
!5901 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !5897, file: !5898, line: 62, baseType: !372, size: 64, offset: 64)
!5902 = !DIDerivedType(tag: DW_TAG_member, name: "r13", scope: !5897, file: !5898, line: 63, baseType: !372, size: 64, offset: 128)
!5903 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !5897, file: !5898, line: 64, baseType: !372, size: 64, offset: 192)
!5904 = !DIDerivedType(tag: DW_TAG_member, name: "bp", scope: !5897, file: !5898, line: 65, baseType: !372, size: 64, offset: 256)
!5905 = !DIDerivedType(tag: DW_TAG_member, name: "bx", scope: !5897, file: !5898, line: 66, baseType: !372, size: 64, offset: 320)
!5906 = !DIDerivedType(tag: DW_TAG_member, name: "r11", scope: !5897, file: !5898, line: 68, baseType: !372, size: 64, offset: 384)
!5907 = !DIDerivedType(tag: DW_TAG_member, name: "r10", scope: !5897, file: !5898, line: 69, baseType: !372, size: 64, offset: 448)
!5908 = !DIDerivedType(tag: DW_TAG_member, name: "r9", scope: !5897, file: !5898, line: 70, baseType: !372, size: 64, offset: 512)
!5909 = !DIDerivedType(tag: DW_TAG_member, name: "r8", scope: !5897, file: !5898, line: 71, baseType: !372, size: 64, offset: 576)
!5910 = !DIDerivedType(tag: DW_TAG_member, name: "ax", scope: !5897, file: !5898, line: 72, baseType: !372, size: 64, offset: 640)
!5911 = !DIDerivedType(tag: DW_TAG_member, name: "cx", scope: !5897, file: !5898, line: 73, baseType: !372, size: 64, offset: 704)
!5912 = !DIDerivedType(tag: DW_TAG_member, name: "dx", scope: !5897, file: !5898, line: 74, baseType: !372, size: 64, offset: 768)
!5913 = !DIDerivedType(tag: DW_TAG_member, name: "si", scope: !5897, file: !5898, line: 75, baseType: !372, size: 64, offset: 832)
!5914 = !DIDerivedType(tag: DW_TAG_member, name: "di", scope: !5897, file: !5898, line: 76, baseType: !372, size: 64, offset: 896)
!5915 = !DIDerivedType(tag: DW_TAG_member, name: "orig_ax", scope: !5897, file: !5898, line: 81, baseType: !372, size: 64, offset: 960)
!5916 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !5897, file: !5898, line: 83, baseType: !372, size: 64, offset: 1024)
!5917 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !5897, file: !5898, line: 84, baseType: !372, size: 64, offset: 1088)
!5918 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5897, file: !5898, line: 85, baseType: !372, size: 64, offset: 1152)
!5919 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !5897, file: !5898, line: 86, baseType: !372, size: 64, offset: 1216)
!5920 = !DIDerivedType(tag: DW_TAG_member, name: "ss", scope: !5897, file: !5898, line: 87, baseType: !372, size: 64, offset: 1280)
!5921 = !DIDerivedType(tag: DW_TAG_member, name: "entry_eip", scope: !5873, file: !5817, line: 96, baseType: !762, size: 32, offset: 1024)
!5922 = !DIDerivedType(tag: DW_TAG_member, name: "xsave", scope: !5822, file: !5817, line: 308, baseType: !5923, size: 4608, align: 512)
!5923 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xregs_state", file: !5817, line: 289, size: 4608, align: 512, elements: !5924)
!5924 = !{!5925, !5926, !5933}
!5925 = !DIDerivedType(tag: DW_TAG_member, name: "i387", scope: !5923, file: !5817, line: 290, baseType: !5838, size: 4096, align: 128)
!5926 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !5923, file: !5817, line: 291, baseType: !5927, size: 512, offset: 4096)
!5927 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xstate_header", file: !5817, line: 268, size: 512, elements: !5928)
!5928 = !{!5929, !5930, !5931}
!5929 = !DIDerivedType(tag: DW_TAG_member, name: "xfeatures", scope: !5927, file: !5817, line: 269, baseType: !391, size: 64)
!5930 = !DIDerivedType(tag: DW_TAG_member, name: "xcomp_bv", scope: !5927, file: !5817, line: 270, baseType: !391, size: 64, offset: 64)
!5931 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !5927, file: !5817, line: 271, baseType: !5932, size: 384, offset: 128)
!5932 = !DICompositeType(tag: DW_TAG_array_type, baseType: !391, size: 384, elements: !1722)
!5933 = !DIDerivedType(tag: DW_TAG_member, name: "extended_state_area", scope: !5923, file: !5817, line: 292, baseType: !2993, offset: 4608)
!5934 = !DIDerivedType(tag: DW_TAG_member, name: "__padding", scope: !5822, file: !5817, line: 309, baseType: !5935, size: 32768)
!5935 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1451, size: 32768, elements: !5936)
!5936 = !{!5937}
!5937 = !DISubrange(count: 4096)
!5938 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1308, file: !681, line: 378, baseType: !5939, size: 64, offset: 64)
!5939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1308, size: 64)
!5940 = !DIDerivedType(tag: DW_TAG_member, name: "startup", scope: !1304, file: !681, line: 384, baseType: !1843, size: 192, offset: 192)
!5941 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_lock", scope: !1183, file: !681, line: 500, baseType: !784, offset: 6656)
!5942 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_table", scope: !1183, file: !681, line: 501, baseType: !5943, size: 64, offset: 6656)
!5943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5944, size: 64)
!5944 = !DICompositeType(tag: DW_TAG_structure_type, name: "kioctx_table", file: !681, line: 387, flags: DIFlagFwdDecl)
!5945 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1183, file: !681, line: 516, baseType: !1625, size: 64, offset: 6720)
!5946 = !DIDerivedType(tag: DW_TAG_member, name: "exe_file", scope: !1183, file: !681, line: 519, baseType: !1064, size: 64, offset: 6784)
!5947 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_subscriptions", scope: !1183, file: !681, line: 521, baseType: !5948, size: 64, offset: 6848)
!5948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5949, size: 64)
!5949 = !DICompositeType(tag: DW_TAG_structure_type, name: "mmu_notifier_subscriptions", file: !681, line: 521, flags: DIFlagFwdDecl)
!5950 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_pending", scope: !1183, file: !681, line: 545, baseType: !443, size: 32, offset: 6912)
!5951 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_batched", scope: !1183, file: !681, line: 548, baseType: !595, size: 8, offset: 6944)
!5952 = !DIDerivedType(tag: DW_TAG_member, name: "uprobes_state", scope: !1183, file: !681, line: 550, baseType: !5953, offset: 6952)
!5953 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uprobes_state", file: !5954, line: 142, elements: !798)
!5954 = !DIFile(filename: "./include/linux/uprobes.h", directory: "/home/lizy2001/genbc/linux")
!5955 = !DIDerivedType(tag: DW_TAG_member, name: "async_put_work", scope: !1183, file: !681, line: 554, baseType: !1782, size: 256, offset: 6976)
!5956 = !DIDerivedType(tag: DW_TAG_member, name: "pasid", scope: !1183, file: !681, line: 557, baseType: !762, size: 32, offset: 7232)
!5957 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_bitmap", scope: !1180, file: !681, line: 565, baseType: !5958, offset: 7296)
!5958 = !DICompositeType(tag: DW_TAG_array_type, baseType: !372, elements: !369)
!5959 = !DIDerivedType(tag: DW_TAG_member, name: "vm_page_prot", scope: !1170, file: !681, line: 333, baseType: !5960, size: 64, offset: 576)
!5960 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprot_t", file: !1202, line: 284, baseType: !5961)
!5961 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pgprot", file: !1202, line: 284, size: 64, elements: !5962)
!5962 = !{!5963}
!5963 = !DIDerivedType(tag: DW_TAG_member, name: "pgprot", scope: !5961, file: !1202, line: 284, baseType: !5964, size: 64)
!5964 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprotval_t", file: !1207, line: 19, baseType: !372)
!5965 = !DIDerivedType(tag: DW_TAG_member, name: "vm_flags", scope: !1170, file: !681, line: 334, baseType: !372, size: 64, offset: 640)
!5966 = !DIDerivedType(tag: DW_TAG_member, name: "shared", scope: !1170, file: !681, line: 343, baseType: !5967, size: 256, offset: 704)
!5967 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1170, file: !681, line: 340, size: 256, elements: !5968)
!5968 = !{!5969, !5970}
!5969 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !5967, file: !681, line: 341, baseType: !493, size: 192, align: 64)
!5970 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_last", scope: !5967, file: !681, line: 342, baseType: !372, size: 64, offset: 192)
!5971 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma_chain", scope: !1170, file: !681, line: 351, baseType: !344, size: 128, offset: 960)
!5972 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma", scope: !1170, file: !681, line: 353, baseType: !5973, size: 64, offset: 1088)
!5973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5974, size: 64)
!5974 = !DICompositeType(tag: DW_TAG_structure_type, name: "anon_vma", file: !681, line: 353, flags: DIFlagFwdDecl)
!5975 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !1170, file: !681, line: 356, baseType: !4180, size: 64, offset: 1152)
!5976 = !DIDerivedType(tag: DW_TAG_member, name: "vm_pgoff", scope: !1170, file: !681, line: 359, baseType: !372, size: 64, offset: 1216)
!5977 = !DIDerivedType(tag: DW_TAG_member, name: "vm_file", scope: !1170, file: !681, line: 361, baseType: !1064, size: 64, offset: 1280)
!5978 = !DIDerivedType(tag: DW_TAG_member, name: "vm_private_data", scope: !1170, file: !681, line: 362, baseType: !625, size: 64, offset: 1344)
!5979 = !DIDerivedType(tag: DW_TAG_member, name: "swap_readahead_info", scope: !1170, file: !681, line: 365, baseType: !431, size: 64, offset: 1408)
!5980 = !DIDerivedType(tag: DW_TAG_member, name: "vm_userfaultfd_ctx", scope: !1170, file: !681, line: 373, baseType: !5981, offset: 1472)
!5981 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_userfaultfd_ctx", file: !681, line: 296, elements: !798)
!5982 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_supported_flags", scope: !1057, file: !694, line: 1836, baseType: !372, size: 64, offset: 832)
!5983 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !1057, file: !694, line: 1837, baseType: !5984, size: 64, offset: 896)
!5984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5985, size: 64)
!5985 = !DISubroutineType(types: !5986)
!5986 = !{!37, !697, !1064}
!5987 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !1057, file: !694, line: 1838, baseType: !5988, size: 64, offset: 960)
!5988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5989, size: 64)
!5989 = !DISubroutineType(types: !5990)
!5990 = !{!37, !1064, !5991}
!5991 = !DIDerivedType(tag: DW_TAG_typedef, name: "fl_owner_t", file: !694, line: 1007, baseType: !625)
!5992 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !1057, file: !694, line: 1839, baseType: !5984, size: 64, offset: 1024)
!5993 = !DIDerivedType(tag: DW_TAG_member, name: "fsync", scope: !1057, file: !694, line: 1840, baseType: !5994, size: 64, offset: 1088)
!5994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5995, size: 64)
!5995 = !DISubroutineType(types: !5996)
!5996 = !{!37, !1064, !879, !879, !37}
!5997 = !DIDerivedType(tag: DW_TAG_member, name: "fasync", scope: !1057, file: !694, line: 1841, baseType: !5998, size: 64, offset: 1152)
!5998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5999, size: 64)
!5999 = !DISubroutineType(types: !6000)
!6000 = !{!37, !37, !1064, !37}
!6001 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1057, file: !694, line: 1842, baseType: !6002, size: 64, offset: 1216)
!6002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6003, size: 64)
!6003 = !DISubroutineType(types: !6004)
!6004 = !{!37, !1064, !37, !6005}
!6005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6006, size: 64)
!6006 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock", file: !694, line: 1062, size: 1664, elements: !6007)
!6007 = !{!6008, !6009, !6010, !6011, !6012, !6013, !6014, !6015, !6016, !6017, !6018, !6019, !6020, !6021, !6022, !6023, !6024, !6025, !6038, !6069}
!6008 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocker", scope: !6006, file: !694, line: 1063, baseType: !6005, size: 64)
!6009 = !DIDerivedType(tag: DW_TAG_member, name: "fl_list", scope: !6006, file: !694, line: 1064, baseType: !344, size: 128, offset: 64)
!6010 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link", scope: !6006, file: !694, line: 1065, baseType: !336, size: 128, offset: 192)
!6011 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_requests", scope: !6006, file: !694, line: 1066, baseType: !344, size: 128, offset: 320)
!6012 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_member", scope: !6006, file: !694, line: 1069, baseType: !344, size: 128, offset: 448)
!6013 = !DIDerivedType(tag: DW_TAG_member, name: "fl_owner", scope: !6006, file: !694, line: 1072, baseType: !5991, size: 64, offset: 576)
!6014 = !DIDerivedType(tag: DW_TAG_member, name: "fl_flags", scope: !6006, file: !694, line: 1073, baseType: !7, size: 32, offset: 640)
!6015 = !DIDerivedType(tag: DW_TAG_member, name: "fl_type", scope: !6006, file: !694, line: 1074, baseType: !549, size: 8, offset: 672)
!6016 = !DIDerivedType(tag: DW_TAG_member, name: "fl_pid", scope: !6006, file: !694, line: 1075, baseType: !7, size: 32, offset: 704)
!6017 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link_cpu", scope: !6006, file: !694, line: 1076, baseType: !37, size: 32, offset: 736)
!6018 = !DIDerivedType(tag: DW_TAG_member, name: "fl_wait", scope: !6006, file: !694, line: 1077, baseType: !1154, size: 128, offset: 768)
!6019 = !DIDerivedType(tag: DW_TAG_member, name: "fl_file", scope: !6006, file: !694, line: 1078, baseType: !1064, size: 64, offset: 896)
!6020 = !DIDerivedType(tag: DW_TAG_member, name: "fl_start", scope: !6006, file: !694, line: 1079, baseType: !879, size: 64, offset: 960)
!6021 = !DIDerivedType(tag: DW_TAG_member, name: "fl_end", scope: !6006, file: !694, line: 1080, baseType: !879, size: 64, offset: 1024)
!6022 = !DIDerivedType(tag: DW_TAG_member, name: "fl_fasync", scope: !6006, file: !694, line: 1082, baseType: !5698, size: 64, offset: 1088)
!6023 = !DIDerivedType(tag: DW_TAG_member, name: "fl_break_time", scope: !6006, file: !694, line: 1084, baseType: !372, size: 64, offset: 1152)
!6024 = !DIDerivedType(tag: DW_TAG_member, name: "fl_downgrade_time", scope: !6006, file: !694, line: 1085, baseType: !372, size: 64, offset: 1216)
!6025 = !DIDerivedType(tag: DW_TAG_member, name: "fl_ops", scope: !6006, file: !694, line: 1087, baseType: !6026, size: 64, offset: 1280)
!6026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6027, size: 64)
!6027 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6028)
!6028 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_operations", file: !694, line: 1011, size: 128, elements: !6029)
!6029 = !{!6030, !6034}
!6030 = !DIDerivedType(tag: DW_TAG_member, name: "fl_copy_lock", scope: !6028, file: !694, line: 1012, baseType: !6031, size: 64)
!6031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6032, size: 64)
!6032 = !DISubroutineType(types: !6033)
!6033 = !{null, !6005, !6005}
!6034 = !DIDerivedType(tag: DW_TAG_member, name: "fl_release_private", scope: !6028, file: !694, line: 1013, baseType: !6035, size: 64, offset: 64)
!6035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6036, size: 64)
!6036 = !DISubroutineType(types: !6037)
!6037 = !{null, !6005}
!6038 = !DIDerivedType(tag: DW_TAG_member, name: "fl_lmops", scope: !6006, file: !694, line: 1088, baseType: !6039, size: 64, offset: 1344)
!6039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6040, size: 64)
!6040 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6041)
!6041 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_manager_operations", file: !694, line: 1016, size: 512, elements: !6042)
!6042 = !{!6043, !6047, !6051, !6052, !6056, !6060, !6064, !6068}
!6043 = !DIDerivedType(tag: DW_TAG_member, name: "lm_get_owner", scope: !6041, file: !694, line: 1017, baseType: !6044, size: 64)
!6044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6045, size: 64)
!6045 = !DISubroutineType(types: !6046)
!6046 = !{!5991, !5991}
!6047 = !DIDerivedType(tag: DW_TAG_member, name: "lm_put_owner", scope: !6041, file: !694, line: 1018, baseType: !6048, size: 64, offset: 64)
!6048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6049, size: 64)
!6049 = !DISubroutineType(types: !6050)
!6050 = !{null, !5991}
!6051 = !DIDerivedType(tag: DW_TAG_member, name: "lm_notify", scope: !6041, file: !694, line: 1019, baseType: !6035, size: 64, offset: 128)
!6052 = !DIDerivedType(tag: DW_TAG_member, name: "lm_grant", scope: !6041, file: !694, line: 1020, baseType: !6053, size: 64, offset: 192)
!6053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6054, size: 64)
!6054 = !DISubroutineType(types: !6055)
!6055 = !{!37, !6005, !37}
!6056 = !DIDerivedType(tag: DW_TAG_member, name: "lm_break", scope: !6041, file: !694, line: 1021, baseType: !6057, size: 64, offset: 256)
!6057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6058, size: 64)
!6058 = !DISubroutineType(types: !6059)
!6059 = !{!595, !6005}
!6060 = !DIDerivedType(tag: DW_TAG_member, name: "lm_change", scope: !6041, file: !694, line: 1022, baseType: !6061, size: 64, offset: 320)
!6061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6062, size: 64)
!6062 = !DISubroutineType(types: !6063)
!6063 = !{!37, !6005, !37, !347}
!6064 = !DIDerivedType(tag: DW_TAG_member, name: "lm_setup", scope: !6041, file: !694, line: 1023, baseType: !6065, size: 64, offset: 384)
!6065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6066, size: 64)
!6066 = !DISubroutineType(types: !6067)
!6067 = !{null, !6005, !3617}
!6068 = !DIDerivedType(tag: DW_TAG_member, name: "lm_breaker_owns_lease", scope: !6041, file: !694, line: 1024, baseType: !6057, size: 64, offset: 448)
!6069 = !DIDerivedType(tag: DW_TAG_member, name: "fl_u", scope: !6006, file: !694, line: 1097, baseType: !6070, size: 256, offset: 1408)
!6070 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6006, file: !694, line: 1089, size: 256, elements: !6071)
!6071 = !{!6072, !6081, !6087}
!6072 = !DIDerivedType(tag: DW_TAG_member, name: "nfs_fl", scope: !6070, file: !694, line: 1090, baseType: !6073, size: 256)
!6073 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs_lock_info", file: !6074, line: 10, size: 256, elements: !6075)
!6074 = !DIFile(filename: "./include/linux/nfs_fs_i.h", directory: "/home/lizy2001/genbc/linux")
!6075 = !{!6076, !6077, !6080}
!6076 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !6073, file: !6074, line: 11, baseType: !762, size: 32)
!6077 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !6073, file: !6074, line: 12, baseType: !6078, size: 64, offset: 64)
!6078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6079, size: 64)
!6079 = !DICompositeType(tag: DW_TAG_structure_type, name: "nlm_lockowner", file: !6074, line: 5, flags: DIFlagFwdDecl)
!6080 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !6073, file: !6074, line: 13, baseType: !344, size: 128, offset: 128)
!6081 = !DIDerivedType(tag: DW_TAG_member, name: "nfs4_fl", scope: !6070, file: !694, line: 1091, baseType: !6082, size: 64)
!6082 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_info", file: !6074, line: 17, size: 64, elements: !6083)
!6083 = !{!6084}
!6084 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !6082, file: !6074, line: 18, baseType: !6085, size: 64)
!6085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6086, size: 64)
!6086 = !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_state", file: !6074, line: 16, flags: DIFlagFwdDecl)
!6087 = !DIDerivedType(tag: DW_TAG_member, name: "afs", scope: !6070, file: !694, line: 1096, baseType: !6088, size: 192)
!6088 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6070, file: !694, line: 1092, size: 192, elements: !6089)
!6089 = !{!6090, !6091, !6092}
!6090 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !6088, file: !694, line: 1093, baseType: !344, size: 128)
!6091 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !6088, file: !694, line: 1094, baseType: !37, size: 32, offset: 128)
!6092 = !DIDerivedType(tag: DW_TAG_member, name: "debug_id", scope: !6088, file: !694, line: 1095, baseType: !7, size: 32, offset: 160)
!6093 = !DIDerivedType(tag: DW_TAG_member, name: "sendpage", scope: !1057, file: !694, line: 1843, baseType: !6094, size: 64, offset: 1280)
!6094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6095, size: 64)
!6095 = !DISubroutineType(types: !6096)
!6096 = !{!1069, !1064, !679, !37, !649, !1023, !37}
!6097 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !1057, file: !694, line: 1844, baseType: !1192, size: 64, offset: 1344)
!6098 = !DIDerivedType(tag: DW_TAG_member, name: "check_flags", scope: !1057, file: !694, line: 1845, baseType: !6099, size: 64, offset: 1408)
!6099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6100, size: 64)
!6100 = !DISubroutineType(types: !6101)
!6101 = !{!37, !37}
!6102 = !DIDerivedType(tag: DW_TAG_member, name: "flock", scope: !1057, file: !694, line: 1846, baseType: !6002, size: 64, offset: 1472)
!6103 = !DIDerivedType(tag: DW_TAG_member, name: "splice_write", scope: !1057, file: !694, line: 1847, baseType: !6104, size: 64, offset: 1536)
!6104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6105, size: 64)
!6105 = !DISubroutineType(types: !6106)
!6106 = !{!1069, !5679, !1064, !1023, !649, !7}
!6107 = !DIDerivedType(tag: DW_TAG_member, name: "splice_read", scope: !1057, file: !694, line: 1848, baseType: !6108, size: 64, offset: 1600)
!6108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6109, size: 64)
!6109 = !DISubroutineType(types: !6110)
!6110 = !{!1069, !1064, !1023, !5679, !649, !7}
!6111 = !DIDerivedType(tag: DW_TAG_member, name: "setlease", scope: !1057, file: !694, line: 1849, baseType: !6112, size: 64, offset: 1664)
!6112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6113, size: 64)
!6113 = !DISubroutineType(types: !6114)
!6114 = !{!37, !1064, !568, !6115, !3617}
!6115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6005, size: 64)
!6116 = !DIDerivedType(tag: DW_TAG_member, name: "fallocate", scope: !1057, file: !694, line: 1850, baseType: !6117, size: 64, offset: 1728)
!6117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6118, size: 64)
!6118 = !DISubroutineType(types: !6119)
!6119 = !{!568, !1064, !37, !879, !879}
!6120 = !DIDerivedType(tag: DW_TAG_member, name: "show_fdinfo", scope: !1057, file: !694, line: 1852, baseType: !6121, size: 64, offset: 1792)
!6121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6122, size: 64)
!6122 = !DISubroutineType(types: !6123)
!6123 = !{null, !996, !1064}
!6124 = !DIDerivedType(tag: DW_TAG_member, name: "copy_file_range", scope: !1057, file: !694, line: 1856, baseType: !6125, size: 64, offset: 1856)
!6125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6126, size: 64)
!6126 = !DISubroutineType(types: !6127)
!6127 = !{!1069, !1064, !879, !1064, !879, !649, !7}
!6128 = !DIDerivedType(tag: DW_TAG_member, name: "remap_file_range", scope: !1057, file: !694, line: 1858, baseType: !6129, size: 64, offset: 1920)
!6129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6130, size: 64)
!6130 = !DISubroutineType(types: !6131)
!6131 = !{!879, !1064, !879, !1064, !879, !879, !7}
!6132 = !DIDerivedType(tag: DW_TAG_member, name: "fadvise", scope: !1057, file: !694, line: 1861, baseType: !5994, size: 64, offset: 1984)
!6133 = !DIDerivedType(tag: DW_TAG_member, name: "f_lock", scope: !1040, file: !694, line: 929, baseType: !784, offset: 384)
!6134 = !DIDerivedType(tag: DW_TAG_member, name: "f_write_hint", scope: !1040, file: !694, line: 930, baseType: !6135, size: 32, offset: 384)
!6135 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rw_hint", file: !694, line: 296, baseType: !7, size: 32, elements: !6136)
!6136 = !{!6137, !6138, !6139, !6140, !6141, !6142}
!6137 = !DIEnumerator(name: "WRITE_LIFE_NOT_SET", value: 0, isUnsigned: true)
!6138 = !DIEnumerator(name: "WRITE_LIFE_NONE", value: 1, isUnsigned: true)
!6139 = !DIEnumerator(name: "WRITE_LIFE_SHORT", value: 2, isUnsigned: true)
!6140 = !DIEnumerator(name: "WRITE_LIFE_MEDIUM", value: 3, isUnsigned: true)
!6141 = !DIEnumerator(name: "WRITE_LIFE_LONG", value: 4, isUnsigned: true)
!6142 = !DIEnumerator(name: "WRITE_LIFE_EXTREME", value: 5, isUnsigned: true)
!6143 = !DIDerivedType(tag: DW_TAG_member, name: "f_count", scope: !1040, file: !694, line: 931, baseType: !431, size: 64, offset: 448)
!6144 = !DIDerivedType(tag: DW_TAG_member, name: "f_flags", scope: !1040, file: !694, line: 932, baseType: !7, size: 32, offset: 512)
!6145 = !DIDerivedType(tag: DW_TAG_member, name: "f_mode", scope: !1040, file: !694, line: 933, baseType: !4887, size: 32, offset: 544)
!6146 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos_lock", scope: !1040, file: !694, line: 934, baseType: !1008, size: 192, offset: 576)
!6147 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos", scope: !1040, file: !694, line: 935, baseType: !879, size: 64, offset: 768)
!6148 = !DIDerivedType(tag: DW_TAG_member, name: "f_owner", scope: !1040, file: !694, line: 936, baseType: !6149, size: 192, offset: 832)
!6149 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fown_struct", file: !694, line: 885, size: 192, elements: !6150)
!6150 = !{!6151, !6152, !6153, !6161, !6162, !6163}
!6151 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6149, file: !694, line: 886, baseType: !2909)
!6152 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !6149, file: !694, line: 887, baseType: !1575, size: 64)
!6153 = !DIDerivedType(tag: DW_TAG_member, name: "pid_type", scope: !6149, file: !694, line: 888, baseType: !6154, size: 32, offset: 64)
!6154 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pid_type", file: !1577, line: 9, baseType: !7, size: 32, elements: !6155)
!6155 = !{!6156, !6157, !6158, !6159, !6160}
!6156 = !DIEnumerator(name: "PIDTYPE_PID", value: 0, isUnsigned: true)
!6157 = !DIEnumerator(name: "PIDTYPE_TGID", value: 1, isUnsigned: true)
!6158 = !DIEnumerator(name: "PIDTYPE_PGID", value: 2, isUnsigned: true)
!6159 = !DIEnumerator(name: "PIDTYPE_SID", value: 3, isUnsigned: true)
!6160 = !DIEnumerator(name: "PIDTYPE_MAX", value: 4, isUnsigned: true)
!6161 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !6149, file: !694, line: 889, baseType: !704, size: 32, offset: 96)
!6162 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !6149, file: !694, line: 889, baseType: !704, size: 32, offset: 128)
!6163 = !DIDerivedType(tag: DW_TAG_member, name: "signum", scope: !6149, file: !694, line: 890, baseType: !37, size: 32, offset: 160)
!6164 = !DIDerivedType(tag: DW_TAG_member, name: "f_cred", scope: !1040, file: !694, line: 937, baseType: !1943, size: 64, offset: 1024)
!6165 = !DIDerivedType(tag: DW_TAG_member, name: "f_ra", scope: !1040, file: !694, line: 938, baseType: !6166, size: 256, offset: 1088)
!6166 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_ra_state", file: !694, line: 896, size: 256, elements: !6167)
!6167 = !{!6168, !6169, !6170, !6171, !6172, !6173}
!6168 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !6166, file: !694, line: 897, baseType: !372, size: 64)
!6169 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6166, file: !694, line: 898, baseType: !7, size: 32, offset: 64)
!6170 = !DIDerivedType(tag: DW_TAG_member, name: "async_size", scope: !6166, file: !694, line: 899, baseType: !7, size: 32, offset: 96)
!6171 = !DIDerivedType(tag: DW_TAG_member, name: "ra_pages", scope: !6166, file: !694, line: 902, baseType: !7, size: 32, offset: 128)
!6172 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_miss", scope: !6166, file: !694, line: 903, baseType: !7, size: 32, offset: 160)
!6173 = !DIDerivedType(tag: DW_TAG_member, name: "prev_pos", scope: !6166, file: !694, line: 904, baseType: !879, size: 64, offset: 192)
!6174 = !DIDerivedType(tag: DW_TAG_member, name: "f_version", scope: !1040, file: !694, line: 940, baseType: !391, size: 64, offset: 1344)
!6175 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !1040, file: !694, line: 945, baseType: !625, size: 64, offset: 1408)
!6176 = !DIDerivedType(tag: DW_TAG_member, name: "f_ep_links", scope: !1040, file: !694, line: 949, baseType: !344, size: 128, offset: 1472)
!6177 = !DIDerivedType(tag: DW_TAG_member, name: "f_tfile_llink", scope: !1040, file: !694, line: 950, baseType: !344, size: 128, offset: 1600)
!6178 = !DIDerivedType(tag: DW_TAG_member, name: "f_mapping", scope: !1040, file: !694, line: 952, baseType: !692, size: 64, offset: 1728)
!6179 = !DIDerivedType(tag: DW_TAG_member, name: "f_wb_err", scope: !1040, file: !694, line: 953, baseType: !6180, size: 32, offset: 1792)
!6180 = !DIDerivedType(tag: DW_TAG_typedef, name: "errseq_t", file: !6181, line: 8, baseType: !762)
!6181 = !DIFile(filename: "./include/linux/errseq.h", directory: "/home/lizy2001/genbc/linux")
!6182 = !DIDerivedType(tag: DW_TAG_member, name: "f_sb_err", scope: !1040, file: !694, line: 954, baseType: !6180, size: 32, offset: 1824)
!6183 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !997, file: !998, line: 28, baseType: !625, size: 64, offset: 832)
!6184 = !DIDerivedType(tag: DW_TAG_member, name: "show_devname", scope: !929, file: !694, line: 1955, baseType: !993, size: 64, offset: 1088)
!6185 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !929, file: !694, line: 1956, baseType: !993, size: 64, offset: 1152)
!6186 = !DIDerivedType(tag: DW_TAG_member, name: "show_stats", scope: !929, file: !694, line: 1957, baseType: !993, size: 64, offset: 1216)
!6187 = !DIDerivedType(tag: DW_TAG_member, name: "bdev_try_to_free_page", scope: !929, file: !694, line: 1963, baseType: !6188, size: 64, offset: 1280)
!6188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6189, size: 64)
!6189 = !DISubroutineType(types: !6190)
!6190 = !{!37, !869, !679, !1612}
!6191 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cached_objects", scope: !929, file: !694, line: 1964, baseType: !6192, size: 64, offset: 1344)
!6192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6193, size: 64)
!6193 = !DISubroutineType(types: !6194)
!6194 = !{!568, !869, !6195}
!6195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6196, size: 64)
!6196 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrink_control", file: !6197, line: 12, size: 256, elements: !6198)
!6197 = !DIFile(filename: "./include/linux/shrinker.h", directory: "/home/lizy2001/genbc/linux")
!6198 = !{!6199, !6200, !6201, !6202, !6203}
!6199 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !6196, file: !6197, line: 13, baseType: !1612, size: 32)
!6200 = !DIDerivedType(tag: DW_TAG_member, name: "nid", scope: !6196, file: !6197, line: 16, baseType: !37, size: 32, offset: 32)
!6201 = !DIDerivedType(tag: DW_TAG_member, name: "nr_to_scan", scope: !6196, file: !6197, line: 23, baseType: !372, size: 64, offset: 64)
!6202 = !DIDerivedType(tag: DW_TAG_member, name: "nr_scanned", scope: !6196, file: !6197, line: 30, baseType: !372, size: 64, offset: 128)
!6203 = !DIDerivedType(tag: DW_TAG_member, name: "memcg", scope: !6196, file: !6197, line: 33, baseType: !6204, size: 64, offset: 192)
!6204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6205, size: 64)
!6205 = !DICompositeType(tag: DW_TAG_structure_type, name: "mem_cgroup", file: !681, line: 27, flags: DIFlagFwdDecl)
!6206 = !DIDerivedType(tag: DW_TAG_member, name: "free_cached_objects", scope: !929, file: !694, line: 1966, baseType: !6192, size: 64, offset: 1408)
!6207 = !DIDerivedType(tag: DW_TAG_member, name: "dq_op", scope: !870, file: !694, line: 1424, baseType: !6208, size: 64, offset: 448)
!6208 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6209, size: 64)
!6209 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6210)
!6210 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot_operations", file: !6211, line: 322, size: 704, elements: !6212)
!6211 = !DIFile(filename: "./include/linux/quota.h", directory: "/home/lizy2001/genbc/linux")
!6212 = !{!6213, !6264, !6268, !6272, !6273, !6274, !6275, !6276, !6281, !6286, !6290}
!6213 = !DIDerivedType(tag: DW_TAG_member, name: "write_dquot", scope: !6210, file: !6211, line: 323, baseType: !6214, size: 64)
!6214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6215, size: 64)
!6215 = !DISubroutineType(types: !6216)
!6216 = !{!37, !6217}
!6217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6218, size: 64)
!6218 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot", file: !6211, line: 294, size: 1600, elements: !6219)
!6219 = !{!6220, !6221, !6222, !6223, !6224, !6225, !6226, !6227, !6228, !6249, !6250, !6251}
!6220 = !DIDerivedType(tag: DW_TAG_member, name: "dq_hash", scope: !6218, file: !6211, line: 295, baseType: !336, size: 128)
!6221 = !DIDerivedType(tag: DW_TAG_member, name: "dq_inuse", scope: !6218, file: !6211, line: 296, baseType: !344, size: 128, offset: 128)
!6222 = !DIDerivedType(tag: DW_TAG_member, name: "dq_free", scope: !6218, file: !6211, line: 297, baseType: !344, size: 128, offset: 256)
!6223 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dirty", scope: !6218, file: !6211, line: 298, baseType: !344, size: 128, offset: 384)
!6224 = !DIDerivedType(tag: DW_TAG_member, name: "dq_lock", scope: !6218, file: !6211, line: 299, baseType: !1008, size: 192, offset: 512)
!6225 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb_lock", scope: !6218, file: !6211, line: 300, baseType: !784, offset: 704)
!6226 = !DIDerivedType(tag: DW_TAG_member, name: "dq_count", scope: !6218, file: !6211, line: 301, baseType: !443, size: 32, offset: 704)
!6227 = !DIDerivedType(tag: DW_TAG_member, name: "dq_sb", scope: !6218, file: !6211, line: 302, baseType: !869, size: 64, offset: 768)
!6228 = !DIDerivedType(tag: DW_TAG_member, name: "dq_id", scope: !6218, file: !6211, line: 303, baseType: !6229, size: 64, offset: 832)
!6229 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kqid", file: !6211, line: 68, size: 64, elements: !6230)
!6230 = !{!6231, !6243}
!6231 = !DIDerivedType(tag: DW_TAG_member, scope: !6229, file: !6211, line: 69, baseType: !6232, size: 32)
!6232 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6229, file: !6211, line: 69, size: 32, elements: !6233)
!6233 = !{!6234, !6235, !6236}
!6234 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !6232, file: !6211, line: 70, baseType: !704, size: 32)
!6235 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !6232, file: !6211, line: 71, baseType: !712, size: 32)
!6236 = !DIDerivedType(tag: DW_TAG_member, name: "projid", scope: !6232, file: !6211, line: 72, baseType: !6237, size: 32)
!6237 = !DIDerivedType(tag: DW_TAG_typedef, name: "kprojid_t", file: !6238, line: 24, baseType: !6239)
!6238 = !DIFile(filename: "./include/linux/projid.h", directory: "/home/lizy2001/genbc/linux")
!6239 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6238, line: 22, size: 32, elements: !6240)
!6240 = !{!6241}
!6241 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !6239, file: !6238, line: 23, baseType: !6242, size: 32)
!6242 = !DIDerivedType(tag: DW_TAG_typedef, name: "projid_t", file: !6238, line: 20, baseType: !710)
!6243 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !6229, file: !6211, line: 74, baseType: !6244, size: 32, offset: 32)
!6244 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "quota_type", file: !6211, line: 54, baseType: !7, size: 32, elements: !6245)
!6245 = !{!6246, !6247, !6248}
!6246 = !DIEnumerator(name: "USRQUOTA", value: 0, isUnsigned: true)
!6247 = !DIEnumerator(name: "GRPQUOTA", value: 1, isUnsigned: true)
!6248 = !DIEnumerator(name: "PRJQUOTA", value: 2, isUnsigned: true)
!6249 = !DIDerivedType(tag: DW_TAG_member, name: "dq_off", scope: !6218, file: !6211, line: 304, baseType: !879, size: 64, offset: 896)
!6250 = !DIDerivedType(tag: DW_TAG_member, name: "dq_flags", scope: !6218, file: !6211, line: 305, baseType: !372, size: 64, offset: 960)
!6251 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb", scope: !6218, file: !6211, line: 306, baseType: !6252, size: 576, offset: 1024)
!6252 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqblk", file: !6211, line: 205, size: 576, elements: !6253)
!6253 = !{!6254, !6256, !6257, !6258, !6259, !6260, !6261, !6262, !6263}
!6254 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bhardlimit", scope: !6252, file: !6211, line: 206, baseType: !6255, size: 64)
!6255 = !DIDerivedType(tag: DW_TAG_typedef, name: "qsize_t", file: !6211, line: 66, baseType: !439)
!6256 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bsoftlimit", scope: !6252, file: !6211, line: 207, baseType: !6255, size: 64, offset: 64)
!6257 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curspace", scope: !6252, file: !6211, line: 208, baseType: !6255, size: 64, offset: 128)
!6258 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_rsvspace", scope: !6252, file: !6211, line: 209, baseType: !6255, size: 64, offset: 192)
!6259 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_ihardlimit", scope: !6252, file: !6211, line: 210, baseType: !6255, size: 64, offset: 256)
!6260 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_isoftlimit", scope: !6252, file: !6211, line: 211, baseType: !6255, size: 64, offset: 320)
!6261 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curinodes", scope: !6252, file: !6211, line: 212, baseType: !6255, size: 64, offset: 384)
!6262 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_btime", scope: !6252, file: !6211, line: 213, baseType: !1693, size: 64, offset: 448)
!6263 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_itime", scope: !6252, file: !6211, line: 214, baseType: !1693, size: 64, offset: 512)
!6264 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_dquot", scope: !6210, file: !6211, line: 324, baseType: !6265, size: 64, offset: 64)
!6265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6266, size: 64)
!6266 = !DISubroutineType(types: !6267)
!6267 = !{!6217, !869, !37}
!6268 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_dquot", scope: !6210, file: !6211, line: 325, baseType: !6269, size: 64, offset: 128)
!6269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6270, size: 64)
!6270 = !DISubroutineType(types: !6271)
!6271 = !{null, !6217}
!6272 = !DIDerivedType(tag: DW_TAG_member, name: "acquire_dquot", scope: !6210, file: !6211, line: 326, baseType: !6214, size: 64, offset: 192)
!6273 = !DIDerivedType(tag: DW_TAG_member, name: "release_dquot", scope: !6210, file: !6211, line: 327, baseType: !6214, size: 64, offset: 256)
!6274 = !DIDerivedType(tag: DW_TAG_member, name: "mark_dirty", scope: !6210, file: !6211, line: 328, baseType: !6214, size: 64, offset: 320)
!6275 = !DIDerivedType(tag: DW_TAG_member, name: "write_info", scope: !6210, file: !6211, line: 329, baseType: !971, size: 64, offset: 384)
!6276 = !DIDerivedType(tag: DW_TAG_member, name: "get_reserved_space", scope: !6210, file: !6211, line: 332, baseType: !6277, size: 64, offset: 448)
!6277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6278, size: 64)
!6278 = !DISubroutineType(types: !6279)
!6279 = !{!6280, !697}
!6280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6255, size: 64)
!6281 = !DIDerivedType(tag: DW_TAG_member, name: "get_projid", scope: !6210, file: !6211, line: 333, baseType: !6282, size: 64, offset: 512)
!6282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6283, size: 64)
!6283 = !DISubroutineType(types: !6284)
!6284 = !{!37, !697, !6285}
!6285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6237, size: 64)
!6286 = !DIDerivedType(tag: DW_TAG_member, name: "get_inode_usage", scope: !6210, file: !6211, line: 335, baseType: !6287, size: 64, offset: 576)
!6287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6288, size: 64)
!6288 = !DISubroutineType(types: !6289)
!6289 = !{!37, !697, !6280}
!6290 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !6210, file: !6211, line: 337, baseType: !6291, size: 64, offset: 640)
!6291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6292, size: 64)
!6292 = !DISubroutineType(types: !6293)
!6293 = !{!37, !869, !6294}
!6294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6229, size: 64)
!6295 = !DIDerivedType(tag: DW_TAG_member, name: "s_qcop", scope: !870, file: !694, line: 1425, baseType: !6296, size: 64, offset: 512)
!6296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6297, size: 64)
!6297 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6298)
!6298 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quotactl_ops", file: !6211, line: 428, size: 704, elements: !6299)
!6299 = !{!6300, !6304, !6305, !6309, !6310, !6311, !6326, !6349, !6353, !6354, !6377}
!6300 = !DIDerivedType(tag: DW_TAG_member, name: "quota_on", scope: !6298, file: !6211, line: 429, baseType: !6301, size: 64)
!6301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6302, size: 64)
!6302 = !DISubroutineType(types: !6303)
!6303 = !{!37, !869, !37, !37, !860}
!6304 = !DIDerivedType(tag: DW_TAG_member, name: "quota_off", scope: !6298, file: !6211, line: 430, baseType: !971, size: 64, offset: 64)
!6305 = !DIDerivedType(tag: DW_TAG_member, name: "quota_enable", scope: !6298, file: !6211, line: 431, baseType: !6306, size: 64, offset: 128)
!6306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6307, size: 64)
!6307 = !DISubroutineType(types: !6308)
!6308 = !{!37, !869, !7}
!6309 = !DIDerivedType(tag: DW_TAG_member, name: "quota_disable", scope: !6298, file: !6211, line: 432, baseType: !6306, size: 64, offset: 192)
!6310 = !DIDerivedType(tag: DW_TAG_member, name: "quota_sync", scope: !6298, file: !6211, line: 433, baseType: !971, size: 64, offset: 256)
!6311 = !DIDerivedType(tag: DW_TAG_member, name: "set_info", scope: !6298, file: !6211, line: 434, baseType: !6312, size: 64, offset: 320)
!6312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6313, size: 64)
!6313 = !DISubroutineType(types: !6314)
!6314 = !{!37, !869, !37, !6315}
!6315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6316, size: 64)
!6316 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_info", file: !6211, line: 415, size: 256, elements: !6317)
!6317 = !{!6318, !6319, !6320, !6321, !6322, !6323, !6324, !6325}
!6318 = !DIDerivedType(tag: DW_TAG_member, name: "i_fieldmask", scope: !6316, file: !6211, line: 416, baseType: !37, size: 32)
!6319 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !6316, file: !6211, line: 417, baseType: !7, size: 32, offset: 32)
!6320 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_timelimit", scope: !6316, file: !6211, line: 418, baseType: !7, size: 32, offset: 64)
!6321 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_timelimit", scope: !6316, file: !6211, line: 420, baseType: !7, size: 32, offset: 96)
!6322 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_timelimit", scope: !6316, file: !6211, line: 421, baseType: !7, size: 32, offset: 128)
!6323 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_warnlimit", scope: !6316, file: !6211, line: 422, baseType: !7, size: 32, offset: 160)
!6324 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_warnlimit", scope: !6316, file: !6211, line: 423, baseType: !7, size: 32, offset: 192)
!6325 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_warnlimit", scope: !6316, file: !6211, line: 424, baseType: !7, size: 32, offset: 224)
!6326 = !DIDerivedType(tag: DW_TAG_member, name: "get_dqblk", scope: !6298, file: !6211, line: 435, baseType: !6327, size: 64, offset: 384)
!6327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6328, size: 64)
!6328 = !DISubroutineType(types: !6329)
!6329 = !{!37, !869, !6229, !6330}
!6330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6331, size: 64)
!6331 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_dqblk", file: !6211, line: 343, size: 960, elements: !6332)
!6332 = !{!6333, !6334, !6335, !6336, !6337, !6338, !6339, !6340, !6341, !6342, !6343, !6344, !6345, !6346, !6347, !6348}
!6333 = !DIDerivedType(tag: DW_TAG_member, name: "d_fieldmask", scope: !6331, file: !6211, line: 344, baseType: !37, size: 32)
!6334 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_hardlimit", scope: !6331, file: !6211, line: 345, baseType: !391, size: 64, offset: 64)
!6335 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_softlimit", scope: !6331, file: !6211, line: 346, baseType: !391, size: 64, offset: 128)
!6336 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_hardlimit", scope: !6331, file: !6211, line: 347, baseType: !391, size: 64, offset: 192)
!6337 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_softlimit", scope: !6331, file: !6211, line: 348, baseType: !391, size: 64, offset: 256)
!6338 = !DIDerivedType(tag: DW_TAG_member, name: "d_space", scope: !6331, file: !6211, line: 349, baseType: !391, size: 64, offset: 320)
!6339 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_count", scope: !6331, file: !6211, line: 350, baseType: !391, size: 64, offset: 384)
!6340 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_timer", scope: !6331, file: !6211, line: 351, baseType: !437, size: 64, offset: 448)
!6341 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_timer", scope: !6331, file: !6211, line: 353, baseType: !437, size: 64, offset: 512)
!6342 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_warns", scope: !6331, file: !6211, line: 354, baseType: !37, size: 32, offset: 576)
!6343 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_warns", scope: !6331, file: !6211, line: 355, baseType: !37, size: 32, offset: 608)
!6344 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_hardlimit", scope: !6331, file: !6211, line: 356, baseType: !391, size: 64, offset: 640)
!6345 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_softlimit", scope: !6331, file: !6211, line: 357, baseType: !391, size: 64, offset: 704)
!6346 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_space", scope: !6331, file: !6211, line: 358, baseType: !391, size: 64, offset: 768)
!6347 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_timer", scope: !6331, file: !6211, line: 359, baseType: !437, size: 64, offset: 832)
!6348 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_warns", scope: !6331, file: !6211, line: 360, baseType: !37, size: 32, offset: 896)
!6349 = !DIDerivedType(tag: DW_TAG_member, name: "get_nextdqblk", scope: !6298, file: !6211, line: 436, baseType: !6350, size: 64, offset: 448)
!6350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6351, size: 64)
!6351 = !DISubroutineType(types: !6352)
!6352 = !{!37, !869, !6294, !6330}
!6353 = !DIDerivedType(tag: DW_TAG_member, name: "set_dqblk", scope: !6298, file: !6211, line: 438, baseType: !6327, size: 64, offset: 512)
!6354 = !DIDerivedType(tag: DW_TAG_member, name: "get_state", scope: !6298, file: !6211, line: 439, baseType: !6355, size: 64, offset: 576)
!6355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6356, size: 64)
!6356 = !DISubroutineType(types: !6357)
!6357 = !{!37, !869, !6358}
!6358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6359, size: 64)
!6359 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_state", file: !6211, line: 409, size: 1408, elements: !6360)
!6360 = !{!6361, !6362}
!6361 = !DIDerivedType(tag: DW_TAG_member, name: "s_incoredqs", scope: !6359, file: !6211, line: 410, baseType: !7, size: 32)
!6362 = !DIDerivedType(tag: DW_TAG_member, name: "s_state", scope: !6359, file: !6211, line: 411, baseType: !6363, size: 1344, offset: 64)
!6363 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6364, size: 1344, elements: !921)
!6364 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_type_state", file: !6211, line: 395, size: 448, elements: !6365)
!6365 = !{!6366, !6367, !6368, !6369, !6370, !6371, !6372, !6373, !6374, !6376}
!6366 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6364, file: !6211, line: 396, baseType: !7, size: 32)
!6367 = !DIDerivedType(tag: DW_TAG_member, name: "spc_timelimit", scope: !6364, file: !6211, line: 397, baseType: !7, size: 32, offset: 32)
!6368 = !DIDerivedType(tag: DW_TAG_member, name: "ino_timelimit", scope: !6364, file: !6211, line: 399, baseType: !7, size: 32, offset: 64)
!6369 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_timelimit", scope: !6364, file: !6211, line: 400, baseType: !7, size: 32, offset: 96)
!6370 = !DIDerivedType(tag: DW_TAG_member, name: "spc_warnlimit", scope: !6364, file: !6211, line: 401, baseType: !7, size: 32, offset: 128)
!6371 = !DIDerivedType(tag: DW_TAG_member, name: "ino_warnlimit", scope: !6364, file: !6211, line: 402, baseType: !7, size: 32, offset: 160)
!6372 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_warnlimit", scope: !6364, file: !6211, line: 403, baseType: !7, size: 32, offset: 192)
!6373 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !6364, file: !6211, line: 404, baseType: !395, size: 64, offset: 256)
!6374 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !6364, file: !6211, line: 405, baseType: !6375, size: 64, offset: 320)
!6375 = !DIDerivedType(tag: DW_TAG_typedef, name: "blkcnt_t", file: !337, line: 126, baseType: !391)
!6376 = !DIDerivedType(tag: DW_TAG_member, name: "nextents", scope: !6364, file: !6211, line: 406, baseType: !6375, size: 64, offset: 384)
!6377 = !DIDerivedType(tag: DW_TAG_member, name: "rm_xquota", scope: !6298, file: !6211, line: 440, baseType: !6306, size: 64, offset: 640)
!6378 = !DIDerivedType(tag: DW_TAG_member, name: "s_export_op", scope: !870, file: !694, line: 1426, baseType: !6379, size: 64, offset: 576)
!6379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6380, size: 64)
!6380 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6381)
!6381 = !DICompositeType(tag: DW_TAG_structure_type, name: "export_operations", file: !694, line: 49, flags: DIFlagFwdDecl)
!6382 = !DIDerivedType(tag: DW_TAG_member, name: "s_flags", scope: !870, file: !694, line: 1427, baseType: !372, size: 64, offset: 640)
!6383 = !DIDerivedType(tag: DW_TAG_member, name: "s_iflags", scope: !870, file: !694, line: 1428, baseType: !372, size: 64, offset: 704)
!6384 = !DIDerivedType(tag: DW_TAG_member, name: "s_magic", scope: !870, file: !694, line: 1429, baseType: !372, size: 64, offset: 768)
!6385 = !DIDerivedType(tag: DW_TAG_member, name: "s_root", scope: !870, file: !694, line: 1430, baseType: !728, size: 64, offset: 832)
!6386 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount", scope: !870, file: !694, line: 1431, baseType: !1216, size: 256, offset: 896)
!6387 = !DIDerivedType(tag: DW_TAG_member, name: "s_count", scope: !870, file: !694, line: 1432, baseType: !37, size: 32, offset: 1152)
!6388 = !DIDerivedType(tag: DW_TAG_member, name: "s_active", scope: !870, file: !694, line: 1433, baseType: !443, size: 32, offset: 1184)
!6389 = !DIDerivedType(tag: DW_TAG_member, name: "s_xattr", scope: !870, file: !694, line: 1437, baseType: !6390, size: 64, offset: 1216)
!6390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6391, size: 64)
!6391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6392, size: 64)
!6392 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6393)
!6393 = !DICompositeType(tag: DW_TAG_structure_type, name: "xattr_handler", file: !694, line: 1437, flags: DIFlagFwdDecl)
!6394 = !DIDerivedType(tag: DW_TAG_member, name: "s_roots", scope: !870, file: !694, line: 1449, baseType: !6395, size: 64, offset: 1280)
!6395 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_head", file: !745, line: 34, size: 64, elements: !6396)
!6396 = !{!6397}
!6397 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !6395, file: !745, line: 35, baseType: !748, size: 64)
!6398 = !DIDerivedType(tag: DW_TAG_member, name: "s_mounts", scope: !870, file: !694, line: 1450, baseType: !344, size: 128, offset: 1344)
!6399 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdev", scope: !870, file: !694, line: 1451, baseType: !4797, size: 64, offset: 1472)
!6400 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdi", scope: !870, file: !694, line: 1452, baseType: !4817, size: 64, offset: 1536)
!6401 = !DIDerivedType(tag: DW_TAG_member, name: "s_mtd", scope: !870, file: !694, line: 1453, baseType: !6402, size: 64, offset: 1600)
!6402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6403, size: 64)
!6403 = !DICompositeType(tag: DW_TAG_structure_type, name: "mtd_info", file: !694, line: 1453, flags: DIFlagFwdDecl)
!6404 = !DIDerivedType(tag: DW_TAG_member, name: "s_instances", scope: !870, file: !694, line: 1454, baseType: !336, size: 128, offset: 1664)
!6405 = !DIDerivedType(tag: DW_TAG_member, name: "s_quota_types", scope: !870, file: !694, line: 1455, baseType: !7, size: 32, offset: 1792)
!6406 = !DIDerivedType(tag: DW_TAG_member, name: "s_dquot", scope: !870, file: !694, line: 1456, baseType: !6407, size: 2432, offset: 1856)
!6407 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_info", file: !6211, line: 518, size: 2432, elements: !6408)
!6408 = !{!6409, !6410, !6411, !6413, !6445}
!6409 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6407, file: !6211, line: 519, baseType: !7, size: 32)
!6410 = !DIDerivedType(tag: DW_TAG_member, name: "dqio_sem", scope: !6407, file: !6211, line: 520, baseType: !1216, size: 256, offset: 64)
!6411 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !6407, file: !6211, line: 521, baseType: !6412, size: 192, offset: 320)
!6412 = !DICompositeType(tag: DW_TAG_array_type, baseType: !697, size: 192, elements: !921)
!6413 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !6407, file: !6211, line: 522, baseType: !6414, size: 1728, offset: 512)
!6414 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6415, size: 1728, elements: !921)
!6415 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqinfo", file: !6211, line: 222, size: 576, elements: !6416)
!6416 = !{!6417, !6437, !6438, !6439, !6440, !6441, !6442, !6443, !6444}
!6417 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_format", scope: !6415, file: !6211, line: 223, baseType: !6418, size: 64)
!6418 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6419, size: 64)
!6419 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_type", file: !6211, line: 443, size: 256, elements: !6420)
!6420 = !{!6421, !6422, !6435, !6436}
!6421 = !DIDerivedType(tag: DW_TAG_member, name: "qf_fmt_id", scope: !6419, file: !6211, line: 444, baseType: !37, size: 32)
!6422 = !DIDerivedType(tag: DW_TAG_member, name: "qf_ops", scope: !6419, file: !6211, line: 445, baseType: !6423, size: 64, offset: 64)
!6423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6424, size: 64)
!6424 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6425)
!6425 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_ops", file: !6211, line: 310, size: 512, elements: !6426)
!6426 = !{!6427, !6428, !6429, !6430, !6431, !6432, !6433, !6434}
!6427 = !DIDerivedType(tag: DW_TAG_member, name: "check_quota_file", scope: !6425, file: !6211, line: 311, baseType: !971, size: 64)
!6428 = !DIDerivedType(tag: DW_TAG_member, name: "read_file_info", scope: !6425, file: !6211, line: 312, baseType: !971, size: 64, offset: 64)
!6429 = !DIDerivedType(tag: DW_TAG_member, name: "write_file_info", scope: !6425, file: !6211, line: 313, baseType: !971, size: 64, offset: 128)
!6430 = !DIDerivedType(tag: DW_TAG_member, name: "free_file_info", scope: !6425, file: !6211, line: 314, baseType: !971, size: 64, offset: 192)
!6431 = !DIDerivedType(tag: DW_TAG_member, name: "read_dqblk", scope: !6425, file: !6211, line: 315, baseType: !6214, size: 64, offset: 256)
!6432 = !DIDerivedType(tag: DW_TAG_member, name: "commit_dqblk", scope: !6425, file: !6211, line: 316, baseType: !6214, size: 64, offset: 320)
!6433 = !DIDerivedType(tag: DW_TAG_member, name: "release_dqblk", scope: !6425, file: !6211, line: 317, baseType: !6214, size: 64, offset: 384)
!6434 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !6425, file: !6211, line: 318, baseType: !6291, size: 64, offset: 448)
!6435 = !DIDerivedType(tag: DW_TAG_member, name: "qf_owner", scope: !6419, file: !6211, line: 446, baseType: !906, size: 64, offset: 128)
!6436 = !DIDerivedType(tag: DW_TAG_member, name: "qf_next", scope: !6419, file: !6211, line: 447, baseType: !6418, size: 64, offset: 192)
!6437 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_fmt_id", scope: !6415, file: !6211, line: 224, baseType: !37, size: 32, offset: 64)
!6438 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_dirty_list", scope: !6415, file: !6211, line: 226, baseType: !344, size: 128, offset: 128)
!6439 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_flags", scope: !6415, file: !6211, line: 227, baseType: !372, size: 64, offset: 256)
!6440 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_bgrace", scope: !6415, file: !6211, line: 228, baseType: !7, size: 32, offset: 320)
!6441 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_igrace", scope: !6415, file: !6211, line: 229, baseType: !7, size: 32, offset: 352)
!6442 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_spc_limit", scope: !6415, file: !6211, line: 230, baseType: !6255, size: 64, offset: 384)
!6443 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_ino_limit", scope: !6415, file: !6211, line: 231, baseType: !6255, size: 64, offset: 448)
!6444 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_priv", scope: !6415, file: !6211, line: 232, baseType: !625, size: 64, offset: 512)
!6445 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !6407, file: !6211, line: 523, baseType: !6446, size: 192, offset: 2240)
!6446 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6423, size: 192, elements: !921)
!6447 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers", scope: !870, file: !694, line: 1458, baseType: !6448, size: 2112, offset: 4288)
!6448 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sb_writers", file: !694, line: 1410, size: 2112, elements: !6449)
!6449 = !{!6450, !6451, !6452}
!6450 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !6448, file: !694, line: 1411, baseType: !37, size: 32)
!6451 = !DIDerivedType(tag: DW_TAG_member, name: "wait_unfrozen", scope: !6448, file: !694, line: 1412, baseType: !1154, size: 128, offset: 64)
!6452 = !DIDerivedType(tag: DW_TAG_member, name: "rw_sem", scope: !6448, file: !694, line: 1413, baseType: !6453, size: 1920, offset: 192)
!6453 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6454, size: 1920, elements: !921)
!6454 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_rw_semaphore", file: !6455, line: 12, size: 640, elements: !6456)
!6455 = !DIFile(filename: "./include/linux/percpu-rwsem.h", directory: "/home/lizy2001/genbc/linux")
!6456 = !{!6457, !6465, !6467, !6472, !6473}
!6457 = !DIDerivedType(tag: DW_TAG_member, name: "rss", scope: !6454, file: !6455, line: 13, baseType: !6458, size: 320)
!6458 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcu_sync", file: !6459, line: 17, size: 320, elements: !6460)
!6459 = !DIFile(filename: "./include/linux/rcu_sync.h", directory: "/home/lizy2001/genbc/linux")
!6460 = !{!6461, !6462, !6463, !6464}
!6461 = !DIDerivedType(tag: DW_TAG_member, name: "gp_state", scope: !6458, file: !6459, line: 18, baseType: !37, size: 32)
!6462 = !DIDerivedType(tag: DW_TAG_member, name: "gp_count", scope: !6458, file: !6459, line: 19, baseType: !37, size: 32, offset: 32)
!6463 = !DIDerivedType(tag: DW_TAG_member, name: "gp_wait", scope: !6458, file: !6459, line: 20, baseType: !1154, size: 128, offset: 64)
!6464 = !DIDerivedType(tag: DW_TAG_member, name: "cb_head", scope: !6458, file: !6459, line: 22, baseType: !359, size: 128, align: 64, offset: 192)
!6465 = !DIDerivedType(tag: DW_TAG_member, name: "read_count", scope: !6454, file: !6455, line: 14, baseType: !6466, size: 64, offset: 320)
!6466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!6467 = !DIDerivedType(tag: DW_TAG_member, name: "writer", scope: !6454, file: !6455, line: 15, baseType: !6468, size: 64, offset: 384)
!6468 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcuwait", file: !6469, line: 16, size: 64, elements: !6470)
!6469 = !DIFile(filename: "./include/linux/rcuwait.h", directory: "/home/lizy2001/genbc/linux")
!6470 = !{!6471}
!6471 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !6468, file: !6469, line: 17, baseType: !1311, size: 64)
!6472 = !DIDerivedType(tag: DW_TAG_member, name: "waiters", scope: !6454, file: !6455, line: 16, baseType: !1154, size: 128, offset: 448)
!6473 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !6454, file: !6455, line: 17, baseType: !443, size: 32, offset: 576)
!6474 = !DIDerivedType(tag: DW_TAG_member, name: "s_fs_info", scope: !870, file: !694, line: 1465, baseType: !625, size: 64, offset: 6400)
!6475 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_gran", scope: !870, file: !694, line: 1468, baseType: !762, size: 32, offset: 6464)
!6476 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_min", scope: !870, file: !694, line: 1470, baseType: !1693, size: 64, offset: 6528)
!6477 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_max", scope: !870, file: !694, line: 1471, baseType: !1693, size: 64, offset: 6592)
!6478 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_mask", scope: !870, file: !694, line: 1473, baseType: !523, size: 32, offset: 6656)
!6479 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_marks", scope: !870, file: !694, line: 1474, baseType: !6480, size: 64, offset: 6720)
!6480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6481, size: 64)
!6481 = !DICompositeType(tag: DW_TAG_structure_type, name: "fsnotify_mark_connector", file: !694, line: 603, flags: DIFlagFwdDecl)
!6482 = !DIDerivedType(tag: DW_TAG_member, name: "s_id", scope: !870, file: !694, line: 1477, baseType: !3898, size: 256, offset: 6784)
!6483 = !DIDerivedType(tag: DW_TAG_member, name: "s_uuid", scope: !870, file: !694, line: 1478, baseType: !6484, size: 128, offset: 7040)
!6484 = !DIDerivedType(tag: DW_TAG_typedef, name: "uuid_t", file: !6485, line: 18, baseType: !6486)
!6485 = !DIFile(filename: "./include/linux/uuid.h", directory: "/home/lizy2001/genbc/linux")
!6486 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !6485, line: 16, size: 128, elements: !6487)
!6487 = !{!6488}
!6488 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !6486, file: !6485, line: 17, baseType: !2304, size: 128)
!6489 = !DIDerivedType(tag: DW_TAG_member, name: "s_max_links", scope: !870, file: !694, line: 1480, baseType: !7, size: 32, offset: 7168)
!6490 = !DIDerivedType(tag: DW_TAG_member, name: "s_mode", scope: !870, file: !694, line: 1481, baseType: !4887, size: 32, offset: 7200)
!6491 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_mutex", scope: !870, file: !694, line: 1487, baseType: !1008, size: 192, offset: 7232)
!6492 = !DIDerivedType(tag: DW_TAG_member, name: "s_subtype", scope: !870, file: !694, line: 1493, baseType: !352, size: 64, offset: 7424)
!6493 = !DIDerivedType(tag: DW_TAG_member, name: "s_d_op", scope: !870, file: !694, line: 1495, baseType: !801, size: 64, offset: 7488)
!6494 = !DIDerivedType(tag: DW_TAG_member, name: "cleancache_poolid", scope: !870, file: !694, line: 1500, baseType: !37, size: 32, offset: 7552)
!6495 = !DIDerivedType(tag: DW_TAG_member, name: "s_shrink", scope: !870, file: !694, line: 1502, baseType: !6496, size: 448, offset: 7616)
!6496 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrinker", file: !6197, line: 60, size: 448, elements: !6497)
!6497 = !{!6498, !6503, !6504, !6505, !6506, !6507, !6508}
!6498 = !DIDerivedType(tag: DW_TAG_member, name: "count_objects", scope: !6496, file: !6197, line: 61, baseType: !6499, size: 64)
!6499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6500, size: 64)
!6500 = !DISubroutineType(types: !6501)
!6501 = !{!372, !6502, !6195}
!6502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6496, size: 64)
!6503 = !DIDerivedType(tag: DW_TAG_member, name: "scan_objects", scope: !6496, file: !6197, line: 63, baseType: !6499, size: 64, offset: 64)
!6504 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !6496, file: !6197, line: 66, baseType: !568, size: 64, offset: 128)
!6505 = !DIDerivedType(tag: DW_TAG_member, name: "seeks", scope: !6496, file: !6197, line: 67, baseType: !37, size: 32, offset: 192)
!6506 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6496, file: !6197, line: 68, baseType: !7, size: 32, offset: 224)
!6507 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !6496, file: !6197, line: 71, baseType: !344, size: 128, offset: 256)
!6508 = !DIDerivedType(tag: DW_TAG_member, name: "nr_deferred", scope: !6496, file: !6197, line: 77, baseType: !6509, size: 64, offset: 384)
!6509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !431, size: 64)
!6510 = !DIDerivedType(tag: DW_TAG_member, name: "s_remove_count", scope: !870, file: !694, line: 1505, baseType: !431, size: 64, offset: 8064)
!6511 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_inode_refs", scope: !870, file: !694, line: 1508, baseType: !431, size: 64, offset: 8128)
!6512 = !DIDerivedType(tag: DW_TAG_member, name: "s_readonly_remount", scope: !870, file: !694, line: 1511, baseType: !37, size: 32, offset: 8192)
!6513 = !DIDerivedType(tag: DW_TAG_member, name: "s_wb_err", scope: !870, file: !694, line: 1514, baseType: !6180, size: 32, offset: 8224)
!6514 = !DIDerivedType(tag: DW_TAG_member, name: "s_dio_done_wq", scope: !870, file: !694, line: 1517, baseType: !2894, size: 64, offset: 8256)
!6515 = !DIDerivedType(tag: DW_TAG_member, name: "s_pins", scope: !870, file: !694, line: 1518, baseType: !911, size: 64, offset: 8320)
!6516 = !DIDerivedType(tag: DW_TAG_member, name: "s_user_ns", scope: !870, file: !694, line: 1525, baseType: !1625, size: 64, offset: 8384)
!6517 = !DIDerivedType(tag: DW_TAG_member, name: "s_dentry_lru", scope: !870, file: !694, line: 1532, baseType: !6518, size: 64, offset: 8448)
!6518 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru", file: !6519, line: 52, size: 64, elements: !6520)
!6519 = !DIFile(filename: "./include/linux/list_lru.h", directory: "/home/lizy2001/genbc/linux")
!6520 = !{!6521}
!6521 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !6518, file: !6519, line: 53, baseType: !6522, size: 64)
!6522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6523, size: 64)
!6523 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_node", file: !6519, line: 40, size: 256, elements: !6524)
!6524 = !{!6525, !6526, !6531}
!6525 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !6523, file: !6519, line: 42, baseType: !784)
!6526 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !6523, file: !6519, line: 44, baseType: !6527, size: 192)
!6527 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_one", file: !6519, line: 28, size: 192, elements: !6528)
!6528 = !{!6529, !6530}
!6529 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !6527, file: !6519, line: 29, baseType: !344, size: 128)
!6530 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !6527, file: !6519, line: 31, baseType: !568, size: 64, offset: 128)
!6531 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !6523, file: !6519, line: 49, baseType: !568, size: 64, offset: 192)
!6532 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_lru", scope: !870, file: !694, line: 1533, baseType: !6518, size: 64, offset: 8512)
!6533 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !870, file: !694, line: 1534, baseType: !359, size: 128, align: 64, offset: 8576)
!6534 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_work", scope: !870, file: !694, line: 1535, baseType: !1782, size: 256, offset: 8704)
!6535 = !DIDerivedType(tag: DW_TAG_member, name: "s_sync_lock", scope: !870, file: !694, line: 1537, baseType: !1008, size: 192, offset: 8960)
!6536 = !DIDerivedType(tag: DW_TAG_member, name: "s_stack_depth", scope: !870, file: !694, line: 1542, baseType: !37, size: 32, offset: 9152)
!6537 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_list_lock", scope: !870, file: !694, line: 1545, baseType: !784, offset: 9184)
!6538 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes", scope: !870, file: !694, line: 1546, baseType: !344, size: 128, offset: 9216)
!6539 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_wblist_lock", scope: !870, file: !694, line: 1548, baseType: !784, offset: 9344)
!6540 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes_wb", scope: !870, file: !694, line: 1549, baseType: !344, size: 128, offset: 9344)
!6541 = !DIDerivedType(tag: DW_TAG_member, name: "d_time", scope: !729, file: !730, line: 104, baseType: !372, size: 64, offset: 896)
!6542 = !DIDerivedType(tag: DW_TAG_member, name: "d_fsdata", scope: !729, file: !730, line: 105, baseType: !625, size: 64, offset: 960)
!6543 = !DIDerivedType(tag: DW_TAG_member, scope: !729, file: !730, line: 107, baseType: !6544, size: 128, offset: 1024)
!6544 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !729, file: !730, line: 107, size: 128, elements: !6545)
!6545 = !{!6546, !6547}
!6546 = !DIDerivedType(tag: DW_TAG_member, name: "d_lru", scope: !6544, file: !730, line: 108, baseType: !344, size: 128)
!6547 = !DIDerivedType(tag: DW_TAG_member, name: "d_wait", scope: !6544, file: !730, line: 109, baseType: !1153, size: 64)
!6548 = !DIDerivedType(tag: DW_TAG_member, name: "d_child", scope: !729, file: !730, line: 111, baseType: !344, size: 128, offset: 1152)
!6549 = !DIDerivedType(tag: DW_TAG_member, name: "d_subdirs", scope: !729, file: !730, line: 112, baseType: !344, size: 128, offset: 1280)
!6550 = !DIDerivedType(tag: DW_TAG_member, name: "d_u", scope: !729, file: !730, line: 120, baseType: !6551, size: 128, offset: 1408)
!6551 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !729, file: !730, line: 116, size: 128, elements: !6552)
!6552 = !{!6553, !6554, !6555}
!6553 = !DIDerivedType(tag: DW_TAG_member, name: "d_alias", scope: !6551, file: !730, line: 117, baseType: !336, size: 128)
!6554 = !DIDerivedType(tag: DW_TAG_member, name: "d_in_lookup_hash", scope: !6551, file: !730, line: 118, baseType: !744, size: 128)
!6555 = !DIDerivedType(tag: DW_TAG_member, name: "d_rcu", scope: !6551, file: !730, line: 119, baseType: !359, size: 128, align: 64)
!6556 = !DIDerivedType(tag: DW_TAG_member, name: "get_link", scope: !722, file: !694, line: 1866, baseType: !6557, size: 64, offset: 64)
!6557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6558, size: 64)
!6558 = !DISubroutineType(types: !6559)
!6559 = !{!352, !728, !697, !6560}
!6560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6561, size: 64)
!6561 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_call", file: !6562, line: 10, size: 128, elements: !6563)
!6562 = !DIFile(filename: "./include/linux/delayed_call.h", directory: "/home/lizy2001/genbc/linux")
!6563 = !{!6564, !6565}
!6564 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !6561, file: !6562, line: 11, baseType: !3427, size: 64)
!6565 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !6561, file: !6562, line: 12, baseType: !625, size: 64, offset: 64)
!6566 = !DIDerivedType(tag: DW_TAG_member, name: "permission", scope: !722, file: !694, line: 1867, baseType: !6567, size: 64, offset: 128)
!6567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6568, size: 64)
!6568 = !DISubroutineType(types: !6569)
!6569 = !{!37, !697, !37}
!6570 = !DIDerivedType(tag: DW_TAG_member, name: "get_acl", scope: !722, file: !694, line: 1868, baseType: !6571, size: 64, offset: 192)
!6571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6572, size: 64)
!6572 = !DISubroutineType(types: !6573)
!6573 = !{!6574, !697, !37}
!6574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6575, size: 64)
!6575 = !DICompositeType(tag: DW_TAG_structure_type, name: "posix_acl", file: !694, line: 581, flags: DIFlagFwdDecl)
!6576 = !DIDerivedType(tag: DW_TAG_member, name: "readlink", scope: !722, file: !694, line: 1870, baseType: !6577, size: 64, offset: 256)
!6577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6578, size: 64)
!6578 = !DISubroutineType(types: !6579)
!6579 = !{!37, !728, !632, !37}
!6580 = !DIDerivedType(tag: DW_TAG_member, name: "create", scope: !722, file: !694, line: 1872, baseType: !6581, size: 64, offset: 320)
!6581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6582, size: 64)
!6582 = !DISubroutineType(types: !6583)
!6583 = !{!37, !697, !728, !701, !595}
!6584 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !722, file: !694, line: 1873, baseType: !6585, size: 64, offset: 384)
!6585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6586, size: 64)
!6586 = !DISubroutineType(types: !6587)
!6587 = !{!37, !728, !697, !728}
!6588 = !DIDerivedType(tag: DW_TAG_member, name: "unlink", scope: !722, file: !694, line: 1874, baseType: !6589, size: 64, offset: 448)
!6589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6590, size: 64)
!6590 = !DISubroutineType(types: !6591)
!6591 = !{!37, !697, !728}
!6592 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !722, file: !694, line: 1875, baseType: !6593, size: 64, offset: 512)
!6593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6594, size: 64)
!6594 = !DISubroutineType(types: !6595)
!6595 = !{!37, !697, !728, !352}
!6596 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !722, file: !694, line: 1876, baseType: !6597, size: 64, offset: 576)
!6597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6598, size: 64)
!6598 = !DISubroutineType(types: !6599)
!6599 = !{!37, !697, !728, !701}
!6600 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !722, file: !694, line: 1877, baseType: !6589, size: 64, offset: 640)
!6601 = !DIDerivedType(tag: DW_TAG_member, name: "mknod", scope: !722, file: !694, line: 1878, baseType: !6602, size: 64, offset: 704)
!6602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6603, size: 64)
!6603 = !DISubroutineType(types: !6604)
!6604 = !{!37, !697, !728, !701, !874}
!6605 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !722, file: !694, line: 1879, baseType: !6606, size: 64, offset: 768)
!6606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6607, size: 64)
!6607 = !DISubroutineType(types: !6608)
!6608 = !{!37, !697, !728, !697, !728, !7}
!6609 = !DIDerivedType(tag: DW_TAG_member, name: "setattr", scope: !722, file: !694, line: 1881, baseType: !6610, size: 64, offset: 832)
!6610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6611, size: 64)
!6611 = !DISubroutineType(types: !6612)
!6612 = !{!37, !728, !6613}
!6613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6614, size: 64)
!6614 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iattr", file: !694, line: 219, size: 640, elements: !6615)
!6615 = !{!6616, !6617, !6618, !6619, !6620, !6621, !6626, !6627, !6628}
!6616 = !DIDerivedType(tag: DW_TAG_member, name: "ia_valid", scope: !6614, file: !694, line: 220, baseType: !7, size: 32)
!6617 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mode", scope: !6614, file: !694, line: 221, baseType: !701, size: 16, offset: 32)
!6618 = !DIDerivedType(tag: DW_TAG_member, name: "ia_uid", scope: !6614, file: !694, line: 222, baseType: !704, size: 32, offset: 64)
!6619 = !DIDerivedType(tag: DW_TAG_member, name: "ia_gid", scope: !6614, file: !694, line: 223, baseType: !712, size: 32, offset: 96)
!6620 = !DIDerivedType(tag: DW_TAG_member, name: "ia_size", scope: !6614, file: !694, line: 224, baseType: !879, size: 64, offset: 128)
!6621 = !DIDerivedType(tag: DW_TAG_member, name: "ia_atime", scope: !6614, file: !694, line: 225, baseType: !6622, size: 128, offset: 192)
!6622 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec64", file: !1694, line: 13, size: 128, elements: !6623)
!6623 = !{!6624, !6625}
!6624 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !6622, file: !1694, line: 14, baseType: !1693, size: 64)
!6625 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !6622, file: !1694, line: 15, baseType: !568, size: 64, offset: 64)
!6626 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mtime", scope: !6614, file: !694, line: 226, baseType: !6622, size: 128, offset: 320)
!6627 = !DIDerivedType(tag: DW_TAG_member, name: "ia_ctime", scope: !6614, file: !694, line: 227, baseType: !6622, size: 128, offset: 448)
!6628 = !DIDerivedType(tag: DW_TAG_member, name: "ia_file", scope: !6614, file: !694, line: 234, baseType: !1064, size: 64, offset: 576)
!6629 = !DIDerivedType(tag: DW_TAG_member, name: "getattr", scope: !722, file: !694, line: 1882, baseType: !6630, size: 64, offset: 896)
!6630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6631, size: 64)
!6631 = !DISubroutineType(types: !6632)
!6632 = !{!37, !860, !6633, !762, !7}
!6633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6634, size: 64)
!6634 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kstat", file: !6635, line: 22, size: 1152, elements: !6636)
!6635 = !DIFile(filename: "./include/linux/stat.h", directory: "/home/lizy2001/genbc/linux")
!6636 = !{!6637, !6638, !6639, !6640, !6641, !6642, !6643, !6644, !6645, !6646, !6647, !6648, !6649, !6650, !6651, !6652, !6653, !6654}
!6637 = !DIDerivedType(tag: DW_TAG_member, name: "result_mask", scope: !6634, file: !6635, line: 23, baseType: !762, size: 32)
!6638 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !6634, file: !6635, line: 24, baseType: !701, size: 16, offset: 32)
!6639 = !DIDerivedType(tag: DW_TAG_member, name: "nlink", scope: !6634, file: !6635, line: 25, baseType: !7, size: 32, offset: 64)
!6640 = !DIDerivedType(tag: DW_TAG_member, name: "blksize", scope: !6634, file: !6635, line: 26, baseType: !1701, size: 32, offset: 96)
!6641 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !6634, file: !6635, line: 27, baseType: !391, size: 64, offset: 128)
!6642 = !DIDerivedType(tag: DW_TAG_member, name: "attributes_mask", scope: !6634, file: !6635, line: 28, baseType: !391, size: 64, offset: 192)
!6643 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !6634, file: !6635, line: 37, baseType: !391, size: 64, offset: 256)
!6644 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !6634, file: !6635, line: 38, baseType: !874, size: 32, offset: 320)
!6645 = !DIDerivedType(tag: DW_TAG_member, name: "rdev", scope: !6634, file: !6635, line: 39, baseType: !874, size: 32, offset: 352)
!6646 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !6634, file: !6635, line: 40, baseType: !704, size: 32, offset: 384)
!6647 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !6634, file: !6635, line: 41, baseType: !712, size: 32, offset: 416)
!6648 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6634, file: !6635, line: 42, baseType: !879, size: 64, offset: 448)
!6649 = !DIDerivedType(tag: DW_TAG_member, name: "atime", scope: !6634, file: !6635, line: 43, baseType: !6622, size: 128, offset: 512)
!6650 = !DIDerivedType(tag: DW_TAG_member, name: "mtime", scope: !6634, file: !6635, line: 44, baseType: !6622, size: 128, offset: 640)
!6651 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !6634, file: !6635, line: 45, baseType: !6622, size: 128, offset: 768)
!6652 = !DIDerivedType(tag: DW_TAG_member, name: "btime", scope: !6634, file: !6635, line: 46, baseType: !6622, size: 128, offset: 896)
!6653 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !6634, file: !6635, line: 47, baseType: !391, size: 64, offset: 1024)
!6654 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_id", scope: !6634, file: !6635, line: 48, baseType: !391, size: 64, offset: 1088)
!6655 = !DIDerivedType(tag: DW_TAG_member, name: "listxattr", scope: !722, file: !694, line: 1883, baseType: !6656, size: 64, offset: 960)
!6656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6657, size: 64)
!6657 = !DISubroutineType(types: !6658)
!6658 = !{!1069, !728, !632, !649}
!6659 = !DIDerivedType(tag: DW_TAG_member, name: "fiemap", scope: !722, file: !694, line: 1884, baseType: !6660, size: 64, offset: 1024)
!6660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6661, size: 64)
!6661 = !DISubroutineType(types: !6662)
!6662 = !{!37, !697, !6663, !391, !391}
!6663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6664, size: 64)
!6664 = !DICompositeType(tag: DW_TAG_structure_type, name: "fiemap_extent_info", file: !694, line: 50, flags: DIFlagFwdDecl)
!6665 = !DIDerivedType(tag: DW_TAG_member, name: "update_time", scope: !722, file: !694, line: 1886, baseType: !6666, size: 64, offset: 1088)
!6666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6667, size: 64)
!6667 = !DISubroutineType(types: !6668)
!6668 = !{!37, !697, !6669, !37}
!6669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6622, size: 64)
!6670 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_open", scope: !722, file: !694, line: 1887, baseType: !6671, size: 64, offset: 1152)
!6671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6672, size: 64)
!6672 = !DISubroutineType(types: !6673)
!6673 = !{!37, !697, !728, !1064, !7, !701}
!6674 = !DIDerivedType(tag: DW_TAG_member, name: "tmpfile", scope: !722, file: !694, line: 1890, baseType: !6597, size: 64, offset: 1216)
!6675 = !DIDerivedType(tag: DW_TAG_member, name: "set_acl", scope: !722, file: !694, line: 1891, baseType: !6676, size: 64, offset: 1280)
!6676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6677, size: 64)
!6677 = !DISubroutineType(types: !6678)
!6678 = !{!37, !697, !6574, !37}
!6679 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb", scope: !698, file: !694, line: 623, baseType: !869, size: 64, offset: 192)
!6680 = !DIDerivedType(tag: DW_TAG_member, name: "i_mapping", scope: !698, file: !694, line: 624, baseType: !692, size: 64, offset: 256)
!6681 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino", scope: !698, file: !694, line: 631, baseType: !372, size: 64, offset: 320)
!6682 = !DIDerivedType(tag: DW_TAG_member, scope: !698, file: !694, line: 639, baseType: !6683, size: 32, offset: 384)
!6683 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !698, file: !694, line: 639, size: 32, elements: !6684)
!6684 = !{!6685, !6686}
!6685 = !DIDerivedType(tag: DW_TAG_member, name: "i_nlink", scope: !6683, file: !694, line: 640, baseType: !5213, size: 32)
!6686 = !DIDerivedType(tag: DW_TAG_member, name: "__i_nlink", scope: !6683, file: !694, line: 641, baseType: !7, size: 32)
!6687 = !DIDerivedType(tag: DW_TAG_member, name: "i_rdev", scope: !698, file: !694, line: 643, baseType: !874, size: 32, offset: 416)
!6688 = !DIDerivedType(tag: DW_TAG_member, name: "i_size", scope: !698, file: !694, line: 644, baseType: !879, size: 64, offset: 448)
!6689 = !DIDerivedType(tag: DW_TAG_member, name: "i_atime", scope: !698, file: !694, line: 645, baseType: !6622, size: 128, offset: 512)
!6690 = !DIDerivedType(tag: DW_TAG_member, name: "i_mtime", scope: !698, file: !694, line: 646, baseType: !6622, size: 128, offset: 640)
!6691 = !DIDerivedType(tag: DW_TAG_member, name: "i_ctime", scope: !698, file: !694, line: 647, baseType: !6622, size: 128, offset: 768)
!6692 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock", scope: !698, file: !694, line: 648, baseType: !784, offset: 896)
!6693 = !DIDerivedType(tag: DW_TAG_member, name: "i_bytes", scope: !698, file: !694, line: 649, baseType: !532, size: 16, offset: 896)
!6694 = !DIDerivedType(tag: DW_TAG_member, name: "i_blkbits", scope: !698, file: !694, line: 650, baseType: !1451, size: 8, offset: 912)
!6695 = !DIDerivedType(tag: DW_TAG_member, name: "i_write_hint", scope: !698, file: !694, line: 651, baseType: !1451, size: 8, offset: 920)
!6696 = !DIDerivedType(tag: DW_TAG_member, name: "i_blocks", scope: !698, file: !694, line: 652, baseType: !6375, size: 64, offset: 960)
!6697 = !DIDerivedType(tag: DW_TAG_member, name: "i_state", scope: !698, file: !694, line: 659, baseType: !372, size: 64, offset: 1024)
!6698 = !DIDerivedType(tag: DW_TAG_member, name: "i_rwsem", scope: !698, file: !694, line: 660, baseType: !1216, size: 256, offset: 1088)
!6699 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_when", scope: !698, file: !694, line: 662, baseType: !372, size: 64, offset: 1344)
!6700 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_time_when", scope: !698, file: !694, line: 663, baseType: !372, size: 64, offset: 1408)
!6701 = !DIDerivedType(tag: DW_TAG_member, name: "i_hash", scope: !698, file: !694, line: 665, baseType: !336, size: 128, offset: 1472)
!6702 = !DIDerivedType(tag: DW_TAG_member, name: "i_io_list", scope: !698, file: !694, line: 666, baseType: !344, size: 128, offset: 1600)
!6703 = !DIDerivedType(tag: DW_TAG_member, name: "i_lru", scope: !698, file: !694, line: 675, baseType: !344, size: 128, offset: 1728)
!6704 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb_list", scope: !698, file: !694, line: 676, baseType: !344, size: 128, offset: 1856)
!6705 = !DIDerivedType(tag: DW_TAG_member, name: "i_wb_list", scope: !698, file: !694, line: 677, baseType: !344, size: 128, offset: 1984)
!6706 = !DIDerivedType(tag: DW_TAG_member, scope: !698, file: !694, line: 678, baseType: !6707, size: 128, offset: 2112)
!6707 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !698, file: !694, line: 678, size: 128, elements: !6708)
!6708 = !{!6709, !6710}
!6709 = !DIDerivedType(tag: DW_TAG_member, name: "i_dentry", scope: !6707, file: !694, line: 679, baseType: !911, size: 64)
!6710 = !DIDerivedType(tag: DW_TAG_member, name: "i_rcu", scope: !6707, file: !694, line: 680, baseType: !359, size: 128, align: 64)
!6711 = !DIDerivedType(tag: DW_TAG_member, name: "i_version", scope: !698, file: !694, line: 682, baseType: !433, size: 64, offset: 2240)
!6712 = !DIDerivedType(tag: DW_TAG_member, name: "i_sequence", scope: !698, file: !694, line: 683, baseType: !433, size: 64, offset: 2304)
!6713 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !698, file: !694, line: 684, baseType: !443, size: 32, offset: 2368)
!6714 = !DIDerivedType(tag: DW_TAG_member, name: "i_dio_count", scope: !698, file: !694, line: 685, baseType: !443, size: 32, offset: 2400)
!6715 = !DIDerivedType(tag: DW_TAG_member, name: "i_writecount", scope: !698, file: !694, line: 686, baseType: !443, size: 32, offset: 2432)
!6716 = !DIDerivedType(tag: DW_TAG_member, name: "i_readcount", scope: !698, file: !694, line: 688, baseType: !443, size: 32, offset: 2464)
!6717 = !DIDerivedType(tag: DW_TAG_member, scope: !698, file: !694, line: 690, baseType: !6718, size: 64, offset: 2496)
!6718 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !698, file: !694, line: 690, size: 64, elements: !6719)
!6719 = !{!6720, !6721}
!6720 = !DIDerivedType(tag: DW_TAG_member, name: "i_fop", scope: !6718, file: !694, line: 691, baseType: !1055, size: 64)
!6721 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !6718, file: !694, line: 692, baseType: !936, size: 64)
!6722 = !DIDerivedType(tag: DW_TAG_member, name: "i_flctx", scope: !698, file: !694, line: 694, baseType: !6723, size: 64, offset: 2560)
!6723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6724, size: 64)
!6724 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_context", file: !694, line: 1100, size: 384, elements: !6725)
!6725 = !{!6726, !6727, !6728, !6729}
!6726 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lock", scope: !6724, file: !694, line: 1101, baseType: !784)
!6727 = !DIDerivedType(tag: DW_TAG_member, name: "flc_flock", scope: !6724, file: !694, line: 1102, baseType: !344, size: 128)
!6728 = !DIDerivedType(tag: DW_TAG_member, name: "flc_posix", scope: !6724, file: !694, line: 1103, baseType: !344, size: 128, offset: 128)
!6729 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lease", scope: !6724, file: !694, line: 1104, baseType: !344, size: 128, offset: 256)
!6730 = !DIDerivedType(tag: DW_TAG_member, name: "i_data", scope: !698, file: !694, line: 695, baseType: !693, size: 1216, align: 64, offset: 2624)
!6731 = !DIDerivedType(tag: DW_TAG_member, name: "i_devices", scope: !698, file: !694, line: 696, baseType: !344, size: 128, offset: 3840)
!6732 = !DIDerivedType(tag: DW_TAG_member, scope: !698, file: !694, line: 697, baseType: !6733, size: 64, offset: 3968)
!6733 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !698, file: !694, line: 697, size: 64, elements: !6734)
!6734 = !{!6735, !6736, !6737, !6748, !6749}
!6735 = !DIDerivedType(tag: DW_TAG_member, name: "i_pipe", scope: !6733, file: !694, line: 698, baseType: !5679, size: 64)
!6736 = !DIDerivedType(tag: DW_TAG_member, name: "i_bdev", scope: !6733, file: !694, line: 699, baseType: !4797, size: 64)
!6737 = !DIDerivedType(tag: DW_TAG_member, name: "i_cdev", scope: !6733, file: !694, line: 700, baseType: !6738, size: 64)
!6738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6739, size: 64)
!6739 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cdev", file: !6740, line: 14, size: 832, elements: !6741)
!6740 = !DIFile(filename: "./include/linux/cdev.h", directory: "/home/lizy2001/genbc/linux")
!6741 = !{!6742, !6743, !6744, !6745, !6746, !6747}
!6742 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !6739, file: !6740, line: 15, baseType: !3944, size: 512)
!6743 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !6739, file: !6740, line: 16, baseType: !906, size: 64, offset: 512)
!6744 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !6739, file: !6740, line: 17, baseType: !1055, size: 64, offset: 576)
!6745 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !6739, file: !6740, line: 18, baseType: !344, size: 128, offset: 640)
!6746 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !6739, file: !6740, line: 19, baseType: !874, size: 32, offset: 768)
!6747 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !6739, file: !6740, line: 20, baseType: !7, size: 32, offset: 800)
!6748 = !DIDerivedType(tag: DW_TAG_member, name: "i_link", scope: !6733, file: !694, line: 701, baseType: !632, size: 64)
!6749 = !DIDerivedType(tag: DW_TAG_member, name: "i_dir_seq", scope: !6733, file: !694, line: 702, baseType: !7, size: 32)
!6750 = !DIDerivedType(tag: DW_TAG_member, name: "i_generation", scope: !698, file: !694, line: 705, baseType: !523, size: 32, offset: 4032)
!6751 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_mask", scope: !698, file: !694, line: 708, baseType: !523, size: 32, offset: 4064)
!6752 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_marks", scope: !698, file: !694, line: 709, baseType: !6480, size: 64, offset: 4096)
!6753 = !DIDerivedType(tag: DW_TAG_member, name: "i_private", scope: !698, file: !694, line: 720, baseType: !625, size: 64, offset: 4160)
!6754 = !DIDerivedType(tag: DW_TAG_member, name: "i_pages", scope: !693, file: !694, line: 453, baseType: !1607, size: 128, offset: 64)
!6755 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !693, file: !694, line: 454, baseType: !1612, size: 32, offset: 192)
!6756 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_writable", scope: !693, file: !694, line: 455, baseType: !443, size: 32, offset: 224)
!6757 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap", scope: !693, file: !694, line: 460, baseType: !1441, size: 128, offset: 256)
!6758 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_rwsem", scope: !693, file: !694, line: 461, baseType: !1216, size: 256, offset: 384)
!6759 = !DIDerivedType(tag: DW_TAG_member, name: "nrpages", scope: !693, file: !694, line: 462, baseType: !372, size: 64, offset: 640)
!6760 = !DIDerivedType(tag: DW_TAG_member, name: "nrexceptional", scope: !693, file: !694, line: 463, baseType: !372, size: 64, offset: 704)
!6761 = !DIDerivedType(tag: DW_TAG_member, name: "writeback_index", scope: !693, file: !694, line: 464, baseType: !372, size: 64, offset: 768)
!6762 = !DIDerivedType(tag: DW_TAG_member, name: "a_ops", scope: !693, file: !694, line: 465, baseType: !6763, size: 64, offset: 832)
!6763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6764, size: 64)
!6764 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6765)
!6765 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space_operations", file: !694, line: 367, size: 1408, elements: !6766)
!6766 = !{!6767, !6771, !6775, !6779, !6783, !6787, !6799, !6803, !6807, !6811, !6815, !6819, !6823, !6824, !6828, !6834, !6835, !6836, !6840, !6845, !6849, !6856}
!6767 = !DIDerivedType(tag: DW_TAG_member, name: "writepage", scope: !6765, file: !694, line: 368, baseType: !6768, size: 64)
!6768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6769, size: 64)
!6769 = !DISubroutineType(types: !6770)
!6770 = !{!37, !679, !948}
!6771 = !DIDerivedType(tag: DW_TAG_member, name: "readpage", scope: !6765, file: !694, line: 369, baseType: !6772, size: 64, offset: 64)
!6772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6773, size: 64)
!6773 = !DISubroutineType(types: !6774)
!6774 = !{!37, !1064, !679}
!6775 = !DIDerivedType(tag: DW_TAG_member, name: "writepages", scope: !6765, file: !694, line: 372, baseType: !6776, size: 64, offset: 128)
!6776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6777, size: 64)
!6777 = !DISubroutineType(types: !6778)
!6778 = !{!37, !692, !948}
!6779 = !DIDerivedType(tag: DW_TAG_member, name: "set_page_dirty", scope: !6765, file: !694, line: 375, baseType: !6780, size: 64, offset: 192)
!6780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6781, size: 64)
!6781 = !DISubroutineType(types: !6782)
!6782 = !{!37, !679}
!6783 = !DIDerivedType(tag: DW_TAG_member, name: "readpages", scope: !6765, file: !694, line: 381, baseType: !6784, size: 64, offset: 256)
!6784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6785, size: 64)
!6785 = !DISubroutineType(types: !6786)
!6786 = !{!37, !1064, !692, !347, !7}
!6787 = !DIDerivedType(tag: DW_TAG_member, name: "readahead", scope: !6765, file: !694, line: 383, baseType: !6788, size: 64, offset: 320)
!6788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6789, size: 64)
!6789 = !DISubroutineType(types: !6790)
!6790 = !{null, !6791}
!6791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6792, size: 64)
!6792 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "readahead_control", file: !1101, line: 795, size: 256, elements: !6793)
!6793 = !{!6794, !6795, !6796, !6797, !6798}
!6794 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !6792, file: !1101, line: 796, baseType: !1064, size: 64)
!6795 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !6792, file: !1101, line: 797, baseType: !692, size: 64, offset: 64)
!6796 = !DIDerivedType(tag: DW_TAG_member, name: "_index", scope: !6792, file: !1101, line: 799, baseType: !372, size: 64, offset: 128)
!6797 = !DIDerivedType(tag: DW_TAG_member, name: "_nr_pages", scope: !6792, file: !1101, line: 800, baseType: !7, size: 32, offset: 192)
!6798 = !DIDerivedType(tag: DW_TAG_member, name: "_batch_count", scope: !6792, file: !1101, line: 801, baseType: !7, size: 32, offset: 224)
!6799 = !DIDerivedType(tag: DW_TAG_member, name: "write_begin", scope: !6765, file: !694, line: 385, baseType: !6800, size: 64, offset: 384)
!6800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6801, size: 64)
!6801 = !DISubroutineType(types: !6802)
!6802 = !{!37, !1064, !692, !879, !7, !7, !5759, !3617}
!6803 = !DIDerivedType(tag: DW_TAG_member, name: "write_end", scope: !6765, file: !694, line: 388, baseType: !6804, size: 64, offset: 448)
!6804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6805, size: 64)
!6805 = !DISubroutineType(types: !6806)
!6806 = !{!37, !1064, !692, !879, !7, !7, !679, !625}
!6807 = !DIDerivedType(tag: DW_TAG_member, name: "bmap", scope: !6765, file: !694, line: 393, baseType: !6808, size: 64, offset: 512)
!6808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6809, size: 64)
!6809 = !DISubroutineType(types: !6810)
!6810 = !{!3912, !692, !3912}
!6811 = !DIDerivedType(tag: DW_TAG_member, name: "invalidatepage", scope: !6765, file: !694, line: 394, baseType: !6812, size: 64, offset: 576)
!6812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6813, size: 64)
!6813 = !DISubroutineType(types: !6814)
!6814 = !{null, !679, !7, !7}
!6815 = !DIDerivedType(tag: DW_TAG_member, name: "releasepage", scope: !6765, file: !694, line: 395, baseType: !6816, size: 64, offset: 640)
!6816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6817, size: 64)
!6817 = !DISubroutineType(types: !6818)
!6818 = !{!37, !679, !1612}
!6819 = !DIDerivedType(tag: DW_TAG_member, name: "freepage", scope: !6765, file: !694, line: 396, baseType: !6820, size: 64, offset: 704)
!6820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6821, size: 64)
!6821 = !DISubroutineType(types: !6822)
!6822 = !{null, !679}
!6823 = !DIDerivedType(tag: DW_TAG_member, name: "direct_IO", scope: !6765, file: !694, line: 397, baseType: !1077, size: 64, offset: 768)
!6824 = !DIDerivedType(tag: DW_TAG_member, name: "migratepage", scope: !6765, file: !694, line: 402, baseType: !6825, size: 64, offset: 832)
!6825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6826, size: 64)
!6826 = !DISubroutineType(types: !6827)
!6827 = !{!37, !692, !679, !679, !11}
!6828 = !DIDerivedType(tag: DW_TAG_member, name: "isolate_page", scope: !6765, file: !694, line: 404, baseType: !6829, size: 64, offset: 896)
!6829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6830, size: 64)
!6830 = !DISubroutineType(types: !6831)
!6831 = !{!595, !679, !6832}
!6832 = !DIDerivedType(tag: DW_TAG_typedef, name: "isolate_mode_t", file: !6833, line: 305, baseType: !7)
!6833 = !DIFile(filename: "./include/linux/mmzone.h", directory: "/home/lizy2001/genbc/linux")
!6834 = !DIDerivedType(tag: DW_TAG_member, name: "putback_page", scope: !6765, file: !694, line: 405, baseType: !6820, size: 64, offset: 960)
!6835 = !DIDerivedType(tag: DW_TAG_member, name: "launder_page", scope: !6765, file: !694, line: 406, baseType: !6780, size: 64, offset: 1024)
!6836 = !DIDerivedType(tag: DW_TAG_member, name: "is_partially_uptodate", scope: !6765, file: !694, line: 407, baseType: !6837, size: 64, offset: 1088)
!6837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6838, size: 64)
!6838 = !DISubroutineType(types: !6839)
!6839 = !{!37, !679, !372, !372}
!6840 = !DIDerivedType(tag: DW_TAG_member, name: "is_dirty_writeback", scope: !6765, file: !694, line: 409, baseType: !6841, size: 64, offset: 1152)
!6841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6842, size: 64)
!6842 = !DISubroutineType(types: !6843)
!6843 = !{null, !679, !6844, !6844}
!6844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !595, size: 64)
!6845 = !DIDerivedType(tag: DW_TAG_member, name: "error_remove_page", scope: !6765, file: !694, line: 410, baseType: !6846, size: 64, offset: 1216)
!6846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6847, size: 64)
!6847 = !DISubroutineType(types: !6848)
!6848 = !{!37, !692, !679}
!6849 = !DIDerivedType(tag: DW_TAG_member, name: "swap_activate", scope: !6765, file: !694, line: 413, baseType: !6850, size: 64, offset: 1280)
!6850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6851, size: 64)
!6851 = !DISubroutineType(types: !6852)
!6852 = !{!37, !6853, !1064, !6855}
!6853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6854, size: 64)
!6854 = !DICompositeType(tag: DW_TAG_structure_type, name: "swap_info_struct", file: !694, line: 61, flags: DIFlagFwdDecl)
!6855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3912, size: 64)
!6856 = !DIDerivedType(tag: DW_TAG_member, name: "swap_deactivate", scope: !6765, file: !694, line: 415, baseType: !6857, size: 64, offset: 1344)
!6857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6858, size: 64)
!6858 = !DISubroutineType(types: !6859)
!6859 = !{null, !1064}
!6860 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !693, file: !694, line: 466, baseType: !372, size: 64, offset: 896)
!6861 = !DIDerivedType(tag: DW_TAG_member, name: "wb_err", scope: !693, file: !694, line: 467, baseType: !6180, size: 32, offset: 960)
!6862 = !DIDerivedType(tag: DW_TAG_member, name: "private_lock", scope: !693, file: !694, line: 468, baseType: !784, offset: 992)
!6863 = !DIDerivedType(tag: DW_TAG_member, name: "private_list", scope: !693, file: !694, line: 469, baseType: !344, size: 128, offset: 1024)
!6864 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !693, file: !694, line: 470, baseType: !625, size: 64, offset: 1152)
!6865 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !688, file: !681, line: 87, baseType: !372, size: 64, offset: 192)
!6866 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !688, file: !681, line: 94, baseType: !372, size: 64, offset: 256)
!6867 = !DIDerivedType(tag: DW_TAG_member, scope: !685, file: !681, line: 96, baseType: !6868, size: 64)
!6868 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !685, file: !681, line: 96, size: 64, elements: !6869)
!6869 = !{!6870}
!6870 = !DIDerivedType(tag: DW_TAG_member, name: "dma_addr", scope: !6868, file: !681, line: 101, baseType: !6871, size: 64)
!6871 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_addr_t", file: !337, line: 143, baseType: !391)
!6872 = !DIDerivedType(tag: DW_TAG_member, scope: !685, file: !681, line: 103, baseType: !6873, size: 320)
!6873 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !685, file: !681, line: 103, size: 320, elements: !6874)
!6874 = !{!6875, !6885, !6886, !6887}
!6875 = !DIDerivedType(tag: DW_TAG_member, scope: !6873, file: !681, line: 104, baseType: !6876, size: 128)
!6876 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6873, file: !681, line: 104, size: 128, elements: !6877)
!6877 = !{!6878, !6879}
!6878 = !DIDerivedType(tag: DW_TAG_member, name: "slab_list", scope: !6876, file: !681, line: 105, baseType: !344, size: 128)
!6879 = !DIDerivedType(tag: DW_TAG_member, scope: !6876, file: !681, line: 106, baseType: !6880, size: 128)
!6880 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6876, file: !681, line: 106, size: 128, elements: !6881)
!6881 = !{!6882, !6883, !6884}
!6882 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6880, file: !681, line: 107, baseType: !679, size: 64)
!6883 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !6880, file: !681, line: 109, baseType: !37, size: 32, offset: 64)
!6884 = !DIDerivedType(tag: DW_TAG_member, name: "pobjects", scope: !6880, file: !681, line: 110, baseType: !37, size: 32, offset: 96)
!6885 = !DIDerivedType(tag: DW_TAG_member, name: "slab_cache", scope: !6873, file: !681, line: 117, baseType: !1620, size: 64, offset: 128)
!6886 = !DIDerivedType(tag: DW_TAG_member, name: "freelist", scope: !6873, file: !681, line: 119, baseType: !625, size: 64, offset: 192)
!6887 = !DIDerivedType(tag: DW_TAG_member, scope: !6873, file: !681, line: 120, baseType: !6888, size: 64, offset: 256)
!6888 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6873, file: !681, line: 120, size: 64, elements: !6889)
!6889 = !{!6890, !6891, !6892}
!6890 = !DIDerivedType(tag: DW_TAG_member, name: "s_mem", scope: !6888, file: !681, line: 121, baseType: !625, size: 64)
!6891 = !DIDerivedType(tag: DW_TAG_member, name: "counters", scope: !6888, file: !681, line: 122, baseType: !372, size: 64)
!6892 = !DIDerivedType(tag: DW_TAG_member, scope: !6888, file: !681, line: 123, baseType: !6893, size: 32)
!6893 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6888, file: !681, line: 123, size: 32, elements: !6894)
!6894 = !{!6895, !6896, !6897}
!6895 = !DIDerivedType(tag: DW_TAG_member, name: "inuse", scope: !6893, file: !681, line: 124, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!6896 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !6893, file: !681, line: 125, baseType: !7, size: 15, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!6897 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !6893, file: !681, line: 126, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!6898 = !DIDerivedType(tag: DW_TAG_member, scope: !685, file: !681, line: 130, baseType: !6899, size: 192)
!6899 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !685, file: !681, line: 130, size: 192, elements: !6900)
!6900 = !{!6901, !6902, !6903, !6904, !6905}
!6901 = !DIDerivedType(tag: DW_TAG_member, name: "compound_head", scope: !6899, file: !681, line: 131, baseType: !372, size: 64)
!6902 = !DIDerivedType(tag: DW_TAG_member, name: "compound_dtor", scope: !6899, file: !681, line: 134, baseType: !549, size: 8, offset: 64)
!6903 = !DIDerivedType(tag: DW_TAG_member, name: "compound_order", scope: !6899, file: !681, line: 135, baseType: !549, size: 8, offset: 72)
!6904 = !DIDerivedType(tag: DW_TAG_member, name: "compound_mapcount", scope: !6899, file: !681, line: 136, baseType: !443, size: 32, offset: 96)
!6905 = !DIDerivedType(tag: DW_TAG_member, name: "compound_nr", scope: !6899, file: !681, line: 137, baseType: !7, size: 32, offset: 128)
!6906 = !DIDerivedType(tag: DW_TAG_member, scope: !685, file: !681, line: 139, baseType: !6907, size: 256)
!6907 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !685, file: !681, line: 139, size: 256, elements: !6908)
!6908 = !{!6909, !6910, !6911}
!6909 = !DIDerivedType(tag: DW_TAG_member, name: "_compound_pad_1", scope: !6907, file: !681, line: 140, baseType: !372, size: 64)
!6910 = !DIDerivedType(tag: DW_TAG_member, name: "hpage_pinned_refcount", scope: !6907, file: !681, line: 141, baseType: !443, size: 32, offset: 64)
!6911 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_list", scope: !6907, file: !681, line: 143, baseType: !344, size: 128, offset: 128)
!6912 = !DIDerivedType(tag: DW_TAG_member, scope: !685, file: !681, line: 145, baseType: !6913, size: 256)
!6913 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !685, file: !681, line: 145, size: 256, elements: !6914)
!6914 = !{!6915, !6916, !6917, !6918, !6923}
!6915 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_1", scope: !6913, file: !681, line: 146, baseType: !372, size: 64)
!6916 = !DIDerivedType(tag: DW_TAG_member, name: "pmd_huge_pte", scope: !6913, file: !681, line: 147, baseType: !4237, size: 64, offset: 64)
!6917 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_2", scope: !6913, file: !681, line: 148, baseType: !372, size: 64, offset: 128)
!6918 = !DIDerivedType(tag: DW_TAG_member, scope: !6913, file: !681, line: 149, baseType: !6919, size: 64, offset: 192)
!6919 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6913, file: !681, line: 149, size: 64, elements: !6920)
!6920 = !{!6921, !6922}
!6921 = !DIDerivedType(tag: DW_TAG_member, name: "pt_mm", scope: !6919, file: !681, line: 150, baseType: !1179, size: 64)
!6922 = !DIDerivedType(tag: DW_TAG_member, name: "pt_frag_refcount", scope: !6919, file: !681, line: 151, baseType: !443, size: 32)
!6923 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !6913, file: !681, line: 156, baseType: !784, offset: 256)
!6924 = !DIDerivedType(tag: DW_TAG_member, scope: !685, file: !681, line: 159, baseType: !6925, size: 128)
!6925 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !685, file: !681, line: 159, size: 128, elements: !6926)
!6926 = !{!6927, !6978}
!6927 = !DIDerivedType(tag: DW_TAG_member, name: "pgmap", scope: !6925, file: !681, line: 161, baseType: !6928, size: 64)
!6928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6929, size: 64)
!6929 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap", file: !6930, line: 110, size: 1152, elements: !6931)
!6930 = !DIFile(filename: "./include/linux/memremap.h", directory: "/home/lizy2001/genbc/linux")
!6931 = !{!6932, !6942, !6943, !6944, !6945, !6952, !6953, !6965, !6966, !6967}
!6932 = !DIDerivedType(tag: DW_TAG_member, name: "altmap", scope: !6929, file: !6930, line: 111, baseType: !6933, size: 384)
!6933 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmem_altmap", file: !6930, line: 19, size: 384, elements: !6934)
!6934 = !{!6935, !6937, !6938, !6939, !6940, !6941}
!6935 = !DIDerivedType(tag: DW_TAG_member, name: "base_pfn", scope: !6933, file: !6930, line: 20, baseType: !6936, size: 64)
!6936 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !372)
!6937 = !DIDerivedType(tag: DW_TAG_member, name: "end_pfn", scope: !6933, file: !6930, line: 21, baseType: !6936, size: 64, offset: 64)
!6938 = !DIDerivedType(tag: DW_TAG_member, name: "reserve", scope: !6933, file: !6930, line: 22, baseType: !6936, size: 64, offset: 128)
!6939 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !6933, file: !6930, line: 23, baseType: !372, size: 64, offset: 192)
!6940 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !6933, file: !6930, line: 24, baseType: !372, size: 64, offset: 256)
!6941 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !6933, file: !6930, line: 25, baseType: !372, size: 64, offset: 320)
!6942 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !6929, file: !6930, line: 112, baseType: !3933, size: 64, offset: 384)
!6943 = !DIDerivedType(tag: DW_TAG_member, name: "internal_ref", scope: !6929, file: !6930, line: 113, baseType: !3919, size: 128, offset: 448)
!6944 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !6929, file: !6930, line: 114, baseType: !1843, size: 192, offset: 576)
!6945 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !6929, file: !6930, line: 115, baseType: !6946, size: 32, offset: 768)
!6946 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "memory_type", file: !6930, line: 59, baseType: !7, size: 32, elements: !6947)
!6947 = !{!6948, !6949, !6950, !6951}
!6948 = !DIEnumerator(name: "MEMORY_DEVICE_PRIVATE", value: 1, isUnsigned: true)
!6949 = !DIEnumerator(name: "MEMORY_DEVICE_FS_DAX", value: 2, isUnsigned: true)
!6950 = !DIEnumerator(name: "MEMORY_DEVICE_GENERIC", value: 3, isUnsigned: true)
!6951 = !DIEnumerator(name: "MEMORY_DEVICE_PCI_P2PDMA", value: 4, isUnsigned: true)
!6952 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6929, file: !6930, line: 116, baseType: !7, size: 32, offset: 800)
!6953 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !6929, file: !6930, line: 117, baseType: !6954, size: 64, offset: 832)
!6954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6955, size: 64)
!6955 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6956)
!6956 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap_ops", file: !6930, line: 67, size: 256, elements: !6957)
!6957 = !{!6958, !6959, !6963, !6964}
!6958 = !DIDerivedType(tag: DW_TAG_member, name: "page_free", scope: !6956, file: !6930, line: 73, baseType: !6820, size: 64)
!6959 = !DIDerivedType(tag: DW_TAG_member, name: "kill", scope: !6956, file: !6930, line: 78, baseType: !6960, size: 64, offset: 64)
!6960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6961, size: 64)
!6961 = !DISubroutineType(types: !6962)
!6962 = !{null, !6928}
!6963 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !6956, file: !6930, line: 83, baseType: !6960, size: 64, offset: 128)
!6964 = !DIDerivedType(tag: DW_TAG_member, name: "migrate_to_ram", scope: !6956, file: !6930, line: 89, baseType: !4198, size: 64, offset: 192)
!6965 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !6929, file: !6930, line: 118, baseType: !625, size: 64, offset: 896)
!6966 = !DIDerivedType(tag: DW_TAG_member, name: "nr_range", scope: !6929, file: !6930, line: 119, baseType: !37, size: 32, offset: 960)
!6967 = !DIDerivedType(tag: DW_TAG_member, scope: !6929, file: !6930, line: 120, baseType: !6968, size: 128, offset: 1024)
!6968 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6929, file: !6930, line: 120, size: 128, elements: !6969)
!6969 = !{!6970, !6976}
!6970 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !6968, file: !6930, line: 121, baseType: !6971, size: 128)
!6971 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "range", file: !6972, line: 6, size: 128, elements: !6973)
!6972 = !DIFile(filename: "./include/linux/range.h", directory: "/home/lizy2001/genbc/linux")
!6973 = !{!6974, !6975}
!6974 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !6971, file: !6972, line: 7, baseType: !391, size: 64)
!6975 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !6971, file: !6972, line: 8, baseType: !391, size: 64, offset: 64)
!6976 = !DIDerivedType(tag: DW_TAG_member, name: "ranges", scope: !6968, file: !6930, line: 122, baseType: !6977)
!6977 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6971, elements: !2009)
!6978 = !DIDerivedType(tag: DW_TAG_member, name: "zone_device_data", scope: !6925, file: !681, line: 162, baseType: !625, size: 64, offset: 64)
!6979 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !685, file: !681, line: 176, baseType: !359, size: 128, align: 64)
!6980 = !DIDerivedType(tag: DW_TAG_member, scope: !680, file: !681, line: 179, baseType: !6981, size: 32, offset: 384)
!6981 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !680, file: !681, line: 179, size: 32, elements: !6982)
!6982 = !{!6983, !6984, !6985, !6986}
!6983 = !DIDerivedType(tag: DW_TAG_member, name: "_mapcount", scope: !6981, file: !681, line: 184, baseType: !443, size: 32)
!6984 = !DIDerivedType(tag: DW_TAG_member, name: "page_type", scope: !6981, file: !681, line: 192, baseType: !7, size: 32)
!6985 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !6981, file: !681, line: 194, baseType: !7, size: 32)
!6986 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !6981, file: !681, line: 195, baseType: !37, size: 32)
!6987 = !DIDerivedType(tag: DW_TAG_member, name: "_refcount", scope: !680, file: !681, line: 199, baseType: !443, size: 32, offset: 416)
!6988 = !DIDerivedType(tag: DW_TAG_member, name: "bv_len", scope: !675, file: !676, line: 33, baseType: !7, size: 32, offset: 64)
!6989 = !DIDerivedType(tag: DW_TAG_member, name: "bv_offset", scope: !675, file: !676, line: 34, baseType: !7, size: 32, offset: 96)
!6990 = !DIDerivedType(tag: DW_TAG_member, name: "pipe", scope: !655, file: !645, line: 42, baseType: !5679, size: 64)
!6991 = !DIDerivedType(tag: DW_TAG_member, scope: !644, file: !645, line: 44, baseType: !6992, size: 64, offset: 256)
!6992 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !644, file: !645, line: 44, size: 64, elements: !6993)
!6993 = !{!6994, !6995}
!6994 = !DIDerivedType(tag: DW_TAG_member, name: "nr_segs", scope: !6992, file: !645, line: 45, baseType: !372, size: 64)
!6995 = !DIDerivedType(tag: DW_TAG_member, scope: !6992, file: !645, line: 46, baseType: !6996, size: 64)
!6996 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6992, file: !645, line: 46, size: 64, elements: !6997)
!6997 = !{!6998, !6999}
!6998 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !6996, file: !645, line: 47, baseType: !7, size: 32)
!6999 = !DIDerivedType(tag: DW_TAG_member, name: "start_head", scope: !6996, file: !645, line: 48, baseType: !7, size: 32, offset: 32)
!7000 = !DIDerivedType(tag: DW_TAG_member, scope: !639, file: !575, line: 60, baseType: !7001, size: 64, offset: 448)
!7001 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !639, file: !575, line: 60, size: 64, elements: !7002)
!7002 = !{!7003, !7004}
!7003 = !DIDerivedType(tag: DW_TAG_member, name: "msg_control", scope: !7001, file: !575, line: 61, baseType: !625, size: 64)
!7004 = !DIDerivedType(tag: DW_TAG_member, name: "msg_control_user", scope: !7001, file: !575, line: 62, baseType: !625, size: 64)
!7005 = !DIDerivedType(tag: DW_TAG_member, name: "msg_control_is_user", scope: !639, file: !575, line: 64, baseType: !595, size: 1, offset: 512, flags: DIFlagBitField, extraData: i64 512)
!7006 = !DIDerivedType(tag: DW_TAG_member, name: "msg_controllen", scope: !639, file: !575, line: 65, baseType: !650, size: 64, offset: 576)
!7007 = !DIDerivedType(tag: DW_TAG_member, name: "msg_flags", scope: !639, file: !575, line: 66, baseType: !7, size: 32, offset: 640)
!7008 = !DIDerivedType(tag: DW_TAG_member, name: "msg_iocb", scope: !639, file: !575, line: 67, baseType: !1080, size: 64, offset: 704)
!7009 = !DIDerivedType(tag: DW_TAG_member, name: "recvmsg", scope: !562, file: !507, line: 1159, baseType: !7010, size: 64, offset: 832)
!7010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7011, size: 64)
!7011 = !DISubroutineType(types: !7012)
!7012 = !{!37, !505, !638, !649, !37, !37, !594}
!7013 = !DIDerivedType(tag: DW_TAG_member, name: "sendpage", scope: !562, file: !507, line: 1162, baseType: !7014, size: 64, offset: 896)
!7014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7015, size: 64)
!7015 = !DISubroutineType(types: !7016)
!7016 = !{!37, !505, !679, !37, !649, !37}
!7017 = !DIDerivedType(tag: DW_TAG_member, name: "bind", scope: !562, file: !507, line: 1164, baseType: !570, size: 64, offset: 960)
!7018 = !DIDerivedType(tag: DW_TAG_member, name: "bind_add", scope: !562, file: !507, line: 1166, baseType: !570, size: 64, offset: 1024)
!7019 = !DIDerivedType(tag: DW_TAG_member, name: "backlog_rcv", scope: !562, file: !507, line: 1169, baseType: !7020, size: 64, offset: 1088)
!7020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7021, size: 64)
!7021 = !DISubroutineType(types: !7022)
!7022 = !{!37, !505, !475}
!7023 = !DIDerivedType(tag: DW_TAG_member, name: "release_cb", scope: !562, file: !507, line: 1172, baseType: !606, size: 64, offset: 1152)
!7024 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !562, file: !507, line: 1175, baseType: !602, size: 64, offset: 1216)
!7025 = !DIDerivedType(tag: DW_TAG_member, name: "unhash", scope: !562, file: !507, line: 1176, baseType: !606, size: 64, offset: 1280)
!7026 = !DIDerivedType(tag: DW_TAG_member, name: "rehash", scope: !562, file: !507, line: 1177, baseType: !606, size: 64, offset: 1344)
!7027 = !DIDerivedType(tag: DW_TAG_member, name: "get_port", scope: !562, file: !507, line: 1178, baseType: !7028, size: 64, offset: 1408)
!7028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7029, size: 64)
!7029 = !DISubroutineType(types: !7030)
!7030 = !{!37, !505, !532}
!7031 = !DIDerivedType(tag: DW_TAG_member, name: "inuse_idx", scope: !562, file: !507, line: 1182, baseType: !7, size: 32, offset: 1472)
!7032 = !DIDerivedType(tag: DW_TAG_member, name: "stream_memory_free", scope: !562, file: !507, line: 1185, baseType: !7033, size: 64, offset: 1536)
!7033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7034, size: 64)
!7034 = !DISubroutineType(types: !7035)
!7035 = !{!595, !7036, !37}
!7036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7037, size: 64)
!7037 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !506)
!7038 = !DIDerivedType(tag: DW_TAG_member, name: "stream_memory_read", scope: !562, file: !507, line: 1186, baseType: !7039, size: 64, offset: 1600)
!7039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7040, size: 64)
!7040 = !DISubroutineType(types: !7041)
!7041 = !{!595, !7036}
!7042 = !DIDerivedType(tag: DW_TAG_member, name: "enter_memory_pressure", scope: !562, file: !507, line: 1188, baseType: !606, size: 64, offset: 1664)
!7043 = !DIDerivedType(tag: DW_TAG_member, name: "leave_memory_pressure", scope: !562, file: !507, line: 1189, baseType: !606, size: 64, offset: 1728)
!7044 = !DIDerivedType(tag: DW_TAG_member, name: "memory_allocated", scope: !562, file: !507, line: 1190, baseType: !6509, size: 64, offset: 1792)
!7045 = !DIDerivedType(tag: DW_TAG_member, name: "sockets_allocated", scope: !562, file: !507, line: 1191, baseType: !7046, size: 64, offset: 1856)
!7046 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3000, size: 64)
!7047 = !DIDerivedType(tag: DW_TAG_member, name: "memory_pressure", scope: !562, file: !507, line: 1198, baseType: !2513, size: 64, offset: 1920)
!7048 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_mem", scope: !562, file: !507, line: 1199, baseType: !7049, size: 64, offset: 1984)
!7049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !568, size: 64)
!7050 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_wmem", scope: !562, file: !507, line: 1201, baseType: !594, size: 64, offset: 2048)
!7051 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_rmem", scope: !562, file: !507, line: 1202, baseType: !594, size: 64, offset: 2112)
!7052 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_wmem_offset", scope: !562, file: !507, line: 1203, baseType: !762, size: 32, offset: 2176)
!7053 = !DIDerivedType(tag: DW_TAG_member, name: "sysctl_rmem_offset", scope: !562, file: !507, line: 1204, baseType: !762, size: 32, offset: 2208)
!7054 = !DIDerivedType(tag: DW_TAG_member, name: "max_header", scope: !562, file: !507, line: 1206, baseType: !37, size: 32, offset: 2240)
!7055 = !DIDerivedType(tag: DW_TAG_member, name: "no_autobind", scope: !562, file: !507, line: 1207, baseType: !595, size: 8, offset: 2272)
!7056 = !DIDerivedType(tag: DW_TAG_member, name: "slab", scope: !562, file: !507, line: 1209, baseType: !1620, size: 64, offset: 2304)
!7057 = !DIDerivedType(tag: DW_TAG_member, name: "obj_size", scope: !562, file: !507, line: 1210, baseType: !7, size: 32, offset: 2368)
!7058 = !DIDerivedType(tag: DW_TAG_member, name: "slab_flags", scope: !562, file: !507, line: 1211, baseType: !7059, size: 32, offset: 2400)
!7059 = !DIDerivedType(tag: DW_TAG_typedef, name: "slab_flags_t", file: !337, line: 149, baseType: !7)
!7060 = !DIDerivedType(tag: DW_TAG_member, name: "useroffset", scope: !562, file: !507, line: 1212, baseType: !7, size: 32, offset: 2432)
!7061 = !DIDerivedType(tag: DW_TAG_member, name: "usersize", scope: !562, file: !507, line: 1213, baseType: !7, size: 32, offset: 2464)
!7062 = !DIDerivedType(tag: DW_TAG_member, name: "orphan_count", scope: !562, file: !507, line: 1215, baseType: !7046, size: 64, offset: 2496)
!7063 = !DIDerivedType(tag: DW_TAG_member, name: "rsk_prot", scope: !562, file: !507, line: 1217, baseType: !7064, size: 64, offset: 2560)
!7064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7065, size: 64)
!7065 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "request_sock_ops", file: !7066, line: 27, size: 512, elements: !7067)
!7066 = !DIFile(filename: "./include/net/request_sock.h", directory: "/home/lizy2001/genbc/linux")
!7067 = !{!7068, !7069, !7070, !7071, !7072, !7101, !7105, !7109, !7113}
!7068 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !7065, file: !7066, line: 28, baseType: !37, size: 32)
!7069 = !DIDerivedType(tag: DW_TAG_member, name: "obj_size", scope: !7065, file: !7066, line: 29, baseType: !7, size: 32, offset: 32)
!7070 = !DIDerivedType(tag: DW_TAG_member, name: "slab", scope: !7065, file: !7066, line: 30, baseType: !1620, size: 64, offset: 64)
!7071 = !DIDerivedType(tag: DW_TAG_member, name: "slab_name", scope: !7065, file: !7066, line: 31, baseType: !632, size: 64, offset: 128)
!7072 = !DIDerivedType(tag: DW_TAG_member, name: "rtx_syn_ack", scope: !7065, file: !7066, line: 32, baseType: !7073, size: 64, offset: 192)
!7073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7074, size: 64)
!7074 = !DISubroutineType(types: !7075)
!7075 = !{!37, !7036, !7076}
!7076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7077, size: 64)
!7077 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "request_sock", file: !7066, line: 53, size: 1792, elements: !7078)
!7078 = !{!7079, !7080, !7081, !7082, !7083, !7084, !7085, !7086, !7087, !7090, !7091, !7099, !7100}
!7079 = !DIDerivedType(tag: DW_TAG_member, name: "__req_common", scope: !7077, file: !7066, line: 54, baseType: !510, size: 1088)
!7080 = !DIDerivedType(tag: DW_TAG_member, name: "dl_next", scope: !7077, file: !7066, line: 61, baseType: !7076, size: 64, offset: 1088)
!7081 = !DIDerivedType(tag: DW_TAG_member, name: "mss", scope: !7077, file: !7066, line: 62, baseType: !1092, size: 16, offset: 1152)
!7082 = !DIDerivedType(tag: DW_TAG_member, name: "num_retrans", scope: !7077, file: !7066, line: 63, baseType: !1451, size: 8, offset: 1168)
!7083 = !DIDerivedType(tag: DW_TAG_member, name: "syncookie", scope: !7077, file: !7066, line: 64, baseType: !1451, size: 1, offset: 1176, flags: DIFlagBitField, extraData: i64 1176)
!7084 = !DIDerivedType(tag: DW_TAG_member, name: "num_timeout", scope: !7077, file: !7066, line: 65, baseType: !1451, size: 7, offset: 1177, flags: DIFlagBitField, extraData: i64 1176)
!7085 = !DIDerivedType(tag: DW_TAG_member, name: "ts_recent", scope: !7077, file: !7066, line: 66, baseType: !762, size: 32, offset: 1184)
!7086 = !DIDerivedType(tag: DW_TAG_member, name: "rsk_timer", scope: !7077, file: !7066, line: 67, baseType: !2314, size: 320, offset: 1216)
!7087 = !DIDerivedType(tag: DW_TAG_member, name: "rsk_ops", scope: !7077, file: !7066, line: 68, baseType: !7088, size: 64, offset: 1536)
!7088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7089, size: 64)
!7089 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7065)
!7090 = !DIDerivedType(tag: DW_TAG_member, name: "sk", scope: !7077, file: !7066, line: 69, baseType: !505, size: 64, offset: 1600)
!7091 = !DIDerivedType(tag: DW_TAG_member, name: "saved_syn", scope: !7077, file: !7066, line: 70, baseType: !7092, size: 64, offset: 1664)
!7092 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7093, size: 64)
!7093 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "saved_syn", file: !7066, line: 44, size: 96, elements: !7094)
!7094 = !{!7095, !7096, !7097, !7098}
!7095 = !DIDerivedType(tag: DW_TAG_member, name: "mac_hdrlen", scope: !7093, file: !7066, line: 45, baseType: !762, size: 32)
!7096 = !DIDerivedType(tag: DW_TAG_member, name: "network_hdrlen", scope: !7093, file: !7066, line: 46, baseType: !762, size: 32, offset: 32)
!7097 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_hdrlen", scope: !7093, file: !7066, line: 47, baseType: !762, size: 32, offset: 64)
!7098 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !7093, file: !7066, line: 48, baseType: !2849, offset: 96)
!7099 = !DIDerivedType(tag: DW_TAG_member, name: "secid", scope: !7077, file: !7066, line: 71, baseType: !762, size: 32, offset: 1728)
!7100 = !DIDerivedType(tag: DW_TAG_member, name: "peer_secid", scope: !7077, file: !7066, line: 72, baseType: !762, size: 32, offset: 1760)
!7101 = !DIDerivedType(tag: DW_TAG_member, name: "send_ack", scope: !7065, file: !7066, line: 34, baseType: !7102, size: 64, offset: 256)
!7102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7103, size: 64)
!7103 = !DISubroutineType(types: !7104)
!7104 = !{null, !7036, !475, !7076}
!7105 = !DIDerivedType(tag: DW_TAG_member, name: "send_reset", scope: !7065, file: !7066, line: 36, baseType: !7106, size: 64, offset: 320)
!7106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7107, size: 64)
!7107 = !DISubroutineType(types: !7108)
!7108 = !{null, !7036, !475}
!7109 = !DIDerivedType(tag: DW_TAG_member, name: "destructor", scope: !7065, file: !7066, line: 38, baseType: !7110, size: 64, offset: 384)
!7110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7111, size: 64)
!7111 = !DISubroutineType(types: !7112)
!7112 = !{null, !7076}
!7113 = !DIDerivedType(tag: DW_TAG_member, name: "syn_ack_timeout", scope: !7065, file: !7066, line: 39, baseType: !7114, size: 64, offset: 448)
!7114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7115, size: 64)
!7115 = !DISubroutineType(types: !7116)
!7116 = !{null, !7117}
!7117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7118, size: 64)
!7118 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7077)
!7119 = !DIDerivedType(tag: DW_TAG_member, name: "twsk_prot", scope: !562, file: !507, line: 1218, baseType: !7120, size: 64, offset: 2624)
!7120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7121, size: 64)
!7121 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timewait_sock_ops", file: !7122, line: 14, size: 320, elements: !7123)
!7122 = !DIFile(filename: "./include/net/timewait_sock.h", directory: "/home/lizy2001/genbc/linux")
!7123 = !{!7124, !7125, !7126, !7127, !7131}
!7124 = !DIDerivedType(tag: DW_TAG_member, name: "twsk_slab", scope: !7121, file: !7122, line: 15, baseType: !1620, size: 64)
!7125 = !DIDerivedType(tag: DW_TAG_member, name: "twsk_slab_name", scope: !7121, file: !7122, line: 16, baseType: !632, size: 64, offset: 64)
!7126 = !DIDerivedType(tag: DW_TAG_member, name: "twsk_obj_size", scope: !7121, file: !7122, line: 17, baseType: !7, size: 32, offset: 128)
!7127 = !DIDerivedType(tag: DW_TAG_member, name: "twsk_unique", scope: !7121, file: !7122, line: 18, baseType: !7128, size: 64, offset: 192)
!7128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7129, size: 64)
!7129 = !DISubroutineType(types: !7130)
!7130 = !{!37, !505, !505, !625}
!7131 = !DIDerivedType(tag: DW_TAG_member, name: "twsk_destructor", scope: !7121, file: !7122, line: 20, baseType: !606, size: 64, offset: 256)
!7132 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !562, file: !507, line: 1225, baseType: !7133, size: 64, offset: 2688)
!7133 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !562, file: !507, line: 1220, size: 64, elements: !7134)
!7134 = !{!7135, !7136, !7139, !7142}
!7135 = !DIDerivedType(tag: DW_TAG_member, name: "hashinfo", scope: !7133, file: !507, line: 1221, baseType: !2482, size: 64)
!7136 = !DIDerivedType(tag: DW_TAG_member, name: "udp_table", scope: !7133, file: !507, line: 1222, baseType: !7137, size: 64)
!7137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7138, size: 64)
!7138 = !DICompositeType(tag: DW_TAG_structure_type, name: "udp_table", file: !507, line: 1222, flags: DIFlagFwdDecl)
!7139 = !DIDerivedType(tag: DW_TAG_member, name: "raw_hash", scope: !7133, file: !507, line: 1223, baseType: !7140, size: 64)
!7140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7141, size: 64)
!7141 = !DICompositeType(tag: DW_TAG_structure_type, name: "raw_hashinfo", file: !507, line: 1108, flags: DIFlagFwdDecl)
!7142 = !DIDerivedType(tag: DW_TAG_member, name: "smc_hash", scope: !7133, file: !507, line: 1224, baseType: !7143, size: 64)
!7143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7144, size: 64)
!7144 = !DICompositeType(tag: DW_TAG_structure_type, name: "smc_hashinfo", file: !507, line: 1109, flags: DIFlagFwdDecl)
!7145 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !562, file: !507, line: 1227, baseType: !906, size: 64, offset: 2752)
!7146 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !562, file: !507, line: 1229, baseType: !3898, size: 256, offset: 2816)
!7147 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !562, file: !507, line: 1231, baseType: !344, size: 128, offset: 3072)
!7148 = !DIDerivedType(tag: DW_TAG_member, name: "diag_destroy", scope: !562, file: !507, line: 1235, baseType: !587, size: 64, offset: 3200)
!7149 = !DIDerivedType(tag: DW_TAG_member, name: "skc_net", scope: !510, file: !507, line: 198, baseType: !2841, size: 64, offset: 384)
!7150 = !DIDerivedType(tag: DW_TAG_member, name: "skc_v6_daddr", scope: !510, file: !507, line: 201, baseType: !2297, size: 128, offset: 448)
!7151 = !DIDerivedType(tag: DW_TAG_member, name: "skc_v6_rcv_saddr", scope: !510, file: !507, line: 202, baseType: !2297, size: 128, offset: 576)
!7152 = !DIDerivedType(tag: DW_TAG_member, name: "skc_cookie", scope: !510, file: !507, line: 205, baseType: !433, size: 64, offset: 704)
!7153 = !DIDerivedType(tag: DW_TAG_member, scope: !510, file: !507, line: 212, baseType: !7154, size: 64, offset: 768)
!7154 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !510, file: !507, line: 212, size: 64, elements: !7155)
!7155 = !{!7156, !7157, !7158}
!7156 = !DIDerivedType(tag: DW_TAG_member, name: "skc_flags", scope: !7154, file: !507, line: 213, baseType: !372, size: 64)
!7157 = !DIDerivedType(tag: DW_TAG_member, name: "skc_listener", scope: !7154, file: !507, line: 214, baseType: !505, size: 64)
!7158 = !DIDerivedType(tag: DW_TAG_member, name: "skc_tw_dr", scope: !7154, file: !507, line: 215, baseType: !7159, size: 64)
!7159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2478, size: 64)
!7160 = !DIDerivedType(tag: DW_TAG_member, name: "skc_dontcopy_begin", scope: !510, file: !507, line: 222, baseType: !7161, offset: 832)
!7161 = !DICompositeType(tag: DW_TAG_array_type, baseType: !37, elements: !2009)
!7162 = !DIDerivedType(tag: DW_TAG_member, scope: !510, file: !507, line: 224, baseType: !7163, size: 128, offset: 832)
!7163 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !510, file: !507, line: 224, size: 128, elements: !7164)
!7164 = !{!7165, !7166}
!7165 = !DIDerivedType(tag: DW_TAG_member, name: "skc_node", scope: !7163, file: !507, line: 225, baseType: !336, size: 128)
!7166 = !DIDerivedType(tag: DW_TAG_member, name: "skc_nulls_node", scope: !7163, file: !507, line: 226, baseType: !7167, size: 128)
!7167 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_nulls_node", file: !7168, line: 25, size: 128, elements: !7169)
!7168 = !DIFile(filename: "./include/linux/list_nulls.h", directory: "/home/lizy2001/genbc/linux")
!7169 = !{!7170, !7172}
!7170 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7167, file: !7168, line: 26, baseType: !7171, size: 64)
!7171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7167, size: 64)
!7172 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !7167, file: !7168, line: 26, baseType: !7173, size: 64, offset: 64)
!7173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7171, size: 64)
!7174 = !DIDerivedType(tag: DW_TAG_member, name: "skc_tx_queue_mapping", scope: !510, file: !507, line: 228, baseType: !532, size: 16, offset: 960)
!7175 = !DIDerivedType(tag: DW_TAG_member, scope: !510, file: !507, line: 232, baseType: !7176, size: 32, offset: 992)
!7176 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !510, file: !507, line: 232, size: 32, elements: !7177)
!7177 = !{!7178, !7179, !7180}
!7178 = !DIDerivedType(tag: DW_TAG_member, name: "skc_incoming_cpu", scope: !7176, file: !507, line: 233, baseType: !37, size: 32)
!7179 = !DIDerivedType(tag: DW_TAG_member, name: "skc_rcv_wnd", scope: !7176, file: !507, line: 234, baseType: !762, size: 32)
!7180 = !DIDerivedType(tag: DW_TAG_member, name: "skc_tw_rcv_nxt", scope: !7176, file: !507, line: 235, baseType: !762, size: 32)
!7181 = !DIDerivedType(tag: DW_TAG_member, name: "skc_refcnt", scope: !510, file: !507, line: 238, baseType: !1325, size: 32, offset: 1024)
!7182 = !DIDerivedType(tag: DW_TAG_member, name: "skc_dontcopy_end", scope: !510, file: !507, line: 240, baseType: !7161, offset: 1056)
!7183 = !DIDerivedType(tag: DW_TAG_member, scope: !510, file: !507, line: 241, baseType: !7184, size: 32, offset: 1056)
!7184 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !510, file: !507, line: 241, size: 32, elements: !7185)
!7185 = !{!7186, !7187, !7188}
!7186 = !DIDerivedType(tag: DW_TAG_member, name: "skc_rxhash", scope: !7184, file: !507, line: 242, baseType: !762, size: 32)
!7187 = !DIDerivedType(tag: DW_TAG_member, name: "skc_window_clamp", scope: !7184, file: !507, line: 243, baseType: !762, size: 32)
!7188 = !DIDerivedType(tag: DW_TAG_member, name: "skc_tw_snd_nxt", scope: !7184, file: !507, line: 244, baseType: !762, size: 32)
!7189 = !DIDerivedType(tag: DW_TAG_member, name: "sk_lock", scope: !506, file: !507, line: 387, baseType: !7190, size: 192, offset: 1088)
!7190 = !DIDerivedType(tag: DW_TAG_typedef, name: "socket_lock_t", file: !507, line: 108, baseType: !7191)
!7191 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !507, line: 95, size: 192, elements: !7192)
!7192 = !{!7193, !7194, !7195}
!7193 = !DIDerivedType(tag: DW_TAG_member, name: "slock", scope: !7191, file: !507, line: 96, baseType: !784)
!7194 = !DIDerivedType(tag: DW_TAG_member, name: "owned", scope: !7191, file: !507, line: 97, baseType: !37, size: 32)
!7195 = !DIDerivedType(tag: DW_TAG_member, name: "wq", scope: !7191, file: !507, line: 98, baseType: !1154, size: 128, offset: 64)
!7196 = !DIDerivedType(tag: DW_TAG_member, name: "sk_drops", scope: !506, file: !507, line: 388, baseType: !443, size: 32, offset: 1280)
!7197 = !DIDerivedType(tag: DW_TAG_member, name: "sk_rcvlowat", scope: !506, file: !507, line: 389, baseType: !37, size: 32, offset: 1312)
!7198 = !DIDerivedType(tag: DW_TAG_member, name: "sk_error_queue", scope: !506, file: !507, line: 390, baseType: !2899, size: 192, offset: 1344)
!7199 = !DIDerivedType(tag: DW_TAG_member, name: "sk_rx_skb_cache", scope: !506, file: !507, line: 391, baseType: !475, size: 64, offset: 1536)
!7200 = !DIDerivedType(tag: DW_TAG_member, name: "sk_receive_queue", scope: !506, file: !507, line: 392, baseType: !2899, size: 192, offset: 1600)
!7201 = !DIDerivedType(tag: DW_TAG_member, name: "sk_backlog", scope: !506, file: !507, line: 406, baseType: !7202, size: 192, offset: 1792)
!7202 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !506, file: !507, line: 401, size: 192, elements: !7203)
!7203 = !{!7204, !7205, !7206, !7207}
!7204 = !DIDerivedType(tag: DW_TAG_member, name: "rmem_alloc", scope: !7202, file: !507, line: 402, baseType: !443, size: 32)
!7205 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !7202, file: !507, line: 403, baseType: !37, size: 32, offset: 32)
!7206 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !7202, file: !507, line: 404, baseType: !475, size: 64, offset: 64)
!7207 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !7202, file: !507, line: 405, baseType: !475, size: 64, offset: 128)
!7208 = !DIDerivedType(tag: DW_TAG_member, name: "sk_forward_alloc", scope: !506, file: !507, line: 409, baseType: !37, size: 32, offset: 1984)
!7209 = !DIDerivedType(tag: DW_TAG_member, name: "sk_ll_usec", scope: !506, file: !507, line: 411, baseType: !7, size: 32, offset: 2016)
!7210 = !DIDerivedType(tag: DW_TAG_member, name: "sk_napi_id", scope: !506, file: !507, line: 413, baseType: !7, size: 32, offset: 2048)
!7211 = !DIDerivedType(tag: DW_TAG_member, name: "sk_rcvbuf", scope: !506, file: !507, line: 415, baseType: !37, size: 32, offset: 2080)
!7212 = !DIDerivedType(tag: DW_TAG_member, name: "sk_filter", scope: !506, file: !507, line: 417, baseType: !7213, size: 64, offset: 2112)
!7213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7214, size: 64)
!7214 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sk_filter", file: !3048, line: 552, size: 256, elements: !7215)
!7215 = !{!7216, !7217, !7218}
!7216 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !7214, file: !3048, line: 553, baseType: !1325, size: 32)
!7217 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !7214, file: !3048, line: 554, baseType: !359, size: 128, align: 64, offset: 64)
!7218 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !7214, file: !3048, line: 555, baseType: !3046, size: 64, offset: 192)
!7219 = !DIDerivedType(tag: DW_TAG_member, scope: !506, file: !507, line: 418, baseType: !7220, size: 64, offset: 2176)
!7220 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !506, file: !507, line: 418, size: 64, elements: !7221)
!7221 = !{!7222, !7231}
!7222 = !DIDerivedType(tag: DW_TAG_member, name: "sk_wq", scope: !7220, file: !507, line: 419, baseType: !7223, size: 64)
!7223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7224, size: 64)
!7224 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "socket_wq", file: !7225, line: 98, size: 384, elements: !7226)
!7225 = !DIFile(filename: "./include/linux/net.h", directory: "/home/lizy2001/genbc/linux")
!7226 = !{!7227, !7228, !7229, !7230}
!7227 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !7224, file: !7225, line: 100, baseType: !1154, size: 128)
!7228 = !DIDerivedType(tag: DW_TAG_member, name: "fasync_list", scope: !7224, file: !7225, line: 101, baseType: !5698, size: 64, offset: 128)
!7229 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !7224, file: !7225, line: 102, baseType: !372, size: 64, offset: 192)
!7230 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !7224, file: !7225, line: 103, baseType: !359, size: 128, align: 64, offset: 256)
!7231 = !DIDerivedType(tag: DW_TAG_member, name: "sk_wq_raw", scope: !7220, file: !507, line: 421, baseType: !7223, size: 64)
!7232 = !DIDerivedType(tag: DW_TAG_member, name: "sk_rx_dst", scope: !506, file: !507, line: 427, baseType: !2731, size: 64, offset: 2240)
!7233 = !DIDerivedType(tag: DW_TAG_member, name: "sk_dst_cache", scope: !506, file: !507, line: 428, baseType: !2731, size: 64, offset: 2304)
!7234 = !DIDerivedType(tag: DW_TAG_member, name: "sk_omem_alloc", scope: !506, file: !507, line: 429, baseType: !443, size: 32, offset: 2368)
!7235 = !DIDerivedType(tag: DW_TAG_member, name: "sk_sndbuf", scope: !506, file: !507, line: 430, baseType: !37, size: 32, offset: 2400)
!7236 = !DIDerivedType(tag: DW_TAG_member, name: "sk_wmem_queued", scope: !506, file: !507, line: 433, baseType: !37, size: 32, offset: 2432)
!7237 = !DIDerivedType(tag: DW_TAG_member, name: "sk_wmem_alloc", scope: !506, file: !507, line: 434, baseType: !1325, size: 32, offset: 2464)
!7238 = !DIDerivedType(tag: DW_TAG_member, name: "sk_tsq_flags", scope: !506, file: !507, line: 435, baseType: !372, size: 64, offset: 2496)
!7239 = !DIDerivedType(tag: DW_TAG_member, scope: !506, file: !507, line: 436, baseType: !7240, size: 64, offset: 2560)
!7240 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !506, file: !507, line: 436, size: 64, elements: !7241)
!7241 = !{!7242, !7243}
!7242 = !DIDerivedType(tag: DW_TAG_member, name: "sk_send_head", scope: !7240, file: !507, line: 437, baseType: !475, size: 64)
!7243 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_rtx_queue", scope: !7240, file: !507, line: 438, baseType: !1187, size: 64)
!7244 = !DIDerivedType(tag: DW_TAG_member, name: "sk_tx_skb_cache", scope: !506, file: !507, line: 440, baseType: !475, size: 64, offset: 2624)
!7245 = !DIDerivedType(tag: DW_TAG_member, name: "sk_write_queue", scope: !506, file: !507, line: 441, baseType: !2899, size: 192, offset: 2688)
!7246 = !DIDerivedType(tag: DW_TAG_member, name: "sk_peek_off", scope: !506, file: !507, line: 442, baseType: !1544, size: 32, offset: 2880)
!7247 = !DIDerivedType(tag: DW_TAG_member, name: "sk_write_pending", scope: !506, file: !507, line: 443, baseType: !37, size: 32, offset: 2912)
!7248 = !DIDerivedType(tag: DW_TAG_member, name: "sk_dst_pending_confirm", scope: !506, file: !507, line: 444, baseType: !523, size: 32, offset: 2944)
!7249 = !DIDerivedType(tag: DW_TAG_member, name: "sk_pacing_status", scope: !506, file: !507, line: 445, baseType: !762, size: 32, offset: 2976)
!7250 = !DIDerivedType(tag: DW_TAG_member, name: "sk_sndtimeo", scope: !506, file: !507, line: 446, baseType: !568, size: 64, offset: 3008)
!7251 = !DIDerivedType(tag: DW_TAG_member, name: "sk_timer", scope: !506, file: !507, line: 447, baseType: !2314, size: 320, offset: 3072)
!7252 = !DIDerivedType(tag: DW_TAG_member, name: "sk_priority", scope: !506, file: !507, line: 448, baseType: !523, size: 32, offset: 3392)
!7253 = !DIDerivedType(tag: DW_TAG_member, name: "sk_mark", scope: !506, file: !507, line: 449, baseType: !523, size: 32, offset: 3424)
!7254 = !DIDerivedType(tag: DW_TAG_member, name: "sk_pacing_rate", scope: !506, file: !507, line: 450, baseType: !372, size: 64, offset: 3456)
!7255 = !DIDerivedType(tag: DW_TAG_member, name: "sk_max_pacing_rate", scope: !506, file: !507, line: 451, baseType: !372, size: 64, offset: 3520)
!7256 = !DIDerivedType(tag: DW_TAG_member, name: "sk_frag", scope: !506, file: !507, line: 452, baseType: !5737, size: 128, offset: 3584)
!7257 = !DIDerivedType(tag: DW_TAG_member, name: "sk_route_caps", scope: !506, file: !507, line: 453, baseType: !389, size: 64, offset: 3712)
!7258 = !DIDerivedType(tag: DW_TAG_member, name: "sk_route_nocaps", scope: !506, file: !507, line: 454, baseType: !389, size: 64, offset: 3776)
!7259 = !DIDerivedType(tag: DW_TAG_member, name: "sk_route_forced_caps", scope: !506, file: !507, line: 455, baseType: !389, size: 64, offset: 3840)
!7260 = !DIDerivedType(tag: DW_TAG_member, name: "sk_gso_type", scope: !506, file: !507, line: 456, baseType: !37, size: 32, offset: 3904)
!7261 = !DIDerivedType(tag: DW_TAG_member, name: "sk_gso_max_size", scope: !506, file: !507, line: 457, baseType: !7, size: 32, offset: 3936)
!7262 = !DIDerivedType(tag: DW_TAG_member, name: "sk_allocation", scope: !506, file: !507, line: 458, baseType: !1612, size: 32, offset: 3968)
!7263 = !DIDerivedType(tag: DW_TAG_member, name: "sk_txhash", scope: !506, file: !507, line: 459, baseType: !523, size: 32, offset: 4000)
!7264 = !DIDerivedType(tag: DW_TAG_member, name: "sk_padding", scope: !506, file: !507, line: 465, baseType: !1451, size: 1, offset: 4032, flags: DIFlagBitField, extraData: i64 4032)
!7265 = !DIDerivedType(tag: DW_TAG_member, name: "sk_kern_sock", scope: !506, file: !507, line: 466, baseType: !1451, size: 1, offset: 4033, flags: DIFlagBitField, extraData: i64 4032)
!7266 = !DIDerivedType(tag: DW_TAG_member, name: "sk_no_check_tx", scope: !506, file: !507, line: 467, baseType: !1451, size: 1, offset: 4034, flags: DIFlagBitField, extraData: i64 4032)
!7267 = !DIDerivedType(tag: DW_TAG_member, name: "sk_no_check_rx", scope: !506, file: !507, line: 468, baseType: !1451, size: 1, offset: 4035, flags: DIFlagBitField, extraData: i64 4032)
!7268 = !DIDerivedType(tag: DW_TAG_member, name: "sk_userlocks", scope: !506, file: !507, line: 469, baseType: !1451, size: 4, offset: 4036, flags: DIFlagBitField, extraData: i64 4032)
!7269 = !DIDerivedType(tag: DW_TAG_member, name: "sk_pacing_shift", scope: !506, file: !507, line: 470, baseType: !1451, size: 8, offset: 4040)
!7270 = !DIDerivedType(tag: DW_TAG_member, name: "sk_type", scope: !506, file: !507, line: 471, baseType: !1092, size: 16, offset: 4048)
!7271 = !DIDerivedType(tag: DW_TAG_member, name: "sk_protocol", scope: !506, file: !507, line: 472, baseType: !1092, size: 16, offset: 4064)
!7272 = !DIDerivedType(tag: DW_TAG_member, name: "sk_gso_max_segs", scope: !506, file: !507, line: 473, baseType: !1092, size: 16, offset: 4080)
!7273 = !DIDerivedType(tag: DW_TAG_member, name: "sk_lingertime", scope: !506, file: !507, line: 474, baseType: !372, size: 64, offset: 4096)
!7274 = !DIDerivedType(tag: DW_TAG_member, name: "sk_prot_creator", scope: !506, file: !507, line: 475, baseType: !561, size: 64, offset: 4160)
!7275 = !DIDerivedType(tag: DW_TAG_member, name: "sk_callback_lock", scope: !506, file: !507, line: 476, baseType: !2909, offset: 4224)
!7276 = !DIDerivedType(tag: DW_TAG_member, name: "sk_err", scope: !506, file: !507, line: 477, baseType: !37, size: 32, offset: 4224)
!7277 = !DIDerivedType(tag: DW_TAG_member, name: "sk_err_soft", scope: !506, file: !507, line: 478, baseType: !37, size: 32, offset: 4256)
!7278 = !DIDerivedType(tag: DW_TAG_member, name: "sk_ack_backlog", scope: !506, file: !507, line: 479, baseType: !762, size: 32, offset: 4288)
!7279 = !DIDerivedType(tag: DW_TAG_member, name: "sk_max_ack_backlog", scope: !506, file: !507, line: 480, baseType: !762, size: 32, offset: 4320)
!7280 = !DIDerivedType(tag: DW_TAG_member, name: "sk_uid", scope: !506, file: !507, line: 481, baseType: !704, size: 32, offset: 4352)
!7281 = !DIDerivedType(tag: DW_TAG_member, name: "sk_peer_pid", scope: !506, file: !507, line: 482, baseType: !1575, size: 64, offset: 4416)
!7282 = !DIDerivedType(tag: DW_TAG_member, name: "sk_peer_cred", scope: !506, file: !507, line: 483, baseType: !1943, size: 64, offset: 4480)
!7283 = !DIDerivedType(tag: DW_TAG_member, name: "sk_rcvtimeo", scope: !506, file: !507, line: 484, baseType: !568, size: 64, offset: 4544)
!7284 = !DIDerivedType(tag: DW_TAG_member, name: "sk_stamp", scope: !506, file: !507, line: 485, baseType: !1395, size: 64, offset: 4608)
!7285 = !DIDerivedType(tag: DW_TAG_member, name: "sk_tsflags", scope: !506, file: !507, line: 489, baseType: !1092, size: 16, offset: 4672)
!7286 = !DIDerivedType(tag: DW_TAG_member, name: "sk_shutdown", scope: !506, file: !507, line: 490, baseType: !1451, size: 8, offset: 4688)
!7287 = !DIDerivedType(tag: DW_TAG_member, name: "sk_tskey", scope: !506, file: !507, line: 491, baseType: !762, size: 32, offset: 4704)
!7288 = !DIDerivedType(tag: DW_TAG_member, name: "sk_zckey", scope: !506, file: !507, line: 492, baseType: !443, size: 32, offset: 4736)
!7289 = !DIDerivedType(tag: DW_TAG_member, name: "sk_clockid", scope: !506, file: !507, line: 494, baseType: !1451, size: 8, offset: 4768)
!7290 = !DIDerivedType(tag: DW_TAG_member, name: "sk_txtime_deadline_mode", scope: !506, file: !507, line: 495, baseType: !1451, size: 1, offset: 4776, flags: DIFlagBitField, extraData: i64 4776)
!7291 = !DIDerivedType(tag: DW_TAG_member, name: "sk_txtime_report_errors", scope: !506, file: !507, line: 496, baseType: !1451, size: 1, offset: 4777, flags: DIFlagBitField, extraData: i64 4776)
!7292 = !DIDerivedType(tag: DW_TAG_member, name: "sk_txtime_unused", scope: !506, file: !507, line: 497, baseType: !1451, size: 6, offset: 4778, flags: DIFlagBitField, extraData: i64 4776)
!7293 = !DIDerivedType(tag: DW_TAG_member, name: "sk_socket", scope: !506, file: !507, line: 499, baseType: !7294, size: 64, offset: 4800)
!7294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7295, size: 64)
!7295 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "socket", file: !7225, line: 116, size: 704, elements: !7296)
!7296 = !{!7297, !7307, !7308, !7309, !7310, !7311, !7414}
!7297 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !7295, file: !7225, line: 117, baseType: !7298, size: 32)
!7298 = !DIDerivedType(tag: DW_TAG_typedef, name: "socket_state", file: !7299, line: 54, baseType: !7300)
!7299 = !DIFile(filename: "./include/uapi/linux/net.h", directory: "/home/lizy2001/genbc/linux")
!7300 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !7299, line: 48, baseType: !7, size: 32, elements: !7301)
!7301 = !{!7302, !7303, !7304, !7305, !7306}
!7302 = !DIEnumerator(name: "SS_FREE", value: 0, isUnsigned: true)
!7303 = !DIEnumerator(name: "SS_UNCONNECTED", value: 1, isUnsigned: true)
!7304 = !DIEnumerator(name: "SS_CONNECTING", value: 2, isUnsigned: true)
!7305 = !DIEnumerator(name: "SS_CONNECTED", value: 3, isUnsigned: true)
!7306 = !DIEnumerator(name: "SS_DISCONNECTING", value: 4, isUnsigned: true)
!7307 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !7295, file: !7225, line: 119, baseType: !1300, size: 16, offset: 32)
!7308 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !7295, file: !7225, line: 121, baseType: !372, size: 64, offset: 64)
!7309 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !7295, file: !7225, line: 123, baseType: !1064, size: 64, offset: 128)
!7310 = !DIDerivedType(tag: DW_TAG_member, name: "sk", scope: !7295, file: !7225, line: 124, baseType: !505, size: 64, offset: 192)
!7311 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !7295, file: !7225, line: 125, baseType: !7312, size: 64, offset: 256)
!7312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7313, size: 64)
!7313 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7314)
!7314 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "proto_ops", file: !7225, line: 139, size: 1728, elements: !7315)
!7315 = !{!7316, !7317, !7318, !7319, !7323, !7327, !7331, !7335, !7339, !7340, !7344, !7348, !7352, !7356, !7357, !7361, !7365, !7369, !7373, !7377, !7381, !7385, !7389, !7390, !7391, !7411, !7412, !7413}
!7316 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !7314, file: !7225, line: 140, baseType: !37, size: 32)
!7317 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !7314, file: !7225, line: 141, baseType: !7, size: 32, offset: 32)
!7318 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !7314, file: !7225, line: 142, baseType: !906, size: 64, offset: 64)
!7319 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !7314, file: !7225, line: 143, baseType: !7320, size: 64, offset: 128)
!7320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7321, size: 64)
!7321 = !DISubroutineType(types: !7322)
!7322 = !{!37, !7294}
!7323 = !DIDerivedType(tag: DW_TAG_member, name: "bind", scope: !7314, file: !7225, line: 144, baseType: !7324, size: 64, offset: 192)
!7324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7325, size: 64)
!7325 = !DISubroutineType(types: !7326)
!7326 = !{!37, !7294, !573, !37}
!7327 = !DIDerivedType(tag: DW_TAG_member, name: "connect", scope: !7314, file: !7225, line: 147, baseType: !7328, size: 64, offset: 256)
!7328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7329, size: 64)
!7329 = !DISubroutineType(types: !7330)
!7330 = !{!37, !7294, !573, !37, !37}
!7331 = !DIDerivedType(tag: DW_TAG_member, name: "socketpair", scope: !7314, file: !7225, line: 150, baseType: !7332, size: 64, offset: 320)
!7332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7333, size: 64)
!7333 = !DISubroutineType(types: !7334)
!7334 = !{!37, !7294, !7294}
!7335 = !DIDerivedType(tag: DW_TAG_member, name: "accept", scope: !7314, file: !7225, line: 152, baseType: !7336, size: 64, offset: 384)
!7336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7337, size: 64)
!7337 = !DISubroutineType(types: !7338)
!7338 = !{!37, !7294, !7294, !37, !595}
!7339 = !DIDerivedType(tag: DW_TAG_member, name: "getname", scope: !7314, file: !7225, line: 154, baseType: !7324, size: 64, offset: 448)
!7340 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !7314, file: !7225, line: 157, baseType: !7341, size: 64, offset: 512)
!7341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7342, size: 64)
!7342 = !DISubroutineType(types: !7343)
!7343 = !{!1143, !1064, !7294, !1144}
!7344 = !DIDerivedType(tag: DW_TAG_member, name: "ioctl", scope: !7314, file: !7225, line: 159, baseType: !7345, size: 64, offset: 576)
!7345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7346, size: 64)
!7346 = !DISubroutineType(types: !7347)
!7347 = !{!37, !7294, !7, !372}
!7348 = !DIDerivedType(tag: DW_TAG_member, name: "gettstamp", scope: !7314, file: !7225, line: 165, baseType: !7349, size: 64, offset: 640)
!7349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7350, size: 64)
!7350 = !DISubroutineType(types: !7351)
!7351 = !{!37, !7294, !625, !595, !595}
!7352 = !DIDerivedType(tag: DW_TAG_member, name: "listen", scope: !7314, file: !7225, line: 167, baseType: !7353, size: 64, offset: 704)
!7353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7354, size: 64)
!7354 = !DISubroutineType(types: !7355)
!7355 = !{!37, !7294, !37}
!7356 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !7314, file: !7225, line: 168, baseType: !7353, size: 64, offset: 768)
!7357 = !DIDerivedType(tag: DW_TAG_member, name: "setsockopt", scope: !7314, file: !7225, line: 169, baseType: !7358, size: 64, offset: 832)
!7358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7359, size: 64)
!7359 = !DISubroutineType(types: !7360)
!7360 = !{!37, !7294, !37, !37, !617, !7}
!7361 = !DIDerivedType(tag: DW_TAG_member, name: "getsockopt", scope: !7314, file: !7225, line: 172, baseType: !7362, size: 64, offset: 896)
!7362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7363, size: 64)
!7363 = !DISubroutineType(types: !7364)
!7364 = !{!37, !7294, !37, !37, !632, !594}
!7365 = !DIDerivedType(tag: DW_TAG_member, name: "show_fdinfo", scope: !7314, file: !7225, line: 174, baseType: !7366, size: 64, offset: 960)
!7366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7367, size: 64)
!7367 = !DISubroutineType(types: !7368)
!7368 = !{null, !996, !7294}
!7369 = !DIDerivedType(tag: DW_TAG_member, name: "sendmsg", scope: !7314, file: !7225, line: 175, baseType: !7370, size: 64, offset: 1024)
!7370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7371, size: 64)
!7371 = !DISubroutineType(types: !7372)
!7372 = !{!37, !7294, !638, !649}
!7373 = !DIDerivedType(tag: DW_TAG_member, name: "recvmsg", scope: !7314, file: !7225, line: 185, baseType: !7374, size: 64, offset: 1088)
!7374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7375, size: 64)
!7375 = !DISubroutineType(types: !7376)
!7376 = !{!37, !7294, !638, !649, !37}
!7377 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !7314, file: !7225, line: 187, baseType: !7378, size: 64, offset: 1152)
!7378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7379, size: 64)
!7379 = !DISubroutineType(types: !7380)
!7380 = !{!37, !1064, !7294, !1169}
!7381 = !DIDerivedType(tag: DW_TAG_member, name: "sendpage", scope: !7314, file: !7225, line: 189, baseType: !7382, size: 64, offset: 1216)
!7382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7383, size: 64)
!7383 = !DISubroutineType(types: !7384)
!7384 = !{!1069, !7294, !679, !37, !649, !37}
!7385 = !DIDerivedType(tag: DW_TAG_member, name: "splice_read", scope: !7314, file: !7225, line: 191, baseType: !7386, size: 64, offset: 1280)
!7386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7387, size: 64)
!7387 = !DISubroutineType(types: !7388)
!7388 = !{!1069, !7294, !1023, !5679, !649, !7}
!7389 = !DIDerivedType(tag: DW_TAG_member, name: "set_peek_off", scope: !7314, file: !7225, line: 193, baseType: !587, size: 64, offset: 1344)
!7390 = !DIDerivedType(tag: DW_TAG_member, name: "peek_len", scope: !7314, file: !7225, line: 194, baseType: !7320, size: 64, offset: 1408)
!7391 = !DIDerivedType(tag: DW_TAG_member, name: "read_sock", scope: !7314, file: !7225, line: 199, baseType: !7392, size: 64, offset: 1472)
!7392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7393, size: 64)
!7393 = !DISubroutineType(types: !7394)
!7394 = !{!37, !505, !7395, !7407}
!7395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7396, size: 64)
!7396 = !DIDerivedType(tag: DW_TAG_typedef, name: "read_descriptor_t", file: !694, line: 362, baseType: !7397)
!7397 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !694, line: 354, size: 256, elements: !7398)
!7398 = !{!7399, !7400, !7401, !7406}
!7399 = !DIDerivedType(tag: DW_TAG_member, name: "written", scope: !7397, file: !694, line: 355, baseType: !649, size: 64)
!7400 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !7397, file: !694, line: 356, baseType: !649, size: 64, offset: 64)
!7401 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !7397, file: !694, line: 360, baseType: !7402, size: 64, offset: 128)
!7402 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7397, file: !694, line: 357, size: 64, elements: !7403)
!7403 = !{!7404, !7405}
!7404 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !7402, file: !694, line: 358, baseType: !632, size: 64)
!7405 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !7402, file: !694, line: 359, baseType: !625, size: 64)
!7406 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !7397, file: !694, line: 361, baseType: !37, size: 32, offset: 192)
!7407 = !DIDerivedType(tag: DW_TAG_typedef, name: "sk_read_actor_t", file: !7225, line: 136, baseType: !7408)
!7408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7409, size: 64)
!7409 = !DISubroutineType(types: !7410)
!7410 = !{!37, !7395, !475, !7, !649}
!7411 = !DIDerivedType(tag: DW_TAG_member, name: "sendpage_locked", scope: !7314, file: !7225, line: 201, baseType: !7014, size: 64, offset: 1536)
!7412 = !DIDerivedType(tag: DW_TAG_member, name: "sendmsg_locked", scope: !7314, file: !7225, line: 203, baseType: !635, size: 64, offset: 1600)
!7413 = !DIDerivedType(tag: DW_TAG_member, name: "set_rcvlowat", scope: !7314, file: !7225, line: 205, baseType: !587, size: 64, offset: 1664)
!7414 = !DIDerivedType(tag: DW_TAG_member, name: "wq", scope: !7295, file: !7225, line: 127, baseType: !7224, size: 384, offset: 320)
!7415 = !DIDerivedType(tag: DW_TAG_member, name: "sk_user_data", scope: !506, file: !507, line: 500, baseType: !625, size: 64, offset: 4864)
!7416 = !DIDerivedType(tag: DW_TAG_member, name: "sk_cgrp_data", scope: !506, file: !507, line: 504, baseType: !7417, offset: 4928)
!7417 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sock_cgroup_data", file: !7418, line: 871, elements: !798)
!7418 = !DIFile(filename: "./include/linux/cgroup-defs.h", directory: "/home/lizy2001/genbc/linux")
!7419 = !DIDerivedType(tag: DW_TAG_member, name: "sk_memcg", scope: !506, file: !507, line: 505, baseType: !6204, size: 64, offset: 4928)
!7420 = !DIDerivedType(tag: DW_TAG_member, name: "sk_state_change", scope: !506, file: !507, line: 506, baseType: !606, size: 64, offset: 4992)
!7421 = !DIDerivedType(tag: DW_TAG_member, name: "sk_data_ready", scope: !506, file: !507, line: 507, baseType: !606, size: 64, offset: 5056)
!7422 = !DIDerivedType(tag: DW_TAG_member, name: "sk_write_space", scope: !506, file: !507, line: 508, baseType: !606, size: 64, offset: 5120)
!7423 = !DIDerivedType(tag: DW_TAG_member, name: "sk_error_report", scope: !506, file: !507, line: 509, baseType: !606, size: 64, offset: 5184)
!7424 = !DIDerivedType(tag: DW_TAG_member, name: "sk_backlog_rcv", scope: !506, file: !507, line: 510, baseType: !7020, size: 64, offset: 5248)
!7425 = !DIDerivedType(tag: DW_TAG_member, name: "sk_destruct", scope: !506, file: !507, line: 517, baseType: !606, size: 64, offset: 5312)
!7426 = !DIDerivedType(tag: DW_TAG_member, name: "sk_reuseport_cb", scope: !506, file: !507, line: 518, baseType: !7427, size: 64, offset: 5376)
!7427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7428, size: 64)
!7428 = !DICompositeType(tag: DW_TAG_structure_type, name: "sock_reuseport", file: !3048, line: 38, flags: DIFlagFwdDecl)
!7429 = !DIDerivedType(tag: DW_TAG_member, name: "sk_rcu", scope: !506, file: !507, line: 522, baseType: !359, size: 128, align: 64, offset: 5440)
!7430 = !DIDerivedType(tag: DW_TAG_member, name: "ip_defrag_offset", scope: !502, file: !477, line: 735, baseType: !37, size: 32)
!7431 = !DIDerivedType(tag: DW_TAG_member, scope: !476, file: !477, line: 738, baseType: !7432, size: 64, offset: 256)
!7432 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !476, file: !477, line: 738, size: 64, elements: !7433)
!7433 = !{!7434, !7435}
!7434 = !DIDerivedType(tag: DW_TAG_member, name: "tstamp", scope: !7432, file: !477, line: 739, baseType: !1395, size: 64)
!7435 = !DIDerivedType(tag: DW_TAG_member, name: "skb_mstamp_ns", scope: !7432, file: !477, line: 740, baseType: !391, size: 64)
!7436 = !DIDerivedType(tag: DW_TAG_member, name: "cb", scope: !476, file: !477, line: 748, baseType: !7437, size: 384, align: 64, offset: 320)
!7437 = !DICompositeType(tag: DW_TAG_array_type, baseType: !328, size: 384, elements: !7438)
!7438 = !{!7439}
!7439 = !DISubrange(count: 48)
!7440 = !DIDerivedType(tag: DW_TAG_member, scope: !476, file: !477, line: 750, baseType: !7441, size: 128, offset: 704)
!7441 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !476, file: !477, line: 750, size: 128, elements: !7442)
!7442 = !{!7443, !7448}
!7443 = !DIDerivedType(tag: DW_TAG_member, scope: !7441, file: !477, line: 751, baseType: !7444, size: 128)
!7444 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7441, file: !477, line: 751, size: 128, elements: !7445)
!7445 = !{!7446, !7447}
!7446 = !DIDerivedType(tag: DW_TAG_member, name: "_skb_refdst", scope: !7444, file: !477, line: 752, baseType: !372, size: 64)
!7447 = !DIDerivedType(tag: DW_TAG_member, name: "destructor", scope: !7444, file: !477, line: 753, baseType: !2786, size: 64, offset: 64)
!7448 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_tsorted_anchor", scope: !7441, file: !477, line: 755, baseType: !344, size: 128)
!7449 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !476, file: !477, line: 761, baseType: !7, size: 32, offset: 832)
!7450 = !DIDerivedType(tag: DW_TAG_member, name: "data_len", scope: !476, file: !477, line: 762, baseType: !7, size: 32, offset: 864)
!7451 = !DIDerivedType(tag: DW_TAG_member, name: "mac_len", scope: !476, file: !477, line: 763, baseType: !531, size: 16, offset: 896)
!7452 = !DIDerivedType(tag: DW_TAG_member, name: "hdr_len", scope: !476, file: !477, line: 764, baseType: !531, size: 16, offset: 912)
!7453 = !DIDerivedType(tag: DW_TAG_member, name: "queue_mapping", scope: !476, file: !477, line: 769, baseType: !531, size: 16, offset: 928)
!7454 = !DIDerivedType(tag: DW_TAG_member, name: "__cloned_offset", scope: !476, file: !477, line: 780, baseType: !7455, offset: 944)
!7455 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1452, elements: !2009)
!7456 = !DIDerivedType(tag: DW_TAG_member, name: "cloned", scope: !476, file: !477, line: 782, baseType: !1452, size: 1, offset: 944, flags: DIFlagBitField, extraData: i64 944)
!7457 = !DIDerivedType(tag: DW_TAG_member, name: "nohdr", scope: !476, file: !477, line: 783, baseType: !1452, size: 1, offset: 945, flags: DIFlagBitField, extraData: i64 944)
!7458 = !DIDerivedType(tag: DW_TAG_member, name: "fclone", scope: !476, file: !477, line: 784, baseType: !1452, size: 2, offset: 946, flags: DIFlagBitField, extraData: i64 944)
!7459 = !DIDerivedType(tag: DW_TAG_member, name: "peeked", scope: !476, file: !477, line: 785, baseType: !1452, size: 1, offset: 948, flags: DIFlagBitField, extraData: i64 944)
!7460 = !DIDerivedType(tag: DW_TAG_member, name: "head_frag", scope: !476, file: !477, line: 786, baseType: !1452, size: 1, offset: 949, flags: DIFlagBitField, extraData: i64 944)
!7461 = !DIDerivedType(tag: DW_TAG_member, name: "pfmemalloc", scope: !476, file: !477, line: 787, baseType: !1452, size: 1, offset: 950, flags: DIFlagBitField, extraData: i64 944)
!7462 = !DIDerivedType(tag: DW_TAG_member, name: "headers_start", scope: !476, file: !477, line: 795, baseType: !7463, offset: 960)
!7463 = !DICompositeType(tag: DW_TAG_array_type, baseType: !523, elements: !2009)
!7464 = !DIDerivedType(tag: DW_TAG_member, name: "__pkt_type_offset", scope: !476, file: !477, line: 807, baseType: !7455, offset: 960)
!7465 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_type", scope: !476, file: !477, line: 809, baseType: !1452, size: 3, offset: 960, flags: DIFlagBitField, extraData: i64 960)
!7466 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_df", scope: !476, file: !477, line: 810, baseType: !1452, size: 1, offset: 963, flags: DIFlagBitField, extraData: i64 960)
!7467 = !DIDerivedType(tag: DW_TAG_member, name: "nf_trace", scope: !476, file: !477, line: 811, baseType: !1452, size: 1, offset: 964, flags: DIFlagBitField, extraData: i64 960)
!7468 = !DIDerivedType(tag: DW_TAG_member, name: "ip_summed", scope: !476, file: !477, line: 812, baseType: !1452, size: 2, offset: 965, flags: DIFlagBitField, extraData: i64 960)
!7469 = !DIDerivedType(tag: DW_TAG_member, name: "ooo_okay", scope: !476, file: !477, line: 813, baseType: !1452, size: 1, offset: 967, flags: DIFlagBitField, extraData: i64 960)
!7470 = !DIDerivedType(tag: DW_TAG_member, name: "l4_hash", scope: !476, file: !477, line: 815, baseType: !1452, size: 1, offset: 968, flags: DIFlagBitField, extraData: i64 960)
!7471 = !DIDerivedType(tag: DW_TAG_member, name: "sw_hash", scope: !476, file: !477, line: 816, baseType: !1452, size: 1, offset: 969, flags: DIFlagBitField, extraData: i64 960)
!7472 = !DIDerivedType(tag: DW_TAG_member, name: "wifi_acked_valid", scope: !476, file: !477, line: 817, baseType: !1452, size: 1, offset: 970, flags: DIFlagBitField, extraData: i64 960)
!7473 = !DIDerivedType(tag: DW_TAG_member, name: "wifi_acked", scope: !476, file: !477, line: 818, baseType: !1452, size: 1, offset: 971, flags: DIFlagBitField, extraData: i64 960)
!7474 = !DIDerivedType(tag: DW_TAG_member, name: "no_fcs", scope: !476, file: !477, line: 819, baseType: !1452, size: 1, offset: 972, flags: DIFlagBitField, extraData: i64 960)
!7475 = !DIDerivedType(tag: DW_TAG_member, name: "encapsulation", scope: !476, file: !477, line: 821, baseType: !1452, size: 1, offset: 973, flags: DIFlagBitField, extraData: i64 960)
!7476 = !DIDerivedType(tag: DW_TAG_member, name: "encap_hdr_csum", scope: !476, file: !477, line: 822, baseType: !1452, size: 1, offset: 974, flags: DIFlagBitField, extraData: i64 960)
!7477 = !DIDerivedType(tag: DW_TAG_member, name: "csum_valid", scope: !476, file: !477, line: 823, baseType: !1452, size: 1, offset: 975, flags: DIFlagBitField, extraData: i64 960)
!7478 = !DIDerivedType(tag: DW_TAG_member, name: "__pkt_vlan_present_offset", scope: !476, file: !477, line: 832, baseType: !7455, offset: 976)
!7479 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_present", scope: !476, file: !477, line: 834, baseType: !1452, size: 1, offset: 976, flags: DIFlagBitField, extraData: i64 976)
!7480 = !DIDerivedType(tag: DW_TAG_member, name: "csum_complete_sw", scope: !476, file: !477, line: 835, baseType: !1452, size: 1, offset: 977, flags: DIFlagBitField, extraData: i64 976)
!7481 = !DIDerivedType(tag: DW_TAG_member, name: "csum_level", scope: !476, file: !477, line: 836, baseType: !1452, size: 2, offset: 978, flags: DIFlagBitField, extraData: i64 976)
!7482 = !DIDerivedType(tag: DW_TAG_member, name: "csum_not_inet", scope: !476, file: !477, line: 837, baseType: !1452, size: 1, offset: 980, flags: DIFlagBitField, extraData: i64 976)
!7483 = !DIDerivedType(tag: DW_TAG_member, name: "dst_pending_confirm", scope: !476, file: !477, line: 838, baseType: !1452, size: 1, offset: 981, flags: DIFlagBitField, extraData: i64 976)
!7484 = !DIDerivedType(tag: DW_TAG_member, name: "ndisc_nodetype", scope: !476, file: !477, line: 840, baseType: !1452, size: 2, offset: 982, flags: DIFlagBitField, extraData: i64 976)
!7485 = !DIDerivedType(tag: DW_TAG_member, name: "ipvs_property", scope: !476, file: !477, line: 843, baseType: !1452, size: 1, offset: 984, flags: DIFlagBitField, extraData: i64 976)
!7486 = !DIDerivedType(tag: DW_TAG_member, name: "inner_protocol_type", scope: !476, file: !477, line: 844, baseType: !1452, size: 1, offset: 985, flags: DIFlagBitField, extraData: i64 976)
!7487 = !DIDerivedType(tag: DW_TAG_member, name: "remcsum_offload", scope: !476, file: !477, line: 845, baseType: !1452, size: 1, offset: 986, flags: DIFlagBitField, extraData: i64 976)
!7488 = !DIDerivedType(tag: DW_TAG_member, name: "offload_fwd_mark", scope: !476, file: !477, line: 847, baseType: !1452, size: 1, offset: 987, flags: DIFlagBitField, extraData: i64 976)
!7489 = !DIDerivedType(tag: DW_TAG_member, name: "offload_l3_fwd_mark", scope: !476, file: !477, line: 848, baseType: !1452, size: 1, offset: 988, flags: DIFlagBitField, extraData: i64 976)
!7490 = !DIDerivedType(tag: DW_TAG_member, scope: !476, file: !477, line: 866, baseType: !7491, size: 32, offset: 992)
!7491 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !476, file: !477, line: 866, size: 32, elements: !7492)
!7492 = !{!7493, !7495}
!7493 = !DIDerivedType(tag: DW_TAG_member, name: "csum", scope: !7491, file: !477, line: 867, baseType: !7494, size: 32)
!7494 = !DIDerivedType(tag: DW_TAG_typedef, name: "__wsum", file: !522, line: 37, baseType: !523)
!7495 = !DIDerivedType(tag: DW_TAG_member, scope: !7491, file: !477, line: 868, baseType: !7496, size: 32)
!7496 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7491, file: !477, line: 868, size: 32, elements: !7497)
!7497 = !{!7498, !7499}
!7498 = !DIDerivedType(tag: DW_TAG_member, name: "csum_start", scope: !7496, file: !477, line: 869, baseType: !531, size: 16)
!7499 = !DIDerivedType(tag: DW_TAG_member, name: "csum_offset", scope: !7496, file: !477, line: 870, baseType: !531, size: 16, offset: 16)
!7500 = !DIDerivedType(tag: DW_TAG_member, name: "priority", scope: !476, file: !477, line: 873, baseType: !523, size: 32, offset: 1024)
!7501 = !DIDerivedType(tag: DW_TAG_member, name: "skb_iif", scope: !476, file: !477, line: 874, baseType: !37, size: 32, offset: 1056)
!7502 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !476, file: !477, line: 875, baseType: !523, size: 32, offset: 1088)
!7503 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_proto", scope: !476, file: !477, line: 876, baseType: !544, size: 16, offset: 1120)
!7504 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_tci", scope: !476, file: !477, line: 877, baseType: !531, size: 16, offset: 1136)
!7505 = !DIDerivedType(tag: DW_TAG_member, scope: !476, file: !477, line: 879, baseType: !7506, size: 32, offset: 1152)
!7506 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !476, file: !477, line: 879, size: 32, elements: !7507)
!7507 = !{!7508, !7509}
!7508 = !DIDerivedType(tag: DW_TAG_member, name: "napi_id", scope: !7506, file: !477, line: 880, baseType: !7, size: 32)
!7509 = !DIDerivedType(tag: DW_TAG_member, name: "sender_cpu", scope: !7506, file: !477, line: 881, baseType: !7, size: 32)
!7510 = !DIDerivedType(tag: DW_TAG_member, scope: !476, file: !477, line: 888, baseType: !7511, size: 32, offset: 1184)
!7511 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !476, file: !477, line: 888, size: 32, elements: !7512)
!7512 = !{!7513, !7514}
!7513 = !DIDerivedType(tag: DW_TAG_member, name: "mark", scope: !7511, file: !477, line: 889, baseType: !523, size: 32)
!7514 = !DIDerivedType(tag: DW_TAG_member, name: "reserved_tailroom", scope: !7511, file: !477, line: 890, baseType: !523, size: 32)
!7515 = !DIDerivedType(tag: DW_TAG_member, scope: !476, file: !477, line: 893, baseType: !7516, size: 16, offset: 1216)
!7516 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !476, file: !477, line: 893, size: 16, elements: !7517)
!7517 = !{!7518, !7519}
!7518 = !DIDerivedType(tag: DW_TAG_member, name: "inner_protocol", scope: !7516, file: !477, line: 894, baseType: !544, size: 16)
!7519 = !DIDerivedType(tag: DW_TAG_member, name: "inner_ipproto", scope: !7516, file: !477, line: 895, baseType: !1452, size: 8)
!7520 = !DIDerivedType(tag: DW_TAG_member, name: "inner_transport_header", scope: !476, file: !477, line: 898, baseType: !531, size: 16, offset: 1232)
!7521 = !DIDerivedType(tag: DW_TAG_member, name: "inner_network_header", scope: !476, file: !477, line: 899, baseType: !531, size: 16, offset: 1248)
!7522 = !DIDerivedType(tag: DW_TAG_member, name: "inner_mac_header", scope: !476, file: !477, line: 900, baseType: !531, size: 16, offset: 1264)
!7523 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !476, file: !477, line: 902, baseType: !544, size: 16, offset: 1280)
!7524 = !DIDerivedType(tag: DW_TAG_member, name: "transport_header", scope: !476, file: !477, line: 903, baseType: !531, size: 16, offset: 1296)
!7525 = !DIDerivedType(tag: DW_TAG_member, name: "network_header", scope: !476, file: !477, line: 904, baseType: !531, size: 16, offset: 1312)
!7526 = !DIDerivedType(tag: DW_TAG_member, name: "mac_header", scope: !476, file: !477, line: 905, baseType: !531, size: 16, offset: 1328)
!7527 = !DIDerivedType(tag: DW_TAG_member, name: "headers_end", scope: !476, file: !477, line: 908, baseType: !7463, offset: 1344)
!7528 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !476, file: !477, line: 912, baseType: !7529, size: 32, offset: 1344)
!7529 = !DIDerivedType(tag: DW_TAG_typedef, name: "sk_buff_data_t", file: !477, line: 606, baseType: !7)
!7530 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !476, file: !477, line: 913, baseType: !7529, size: 32, offset: 1376)
!7531 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !476, file: !477, line: 914, baseType: !7532, size: 64, offset: 1408)
!7532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !549, size: 64)
!7533 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !476, file: !477, line: 915, baseType: !7532, size: 64, offset: 1472)
!7534 = !DIDerivedType(tag: DW_TAG_member, name: "truesize", scope: !476, file: !477, line: 916, baseType: !7, size: 32, offset: 1536)
!7535 = !DIDerivedType(tag: DW_TAG_member, name: "users", scope: !476, file: !477, line: 917, baseType: !1325, size: 32, offset: 1568)
!7536 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_features_check", scope: !458, file: !36, line: 1290, baseType: !7537, size: 64, offset: 320)
!7537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7538, size: 64)
!7538 = !DISubroutineType(types: !7539)
!7539 = !{!389, !475, !350, !389}
!7540 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_select_queue", scope: !458, file: !36, line: 1293, baseType: !7541, size: 64, offset: 384)
!7541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7542, size: 64)
!7542 = !DISubroutineType(types: !7543)
!7543 = !{!1092, !350, !475, !350}
!7544 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_change_rx_flags", scope: !458, file: !36, line: 1296, baseType: !7545, size: 64, offset: 448)
!7545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7546, size: 64)
!7546 = !DISubroutineType(types: !7547)
!7547 = !{null, !350, !37}
!7548 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_rx_mode", scope: !458, file: !36, line: 1298, baseType: !465, size: 64, offset: 512)
!7549 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_mac_address", scope: !458, file: !36, line: 1299, baseType: !7550, size: 64, offset: 576)
!7550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7551, size: 64)
!7551 = !DISubroutineType(types: !7552)
!7552 = !{!37, !350, !625}
!7553 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_validate_addr", scope: !458, file: !36, line: 1301, baseType: !461, size: 64, offset: 640)
!7554 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_do_ioctl", scope: !458, file: !36, line: 1302, baseType: !7555, size: 64, offset: 704)
!7555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7556, size: 64)
!7556 = !DISubroutineType(types: !7557)
!7557 = !{!37, !350, !7558, !37}
!7558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7559, size: 64)
!7559 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifreq", file: !7560, line: 234, size: 320, elements: !7561)
!7560 = !DIFile(filename: "./include/uapi/linux/if.h", directory: "/home/lizy2001/genbc/linux")
!7561 = !{!7562, !7566}
!7562 = !DIDerivedType(tag: DW_TAG_member, name: "ifr_ifrn", scope: !7559, file: !7560, line: 239, baseType: !7563, size: 128)
!7563 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7559, file: !7560, line: 236, size: 128, elements: !7564)
!7564 = !{!7565}
!7565 = !DIDerivedType(tag: DW_TAG_member, name: "ifrn_name", scope: !7563, file: !7560, line: 238, baseType: !327, size: 128)
!7566 = !DIDerivedType(tag: DW_TAG_member, name: "ifr_ifru", scope: !7559, file: !7560, line: 255, baseType: !7567, size: 192, offset: 128)
!7567 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7559, file: !7560, line: 241, size: 192, elements: !7568)
!7568 = !{!7569, !7570, !7571, !7572, !7573, !7574, !7575, !7576, !7577, !7586, !7587, !7588, !7589}
!7569 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_addr", scope: !7567, file: !7560, line: 242, baseType: !574, size: 128)
!7570 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_dstaddr", scope: !7567, file: !7560, line: 243, baseType: !574, size: 128)
!7571 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_broadaddr", scope: !7567, file: !7560, line: 244, baseType: !574, size: 128)
!7572 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_netmask", scope: !7567, file: !7560, line: 245, baseType: !574, size: 128)
!7573 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_hwaddr", scope: !7567, file: !7560, line: 246, baseType: !574, size: 128)
!7574 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_flags", scope: !7567, file: !7560, line: 247, baseType: !1300, size: 16)
!7575 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_ivalue", scope: !7567, file: !7560, line: 248, baseType: !37, size: 32)
!7576 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_mtu", scope: !7567, file: !7560, line: 249, baseType: !37, size: 32)
!7577 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_map", scope: !7567, file: !7560, line: 250, baseType: !7578, size: 192)
!7578 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifmap", file: !7560, line: 196, size: 192, elements: !7579)
!7579 = !{!7580, !7581, !7582, !7583, !7584, !7585}
!7580 = !DIDerivedType(tag: DW_TAG_member, name: "mem_start", scope: !7578, file: !7560, line: 197, baseType: !372, size: 64)
!7581 = !DIDerivedType(tag: DW_TAG_member, name: "mem_end", scope: !7578, file: !7560, line: 198, baseType: !372, size: 64, offset: 64)
!7582 = !DIDerivedType(tag: DW_TAG_member, name: "base_addr", scope: !7578, file: !7560, line: 199, baseType: !532, size: 16, offset: 128)
!7583 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !7578, file: !7560, line: 200, baseType: !549, size: 8, offset: 144)
!7584 = !DIDerivedType(tag: DW_TAG_member, name: "dma", scope: !7578, file: !7560, line: 201, baseType: !549, size: 8, offset: 152)
!7585 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !7578, file: !7560, line: 202, baseType: !549, size: 8, offset: 160)
!7586 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_slave", scope: !7567, file: !7560, line: 251, baseType: !327, size: 128)
!7587 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_newname", scope: !7567, file: !7560, line: 252, baseType: !327, size: 128)
!7588 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_data", scope: !7567, file: !7560, line: 253, baseType: !625, size: 64)
!7589 = !DIDerivedType(tag: DW_TAG_member, name: "ifru_settings", scope: !7567, file: !7560, line: 254, baseType: !7590, size: 128)
!7590 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "if_settings", file: !7560, line: 207, size: 128, elements: !7591)
!7591 = !{!7592, !7593, !7594}
!7592 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !7590, file: !7560, line: 208, baseType: !7, size: 32)
!7593 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !7590, file: !7560, line: 209, baseType: !7, size: 32, offset: 32)
!7594 = !DIDerivedType(tag: DW_TAG_member, name: "ifs_ifsu", scope: !7590, file: !7560, line: 222, baseType: !7595, size: 64, offset: 64)
!7595 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7590, file: !7560, line: 210, size: 64, elements: !7596)
!7596 = !{!7597, !7605, !7612, !7624, !7630, !7637, !7648, !7656}
!7597 = !DIDerivedType(tag: DW_TAG_member, name: "raw_hdlc", scope: !7595, file: !7560, line: 212, baseType: !7598, size: 64)
!7598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7599, size: 64)
!7599 = !DIDerivedType(tag: DW_TAG_typedef, name: "raw_hdlc_proto", file: !7600, line: 56, baseType: !7601)
!7600 = !DIFile(filename: "./include/uapi/linux/hdlc/ioctl.h", directory: "/home/lizy2001/genbc/linux")
!7601 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !7600, line: 53, size: 32, elements: !7602)
!7602 = !{!7603, !7604}
!7603 = !DIDerivedType(tag: DW_TAG_member, name: "encoding", scope: !7601, file: !7600, line: 54, baseType: !532, size: 16)
!7604 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !7601, file: !7600, line: 55, baseType: !532, size: 16, offset: 16)
!7605 = !DIDerivedType(tag: DW_TAG_member, name: "cisco", scope: !7595, file: !7560, line: 213, baseType: !7606, size: 64)
!7606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7607, size: 64)
!7607 = !DIDerivedType(tag: DW_TAG_typedef, name: "cisco_proto", file: !7600, line: 80, baseType: !7608)
!7608 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !7600, line: 77, size: 64, elements: !7609)
!7609 = !{!7610, !7611}
!7610 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !7608, file: !7600, line: 78, baseType: !7, size: 32)
!7611 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !7608, file: !7600, line: 79, baseType: !7, size: 32, offset: 32)
!7612 = !DIDerivedType(tag: DW_TAG_member, name: "fr", scope: !7595, file: !7560, line: 214, baseType: !7613, size: 64)
!7613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7614, size: 64)
!7614 = !DIDerivedType(tag: DW_TAG_typedef, name: "fr_proto", file: !7600, line: 66, baseType: !7615)
!7615 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !7600, line: 58, size: 192, elements: !7616)
!7616 = !{!7617, !7618, !7619, !7620, !7621, !7622, !7623}
!7617 = !DIDerivedType(tag: DW_TAG_member, name: "t391", scope: !7615, file: !7600, line: 59, baseType: !7, size: 32)
!7618 = !DIDerivedType(tag: DW_TAG_member, name: "t392", scope: !7615, file: !7600, line: 60, baseType: !7, size: 32, offset: 32)
!7619 = !DIDerivedType(tag: DW_TAG_member, name: "n391", scope: !7615, file: !7600, line: 61, baseType: !7, size: 32, offset: 64)
!7620 = !DIDerivedType(tag: DW_TAG_member, name: "n392", scope: !7615, file: !7600, line: 62, baseType: !7, size: 32, offset: 96)
!7621 = !DIDerivedType(tag: DW_TAG_member, name: "n393", scope: !7615, file: !7600, line: 63, baseType: !7, size: 32, offset: 128)
!7622 = !DIDerivedType(tag: DW_TAG_member, name: "lmi", scope: !7615, file: !7600, line: 64, baseType: !532, size: 16, offset: 160)
!7623 = !DIDerivedType(tag: DW_TAG_member, name: "dce", scope: !7615, file: !7600, line: 65, baseType: !532, size: 16, offset: 176)
!7624 = !DIDerivedType(tag: DW_TAG_member, name: "fr_pvc", scope: !7595, file: !7560, line: 215, baseType: !7625, size: 64)
!7625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7626, size: 64)
!7626 = !DIDerivedType(tag: DW_TAG_typedef, name: "fr_proto_pvc", file: !7600, line: 70, baseType: !7627)
!7627 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !7600, line: 68, size: 32, elements: !7628)
!7628 = !{!7629}
!7629 = !DIDerivedType(tag: DW_TAG_member, name: "dlci", scope: !7627, file: !7600, line: 69, baseType: !7, size: 32)
!7630 = !DIDerivedType(tag: DW_TAG_member, name: "fr_pvc_info", scope: !7595, file: !7560, line: 216, baseType: !7631, size: 64)
!7631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7632, size: 64)
!7632 = !DIDerivedType(tag: DW_TAG_typedef, name: "fr_proto_pvc_info", file: !7600, line: 75, baseType: !7633)
!7633 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !7600, line: 72, size: 160, elements: !7634)
!7634 = !{!7635, !7636}
!7635 = !DIDerivedType(tag: DW_TAG_member, name: "dlci", scope: !7633, file: !7600, line: 73, baseType: !7, size: 32)
!7636 = !DIDerivedType(tag: DW_TAG_member, name: "master", scope: !7633, file: !7600, line: 74, baseType: !327, size: 128, offset: 32)
!7637 = !DIDerivedType(tag: DW_TAG_member, name: "x25", scope: !7595, file: !7560, line: 217, baseType: !7638, size: 64)
!7638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7639, size: 64)
!7639 = !DIDerivedType(tag: DW_TAG_typedef, name: "x25_hdlc_proto", file: !7600, line: 89, baseType: !7640)
!7640 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !7600, line: 82, size: 192, elements: !7641)
!7641 = !{!7642, !7643, !7644, !7645, !7646, !7647}
!7642 = !DIDerivedType(tag: DW_TAG_member, name: "dce", scope: !7640, file: !7600, line: 83, baseType: !532, size: 16)
!7643 = !DIDerivedType(tag: DW_TAG_member, name: "modulo", scope: !7640, file: !7600, line: 84, baseType: !7, size: 32, offset: 32)
!7644 = !DIDerivedType(tag: DW_TAG_member, name: "window", scope: !7640, file: !7600, line: 85, baseType: !7, size: 32, offset: 64)
!7645 = !DIDerivedType(tag: DW_TAG_member, name: "t1", scope: !7640, file: !7600, line: 86, baseType: !7, size: 32, offset: 96)
!7646 = !DIDerivedType(tag: DW_TAG_member, name: "t2", scope: !7640, file: !7600, line: 87, baseType: !7, size: 32, offset: 128)
!7647 = !DIDerivedType(tag: DW_TAG_member, name: "n2", scope: !7640, file: !7600, line: 88, baseType: !7, size: 32, offset: 160)
!7648 = !DIDerivedType(tag: DW_TAG_member, name: "sync", scope: !7595, file: !7560, line: 220, baseType: !7649, size: 64)
!7649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7650, size: 64)
!7650 = !DIDerivedType(tag: DW_TAG_typedef, name: "sync_serial_settings", file: !7600, line: 44, baseType: !7651)
!7651 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !7600, line: 40, size: 96, elements: !7652)
!7652 = !{!7653, !7654, !7655}
!7653 = !DIDerivedType(tag: DW_TAG_member, name: "clock_rate", scope: !7651, file: !7600, line: 41, baseType: !7, size: 32)
!7654 = !DIDerivedType(tag: DW_TAG_member, name: "clock_type", scope: !7651, file: !7600, line: 42, baseType: !7, size: 32, offset: 32)
!7655 = !DIDerivedType(tag: DW_TAG_member, name: "loopback", scope: !7651, file: !7600, line: 43, baseType: !532, size: 16, offset: 64)
!7656 = !DIDerivedType(tag: DW_TAG_member, name: "te1", scope: !7595, file: !7560, line: 221, baseType: !7657, size: 64)
!7657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7658, size: 64)
!7658 = !DIDerivedType(tag: DW_TAG_typedef, name: "te1_settings", file: !7600, line: 51, baseType: !7659)
!7659 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !7600, line: 46, size: 128, elements: !7660)
!7660 = !{!7661, !7662, !7663, !7664}
!7661 = !DIDerivedType(tag: DW_TAG_member, name: "clock_rate", scope: !7659, file: !7600, line: 47, baseType: !7, size: 32)
!7662 = !DIDerivedType(tag: DW_TAG_member, name: "clock_type", scope: !7659, file: !7600, line: 48, baseType: !7, size: 32, offset: 32)
!7663 = !DIDerivedType(tag: DW_TAG_member, name: "loopback", scope: !7659, file: !7600, line: 49, baseType: !532, size: 16, offset: 64)
!7664 = !DIDerivedType(tag: DW_TAG_member, name: "slot_map", scope: !7659, file: !7600, line: 50, baseType: !7, size: 32, offset: 96)
!7665 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_config", scope: !458, file: !36, line: 1304, baseType: !7666, size: 64, offset: 768)
!7666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7667, size: 64)
!7667 = !DISubroutineType(types: !7668)
!7668 = !{!37, !350, !7669}
!7669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7578, size: 64)
!7670 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_change_mtu", scope: !458, file: !36, line: 1306, baseType: !7671, size: 64, offset: 832)
!7671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7672, size: 64)
!7672 = !DISubroutineType(types: !7673)
!7673 = !{!37, !350, !37}
!7674 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_neigh_setup", scope: !458, file: !36, line: 1308, baseType: !7675, size: 64, offset: 896)
!7675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7676, size: 64)
!7676 = !DISubroutineType(types: !7677)
!7677 = !{!37, !350, !2946}
!7678 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_tx_timeout", scope: !458, file: !36, line: 1310, baseType: !7679, size: 64, offset: 960)
!7679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7680, size: 64)
!7680 = !DISubroutineType(types: !7681)
!7681 = !{null, !350, !7}
!7682 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_stats64", scope: !458, file: !36, line: 1313, baseType: !7683, size: 64, offset: 1024)
!7683 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7684, size: 64)
!7684 = !DISubroutineType(types: !7685)
!7685 = !{null, !350, !7686}
!7686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7687, size: 64)
!7687 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtnl_link_stats64", file: !7688, line: 214, size: 1536, elements: !7689)
!7688 = !DIFile(filename: "./include/uapi/linux/if_link.h", directory: "/home/lizy2001/genbc/linux")
!7689 = !{!7690, !7691, !7692, !7693, !7694, !7695, !7696, !7697, !7698, !7699, !7700, !7701, !7702, !7703, !7704, !7705, !7706, !7707, !7708, !7709, !7710, !7711, !7712, !7713}
!7690 = !DIDerivedType(tag: DW_TAG_member, name: "rx_packets", scope: !7687, file: !7688, line: 215, baseType: !393, size: 64)
!7691 = !DIDerivedType(tag: DW_TAG_member, name: "tx_packets", scope: !7687, file: !7688, line: 216, baseType: !393, size: 64, offset: 64)
!7692 = !DIDerivedType(tag: DW_TAG_member, name: "rx_bytes", scope: !7687, file: !7688, line: 217, baseType: !393, size: 64, offset: 128)
!7693 = !DIDerivedType(tag: DW_TAG_member, name: "tx_bytes", scope: !7687, file: !7688, line: 218, baseType: !393, size: 64, offset: 192)
!7694 = !DIDerivedType(tag: DW_TAG_member, name: "rx_errors", scope: !7687, file: !7688, line: 219, baseType: !393, size: 64, offset: 256)
!7695 = !DIDerivedType(tag: DW_TAG_member, name: "tx_errors", scope: !7687, file: !7688, line: 220, baseType: !393, size: 64, offset: 320)
!7696 = !DIDerivedType(tag: DW_TAG_member, name: "rx_dropped", scope: !7687, file: !7688, line: 221, baseType: !393, size: 64, offset: 384)
!7697 = !DIDerivedType(tag: DW_TAG_member, name: "tx_dropped", scope: !7687, file: !7688, line: 222, baseType: !393, size: 64, offset: 448)
!7698 = !DIDerivedType(tag: DW_TAG_member, name: "multicast", scope: !7687, file: !7688, line: 223, baseType: !393, size: 64, offset: 512)
!7699 = !DIDerivedType(tag: DW_TAG_member, name: "collisions", scope: !7687, file: !7688, line: 224, baseType: !393, size: 64, offset: 576)
!7700 = !DIDerivedType(tag: DW_TAG_member, name: "rx_length_errors", scope: !7687, file: !7688, line: 227, baseType: !393, size: 64, offset: 640)
!7701 = !DIDerivedType(tag: DW_TAG_member, name: "rx_over_errors", scope: !7687, file: !7688, line: 228, baseType: !393, size: 64, offset: 704)
!7702 = !DIDerivedType(tag: DW_TAG_member, name: "rx_crc_errors", scope: !7687, file: !7688, line: 229, baseType: !393, size: 64, offset: 768)
!7703 = !DIDerivedType(tag: DW_TAG_member, name: "rx_frame_errors", scope: !7687, file: !7688, line: 230, baseType: !393, size: 64, offset: 832)
!7704 = !DIDerivedType(tag: DW_TAG_member, name: "rx_fifo_errors", scope: !7687, file: !7688, line: 231, baseType: !393, size: 64, offset: 896)
!7705 = !DIDerivedType(tag: DW_TAG_member, name: "rx_missed_errors", scope: !7687, file: !7688, line: 232, baseType: !393, size: 64, offset: 960)
!7706 = !DIDerivedType(tag: DW_TAG_member, name: "tx_aborted_errors", scope: !7687, file: !7688, line: 235, baseType: !393, size: 64, offset: 1024)
!7707 = !DIDerivedType(tag: DW_TAG_member, name: "tx_carrier_errors", scope: !7687, file: !7688, line: 236, baseType: !393, size: 64, offset: 1088)
!7708 = !DIDerivedType(tag: DW_TAG_member, name: "tx_fifo_errors", scope: !7687, file: !7688, line: 237, baseType: !393, size: 64, offset: 1152)
!7709 = !DIDerivedType(tag: DW_TAG_member, name: "tx_heartbeat_errors", scope: !7687, file: !7688, line: 238, baseType: !393, size: 64, offset: 1216)
!7710 = !DIDerivedType(tag: DW_TAG_member, name: "tx_window_errors", scope: !7687, file: !7688, line: 239, baseType: !393, size: 64, offset: 1280)
!7711 = !DIDerivedType(tag: DW_TAG_member, name: "rx_compressed", scope: !7687, file: !7688, line: 242, baseType: !393, size: 64, offset: 1344)
!7712 = !DIDerivedType(tag: DW_TAG_member, name: "tx_compressed", scope: !7687, file: !7688, line: 243, baseType: !393, size: 64, offset: 1408)
!7713 = !DIDerivedType(tag: DW_TAG_member, name: "rx_nohandler", scope: !7687, file: !7688, line: 244, baseType: !393, size: 64, offset: 1472)
!7714 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_has_offload_stats", scope: !458, file: !36, line: 1315, baseType: !7715, size: 64, offset: 1088)
!7715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7716, size: 64)
!7716 = !DISubroutineType(types: !7717)
!7717 = !{!595, !2819, !37}
!7718 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_offload_stats", scope: !458, file: !36, line: 1316, baseType: !7719, size: 64, offset: 1152)
!7719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7720, size: 64)
!7720 = !DISubroutineType(types: !7721)
!7721 = !{!37, !37, !2819, !625}
!7722 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_stats", scope: !458, file: !36, line: 1319, baseType: !7723, size: 64, offset: 1216)
!7723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7724, size: 64)
!7724 = !DISubroutineType(types: !7725)
!7725 = !{!7726, !350}
!7726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !405, size: 64)
!7727 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_vlan_rx_add_vid", scope: !458, file: !36, line: 1321, baseType: !7728, size: 64, offset: 1280)
!7728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7729, size: 64)
!7729 = !DISubroutineType(types: !7730)
!7730 = !{!37, !350, !544, !1092}
!7731 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_vlan_rx_kill_vid", scope: !458, file: !36, line: 1323, baseType: !7728, size: 64, offset: 1344)
!7732 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_mac", scope: !458, file: !36, line: 1331, baseType: !7733, size: 64, offset: 1408)
!7733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7734, size: 64)
!7734 = !DISubroutineType(types: !7735)
!7735 = !{!37, !350, !37, !7736}
!7736 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1451, size: 64)
!7737 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_vlan", scope: !458, file: !36, line: 1333, baseType: !7738, size: 64, offset: 1472)
!7738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7739, size: 64)
!7739 = !DISubroutineType(types: !7740)
!7740 = !{!37, !350, !37, !1092, !1451, !544}
!7741 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_rate", scope: !458, file: !36, line: 1336, baseType: !7742, size: 64, offset: 1536)
!7742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7743, size: 64)
!7743 = !DISubroutineType(types: !7744)
!7744 = !{!37, !350, !37, !37, !37}
!7745 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_spoofchk", scope: !458, file: !36, line: 1339, baseType: !7746, size: 64, offset: 1600)
!7746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7747, size: 64)
!7747 = !DISubroutineType(types: !7748)
!7748 = !{!37, !350, !37, !595}
!7749 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_trust", scope: !458, file: !36, line: 1341, baseType: !7746, size: 64, offset: 1664)
!7750 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_vf_config", scope: !458, file: !36, line: 1343, baseType: !7751, size: 64, offset: 1728)
!7751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7752, size: 64)
!7752 = !DISubroutineType(types: !7753)
!7753 = !{!37, !350, !37, !7754}
!7754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7755, size: 64)
!7755 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifla_vf_info", file: !7756, line: 20, size: 576, elements: !7757)
!7756 = !DIFile(filename: "./include/linux/if_link.h", directory: "/home/lizy2001/genbc/linux")
!7757 = !{!7758, !7759, !7761, !7762, !7763, !7764, !7765, !7766, !7767, !7768, !7769}
!7758 = !DIDerivedType(tag: DW_TAG_member, name: "vf", scope: !7755, file: !7756, line: 21, baseType: !523, size: 32)
!7759 = !DIDerivedType(tag: DW_TAG_member, name: "mac", scope: !7755, file: !7756, line: 22, baseType: !7760, size: 256, offset: 32)
!7760 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1452, size: 256, elements: !771)
!7761 = !DIDerivedType(tag: DW_TAG_member, name: "vlan", scope: !7755, file: !7756, line: 23, baseType: !523, size: 32, offset: 288)
!7762 = !DIDerivedType(tag: DW_TAG_member, name: "qos", scope: !7755, file: !7756, line: 24, baseType: !523, size: 32, offset: 320)
!7763 = !DIDerivedType(tag: DW_TAG_member, name: "spoofchk", scope: !7755, file: !7756, line: 25, baseType: !523, size: 32, offset: 352)
!7764 = !DIDerivedType(tag: DW_TAG_member, name: "linkstate", scope: !7755, file: !7756, line: 26, baseType: !523, size: 32, offset: 384)
!7765 = !DIDerivedType(tag: DW_TAG_member, name: "min_tx_rate", scope: !7755, file: !7756, line: 27, baseType: !523, size: 32, offset: 416)
!7766 = !DIDerivedType(tag: DW_TAG_member, name: "max_tx_rate", scope: !7755, file: !7756, line: 28, baseType: !523, size: 32, offset: 448)
!7767 = !DIDerivedType(tag: DW_TAG_member, name: "rss_query_en", scope: !7755, file: !7756, line: 29, baseType: !523, size: 32, offset: 480)
!7768 = !DIDerivedType(tag: DW_TAG_member, name: "trusted", scope: !7755, file: !7756, line: 30, baseType: !523, size: 32, offset: 512)
!7769 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_proto", scope: !7755, file: !7756, line: 31, baseType: !544, size: 16, offset: 544)
!7770 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_link_state", scope: !458, file: !36, line: 1346, baseType: !7771, size: 64, offset: 1792)
!7771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7772, size: 64)
!7772 = !DISubroutineType(types: !7773)
!7773 = !{!37, !350, !37, !37}
!7774 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_vf_stats", scope: !458, file: !36, line: 1348, baseType: !7775, size: 64, offset: 1856)
!7775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7776, size: 64)
!7776 = !DISubroutineType(types: !7777)
!7777 = !{!37, !350, !37, !7778}
!7778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7779, size: 64)
!7779 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifla_vf_stats", file: !7756, line: 9, size: 512, elements: !7780)
!7780 = !{!7781, !7782, !7783, !7784, !7785, !7786, !7787, !7788}
!7781 = !DIDerivedType(tag: DW_TAG_member, name: "rx_packets", scope: !7779, file: !7756, line: 10, baseType: !393, size: 64)
!7782 = !DIDerivedType(tag: DW_TAG_member, name: "tx_packets", scope: !7779, file: !7756, line: 11, baseType: !393, size: 64, offset: 64)
!7783 = !DIDerivedType(tag: DW_TAG_member, name: "rx_bytes", scope: !7779, file: !7756, line: 12, baseType: !393, size: 64, offset: 128)
!7784 = !DIDerivedType(tag: DW_TAG_member, name: "tx_bytes", scope: !7779, file: !7756, line: 13, baseType: !393, size: 64, offset: 192)
!7785 = !DIDerivedType(tag: DW_TAG_member, name: "broadcast", scope: !7779, file: !7756, line: 14, baseType: !393, size: 64, offset: 256)
!7786 = !DIDerivedType(tag: DW_TAG_member, name: "multicast", scope: !7779, file: !7756, line: 15, baseType: !393, size: 64, offset: 320)
!7787 = !DIDerivedType(tag: DW_TAG_member, name: "rx_dropped", scope: !7779, file: !7756, line: 16, baseType: !393, size: 64, offset: 384)
!7788 = !DIDerivedType(tag: DW_TAG_member, name: "tx_dropped", scope: !7779, file: !7756, line: 17, baseType: !393, size: 64, offset: 448)
!7789 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_port", scope: !458, file: !36, line: 1352, baseType: !7790, size: 64, offset: 1920)
!7790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7791, size: 64)
!7791 = !DISubroutineType(types: !7792)
!7792 = !{!37, !350, !37, !7793}
!7793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7794, size: 64)
!7794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2538, size: 64)
!7795 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_vf_port", scope: !458, file: !36, line: 1355, baseType: !7796, size: 64, offset: 1984)
!7796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7797, size: 64)
!7797 = !DISubroutineType(types: !7798)
!7798 = !{!37, !350, !37, !475}
!7799 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_vf_guid", scope: !458, file: !36, line: 1357, baseType: !7800, size: 64, offset: 2048)
!7800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7801, size: 64)
!7801 = !DISubroutineType(types: !7802)
!7802 = !{!37, !350, !37, !7803, !7803}
!7803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7804, size: 64)
!7804 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifla_vf_guid", file: !7688, line: 956, size: 128, elements: !7805)
!7805 = !{!7806, !7807}
!7806 = !DIDerivedType(tag: DW_TAG_member, name: "vf", scope: !7804, file: !7688, line: 957, baseType: !523, size: 32)
!7807 = !DIDerivedType(tag: DW_TAG_member, name: "guid", scope: !7804, file: !7688, line: 958, baseType: !393, size: 64, offset: 64)
!7808 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_guid", scope: !458, file: !36, line: 1361, baseType: !7809, size: 64, offset: 2112)
!7809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7810, size: 64)
!7810 = !DISubroutineType(types: !7811)
!7811 = !{!37, !350, !37, !391, !37}
!7812 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_vf_rss_query_en", scope: !458, file: !36, line: 1364, baseType: !7746, size: 64, offset: 2176)
!7813 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_setup_tc", scope: !458, file: !36, line: 1367, baseType: !7814, size: 64, offset: 2240)
!7814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7815, size: 64)
!7815 = !DISubroutineType(types: !7816)
!7816 = !{!37, !350, !42, !625}
!7817 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_add_slave", scope: !458, file: !36, line: 1400, baseType: !7818, size: 64, offset: 2304)
!7818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7819, size: 64)
!7819 = !DISubroutineType(types: !7820)
!7820 = !{!37, !350, !350, !2530}
!7821 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_del_slave", scope: !458, file: !36, line: 1403, baseType: !7822, size: 64, offset: 2368)
!7822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7823, size: 64)
!7823 = !DISubroutineType(types: !7824)
!7824 = !{!37, !350, !350}
!7825 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_xmit_slave", scope: !458, file: !36, line: 1405, baseType: !7826, size: 64, offset: 2432)
!7826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7827, size: 64)
!7827 = !DISubroutineType(types: !7828)
!7828 = !{!350, !350, !475, !595}
!7829 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fix_features", scope: !458, file: !36, line: 1408, baseType: !7830, size: 64, offset: 2496)
!7830 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7831, size: 64)
!7831 = !DISubroutineType(types: !7832)
!7832 = !{!389, !350, !389}
!7833 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_features", scope: !458, file: !36, line: 1410, baseType: !7834, size: 64, offset: 2560)
!7834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7835, size: 64)
!7835 = !DISubroutineType(types: !7836)
!7836 = !{!37, !350, !389}
!7837 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_neigh_construct", scope: !458, file: !36, line: 1412, baseType: !7838, size: 64, offset: 2624)
!7838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7839, size: 64)
!7839 = !DISubroutineType(types: !7840)
!7840 = !{!37, !350, !2802}
!7841 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_neigh_destroy", scope: !458, file: !36, line: 1414, baseType: !7842, size: 64, offset: 2688)
!7842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7843, size: 64)
!7843 = !DISubroutineType(types: !7844)
!7844 = !{null, !350, !2802}
!7845 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fdb_add", scope: !458, file: !36, line: 1417, baseType: !7846, size: 64, offset: 2752)
!7846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7847, size: 64)
!7847 = !DISubroutineType(types: !7848)
!7848 = !{!37, !7849, !7793, !350, !766, !1092, !1092, !2530}
!7849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7850, size: 64)
!7850 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ndmsg", file: !7851, line: 8, size: 96, elements: !7852)
!7851 = !DIFile(filename: "./include/uapi/linux/neighbour.h", directory: "/home/lizy2001/genbc/linux")
!7852 = !{!7853, !7854, !7855, !7856, !7857, !7858, !7859}
!7853 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_family", scope: !7850, file: !7851, line: 9, baseType: !1452, size: 8)
!7854 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_pad1", scope: !7850, file: !7851, line: 10, baseType: !1452, size: 8, offset: 8)
!7855 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_pad2", scope: !7850, file: !7851, line: 11, baseType: !531, size: 16, offset: 16)
!7856 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_ifindex", scope: !7850, file: !7851, line: 12, baseType: !1544, size: 32, offset: 32)
!7857 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_state", scope: !7850, file: !7851, line: 13, baseType: !531, size: 16, offset: 64)
!7858 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_flags", scope: !7850, file: !7851, line: 14, baseType: !1452, size: 8, offset: 80)
!7859 = !DIDerivedType(tag: DW_TAG_member, name: "ndm_type", scope: !7850, file: !7851, line: 15, baseType: !1452, size: 8, offset: 88)
!7860 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fdb_del", scope: !458, file: !36, line: 1424, baseType: !7861, size: 64, offset: 2816)
!7861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7862, size: 64)
!7862 = !DISubroutineType(types: !7863)
!7863 = !{!37, !7849, !7793, !350, !766, !1092}
!7864 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fdb_dump", scope: !458, file: !36, line: 1429, baseType: !7865, size: 64, offset: 2880)
!7865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7866, size: 64)
!7866 = !DISubroutineType(types: !7867)
!7867 = !{!37, !475, !7868, !350, !350, !594}
!7868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7869, size: 64)
!7869 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netlink_callback", file: !2532, line: 203, size: 1024, elements: !7870)
!7870 = !{!7871, !7872, !7882, !7886, !7890, !7891, !7892, !7893, !7894, !7895, !7896, !7897, !7898, !7899}
!7871 = !DIDerivedType(tag: DW_TAG_member, name: "skb", scope: !7869, file: !2532, line: 204, baseType: !475, size: 64)
!7872 = !DIDerivedType(tag: DW_TAG_member, name: "nlh", scope: !7869, file: !2532, line: 205, baseType: !7873, size: 64, offset: 64)
!7873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7874, size: 64)
!7874 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7875)
!7875 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nlmsghdr", file: !2539, line: 44, size: 128, elements: !7876)
!7876 = !{!7877, !7878, !7879, !7880, !7881}
!7877 = !DIDerivedType(tag: DW_TAG_member, name: "nlmsg_len", scope: !7875, file: !2539, line: 45, baseType: !523, size: 32)
!7878 = !DIDerivedType(tag: DW_TAG_member, name: "nlmsg_type", scope: !7875, file: !2539, line: 46, baseType: !531, size: 16, offset: 32)
!7879 = !DIDerivedType(tag: DW_TAG_member, name: "nlmsg_flags", scope: !7875, file: !2539, line: 47, baseType: !531, size: 16, offset: 48)
!7880 = !DIDerivedType(tag: DW_TAG_member, name: "nlmsg_seq", scope: !7875, file: !2539, line: 48, baseType: !523, size: 32, offset: 64)
!7881 = !DIDerivedType(tag: DW_TAG_member, name: "nlmsg_pid", scope: !7875, file: !2539, line: 49, baseType: !523, size: 32, offset: 96)
!7882 = !DIDerivedType(tag: DW_TAG_member, name: "dump", scope: !7869, file: !2532, line: 206, baseType: !7883, size: 64, offset: 128)
!7883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7884, size: 64)
!7884 = !DISubroutineType(types: !7885)
!7885 = !{!37, !475, !7868}
!7886 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !7869, file: !2532, line: 208, baseType: !7887, size: 64, offset: 192)
!7887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7888, size: 64)
!7888 = !DISubroutineType(types: !7889)
!7889 = !{!37, !7868}
!7890 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !7869, file: !2532, line: 209, baseType: !625, size: 64, offset: 256)
!7891 = !DIDerivedType(tag: DW_TAG_member, name: "module", scope: !7869, file: !2532, line: 211, baseType: !906, size: 64, offset: 320)
!7892 = !DIDerivedType(tag: DW_TAG_member, name: "extack", scope: !7869, file: !2532, line: 212, baseType: !2530, size: 64, offset: 384)
!7893 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !7869, file: !2532, line: 213, baseType: !1092, size: 16, offset: 448)
!7894 = !DIDerivedType(tag: DW_TAG_member, name: "answer_flags", scope: !7869, file: !2532, line: 214, baseType: !1092, size: 16, offset: 464)
!7895 = !DIDerivedType(tag: DW_TAG_member, name: "min_dump_alloc", scope: !7869, file: !2532, line: 215, baseType: !762, size: 32, offset: 480)
!7896 = !DIDerivedType(tag: DW_TAG_member, name: "prev_seq", scope: !7869, file: !2532, line: 216, baseType: !7, size: 32, offset: 512)
!7897 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !7869, file: !2532, line: 216, baseType: !7, size: 32, offset: 544)
!7898 = !DIDerivedType(tag: DW_TAG_member, name: "strict_check", scope: !7869, file: !2532, line: 217, baseType: !595, size: 8, offset: 576)
!7899 = !DIDerivedType(tag: DW_TAG_member, scope: !7869, file: !2532, line: 218, baseType: !7900, size: 384, offset: 640)
!7900 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7869, file: !2532, line: 218, size: 384, elements: !7901)
!7901 = !{!7902, !7904}
!7902 = !DIDerivedType(tag: DW_TAG_member, name: "ctx", scope: !7900, file: !2532, line: 219, baseType: !7903, size: 384)
!7903 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1451, size: 384, elements: !7438)
!7904 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !7900, file: !2532, line: 224, baseType: !7905, size: 384)
!7905 = !DICompositeType(tag: DW_TAG_array_type, baseType: !568, size: 384, elements: !1722)
!7906 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fdb_get", scope: !458, file: !36, line: 1434, baseType: !7907, size: 64, offset: 2944)
!7907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7908, size: 64)
!7908 = !DISubroutineType(types: !7909)
!7909 = !{!37, !475, !7793, !350, !766, !1092, !762, !762, !2530}
!7910 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_bridge_setlink", scope: !458, file: !36, line: 1440, baseType: !7911, size: 64, offset: 3008)
!7911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7912, size: 64)
!7912 = !DISubroutineType(types: !7913)
!7913 = !{!37, !350, !7914, !1092, !2530}
!7914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7875, size: 64)
!7915 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_bridge_getlink", scope: !458, file: !36, line: 1444, baseType: !7916, size: 64, offset: 3072)
!7916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7917, size: 64)
!7917 = !DISubroutineType(types: !7918)
!7918 = !{!37, !475, !762, !762, !350, !762, !37}
!7919 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_bridge_dellink", scope: !458, file: !36, line: 1449, baseType: !7920, size: 64, offset: 3136)
!7920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7921, size: 64)
!7921 = !DISubroutineType(types: !7922)
!7922 = !{!37, !350, !7914, !1092}
!7923 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_change_carrier", scope: !458, file: !36, line: 1452, baseType: !7924, size: 64, offset: 3200)
!7924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7925, size: 64)
!7925 = !DISubroutineType(types: !7926)
!7926 = !{!37, !350, !595}
!7927 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_phys_port_id", scope: !458, file: !36, line: 1454, baseType: !7928, size: 64, offset: 3264)
!7928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7929, size: 64)
!7929 = !DISubroutineType(types: !7930)
!7930 = !{!37, !350, !7931}
!7931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7932, size: 64)
!7932 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_phys_item_id", file: !36, line: 820, size: 264, elements: !7933)
!7933 = !{!7934, !7935}
!7934 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !7932, file: !36, line: 821, baseType: !770, size: 256)
!7935 = !DIDerivedType(tag: DW_TAG_member, name: "id_len", scope: !7932, file: !36, line: 822, baseType: !549, size: 8, offset: 256)
!7936 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_port_parent_id", scope: !458, file: !36, line: 1456, baseType: !7928, size: 64, offset: 3328)
!7937 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_phys_port_name", scope: !458, file: !36, line: 1458, baseType: !7938, size: 64, offset: 3392)
!7938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7939, size: 64)
!7939 = !DISubroutineType(types: !7940)
!7940 = !{!37, !350, !632, !649}
!7941 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_udp_tunnel_add", scope: !458, file: !36, line: 1460, baseType: !7942, size: 64, offset: 3456)
!7942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7943, size: 64)
!7943 = !DISubroutineType(types: !7944)
!7944 = !{null, !350, !7945}
!7945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7946, size: 64)
!7946 = !DICompositeType(tag: DW_TAG_structure_type, name: "udp_tunnel_info", file: !36, line: 67, flags: DIFlagFwdDecl)
!7947 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_udp_tunnel_del", scope: !458, file: !36, line: 1462, baseType: !7942, size: 64, offset: 3520)
!7948 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_dfwd_add_station", scope: !458, file: !36, line: 1464, baseType: !7949, size: 64, offset: 3584)
!7949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7950, size: 64)
!7950 = !DISubroutineType(types: !7951)
!7951 = !{!625, !350, !350}
!7952 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_dfwd_del_station", scope: !458, file: !36, line: 1466, baseType: !7953, size: 64, offset: 3648)
!7953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7954, size: 64)
!7954 = !DISubroutineType(types: !7955)
!7955 = !{null, !350, !625}
!7956 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_tx_maxrate", scope: !458, file: !36, line: 1469, baseType: !7957, size: 64, offset: 3712)
!7957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7958, size: 64)
!7958 = !DISubroutineType(types: !7959)
!7959 = !{!37, !350, !37, !762}
!7960 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_iflink", scope: !458, file: !36, line: 1472, baseType: !7961, size: 64, offset: 3776)
!7961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7962, size: 64)
!7962 = !DISubroutineType(types: !7963)
!7963 = !{!37, !2819}
!7964 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_change_proto_down", scope: !458, file: !36, line: 1473, baseType: !7924, size: 64, offset: 3840)
!7965 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_fill_metadata_dst", scope: !458, file: !36, line: 1475, baseType: !7966, size: 64, offset: 3904)
!7966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7967, size: 64)
!7967 = !DISubroutineType(types: !7968)
!7968 = !{!37, !350, !475}
!7969 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_set_rx_headroom", scope: !458, file: !36, line: 1477, baseType: !7545, size: 64, offset: 3968)
!7970 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_bpf", scope: !458, file: !36, line: 1479, baseType: !7971, size: 64, offset: 4032)
!7971 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7972, size: 64)
!7972 = !DISubroutineType(types: !7973)
!7973 = !{!37, !350, !7974}
!7974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7975, size: 64)
!7975 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_bpf", file: !36, line: 894, size: 256, elements: !7976)
!7976 = !{!7977, !7978}
!7977 = !DIDerivedType(tag: DW_TAG_member, name: "command", scope: !7975, file: !36, line: 895, baseType: !62, size: 32)
!7978 = !DIDerivedType(tag: DW_TAG_member, scope: !7975, file: !36, line: 896, baseType: !7979, size: 192, offset: 64)
!7979 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !7975, file: !36, line: 896, size: 192, elements: !7980)
!7980 = !{!7981, !7987, !8016}
!7981 = !DIDerivedType(tag: DW_TAG_member, scope: !7979, file: !36, line: 898, baseType: !7982, size: 192)
!7982 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7979, file: !36, line: 898, size: 192, elements: !7983)
!7983 = !{!7984, !7985, !7986}
!7984 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !7982, file: !36, line: 899, baseType: !762, size: 32)
!7985 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !7982, file: !36, line: 900, baseType: !3046, size: 64, offset: 64)
!7986 = !DIDerivedType(tag: DW_TAG_member, name: "extack", scope: !7982, file: !36, line: 901, baseType: !2530, size: 64, offset: 128)
!7987 = !DIDerivedType(tag: DW_TAG_member, scope: !7979, file: !36, line: 904, baseType: !7988, size: 64)
!7988 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7979, file: !36, line: 904, size: 64, elements: !7989)
!7989 = !{!7990}
!7990 = !DIDerivedType(tag: DW_TAG_member, name: "offmap", scope: !7988, file: !36, line: 905, baseType: !7991, size: 64)
!7991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7992, size: 64)
!7992 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_offloaded_map", file: !145, line: 222, size: 2560, elements: !7993)
!7993 = !{!7994, !7995, !7996, !8014, !8015}
!7994 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !7992, file: !145, line: 223, baseType: !3171, size: 2048)
!7995 = !DIDerivedType(tag: DW_TAG_member, name: "netdev", scope: !7992, file: !145, line: 224, baseType: !350, size: 64, offset: 2048)
!7996 = !DIDerivedType(tag: DW_TAG_member, name: "dev_ops", scope: !7992, file: !145, line: 225, baseType: !7997, size: 64, offset: 2112)
!7997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7998, size: 64)
!7998 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7999)
!7999 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_map_dev_ops", file: !145, line: 212, size: 256, elements: !8000)
!8000 = !{!8001, !8005, !8006, !8010}
!8001 = !DIDerivedType(tag: DW_TAG_member, name: "map_get_next_key", scope: !7999, file: !145, line: 213, baseType: !8002, size: 64)
!8002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8003, size: 64)
!8003 = !DISubroutineType(types: !8004)
!8004 = !{!37, !7991, !625, !625}
!8005 = !DIDerivedType(tag: DW_TAG_member, name: "map_lookup_elem", scope: !7999, file: !145, line: 215, baseType: !8002, size: 64, offset: 64)
!8006 = !DIDerivedType(tag: DW_TAG_member, name: "map_update_elem", scope: !7999, file: !145, line: 217, baseType: !8007, size: 64, offset: 128)
!8007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8008, size: 64)
!8008 = !DISubroutineType(types: !8009)
!8009 = !{!37, !7991, !625, !625, !391}
!8010 = !DIDerivedType(tag: DW_TAG_member, name: "map_delete_elem", scope: !7999, file: !145, line: 219, baseType: !8011, size: 64, offset: 192)
!8011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8012, size: 64)
!8012 = !DISubroutineType(types: !8013)
!8013 = !{!37, !7991, !625}
!8014 = !DIDerivedType(tag: DW_TAG_member, name: "dev_priv", scope: !7992, file: !145, line: 226, baseType: !625, size: 64, offset: 2176)
!8015 = !DIDerivedType(tag: DW_TAG_member, name: "offloads", scope: !7992, file: !145, line: 227, baseType: !344, size: 128, offset: 2240)
!8016 = !DIDerivedType(tag: DW_TAG_member, name: "xsk", scope: !7979, file: !36, line: 911, baseType: !8017, size: 128)
!8017 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7979, file: !36, line: 908, size: 128, elements: !8018)
!8018 = !{!8019, !8022}
!8019 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !8017, file: !36, line: 909, baseType: !8020, size: 64)
!8020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8021, size: 64)
!8021 = !DICompositeType(tag: DW_TAG_structure_type, name: "xsk_buff_pool", file: !36, line: 909, flags: DIFlagFwdDecl)
!8022 = !DIDerivedType(tag: DW_TAG_member, name: "queue_id", scope: !8017, file: !36, line: 910, baseType: !1092, size: 16, offset: 64)
!8023 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_xdp_xmit", scope: !458, file: !36, line: 1481, baseType: !8024, size: 64, offset: 4096)
!8024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8025, size: 64)
!8025 = !DISubroutineType(types: !8026)
!8026 = !{!37, !350, !37, !8027, !762}
!8027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8028, size: 64)
!8028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8029, size: 64)
!8029 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xdp_frame", file: !8030, line: 94, size: 256, elements: !8031)
!8030 = !DIFile(filename: "./include/net/xdp.h", directory: "/home/lizy2001/genbc/linux")
!8031 = !{!8032, !8033, !8034, !8035, !8036, !8037, !8042}
!8032 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !8029, file: !8030, line: 95, baseType: !625, size: 64)
!8033 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !8029, file: !8030, line: 96, baseType: !1092, size: 16, offset: 64)
!8034 = !DIDerivedType(tag: DW_TAG_member, name: "headroom", scope: !8029, file: !8030, line: 97, baseType: !1092, size: 16, offset: 80)
!8035 = !DIDerivedType(tag: DW_TAG_member, name: "metasize", scope: !8029, file: !8030, line: 98, baseType: !762, size: 8, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!8036 = !DIDerivedType(tag: DW_TAG_member, name: "frame_sz", scope: !8029, file: !8030, line: 99, baseType: !762, size: 24, offset: 104, flags: DIFlagBitField, extraData: i64 96)
!8037 = !DIDerivedType(tag: DW_TAG_member, name: "mem", scope: !8029, file: !8030, line: 103, baseType: !8038, size: 64, offset: 128)
!8038 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xdp_mem_info", file: !8030, line: 50, size: 64, elements: !8039)
!8039 = !{!8040, !8041}
!8040 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !8038, file: !8030, line: 51, baseType: !762, size: 32)
!8041 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !8038, file: !8030, line: 52, baseType: !762, size: 32, offset: 32)
!8042 = !DIDerivedType(tag: DW_TAG_member, name: "dev_rx", scope: !8029, file: !8030, line: 104, baseType: !350, size: 64, offset: 192)
!8043 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_xsk_wakeup", scope: !458, file: !36, line: 1484, baseType: !8044, size: 64, offset: 4160)
!8044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8045, size: 64)
!8045 = !DISubroutineType(types: !8046)
!8046 = !{!37, !350, !762, !762}
!8047 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_devlink_port", scope: !458, file: !36, line: 1486, baseType: !8048, size: 64, offset: 4224)
!8048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8049, size: 64)
!8049 = !DISubroutineType(types: !8050)
!8050 = !{!8051, !350}
!8051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8052, size: 64)
!8052 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "devlink_port", file: !8053, line: 119, size: 2176, elements: !8054)
!8053 = !DIFile(filename: "./include/net/devlink.h", directory: "/home/lizy2001/genbc/linux")
!8054 = !{!8055, !8056, !8057, !8058, !8305, !8306, !8307, !8308, !8309, !8310, !8311, !8340, !8341, !8342, !8343, !8344}
!8055 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !8052, file: !8053, line: 120, baseType: !344, size: 128)
!8056 = !DIDerivedType(tag: DW_TAG_member, name: "param_list", scope: !8052, file: !8053, line: 121, baseType: !344, size: 128, offset: 128)
!8057 = !DIDerivedType(tag: DW_TAG_member, name: "region_list", scope: !8052, file: !8053, line: 122, baseType: !344, size: 128, offset: 256)
!8058 = !DIDerivedType(tag: DW_TAG_member, name: "devlink", scope: !8052, file: !8053, line: 123, baseType: !8059, size: 64, offset: 384)
!8059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8060, size: 64)
!8060 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "devlink", file: !8053, line: 33, size: 2816, elements: !8061)
!8061 = !{!8062, !8063, !8064, !8065, !8066, !8067, !8068, !8069, !8070, !8071, !8093, !8094, !8095, !8096, !8290, !8291, !8297, !8298, !8299, !8300, !8301, !8302, !8303}
!8062 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !8060, file: !8053, line: 34, baseType: !344, size: 128)
!8063 = !DIDerivedType(tag: DW_TAG_member, name: "port_list", scope: !8060, file: !8053, line: 35, baseType: !344, size: 128, offset: 128)
!8064 = !DIDerivedType(tag: DW_TAG_member, name: "sb_list", scope: !8060, file: !8053, line: 36, baseType: !344, size: 128, offset: 256)
!8065 = !DIDerivedType(tag: DW_TAG_member, name: "dpipe_table_list", scope: !8060, file: !8053, line: 37, baseType: !344, size: 128, offset: 384)
!8066 = !DIDerivedType(tag: DW_TAG_member, name: "resource_list", scope: !8060, file: !8053, line: 38, baseType: !344, size: 128, offset: 512)
!8067 = !DIDerivedType(tag: DW_TAG_member, name: "param_list", scope: !8060, file: !8053, line: 39, baseType: !344, size: 128, offset: 640)
!8068 = !DIDerivedType(tag: DW_TAG_member, name: "region_list", scope: !8060, file: !8053, line: 40, baseType: !344, size: 128, offset: 768)
!8069 = !DIDerivedType(tag: DW_TAG_member, name: "reporter_list", scope: !8060, file: !8053, line: 41, baseType: !344, size: 128, offset: 896)
!8070 = !DIDerivedType(tag: DW_TAG_member, name: "reporters_lock", scope: !8060, file: !8053, line: 42, baseType: !1008, size: 192, offset: 1024)
!8071 = !DIDerivedType(tag: DW_TAG_member, name: "dpipe_headers", scope: !8060, file: !8053, line: 43, baseType: !8072, size: 64, offset: 1216)
!8072 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8073, size: 64)
!8073 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "devlink_dpipe_headers", file: !8053, line: 320, size: 128, elements: !8074)
!8074 = !{!8075, !8092}
!8075 = !DIDerivedType(tag: DW_TAG_member, name: "headers", scope: !8073, file: !8053, line: 321, baseType: !8076, size: 64)
!8076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8077, size: 64)
!8077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8078, size: 64)
!8078 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "devlink_dpipe_header", file: !8053, line: 170, size: 256, elements: !8079)
!8079 = !{!8080, !8081, !8082, !8090, !8091}
!8080 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !8078, file: !8053, line: 171, baseType: !352, size: 64)
!8081 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !8078, file: !8053, line: 172, baseType: !7, size: 32, offset: 64)
!8082 = !DIDerivedType(tag: DW_TAG_member, name: "fields", scope: !8078, file: !8053, line: 173, baseType: !8083, size: 64, offset: 128)
!8083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8084, size: 64)
!8084 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "devlink_dpipe_field", file: !8053, line: 154, size: 192, elements: !8085)
!8085 = !{!8086, !8087, !8088, !8089}
!8086 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !8084, file: !8053, line: 155, baseType: !352, size: 64)
!8087 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !8084, file: !8053, line: 156, baseType: !7, size: 32, offset: 64)
!8088 = !DIDerivedType(tag: DW_TAG_member, name: "bitwidth", scope: !8084, file: !8053, line: 157, baseType: !7, size: 32, offset: 96)
!8089 = !DIDerivedType(tag: DW_TAG_member, name: "mapping_type", scope: !8084, file: !8053, line: 158, baseType: !213, size: 32, offset: 128)
!8090 = !DIDerivedType(tag: DW_TAG_member, name: "fields_count", scope: !8078, file: !8053, line: 174, baseType: !7, size: 32, offset: 192)
!8091 = !DIDerivedType(tag: DW_TAG_member, name: "global", scope: !8078, file: !8053, line: 175, baseType: !595, size: 8, offset: 224)
!8092 = !DIDerivedType(tag: DW_TAG_member, name: "headers_count", scope: !8073, file: !8053, line: 322, baseType: !7, size: 32, offset: 64)
!8093 = !DIDerivedType(tag: DW_TAG_member, name: "trap_list", scope: !8060, file: !8053, line: 44, baseType: !344, size: 128, offset: 1280)
!8094 = !DIDerivedType(tag: DW_TAG_member, name: "trap_group_list", scope: !8060, file: !8053, line: 45, baseType: !344, size: 128, offset: 1408)
!8095 = !DIDerivedType(tag: DW_TAG_member, name: "trap_policer_list", scope: !8060, file: !8053, line: 46, baseType: !344, size: 128, offset: 1536)
!8096 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !8060, file: !8053, line: 47, baseType: !8097, size: 64, offset: 1664)
!8097 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8098, size: 64)
!8098 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8099)
!8099 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "devlink_ops", file: !8053, line: 1159, size: 2432, elements: !8100)
!8100 = !{!8101, !8102, !8103, !8104, !8108, !8112, !8116, !8120, !8124, !8135, !8139, !8143, !8147, !8152, !8156, !8160, !8161, !8165, !8169, !8173, !8177, !8181, !8185, !8190, !8194, !8200, !8210, !8225, !8229, !8233, !8245, !8260, !8264, !8268, !8272, !8276, !8280, !8284}
!8101 = !DIDerivedType(tag: DW_TAG_member, name: "supported_flash_update_params", scope: !8099, file: !8053, line: 1165, baseType: !762, size: 32)
!8102 = !DIDerivedType(tag: DW_TAG_member, name: "reload_actions", scope: !8099, file: !8053, line: 1166, baseType: !372, size: 64, offset: 64)
!8103 = !DIDerivedType(tag: DW_TAG_member, name: "reload_limits", scope: !8099, file: !8053, line: 1167, baseType: !372, size: 64, offset: 128)
!8104 = !DIDerivedType(tag: DW_TAG_member, name: "reload_down", scope: !8099, file: !8053, line: 1168, baseType: !8105, size: 64, offset: 192)
!8105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8106, size: 64)
!8106 = !DISubroutineType(types: !8107)
!8107 = !{!37, !8059, !595, !218, !225, !2530}
!8108 = !DIDerivedType(tag: DW_TAG_member, name: "reload_up", scope: !8099, file: !8053, line: 1172, baseType: !8109, size: 64, offset: 256)
!8109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8110, size: 64)
!8110 = !DISubroutineType(types: !8111)
!8111 = !{!37, !8059, !218, !225, !1514, !2530}
!8112 = !DIDerivedType(tag: DW_TAG_member, name: "port_type_set", scope: !8099, file: !8053, line: 1175, baseType: !8113, size: 64, offset: 320)
!8113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8114, size: 64)
!8114 = !DISubroutineType(types: !8115)
!8115 = !{!37, !8051, !231}
!8116 = !DIDerivedType(tag: DW_TAG_member, name: "port_split", scope: !8099, file: !8053, line: 1177, baseType: !8117, size: 64, offset: 384)
!8117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8118, size: 64)
!8118 = !DISubroutineType(types: !8119)
!8119 = !{!37, !8059, !7, !7, !2530}
!8120 = !DIDerivedType(tag: DW_TAG_member, name: "port_unsplit", scope: !8099, file: !8053, line: 1179, baseType: !8121, size: 64, offset: 448)
!8121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8122, size: 64)
!8122 = !DISubroutineType(types: !8123)
!8123 = !{!37, !8059, !7, !2530}
!8124 = !DIDerivedType(tag: DW_TAG_member, name: "sb_pool_get", scope: !8099, file: !8053, line: 1181, baseType: !8125, size: 64, offset: 512)
!8125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8126, size: 64)
!8126 = !DISubroutineType(types: !8127)
!8127 = !{!37, !8059, !7, !1092, !8128}
!8128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8129, size: 64)
!8129 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "devlink_sb_pool_info", file: !8053, line: 140, size: 128, elements: !8130)
!8130 = !{!8131, !8132, !8133, !8134}
!8131 = !DIDerivedType(tag: DW_TAG_member, name: "pool_type", scope: !8129, file: !8053, line: 141, baseType: !237, size: 32)
!8132 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !8129, file: !8053, line: 142, baseType: !762, size: 32, offset: 32)
!8133 = !DIDerivedType(tag: DW_TAG_member, name: "threshold_type", scope: !8129, file: !8053, line: 143, baseType: !241, size: 32, offset: 64)
!8134 = !DIDerivedType(tag: DW_TAG_member, name: "cell_size", scope: !8129, file: !8053, line: 144, baseType: !762, size: 32, offset: 96)
!8135 = !DIDerivedType(tag: DW_TAG_member, name: "sb_pool_set", scope: !8099, file: !8053, line: 1184, baseType: !8136, size: 64, offset: 576)
!8136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8137, size: 64)
!8137 = !DISubroutineType(types: !8138)
!8138 = !{!37, !8059, !7, !1092, !762, !241, !2530}
!8139 = !DIDerivedType(tag: DW_TAG_member, name: "sb_port_pool_get", scope: !8099, file: !8053, line: 1188, baseType: !8140, size: 64, offset: 640)
!8140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8141, size: 64)
!8141 = !DISubroutineType(types: !8142)
!8142 = !{!37, !8051, !7, !1092, !1514}
!8143 = !DIDerivedType(tag: DW_TAG_member, name: "sb_port_pool_set", scope: !8099, file: !8053, line: 1191, baseType: !8144, size: 64, offset: 704)
!8144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8145, size: 64)
!8145 = !DISubroutineType(types: !8146)
!8146 = !{!37, !8051, !7, !1092, !762, !2530}
!8147 = !DIDerivedType(tag: DW_TAG_member, name: "sb_tc_pool_bind_get", scope: !8099, file: !8053, line: 1194, baseType: !8148, size: 64, offset: 768)
!8148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8149, size: 64)
!8149 = !DISubroutineType(types: !8150)
!8150 = !{!37, !8051, !7, !1092, !237, !8151, !1514}
!8151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1092, size: 64)
!8152 = !DIDerivedType(tag: DW_TAG_member, name: "sb_tc_pool_bind_set", scope: !8099, file: !8053, line: 1199, baseType: !8153, size: 64, offset: 832)
!8153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8154, size: 64)
!8154 = !DISubroutineType(types: !8155)
!8155 = !{!37, !8051, !7, !1092, !237, !1092, !762, !2530}
!8156 = !DIDerivedType(tag: DW_TAG_member, name: "sb_occ_snapshot", scope: !8099, file: !8053, line: 1205, baseType: !8157, size: 64, offset: 896)
!8157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8158, size: 64)
!8158 = !DISubroutineType(types: !8159)
!8159 = !{!37, !8059, !7}
!8160 = !DIDerivedType(tag: DW_TAG_member, name: "sb_occ_max_clear", scope: !8099, file: !8053, line: 1207, baseType: !8157, size: 64, offset: 960)
!8161 = !DIDerivedType(tag: DW_TAG_member, name: "sb_occ_port_pool_get", scope: !8099, file: !8053, line: 1209, baseType: !8162, size: 64, offset: 1024)
!8162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8163, size: 64)
!8163 = !DISubroutineType(types: !8164)
!8164 = !{!37, !8051, !7, !1092, !1514, !1514}
!8165 = !DIDerivedType(tag: DW_TAG_member, name: "sb_occ_tc_port_bind_get", scope: !8099, file: !8053, line: 1212, baseType: !8166, size: 64, offset: 1088)
!8166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8167, size: 64)
!8167 = !DISubroutineType(types: !8168)
!8168 = !{!37, !8051, !7, !1092, !237, !1514, !1514}
!8169 = !DIDerivedType(tag: DW_TAG_member, name: "eswitch_mode_get", scope: !8099, file: !8053, line: 1218, baseType: !8170, size: 64, offset: 1152)
!8170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8171, size: 64)
!8171 = !DISubroutineType(types: !8172)
!8172 = !{!37, !8059, !8151}
!8173 = !DIDerivedType(tag: DW_TAG_member, name: "eswitch_mode_set", scope: !8099, file: !8053, line: 1219, baseType: !8174, size: 64, offset: 1216)
!8174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8175, size: 64)
!8175 = !DISubroutineType(types: !8176)
!8176 = !{!37, !8059, !1092, !2530}
!8177 = !DIDerivedType(tag: DW_TAG_member, name: "eswitch_inline_mode_get", scope: !8099, file: !8053, line: 1221, baseType: !8178, size: 64, offset: 1280)
!8178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8179, size: 64)
!8179 = !DISubroutineType(types: !8180)
!8180 = !{!37, !8059, !7736}
!8181 = !DIDerivedType(tag: DW_TAG_member, name: "eswitch_inline_mode_set", scope: !8099, file: !8053, line: 1222, baseType: !8182, size: 64, offset: 1344)
!8182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8183, size: 64)
!8183 = !DISubroutineType(types: !8184)
!8184 = !{!37, !8059, !1451, !2530}
!8185 = !DIDerivedType(tag: DW_TAG_member, name: "eswitch_encap_mode_get", scope: !8099, file: !8053, line: 1224, baseType: !8186, size: 64, offset: 1408)
!8186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8187, size: 64)
!8187 = !DISubroutineType(types: !8188)
!8188 = !{!37, !8059, !8189}
!8189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !245, size: 64)
!8190 = !DIDerivedType(tag: DW_TAG_member, name: "eswitch_encap_mode_set", scope: !8099, file: !8053, line: 1226, baseType: !8191, size: 64, offset: 1472)
!8191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8192, size: 64)
!8192 = !DISubroutineType(types: !8193)
!8193 = !{!37, !8059, !245, !2530}
!8194 = !DIDerivedType(tag: DW_TAG_member, name: "info_get", scope: !8099, file: !8053, line: 1229, baseType: !8195, size: 64, offset: 1536)
!8195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8196, size: 64)
!8196 = !DISubroutineType(types: !8197)
!8197 = !{!37, !8059, !8198, !2530}
!8198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8199, size: 64)
!8199 = !DICompositeType(tag: DW_TAG_structure_type, name: "devlink_info_req", file: !8053, line: 586, flags: DIFlagFwdDecl)
!8200 = !DIDerivedType(tag: DW_TAG_member, name: "flash_update", scope: !8099, file: !8053, line: 1238, baseType: !8201, size: 64, offset: 1600)
!8201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8202, size: 64)
!8202 = !DISubroutineType(types: !8203)
!8203 = !{!37, !8059, !8204, !2530}
!8204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8205, size: 64)
!8205 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "devlink_flash_update_params", file: !8053, line: 576, size: 192, elements: !8206)
!8206 = !{!8207, !8208, !8209}
!8207 = !DIDerivedType(tag: DW_TAG_member, name: "file_name", scope: !8205, file: !8053, line: 577, baseType: !352, size: 64)
!8208 = !DIDerivedType(tag: DW_TAG_member, name: "component", scope: !8205, file: !8053, line: 578, baseType: !352, size: 64, offset: 64)
!8209 = !DIDerivedType(tag: DW_TAG_member, name: "overwrite_mask", scope: !8205, file: !8053, line: 579, baseType: !762, size: 32, offset: 128)
!8210 = !DIDerivedType(tag: DW_TAG_member, name: "trap_init", scope: !8099, file: !8053, line: 1249, baseType: !8211, size: 64, offset: 1664)
!8211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8212, size: 64)
!8212 = !DISubroutineType(types: !8213)
!8213 = !{!37, !8059, !8214, !625}
!8214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8215, size: 64)
!8215 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8216)
!8216 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "devlink_trap", file: !8053, line: 733, size: 256, elements: !8217)
!8217 = !{!8218, !8219, !8220, !8221, !8222, !8223, !8224}
!8218 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !8216, file: !8053, line: 734, baseType: !249, size: 32)
!8219 = !DIDerivedType(tag: DW_TAG_member, name: "init_action", scope: !8216, file: !8053, line: 735, baseType: !254, size: 32, offset: 32)
!8220 = !DIDerivedType(tag: DW_TAG_member, name: "generic", scope: !8216, file: !8053, line: 736, baseType: !595, size: 8, offset: 64)
!8221 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !8216, file: !8053, line: 737, baseType: !1092, size: 16, offset: 80)
!8222 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !8216, file: !8053, line: 738, baseType: !352, size: 64, offset: 128)
!8223 = !DIDerivedType(tag: DW_TAG_member, name: "init_group_id", scope: !8216, file: !8053, line: 739, baseType: !1092, size: 16, offset: 192)
!8224 = !DIDerivedType(tag: DW_TAG_member, name: "metadata_cap", scope: !8216, file: !8053, line: 740, baseType: !762, size: 32, offset: 224)
!8225 = !DIDerivedType(tag: DW_TAG_member, name: "trap_fini", scope: !8099, file: !8053, line: 1257, baseType: !8226, size: 64, offset: 1728)
!8226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8227, size: 64)
!8227 = !DISubroutineType(types: !8228)
!8228 = !{null, !8059, !8214, !625}
!8229 = !DIDerivedType(tag: DW_TAG_member, name: "trap_action_set", scope: !8099, file: !8053, line: 1262, baseType: !8230, size: 64, offset: 1792)
!8230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8231, size: 64)
!8231 = !DISubroutineType(types: !8232)
!8232 = !{!37, !8059, !8214, !254, !2530}
!8233 = !DIDerivedType(tag: DW_TAG_member, name: "trap_group_init", scope: !8099, file: !8053, line: 1272, baseType: !8234, size: 64, offset: 1856)
!8234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8235, size: 64)
!8235 = !DISubroutineType(types: !8236)
!8236 = !{!37, !8059, !8237}
!8237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8238, size: 64)
!8238 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8239)
!8239 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "devlink_trap_group", file: !8053, line: 710, size: 128, elements: !8240)
!8240 = !{!8241, !8242, !8243, !8244}
!8241 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !8239, file: !8053, line: 711, baseType: !352, size: 64)
!8242 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !8239, file: !8053, line: 712, baseType: !1092, size: 16, offset: 64)
!8243 = !DIDerivedType(tag: DW_TAG_member, name: "generic", scope: !8239, file: !8053, line: 713, baseType: !595, size: 8, offset: 80)
!8244 = !DIDerivedType(tag: DW_TAG_member, name: "init_policer_id", scope: !8239, file: !8053, line: 714, baseType: !762, size: 32, offset: 96)
!8245 = !DIDerivedType(tag: DW_TAG_member, name: "trap_group_set", scope: !8099, file: !8053, line: 1280, baseType: !8246, size: 64, offset: 1920)
!8246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8247, size: 64)
!8247 = !DISubroutineType(types: !8248)
!8248 = !{!37, !8059, !8237, !8249, !2530}
!8249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8250, size: 64)
!8250 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8251)
!8251 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "devlink_trap_policer", file: !8053, line: 690, size: 448, elements: !8252)
!8252 = !{!8253, !8254, !8255, !8256, !8257, !8258, !8259}
!8253 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !8251, file: !8053, line: 691, baseType: !762, size: 32)
!8254 = !DIDerivedType(tag: DW_TAG_member, name: "init_rate", scope: !8251, file: !8053, line: 692, baseType: !391, size: 64, offset: 64)
!8255 = !DIDerivedType(tag: DW_TAG_member, name: "init_burst", scope: !8251, file: !8053, line: 693, baseType: !391, size: 64, offset: 128)
!8256 = !DIDerivedType(tag: DW_TAG_member, name: "max_rate", scope: !8251, file: !8053, line: 694, baseType: !391, size: 64, offset: 192)
!8257 = !DIDerivedType(tag: DW_TAG_member, name: "min_rate", scope: !8251, file: !8053, line: 695, baseType: !391, size: 64, offset: 256)
!8258 = !DIDerivedType(tag: DW_TAG_member, name: "max_burst", scope: !8251, file: !8053, line: 696, baseType: !391, size: 64, offset: 320)
!8259 = !DIDerivedType(tag: DW_TAG_member, name: "min_burst", scope: !8251, file: !8053, line: 697, baseType: !391, size: 64, offset: 384)
!8260 = !DIDerivedType(tag: DW_TAG_member, name: "trap_group_action_set", scope: !8099, file: !8053, line: 1290, baseType: !8261, size: 64, offset: 1984)
!8261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8262, size: 64)
!8262 = !DISubroutineType(types: !8263)
!8263 = !{!37, !8059, !8237, !254, !2530}
!8264 = !DIDerivedType(tag: DW_TAG_member, name: "trap_policer_init", scope: !8099, file: !8053, line: 1300, baseType: !8265, size: 64, offset: 2048)
!8265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8266, size: 64)
!8266 = !DISubroutineType(types: !8267)
!8267 = !{!37, !8059, !8249}
!8268 = !DIDerivedType(tag: DW_TAG_member, name: "trap_policer_fini", scope: !8099, file: !8053, line: 1308, baseType: !8269, size: 64, offset: 2112)
!8269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8270, size: 64)
!8270 = !DISubroutineType(types: !8271)
!8271 = !{null, !8059, !8249}
!8272 = !DIDerivedType(tag: DW_TAG_member, name: "trap_policer_set", scope: !8099, file: !8053, line: 1313, baseType: !8273, size: 64, offset: 2176)
!8273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8274, size: 64)
!8274 = !DISubroutineType(types: !8275)
!8275 = !{!37, !8059, !8249, !391, !391, !2530}
!8276 = !DIDerivedType(tag: DW_TAG_member, name: "trap_policer_counter_get", scope: !8099, file: !8053, line: 1323, baseType: !8277, size: 64, offset: 2240)
!8277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8278, size: 64)
!8278 = !DISubroutineType(types: !8279)
!8279 = !{!37, !8059, !8249, !3475}
!8280 = !DIDerivedType(tag: DW_TAG_member, name: "port_function_hw_addr_get", scope: !8099, file: !8053, line: 1335, baseType: !8281, size: 64, offset: 2304)
!8281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8282, size: 64)
!8282 = !DISubroutineType(types: !8283)
!8283 = !{!37, !8059, !8051, !7736, !594, !2530}
!8284 = !DIDerivedType(tag: DW_TAG_member, name: "port_function_hw_addr_set", scope: !8099, file: !8053, line: 1345, baseType: !8285, size: 64, offset: 2368)
!8285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8286, size: 64)
!8286 = !DISubroutineType(types: !8287)
!8287 = !{!37, !8059, !8051, !8288, !37, !2530}
!8288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8289, size: 64)
!8289 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1451)
!8290 = !DIDerivedType(tag: DW_TAG_member, name: "snapshot_ids", scope: !8060, file: !8053, line: 48, baseType: !1607, size: 128, offset: 1728)
!8291 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !8060, file: !8053, line: 49, baseType: !8292, size: 384, offset: 1856)
!8292 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "devlink_dev_stats", file: !8053, line: 26, size: 384, elements: !8293)
!8293 = !{!8294, !8296}
!8294 = !DIDerivedType(tag: DW_TAG_member, name: "reload_stats", scope: !8292, file: !8053, line: 27, baseType: !8295, size: 192)
!8295 = !DICompositeType(tag: DW_TAG_array_type, baseType: !762, size: 192, elements: !1722)
!8296 = !DIDerivedType(tag: DW_TAG_member, name: "remote_reload_stats", scope: !8292, file: !8053, line: 28, baseType: !8295, size: 192, offset: 192)
!8297 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !8060, file: !8053, line: 50, baseType: !4306, size: 64, offset: 2240)
!8298 = !DIDerivedType(tag: DW_TAG_member, name: "_net", scope: !8060, file: !8053, line: 51, baseType: !2841, size: 64, offset: 2304)
!8299 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !8060, file: !8053, line: 52, baseType: !1008, size: 192, offset: 2368)
!8300 = !DIDerivedType(tag: DW_TAG_member, name: "reload_failed", scope: !8060, file: !8053, line: 55, baseType: !1451, size: 1, offset: 2560, flags: DIFlagBitField, extraData: i64 2560)
!8301 = !DIDerivedType(tag: DW_TAG_member, name: "reload_enabled", scope: !8060, file: !8053, line: 56, baseType: !1451, size: 1, offset: 2561, flags: DIFlagBitField, extraData: i64 2560)
!8302 = !DIDerivedType(tag: DW_TAG_member, name: "registered", scope: !8060, file: !8053, line: 57, baseType: !1451, size: 1, offset: 2562, flags: DIFlagBitField, extraData: i64 2560)
!8303 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !8060, file: !8053, line: 58, baseType: !8304, align: 256, offset: 2816)
!8304 = !DICompositeType(tag: DW_TAG_array_type, baseType: !328, elements: !2009)
!8305 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !8052, file: !8053, line: 124, baseType: !7, size: 32, offset: 448)
!8306 = !DIDerivedType(tag: DW_TAG_member, name: "registered", scope: !8052, file: !8053, line: 125, baseType: !595, size: 8, offset: 480)
!8307 = !DIDerivedType(tag: DW_TAG_member, name: "type_lock", scope: !8052, file: !8053, line: 126, baseType: !784, offset: 488)
!8308 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !8052, file: !8053, line: 129, baseType: !231, size: 32, offset: 512)
!8309 = !DIDerivedType(tag: DW_TAG_member, name: "desired_type", scope: !8052, file: !8053, line: 130, baseType: !231, size: 32, offset: 544)
!8310 = !DIDerivedType(tag: DW_TAG_member, name: "type_dev", scope: !8052, file: !8053, line: 131, baseType: !625, size: 64, offset: 576)
!8311 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !8052, file: !8053, line: 132, baseType: !8312, size: 480, offset: 640)
!8312 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "devlink_port_attrs", file: !8053, line: 106, size: 480, elements: !8313)
!8313 = !{!8314, !8315, !8316, !8317, !8318, !8319}
!8314 = !DIDerivedType(tag: DW_TAG_member, name: "split", scope: !8312, file: !8053, line: 107, baseType: !1451, size: 1, flags: DIFlagBitField, extraData: i64 0)
!8315 = !DIDerivedType(tag: DW_TAG_member, name: "splittable", scope: !8312, file: !8053, line: 108, baseType: !1451, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!8316 = !DIDerivedType(tag: DW_TAG_member, name: "lanes", scope: !8312, file: !8053, line: 109, baseType: !762, size: 32, offset: 32)
!8317 = !DIDerivedType(tag: DW_TAG_member, name: "flavour", scope: !8312, file: !8053, line: 110, baseType: !259, size: 32, offset: 64)
!8318 = !DIDerivedType(tag: DW_TAG_member, name: "switch_id", scope: !8312, file: !8053, line: 111, baseType: !7932, size: 264, offset: 96)
!8319 = !DIDerivedType(tag: DW_TAG_member, scope: !8312, file: !8053, line: 112, baseType: !8320, size: 96, offset: 384)
!8320 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8312, file: !8053, line: 112, size: 96, elements: !8321)
!8321 = !{!8322, !8327, !8333}
!8322 = !DIDerivedType(tag: DW_TAG_member, name: "phys", scope: !8320, file: !8053, line: 113, baseType: !8323, size: 64)
!8323 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "devlink_port_phys_attrs", file: !8053, line: 61, size: 64, elements: !8324)
!8324 = !{!8325, !8326}
!8325 = !DIDerivedType(tag: DW_TAG_member, name: "port_number", scope: !8323, file: !8053, line: 62, baseType: !762, size: 32)
!8326 = !DIDerivedType(tag: DW_TAG_member, name: "split_subport_number", scope: !8323, file: !8053, line: 66, baseType: !762, size: 32, offset: 32)
!8327 = !DIDerivedType(tag: DW_TAG_member, name: "pci_pf", scope: !8320, file: !8053, line: 114, baseType: !8328, size: 64)
!8328 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "devlink_port_pci_pf_attrs", file: !8053, line: 75, size: 64, elements: !8329)
!8329 = !{!8330, !8331, !8332}
!8330 = !DIDerivedType(tag: DW_TAG_member, name: "controller", scope: !8328, file: !8053, line: 76, baseType: !762, size: 32)
!8331 = !DIDerivedType(tag: DW_TAG_member, name: "pf", scope: !8328, file: !8053, line: 77, baseType: !1092, size: 16, offset: 32)
!8332 = !DIDerivedType(tag: DW_TAG_member, name: "external", scope: !8328, file: !8053, line: 78, baseType: !1451, size: 1, offset: 48, flags: DIFlagBitField, extraData: i64 48)
!8333 = !DIDerivedType(tag: DW_TAG_member, name: "pci_vf", scope: !8320, file: !8053, line: 115, baseType: !8334, size: 96)
!8334 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "devlink_port_pci_vf_attrs", file: !8053, line: 88, size: 96, elements: !8335)
!8335 = !{!8336, !8337, !8338, !8339}
!8336 = !DIDerivedType(tag: DW_TAG_member, name: "controller", scope: !8334, file: !8053, line: 89, baseType: !762, size: 32)
!8337 = !DIDerivedType(tag: DW_TAG_member, name: "pf", scope: !8334, file: !8053, line: 90, baseType: !1092, size: 16, offset: 32)
!8338 = !DIDerivedType(tag: DW_TAG_member, name: "vf", scope: !8334, file: !8053, line: 91, baseType: !1092, size: 16, offset: 48)
!8339 = !DIDerivedType(tag: DW_TAG_member, name: "external", scope: !8334, file: !8053, line: 92, baseType: !1451, size: 1, offset: 64, flags: DIFlagBitField, extraData: i64 64)
!8340 = !DIDerivedType(tag: DW_TAG_member, name: "attrs_set", scope: !8052, file: !8053, line: 133, baseType: !1451, size: 1, offset: 1120, flags: DIFlagBitField, extraData: i64 1120)
!8341 = !DIDerivedType(tag: DW_TAG_member, name: "switch_port", scope: !8052, file: !8053, line: 134, baseType: !1451, size: 1, offset: 1121, flags: DIFlagBitField, extraData: i64 1120)
!8342 = !DIDerivedType(tag: DW_TAG_member, name: "type_warn_dw", scope: !8052, file: !8053, line: 135, baseType: !2889, size: 704, offset: 1152)
!8343 = !DIDerivedType(tag: DW_TAG_member, name: "reporter_list", scope: !8052, file: !8053, line: 136, baseType: !344, size: 128, offset: 1856)
!8344 = !DIDerivedType(tag: DW_TAG_member, name: "reporters_lock", scope: !8052, file: !8053, line: 137, baseType: !1008, size: 192, offset: 1984)
!8345 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_tunnel_ctl", scope: !458, file: !36, line: 1487, baseType: !8346, size: 64, offset: 4288)
!8346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8347, size: 64)
!8347 = !DISubroutineType(types: !8348)
!8348 = !{!37, !350, !8349, !37}
!8349 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8350, size: 64)
!8350 = !DICompositeType(tag: DW_TAG_structure_type, name: "ip_tunnel_parm", file: !36, line: 56, flags: DIFlagFwdDecl)
!8351 = !DIDerivedType(tag: DW_TAG_member, name: "ndo_get_peer_dev", scope: !458, file: !36, line: 1489, baseType: !8352, size: 64, offset: 4352)
!8352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8353, size: 64)
!8353 = !DISubroutineType(types: !8354)
!8354 = !{!350, !350}
!8355 = !DIDerivedType(tag: DW_TAG_member, name: "ethtool_ops", scope: !324, file: !36, line: 1917, baseType: !8356, size: 64, offset: 4032)
!8356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8357, size: 64)
!8357 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8358)
!8358 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_ops", file: !311, line: 421, size: 3904, elements: !8359)
!8359 = !{!8360, !8361, !8381, !8382, !8393, !8405, !8409, !8413, !8417, !8418, !8419, !8436, !8437, !8449, !8450, !8480, !8481, !8497, !8501, !8510, !8521, !8525, !8538, !8542, !8546, !8556, !8557, !8558, !8559, !8563, !8564, !8666, !8670, !8680, !8684, !8685, !8686, !8690, !8695, !8699, !8703, !8719, !8723, !8735, !8739, !8740, !8755, !8767, !8768, !8784, !8785, !8799, !8803, !8807, !8808, !8847, !8853, !8864, !8865, !8866, !8867}
!8360 = !DIDerivedType(tag: DW_TAG_member, name: "supported_coalesce_params", scope: !8358, file: !311, line: 422, baseType: !762, size: 32)
!8361 = !DIDerivedType(tag: DW_TAG_member, name: "get_drvinfo", scope: !8358, file: !311, line: 423, baseType: !8362, size: 64, offset: 64)
!8362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8363, size: 64)
!8363 = !DISubroutineType(types: !8364)
!8364 = !{null, !350, !8365}
!8365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8366, size: 64)
!8366 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_drvinfo", file: !269, line: 177, size: 1568, elements: !8367)
!8367 = !{!8368, !8369, !8370, !8371, !8372, !8373, !8374, !8376, !8377, !8378, !8379, !8380}
!8368 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8366, file: !269, line: 178, baseType: !523, size: 32)
!8369 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !8366, file: !269, line: 179, baseType: !3898, size: 256, offset: 32)
!8370 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !8366, file: !269, line: 180, baseType: !3898, size: 256, offset: 288)
!8371 = !DIDerivedType(tag: DW_TAG_member, name: "fw_version", scope: !8366, file: !269, line: 181, baseType: !3898, size: 256, offset: 544)
!8372 = !DIDerivedType(tag: DW_TAG_member, name: "bus_info", scope: !8366, file: !269, line: 182, baseType: !3898, size: 256, offset: 800)
!8373 = !DIDerivedType(tag: DW_TAG_member, name: "erom_version", scope: !8366, file: !269, line: 183, baseType: !3898, size: 256, offset: 1056)
!8374 = !DIDerivedType(tag: DW_TAG_member, name: "reserved2", scope: !8366, file: !269, line: 184, baseType: !8375, size: 96, offset: 1312)
!8375 = !DICompositeType(tag: DW_TAG_array_type, baseType: !328, size: 96, elements: !2970)
!8376 = !DIDerivedType(tag: DW_TAG_member, name: "n_priv_flags", scope: !8366, file: !269, line: 185, baseType: !523, size: 32, offset: 1408)
!8377 = !DIDerivedType(tag: DW_TAG_member, name: "n_stats", scope: !8366, file: !269, line: 186, baseType: !523, size: 32, offset: 1440)
!8378 = !DIDerivedType(tag: DW_TAG_member, name: "testinfo_len", scope: !8366, file: !269, line: 187, baseType: !523, size: 32, offset: 1472)
!8379 = !DIDerivedType(tag: DW_TAG_member, name: "eedump_len", scope: !8366, file: !269, line: 188, baseType: !523, size: 32, offset: 1504)
!8380 = !DIDerivedType(tag: DW_TAG_member, name: "regdump_len", scope: !8366, file: !269, line: 189, baseType: !523, size: 32, offset: 1536)
!8381 = !DIDerivedType(tag: DW_TAG_member, name: "get_regs_len", scope: !8358, file: !311, line: 424, baseType: !461, size: 64, offset: 128)
!8382 = !DIDerivedType(tag: DW_TAG_member, name: "get_regs", scope: !8358, file: !311, line: 425, baseType: !8383, size: 64, offset: 192)
!8383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8384, size: 64)
!8384 = !DISubroutineType(types: !8385)
!8385 = !{null, !350, !8386, !625}
!8386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8387, size: 64)
!8387 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_regs", file: !269, line: 310, size: 96, elements: !8388)
!8388 = !{!8389, !8390, !8391, !8392}
!8389 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8387, file: !269, line: 311, baseType: !523, size: 32)
!8390 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !8387, file: !269, line: 312, baseType: !523, size: 32, offset: 32)
!8391 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !8387, file: !269, line: 313, baseType: !523, size: 32, offset: 64)
!8392 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !8387, file: !269, line: 314, baseType: !7455, offset: 96)
!8393 = !DIDerivedType(tag: DW_TAG_member, name: "get_wol", scope: !8358, file: !311, line: 426, baseType: !8394, size: 64, offset: 256)
!8394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8395, size: 64)
!8395 = !DISubroutineType(types: !8396)
!8396 = !{null, !350, !8397}
!8397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8398, size: 64)
!8398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_wolinfo", file: !269, line: 203, size: 160, elements: !8399)
!8399 = !{!8400, !8401, !8402, !8403}
!8400 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8398, file: !269, line: 204, baseType: !523, size: 32)
!8401 = !DIDerivedType(tag: DW_TAG_member, name: "supported", scope: !8398, file: !269, line: 205, baseType: !523, size: 32, offset: 32)
!8402 = !DIDerivedType(tag: DW_TAG_member, name: "wolopts", scope: !8398, file: !269, line: 206, baseType: !523, size: 32, offset: 64)
!8403 = !DIDerivedType(tag: DW_TAG_member, name: "sopass", scope: !8398, file: !269, line: 207, baseType: !8404, size: 48, offset: 96)
!8404 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1452, size: 48, elements: !1722)
!8405 = !DIDerivedType(tag: DW_TAG_member, name: "set_wol", scope: !8358, file: !311, line: 427, baseType: !8406, size: 64, offset: 320)
!8406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8407, size: 64)
!8407 = !DISubroutineType(types: !8408)
!8408 = !{!37, !350, !8397}
!8409 = !DIDerivedType(tag: DW_TAG_member, name: "get_msglevel", scope: !8358, file: !311, line: 428, baseType: !8410, size: 64, offset: 384)
!8410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8411, size: 64)
!8411 = !DISubroutineType(types: !8412)
!8412 = !{!762, !350}
!8413 = !DIDerivedType(tag: DW_TAG_member, name: "set_msglevel", scope: !8358, file: !311, line: 429, baseType: !8414, size: 64, offset: 448)
!8414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8415, size: 64)
!8415 = !DISubroutineType(types: !8416)
!8416 = !{null, !350, !762}
!8417 = !DIDerivedType(tag: DW_TAG_member, name: "nway_reset", scope: !8358, file: !311, line: 430, baseType: !461, size: 64, offset: 512)
!8418 = !DIDerivedType(tag: DW_TAG_member, name: "get_link", scope: !8358, file: !311, line: 431, baseType: !8410, size: 64, offset: 576)
!8419 = !DIDerivedType(tag: DW_TAG_member, name: "get_link_ext_state", scope: !8358, file: !311, line: 432, baseType: !8420, size: 64, offset: 640)
!8420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8421, size: 64)
!8421 = !DISubroutineType(types: !8422)
!8422 = !{!37, !350, !8423}
!8423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8424, size: 64)
!8424 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_link_ext_state_info", file: !311, line: 93, size: 64, elements: !8425)
!8425 = !{!8426, !8427}
!8426 = !DIDerivedType(tag: DW_TAG_member, name: "link_ext_state", scope: !8424, file: !311, line: 94, baseType: !268, size: 32)
!8427 = !DIDerivedType(tag: DW_TAG_member, scope: !8424, file: !311, line: 95, baseType: !8428, size: 32, offset: 32)
!8428 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8424, file: !311, line: 95, size: 32, elements: !8429)
!8429 = !{!8430, !8431, !8432, !8433, !8434, !8435}
!8430 = !DIDerivedType(tag: DW_TAG_member, name: "autoneg", scope: !8428, file: !311, line: 96, baseType: !281, size: 32)
!8431 = !DIDerivedType(tag: DW_TAG_member, name: "link_training", scope: !8428, file: !311, line: 97, baseType: !289, size: 32)
!8432 = !DIDerivedType(tag: DW_TAG_member, name: "link_logical_mismatch", scope: !8428, file: !311, line: 98, baseType: !295, size: 32)
!8433 = !DIDerivedType(tag: DW_TAG_member, name: "bad_signal_integrity", scope: !8428, file: !311, line: 99, baseType: !302, size: 32)
!8434 = !DIDerivedType(tag: DW_TAG_member, name: "cable_issue", scope: !8428, file: !311, line: 100, baseType: !306, size: 32)
!8435 = !DIDerivedType(tag: DW_TAG_member, name: "__link_ext_substate", scope: !8428, file: !311, line: 101, baseType: !1451, size: 8)
!8436 = !DIDerivedType(tag: DW_TAG_member, name: "get_eeprom_len", scope: !8358, file: !311, line: 434, baseType: !461, size: 64, offset: 704)
!8437 = !DIDerivedType(tag: DW_TAG_member, name: "get_eeprom", scope: !8358, file: !311, line: 435, baseType: !8438, size: 64, offset: 768)
!8438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8439, size: 64)
!8439 = !DISubroutineType(types: !8440)
!8440 = !{!37, !350, !8441, !7736}
!8441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8442, size: 64)
!8442 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_eeprom", file: !269, line: 335, size: 128, elements: !8443)
!8443 = !{!8444, !8445, !8446, !8447, !8448}
!8444 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8442, file: !269, line: 336, baseType: !523, size: 32)
!8445 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !8442, file: !269, line: 337, baseType: !523, size: 32, offset: 32)
!8446 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !8442, file: !269, line: 338, baseType: !523, size: 32, offset: 64)
!8447 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !8442, file: !269, line: 339, baseType: !523, size: 32, offset: 96)
!8448 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !8442, file: !269, line: 340, baseType: !7455, offset: 128)
!8449 = !DIDerivedType(tag: DW_TAG_member, name: "set_eeprom", scope: !8358, file: !311, line: 437, baseType: !8438, size: 64, offset: 832)
!8450 = !DIDerivedType(tag: DW_TAG_member, name: "get_coalesce", scope: !8358, file: !311, line: 439, baseType: !8451, size: 64, offset: 896)
!8451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8452, size: 64)
!8452 = !DISubroutineType(types: !8453)
!8453 = !{!37, !350, !8454}
!8454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8455, size: 64)
!8455 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_coalesce", file: !269, line: 462, size: 736, elements: !8456)
!8456 = !{!8457, !8458, !8459, !8460, !8461, !8462, !8463, !8464, !8465, !8466, !8467, !8468, !8469, !8470, !8471, !8472, !8473, !8474, !8475, !8476, !8477, !8478, !8479}
!8457 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8455, file: !269, line: 463, baseType: !523, size: 32)
!8458 = !DIDerivedType(tag: DW_TAG_member, name: "rx_coalesce_usecs", scope: !8455, file: !269, line: 464, baseType: !523, size: 32, offset: 32)
!8459 = !DIDerivedType(tag: DW_TAG_member, name: "rx_max_coalesced_frames", scope: !8455, file: !269, line: 465, baseType: !523, size: 32, offset: 64)
!8460 = !DIDerivedType(tag: DW_TAG_member, name: "rx_coalesce_usecs_irq", scope: !8455, file: !269, line: 466, baseType: !523, size: 32, offset: 96)
!8461 = !DIDerivedType(tag: DW_TAG_member, name: "rx_max_coalesced_frames_irq", scope: !8455, file: !269, line: 467, baseType: !523, size: 32, offset: 128)
!8462 = !DIDerivedType(tag: DW_TAG_member, name: "tx_coalesce_usecs", scope: !8455, file: !269, line: 468, baseType: !523, size: 32, offset: 160)
!8463 = !DIDerivedType(tag: DW_TAG_member, name: "tx_max_coalesced_frames", scope: !8455, file: !269, line: 469, baseType: !523, size: 32, offset: 192)
!8464 = !DIDerivedType(tag: DW_TAG_member, name: "tx_coalesce_usecs_irq", scope: !8455, file: !269, line: 470, baseType: !523, size: 32, offset: 224)
!8465 = !DIDerivedType(tag: DW_TAG_member, name: "tx_max_coalesced_frames_irq", scope: !8455, file: !269, line: 471, baseType: !523, size: 32, offset: 256)
!8466 = !DIDerivedType(tag: DW_TAG_member, name: "stats_block_coalesce_usecs", scope: !8455, file: !269, line: 472, baseType: !523, size: 32, offset: 288)
!8467 = !DIDerivedType(tag: DW_TAG_member, name: "use_adaptive_rx_coalesce", scope: !8455, file: !269, line: 473, baseType: !523, size: 32, offset: 320)
!8468 = !DIDerivedType(tag: DW_TAG_member, name: "use_adaptive_tx_coalesce", scope: !8455, file: !269, line: 474, baseType: !523, size: 32, offset: 352)
!8469 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_rate_low", scope: !8455, file: !269, line: 475, baseType: !523, size: 32, offset: 384)
!8470 = !DIDerivedType(tag: DW_TAG_member, name: "rx_coalesce_usecs_low", scope: !8455, file: !269, line: 476, baseType: !523, size: 32, offset: 416)
!8471 = !DIDerivedType(tag: DW_TAG_member, name: "rx_max_coalesced_frames_low", scope: !8455, file: !269, line: 477, baseType: !523, size: 32, offset: 448)
!8472 = !DIDerivedType(tag: DW_TAG_member, name: "tx_coalesce_usecs_low", scope: !8455, file: !269, line: 478, baseType: !523, size: 32, offset: 480)
!8473 = !DIDerivedType(tag: DW_TAG_member, name: "tx_max_coalesced_frames_low", scope: !8455, file: !269, line: 479, baseType: !523, size: 32, offset: 512)
!8474 = !DIDerivedType(tag: DW_TAG_member, name: "pkt_rate_high", scope: !8455, file: !269, line: 480, baseType: !523, size: 32, offset: 544)
!8475 = !DIDerivedType(tag: DW_TAG_member, name: "rx_coalesce_usecs_high", scope: !8455, file: !269, line: 481, baseType: !523, size: 32, offset: 576)
!8476 = !DIDerivedType(tag: DW_TAG_member, name: "rx_max_coalesced_frames_high", scope: !8455, file: !269, line: 482, baseType: !523, size: 32, offset: 608)
!8477 = !DIDerivedType(tag: DW_TAG_member, name: "tx_coalesce_usecs_high", scope: !8455, file: !269, line: 483, baseType: !523, size: 32, offset: 640)
!8478 = !DIDerivedType(tag: DW_TAG_member, name: "tx_max_coalesced_frames_high", scope: !8455, file: !269, line: 484, baseType: !523, size: 32, offset: 672)
!8479 = !DIDerivedType(tag: DW_TAG_member, name: "rate_sample_interval", scope: !8455, file: !269, line: 485, baseType: !523, size: 32, offset: 704)
!8480 = !DIDerivedType(tag: DW_TAG_member, name: "set_coalesce", scope: !8358, file: !311, line: 440, baseType: !8451, size: 64, offset: 960)
!8481 = !DIDerivedType(tag: DW_TAG_member, name: "get_ringparam", scope: !8358, file: !311, line: 441, baseType: !8482, size: 64, offset: 1024)
!8482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8483, size: 64)
!8483 = !DISubroutineType(types: !8484)
!8484 = !{null, !350, !8485}
!8485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8486, size: 64)
!8486 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_ringparam", file: !269, line: 513, size: 288, elements: !8487)
!8487 = !{!8488, !8489, !8490, !8491, !8492, !8493, !8494, !8495, !8496}
!8488 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8486, file: !269, line: 514, baseType: !523, size: 32)
!8489 = !DIDerivedType(tag: DW_TAG_member, name: "rx_max_pending", scope: !8486, file: !269, line: 515, baseType: !523, size: 32, offset: 32)
!8490 = !DIDerivedType(tag: DW_TAG_member, name: "rx_mini_max_pending", scope: !8486, file: !269, line: 516, baseType: !523, size: 32, offset: 64)
!8491 = !DIDerivedType(tag: DW_TAG_member, name: "rx_jumbo_max_pending", scope: !8486, file: !269, line: 517, baseType: !523, size: 32, offset: 96)
!8492 = !DIDerivedType(tag: DW_TAG_member, name: "tx_max_pending", scope: !8486, file: !269, line: 518, baseType: !523, size: 32, offset: 128)
!8493 = !DIDerivedType(tag: DW_TAG_member, name: "rx_pending", scope: !8486, file: !269, line: 519, baseType: !523, size: 32, offset: 160)
!8494 = !DIDerivedType(tag: DW_TAG_member, name: "rx_mini_pending", scope: !8486, file: !269, line: 520, baseType: !523, size: 32, offset: 192)
!8495 = !DIDerivedType(tag: DW_TAG_member, name: "rx_jumbo_pending", scope: !8486, file: !269, line: 521, baseType: !523, size: 32, offset: 224)
!8496 = !DIDerivedType(tag: DW_TAG_member, name: "tx_pending", scope: !8486, file: !269, line: 522, baseType: !523, size: 32, offset: 256)
!8497 = !DIDerivedType(tag: DW_TAG_member, name: "set_ringparam", scope: !8358, file: !311, line: 443, baseType: !8498, size: 64, offset: 1088)
!8498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8499, size: 64)
!8499 = !DISubroutineType(types: !8500)
!8500 = !{!37, !350, !8485}
!8501 = !DIDerivedType(tag: DW_TAG_member, name: "get_pause_stats", scope: !8358, file: !311, line: 445, baseType: !8502, size: 64, offset: 1152)
!8502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8503, size: 64)
!8503 = !DISubroutineType(types: !8504)
!8504 = !{null, !350, !8505}
!8505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8506, size: 64)
!8506 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_pause_stats", file: !311, line: 260, size: 128, elements: !8507)
!8507 = !{!8508, !8509}
!8508 = !DIDerivedType(tag: DW_TAG_member, name: "tx_pause_frames", scope: !8506, file: !311, line: 261, baseType: !391, size: 64)
!8509 = !DIDerivedType(tag: DW_TAG_member, name: "rx_pause_frames", scope: !8506, file: !311, line: 262, baseType: !391, size: 64, offset: 64)
!8510 = !DIDerivedType(tag: DW_TAG_member, name: "get_pauseparam", scope: !8358, file: !311, line: 447, baseType: !8511, size: 64, offset: 1216)
!8511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8512, size: 64)
!8512 = !DISubroutineType(types: !8513)
!8513 = !{null, !350, !8514}
!8514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8515, size: 64)
!8515 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_pauseparam", file: !269, line: 575, size: 128, elements: !8516)
!8516 = !{!8517, !8518, !8519, !8520}
!8517 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8515, file: !269, line: 576, baseType: !523, size: 32)
!8518 = !DIDerivedType(tag: DW_TAG_member, name: "autoneg", scope: !8515, file: !269, line: 577, baseType: !523, size: 32, offset: 32)
!8519 = !DIDerivedType(tag: DW_TAG_member, name: "rx_pause", scope: !8515, file: !269, line: 578, baseType: !523, size: 32, offset: 64)
!8520 = !DIDerivedType(tag: DW_TAG_member, name: "tx_pause", scope: !8515, file: !269, line: 579, baseType: !523, size: 32, offset: 96)
!8521 = !DIDerivedType(tag: DW_TAG_member, name: "set_pauseparam", scope: !8358, file: !311, line: 449, baseType: !8522, size: 64, offset: 1280)
!8522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8523, size: 64)
!8523 = !DISubroutineType(types: !8524)
!8524 = !{!37, !350, !8514}
!8525 = !DIDerivedType(tag: DW_TAG_member, name: "self_test", scope: !8358, file: !311, line: 451, baseType: !8526, size: 64, offset: 1344)
!8526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8527, size: 64)
!8527 = !DISubroutineType(types: !8528)
!8528 = !{null, !350, !8529, !3475}
!8529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8530, size: 64)
!8530 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_test", file: !269, line: 770, size: 128, elements: !8531)
!8531 = !{!8532, !8533, !8534, !8535, !8536}
!8532 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8530, file: !269, line: 771, baseType: !523, size: 32)
!8533 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !8530, file: !269, line: 772, baseType: !523, size: 32, offset: 32)
!8534 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !8530, file: !269, line: 773, baseType: !523, size: 32, offset: 64)
!8535 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !8530, file: !269, line: 774, baseType: !523, size: 32, offset: 96)
!8536 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !8530, file: !269, line: 775, baseType: !8537, offset: 128)
!8537 = !DICompositeType(tag: DW_TAG_array_type, baseType: !393, elements: !2009)
!8538 = !DIDerivedType(tag: DW_TAG_member, name: "get_strings", scope: !8358, file: !311, line: 452, baseType: !8539, size: 64, offset: 1408)
!8539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8540, size: 64)
!8540 = !DISubroutineType(types: !8541)
!8541 = !{null, !350, !762, !7736}
!8542 = !DIDerivedType(tag: DW_TAG_member, name: "set_phys_id", scope: !8358, file: !311, line: 453, baseType: !8543, size: 64, offset: 1472)
!8543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8544, size: 64)
!8544 = !DISubroutineType(types: !8545)
!8545 = !{!37, !350, !310}
!8546 = !DIDerivedType(tag: DW_TAG_member, name: "get_ethtool_stats", scope: !8358, file: !311, line: 454, baseType: !8547, size: 64, offset: 1536)
!8547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8548, size: 64)
!8548 = !DISubroutineType(types: !8549)
!8549 = !{null, !350, !8550, !3475}
!8550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8551, size: 64)
!8551 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_stats", file: !269, line: 789, size: 64, elements: !8552)
!8552 = !{!8553, !8554, !8555}
!8553 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8551, file: !269, line: 790, baseType: !523, size: 32)
!8554 = !DIDerivedType(tag: DW_TAG_member, name: "n_stats", scope: !8551, file: !269, line: 791, baseType: !523, size: 32, offset: 32)
!8555 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !8551, file: !269, line: 792, baseType: !8537, offset: 64)
!8556 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !8358, file: !311, line: 456, baseType: !461, size: 64, offset: 1600)
!8557 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !8358, file: !311, line: 457, baseType: !465, size: 64, offset: 1664)
!8558 = !DIDerivedType(tag: DW_TAG_member, name: "get_priv_flags", scope: !8358, file: !311, line: 458, baseType: !8410, size: 64, offset: 1728)
!8559 = !DIDerivedType(tag: DW_TAG_member, name: "set_priv_flags", scope: !8358, file: !311, line: 459, baseType: !8560, size: 64, offset: 1792)
!8560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8561, size: 64)
!8561 = !DISubroutineType(types: !8562)
!8562 = !{!37, !350, !762}
!8563 = !DIDerivedType(tag: DW_TAG_member, name: "get_sset_count", scope: !8358, file: !311, line: 460, baseType: !7671, size: 64, offset: 1856)
!8564 = !DIDerivedType(tag: DW_TAG_member, name: "get_rxnfc", scope: !8358, file: !311, line: 461, baseType: !8565, size: 64, offset: 1920)
!8565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8566, size: 64)
!8566 = !DISubroutineType(types: !8567)
!8567 = !{!37, !350, !8568, !1514}
!8568 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8569, size: 64)
!8569 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_rxnfc", file: !269, line: 1088, size: 1536, elements: !8570)
!8570 = !{!8571, !8572, !8573, !8574, !8660, !8665}
!8571 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8569, file: !269, line: 1089, baseType: !523, size: 32)
!8572 = !DIDerivedType(tag: DW_TAG_member, name: "flow_type", scope: !8569, file: !269, line: 1090, baseType: !523, size: 32, offset: 32)
!8573 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !8569, file: !269, line: 1091, baseType: !393, size: 64, offset: 64)
!8574 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !8569, file: !269, line: 1092, baseType: !8575, size: 1344, offset: 128)
!8575 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_rx_flow_spec", file: !269, line: 992, size: 1344, elements: !8576)
!8576 = !{!8577, !8578, !8646, !8656, !8657, !8658, !8659}
!8577 = !DIDerivedType(tag: DW_TAG_member, name: "flow_type", scope: !8575, file: !269, line: 993, baseType: !523, size: 32)
!8578 = !DIDerivedType(tag: DW_TAG_member, name: "h_u", scope: !8575, file: !269, line: 994, baseType: !8579, size: 416, offset: 32)
!8579 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "ethtool_flow_union", file: !269, line: 939, size: 416, elements: !8580)
!8580 = !{!8581, !8589, !8590, !8591, !8598, !8599, !8608, !8616, !8617, !8618, !8625, !8626, !8634, !8642}
!8581 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_ip4_spec", scope: !8579, file: !269, line: 940, baseType: !8582, size: 128)
!8582 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_tcpip4_spec", file: !269, line: 845, size: 128, elements: !8583)
!8583 = !{!8584, !8585, !8586, !8587, !8588}
!8584 = !DIDerivedType(tag: DW_TAG_member, name: "ip4src", scope: !8582, file: !269, line: 846, baseType: !521, size: 32)
!8585 = !DIDerivedType(tag: DW_TAG_member, name: "ip4dst", scope: !8582, file: !269, line: 847, baseType: !521, size: 32, offset: 32)
!8586 = !DIDerivedType(tag: DW_TAG_member, name: "psrc", scope: !8582, file: !269, line: 848, baseType: !544, size: 16, offset: 64)
!8587 = !DIDerivedType(tag: DW_TAG_member, name: "pdst", scope: !8582, file: !269, line: 849, baseType: !544, size: 16, offset: 80)
!8588 = !DIDerivedType(tag: DW_TAG_member, name: "tos", scope: !8582, file: !269, line: 850, baseType: !1452, size: 8, offset: 96)
!8589 = !DIDerivedType(tag: DW_TAG_member, name: "udp_ip4_spec", scope: !8579, file: !269, line: 941, baseType: !8582, size: 128)
!8590 = !DIDerivedType(tag: DW_TAG_member, name: "sctp_ip4_spec", scope: !8579, file: !269, line: 942, baseType: !8582, size: 128)
!8591 = !DIDerivedType(tag: DW_TAG_member, name: "ah_ip4_spec", scope: !8579, file: !269, line: 943, baseType: !8592, size: 128)
!8592 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_ah_espip4_spec", file: !269, line: 862, size: 128, elements: !8593)
!8593 = !{!8594, !8595, !8596, !8597}
!8594 = !DIDerivedType(tag: DW_TAG_member, name: "ip4src", scope: !8592, file: !269, line: 863, baseType: !521, size: 32)
!8595 = !DIDerivedType(tag: DW_TAG_member, name: "ip4dst", scope: !8592, file: !269, line: 864, baseType: !521, size: 32, offset: 32)
!8596 = !DIDerivedType(tag: DW_TAG_member, name: "spi", scope: !8592, file: !269, line: 865, baseType: !521, size: 32, offset: 64)
!8597 = !DIDerivedType(tag: DW_TAG_member, name: "tos", scope: !8592, file: !269, line: 866, baseType: !1452, size: 8, offset: 96)
!8598 = !DIDerivedType(tag: DW_TAG_member, name: "esp_ip4_spec", scope: !8579, file: !269, line: 944, baseType: !8592, size: 128)
!8599 = !DIDerivedType(tag: DW_TAG_member, name: "usr_ip4_spec", scope: !8579, file: !269, line: 945, baseType: !8600, size: 128)
!8600 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_usrip4_spec", file: !269, line: 880, size: 128, elements: !8601)
!8601 = !{!8602, !8603, !8604, !8605, !8606, !8607}
!8602 = !DIDerivedType(tag: DW_TAG_member, name: "ip4src", scope: !8600, file: !269, line: 881, baseType: !521, size: 32)
!8603 = !DIDerivedType(tag: DW_TAG_member, name: "ip4dst", scope: !8600, file: !269, line: 882, baseType: !521, size: 32, offset: 32)
!8604 = !DIDerivedType(tag: DW_TAG_member, name: "l4_4_bytes", scope: !8600, file: !269, line: 883, baseType: !521, size: 32, offset: 64)
!8605 = !DIDerivedType(tag: DW_TAG_member, name: "tos", scope: !8600, file: !269, line: 884, baseType: !1452, size: 8, offset: 96)
!8606 = !DIDerivedType(tag: DW_TAG_member, name: "ip_ver", scope: !8600, file: !269, line: 885, baseType: !1452, size: 8, offset: 104)
!8607 = !DIDerivedType(tag: DW_TAG_member, name: "proto", scope: !8600, file: !269, line: 886, baseType: !1452, size: 8, offset: 112)
!8608 = !DIDerivedType(tag: DW_TAG_member, name: "tcp_ip6_spec", scope: !8579, file: !269, line: 946, baseType: !8609, size: 320)
!8609 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_tcpip6_spec", file: !269, line: 899, size: 320, elements: !8610)
!8610 = !{!8611, !8612, !8613, !8614, !8615}
!8611 = !DIDerivedType(tag: DW_TAG_member, name: "ip6src", scope: !8609, file: !269, line: 900, baseType: !2308, size: 128)
!8612 = !DIDerivedType(tag: DW_TAG_member, name: "ip6dst", scope: !8609, file: !269, line: 901, baseType: !2308, size: 128, offset: 128)
!8613 = !DIDerivedType(tag: DW_TAG_member, name: "psrc", scope: !8609, file: !269, line: 902, baseType: !544, size: 16, offset: 256)
!8614 = !DIDerivedType(tag: DW_TAG_member, name: "pdst", scope: !8609, file: !269, line: 903, baseType: !544, size: 16, offset: 272)
!8615 = !DIDerivedType(tag: DW_TAG_member, name: "tclass", scope: !8609, file: !269, line: 904, baseType: !1452, size: 8, offset: 288)
!8616 = !DIDerivedType(tag: DW_TAG_member, name: "udp_ip6_spec", scope: !8579, file: !269, line: 947, baseType: !8609, size: 320)
!8617 = !DIDerivedType(tag: DW_TAG_member, name: "sctp_ip6_spec", scope: !8579, file: !269, line: 948, baseType: !8609, size: 320)
!8618 = !DIDerivedType(tag: DW_TAG_member, name: "ah_ip6_spec", scope: !8579, file: !269, line: 949, baseType: !8619, size: 320)
!8619 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_ah_espip6_spec", file: !269, line: 916, size: 320, elements: !8620)
!8620 = !{!8621, !8622, !8623, !8624}
!8621 = !DIDerivedType(tag: DW_TAG_member, name: "ip6src", scope: !8619, file: !269, line: 917, baseType: !2308, size: 128)
!8622 = !DIDerivedType(tag: DW_TAG_member, name: "ip6dst", scope: !8619, file: !269, line: 918, baseType: !2308, size: 128, offset: 128)
!8623 = !DIDerivedType(tag: DW_TAG_member, name: "spi", scope: !8619, file: !269, line: 919, baseType: !521, size: 32, offset: 256)
!8624 = !DIDerivedType(tag: DW_TAG_member, name: "tclass", scope: !8619, file: !269, line: 920, baseType: !1452, size: 8, offset: 288)
!8625 = !DIDerivedType(tag: DW_TAG_member, name: "esp_ip6_spec", scope: !8579, file: !269, line: 950, baseType: !8619, size: 320)
!8626 = !DIDerivedType(tag: DW_TAG_member, name: "usr_ip6_spec", scope: !8579, file: !269, line: 951, baseType: !8627, size: 320)
!8627 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_usrip6_spec", file: !269, line: 931, size: 320, elements: !8628)
!8628 = !{!8629, !8630, !8631, !8632, !8633}
!8629 = !DIDerivedType(tag: DW_TAG_member, name: "ip6src", scope: !8627, file: !269, line: 932, baseType: !2308, size: 128)
!8630 = !DIDerivedType(tag: DW_TAG_member, name: "ip6dst", scope: !8627, file: !269, line: 933, baseType: !2308, size: 128, offset: 128)
!8631 = !DIDerivedType(tag: DW_TAG_member, name: "l4_4_bytes", scope: !8627, file: !269, line: 934, baseType: !521, size: 32, offset: 256)
!8632 = !DIDerivedType(tag: DW_TAG_member, name: "tclass", scope: !8627, file: !269, line: 935, baseType: !1452, size: 8, offset: 288)
!8633 = !DIDerivedType(tag: DW_TAG_member, name: "l4_proto", scope: !8627, file: !269, line: 936, baseType: !1452, size: 8, offset: 296)
!8634 = !DIDerivedType(tag: DW_TAG_member, name: "ether_spec", scope: !8579, file: !269, line: 952, baseType: !8635, size: 112)
!8635 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethhdr", file: !8636, line: 164, size: 112, elements: !8637)
!8636 = !DIFile(filename: "./include/uapi/linux/if_ether.h", directory: "/home/lizy2001/genbc/linux")
!8637 = !{!8638, !8640, !8641}
!8638 = !DIDerivedType(tag: DW_TAG_member, name: "h_dest", scope: !8635, file: !8636, line: 165, baseType: !8639, size: 48)
!8639 = !DICompositeType(tag: DW_TAG_array_type, baseType: !549, size: 48, elements: !1722)
!8640 = !DIDerivedType(tag: DW_TAG_member, name: "h_source", scope: !8635, file: !8636, line: 166, baseType: !8639, size: 48, offset: 48)
!8641 = !DIDerivedType(tag: DW_TAG_member, name: "h_proto", scope: !8635, file: !8636, line: 167, baseType: !544, size: 16, offset: 96)
!8642 = !DIDerivedType(tag: DW_TAG_member, name: "hdata", scope: !8579, file: !269, line: 953, baseType: !8643, size: 416)
!8643 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1452, size: 416, elements: !8644)
!8644 = !{!8645}
!8645 = !DISubrange(count: 52)
!8646 = !DIDerivedType(tag: DW_TAG_member, name: "h_ext", scope: !8575, file: !269, line: 995, baseType: !8647, size: 160, offset: 448)
!8647 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_flow_ext", file: !269, line: 967, size: 160, elements: !8648)
!8648 = !{!8649, !8651, !8652, !8653, !8654}
!8649 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !8647, file: !269, line: 968, baseType: !8650, size: 16)
!8650 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1452, size: 16, elements: !533)
!8651 = !DIDerivedType(tag: DW_TAG_member, name: "h_dest", scope: !8647, file: !269, line: 969, baseType: !8639, size: 48, offset: 16)
!8652 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_etype", scope: !8647, file: !269, line: 970, baseType: !544, size: 16, offset: 64)
!8653 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_tci", scope: !8647, file: !269, line: 971, baseType: !544, size: 16, offset: 80)
!8654 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !8647, file: !269, line: 972, baseType: !8655, size: 64, offset: 96)
!8655 = !DICompositeType(tag: DW_TAG_array_type, baseType: !521, size: 64, elements: !533)
!8656 = !DIDerivedType(tag: DW_TAG_member, name: "m_u", scope: !8575, file: !269, line: 996, baseType: !8579, size: 416, offset: 608)
!8657 = !DIDerivedType(tag: DW_TAG_member, name: "m_ext", scope: !8575, file: !269, line: 997, baseType: !8647, size: 160, offset: 1024)
!8658 = !DIDerivedType(tag: DW_TAG_member, name: "ring_cookie", scope: !8575, file: !269, line: 998, baseType: !393, size: 64, offset: 1216)
!8659 = !DIDerivedType(tag: DW_TAG_member, name: "location", scope: !8575, file: !269, line: 999, baseType: !523, size: 32, offset: 1280)
!8660 = !DIDerivedType(tag: DW_TAG_member, scope: !8569, file: !269, line: 1093, baseType: !8661, size: 32, offset: 1472)
!8661 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !8569, file: !269, line: 1093, size: 32, elements: !8662)
!8662 = !{!8663, !8664}
!8663 = !DIDerivedType(tag: DW_TAG_member, name: "rule_cnt", scope: !8661, file: !269, line: 1094, baseType: !523, size: 32)
!8664 = !DIDerivedType(tag: DW_TAG_member, name: "rss_context", scope: !8661, file: !269, line: 1095, baseType: !523, size: 32)
!8665 = !DIDerivedType(tag: DW_TAG_member, name: "rule_locs", scope: !8569, file: !269, line: 1097, baseType: !7463, offset: 1504)
!8666 = !DIDerivedType(tag: DW_TAG_member, name: "set_rxnfc", scope: !8358, file: !311, line: 463, baseType: !8667, size: 64, offset: 1984)
!8667 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8668, size: 64)
!8668 = !DISubroutineType(types: !8669)
!8669 = !{!37, !350, !8568}
!8670 = !DIDerivedType(tag: DW_TAG_member, name: "flash_device", scope: !8358, file: !311, line: 464, baseType: !8671, size: 64, offset: 2048)
!8671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8672, size: 64)
!8672 = !DISubroutineType(types: !8673)
!8673 = !{!37, !350, !8674}
!8674 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8675, size: 64)
!8675 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_flash", file: !269, line: 1217, size: 1088, elements: !8676)
!8676 = !{!8677, !8678, !8679}
!8677 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8675, file: !269, line: 1218, baseType: !523, size: 32)
!8678 = !DIDerivedType(tag: DW_TAG_member, name: "region", scope: !8675, file: !269, line: 1219, baseType: !523, size: 32, offset: 32)
!8679 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !8675, file: !269, line: 1220, baseType: !3127, size: 1024, offset: 64)
!8680 = !DIDerivedType(tag: DW_TAG_member, name: "reset", scope: !8358, file: !311, line: 465, baseType: !8681, size: 64, offset: 2112)
!8681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8682, size: 64)
!8682 = !DISubroutineType(types: !8683)
!8683 = !{!37, !350, !1514}
!8684 = !DIDerivedType(tag: DW_TAG_member, name: "get_rxfh_key_size", scope: !8358, file: !311, line: 466, baseType: !8410, size: 64, offset: 2176)
!8685 = !DIDerivedType(tag: DW_TAG_member, name: "get_rxfh_indir_size", scope: !8358, file: !311, line: 467, baseType: !8410, size: 64, offset: 2240)
!8686 = !DIDerivedType(tag: DW_TAG_member, name: "get_rxfh", scope: !8358, file: !311, line: 468, baseType: !8687, size: 64, offset: 2304)
!8687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8688, size: 64)
!8688 = !DISubroutineType(types: !8689)
!8689 = !{!37, !350, !1514, !7736, !7736}
!8690 = !DIDerivedType(tag: DW_TAG_member, name: "set_rxfh", scope: !8358, file: !311, line: 470, baseType: !8691, size: 64, offset: 2368)
!8691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8692, size: 64)
!8692 = !DISubroutineType(types: !8693)
!8693 = !{!37, !350, !8694, !8288, !8289}
!8694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2556, size: 64)
!8695 = !DIDerivedType(tag: DW_TAG_member, name: "get_rxfh_context", scope: !8358, file: !311, line: 472, baseType: !8696, size: 64, offset: 2432)
!8696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8697, size: 64)
!8697 = !DISubroutineType(types: !8698)
!8698 = !{!37, !350, !1514, !7736, !7736, !762}
!8699 = !DIDerivedType(tag: DW_TAG_member, name: "set_rxfh_context", scope: !8358, file: !311, line: 474, baseType: !8700, size: 64, offset: 2496)
!8700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8701, size: 64)
!8701 = !DISubroutineType(types: !8702)
!8702 = !{!37, !350, !8694, !8288, !8289, !1514, !595}
!8703 = !DIDerivedType(tag: DW_TAG_member, name: "get_channels", scope: !8358, file: !311, line: 477, baseType: !8704, size: 64, offset: 2560)
!8704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8705, size: 64)
!8705 = !DISubroutineType(types: !8706)
!8706 = !{null, !350, !8707}
!8707 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8708, size: 64)
!8708 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_channels", file: !269, line: 541, size: 288, elements: !8709)
!8709 = !{!8710, !8711, !8712, !8713, !8714, !8715, !8716, !8717, !8718}
!8710 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8708, file: !269, line: 542, baseType: !523, size: 32)
!8711 = !DIDerivedType(tag: DW_TAG_member, name: "max_rx", scope: !8708, file: !269, line: 543, baseType: !523, size: 32, offset: 32)
!8712 = !DIDerivedType(tag: DW_TAG_member, name: "max_tx", scope: !8708, file: !269, line: 544, baseType: !523, size: 32, offset: 64)
!8713 = !DIDerivedType(tag: DW_TAG_member, name: "max_other", scope: !8708, file: !269, line: 545, baseType: !523, size: 32, offset: 96)
!8714 = !DIDerivedType(tag: DW_TAG_member, name: "max_combined", scope: !8708, file: !269, line: 546, baseType: !523, size: 32, offset: 128)
!8715 = !DIDerivedType(tag: DW_TAG_member, name: "rx_count", scope: !8708, file: !269, line: 547, baseType: !523, size: 32, offset: 160)
!8716 = !DIDerivedType(tag: DW_TAG_member, name: "tx_count", scope: !8708, file: !269, line: 548, baseType: !523, size: 32, offset: 192)
!8717 = !DIDerivedType(tag: DW_TAG_member, name: "other_count", scope: !8708, file: !269, line: 549, baseType: !523, size: 32, offset: 224)
!8718 = !DIDerivedType(tag: DW_TAG_member, name: "combined_count", scope: !8708, file: !269, line: 550, baseType: !523, size: 32, offset: 256)
!8719 = !DIDerivedType(tag: DW_TAG_member, name: "set_channels", scope: !8358, file: !311, line: 478, baseType: !8720, size: 64, offset: 2624)
!8720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8721, size: 64)
!8721 = !DISubroutineType(types: !8722)
!8722 = !{!37, !350, !8707}
!8723 = !DIDerivedType(tag: DW_TAG_member, name: "get_dump_flag", scope: !8358, file: !311, line: 479, baseType: !8724, size: 64, offset: 2688)
!8724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8725, size: 64)
!8725 = !DISubroutineType(types: !8726)
!8726 = !{!37, !350, !8727}
!8727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8728, size: 64)
!8728 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_dump", file: !269, line: 1237, size: 128, elements: !8729)
!8729 = !{!8730, !8731, !8732, !8733, !8734}
!8730 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8728, file: !269, line: 1238, baseType: !523, size: 32)
!8731 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !8728, file: !269, line: 1239, baseType: !523, size: 32, offset: 32)
!8732 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !8728, file: !269, line: 1240, baseType: !523, size: 32, offset: 64)
!8733 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !8728, file: !269, line: 1241, baseType: !523, size: 32, offset: 96)
!8734 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !8728, file: !269, line: 1242, baseType: !7455, offset: 128)
!8735 = !DIDerivedType(tag: DW_TAG_member, name: "get_dump_data", scope: !8358, file: !311, line: 480, baseType: !8736, size: 64, offset: 2752)
!8736 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8737, size: 64)
!8737 = !DISubroutineType(types: !8738)
!8738 = !{!37, !350, !8727, !625}
!8739 = !DIDerivedType(tag: DW_TAG_member, name: "set_dump", scope: !8358, file: !311, line: 482, baseType: !8724, size: 64, offset: 2816)
!8740 = !DIDerivedType(tag: DW_TAG_member, name: "get_ts_info", scope: !8358, file: !311, line: 483, baseType: !8741, size: 64, offset: 2880)
!8741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8742, size: 64)
!8742 = !DISubroutineType(types: !8743)
!8743 = !{!37, !350, !8744}
!8744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8745, size: 64)
!8745 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_ts_info", file: !269, line: 1317, size: 352, elements: !8746)
!8746 = !{!8747, !8748, !8749, !8750, !8751, !8753, !8754}
!8747 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8745, file: !269, line: 1318, baseType: !523, size: 32)
!8748 = !DIDerivedType(tag: DW_TAG_member, name: "so_timestamping", scope: !8745, file: !269, line: 1319, baseType: !523, size: 32, offset: 32)
!8749 = !DIDerivedType(tag: DW_TAG_member, name: "phc_index", scope: !8745, file: !269, line: 1320, baseType: !1544, size: 32, offset: 64)
!8750 = !DIDerivedType(tag: DW_TAG_member, name: "tx_types", scope: !8745, file: !269, line: 1321, baseType: !523, size: 32, offset: 96)
!8751 = !DIDerivedType(tag: DW_TAG_member, name: "tx_reserved", scope: !8745, file: !269, line: 1322, baseType: !8752, size: 96, offset: 128)
!8752 = !DICompositeType(tag: DW_TAG_array_type, baseType: !523, size: 96, elements: !921)
!8753 = !DIDerivedType(tag: DW_TAG_member, name: "rx_filters", scope: !8745, file: !269, line: 1323, baseType: !523, size: 32, offset: 224)
!8754 = !DIDerivedType(tag: DW_TAG_member, name: "rx_reserved", scope: !8745, file: !269, line: 1324, baseType: !8752, size: 96, offset: 256)
!8755 = !DIDerivedType(tag: DW_TAG_member, name: "get_module_info", scope: !8358, file: !311, line: 484, baseType: !8756, size: 64, offset: 2944)
!8756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8757, size: 64)
!8757 = !DISubroutineType(types: !8758)
!8758 = !{!37, !350, !8759}
!8759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8760, size: 64)
!8760 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_modinfo", file: !269, line: 382, size: 352, elements: !8761)
!8761 = !{!8762, !8763, !8764, !8765}
!8762 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8760, file: !269, line: 383, baseType: !523, size: 32)
!8763 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !8760, file: !269, line: 384, baseType: !523, size: 32, offset: 32)
!8764 = !DIDerivedType(tag: DW_TAG_member, name: "eeprom_len", scope: !8760, file: !269, line: 385, baseType: !523, size: 32, offset: 64)
!8765 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !8760, file: !269, line: 386, baseType: !8766, size: 256, offset: 96)
!8766 = !DICompositeType(tag: DW_TAG_array_type, baseType: !523, size: 256, elements: !1425)
!8767 = !DIDerivedType(tag: DW_TAG_member, name: "get_module_eeprom", scope: !8358, file: !311, line: 486, baseType: !8438, size: 64, offset: 3008)
!8768 = !DIDerivedType(tag: DW_TAG_member, name: "get_eee", scope: !8358, file: !311, line: 488, baseType: !8769, size: 64, offset: 3072)
!8769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8770, size: 64)
!8770 = !DISubroutineType(types: !8771)
!8771 = !{!37, !350, !8772}
!8772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8773, size: 64)
!8773 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_eee", file: !269, line: 360, size: 320, elements: !8774)
!8774 = !{!8775, !8776, !8777, !8778, !8779, !8780, !8781, !8782, !8783}
!8775 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8773, file: !269, line: 361, baseType: !523, size: 32)
!8776 = !DIDerivedType(tag: DW_TAG_member, name: "supported", scope: !8773, file: !269, line: 362, baseType: !523, size: 32, offset: 32)
!8777 = !DIDerivedType(tag: DW_TAG_member, name: "advertised", scope: !8773, file: !269, line: 363, baseType: !523, size: 32, offset: 64)
!8778 = !DIDerivedType(tag: DW_TAG_member, name: "lp_advertised", scope: !8773, file: !269, line: 364, baseType: !523, size: 32, offset: 96)
!8779 = !DIDerivedType(tag: DW_TAG_member, name: "eee_active", scope: !8773, file: !269, line: 365, baseType: !523, size: 32, offset: 128)
!8780 = !DIDerivedType(tag: DW_TAG_member, name: "eee_enabled", scope: !8773, file: !269, line: 366, baseType: !523, size: 32, offset: 160)
!8781 = !DIDerivedType(tag: DW_TAG_member, name: "tx_lpi_enabled", scope: !8773, file: !269, line: 367, baseType: !523, size: 32, offset: 192)
!8782 = !DIDerivedType(tag: DW_TAG_member, name: "tx_lpi_timer", scope: !8773, file: !269, line: 368, baseType: !523, size: 32, offset: 224)
!8783 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !8773, file: !269, line: 369, baseType: !1964, size: 64, offset: 256)
!8784 = !DIDerivedType(tag: DW_TAG_member, name: "set_eee", scope: !8358, file: !311, line: 489, baseType: !8769, size: 64, offset: 3136)
!8785 = !DIDerivedType(tag: DW_TAG_member, name: "get_tunable", scope: !8358, file: !311, line: 490, baseType: !8786, size: 64, offset: 3200)
!8786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8787, size: 64)
!8787 = !DISubroutineType(types: !8788)
!8788 = !{!37, !350, !8789, !625}
!8789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8790, size: 64)
!8790 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8791)
!8791 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_tunable", file: !269, line: 244, size: 128, elements: !8792)
!8792 = !{!8793, !8794, !8795, !8796, !8797}
!8793 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8791, file: !269, line: 245, baseType: !523, size: 32)
!8794 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !8791, file: !269, line: 246, baseType: !523, size: 32, offset: 32)
!8795 = !DIDerivedType(tag: DW_TAG_member, name: "type_id", scope: !8791, file: !269, line: 247, baseType: !523, size: 32, offset: 64)
!8796 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !8791, file: !269, line: 248, baseType: !523, size: 32, offset: 96)
!8797 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !8791, file: !269, line: 249, baseType: !8798, offset: 128)
!8798 = !DICompositeType(tag: DW_TAG_array_type, baseType: !625, elements: !2009)
!8799 = !DIDerivedType(tag: DW_TAG_member, name: "set_tunable", scope: !8358, file: !311, line: 492, baseType: !8800, size: 64, offset: 3264)
!8800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8801, size: 64)
!8801 = !DISubroutineType(types: !8802)
!8802 = !{!37, !350, !8789, !2337}
!8803 = !DIDerivedType(tag: DW_TAG_member, name: "get_per_queue_coalesce", scope: !8358, file: !311, line: 494, baseType: !8804, size: 64, offset: 3328)
!8804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8805, size: 64)
!8805 = !DISubroutineType(types: !8806)
!8806 = !{!37, !350, !762, !8454}
!8807 = !DIDerivedType(tag: DW_TAG_member, name: "set_per_queue_coalesce", scope: !8358, file: !311, line: 496, baseType: !8804, size: 64, offset: 3392)
!8808 = !DIDerivedType(tag: DW_TAG_member, name: "get_link_ksettings", scope: !8358, file: !311, line: 498, baseType: !8809, size: 64, offset: 3456)
!8809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8810, size: 64)
!8810 = !DISubroutineType(types: !8811)
!8811 = !{!37, !350, !8812}
!8812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8813, size: 64)
!8813 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_link_ksettings", file: !311, line: 124, size: 768, elements: !8814)
!8814 = !{!8815, !8840}
!8815 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !8813, file: !311, line: 125, baseType: !8816, size: 384)
!8816 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_link_settings", file: !269, line: 1996, size: 384, elements: !8817)
!8817 = !{!8818, !8819, !8820, !8821, !8822, !8823, !8824, !8825, !8826, !8827, !8830, !8831, !8832, !8833, !8835, !8839}
!8818 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8816, file: !269, line: 1997, baseType: !523, size: 32)
!8819 = !DIDerivedType(tag: DW_TAG_member, name: "speed", scope: !8816, file: !269, line: 1998, baseType: !523, size: 32, offset: 32)
!8820 = !DIDerivedType(tag: DW_TAG_member, name: "duplex", scope: !8816, file: !269, line: 1999, baseType: !1452, size: 8, offset: 64)
!8821 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !8816, file: !269, line: 2000, baseType: !1452, size: 8, offset: 72)
!8822 = !DIDerivedType(tag: DW_TAG_member, name: "phy_address", scope: !8816, file: !269, line: 2001, baseType: !1452, size: 8, offset: 80)
!8823 = !DIDerivedType(tag: DW_TAG_member, name: "autoneg", scope: !8816, file: !269, line: 2002, baseType: !1452, size: 8, offset: 88)
!8824 = !DIDerivedType(tag: DW_TAG_member, name: "mdio_support", scope: !8816, file: !269, line: 2003, baseType: !1452, size: 8, offset: 96)
!8825 = !DIDerivedType(tag: DW_TAG_member, name: "eth_tp_mdix", scope: !8816, file: !269, line: 2004, baseType: !1452, size: 8, offset: 104)
!8826 = !DIDerivedType(tag: DW_TAG_member, name: "eth_tp_mdix_ctrl", scope: !8816, file: !269, line: 2005, baseType: !1452, size: 8, offset: 112)
!8827 = !DIDerivedType(tag: DW_TAG_member, name: "link_mode_masks_nwords", scope: !8816, file: !269, line: 2006, baseType: !8828, size: 8, offset: 120)
!8828 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s8", file: !394, line: 20, baseType: !8829)
!8829 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!8830 = !DIDerivedType(tag: DW_TAG_member, name: "transceiver", scope: !8816, file: !269, line: 2007, baseType: !1452, size: 8, offset: 128)
!8831 = !DIDerivedType(tag: DW_TAG_member, name: "master_slave_cfg", scope: !8816, file: !269, line: 2008, baseType: !1452, size: 8, offset: 136)
!8832 = !DIDerivedType(tag: DW_TAG_member, name: "master_slave_state", scope: !8816, file: !269, line: 2009, baseType: !1452, size: 8, offset: 144)
!8833 = !DIDerivedType(tag: DW_TAG_member, name: "reserved1", scope: !8816, file: !269, line: 2010, baseType: !8834, size: 8, offset: 152)
!8834 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1452, size: 8, elements: !1470)
!8835 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !8816, file: !269, line: 2011, baseType: !8836, size: 224, offset: 160)
!8836 = !DICompositeType(tag: DW_TAG_array_type, baseType: !523, size: 224, elements: !8837)
!8837 = !{!8838}
!8838 = !DISubrange(count: 7)
!8839 = !DIDerivedType(tag: DW_TAG_member, name: "link_mode_masks", scope: !8816, file: !269, line: 2012, baseType: !7463, offset: 384)
!8840 = !DIDerivedType(tag: DW_TAG_member, name: "link_modes", scope: !8813, file: !311, line: 130, baseType: !8841, size: 384, offset: 384)
!8841 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !8813, file: !311, line: 126, size: 384, elements: !8842)
!8842 = !{!8843, !8845, !8846}
!8843 = !DIDerivedType(tag: DW_TAG_member, name: "supported", scope: !8841, file: !311, line: 127, baseType: !8844, size: 128)
!8844 = !DICompositeType(tag: DW_TAG_array_type, baseType: !372, size: 128, elements: !533)
!8845 = !DIDerivedType(tag: DW_TAG_member, name: "advertising", scope: !8841, file: !311, line: 128, baseType: !8844, size: 128, offset: 128)
!8846 = !DIDerivedType(tag: DW_TAG_member, name: "lp_advertising", scope: !8841, file: !311, line: 129, baseType: !8844, size: 128, offset: 256)
!8847 = !DIDerivedType(tag: DW_TAG_member, name: "set_link_ksettings", scope: !8358, file: !311, line: 500, baseType: !8848, size: 64, offset: 3520)
!8848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8849, size: 64)
!8849 = !DISubroutineType(types: !8850)
!8850 = !{!37, !350, !8851}
!8851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8852, size: 64)
!8852 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8813)
!8853 = !DIDerivedType(tag: DW_TAG_member, name: "get_fecparam", scope: !8358, file: !311, line: 502, baseType: !8854, size: 64, offset: 3584)
!8854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8855, size: 64)
!8855 = !DISubroutineType(types: !8856)
!8856 = !{!37, !350, !8857}
!8857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8858, size: 64)
!8858 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ethtool_fecparam", file: !269, line: 1389, size: 128, elements: !8859)
!8859 = !{!8860, !8861, !8862, !8863}
!8860 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !8858, file: !269, line: 1390, baseType: !523, size: 32)
!8861 = !DIDerivedType(tag: DW_TAG_member, name: "active_fec", scope: !8858, file: !269, line: 1392, baseType: !523, size: 32, offset: 32)
!8862 = !DIDerivedType(tag: DW_TAG_member, name: "fec", scope: !8858, file: !269, line: 1393, baseType: !523, size: 32, offset: 64)
!8863 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !8858, file: !269, line: 1394, baseType: !523, size: 32, offset: 96)
!8864 = !DIDerivedType(tag: DW_TAG_member, name: "set_fecparam", scope: !8358, file: !311, line: 504, baseType: !8854, size: 64, offset: 3648)
!8865 = !DIDerivedType(tag: DW_TAG_member, name: "get_ethtool_phy_stats", scope: !8358, file: !311, line: 506, baseType: !8547, size: 64, offset: 3712)
!8866 = !DIDerivedType(tag: DW_TAG_member, name: "get_phy_tunable", scope: !8358, file: !311, line: 508, baseType: !8786, size: 64, offset: 3776)
!8867 = !DIDerivedType(tag: DW_TAG_member, name: "set_phy_tunable", scope: !8358, file: !311, line: 510, baseType: !8800, size: 64, offset: 3840)
!8868 = !DIDerivedType(tag: DW_TAG_member, name: "ndisc_ops", scope: !324, file: !36, line: 1922, baseType: !8869, size: 64, offset: 4096)
!8869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8870, size: 64)
!8870 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8871)
!8871 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ndisc_ops", file: !8872, line: 202, size: 384, elements: !8873)
!8872 = !DIFile(filename: "./include/net/ndisc.h", directory: "/home/lizy2001/genbc/linux")
!8873 = !{!8874, !8878, !8896, !8902, !8907, !8911}
!8874 = !DIDerivedType(tag: DW_TAG_member, name: "is_useropt", scope: !8871, file: !8872, line: 203, baseType: !8875, size: 64)
!8875 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8876, size: 64)
!8876 = !DISubroutineType(types: !8877)
!8877 = !{!37, !1451}
!8878 = !DIDerivedType(tag: DW_TAG_member, name: "parse_options", scope: !8871, file: !8872, line: 204, baseType: !8879, size: 64, offset: 64)
!8879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8880, size: 64)
!8880 = !DISubroutineType(types: !8881)
!8881 = !{!37, !2819, !8882, !8887}
!8882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8883, size: 64)
!8883 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nd_opt_hdr", file: !8872, line: 105, size: 16, elements: !8884)
!8884 = !{!8885, !8886}
!8885 = !DIDerivedType(tag: DW_TAG_member, name: "nd_opt_type", scope: !8883, file: !8872, line: 106, baseType: !1452, size: 8)
!8886 = !DIDerivedType(tag: DW_TAG_member, name: "nd_opt_len", scope: !8883, file: !8872, line: 107, baseType: !1452, size: 8, offset: 8)
!8887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8888, size: 64)
!8888 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ndisc_options", file: !8872, line: 111, size: 1088, elements: !8889)
!8889 = !{!8890, !8894, !8895}
!8890 = !DIDerivedType(tag: DW_TAG_member, name: "nd_opt_array", scope: !8888, file: !8872, line: 112, baseType: !8891, size: 960)
!8891 = !DICompositeType(tag: DW_TAG_array_type, baseType: !8882, size: 960, elements: !8892)
!8892 = !{!8893}
!8893 = !DISubrange(count: 15)
!8894 = !DIDerivedType(tag: DW_TAG_member, name: "nd_useropts", scope: !8888, file: !8872, line: 117, baseType: !8882, size: 64, offset: 960)
!8895 = !DIDerivedType(tag: DW_TAG_member, name: "nd_useropts_end", scope: !8888, file: !8872, line: 118, baseType: !8882, size: 64, offset: 1024)
!8896 = !DIDerivedType(tag: DW_TAG_member, name: "update", scope: !8871, file: !8872, line: 207, baseType: !8897, size: 64, offset: 128)
!8897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8898, size: 64)
!8898 = !DISubroutineType(types: !8899)
!8899 = !{null, !2819, !2802, !762, !1451, !8900}
!8900 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8901, size: 64)
!8901 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8888)
!8902 = !DIDerivedType(tag: DW_TAG_member, name: "opt_addr_space", scope: !8871, file: !8872, line: 210, baseType: !8903, size: 64, offset: 192)
!8903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8904, size: 64)
!8904 = !DISubroutineType(types: !8905)
!8905 = !{!37, !2819, !1451, !2802, !7736, !8906}
!8906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7736, size: 64)
!8907 = !DIDerivedType(tag: DW_TAG_member, name: "fill_addr_option", scope: !8871, file: !8872, line: 213, baseType: !8908, size: 64, offset: 256)
!8908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8909, size: 64)
!8909 = !DISubroutineType(types: !8910)
!8910 = !{null, !2819, !475, !1451, !8288}
!8911 = !DIDerivedType(tag: DW_TAG_member, name: "prefix_rcv_add_addr", scope: !8871, file: !8872, line: 216, baseType: !8912, size: 64, offset: 320)
!8912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8913, size: 64)
!8913 = !DISubroutineType(types: !8914)
!8914 = !{null, !2049, !350, !8915, !8918, !9008, !37, !762, !595, !595, !523, !762, !595}
!8915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8916, size: 64)
!8916 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8917)
!8917 = !DICompositeType(tag: DW_TAG_structure_type, name: "prefix_info", file: !8872, line: 77, flags: DIFlagFwdDecl)
!8918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8919, size: 64)
!8919 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inet6_dev", file: !8920, line: 163, size: 4544, elements: !8921)
!8920 = !DIFile(filename: "./include/net/if_inet6.h", directory: "/home/lizy2001/genbc/linux")
!8921 = !{!8922, !8923, !8924, !8952, !8953, !8954, !8955, !8956, !8957, !8958, !8959, !8960, !8961, !8962, !8963, !8964, !8965, !8978, !8979, !8980, !8981, !8982, !8983, !8984, !8985, !8986, !8987, !9003, !9004, !9005, !9006, !9007}
!8922 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !8919, file: !8920, line: 164, baseType: !350, size: 64)
!8923 = !DIDerivedType(tag: DW_TAG_member, name: "addr_list", scope: !8919, file: !8920, line: 166, baseType: !344, size: 128, offset: 64)
!8924 = !DIDerivedType(tag: DW_TAG_member, name: "mc_list", scope: !8919, file: !8920, line: 168, baseType: !8925, size: 64, offset: 192)
!8925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8926, size: 64)
!8926 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifmcaddr6", file: !8920, line: 114, size: 1152, elements: !8927)
!8927 = !{!8928, !8929, !8930, !8931, !8941, !8942, !8943, !8944, !8945, !8946, !8947, !8948, !8949, !8950, !8951}
!8928 = !DIDerivedType(tag: DW_TAG_member, name: "mca_addr", scope: !8926, file: !8920, line: 115, baseType: !2297, size: 128)
!8929 = !DIDerivedType(tag: DW_TAG_member, name: "idev", scope: !8926, file: !8920, line: 116, baseType: !8918, size: 64, offset: 128)
!8930 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !8926, file: !8920, line: 117, baseType: !8925, size: 64, offset: 192)
!8931 = !DIDerivedType(tag: DW_TAG_member, name: "mca_sources", scope: !8926, file: !8920, line: 118, baseType: !8932, size: 64, offset: 256)
!8932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8933, size: 64)
!8933 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ip6_sf_list", file: !8920, line: 99, size: 384, elements: !8934)
!8934 = !{!8935, !8936, !8937, !8938, !8939, !8940}
!8935 = !DIDerivedType(tag: DW_TAG_member, name: "sf_next", scope: !8933, file: !8920, line: 100, baseType: !8932, size: 64)
!8936 = !DIDerivedType(tag: DW_TAG_member, name: "sf_addr", scope: !8933, file: !8920, line: 101, baseType: !2297, size: 128, offset: 64)
!8937 = !DIDerivedType(tag: DW_TAG_member, name: "sf_count", scope: !8933, file: !8920, line: 102, baseType: !8844, size: 128, offset: 192)
!8938 = !DIDerivedType(tag: DW_TAG_member, name: "sf_gsresp", scope: !8933, file: !8920, line: 103, baseType: !549, size: 8, offset: 320)
!8939 = !DIDerivedType(tag: DW_TAG_member, name: "sf_oldin", scope: !8933, file: !8920, line: 104, baseType: !549, size: 8, offset: 328)
!8940 = !DIDerivedType(tag: DW_TAG_member, name: "sf_crcount", scope: !8933, file: !8920, line: 105, baseType: !549, size: 8, offset: 336)
!8941 = !DIDerivedType(tag: DW_TAG_member, name: "mca_tomb", scope: !8926, file: !8920, line: 119, baseType: !8932, size: 64, offset: 320)
!8942 = !DIDerivedType(tag: DW_TAG_member, name: "mca_sfmode", scope: !8926, file: !8920, line: 120, baseType: !7, size: 32, offset: 384)
!8943 = !DIDerivedType(tag: DW_TAG_member, name: "mca_crcount", scope: !8926, file: !8920, line: 121, baseType: !549, size: 8, offset: 416)
!8944 = !DIDerivedType(tag: DW_TAG_member, name: "mca_sfcount", scope: !8926, file: !8920, line: 122, baseType: !8844, size: 128, offset: 448)
!8945 = !DIDerivedType(tag: DW_TAG_member, name: "mca_timer", scope: !8926, file: !8920, line: 123, baseType: !2314, size: 320, offset: 576)
!8946 = !DIDerivedType(tag: DW_TAG_member, name: "mca_flags", scope: !8926, file: !8920, line: 124, baseType: !7, size: 32, offset: 896)
!8947 = !DIDerivedType(tag: DW_TAG_member, name: "mca_users", scope: !8926, file: !8920, line: 125, baseType: !37, size: 32, offset: 928)
!8948 = !DIDerivedType(tag: DW_TAG_member, name: "mca_refcnt", scope: !8926, file: !8920, line: 126, baseType: !1325, size: 32, offset: 960)
!8949 = !DIDerivedType(tag: DW_TAG_member, name: "mca_lock", scope: !8926, file: !8920, line: 127, baseType: !784, offset: 992)
!8950 = !DIDerivedType(tag: DW_TAG_member, name: "mca_cstamp", scope: !8926, file: !8920, line: 128, baseType: !372, size: 64, offset: 1024)
!8951 = !DIDerivedType(tag: DW_TAG_member, name: "mca_tstamp", scope: !8926, file: !8920, line: 129, baseType: !372, size: 64, offset: 1088)
!8952 = !DIDerivedType(tag: DW_TAG_member, name: "mc_tomb", scope: !8919, file: !8920, line: 169, baseType: !8925, size: 64, offset: 256)
!8953 = !DIDerivedType(tag: DW_TAG_member, name: "mc_lock", scope: !8919, file: !8920, line: 170, baseType: !784, offset: 320)
!8954 = !DIDerivedType(tag: DW_TAG_member, name: "mc_qrv", scope: !8919, file: !8920, line: 172, baseType: !549, size: 8, offset: 320)
!8955 = !DIDerivedType(tag: DW_TAG_member, name: "mc_gq_running", scope: !8919, file: !8920, line: 173, baseType: !549, size: 8, offset: 328)
!8956 = !DIDerivedType(tag: DW_TAG_member, name: "mc_ifc_count", scope: !8919, file: !8920, line: 174, baseType: !549, size: 8, offset: 336)
!8957 = !DIDerivedType(tag: DW_TAG_member, name: "mc_dad_count", scope: !8919, file: !8920, line: 175, baseType: !549, size: 8, offset: 344)
!8958 = !DIDerivedType(tag: DW_TAG_member, name: "mc_v1_seen", scope: !8919, file: !8920, line: 177, baseType: !372, size: 64, offset: 384)
!8959 = !DIDerivedType(tag: DW_TAG_member, name: "mc_qi", scope: !8919, file: !8920, line: 178, baseType: !372, size: 64, offset: 448)
!8960 = !DIDerivedType(tag: DW_TAG_member, name: "mc_qri", scope: !8919, file: !8920, line: 179, baseType: !372, size: 64, offset: 512)
!8961 = !DIDerivedType(tag: DW_TAG_member, name: "mc_maxdelay", scope: !8919, file: !8920, line: 180, baseType: !372, size: 64, offset: 576)
!8962 = !DIDerivedType(tag: DW_TAG_member, name: "mc_gq_timer", scope: !8919, file: !8920, line: 182, baseType: !2314, size: 320, offset: 640)
!8963 = !DIDerivedType(tag: DW_TAG_member, name: "mc_ifc_timer", scope: !8919, file: !8920, line: 183, baseType: !2314, size: 320, offset: 960)
!8964 = !DIDerivedType(tag: DW_TAG_member, name: "mc_dad_timer", scope: !8919, file: !8920, line: 184, baseType: !2314, size: 320, offset: 1280)
!8965 = !DIDerivedType(tag: DW_TAG_member, name: "ac_list", scope: !8919, file: !8920, line: 186, baseType: !8966, size: 64, offset: 1600)
!8966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8967, size: 64)
!8967 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ifacaddr6", file: !8920, line: 140, size: 704, elements: !8968)
!8968 = !{!8969, !8970, !8971, !8972, !8973, !8974, !8975, !8976, !8977}
!8969 = !DIDerivedType(tag: DW_TAG_member, name: "aca_addr", scope: !8967, file: !8920, line: 141, baseType: !2297, size: 128)
!8970 = !DIDerivedType(tag: DW_TAG_member, name: "aca_rt", scope: !8967, file: !8920, line: 142, baseType: !2702, size: 64, offset: 128)
!8971 = !DIDerivedType(tag: DW_TAG_member, name: "aca_next", scope: !8967, file: !8920, line: 143, baseType: !8966, size: 64, offset: 192)
!8972 = !DIDerivedType(tag: DW_TAG_member, name: "aca_addr_lst", scope: !8967, file: !8920, line: 144, baseType: !336, size: 128, offset: 256)
!8973 = !DIDerivedType(tag: DW_TAG_member, name: "aca_users", scope: !8967, file: !8920, line: 145, baseType: !37, size: 32, offset: 384)
!8974 = !DIDerivedType(tag: DW_TAG_member, name: "aca_refcnt", scope: !8967, file: !8920, line: 146, baseType: !1325, size: 32, offset: 416)
!8975 = !DIDerivedType(tag: DW_TAG_member, name: "aca_cstamp", scope: !8967, file: !8920, line: 147, baseType: !372, size: 64, offset: 448)
!8976 = !DIDerivedType(tag: DW_TAG_member, name: "aca_tstamp", scope: !8967, file: !8920, line: 148, baseType: !372, size: 64, offset: 512)
!8977 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !8967, file: !8920, line: 149, baseType: !359, size: 128, align: 64, offset: 576)
!8978 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !8919, file: !8920, line: 187, baseType: !2909, offset: 1664)
!8979 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !8919, file: !8920, line: 188, baseType: !1325, size: 32, offset: 1664)
!8980 = !DIDerivedType(tag: DW_TAG_member, name: "if_flags", scope: !8919, file: !8920, line: 189, baseType: !523, size: 32, offset: 1696)
!8981 = !DIDerivedType(tag: DW_TAG_member, name: "dead", scope: !8919, file: !8920, line: 190, baseType: !37, size: 32, offset: 1728)
!8982 = !DIDerivedType(tag: DW_TAG_member, name: "desync_factor", scope: !8919, file: !8920, line: 192, baseType: !762, size: 32, offset: 1760)
!8983 = !DIDerivedType(tag: DW_TAG_member, name: "tempaddr_list", scope: !8919, file: !8920, line: 193, baseType: !344, size: 128, offset: 1792)
!8984 = !DIDerivedType(tag: DW_TAG_member, name: "token", scope: !8919, file: !8920, line: 195, baseType: !2297, size: 128, offset: 1920)
!8985 = !DIDerivedType(tag: DW_TAG_member, name: "nd_parms", scope: !8919, file: !8920, line: 197, baseType: !2946, size: 64, offset: 2048)
!8986 = !DIDerivedType(tag: DW_TAG_member, name: "cnf", scope: !8919, file: !8920, line: 198, baseType: !2646, size: 1600, offset: 2112)
!8987 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !8919, file: !8920, line: 199, baseType: !8988, size: 256, offset: 3712)
!8988 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ipv6_devstat", file: !8920, line: 156, size: 256, elements: !8989)
!8989 = !{!8990, !8991, !8992, !8998}
!8990 = !DIDerivedType(tag: DW_TAG_member, name: "proc_dir_entry", scope: !8988, file: !8920, line: 157, baseType: !2071, size: 64)
!8991 = !DIDerivedType(tag: DW_TAG_member, name: "ipv6", scope: !8988, file: !8920, line: 158, baseType: !2123, size: 64, offset: 64)
!8992 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6dev", scope: !8988, file: !8920, line: 159, baseType: !8993, size: 64, offset: 128)
!8993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8994, size: 64)
!8994 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "icmpv6_mib_device", file: !2118, line: 75, size: 384, elements: !8995)
!8995 = !{!8996}
!8996 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !8994, file: !2118, line: 76, baseType: !8997, size: 384)
!8997 = !DICompositeType(tag: DW_TAG_array_type, baseType: !431, size: 384, elements: !1722)
!8998 = !DIDerivedType(tag: DW_TAG_member, name: "icmpv6msgdev", scope: !8988, file: !8920, line: 160, baseType: !8999, size: 64, offset: 192)
!8999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9000, size: 64)
!9000 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "icmpv6msg_mib_device", file: !2118, line: 85, size: 32768, elements: !9001)
!9001 = !{!9002}
!9002 = !DIDerivedType(tag: DW_TAG_member, name: "mibs", scope: !9000, file: !2118, line: 86, baseType: !2163, size: 32768)
!9003 = !DIDerivedType(tag: DW_TAG_member, name: "rs_timer", scope: !8919, file: !8920, line: 201, baseType: !2314, size: 320, offset: 3968)
!9004 = !DIDerivedType(tag: DW_TAG_member, name: "rs_interval", scope: !8919, file: !8920, line: 202, baseType: !1544, size: 32, offset: 4288)
!9005 = !DIDerivedType(tag: DW_TAG_member, name: "rs_probes", scope: !8919, file: !8920, line: 203, baseType: !1452, size: 8, offset: 4320)
!9006 = !DIDerivedType(tag: DW_TAG_member, name: "tstamp", scope: !8919, file: !8920, line: 205, baseType: !372, size: 64, offset: 4352)
!9007 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !8919, file: !8920, line: 206, baseType: !359, size: 128, align: 64, offset: 4416)
!9008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2297, size: 64)
!9009 = !DIDerivedType(tag: DW_TAG_member, name: "header_ops", scope: !324, file: !36, line: 1933, baseType: !9010, size: 64, offset: 4160)
!9010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9011, size: 64)
!9011 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9012)
!9012 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "header_ops", file: !36, line: 270, size: 384, elements: !9013)
!9013 = !{!9014, !9018, !9024, !9029, !9033, !9037}
!9014 = !DIDerivedType(tag: DW_TAG_member, name: "create", scope: !9012, file: !36, line: 271, baseType: !9015, size: 64)
!9015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9016, size: 64)
!9016 = !DISubroutineType(types: !9017)
!9017 = !{!37, !475, !350, !532, !2337, !2337, !7}
!9018 = !DIDerivedType(tag: DW_TAG_member, name: "parse", scope: !9012, file: !36, line: 274, baseType: !9019, size: 64, offset: 64)
!9019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9020, size: 64)
!9020 = !DISubroutineType(types: !9021)
!9021 = !{!37, !9022, !7532}
!9022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9023, size: 64)
!9023 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !476)
!9024 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !9012, file: !36, line: 275, baseType: !9025, size: 64, offset: 128)
!9025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9026, size: 64)
!9026 = !DISubroutineType(types: !9027)
!9027 = !{!37, !2826, !9028, !544}
!9028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2964, size: 64)
!9029 = !DIDerivedType(tag: DW_TAG_member, name: "cache_update", scope: !9012, file: !36, line: 276, baseType: !9030, size: 64, offset: 192)
!9030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9031, size: 64)
!9031 = !DISubroutineType(types: !9032)
!9032 = !{null, !9028, !2819, !766}
!9033 = !DIDerivedType(tag: DW_TAG_member, name: "validate", scope: !9012, file: !36, line: 279, baseType: !9034, size: 64, offset: 256)
!9034 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9035, size: 64)
!9035 = !DISubroutineType(types: !9036)
!9036 = !{!595, !352, !7}
!9037 = !DIDerivedType(tag: DW_TAG_member, name: "parse_protocol", scope: !9012, file: !36, line: 280, baseType: !9038, size: 64, offset: 320)
!9038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9039, size: 64)
!9039 = !DISubroutineType(types: !9040)
!9040 = !{!544, !9022}
!9041 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !324, file: !36, line: 1935, baseType: !7, size: 32, offset: 4224)
!9042 = !DIDerivedType(tag: DW_TAG_member, name: "priv_flags", scope: !324, file: !36, line: 1936, baseType: !7, size: 32, offset: 4256)
!9043 = !DIDerivedType(tag: DW_TAG_member, name: "gflags", scope: !324, file: !36, line: 1938, baseType: !532, size: 16, offset: 4288)
!9044 = !DIDerivedType(tag: DW_TAG_member, name: "padded", scope: !324, file: !36, line: 1939, baseType: !532, size: 16, offset: 4304)
!9045 = !DIDerivedType(tag: DW_TAG_member, name: "operstate", scope: !324, file: !36, line: 1941, baseType: !549, size: 8, offset: 4320)
!9046 = !DIDerivedType(tag: DW_TAG_member, name: "link_mode", scope: !324, file: !36, line: 1942, baseType: !549, size: 8, offset: 4328)
!9047 = !DIDerivedType(tag: DW_TAG_member, name: "if_port", scope: !324, file: !36, line: 1944, baseType: !549, size: 8, offset: 4336)
!9048 = !DIDerivedType(tag: DW_TAG_member, name: "dma", scope: !324, file: !36, line: 1945, baseType: !549, size: 8, offset: 4344)
!9049 = !DIDerivedType(tag: DW_TAG_member, name: "mtu", scope: !324, file: !36, line: 1952, baseType: !7, size: 32, offset: 4352)
!9050 = !DIDerivedType(tag: DW_TAG_member, name: "min_mtu", scope: !324, file: !36, line: 1953, baseType: !7, size: 32, offset: 4384)
!9051 = !DIDerivedType(tag: DW_TAG_member, name: "max_mtu", scope: !324, file: !36, line: 1954, baseType: !7, size: 32, offset: 4416)
!9052 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !324, file: !36, line: 1955, baseType: !532, size: 16, offset: 4448)
!9053 = !DIDerivedType(tag: DW_TAG_member, name: "hard_header_len", scope: !324, file: !36, line: 1956, baseType: !532, size: 16, offset: 4464)
!9054 = !DIDerivedType(tag: DW_TAG_member, name: "min_header_len", scope: !324, file: !36, line: 1957, baseType: !549, size: 8, offset: 4480)
!9055 = !DIDerivedType(tag: DW_TAG_member, name: "name_assign_type", scope: !324, file: !36, line: 1958, baseType: !549, size: 8, offset: 4488)
!9056 = !DIDerivedType(tag: DW_TAG_member, name: "needed_headroom", scope: !324, file: !36, line: 1960, baseType: !532, size: 16, offset: 4496)
!9057 = !DIDerivedType(tag: DW_TAG_member, name: "needed_tailroom", scope: !324, file: !36, line: 1961, baseType: !532, size: 16, offset: 4512)
!9058 = !DIDerivedType(tag: DW_TAG_member, name: "perm_addr", scope: !324, file: !36, line: 1964, baseType: !770, size: 256, offset: 4528)
!9059 = !DIDerivedType(tag: DW_TAG_member, name: "addr_assign_type", scope: !324, file: !36, line: 1965, baseType: !549, size: 8, offset: 4784)
!9060 = !DIDerivedType(tag: DW_TAG_member, name: "addr_len", scope: !324, file: !36, line: 1966, baseType: !549, size: 8, offset: 4792)
!9061 = !DIDerivedType(tag: DW_TAG_member, name: "upper_level", scope: !324, file: !36, line: 1967, baseType: !549, size: 8, offset: 4800)
!9062 = !DIDerivedType(tag: DW_TAG_member, name: "lower_level", scope: !324, file: !36, line: 1968, baseType: !549, size: 8, offset: 4808)
!9063 = !DIDerivedType(tag: DW_TAG_member, name: "neigh_priv_len", scope: !324, file: !36, line: 1970, baseType: !532, size: 16, offset: 4816)
!9064 = !DIDerivedType(tag: DW_TAG_member, name: "dev_id", scope: !324, file: !36, line: 1971, baseType: !532, size: 16, offset: 4832)
!9065 = !DIDerivedType(tag: DW_TAG_member, name: "dev_port", scope: !324, file: !36, line: 1972, baseType: !532, size: 16, offset: 4848)
!9066 = !DIDerivedType(tag: DW_TAG_member, name: "addr_list_lock", scope: !324, file: !36, line: 1973, baseType: !784, offset: 4864)
!9067 = !DIDerivedType(tag: DW_TAG_member, name: "uc", scope: !324, file: !36, line: 1975, baseType: !9068, size: 192, offset: 4864)
!9068 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_hw_addr_list", file: !36, line: 224, size: 192, elements: !9069)
!9069 = !{!9070, !9071}
!9070 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !9068, file: !36, line: 225, baseType: !344, size: 128)
!9071 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !9068, file: !36, line: 226, baseType: !37, size: 32, offset: 128)
!9072 = !DIDerivedType(tag: DW_TAG_member, name: "mc", scope: !324, file: !36, line: 1976, baseType: !9068, size: 192, offset: 5056)
!9073 = !DIDerivedType(tag: DW_TAG_member, name: "dev_addrs", scope: !324, file: !36, line: 1977, baseType: !9068, size: 192, offset: 5248)
!9074 = !DIDerivedType(tag: DW_TAG_member, name: "queues_kset", scope: !324, file: !36, line: 1980, baseType: !3952, size: 64, offset: 5440)
!9075 = !DIDerivedType(tag: DW_TAG_member, name: "promiscuity", scope: !324, file: !36, line: 1985, baseType: !7, size: 32, offset: 5504)
!9076 = !DIDerivedType(tag: DW_TAG_member, name: "allmulti", scope: !324, file: !36, line: 1986, baseType: !7, size: 32, offset: 5536)
!9077 = !DIDerivedType(tag: DW_TAG_member, name: "uc_promisc", scope: !324, file: !36, line: 1987, baseType: !595, size: 8, offset: 5568)
!9078 = !DIDerivedType(tag: DW_TAG_member, name: "vlan_info", scope: !324, file: !36, line: 1996, baseType: !9079, size: 64, offset: 5632)
!9079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9080, size: 64)
!9080 = !DICompositeType(tag: DW_TAG_structure_type, name: "vlan_info", file: !36, line: 1996, flags: DIFlagFwdDecl)
!9081 = !DIDerivedType(tag: DW_TAG_member, name: "ip_ptr", scope: !324, file: !36, line: 2007, baseType: !9082, size: 64, offset: 5696)
!9082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9083, size: 64)
!9083 = !DICompositeType(tag: DW_TAG_structure_type, name: "in_device", file: !36, line: 2007, flags: DIFlagFwdDecl)
!9084 = !DIDerivedType(tag: DW_TAG_member, name: "ip6_ptr", scope: !324, file: !36, line: 2011, baseType: !8918, size: 64, offset: 5760)
!9085 = !DIDerivedType(tag: DW_TAG_member, name: "ieee80211_ptr", scope: !324, file: !36, line: 2015, baseType: !9086, size: 64, offset: 5824)
!9086 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9087, size: 64)
!9087 = !DICompositeType(tag: DW_TAG_structure_type, name: "wireless_dev", file: !36, line: 62, flags: DIFlagFwdDecl)
!9088 = !DIDerivedType(tag: DW_TAG_member, name: "ieee802154_ptr", scope: !324, file: !36, line: 2016, baseType: !9089, size: 64, offset: 5888)
!9089 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9090, size: 64)
!9090 = !DICompositeType(tag: DW_TAG_structure_type, name: "wpan_dev", file: !36, line: 64, flags: DIFlagFwdDecl)
!9091 = !DIDerivedType(tag: DW_TAG_member, name: "dev_addr", scope: !324, file: !36, line: 2025, baseType: !7532, size: 64, offset: 5952)
!9092 = !DIDerivedType(tag: DW_TAG_member, name: "_rx", scope: !324, file: !36, line: 2027, baseType: !9093, size: 64, offset: 6016)
!9093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9094, size: 64)
!9094 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_rx_queue", file: !36, line: 736, size: 1536, elements: !9095)
!9095 = !{!9096, !9097, !9098}
!9096 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !9094, file: !36, line: 741, baseType: !3944, size: 512)
!9097 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !9094, file: !36, line: 742, baseType: !350, size: 64, offset: 512)
!9098 = !DIDerivedType(tag: DW_TAG_member, name: "xdp_rxq", scope: !9094, file: !36, line: 743, baseType: !9099, size: 512, align: 512, offset: 1024)
!9099 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xdp_rxq_info", file: !8030, line: 57, size: 512, align: 512, elements: !9100)
!9100 = !{!9101, !9102, !9103, !9104}
!9101 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !9099, file: !8030, line: 58, baseType: !350, size: 64)
!9102 = !DIDerivedType(tag: DW_TAG_member, name: "queue_index", scope: !9099, file: !8030, line: 59, baseType: !762, size: 32, offset: 64)
!9103 = !DIDerivedType(tag: DW_TAG_member, name: "reg_state", scope: !9099, file: !8030, line: 60, baseType: !762, size: 32, offset: 96)
!9104 = !DIDerivedType(tag: DW_TAG_member, name: "mem", scope: !9099, file: !8030, line: 61, baseType: !8038, size: 64, offset: 128)
!9105 = !DIDerivedType(tag: DW_TAG_member, name: "num_rx_queues", scope: !324, file: !36, line: 2028, baseType: !7, size: 32, offset: 6080)
!9106 = !DIDerivedType(tag: DW_TAG_member, name: "real_num_rx_queues", scope: !324, file: !36, line: 2029, baseType: !7, size: 32, offset: 6112)
!9107 = !DIDerivedType(tag: DW_TAG_member, name: "xdp_prog", scope: !324, file: !36, line: 2031, baseType: !3046, size: 64, offset: 6144)
!9108 = !DIDerivedType(tag: DW_TAG_member, name: "gro_flush_timeout", scope: !324, file: !36, line: 2032, baseType: !372, size: 64, offset: 6208)
!9109 = !DIDerivedType(tag: DW_TAG_member, name: "napi_defer_hard_irqs", scope: !324, file: !36, line: 2033, baseType: !37, size: 32, offset: 6272)
!9110 = !DIDerivedType(tag: DW_TAG_member, name: "rx_handler", scope: !324, file: !36, line: 2034, baseType: !9111, size: 64, offset: 6336)
!9111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9112, size: 64)
!9112 = !DIDerivedType(tag: DW_TAG_typedef, name: "rx_handler_func_t", file: !36, line: 430, baseType: !9113)
!9113 = !DISubroutineType(types: !9114)
!9114 = !{!9115, !9116}
!9115 = !DIDerivedType(tag: DW_TAG_typedef, name: "rx_handler_result_t", file: !36, line: 429, baseType: !317)
!9116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !475, size: 64)
!9117 = !DIDerivedType(tag: DW_TAG_member, name: "rx_handler_data", scope: !324, file: !36, line: 2035, baseType: !625, size: 64, offset: 6400)
!9118 = !DIDerivedType(tag: DW_TAG_member, name: "ingress_queue", scope: !324, file: !36, line: 2040, baseType: !9119, size: 64, offset: 6464)
!9119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9120, size: 64)
!9120 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_queue", file: !36, line: 584, size: 1600, elements: !9121)
!9121 = !{!9122, !9123, !9501, !9502, !9503, !9504, !9505, !9506, !9507, !9508, !9509, !9510}
!9122 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !9120, file: !36, line: 588, baseType: !350, size: 64)
!9123 = !DIDerivedType(tag: DW_TAG_member, name: "qdisc", scope: !9120, file: !36, line: 589, baseType: !9124, size: 64, offset: 64)
!9124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9125, size: 64)
!9125 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Qdisc", file: !9126, line: 57, size: 2048, elements: !9127)
!9126 = !DIFile(filename: "./include/net/sch_generic.h", directory: "/home/lizy2001/genbc/linux")
!9127 = !{!9128, !9132, !9136, !9137, !9138, !9441, !9461, !9462, !9463, !9464, !9465, !9468, !9478, !9479, !9480, !9481, !9482, !9489, !9490, !9491, !9492, !9493, !9494, !9495, !9496, !9497, !9498, !9499}
!9128 = !DIDerivedType(tag: DW_TAG_member, name: "enqueue", scope: !9125, file: !9126, line: 58, baseType: !9129, size: 64)
!9129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9130, size: 64)
!9130 = !DISubroutineType(types: !9131)
!9131 = !{!37, !475, !9124, !9116}
!9132 = !DIDerivedType(tag: DW_TAG_member, name: "dequeue", scope: !9125, file: !9126, line: 61, baseType: !9133, size: 64, offset: 64)
!9133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9134, size: 64)
!9134 = !DISubroutineType(types: !9135)
!9135 = !{!475, !9124}
!9136 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !9125, file: !9126, line: 62, baseType: !7, size: 32, offset: 128)
!9137 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !9125, file: !9126, line: 82, baseType: !762, size: 32, offset: 160)
!9138 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !9125, file: !9126, line: 83, baseType: !9139, size: 64, offset: 192)
!9139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9140, size: 64)
!9140 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9141)
!9141 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Qdisc_ops", file: !9126, line: 238, size: 1344, elements: !9142)
!9142 = !{!9143, !9145, !9401, !9402, !9403, !9404, !9405, !9406, !9407, !9411, !9415, !9416, !9417, !9418, !9422, !9426, !9430, !9434, !9435, !9439, !9440}
!9143 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !9141, file: !9126, line: 239, baseType: !9144, size: 64)
!9144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9141, size: 64)
!9145 = !DIDerivedType(tag: DW_TAG_member, name: "cl_ops", scope: !9141, file: !9126, line: 240, baseType: !9146, size: 64, offset: 64)
!9146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9147, size: 64)
!9147 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9148)
!9148 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Qdisc_class_ops", file: !9126, line: 198, size: 896, elements: !9149)
!9149 = !{!9150, !9151, !9166, !9171, !9175, !9179, !9183, !9187, !9191, !9197, !9364, !9368, !9369, !9373}
!9150 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !9148, file: !9126, line: 199, baseType: !7, size: 32)
!9151 = !DIDerivedType(tag: DW_TAG_member, name: "select_queue", scope: !9148, file: !9126, line: 201, baseType: !9152, size: 64, offset: 64)
!9152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9153, size: 64)
!9153 = !DISubroutineType(types: !9154)
!9154 = !{!9119, !9124, !9155}
!9155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9156, size: 64)
!9156 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tcmsg", file: !9157, line: 577, size: 160, elements: !9158)
!9157 = !DIFile(filename: "./include/uapi/linux/rtnetlink.h", directory: "/home/lizy2001/genbc/linux")
!9158 = !{!9159, !9160, !9161, !9162, !9163, !9164, !9165}
!9159 = !DIDerivedType(tag: DW_TAG_member, name: "tcm_family", scope: !9156, file: !9157, line: 578, baseType: !549, size: 8)
!9160 = !DIDerivedType(tag: DW_TAG_member, name: "tcm__pad1", scope: !9156, file: !9157, line: 579, baseType: !549, size: 8, offset: 8)
!9161 = !DIDerivedType(tag: DW_TAG_member, name: "tcm__pad2", scope: !9156, file: !9157, line: 580, baseType: !532, size: 16, offset: 16)
!9162 = !DIDerivedType(tag: DW_TAG_member, name: "tcm_ifindex", scope: !9156, file: !9157, line: 581, baseType: !37, size: 32, offset: 32)
!9163 = !DIDerivedType(tag: DW_TAG_member, name: "tcm_handle", scope: !9156, file: !9157, line: 582, baseType: !523, size: 32, offset: 64)
!9164 = !DIDerivedType(tag: DW_TAG_member, name: "tcm_parent", scope: !9156, file: !9157, line: 583, baseType: !523, size: 32, offset: 96)
!9165 = !DIDerivedType(tag: DW_TAG_member, name: "tcm_info", scope: !9156, file: !9157, line: 588, baseType: !523, size: 32, offset: 128)
!9166 = !DIDerivedType(tag: DW_TAG_member, name: "graft", scope: !9148, file: !9126, line: 202, baseType: !9167, size: 64, offset: 128)
!9167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9168, size: 64)
!9168 = !DISubroutineType(types: !9169)
!9169 = !{!37, !9124, !372, !9124, !9170, !2530}
!9170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9124, size: 64)
!9171 = !DIDerivedType(tag: DW_TAG_member, name: "leaf", scope: !9148, file: !9126, line: 205, baseType: !9172, size: 64, offset: 192)
!9172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9173, size: 64)
!9173 = !DISubroutineType(types: !9174)
!9174 = !{!9124, !9124, !372}
!9175 = !DIDerivedType(tag: DW_TAG_member, name: "qlen_notify", scope: !9148, file: !9126, line: 206, baseType: !9176, size: 64, offset: 256)
!9176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9177, size: 64)
!9177 = !DISubroutineType(types: !9178)
!9178 = !{null, !9124, !372}
!9179 = !DIDerivedType(tag: DW_TAG_member, name: "find", scope: !9148, file: !9126, line: 209, baseType: !9180, size: 64, offset: 320)
!9180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9181, size: 64)
!9181 = !DISubroutineType(types: !9182)
!9182 = !{!372, !9124, !762}
!9183 = !DIDerivedType(tag: DW_TAG_member, name: "change", scope: !9148, file: !9126, line: 210, baseType: !9184, size: 64, offset: 384)
!9184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9185, size: 64)
!9185 = !DISubroutineType(types: !9186)
!9186 = !{!37, !9124, !762, !762, !7793, !2513, !2530}
!9187 = !DIDerivedType(tag: DW_TAG_member, name: "delete", scope: !9148, file: !9126, line: 213, baseType: !9188, size: 64, offset: 448)
!9188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9189, size: 64)
!9189 = !DISubroutineType(types: !9190)
!9190 = !{!37, !9124, !372}
!9191 = !DIDerivedType(tag: DW_TAG_member, name: "walk", scope: !9148, file: !9126, line: 214, baseType: !9192, size: 64, offset: 512)
!9192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9193, size: 64)
!9193 = !DISubroutineType(types: !9194)
!9194 = !{null, !9124, !9195}
!9195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9196, size: 64)
!9196 = !DICompositeType(tag: DW_TAG_structure_type, name: "qdisc_walker", file: !9126, line: 24, flags: DIFlagFwdDecl)
!9197 = !DIDerivedType(tag: DW_TAG_member, name: "tcf_block", scope: !9148, file: !9126, line: 217, baseType: !9198, size: 64, offset: 576)
!9198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9199, size: 64)
!9199 = !DISubroutineType(types: !9200)
!9200 = !{!9201, !9124, !372, !2530}
!9201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9202, size: 64)
!9202 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tcf_block", file: !9126, line: 411, size: 9920, elements: !9203)
!9203 = !{!9204, !9205, !9206, !9207, !9208, !9209, !9210, !9211, !9212, !9217, !9218, !9219, !9220, !9221, !9222, !9360, !9361, !9363}
!9204 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !9202, file: !9126, line: 415, baseType: !1008, size: 192)
!9205 = !DIDerivedType(tag: DW_TAG_member, name: "chain_list", scope: !9202, file: !9126, line: 416, baseType: !344, size: 128, offset: 192)
!9206 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !9202, file: !9126, line: 417, baseType: !762, size: 32, offset: 320)
!9207 = !DIDerivedType(tag: DW_TAG_member, name: "classid", scope: !9202, file: !9126, line: 418, baseType: !762, size: 32, offset: 352)
!9208 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !9202, file: !9126, line: 419, baseType: !1325, size: 32, offset: 384)
!9209 = !DIDerivedType(tag: DW_TAG_member, name: "net", scope: !9202, file: !9126, line: 420, baseType: !2049, size: 64, offset: 448)
!9210 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !9202, file: !9126, line: 421, baseType: !9124, size: 64, offset: 512)
!9211 = !DIDerivedType(tag: DW_TAG_member, name: "cb_lock", scope: !9202, file: !9126, line: 422, baseType: !1216, size: 256, offset: 576)
!9212 = !DIDerivedType(tag: DW_TAG_member, name: "flow_block", scope: !9202, file: !9126, line: 423, baseType: !9213, size: 128, offset: 832)
!9213 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "flow_block", file: !9214, line: 430, size: 128, elements: !9215)
!9214 = !DIFile(filename: "./include/net/flow_offload.h", directory: "/home/lizy2001/genbc/linux")
!9215 = !{!9216}
!9216 = !DIDerivedType(tag: DW_TAG_member, name: "cb_list", scope: !9213, file: !9214, line: 431, baseType: !344, size: 128)
!9217 = !DIDerivedType(tag: DW_TAG_member, name: "owner_list", scope: !9202, file: !9126, line: 424, baseType: !344, size: 128, offset: 960)
!9218 = !DIDerivedType(tag: DW_TAG_member, name: "keep_dst", scope: !9202, file: !9126, line: 425, baseType: !595, size: 8, offset: 1088)
!9219 = !DIDerivedType(tag: DW_TAG_member, name: "offloadcnt", scope: !9202, file: !9126, line: 426, baseType: !443, size: 32, offset: 1120)
!9220 = !DIDerivedType(tag: DW_TAG_member, name: "nooffloaddevcnt", scope: !9202, file: !9126, line: 427, baseType: !7, size: 32, offset: 1152)
!9221 = !DIDerivedType(tag: DW_TAG_member, name: "lockeddevcnt", scope: !9202, file: !9126, line: 428, baseType: !7, size: 32, offset: 1184)
!9222 = !DIDerivedType(tag: DW_TAG_member, name: "chain0", scope: !9202, file: !9126, line: 432, baseType: !9223, size: 192, offset: 1216)
!9223 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !9202, file: !9126, line: 429, size: 192, elements: !9224)
!9224 = !{!9225, !9359}
!9225 = !DIDerivedType(tag: DW_TAG_member, name: "chain", scope: !9223, file: !9126, line: 430, baseType: !9226, size: 64)
!9226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9227, size: 64)
!9227 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tcf_chain", file: !9126, line: 395, size: 832, elements: !9228)
!9228 = !{!9229, !9230, !9349, !9350, !9351, !9352, !9353, !9354, !9355, !9356, !9357, !9358}
!9229 = !DIDerivedType(tag: DW_TAG_member, name: "filter_chain_lock", scope: !9227, file: !9126, line: 397, baseType: !1008, size: 192)
!9230 = !DIDerivedType(tag: DW_TAG_member, name: "filter_chain", scope: !9227, file: !9126, line: 398, baseType: !9231, size: 64, offset: 192)
!9231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9232, size: 64)
!9232 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tcf_proto", file: !9126, line: 356, size: 768, elements: !9233)
!9233 = !{!9234, !9235, !9236, !9268, !9269, !9270, !9271, !9343, !9344, !9345, !9346, !9347, !9348}
!9234 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !9232, file: !9126, line: 358, baseType: !9231, size: 64)
!9235 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !9232, file: !9126, line: 359, baseType: !625, size: 64, offset: 64)
!9236 = !DIDerivedType(tag: DW_TAG_member, name: "classify", scope: !9232, file: !9126, line: 362, baseType: !9237, size: 64, offset: 128)
!9237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9238, size: 64)
!9238 = !DISubroutineType(types: !9239)
!9239 = !{!37, !475, !9240, !9242}
!9240 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9241, size: 64)
!9241 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9232)
!9242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9243, size: 64)
!9243 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tcf_result", file: !9126, line: 275, size: 128, elements: !9244)
!9244 = !{!9245}
!9245 = !DIDerivedType(tag: DW_TAG_member, scope: !9243, file: !9126, line: 276, baseType: !9246, size: 128)
!9246 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9243, file: !9126, line: 276, size: 128, elements: !9247)
!9247 = !{!9248, !9253, !9254}
!9248 = !DIDerivedType(tag: DW_TAG_member, scope: !9246, file: !9126, line: 277, baseType: !9249, size: 128)
!9249 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !9246, file: !9126, line: 277, size: 128, elements: !9250)
!9250 = !{!9251, !9252}
!9251 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !9249, file: !9126, line: 278, baseType: !372, size: 64)
!9252 = !DIDerivedType(tag: DW_TAG_member, name: "classid", scope: !9249, file: !9126, line: 279, baseType: !762, size: 32, offset: 64)
!9253 = !DIDerivedType(tag: DW_TAG_member, name: "goto_tp", scope: !9246, file: !9126, line: 281, baseType: !9240, size: 64)
!9254 = !DIDerivedType(tag: DW_TAG_member, scope: !9246, file: !9126, line: 284, baseType: !9255, size: 128)
!9255 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !9246, file: !9126, line: 284, size: 128, elements: !9256)
!9256 = !{!9257, !9258}
!9257 = !DIDerivedType(tag: DW_TAG_member, name: "ingress", scope: !9255, file: !9126, line: 285, baseType: !595, size: 8)
!9258 = !DIDerivedType(tag: DW_TAG_member, name: "qstats", scope: !9255, file: !9126, line: 286, baseType: !9259, size: 64, offset: 64)
!9259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9260, size: 64)
!9260 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gnet_stats_queue", file: !9261, line: 59, size: 160, elements: !9262)
!9261 = !DIFile(filename: "./include/uapi/linux/gen_stats.h", directory: "/home/lizy2001/genbc/linux")
!9262 = !{!9263, !9264, !9265, !9266, !9267}
!9263 = !DIDerivedType(tag: DW_TAG_member, name: "qlen", scope: !9260, file: !9261, line: 60, baseType: !523, size: 32)
!9264 = !DIDerivedType(tag: DW_TAG_member, name: "backlog", scope: !9260, file: !9261, line: 61, baseType: !523, size: 32, offset: 32)
!9265 = !DIDerivedType(tag: DW_TAG_member, name: "drops", scope: !9260, file: !9261, line: 62, baseType: !523, size: 32, offset: 64)
!9266 = !DIDerivedType(tag: DW_TAG_member, name: "requeues", scope: !9260, file: !9261, line: 63, baseType: !523, size: 32, offset: 96)
!9267 = !DIDerivedType(tag: DW_TAG_member, name: "overlimits", scope: !9260, file: !9261, line: 64, baseType: !523, size: 32, offset: 128)
!9268 = !DIDerivedType(tag: DW_TAG_member, name: "protocol", scope: !9232, file: !9126, line: 365, baseType: !544, size: 16, offset: 192)
!9269 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !9232, file: !9126, line: 368, baseType: !762, size: 32, offset: 224)
!9270 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !9232, file: !9126, line: 369, baseType: !625, size: 64, offset: 256)
!9271 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !9232, file: !9126, line: 370, baseType: !9272, size: 64, offset: 320)
!9272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9273, size: 64)
!9273 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9274)
!9274 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tcf_proto_ops", file: !9126, line: 293, size: 1536, elements: !9275)
!9275 = !{!9276, !9277, !9278, !9279, !9283, !9287, !9291, !9295, !9299, !9303, !9307, !9313, !9321, !9322, !9323, !9327, !9331, !9332, !9336, !9337, !9341, !9342}
!9276 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !9274, file: !9126, line: 294, baseType: !344, size: 128)
!9277 = !DIDerivedType(tag: DW_TAG_member, name: "kind", scope: !9274, file: !9126, line: 295, baseType: !327, size: 128, offset: 128)
!9278 = !DIDerivedType(tag: DW_TAG_member, name: "classify", scope: !9274, file: !9126, line: 297, baseType: !9237, size: 64, offset: 256)
!9279 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !9274, file: !9126, line: 300, baseType: !9280, size: 64, offset: 320)
!9280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9281, size: 64)
!9281 = !DISubroutineType(types: !9282)
!9282 = !{!37, !9231}
!9283 = !DIDerivedType(tag: DW_TAG_member, name: "destroy", scope: !9274, file: !9126, line: 301, baseType: !9284, size: 64, offset: 384)
!9284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9285, size: 64)
!9285 = !DISubroutineType(types: !9286)
!9286 = !{null, !9231, !595, !2530}
!9287 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !9274, file: !9126, line: 304, baseType: !9288, size: 64, offset: 448)
!9288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9289, size: 64)
!9289 = !DISubroutineType(types: !9290)
!9290 = !{!625, !9231, !762}
!9291 = !DIDerivedType(tag: DW_TAG_member, name: "put", scope: !9274, file: !9126, line: 305, baseType: !9292, size: 64, offset: 512)
!9292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9293, size: 64)
!9293 = !DISubroutineType(types: !9294)
!9294 = !{null, !9231, !625}
!9295 = !DIDerivedType(tag: DW_TAG_member, name: "change", scope: !9274, file: !9126, line: 306, baseType: !9296, size: 64, offset: 576)
!9296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9297, size: 64)
!9297 = !DISubroutineType(types: !9298)
!9298 = !{!37, !2049, !475, !9231, !372, !762, !7793, !3617, !595, !595, !2530}
!9299 = !DIDerivedType(tag: DW_TAG_member, name: "delete", scope: !9274, file: !9126, line: 311, baseType: !9300, size: 64, offset: 640)
!9300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9301, size: 64)
!9301 = !DISubroutineType(types: !9302)
!9302 = !{!37, !9231, !625, !6844, !595, !2530}
!9303 = !DIDerivedType(tag: DW_TAG_member, name: "delete_empty", scope: !9274, file: !9126, line: 314, baseType: !9304, size: 64, offset: 704)
!9304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9305, size: 64)
!9305 = !DISubroutineType(types: !9306)
!9306 = !{!595, !9231}
!9307 = !DIDerivedType(tag: DW_TAG_member, name: "walk", scope: !9274, file: !9126, line: 315, baseType: !9308, size: 64, offset: 768)
!9308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9309, size: 64)
!9309 = !DISubroutineType(types: !9310)
!9310 = !{null, !9231, !9311, !595}
!9311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9312, size: 64)
!9312 = !DICompositeType(tag: DW_TAG_structure_type, name: "tcf_walker", file: !9126, line: 25, flags: DIFlagFwdDecl)
!9313 = !DIDerivedType(tag: DW_TAG_member, name: "reoffload", scope: !9274, file: !9126, line: 317, baseType: !9314, size: 64, offset: 832)
!9314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9315, size: 64)
!9315 = !DISubroutineType(types: !9316)
!9316 = !{!37, !9231, !595, !9317, !625, !2530}
!9317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9318, size: 64)
!9318 = !DIDerivedType(tag: DW_TAG_typedef, name: "flow_setup_cb_t", file: !9214, line: 450, baseType: !9319)
!9319 = !DISubroutineType(types: !9320)
!9320 = !{!37, !42, !625, !625}
!9321 = !DIDerivedType(tag: DW_TAG_member, name: "hw_add", scope: !9274, file: !9126, line: 320, baseType: !9292, size: 64, offset: 896)
!9322 = !DIDerivedType(tag: DW_TAG_member, name: "hw_del", scope: !9274, file: !9126, line: 322, baseType: !9292, size: 64, offset: 960)
!9323 = !DIDerivedType(tag: DW_TAG_member, name: "bind_class", scope: !9274, file: !9126, line: 324, baseType: !9324, size: 64, offset: 1024)
!9324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9325, size: 64)
!9325 = !DISubroutineType(types: !9326)
!9326 = !{null, !625, !762, !372, !625, !372}
!9327 = !DIDerivedType(tag: DW_TAG_member, name: "tmplt_create", scope: !9274, file: !9126, line: 326, baseType: !9328, size: 64, offset: 1088)
!9328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9329, size: 64)
!9329 = !DISubroutineType(types: !9330)
!9330 = !{!625, !2049, !9226, !7793, !2530}
!9331 = !DIDerivedType(tag: DW_TAG_member, name: "tmplt_destroy", scope: !9274, file: !9126, line: 330, baseType: !3427, size: 64, offset: 1152)
!9332 = !DIDerivedType(tag: DW_TAG_member, name: "dump", scope: !9274, file: !9126, line: 333, baseType: !9333, size: 64, offset: 1216)
!9333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9334, size: 64)
!9334 = !DISubroutineType(types: !9335)
!9335 = !{!37, !2049, !9231, !625, !475, !9155, !595}
!9336 = !DIDerivedType(tag: DW_TAG_member, name: "terse_dump", scope: !9274, file: !9126, line: 336, baseType: !9333, size: 64, offset: 1280)
!9337 = !DIDerivedType(tag: DW_TAG_member, name: "tmplt_dump", scope: !9274, file: !9126, line: 340, baseType: !9338, size: 64, offset: 1344)
!9338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9339, size: 64)
!9339 = !DISubroutineType(types: !9340)
!9340 = !{!37, !475, !2049, !625}
!9341 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !9274, file: !9126, line: 344, baseType: !906, size: 64, offset: 1408)
!9342 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !9274, file: !9126, line: 345, baseType: !37, size: 32, offset: 1472)
!9343 = !DIDerivedType(tag: DW_TAG_member, name: "chain", scope: !9232, file: !9126, line: 371, baseType: !9226, size: 64, offset: 384)
!9344 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !9232, file: !9126, line: 375, baseType: !784, offset: 448)
!9345 = !DIDerivedType(tag: DW_TAG_member, name: "deleting", scope: !9232, file: !9126, line: 376, baseType: !595, size: 8, offset: 448)
!9346 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !9232, file: !9126, line: 377, baseType: !1325, size: 32, offset: 480)
!9347 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !9232, file: !9126, line: 378, baseType: !359, size: 128, align: 64, offset: 512)
!9348 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_ht_node", scope: !9232, file: !9126, line: 379, baseType: !336, size: 128, offset: 640)
!9349 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !9227, file: !9126, line: 399, baseType: !344, size: 128, offset: 256)
!9350 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !9227, file: !9126, line: 400, baseType: !9201, size: 64, offset: 384)
!9351 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !9227, file: !9126, line: 401, baseType: !762, size: 32, offset: 448)
!9352 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !9227, file: !9126, line: 402, baseType: !7, size: 32, offset: 480)
!9353 = !DIDerivedType(tag: DW_TAG_member, name: "action_refcnt", scope: !9227, file: !9126, line: 403, baseType: !7, size: 32, offset: 512)
!9354 = !DIDerivedType(tag: DW_TAG_member, name: "explicitly_created", scope: !9227, file: !9126, line: 404, baseType: !595, size: 8, offset: 544)
!9355 = !DIDerivedType(tag: DW_TAG_member, name: "flushing", scope: !9227, file: !9126, line: 405, baseType: !595, size: 8, offset: 552)
!9356 = !DIDerivedType(tag: DW_TAG_member, name: "tmplt_ops", scope: !9227, file: !9126, line: 406, baseType: !9272, size: 64, offset: 576)
!9357 = !DIDerivedType(tag: DW_TAG_member, name: "tmplt_priv", scope: !9227, file: !9126, line: 407, baseType: !625, size: 64, offset: 640)
!9358 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !9227, file: !9126, line: 408, baseType: !359, size: 128, align: 64, offset: 704)
!9359 = !DIDerivedType(tag: DW_TAG_member, name: "filter_chain_list", scope: !9223, file: !9126, line: 431, baseType: !344, size: 128, offset: 64)
!9360 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !9202, file: !9126, line: 433, baseType: !359, size: 128, align: 64, offset: 1408)
!9361 = !DIDerivedType(tag: DW_TAG_member, name: "proto_destroy_ht", scope: !9202, file: !9126, line: 434, baseType: !9362, size: 8192, offset: 1536)
!9362 = !DICompositeType(tag: DW_TAG_array_type, baseType: !911, size: 8192, elements: !3128)
!9363 = !DIDerivedType(tag: DW_TAG_member, name: "proto_destroy_lock", scope: !9202, file: !9126, line: 435, baseType: !1008, size: 192, offset: 9728)
!9364 = !DIDerivedType(tag: DW_TAG_member, name: "bind_tcf", scope: !9148, file: !9126, line: 220, baseType: !9365, size: 64, offset: 640)
!9365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9366, size: 64)
!9366 = !DISubroutineType(types: !9367)
!9367 = !{!372, !9124, !372, !762}
!9368 = !DIDerivedType(tag: DW_TAG_member, name: "unbind_tcf", scope: !9148, file: !9126, line: 222, baseType: !9176, size: 64, offset: 704)
!9369 = !DIDerivedType(tag: DW_TAG_member, name: "dump", scope: !9148, file: !9126, line: 225, baseType: !9370, size: 64, offset: 768)
!9370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9371, size: 64)
!9371 = !DISubroutineType(types: !9372)
!9372 = !{!37, !9124, !372, !475, !9155}
!9373 = !DIDerivedType(tag: DW_TAG_member, name: "dump_stats", scope: !9148, file: !9126, line: 227, baseType: !9374, size: 64, offset: 832)
!9374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9375, size: 64)
!9375 = !DISubroutineType(types: !9376)
!9376 = !{!37, !9124, !372, !9377}
!9377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9378, size: 64)
!9378 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gnet_dump", file: !9379, line: 23, size: 768, elements: !9380)
!9379 = !DIFile(filename: "./include/net/gen_stats.h", directory: "/home/lizy2001/genbc/linux")
!9380 = !{!9381, !9382, !9383, !9384, !9385, !9386, !9387, !9388, !9389}
!9381 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !9378, file: !9379, line: 24, baseType: !4235, size: 64)
!9382 = !DIDerivedType(tag: DW_TAG_member, name: "skb", scope: !9378, file: !9379, line: 25, baseType: !475, size: 64, offset: 64)
!9383 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !9378, file: !9379, line: 26, baseType: !7794, size: 64, offset: 128)
!9384 = !DIDerivedType(tag: DW_TAG_member, name: "compat_tc_stats", scope: !9378, file: !9379, line: 29, baseType: !37, size: 32, offset: 192)
!9385 = !DIDerivedType(tag: DW_TAG_member, name: "compat_xstats", scope: !9378, file: !9379, line: 30, baseType: !37, size: 32, offset: 224)
!9386 = !DIDerivedType(tag: DW_TAG_member, name: "padattr", scope: !9378, file: !9379, line: 31, baseType: !37, size: 32, offset: 256)
!9387 = !DIDerivedType(tag: DW_TAG_member, name: "xstats", scope: !9378, file: !9379, line: 32, baseType: !625, size: 64, offset: 320)
!9388 = !DIDerivedType(tag: DW_TAG_member, name: "xstats_len", scope: !9378, file: !9379, line: 33, baseType: !37, size: 32, offset: 384)
!9389 = !DIDerivedType(tag: DW_TAG_member, name: "tc_stats", scope: !9378, file: !9379, line: 34, baseType: !9390, size: 320, offset: 448)
!9390 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tc_stats", file: !9391, line: 34, size: 320, elements: !9392)
!9391 = !DIFile(filename: "./include/uapi/linux/pkt_sched.h", directory: "/home/lizy2001/genbc/linux")
!9392 = !{!9393, !9394, !9395, !9396, !9397, !9398, !9399, !9400}
!9393 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !9390, file: !9391, line: 35, baseType: !393, size: 64)
!9394 = !DIDerivedType(tag: DW_TAG_member, name: "packets", scope: !9390, file: !9391, line: 36, baseType: !523, size: 32, offset: 64)
!9395 = !DIDerivedType(tag: DW_TAG_member, name: "drops", scope: !9390, file: !9391, line: 37, baseType: !523, size: 32, offset: 96)
!9396 = !DIDerivedType(tag: DW_TAG_member, name: "overlimits", scope: !9390, file: !9391, line: 38, baseType: !523, size: 32, offset: 128)
!9397 = !DIDerivedType(tag: DW_TAG_member, name: "bps", scope: !9390, file: !9391, line: 40, baseType: !523, size: 32, offset: 160)
!9398 = !DIDerivedType(tag: DW_TAG_member, name: "pps", scope: !9390, file: !9391, line: 41, baseType: !523, size: 32, offset: 192)
!9399 = !DIDerivedType(tag: DW_TAG_member, name: "qlen", scope: !9390, file: !9391, line: 42, baseType: !523, size: 32, offset: 224)
!9400 = !DIDerivedType(tag: DW_TAG_member, name: "backlog", scope: !9390, file: !9391, line: 43, baseType: !523, size: 32, offset: 256)
!9401 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !9141, file: !9126, line: 241, baseType: !327, size: 128, offset: 128)
!9402 = !DIDerivedType(tag: DW_TAG_member, name: "priv_size", scope: !9141, file: !9126, line: 242, baseType: !37, size: 32, offset: 256)
!9403 = !DIDerivedType(tag: DW_TAG_member, name: "static_flags", scope: !9141, file: !9126, line: 243, baseType: !7, size: 32, offset: 288)
!9404 = !DIDerivedType(tag: DW_TAG_member, name: "enqueue", scope: !9141, file: !9126, line: 245, baseType: !9129, size: 64, offset: 320)
!9405 = !DIDerivedType(tag: DW_TAG_member, name: "dequeue", scope: !9141, file: !9126, line: 248, baseType: !9133, size: 64, offset: 384)
!9406 = !DIDerivedType(tag: DW_TAG_member, name: "peek", scope: !9141, file: !9126, line: 249, baseType: !9133, size: 64, offset: 448)
!9407 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !9141, file: !9126, line: 251, baseType: !9408, size: 64, offset: 512)
!9408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9409, size: 64)
!9409 = !DISubroutineType(types: !9410)
!9410 = !{!37, !9124, !7794, !2530}
!9411 = !DIDerivedType(tag: DW_TAG_member, name: "reset", scope: !9141, file: !9126, line: 253, baseType: !9412, size: 64, offset: 576)
!9412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9413, size: 64)
!9413 = !DISubroutineType(types: !9414)
!9414 = !{null, !9124}
!9415 = !DIDerivedType(tag: DW_TAG_member, name: "destroy", scope: !9141, file: !9126, line: 254, baseType: !9412, size: 64, offset: 640)
!9416 = !DIDerivedType(tag: DW_TAG_member, name: "change", scope: !9141, file: !9126, line: 255, baseType: !9408, size: 64, offset: 704)
!9417 = !DIDerivedType(tag: DW_TAG_member, name: "attach", scope: !9141, file: !9126, line: 258, baseType: !9412, size: 64, offset: 768)
!9418 = !DIDerivedType(tag: DW_TAG_member, name: "change_tx_queue_len", scope: !9141, file: !9126, line: 259, baseType: !9419, size: 64, offset: 832)
!9419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9420, size: 64)
!9420 = !DISubroutineType(types: !9421)
!9421 = !{!37, !9124, !7}
!9422 = !DIDerivedType(tag: DW_TAG_member, name: "dump", scope: !9141, file: !9126, line: 261, baseType: !9423, size: 64, offset: 896)
!9423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9424, size: 64)
!9424 = !DISubroutineType(types: !9425)
!9425 = !{!37, !9124, !475}
!9426 = !DIDerivedType(tag: DW_TAG_member, name: "dump_stats", scope: !9141, file: !9126, line: 262, baseType: !9427, size: 64, offset: 960)
!9427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9428, size: 64)
!9428 = !DISubroutineType(types: !9429)
!9429 = !{!37, !9124, !9377}
!9430 = !DIDerivedType(tag: DW_TAG_member, name: "ingress_block_set", scope: !9141, file: !9126, line: 264, baseType: !9431, size: 64, offset: 1024)
!9431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9432, size: 64)
!9432 = !DISubroutineType(types: !9433)
!9433 = !{null, !9124, !762}
!9434 = !DIDerivedType(tag: DW_TAG_member, name: "egress_block_set", scope: !9141, file: !9126, line: 266, baseType: !9431, size: 64, offset: 1088)
!9435 = !DIDerivedType(tag: DW_TAG_member, name: "ingress_block_get", scope: !9141, file: !9126, line: 268, baseType: !9436, size: 64, offset: 1152)
!9436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9437, size: 64)
!9437 = !DISubroutineType(types: !9438)
!9438 = !{!762, !9124}
!9439 = !DIDerivedType(tag: DW_TAG_member, name: "egress_block_get", scope: !9141, file: !9126, line: 269, baseType: !9436, size: 64, offset: 1216)
!9440 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !9141, file: !9126, line: 271, baseType: !906, size: 64, offset: 1280)
!9441 = !DIDerivedType(tag: DW_TAG_member, name: "stab", scope: !9125, file: !9126, line: 84, baseType: !9442, size: 64, offset: 256)
!9442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9443, size: 64)
!9443 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qdisc_size_table", file: !9126, line: 41, size: 512, elements: !9444)
!9444 = !{!9445, !9446, !9447, !9458, !9459}
!9445 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !9443, file: !9126, line: 42, baseType: !359, size: 128, align: 64)
!9446 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !9443, file: !9126, line: 43, baseType: !344, size: 128, offset: 128)
!9447 = !DIDerivedType(tag: DW_TAG_member, name: "szopts", scope: !9443, file: !9126, line: 44, baseType: !9448, size: 192, offset: 256)
!9448 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tc_sizespec", file: !9391, line: 102, size: 192, elements: !9449)
!9449 = !{!9450, !9451, !9452, !9453, !9454, !9455, !9456, !9457}
!9450 = !DIDerivedType(tag: DW_TAG_member, name: "cell_log", scope: !9448, file: !9391, line: 103, baseType: !549, size: 8)
!9451 = !DIDerivedType(tag: DW_TAG_member, name: "size_log", scope: !9448, file: !9391, line: 104, baseType: !549, size: 8, offset: 8)
!9452 = !DIDerivedType(tag: DW_TAG_member, name: "cell_align", scope: !9448, file: !9391, line: 105, baseType: !1300, size: 16, offset: 16)
!9453 = !DIDerivedType(tag: DW_TAG_member, name: "overhead", scope: !9448, file: !9391, line: 106, baseType: !37, size: 32, offset: 32)
!9454 = !DIDerivedType(tag: DW_TAG_member, name: "linklayer", scope: !9448, file: !9391, line: 107, baseType: !7, size: 32, offset: 64)
!9455 = !DIDerivedType(tag: DW_TAG_member, name: "mpu", scope: !9448, file: !9391, line: 108, baseType: !7, size: 32, offset: 96)
!9456 = !DIDerivedType(tag: DW_TAG_member, name: "mtu", scope: !9448, file: !9391, line: 109, baseType: !7, size: 32, offset: 128)
!9457 = !DIDerivedType(tag: DW_TAG_member, name: "tsize", scope: !9448, file: !9391, line: 110, baseType: !7, size: 32, offset: 160)
!9458 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !9443, file: !9126, line: 45, baseType: !37, size: 32, offset: 448)
!9459 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !9443, file: !9126, line: 46, baseType: !9460, offset: 480)
!9460 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1092, elements: !369)
!9461 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !9125, file: !9126, line: 85, baseType: !336, size: 128, offset: 320)
!9462 = !DIDerivedType(tag: DW_TAG_member, name: "handle", scope: !9125, file: !9126, line: 86, baseType: !762, size: 32, offset: 448)
!9463 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !9125, file: !9126, line: 87, baseType: !762, size: 32, offset: 480)
!9464 = !DIDerivedType(tag: DW_TAG_member, name: "dev_queue", scope: !9125, file: !9126, line: 89, baseType: !9119, size: 64, offset: 512)
!9465 = !DIDerivedType(tag: DW_TAG_member, name: "rate_est", scope: !9125, file: !9126, line: 91, baseType: !9466, size: 64, offset: 576)
!9466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9467, size: 64)
!9467 = !DICompositeType(tag: DW_TAG_structure_type, name: "net_rate_estimator", file: !9379, line: 21, flags: DIFlagFwdDecl)
!9468 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_bstats", scope: !9125, file: !9126, line: 92, baseType: !9469, size: 64, offset: 640)
!9469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9470, size: 64)
!9470 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gnet_stats_basic_cpu", file: !9379, line: 16, size: 128, align: 128, elements: !9471)
!9471 = !{!9472, !9477}
!9472 = !DIDerivedType(tag: DW_TAG_member, name: "bstats", scope: !9470, file: !9379, line: 17, baseType: !9473, size: 128)
!9473 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gnet_stats_basic_packed", file: !9379, line: 11, size: 128, elements: !9474)
!9474 = !{!9475, !9476}
!9475 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !9473, file: !9379, line: 12, baseType: !393, size: 64)
!9476 = !DIDerivedType(tag: DW_TAG_member, name: "packets", scope: !9473, file: !9379, line: 13, baseType: !393, size: 64, offset: 64)
!9477 = !DIDerivedType(tag: DW_TAG_member, name: "syncp", scope: !9470, file: !9379, line: 18, baseType: !2131, offset: 128)
!9478 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_qstats", scope: !9125, file: !9126, line: 93, baseType: !9259, size: 64, offset: 704)
!9479 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !9125, file: !9126, line: 94, baseType: !37, size: 32, offset: 768)
!9480 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !9125, file: !9126, line: 95, baseType: !1325, size: 32, offset: 800)
!9481 = !DIDerivedType(tag: DW_TAG_member, name: "gso_skb", scope: !9125, file: !9126, line: 100, baseType: !2899, size: 192, offset: 832)
!9482 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !9125, file: !9126, line: 101, baseType: !9483, size: 192, offset: 1024)
!9483 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qdisc_skb_head", file: !9126, line: 50, size: 192, elements: !9484)
!9484 = !{!9485, !9486, !9487, !9488}
!9485 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !9483, file: !9126, line: 51, baseType: !475, size: 64)
!9486 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !9483, file: !9126, line: 52, baseType: !475, size: 64, offset: 64)
!9487 = !DIDerivedType(tag: DW_TAG_member, name: "qlen", scope: !9483, file: !9126, line: 53, baseType: !523, size: 32, offset: 128)
!9488 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !9483, file: !9126, line: 54, baseType: !784, offset: 160)
!9489 = !DIDerivedType(tag: DW_TAG_member, name: "bstats", scope: !9125, file: !9126, line: 102, baseType: !9473, size: 128, offset: 1216)
!9490 = !DIDerivedType(tag: DW_TAG_member, name: "running", scope: !9125, file: !9126, line: 103, baseType: !739, size: 32, offset: 1344)
!9491 = !DIDerivedType(tag: DW_TAG_member, name: "qstats", scope: !9125, file: !9126, line: 104, baseType: !9260, size: 160, offset: 1376)
!9492 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !9125, file: !9126, line: 105, baseType: !372, size: 64, offset: 1536)
!9493 = !DIDerivedType(tag: DW_TAG_member, name: "next_sched", scope: !9125, file: !9126, line: 106, baseType: !9124, size: 64, offset: 1600)
!9494 = !DIDerivedType(tag: DW_TAG_member, name: "skb_bad_txq", scope: !9125, file: !9126, line: 107, baseType: !2899, size: 192, offset: 1664)
!9495 = !DIDerivedType(tag: DW_TAG_member, name: "busylock", scope: !9125, file: !9126, line: 109, baseType: !784, offset: 1856)
!9496 = !DIDerivedType(tag: DW_TAG_member, name: "seqlock", scope: !9125, file: !9126, line: 110, baseType: !784, offset: 1856)
!9497 = !DIDerivedType(tag: DW_TAG_member, name: "empty", scope: !9125, file: !9126, line: 113, baseType: !595, size: 8, offset: 1856)
!9498 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !9125, file: !9126, line: 114, baseType: !359, size: 128, align: 64, offset: 1920)
!9499 = !DIDerivedType(tag: DW_TAG_member, name: "privdata", scope: !9125, file: !9126, line: 117, baseType: !9500, align: 512, offset: 2048)
!9500 = !DICompositeType(tag: DW_TAG_array_type, baseType: !568, elements: !369)
!9501 = !DIDerivedType(tag: DW_TAG_member, name: "qdisc_sleeping", scope: !9120, file: !36, line: 590, baseType: !9124, size: 64, offset: 128)
!9502 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !9120, file: !36, line: 592, baseType: !3944, size: 512, offset: 192)
!9503 = !DIDerivedType(tag: DW_TAG_member, name: "tx_maxrate", scope: !9120, file: !36, line: 597, baseType: !372, size: 64, offset: 704)
!9504 = !DIDerivedType(tag: DW_TAG_member, name: "trans_timeout", scope: !9120, file: !36, line: 602, baseType: !372, size: 64, offset: 768)
!9505 = !DIDerivedType(tag: DW_TAG_member, name: "sb_dev", scope: !9120, file: !36, line: 605, baseType: !350, size: 64, offset: 832)
!9506 = !DIDerivedType(tag: DW_TAG_member, name: "_xmit_lock", scope: !9120, file: !36, line: 612, baseType: !784, offset: 896)
!9507 = !DIDerivedType(tag: DW_TAG_member, name: "xmit_lock_owner", scope: !9120, file: !36, line: 613, baseType: !37, size: 32, offset: 896)
!9508 = !DIDerivedType(tag: DW_TAG_member, name: "trans_start", scope: !9120, file: !36, line: 617, baseType: !372, size: 64, offset: 960)
!9509 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !9120, file: !36, line: 619, baseType: !372, size: 64, offset: 1024)
!9510 = !DIDerivedType(tag: DW_TAG_member, name: "dql", scope: !9120, file: !36, line: 622, baseType: !9511, size: 512, offset: 1088)
!9511 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dql", file: !9512, line: 43, size: 512, elements: !9513)
!9512 = !DIFile(filename: "./include/linux/dynamic_queue_limits.h", directory: "/home/lizy2001/genbc/linux")
!9513 = !{!9514, !9515, !9516, !9517, !9518, !9519, !9520, !9521, !9522, !9523, !9524, !9525, !9526}
!9514 = !DIDerivedType(tag: DW_TAG_member, name: "num_queued", scope: !9511, file: !9512, line: 45, baseType: !7, size: 32)
!9515 = !DIDerivedType(tag: DW_TAG_member, name: "adj_limit", scope: !9511, file: !9512, line: 46, baseType: !7, size: 32, offset: 32)
!9516 = !DIDerivedType(tag: DW_TAG_member, name: "last_obj_cnt", scope: !9511, file: !9512, line: 47, baseType: !7, size: 32, offset: 64)
!9517 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !9511, file: !9512, line: 51, baseType: !7, size: 32, offset: 96)
!9518 = !DIDerivedType(tag: DW_TAG_member, name: "num_completed", scope: !9511, file: !9512, line: 52, baseType: !7, size: 32, offset: 128)
!9519 = !DIDerivedType(tag: DW_TAG_member, name: "prev_ovlimit", scope: !9511, file: !9512, line: 54, baseType: !7, size: 32, offset: 160)
!9520 = !DIDerivedType(tag: DW_TAG_member, name: "prev_num_queued", scope: !9511, file: !9512, line: 55, baseType: !7, size: 32, offset: 192)
!9521 = !DIDerivedType(tag: DW_TAG_member, name: "prev_last_obj_cnt", scope: !9511, file: !9512, line: 56, baseType: !7, size: 32, offset: 224)
!9522 = !DIDerivedType(tag: DW_TAG_member, name: "lowest_slack", scope: !9511, file: !9512, line: 58, baseType: !7, size: 32, offset: 256)
!9523 = !DIDerivedType(tag: DW_TAG_member, name: "slack_start_time", scope: !9511, file: !9512, line: 59, baseType: !372, size: 64, offset: 320)
!9524 = !DIDerivedType(tag: DW_TAG_member, name: "max_limit", scope: !9511, file: !9512, line: 62, baseType: !7, size: 32, offset: 384)
!9525 = !DIDerivedType(tag: DW_TAG_member, name: "min_limit", scope: !9511, file: !9512, line: 63, baseType: !7, size: 32, offset: 416)
!9526 = !DIDerivedType(tag: DW_TAG_member, name: "slack_hold_time", scope: !9511, file: !9512, line: 64, baseType: !7, size: 32, offset: 448)
!9527 = !DIDerivedType(tag: DW_TAG_member, name: "broadcast", scope: !324, file: !36, line: 2045, baseType: !770, size: 256, offset: 6528)
!9528 = !DIDerivedType(tag: DW_TAG_member, name: "index_hlist", scope: !324, file: !36, line: 2049, baseType: !336, size: 128, offset: 6784)
!9529 = !DIDerivedType(tag: DW_TAG_member, name: "_tx", scope: !324, file: !36, line: 2054, baseType: !9119, size: 64, offset: 6912)
!9530 = !DIDerivedType(tag: DW_TAG_member, name: "num_tx_queues", scope: !324, file: !36, line: 2055, baseType: !7, size: 32, offset: 6976)
!9531 = !DIDerivedType(tag: DW_TAG_member, name: "real_num_tx_queues", scope: !324, file: !36, line: 2056, baseType: !7, size: 32, offset: 7008)
!9532 = !DIDerivedType(tag: DW_TAG_member, name: "qdisc", scope: !324, file: !36, line: 2057, baseType: !9124, size: 64, offset: 7040)
!9533 = !DIDerivedType(tag: DW_TAG_member, name: "tx_queue_len", scope: !324, file: !36, line: 2058, baseType: !7, size: 32, offset: 7104)
!9534 = !DIDerivedType(tag: DW_TAG_member, name: "tx_global_lock", scope: !324, file: !36, line: 2059, baseType: !784, offset: 7136)
!9535 = !DIDerivedType(tag: DW_TAG_member, name: "xdp_bulkq", scope: !324, file: !36, line: 2061, baseType: !9536, size: 64, offset: 7168)
!9536 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9537, size: 64)
!9537 = !DICompositeType(tag: DW_TAG_structure_type, name: "xdp_dev_bulk_queue", file: !36, line: 879, flags: DIFlagFwdDecl)
!9538 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_timer", scope: !324, file: !36, line: 2075, baseType: !2314, size: 320, offset: 7232)
!9539 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_timeo", scope: !324, file: !36, line: 2076, baseType: !37, size: 32, offset: 7552)
!9540 = !DIDerivedType(tag: DW_TAG_member, name: "proto_down_reason", scope: !324, file: !36, line: 2078, baseType: !762, size: 32, offset: 7584)
!9541 = !DIDerivedType(tag: DW_TAG_member, name: "todo_list", scope: !324, file: !36, line: 2080, baseType: !344, size: 128, offset: 7616)
!9542 = !DIDerivedType(tag: DW_TAG_member, name: "pcpu_refcnt", scope: !324, file: !36, line: 2081, baseType: !594, size: 64, offset: 7744)
!9543 = !DIDerivedType(tag: DW_TAG_member, name: "link_watch_list", scope: !324, file: !36, line: 2083, baseType: !344, size: 128, offset: 7808)
!9544 = !DIDerivedType(tag: DW_TAG_member, name: "reg_state", scope: !324, file: !36, line: 2091, baseType: !323, size: 8, offset: 7936, flags: DIFlagBitField, extraData: i64 7936)
!9545 = !DIDerivedType(tag: DW_TAG_member, name: "dismantle", scope: !324, file: !36, line: 2093, baseType: !595, size: 8, offset: 7944)
!9546 = !DIDerivedType(tag: DW_TAG_member, name: "rtnl_link_state", scope: !324, file: !36, line: 2098, baseType: !9547, size: 16, offset: 7952, flags: DIFlagBitField, extraData: i64 7952)
!9547 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !324, file: !36, line: 2095, baseType: !7, size: 32, elements: !9548)
!9548 = !{!9549, !9550}
!9549 = !DIEnumerator(name: "RTNL_LINK_INITIALIZED", value: 0, isUnsigned: true)
!9550 = !DIEnumerator(name: "RTNL_LINK_INITIALIZING", value: 1, isUnsigned: true)
!9551 = !DIDerivedType(tag: DW_TAG_member, name: "needs_free_netdev", scope: !324, file: !36, line: 2100, baseType: !595, size: 8, offset: 7968)
!9552 = !DIDerivedType(tag: DW_TAG_member, name: "priv_destructor", scope: !324, file: !36, line: 2101, baseType: !465, size: 64, offset: 8000)
!9553 = !DIDerivedType(tag: DW_TAG_member, name: "nd_net", scope: !324, file: !36, line: 2107, baseType: !2841, size: 64, offset: 8064)
!9554 = !DIDerivedType(tag: DW_TAG_member, scope: !324, file: !36, line: 2110, baseType: !9555, size: 64, offset: 8128)
!9555 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !324, file: !36, line: 2110, size: 64, elements: !9556)
!9556 = !{!9557, !9558, !9579, !9588}
!9557 = !DIDerivedType(tag: DW_TAG_member, name: "ml_priv", scope: !9555, file: !36, line: 2111, baseType: !625, size: 64)
!9558 = !DIDerivedType(tag: DW_TAG_member, name: "lstats", scope: !9555, file: !36, line: 2112, baseType: !9559, size: 64)
!9559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9560, size: 64)
!9560 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pcpu_lstats", file: !36, line: 2542, size: 128, align: 128, elements: !9561)
!9561 = !{!9562, !9577, !9578}
!9562 = !DIDerivedType(tag: DW_TAG_member, name: "packets", scope: !9560, file: !36, line: 2543, baseType: !9563, size: 64)
!9563 = !DIDerivedType(tag: DW_TAG_typedef, name: "u64_stats_t", file: !2132, line: 79, baseType: !9564)
!9564 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2132, line: 77, size: 64, elements: !9565)
!9565 = !{!9566}
!9566 = !DIDerivedType(tag: DW_TAG_member, name: "v", scope: !9564, file: !2132, line: 78, baseType: !9567, size: 64)
!9567 = !DIDerivedType(tag: DW_TAG_typedef, name: "local64_t", file: !9568, line: 26, baseType: !9569)
!9568 = !DIFile(filename: "./include/asm-generic/local64.h", directory: "/home/lizy2001/genbc/linux")
!9569 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !9568, line: 24, size: 64, elements: !9570)
!9570 = !{!9571}
!9571 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !9569, file: !9568, line: 25, baseType: !9572, size: 64)
!9572 = !DIDerivedType(tag: DW_TAG_typedef, name: "local_t", file: !9573, line: 12, baseType: !9574)
!9573 = !DIFile(filename: "./arch/x86/include/asm/local.h", directory: "/home/lizy2001/genbc/linux")
!9574 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !9573, line: 10, size: 64, elements: !9575)
!9575 = !{!9576}
!9576 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !9574, file: !9573, line: 11, baseType: !431, size: 64)
!9577 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !9560, file: !36, line: 2544, baseType: !9563, size: 64, offset: 64)
!9578 = !DIDerivedType(tag: DW_TAG_member, name: "syncp", scope: !9560, file: !36, line: 2545, baseType: !2131, offset: 128)
!9579 = !DIDerivedType(tag: DW_TAG_member, name: "tstats", scope: !9555, file: !36, line: 2113, baseType: !9580, size: 64)
!9580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9581, size: 64)
!9581 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pcpu_sw_netstats", file: !36, line: 2534, size: 256, align: 256, elements: !9582)
!9582 = !{!9583, !9584, !9585, !9586, !9587}
!9583 = !DIDerivedType(tag: DW_TAG_member, name: "rx_packets", scope: !9581, file: !36, line: 2535, baseType: !391, size: 64)
!9584 = !DIDerivedType(tag: DW_TAG_member, name: "rx_bytes", scope: !9581, file: !36, line: 2536, baseType: !391, size: 64, offset: 64)
!9585 = !DIDerivedType(tag: DW_TAG_member, name: "tx_packets", scope: !9581, file: !36, line: 2537, baseType: !391, size: 64, offset: 128)
!9586 = !DIDerivedType(tag: DW_TAG_member, name: "tx_bytes", scope: !9581, file: !36, line: 2538, baseType: !391, size: 64, offset: 192)
!9587 = !DIDerivedType(tag: DW_TAG_member, name: "syncp", scope: !9581, file: !36, line: 2539, baseType: !2131, offset: 256)
!9588 = !DIDerivedType(tag: DW_TAG_member, name: "dstats", scope: !9555, file: !36, line: 2114, baseType: !9589, size: 64)
!9589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9590, size: 64)
!9590 = !DICompositeType(tag: DW_TAG_structure_type, name: "pcpu_dstats", file: !36, line: 2114, flags: DIFlagFwdDecl)
!9591 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !324, file: !36, line: 2124, baseType: !3940, size: 5568, offset: 8192)
!9592 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_groups", scope: !324, file: !36, line: 2125, baseType: !9593, size: 256, offset: 13760)
!9593 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4022, size: 256, elements: !1256)
!9594 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_rx_queue_group", scope: !324, file: !36, line: 2126, baseType: !4022, size: 64, offset: 14016)
!9595 = !DIDerivedType(tag: DW_TAG_member, name: "rtnl_link_ops", scope: !324, file: !36, line: 2128, baseType: !9596, size: 64, offset: 14080)
!9596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9597, size: 64)
!9597 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9598)
!9598 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtnl_link_ops", file: !9599, line: 59, size: 1600, elements: !9600)
!9599 = !DIFile(filename: "./include/net/rtnetlink.h", directory: "/home/lizy2001/genbc/linux")
!9600 = !{!9601, !9602, !9603, !9604, !9605, !9606, !9607, !9611, !9615, !9619, !9623, !9627, !9631, !9632, !9633, !9637, !9638, !9639, !9640, !9644, !9648, !9652, !9656, !9660}
!9601 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !9598, file: !9599, line: 60, baseType: !344, size: 128)
!9602 = !DIDerivedType(tag: DW_TAG_member, name: "kind", scope: !9598, file: !9599, line: 62, baseType: !352, size: 64, offset: 128)
!9603 = !DIDerivedType(tag: DW_TAG_member, name: "priv_size", scope: !9598, file: !9599, line: 64, baseType: !649, size: 64, offset: 192)
!9604 = !DIDerivedType(tag: DW_TAG_member, name: "setup", scope: !9598, file: !9599, line: 65, baseType: !465, size: 64, offset: 256)
!9605 = !DIDerivedType(tag: DW_TAG_member, name: "maxtype", scope: !9598, file: !9599, line: 67, baseType: !7, size: 32, offset: 320)
!9606 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !9598, file: !9599, line: 68, baseType: !2544, size: 64, offset: 384)
!9607 = !DIDerivedType(tag: DW_TAG_member, name: "validate", scope: !9598, file: !9599, line: 69, baseType: !9608, size: 64, offset: 448)
!9608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9609, size: 64)
!9609 = !DISubroutineType(types: !9610)
!9610 = !{!37, !7793, !7793, !2530}
!9611 = !DIDerivedType(tag: DW_TAG_member, name: "newlink", scope: !9598, file: !9599, line: 73, baseType: !9612, size: 64, offset: 512)
!9612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9613, size: 64)
!9613 = !DISubroutineType(types: !9614)
!9614 = !{!37, !2049, !350, !7793, !7793, !2530}
!9615 = !DIDerivedType(tag: DW_TAG_member, name: "changelink", scope: !9598, file: !9599, line: 78, baseType: !9616, size: 64, offset: 576)
!9616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9617, size: 64)
!9617 = !DISubroutineType(types: !9618)
!9618 = !{!37, !350, !7793, !7793, !2530}
!9619 = !DIDerivedType(tag: DW_TAG_member, name: "dellink", scope: !9598, file: !9599, line: 82, baseType: !9620, size: 64, offset: 640)
!9620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9621, size: 64)
!9621 = !DISubroutineType(types: !9622)
!9622 = !{null, !350, !347}
!9623 = !DIDerivedType(tag: DW_TAG_member, name: "get_size", scope: !9598, file: !9599, line: 85, baseType: !9624, size: 64, offset: 704)
!9624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9625, size: 64)
!9625 = !DISubroutineType(types: !9626)
!9626 = !{!649, !2819}
!9627 = !DIDerivedType(tag: DW_TAG_member, name: "fill_info", scope: !9598, file: !9599, line: 86, baseType: !9628, size: 64, offset: 768)
!9628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9629, size: 64)
!9629 = !DISubroutineType(types: !9630)
!9630 = !{!37, !475, !2819}
!9631 = !DIDerivedType(tag: DW_TAG_member, name: "get_xstats_size", scope: !9598, file: !9599, line: 89, baseType: !9624, size: 64, offset: 832)
!9632 = !DIDerivedType(tag: DW_TAG_member, name: "fill_xstats", scope: !9598, file: !9599, line: 90, baseType: !9628, size: 64, offset: 896)
!9633 = !DIDerivedType(tag: DW_TAG_member, name: "get_num_tx_queues", scope: !9598, file: !9599, line: 92, baseType: !9634, size: 64, offset: 960)
!9634 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9635, size: 64)
!9635 = !DISubroutineType(types: !9636)
!9636 = !{!7}
!9637 = !DIDerivedType(tag: DW_TAG_member, name: "get_num_rx_queues", scope: !9598, file: !9599, line: 93, baseType: !9634, size: 64, offset: 1024)
!9638 = !DIDerivedType(tag: DW_TAG_member, name: "slave_maxtype", scope: !9598, file: !9599, line: 95, baseType: !7, size: 32, offset: 1088)
!9639 = !DIDerivedType(tag: DW_TAG_member, name: "slave_policy", scope: !9598, file: !9599, line: 96, baseType: !2544, size: 64, offset: 1152)
!9640 = !DIDerivedType(tag: DW_TAG_member, name: "slave_changelink", scope: !9598, file: !9599, line: 97, baseType: !9641, size: 64, offset: 1216)
!9641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9642, size: 64)
!9642 = !DISubroutineType(types: !9643)
!9643 = !{!37, !350, !350, !7793, !7793, !2530}
!9644 = !DIDerivedType(tag: DW_TAG_member, name: "get_slave_size", scope: !9598, file: !9599, line: 102, baseType: !9645, size: 64, offset: 1280)
!9645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9646, size: 64)
!9646 = !DISubroutineType(types: !9647)
!9647 = !{!649, !2819, !2819}
!9648 = !DIDerivedType(tag: DW_TAG_member, name: "fill_slave_info", scope: !9598, file: !9599, line: 104, baseType: !9649, size: 64, offset: 1344)
!9649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9650, size: 64)
!9650 = !DISubroutineType(types: !9651)
!9651 = !{!37, !475, !2819, !2819}
!9652 = !DIDerivedType(tag: DW_TAG_member, name: "get_link_net", scope: !9598, file: !9599, line: 107, baseType: !9653, size: 64, offset: 1408)
!9653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9654, size: 64)
!9654 = !DISubroutineType(types: !9655)
!9655 = !{!2049, !2819}
!9656 = !DIDerivedType(tag: DW_TAG_member, name: "get_linkxstats_size", scope: !9598, file: !9599, line: 108, baseType: !9657, size: 64, offset: 1472)
!9657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9658, size: 64)
!9658 = !DISubroutineType(types: !9659)
!9659 = !{!649, !2819, !37}
!9660 = !DIDerivedType(tag: DW_TAG_member, name: "fill_linkxstats", scope: !9598, file: !9599, line: 110, baseType: !9661, size: 64, offset: 1536)
!9661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9662, size: 64)
!9662 = !DISubroutineType(types: !9663)
!9663 = !{!37, !475, !2819, !594, !37}
!9664 = !DIDerivedType(tag: DW_TAG_member, name: "gso_max_size", scope: !324, file: !36, line: 2132, baseType: !7, size: 32, offset: 14144)
!9665 = !DIDerivedType(tag: DW_TAG_member, name: "gso_max_segs", scope: !324, file: !36, line: 2134, baseType: !1092, size: 16, offset: 14176)
!9666 = !DIDerivedType(tag: DW_TAG_member, name: "num_tc", scope: !324, file: !36, line: 2139, baseType: !1298, size: 16, offset: 14192)
!9667 = !DIDerivedType(tag: DW_TAG_member, name: "tc_to_txq", scope: !324, file: !36, line: 2140, baseType: !9668, size: 512, offset: 14208)
!9668 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9669, size: 512, elements: !329)
!9669 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "netdev_tc_txq", file: !36, line: 793, size: 32, elements: !9670)
!9670 = !{!9671, !9672}
!9671 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !9669, file: !36, line: 794, baseType: !1092, size: 16)
!9672 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !9669, file: !36, line: 795, baseType: !1092, size: 16, offset: 16)
!9673 = !DIDerivedType(tag: DW_TAG_member, name: "prio_tc_map", scope: !324, file: !36, line: 2141, baseType: !9674, size: 128, offset: 14720)
!9674 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1451, size: 128, elements: !329)
!9675 = !DIDerivedType(tag: DW_TAG_member, name: "phydev", scope: !324, file: !36, line: 2149, baseType: !9676, size: 64, offset: 14848)
!9676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9677, size: 64)
!9677 = !DICompositeType(tag: DW_TAG_structure_type, name: "phy_device", file: !311, line: 536, flags: DIFlagFwdDecl)
!9678 = !DIDerivedType(tag: DW_TAG_member, name: "sfp_bus", scope: !324, file: !36, line: 2150, baseType: !9679, size: 64, offset: 14912)
!9679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9680, size: 64)
!9680 = !DICompositeType(tag: DW_TAG_structure_type, name: "sfp_bus", file: !36, line: 60, flags: DIFlagFwdDecl)
!9681 = !DIDerivedType(tag: DW_TAG_member, name: "qdisc_tx_busylock", scope: !324, file: !36, line: 2151, baseType: !9682, size: 64, offset: 14976)
!9682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !915, size: 64)
!9683 = !DIDerivedType(tag: DW_TAG_member, name: "qdisc_running_key", scope: !324, file: !36, line: 2152, baseType: !9682, size: 64, offset: 15040)
!9684 = !DIDerivedType(tag: DW_TAG_member, name: "proto_down", scope: !324, file: !36, line: 2153, baseType: !595, size: 8, offset: 15104)
!9685 = !DIDerivedType(tag: DW_TAG_member, name: "wol_enabled", scope: !324, file: !36, line: 2154, baseType: !7, size: 1, offset: 15112, flags: DIFlagBitField, extraData: i64 15112)
!9686 = !DIDerivedType(tag: DW_TAG_member, name: "net_notifier_list", scope: !324, file: !36, line: 2156, baseType: !344, size: 128, offset: 15168)
!9687 = !DIDerivedType(tag: DW_TAG_member, name: "udp_tunnel_nic_info", scope: !324, file: !36, line: 2162, baseType: !9688, size: 64, offset: 15296)
!9688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9689, size: 64)
!9689 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !9690)
!9690 = !DICompositeType(tag: DW_TAG_structure_type, name: "udp_tunnel_nic_info", file: !36, line: 68, flags: DIFlagFwdDecl)
!9691 = !DIDerivedType(tag: DW_TAG_member, name: "udp_tunnel_nic", scope: !324, file: !36, line: 2163, baseType: !9692, size: 64, offset: 15360)
!9692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9693, size: 64)
!9693 = !DICompositeType(tag: DW_TAG_structure_type, name: "udp_tunnel_nic", file: !36, line: 69, flags: DIFlagFwdDecl)
!9694 = !DIDerivedType(tag: DW_TAG_member, name: "xdp_state", scope: !324, file: !36, line: 2166, baseType: !9695, size: 384, offset: 15424)
!9695 = !DICompositeType(tag: DW_TAG_array_type, baseType: !9696, size: 384, elements: !921)
!9696 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_xdp_entity", file: !36, line: 889, size: 128, elements: !9697)
!9697 = !{!9698, !9699}
!9698 = !DIDerivedType(tag: DW_TAG_member, name: "prog", scope: !9696, file: !36, line: 890, baseType: !3046, size: 64)
!9699 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !9696, file: !36, line: 891, baseType: !9700, size: 64, offset: 64)
!9700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9701, size: 64)
!9701 = !DICompositeType(tag: DW_TAG_structure_type, name: "bpf_xdp_link", file: !36, line: 880, flags: DIFlagFwdDecl)
!9702 = !{!9703, !9704, !9705, !9706, !9707, !9708}
!9703 = !DIEnumerator(name: "NETREG_UNINITIALIZED", value: 0, isUnsigned: true)
!9704 = !DIEnumerator(name: "NETREG_REGISTERED", value: 1, isUnsigned: true)
!9705 = !DIEnumerator(name: "NETREG_UNREGISTERING", value: 2, isUnsigned: true)
!9706 = !DIEnumerator(name: "NETREG_UNREGISTERED", value: 3, isUnsigned: true)
!9707 = !DIEnumerator(name: "NETREG_RELEASED", value: 4, isUnsigned: true)
!9708 = !DIEnumerator(name: "NETREG_DUMMY", value: 5, isUnsigned: true)
!9709 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mlx5_coredev_type", file: !9710, line: 191, baseType: !7, size: 32, elements: !9711)
!9710 = !DIFile(filename: "./include/linux/mlx5/driver.h", directory: "/home/lizy2001/genbc/linux")
!9711 = !{!9712, !9713}
!9712 = !DIEnumerator(name: "MLX5_COREDEV_PF", value: 0, isUnsigned: true)
!9713 = !DIEnumerator(name: "MLX5_COREDEV_VF", value: 1, isUnsigned: true)
!9714 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mlx5_pci_status", file: !9710, line: 601, baseType: !7, size: 32, elements: !9715)
!9715 = !{!9716, !9717}
!9716 = !DIEnumerator(name: "MLX5_PCI_STATUS_DISABLED", value: 0, isUnsigned: true)
!9717 = !DIEnumerator(name: "MLX5_PCI_STATUS_ENABLED", value: 1, isUnsigned: true)
!9718 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mlx5_cmdif_state", file: !9710, line: 218, baseType: !7, size: 32, elements: !9719)
!9719 = !{!9720, !9721, !9722}
!9720 = !DIEnumerator(name: "MLX5_CMDIF_STATE_UNINITIALIZED", value: 0, isUnsigned: true)
!9721 = !DIEnumerator(name: "MLX5_CMDIF_STATE_UP", value: 1, isUnsigned: true)
!9722 = !DIEnumerator(name: "MLX5_CMDIF_STATE_DOWN", value: 2, isUnsigned: true)
!9723 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mlx5_device_state", file: !9710, line: 591, baseType: !7, size: 32, elements: !9724)
!9724 = !{!9725, !9726, !9727}
!9725 = !DIEnumerator(name: "MLX5_DEVICE_STATE_UNINITIALIZED", value: 0, isUnsigned: true)
!9726 = !DIEnumerator(name: "MLX5_DEVICE_STATE_UP", value: 1, isUnsigned: true)
!9727 = !DIEnumerator(name: "MLX5_DEVICE_STATE_INTERNAL_ERROR", value: 2, isUnsigned: true)
!9728 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "port_state_policy", file: !9710, line: 184, baseType: !7, size: 32, elements: !9729)
!9729 = !{!9730, !9731, !9732, !9733}
!9730 = !DIEnumerator(name: "MLX5_POLICY_DOWN", value: 0, isUnsigned: true)
!9731 = !DIEnumerator(name: "MLX5_POLICY_UP", value: 1, isUnsigned: true)
!9732 = !DIEnumerator(name: "MLX5_POLICY_FOLLOW", value: 2, isUnsigned: true)
!9733 = !DIEnumerator(name: "MLX5_POLICY_INVALID", value: 4294967295, isUnsigned: true)
!9734 = !DICompositeType(tag: DW_TAG_enumeration_type, scope: !9736, file: !9735, line: 17, baseType: !7, size: 32, elements: !9772)
!9735 = !DIFile(filename: "./include/linux/ptp_clock_kernel.h", directory: "/home/lizy2001/genbc/linux")
!9736 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ptp_clock_request", file: !9735, line: 16, size: 512, elements: !9737)
!9737 = !{!9738, !9739}
!9738 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !9736, file: !9735, line: 21, baseType: !9734, size: 32)
!9739 = !DIDerivedType(tag: DW_TAG_member, scope: !9736, file: !9735, line: 22, baseType: !9740, size: 448, offset: 64)
!9740 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9736, file: !9735, line: 22, size: 448, elements: !9741)
!9741 = !{!9742, !9750}
!9742 = !DIDerivedType(tag: DW_TAG_member, name: "extts", scope: !9740, file: !9735, line: 23, baseType: !9743, size: 128)
!9743 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ptp_extts_request", file: !9744, line: 101, size: 128, elements: !9745)
!9744 = !DIFile(filename: "./include/uapi/linux/ptp_clock.h", directory: "/home/lizy2001/genbc/linux")
!9745 = !{!9746, !9747, !9748}
!9746 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !9743, file: !9744, line: 102, baseType: !7, size: 32)
!9747 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !9743, file: !9744, line: 103, baseType: !7, size: 32, offset: 32)
!9748 = !DIDerivedType(tag: DW_TAG_member, name: "rsv", scope: !9743, file: !9744, line: 104, baseType: !9749, size: 64, offset: 64)
!9749 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 64, elements: !533)
!9750 = !DIDerivedType(tag: DW_TAG_member, name: "perout", scope: !9740, file: !9735, line: 24, baseType: !9751, size: 448)
!9751 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ptp_perout_request", file: !9744, line: 107, size: 448, elements: !9752)
!9752 = !{!9753, !9763, !9764, !9765, !9766}
!9753 = !DIDerivedType(tag: DW_TAG_member, scope: !9751, file: !9744, line: 108, baseType: !9754, size: 128)
!9754 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9751, file: !9744, line: 108, size: 128, elements: !9755)
!9755 = !{!9756, !9762}
!9756 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !9754, file: !9744, line: 113, baseType: !9757, size: 128)
!9757 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ptp_clock_time", file: !9744, line: 81, size: 128, elements: !9758)
!9758 = !{!9759, !9760, !9761}
!9759 = !DIDerivedType(tag: DW_TAG_member, name: "sec", scope: !9757, file: !9744, line: 82, baseType: !438, size: 64)
!9760 = !DIDerivedType(tag: DW_TAG_member, name: "nsec", scope: !9757, file: !9744, line: 83, baseType: !523, size: 32, offset: 64)
!9761 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !9757, file: !9744, line: 84, baseType: !523, size: 32, offset: 96)
!9762 = !DIDerivedType(tag: DW_TAG_member, name: "phase", scope: !9754, file: !9744, line: 120, baseType: !9757, size: 128)
!9763 = !DIDerivedType(tag: DW_TAG_member, name: "period", scope: !9751, file: !9744, line: 122, baseType: !9757, size: 128, offset: 128)
!9764 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !9751, file: !9744, line: 123, baseType: !7, size: 32, offset: 256)
!9765 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !9751, file: !9744, line: 124, baseType: !7, size: 32, offset: 288)
!9766 = !DIDerivedType(tag: DW_TAG_member, scope: !9751, file: !9744, line: 125, baseType: !9767, size: 128, offset: 320)
!9767 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !9751, file: !9744, line: 125, size: 128, elements: !9768)
!9768 = !{!9769, !9770}
!9769 = !DIDerivedType(tag: DW_TAG_member, name: "on", scope: !9767, file: !9744, line: 131, baseType: !9757, size: 128)
!9770 = !DIDerivedType(tag: DW_TAG_member, name: "rsv", scope: !9767, file: !9744, line: 133, baseType: !9771, size: 128)
!9771 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 128, elements: !1256)
!9772 = !{!9773, !9774, !9775}
!9773 = !DIEnumerator(name: "PTP_CLK_REQ_EXTTS", value: 0, isUnsigned: true)
!9774 = !DIEnumerator(name: "PTP_CLK_REQ_PEROUT", value: 1, isUnsigned: true)
!9775 = !DIEnumerator(name: "PTP_CLK_REQ_PPS", value: 2, isUnsigned: true)
!9776 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ptp_pin_function", file: !9744, line: 167, baseType: !7, size: 32, elements: !9777)
!9777 = !{!9778, !9779, !9780, !9781}
!9778 = !DIEnumerator(name: "PTP_PF_NONE", value: 0, isUnsigned: true)
!9779 = !DIEnumerator(name: "PTP_PF_EXTTS", value: 1, isUnsigned: true)
!9780 = !DIEnumerator(name: "PTP_PF_PEROUT", value: 2, isUnsigned: true)
!9781 = !DIEnumerator(name: "PTP_PF_PHYSYNC", value: 3, isUnsigned: true)
!9782 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !9783, line: 113, baseType: !7, size: 32, elements: !9784)
!9783 = !DIFile(filename: "./include/linux/mlx5/mlx5_ifc.h", directory: "/home/lizy2001/genbc/linux")
!9784 = !{!9785, !9786, !9787, !9788, !9789, !9790, !9791, !9792, !9793, !9794, !9795, !9796, !9797, !9798, !9799, !9800, !9801, !9802, !9803, !9804, !9805, !9806, !9807, !9808, !9809, !9810, !9811, !9812, !9813, !9814, !9815, !9816, !9817, !9818, !9819, !9820, !9821, !9822, !9823, !9824, !9825, !9826, !9827, !9828, !9829, !9830, !9831, !9832, !9833, !9834, !9835, !9836, !9837, !9838, !9839, !9840, !9841, !9842, !9843, !9844, !9845, !9846, !9847, !9848, !9849, !9850, !9851, !9852, !9853, !9854, !9855, !9856, !9857, !9858, !9859, !9860, !9861, !9862, !9863, !9864, !9865, !9866, !9867, !9868, !9869, !9870, !9871, !9872, !9873, !9874, !9875, !9876, !9877, !9878, !9879, !9880, !9881, !9882, !9883, !9884, !9885, !9886, !9887, !9888, !9889, !9890, !9891, !9892, !9893, !9894, !9895, !9896, !9897, !9898, !9899, !9900, !9901, !9902, !9903, !9904, !9905, !9906, !9907, !9908, !9909, !9910, !9911, !9912, !9913, !9914, !9915, !9916, !9917, !9918, !9919, !9920, !9921, !9922, !9923, !9924, !9925, !9926, !9927, !9928, !9929, !9930, !9931, !9932, !9933, !9934, !9935, !9936, !9937, !9938, !9939, !9940, !9941, !9942, !9943, !9944, !9945, !9946, !9947, !9948, !9949, !9950, !9951, !9952, !9953, !9954, !9955, !9956, !9957, !9958, !9959, !9960, !9961, !9962, !9963, !9964, !9965, !9966, !9967, !9968, !9969, !9970, !9971, !9972, !9973}
!9785 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_HCA_CAP", value: 256, isUnsigned: true)
!9786 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_ADAPTER", value: 257, isUnsigned: true)
!9787 = !DIEnumerator(name: "MLX5_CMD_OP_INIT_HCA", value: 258, isUnsigned: true)
!9788 = !DIEnumerator(name: "MLX5_CMD_OP_TEARDOWN_HCA", value: 259, isUnsigned: true)
!9789 = !DIEnumerator(name: "MLX5_CMD_OP_ENABLE_HCA", value: 260, isUnsigned: true)
!9790 = !DIEnumerator(name: "MLX5_CMD_OP_DISABLE_HCA", value: 261, isUnsigned: true)
!9791 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_PAGES", value: 263, isUnsigned: true)
!9792 = !DIEnumerator(name: "MLX5_CMD_OP_MANAGE_PAGES", value: 264, isUnsigned: true)
!9793 = !DIEnumerator(name: "MLX5_CMD_OP_SET_HCA_CAP", value: 265, isUnsigned: true)
!9794 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_ISSI", value: 266, isUnsigned: true)
!9795 = !DIEnumerator(name: "MLX5_CMD_OP_SET_ISSI", value: 267, isUnsigned: true)
!9796 = !DIEnumerator(name: "MLX5_CMD_OP_SET_DRIVER_VERSION", value: 269, isUnsigned: true)
!9797 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_SF_PARTITION", value: 273, isUnsigned: true)
!9798 = !DIEnumerator(name: "MLX5_CMD_OP_ALLOC_SF", value: 275, isUnsigned: true)
!9799 = !DIEnumerator(name: "MLX5_CMD_OP_DEALLOC_SF", value: 276, isUnsigned: true)
!9800 = !DIEnumerator(name: "MLX5_CMD_OP_CREATE_MKEY", value: 512, isUnsigned: true)
!9801 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_MKEY", value: 513, isUnsigned: true)
!9802 = !DIEnumerator(name: "MLX5_CMD_OP_DESTROY_MKEY", value: 514, isUnsigned: true)
!9803 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_SPECIAL_CONTEXTS", value: 515, isUnsigned: true)
!9804 = !DIEnumerator(name: "MLX5_CMD_OP_PAGE_FAULT_RESUME", value: 516, isUnsigned: true)
!9805 = !DIEnumerator(name: "MLX5_CMD_OP_ALLOC_MEMIC", value: 517, isUnsigned: true)
!9806 = !DIEnumerator(name: "MLX5_CMD_OP_DEALLOC_MEMIC", value: 518, isUnsigned: true)
!9807 = !DIEnumerator(name: "MLX5_CMD_OP_CREATE_EQ", value: 769, isUnsigned: true)
!9808 = !DIEnumerator(name: "MLX5_CMD_OP_DESTROY_EQ", value: 770, isUnsigned: true)
!9809 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_EQ", value: 771, isUnsigned: true)
!9810 = !DIEnumerator(name: "MLX5_CMD_OP_GEN_EQE", value: 772, isUnsigned: true)
!9811 = !DIEnumerator(name: "MLX5_CMD_OP_CREATE_CQ", value: 1024, isUnsigned: true)
!9812 = !DIEnumerator(name: "MLX5_CMD_OP_DESTROY_CQ", value: 1025, isUnsigned: true)
!9813 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_CQ", value: 1026, isUnsigned: true)
!9814 = !DIEnumerator(name: "MLX5_CMD_OP_MODIFY_CQ", value: 1027, isUnsigned: true)
!9815 = !DIEnumerator(name: "MLX5_CMD_OP_CREATE_QP", value: 1280, isUnsigned: true)
!9816 = !DIEnumerator(name: "MLX5_CMD_OP_DESTROY_QP", value: 1281, isUnsigned: true)
!9817 = !DIEnumerator(name: "MLX5_CMD_OP_RST2INIT_QP", value: 1282, isUnsigned: true)
!9818 = !DIEnumerator(name: "MLX5_CMD_OP_INIT2RTR_QP", value: 1283, isUnsigned: true)
!9819 = !DIEnumerator(name: "MLX5_CMD_OP_RTR2RTS_QP", value: 1284, isUnsigned: true)
!9820 = !DIEnumerator(name: "MLX5_CMD_OP_RTS2RTS_QP", value: 1285, isUnsigned: true)
!9821 = !DIEnumerator(name: "MLX5_CMD_OP_SQERR2RTS_QP", value: 1286, isUnsigned: true)
!9822 = !DIEnumerator(name: "MLX5_CMD_OP_2ERR_QP", value: 1287, isUnsigned: true)
!9823 = !DIEnumerator(name: "MLX5_CMD_OP_2RST_QP", value: 1290, isUnsigned: true)
!9824 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_QP", value: 1291, isUnsigned: true)
!9825 = !DIEnumerator(name: "MLX5_CMD_OP_SQD_RTS_QP", value: 1292, isUnsigned: true)
!9826 = !DIEnumerator(name: "MLX5_CMD_OP_INIT2INIT_QP", value: 1294, isUnsigned: true)
!9827 = !DIEnumerator(name: "MLX5_CMD_OP_CREATE_PSV", value: 1536, isUnsigned: true)
!9828 = !DIEnumerator(name: "MLX5_CMD_OP_DESTROY_PSV", value: 1537, isUnsigned: true)
!9829 = !DIEnumerator(name: "MLX5_CMD_OP_CREATE_SRQ", value: 1792, isUnsigned: true)
!9830 = !DIEnumerator(name: "MLX5_CMD_OP_DESTROY_SRQ", value: 1793, isUnsigned: true)
!9831 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_SRQ", value: 1794, isUnsigned: true)
!9832 = !DIEnumerator(name: "MLX5_CMD_OP_ARM_RQ", value: 1795, isUnsigned: true)
!9833 = !DIEnumerator(name: "MLX5_CMD_OP_CREATE_XRC_SRQ", value: 1797, isUnsigned: true)
!9834 = !DIEnumerator(name: "MLX5_CMD_OP_DESTROY_XRC_SRQ", value: 1798, isUnsigned: true)
!9835 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_XRC_SRQ", value: 1799, isUnsigned: true)
!9836 = !DIEnumerator(name: "MLX5_CMD_OP_ARM_XRC_SRQ", value: 1800, isUnsigned: true)
!9837 = !DIEnumerator(name: "MLX5_CMD_OP_CREATE_DCT", value: 1808, isUnsigned: true)
!9838 = !DIEnumerator(name: "MLX5_CMD_OP_DESTROY_DCT", value: 1809, isUnsigned: true)
!9839 = !DIEnumerator(name: "MLX5_CMD_OP_DRAIN_DCT", value: 1810, isUnsigned: true)
!9840 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_DCT", value: 1811, isUnsigned: true)
!9841 = !DIEnumerator(name: "MLX5_CMD_OP_ARM_DCT_FOR_KEY_VIOLATION", value: 1812, isUnsigned: true)
!9842 = !DIEnumerator(name: "MLX5_CMD_OP_CREATE_XRQ", value: 1815, isUnsigned: true)
!9843 = !DIEnumerator(name: "MLX5_CMD_OP_DESTROY_XRQ", value: 1816, isUnsigned: true)
!9844 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_XRQ", value: 1817, isUnsigned: true)
!9845 = !DIEnumerator(name: "MLX5_CMD_OP_ARM_XRQ", value: 1818, isUnsigned: true)
!9846 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_XRQ_DC_PARAMS_ENTRY", value: 1829, isUnsigned: true)
!9847 = !DIEnumerator(name: "MLX5_CMD_OP_SET_XRQ_DC_PARAMS_ENTRY", value: 1830, isUnsigned: true)
!9848 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_XRQ_ERROR_PARAMS", value: 1831, isUnsigned: true)
!9849 = !DIEnumerator(name: "MLX5_CMD_OP_RELEASE_XRQ_ERROR", value: 1833, isUnsigned: true)
!9850 = !DIEnumerator(name: "MLX5_CMD_OP_MODIFY_XRQ", value: 1834, isUnsigned: true)
!9851 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_ESW_FUNCTIONS", value: 1856, isUnsigned: true)
!9852 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_VPORT_STATE", value: 1872, isUnsigned: true)
!9853 = !DIEnumerator(name: "MLX5_CMD_OP_MODIFY_VPORT_STATE", value: 1873, isUnsigned: true)
!9854 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_ESW_VPORT_CONTEXT", value: 1874, isUnsigned: true)
!9855 = !DIEnumerator(name: "MLX5_CMD_OP_MODIFY_ESW_VPORT_CONTEXT", value: 1875, isUnsigned: true)
!9856 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_NIC_VPORT_CONTEXT", value: 1876, isUnsigned: true)
!9857 = !DIEnumerator(name: "MLX5_CMD_OP_MODIFY_NIC_VPORT_CONTEXT", value: 1877, isUnsigned: true)
!9858 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_ROCE_ADDRESS", value: 1888, isUnsigned: true)
!9859 = !DIEnumerator(name: "MLX5_CMD_OP_SET_ROCE_ADDRESS", value: 1889, isUnsigned: true)
!9860 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_HCA_VPORT_CONTEXT", value: 1890, isUnsigned: true)
!9861 = !DIEnumerator(name: "MLX5_CMD_OP_MODIFY_HCA_VPORT_CONTEXT", value: 1891, isUnsigned: true)
!9862 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_HCA_VPORT_GID", value: 1892, isUnsigned: true)
!9863 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_HCA_VPORT_PKEY", value: 1893, isUnsigned: true)
!9864 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_VNIC_ENV", value: 1903, isUnsigned: true)
!9865 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_VPORT_COUNTER", value: 1904, isUnsigned: true)
!9866 = !DIEnumerator(name: "MLX5_CMD_OP_ALLOC_Q_COUNTER", value: 1905, isUnsigned: true)
!9867 = !DIEnumerator(name: "MLX5_CMD_OP_DEALLOC_Q_COUNTER", value: 1906, isUnsigned: true)
!9868 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_Q_COUNTER", value: 1907, isUnsigned: true)
!9869 = !DIEnumerator(name: "MLX5_CMD_OP_SET_MONITOR_COUNTER", value: 1908, isUnsigned: true)
!9870 = !DIEnumerator(name: "MLX5_CMD_OP_ARM_MONITOR_COUNTER", value: 1909, isUnsigned: true)
!9871 = !DIEnumerator(name: "MLX5_CMD_OP_SET_PP_RATE_LIMIT", value: 1920, isUnsigned: true)
!9872 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_RATE_LIMIT", value: 1921, isUnsigned: true)
!9873 = !DIEnumerator(name: "MLX5_CMD_OP_CREATE_SCHEDULING_ELEMENT", value: 1922, isUnsigned: true)
!9874 = !DIEnumerator(name: "MLX5_CMD_OP_DESTROY_SCHEDULING_ELEMENT", value: 1923, isUnsigned: true)
!9875 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_SCHEDULING_ELEMENT", value: 1924, isUnsigned: true)
!9876 = !DIEnumerator(name: "MLX5_CMD_OP_MODIFY_SCHEDULING_ELEMENT", value: 1925, isUnsigned: true)
!9877 = !DIEnumerator(name: "MLX5_CMD_OP_CREATE_QOS_PARA_VPORT", value: 1926, isUnsigned: true)
!9878 = !DIEnumerator(name: "MLX5_CMD_OP_DESTROY_QOS_PARA_VPORT", value: 1927, isUnsigned: true)
!9879 = !DIEnumerator(name: "MLX5_CMD_OP_ALLOC_PD", value: 2048, isUnsigned: true)
!9880 = !DIEnumerator(name: "MLX5_CMD_OP_DEALLOC_PD", value: 2049, isUnsigned: true)
!9881 = !DIEnumerator(name: "MLX5_CMD_OP_ALLOC_UAR", value: 2050, isUnsigned: true)
!9882 = !DIEnumerator(name: "MLX5_CMD_OP_DEALLOC_UAR", value: 2051, isUnsigned: true)
!9883 = !DIEnumerator(name: "MLX5_CMD_OP_CONFIG_INT_MODERATION", value: 2052, isUnsigned: true)
!9884 = !DIEnumerator(name: "MLX5_CMD_OP_ACCESS_REG", value: 2053, isUnsigned: true)
!9885 = !DIEnumerator(name: "MLX5_CMD_OP_ATTACH_TO_MCG", value: 2054, isUnsigned: true)
!9886 = !DIEnumerator(name: "MLX5_CMD_OP_DETACH_FROM_MCG", value: 2055, isUnsigned: true)
!9887 = !DIEnumerator(name: "MLX5_CMD_OP_GET_DROPPED_PACKET_LOG", value: 2058, isUnsigned: true)
!9888 = !DIEnumerator(name: "MLX5_CMD_OP_MAD_IFC", value: 1293, isUnsigned: true)
!9889 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_MAD_DEMUX", value: 2059, isUnsigned: true)
!9890 = !DIEnumerator(name: "MLX5_CMD_OP_SET_MAD_DEMUX", value: 2060, isUnsigned: true)
!9891 = !DIEnumerator(name: "MLX5_CMD_OP_NOP", value: 2061, isUnsigned: true)
!9892 = !DIEnumerator(name: "MLX5_CMD_OP_ALLOC_XRCD", value: 2062, isUnsigned: true)
!9893 = !DIEnumerator(name: "MLX5_CMD_OP_DEALLOC_XRCD", value: 2063, isUnsigned: true)
!9894 = !DIEnumerator(name: "MLX5_CMD_OP_ALLOC_TRANSPORT_DOMAIN", value: 2070, isUnsigned: true)
!9895 = !DIEnumerator(name: "MLX5_CMD_OP_DEALLOC_TRANSPORT_DOMAIN", value: 2071, isUnsigned: true)
!9896 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_CONG_STATUS", value: 2082, isUnsigned: true)
!9897 = !DIEnumerator(name: "MLX5_CMD_OP_MODIFY_CONG_STATUS", value: 2083, isUnsigned: true)
!9898 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_CONG_PARAMS", value: 2084, isUnsigned: true)
!9899 = !DIEnumerator(name: "MLX5_CMD_OP_MODIFY_CONG_PARAMS", value: 2085, isUnsigned: true)
!9900 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_CONG_STATISTICS", value: 2086, isUnsigned: true)
!9901 = !DIEnumerator(name: "MLX5_CMD_OP_ADD_VXLAN_UDP_DPORT", value: 2087, isUnsigned: true)
!9902 = !DIEnumerator(name: "MLX5_CMD_OP_DELETE_VXLAN_UDP_DPORT", value: 2088, isUnsigned: true)
!9903 = !DIEnumerator(name: "MLX5_CMD_OP_SET_L2_TABLE_ENTRY", value: 2089, isUnsigned: true)
!9904 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_L2_TABLE_ENTRY", value: 2090, isUnsigned: true)
!9905 = !DIEnumerator(name: "MLX5_CMD_OP_DELETE_L2_TABLE_ENTRY", value: 2091, isUnsigned: true)
!9906 = !DIEnumerator(name: "MLX5_CMD_OP_SET_WOL_ROL", value: 2096, isUnsigned: true)
!9907 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_WOL_ROL", value: 2097, isUnsigned: true)
!9908 = !DIEnumerator(name: "MLX5_CMD_OP_CREATE_LAG", value: 2112, isUnsigned: true)
!9909 = !DIEnumerator(name: "MLX5_CMD_OP_MODIFY_LAG", value: 2113, isUnsigned: true)
!9910 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_LAG", value: 2114, isUnsigned: true)
!9911 = !DIEnumerator(name: "MLX5_CMD_OP_DESTROY_LAG", value: 2115, isUnsigned: true)
!9912 = !DIEnumerator(name: "MLX5_CMD_OP_CREATE_VPORT_LAG", value: 2116, isUnsigned: true)
!9913 = !DIEnumerator(name: "MLX5_CMD_OP_DESTROY_VPORT_LAG", value: 2117, isUnsigned: true)
!9914 = !DIEnumerator(name: "MLX5_CMD_OP_CREATE_TIR", value: 2304, isUnsigned: true)
!9915 = !DIEnumerator(name: "MLX5_CMD_OP_MODIFY_TIR", value: 2305, isUnsigned: true)
!9916 = !DIEnumerator(name: "MLX5_CMD_OP_DESTROY_TIR", value: 2306, isUnsigned: true)
!9917 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_TIR", value: 2307, isUnsigned: true)
!9918 = !DIEnumerator(name: "MLX5_CMD_OP_CREATE_SQ", value: 2308, isUnsigned: true)
!9919 = !DIEnumerator(name: "MLX5_CMD_OP_MODIFY_SQ", value: 2309, isUnsigned: true)
!9920 = !DIEnumerator(name: "MLX5_CMD_OP_DESTROY_SQ", value: 2310, isUnsigned: true)
!9921 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_SQ", value: 2311, isUnsigned: true)
!9922 = !DIEnumerator(name: "MLX5_CMD_OP_CREATE_RQ", value: 2312, isUnsigned: true)
!9923 = !DIEnumerator(name: "MLX5_CMD_OP_MODIFY_RQ", value: 2313, isUnsigned: true)
!9924 = !DIEnumerator(name: "MLX5_CMD_OP_SET_DELAY_DROP_PARAMS", value: 2320, isUnsigned: true)
!9925 = !DIEnumerator(name: "MLX5_CMD_OP_DESTROY_RQ", value: 2314, isUnsigned: true)
!9926 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_RQ", value: 2315, isUnsigned: true)
!9927 = !DIEnumerator(name: "MLX5_CMD_OP_CREATE_RMP", value: 2316, isUnsigned: true)
!9928 = !DIEnumerator(name: "MLX5_CMD_OP_MODIFY_RMP", value: 2317, isUnsigned: true)
!9929 = !DIEnumerator(name: "MLX5_CMD_OP_DESTROY_RMP", value: 2318, isUnsigned: true)
!9930 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_RMP", value: 2319, isUnsigned: true)
!9931 = !DIEnumerator(name: "MLX5_CMD_OP_CREATE_TIS", value: 2322, isUnsigned: true)
!9932 = !DIEnumerator(name: "MLX5_CMD_OP_MODIFY_TIS", value: 2323, isUnsigned: true)
!9933 = !DIEnumerator(name: "MLX5_CMD_OP_DESTROY_TIS", value: 2324, isUnsigned: true)
!9934 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_TIS", value: 2325, isUnsigned: true)
!9935 = !DIEnumerator(name: "MLX5_CMD_OP_CREATE_RQT", value: 2326, isUnsigned: true)
!9936 = !DIEnumerator(name: "MLX5_CMD_OP_MODIFY_RQT", value: 2327, isUnsigned: true)
!9937 = !DIEnumerator(name: "MLX5_CMD_OP_DESTROY_RQT", value: 2328, isUnsigned: true)
!9938 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_RQT", value: 2329, isUnsigned: true)
!9939 = !DIEnumerator(name: "MLX5_CMD_OP_SET_FLOW_TABLE_ROOT", value: 2351, isUnsigned: true)
!9940 = !DIEnumerator(name: "MLX5_CMD_OP_CREATE_FLOW_TABLE", value: 2352, isUnsigned: true)
!9941 = !DIEnumerator(name: "MLX5_CMD_OP_DESTROY_FLOW_TABLE", value: 2353, isUnsigned: true)
!9942 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_FLOW_TABLE", value: 2354, isUnsigned: true)
!9943 = !DIEnumerator(name: "MLX5_CMD_OP_CREATE_FLOW_GROUP", value: 2355, isUnsigned: true)
!9944 = !DIEnumerator(name: "MLX5_CMD_OP_DESTROY_FLOW_GROUP", value: 2356, isUnsigned: true)
!9945 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_FLOW_GROUP", value: 2357, isUnsigned: true)
!9946 = !DIEnumerator(name: "MLX5_CMD_OP_SET_FLOW_TABLE_ENTRY", value: 2358, isUnsigned: true)
!9947 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_FLOW_TABLE_ENTRY", value: 2359, isUnsigned: true)
!9948 = !DIEnumerator(name: "MLX5_CMD_OP_DELETE_FLOW_TABLE_ENTRY", value: 2360, isUnsigned: true)
!9949 = !DIEnumerator(name: "MLX5_CMD_OP_ALLOC_FLOW_COUNTER", value: 2361, isUnsigned: true)
!9950 = !DIEnumerator(name: "MLX5_CMD_OP_DEALLOC_FLOW_COUNTER", value: 2362, isUnsigned: true)
!9951 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_FLOW_COUNTER", value: 2363, isUnsigned: true)
!9952 = !DIEnumerator(name: "MLX5_CMD_OP_MODIFY_FLOW_TABLE", value: 2364, isUnsigned: true)
!9953 = !DIEnumerator(name: "MLX5_CMD_OP_ALLOC_PACKET_REFORMAT_CONTEXT", value: 2365, isUnsigned: true)
!9954 = !DIEnumerator(name: "MLX5_CMD_OP_DEALLOC_PACKET_REFORMAT_CONTEXT", value: 2366, isUnsigned: true)
!9955 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_PACKET_REFORMAT_CONTEXT", value: 2367, isUnsigned: true)
!9956 = !DIEnumerator(name: "MLX5_CMD_OP_ALLOC_MODIFY_HEADER_CONTEXT", value: 2368, isUnsigned: true)
!9957 = !DIEnumerator(name: "MLX5_CMD_OP_DEALLOC_MODIFY_HEADER_CONTEXT", value: 2369, isUnsigned: true)
!9958 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_MODIFY_HEADER_CONTEXT", value: 2370, isUnsigned: true)
!9959 = !DIEnumerator(name: "MLX5_CMD_OP_FPGA_CREATE_QP", value: 2400, isUnsigned: true)
!9960 = !DIEnumerator(name: "MLX5_CMD_OP_FPGA_MODIFY_QP", value: 2401, isUnsigned: true)
!9961 = !DIEnumerator(name: "MLX5_CMD_OP_FPGA_QUERY_QP", value: 2402, isUnsigned: true)
!9962 = !DIEnumerator(name: "MLX5_CMD_OP_FPGA_DESTROY_QP", value: 2403, isUnsigned: true)
!9963 = !DIEnumerator(name: "MLX5_CMD_OP_FPGA_QUERY_QP_COUNTERS", value: 2404, isUnsigned: true)
!9964 = !DIEnumerator(name: "MLX5_CMD_OP_CREATE_GENERAL_OBJECT", value: 2560, isUnsigned: true)
!9965 = !DIEnumerator(name: "MLX5_CMD_OP_MODIFY_GENERAL_OBJECT", value: 2561, isUnsigned: true)
!9966 = !DIEnumerator(name: "MLX5_CMD_OP_QUERY_GENERAL_OBJECT", value: 2562, isUnsigned: true)
!9967 = !DIEnumerator(name: "MLX5_CMD_OP_DESTROY_GENERAL_OBJECT", value: 2563, isUnsigned: true)
!9968 = !DIEnumerator(name: "MLX5_CMD_OP_CREATE_UCTX", value: 2564, isUnsigned: true)
!9969 = !DIEnumerator(name: "MLX5_CMD_OP_DESTROY_UCTX", value: 2566, isUnsigned: true)
!9970 = !DIEnumerator(name: "MLX5_CMD_OP_CREATE_UMEM", value: 2568, isUnsigned: true)
!9971 = !DIEnumerator(name: "MLX5_CMD_OP_DESTROY_UMEM", value: 2570, isUnsigned: true)
!9972 = !DIEnumerator(name: "MLX5_CMD_OP_SYNC_STEERING", value: 2816, isUnsigned: true)
!9973 = !DIEnumerator(name: "MLX5_CMD_OP_MAX", value: 2817, isUnsigned: true)
!9974 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mlx5_cap_type", file: !9975, line: 1135, baseType: !7, size: 32, elements: !9976)
!9975 = !DIFile(filename: "./include/linux/mlx5/device.h", directory: "/home/lizy2001/genbc/linux")
!9976 = !{!9977, !9978, !9979, !9980, !9981, !9982, !9983, !9984, !9985, !9986, !9987, !9988, !9989, !9990, !9991, !9992, !9993, !9994, !9995, !9996, !9997, !9998}
!9977 = !DIEnumerator(name: "MLX5_CAP_GENERAL", value: 0, isUnsigned: true)
!9978 = !DIEnumerator(name: "MLX5_CAP_ETHERNET_OFFLOADS", value: 1, isUnsigned: true)
!9979 = !DIEnumerator(name: "MLX5_CAP_ODP", value: 2, isUnsigned: true)
!9980 = !DIEnumerator(name: "MLX5_CAP_ATOMIC", value: 3, isUnsigned: true)
!9981 = !DIEnumerator(name: "MLX5_CAP_ROCE", value: 4, isUnsigned: true)
!9982 = !DIEnumerator(name: "MLX5_CAP_IPOIB_OFFLOADS", value: 5, isUnsigned: true)
!9983 = !DIEnumerator(name: "MLX5_CAP_IPOIB_ENHANCED_OFFLOADS", value: 6, isUnsigned: true)
!9984 = !DIEnumerator(name: "MLX5_CAP_FLOW_TABLE", value: 7, isUnsigned: true)
!9985 = !DIEnumerator(name: "MLX5_CAP_ESWITCH_FLOW_TABLE", value: 8, isUnsigned: true)
!9986 = !DIEnumerator(name: "MLX5_CAP_ESWITCH", value: 9, isUnsigned: true)
!9987 = !DIEnumerator(name: "MLX5_CAP_RESERVED", value: 10, isUnsigned: true)
!9988 = !DIEnumerator(name: "MLX5_CAP_VECTOR_CALC", value: 11, isUnsigned: true)
!9989 = !DIEnumerator(name: "MLX5_CAP_QOS", value: 12, isUnsigned: true)
!9990 = !DIEnumerator(name: "MLX5_CAP_DEBUG", value: 13, isUnsigned: true)
!9991 = !DIEnumerator(name: "MLX5_CAP_RESERVED_14", value: 14, isUnsigned: true)
!9992 = !DIEnumerator(name: "MLX5_CAP_DEV_MEM", value: 15, isUnsigned: true)
!9993 = !DIEnumerator(name: "MLX5_CAP_RESERVED_16", value: 16, isUnsigned: true)
!9994 = !DIEnumerator(name: "MLX5_CAP_TLS", value: 17, isUnsigned: true)
!9995 = !DIEnumerator(name: "MLX5_CAP_VDPA_EMULATION", value: 19, isUnsigned: true)
!9996 = !DIEnumerator(name: "MLX5_CAP_DEV_EVENT", value: 20, isUnsigned: true)
!9997 = !DIEnumerator(name: "MLX5_CAP_IPSEC", value: 21, isUnsigned: true)
!9998 = !DIEnumerator(name: "MLX5_CAP_NUM", value: 22, isUnsigned: true)
!9999 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mlx5_inline_modes", file: !9975, line: 164, baseType: !7, size: 32, elements: !10000)
!10000 = !{!10001, !10002, !10003, !10004}
!10001 = !DIEnumerator(name: "MLX5_INLINE_MODE_NONE", value: 0, isUnsigned: true)
!10002 = !DIEnumerator(name: "MLX5_INLINE_MODE_L2", value: 1, isUnsigned: true)
!10003 = !DIEnumerator(name: "MLX5_INLINE_MODE_IP", value: 2, isUnsigned: true)
!10004 = !DIEnumerator(name: "MLX5_INLINE_MODE_TCP_UDP", value: 3, isUnsigned: true)
!10005 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !10006, line: 10, baseType: !7, size: 32, elements: !10007)
!10006 = !DIFile(filename: "./include/linux/stddef.h", directory: "/home/lizy2001/genbc/linux")
!10007 = !{!10008, !10009}
!10008 = !DIEnumerator(name: "false", value: 0, isUnsigned: true)
!10009 = !DIEnumerator(name: "true", value: 1, isUnsigned: true)
!10010 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mlx5_list_type", file: !9975, line: 1092, baseType: !7, size: 32, elements: !10011)
!10011 = !{!10012, !10013, !10014}
!10012 = !DIEnumerator(name: "MLX5_NVPRT_LIST_TYPE_UC", value: 0, isUnsigned: true)
!10013 = !DIEnumerator(name: "MLX5_NVPRT_LIST_TYPE_MC", value: 1, isUnsigned: true)
!10014 = !DIEnumerator(name: "MLX5_NVPRT_LIST_TYPE_VLAN", value: 2, isUnsigned: true)
!10015 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "phy_port_state", file: !9710, line: 780, baseType: !7, size: 32, elements: !10016)
!10016 = !{!10017}
!10017 = !DIEnumerator(name: "MLX5_AAA_111", value: 0, isUnsigned: true)
!10018 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ib_port_state", file: !10019, line: 495, baseType: !7, size: 32, elements: !10020)
!10019 = !DIFile(filename: "./include/rdma/ib_verbs.h", directory: "/home/lizy2001/genbc/linux")
!10020 = !{!10021, !10022, !10023, !10024, !10025, !10026}
!10021 = !DIEnumerator(name: "IB_PORT_NOP", value: 0, isUnsigned: true)
!10022 = !DIEnumerator(name: "IB_PORT_DOWN", value: 1, isUnsigned: true)
!10023 = !DIEnumerator(name: "IB_PORT_INIT", value: 2, isUnsigned: true)
!10024 = !DIEnumerator(name: "IB_PORT_ARMED", value: 3, isUnsigned: true)
!10025 = !DIEnumerator(name: "IB_PORT_ACTIVE", value: 4, isUnsigned: true)
!10026 = !DIEnumerator(name: "IB_PORT_ACTIVE_DEFER", value: 5, isUnsigned: true)
!10027 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !3, line: 824, baseType: !7, size: 32, elements: !10028)
!10028 = !{!10029, !10030}
!10029 = !DIEnumerator(name: "UC_LOCAL_LB", value: 0, isUnsigned: true)
!10030 = !DIEnumerator(name: "MC_LOCAL_LB", value: 1, isUnsigned: true)
!10031 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mlx5_vport_roce_state", file: !3, line: 898, baseType: !7, size: 32, elements: !10032)
!10032 = !{!10033, !10034}
!10033 = !DIEnumerator(name: "MLX5_VPORT_ROCE_DISABLED", value: 0, isUnsigned: true)
!10034 = !DIEnumerator(name: "MLX5_VPORT_ROCE_ENABLED", value: 1, isUnsigned: true)
!10035 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !9783, line: 5240, baseType: !7, size: 32, elements: !10036)
!10036 = !{!10037, !10038, !10039}
!10037 = !DIEnumerator(name: "MLX5_HCA_VPORT_SEL_PORT_GUID", value: 1, isUnsigned: true)
!10038 = !DIEnumerator(name: "MLX5_HCA_VPORT_SEL_NODE_GUID", value: 2, isUnsigned: true)
!10039 = !DIEnumerator(name: "MLX5_HCA_VPORT_SEL_STATE_POLICY", value: 4, isUnsigned: true)
!10040 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !9783, line: 1188, baseType: !7, size: 32, elements: !10041)
!10041 = !{!10042, !10043}
!10042 = !DIEnumerator(name: "MLX5_CAP_PORT_TYPE_IB", value: 0, isUnsigned: true)
!10043 = !DIEnumerator(name: "MLX5_CAP_PORT_TYPE_ETH", value: 1, isUnsigned: true)
!10044 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kmalloc_cache_type", file: !10045, line: 305, baseType: !7, size: 32, elements: !10046)
!10045 = !DIFile(filename: "./include/linux/slab.h", directory: "/home/lizy2001/genbc/linux")
!10046 = !{!10047, !10048, !10049, !10050}
!10047 = !DIEnumerator(name: "KMALLOC_NORMAL", value: 0, isUnsigned: true)
!10048 = !DIEnumerator(name: "KMALLOC_RECLAIM", value: 1, isUnsigned: true)
!10049 = !DIEnumerator(name: "KMALLOC_DMA", value: 2, isUnsigned: true)
!10050 = !DIEnumerator(name: "NR_KMALLOC_TYPES", value: 3, isUnsigned: true)
!10051 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !9975, line: 201, baseType: !7, size: 32, elements: !10052)
!10052 = !{!10053, !10054}
!10053 = !DIEnumerator(name: "MLX5_MIN_PKEY_TABLE_SIZE", value: 128, isUnsigned: true)
!10054 = !DIEnumerator(name: "MLX5_MAX_LOG_PKEY_TABLE", value: 5, isUnsigned: true)
!10055 = !{!521, !523, !10056, !762, !625, !10057, !1612, !393, !10059, !10060, !8694, !1514, !10061, !8151, !10063, !1311, !372}
!10056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !521, size: 64)
!10057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10058, size: 64)
!10058 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !337, line: 102, baseType: !1451)
!10059 = !DIDerivedType(tag: DW_TAG_typedef, name: "__be64", file: !522, line: 34, baseType: !393)
!10060 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10059, size: 64)
!10061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10062, size: 64)
!10062 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1092)
!10063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1311, size: 64)
!10064 = !{!0}
!10065 = !{i32 7, !"Dwarf Version", i32 4}
!10066 = !{i32 2, !"Debug Info Version", i32 3}
!10067 = !{i32 1, !"wchar_size", i32 2}
!10068 = !{i32 1, !"Code Model", i32 2}
!10069 = !{!"clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)"}
!10070 = distinct !DISubprogram(name: "mlx5_query_vport_state", scope: !3, file: !3, line: 43, type: !10071, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !798)
!10071 = !DISubroutineType(types: !10072)
!10072 = !{!1451, !10073, !1451, !1092}
!10073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10074, size: 64)
!10074 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_core_dev", file: !9710, line: 670, size: 1467584, elements: !10075)
!10075 = !{!10076, !10077, !10078, !10351, !10352, !10353, !10354, !10355, !10489, !10497, !10515, !10516, !10517, !10563, !10564, !10565, !10566, !10567, !10733, !10747, !10748, !10774, !10777, !10780, !10783, !10796, !10920, !10923, !10926, !10929, !10930}
!10076 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !10074, file: !9710, line: 671, baseType: !4306, size: 64)
!10077 = !DIDerivedType(tag: DW_TAG_member, name: "coredev_type", scope: !10074, file: !9710, line: 672, baseType: !9709, size: 32, offset: 64)
!10078 = !DIDerivedType(tag: DW_TAG_member, name: "pdev", scope: !10074, file: !9710, line: 673, baseType: !10079, size: 64, offset: 128)
!10079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10080, size: 64)
!10080 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_dev", file: !10081, line: 309, size: 19264, elements: !10082)
!10081 = !DIFile(filename: "./include/linux/pci.h", directory: "/home/lizy2001/genbc/linux")
!10082 = !{!10083, !10084, !10153, !10154, !10155, !10156, !10167, !10168, !10169, !10170, !10171, !10172, !10173, !10174, !10175, !10176, !10177, !10178, !10179, !10180, !10181, !10182, !10183, !10248, !10249, !10250, !10252, !10253, !10254, !10255, !10256, !10257, !10258, !10259, !10260, !10261, !10262, !10263, !10264, !10265, !10266, !10267, !10268, !10269, !10270, !10271, !10274, !10275, !10276, !10277, !10278, !10279, !10280, !10281, !10285, !10286, !10287, !10288, !10289, !10290, !10291, !10292, !10293, !10294, !10295, !10296, !10297, !10298, !10299, !10300, !10301, !10302, !10303, !10304, !10305, !10306, !10307, !10308, !10309, !10310, !10311, !10312, !10313, !10314, !10315, !10316, !10317, !10318, !10319, !10320, !10321, !10322, !10324, !10325, !10327, !10328, !10329, !10330, !10332, !10333, !10334, !10337, !10344, !10345, !10346, !10347, !10348, !10349, !10350}
!10083 = !DIDerivedType(tag: DW_TAG_member, name: "bus_list", scope: !10080, file: !10081, line: 310, baseType: !344, size: 128)
!10084 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !10080, file: !10081, line: 311, baseType: !10085, size: 64, offset: 128)
!10085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10086, size: 64)
!10086 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_bus", file: !10081, line: 605, size: 8064, elements: !10087)
!10087 = !{!10088, !10089, !10090, !10091, !10092, !10093, !10094, !10109, !10110, !10111, !10135, !10138, !10139, !10140, !10141, !10142, !10143, !10144, !10145, !10146, !10148, !10149, !10150, !10151, !10152}
!10088 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !10086, file: !10081, line: 606, baseType: !344, size: 128)
!10089 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !10086, file: !10081, line: 607, baseType: !10085, size: 64, offset: 128)
!10090 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !10086, file: !10081, line: 608, baseType: !344, size: 128, offset: 192)
!10091 = !DIDerivedType(tag: DW_TAG_member, name: "devices", scope: !10086, file: !10081, line: 609, baseType: !344, size: 128, offset: 320)
!10092 = !DIDerivedType(tag: DW_TAG_member, name: "self", scope: !10086, file: !10081, line: 610, baseType: !10079, size: 64, offset: 448)
!10093 = !DIDerivedType(tag: DW_TAG_member, name: "slots", scope: !10086, file: !10081, line: 611, baseType: !344, size: 128, offset: 512)
!10094 = !DIDerivedType(tag: DW_TAG_member, name: "resource", scope: !10086, file: !10081, line: 613, baseType: !10095, size: 256, offset: 640)
!10095 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10096, size: 256, elements: !1256)
!10096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10097, size: 64)
!10097 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "resource", file: !10098, line: 20, size: 512, elements: !10099)
!10098 = !DIFile(filename: "./include/linux/ioport.h", directory: "/home/lizy2001/genbc/linux")
!10099 = !{!10100, !10102, !10103, !10104, !10105, !10106, !10107, !10108}
!10100 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !10097, file: !10098, line: 21, baseType: !10101, size: 64)
!10101 = !DIDerivedType(tag: DW_TAG_typedef, name: "resource_size_t", file: !337, line: 158, baseType: !5762)
!10102 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !10097, file: !10098, line: 22, baseType: !10101, size: 64, offset: 64)
!10103 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !10097, file: !10098, line: 23, baseType: !352, size: 64, offset: 128)
!10104 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !10097, file: !10098, line: 24, baseType: !372, size: 64, offset: 192)
!10105 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !10097, file: !10098, line: 25, baseType: !372, size: 64, offset: 256)
!10106 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !10097, file: !10098, line: 26, baseType: !10096, size: 64, offset: 320)
!10107 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !10097, file: !10098, line: 26, baseType: !10096, size: 64, offset: 384)
!10108 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !10097, file: !10098, line: 26, baseType: !10096, size: 64, offset: 448)
!10109 = !DIDerivedType(tag: DW_TAG_member, name: "resources", scope: !10086, file: !10081, line: 614, baseType: !344, size: 128, offset: 896)
!10110 = !DIDerivedType(tag: DW_TAG_member, name: "busn_res", scope: !10086, file: !10081, line: 615, baseType: !10097, size: 512, offset: 1024)
!10111 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !10086, file: !10081, line: 617, baseType: !10112, size: 64, offset: 1536)
!10112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10113, size: 64)
!10113 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_ops", file: !10081, line: 731, size: 320, elements: !10114)
!10114 = !{!10115, !10119, !10123, !10127, !10131}
!10115 = !DIDerivedType(tag: DW_TAG_member, name: "add_bus", scope: !10113, file: !10081, line: 732, baseType: !10116, size: 64)
!10116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10117, size: 64)
!10117 = !DISubroutineType(types: !10118)
!10118 = !{!37, !10085}
!10119 = !DIDerivedType(tag: DW_TAG_member, name: "remove_bus", scope: !10113, file: !10081, line: 733, baseType: !10120, size: 64, offset: 64)
!10120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10121, size: 64)
!10121 = !DISubroutineType(types: !10122)
!10122 = !{null, !10085}
!10123 = !DIDerivedType(tag: DW_TAG_member, name: "map_bus", scope: !10113, file: !10081, line: 734, baseType: !10124, size: 64, offset: 128)
!10124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10125, size: 64)
!10125 = !DISubroutineType(types: !10126)
!10126 = !{!625, !10085, !7, !37}
!10127 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !10113, file: !10081, line: 735, baseType: !10128, size: 64, offset: 192)
!10128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10129, size: 64)
!10129 = !DISubroutineType(types: !10130)
!10130 = !{!37, !10085, !7, !37, !37, !1514}
!10131 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !10113, file: !10081, line: 736, baseType: !10132, size: 64, offset: 256)
!10132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10133, size: 64)
!10133 = !DISubroutineType(types: !10134)
!10134 = !{!37, !10085, !7, !37, !37, !762}
!10135 = !DIDerivedType(tag: DW_TAG_member, name: "msi", scope: !10086, file: !10081, line: 618, baseType: !10136, size: 64, offset: 1600)
!10136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10137, size: 64)
!10137 = !DICompositeType(tag: DW_TAG_structure_type, name: "msi_controller", file: !10081, line: 537, flags: DIFlagFwdDecl)
!10138 = !DIDerivedType(tag: DW_TAG_member, name: "sysdata", scope: !10086, file: !10081, line: 619, baseType: !625, size: 64, offset: 1664)
!10139 = !DIDerivedType(tag: DW_TAG_member, name: "procdir", scope: !10086, file: !10081, line: 620, baseType: !2071, size: 64, offset: 1728)
!10140 = !DIDerivedType(tag: DW_TAG_member, name: "number", scope: !10086, file: !10081, line: 622, baseType: !549, size: 8, offset: 1792)
!10141 = !DIDerivedType(tag: DW_TAG_member, name: "primary", scope: !10086, file: !10081, line: 623, baseType: !549, size: 8, offset: 1800)
!10142 = !DIDerivedType(tag: DW_TAG_member, name: "max_bus_speed", scope: !10086, file: !10081, line: 624, baseType: !549, size: 8, offset: 1808)
!10143 = !DIDerivedType(tag: DW_TAG_member, name: "cur_bus_speed", scope: !10086, file: !10081, line: 625, baseType: !549, size: 8, offset: 1816)
!10144 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !10086, file: !10081, line: 630, baseType: !7437, size: 384, offset: 1824)
!10145 = !DIDerivedType(tag: DW_TAG_member, name: "bridge_ctl", scope: !10086, file: !10081, line: 632, baseType: !532, size: 16, offset: 2208)
!10146 = !DIDerivedType(tag: DW_TAG_member, name: "bus_flags", scope: !10086, file: !10081, line: 633, baseType: !10147, size: 16, offset: 2224)
!10147 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_bus_flags_t", file: !10081, line: 237, baseType: !532)
!10148 = !DIDerivedType(tag: DW_TAG_member, name: "bridge", scope: !10086, file: !10081, line: 634, baseType: !4306, size: 64, offset: 2240)
!10149 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !10086, file: !10081, line: 635, baseType: !3940, size: 5568, offset: 2304)
!10150 = !DIDerivedType(tag: DW_TAG_member, name: "legacy_io", scope: !10086, file: !10081, line: 636, baseType: !4035, size: 64, offset: 7872)
!10151 = !DIDerivedType(tag: DW_TAG_member, name: "legacy_mem", scope: !10086, file: !10081, line: 637, baseType: !4035, size: 64, offset: 7936)
!10152 = !DIDerivedType(tag: DW_TAG_member, name: "is_added", scope: !10086, file: !10081, line: 638, baseType: !7, size: 1, offset: 8000, flags: DIFlagBitField, extraData: i64 8000)
!10153 = !DIDerivedType(tag: DW_TAG_member, name: "subordinate", scope: !10080, file: !10081, line: 312, baseType: !10085, size: 64, offset: 192)
!10154 = !DIDerivedType(tag: DW_TAG_member, name: "sysdata", scope: !10080, file: !10081, line: 314, baseType: !625, size: 64, offset: 256)
!10155 = !DIDerivedType(tag: DW_TAG_member, name: "procent", scope: !10080, file: !10081, line: 315, baseType: !2071, size: 64, offset: 320)
!10156 = !DIDerivedType(tag: DW_TAG_member, name: "slot", scope: !10080, file: !10081, line: 316, baseType: !10157, size: 64, offset: 384)
!10157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10158, size: 64)
!10158 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_slot", file: !10081, line: 69, size: 832, elements: !10159)
!10159 = !{!10160, !10161, !10162, !10165, !10166}
!10160 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !10158, file: !10081, line: 70, baseType: !10085, size: 64)
!10161 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !10158, file: !10081, line: 71, baseType: !344, size: 128, offset: 64)
!10162 = !DIDerivedType(tag: DW_TAG_member, name: "hotplug", scope: !10158, file: !10081, line: 72, baseType: !10163, size: 64, offset: 192)
!10163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10164, size: 64)
!10164 = !DICompositeType(tag: DW_TAG_structure_type, name: "hotplug_slot", file: !10081, line: 72, flags: DIFlagFwdDecl)
!10165 = !DIDerivedType(tag: DW_TAG_member, name: "number", scope: !10158, file: !10081, line: 73, baseType: !549, size: 8, offset: 256)
!10166 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !10158, file: !10081, line: 74, baseType: !3944, size: 512, offset: 320)
!10167 = !DIDerivedType(tag: DW_TAG_member, name: "devfn", scope: !10080, file: !10081, line: 318, baseType: !7, size: 32, offset: 448)
!10168 = !DIDerivedType(tag: DW_TAG_member, name: "vendor", scope: !10080, file: !10081, line: 319, baseType: !532, size: 16, offset: 480)
!10169 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !10080, file: !10081, line: 320, baseType: !532, size: 16, offset: 496)
!10170 = !DIDerivedType(tag: DW_TAG_member, name: "subsystem_vendor", scope: !10080, file: !10081, line: 321, baseType: !532, size: 16, offset: 512)
!10171 = !DIDerivedType(tag: DW_TAG_member, name: "subsystem_device", scope: !10080, file: !10081, line: 322, baseType: !532, size: 16, offset: 528)
!10172 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !10080, file: !10081, line: 323, baseType: !7, size: 32, offset: 544)
!10173 = !DIDerivedType(tag: DW_TAG_member, name: "revision", scope: !10080, file: !10081, line: 324, baseType: !1451, size: 8, offset: 576)
!10174 = !DIDerivedType(tag: DW_TAG_member, name: "hdr_type", scope: !10080, file: !10081, line: 325, baseType: !1451, size: 8, offset: 584)
!10175 = !DIDerivedType(tag: DW_TAG_member, name: "pcie_cap", scope: !10080, file: !10081, line: 330, baseType: !1451, size: 8, offset: 592)
!10176 = !DIDerivedType(tag: DW_TAG_member, name: "msi_cap", scope: !10080, file: !10081, line: 331, baseType: !1451, size: 8, offset: 600)
!10177 = !DIDerivedType(tag: DW_TAG_member, name: "msix_cap", scope: !10080, file: !10081, line: 332, baseType: !1451, size: 8, offset: 608)
!10178 = !DIDerivedType(tag: DW_TAG_member, name: "pcie_mpss", scope: !10080, file: !10081, line: 333, baseType: !1451, size: 3, offset: 616, flags: DIFlagBitField, extraData: i64 616)
!10179 = !DIDerivedType(tag: DW_TAG_member, name: "rom_base_reg", scope: !10080, file: !10081, line: 334, baseType: !1451, size: 8, offset: 624)
!10180 = !DIDerivedType(tag: DW_TAG_member, name: "pin", scope: !10080, file: !10081, line: 335, baseType: !1451, size: 8, offset: 632)
!10181 = !DIDerivedType(tag: DW_TAG_member, name: "pcie_flags_reg", scope: !10080, file: !10081, line: 336, baseType: !1092, size: 16, offset: 640)
!10182 = !DIDerivedType(tag: DW_TAG_member, name: "dma_alias_mask", scope: !10080, file: !10081, line: 337, baseType: !2513, size: 64, offset: 704)
!10183 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !10080, file: !10081, line: 339, baseType: !10184, size: 64, offset: 768)
!10184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10185, size: 64)
!10185 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_driver", file: !10081, line: 858, size: 2048, elements: !10186)
!10186 = !{!10187, !10188, !10189, !10201, !10205, !10209, !10213, !10217, !10218, !10222, !10241, !10242, !10243}
!10187 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !10185, file: !10081, line: 859, baseType: !344, size: 128)
!10188 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !10185, file: !10081, line: 860, baseType: !352, size: 64, offset: 128)
!10189 = !DIDerivedType(tag: DW_TAG_member, name: "id_table", scope: !10185, file: !10081, line: 861, baseType: !10190, size: 64, offset: 192)
!10190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10191, size: 64)
!10191 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10192)
!10192 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_device_id", file: !4397, line: 38, size: 256, elements: !10193)
!10193 = !{!10194, !10195, !10196, !10197, !10198, !10199, !10200}
!10194 = !DIDerivedType(tag: DW_TAG_member, name: "vendor", scope: !10192, file: !4397, line: 39, baseType: !523, size: 32)
!10195 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !10192, file: !4397, line: 39, baseType: !523, size: 32, offset: 32)
!10196 = !DIDerivedType(tag: DW_TAG_member, name: "subvendor", scope: !10192, file: !4397, line: 40, baseType: !523, size: 32, offset: 64)
!10197 = !DIDerivedType(tag: DW_TAG_member, name: "subdevice", scope: !10192, file: !4397, line: 40, baseType: !523, size: 32, offset: 96)
!10198 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !10192, file: !4397, line: 41, baseType: !523, size: 32, offset: 128)
!10199 = !DIDerivedType(tag: DW_TAG_member, name: "class_mask", scope: !10192, file: !4397, line: 41, baseType: !523, size: 32, offset: 160)
!10200 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !10192, file: !4397, line: 42, baseType: !4411, size: 64, offset: 192)
!10201 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !10185, file: !10081, line: 862, baseType: !10202, size: 64, offset: 256)
!10202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10203, size: 64)
!10203 = !DISubroutineType(types: !10204)
!10204 = !{!37, !10079, !10190}
!10205 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !10185, file: !10081, line: 863, baseType: !10206, size: 64, offset: 320)
!10206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10207, size: 64)
!10207 = !DISubroutineType(types: !10208)
!10208 = !{null, !10079}
!10209 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !10185, file: !10081, line: 864, baseType: !10210, size: 64, offset: 384)
!10210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10211, size: 64)
!10211 = !DISubroutineType(types: !10212)
!10212 = !{!37, !10079, !4422}
!10213 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !10185, file: !10081, line: 865, baseType: !10214, size: 64, offset: 448)
!10214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10215, size: 64)
!10215 = !DISubroutineType(types: !10216)
!10216 = !{!37, !10079}
!10217 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !10185, file: !10081, line: 866, baseType: !10206, size: 64, offset: 512)
!10218 = !DIDerivedType(tag: DW_TAG_member, name: "sriov_configure", scope: !10185, file: !10081, line: 867, baseType: !10219, size: 64, offset: 576)
!10219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10220, size: 64)
!10220 = !DISubroutineType(types: !10221)
!10221 = !{!37, !10079, !37}
!10222 = !DIDerivedType(tag: DW_TAG_member, name: "err_handler", scope: !10185, file: !10081, line: 868, baseType: !10223, size: 64, offset: 640)
!10223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10224, size: 64)
!10224 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10225)
!10225 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_error_handlers", file: !10081, line: 795, size: 384, elements: !10226)
!10226 = !{!10227, !10233, !10237, !10238, !10239, !10240}
!10227 = !DIDerivedType(tag: DW_TAG_member, name: "error_detected", scope: !10225, file: !10081, line: 797, baseType: !10228, size: 64)
!10228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10229, size: 64)
!10229 = !DISubroutineType(types: !10230)
!10230 = !{!10231, !10079, !10232}
!10231 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_ers_result_t", file: !10081, line: 772, baseType: !7)
!10232 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_channel_state_t", file: !10081, line: 180, baseType: !7)
!10233 = !DIDerivedType(tag: DW_TAG_member, name: "mmio_enabled", scope: !10225, file: !10081, line: 801, baseType: !10234, size: 64, offset: 64)
!10234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10235, size: 64)
!10235 = !DISubroutineType(types: !10236)
!10236 = !{!10231, !10079}
!10237 = !DIDerivedType(tag: DW_TAG_member, name: "slot_reset", scope: !10225, file: !10081, line: 804, baseType: !10234, size: 64, offset: 128)
!10238 = !DIDerivedType(tag: DW_TAG_member, name: "reset_prepare", scope: !10225, file: !10081, line: 807, baseType: !10206, size: 64, offset: 192)
!10239 = !DIDerivedType(tag: DW_TAG_member, name: "reset_done", scope: !10225, file: !10081, line: 808, baseType: !10206, size: 64, offset: 256)
!10240 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !10225, file: !10081, line: 811, baseType: !10206, size: 64, offset: 320)
!10241 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !10185, file: !10081, line: 869, baseType: !4021, size: 64, offset: 704)
!10242 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !10185, file: !10081, line: 870, baseType: !4379, size: 1152, offset: 768)
!10243 = !DIDerivedType(tag: DW_TAG_member, name: "dynids", scope: !10185, file: !10081, line: 871, baseType: !10244, size: 128, offset: 1920)
!10244 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pci_dynids", file: !10081, line: 759, size: 128, elements: !10245)
!10245 = !{!10246, !10247}
!10246 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !10244, file: !10081, line: 760, baseType: !784)
!10247 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !10244, file: !10081, line: 761, baseType: !344, size: 128)
!10248 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !10080, file: !10081, line: 340, baseType: !391, size: 64, offset: 832)
!10249 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !10080, file: !10081, line: 346, baseType: !4612, size: 128, offset: 896)
!10250 = !DIDerivedType(tag: DW_TAG_member, name: "current_state", scope: !10080, file: !10081, line: 348, baseType: !10251, size: 32, offset: 1024)
!10251 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_power_t", file: !10081, line: 155, baseType: !37)
!10252 = !DIDerivedType(tag: DW_TAG_member, name: "imm_ready", scope: !10080, file: !10081, line: 351, baseType: !7, size: 1, offset: 1056, flags: DIFlagBitField, extraData: i64 1056)
!10253 = !DIDerivedType(tag: DW_TAG_member, name: "pm_cap", scope: !10080, file: !10081, line: 352, baseType: !1451, size: 8, offset: 1064)
!10254 = !DIDerivedType(tag: DW_TAG_member, name: "pme_support", scope: !10080, file: !10081, line: 353, baseType: !7, size: 5, offset: 1072, flags: DIFlagBitField, extraData: i64 1072)
!10255 = !DIDerivedType(tag: DW_TAG_member, name: "pme_poll", scope: !10080, file: !10081, line: 355, baseType: !7, size: 1, offset: 1077, flags: DIFlagBitField, extraData: i64 1072)
!10256 = !DIDerivedType(tag: DW_TAG_member, name: "d1_support", scope: !10080, file: !10081, line: 356, baseType: !7, size: 1, offset: 1078, flags: DIFlagBitField, extraData: i64 1072)
!10257 = !DIDerivedType(tag: DW_TAG_member, name: "d2_support", scope: !10080, file: !10081, line: 357, baseType: !7, size: 1, offset: 1079, flags: DIFlagBitField, extraData: i64 1072)
!10258 = !DIDerivedType(tag: DW_TAG_member, name: "no_d1d2", scope: !10080, file: !10081, line: 358, baseType: !7, size: 1, offset: 1080, flags: DIFlagBitField, extraData: i64 1072)
!10259 = !DIDerivedType(tag: DW_TAG_member, name: "no_d3cold", scope: !10080, file: !10081, line: 359, baseType: !7, size: 1, offset: 1081, flags: DIFlagBitField, extraData: i64 1072)
!10260 = !DIDerivedType(tag: DW_TAG_member, name: "bridge_d3", scope: !10080, file: !10081, line: 360, baseType: !7, size: 1, offset: 1082, flags: DIFlagBitField, extraData: i64 1072)
!10261 = !DIDerivedType(tag: DW_TAG_member, name: "d3cold_allowed", scope: !10080, file: !10081, line: 361, baseType: !7, size: 1, offset: 1083, flags: DIFlagBitField, extraData: i64 1072)
!10262 = !DIDerivedType(tag: DW_TAG_member, name: "mmio_always_on", scope: !10080, file: !10081, line: 362, baseType: !7, size: 1, offset: 1084, flags: DIFlagBitField, extraData: i64 1072)
!10263 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_prepared", scope: !10080, file: !10081, line: 364, baseType: !7, size: 1, offset: 1085, flags: DIFlagBitField, extraData: i64 1072)
!10264 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_d3cold", scope: !10080, file: !10081, line: 365, baseType: !7, size: 1, offset: 1086, flags: DIFlagBitField, extraData: i64 1072)
!10265 = !DIDerivedType(tag: DW_TAG_member, name: "skip_bus_pm", scope: !10080, file: !10081, line: 369, baseType: !7, size: 1, offset: 1087, flags: DIFlagBitField, extraData: i64 1072)
!10266 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_hotplug", scope: !10080, file: !10081, line: 370, baseType: !7, size: 1, offset: 1088, flags: DIFlagBitField, extraData: i64 1072)
!10267 = !DIDerivedType(tag: DW_TAG_member, name: "hotplug_user_indicators", scope: !10080, file: !10081, line: 371, baseType: !7, size: 1, offset: 1089, flags: DIFlagBitField, extraData: i64 1072)
!10268 = !DIDerivedType(tag: DW_TAG_member, name: "clear_retrain_link", scope: !10080, file: !10081, line: 374, baseType: !7, size: 1, offset: 1090, flags: DIFlagBitField, extraData: i64 1072)
!10269 = !DIDerivedType(tag: DW_TAG_member, name: "d3hot_delay", scope: !10080, file: !10081, line: 376, baseType: !7, size: 32, offset: 1120)
!10270 = !DIDerivedType(tag: DW_TAG_member, name: "d3cold_delay", scope: !10080, file: !10081, line: 377, baseType: !7, size: 32, offset: 1152)
!10271 = !DIDerivedType(tag: DW_TAG_member, name: "link_state", scope: !10080, file: !10081, line: 380, baseType: !10272, size: 64, offset: 1216)
!10272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10273, size: 64)
!10273 = !DICompositeType(tag: DW_TAG_structure_type, name: "pcie_link_state", file: !10081, line: 303, flags: DIFlagFwdDecl)
!10274 = !DIDerivedType(tag: DW_TAG_member, name: "ltr_path", scope: !10080, file: !10081, line: 381, baseType: !7, size: 1, offset: 1280, flags: DIFlagBitField, extraData: i64 1280)
!10275 = !DIDerivedType(tag: DW_TAG_member, name: "l1ss", scope: !10080, file: !10081, line: 383, baseType: !37, size: 32, offset: 1312)
!10276 = !DIDerivedType(tag: DW_TAG_member, name: "eetlp_prefix_path", scope: !10080, file: !10081, line: 385, baseType: !7, size: 1, offset: 1344, flags: DIFlagBitField, extraData: i64 1344)
!10277 = !DIDerivedType(tag: DW_TAG_member, name: "error_state", scope: !10080, file: !10081, line: 387, baseType: !10232, size: 32, offset: 1376)
!10278 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !10080, file: !10081, line: 388, baseType: !3940, size: 5568, offset: 1408)
!10279 = !DIDerivedType(tag: DW_TAG_member, name: "cfg_size", scope: !10080, file: !10081, line: 390, baseType: !37, size: 32, offset: 6976)
!10280 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !10080, file: !10081, line: 396, baseType: !7, size: 32, offset: 7008)
!10281 = !DIDerivedType(tag: DW_TAG_member, name: "resource", scope: !10080, file: !10081, line: 397, baseType: !10282, size: 8704, offset: 7040)
!10282 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10097, size: 8704, elements: !10283)
!10283 = !{!10284}
!10284 = !DISubrange(count: 17)
!10285 = !DIDerivedType(tag: DW_TAG_member, name: "match_driver", scope: !10080, file: !10081, line: 399, baseType: !595, size: 8, offset: 15744)
!10286 = !DIDerivedType(tag: DW_TAG_member, name: "transparent", scope: !10080, file: !10081, line: 401, baseType: !7, size: 1, offset: 15752, flags: DIFlagBitField, extraData: i64 15752)
!10287 = !DIDerivedType(tag: DW_TAG_member, name: "io_window", scope: !10080, file: !10081, line: 402, baseType: !7, size: 1, offset: 15753, flags: DIFlagBitField, extraData: i64 15752)
!10288 = !DIDerivedType(tag: DW_TAG_member, name: "pref_window", scope: !10080, file: !10081, line: 403, baseType: !7, size: 1, offset: 15754, flags: DIFlagBitField, extraData: i64 15752)
!10289 = !DIDerivedType(tag: DW_TAG_member, name: "pref_64_window", scope: !10080, file: !10081, line: 404, baseType: !7, size: 1, offset: 15755, flags: DIFlagBitField, extraData: i64 15752)
!10290 = !DIDerivedType(tag: DW_TAG_member, name: "multifunction", scope: !10080, file: !10081, line: 405, baseType: !7, size: 1, offset: 15756, flags: DIFlagBitField, extraData: i64 15752)
!10291 = !DIDerivedType(tag: DW_TAG_member, name: "is_busmaster", scope: !10080, file: !10081, line: 407, baseType: !7, size: 1, offset: 15757, flags: DIFlagBitField, extraData: i64 15752)
!10292 = !DIDerivedType(tag: DW_TAG_member, name: "no_msi", scope: !10080, file: !10081, line: 408, baseType: !7, size: 1, offset: 15758, flags: DIFlagBitField, extraData: i64 15752)
!10293 = !DIDerivedType(tag: DW_TAG_member, name: "no_64bit_msi", scope: !10080, file: !10081, line: 409, baseType: !7, size: 1, offset: 15759, flags: DIFlagBitField, extraData: i64 15752)
!10294 = !DIDerivedType(tag: DW_TAG_member, name: "block_cfg_access", scope: !10080, file: !10081, line: 410, baseType: !7, size: 1, offset: 15760, flags: DIFlagBitField, extraData: i64 15752)
!10295 = !DIDerivedType(tag: DW_TAG_member, name: "broken_parity_status", scope: !10080, file: !10081, line: 411, baseType: !7, size: 1, offset: 15761, flags: DIFlagBitField, extraData: i64 15752)
!10296 = !DIDerivedType(tag: DW_TAG_member, name: "irq_reroute_variant", scope: !10080, file: !10081, line: 412, baseType: !7, size: 2, offset: 15762, flags: DIFlagBitField, extraData: i64 15752)
!10297 = !DIDerivedType(tag: DW_TAG_member, name: "msi_enabled", scope: !10080, file: !10081, line: 413, baseType: !7, size: 1, offset: 15764, flags: DIFlagBitField, extraData: i64 15752)
!10298 = !DIDerivedType(tag: DW_TAG_member, name: "msix_enabled", scope: !10080, file: !10081, line: 414, baseType: !7, size: 1, offset: 15765, flags: DIFlagBitField, extraData: i64 15752)
!10299 = !DIDerivedType(tag: DW_TAG_member, name: "ari_enabled", scope: !10080, file: !10081, line: 415, baseType: !7, size: 1, offset: 15766, flags: DIFlagBitField, extraData: i64 15752)
!10300 = !DIDerivedType(tag: DW_TAG_member, name: "ats_enabled", scope: !10080, file: !10081, line: 416, baseType: !7, size: 1, offset: 15767, flags: DIFlagBitField, extraData: i64 15752)
!10301 = !DIDerivedType(tag: DW_TAG_member, name: "pasid_enabled", scope: !10080, file: !10081, line: 417, baseType: !7, size: 1, offset: 15768, flags: DIFlagBitField, extraData: i64 15752)
!10302 = !DIDerivedType(tag: DW_TAG_member, name: "pri_enabled", scope: !10080, file: !10081, line: 418, baseType: !7, size: 1, offset: 15769, flags: DIFlagBitField, extraData: i64 15752)
!10303 = !DIDerivedType(tag: DW_TAG_member, name: "is_managed", scope: !10080, file: !10081, line: 419, baseType: !7, size: 1, offset: 15770, flags: DIFlagBitField, extraData: i64 15752)
!10304 = !DIDerivedType(tag: DW_TAG_member, name: "needs_freset", scope: !10080, file: !10081, line: 420, baseType: !7, size: 1, offset: 15771, flags: DIFlagBitField, extraData: i64 15752)
!10305 = !DIDerivedType(tag: DW_TAG_member, name: "state_saved", scope: !10080, file: !10081, line: 421, baseType: !7, size: 1, offset: 15772, flags: DIFlagBitField, extraData: i64 15752)
!10306 = !DIDerivedType(tag: DW_TAG_member, name: "is_physfn", scope: !10080, file: !10081, line: 422, baseType: !7, size: 1, offset: 15773, flags: DIFlagBitField, extraData: i64 15752)
!10307 = !DIDerivedType(tag: DW_TAG_member, name: "is_virtfn", scope: !10080, file: !10081, line: 423, baseType: !7, size: 1, offset: 15774, flags: DIFlagBitField, extraData: i64 15752)
!10308 = !DIDerivedType(tag: DW_TAG_member, name: "reset_fn", scope: !10080, file: !10081, line: 424, baseType: !7, size: 1, offset: 15775, flags: DIFlagBitField, extraData: i64 15752)
!10309 = !DIDerivedType(tag: DW_TAG_member, name: "is_hotplug_bridge", scope: !10080, file: !10081, line: 425, baseType: !7, size: 1, offset: 15776, flags: DIFlagBitField, extraData: i64 15752)
!10310 = !DIDerivedType(tag: DW_TAG_member, name: "shpc_managed", scope: !10080, file: !10081, line: 426, baseType: !7, size: 1, offset: 15777, flags: DIFlagBitField, extraData: i64 15752)
!10311 = !DIDerivedType(tag: DW_TAG_member, name: "is_thunderbolt", scope: !10080, file: !10081, line: 427, baseType: !7, size: 1, offset: 15778, flags: DIFlagBitField, extraData: i64 15752)
!10312 = !DIDerivedType(tag: DW_TAG_member, name: "untrusted", scope: !10080, file: !10081, line: 435, baseType: !7, size: 1, offset: 15779, flags: DIFlagBitField, extraData: i64 15752)
!10313 = !DIDerivedType(tag: DW_TAG_member, name: "external_facing", scope: !10080, file: !10081, line: 441, baseType: !7, size: 1, offset: 15780, flags: DIFlagBitField, extraData: i64 15752)
!10314 = !DIDerivedType(tag: DW_TAG_member, name: "broken_intx_masking", scope: !10080, file: !10081, line: 442, baseType: !7, size: 1, offset: 15781, flags: DIFlagBitField, extraData: i64 15752)
!10315 = !DIDerivedType(tag: DW_TAG_member, name: "io_window_1k", scope: !10080, file: !10081, line: 443, baseType: !7, size: 1, offset: 15782, flags: DIFlagBitField, extraData: i64 15752)
!10316 = !DIDerivedType(tag: DW_TAG_member, name: "irq_managed", scope: !10080, file: !10081, line: 444, baseType: !7, size: 1, offset: 15783, flags: DIFlagBitField, extraData: i64 15752)
!10317 = !DIDerivedType(tag: DW_TAG_member, name: "non_compliant_bars", scope: !10080, file: !10081, line: 445, baseType: !7, size: 1, offset: 15784, flags: DIFlagBitField, extraData: i64 15752)
!10318 = !DIDerivedType(tag: DW_TAG_member, name: "is_probed", scope: !10080, file: !10081, line: 446, baseType: !7, size: 1, offset: 15785, flags: DIFlagBitField, extraData: i64 15752)
!10319 = !DIDerivedType(tag: DW_TAG_member, name: "link_active_reporting", scope: !10080, file: !10081, line: 447, baseType: !7, size: 1, offset: 15786, flags: DIFlagBitField, extraData: i64 15752)
!10320 = !DIDerivedType(tag: DW_TAG_member, name: "no_vf_scan", scope: !10080, file: !10081, line: 448, baseType: !7, size: 1, offset: 15787, flags: DIFlagBitField, extraData: i64 15752)
!10321 = !DIDerivedType(tag: DW_TAG_member, name: "no_command_memory", scope: !10080, file: !10081, line: 449, baseType: !7, size: 1, offset: 15788, flags: DIFlagBitField, extraData: i64 15752)
!10322 = !DIDerivedType(tag: DW_TAG_member, name: "dev_flags", scope: !10080, file: !10081, line: 450, baseType: !10323, size: 16, offset: 15792)
!10323 = !DIDerivedType(tag: DW_TAG_typedef, name: "pci_dev_flags_t", file: !10081, line: 206, baseType: !532)
!10324 = !DIDerivedType(tag: DW_TAG_member, name: "enable_cnt", scope: !10080, file: !10081, line: 451, baseType: !443, size: 32, offset: 15808)
!10325 = !DIDerivedType(tag: DW_TAG_member, name: "saved_config_space", scope: !10080, file: !10081, line: 453, baseType: !10326, size: 512, offset: 15840)
!10326 = !DICompositeType(tag: DW_TAG_array_type, baseType: !762, size: 512, elements: !329)
!10327 = !DIDerivedType(tag: DW_TAG_member, name: "saved_cap_space", scope: !10080, file: !10081, line: 454, baseType: !911, size: 64, offset: 16384)
!10328 = !DIDerivedType(tag: DW_TAG_member, name: "rom_attr", scope: !10080, file: !10081, line: 455, baseType: !4035, size: 64, offset: 16448)
!10329 = !DIDerivedType(tag: DW_TAG_member, name: "rom_attr_enabled", scope: !10080, file: !10081, line: 456, baseType: !37, size: 32, offset: 16512)
!10330 = !DIDerivedType(tag: DW_TAG_member, name: "res_attr", scope: !10080, file: !10081, line: 457, baseType: !10331, size: 1088, offset: 16576)
!10331 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4035, size: 1088, elements: !10283)
!10332 = !DIDerivedType(tag: DW_TAG_member, name: "res_attr_wc", scope: !10080, file: !10081, line: 458, baseType: !10331, size: 1088, offset: 17664)
!10333 = !DIDerivedType(tag: DW_TAG_member, name: "msi_irq_groups", scope: !10080, file: !10081, line: 469, baseType: !4021, size: 64, offset: 18752)
!10334 = !DIDerivedType(tag: DW_TAG_member, name: "vpd", scope: !10080, file: !10081, line: 471, baseType: !10335, size: 64, offset: 18816)
!10335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10336, size: 64)
!10336 = !DICompositeType(tag: DW_TAG_structure_type, name: "pci_vpd", file: !10081, line: 304, flags: DIFlagFwdDecl)
!10337 = !DIDerivedType(tag: DW_TAG_member, scope: !10080, file: !10081, line: 478, baseType: !10338, size: 64, offset: 18880)
!10338 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !10080, file: !10081, line: 478, size: 64, elements: !10339)
!10339 = !{!10340, !10343}
!10340 = !DIDerivedType(tag: DW_TAG_member, name: "sriov", scope: !10338, file: !10081, line: 479, baseType: !10341, size: 64)
!10341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10342, size: 64)
!10342 = !DICompositeType(tag: DW_TAG_structure_type, name: "pci_sriov", file: !10081, line: 305, flags: DIFlagFwdDecl)
!10343 = !DIDerivedType(tag: DW_TAG_member, name: "physfn", scope: !10338, file: !10081, line: 480, baseType: !10079, size: 64)
!10344 = !DIDerivedType(tag: DW_TAG_member, name: "ats_cap", scope: !10080, file: !10081, line: 482, baseType: !1092, size: 16, offset: 18944)
!10345 = !DIDerivedType(tag: DW_TAG_member, name: "ats_stu", scope: !10080, file: !10081, line: 483, baseType: !1451, size: 8, offset: 18960)
!10346 = !DIDerivedType(tag: DW_TAG_member, name: "acs_cap", scope: !10080, file: !10081, line: 497, baseType: !1092, size: 16, offset: 18976)
!10347 = !DIDerivedType(tag: DW_TAG_member, name: "rom", scope: !10080, file: !10081, line: 498, baseType: !5762, size: 64, offset: 19008)
!10348 = !DIDerivedType(tag: DW_TAG_member, name: "romlen", scope: !10080, file: !10081, line: 499, baseType: !649, size: 64, offset: 19072)
!10349 = !DIDerivedType(tag: DW_TAG_member, name: "driver_override", scope: !10080, file: !10081, line: 500, baseType: !632, size: 64, offset: 19136)
!10350 = !DIDerivedType(tag: DW_TAG_member, name: "priv_flags", scope: !10080, file: !10081, line: 502, baseType: !372, size: 64, offset: 19200)
!10351 = !DIDerivedType(tag: DW_TAG_member, name: "pci_status_mutex", scope: !10074, file: !9710, line: 675, baseType: !1008, size: 192, offset: 192)
!10352 = !DIDerivedType(tag: DW_TAG_member, name: "pci_status", scope: !10074, file: !9710, line: 676, baseType: !9714, size: 32, offset: 384)
!10353 = !DIDerivedType(tag: DW_TAG_member, name: "rev_id", scope: !10074, file: !9710, line: 677, baseType: !1451, size: 8, offset: 416)
!10354 = !DIDerivedType(tag: DW_TAG_member, name: "board_id", scope: !10074, file: !9710, line: 678, baseType: !4882, size: 512, offset: 424)
!10355 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !10074, file: !9710, line: 679, baseType: !10356, size: 5184, offset: 960)
!10356 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_cmd", file: !9710, line: 266, size: 5184, elements: !10357)
!10357 = !{!10358, !10364, !10365, !10366, !10367, !10368, !10369, !10370, !10371, !10372, !10373, !10374, !10375, !10376, !10377, !10378, !10379, !10380, !10381, !10382, !10389, !10390, !10391, !10392, !10465, !10469, !10478, !10480, !10481}
!10358 = !DIDerivedType(tag: DW_TAG_member, name: "nb", scope: !10356, file: !9710, line: 267, baseType: !10359, size: 256)
!10359 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_nb", file: !10360, line: 50, size: 256, elements: !10361)
!10360 = !DIFile(filename: "./include/linux/mlx5/eq.h", directory: "/home/lizy2001/genbc/linux")
!10361 = !{!10362, !10363}
!10362 = !DIDerivedType(tag: DW_TAG_member, name: "nb", scope: !10359, file: !10360, line: 51, baseType: !2090, size: 192)
!10363 = !DIDerivedType(tag: DW_TAG_member, name: "event_type", scope: !10359, file: !10360, line: 52, baseType: !1451, size: 8, offset: 192)
!10364 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !10356, file: !9710, line: 269, baseType: !9718, size: 32, offset: 256)
!10365 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_alloc_buf", scope: !10356, file: !9710, line: 270, baseType: !625, size: 64, offset: 320)
!10366 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_dma", scope: !10356, file: !9710, line: 271, baseType: !6871, size: 64, offset: 384)
!10367 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_size", scope: !10356, file: !9710, line: 272, baseType: !37, size: 32, offset: 448)
!10368 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_buf", scope: !10356, file: !9710, line: 273, baseType: !625, size: 64, offset: 512)
!10369 = !DIDerivedType(tag: DW_TAG_member, name: "dma", scope: !10356, file: !9710, line: 274, baseType: !6871, size: 64, offset: 576)
!10370 = !DIDerivedType(tag: DW_TAG_member, name: "cmdif_rev", scope: !10356, file: !9710, line: 275, baseType: !1092, size: 16, offset: 640)
!10371 = !DIDerivedType(tag: DW_TAG_member, name: "log_sz", scope: !10356, file: !9710, line: 276, baseType: !1451, size: 8, offset: 656)
!10372 = !DIDerivedType(tag: DW_TAG_member, name: "log_stride", scope: !10356, file: !9710, line: 277, baseType: !1451, size: 8, offset: 664)
!10373 = !DIDerivedType(tag: DW_TAG_member, name: "max_reg_cmds", scope: !10356, file: !9710, line: 278, baseType: !37, size: 32, offset: 672)
!10374 = !DIDerivedType(tag: DW_TAG_member, name: "events", scope: !10356, file: !9710, line: 279, baseType: !37, size: 32, offset: 704)
!10375 = !DIDerivedType(tag: DW_TAG_member, name: "vector", scope: !10356, file: !9710, line: 280, baseType: !1514, size: 64, offset: 768)
!10376 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_lock", scope: !10356, file: !9710, line: 284, baseType: !784, offset: 832)
!10377 = !DIDerivedType(tag: DW_TAG_member, name: "token_lock", scope: !10356, file: !9710, line: 288, baseType: !784, offset: 832)
!10378 = !DIDerivedType(tag: DW_TAG_member, name: "token", scope: !10356, file: !9710, line: 289, baseType: !1451, size: 8, offset: 832)
!10379 = !DIDerivedType(tag: DW_TAG_member, name: "bitmask", scope: !10356, file: !9710, line: 290, baseType: !372, size: 64, offset: 896)
!10380 = !DIDerivedType(tag: DW_TAG_member, name: "wq_name", scope: !10356, file: !9710, line: 291, baseType: !3898, size: 256, offset: 960)
!10381 = !DIDerivedType(tag: DW_TAG_member, name: "wq", scope: !10356, file: !9710, line: 292, baseType: !2894, size: 64, offset: 1216)
!10382 = !DIDerivedType(tag: DW_TAG_member, name: "sem", scope: !10356, file: !9710, line: 293, baseType: !10383, size: 192, offset: 1280)
!10383 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "semaphore", file: !10384, line: 15, size: 192, elements: !10385)
!10384 = !DIFile(filename: "./include/linux/semaphore.h", directory: "/home/lizy2001/genbc/linux")
!10385 = !{!10386, !10387, !10388}
!10386 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !10383, file: !10384, line: 16, baseType: !1222)
!10387 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !10383, file: !10384, line: 17, baseType: !7, size: 32)
!10388 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !10383, file: !10384, line: 18, baseType: !344, size: 128, offset: 64)
!10389 = !DIDerivedType(tag: DW_TAG_member, name: "pages_sem", scope: !10356, file: !9710, line: 294, baseType: !10383, size: 192, offset: 1472)
!10390 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !10356, file: !9710, line: 295, baseType: !37, size: 32, offset: 1664)
!10391 = !DIDerivedType(tag: DW_TAG_member, name: "allowed_opcode", scope: !10356, file: !9710, line: 296, baseType: !1092, size: 16, offset: 1696)
!10392 = !DIDerivedType(tag: DW_TAG_member, name: "ent_arr", scope: !10356, file: !9710, line: 297, baseType: !10393, size: 2048, offset: 1728)
!10393 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10394, size: 2048, elements: !771)
!10394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10395, size: 64)
!10395 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_cmd_work_ent", file: !9710, line: 748, size: 2304, elements: !10396)
!10396 = !{!10397, !10398, !10423, !10424, !10425, !10426, !10431, !10432, !10433, !10434, !10435, !10436, !10438, !10439, !10456, !10457, !10458, !10459, !10460, !10461, !10462, !10463, !10464}
!10397 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !10395, file: !9710, line: 749, baseType: !372, size: 64)
!10398 = !DIDerivedType(tag: DW_TAG_member, name: "in", scope: !10395, file: !9710, line: 750, baseType: !10399, size: 64, offset: 64)
!10399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10400, size: 64)
!10400 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_cmd_msg", file: !9710, line: 228, size: 448, elements: !10401)
!10401 = !{!10402, !10403, !10411, !10412, !10416}
!10402 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !10400, file: !9710, line: 229, baseType: !344, size: 128)
!10403 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !10400, file: !9710, line: 230, baseType: !10404, size: 64, offset: 128)
!10404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10405, size: 64)
!10405 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cmd_msg_cache", file: !9710, line: 245, size: 192, elements: !10406)
!10406 = !{!10407, !10408, !10409, !10410}
!10407 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !10405, file: !9710, line: 248, baseType: !784)
!10408 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !10405, file: !9710, line: 249, baseType: !344, size: 128)
!10409 = !DIDerivedType(tag: DW_TAG_member, name: "max_inbox_size", scope: !10405, file: !9710, line: 250, baseType: !7, size: 32, offset: 128)
!10410 = !DIDerivedType(tag: DW_TAG_member, name: "num_ent", scope: !10405, file: !9710, line: 251, baseType: !7, size: 32, offset: 160)
!10411 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !10400, file: !9710, line: 231, baseType: !762, size: 32, offset: 192)
!10412 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !10400, file: !9710, line: 232, baseType: !10413, size: 128, offset: 224)
!10413 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_cmd_first", file: !9710, line: 224, size: 128, elements: !10414)
!10414 = !{!10415}
!10415 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !10413, file: !9710, line: 225, baseType: !2308, size: 128)
!10416 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !10400, file: !9710, line: 233, baseType: !10417, size: 64, offset: 384)
!10417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10418, size: 64)
!10418 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_cmd_mailbox", file: !9710, line: 312, size: 192, elements: !10419)
!10419 = !{!10420, !10421, !10422}
!10420 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !10418, file: !9710, line: 313, baseType: !625, size: 64)
!10421 = !DIDerivedType(tag: DW_TAG_member, name: "dma", scope: !10418, file: !9710, line: 314, baseType: !6871, size: 64, offset: 64)
!10422 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !10418, file: !9710, line: 315, baseType: !10417, size: 64, offset: 128)
!10423 = !DIDerivedType(tag: DW_TAG_member, name: "out", scope: !10395, file: !9710, line: 751, baseType: !10399, size: 64, offset: 128)
!10424 = !DIDerivedType(tag: DW_TAG_member, name: "uout", scope: !10395, file: !9710, line: 752, baseType: !625, size: 64, offset: 192)
!10425 = !DIDerivedType(tag: DW_TAG_member, name: "uout_size", scope: !10395, file: !9710, line: 753, baseType: !37, size: 32, offset: 256)
!10426 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !10395, file: !9710, line: 754, baseType: !10427, size: 64, offset: 320)
!10427 = !DIDerivedType(tag: DW_TAG_typedef, name: "mlx5_cmd_cbk_t", file: !9710, line: 742, baseType: !10428)
!10428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10429, size: 64)
!10429 = !DISubroutineType(types: !10430)
!10430 = !{null, !37, !625}
!10431 = !DIDerivedType(tag: DW_TAG_member, name: "cb_timeout_work", scope: !10395, file: !9710, line: 755, baseType: !2889, size: 704, offset: 384)
!10432 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !10395, file: !9710, line: 756, baseType: !625, size: 64, offset: 1088)
!10433 = !DIDerivedType(tag: DW_TAG_member, name: "idx", scope: !10395, file: !9710, line: 757, baseType: !37, size: 32, offset: 1152)
!10434 = !DIDerivedType(tag: DW_TAG_member, name: "handling", scope: !10395, file: !9710, line: 758, baseType: !1843, size: 192, offset: 1216)
!10435 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !10395, file: !9710, line: 759, baseType: !1843, size: 192, offset: 1408)
!10436 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !10395, file: !9710, line: 760, baseType: !10437, size: 64, offset: 1600)
!10437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10356, size: 64)
!10438 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !10395, file: !9710, line: 761, baseType: !1782, size: 256, offset: 1664)
!10439 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !10395, file: !9710, line: 762, baseType: !10440, size: 64, offset: 1920)
!10440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10441, size: 64)
!10441 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_cmd_layout", file: !9975, line: 524, size: 512, elements: !10442)
!10442 = !{!10443, !10444, !10446, !10447, !10448, !10449, !10450, !10451, !10452, !10453, !10454, !10455}
!10443 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !10441, file: !9975, line: 525, baseType: !1451, size: 8)
!10444 = !DIDerivedType(tag: DW_TAG_member, name: "rsvd0", scope: !10441, file: !9975, line: 526, baseType: !10445, size: 24, offset: 8)
!10445 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1451, size: 24, elements: !921)
!10446 = !DIDerivedType(tag: DW_TAG_member, name: "inlen", scope: !10441, file: !9975, line: 527, baseType: !521, size: 32, offset: 32)
!10447 = !DIDerivedType(tag: DW_TAG_member, name: "in_ptr", scope: !10441, file: !9975, line: 528, baseType: !10059, size: 64, offset: 64)
!10448 = !DIDerivedType(tag: DW_TAG_member, name: "in", scope: !10441, file: !9975, line: 529, baseType: !2308, size: 128, offset: 128)
!10449 = !DIDerivedType(tag: DW_TAG_member, name: "out", scope: !10441, file: !9975, line: 530, baseType: !2308, size: 128, offset: 256)
!10450 = !DIDerivedType(tag: DW_TAG_member, name: "out_ptr", scope: !10441, file: !9975, line: 531, baseType: !10059, size: 64, offset: 384)
!10451 = !DIDerivedType(tag: DW_TAG_member, name: "outlen", scope: !10441, file: !9975, line: 532, baseType: !521, size: 32, offset: 448)
!10452 = !DIDerivedType(tag: DW_TAG_member, name: "token", scope: !10441, file: !9975, line: 533, baseType: !1451, size: 8, offset: 480)
!10453 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !10441, file: !9975, line: 534, baseType: !1451, size: 8, offset: 488)
!10454 = !DIDerivedType(tag: DW_TAG_member, name: "rsvd1", scope: !10441, file: !9975, line: 535, baseType: !1451, size: 8, offset: 496)
!10455 = !DIDerivedType(tag: DW_TAG_member, name: "status_own", scope: !10441, file: !9975, line: 536, baseType: !1451, size: 8, offset: 504)
!10456 = !DIDerivedType(tag: DW_TAG_member, name: "ret", scope: !10395, file: !9710, line: 763, baseType: !37, size: 32, offset: 1984)
!10457 = !DIDerivedType(tag: DW_TAG_member, name: "page_queue", scope: !10395, file: !9710, line: 764, baseType: !37, size: 32, offset: 2016)
!10458 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !10395, file: !9710, line: 765, baseType: !1451, size: 8, offset: 2048)
!10459 = !DIDerivedType(tag: DW_TAG_member, name: "token", scope: !10395, file: !9710, line: 766, baseType: !1451, size: 8, offset: 2056)
!10460 = !DIDerivedType(tag: DW_TAG_member, name: "ts1", scope: !10395, file: !9710, line: 767, baseType: !391, size: 64, offset: 2112)
!10461 = !DIDerivedType(tag: DW_TAG_member, name: "ts2", scope: !10395, file: !9710, line: 768, baseType: !391, size: 64, offset: 2176)
!10462 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !10395, file: !9710, line: 769, baseType: !1092, size: 16, offset: 2240)
!10463 = !DIDerivedType(tag: DW_TAG_member, name: "polling", scope: !10395, file: !9710, line: 770, baseType: !595, size: 8, offset: 2256)
!10464 = !DIDerivedType(tag: DW_TAG_member, name: "refcnt", scope: !10395, file: !9710, line: 772, baseType: !1325, size: 32, offset: 2272)
!10465 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !10356, file: !9710, line: 298, baseType: !10466, size: 64, offset: 3776)
!10466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10467, size: 64)
!10467 = !DICompositeType(tag: DW_TAG_structure_type, name: "dma_pool", file: !10468, line: 21, flags: DIFlagFwdDecl)
!10468 = !DIFile(filename: "./include/linux/dmapool.h", directory: "/home/lizy2001/genbc/linux")
!10469 = !DIDerivedType(tag: DW_TAG_member, name: "dbg", scope: !10356, file: !9710, line: 299, baseType: !10470, size: 256, offset: 3840)
!10470 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_cmd_debug", file: !9710, line: 236, size: 256, elements: !10471)
!10471 = !{!10472, !10473, !10474, !10475, !10476, !10477}
!10472 = !DIDerivedType(tag: DW_TAG_member, name: "dbg_root", scope: !10470, file: !9710, line: 237, baseType: !728, size: 64)
!10473 = !DIDerivedType(tag: DW_TAG_member, name: "in_msg", scope: !10470, file: !9710, line: 238, baseType: !625, size: 64, offset: 64)
!10474 = !DIDerivedType(tag: DW_TAG_member, name: "out_msg", scope: !10470, file: !9710, line: 239, baseType: !625, size: 64, offset: 128)
!10475 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !10470, file: !9710, line: 240, baseType: !1451, size: 8, offset: 192)
!10476 = !DIDerivedType(tag: DW_TAG_member, name: "inlen", scope: !10470, file: !9710, line: 241, baseType: !1092, size: 16, offset: 208)
!10477 = !DIDerivedType(tag: DW_TAG_member, name: "outlen", scope: !10470, file: !9710, line: 242, baseType: !1092, size: 16, offset: 224)
!10478 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !10356, file: !9710, line: 300, baseType: !10479, size: 960, offset: 4096)
!10479 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10405, size: 960, elements: !1643)
!10480 = !DIDerivedType(tag: DW_TAG_member, name: "checksum_disabled", scope: !10356, file: !9710, line: 301, baseType: !37, size: 32, offset: 5056)
!10481 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !10356, file: !9710, line: 302, baseType: !10482, size: 64, offset: 5120)
!10482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10483, size: 64)
!10483 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_cmd_stats", file: !9710, line: 258, size: 192, elements: !10484)
!10484 = !{!10485, !10486, !10487, !10488}
!10485 = !DIDerivedType(tag: DW_TAG_member, name: "sum", scope: !10483, file: !9710, line: 259, baseType: !391, size: 64)
!10486 = !DIDerivedType(tag: DW_TAG_member, name: "n", scope: !10483, file: !9710, line: 260, baseType: !391, size: 64, offset: 64)
!10487 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !10483, file: !9710, line: 261, baseType: !728, size: 64, offset: 128)
!10488 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !10483, file: !9710, line: 263, baseType: !784, offset: 192)
!10489 = !DIDerivedType(tag: DW_TAG_member, name: "port_caps", scope: !10074, file: !9710, line: 680, baseType: !10490, size: 192, offset: 6144)
!10490 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10491, size: 192, elements: !533)
!10491 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_port_caps", file: !9710, line: 305, size: 96, elements: !10492)
!10492 = !{!10493, !10494, !10495, !10496}
!10493 = !DIDerivedType(tag: DW_TAG_member, name: "gid_table_len", scope: !10491, file: !9710, line: 306, baseType: !37, size: 32)
!10494 = !DIDerivedType(tag: DW_TAG_member, name: "pkey_table_len", scope: !10491, file: !9710, line: 307, baseType: !37, size: 32, offset: 32)
!10495 = !DIDerivedType(tag: DW_TAG_member, name: "ext_port_cap", scope: !10491, file: !9710, line: 308, baseType: !1451, size: 8, offset: 64)
!10496 = !DIDerivedType(tag: DW_TAG_member, name: "has_smi", scope: !10491, file: !9710, line: 309, baseType: !595, size: 8, offset: 72)
!10497 = !DIDerivedType(tag: DW_TAG_member, name: "caps", scope: !10074, file: !9710, line: 689, baseType: !10498, size: 1446816, offset: 6336)
!10498 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !10074, file: !9710, line: 681, size: 1446816, elements: !10499)
!10499 = !{!10500, !10504, !10505, !10506, !10510, !10511, !10514}
!10500 = !DIDerivedType(tag: DW_TAG_member, name: "hca_cur", scope: !10498, file: !9710, line: 682, baseType: !10501, size: 720896)
!10501 = !DICompositeType(tag: DW_TAG_array_type, baseType: !762, size: 720896, elements: !10502)
!10502 = !{!5218, !10503}
!10503 = !DISubrange(count: 1024)
!10504 = !DIDerivedType(tag: DW_TAG_member, name: "hca_max", scope: !10498, file: !9710, line: 683, baseType: !10501, size: 720896, offset: 720896)
!10505 = !DIDerivedType(tag: DW_TAG_member, name: "pcam", scope: !10498, file: !9710, line: 684, baseType: !5835, size: 640, offset: 1441792)
!10506 = !DIDerivedType(tag: DW_TAG_member, name: "mcam", scope: !10498, file: !9710, line: 685, baseType: !10507, size: 1728, offset: 1442432)
!10507 = !DICompositeType(tag: DW_TAG_array_type, baseType: !762, size: 1728, elements: !10508)
!10508 = !{!922, !10509}
!10509 = !DISubrange(count: 18)
!10510 = !DIDerivedType(tag: DW_TAG_member, name: "fpga", scope: !10498, file: !9710, line: 686, baseType: !5864, size: 2048, offset: 1444160)
!10511 = !DIDerivedType(tag: DW_TAG_member, name: "qcam", scope: !10498, file: !9710, line: 687, baseType: !10512, size: 576, offset: 1446208)
!10512 = !DICompositeType(tag: DW_TAG_array_type, baseType: !762, size: 576, elements: !10513)
!10513 = !{!10509}
!10514 = !DIDerivedType(tag: DW_TAG_member, name: "embedded_cpu", scope: !10498, file: !9710, line: 688, baseType: !1451, size: 8, offset: 1446784)
!10515 = !DIDerivedType(tag: DW_TAG_member, name: "sys_image_guid", scope: !10074, file: !9710, line: 690, baseType: !391, size: 64, offset: 1453184)
!10516 = !DIDerivedType(tag: DW_TAG_member, name: "iseg_base", scope: !10074, file: !9710, line: 691, baseType: !5762, size: 64, offset: 1453248)
!10517 = !DIDerivedType(tag: DW_TAG_member, name: "iseg", scope: !10074, file: !9710, line: 692, baseType: !10518, size: 64, offset: 1453312)
!10518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10519, size: 64)
!10519 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_init_seg", file: !9975, line: 565, size: 65664, elements: !10520)
!10520 = !{!10521, !10522, !10523, !10524, !10525, !10526, !10527, !10531, !10532, !10548, !10552, !10553, !10554, !10555, !10556, !10560, !10561, !10562}
!10521 = !DIDerivedType(tag: DW_TAG_member, name: "fw_rev", scope: !10519, file: !9975, line: 566, baseType: !521, size: 32)
!10522 = !DIDerivedType(tag: DW_TAG_member, name: "cmdif_rev_fw_sub", scope: !10519, file: !9975, line: 567, baseType: !521, size: 32, offset: 32)
!10523 = !DIDerivedType(tag: DW_TAG_member, name: "rsvd0", scope: !10519, file: !9975, line: 568, baseType: !8655, size: 64, offset: 64)
!10524 = !DIDerivedType(tag: DW_TAG_member, name: "cmdq_addr_h", scope: !10519, file: !9975, line: 569, baseType: !521, size: 32, offset: 128)
!10525 = !DIDerivedType(tag: DW_TAG_member, name: "cmdq_addr_l_sz", scope: !10519, file: !9975, line: 570, baseType: !521, size: 32, offset: 160)
!10526 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_dbell", scope: !10519, file: !9975, line: 571, baseType: !521, size: 32, offset: 192)
!10527 = !DIDerivedType(tag: DW_TAG_member, name: "rsvd1", scope: !10519, file: !9975, line: 572, baseType: !10528, size: 3840, offset: 224)
!10528 = !DICompositeType(tag: DW_TAG_array_type, baseType: !521, size: 3840, elements: !10529)
!10529 = !{!10530}
!10530 = !DISubrange(count: 120)
!10531 = !DIDerivedType(tag: DW_TAG_member, name: "initializing", scope: !10519, file: !9975, line: 573, baseType: !521, size: 32, offset: 4064)
!10532 = !DIDerivedType(tag: DW_TAG_member, name: "health", scope: !10519, file: !9975, line: 574, baseType: !10533, size: 512, offset: 4096)
!10533 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "health_buffer", file: !9975, line: 543, size: 512, elements: !10534)
!10534 = !{!10535, !10537, !10539, !10540, !10541, !10542, !10543, !10544, !10545, !10546, !10547}
!10535 = !DIDerivedType(tag: DW_TAG_member, name: "assert_var", scope: !10533, file: !9975, line: 544, baseType: !10536, size: 160)
!10536 = !DICompositeType(tag: DW_TAG_array_type, baseType: !521, size: 160, elements: !1643)
!10537 = !DIDerivedType(tag: DW_TAG_member, name: "rsvd0", scope: !10533, file: !9975, line: 545, baseType: !10538, size: 96, offset: 160)
!10538 = !DICompositeType(tag: DW_TAG_array_type, baseType: !521, size: 96, elements: !921)
!10539 = !DIDerivedType(tag: DW_TAG_member, name: "assert_exit_ptr", scope: !10533, file: !9975, line: 546, baseType: !521, size: 32, offset: 256)
!10540 = !DIDerivedType(tag: DW_TAG_member, name: "assert_callra", scope: !10533, file: !9975, line: 547, baseType: !521, size: 32, offset: 288)
!10541 = !DIDerivedType(tag: DW_TAG_member, name: "rsvd1", scope: !10533, file: !9975, line: 548, baseType: !8655, size: 64, offset: 320)
!10542 = !DIDerivedType(tag: DW_TAG_member, name: "fw_ver", scope: !10533, file: !9975, line: 549, baseType: !521, size: 32, offset: 384)
!10543 = !DIDerivedType(tag: DW_TAG_member, name: "hw_id", scope: !10533, file: !9975, line: 550, baseType: !521, size: 32, offset: 416)
!10544 = !DIDerivedType(tag: DW_TAG_member, name: "rfr", scope: !10533, file: !9975, line: 551, baseType: !521, size: 32, offset: 448)
!10545 = !DIDerivedType(tag: DW_TAG_member, name: "irisc_index", scope: !10533, file: !9975, line: 552, baseType: !1451, size: 8, offset: 480)
!10546 = !DIDerivedType(tag: DW_TAG_member, name: "synd", scope: !10533, file: !9975, line: 553, baseType: !1451, size: 8, offset: 488)
!10547 = !DIDerivedType(tag: DW_TAG_member, name: "ext_synd", scope: !10533, file: !9975, line: 554, baseType: !544, size: 16, offset: 496)
!10548 = !DIDerivedType(tag: DW_TAG_member, name: "rsvd2", scope: !10519, file: !9975, line: 575, baseType: !10549, size: 28160, offset: 4608)
!10549 = !DICompositeType(tag: DW_TAG_array_type, baseType: !521, size: 28160, elements: !10550)
!10550 = !{!10551}
!10551 = !DISubrange(count: 880)
!10552 = !DIDerivedType(tag: DW_TAG_member, name: "internal_timer_h", scope: !10519, file: !9975, line: 576, baseType: !521, size: 32, offset: 32768)
!10553 = !DIDerivedType(tag: DW_TAG_member, name: "internal_timer_l", scope: !10519, file: !9975, line: 577, baseType: !521, size: 32, offset: 32800)
!10554 = !DIDerivedType(tag: DW_TAG_member, name: "rsvd3", scope: !10519, file: !9975, line: 578, baseType: !8655, size: 64, offset: 32832)
!10555 = !DIDerivedType(tag: DW_TAG_member, name: "health_counter", scope: !10519, file: !9975, line: 579, baseType: !521, size: 32, offset: 32896)
!10556 = !DIDerivedType(tag: DW_TAG_member, name: "rsvd4", scope: !10519, file: !9975, line: 580, baseType: !10557, size: 32608, offset: 32928)
!10557 = !DICompositeType(tag: DW_TAG_array_type, baseType: !521, size: 32608, elements: !10558)
!10558 = !{!10559}
!10559 = !DISubrange(count: 1019)
!10560 = !DIDerivedType(tag: DW_TAG_member, name: "ieee1588_clk", scope: !10519, file: !9975, line: 581, baseType: !10059, size: 64, offset: 65536)
!10561 = !DIDerivedType(tag: DW_TAG_member, name: "ieee1588_clk_type", scope: !10519, file: !9975, line: 582, baseType: !521, size: 32, offset: 65600)
!10562 = !DIDerivedType(tag: DW_TAG_member, name: "clr_intx", scope: !10519, file: !9975, line: 583, baseType: !521, size: 32, offset: 65632)
!10563 = !DIDerivedType(tag: DW_TAG_member, name: "bar_addr", scope: !10074, file: !9710, line: 693, baseType: !5762, size: 64, offset: 1453376)
!10564 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !10074, file: !9710, line: 694, baseType: !9723, size: 32, offset: 1453440)
!10565 = !DIDerivedType(tag: DW_TAG_member, name: "intf_state_mutex", scope: !10074, file: !9710, line: 696, baseType: !1008, size: 192, offset: 1453504)
!10566 = !DIDerivedType(tag: DW_TAG_member, name: "intf_state", scope: !10074, file: !9710, line: 697, baseType: !372, size: 64, offset: 1453696)
!10567 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !10074, file: !9710, line: 698, baseType: !10568, size: 8128, offset: 1453760)
!10568 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_priv", file: !9710, line: 537, size: 8128, elements: !10569)
!10569 = !{!10570, !10573, !10576, !10577, !10578, !10579, !10580, !10581, !10582, !10583, !10584, !10606, !10607, !10608, !10609, !10610, !10611, !10612, !10613, !10614, !10615, !10616, !10617, !10618, !10621, !10624, !10627, !10630, !10645, !10648, !10651, !10654, !10666, !10693, !10709, !10718}
!10570 = !DIDerivedType(tag: DW_TAG_member, name: "irq_table", scope: !10568, file: !9710, line: 539, baseType: !10571, size: 64)
!10571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10572, size: 64)
!10572 = !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_irq_table", file: !9710, line: 506, flags: DIFlagFwdDecl)
!10573 = !DIDerivedType(tag: DW_TAG_member, name: "eq_table", scope: !10568, file: !9710, line: 540, baseType: !10574, size: 64, offset: 64)
!10574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10575, size: 64)
!10575 = !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_eq_table", file: !9710, line: 505, flags: DIFlagFwdDecl)
!10576 = !DIDerivedType(tag: DW_TAG_member, name: "pg_nb", scope: !10568, file: !9710, line: 543, baseType: !10359, size: 256, offset: 128)
!10577 = !DIDerivedType(tag: DW_TAG_member, name: "pg_wq", scope: !10568, file: !9710, line: 544, baseType: !2894, size: 64, offset: 384)
!10578 = !DIDerivedType(tag: DW_TAG_member, name: "page_root_xa", scope: !10568, file: !9710, line: 545, baseType: !1607, size: 128, offset: 448)
!10579 = !DIDerivedType(tag: DW_TAG_member, name: "fw_pages", scope: !10568, file: !9710, line: 546, baseType: !37, size: 32, offset: 576)
!10580 = !DIDerivedType(tag: DW_TAG_member, name: "reg_pages", scope: !10568, file: !9710, line: 547, baseType: !443, size: 32, offset: 608)
!10581 = !DIDerivedType(tag: DW_TAG_member, name: "free_list", scope: !10568, file: !9710, line: 548, baseType: !344, size: 128, offset: 640)
!10582 = !DIDerivedType(tag: DW_TAG_member, name: "vfs_pages", scope: !10568, file: !9710, line: 549, baseType: !37, size: 32, offset: 768)
!10583 = !DIDerivedType(tag: DW_TAG_member, name: "peer_pf_pages", scope: !10568, file: !9710, line: 550, baseType: !37, size: 32, offset: 800)
!10584 = !DIDerivedType(tag: DW_TAG_member, name: "health", scope: !10568, file: !9710, line: 552, baseType: !10585, size: 2112, offset: 832)
!10585 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_core_health", file: !9710, line: 426, size: 2112, elements: !10586)
!10586 = !{!10587, !10589, !10590, !10591, !10592, !10593, !10594, !10595, !10596, !10597, !10598, !10599, !10600, !10601, !10602, !10605}
!10587 = !DIDerivedType(tag: DW_TAG_member, name: "health", scope: !10585, file: !9710, line: 427, baseType: !10588, size: 64)
!10588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10533, size: 64)
!10589 = !DIDerivedType(tag: DW_TAG_member, name: "health_counter", scope: !10585, file: !9710, line: 428, baseType: !10056, size: 64, offset: 64)
!10590 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !10585, file: !9710, line: 429, baseType: !2314, size: 320, offset: 128)
!10591 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !10585, file: !9710, line: 430, baseType: !762, size: 32, offset: 448)
!10592 = !DIDerivedType(tag: DW_TAG_member, name: "miss_counter", scope: !10585, file: !9710, line: 431, baseType: !37, size: 32, offset: 480)
!10593 = !DIDerivedType(tag: DW_TAG_member, name: "synd", scope: !10585, file: !9710, line: 432, baseType: !1451, size: 8, offset: 512)
!10594 = !DIDerivedType(tag: DW_TAG_member, name: "fatal_error", scope: !10585, file: !9710, line: 433, baseType: !762, size: 32, offset: 544)
!10595 = !DIDerivedType(tag: DW_TAG_member, name: "crdump_size", scope: !10585, file: !9710, line: 434, baseType: !762, size: 32, offset: 576)
!10596 = !DIDerivedType(tag: DW_TAG_member, name: "wq_lock", scope: !10585, file: !9710, line: 436, baseType: !784, offset: 608)
!10597 = !DIDerivedType(tag: DW_TAG_member, name: "wq", scope: !10585, file: !9710, line: 437, baseType: !2894, size: 64, offset: 640)
!10598 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !10585, file: !9710, line: 438, baseType: !372, size: 64, offset: 704)
!10599 = !DIDerivedType(tag: DW_TAG_member, name: "fatal_report_work", scope: !10585, file: !9710, line: 439, baseType: !1782, size: 256, offset: 768)
!10600 = !DIDerivedType(tag: DW_TAG_member, name: "report_work", scope: !10585, file: !9710, line: 440, baseType: !1782, size: 256, offset: 1024)
!10601 = !DIDerivedType(tag: DW_TAG_member, name: "recover_work", scope: !10585, file: !9710, line: 441, baseType: !2889, size: 704, offset: 1280)
!10602 = !DIDerivedType(tag: DW_TAG_member, name: "fw_reporter", scope: !10585, file: !9710, line: 442, baseType: !10603, size: 64, offset: 1984)
!10603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10604, size: 64)
!10604 = !DICompositeType(tag: DW_TAG_structure_type, name: "devlink_health_reporter", file: !8053, line: 629, flags: DIFlagFwdDecl)
!10605 = !DIDerivedType(tag: DW_TAG_member, name: "fw_fatal_reporter", scope: !10585, file: !9710, line: 443, baseType: !10603, size: 64, offset: 2048)
!10606 = !DIDerivedType(tag: DW_TAG_member, name: "qp_debugfs", scope: !10568, file: !9710, line: 555, baseType: !728, size: 64, offset: 2944)
!10607 = !DIDerivedType(tag: DW_TAG_member, name: "eq_debugfs", scope: !10568, file: !9710, line: 556, baseType: !728, size: 64, offset: 3008)
!10608 = !DIDerivedType(tag: DW_TAG_member, name: "cq_debugfs", scope: !10568, file: !9710, line: 557, baseType: !728, size: 64, offset: 3072)
!10609 = !DIDerivedType(tag: DW_TAG_member, name: "cmdif_debugfs", scope: !10568, file: !9710, line: 558, baseType: !728, size: 64, offset: 3136)
!10610 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_mutex", scope: !10568, file: !9710, line: 563, baseType: !1008, size: 192, offset: 3200)
!10611 = !DIDerivedType(tag: DW_TAG_member, name: "numa_node", scope: !10568, file: !9710, line: 564, baseType: !37, size: 32, offset: 3392)
!10612 = !DIDerivedType(tag: DW_TAG_member, name: "pgdir_mutex", scope: !10568, file: !9710, line: 566, baseType: !1008, size: 192, offset: 3456)
!10613 = !DIDerivedType(tag: DW_TAG_member, name: "pgdir_list", scope: !10568, file: !9710, line: 567, baseType: !344, size: 128, offset: 3648)
!10614 = !DIDerivedType(tag: DW_TAG_member, name: "dbg_root", scope: !10568, file: !9710, line: 569, baseType: !728, size: 64, offset: 3776)
!10615 = !DIDerivedType(tag: DW_TAG_member, name: "dev_list", scope: !10568, file: !9710, line: 571, baseType: !344, size: 128, offset: 3840)
!10616 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_list", scope: !10568, file: !9710, line: 572, baseType: !344, size: 128, offset: 3968)
!10617 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_lock", scope: !10568, file: !9710, line: 573, baseType: !784, offset: 4096)
!10618 = !DIDerivedType(tag: DW_TAG_member, name: "events", scope: !10568, file: !9710, line: 574, baseType: !10619, size: 64, offset: 4096)
!10619 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10620, size: 64)
!10620 = !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_events", file: !9710, line: 499, flags: DIFlagFwdDecl)
!10621 = !DIDerivedType(tag: DW_TAG_member, name: "steering", scope: !10568, file: !9710, line: 576, baseType: !10622, size: 64, offset: 4160)
!10622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10623, size: 64)
!10623 = !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_flow_steering", file: !9710, line: 576, flags: DIFlagFwdDecl)
!10624 = !DIDerivedType(tag: DW_TAG_member, name: "mpfs", scope: !10568, file: !9710, line: 577, baseType: !10625, size: 64, offset: 4224)
!10625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10626, size: 64)
!10626 = !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_mpfs", file: !9710, line: 500, flags: DIFlagFwdDecl)
!10627 = !DIDerivedType(tag: DW_TAG_member, name: "eswitch", scope: !10568, file: !9710, line: 578, baseType: !10628, size: 64, offset: 4288)
!10628 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10629, size: 64)
!10629 = !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_eswitch", file: !9710, line: 501, flags: DIFlagFwdDecl)
!10630 = !DIDerivedType(tag: DW_TAG_member, name: "sriov", scope: !10568, file: !9710, line: 579, baseType: !10631, size: 128, offset: 4352)
!10631 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_core_sriov", file: !9710, line: 467, size: 128, elements: !10632)
!10632 = !{!10633, !10643, !10644}
!10633 = !DIDerivedType(tag: DW_TAG_member, name: "vfs_ctx", scope: !10631, file: !9710, line: 468, baseType: !10634, size: 64)
!10634 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10635, size: 64)
!10635 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_vf_context", file: !9710, line: 455, size: 256, elements: !10636)
!10636 = !{!10637, !10638, !10639, !10640, !10641, !10642}
!10637 = !DIDerivedType(tag: DW_TAG_member, name: "enabled", scope: !10635, file: !9710, line: 456, baseType: !37, size: 32)
!10638 = !DIDerivedType(tag: DW_TAG_member, name: "port_guid", scope: !10635, file: !9710, line: 457, baseType: !391, size: 64, offset: 64)
!10639 = !DIDerivedType(tag: DW_TAG_member, name: "node_guid", scope: !10635, file: !9710, line: 458, baseType: !391, size: 64, offset: 128)
!10640 = !DIDerivedType(tag: DW_TAG_member, name: "port_guid_valid", scope: !10635, file: !9710, line: 462, baseType: !1451, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!10641 = !DIDerivedType(tag: DW_TAG_member, name: "node_guid_valid", scope: !10635, file: !9710, line: 463, baseType: !1451, size: 1, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!10642 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !10635, file: !9710, line: 464, baseType: !9728, size: 32, offset: 224)
!10643 = !DIDerivedType(tag: DW_TAG_member, name: "num_vfs", scope: !10631, file: !9710, line: 469, baseType: !37, size: 32, offset: 64)
!10644 = !DIDerivedType(tag: DW_TAG_member, name: "max_vfs", scope: !10631, file: !9710, line: 470, baseType: !1092, size: 16, offset: 96)
!10645 = !DIDerivedType(tag: DW_TAG_member, name: "lag", scope: !10568, file: !9710, line: 580, baseType: !10646, size: 64, offset: 4480)
!10646 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10647, size: 64)
!10647 = !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_lag", file: !9710, line: 502, flags: DIFlagFwdDecl)
!10648 = !DIDerivedType(tag: DW_TAG_member, name: "devcom", scope: !10568, file: !9710, line: 581, baseType: !10649, size: 64, offset: 4544)
!10649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10650, size: 64)
!10650 = !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_devcom", file: !9710, line: 503, flags: DIFlagFwdDecl)
!10651 = !DIDerivedType(tag: DW_TAG_member, name: "fw_reset", scope: !10568, file: !9710, line: 582, baseType: !10652, size: 64, offset: 4608)
!10652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10653, size: 64)
!10653 = !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_fw_reset", file: !9710, line: 504, flags: DIFlagFwdDecl)
!10654 = !DIDerivedType(tag: DW_TAG_member, name: "roce", scope: !10568, file: !9710, line: 583, baseType: !10655, size: 192, offset: 4672)
!10655 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_core_roce", file: !9710, line: 531, size: 192, elements: !10656)
!10656 = !{!10657, !10660, !10663}
!10657 = !DIDerivedType(tag: DW_TAG_member, name: "ft", scope: !10655, file: !9710, line: 532, baseType: !10658, size: 64)
!10658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10659, size: 64)
!10659 = !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_flow_table", file: !9710, line: 532, flags: DIFlagFwdDecl)
!10660 = !DIDerivedType(tag: DW_TAG_member, name: "fg", scope: !10655, file: !9710, line: 533, baseType: !10661, size: 64, offset: 64)
!10661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10662, size: 64)
!10662 = !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_flow_group", file: !9710, line: 533, flags: DIFlagFwdDecl)
!10663 = !DIDerivedType(tag: DW_TAG_member, name: "allow_rule", scope: !10655, file: !9710, line: 534, baseType: !10664, size: 64, offset: 128)
!10664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10665, size: 64)
!10665 = !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_flow_handle", file: !9710, line: 534, flags: DIFlagFwdDecl)
!10666 = !DIDerivedType(tag: DW_TAG_member, name: "fc_stats", scope: !10568, file: !9710, line: 584, baseType: !10667, size: 2176, offset: 4864)
!10667 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_fc_stats", file: !9710, line: 484, size: 2176, elements: !10668)
!10668 = !{!10669, !10670, !10671, !10672, !10676, !10677, !10678, !10679, !10680, !10681, !10682}
!10669 = !DIDerivedType(tag: DW_TAG_member, name: "counters_idr_lock", scope: !10667, file: !9710, line: 485, baseType: !784)
!10670 = !DIDerivedType(tag: DW_TAG_member, name: "counters_idr", scope: !10667, file: !9710, line: 486, baseType: !1603, size: 192)
!10671 = !DIDerivedType(tag: DW_TAG_member, name: "counters", scope: !10667, file: !9710, line: 487, baseType: !344, size: 128, offset: 192)
!10672 = !DIDerivedType(tag: DW_TAG_member, name: "addlist", scope: !10667, file: !9710, line: 488, baseType: !10673, size: 64, offset: 320)
!10673 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "llist_head", file: !1047, line: 54, size: 64, elements: !10674)
!10674 = !{!10675}
!10675 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !10673, file: !1047, line: 55, baseType: !1050, size: 64)
!10676 = !DIDerivedType(tag: DW_TAG_member, name: "dellist", scope: !10667, file: !9710, line: 489, baseType: !10673, size: 64, offset: 384)
!10677 = !DIDerivedType(tag: DW_TAG_member, name: "wq", scope: !10667, file: !9710, line: 491, baseType: !2894, size: 64, offset: 448)
!10678 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !10667, file: !9710, line: 492, baseType: !2889, size: 704, offset: 512)
!10679 = !DIDerivedType(tag: DW_TAG_member, name: "next_query", scope: !10667, file: !9710, line: 493, baseType: !372, size: 64, offset: 1216)
!10680 = !DIDerivedType(tag: DW_TAG_member, name: "sampling_interval", scope: !10667, file: !9710, line: 494, baseType: !372, size: 64, offset: 1280)
!10681 = !DIDerivedType(tag: DW_TAG_member, name: "bulk_query_out", scope: !10667, file: !9710, line: 495, baseType: !1514, size: 64, offset: 1344)
!10682 = !DIDerivedType(tag: DW_TAG_member, name: "fc_pool", scope: !10667, file: !9710, line: 496, baseType: !10683, size: 768, offset: 1408)
!10683 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_fc_pool", file: !9710, line: 473, size: 768, elements: !10684)
!10684 = !{!10685, !10686, !10687, !10688, !10689, !10690, !10691, !10692}
!10685 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !10683, file: !9710, line: 474, baseType: !10073, size: 64)
!10686 = !DIDerivedType(tag: DW_TAG_member, name: "pool_lock", scope: !10683, file: !9710, line: 475, baseType: !1008, size: 192, offset: 64)
!10687 = !DIDerivedType(tag: DW_TAG_member, name: "fully_used", scope: !10683, file: !9710, line: 476, baseType: !344, size: 128, offset: 256)
!10688 = !DIDerivedType(tag: DW_TAG_member, name: "partially_used", scope: !10683, file: !9710, line: 477, baseType: !344, size: 128, offset: 384)
!10689 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !10683, file: !9710, line: 478, baseType: !344, size: 128, offset: 512)
!10690 = !DIDerivedType(tag: DW_TAG_member, name: "available_fcs", scope: !10683, file: !9710, line: 479, baseType: !37, size: 32, offset: 640)
!10691 = !DIDerivedType(tag: DW_TAG_member, name: "used_fcs", scope: !10683, file: !9710, line: 480, baseType: !37, size: 32, offset: 672)
!10692 = !DIDerivedType(tag: DW_TAG_member, name: "threshold", scope: !10683, file: !9710, line: 481, baseType: !37, size: 32, offset: 704)
!10693 = !DIDerivedType(tag: DW_TAG_member, name: "rl_table", scope: !10568, file: !9710, line: 585, baseType: !10694, size: 384, offset: 7040)
!10694 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_rl_table", file: !9710, line: 522, size: 384, elements: !10695)
!10695 = !{!10696, !10697, !10698, !10699, !10700}
!10696 = !DIDerivedType(tag: DW_TAG_member, name: "rl_lock", scope: !10694, file: !9710, line: 524, baseType: !1008, size: 192)
!10697 = !DIDerivedType(tag: DW_TAG_member, name: "max_size", scope: !10694, file: !9710, line: 525, baseType: !1092, size: 16, offset: 192)
!10698 = !DIDerivedType(tag: DW_TAG_member, name: "max_rate", scope: !10694, file: !9710, line: 526, baseType: !762, size: 32, offset: 224)
!10699 = !DIDerivedType(tag: DW_TAG_member, name: "min_rate", scope: !10694, file: !9710, line: 527, baseType: !762, size: 32, offset: 256)
!10700 = !DIDerivedType(tag: DW_TAG_member, name: "rl_entry", scope: !10694, file: !9710, line: 528, baseType: !10701, size: 64, offset: 320)
!10701 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10702, size: 64)
!10702 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_rl_entry", file: !9710, line: 514, size: 576, elements: !10703)
!10703 = !{!10704, !10705, !10706, !10707, !10708}
!10704 = !DIDerivedType(tag: DW_TAG_member, name: "rl_raw", scope: !10702, file: !9710, line: 515, baseType: !7903, size: 384)
!10705 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !10702, file: !9710, line: 516, baseType: !1092, size: 16, offset: 384)
!10706 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !10702, file: !9710, line: 517, baseType: !391, size: 64, offset: 448)
!10707 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !10702, file: !9710, line: 518, baseType: !1092, size: 16, offset: 512)
!10708 = !DIDerivedType(tag: DW_TAG_member, name: "dedicated", scope: !10702, file: !9710, line: 519, baseType: !1451, size: 1, offset: 528, flags: DIFlagBitField, extraData: i64 528)
!10709 = !DIDerivedType(tag: DW_TAG_member, name: "bfregs", scope: !10568, file: !9710, line: 587, baseType: !10710, size: 640, offset: 7424)
!10710 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_bfreg_data", file: !9710, line: 413, size: 640, elements: !10711)
!10711 = !{!10712, !10717}
!10712 = !DIDerivedType(tag: DW_TAG_member, name: "reg_head", scope: !10710, file: !9710, line: 414, baseType: !10713, size: 320)
!10713 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_bfreg_head", file: !9710, line: 407, size: 320, elements: !10714)
!10714 = !{!10715, !10716}
!10715 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !10713, file: !9710, line: 409, baseType: !1008, size: 192)
!10716 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !10713, file: !9710, line: 410, baseType: !344, size: 128, offset: 192)
!10717 = !DIDerivedType(tag: DW_TAG_member, name: "wc_head", scope: !10710, file: !9710, line: 415, baseType: !10713, size: 320, offset: 320)
!10718 = !DIDerivedType(tag: DW_TAG_member, name: "uar", scope: !10568, file: !9710, line: 588, baseType: !10719, size: 64, offset: 8064)
!10719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10720, size: 64)
!10720 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_uars_page", file: !9710, line: 393, size: 640, elements: !10721)
!10721 = !{!10722, !10723, !10724, !10725, !10726, !10727, !10728, !10729, !10730, !10731, !10732}
!10722 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !10720, file: !9710, line: 394, baseType: !625, size: 64)
!10723 = !DIDerivedType(tag: DW_TAG_member, name: "wc", scope: !10720, file: !9710, line: 395, baseType: !595, size: 8, offset: 64)
!10724 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !10720, file: !9710, line: 396, baseType: !762, size: 32, offset: 96)
!10725 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !10720, file: !9710, line: 397, baseType: !344, size: 128, offset: 128)
!10726 = !DIDerivedType(tag: DW_TAG_member, name: "bfregs", scope: !10720, file: !9710, line: 398, baseType: !7, size: 32, offset: 256)
!10727 = !DIDerivedType(tag: DW_TAG_member, name: "reg_bitmap", scope: !10720, file: !9710, line: 399, baseType: !2513, size: 64, offset: 320)
!10728 = !DIDerivedType(tag: DW_TAG_member, name: "fp_bitmap", scope: !10720, file: !9710, line: 400, baseType: !2513, size: 64, offset: 384)
!10729 = !DIDerivedType(tag: DW_TAG_member, name: "reg_avail", scope: !10720, file: !9710, line: 401, baseType: !7, size: 32, offset: 448)
!10730 = !DIDerivedType(tag: DW_TAG_member, name: "fp_avail", scope: !10720, file: !9710, line: 402, baseType: !7, size: 32, offset: 480)
!10731 = !DIDerivedType(tag: DW_TAG_member, name: "ref_count", scope: !10720, file: !9710, line: 403, baseType: !1598, size: 32, offset: 512)
!10732 = !DIDerivedType(tag: DW_TAG_member, name: "mdev", scope: !10720, file: !9710, line: 404, baseType: !10073, size: 64, offset: 576)
!10733 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !10074, file: !9710, line: 699, baseType: !10734, size: 64, offset: 1461888)
!10734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10735, size: 64)
!10735 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_profile", file: !9710, line: 1117, size: 1600, elements: !10736)
!10736 = !{!10737, !10738, !10739}
!10737 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !10735, file: !9710, line: 1118, baseType: !391, size: 64)
!10738 = !DIDerivedType(tag: DW_TAG_member, name: "log_max_qp", scope: !10735, file: !9710, line: 1119, baseType: !1451, size: 8, offset: 64)
!10739 = !DIDerivedType(tag: DW_TAG_member, name: "mr_cache", scope: !10735, file: !9710, line: 1123, baseType: !10740, size: 1472, offset: 96)
!10740 = !DICompositeType(tag: DW_TAG_array_type, baseType: !10741, size: 1472, elements: !10745)
!10741 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !10735, file: !9710, line: 1120, size: 64, elements: !10742)
!10742 = !{!10743, !10744}
!10743 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !10741, file: !9710, line: 1121, baseType: !37, size: 32)
!10744 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !10741, file: !9710, line: 1122, baseType: !37, size: 32, offset: 32)
!10745 = !{!10746}
!10746 = !DISubrange(count: 23)
!10747 = !DIDerivedType(tag: DW_TAG_member, name: "issi", scope: !10074, file: !9710, line: 700, baseType: !762, size: 32, offset: 1461952)
!10748 = !DIDerivedType(tag: DW_TAG_member, name: "mlx5e_res", scope: !10074, file: !9710, line: 701, baseType: !10749, size: 960, offset: 1462016)
!10749 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5e_resources", file: !9710, line: 619, size: 960, elements: !10750)
!10750 = !{!10751, !10752, !10758, !10766}
!10751 = !DIDerivedType(tag: DW_TAG_member, name: "pdn", scope: !10749, file: !9710, line: 620, baseType: !762, size: 32)
!10752 = !DIDerivedType(tag: DW_TAG_member, name: "td", scope: !10749, file: !9710, line: 621, baseType: !10753, size: 384, offset: 64)
!10753 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_td", file: !9710, line: 612, size: 384, elements: !10754)
!10754 = !{!10755, !10756, !10757}
!10755 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !10753, file: !9710, line: 614, baseType: !1008, size: 192)
!10756 = !DIDerivedType(tag: DW_TAG_member, name: "tirs_list", scope: !10753, file: !9710, line: 615, baseType: !344, size: 128, offset: 192)
!10757 = !DIDerivedType(tag: DW_TAG_member, name: "tdn", scope: !10753, file: !9710, line: 616, baseType: !762, size: 32, offset: 320)
!10758 = !DIDerivedType(tag: DW_TAG_member, name: "mkey", scope: !10749, file: !9710, line: 622, baseType: !10759, size: 256, offset: 448)
!10759 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_core_mkey", file: !9710, line: 367, size: 256, elements: !10760)
!10760 = !{!10761, !10762, !10763, !10764, !10765}
!10761 = !DIDerivedType(tag: DW_TAG_member, name: "iova", scope: !10759, file: !9710, line: 368, baseType: !391, size: 64)
!10762 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !10759, file: !9710, line: 369, baseType: !391, size: 64, offset: 64)
!10763 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !10759, file: !9710, line: 370, baseType: !762, size: 32, offset: 128)
!10764 = !DIDerivedType(tag: DW_TAG_member, name: "pd", scope: !10759, file: !9710, line: 371, baseType: !762, size: 32, offset: 160)
!10765 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !10759, file: !9710, line: 372, baseType: !762, size: 32, offset: 192)
!10766 = !DIDerivedType(tag: DW_TAG_member, name: "bfreg", scope: !10749, file: !9710, line: 623, baseType: !10767, size: 256, offset: 704)
!10767 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_sq_bfreg", file: !9710, line: 418, size: 256, elements: !10768)
!10768 = !{!10769, !10770, !10771, !10772, !10773}
!10769 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !10767, file: !9710, line: 419, baseType: !625, size: 64)
!10770 = !DIDerivedType(tag: DW_TAG_member, name: "up", scope: !10767, file: !9710, line: 420, baseType: !10719, size: 64, offset: 64)
!10771 = !DIDerivedType(tag: DW_TAG_member, name: "wc", scope: !10767, file: !9710, line: 421, baseType: !595, size: 8, offset: 128)
!10772 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !10767, file: !9710, line: 422, baseType: !762, size: 32, offset: 160)
!10773 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !10767, file: !9710, line: 423, baseType: !7, size: 32, offset: 192)
!10774 = !DIDerivedType(tag: DW_TAG_member, name: "dm", scope: !10074, file: !9710, line: 702, baseType: !10775, size: 64, offset: 1462976)
!10775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10776, size: 64)
!10776 = !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_dm", file: !9710, line: 661, flags: DIFlagFwdDecl)
!10777 = !DIDerivedType(tag: DW_TAG_member, name: "vxlan", scope: !10074, file: !9710, line: 703, baseType: !10778, size: 64, offset: 1463040)
!10778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10779, size: 64)
!10779 = !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_vxlan", file: !9710, line: 663, flags: DIFlagFwdDecl)
!10780 = !DIDerivedType(tag: DW_TAG_member, name: "geneve", scope: !10074, file: !9710, line: 704, baseType: !10781, size: 64, offset: 1463104)
!10781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10782, size: 64)
!10782 = !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_geneve", file: !9710, line: 664, flags: DIFlagFwdDecl)
!10783 = !DIDerivedType(tag: DW_TAG_member, name: "roce", scope: !10074, file: !9710, line: 708, baseType: !10784, size: 256, offset: 1463168)
!10784 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !10074, file: !9710, line: 705, size: 256, elements: !10785)
!10785 = !{!10786, !10795}
!10786 = !DIDerivedType(tag: DW_TAG_member, name: "reserved_gids", scope: !10784, file: !9710, line: 706, baseType: !10787, size: 192)
!10787 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_rsvd_gids", file: !9710, line: 633, size: 192, elements: !10788)
!10788 = !{!10789, !10790, !10791}
!10789 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !10787, file: !9710, line: 634, baseType: !7, size: 32)
!10790 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !10787, file: !9710, line: 635, baseType: !7, size: 32, offset: 32)
!10791 = !DIDerivedType(tag: DW_TAG_member, name: "ida", scope: !10787, file: !9710, line: 636, baseType: !10792, size: 128, offset: 64)
!10792 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ida", file: !1604, line: 244, size: 128, elements: !10793)
!10793 = !{!10794}
!10794 = !DIDerivedType(tag: DW_TAG_member, name: "xa", scope: !10792, file: !1604, line: 245, baseType: !1607, size: 128)
!10795 = !DIDerivedType(tag: DW_TAG_member, name: "roce_en", scope: !10784, file: !9710, line: 707, baseType: !762, size: 32, offset: 192)
!10796 = !DIDerivedType(tag: DW_TAG_member, name: "clock", scope: !10074, file: !9710, line: 715, baseType: !10797, size: 3840, offset: 1463424)
!10797 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_clock", file: !9710, line: 647, size: 3840, elements: !10798)
!10798 = !{!10799, !10800, !10801, !10814, !10822, !10829, !10830, !10831, !10832, !10835, !10913}
!10799 = !DIDerivedType(tag: DW_TAG_member, name: "pps_nb", scope: !10797, file: !9710, line: 648, baseType: !10359, size: 256)
!10800 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !10797, file: !9710, line: 649, baseType: !2247, size: 32, offset: 256)
!10801 = !DIDerivedType(tag: DW_TAG_member, name: "cycles", scope: !10797, file: !9710, line: 650, baseType: !10802, size: 192, offset: 320)
!10802 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cyclecounter", file: !10803, line: 30, size: 192, elements: !10804)
!10803 = !DIFile(filename: "./include/linux/timecounter.h", directory: "/home/lizy2001/genbc/linux")
!10804 = !{!10805, !10811, !10812, !10813}
!10805 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !10802, file: !10803, line: 31, baseType: !10806, size: 64)
!10806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10807, size: 64)
!10807 = !DISubroutineType(types: !10808)
!10808 = !{!391, !10809}
!10809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10810, size: 64)
!10810 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10802)
!10811 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !10802, file: !10803, line: 32, baseType: !391, size: 64, offset: 64)
!10812 = !DIDerivedType(tag: DW_TAG_member, name: "mult", scope: !10802, file: !10803, line: 33, baseType: !762, size: 32, offset: 128)
!10813 = !DIDerivedType(tag: DW_TAG_member, name: "shift", scope: !10802, file: !10803, line: 34, baseType: !762, size: 32, offset: 160)
!10814 = !DIDerivedType(tag: DW_TAG_member, name: "tc", scope: !10797, file: !9710, line: 651, baseType: !10815, size: 320, offset: 512)
!10815 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timecounter", file: !10803, line: 55, size: 320, elements: !10816)
!10816 = !{!10817, !10818, !10819, !10820, !10821}
!10817 = !DIDerivedType(tag: DW_TAG_member, name: "cc", scope: !10815, file: !10803, line: 56, baseType: !10809, size: 64)
!10818 = !DIDerivedType(tag: DW_TAG_member, name: "cycle_last", scope: !10815, file: !10803, line: 57, baseType: !391, size: 64, offset: 64)
!10819 = !DIDerivedType(tag: DW_TAG_member, name: "nsec", scope: !10815, file: !10803, line: 58, baseType: !391, size: 64, offset: 128)
!10820 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !10815, file: !10803, line: 59, baseType: !391, size: 64, offset: 192)
!10821 = !DIDerivedType(tag: DW_TAG_member, name: "frac", scope: !10815, file: !10803, line: 60, baseType: !391, size: 64, offset: 256)
!10822 = !DIDerivedType(tag: DW_TAG_member, name: "hwtstamp_config", scope: !10797, file: !9710, line: 652, baseType: !10823, size: 96, offset: 832)
!10823 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hwtstamp_config", file: !10824, line: 62, size: 96, elements: !10825)
!10824 = !DIFile(filename: "./include/uapi/linux/net_tstamp.h", directory: "/home/lizy2001/genbc/linux")
!10825 = !{!10826, !10827, !10828}
!10826 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !10823, file: !10824, line: 63, baseType: !37, size: 32)
!10827 = !DIDerivedType(tag: DW_TAG_member, name: "tx_type", scope: !10823, file: !10824, line: 64, baseType: !37, size: 32, offset: 32)
!10828 = !DIDerivedType(tag: DW_TAG_member, name: "rx_filter", scope: !10823, file: !10824, line: 65, baseType: !37, size: 32, offset: 64)
!10829 = !DIDerivedType(tag: DW_TAG_member, name: "nominal_c_mult", scope: !10797, file: !9710, line: 653, baseType: !762, size: 32, offset: 928)
!10830 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_period", scope: !10797, file: !9710, line: 654, baseType: !372, size: 64, offset: 960)
!10831 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_work", scope: !10797, file: !9710, line: 655, baseType: !2889, size: 704, offset: 1024)
!10832 = !DIDerivedType(tag: DW_TAG_member, name: "ptp", scope: !10797, file: !9710, line: 656, baseType: !10833, size: 64, offset: 1728)
!10833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10834, size: 64)
!10834 = !DICompositeType(tag: DW_TAG_structure_type, name: "ptp_clock", file: !9735, line: 149, flags: DIFlagFwdDecl)
!10835 = !DIDerivedType(tag: DW_TAG_member, name: "ptp_info", scope: !10797, file: !9710, line: 657, baseType: !10836, size: 1152, offset: 1792)
!10836 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ptp_clock_info", file: !9735, line: 122, size: 1152, elements: !10837)
!10837 = !{!10838, !10839, !10840, !10841, !10842, !10843, !10844, !10845, !10846, !10856, !10861, !10865, !10866, !10870, !10874, !10883, !10894, !10900, !10905, !10909}
!10838 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !10836, file: !9735, line: 123, baseType: !906, size: 64)
!10839 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !10836, file: !9735, line: 124, baseType: !327, size: 128, offset: 64)
!10840 = !DIDerivedType(tag: DW_TAG_member, name: "max_adj", scope: !10836, file: !9735, line: 125, baseType: !1543, size: 32, offset: 192)
!10841 = !DIDerivedType(tag: DW_TAG_member, name: "n_alarm", scope: !10836, file: !9735, line: 126, baseType: !37, size: 32, offset: 224)
!10842 = !DIDerivedType(tag: DW_TAG_member, name: "n_ext_ts", scope: !10836, file: !9735, line: 127, baseType: !37, size: 32, offset: 256)
!10843 = !DIDerivedType(tag: DW_TAG_member, name: "n_per_out", scope: !10836, file: !9735, line: 128, baseType: !37, size: 32, offset: 288)
!10844 = !DIDerivedType(tag: DW_TAG_member, name: "n_pins", scope: !10836, file: !9735, line: 129, baseType: !37, size: 32, offset: 320)
!10845 = !DIDerivedType(tag: DW_TAG_member, name: "pps", scope: !10836, file: !9735, line: 130, baseType: !37, size: 32, offset: 352)
!10846 = !DIDerivedType(tag: DW_TAG_member, name: "pin_config", scope: !10836, file: !9735, line: 131, baseType: !10847, size: 64, offset: 384)
!10847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10848, size: 64)
!10848 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ptp_pin_desc", file: !9744, line: 174, size: 768, elements: !10849)
!10849 = !{!10850, !10851, !10852, !10853, !10854}
!10850 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !10848, file: !9744, line: 180, baseType: !4882, size: 512)
!10851 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !10848, file: !9744, line: 184, baseType: !7, size: 32, offset: 512)
!10852 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !10848, file: !9744, line: 188, baseType: !7, size: 32, offset: 544)
!10853 = !DIDerivedType(tag: DW_TAG_member, name: "chan", scope: !10848, file: !9744, line: 194, baseType: !7, size: 32, offset: 576)
!10854 = !DIDerivedType(tag: DW_TAG_member, name: "rsv", scope: !10848, file: !9744, line: 198, baseType: !10855, size: 160, offset: 608)
!10855 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 160, elements: !1643)
!10856 = !DIDerivedType(tag: DW_TAG_member, name: "adjfine", scope: !10836, file: !9735, line: 132, baseType: !10857, size: 64, offset: 448)
!10857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10858, size: 64)
!10858 = !DISubroutineType(types: !10859)
!10859 = !{!37, !10860, !568}
!10860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10836, size: 64)
!10861 = !DIDerivedType(tag: DW_TAG_member, name: "adjfreq", scope: !10836, file: !9735, line: 133, baseType: !10862, size: 64, offset: 512)
!10862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10863, size: 64)
!10863 = !DISubroutineType(types: !10864)
!10864 = !{!37, !10860, !1543}
!10865 = !DIDerivedType(tag: DW_TAG_member, name: "adjphase", scope: !10836, file: !9735, line: 134, baseType: !10862, size: 64, offset: 576)
!10866 = !DIDerivedType(tag: DW_TAG_member, name: "adjtime", scope: !10836, file: !9735, line: 135, baseType: !10867, size: 64, offset: 640)
!10867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10868, size: 64)
!10868 = !DISubroutineType(types: !10869)
!10869 = !{!37, !10860, !437}
!10870 = !DIDerivedType(tag: DW_TAG_member, name: "gettime64", scope: !10836, file: !9735, line: 136, baseType: !10871, size: 64, offset: 704)
!10871 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10872, size: 64)
!10872 = !DISubroutineType(types: !10873)
!10873 = !{!37, !10860, !6669}
!10874 = !DIDerivedType(tag: DW_TAG_member, name: "gettimex64", scope: !10836, file: !9735, line: 137, baseType: !10875, size: 64, offset: 768)
!10875 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10876, size: 64)
!10876 = !DISubroutineType(types: !10877)
!10877 = !{!37, !10860, !6669, !10878}
!10878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10879, size: 64)
!10879 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ptp_system_timestamp", file: !9735, line: 33, size: 256, elements: !10880)
!10880 = !{!10881, !10882}
!10881 = !DIDerivedType(tag: DW_TAG_member, name: "pre_ts", scope: !10879, file: !9735, line: 34, baseType: !6622, size: 128)
!10882 = !DIDerivedType(tag: DW_TAG_member, name: "post_ts", scope: !10879, file: !9735, line: 35, baseType: !6622, size: 128, offset: 128)
!10883 = !DIDerivedType(tag: DW_TAG_member, name: "getcrosststamp", scope: !10836, file: !9735, line: 139, baseType: !10884, size: 64, offset: 832)
!10884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10885, size: 64)
!10885 = !DISubroutineType(types: !10886)
!10886 = !{!37, !10860, !10887}
!10887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10888, size: 64)
!10888 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "system_device_crosststamp", file: !10889, line: 261, size: 192, elements: !10890)
!10889 = !DIFile(filename: "./include/linux/timekeeping.h", directory: "/home/lizy2001/genbc/linux")
!10890 = !{!10891, !10892, !10893}
!10891 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !10888, file: !10889, line: 262, baseType: !1395, size: 64)
!10892 = !DIDerivedType(tag: DW_TAG_member, name: "sys_realtime", scope: !10888, file: !10889, line: 263, baseType: !1395, size: 64, offset: 64)
!10893 = !DIDerivedType(tag: DW_TAG_member, name: "sys_monoraw", scope: !10888, file: !10889, line: 264, baseType: !1395, size: 64, offset: 128)
!10894 = !DIDerivedType(tag: DW_TAG_member, name: "settime64", scope: !10836, file: !9735, line: 141, baseType: !10895, size: 64, offset: 896)
!10895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10896, size: 64)
!10896 = !DISubroutineType(types: !10897)
!10897 = !{!37, !10860, !10898}
!10898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10899, size: 64)
!10899 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6622)
!10900 = !DIDerivedType(tag: DW_TAG_member, name: "enable", scope: !10836, file: !9735, line: 142, baseType: !10901, size: 64, offset: 960)
!10901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10902, size: 64)
!10902 = !DISubroutineType(types: !10903)
!10903 = !{!37, !10860, !10904, !37}
!10904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9736, size: 64)
!10905 = !DIDerivedType(tag: DW_TAG_member, name: "verify", scope: !10836, file: !9735, line: 144, baseType: !10906, size: 64, offset: 1024)
!10906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10907, size: 64)
!10907 = !DISubroutineType(types: !10908)
!10908 = !{!37, !10860, !7, !9776, !7}
!10909 = !DIDerivedType(tag: DW_TAG_member, name: "do_aux_work", scope: !10836, file: !9735, line: 146, baseType: !10910, size: 64, offset: 1088)
!10910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10911, size: 64)
!10911 = !DISubroutineType(types: !10912)
!10912 = !{!568, !10860}
!10913 = !DIDerivedType(tag: DW_TAG_member, name: "pps_info", scope: !10797, file: !9710, line: 658, baseType: !10914, size: 896, offset: 2944)
!10914 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_pps", file: !9710, line: 640, size: 896, elements: !10915)
!10915 = !{!10916, !10917, !10918, !10919}
!10916 = !DIDerivedType(tag: DW_TAG_member, name: "pin_caps", scope: !10914, file: !9710, line: 641, baseType: !3067, size: 64)
!10917 = !DIDerivedType(tag: DW_TAG_member, name: "out_work", scope: !10914, file: !9710, line: 642, baseType: !1782, size: 256, offset: 64)
!10918 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !10914, file: !9710, line: 643, baseType: !4695, size: 512, offset: 320)
!10919 = !DIDerivedType(tag: DW_TAG_member, name: "enabled", scope: !10914, file: !9710, line: 644, baseType: !1451, size: 8, offset: 832)
!10920 = !DIDerivedType(tag: DW_TAG_member, name: "clock_info", scope: !10074, file: !9710, line: 716, baseType: !10921, size: 64, offset: 1467264)
!10921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10922, size: 64)
!10922 = !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_ib_clock_info", file: !9710, line: 716, flags: DIFlagFwdDecl)
!10923 = !DIDerivedType(tag: DW_TAG_member, name: "tracer", scope: !10074, file: !9710, line: 717, baseType: !10924, size: 64, offset: 1467328)
!10924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10925, size: 64)
!10925 = !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_fw_tracer", file: !9710, line: 662, flags: DIFlagFwdDecl)
!10926 = !DIDerivedType(tag: DW_TAG_member, name: "rsc_dump", scope: !10074, file: !9710, line: 718, baseType: !10927, size: 64, offset: 1467392)
!10927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10928, size: 64)
!10928 = !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_rsc_dump", file: !9710, line: 718, flags: DIFlagFwdDecl)
!10929 = !DIDerivedType(tag: DW_TAG_member, name: "vsc_addr", scope: !10074, file: !9710, line: 719, baseType: !762, size: 32, offset: 1467456)
!10930 = !DIDerivedType(tag: DW_TAG_member, name: "hv_vhca", scope: !10074, file: !9710, line: 720, baseType: !10931, size: 64, offset: 1467520)
!10931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10932, size: 64)
!10932 = !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_hv_vhca", file: !9710, line: 665, flags: DIFlagFwdDecl)
!10933 = !DILocalVariable(name: "mdev", arg: 1, scope: !10070, file: !3, line: 43, type: !10073)
!10934 = !DILocation(line: 43, column: 49, scope: !10070)
!10935 = !DILocalVariable(name: "opmod", arg: 2, scope: !10070, file: !3, line: 43, type: !1451)
!10936 = !DILocation(line: 43, column: 58, scope: !10070)
!10937 = !DILocalVariable(name: "vport", arg: 3, scope: !10070, file: !3, line: 43, type: !1092)
!10938 = !DILocation(line: 43, column: 69, scope: !10070)
!10939 = !DILocalVariable(name: "out", scope: !10070, file: !3, line: 45, type: !10940)
!10940 = !DICompositeType(tag: DW_TAG_array_type, baseType: !762, size: 128, elements: !1256)
!10941 = !DILocation(line: 45, column: 6, scope: !10070)
!10942 = !DILocalVariable(name: "in", scope: !10070, file: !3, line: 46, type: !10940)
!10943 = !DILocation(line: 46, column: 6, scope: !10070)
!10944 = !DILocalVariable(name: "err", scope: !10070, file: !3, line: 47, type: !37)
!10945 = !DILocation(line: 47, column: 6, scope: !10070)
!10946 = !DILocation(line: 49, column: 2, scope: !10070)
!10947 = !DILocalVariable(name: "_v", scope: !10948, file: !3, line: 49, type: !762)
!10948 = distinct !DILexicalBlock(scope: !10070, file: !3, line: 49, column: 2)
!10949 = !DILocation(line: 49, column: 2, scope: !10948)
!10950 = !DILocation(line: 49, column: 2, scope: !10951)
!10951 = distinct !DILexicalBlock(scope: !10948, file: !3, line: 49, column: 2)
!10952 = !DILocation(line: 51, column: 2, scope: !10070)
!10953 = !DILocalVariable(name: "_v", scope: !10954, file: !3, line: 51, type: !762)
!10954 = distinct !DILexicalBlock(scope: !10070, file: !3, line: 51, column: 2)
!10955 = !DILocation(line: 51, column: 2, scope: !10954)
!10956 = !DILocation(line: 51, column: 2, scope: !10957)
!10957 = distinct !DILexicalBlock(scope: !10954, file: !3, line: 51, column: 2)
!10958 = !DILocation(line: 52, column: 2, scope: !10070)
!10959 = !DILocalVariable(name: "_v", scope: !10960, file: !3, line: 52, type: !762)
!10960 = distinct !DILexicalBlock(scope: !10070, file: !3, line: 52, column: 2)
!10961 = !DILocation(line: 52, column: 2, scope: !10960)
!10962 = !DILocation(line: 52, column: 2, scope: !10963)
!10963 = distinct !DILexicalBlock(scope: !10960, file: !3, line: 52, column: 2)
!10964 = !DILocation(line: 53, column: 6, scope: !10965)
!10965 = distinct !DILexicalBlock(scope: !10070, file: !3, line: 53, column: 6)
!10966 = !DILocation(line: 53, column: 6, scope: !10070)
!10967 = !DILocation(line: 54, column: 3, scope: !10965)
!10968 = !DILocalVariable(name: "_v", scope: !10969, file: !3, line: 54, type: !762)
!10969 = distinct !DILexicalBlock(scope: !10965, file: !3, line: 54, column: 3)
!10970 = !DILocation(line: 54, column: 3, scope: !10969)
!10971 = !DILocation(line: 54, column: 3, scope: !10972)
!10972 = distinct !DILexicalBlock(scope: !10969, file: !3, line: 54, column: 3)
!10973 = !DILocation(line: 56, column: 8, scope: !10974)
!10974 = distinct !DILexicalBlock(scope: !10070, file: !3, line: 56, column: 8)
!10975 = !DILocation(line: 56, column: 8, scope: !10070)
!10976 = !DILocation(line: 56, column: 6, scope: !10070)
!10977 = !DILocation(line: 57, column: 6, scope: !10978)
!10978 = distinct !DILexicalBlock(scope: !10070, file: !3, line: 57, column: 6)
!10979 = !DILocation(line: 57, column: 6, scope: !10070)
!10980 = !DILocation(line: 58, column: 3, scope: !10978)
!10981 = !DILocation(line: 60, column: 9, scope: !10070)
!10982 = !DILocation(line: 60, column: 2, scope: !10070)
!10983 = !DILocation(line: 61, column: 1, scope: !10070)
!10984 = distinct !DISubprogram(name: "__fswab32", scope: !10985, file: !10985, line: 57, type: !10986, scopeLine: 58, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !798)
!10985 = !DIFile(filename: "./include/uapi/linux/swab.h", directory: "/home/lizy2001/genbc/linux")
!10986 = !DISubroutineType(types: !10987)
!10987 = !{!523, !523}
!10988 = !DILocalVariable(name: "val", arg: 1, scope: !10984, file: !10985, line: 57, type: !523)
!10989 = !DILocation(line: 57, column: 57, scope: !10984)
!10990 = !DILocation(line: 60, column: 23, scope: !10984)
!10991 = !DILocation(line: 60, column: 9, scope: !10984)
!10992 = !DILocation(line: 60, column: 2, scope: !10984)
!10993 = distinct !DISubprogram(name: "mlx5_modify_vport_admin_state", scope: !3, file: !3, line: 63, type: !10994, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !798)
!10994 = !DISubroutineType(types: !10995)
!10995 = !{!37, !10073, !1451, !1092, !1451, !1451}
!10996 = !DILocalVariable(name: "mdev", arg: 1, scope: !10993, file: !3, line: 63, type: !10073)
!10997 = !DILocation(line: 63, column: 57, scope: !10993)
!10998 = !DILocalVariable(name: "opmod", arg: 2, scope: !10993, file: !3, line: 63, type: !1451)
!10999 = !DILocation(line: 63, column: 66, scope: !10993)
!11000 = !DILocalVariable(name: "vport", arg: 3, scope: !10993, file: !3, line: 64, type: !1092)
!11001 = !DILocation(line: 64, column: 11, scope: !10993)
!11002 = !DILocalVariable(name: "other_vport", arg: 4, scope: !10993, file: !3, line: 64, type: !1451)
!11003 = !DILocation(line: 64, column: 21, scope: !10993)
!11004 = !DILocalVariable(name: "state", arg: 5, scope: !10993, file: !3, line: 64, type: !1451)
!11005 = !DILocation(line: 64, column: 37, scope: !10993)
!11006 = !DILocalVariable(name: "in", scope: !10993, file: !3, line: 66, type: !10940)
!11007 = !DILocation(line: 66, column: 6, scope: !10993)
!11008 = !DILocation(line: 68, column: 2, scope: !10993)
!11009 = !DILocalVariable(name: "_v", scope: !11010, file: !3, line: 68, type: !762)
!11010 = distinct !DILexicalBlock(scope: !10993, file: !3, line: 68, column: 2)
!11011 = !DILocation(line: 68, column: 2, scope: !11010)
!11012 = !DILocation(line: 68, column: 2, scope: !11013)
!11013 = distinct !DILexicalBlock(scope: !11010, file: !3, line: 68, column: 2)
!11014 = !DILocation(line: 70, column: 2, scope: !10993)
!11015 = !DILocalVariable(name: "_v", scope: !11016, file: !3, line: 70, type: !762)
!11016 = distinct !DILexicalBlock(scope: !10993, file: !3, line: 70, column: 2)
!11017 = !DILocation(line: 70, column: 2, scope: !11016)
!11018 = !DILocation(line: 70, column: 2, scope: !11019)
!11019 = distinct !DILexicalBlock(scope: !11016, file: !3, line: 70, column: 2)
!11020 = !DILocation(line: 71, column: 2, scope: !10993)
!11021 = !DILocalVariable(name: "_v", scope: !11022, file: !3, line: 71, type: !762)
!11022 = distinct !DILexicalBlock(scope: !10993, file: !3, line: 71, column: 2)
!11023 = !DILocation(line: 71, column: 2, scope: !11022)
!11024 = !DILocation(line: 71, column: 2, scope: !11025)
!11025 = distinct !DILexicalBlock(scope: !11022, file: !3, line: 71, column: 2)
!11026 = !DILocation(line: 72, column: 2, scope: !10993)
!11027 = !DILocalVariable(name: "_v", scope: !11028, file: !3, line: 72, type: !762)
!11028 = distinct !DILexicalBlock(scope: !10993, file: !3, line: 72, column: 2)
!11029 = !DILocation(line: 72, column: 2, scope: !11028)
!11030 = !DILocation(line: 72, column: 2, scope: !11031)
!11031 = distinct !DILexicalBlock(scope: !11028, file: !3, line: 72, column: 2)
!11032 = !DILocation(line: 73, column: 2, scope: !10993)
!11033 = !DILocalVariable(name: "_v", scope: !11034, file: !3, line: 73, type: !762)
!11034 = distinct !DILexicalBlock(scope: !10993, file: !3, line: 73, column: 2)
!11035 = !DILocation(line: 73, column: 2, scope: !11034)
!11036 = !DILocation(line: 73, column: 2, scope: !11037)
!11037 = distinct !DILexicalBlock(scope: !11034, file: !3, line: 73, column: 2)
!11038 = !DILocalVariable(name: "_out", scope: !11039, file: !3, line: 75, type: !10940)
!11039 = distinct !DILexicalBlock(scope: !10993, file: !3, line: 75, column: 9)
!11040 = !DILocation(line: 75, column: 9, scope: !11039)
!11041 = !DILocation(line: 75, column: 9, scope: !11042)
!11042 = distinct !DILexicalBlock(scope: !11039, file: !3, line: 75, column: 9)
!11043 = !DILocation(line: 75, column: 2, scope: !10993)
!11044 = distinct !DISubprogram(name: "mlx5_query_nic_vport_min_inline", scope: !3, file: !3, line: 92, type: !11045, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !798)
!11045 = !DISubroutineType(types: !11046)
!11046 = !{!37, !10073, !1092, !7736}
!11047 = !DILocalVariable(name: "mdev", arg: 1, scope: !11044, file: !3, line: 92, type: !10073)
!11048 = !DILocation(line: 92, column: 59, scope: !11044)
!11049 = !DILocalVariable(name: "vport", arg: 2, scope: !11044, file: !3, line: 93, type: !1092)
!11050 = !DILocation(line: 93, column: 13, scope: !11044)
!11051 = !DILocalVariable(name: "min_inline", arg: 3, scope: !11044, file: !3, line: 93, type: !7736)
!11052 = !DILocation(line: 93, column: 24, scope: !11044)
!11053 = !DILocalVariable(name: "out", scope: !11044, file: !3, line: 95, type: !11054)
!11054 = !DICompositeType(tag: DW_TAG_array_type, baseType: !762, size: 2176, elements: !11055)
!11055 = !{!11056}
!11056 = !DISubrange(count: 68)
!11057 = !DILocation(line: 95, column: 6, scope: !11044)
!11058 = !DILocalVariable(name: "err", scope: !11044, file: !3, line: 96, type: !37)
!11059 = !DILocation(line: 96, column: 6, scope: !11044)
!11060 = !DILocation(line: 98, column: 37, scope: !11044)
!11061 = !DILocation(line: 98, column: 43, scope: !11044)
!11062 = !DILocation(line: 98, column: 50, scope: !11044)
!11063 = !DILocation(line: 98, column: 8, scope: !11044)
!11064 = !DILocation(line: 98, column: 6, scope: !11044)
!11065 = !DILocation(line: 99, column: 7, scope: !11066)
!11066 = distinct !DILexicalBlock(scope: !11044, file: !3, line: 99, column: 6)
!11067 = !DILocation(line: 99, column: 6, scope: !11044)
!11068 = !DILocation(line: 100, column: 17, scope: !11066)
!11069 = !DILocation(line: 100, column: 4, scope: !11066)
!11070 = !DILocation(line: 100, column: 15, scope: !11066)
!11071 = !DILocation(line: 100, column: 3, scope: !11066)
!11072 = !DILocation(line: 102, column: 9, scope: !11044)
!11073 = !DILocation(line: 102, column: 2, scope: !11044)
!11074 = distinct !DISubprogram(name: "mlx5_query_nic_vport_context", scope: !3, file: !3, line: 78, type: !11075, scopeLine: 80, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !798)
!11075 = !DISubroutineType(types: !11076)
!11076 = !{!37, !10073, !1092, !1514}
!11077 = !DILocalVariable(name: "mdev", arg: 1, scope: !11074, file: !3, line: 78, type: !10073)
!11078 = !DILocation(line: 78, column: 63, scope: !11074)
!11079 = !DILocalVariable(name: "vport", arg: 2, scope: !11074, file: !3, line: 78, type: !1092)
!11080 = !DILocation(line: 78, column: 73, scope: !11074)
!11081 = !DILocalVariable(name: "out", arg: 3, scope: !11074, file: !3, line: 79, type: !1514)
!11082 = !DILocation(line: 79, column: 11, scope: !11074)
!11083 = !DILocalVariable(name: "in", scope: !11074, file: !3, line: 81, type: !10940)
!11084 = !DILocation(line: 81, column: 6, scope: !11074)
!11085 = !DILocation(line: 83, column: 2, scope: !11074)
!11086 = !DILocalVariable(name: "_v", scope: !11087, file: !3, line: 83, type: !762)
!11087 = distinct !DILexicalBlock(scope: !11074, file: !3, line: 83, column: 2)
!11088 = !DILocation(line: 83, column: 2, scope: !11087)
!11089 = !DILocation(line: 83, column: 2, scope: !11090)
!11090 = distinct !DILexicalBlock(scope: !11087, file: !3, line: 83, column: 2)
!11091 = !DILocation(line: 85, column: 2, scope: !11074)
!11092 = !DILocalVariable(name: "_v", scope: !11093, file: !3, line: 85, type: !762)
!11093 = distinct !DILexicalBlock(scope: !11074, file: !3, line: 85, column: 2)
!11094 = !DILocation(line: 85, column: 2, scope: !11093)
!11095 = !DILocation(line: 85, column: 2, scope: !11096)
!11096 = distinct !DILexicalBlock(scope: !11093, file: !3, line: 85, column: 2)
!11097 = !DILocation(line: 86, column: 6, scope: !11098)
!11098 = distinct !DILexicalBlock(scope: !11074, file: !3, line: 86, column: 6)
!11099 = !DILocation(line: 86, column: 6, scope: !11074)
!11100 = !DILocation(line: 87, column: 3, scope: !11098)
!11101 = !DILocalVariable(name: "_v", scope: !11102, file: !3, line: 87, type: !762)
!11102 = distinct !DILexicalBlock(scope: !11098, file: !3, line: 87, column: 3)
!11103 = !DILocation(line: 87, column: 3, scope: !11102)
!11104 = !DILocation(line: 87, column: 3, scope: !11105)
!11105 = distinct !DILexicalBlock(scope: !11102, file: !3, line: 87, column: 3)
!11106 = !DILocation(line: 89, column: 9, scope: !11107)
!11107 = distinct !DILexicalBlock(scope: !11074, file: !3, line: 89, column: 9)
!11108 = !DILocation(line: 89, column: 9, scope: !11074)
!11109 = !DILocation(line: 89, column: 2, scope: !11074)
!11110 = distinct !DISubprogram(name: "mlx5_query_min_inline", scope: !3, file: !3, line: 106, type: !11111, scopeLine: 108, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !798)
!11111 = !DISubroutineType(types: !11112)
!11112 = !{null, !10073, !7736}
!11113 = !DILocalVariable(name: "mdev", arg: 1, scope: !11110, file: !3, line: 106, type: !10073)
!11114 = !DILocation(line: 106, column: 50, scope: !11110)
!11115 = !DILocalVariable(name: "min_inline_mode", arg: 2, scope: !11110, file: !3, line: 107, type: !7736)
!11116 = !DILocation(line: 107, column: 11, scope: !11110)
!11117 = !DILocation(line: 109, column: 10, scope: !11110)
!11118 = !DILocation(line: 109, column: 2, scope: !11110)
!11119 = !DILocation(line: 111, column: 40, scope: !11120)
!11120 = distinct !DILexicalBlock(scope: !11121, file: !3, line: 111, column: 7)
!11121 = distinct !DILexicalBlock(scope: !11110, file: !3, line: 109, column: 47)
!11122 = !DILocation(line: 111, column: 49, scope: !11120)
!11123 = !DILocation(line: 111, column: 8, scope: !11120)
!11124 = !DILocation(line: 111, column: 7, scope: !11121)
!11125 = !DILocation(line: 112, column: 4, scope: !11120)
!11126 = !DILocation(line: 111, column: 64, scope: !11120)
!11127 = !DILocation(line: 115, column: 4, scope: !11121)
!11128 = !DILocation(line: 115, column: 20, scope: !11121)
!11129 = !DILocation(line: 116, column: 3, scope: !11121)
!11130 = !DILocation(line: 118, column: 4, scope: !11121)
!11131 = !DILocation(line: 118, column: 20, scope: !11121)
!11132 = !DILocation(line: 119, column: 3, scope: !11121)
!11133 = !DILocation(line: 121, column: 1, scope: !11110)
!11134 = distinct !DISubprogram(name: "mlx5_modify_nic_vport_min_inline", scope: !3, file: !3, line: 124, type: !11135, scopeLine: 126, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !798)
!11135 = !DISubroutineType(types: !11136)
!11136 = !{!37, !10073, !1092, !1451}
!11137 = !DILocalVariable(name: "mdev", arg: 1, scope: !11134, file: !3, line: 124, type: !10073)
!11138 = !DILocation(line: 124, column: 60, scope: !11134)
!11139 = !DILocalVariable(name: "vport", arg: 2, scope: !11134, file: !3, line: 125, type: !1092)
!11140 = !DILocation(line: 125, column: 14, scope: !11134)
!11141 = !DILocalVariable(name: "min_inline", arg: 3, scope: !11134, file: !3, line: 125, type: !1451)
!11142 = !DILocation(line: 125, column: 24, scope: !11134)
!11143 = !DILocalVariable(name: "in", scope: !11134, file: !3, line: 127, type: !11144)
!11144 = !DICompositeType(tag: DW_TAG_array_type, baseType: !762, size: 4096, elements: !3128)
!11145 = !DILocation(line: 127, column: 6, scope: !11134)
!11146 = !DILocalVariable(name: "nic_vport_ctx", scope: !11134, file: !3, line: 128, type: !625)
!11147 = !DILocation(line: 128, column: 8, scope: !11134)
!11148 = !DILocation(line: 130, column: 2, scope: !11134)
!11149 = !DILocalVariable(name: "_v", scope: !11150, file: !3, line: 130, type: !762)
!11150 = distinct !DILexicalBlock(scope: !11134, file: !3, line: 130, column: 2)
!11151 = !DILocation(line: 130, column: 2, scope: !11150)
!11152 = !DILocation(line: 130, column: 2, scope: !11153)
!11153 = distinct !DILexicalBlock(scope: !11150, file: !3, line: 130, column: 2)
!11154 = !DILocation(line: 132, column: 2, scope: !11134)
!11155 = !DILocalVariable(name: "_v", scope: !11156, file: !3, line: 132, type: !762)
!11156 = distinct !DILexicalBlock(scope: !11134, file: !3, line: 132, column: 2)
!11157 = !DILocation(line: 132, column: 2, scope: !11156)
!11158 = !DILocation(line: 132, column: 2, scope: !11159)
!11159 = distinct !DILexicalBlock(scope: !11156, file: !3, line: 132, column: 2)
!11160 = !DILocation(line: 133, column: 2, scope: !11134)
!11161 = !DILocalVariable(name: "_v", scope: !11162, file: !3, line: 133, type: !762)
!11162 = distinct !DILexicalBlock(scope: !11134, file: !3, line: 133, column: 2)
!11163 = !DILocation(line: 133, column: 2, scope: !11162)
!11164 = !DILocation(line: 133, column: 2, scope: !11165)
!11165 = distinct !DILexicalBlock(scope: !11162, file: !3, line: 133, column: 2)
!11166 = !DILocation(line: 135, column: 18, scope: !11134)
!11167 = !DILocation(line: 135, column: 16, scope: !11134)
!11168 = !DILocation(line: 137, column: 2, scope: !11134)
!11169 = !DILocalVariable(name: "_v", scope: !11170, file: !3, line: 137, type: !762)
!11170 = distinct !DILexicalBlock(scope: !11134, file: !3, line: 137, column: 2)
!11171 = !DILocation(line: 137, column: 2, scope: !11170)
!11172 = !DILocation(line: 137, column: 2, scope: !11173)
!11173 = distinct !DILexicalBlock(scope: !11170, file: !3, line: 137, column: 2)
!11174 = !DILocation(line: 139, column: 2, scope: !11134)
!11175 = !DILocalVariable(name: "_v", scope: !11176, file: !3, line: 139, type: !762)
!11176 = distinct !DILexicalBlock(scope: !11134, file: !3, line: 139, column: 2)
!11177 = !DILocation(line: 139, column: 2, scope: !11176)
!11178 = !DILocation(line: 139, column: 2, scope: !11179)
!11179 = distinct !DILexicalBlock(scope: !11176, file: !3, line: 139, column: 2)
!11180 = !DILocalVariable(name: "_out", scope: !11181, file: !3, line: 142, type: !10940)
!11181 = distinct !DILexicalBlock(scope: !11134, file: !3, line: 142, column: 9)
!11182 = !DILocation(line: 142, column: 9, scope: !11181)
!11183 = !DILocation(line: 142, column: 9, scope: !11184)
!11184 = distinct !DILexicalBlock(scope: !11181, file: !3, line: 142, column: 9)
!11185 = !DILocation(line: 142, column: 2, scope: !11134)
!11186 = distinct !DISubprogram(name: "mlx5_query_nic_vport_mac_address", scope: !3, file: !3, line: 145, type: !11187, scopeLine: 147, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !798)
!11187 = !DISubroutineType(types: !11188)
!11188 = !{!37, !10073, !1092, !595, !7736}
!11189 = !DILocalVariable(name: "mdev", arg: 1, scope: !11186, file: !3, line: 145, type: !10073)
!11190 = !DILocation(line: 145, column: 60, scope: !11186)
!11191 = !DILocalVariable(name: "vport", arg: 2, scope: !11186, file: !3, line: 146, type: !1092)
!11192 = !DILocation(line: 146, column: 14, scope: !11186)
!11193 = !DILocalVariable(name: "other", arg: 3, scope: !11186, file: !3, line: 146, type: !595)
!11194 = !DILocation(line: 146, column: 26, scope: !11186)
!11195 = !DILocalVariable(name: "addr", arg: 4, scope: !11186, file: !3, line: 146, type: !7736)
!11196 = !DILocation(line: 146, column: 37, scope: !11186)
!11197 = !DILocalVariable(name: "out", scope: !11186, file: !3, line: 148, type: !11054)
!11198 = !DILocation(line: 148, column: 6, scope: !11186)
!11199 = !DILocalVariable(name: "in", scope: !11186, file: !3, line: 149, type: !10940)
!11200 = !DILocation(line: 149, column: 6, scope: !11186)
!11201 = !DILocalVariable(name: "out_addr", scope: !11186, file: !3, line: 150, type: !7736)
!11202 = !DILocation(line: 150, column: 6, scope: !11186)
!11203 = !DILocalVariable(name: "err", scope: !11186, file: !3, line: 151, type: !37)
!11204 = !DILocation(line: 151, column: 6, scope: !11186)
!11205 = !DILocation(line: 153, column: 13, scope: !11186)
!11206 = !DILocation(line: 153, column: 11, scope: !11186)
!11207 = !DILocation(line: 156, column: 2, scope: !11186)
!11208 = !DILocalVariable(name: "_v", scope: !11209, file: !3, line: 156, type: !762)
!11209 = distinct !DILexicalBlock(scope: !11186, file: !3, line: 156, column: 2)
!11210 = !DILocation(line: 156, column: 2, scope: !11209)
!11211 = !DILocation(line: 156, column: 2, scope: !11212)
!11212 = distinct !DILexicalBlock(scope: !11209, file: !3, line: 156, column: 2)
!11213 = !DILocation(line: 158, column: 2, scope: !11186)
!11214 = !DILocalVariable(name: "_v", scope: !11215, file: !3, line: 158, type: !762)
!11215 = distinct !DILexicalBlock(scope: !11186, file: !3, line: 158, column: 2)
!11216 = !DILocation(line: 158, column: 2, scope: !11215)
!11217 = !DILocation(line: 158, column: 2, scope: !11218)
!11218 = distinct !DILexicalBlock(scope: !11215, file: !3, line: 158, column: 2)
!11219 = !DILocation(line: 159, column: 2, scope: !11186)
!11220 = !DILocalVariable(name: "_v", scope: !11221, file: !3, line: 159, type: !762)
!11221 = distinct !DILexicalBlock(scope: !11186, file: !3, line: 159, column: 2)
!11222 = !DILocation(line: 159, column: 2, scope: !11221)
!11223 = !DILocation(line: 159, column: 2, scope: !11224)
!11224 = distinct !DILexicalBlock(scope: !11221, file: !3, line: 159, column: 2)
!11225 = !DILocation(line: 161, column: 8, scope: !11226)
!11226 = distinct !DILexicalBlock(scope: !11186, file: !3, line: 161, column: 8)
!11227 = !DILocation(line: 161, column: 8, scope: !11186)
!11228 = !DILocation(line: 161, column: 6, scope: !11186)
!11229 = !DILocation(line: 162, column: 7, scope: !11230)
!11230 = distinct !DILexicalBlock(scope: !11186, file: !3, line: 162, column: 6)
!11231 = !DILocation(line: 162, column: 6, scope: !11186)
!11232 = !DILocation(line: 163, column: 19, scope: !11230)
!11233 = !DILocation(line: 163, column: 26, scope: !11230)
!11234 = !DILocation(line: 163, column: 3, scope: !11230)
!11235 = !DILocation(line: 165, column: 9, scope: !11186)
!11236 = !DILocation(line: 165, column: 2, scope: !11186)
!11237 = distinct !DISubprogram(name: "ether_addr_copy", scope: !11238, file: !11238, line: 287, type: !11239, scopeLine: 288, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !798)
!11238 = !DIFile(filename: "./include/linux/etherdevice.h", directory: "/home/lizy2001/genbc/linux")
!11239 = !DISubroutineType(types: !11240)
!11240 = !{null, !7736, !8288}
!11241 = !DILocalVariable(name: "dst", arg: 1, scope: !11237, file: !11238, line: 287, type: !7736)
!11242 = !DILocation(line: 287, column: 40, scope: !11237)
!11243 = !DILocalVariable(name: "src", arg: 2, scope: !11237, file: !11238, line: 287, type: !8288)
!11244 = !DILocation(line: 287, column: 55, scope: !11237)
!11245 = !DILocation(line: 290, column: 30, scope: !11237)
!11246 = !DILocation(line: 290, column: 16, scope: !11237)
!11247 = !DILocation(line: 290, column: 10, scope: !11237)
!11248 = !DILocation(line: 290, column: 2, scope: !11237)
!11249 = !DILocation(line: 290, column: 14, scope: !11237)
!11250 = !DILocation(line: 291, column: 37, scope: !11237)
!11251 = !DILocation(line: 291, column: 41, scope: !11237)
!11252 = !DILocation(line: 291, column: 22, scope: !11237)
!11253 = !DILocation(line: 291, column: 11, scope: !11237)
!11254 = !DILocation(line: 291, column: 15, scope: !11237)
!11255 = !DILocation(line: 291, column: 2, scope: !11237)
!11256 = !DILocation(line: 291, column: 20, scope: !11237)
!11257 = !DILocation(line: 300, column: 1, scope: !11237)
!11258 = distinct !DISubprogram(name: "mlx5_query_mac_address", scope: !3, file: !3, line: 169, type: !11259, scopeLine: 170, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !798)
!11259 = !DISubroutineType(types: !11260)
!11260 = !{!37, !10073, !7736}
!11261 = !DILocalVariable(name: "mdev", arg: 1, scope: !11258, file: !3, line: 169, type: !10073)
!11262 = !DILocation(line: 169, column: 50, scope: !11258)
!11263 = !DILocalVariable(name: "addr", arg: 2, scope: !11258, file: !3, line: 169, type: !7736)
!11264 = !DILocation(line: 169, column: 60, scope: !11258)
!11265 = !DILocation(line: 171, column: 42, scope: !11258)
!11266 = !DILocation(line: 171, column: 58, scope: !11258)
!11267 = !DILocation(line: 171, column: 9, scope: !11258)
!11268 = !DILocation(line: 171, column: 2, scope: !11258)
!11269 = distinct !DISubprogram(name: "mlx5_modify_nic_vport_mac_address", scope: !3, file: !3, line: 175, type: !11270, scopeLine: 177, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !798)
!11270 = !DISubroutineType(types: !11271)
!11271 = !{!37, !10073, !1092, !8288}
!11272 = !DILocalVariable(name: "mdev", arg: 1, scope: !11269, file: !3, line: 175, type: !10073)
!11273 = !DILocation(line: 175, column: 61, scope: !11269)
!11274 = !DILocalVariable(name: "vport", arg: 2, scope: !11269, file: !3, line: 176, type: !1092)
!11275 = !DILocation(line: 176, column: 15, scope: !11269)
!11276 = !DILocalVariable(name: "addr", arg: 3, scope: !11269, file: !3, line: 176, type: !8288)
!11277 = !DILocation(line: 176, column: 32, scope: !11269)
!11278 = !DILocalVariable(name: "in", scope: !11269, file: !3, line: 178, type: !625)
!11279 = !DILocation(line: 178, column: 8, scope: !11269)
!11280 = !DILocalVariable(name: "inlen", scope: !11269, file: !3, line: 179, type: !37)
!11281 = !DILocation(line: 179, column: 6, scope: !11269)
!11282 = !DILocalVariable(name: "err", scope: !11269, file: !3, line: 180, type: !37)
!11283 = !DILocation(line: 180, column: 6, scope: !11269)
!11284 = !DILocalVariable(name: "nic_vport_ctx", scope: !11269, file: !3, line: 181, type: !625)
!11285 = !DILocation(line: 181, column: 8, scope: !11269)
!11286 = !DILocalVariable(name: "perm_mac", scope: !11269, file: !3, line: 182, type: !7736)
!11287 = !DILocation(line: 182, column: 6, scope: !11269)
!11288 = !DILocation(line: 184, column: 16, scope: !11269)
!11289 = !DILocation(line: 184, column: 7, scope: !11269)
!11290 = !DILocation(line: 184, column: 5, scope: !11269)
!11291 = !DILocation(line: 185, column: 7, scope: !11292)
!11292 = distinct !DILexicalBlock(scope: !11269, file: !3, line: 185, column: 6)
!11293 = !DILocation(line: 185, column: 6, scope: !11269)
!11294 = !DILocation(line: 186, column: 3, scope: !11292)
!11295 = !DILocation(line: 188, column: 2, scope: !11269)
!11296 = !DILocalVariable(name: "_v", scope: !11297, file: !3, line: 188, type: !762)
!11297 = distinct !DILexicalBlock(scope: !11269, file: !3, line: 188, column: 2)
!11298 = !DILocation(line: 188, column: 2, scope: !11297)
!11299 = !DILocation(line: 188, column: 2, scope: !11300)
!11300 = distinct !DILexicalBlock(scope: !11297, file: !3, line: 188, column: 2)
!11301 = !DILocation(line: 190, column: 2, scope: !11269)
!11302 = !DILocalVariable(name: "_v", scope: !11303, file: !3, line: 190, type: !762)
!11303 = distinct !DILexicalBlock(scope: !11269, file: !3, line: 190, column: 2)
!11304 = !DILocation(line: 190, column: 2, scope: !11303)
!11305 = !DILocation(line: 190, column: 2, scope: !11306)
!11306 = distinct !DILexicalBlock(scope: !11303, file: !3, line: 190, column: 2)
!11307 = !DILocation(line: 191, column: 2, scope: !11269)
!11308 = !DILocalVariable(name: "_v", scope: !11309, file: !3, line: 191, type: !762)
!11309 = distinct !DILexicalBlock(scope: !11269, file: !3, line: 191, column: 2)
!11310 = !DILocation(line: 191, column: 2, scope: !11309)
!11311 = !DILocation(line: 191, column: 2, scope: !11312)
!11312 = distinct !DILexicalBlock(scope: !11309, file: !3, line: 191, column: 2)
!11313 = !DILocation(line: 193, column: 18, scope: !11269)
!11314 = !DILocation(line: 193, column: 16, scope: !11269)
!11315 = !DILocation(line: 195, column: 13, scope: !11269)
!11316 = !DILocation(line: 195, column: 11, scope: !11269)
!11317 = !DILocation(line: 198, column: 19, scope: !11269)
!11318 = !DILocation(line: 198, column: 32, scope: !11269)
!11319 = !DILocation(line: 198, column: 2, scope: !11269)
!11320 = !DILocation(line: 199, column: 2, scope: !11269)
!11321 = !DILocalVariable(name: "_v", scope: !11322, file: !3, line: 199, type: !762)
!11322 = distinct !DILexicalBlock(scope: !11269, file: !3, line: 199, column: 2)
!11323 = !DILocation(line: 199, column: 2, scope: !11322)
!11324 = !DILocation(line: 199, column: 2, scope: !11325)
!11325 = distinct !DILexicalBlock(scope: !11322, file: !3, line: 199, column: 2)
!11326 = !DILocalVariable(name: "_out", scope: !11327, file: !3, line: 202, type: !10940)
!11327 = distinct !DILexicalBlock(scope: !11269, file: !3, line: 202, column: 8)
!11328 = !DILocation(line: 202, column: 8, scope: !11327)
!11329 = !DILocation(line: 202, column: 8, scope: !11330)
!11330 = distinct !DILexicalBlock(scope: !11327, file: !3, line: 202, column: 8)
!11331 = !DILocation(line: 202, column: 6, scope: !11269)
!11332 = !DILocation(line: 204, column: 9, scope: !11269)
!11333 = !DILocation(line: 204, column: 2, scope: !11269)
!11334 = !DILocation(line: 206, column: 9, scope: !11269)
!11335 = !DILocation(line: 206, column: 2, scope: !11269)
!11336 = !DILocation(line: 207, column: 1, scope: !11269)
!11337 = distinct !DISubprogram(name: "kvzalloc", scope: !19, file: !19, line: 771, type: !11338, scopeLine: 772, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !798)
!11338 = !DISubroutineType(types: !11339)
!11339 = !{!625, !649, !1612}
!11340 = !DILocalVariable(name: "size", arg: 1, scope: !11337, file: !19, line: 771, type: !649)
!11341 = !DILocation(line: 771, column: 37, scope: !11337)
!11342 = !DILocalVariable(name: "flags", arg: 2, scope: !11337, file: !19, line: 771, type: !1612)
!11343 = !DILocation(line: 771, column: 49, scope: !11337)
!11344 = !DILocation(line: 773, column: 18, scope: !11337)
!11345 = !DILocation(line: 773, column: 24, scope: !11337)
!11346 = !DILocation(line: 773, column: 30, scope: !11337)
!11347 = !DILocation(line: 773, column: 9, scope: !11337)
!11348 = !DILocation(line: 773, column: 2, scope: !11337)
!11349 = distinct !DISubprogram(name: "mlx5_query_nic_vport_mtu", scope: !3, file: !3, line: 210, type: !11350, scopeLine: 211, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !798)
!11350 = !DISubroutineType(types: !11351)
!11351 = !{!37, !10073, !8151}
!11352 = !DILocalVariable(name: "mdev", arg: 1, scope: !11349, file: !3, line: 210, type: !10073)
!11353 = !DILocation(line: 210, column: 52, scope: !11349)
!11354 = !DILocalVariable(name: "mtu", arg: 2, scope: !11349, file: !3, line: 210, type: !8151)
!11355 = !DILocation(line: 210, column: 63, scope: !11349)
!11356 = !DILocalVariable(name: "outlen", scope: !11349, file: !3, line: 212, type: !37)
!11357 = !DILocation(line: 212, column: 6, scope: !11349)
!11358 = !DILocalVariable(name: "out", scope: !11349, file: !3, line: 213, type: !1514)
!11359 = !DILocation(line: 213, column: 7, scope: !11349)
!11360 = !DILocalVariable(name: "err", scope: !11349, file: !3, line: 214, type: !37)
!11361 = !DILocation(line: 214, column: 6, scope: !11349)
!11362 = !DILocation(line: 216, column: 17, scope: !11349)
!11363 = !DILocation(line: 216, column: 8, scope: !11349)
!11364 = !DILocation(line: 216, column: 6, scope: !11349)
!11365 = !DILocation(line: 217, column: 7, scope: !11366)
!11366 = distinct !DILexicalBlock(scope: !11349, file: !3, line: 217, column: 6)
!11367 = !DILocation(line: 217, column: 6, scope: !11349)
!11368 = !DILocation(line: 218, column: 3, scope: !11366)
!11369 = !DILocation(line: 220, column: 37, scope: !11349)
!11370 = !DILocation(line: 220, column: 46, scope: !11349)
!11371 = !DILocation(line: 220, column: 8, scope: !11349)
!11372 = !DILocation(line: 220, column: 6, scope: !11349)
!11373 = !DILocation(line: 221, column: 7, scope: !11374)
!11374 = distinct !DILexicalBlock(scope: !11349, file: !3, line: 221, column: 6)
!11375 = !DILocation(line: 221, column: 6, scope: !11349)
!11376 = !DILocation(line: 222, column: 10, scope: !11374)
!11377 = !DILocation(line: 222, column: 4, scope: !11374)
!11378 = !DILocation(line: 222, column: 8, scope: !11374)
!11379 = !DILocation(line: 222, column: 3, scope: !11374)
!11380 = !DILocation(line: 225, column: 9, scope: !11349)
!11381 = !DILocation(line: 225, column: 2, scope: !11349)
!11382 = !DILocation(line: 226, column: 9, scope: !11349)
!11383 = !DILocation(line: 226, column: 2, scope: !11349)
!11384 = !DILocation(line: 227, column: 1, scope: !11349)
!11385 = distinct !DISubprogram(name: "mlx5_modify_nic_vport_mtu", scope: !3, file: !3, line: 230, type: !11386, scopeLine: 231, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !798)
!11386 = !DISubroutineType(types: !11387)
!11387 = !{!37, !10073, !1092}
!11388 = !DILocalVariable(name: "mdev", arg: 1, scope: !11385, file: !3, line: 230, type: !10073)
!11389 = !DILocation(line: 230, column: 53, scope: !11385)
!11390 = !DILocalVariable(name: "mtu", arg: 2, scope: !11385, file: !3, line: 230, type: !1092)
!11391 = !DILocation(line: 230, column: 63, scope: !11385)
!11392 = !DILocalVariable(name: "inlen", scope: !11385, file: !3, line: 232, type: !37)
!11393 = !DILocation(line: 232, column: 6, scope: !11385)
!11394 = !DILocalVariable(name: "in", scope: !11385, file: !3, line: 233, type: !625)
!11395 = !DILocation(line: 233, column: 8, scope: !11385)
!11396 = !DILocalVariable(name: "err", scope: !11385, file: !3, line: 234, type: !37)
!11397 = !DILocation(line: 234, column: 6, scope: !11385)
!11398 = !DILocation(line: 236, column: 16, scope: !11385)
!11399 = !DILocation(line: 236, column: 7, scope: !11385)
!11400 = !DILocation(line: 236, column: 5, scope: !11385)
!11401 = !DILocation(line: 237, column: 7, scope: !11402)
!11402 = distinct !DILexicalBlock(scope: !11385, file: !3, line: 237, column: 6)
!11403 = !DILocation(line: 237, column: 6, scope: !11385)
!11404 = !DILocation(line: 238, column: 3, scope: !11402)
!11405 = !DILocation(line: 240, column: 2, scope: !11385)
!11406 = !DILocalVariable(name: "_v", scope: !11407, file: !3, line: 240, type: !762)
!11407 = distinct !DILexicalBlock(scope: !11385, file: !3, line: 240, column: 2)
!11408 = !DILocation(line: 240, column: 2, scope: !11407)
!11409 = !DILocation(line: 240, column: 2, scope: !11410)
!11410 = distinct !DILexicalBlock(scope: !11407, file: !3, line: 240, column: 2)
!11411 = !DILocation(line: 241, column: 2, scope: !11385)
!11412 = !DILocalVariable(name: "_v", scope: !11413, file: !3, line: 241, type: !762)
!11413 = distinct !DILexicalBlock(scope: !11385, file: !3, line: 241, column: 2)
!11414 = !DILocation(line: 241, column: 2, scope: !11413)
!11415 = !DILocation(line: 241, column: 2, scope: !11416)
!11416 = distinct !DILexicalBlock(scope: !11413, file: !3, line: 241, column: 2)
!11417 = !DILocation(line: 242, column: 2, scope: !11385)
!11418 = !DILocalVariable(name: "_v", scope: !11419, file: !3, line: 242, type: !762)
!11419 = distinct !DILexicalBlock(scope: !11385, file: !3, line: 242, column: 2)
!11420 = !DILocation(line: 242, column: 2, scope: !11419)
!11421 = !DILocation(line: 242, column: 2, scope: !11422)
!11422 = distinct !DILexicalBlock(scope: !11419, file: !3, line: 242, column: 2)
!11423 = !DILocalVariable(name: "_out", scope: !11424, file: !3, line: 245, type: !10940)
!11424 = distinct !DILexicalBlock(scope: !11385, file: !3, line: 245, column: 8)
!11425 = !DILocation(line: 245, column: 8, scope: !11424)
!11426 = !DILocation(line: 245, column: 8, scope: !11427)
!11427 = distinct !DILexicalBlock(scope: !11424, file: !3, line: 245, column: 8)
!11428 = !DILocation(line: 245, column: 6, scope: !11385)
!11429 = !DILocation(line: 247, column: 9, scope: !11385)
!11430 = !DILocation(line: 247, column: 2, scope: !11385)
!11431 = !DILocation(line: 248, column: 9, scope: !11385)
!11432 = !DILocation(line: 248, column: 2, scope: !11385)
!11433 = !DILocation(line: 249, column: 1, scope: !11385)
!11434 = distinct !DISubprogram(name: "mlx5_query_nic_vport_mac_list", scope: !3, file: !3, line: 252, type: !11435, scopeLine: 257, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !798)
!11435 = !DISubroutineType(types: !11436)
!11436 = !{!37, !10073, !1092, !10010, !11437, !594}
!11437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11438, size: 64)
!11438 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1451, size: 48, elements: !1722)
!11439 = !DILocalVariable(name: "pscr_ret__", scope: !11440, file: !11441, line: 15, type: !1311)
!11440 = distinct !DILexicalBlock(scope: !11442, file: !11441, line: 15, column: 9)
!11441 = !DIFile(filename: "./arch/x86/include/asm/current.h", directory: "/home/lizy2001/genbc/linux")
!11442 = distinct !DISubprogram(name: "get_current", scope: !11441, file: !11441, line: 13, type: !11443, scopeLine: 14, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !798)
!11443 = !DISubroutineType(types: !11444)
!11444 = !{!1311}
!11445 = !DILocation(line: 15, column: 9, scope: !11440, inlinedAt: !11446)
!11446 = distinct !DILocation(line: 274, column: 3, scope: !11447)
!11447 = distinct !DILexicalBlock(scope: !11448, file: !3, line: 273, column: 37)
!11448 = distinct !DILexicalBlock(scope: !11434, file: !3, line: 273, column: 6)
!11449 = !DILocalVariable(name: "__vpp_verify", scope: !11450, file: !11441, line: 15, type: !2337)
!11450 = distinct !DILexicalBlock(scope: !11440, file: !11441, line: 15, column: 9)
!11451 = !DILocation(line: 15, column: 9, scope: !11450, inlinedAt: !11446)
!11452 = !DILocalVariable(name: "pfo_val__", scope: !11453, file: !11441, line: 15, type: !391)
!11453 = distinct !DILexicalBlock(scope: !11440, file: !11441, line: 15, column: 9)
!11454 = !DILocation(line: 15, column: 9, scope: !11453, inlinedAt: !11446)
!11455 = !DILocalVariable(name: "dev", arg: 1, scope: !11434, file: !3, line: 252, type: !10073)
!11456 = !DILocation(line: 252, column: 57, scope: !11434)
!11457 = !DILocalVariable(name: "vport", arg: 2, scope: !11434, file: !3, line: 253, type: !1092)
!11458 = !DILocation(line: 253, column: 11, scope: !11434)
!11459 = !DILocalVariable(name: "list_type", arg: 3, scope: !11434, file: !3, line: 254, type: !10010)
!11460 = !DILocation(line: 254, column: 27, scope: !11434)
!11461 = !DILocalVariable(name: "addr_list", arg: 4, scope: !11434, file: !3, line: 255, type: !11437)
!11462 = !DILocation(line: 255, column: 10, scope: !11434)
!11463 = !DILocalVariable(name: "list_size", arg: 5, scope: !11434, file: !3, line: 256, type: !594)
!11464 = !DILocation(line: 256, column: 12, scope: !11434)
!11465 = !DILocalVariable(name: "in", scope: !11434, file: !3, line: 258, type: !10940)
!11466 = !DILocation(line: 258, column: 6, scope: !11434)
!11467 = !DILocalVariable(name: "nic_vport_ctx", scope: !11434, file: !3, line: 259, type: !625)
!11468 = !DILocation(line: 259, column: 8, scope: !11434)
!11469 = !DILocalVariable(name: "max_list_size", scope: !11434, file: !3, line: 260, type: !37)
!11470 = !DILocation(line: 260, column: 6, scope: !11434)
!11471 = !DILocalVariable(name: "req_list_size", scope: !11434, file: !3, line: 261, type: !37)
!11472 = !DILocation(line: 261, column: 6, scope: !11434)
!11473 = !DILocalVariable(name: "out_sz", scope: !11434, file: !3, line: 262, type: !37)
!11474 = !DILocation(line: 262, column: 6, scope: !11434)
!11475 = !DILocalVariable(name: "out", scope: !11434, file: !3, line: 263, type: !625)
!11476 = !DILocation(line: 263, column: 8, scope: !11434)
!11477 = !DILocalVariable(name: "err", scope: !11434, file: !3, line: 264, type: !37)
!11478 = !DILocation(line: 264, column: 6, scope: !11434)
!11479 = !DILocalVariable(name: "i", scope: !11434, file: !3, line: 265, type: !37)
!11480 = !DILocation(line: 265, column: 6, scope: !11434)
!11481 = !DILocation(line: 267, column: 19, scope: !11434)
!11482 = !DILocation(line: 267, column: 18, scope: !11434)
!11483 = !DILocation(line: 267, column: 16, scope: !11434)
!11484 = !DILocation(line: 269, column: 18, scope: !11434)
!11485 = !DILocation(line: 269, column: 28, scope: !11434)
!11486 = !DILocation(line: 270, column: 8, scope: !11434)
!11487 = !DILocation(line: 270, column: 5, scope: !11434)
!11488 = !DILocation(line: 271, column: 8, scope: !11434)
!11489 = !DILocation(line: 271, column: 5, scope: !11434)
!11490 = !DILocation(line: 269, column: 16, scope: !11434)
!11491 = !DILocation(line: 273, column: 6, scope: !11448)
!11492 = !DILocation(line: 273, column: 22, scope: !11448)
!11493 = !DILocation(line: 273, column: 20, scope: !11448)
!11494 = !DILocation(line: 273, column: 6, scope: !11434)
!11495 = !DILocation(line: 274, column: 3, scope: !11447)
!11496 = !{i32 -2146158842}
!11497 = !DILocation(line: 276, column: 19, scope: !11447)
!11498 = !DILocation(line: 276, column: 17, scope: !11447)
!11499 = !DILocation(line: 277, column: 2, scope: !11447)
!11500 = !DILocation(line: 280, column: 4, scope: !11434)
!11501 = !DILocation(line: 280, column: 18, scope: !11434)
!11502 = !DILocation(line: 279, column: 56, scope: !11434)
!11503 = !DILocation(line: 279, column: 11, scope: !11434)
!11504 = !DILocation(line: 279, column: 9, scope: !11434)
!11505 = !DILocation(line: 282, column: 16, scope: !11434)
!11506 = !DILocation(line: 282, column: 8, scope: !11434)
!11507 = !DILocation(line: 282, column: 6, scope: !11434)
!11508 = !DILocation(line: 283, column: 7, scope: !11509)
!11509 = distinct !DILexicalBlock(scope: !11434, file: !3, line: 283, column: 6)
!11510 = !DILocation(line: 283, column: 6, scope: !11434)
!11511 = !DILocation(line: 284, column: 3, scope: !11509)
!11512 = !DILocation(line: 286, column: 2, scope: !11434)
!11513 = !DILocalVariable(name: "_v", scope: !11514, file: !3, line: 286, type: !762)
!11514 = distinct !DILexicalBlock(scope: !11434, file: !3, line: 286, column: 2)
!11515 = !DILocation(line: 286, column: 2, scope: !11514)
!11516 = !DILocation(line: 286, column: 2, scope: !11517)
!11517 = distinct !DILexicalBlock(scope: !11514, file: !3, line: 286, column: 2)
!11518 = !DILocation(line: 288, column: 2, scope: !11434)
!11519 = !DILocalVariable(name: "_v", scope: !11520, file: !3, line: 288, type: !762)
!11520 = distinct !DILexicalBlock(scope: !11434, file: !3, line: 288, column: 2)
!11521 = !DILocation(line: 288, column: 2, scope: !11520)
!11522 = !DILocation(line: 288, column: 2, scope: !11523)
!11523 = distinct !DILexicalBlock(scope: !11520, file: !3, line: 288, column: 2)
!11524 = !DILocation(line: 289, column: 2, scope: !11434)
!11525 = !DILocalVariable(name: "_v", scope: !11526, file: !3, line: 289, type: !762)
!11526 = distinct !DILexicalBlock(scope: !11434, file: !3, line: 289, column: 2)
!11527 = !DILocation(line: 289, column: 2, scope: !11526)
!11528 = !DILocation(line: 289, column: 2, scope: !11529)
!11529 = distinct !DILexicalBlock(scope: !11526, file: !3, line: 289, column: 2)
!11530 = !DILocation(line: 290, column: 2, scope: !11434)
!11531 = !DILocalVariable(name: "_v", scope: !11532, file: !3, line: 290, type: !762)
!11532 = distinct !DILexicalBlock(scope: !11434, file: !3, line: 290, column: 2)
!11533 = !DILocation(line: 290, column: 2, scope: !11532)
!11534 = !DILocation(line: 290, column: 2, scope: !11535)
!11535 = distinct !DILexicalBlock(scope: !11532, file: !3, line: 290, column: 2)
!11536 = !DILocation(line: 292, column: 22, scope: !11434)
!11537 = !DILocation(line: 292, column: 27, scope: !11434)
!11538 = !DILocation(line: 292, column: 43, scope: !11434)
!11539 = !DILocation(line: 292, column: 48, scope: !11434)
!11540 = !DILocation(line: 292, column: 8, scope: !11434)
!11541 = !DILocation(line: 292, column: 6, scope: !11434)
!11542 = !DILocation(line: 293, column: 6, scope: !11543)
!11543 = distinct !DILexicalBlock(scope: !11434, file: !3, line: 293, column: 6)
!11544 = !DILocation(line: 293, column: 6, scope: !11434)
!11545 = !DILocation(line: 294, column: 3, scope: !11543)
!11546 = !DILocation(line: 296, column: 18, scope: !11434)
!11547 = !DILocation(line: 296, column: 16, scope: !11434)
!11548 = !DILocation(line: 298, column: 18, scope: !11434)
!11549 = !DILocation(line: 298, column: 16, scope: !11434)
!11550 = !DILocation(line: 301, column: 15, scope: !11434)
!11551 = !DILocation(line: 301, column: 3, scope: !11434)
!11552 = !DILocation(line: 301, column: 13, scope: !11434)
!11553 = !DILocation(line: 302, column: 9, scope: !11554)
!11554 = distinct !DILexicalBlock(scope: !11434, file: !3, line: 302, column: 2)
!11555 = !DILocation(line: 302, column: 7, scope: !11554)
!11556 = !DILocation(line: 302, column: 14, scope: !11557)
!11557 = distinct !DILexicalBlock(scope: !11554, file: !3, line: 302, column: 2)
!11558 = !DILocation(line: 302, column: 18, scope: !11557)
!11559 = !DILocation(line: 302, column: 16, scope: !11557)
!11560 = !DILocation(line: 302, column: 2, scope: !11554)
!11561 = !DILocalVariable(name: "mac_addr", scope: !11562, file: !3, line: 303, type: !7736)
!11562 = distinct !DILexicalBlock(scope: !11557, file: !3, line: 302, column: 38)
!11563 = !DILocation(line: 303, column: 7, scope: !11562)
!11564 = !DILocation(line: 303, column: 18, scope: !11562)
!11565 = !DILocation(line: 305, column: 33, scope: !11562)
!11566 = !DILocation(line: 306, column: 19, scope: !11562)
!11567 = !DILocation(line: 306, column: 29, scope: !11562)
!11568 = !DILocation(line: 306, column: 33, scope: !11562)
!11569 = !DILocation(line: 306, column: 3, scope: !11562)
!11570 = !DILocation(line: 307, column: 2, scope: !11562)
!11571 = !DILocation(line: 302, column: 34, scope: !11557)
!11572 = !DILocation(line: 302, column: 2, scope: !11557)
!11573 = distinct !{!11573, !11560, !11574}
!11574 = !DILocation(line: 307, column: 2, scope: !11554)
!11575 = !DILabel(scope: !11434, name: "out", file: !3, line: 308)
!11576 = !DILocation(line: 308, column: 1, scope: !11434)
!11577 = !DILocation(line: 309, column: 8, scope: !11434)
!11578 = !DILocation(line: 309, column: 2, scope: !11434)
!11579 = !DILocation(line: 310, column: 9, scope: !11434)
!11580 = !DILocation(line: 310, column: 2, scope: !11434)
!11581 = !DILocation(line: 311, column: 1, scope: !11434)
!11582 = distinct !DISubprogram(name: "kzalloc", scope: !10045, file: !10045, line: 662, type: !11338, scopeLine: 663, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !798)
!11583 = !DILocalVariable(name: "s", arg: 1, scope: !11584, file: !10045, line: 445, type: !1620)
!11584 = distinct !DISubprogram(name: "kmem_cache_alloc_trace", scope: !10045, file: !10045, line: 445, type: !11585, scopeLine: 447, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !798)
!11585 = !DISubroutineType(types: !11586)
!11586 = !{!625, !1620, !1612, !649}
!11587 = !DILocation(line: 445, column: 72, scope: !11584, inlinedAt: !11588)
!11588 = distinct !DILocation(line: 552, column: 10, scope: !11589, inlinedAt: !11592)
!11589 = distinct !DILexicalBlock(scope: !11590, file: !10045, line: 540, column: 34)
!11590 = distinct !DILexicalBlock(scope: !11591, file: !10045, line: 540, column: 6)
!11591 = distinct !DISubprogram(name: "kmalloc", scope: !10045, file: !10045, line: 538, type: !11338, scopeLine: 539, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !798)
!11592 = distinct !DILocation(line: 664, column: 9, scope: !11582)
!11593 = !DILocalVariable(name: "flags", arg: 2, scope: !11584, file: !10045, line: 446, type: !1612)
!11594 = !DILocation(line: 446, column: 9, scope: !11584, inlinedAt: !11588)
!11595 = !DILocalVariable(name: "size", arg: 3, scope: !11584, file: !10045, line: 446, type: !649)
!11596 = !DILocation(line: 446, column: 23, scope: !11584, inlinedAt: !11588)
!11597 = !DILocalVariable(name: "ret", scope: !11584, file: !10045, line: 448, type: !625)
!11598 = !DILocation(line: 448, column: 8, scope: !11584, inlinedAt: !11588)
!11599 = !DILocalVariable(name: "flags", arg: 1, scope: !11600, file: !10045, line: 318, type: !1612)
!11600 = distinct !DISubprogram(name: "kmalloc_type", scope: !10045, file: !10045, line: 318, type: !11601, scopeLine: 319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !798)
!11601 = !DISubroutineType(types: !11602)
!11602 = !{!10044, !1612}
!11603 = !DILocation(line: 318, column: 67, scope: !11600, inlinedAt: !11604)
!11604 = distinct !DILocation(line: 553, column: 20, scope: !11589, inlinedAt: !11592)
!11605 = !DILocalVariable(name: "size", arg: 1, scope: !11606, file: !10045, line: 346, type: !649)
!11606 = distinct !DISubprogram(name: "kmalloc_index", scope: !10045, file: !10045, line: 346, type: !11607, scopeLine: 347, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !798)
!11607 = !DISubroutineType(types: !11608)
!11608 = !{!7, !649}
!11609 = !DILocation(line: 346, column: 58, scope: !11606, inlinedAt: !11610)
!11610 = distinct !DILocation(line: 547, column: 11, scope: !11589, inlinedAt: !11592)
!11611 = !DILocalVariable(name: "size", arg: 1, scope: !11612, file: !10045, line: 472, type: !649)
!11612 = distinct !DISubprogram(name: "kmalloc_order_trace", scope: !10045, file: !10045, line: 472, type: !11613, scopeLine: 473, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !798)
!11613 = !DISubroutineType(types: !11614)
!11614 = !{!625, !649, !1612, !7}
!11615 = !DILocation(line: 472, column: 28, scope: !11612, inlinedAt: !11616)
!11616 = distinct !DILocation(line: 481, column: 9, scope: !11617, inlinedAt: !11618)
!11617 = distinct !DISubprogram(name: "kmalloc_large", scope: !10045, file: !10045, line: 478, type: !11338, scopeLine: 479, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !798)
!11618 = distinct !DILocation(line: 545, column: 11, scope: !11619, inlinedAt: !11592)
!11619 = distinct !DILexicalBlock(scope: !11589, file: !10045, line: 544, column: 7)
!11620 = !DILocalVariable(name: "flags", arg: 2, scope: !11612, file: !10045, line: 472, type: !1612)
!11621 = !DILocation(line: 472, column: 40, scope: !11612, inlinedAt: !11616)
!11622 = !DILocalVariable(name: "order", arg: 3, scope: !11612, file: !10045, line: 472, type: !7)
!11623 = !DILocation(line: 472, column: 60, scope: !11612, inlinedAt: !11616)
!11624 = !DILocalVariable(name: "size", arg: 1, scope: !11617, file: !10045, line: 478, type: !649)
!11625 = !DILocation(line: 478, column: 51, scope: !11617, inlinedAt: !11618)
!11626 = !DILocalVariable(name: "flags", arg: 2, scope: !11617, file: !10045, line: 478, type: !1612)
!11627 = !DILocation(line: 478, column: 63, scope: !11617, inlinedAt: !11618)
!11628 = !DILocalVariable(name: "order", scope: !11617, file: !10045, line: 480, type: !7)
!11629 = !DILocation(line: 480, column: 15, scope: !11617, inlinedAt: !11618)
!11630 = !DILocalVariable(name: "size", arg: 1, scope: !11591, file: !10045, line: 538, type: !649)
!11631 = !DILocation(line: 538, column: 45, scope: !11591, inlinedAt: !11592)
!11632 = !DILocalVariable(name: "flags", arg: 2, scope: !11591, file: !10045, line: 538, type: !1612)
!11633 = !DILocation(line: 538, column: 57, scope: !11591, inlinedAt: !11592)
!11634 = !DILocalVariable(name: "index", scope: !11589, file: !10045, line: 542, type: !7)
!11635 = !DILocation(line: 542, column: 16, scope: !11589, inlinedAt: !11592)
!11636 = !DILocalVariable(name: "size", arg: 1, scope: !11582, file: !10045, line: 662, type: !649)
!11637 = !DILocation(line: 662, column: 36, scope: !11582)
!11638 = !DILocalVariable(name: "flags", arg: 2, scope: !11582, file: !10045, line: 662, type: !1612)
!11639 = !DILocation(line: 662, column: 48, scope: !11582)
!11640 = !DILocation(line: 664, column: 17, scope: !11582)
!11641 = !DILocation(line: 664, column: 23, scope: !11582)
!11642 = !DILocation(line: 664, column: 29, scope: !11582)
!11643 = !DILocation(line: 540, column: 27, scope: !11590, inlinedAt: !11592)
!11644 = !DILocation(line: 540, column: 6, scope: !11590, inlinedAt: !11592)
!11645 = !DILocation(line: 540, column: 6, scope: !11591, inlinedAt: !11592)
!11646 = !DILocation(line: 544, column: 7, scope: !11619, inlinedAt: !11592)
!11647 = !DILocation(line: 544, column: 12, scope: !11619, inlinedAt: !11592)
!11648 = !DILocation(line: 544, column: 7, scope: !11589, inlinedAt: !11592)
!11649 = !DILocation(line: 545, column: 25, scope: !11619, inlinedAt: !11592)
!11650 = !DILocation(line: 545, column: 31, scope: !11619, inlinedAt: !11592)
!11651 = !DILocation(line: 480, column: 33, scope: !11617, inlinedAt: !11618)
!11652 = !DILocation(line: 480, column: 23, scope: !11617, inlinedAt: !11618)
!11653 = !DILocation(line: 481, column: 29, scope: !11617, inlinedAt: !11618)
!11654 = !DILocation(line: 481, column: 35, scope: !11617, inlinedAt: !11618)
!11655 = !DILocation(line: 481, column: 42, scope: !11617, inlinedAt: !11618)
!11656 = !DILocation(line: 474, column: 23, scope: !11612, inlinedAt: !11616)
!11657 = !DILocation(line: 474, column: 29, scope: !11612, inlinedAt: !11616)
!11658 = !DILocation(line: 474, column: 36, scope: !11612, inlinedAt: !11616)
!11659 = !DILocation(line: 474, column: 9, scope: !11612, inlinedAt: !11616)
!11660 = !DILocation(line: 545, column: 4, scope: !11619, inlinedAt: !11592)
!11661 = !DILocation(line: 547, column: 25, scope: !11589, inlinedAt: !11592)
!11662 = !DILocation(line: 348, column: 7, scope: !11663, inlinedAt: !11610)
!11663 = distinct !DILexicalBlock(scope: !11606, file: !10045, line: 348, column: 6)
!11664 = !DILocation(line: 348, column: 6, scope: !11606, inlinedAt: !11610)
!11665 = !DILocation(line: 349, column: 3, scope: !11663, inlinedAt: !11610)
!11666 = !DILocation(line: 351, column: 6, scope: !11667, inlinedAt: !11610)
!11667 = distinct !DILexicalBlock(scope: !11606, file: !10045, line: 351, column: 6)
!11668 = !DILocation(line: 351, column: 11, scope: !11667, inlinedAt: !11610)
!11669 = !DILocation(line: 351, column: 6, scope: !11606, inlinedAt: !11610)
!11670 = !DILocation(line: 352, column: 3, scope: !11667, inlinedAt: !11610)
!11671 = !DILocation(line: 354, column: 32, scope: !11672, inlinedAt: !11610)
!11672 = distinct !DILexicalBlock(scope: !11606, file: !10045, line: 354, column: 6)
!11673 = !DILocation(line: 354, column: 37, scope: !11672, inlinedAt: !11610)
!11674 = !DILocation(line: 354, column: 42, scope: !11672, inlinedAt: !11610)
!11675 = !DILocation(line: 354, column: 45, scope: !11672, inlinedAt: !11610)
!11676 = !DILocation(line: 354, column: 50, scope: !11672, inlinedAt: !11610)
!11677 = !DILocation(line: 354, column: 6, scope: !11606, inlinedAt: !11610)
!11678 = !DILocation(line: 355, column: 3, scope: !11672, inlinedAt: !11610)
!11679 = !DILocation(line: 356, column: 32, scope: !11680, inlinedAt: !11610)
!11680 = distinct !DILexicalBlock(scope: !11606, file: !10045, line: 356, column: 6)
!11681 = !DILocation(line: 356, column: 37, scope: !11680, inlinedAt: !11610)
!11682 = !DILocation(line: 356, column: 43, scope: !11680, inlinedAt: !11610)
!11683 = !DILocation(line: 356, column: 46, scope: !11680, inlinedAt: !11610)
!11684 = !DILocation(line: 356, column: 51, scope: !11680, inlinedAt: !11610)
!11685 = !DILocation(line: 356, column: 6, scope: !11606, inlinedAt: !11610)
!11686 = !DILocation(line: 357, column: 3, scope: !11680, inlinedAt: !11610)
!11687 = !DILocation(line: 358, column: 6, scope: !11688, inlinedAt: !11610)
!11688 = distinct !DILexicalBlock(scope: !11606, file: !10045, line: 358, column: 6)
!11689 = !DILocation(line: 358, column: 11, scope: !11688, inlinedAt: !11610)
!11690 = !DILocation(line: 358, column: 6, scope: !11606, inlinedAt: !11610)
!11691 = !DILocation(line: 358, column: 26, scope: !11688, inlinedAt: !11610)
!11692 = !DILocation(line: 359, column: 6, scope: !11693, inlinedAt: !11610)
!11693 = distinct !DILexicalBlock(scope: !11606, file: !10045, line: 359, column: 6)
!11694 = !DILocation(line: 359, column: 11, scope: !11693, inlinedAt: !11610)
!11695 = !DILocation(line: 359, column: 6, scope: !11606, inlinedAt: !11610)
!11696 = !DILocation(line: 359, column: 26, scope: !11693, inlinedAt: !11610)
!11697 = !DILocation(line: 360, column: 6, scope: !11698, inlinedAt: !11610)
!11698 = distinct !DILexicalBlock(scope: !11606, file: !10045, line: 360, column: 6)
!11699 = !DILocation(line: 360, column: 11, scope: !11698, inlinedAt: !11610)
!11700 = !DILocation(line: 360, column: 6, scope: !11606, inlinedAt: !11610)
!11701 = !DILocation(line: 360, column: 26, scope: !11698, inlinedAt: !11610)
!11702 = !DILocation(line: 361, column: 6, scope: !11703, inlinedAt: !11610)
!11703 = distinct !DILexicalBlock(scope: !11606, file: !10045, line: 361, column: 6)
!11704 = !DILocation(line: 361, column: 11, scope: !11703, inlinedAt: !11610)
!11705 = !DILocation(line: 361, column: 6, scope: !11606, inlinedAt: !11610)
!11706 = !DILocation(line: 361, column: 26, scope: !11703, inlinedAt: !11610)
!11707 = !DILocation(line: 362, column: 6, scope: !11708, inlinedAt: !11610)
!11708 = distinct !DILexicalBlock(scope: !11606, file: !10045, line: 362, column: 6)
!11709 = !DILocation(line: 362, column: 11, scope: !11708, inlinedAt: !11610)
!11710 = !DILocation(line: 362, column: 6, scope: !11606, inlinedAt: !11610)
!11711 = !DILocation(line: 362, column: 26, scope: !11708, inlinedAt: !11610)
!11712 = !DILocation(line: 363, column: 6, scope: !11713, inlinedAt: !11610)
!11713 = distinct !DILexicalBlock(scope: !11606, file: !10045, line: 363, column: 6)
!11714 = !DILocation(line: 363, column: 11, scope: !11713, inlinedAt: !11610)
!11715 = !DILocation(line: 363, column: 6, scope: !11606, inlinedAt: !11610)
!11716 = !DILocation(line: 363, column: 26, scope: !11713, inlinedAt: !11610)
!11717 = !DILocation(line: 364, column: 6, scope: !11718, inlinedAt: !11610)
!11718 = distinct !DILexicalBlock(scope: !11606, file: !10045, line: 364, column: 6)
!11719 = !DILocation(line: 364, column: 11, scope: !11718, inlinedAt: !11610)
!11720 = !DILocation(line: 364, column: 6, scope: !11606, inlinedAt: !11610)
!11721 = !DILocation(line: 364, column: 26, scope: !11718, inlinedAt: !11610)
!11722 = !DILocation(line: 365, column: 6, scope: !11723, inlinedAt: !11610)
!11723 = distinct !DILexicalBlock(scope: !11606, file: !10045, line: 365, column: 6)
!11724 = !DILocation(line: 365, column: 11, scope: !11723, inlinedAt: !11610)
!11725 = !DILocation(line: 365, column: 6, scope: !11606, inlinedAt: !11610)
!11726 = !DILocation(line: 365, column: 26, scope: !11723, inlinedAt: !11610)
!11727 = !DILocation(line: 366, column: 6, scope: !11728, inlinedAt: !11610)
!11728 = distinct !DILexicalBlock(scope: !11606, file: !10045, line: 366, column: 6)
!11729 = !DILocation(line: 366, column: 11, scope: !11728, inlinedAt: !11610)
!11730 = !DILocation(line: 366, column: 6, scope: !11606, inlinedAt: !11610)
!11731 = !DILocation(line: 366, column: 26, scope: !11728, inlinedAt: !11610)
!11732 = !DILocation(line: 367, column: 6, scope: !11733, inlinedAt: !11610)
!11733 = distinct !DILexicalBlock(scope: !11606, file: !10045, line: 367, column: 6)
!11734 = !DILocation(line: 367, column: 11, scope: !11733, inlinedAt: !11610)
!11735 = !DILocation(line: 367, column: 6, scope: !11606, inlinedAt: !11610)
!11736 = !DILocation(line: 367, column: 26, scope: !11733, inlinedAt: !11610)
!11737 = !DILocation(line: 368, column: 6, scope: !11738, inlinedAt: !11610)
!11738 = distinct !DILexicalBlock(scope: !11606, file: !10045, line: 368, column: 6)
!11739 = !DILocation(line: 368, column: 11, scope: !11738, inlinedAt: !11610)
!11740 = !DILocation(line: 368, column: 6, scope: !11606, inlinedAt: !11610)
!11741 = !DILocation(line: 368, column: 26, scope: !11738, inlinedAt: !11610)
!11742 = !DILocation(line: 369, column: 6, scope: !11743, inlinedAt: !11610)
!11743 = distinct !DILexicalBlock(scope: !11606, file: !10045, line: 369, column: 6)
!11744 = !DILocation(line: 369, column: 11, scope: !11743, inlinedAt: !11610)
!11745 = !DILocation(line: 369, column: 6, scope: !11606, inlinedAt: !11610)
!11746 = !DILocation(line: 369, column: 26, scope: !11743, inlinedAt: !11610)
!11747 = !DILocation(line: 370, column: 6, scope: !11748, inlinedAt: !11610)
!11748 = distinct !DILexicalBlock(scope: !11606, file: !10045, line: 370, column: 6)
!11749 = !DILocation(line: 370, column: 11, scope: !11748, inlinedAt: !11610)
!11750 = !DILocation(line: 370, column: 6, scope: !11606, inlinedAt: !11610)
!11751 = !DILocation(line: 370, column: 26, scope: !11748, inlinedAt: !11610)
!11752 = !DILocation(line: 371, column: 6, scope: !11753, inlinedAt: !11610)
!11753 = distinct !DILexicalBlock(scope: !11606, file: !10045, line: 371, column: 6)
!11754 = !DILocation(line: 371, column: 11, scope: !11753, inlinedAt: !11610)
!11755 = !DILocation(line: 371, column: 6, scope: !11606, inlinedAt: !11610)
!11756 = !DILocation(line: 371, column: 26, scope: !11753, inlinedAt: !11610)
!11757 = !DILocation(line: 372, column: 6, scope: !11758, inlinedAt: !11610)
!11758 = distinct !DILexicalBlock(scope: !11606, file: !10045, line: 372, column: 6)
!11759 = !DILocation(line: 372, column: 11, scope: !11758, inlinedAt: !11610)
!11760 = !DILocation(line: 372, column: 6, scope: !11606, inlinedAt: !11610)
!11761 = !DILocation(line: 372, column: 26, scope: !11758, inlinedAt: !11610)
!11762 = !DILocation(line: 373, column: 6, scope: !11763, inlinedAt: !11610)
!11763 = distinct !DILexicalBlock(scope: !11606, file: !10045, line: 373, column: 6)
!11764 = !DILocation(line: 373, column: 11, scope: !11763, inlinedAt: !11610)
!11765 = !DILocation(line: 373, column: 6, scope: !11606, inlinedAt: !11610)
!11766 = !DILocation(line: 373, column: 26, scope: !11763, inlinedAt: !11610)
!11767 = !DILocation(line: 374, column: 6, scope: !11768, inlinedAt: !11610)
!11768 = distinct !DILexicalBlock(scope: !11606, file: !10045, line: 374, column: 6)
!11769 = !DILocation(line: 374, column: 11, scope: !11768, inlinedAt: !11610)
!11770 = !DILocation(line: 374, column: 6, scope: !11606, inlinedAt: !11610)
!11771 = !DILocation(line: 374, column: 26, scope: !11768, inlinedAt: !11610)
!11772 = !DILocation(line: 375, column: 6, scope: !11773, inlinedAt: !11610)
!11773 = distinct !DILexicalBlock(scope: !11606, file: !10045, line: 375, column: 6)
!11774 = !DILocation(line: 375, column: 11, scope: !11773, inlinedAt: !11610)
!11775 = !DILocation(line: 375, column: 6, scope: !11606, inlinedAt: !11610)
!11776 = !DILocation(line: 375, column: 27, scope: !11773, inlinedAt: !11610)
!11777 = !DILocation(line: 376, column: 6, scope: !11778, inlinedAt: !11610)
!11778 = distinct !DILexicalBlock(scope: !11606, file: !10045, line: 376, column: 6)
!11779 = !DILocation(line: 376, column: 11, scope: !11778, inlinedAt: !11610)
!11780 = !DILocation(line: 376, column: 6, scope: !11606, inlinedAt: !11610)
!11781 = !DILocation(line: 376, column: 32, scope: !11778, inlinedAt: !11610)
!11782 = !DILocation(line: 377, column: 6, scope: !11783, inlinedAt: !11610)
!11783 = distinct !DILexicalBlock(scope: !11606, file: !10045, line: 377, column: 6)
!11784 = !DILocation(line: 377, column: 11, scope: !11783, inlinedAt: !11610)
!11785 = !DILocation(line: 377, column: 6, scope: !11606, inlinedAt: !11610)
!11786 = !DILocation(line: 377, column: 32, scope: !11783, inlinedAt: !11610)
!11787 = !DILocation(line: 378, column: 6, scope: !11788, inlinedAt: !11610)
!11788 = distinct !DILexicalBlock(scope: !11606, file: !10045, line: 378, column: 6)
!11789 = !DILocation(line: 378, column: 11, scope: !11788, inlinedAt: !11610)
!11790 = !DILocation(line: 378, column: 6, scope: !11606, inlinedAt: !11610)
!11791 = !DILocation(line: 378, column: 32, scope: !11788, inlinedAt: !11610)
!11792 = !DILocation(line: 379, column: 6, scope: !11793, inlinedAt: !11610)
!11793 = distinct !DILexicalBlock(scope: !11606, file: !10045, line: 379, column: 6)
!11794 = !DILocation(line: 379, column: 11, scope: !11793, inlinedAt: !11610)
!11795 = !DILocation(line: 379, column: 6, scope: !11606, inlinedAt: !11610)
!11796 = !DILocation(line: 379, column: 33, scope: !11793, inlinedAt: !11610)
!11797 = !DILocation(line: 380, column: 6, scope: !11798, inlinedAt: !11610)
!11798 = distinct !DILexicalBlock(scope: !11606, file: !10045, line: 380, column: 6)
!11799 = !DILocation(line: 380, column: 11, scope: !11798, inlinedAt: !11610)
!11800 = !DILocation(line: 380, column: 6, scope: !11606, inlinedAt: !11610)
!11801 = !DILocation(line: 380, column: 33, scope: !11798, inlinedAt: !11610)
!11802 = !DILocation(line: 381, column: 6, scope: !11803, inlinedAt: !11610)
!11803 = distinct !DILexicalBlock(scope: !11606, file: !10045, line: 381, column: 6)
!11804 = !DILocation(line: 381, column: 11, scope: !11803, inlinedAt: !11610)
!11805 = !DILocation(line: 381, column: 6, scope: !11606, inlinedAt: !11610)
!11806 = !DILocation(line: 381, column: 33, scope: !11803, inlinedAt: !11610)
!11807 = !DILocation(line: 382, column: 2, scope: !11808, inlinedAt: !11610)
!11808 = distinct !DILexicalBlock(scope: !11809, file: !10045, line: 382, column: 2)
!11809 = distinct !DILexicalBlock(scope: !11606, file: !10045, line: 382, column: 2)
!11810 = !{i32 -2142365651, i32 -2142365622, i32 -2142365576, i32 -2142365518, i32 -2142365464, i32 -2142365410, i32 -2142365355, i32 -2142365324}
!11811 = !DILocation(line: 382, column: 2, scope: !11812, inlinedAt: !11610)
!11812 = distinct !DILexicalBlock(scope: !11813, file: !10045, line: 382, column: 2)
!11813 = distinct !DILexicalBlock(scope: !11809, file: !10045, line: 382, column: 2)
!11814 = !{i32 -2142364881, i32 -2142364874, i32 -2142364820, i32 -2142364789, i32 -2142364759}
!11815 = !DILocation(line: 382, column: 2, scope: !11813, inlinedAt: !11610)
!11816 = !DILocation(line: 386, column: 1, scope: !11606, inlinedAt: !11610)
!11817 = !DILocation(line: 547, column: 9, scope: !11589, inlinedAt: !11592)
!11818 = !DILocation(line: 549, column: 8, scope: !11819, inlinedAt: !11592)
!11819 = distinct !DILexicalBlock(scope: !11589, file: !10045, line: 549, column: 7)
!11820 = !DILocation(line: 549, column: 7, scope: !11589, inlinedAt: !11592)
!11821 = !DILocation(line: 550, column: 4, scope: !11819, inlinedAt: !11592)
!11822 = !DILocation(line: 553, column: 33, scope: !11589, inlinedAt: !11592)
!11823 = !DILocation(line: 325, column: 6, scope: !11824, inlinedAt: !11604)
!11824 = distinct !DILexicalBlock(scope: !11600, file: !10045, line: 325, column: 6)
!11825 = !DILocation(line: 325, column: 6, scope: !11600, inlinedAt: !11604)
!11826 = !DILocation(line: 326, column: 3, scope: !11824, inlinedAt: !11604)
!11827 = !DILocation(line: 332, column: 9, scope: !11600, inlinedAt: !11604)
!11828 = !DILocation(line: 332, column: 15, scope: !11600, inlinedAt: !11604)
!11829 = !DILocation(line: 332, column: 2, scope: !11600, inlinedAt: !11604)
!11830 = !DILocation(line: 336, column: 1, scope: !11600, inlinedAt: !11604)
!11831 = !DILocation(line: 553, column: 5, scope: !11589, inlinedAt: !11592)
!11832 = !DILocation(line: 553, column: 41, scope: !11589, inlinedAt: !11592)
!11833 = !DILocation(line: 554, column: 5, scope: !11589, inlinedAt: !11592)
!11834 = !DILocation(line: 554, column: 12, scope: !11589, inlinedAt: !11592)
!11835 = !DILocation(line: 448, column: 31, scope: !11584, inlinedAt: !11588)
!11836 = !DILocation(line: 448, column: 34, scope: !11584, inlinedAt: !11588)
!11837 = !DILocation(line: 448, column: 14, scope: !11584, inlinedAt: !11588)
!11838 = !DILocation(line: 450, column: 22, scope: !11584, inlinedAt: !11588)
!11839 = !DILocation(line: 450, column: 25, scope: !11584, inlinedAt: !11588)
!11840 = !DILocation(line: 450, column: 30, scope: !11584, inlinedAt: !11588)
!11841 = !DILocation(line: 450, column: 36, scope: !11584, inlinedAt: !11588)
!11842 = !DILocation(line: 450, column: 8, scope: !11584, inlinedAt: !11588)
!11843 = !DILocation(line: 450, column: 6, scope: !11584, inlinedAt: !11588)
!11844 = !DILocation(line: 451, column: 9, scope: !11584, inlinedAt: !11588)
!11845 = !DILocation(line: 552, column: 3, scope: !11589, inlinedAt: !11592)
!11846 = !DILocation(line: 557, column: 19, scope: !11591, inlinedAt: !11592)
!11847 = !DILocation(line: 557, column: 25, scope: !11591, inlinedAt: !11592)
!11848 = !DILocation(line: 557, column: 9, scope: !11591, inlinedAt: !11592)
!11849 = !DILocation(line: 557, column: 2, scope: !11591, inlinedAt: !11592)
!11850 = !DILocation(line: 558, column: 1, scope: !11591, inlinedAt: !11592)
!11851 = !DILocation(line: 664, column: 2, scope: !11582)
!11852 = distinct !DISubprogram(name: "mlx5_modify_nic_vport_mac_list", scope: !3, file: !3, line: 314, type: !11853, scopeLine: 318, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !798)
!11853 = !DISubroutineType(types: !11854)
!11854 = !{!37, !10073, !10010, !11437, !37}
!11855 = !DILocalVariable(name: "dev", arg: 1, scope: !11852, file: !3, line: 314, type: !10073)
!11856 = !DILocation(line: 314, column: 58, scope: !11852)
!11857 = !DILocalVariable(name: "list_type", arg: 2, scope: !11852, file: !3, line: 315, type: !10010)
!11858 = !DILocation(line: 315, column: 28, scope: !11852)
!11859 = !DILocalVariable(name: "addr_list", arg: 3, scope: !11852, file: !3, line: 316, type: !11437)
!11860 = !DILocation(line: 316, column: 11, scope: !11852)
!11861 = !DILocalVariable(name: "list_size", arg: 4, scope: !11852, file: !3, line: 317, type: !37)
!11862 = !DILocation(line: 317, column: 12, scope: !11852)
!11863 = !DILocalVariable(name: "out", scope: !11852, file: !3, line: 319, type: !10940)
!11864 = !DILocation(line: 319, column: 6, scope: !11852)
!11865 = !DILocalVariable(name: "nic_vport_ctx", scope: !11852, file: !3, line: 320, type: !625)
!11866 = !DILocation(line: 320, column: 8, scope: !11852)
!11867 = !DILocalVariable(name: "max_list_size", scope: !11852, file: !3, line: 321, type: !37)
!11868 = !DILocation(line: 321, column: 6, scope: !11852)
!11869 = !DILocalVariable(name: "in_sz", scope: !11852, file: !3, line: 322, type: !37)
!11870 = !DILocation(line: 322, column: 6, scope: !11852)
!11871 = !DILocalVariable(name: "in", scope: !11852, file: !3, line: 323, type: !625)
!11872 = !DILocation(line: 323, column: 8, scope: !11852)
!11873 = !DILocalVariable(name: "err", scope: !11852, file: !3, line: 324, type: !37)
!11874 = !DILocation(line: 324, column: 6, scope: !11852)
!11875 = !DILocalVariable(name: "i", scope: !11852, file: !3, line: 325, type: !37)
!11876 = !DILocation(line: 325, column: 6, scope: !11852)
!11877 = !DILocation(line: 327, column: 18, scope: !11852)
!11878 = !DILocation(line: 327, column: 28, scope: !11852)
!11879 = !DILocation(line: 328, column: 9, scope: !11852)
!11880 = !DILocation(line: 328, column: 6, scope: !11852)
!11881 = !DILocation(line: 329, column: 9, scope: !11852)
!11882 = !DILocation(line: 329, column: 6, scope: !11852)
!11883 = !DILocation(line: 327, column: 16, scope: !11852)
!11884 = !DILocation(line: 331, column: 6, scope: !11885)
!11885 = distinct !DILexicalBlock(scope: !11852, file: !3, line: 331, column: 6)
!11886 = !DILocation(line: 331, column: 18, scope: !11885)
!11887 = !DILocation(line: 331, column: 16, scope: !11885)
!11888 = !DILocation(line: 331, column: 6, scope: !11852)
!11889 = !DILocation(line: 332, column: 3, scope: !11885)
!11890 = !DILocation(line: 335, column: 3, scope: !11852)
!11891 = !DILocation(line: 335, column: 13, scope: !11852)
!11892 = !DILocation(line: 334, column: 56, scope: !11852)
!11893 = !DILocation(line: 334, column: 10, scope: !11852)
!11894 = !DILocation(line: 334, column: 8, scope: !11852)
!11895 = !DILocation(line: 337, column: 15, scope: !11852)
!11896 = !DILocation(line: 337, column: 7, scope: !11852)
!11897 = !DILocation(line: 337, column: 5, scope: !11852)
!11898 = !DILocation(line: 338, column: 7, scope: !11899)
!11899 = distinct !DILexicalBlock(scope: !11852, file: !3, line: 338, column: 6)
!11900 = !DILocation(line: 338, column: 6, scope: !11852)
!11901 = !DILocation(line: 339, column: 3, scope: !11899)
!11902 = !DILocation(line: 341, column: 2, scope: !11852)
!11903 = !DILocalVariable(name: "_v", scope: !11904, file: !3, line: 341, type: !762)
!11904 = distinct !DILexicalBlock(scope: !11852, file: !3, line: 341, column: 2)
!11905 = !DILocation(line: 341, column: 2, scope: !11904)
!11906 = !DILocation(line: 341, column: 2, scope: !11907)
!11907 = distinct !DILexicalBlock(scope: !11904, file: !3, line: 341, column: 2)
!11908 = !DILocation(line: 343, column: 2, scope: !11852)
!11909 = !DILocalVariable(name: "_v", scope: !11910, file: !3, line: 343, type: !762)
!11910 = distinct !DILexicalBlock(scope: !11852, file: !3, line: 343, column: 2)
!11911 = !DILocation(line: 343, column: 2, scope: !11910)
!11912 = !DILocation(line: 343, column: 2, scope: !11913)
!11913 = distinct !DILexicalBlock(scope: !11910, file: !3, line: 343, column: 2)
!11914 = !DILocation(line: 346, column: 18, scope: !11852)
!11915 = !DILocation(line: 346, column: 16, scope: !11852)
!11916 = !DILocation(line: 349, column: 2, scope: !11852)
!11917 = !DILocalVariable(name: "_v", scope: !11918, file: !3, line: 349, type: !762)
!11918 = distinct !DILexicalBlock(scope: !11852, file: !3, line: 349, column: 2)
!11919 = !DILocation(line: 349, column: 2, scope: !11918)
!11920 = !DILocation(line: 349, column: 2, scope: !11921)
!11921 = distinct !DILexicalBlock(scope: !11918, file: !3, line: 349, column: 2)
!11922 = !DILocation(line: 351, column: 2, scope: !11852)
!11923 = !DILocalVariable(name: "_v", scope: !11924, file: !3, line: 351, type: !762)
!11924 = distinct !DILexicalBlock(scope: !11852, file: !3, line: 351, column: 2)
!11925 = !DILocation(line: 351, column: 2, scope: !11924)
!11926 = !DILocation(line: 351, column: 2, scope: !11927)
!11927 = distinct !DILexicalBlock(scope: !11924, file: !3, line: 351, column: 2)
!11928 = !DILocation(line: 354, column: 9, scope: !11929)
!11929 = distinct !DILexicalBlock(scope: !11852, file: !3, line: 354, column: 2)
!11930 = !DILocation(line: 354, column: 7, scope: !11929)
!11931 = !DILocation(line: 354, column: 14, scope: !11932)
!11932 = distinct !DILexicalBlock(scope: !11929, file: !3, line: 354, column: 2)
!11933 = !DILocation(line: 354, column: 18, scope: !11932)
!11934 = !DILocation(line: 354, column: 16, scope: !11932)
!11935 = !DILocation(line: 354, column: 2, scope: !11929)
!11936 = !DILocalVariable(name: "curr_mac", scope: !11937, file: !3, line: 355, type: !7736)
!11937 = distinct !DILexicalBlock(scope: !11932, file: !3, line: 354, column: 34)
!11938 = !DILocation(line: 355, column: 7, scope: !11937)
!11939 = !DILocation(line: 355, column: 18, scope: !11937)
!11940 = !DILocation(line: 357, column: 37, scope: !11937)
!11941 = !DILocation(line: 358, column: 19, scope: !11937)
!11942 = !DILocation(line: 358, column: 29, scope: !11937)
!11943 = !DILocation(line: 358, column: 39, scope: !11937)
!11944 = !DILocation(line: 358, column: 3, scope: !11937)
!11945 = !DILocation(line: 359, column: 2, scope: !11937)
!11946 = !DILocation(line: 354, column: 30, scope: !11932)
!11947 = !DILocation(line: 354, column: 2, scope: !11932)
!11948 = distinct !{!11948, !11935, !11949}
!11949 = !DILocation(line: 359, column: 2, scope: !11929)
!11950 = !DILocation(line: 361, column: 22, scope: !11852)
!11951 = !DILocation(line: 361, column: 27, scope: !11852)
!11952 = !DILocation(line: 361, column: 31, scope: !11852)
!11953 = !DILocation(line: 361, column: 38, scope: !11852)
!11954 = !DILocation(line: 361, column: 8, scope: !11852)
!11955 = !DILocation(line: 361, column: 6, scope: !11852)
!11956 = !DILocation(line: 362, column: 8, scope: !11852)
!11957 = !DILocation(line: 362, column: 2, scope: !11852)
!11958 = !DILocation(line: 363, column: 9, scope: !11852)
!11959 = !DILocation(line: 363, column: 2, scope: !11852)
!11960 = !DILocation(line: 364, column: 1, scope: !11852)
!11961 = distinct !DISubprogram(name: "mlx5_modify_nic_vport_vlans", scope: !3, file: !3, line: 367, type: !11962, scopeLine: 370, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !798)
!11962 = !DISubroutineType(types: !11963)
!11963 = !{!37, !10073, !8151, !37}
!11964 = !DILocalVariable(name: "dev", arg: 1, scope: !11961, file: !3, line: 367, type: !10073)
!11965 = !DILocation(line: 367, column: 55, scope: !11961)
!11966 = !DILocalVariable(name: "vlans", arg: 2, scope: !11961, file: !3, line: 368, type: !8151)
!11967 = !DILocation(line: 368, column: 9, scope: !11961)
!11968 = !DILocalVariable(name: "list_size", arg: 3, scope: !11961, file: !3, line: 369, type: !37)
!11969 = !DILocation(line: 369, column: 9, scope: !11961)
!11970 = !DILocalVariable(name: "out", scope: !11961, file: !3, line: 371, type: !10940)
!11971 = !DILocation(line: 371, column: 6, scope: !11961)
!11972 = !DILocalVariable(name: "nic_vport_ctx", scope: !11961, file: !3, line: 372, type: !625)
!11973 = !DILocation(line: 372, column: 8, scope: !11961)
!11974 = !DILocalVariable(name: "max_list_size", scope: !11961, file: !3, line: 373, type: !37)
!11975 = !DILocation(line: 373, column: 6, scope: !11961)
!11976 = !DILocalVariable(name: "in_sz", scope: !11961, file: !3, line: 374, type: !37)
!11977 = !DILocation(line: 374, column: 6, scope: !11961)
!11978 = !DILocalVariable(name: "in", scope: !11961, file: !3, line: 375, type: !625)
!11979 = !DILocation(line: 375, column: 8, scope: !11961)
!11980 = !DILocalVariable(name: "err", scope: !11961, file: !3, line: 376, type: !37)
!11981 = !DILocation(line: 376, column: 6, scope: !11961)
!11982 = !DILocalVariable(name: "i", scope: !11961, file: !3, line: 377, type: !37)
!11983 = !DILocation(line: 377, column: 6, scope: !11961)
!11984 = !DILocation(line: 379, column: 23, scope: !11961)
!11985 = !DILocation(line: 379, column: 20, scope: !11961)
!11986 = !DILocation(line: 379, column: 16, scope: !11961)
!11987 = !DILocation(line: 381, column: 6, scope: !11988)
!11988 = distinct !DILexicalBlock(scope: !11961, file: !3, line: 381, column: 6)
!11989 = !DILocation(line: 381, column: 18, scope: !11988)
!11990 = !DILocation(line: 381, column: 16, scope: !11988)
!11991 = !DILocation(line: 381, column: 6, scope: !11961)
!11992 = !DILocation(line: 382, column: 3, scope: !11988)
!11993 = !DILocation(line: 385, column: 3, scope: !11961)
!11994 = !DILocation(line: 385, column: 13, scope: !11961)
!11995 = !DILocation(line: 384, column: 56, scope: !11961)
!11996 = !DILocation(line: 384, column: 10, scope: !11961)
!11997 = !DILocation(line: 384, column: 8, scope: !11961)
!11998 = !DILocation(line: 387, column: 2, scope: !11961)
!11999 = !DILocation(line: 388, column: 15, scope: !11961)
!12000 = !DILocation(line: 388, column: 7, scope: !11961)
!12001 = !DILocation(line: 388, column: 5, scope: !11961)
!12002 = !DILocation(line: 389, column: 7, scope: !12003)
!12003 = distinct !DILexicalBlock(scope: !11961, file: !3, line: 389, column: 6)
!12004 = !DILocation(line: 389, column: 6, scope: !11961)
!12005 = !DILocation(line: 390, column: 3, scope: !12003)
!12006 = !DILocation(line: 392, column: 2, scope: !11961)
!12007 = !DILocalVariable(name: "_v", scope: !12008, file: !3, line: 392, type: !762)
!12008 = distinct !DILexicalBlock(scope: !11961, file: !3, line: 392, column: 2)
!12009 = !DILocation(line: 392, column: 2, scope: !12008)
!12010 = !DILocation(line: 392, column: 2, scope: !12011)
!12011 = distinct !DILexicalBlock(scope: !12008, file: !3, line: 392, column: 2)
!12012 = !DILocation(line: 394, column: 2, scope: !11961)
!12013 = !DILocalVariable(name: "_v", scope: !12014, file: !3, line: 394, type: !762)
!12014 = distinct !DILexicalBlock(scope: !11961, file: !3, line: 394, column: 2)
!12015 = !DILocation(line: 394, column: 2, scope: !12014)
!12016 = !DILocation(line: 394, column: 2, scope: !12017)
!12017 = distinct !DILexicalBlock(scope: !12014, file: !3, line: 394, column: 2)
!12018 = !DILocation(line: 397, column: 18, scope: !11961)
!12019 = !DILocation(line: 397, column: 16, scope: !11961)
!12020 = !DILocation(line: 400, column: 2, scope: !11961)
!12021 = !DILocalVariable(name: "_v", scope: !12022, file: !3, line: 400, type: !762)
!12022 = distinct !DILexicalBlock(scope: !11961, file: !3, line: 400, column: 2)
!12023 = !DILocation(line: 400, column: 2, scope: !12022)
!12024 = !DILocation(line: 400, column: 2, scope: !12025)
!12025 = distinct !DILexicalBlock(scope: !12022, file: !3, line: 400, column: 2)
!12026 = !DILocation(line: 402, column: 2, scope: !11961)
!12027 = !DILocalVariable(name: "_v", scope: !12028, file: !3, line: 402, type: !762)
!12028 = distinct !DILexicalBlock(scope: !11961, file: !3, line: 402, column: 2)
!12029 = !DILocation(line: 402, column: 2, scope: !12028)
!12030 = !DILocation(line: 402, column: 2, scope: !12031)
!12031 = distinct !DILexicalBlock(scope: !12028, file: !3, line: 402, column: 2)
!12032 = !DILocation(line: 405, column: 9, scope: !12033)
!12033 = distinct !DILexicalBlock(scope: !11961, file: !3, line: 405, column: 2)
!12034 = !DILocation(line: 405, column: 7, scope: !12033)
!12035 = !DILocation(line: 405, column: 14, scope: !12036)
!12036 = distinct !DILexicalBlock(scope: !12033, file: !3, line: 405, column: 2)
!12037 = !DILocation(line: 405, column: 18, scope: !12036)
!12038 = !DILocation(line: 405, column: 16, scope: !12036)
!12039 = !DILocation(line: 405, column: 2, scope: !12033)
!12040 = !DILocalVariable(name: "vlan_addr", scope: !12041, file: !3, line: 406, type: !625)
!12041 = distinct !DILexicalBlock(scope: !12036, file: !3, line: 405, column: 34)
!12042 = !DILocation(line: 406, column: 9, scope: !12041)
!12043 = !DILocation(line: 406, column: 21, scope: !12041)
!12044 = !DILocation(line: 409, column: 3, scope: !12041)
!12045 = !DILocalVariable(name: "_v", scope: !12046, file: !3, line: 409, type: !762)
!12046 = distinct !DILexicalBlock(scope: !12041, file: !3, line: 409, column: 3)
!12047 = !DILocation(line: 409, column: 3, scope: !12046)
!12048 = !DILocation(line: 409, column: 3, scope: !12049)
!12049 = distinct !DILexicalBlock(scope: !12046, file: !3, line: 409, column: 3)
!12050 = !DILocation(line: 410, column: 2, scope: !12041)
!12051 = !DILocation(line: 405, column: 30, scope: !12036)
!12052 = !DILocation(line: 405, column: 2, scope: !12036)
!12053 = distinct !{!12053, !12039, !12054}
!12054 = !DILocation(line: 410, column: 2, scope: !12033)
!12055 = !DILocation(line: 412, column: 22, scope: !11961)
!12056 = !DILocation(line: 412, column: 27, scope: !11961)
!12057 = !DILocation(line: 412, column: 31, scope: !11961)
!12058 = !DILocation(line: 412, column: 38, scope: !11961)
!12059 = !DILocation(line: 412, column: 8, scope: !11961)
!12060 = !DILocation(line: 412, column: 6, scope: !11961)
!12061 = !DILocation(line: 413, column: 8, scope: !11961)
!12062 = !DILocation(line: 413, column: 2, scope: !11961)
!12063 = !DILocation(line: 414, column: 9, scope: !11961)
!12064 = !DILocation(line: 414, column: 2, scope: !11961)
!12065 = !DILocation(line: 415, column: 1, scope: !11961)
!12066 = distinct !DISubprogram(name: "mlx5_query_nic_vport_system_image_guid", scope: !3, file: !3, line: 418, type: !12067, scopeLine: 420, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !798)
!12067 = !DISubroutineType(types: !12068)
!12068 = !{!37, !10073, !3475}
!12069 = !DILocalVariable(name: "mdev", arg: 1, scope: !12066, file: !3, line: 418, type: !10073)
!12070 = !DILocation(line: 418, column: 66, scope: !12066)
!12071 = !DILocalVariable(name: "system_image_guid", arg: 2, scope: !12066, file: !3, line: 419, type: !3475)
!12072 = !DILocation(line: 419, column: 14, scope: !12066)
!12073 = !DILocalVariable(name: "out", scope: !12066, file: !3, line: 421, type: !1514)
!12074 = !DILocation(line: 421, column: 7, scope: !12066)
!12075 = !DILocalVariable(name: "outlen", scope: !12066, file: !3, line: 422, type: !37)
!12076 = !DILocation(line: 422, column: 6, scope: !12066)
!12077 = !DILocation(line: 424, column: 17, scope: !12066)
!12078 = !DILocation(line: 424, column: 8, scope: !12066)
!12079 = !DILocation(line: 424, column: 6, scope: !12066)
!12080 = !DILocation(line: 425, column: 7, scope: !12081)
!12081 = distinct !DILexicalBlock(scope: !12066, file: !3, line: 425, column: 6)
!12082 = !DILocation(line: 425, column: 6, scope: !12066)
!12083 = !DILocation(line: 426, column: 3, scope: !12081)
!12084 = !DILocation(line: 428, column: 31, scope: !12066)
!12085 = !DILocation(line: 428, column: 40, scope: !12066)
!12086 = !DILocation(line: 428, column: 2, scope: !12066)
!12087 = !DILocation(line: 430, column: 23, scope: !12066)
!12088 = !DILocation(line: 430, column: 3, scope: !12066)
!12089 = !DILocation(line: 430, column: 21, scope: !12066)
!12090 = !DILocation(line: 433, column: 9, scope: !12066)
!12091 = !DILocation(line: 433, column: 2, scope: !12066)
!12092 = !DILocation(line: 435, column: 2, scope: !12066)
!12093 = !DILocation(line: 436, column: 1, scope: !12066)
!12094 = distinct !DISubprogram(name: "__fswab64", scope: !10985, file: !10985, line: 66, type: !12095, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !798)
!12095 = !DISubroutineType(types: !12096)
!12096 = !{!393, !393}
!12097 = !DILocalVariable(name: "val", arg: 1, scope: !12094, file: !10985, line: 66, type: !393)
!12098 = !DILocation(line: 66, column: 57, scope: !12094)
!12099 = !DILocation(line: 69, column: 23, scope: !12094)
!12100 = !DILocation(line: 69, column: 9, scope: !12094)
!12101 = !DILocation(line: 69, column: 2, scope: !12094)
!12102 = distinct !DISubprogram(name: "mlx5_query_nic_vport_node_guid", scope: !3, file: !3, line: 439, type: !12067, scopeLine: 440, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !798)
!12103 = !DILocalVariable(name: "mdev", arg: 1, scope: !12102, file: !3, line: 439, type: !10073)
!12104 = !DILocation(line: 439, column: 58, scope: !12102)
!12105 = !DILocalVariable(name: "node_guid", arg: 2, scope: !12102, file: !3, line: 439, type: !3475)
!12106 = !DILocation(line: 439, column: 69, scope: !12102)
!12107 = !DILocalVariable(name: "out", scope: !12102, file: !3, line: 441, type: !1514)
!12108 = !DILocation(line: 441, column: 7, scope: !12102)
!12109 = !DILocalVariable(name: "outlen", scope: !12102, file: !3, line: 442, type: !37)
!12110 = !DILocation(line: 442, column: 6, scope: !12102)
!12111 = !DILocation(line: 444, column: 17, scope: !12102)
!12112 = !DILocation(line: 444, column: 8, scope: !12102)
!12113 = !DILocation(line: 444, column: 6, scope: !12102)
!12114 = !DILocation(line: 445, column: 7, scope: !12115)
!12115 = distinct !DILexicalBlock(scope: !12102, file: !3, line: 445, column: 6)
!12116 = !DILocation(line: 445, column: 6, scope: !12102)
!12117 = !DILocation(line: 446, column: 3, scope: !12115)
!12118 = !DILocation(line: 448, column: 31, scope: !12102)
!12119 = !DILocation(line: 448, column: 40, scope: !12102)
!12120 = !DILocation(line: 448, column: 2, scope: !12102)
!12121 = !DILocation(line: 450, column: 15, scope: !12102)
!12122 = !DILocation(line: 450, column: 3, scope: !12102)
!12123 = !DILocation(line: 450, column: 13, scope: !12102)
!12124 = !DILocation(line: 453, column: 9, scope: !12102)
!12125 = !DILocation(line: 453, column: 2, scope: !12102)
!12126 = !DILocation(line: 455, column: 2, scope: !12102)
!12127 = !DILocation(line: 456, column: 1, scope: !12102)
!12128 = distinct !DISubprogram(name: "mlx5_modify_nic_vport_node_guid", scope: !3, file: !3, line: 459, type: !12129, scopeLine: 461, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !798)
!12129 = !DISubroutineType(types: !12130)
!12130 = !{!37, !10073, !1092, !391}
!12131 = !DILocalVariable(name: "mdev", arg: 1, scope: !12128, file: !3, line: 459, type: !10073)
!12132 = !DILocation(line: 459, column: 59, scope: !12128)
!12133 = !DILocalVariable(name: "vport", arg: 2, scope: !12128, file: !3, line: 460, type: !1092)
!12134 = !DILocation(line: 460, column: 13, scope: !12128)
!12135 = !DILocalVariable(name: "node_guid", arg: 3, scope: !12128, file: !3, line: 460, type: !391)
!12136 = !DILocation(line: 460, column: 24, scope: !12128)
!12137 = !DILocalVariable(name: "inlen", scope: !12128, file: !3, line: 462, type: !37)
!12138 = !DILocation(line: 462, column: 6, scope: !12128)
!12139 = !DILocalVariable(name: "nic_vport_context", scope: !12128, file: !3, line: 463, type: !625)
!12140 = !DILocation(line: 463, column: 8, scope: !12128)
!12141 = !DILocalVariable(name: "in", scope: !12128, file: !3, line: 464, type: !625)
!12142 = !DILocation(line: 464, column: 8, scope: !12128)
!12143 = !DILocalVariable(name: "err", scope: !12128, file: !3, line: 465, type: !37)
!12144 = !DILocation(line: 465, column: 6, scope: !12128)
!12145 = !DILocation(line: 467, column: 7, scope: !12146)
!12146 = distinct !DILexicalBlock(scope: !12128, file: !3, line: 467, column: 6)
!12147 = !DILocation(line: 467, column: 6, scope: !12128)
!12148 = !DILocation(line: 468, column: 3, scope: !12146)
!12149 = !DILocation(line: 469, column: 7, scope: !12150)
!12150 = distinct !DILexicalBlock(scope: !12128, file: !3, line: 469, column: 6)
!12151 = !DILocation(line: 469, column: 6, scope: !12128)
!12152 = !DILocation(line: 470, column: 3, scope: !12150)
!12153 = !DILocation(line: 472, column: 16, scope: !12128)
!12154 = !DILocation(line: 472, column: 7, scope: !12128)
!12155 = !DILocation(line: 472, column: 5, scope: !12128)
!12156 = !DILocation(line: 473, column: 7, scope: !12157)
!12157 = distinct !DILexicalBlock(scope: !12128, file: !3, line: 473, column: 6)
!12158 = !DILocation(line: 473, column: 6, scope: !12128)
!12159 = !DILocation(line: 474, column: 3, scope: !12157)
!12160 = !DILocation(line: 476, column: 2, scope: !12128)
!12161 = !DILocalVariable(name: "_v", scope: !12162, file: !3, line: 476, type: !762)
!12162 = distinct !DILexicalBlock(scope: !12128, file: !3, line: 476, column: 2)
!12163 = !DILocation(line: 476, column: 2, scope: !12162)
!12164 = !DILocation(line: 476, column: 2, scope: !12165)
!12165 = distinct !DILexicalBlock(scope: !12162, file: !3, line: 476, column: 2)
!12166 = !DILocation(line: 478, column: 2, scope: !12128)
!12167 = !DILocalVariable(name: "_v", scope: !12168, file: !3, line: 478, type: !762)
!12168 = distinct !DILexicalBlock(scope: !12128, file: !3, line: 478, column: 2)
!12169 = !DILocation(line: 478, column: 2, scope: !12168)
!12170 = !DILocation(line: 478, column: 2, scope: !12171)
!12171 = distinct !DILexicalBlock(scope: !12168, file: !3, line: 478, column: 2)
!12172 = !DILocation(line: 479, column: 2, scope: !12128)
!12173 = !DILocalVariable(name: "_v", scope: !12174, file: !3, line: 479, type: !762)
!12174 = distinct !DILexicalBlock(scope: !12128, file: !3, line: 479, column: 2)
!12175 = !DILocation(line: 479, column: 2, scope: !12174)
!12176 = !DILocation(line: 479, column: 2, scope: !12177)
!12177 = distinct !DILexicalBlock(scope: !12174, file: !3, line: 479, column: 2)
!12178 = !DILocation(line: 481, column: 22, scope: !12128)
!12179 = !DILocation(line: 481, column: 20, scope: !12128)
!12180 = !DILocation(line: 483, column: 2, scope: !12128)
!12181 = !DILocation(line: 483, column: 2, scope: !12182)
!12182 = distinct !DILexicalBlock(scope: !12128, file: !3, line: 483, column: 2)
!12183 = !DILocation(line: 483, column: 2, scope: !12184)
!12184 = distinct !DILexicalBlock(scope: !12182, file: !3, line: 483, column: 2)
!12185 = !DILocation(line: 483, column: 2, scope: !12186)
!12186 = distinct !DILexicalBlock(scope: !12182, file: !3, line: 483, column: 2)
!12187 = !DILocation(line: 483, column: 2, scope: !12188)
!12188 = distinct !DILexicalBlock(scope: !12186, file: !3, line: 483, column: 2)
!12189 = !DILocation(line: 484, column: 2, scope: !12128)
!12190 = !DILocalVariable(name: "_v", scope: !12191, file: !3, line: 484, type: !762)
!12191 = distinct !DILexicalBlock(scope: !12128, file: !3, line: 484, column: 2)
!12192 = !DILocation(line: 484, column: 2, scope: !12191)
!12193 = !DILocation(line: 484, column: 2, scope: !12194)
!12194 = distinct !DILexicalBlock(scope: !12191, file: !3, line: 484, column: 2)
!12195 = !DILocalVariable(name: "_out", scope: !12196, file: !3, line: 487, type: !10940)
!12196 = distinct !DILexicalBlock(scope: !12128, file: !3, line: 487, column: 8)
!12197 = !DILocation(line: 487, column: 8, scope: !12196)
!12198 = !DILocation(line: 487, column: 8, scope: !12199)
!12199 = distinct !DILexicalBlock(scope: !12196, file: !3, line: 487, column: 8)
!12200 = !DILocation(line: 487, column: 6, scope: !12128)
!12201 = !DILocation(line: 489, column: 9, scope: !12128)
!12202 = !DILocation(line: 489, column: 2, scope: !12128)
!12203 = !DILocation(line: 491, column: 9, scope: !12128)
!12204 = !DILocation(line: 491, column: 2, scope: !12128)
!12205 = !DILocation(line: 492, column: 1, scope: !12128)
!12206 = distinct !DISubprogram(name: "mlx5_query_nic_vport_qkey_viol_cntr", scope: !3, file: !3, line: 494, type: !11350, scopeLine: 496, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !798)
!12207 = !DILocalVariable(name: "mdev", arg: 1, scope: !12206, file: !3, line: 494, type: !10073)
!12208 = !DILocation(line: 494, column: 63, scope: !12206)
!12209 = !DILocalVariable(name: "qkey_viol_cntr", arg: 2, scope: !12206, file: !3, line: 495, type: !8151)
!12210 = !DILocation(line: 495, column: 11, scope: !12206)
!12211 = !DILocalVariable(name: "out", scope: !12206, file: !3, line: 497, type: !1514)
!12212 = !DILocation(line: 497, column: 7, scope: !12206)
!12213 = !DILocalVariable(name: "outlen", scope: !12206, file: !3, line: 498, type: !37)
!12214 = !DILocation(line: 498, column: 6, scope: !12206)
!12215 = !DILocation(line: 500, column: 17, scope: !12206)
!12216 = !DILocation(line: 500, column: 8, scope: !12206)
!12217 = !DILocation(line: 500, column: 6, scope: !12206)
!12218 = !DILocation(line: 501, column: 7, scope: !12219)
!12219 = distinct !DILexicalBlock(scope: !12206, file: !3, line: 501, column: 6)
!12220 = !DILocation(line: 501, column: 6, scope: !12206)
!12221 = !DILocation(line: 502, column: 3, scope: !12219)
!12222 = !DILocation(line: 504, column: 31, scope: !12206)
!12223 = !DILocation(line: 504, column: 40, scope: !12206)
!12224 = !DILocation(line: 504, column: 2, scope: !12206)
!12225 = !DILocation(line: 506, column: 20, scope: !12206)
!12226 = !DILocation(line: 506, column: 3, scope: !12206)
!12227 = !DILocation(line: 506, column: 18, scope: !12206)
!12228 = !DILocation(line: 509, column: 9, scope: !12206)
!12229 = !DILocation(line: 509, column: 2, scope: !12206)
!12230 = !DILocation(line: 511, column: 2, scope: !12206)
!12231 = !DILocation(line: 512, column: 1, scope: !12206)
!12232 = distinct !DISubprogram(name: "mlx5_query_hca_vport_gid", scope: !3, file: !3, line: 515, type: !12233, scopeLine: 518, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !798)
!12233 = !DISubroutineType(types: !12234)
!12234 = !{!37, !10073, !1451, !1451, !1092, !1092, !12235}
!12235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12236, size: 64)
!12236 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "ib_gid", file: !10019, line: 130, size: 128, elements: !12237)
!12237 = !{!12238, !12239}
!12238 = !DIDerivedType(tag: DW_TAG_member, name: "raw", scope: !12236, file: !10019, line: 131, baseType: !9674, size: 128)
!12239 = !DIDerivedType(tag: DW_TAG_member, name: "global", scope: !12236, file: !10019, line: 135, baseType: !12240, size: 128)
!12240 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !12236, file: !10019, line: 132, size: 128, elements: !12241)
!12241 = !{!12242, !12243}
!12242 = !DIDerivedType(tag: DW_TAG_member, name: "subnet_prefix", scope: !12240, file: !10019, line: 133, baseType: !10059, size: 64)
!12243 = !DIDerivedType(tag: DW_TAG_member, name: "interface_id", scope: !12240, file: !10019, line: 134, baseType: !10059, size: 64, offset: 64)
!12244 = !DILocalVariable(name: "dev", arg: 1, scope: !12232, file: !3, line: 515, type: !10073)
!12245 = !DILocation(line: 515, column: 52, scope: !12232)
!12246 = !DILocalVariable(name: "other_vport", arg: 2, scope: !12232, file: !3, line: 515, type: !1451)
!12247 = !DILocation(line: 515, column: 60, scope: !12232)
!12248 = !DILocalVariable(name: "port_num", arg: 3, scope: !12232, file: !3, line: 516, type: !1451)
!12249 = !DILocation(line: 516, column: 12, scope: !12232)
!12250 = !DILocalVariable(name: "vf_num", arg: 4, scope: !12232, file: !3, line: 516, type: !1092)
!12251 = !DILocation(line: 516, column: 27, scope: !12232)
!12252 = !DILocalVariable(name: "gid_index", arg: 5, scope: !12232, file: !3, line: 516, type: !1092)
!12253 = !DILocation(line: 516, column: 39, scope: !12232)
!12254 = !DILocalVariable(name: "gid", arg: 6, scope: !12232, file: !3, line: 517, type: !12235)
!12255 = !DILocation(line: 517, column: 23, scope: !12232)
!12256 = !DILocalVariable(name: "in_sz", scope: !12232, file: !3, line: 519, type: !37)
!12257 = !DILocation(line: 519, column: 6, scope: !12232)
!12258 = !DILocalVariable(name: "out_sz", scope: !12232, file: !3, line: 520, type: !37)
!12259 = !DILocation(line: 520, column: 6, scope: !12232)
!12260 = !DILocalVariable(name: "is_group_manager", scope: !12232, file: !3, line: 521, type: !37)
!12261 = !DILocation(line: 521, column: 6, scope: !12232)
!12262 = !DILocalVariable(name: "out", scope: !12232, file: !3, line: 522, type: !625)
!12263 = !DILocation(line: 522, column: 8, scope: !12232)
!12264 = !DILocalVariable(name: "in", scope: !12232, file: !3, line: 523, type: !625)
!12265 = !DILocation(line: 523, column: 8, scope: !12232)
!12266 = !DILocalVariable(name: "tmp", scope: !12232, file: !3, line: 524, type: !12235)
!12267 = !DILocation(line: 524, column: 16, scope: !12232)
!12268 = !DILocalVariable(name: "tbsz", scope: !12232, file: !3, line: 525, type: !37)
!12269 = !DILocation(line: 525, column: 6, scope: !12232)
!12270 = !DILocalVariable(name: "nout", scope: !12232, file: !3, line: 526, type: !37)
!12271 = !DILocation(line: 526, column: 6, scope: !12232)
!12272 = !DILocalVariable(name: "err", scope: !12232, file: !3, line: 527, type: !37)
!12273 = !DILocation(line: 527, column: 6, scope: !12232)
!12274 = !DILocation(line: 529, column: 21, scope: !12232)
!12275 = !DILocation(line: 529, column: 19, scope: !12232)
!12276 = !DILocation(line: 530, column: 32, scope: !12232)
!12277 = !DILocation(line: 530, column: 9, scope: !12232)
!12278 = !DILocation(line: 530, column: 7, scope: !12232)
!12279 = !DILocation(line: 534, column: 6, scope: !12280)
!12280 = distinct !DILexicalBlock(scope: !12232, file: !3, line: 534, column: 6)
!12281 = !DILocation(line: 534, column: 18, scope: !12280)
!12282 = !DILocation(line: 534, column: 16, scope: !12280)
!12283 = !DILocation(line: 534, column: 23, scope: !12280)
!12284 = !DILocation(line: 534, column: 26, scope: !12280)
!12285 = !DILocation(line: 534, column: 36, scope: !12280)
!12286 = !DILocation(line: 534, column: 6, scope: !12232)
!12287 = !DILocation(line: 535, column: 3, scope: !12280)
!12288 = !DILocation(line: 537, column: 6, scope: !12289)
!12289 = distinct !DILexicalBlock(scope: !12232, file: !3, line: 537, column: 6)
!12290 = !DILocation(line: 537, column: 16, scope: !12289)
!12291 = !DILocation(line: 537, column: 6, scope: !12232)
!12292 = !DILocation(line: 538, column: 10, scope: !12289)
!12293 = !DILocation(line: 538, column: 8, scope: !12289)
!12294 = !DILocation(line: 538, column: 3, scope: !12289)
!12295 = !DILocation(line: 540, column: 8, scope: !12289)
!12296 = !DILocation(line: 542, column: 12, scope: !12232)
!12297 = !DILocation(line: 542, column: 17, scope: !12232)
!12298 = !DILocation(line: 542, column: 9, scope: !12232)
!12299 = !DILocation(line: 544, column: 15, scope: !12232)
!12300 = !DILocation(line: 544, column: 7, scope: !12232)
!12301 = !DILocation(line: 544, column: 5, scope: !12232)
!12302 = !DILocation(line: 545, column: 16, scope: !12232)
!12303 = !DILocation(line: 545, column: 8, scope: !12232)
!12304 = !DILocation(line: 545, column: 6, scope: !12232)
!12305 = !DILocation(line: 546, column: 7, scope: !12306)
!12306 = distinct !DILexicalBlock(scope: !12232, file: !3, line: 546, column: 6)
!12307 = !DILocation(line: 546, column: 10, scope: !12306)
!12308 = !DILocation(line: 546, column: 14, scope: !12306)
!12309 = !DILocation(line: 546, column: 6, scope: !12232)
!12310 = !DILocation(line: 547, column: 7, scope: !12311)
!12311 = distinct !DILexicalBlock(scope: !12306, file: !3, line: 546, column: 19)
!12312 = !DILocation(line: 548, column: 3, scope: !12311)
!12313 = !DILocation(line: 551, column: 2, scope: !12232)
!12314 = !DILocalVariable(name: "_v", scope: !12315, file: !3, line: 551, type: !762)
!12315 = distinct !DILexicalBlock(scope: !12232, file: !3, line: 551, column: 2)
!12316 = !DILocation(line: 551, column: 2, scope: !12315)
!12317 = !DILocation(line: 551, column: 2, scope: !12318)
!12318 = distinct !DILexicalBlock(scope: !12315, file: !3, line: 551, column: 2)
!12319 = !DILocation(line: 552, column: 6, scope: !12320)
!12320 = distinct !DILexicalBlock(scope: !12232, file: !3, line: 552, column: 6)
!12321 = !DILocation(line: 552, column: 6, scope: !12232)
!12322 = !DILocation(line: 553, column: 7, scope: !12323)
!12323 = distinct !DILexicalBlock(scope: !12324, file: !3, line: 553, column: 7)
!12324 = distinct !DILexicalBlock(scope: !12320, file: !3, line: 552, column: 19)
!12325 = !DILocation(line: 553, column: 7, scope: !12324)
!12326 = !DILocation(line: 554, column: 4, scope: !12327)
!12327 = distinct !DILexicalBlock(scope: !12323, file: !3, line: 553, column: 25)
!12328 = !DILocalVariable(name: "_v", scope: !12329, file: !3, line: 554, type: !762)
!12329 = distinct !DILexicalBlock(scope: !12327, file: !3, line: 554, column: 4)
!12330 = !DILocation(line: 554, column: 4, scope: !12329)
!12331 = !DILocation(line: 554, column: 4, scope: !12332)
!12332 = distinct !DILexicalBlock(scope: !12329, file: !3, line: 554, column: 4)
!12333 = !DILocation(line: 555, column: 4, scope: !12327)
!12334 = !DILocalVariable(name: "_v", scope: !12335, file: !3, line: 555, type: !762)
!12335 = distinct !DILexicalBlock(scope: !12327, file: !3, line: 555, column: 4)
!12336 = !DILocation(line: 555, column: 4, scope: !12335)
!12337 = !DILocation(line: 555, column: 4, scope: !12338)
!12338 = distinct !DILexicalBlock(scope: !12335, file: !3, line: 555, column: 4)
!12339 = !DILocation(line: 556, column: 3, scope: !12327)
!12340 = !DILocation(line: 557, column: 8, scope: !12341)
!12341 = distinct !DILexicalBlock(scope: !12323, file: !3, line: 556, column: 10)
!12342 = !DILocation(line: 558, column: 4, scope: !12341)
!12343 = !DILocation(line: 560, column: 2, scope: !12324)
!12344 = !DILocation(line: 561, column: 2, scope: !12232)
!12345 = !DILocalVariable(name: "_v", scope: !12346, file: !3, line: 561, type: !762)
!12346 = distinct !DILexicalBlock(scope: !12232, file: !3, line: 561, column: 2)
!12347 = !DILocation(line: 561, column: 2, scope: !12346)
!12348 = !DILocation(line: 561, column: 2, scope: !12349)
!12349 = distinct !DILexicalBlock(scope: !12346, file: !3, line: 561, column: 2)
!12350 = !DILocation(line: 563, column: 6, scope: !12351)
!12351 = distinct !DILexicalBlock(scope: !12232, file: !3, line: 563, column: 6)
!12352 = !DILocation(line: 563, column: 35, scope: !12351)
!12353 = !DILocation(line: 563, column: 6, scope: !12232)
!12354 = !DILocation(line: 564, column: 3, scope: !12351)
!12355 = !DILocalVariable(name: "_v", scope: !12356, file: !3, line: 564, type: !762)
!12356 = distinct !DILexicalBlock(scope: !12351, file: !3, line: 564, column: 3)
!12357 = !DILocation(line: 564, column: 3, scope: !12356)
!12358 = !DILocation(line: 564, column: 3, scope: !12359)
!12359 = distinct !DILexicalBlock(scope: !12356, file: !3, line: 564, column: 3)
!12360 = !DILocation(line: 566, column: 22, scope: !12232)
!12361 = !DILocation(line: 566, column: 27, scope: !12232)
!12362 = !DILocation(line: 566, column: 31, scope: !12232)
!12363 = !DILocation(line: 566, column: 38, scope: !12232)
!12364 = !DILocation(line: 566, column: 43, scope: !12232)
!12365 = !DILocation(line: 566, column: 8, scope: !12232)
!12366 = !DILocation(line: 566, column: 6, scope: !12232)
!12367 = !DILocation(line: 567, column: 6, scope: !12368)
!12368 = distinct !DILexicalBlock(scope: !12232, file: !3, line: 567, column: 6)
!12369 = !DILocation(line: 567, column: 6, scope: !12232)
!12370 = !DILocation(line: 568, column: 3, scope: !12368)
!12371 = !DILocation(line: 570, column: 8, scope: !12232)
!12372 = !DILocation(line: 570, column: 12, scope: !12232)
!12373 = !DILocation(line: 570, column: 6, scope: !12232)
!12374 = !DILocation(line: 571, column: 30, scope: !12232)
!12375 = !DILocation(line: 571, column: 35, scope: !12232)
!12376 = !DILocation(line: 571, column: 42, scope: !12232)
!12377 = !DILocation(line: 571, column: 2, scope: !12232)
!12378 = !DILocation(line: 571, column: 7, scope: !12232)
!12379 = !DILocation(line: 571, column: 14, scope: !12232)
!12380 = !DILocation(line: 571, column: 28, scope: !12232)
!12381 = !DILocation(line: 572, column: 29, scope: !12232)
!12382 = !DILocation(line: 572, column: 34, scope: !12232)
!12383 = !DILocation(line: 572, column: 41, scope: !12232)
!12384 = !DILocation(line: 572, column: 2, scope: !12232)
!12385 = !DILocation(line: 572, column: 7, scope: !12232)
!12386 = !DILocation(line: 572, column: 14, scope: !12232)
!12387 = !DILocation(line: 572, column: 27, scope: !12232)
!12388 = !DILabel(scope: !12232, name: "out", file: !3, line: 574)
!12389 = !DILocation(line: 574, column: 1, scope: !12232)
!12390 = !DILocation(line: 575, column: 8, scope: !12232)
!12391 = !DILocation(line: 575, column: 2, scope: !12232)
!12392 = !DILocation(line: 576, column: 8, scope: !12232)
!12393 = !DILocation(line: 576, column: 2, scope: !12232)
!12394 = !DILocation(line: 577, column: 9, scope: !12232)
!12395 = !DILocation(line: 577, column: 2, scope: !12232)
!12396 = !DILocation(line: 578, column: 1, scope: !12232)
!12397 = distinct !DISubprogram(name: "mlx5_get_gid_table_len", scope: !9710, file: !9710, line: 1161, type: !12398, scopeLine: 1162, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !798)
!12398 = !DISubroutineType(types: !12399)
!12399 = !{!37, !1092}
!12400 = !DILocalVariable(name: "param", arg: 1, scope: !12397, file: !9710, line: 1161, type: !1092)
!12401 = !DILocation(line: 1161, column: 46, scope: !12397)
!12402 = !DILocation(line: 1163, column: 6, scope: !12403)
!12403 = distinct !DILexicalBlock(scope: !12397, file: !9710, line: 1163, column: 6)
!12404 = !DILocation(line: 1163, column: 12, scope: !12403)
!12405 = !DILocation(line: 1163, column: 6, scope: !12397)
!12406 = !DILocation(line: 1164, column: 3, scope: !12407)
!12407 = distinct !DILexicalBlock(scope: !12403, file: !9710, line: 1163, column: 17)
!12408 = !DILocation(line: 1165, column: 3, scope: !12407)
!12409 = !DILocation(line: 1168, column: 19, scope: !12397)
!12410 = !DILocation(line: 1168, column: 16, scope: !12397)
!12411 = !DILocation(line: 1168, column: 11, scope: !12397)
!12412 = !DILocation(line: 1168, column: 2, scope: !12397)
!12413 = !DILocation(line: 1169, column: 1, scope: !12397)
!12414 = distinct !DISubprogram(name: "mlx5_query_hca_vport_pkey", scope: !3, file: !3, line: 581, type: !12415, scopeLine: 584, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !798)
!12415 = !DISubroutineType(types: !12416)
!12416 = !{!37, !10073, !1451, !1451, !1092, !1092, !8151}
!12417 = !DILocalVariable(name: "dev", arg: 1, scope: !12414, file: !3, line: 581, type: !10073)
!12418 = !DILocation(line: 581, column: 53, scope: !12414)
!12419 = !DILocalVariable(name: "other_vport", arg: 2, scope: !12414, file: !3, line: 581, type: !1451)
!12420 = !DILocation(line: 581, column: 61, scope: !12414)
!12421 = !DILocalVariable(name: "port_num", arg: 3, scope: !12414, file: !3, line: 582, type: !1451)
!12422 = !DILocation(line: 582, column: 13, scope: !12414)
!12423 = !DILocalVariable(name: "vf_num", arg: 4, scope: !12414, file: !3, line: 582, type: !1092)
!12424 = !DILocation(line: 582, column: 27, scope: !12414)
!12425 = !DILocalVariable(name: "pkey_index", arg: 5, scope: !12414, file: !3, line: 582, type: !1092)
!12426 = !DILocation(line: 582, column: 39, scope: !12414)
!12427 = !DILocalVariable(name: "pkey", arg: 6, scope: !12414, file: !3, line: 583, type: !8151)
!12428 = !DILocation(line: 583, column: 15, scope: !12414)
!12429 = !DILocalVariable(name: "in_sz", scope: !12414, file: !3, line: 585, type: !37)
!12430 = !DILocation(line: 585, column: 6, scope: !12414)
!12431 = !DILocalVariable(name: "out_sz", scope: !12414, file: !3, line: 586, type: !37)
!12432 = !DILocation(line: 586, column: 6, scope: !12414)
!12433 = !DILocalVariable(name: "is_group_manager", scope: !12414, file: !3, line: 587, type: !37)
!12434 = !DILocation(line: 587, column: 6, scope: !12414)
!12435 = !DILocalVariable(name: "out", scope: !12414, file: !3, line: 588, type: !625)
!12436 = !DILocation(line: 588, column: 8, scope: !12414)
!12437 = !DILocalVariable(name: "in", scope: !12414, file: !3, line: 589, type: !625)
!12438 = !DILocation(line: 589, column: 8, scope: !12414)
!12439 = !DILocalVariable(name: "pkarr", scope: !12414, file: !3, line: 590, type: !625)
!12440 = !DILocation(line: 590, column: 8, scope: !12414)
!12441 = !DILocalVariable(name: "nout", scope: !12414, file: !3, line: 591, type: !37)
!12442 = !DILocation(line: 591, column: 6, scope: !12414)
!12443 = !DILocalVariable(name: "tbsz", scope: !12414, file: !3, line: 592, type: !37)
!12444 = !DILocation(line: 592, column: 6, scope: !12414)
!12445 = !DILocalVariable(name: "err", scope: !12414, file: !3, line: 593, type: !37)
!12446 = !DILocation(line: 593, column: 6, scope: !12414)
!12447 = !DILocalVariable(name: "i", scope: !12414, file: !3, line: 594, type: !37)
!12448 = !DILocation(line: 594, column: 6, scope: !12414)
!12449 = !DILocation(line: 596, column: 21, scope: !12414)
!12450 = !DILocation(line: 596, column: 19, scope: !12414)
!12451 = !DILocation(line: 598, column: 28, scope: !12414)
!12452 = !DILocation(line: 598, column: 9, scope: !12414)
!12453 = !DILocation(line: 598, column: 7, scope: !12414)
!12454 = !DILocation(line: 599, column: 6, scope: !12455)
!12455 = distinct !DILexicalBlock(scope: !12414, file: !3, line: 599, column: 6)
!12456 = !DILocation(line: 599, column: 19, scope: !12455)
!12457 = !DILocation(line: 599, column: 17, scope: !12455)
!12458 = !DILocation(line: 599, column: 24, scope: !12455)
!12459 = !DILocation(line: 599, column: 27, scope: !12455)
!12460 = !DILocation(line: 599, column: 38, scope: !12455)
!12461 = !DILocation(line: 599, column: 6, scope: !12414)
!12462 = !DILocation(line: 600, column: 3, scope: !12455)
!12463 = !DILocation(line: 602, column: 6, scope: !12464)
!12464 = distinct !DILexicalBlock(scope: !12414, file: !3, line: 602, column: 6)
!12465 = !DILocation(line: 602, column: 17, scope: !12464)
!12466 = !DILocation(line: 602, column: 6, scope: !12414)
!12467 = !DILocation(line: 603, column: 10, scope: !12464)
!12468 = !DILocation(line: 603, column: 8, scope: !12464)
!12469 = !DILocation(line: 603, column: 3, scope: !12464)
!12470 = !DILocation(line: 605, column: 8, scope: !12464)
!12471 = !DILocation(line: 607, column: 12, scope: !12414)
!12472 = !DILocation(line: 607, column: 17, scope: !12414)
!12473 = !DILocation(line: 607, column: 9, scope: !12414)
!12474 = !DILocation(line: 609, column: 15, scope: !12414)
!12475 = !DILocation(line: 609, column: 7, scope: !12414)
!12476 = !DILocation(line: 609, column: 5, scope: !12414)
!12477 = !DILocation(line: 610, column: 16, scope: !12414)
!12478 = !DILocation(line: 610, column: 8, scope: !12414)
!12479 = !DILocation(line: 610, column: 6, scope: !12414)
!12480 = !DILocation(line: 611, column: 7, scope: !12481)
!12481 = distinct !DILexicalBlock(scope: !12414, file: !3, line: 611, column: 6)
!12482 = !DILocation(line: 611, column: 10, scope: !12481)
!12483 = !DILocation(line: 611, column: 14, scope: !12481)
!12484 = !DILocation(line: 611, column: 6, scope: !12414)
!12485 = !DILocation(line: 612, column: 7, scope: !12486)
!12486 = distinct !DILexicalBlock(scope: !12481, file: !3, line: 611, column: 19)
!12487 = !DILocation(line: 613, column: 3, scope: !12486)
!12488 = !DILocation(line: 616, column: 2, scope: !12414)
!12489 = !DILocalVariable(name: "_v", scope: !12490, file: !3, line: 616, type: !762)
!12490 = distinct !DILexicalBlock(scope: !12414, file: !3, line: 616, column: 2)
!12491 = !DILocation(line: 616, column: 2, scope: !12490)
!12492 = !DILocation(line: 616, column: 2, scope: !12493)
!12493 = distinct !DILexicalBlock(scope: !12490, file: !3, line: 616, column: 2)
!12494 = !DILocation(line: 617, column: 6, scope: !12495)
!12495 = distinct !DILexicalBlock(scope: !12414, file: !3, line: 617, column: 6)
!12496 = !DILocation(line: 617, column: 6, scope: !12414)
!12497 = !DILocation(line: 618, column: 7, scope: !12498)
!12498 = distinct !DILexicalBlock(scope: !12499, file: !3, line: 618, column: 7)
!12499 = distinct !DILexicalBlock(scope: !12495, file: !3, line: 617, column: 19)
!12500 = !DILocation(line: 618, column: 7, scope: !12499)
!12501 = !DILocation(line: 619, column: 4, scope: !12502)
!12502 = distinct !DILexicalBlock(scope: !12498, file: !3, line: 618, column: 25)
!12503 = !DILocalVariable(name: "_v", scope: !12504, file: !3, line: 619, type: !762)
!12504 = distinct !DILexicalBlock(scope: !12502, file: !3, line: 619, column: 4)
!12505 = !DILocation(line: 619, column: 4, scope: !12504)
!12506 = !DILocation(line: 619, column: 4, scope: !12507)
!12507 = distinct !DILexicalBlock(scope: !12504, file: !3, line: 619, column: 4)
!12508 = !DILocation(line: 620, column: 4, scope: !12502)
!12509 = !DILocalVariable(name: "_v", scope: !12510, file: !3, line: 620, type: !762)
!12510 = distinct !DILexicalBlock(scope: !12502, file: !3, line: 620, column: 4)
!12511 = !DILocation(line: 620, column: 4, scope: !12510)
!12512 = !DILocation(line: 620, column: 4, scope: !12513)
!12513 = distinct !DILexicalBlock(scope: !12510, file: !3, line: 620, column: 4)
!12514 = !DILocation(line: 621, column: 3, scope: !12502)
!12515 = !DILocation(line: 622, column: 8, scope: !12516)
!12516 = distinct !DILexicalBlock(scope: !12498, file: !3, line: 621, column: 10)
!12517 = !DILocation(line: 623, column: 4, scope: !12516)
!12518 = !DILocation(line: 625, column: 2, scope: !12499)
!12519 = !DILocation(line: 626, column: 2, scope: !12414)
!12520 = !DILocalVariable(name: "_v", scope: !12521, file: !3, line: 626, type: !762)
!12521 = distinct !DILexicalBlock(scope: !12414, file: !3, line: 626, column: 2)
!12522 = !DILocation(line: 626, column: 2, scope: !12521)
!12523 = !DILocation(line: 626, column: 2, scope: !12524)
!12524 = distinct !DILexicalBlock(scope: !12521, file: !3, line: 626, column: 2)
!12525 = !DILocation(line: 628, column: 6, scope: !12526)
!12526 = distinct !DILexicalBlock(scope: !12414, file: !3, line: 628, column: 6)
!12527 = !DILocation(line: 628, column: 35, scope: !12526)
!12528 = !DILocation(line: 628, column: 6, scope: !12414)
!12529 = !DILocation(line: 629, column: 3, scope: !12526)
!12530 = !DILocalVariable(name: "_v", scope: !12531, file: !3, line: 629, type: !762)
!12531 = distinct !DILexicalBlock(scope: !12526, file: !3, line: 629, column: 3)
!12532 = !DILocation(line: 629, column: 3, scope: !12531)
!12533 = !DILocation(line: 629, column: 3, scope: !12534)
!12534 = distinct !DILexicalBlock(scope: !12531, file: !3, line: 629, column: 3)
!12535 = !DILocation(line: 631, column: 22, scope: !12414)
!12536 = !DILocation(line: 631, column: 27, scope: !12414)
!12537 = !DILocation(line: 631, column: 31, scope: !12414)
!12538 = !DILocation(line: 631, column: 38, scope: !12414)
!12539 = !DILocation(line: 631, column: 43, scope: !12414)
!12540 = !DILocation(line: 631, column: 8, scope: !12414)
!12541 = !DILocation(line: 631, column: 6, scope: !12414)
!12542 = !DILocation(line: 632, column: 6, scope: !12543)
!12543 = distinct !DILexicalBlock(scope: !12414, file: !3, line: 632, column: 6)
!12544 = !DILocation(line: 632, column: 6, scope: !12414)
!12545 = !DILocation(line: 633, column: 3, scope: !12543)
!12546 = !DILocation(line: 635, column: 10, scope: !12414)
!12547 = !DILocation(line: 635, column: 8, scope: !12414)
!12548 = !DILocation(line: 636, column: 9, scope: !12549)
!12549 = distinct !DILexicalBlock(scope: !12414, file: !3, line: 636, column: 2)
!12550 = !DILocation(line: 636, column: 7, scope: !12549)
!12551 = !DILocation(line: 636, column: 14, scope: !12552)
!12552 = distinct !DILexicalBlock(scope: !12549, file: !3, line: 636, column: 2)
!12553 = !DILocation(line: 636, column: 18, scope: !12552)
!12554 = !DILocation(line: 636, column: 16, scope: !12552)
!12555 = !DILocation(line: 636, column: 2, scope: !12549)
!12556 = !DILocalVariable(name: "___t", scope: !12557, file: !3, line: 637, type: !762)
!12557 = distinct !DILexicalBlock(scope: !12552, file: !3, line: 637, column: 11)
!12558 = !DILocation(line: 637, column: 11, scope: !12557)
!12559 = !DILocation(line: 637, column: 11, scope: !12560)
!12560 = distinct !DILexicalBlock(scope: !12561, file: !3, line: 637, column: 11)
!12561 = distinct !DILexicalBlock(scope: !12557, file: !3, line: 637, column: 11)
!12562 = !DILocation(line: 637, column: 11, scope: !12561)
!12563 = !DILocation(line: 637, column: 11, scope: !12552)
!12564 = !DILocation(line: 637, column: 4, scope: !12552)
!12565 = !DILocation(line: 637, column: 9, scope: !12552)
!12566 = !DILocation(line: 637, column: 3, scope: !12552)
!12567 = !DILocation(line: 636, column: 25, scope: !12552)
!12568 = !DILocation(line: 636, column: 33, scope: !12552)
!12569 = !DILocation(line: 636, column: 43, scope: !12552)
!12570 = !DILocation(line: 636, column: 2, scope: !12552)
!12571 = distinct !{!12571, !12555, !12572}
!12572 = !DILocation(line: 637, column: 11, scope: !12549)
!12573 = !DILabel(scope: !12414, name: "out", file: !3, line: 639)
!12574 = !DILocation(line: 639, column: 1, scope: !12414)
!12575 = !DILocation(line: 640, column: 8, scope: !12414)
!12576 = !DILocation(line: 640, column: 2, scope: !12414)
!12577 = !DILocation(line: 641, column: 8, scope: !12414)
!12578 = !DILocation(line: 641, column: 2, scope: !12414)
!12579 = !DILocation(line: 642, column: 9, scope: !12414)
!12580 = !DILocation(line: 642, column: 2, scope: !12414)
!12581 = !DILocation(line: 643, column: 1, scope: !12414)
!12582 = distinct !DISubprogram(name: "mlx5_to_sw_pkey_sz", scope: !9975, file: !9975, line: 1414, type: !12583, scopeLine: 1415, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !798)
!12583 = !DISubroutineType(types: !12584)
!12584 = !{!1092, !37}
!12585 = !DILocalVariable(name: "pkey_sz", arg: 1, scope: !12582, file: !9975, line: 1414, type: !37)
!12586 = !DILocation(line: 1414, column: 42, scope: !12582)
!12587 = !DILocation(line: 1416, column: 6, scope: !12588)
!12588 = distinct !DILexicalBlock(scope: !12582, file: !9975, line: 1416, column: 6)
!12589 = !DILocation(line: 1416, column: 14, scope: !12588)
!12590 = !DILocation(line: 1416, column: 6, scope: !12582)
!12591 = !DILocation(line: 1417, column: 3, scope: !12588)
!12592 = !DILocation(line: 1418, column: 37, scope: !12582)
!12593 = !DILocation(line: 1418, column: 34, scope: !12582)
!12594 = !DILocation(line: 1418, column: 9, scope: !12582)
!12595 = !DILocation(line: 1418, column: 2, scope: !12582)
!12596 = !DILocation(line: 1419, column: 1, scope: !12582)
!12597 = distinct !DISubprogram(name: "mlx5_query_hca_vport_context", scope: !3, file: !3, line: 646, type: !12598, scopeLine: 650, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !798)
!12598 = !DISubroutineType(types: !12599)
!12599 = !{!37, !10073, !1451, !1451, !1092, !12600}
!12600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12601, size: 64)
!12601 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mlx5_hca_vport_context", file: !9710, line: 784, size: 640, elements: !12602)
!12602 = !{!12603, !12604, !12605, !12606, !12607, !12608, !12609, !12610, !12611, !12612, !12613, !12614, !12615, !12616, !12617, !12618, !12619, !12620, !12621, !12622, !12623, !12624, !12625, !12626}
!12603 = !DIDerivedType(tag: DW_TAG_member, name: "field_select", scope: !12601, file: !9710, line: 785, baseType: !762, size: 32)
!12604 = !DIDerivedType(tag: DW_TAG_member, name: "sm_virt_aware", scope: !12601, file: !9710, line: 786, baseType: !595, size: 8, offset: 32)
!12605 = !DIDerivedType(tag: DW_TAG_member, name: "has_smi", scope: !12601, file: !9710, line: 787, baseType: !595, size: 8, offset: 40)
!12606 = !DIDerivedType(tag: DW_TAG_member, name: "has_raw", scope: !12601, file: !9710, line: 788, baseType: !595, size: 8, offset: 48)
!12607 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !12601, file: !9710, line: 789, baseType: !9728, size: 32, offset: 64)
!12608 = !DIDerivedType(tag: DW_TAG_member, name: "phys_state", scope: !12601, file: !9710, line: 790, baseType: !10015, size: 32, offset: 96)
!12609 = !DIDerivedType(tag: DW_TAG_member, name: "vport_state", scope: !12601, file: !9710, line: 791, baseType: !10018, size: 32, offset: 128)
!12610 = !DIDerivedType(tag: DW_TAG_member, name: "port_physical_state", scope: !12601, file: !9710, line: 792, baseType: !1451, size: 8, offset: 160)
!12611 = !DIDerivedType(tag: DW_TAG_member, name: "sys_image_guid", scope: !12601, file: !9710, line: 793, baseType: !391, size: 64, offset: 192)
!12612 = !DIDerivedType(tag: DW_TAG_member, name: "port_guid", scope: !12601, file: !9710, line: 794, baseType: !391, size: 64, offset: 256)
!12613 = !DIDerivedType(tag: DW_TAG_member, name: "node_guid", scope: !12601, file: !9710, line: 795, baseType: !391, size: 64, offset: 320)
!12614 = !DIDerivedType(tag: DW_TAG_member, name: "cap_mask1", scope: !12601, file: !9710, line: 796, baseType: !762, size: 32, offset: 384)
!12615 = !DIDerivedType(tag: DW_TAG_member, name: "cap_mask1_perm", scope: !12601, file: !9710, line: 797, baseType: !762, size: 32, offset: 416)
!12616 = !DIDerivedType(tag: DW_TAG_member, name: "cap_mask2", scope: !12601, file: !9710, line: 798, baseType: !1092, size: 16, offset: 448)
!12617 = !DIDerivedType(tag: DW_TAG_member, name: "cap_mask2_perm", scope: !12601, file: !9710, line: 799, baseType: !1092, size: 16, offset: 464)
!12618 = !DIDerivedType(tag: DW_TAG_member, name: "lid", scope: !12601, file: !9710, line: 800, baseType: !1092, size: 16, offset: 480)
!12619 = !DIDerivedType(tag: DW_TAG_member, name: "init_type_reply", scope: !12601, file: !9710, line: 801, baseType: !1451, size: 8, offset: 496)
!12620 = !DIDerivedType(tag: DW_TAG_member, name: "lmc", scope: !12601, file: !9710, line: 802, baseType: !1451, size: 8, offset: 504)
!12621 = !DIDerivedType(tag: DW_TAG_member, name: "subnet_timeout", scope: !12601, file: !9710, line: 803, baseType: !1451, size: 8, offset: 512)
!12622 = !DIDerivedType(tag: DW_TAG_member, name: "sm_lid", scope: !12601, file: !9710, line: 804, baseType: !1092, size: 16, offset: 528)
!12623 = !DIDerivedType(tag: DW_TAG_member, name: "sm_sl", scope: !12601, file: !9710, line: 805, baseType: !1451, size: 8, offset: 544)
!12624 = !DIDerivedType(tag: DW_TAG_member, name: "qkey_violation_counter", scope: !12601, file: !9710, line: 806, baseType: !1092, size: 16, offset: 560)
!12625 = !DIDerivedType(tag: DW_TAG_member, name: "pkey_violation_counter", scope: !12601, file: !9710, line: 807, baseType: !1092, size: 16, offset: 576)
!12626 = !DIDerivedType(tag: DW_TAG_member, name: "grh_required", scope: !12601, file: !9710, line: 808, baseType: !595, size: 8, offset: 592)
!12627 = !DILocalVariable(name: "dev", arg: 1, scope: !12597, file: !3, line: 646, type: !10073)
!12628 = !DILocation(line: 646, column: 56, scope: !12597)
!12629 = !DILocalVariable(name: "other_vport", arg: 2, scope: !12597, file: !3, line: 647, type: !1451)
!12630 = !DILocation(line: 647, column: 9, scope: !12597)
!12631 = !DILocalVariable(name: "port_num", arg: 3, scope: !12597, file: !3, line: 647, type: !1451)
!12632 = !DILocation(line: 647, column: 25, scope: !12597)
!12633 = !DILocalVariable(name: "vf_num", arg: 4, scope: !12597, file: !3, line: 648, type: !1092)
!12634 = !DILocation(line: 648, column: 10, scope: !12597)
!12635 = !DILocalVariable(name: "rep", arg: 5, scope: !12597, file: !3, line: 649, type: !12600)
!12636 = !DILocation(line: 649, column: 37, scope: !12597)
!12637 = !DILocalVariable(name: "out_sz", scope: !12597, file: !3, line: 651, type: !37)
!12638 = !DILocation(line: 651, column: 6, scope: !12597)
!12639 = !DILocalVariable(name: "in", scope: !12597, file: !3, line: 652, type: !12640)
!12640 = !DICompositeType(tag: DW_TAG_array_type, baseType: !37, size: 128, elements: !1256)
!12641 = !DILocation(line: 652, column: 6, scope: !12597)
!12642 = !DILocalVariable(name: "is_group_manager", scope: !12597, file: !3, line: 653, type: !37)
!12643 = !DILocation(line: 653, column: 6, scope: !12597)
!12644 = !DILocalVariable(name: "out", scope: !12597, file: !3, line: 654, type: !625)
!12645 = !DILocation(line: 654, column: 8, scope: !12597)
!12646 = !DILocalVariable(name: "ctx", scope: !12597, file: !3, line: 655, type: !625)
!12647 = !DILocation(line: 655, column: 8, scope: !12597)
!12648 = !DILocalVariable(name: "err", scope: !12597, file: !3, line: 656, type: !37)
!12649 = !DILocation(line: 656, column: 6, scope: !12597)
!12650 = !DILocation(line: 658, column: 21, scope: !12597)
!12651 = !DILocation(line: 658, column: 19, scope: !12597)
!12652 = !DILocation(line: 660, column: 16, scope: !12597)
!12653 = !DILocation(line: 660, column: 8, scope: !12597)
!12654 = !DILocation(line: 660, column: 6, scope: !12597)
!12655 = !DILocation(line: 661, column: 7, scope: !12656)
!12656 = distinct !DILexicalBlock(scope: !12597, file: !3, line: 661, column: 6)
!12657 = !DILocation(line: 661, column: 6, scope: !12597)
!12658 = !DILocation(line: 662, column: 3, scope: !12656)
!12659 = !DILocation(line: 664, column: 2, scope: !12597)
!12660 = !DILocalVariable(name: "_v", scope: !12661, file: !3, line: 664, type: !762)
!12661 = distinct !DILexicalBlock(scope: !12597, file: !3, line: 664, column: 2)
!12662 = !DILocation(line: 664, column: 2, scope: !12661)
!12663 = !DILocation(line: 664, column: 2, scope: !12664)
!12664 = distinct !DILexicalBlock(scope: !12661, file: !3, line: 664, column: 2)
!12665 = !DILocation(line: 666, column: 6, scope: !12666)
!12666 = distinct !DILexicalBlock(scope: !12597, file: !3, line: 666, column: 6)
!12667 = !DILocation(line: 666, column: 6, scope: !12597)
!12668 = !DILocation(line: 667, column: 7, scope: !12669)
!12669 = distinct !DILexicalBlock(scope: !12670, file: !3, line: 667, column: 7)
!12670 = distinct !DILexicalBlock(scope: !12666, file: !3, line: 666, column: 19)
!12671 = !DILocation(line: 667, column: 7, scope: !12670)
!12672 = !DILocation(line: 668, column: 4, scope: !12673)
!12673 = distinct !DILexicalBlock(scope: !12669, file: !3, line: 667, column: 25)
!12674 = !DILocalVariable(name: "_v", scope: !12675, file: !3, line: 668, type: !762)
!12675 = distinct !DILexicalBlock(scope: !12673, file: !3, line: 668, column: 4)
!12676 = !DILocation(line: 668, column: 4, scope: !12675)
!12677 = !DILocation(line: 668, column: 4, scope: !12678)
!12678 = distinct !DILexicalBlock(scope: !12675, file: !3, line: 668, column: 4)
!12679 = !DILocation(line: 669, column: 4, scope: !12673)
!12680 = !DILocalVariable(name: "_v", scope: !12681, file: !3, line: 669, type: !762)
!12681 = distinct !DILexicalBlock(scope: !12673, file: !3, line: 669, column: 4)
!12682 = !DILocation(line: 669, column: 4, scope: !12681)
!12683 = !DILocation(line: 669, column: 4, scope: !12684)
!12684 = distinct !DILexicalBlock(scope: !12681, file: !3, line: 669, column: 4)
!12685 = !DILocation(line: 670, column: 3, scope: !12673)
!12686 = !DILocation(line: 671, column: 8, scope: !12687)
!12687 = distinct !DILexicalBlock(scope: !12669, file: !3, line: 670, column: 10)
!12688 = !DILocation(line: 672, column: 4, scope: !12687)
!12689 = !DILocation(line: 674, column: 2, scope: !12670)
!12690 = !DILocation(line: 676, column: 6, scope: !12691)
!12691 = distinct !DILexicalBlock(scope: !12597, file: !3, line: 676, column: 6)
!12692 = !DILocation(line: 676, column: 35, scope: !12691)
!12693 = !DILocation(line: 676, column: 6, scope: !12597)
!12694 = !DILocation(line: 677, column: 3, scope: !12691)
!12695 = !DILocalVariable(name: "_v", scope: !12696, file: !3, line: 677, type: !762)
!12696 = distinct !DILexicalBlock(scope: !12691, file: !3, line: 677, column: 3)
!12697 = !DILocation(line: 677, column: 3, scope: !12696)
!12698 = !DILocation(line: 677, column: 3, scope: !12699)
!12699 = distinct !DILexicalBlock(scope: !12696, file: !3, line: 677, column: 3)
!12700 = !DILocation(line: 679, column: 8, scope: !12701)
!12701 = distinct !DILexicalBlock(scope: !12597, file: !3, line: 679, column: 8)
!12702 = !DILocation(line: 679, column: 8, scope: !12597)
!12703 = !DILocation(line: 679, column: 6, scope: !12597)
!12704 = !DILocation(line: 680, column: 6, scope: !12705)
!12705 = distinct !DILexicalBlock(scope: !12597, file: !3, line: 680, column: 6)
!12706 = !DILocation(line: 680, column: 6, scope: !12597)
!12707 = !DILocation(line: 681, column: 3, scope: !12705)
!12708 = !DILocation(line: 683, column: 8, scope: !12597)
!12709 = !DILocation(line: 683, column: 6, scope: !12597)
!12710 = !DILocalVariable(name: "___t", scope: !12711, file: !3, line: 684, type: !762)
!12711 = distinct !DILexicalBlock(scope: !12597, file: !3, line: 684, column: 22)
!12712 = !DILocation(line: 684, column: 22, scope: !12711)
!12713 = !DILocation(line: 684, column: 22, scope: !12714)
!12714 = distinct !DILexicalBlock(scope: !12715, file: !3, line: 684, column: 22)
!12715 = distinct !DILexicalBlock(scope: !12711, file: !3, line: 684, column: 22)
!12716 = !DILocation(line: 684, column: 22, scope: !12715)
!12717 = !DILocation(line: 684, column: 2, scope: !12597)
!12718 = !DILocation(line: 684, column: 7, scope: !12597)
!12719 = !DILocation(line: 684, column: 20, scope: !12597)
!12720 = !DILocalVariable(name: "___t", scope: !12721, file: !3, line: 685, type: !762)
!12721 = distinct !DILexicalBlock(scope: !12597, file: !3, line: 685, column: 23)
!12722 = !DILocation(line: 685, column: 23, scope: !12721)
!12723 = !DILocation(line: 685, column: 23, scope: !12724)
!12724 = distinct !DILexicalBlock(scope: !12725, file: !3, line: 685, column: 23)
!12725 = distinct !DILexicalBlock(scope: !12721, file: !3, line: 685, column: 23)
!12726 = !DILocation(line: 685, column: 23, scope: !12725)
!12727 = !DILocation(line: 685, column: 23, scope: !12597)
!12728 = !DILocation(line: 685, column: 2, scope: !12597)
!12729 = !DILocation(line: 685, column: 7, scope: !12597)
!12730 = !DILocation(line: 685, column: 21, scope: !12597)
!12731 = !DILocalVariable(name: "___t", scope: !12732, file: !3, line: 686, type: !762)
!12732 = distinct !DILexicalBlock(scope: !12597, file: !3, line: 686, column: 17)
!12733 = !DILocation(line: 686, column: 17, scope: !12732)
!12734 = !DILocation(line: 686, column: 17, scope: !12735)
!12735 = distinct !DILexicalBlock(scope: !12736, file: !3, line: 686, column: 17)
!12736 = distinct !DILexicalBlock(scope: !12732, file: !3, line: 686, column: 17)
!12737 = !DILocation(line: 686, column: 17, scope: !12736)
!12738 = !DILocation(line: 686, column: 17, scope: !12597)
!12739 = !DILocation(line: 686, column: 2, scope: !12597)
!12740 = !DILocation(line: 686, column: 7, scope: !12597)
!12741 = !DILocation(line: 686, column: 15, scope: !12597)
!12742 = !DILocalVariable(name: "___t", scope: !12743, file: !3, line: 687, type: !762)
!12743 = distinct !DILexicalBlock(scope: !12597, file: !3, line: 687, column: 17)
!12744 = !DILocation(line: 687, column: 17, scope: !12743)
!12745 = !DILocation(line: 687, column: 17, scope: !12746)
!12746 = distinct !DILexicalBlock(scope: !12747, file: !3, line: 687, column: 17)
!12747 = distinct !DILexicalBlock(scope: !12743, file: !3, line: 687, column: 17)
!12748 = !DILocation(line: 687, column: 17, scope: !12747)
!12749 = !DILocation(line: 687, column: 17, scope: !12597)
!12750 = !DILocation(line: 687, column: 2, scope: !12597)
!12751 = !DILocation(line: 687, column: 7, scope: !12597)
!12752 = !DILocation(line: 687, column: 15, scope: !12597)
!12753 = !DILocalVariable(name: "___t", scope: !12754, file: !3, line: 688, type: !762)
!12754 = distinct !DILexicalBlock(scope: !12597, file: !3, line: 688, column: 16)
!12755 = !DILocation(line: 688, column: 16, scope: !12754)
!12756 = !DILocation(line: 688, column: 16, scope: !12757)
!12757 = distinct !DILexicalBlock(scope: !12758, file: !3, line: 688, column: 16)
!12758 = distinct !DILexicalBlock(scope: !12754, file: !3, line: 688, column: 16)
!12759 = !DILocation(line: 688, column: 16, scope: !12758)
!12760 = !DILocation(line: 688, column: 2, scope: !12597)
!12761 = !DILocation(line: 688, column: 7, scope: !12597)
!12762 = !DILocation(line: 688, column: 14, scope: !12597)
!12763 = !DILocalVariable(name: "___t", scope: !12764, file: !3, line: 689, type: !762)
!12764 = distinct !DILexicalBlock(scope: !12597, file: !3, line: 689, column: 20)
!12765 = !DILocation(line: 689, column: 20, scope: !12764)
!12766 = !DILocation(line: 689, column: 20, scope: !12767)
!12767 = distinct !DILexicalBlock(scope: !12768, file: !3, line: 689, column: 20)
!12768 = distinct !DILexicalBlock(scope: !12764, file: !3, line: 689, column: 20)
!12769 = !DILocation(line: 689, column: 20, scope: !12768)
!12770 = !DILocation(line: 689, column: 2, scope: !12597)
!12771 = !DILocation(line: 689, column: 7, scope: !12597)
!12772 = !DILocation(line: 689, column: 18, scope: !12597)
!12773 = !DILocalVariable(name: "___t", scope: !12774, file: !3, line: 691, type: !762)
!12774 = distinct !DILexicalBlock(scope: !12597, file: !3, line: 691, column: 21)
!12775 = !DILocation(line: 691, column: 21, scope: !12774)
!12776 = !DILocation(line: 691, column: 21, scope: !12777)
!12777 = distinct !DILexicalBlock(scope: !12778, file: !3, line: 691, column: 21)
!12778 = distinct !DILexicalBlock(scope: !12774, file: !3, line: 691, column: 21)
!12779 = !DILocation(line: 691, column: 21, scope: !12778)
!12780 = !DILocation(line: 691, column: 2, scope: !12597)
!12781 = !DILocation(line: 691, column: 7, scope: !12597)
!12782 = !DILocation(line: 691, column: 19, scope: !12597)
!12783 = !DILocalVariable(name: "___t", scope: !12784, file: !3, line: 692, type: !762)
!12784 = distinct !DILexicalBlock(scope: !12597, file: !3, line: 692, column: 29)
!12785 = !DILocation(line: 692, column: 29, scope: !12784)
!12786 = !DILocation(line: 692, column: 29, scope: !12787)
!12787 = distinct !DILexicalBlock(scope: !12788, file: !3, line: 692, column: 29)
!12788 = distinct !DILexicalBlock(scope: !12784, file: !3, line: 692, column: 29)
!12789 = !DILocation(line: 692, column: 29, scope: !12788)
!12790 = !DILocation(line: 692, column: 29, scope: !12597)
!12791 = !DILocation(line: 692, column: 2, scope: !12597)
!12792 = !DILocation(line: 692, column: 7, scope: !12597)
!12793 = !DILocation(line: 692, column: 27, scope: !12597)
!12794 = !DILocalVariable(name: "___t", scope: !12795, file: !3, line: 694, type: !391)
!12795 = distinct !DILexicalBlock(scope: !12597, file: !3, line: 694, column: 19)
!12796 = !DILocation(line: 694, column: 19, scope: !12795)
!12797 = !DILocation(line: 694, column: 19, scope: !12798)
!12798 = distinct !DILexicalBlock(scope: !12799, file: !3, line: 694, column: 19)
!12799 = distinct !DILexicalBlock(scope: !12795, file: !3, line: 694, column: 19)
!12800 = !DILocation(line: 694, column: 19, scope: !12799)
!12801 = !DILocation(line: 694, column: 2, scope: !12597)
!12802 = !DILocation(line: 694, column: 7, scope: !12597)
!12803 = !DILocation(line: 694, column: 17, scope: !12597)
!12804 = !DILocalVariable(name: "___t", scope: !12805, file: !3, line: 695, type: !391)
!12805 = distinct !DILexicalBlock(scope: !12597, file: !3, line: 695, column: 19)
!12806 = !DILocation(line: 695, column: 19, scope: !12805)
!12807 = !DILocation(line: 695, column: 19, scope: !12808)
!12808 = distinct !DILexicalBlock(scope: !12809, file: !3, line: 695, column: 19)
!12809 = distinct !DILexicalBlock(scope: !12805, file: !3, line: 695, column: 19)
!12810 = !DILocation(line: 695, column: 19, scope: !12809)
!12811 = !DILocation(line: 695, column: 2, scope: !12597)
!12812 = !DILocation(line: 695, column: 7, scope: !12597)
!12813 = !DILocation(line: 695, column: 17, scope: !12597)
!12814 = !DILocalVariable(name: "___t", scope: !12815, file: !3, line: 696, type: !762)
!12815 = distinct !DILexicalBlock(scope: !12597, file: !3, line: 696, column: 19)
!12816 = !DILocation(line: 696, column: 19, scope: !12815)
!12817 = !DILocation(line: 696, column: 19, scope: !12818)
!12818 = distinct !DILexicalBlock(scope: !12819, file: !3, line: 696, column: 19)
!12819 = distinct !DILexicalBlock(scope: !12815, file: !3, line: 696, column: 19)
!12820 = !DILocation(line: 696, column: 19, scope: !12819)
!12821 = !DILocation(line: 696, column: 2, scope: !12597)
!12822 = !DILocation(line: 696, column: 7, scope: !12597)
!12823 = !DILocation(line: 696, column: 17, scope: !12597)
!12824 = !DILocalVariable(name: "___t", scope: !12825, file: !3, line: 697, type: !762)
!12825 = distinct !DILexicalBlock(scope: !12597, file: !3, line: 697, column: 24)
!12826 = !DILocation(line: 697, column: 24, scope: !12825)
!12827 = !DILocation(line: 697, column: 24, scope: !12828)
!12828 = distinct !DILexicalBlock(scope: !12829, file: !3, line: 697, column: 24)
!12829 = distinct !DILexicalBlock(scope: !12825, file: !3, line: 697, column: 24)
!12830 = !DILocation(line: 697, column: 24, scope: !12829)
!12831 = !DILocation(line: 697, column: 2, scope: !12597)
!12832 = !DILocation(line: 697, column: 7, scope: !12597)
!12833 = !DILocation(line: 697, column: 22, scope: !12597)
!12834 = !DILocalVariable(name: "___t", scope: !12835, file: !3, line: 699, type: !762)
!12835 = distinct !DILexicalBlock(scope: !12597, file: !3, line: 699, column: 19)
!12836 = !DILocation(line: 699, column: 19, scope: !12835)
!12837 = !DILocation(line: 699, column: 19, scope: !12838)
!12838 = distinct !DILexicalBlock(scope: !12839, file: !3, line: 699, column: 19)
!12839 = distinct !DILexicalBlock(scope: !12835, file: !3, line: 699, column: 19)
!12840 = !DILocation(line: 699, column: 19, scope: !12839)
!12841 = !DILocation(line: 699, column: 19, scope: !12597)
!12842 = !DILocation(line: 699, column: 2, scope: !12597)
!12843 = !DILocation(line: 699, column: 7, scope: !12597)
!12844 = !DILocation(line: 699, column: 17, scope: !12597)
!12845 = !DILocalVariable(name: "___t", scope: !12846, file: !3, line: 700, type: !762)
!12846 = distinct !DILexicalBlock(scope: !12597, file: !3, line: 700, column: 24)
!12847 = !DILocation(line: 700, column: 24, scope: !12846)
!12848 = !DILocation(line: 700, column: 24, scope: !12849)
!12849 = distinct !DILexicalBlock(scope: !12850, file: !3, line: 700, column: 24)
!12850 = distinct !DILexicalBlock(scope: !12846, file: !3, line: 700, column: 24)
!12851 = !DILocation(line: 700, column: 24, scope: !12850)
!12852 = !DILocation(line: 700, column: 24, scope: !12597)
!12853 = !DILocation(line: 700, column: 2, scope: !12597)
!12854 = !DILocation(line: 700, column: 7, scope: !12597)
!12855 = !DILocation(line: 700, column: 22, scope: !12597)
!12856 = !DILocalVariable(name: "___t", scope: !12857, file: !3, line: 702, type: !762)
!12857 = distinct !DILexicalBlock(scope: !12597, file: !3, line: 702, column: 13)
!12858 = !DILocation(line: 702, column: 13, scope: !12857)
!12859 = !DILocation(line: 702, column: 13, scope: !12860)
!12860 = distinct !DILexicalBlock(scope: !12861, file: !3, line: 702, column: 13)
!12861 = distinct !DILexicalBlock(scope: !12857, file: !3, line: 702, column: 13)
!12862 = !DILocation(line: 702, column: 13, scope: !12861)
!12863 = !DILocation(line: 702, column: 13, scope: !12597)
!12864 = !DILocation(line: 702, column: 2, scope: !12597)
!12865 = !DILocation(line: 702, column: 7, scope: !12597)
!12866 = !DILocation(line: 702, column: 11, scope: !12597)
!12867 = !DILocalVariable(name: "___t", scope: !12868, file: !3, line: 703, type: !762)
!12868 = distinct !DILexicalBlock(scope: !12597, file: !3, line: 703, column: 25)
!12869 = !DILocation(line: 703, column: 25, scope: !12868)
!12870 = !DILocation(line: 703, column: 25, scope: !12871)
!12871 = distinct !DILexicalBlock(scope: !12872, file: !3, line: 703, column: 25)
!12872 = distinct !DILexicalBlock(scope: !12868, file: !3, line: 703, column: 25)
!12873 = !DILocation(line: 703, column: 25, scope: !12872)
!12874 = !DILocation(line: 703, column: 25, scope: !12597)
!12875 = !DILocation(line: 703, column: 2, scope: !12597)
!12876 = !DILocation(line: 703, column: 7, scope: !12597)
!12877 = !DILocation(line: 703, column: 23, scope: !12597)
!12878 = !DILocalVariable(name: "___t", scope: !12879, file: !3, line: 705, type: !762)
!12879 = distinct !DILexicalBlock(scope: !12597, file: !3, line: 705, column: 13)
!12880 = !DILocation(line: 705, column: 13, scope: !12879)
!12881 = !DILocation(line: 705, column: 13, scope: !12882)
!12882 = distinct !DILexicalBlock(scope: !12883, file: !3, line: 705, column: 13)
!12883 = distinct !DILexicalBlock(scope: !12879, file: !3, line: 705, column: 13)
!12884 = !DILocation(line: 705, column: 13, scope: !12883)
!12885 = !DILocation(line: 705, column: 13, scope: !12597)
!12886 = !DILocation(line: 705, column: 2, scope: !12597)
!12887 = !DILocation(line: 705, column: 7, scope: !12597)
!12888 = !DILocation(line: 705, column: 11, scope: !12597)
!12889 = !DILocalVariable(name: "___t", scope: !12890, file: !3, line: 706, type: !762)
!12890 = distinct !DILexicalBlock(scope: !12597, file: !3, line: 706, column: 24)
!12891 = !DILocation(line: 706, column: 24, scope: !12890)
!12892 = !DILocation(line: 706, column: 24, scope: !12893)
!12893 = distinct !DILexicalBlock(scope: !12894, file: !3, line: 706, column: 24)
!12894 = distinct !DILexicalBlock(scope: !12890, file: !3, line: 706, column: 24)
!12895 = !DILocation(line: 706, column: 24, scope: !12894)
!12896 = !DILocation(line: 706, column: 24, scope: !12597)
!12897 = !DILocation(line: 706, column: 2, scope: !12597)
!12898 = !DILocation(line: 706, column: 7, scope: !12597)
!12899 = !DILocation(line: 706, column: 22, scope: !12597)
!12900 = !DILocalVariable(name: "___t", scope: !12901, file: !3, line: 708, type: !762)
!12901 = distinct !DILexicalBlock(scope: !12597, file: !3, line: 708, column: 16)
!12902 = !DILocation(line: 708, column: 16, scope: !12901)
!12903 = !DILocation(line: 708, column: 16, scope: !12904)
!12904 = distinct !DILexicalBlock(scope: !12905, file: !3, line: 708, column: 16)
!12905 = distinct !DILexicalBlock(scope: !12901, file: !3, line: 708, column: 16)
!12906 = !DILocation(line: 708, column: 16, scope: !12905)
!12907 = !DILocation(line: 708, column: 16, scope: !12597)
!12908 = !DILocation(line: 708, column: 2, scope: !12597)
!12909 = !DILocation(line: 708, column: 7, scope: !12597)
!12910 = !DILocation(line: 708, column: 14, scope: !12597)
!12911 = !DILocalVariable(name: "___t", scope: !12912, file: !3, line: 709, type: !762)
!12912 = distinct !DILexicalBlock(scope: !12597, file: !3, line: 709, column: 15)
!12913 = !DILocation(line: 709, column: 15, scope: !12912)
!12914 = !DILocation(line: 709, column: 15, scope: !12915)
!12915 = distinct !DILexicalBlock(scope: !12916, file: !3, line: 709, column: 15)
!12916 = distinct !DILexicalBlock(scope: !12912, file: !3, line: 709, column: 15)
!12917 = !DILocation(line: 709, column: 15, scope: !12916)
!12918 = !DILocation(line: 709, column: 15, scope: !12597)
!12919 = !DILocation(line: 709, column: 2, scope: !12597)
!12920 = !DILocation(line: 709, column: 7, scope: !12597)
!12921 = !DILocation(line: 709, column: 13, scope: !12597)
!12922 = !DILocalVariable(name: "___t", scope: !12923, file: !3, line: 710, type: !762)
!12923 = distinct !DILexicalBlock(scope: !12597, file: !3, line: 710, column: 32)
!12924 = !DILocation(line: 710, column: 32, scope: !12923)
!12925 = !DILocation(line: 710, column: 32, scope: !12926)
!12926 = distinct !DILexicalBlock(scope: !12927, file: !3, line: 710, column: 32)
!12927 = distinct !DILexicalBlock(scope: !12923, file: !3, line: 710, column: 32)
!12928 = !DILocation(line: 710, column: 32, scope: !12927)
!12929 = !DILocation(line: 710, column: 32, scope: !12597)
!12930 = !DILocation(line: 710, column: 2, scope: !12597)
!12931 = !DILocation(line: 710, column: 7, scope: !12597)
!12932 = !DILocation(line: 710, column: 30, scope: !12597)
!12933 = !DILocalVariable(name: "___t", scope: !12934, file: !3, line: 712, type: !762)
!12934 = distinct !DILexicalBlock(scope: !12597, file: !3, line: 712, column: 32)
!12935 = !DILocation(line: 712, column: 32, scope: !12934)
!12936 = !DILocation(line: 712, column: 32, scope: !12937)
!12937 = distinct !DILexicalBlock(scope: !12938, file: !3, line: 712, column: 32)
!12938 = distinct !DILexicalBlock(scope: !12934, file: !3, line: 712, column: 32)
!12939 = !DILocation(line: 712, column: 32, scope: !12938)
!12940 = !DILocation(line: 712, column: 32, scope: !12597)
!12941 = !DILocation(line: 712, column: 2, scope: !12597)
!12942 = !DILocation(line: 712, column: 7, scope: !12597)
!12943 = !DILocation(line: 712, column: 30, scope: !12597)
!12944 = !DILocalVariable(name: "___t", scope: !12945, file: !3, line: 714, type: !762)
!12945 = distinct !DILexicalBlock(scope: !12597, file: !3, line: 714, column: 22)
!12946 = !DILocation(line: 714, column: 22, scope: !12945)
!12947 = !DILocation(line: 714, column: 22, scope: !12948)
!12948 = distinct !DILexicalBlock(scope: !12949, file: !3, line: 714, column: 22)
!12949 = distinct !DILexicalBlock(scope: !12945, file: !3, line: 714, column: 22)
!12950 = !DILocation(line: 714, column: 22, scope: !12949)
!12951 = !DILocation(line: 714, column: 22, scope: !12597)
!12952 = !DILocation(line: 714, column: 2, scope: !12597)
!12953 = !DILocation(line: 714, column: 7, scope: !12597)
!12954 = !DILocation(line: 714, column: 20, scope: !12597)
!12955 = !DILocalVariable(name: "___t", scope: !12956, file: !3, line: 715, type: !391)
!12956 = distinct !DILexicalBlock(scope: !12597, file: !3, line: 715, column: 24)
!12957 = !DILocation(line: 715, column: 24, scope: !12956)
!12958 = !DILocation(line: 715, column: 24, scope: !12959)
!12959 = distinct !DILexicalBlock(scope: !12960, file: !3, line: 715, column: 24)
!12960 = distinct !DILexicalBlock(scope: !12956, file: !3, line: 715, column: 24)
!12961 = !DILocation(line: 715, column: 24, scope: !12960)
!12962 = !DILocation(line: 715, column: 2, scope: !12597)
!12963 = !DILocation(line: 715, column: 7, scope: !12597)
!12964 = !DILocation(line: 715, column: 22, scope: !12597)
!12965 = !DILabel(scope: !12597, name: "ex", file: !3, line: 718)
!12966 = !DILocation(line: 718, column: 1, scope: !12597)
!12967 = !DILocation(line: 719, column: 8, scope: !12597)
!12968 = !DILocation(line: 719, column: 2, scope: !12597)
!12969 = !DILocation(line: 720, column: 9, scope: !12597)
!12970 = !DILocation(line: 720, column: 2, scope: !12597)
!12971 = !DILocation(line: 721, column: 1, scope: !12597)
!12972 = distinct !DISubprogram(name: "mlx5_query_hca_vport_system_image_guid", scope: !3, file: !3, line: 724, type: !12067, scopeLine: 726, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !798)
!12973 = !DILocalVariable(name: "dev", arg: 1, scope: !12972, file: !3, line: 724, type: !10073)
!12974 = !DILocation(line: 724, column: 66, scope: !12972)
!12975 = !DILocalVariable(name: "sys_image_guid", arg: 2, scope: !12972, file: !3, line: 725, type: !3475)
!12976 = !DILocation(line: 725, column: 14, scope: !12972)
!12977 = !DILocalVariable(name: "rep", scope: !12972, file: !3, line: 727, type: !12600)
!12978 = !DILocation(line: 727, column: 33, scope: !12972)
!12979 = !DILocalVariable(name: "err", scope: !12972, file: !3, line: 728, type: !37)
!12980 = !DILocation(line: 728, column: 6, scope: !12972)
!12981 = !DILocation(line: 730, column: 8, scope: !12972)
!12982 = !DILocation(line: 730, column: 6, scope: !12972)
!12983 = !DILocation(line: 731, column: 7, scope: !12984)
!12984 = distinct !DILexicalBlock(scope: !12972, file: !3, line: 731, column: 6)
!12985 = !DILocation(line: 731, column: 6, scope: !12972)
!12986 = !DILocation(line: 732, column: 3, scope: !12984)
!12987 = !DILocation(line: 734, column: 37, scope: !12972)
!12988 = !DILocation(line: 734, column: 51, scope: !12972)
!12989 = !DILocation(line: 734, column: 8, scope: !12972)
!12990 = !DILocation(line: 734, column: 6, scope: !12972)
!12991 = !DILocation(line: 735, column: 7, scope: !12992)
!12992 = distinct !DILexicalBlock(scope: !12972, file: !3, line: 735, column: 6)
!12993 = !DILocation(line: 735, column: 6, scope: !12972)
!12994 = !DILocation(line: 736, column: 21, scope: !12992)
!12995 = !DILocation(line: 736, column: 26, scope: !12992)
!12996 = !DILocation(line: 736, column: 4, scope: !12992)
!12997 = !DILocation(line: 736, column: 19, scope: !12992)
!12998 = !DILocation(line: 736, column: 3, scope: !12992)
!12999 = !DILocation(line: 738, column: 8, scope: !12972)
!13000 = !DILocation(line: 738, column: 2, scope: !12972)
!13001 = !DILocation(line: 739, column: 9, scope: !12972)
!13002 = !DILocation(line: 739, column: 2, scope: !12972)
!13003 = !DILocation(line: 740, column: 1, scope: !12972)
!13004 = distinct !DISubprogram(name: "mlx5_query_hca_vport_node_guid", scope: !3, file: !3, line: 743, type: !12067, scopeLine: 745, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !798)
!13005 = !DILocalVariable(name: "dev", arg: 1, scope: !13004, file: !3, line: 743, type: !10073)
!13006 = !DILocation(line: 743, column: 58, scope: !13004)
!13007 = !DILocalVariable(name: "node_guid", arg: 2, scope: !13004, file: !3, line: 744, type: !3475)
!13008 = !DILocation(line: 744, column: 13, scope: !13004)
!13009 = !DILocalVariable(name: "rep", scope: !13004, file: !3, line: 746, type: !12600)
!13010 = !DILocation(line: 746, column: 33, scope: !13004)
!13011 = !DILocalVariable(name: "err", scope: !13004, file: !3, line: 747, type: !37)
!13012 = !DILocation(line: 747, column: 6, scope: !13004)
!13013 = !DILocation(line: 749, column: 8, scope: !13004)
!13014 = !DILocation(line: 749, column: 6, scope: !13004)
!13015 = !DILocation(line: 750, column: 7, scope: !13016)
!13016 = distinct !DILexicalBlock(scope: !13004, file: !3, line: 750, column: 6)
!13017 = !DILocation(line: 750, column: 6, scope: !13004)
!13018 = !DILocation(line: 751, column: 3, scope: !13016)
!13019 = !DILocation(line: 753, column: 37, scope: !13004)
!13020 = !DILocation(line: 753, column: 51, scope: !13004)
!13021 = !DILocation(line: 753, column: 8, scope: !13004)
!13022 = !DILocation(line: 753, column: 6, scope: !13004)
!13023 = !DILocation(line: 754, column: 7, scope: !13024)
!13024 = distinct !DILexicalBlock(scope: !13004, file: !3, line: 754, column: 6)
!13025 = !DILocation(line: 754, column: 6, scope: !13004)
!13026 = !DILocation(line: 755, column: 16, scope: !13024)
!13027 = !DILocation(line: 755, column: 21, scope: !13024)
!13028 = !DILocation(line: 755, column: 4, scope: !13024)
!13029 = !DILocation(line: 755, column: 14, scope: !13024)
!13030 = !DILocation(line: 755, column: 3, scope: !13024)
!13031 = !DILocation(line: 757, column: 8, scope: !13004)
!13032 = !DILocation(line: 757, column: 2, scope: !13004)
!13033 = !DILocation(line: 758, column: 9, scope: !13004)
!13034 = !DILocation(line: 758, column: 2, scope: !13004)
!13035 = !DILocation(line: 759, column: 1, scope: !13004)
!13036 = distinct !DISubprogram(name: "mlx5_query_nic_vport_promisc", scope: !3, file: !3, line: 762, type: !13037, scopeLine: 767, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !798)
!13037 = !DISubroutineType(types: !13038)
!13038 = !{!37, !10073, !1092, !594, !594, !594}
!13039 = !DILocalVariable(name: "mdev", arg: 1, scope: !13036, file: !3, line: 762, type: !10073)
!13040 = !DILocation(line: 762, column: 56, scope: !13036)
!13041 = !DILocalVariable(name: "vport", arg: 2, scope: !13036, file: !3, line: 763, type: !1092)
!13042 = !DILocation(line: 763, column: 10, scope: !13036)
!13043 = !DILocalVariable(name: "promisc_uc", arg: 3, scope: !13036, file: !3, line: 764, type: !594)
!13044 = !DILocation(line: 764, column: 11, scope: !13036)
!13045 = !DILocalVariable(name: "promisc_mc", arg: 4, scope: !13036, file: !3, line: 765, type: !594)
!13046 = !DILocation(line: 765, column: 11, scope: !13036)
!13047 = !DILocalVariable(name: "promisc_all", arg: 5, scope: !13036, file: !3, line: 766, type: !594)
!13048 = !DILocation(line: 766, column: 11, scope: !13036)
!13049 = !DILocalVariable(name: "out", scope: !13036, file: !3, line: 768, type: !1514)
!13050 = !DILocation(line: 768, column: 7, scope: !13036)
!13051 = !DILocalVariable(name: "outlen", scope: !13036, file: !3, line: 769, type: !37)
!13052 = !DILocation(line: 769, column: 6, scope: !13036)
!13053 = !DILocalVariable(name: "err", scope: !13036, file: !3, line: 770, type: !37)
!13054 = !DILocation(line: 770, column: 6, scope: !13036)
!13055 = !DILocation(line: 772, column: 16, scope: !13036)
!13056 = !DILocation(line: 772, column: 8, scope: !13036)
!13057 = !DILocation(line: 772, column: 6, scope: !13036)
!13058 = !DILocation(line: 773, column: 7, scope: !13059)
!13059 = distinct !DILexicalBlock(scope: !13036, file: !3, line: 773, column: 6)
!13060 = !DILocation(line: 773, column: 6, scope: !13036)
!13061 = !DILocation(line: 774, column: 3, scope: !13059)
!13062 = !DILocation(line: 776, column: 37, scope: !13036)
!13063 = !DILocation(line: 776, column: 43, scope: !13036)
!13064 = !DILocation(line: 776, column: 50, scope: !13036)
!13065 = !DILocation(line: 776, column: 8, scope: !13036)
!13066 = !DILocation(line: 776, column: 6, scope: !13036)
!13067 = !DILocation(line: 777, column: 6, scope: !13068)
!13068 = distinct !DILexicalBlock(scope: !13036, file: !3, line: 777, column: 6)
!13069 = !DILocation(line: 777, column: 6, scope: !13036)
!13070 = !DILocation(line: 778, column: 3, scope: !13068)
!13071 = !DILocation(line: 780, column: 16, scope: !13036)
!13072 = !DILocation(line: 780, column: 3, scope: !13036)
!13073 = !DILocation(line: 780, column: 14, scope: !13036)
!13074 = !DILocation(line: 782, column: 16, scope: !13036)
!13075 = !DILocation(line: 782, column: 3, scope: !13036)
!13076 = !DILocation(line: 782, column: 14, scope: !13036)
!13077 = !DILocation(line: 784, column: 17, scope: !13036)
!13078 = !DILocation(line: 784, column: 3, scope: !13036)
!13079 = !DILocation(line: 784, column: 15, scope: !13036)
!13080 = !DILocation(line: 784, column: 2, scope: !13036)
!13081 = !DILabel(scope: !13036, name: "out", file: !3, line: 787)
!13082 = !DILocation(line: 787, column: 1, scope: !13036)
!13083 = !DILocation(line: 788, column: 8, scope: !13036)
!13084 = !DILocation(line: 788, column: 2, scope: !13036)
!13085 = !DILocation(line: 789, column: 9, scope: !13036)
!13086 = !DILocation(line: 789, column: 2, scope: !13036)
!13087 = !DILocation(line: 790, column: 1, scope: !13036)
!13088 = distinct !DISubprogram(name: "mlx5_modify_nic_vport_promisc", scope: !3, file: !3, line: 793, type: !13089, scopeLine: 797, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !798)
!13089 = !DISubroutineType(types: !13090)
!13090 = !{!37, !10073, !37, !37, !37}
!13091 = !DILocalVariable(name: "mdev", arg: 1, scope: !13088, file: !3, line: 793, type: !10073)
!13092 = !DILocation(line: 793, column: 57, scope: !13088)
!13093 = !DILocalVariable(name: "promisc_uc", arg: 2, scope: !13088, file: !3, line: 794, type: !37)
!13094 = !DILocation(line: 794, column: 11, scope: !13088)
!13095 = !DILocalVariable(name: "promisc_mc", arg: 3, scope: !13088, file: !3, line: 795, type: !37)
!13096 = !DILocation(line: 795, column: 11, scope: !13088)
!13097 = !DILocalVariable(name: "promisc_all", arg: 4, scope: !13088, file: !3, line: 796, type: !37)
!13098 = !DILocation(line: 796, column: 11, scope: !13088)
!13099 = !DILocalVariable(name: "in", scope: !13088, file: !3, line: 798, type: !625)
!13100 = !DILocation(line: 798, column: 8, scope: !13088)
!13101 = !DILocalVariable(name: "inlen", scope: !13088, file: !3, line: 799, type: !37)
!13102 = !DILocation(line: 799, column: 6, scope: !13088)
!13103 = !DILocalVariable(name: "err", scope: !13088, file: !3, line: 800, type: !37)
!13104 = !DILocation(line: 800, column: 6, scope: !13088)
!13105 = !DILocation(line: 802, column: 16, scope: !13088)
!13106 = !DILocation(line: 802, column: 7, scope: !13088)
!13107 = !DILocation(line: 802, column: 5, scope: !13088)
!13108 = !DILocation(line: 803, column: 7, scope: !13109)
!13109 = distinct !DILexicalBlock(scope: !13088, file: !3, line: 803, column: 6)
!13110 = !DILocation(line: 803, column: 6, scope: !13088)
!13111 = !DILocation(line: 804, column: 3, scope: !13109)
!13112 = !DILocation(line: 806, column: 2, scope: !13088)
!13113 = !DILocalVariable(name: "_v", scope: !13114, file: !3, line: 806, type: !762)
!13114 = distinct !DILexicalBlock(scope: !13088, file: !3, line: 806, column: 2)
!13115 = !DILocation(line: 806, column: 2, scope: !13114)
!13116 = !DILocation(line: 806, column: 2, scope: !13117)
!13117 = distinct !DILexicalBlock(scope: !13114, file: !3, line: 806, column: 2)
!13118 = !DILocation(line: 807, column: 2, scope: !13088)
!13119 = !DILocalVariable(name: "_v", scope: !13120, file: !3, line: 807, type: !762)
!13120 = distinct !DILexicalBlock(scope: !13088, file: !3, line: 807, column: 2)
!13121 = !DILocation(line: 807, column: 2, scope: !13120)
!13122 = !DILocation(line: 807, column: 2, scope: !13123)
!13123 = distinct !DILexicalBlock(scope: !13120, file: !3, line: 807, column: 2)
!13124 = !DILocation(line: 809, column: 2, scope: !13088)
!13125 = !DILocalVariable(name: "_v", scope: !13126, file: !3, line: 809, type: !762)
!13126 = distinct !DILexicalBlock(scope: !13088, file: !3, line: 809, column: 2)
!13127 = !DILocation(line: 809, column: 2, scope: !13126)
!13128 = !DILocation(line: 809, column: 2, scope: !13129)
!13129 = distinct !DILexicalBlock(scope: !13126, file: !3, line: 809, column: 2)
!13130 = !DILocation(line: 811, column: 2, scope: !13088)
!13131 = !DILocalVariable(name: "_v", scope: !13132, file: !3, line: 811, type: !762)
!13132 = distinct !DILexicalBlock(scope: !13088, file: !3, line: 811, column: 2)
!13133 = !DILocation(line: 811, column: 2, scope: !13132)
!13134 = !DILocation(line: 811, column: 2, scope: !13135)
!13135 = distinct !DILexicalBlock(scope: !13132, file: !3, line: 811, column: 2)
!13136 = !DILocation(line: 813, column: 2, scope: !13088)
!13137 = !DILocalVariable(name: "_v", scope: !13138, file: !3, line: 813, type: !762)
!13138 = distinct !DILexicalBlock(scope: !13088, file: !3, line: 813, column: 2)
!13139 = !DILocation(line: 813, column: 2, scope: !13138)
!13140 = !DILocation(line: 813, column: 2, scope: !13141)
!13141 = distinct !DILexicalBlock(scope: !13138, file: !3, line: 813, column: 2)
!13142 = !DILocalVariable(name: "_out", scope: !13143, file: !3, line: 816, type: !10940)
!13143 = distinct !DILexicalBlock(scope: !13088, file: !3, line: 816, column: 8)
!13144 = !DILocation(line: 816, column: 8, scope: !13143)
!13145 = !DILocation(line: 816, column: 8, scope: !13146)
!13146 = distinct !DILexicalBlock(scope: !13143, file: !3, line: 816, column: 8)
!13147 = !DILocation(line: 816, column: 6, scope: !13088)
!13148 = !DILocation(line: 818, column: 9, scope: !13088)
!13149 = !DILocation(line: 818, column: 2, scope: !13088)
!13150 = !DILocation(line: 820, column: 9, scope: !13088)
!13151 = !DILocation(line: 820, column: 2, scope: !13088)
!13152 = !DILocation(line: 821, column: 1, scope: !13088)
!13153 = distinct !DISubprogram(name: "mlx5_nic_vport_update_local_lb", scope: !3, file: !3, line: 829, type: !13154, scopeLine: 830, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !798)
!13154 = !DISubroutineType(types: !13155)
!13155 = !{!37, !10073, !595}
!13156 = !DILocalVariable(name: "mdev", arg: 1, scope: !13153, file: !3, line: 829, type: !10073)
!13157 = !DILocation(line: 829, column: 58, scope: !13153)
!13158 = !DILocalVariable(name: "enable", arg: 2, scope: !13153, file: !3, line: 829, type: !595)
!13159 = !DILocation(line: 829, column: 69, scope: !13153)
!13160 = !DILocalVariable(name: "inlen", scope: !13153, file: !3, line: 831, type: !37)
!13161 = !DILocation(line: 831, column: 6, scope: !13153)
!13162 = !DILocalVariable(name: "in", scope: !13153, file: !3, line: 832, type: !625)
!13163 = !DILocation(line: 832, column: 8, scope: !13153)
!13164 = !DILocalVariable(name: "err", scope: !13153, file: !3, line: 833, type: !37)
!13165 = !DILocation(line: 833, column: 6, scope: !13153)
!13166 = !DILocation(line: 835, column: 7, scope: !13167)
!13167 = distinct !DILexicalBlock(scope: !13153, file: !3, line: 835, column: 6)
!13168 = !DILocation(line: 835, column: 47, scope: !13167)
!13169 = !DILocation(line: 836, column: 7, scope: !13167)
!13170 = !DILocation(line: 835, column: 6, scope: !13153)
!13171 = !DILocation(line: 837, column: 3, scope: !13167)
!13172 = !DILocation(line: 839, column: 16, scope: !13153)
!13173 = !DILocation(line: 839, column: 7, scope: !13153)
!13174 = !DILocation(line: 839, column: 5, scope: !13153)
!13175 = !DILocation(line: 840, column: 7, scope: !13176)
!13176 = distinct !DILexicalBlock(scope: !13153, file: !3, line: 840, column: 6)
!13177 = !DILocation(line: 840, column: 6, scope: !13153)
!13178 = !DILocation(line: 841, column: 3, scope: !13176)
!13179 = !DILocation(line: 843, column: 2, scope: !13153)
!13180 = !DILocalVariable(name: "_v", scope: !13181, file: !3, line: 843, type: !762)
!13181 = distinct !DILexicalBlock(scope: !13153, file: !3, line: 843, column: 2)
!13182 = !DILocation(line: 843, column: 2, scope: !13181)
!13183 = !DILocation(line: 843, column: 2, scope: !13184)
!13184 = distinct !DILexicalBlock(scope: !13181, file: !3, line: 843, column: 2)
!13185 = !DILocation(line: 845, column: 2, scope: !13153)
!13186 = !DILocalVariable(name: "_v", scope: !13187, file: !3, line: 845, type: !762)
!13187 = distinct !DILexicalBlock(scope: !13153, file: !3, line: 845, column: 2)
!13188 = !DILocation(line: 845, column: 2, scope: !13187)
!13189 = !DILocation(line: 845, column: 2, scope: !13190)
!13190 = distinct !DILexicalBlock(scope: !13187, file: !3, line: 845, column: 2)
!13191 = !DILocation(line: 848, column: 6, scope: !13192)
!13192 = distinct !DILexicalBlock(scope: !13153, file: !3, line: 848, column: 6)
!13193 = !DILocation(line: 848, column: 6, scope: !13153)
!13194 = !DILocation(line: 849, column: 3, scope: !13192)
!13195 = !DILocalVariable(name: "_v", scope: !13196, file: !3, line: 849, type: !762)
!13196 = distinct !DILexicalBlock(scope: !13192, file: !3, line: 849, column: 3)
!13197 = !DILocation(line: 849, column: 3, scope: !13196)
!13198 = !DILocation(line: 849, column: 3, scope: !13199)
!13199 = distinct !DILexicalBlock(scope: !13196, file: !3, line: 849, column: 3)
!13200 = !DILocation(line: 852, column: 6, scope: !13201)
!13201 = distinct !DILexicalBlock(scope: !13153, file: !3, line: 852, column: 6)
!13202 = !DILocation(line: 852, column: 6, scope: !13153)
!13203 = !DILocation(line: 853, column: 3, scope: !13201)
!13204 = !DILocalVariable(name: "_v", scope: !13205, file: !3, line: 853, type: !762)
!13205 = distinct !DILexicalBlock(scope: !13201, file: !3, line: 853, column: 3)
!13206 = !DILocation(line: 853, column: 3, scope: !13205)
!13207 = !DILocation(line: 853, column: 3, scope: !13208)
!13208 = distinct !DILexicalBlock(scope: !13205, file: !3, line: 853, column: 3)
!13209 = !DILocation(line: 855, column: 2, scope: !13153)
!13210 = !DILocalVariable(name: "_v", scope: !13211, file: !3, line: 855, type: !762)
!13211 = distinct !DILexicalBlock(scope: !13153, file: !3, line: 855, column: 2)
!13212 = !DILocation(line: 855, column: 2, scope: !13211)
!13213 = !DILocation(line: 855, column: 2, scope: !13214)
!13214 = distinct !DILexicalBlock(scope: !13211, file: !3, line: 855, column: 2)
!13215 = !DILocalVariable(name: "_out", scope: !13216, file: !3, line: 858, type: !10940)
!13216 = distinct !DILexicalBlock(scope: !13153, file: !3, line: 858, column: 8)
!13217 = !DILocation(line: 858, column: 8, scope: !13216)
!13218 = !DILocation(line: 858, column: 8, scope: !13219)
!13219 = distinct !DILexicalBlock(scope: !13216, file: !3, line: 858, column: 8)
!13220 = !DILocation(line: 858, column: 6, scope: !13153)
!13221 = !DILocation(line: 860, column: 7, scope: !13222)
!13222 = distinct !DILexicalBlock(scope: !13153, file: !3, line: 860, column: 6)
!13223 = !DILocation(line: 860, column: 6, scope: !13153)
!13224 = !DILocation(line: 861, column: 3, scope: !13222)
!13225 = !DILocation(line: 864, column: 9, scope: !13153)
!13226 = !DILocation(line: 864, column: 2, scope: !13153)
!13227 = !DILocation(line: 865, column: 9, scope: !13153)
!13228 = !DILocation(line: 865, column: 2, scope: !13153)
!13229 = !DILocation(line: 866, column: 1, scope: !13153)
!13230 = distinct !DISubprogram(name: "mlx5_nic_vport_query_local_lb", scope: !3, file: !3, line: 869, type: !13231, scopeLine: 870, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !798)
!13231 = !DISubroutineType(types: !13232)
!13232 = !{!37, !10073, !6844}
!13233 = !DILocalVariable(name: "mdev", arg: 1, scope: !13230, file: !3, line: 869, type: !10073)
!13234 = !DILocation(line: 869, column: 57, scope: !13230)
!13235 = !DILocalVariable(name: "status", arg: 2, scope: !13230, file: !3, line: 869, type: !6844)
!13236 = !DILocation(line: 869, column: 69, scope: !13230)
!13237 = !DILocalVariable(name: "outlen", scope: !13230, file: !3, line: 871, type: !37)
!13238 = !DILocation(line: 871, column: 6, scope: !13230)
!13239 = !DILocalVariable(name: "out", scope: !13230, file: !3, line: 872, type: !1514)
!13240 = !DILocation(line: 872, column: 7, scope: !13230)
!13241 = !DILocalVariable(name: "value", scope: !13230, file: !3, line: 873, type: !37)
!13242 = !DILocation(line: 873, column: 6, scope: !13230)
!13243 = !DILocalVariable(name: "err", scope: !13230, file: !3, line: 874, type: !37)
!13244 = !DILocation(line: 874, column: 6, scope: !13230)
!13245 = !DILocation(line: 876, column: 16, scope: !13230)
!13246 = !DILocation(line: 876, column: 8, scope: !13230)
!13247 = !DILocation(line: 876, column: 6, scope: !13230)
!13248 = !DILocation(line: 877, column: 7, scope: !13249)
!13249 = distinct !DILexicalBlock(scope: !13230, file: !3, line: 877, column: 6)
!13250 = !DILocation(line: 877, column: 6, scope: !13230)
!13251 = !DILocation(line: 878, column: 3, scope: !13249)
!13252 = !DILocation(line: 880, column: 37, scope: !13230)
!13253 = !DILocation(line: 880, column: 46, scope: !13230)
!13254 = !DILocation(line: 880, column: 8, scope: !13230)
!13255 = !DILocation(line: 880, column: 6, scope: !13230)
!13256 = !DILocation(line: 881, column: 6, scope: !13257)
!13257 = distinct !DILexicalBlock(scope: !13230, file: !3, line: 881, column: 6)
!13258 = !DILocation(line: 881, column: 6, scope: !13230)
!13259 = !DILocation(line: 882, column: 3, scope: !13257)
!13260 = !DILocation(line: 884, column: 10, scope: !13230)
!13261 = !DILocation(line: 885, column: 44, scope: !13230)
!13262 = !DILocation(line: 884, column: 8, scope: !13230)
!13263 = !DILocation(line: 887, column: 11, scope: !13230)
!13264 = !DILocation(line: 888, column: 45, scope: !13230)
!13265 = !DILocation(line: 887, column: 8, scope: !13230)
!13266 = !DILocation(line: 890, column: 13, scope: !13230)
!13267 = !DILocation(line: 890, column: 12, scope: !13230)
!13268 = !DILocation(line: 890, column: 3, scope: !13230)
!13269 = !DILocation(line: 890, column: 10, scope: !13230)
!13270 = !DILocation(line: 890, column: 2, scope: !13230)
!13271 = !DILabel(scope: !13230, name: "out", file: !3, line: 892)
!13272 = !DILocation(line: 892, column: 1, scope: !13230)
!13273 = !DILocation(line: 893, column: 8, scope: !13230)
!13274 = !DILocation(line: 893, column: 2, scope: !13230)
!13275 = !DILocation(line: 894, column: 9, scope: !13230)
!13276 = !DILocation(line: 894, column: 2, scope: !13230)
!13277 = !DILocation(line: 895, column: 1, scope: !13230)
!13278 = distinct !DISubprogram(name: "mlx5_nic_vport_enable_roce", scope: !3, file: !3, line: 927, type: !13279, scopeLine: 928, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !798)
!13279 = !DISubroutineType(types: !13280)
!13280 = !{!37, !10073}
!13281 = !DILocalVariable(name: "mdev", arg: 1, scope: !13278, file: !3, line: 927, type: !10073)
!13282 = !DILocation(line: 927, column: 54, scope: !13278)
!13283 = !DILocalVariable(name: "err", scope: !13278, file: !3, line: 929, type: !37)
!13284 = !DILocation(line: 929, column: 6, scope: !13278)
!13285 = !DILocation(line: 931, column: 2, scope: !13278)
!13286 = !DILocation(line: 932, column: 7, scope: !13287)
!13287 = distinct !DILexicalBlock(scope: !13278, file: !3, line: 932, column: 6)
!13288 = !DILocation(line: 932, column: 13, scope: !13287)
!13289 = !DILocation(line: 932, column: 18, scope: !13287)
!13290 = !DILocation(line: 932, column: 6, scope: !13278)
!13291 = !DILocation(line: 933, column: 42, scope: !13287)
!13292 = !DILocation(line: 933, column: 9, scope: !13287)
!13293 = !DILocation(line: 933, column: 7, scope: !13287)
!13294 = !DILocation(line: 933, column: 3, scope: !13287)
!13295 = !DILocation(line: 935, column: 7, scope: !13296)
!13296 = distinct !DILexicalBlock(scope: !13278, file: !3, line: 935, column: 6)
!13297 = !DILocation(line: 935, column: 6, scope: !13278)
!13298 = !DILocation(line: 936, column: 3, scope: !13296)
!13299 = !DILocation(line: 936, column: 9, scope: !13296)
!13300 = !DILocation(line: 936, column: 14, scope: !13296)
!13301 = !DILocation(line: 936, column: 21, scope: !13296)
!13302 = !DILocation(line: 937, column: 2, scope: !13278)
!13303 = !DILocation(line: 939, column: 9, scope: !13278)
!13304 = !DILocation(line: 939, column: 2, scope: !13278)
!13305 = distinct !DISubprogram(name: "mlx5_nic_vport_update_roce_state", scope: !3, file: !3, line: 903, type: !13306, scopeLine: 905, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !798)
!13306 = !DISubroutineType(types: !13307)
!13307 = !{!37, !10073, !10031}
!13308 = !DILocalVariable(name: "mdev", arg: 1, scope: !13305, file: !3, line: 903, type: !10073)
!13309 = !DILocation(line: 903, column: 67, scope: !13305)
!13310 = !DILocalVariable(name: "state", arg: 2, scope: !13305, file: !3, line: 904, type: !10031)
!13311 = !DILocation(line: 904, column: 37, scope: !13305)
!13312 = !DILocalVariable(name: "in", scope: !13305, file: !3, line: 906, type: !625)
!13313 = !DILocation(line: 906, column: 8, scope: !13305)
!13314 = !DILocalVariable(name: "inlen", scope: !13305, file: !3, line: 907, type: !37)
!13315 = !DILocation(line: 907, column: 6, scope: !13305)
!13316 = !DILocalVariable(name: "err", scope: !13305, file: !3, line: 908, type: !37)
!13317 = !DILocation(line: 908, column: 6, scope: !13305)
!13318 = !DILocation(line: 910, column: 16, scope: !13305)
!13319 = !DILocation(line: 910, column: 7, scope: !13305)
!13320 = !DILocation(line: 910, column: 5, scope: !13305)
!13321 = !DILocation(line: 911, column: 7, scope: !13322)
!13322 = distinct !DILexicalBlock(scope: !13305, file: !3, line: 911, column: 6)
!13323 = !DILocation(line: 911, column: 6, scope: !13305)
!13324 = !DILocation(line: 912, column: 3, scope: !13322)
!13325 = !DILocation(line: 914, column: 2, scope: !13305)
!13326 = !DILocalVariable(name: "_v", scope: !13327, file: !3, line: 914, type: !762)
!13327 = distinct !DILexicalBlock(scope: !13305, file: !3, line: 914, column: 2)
!13328 = !DILocation(line: 914, column: 2, scope: !13327)
!13329 = !DILocation(line: 914, column: 2, scope: !13330)
!13330 = distinct !DILexicalBlock(scope: !13327, file: !3, line: 914, column: 2)
!13331 = !DILocation(line: 915, column: 2, scope: !13305)
!13332 = !DILocalVariable(name: "_v", scope: !13333, file: !3, line: 915, type: !762)
!13333 = distinct !DILexicalBlock(scope: !13305, file: !3, line: 915, column: 2)
!13334 = !DILocation(line: 915, column: 2, scope: !13333)
!13335 = !DILocation(line: 915, column: 2, scope: !13336)
!13336 = distinct !DILexicalBlock(scope: !13333, file: !3, line: 915, column: 2)
!13337 = !DILocation(line: 917, column: 2, scope: !13305)
!13338 = !DILocalVariable(name: "_v", scope: !13339, file: !3, line: 917, type: !762)
!13339 = distinct !DILexicalBlock(scope: !13305, file: !3, line: 917, column: 2)
!13340 = !DILocation(line: 917, column: 2, scope: !13339)
!13341 = !DILocation(line: 917, column: 2, scope: !13342)
!13342 = distinct !DILexicalBlock(scope: !13339, file: !3, line: 917, column: 2)
!13343 = !DILocalVariable(name: "_out", scope: !13344, file: !3, line: 920, type: !10940)
!13344 = distinct !DILexicalBlock(scope: !13305, file: !3, line: 920, column: 8)
!13345 = !DILocation(line: 920, column: 8, scope: !13344)
!13346 = !DILocation(line: 920, column: 8, scope: !13347)
!13347 = distinct !DILexicalBlock(scope: !13344, file: !3, line: 920, column: 8)
!13348 = !DILocation(line: 920, column: 6, scope: !13305)
!13349 = !DILocation(line: 922, column: 9, scope: !13305)
!13350 = !DILocation(line: 922, column: 2, scope: !13305)
!13351 = !DILocation(line: 924, column: 9, scope: !13305)
!13352 = !DILocation(line: 924, column: 2, scope: !13305)
!13353 = !DILocation(line: 925, column: 1, scope: !13305)
!13354 = distinct !DISubprogram(name: "mlx5_nic_vport_disable_roce", scope: !3, file: !3, line: 943, type: !13279, scopeLine: 944, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !798)
!13355 = !DILocalVariable(name: "mdev", arg: 1, scope: !13354, file: !3, line: 943, type: !10073)
!13356 = !DILocation(line: 943, column: 55, scope: !13354)
!13357 = !DILocalVariable(name: "err", scope: !13354, file: !3, line: 945, type: !37)
!13358 = !DILocation(line: 945, column: 6, scope: !13354)
!13359 = !DILocation(line: 947, column: 2, scope: !13354)
!13360 = !DILocation(line: 948, column: 6, scope: !13361)
!13361 = distinct !DILexicalBlock(scope: !13354, file: !3, line: 948, column: 6)
!13362 = !DILocation(line: 948, column: 12, scope: !13361)
!13363 = !DILocation(line: 948, column: 17, scope: !13361)
!13364 = !DILocation(line: 948, column: 6, scope: !13354)
!13365 = !DILocation(line: 949, column: 3, scope: !13366)
!13366 = distinct !DILexicalBlock(scope: !13361, file: !3, line: 948, column: 26)
!13367 = !DILocation(line: 949, column: 9, scope: !13366)
!13368 = !DILocation(line: 949, column: 14, scope: !13366)
!13369 = !DILocation(line: 949, column: 21, scope: !13366)
!13370 = !DILocation(line: 950, column: 7, scope: !13371)
!13371 = distinct !DILexicalBlock(scope: !13366, file: !3, line: 950, column: 7)
!13372 = !DILocation(line: 950, column: 13, scope: !13371)
!13373 = !DILocation(line: 950, column: 18, scope: !13371)
!13374 = !DILocation(line: 950, column: 26, scope: !13371)
!13375 = !DILocation(line: 950, column: 7, scope: !13366)
!13376 = !DILocation(line: 951, column: 43, scope: !13371)
!13377 = !DILocation(line: 951, column: 10, scope: !13371)
!13378 = !DILocation(line: 951, column: 8, scope: !13371)
!13379 = !DILocation(line: 951, column: 4, scope: !13371)
!13380 = !DILocation(line: 953, column: 7, scope: !13381)
!13381 = distinct !DILexicalBlock(scope: !13366, file: !3, line: 953, column: 7)
!13382 = !DILocation(line: 953, column: 7, scope: !13366)
!13383 = !DILocation(line: 954, column: 4, scope: !13381)
!13384 = !DILocation(line: 954, column: 10, scope: !13381)
!13385 = !DILocation(line: 954, column: 15, scope: !13381)
!13386 = !DILocation(line: 954, column: 22, scope: !13381)
!13387 = !DILocation(line: 955, column: 2, scope: !13366)
!13388 = !DILocation(line: 956, column: 2, scope: !13354)
!13389 = !DILocation(line: 957, column: 9, scope: !13354)
!13390 = !DILocation(line: 957, column: 2, scope: !13354)
!13391 = distinct !DISubprogram(name: "mlx5_core_query_vport_counter", scope: !3, file: !3, line: 961, type: !13392, scopeLine: 963, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !798)
!13392 = !DISubroutineType(types: !13393)
!13393 = !{!37, !10073, !1451, !37, !1451, !625}
!13394 = !DILocalVariable(name: "dev", arg: 1, scope: !13391, file: !3, line: 961, type: !10073)
!13395 = !DILocation(line: 961, column: 57, scope: !13391)
!13396 = !DILocalVariable(name: "other_vport", arg: 2, scope: !13391, file: !3, line: 961, type: !1451)
!13397 = !DILocation(line: 961, column: 65, scope: !13391)
!13398 = !DILocalVariable(name: "vf", arg: 3, scope: !13391, file: !3, line: 962, type: !37)
!13399 = !DILocation(line: 962, column: 11, scope: !13391)
!13400 = !DILocalVariable(name: "port_num", arg: 4, scope: !13391, file: !3, line: 962, type: !1451)
!13401 = !DILocation(line: 962, column: 18, scope: !13391)
!13402 = !DILocalVariable(name: "out", arg: 5, scope: !13391, file: !3, line: 962, type: !625)
!13403 = !DILocation(line: 962, column: 34, scope: !13391)
!13404 = !DILocalVariable(name: "in_sz", scope: !13391, file: !3, line: 964, type: !37)
!13405 = !DILocation(line: 964, column: 6, scope: !13391)
!13406 = !DILocalVariable(name: "is_group_manager", scope: !13391, file: !3, line: 965, type: !37)
!13407 = !DILocation(line: 965, column: 6, scope: !13391)
!13408 = !DILocalVariable(name: "in", scope: !13391, file: !3, line: 966, type: !625)
!13409 = !DILocation(line: 966, column: 8, scope: !13391)
!13410 = !DILocalVariable(name: "err", scope: !13391, file: !3, line: 967, type: !37)
!13411 = !DILocation(line: 967, column: 6, scope: !13391)
!13412 = !DILocation(line: 969, column: 21, scope: !13391)
!13413 = !DILocation(line: 969, column: 19, scope: !13391)
!13414 = !DILocation(line: 970, column: 16, scope: !13391)
!13415 = !DILocation(line: 970, column: 7, scope: !13391)
!13416 = !DILocation(line: 970, column: 5, scope: !13391)
!13417 = !DILocation(line: 971, column: 7, scope: !13418)
!13418 = distinct !DILexicalBlock(scope: !13391, file: !3, line: 971, column: 6)
!13419 = !DILocation(line: 971, column: 6, scope: !13391)
!13420 = !DILocation(line: 972, column: 7, scope: !13421)
!13421 = distinct !DILexicalBlock(scope: !13418, file: !3, line: 971, column: 11)
!13422 = !DILocation(line: 973, column: 10, scope: !13421)
!13423 = !DILocation(line: 973, column: 3, scope: !13421)
!13424 = !DILocation(line: 976, column: 2, scope: !13391)
!13425 = !DILocalVariable(name: "_v", scope: !13426, file: !3, line: 976, type: !762)
!13426 = distinct !DILexicalBlock(scope: !13391, file: !3, line: 976, column: 2)
!13427 = !DILocation(line: 976, column: 2, scope: !13426)
!13428 = !DILocation(line: 976, column: 2, scope: !13429)
!13429 = distinct !DILexicalBlock(scope: !13426, file: !3, line: 976, column: 2)
!13430 = !DILocation(line: 978, column: 6, scope: !13431)
!13431 = distinct !DILexicalBlock(scope: !13391, file: !3, line: 978, column: 6)
!13432 = !DILocation(line: 978, column: 6, scope: !13391)
!13433 = !DILocation(line: 979, column: 7, scope: !13434)
!13434 = distinct !DILexicalBlock(scope: !13435, file: !3, line: 979, column: 7)
!13435 = distinct !DILexicalBlock(scope: !13431, file: !3, line: 978, column: 19)
!13436 = !DILocation(line: 979, column: 7, scope: !13435)
!13437 = !DILocation(line: 980, column: 4, scope: !13438)
!13438 = distinct !DILexicalBlock(scope: !13434, file: !3, line: 979, column: 25)
!13439 = !DILocalVariable(name: "_v", scope: !13440, file: !3, line: 980, type: !762)
!13440 = distinct !DILexicalBlock(scope: !13438, file: !3, line: 980, column: 4)
!13441 = !DILocation(line: 980, column: 4, scope: !13440)
!13442 = !DILocation(line: 980, column: 4, scope: !13443)
!13443 = distinct !DILexicalBlock(scope: !13440, file: !3, line: 980, column: 4)
!13444 = !DILocation(line: 981, column: 4, scope: !13438)
!13445 = !DILocalVariable(name: "_v", scope: !13446, file: !3, line: 981, type: !762)
!13446 = distinct !DILexicalBlock(scope: !13438, file: !3, line: 981, column: 4)
!13447 = !DILocation(line: 981, column: 4, scope: !13446)
!13448 = !DILocation(line: 981, column: 4, scope: !13449)
!13449 = distinct !DILexicalBlock(scope: !13446, file: !3, line: 981, column: 4)
!13450 = !DILocation(line: 982, column: 3, scope: !13438)
!13451 = !DILocation(line: 983, column: 8, scope: !13452)
!13452 = distinct !DILexicalBlock(scope: !13434, file: !3, line: 982, column: 10)
!13453 = !DILocation(line: 984, column: 4, scope: !13452)
!13454 = !DILocation(line: 986, column: 2, scope: !13435)
!13455 = !DILocation(line: 987, column: 6, scope: !13456)
!13456 = distinct !DILexicalBlock(scope: !13391, file: !3, line: 987, column: 6)
!13457 = !DILocation(line: 987, column: 35, scope: !13456)
!13458 = !DILocation(line: 987, column: 6, scope: !13391)
!13459 = !DILocation(line: 988, column: 3, scope: !13456)
!13460 = !DILocalVariable(name: "_v", scope: !13461, file: !3, line: 988, type: !762)
!13461 = distinct !DILexicalBlock(scope: !13456, file: !3, line: 988, column: 3)
!13462 = !DILocation(line: 988, column: 3, scope: !13461)
!13463 = !DILocation(line: 988, column: 3, scope: !13464)
!13464 = distinct !DILexicalBlock(scope: !13461, file: !3, line: 988, column: 3)
!13465 = !DILocation(line: 990, column: 8, scope: !13466)
!13466 = distinct !DILexicalBlock(scope: !13391, file: !3, line: 990, column: 8)
!13467 = !DILocation(line: 990, column: 8, scope: !13391)
!13468 = !DILocation(line: 990, column: 6, scope: !13391)
!13469 = !DILocation(line: 990, column: 2, scope: !13391)
!13470 = !DILabel(scope: !13391, name: "free", file: !3, line: 991)
!13471 = !DILocation(line: 991, column: 1, scope: !13391)
!13472 = !DILocation(line: 992, column: 9, scope: !13391)
!13473 = !DILocation(line: 992, column: 2, scope: !13391)
!13474 = !DILocation(line: 993, column: 9, scope: !13391)
!13475 = !DILocation(line: 993, column: 2, scope: !13391)
!13476 = !DILocation(line: 994, column: 1, scope: !13391)
!13477 = distinct !DISubprogram(name: "mlx5_query_vport_down_stats", scope: !3, file: !3, line: 997, type: !13478, scopeLine: 1000, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !798)
!13478 = !DISubroutineType(types: !13479)
!13479 = !{!37, !10073, !1092, !1451, !3475, !3475}
!13480 = !DILocalVariable(name: "mdev", arg: 1, scope: !13477, file: !3, line: 997, type: !10073)
!13481 = !DILocation(line: 997, column: 55, scope: !13477)
!13482 = !DILocalVariable(name: "vport", arg: 2, scope: !13477, file: !3, line: 997, type: !1092)
!13483 = !DILocation(line: 997, column: 65, scope: !13477)
!13484 = !DILocalVariable(name: "other_vport", arg: 3, scope: !13477, file: !3, line: 998, type: !1451)
!13485 = !DILocation(line: 998, column: 8, scope: !13477)
!13486 = !DILocalVariable(name: "rx_discard_vport_down", arg: 4, scope: !13477, file: !3, line: 998, type: !3475)
!13487 = !DILocation(line: 998, column: 26, scope: !13477)
!13488 = !DILocalVariable(name: "tx_discard_vport_down", arg: 5, scope: !13477, file: !3, line: 999, type: !3475)
!13489 = !DILocation(line: 999, column: 10, scope: !13477)
!13490 = !DILocalVariable(name: "out", scope: !13477, file: !3, line: 1001, type: !13491)
!13491 = !DICompositeType(tag: DW_TAG_array_type, baseType: !762, size: 4224, elements: !13492)
!13492 = !{!13493}
!13493 = !DISubrange(count: 132)
!13494 = !DILocation(line: 1001, column: 6, scope: !13477)
!13495 = !DILocalVariable(name: "in", scope: !13477, file: !3, line: 1002, type: !10940)
!13496 = !DILocation(line: 1002, column: 6, scope: !13477)
!13497 = !DILocalVariable(name: "err", scope: !13477, file: !3, line: 1003, type: !37)
!13498 = !DILocation(line: 1003, column: 6, scope: !13477)
!13499 = !DILocation(line: 1005, column: 2, scope: !13477)
!13500 = !DILocalVariable(name: "_v", scope: !13501, file: !3, line: 1005, type: !762)
!13501 = distinct !DILexicalBlock(scope: !13477, file: !3, line: 1005, column: 2)
!13502 = !DILocation(line: 1005, column: 2, scope: !13501)
!13503 = !DILocation(line: 1005, column: 2, scope: !13504)
!13504 = distinct !DILexicalBlock(scope: !13501, file: !3, line: 1005, column: 2)
!13505 = !DILocation(line: 1007, column: 2, scope: !13477)
!13506 = !DILocalVariable(name: "_v", scope: !13507, file: !3, line: 1007, type: !762)
!13507 = distinct !DILexicalBlock(scope: !13477, file: !3, line: 1007, column: 2)
!13508 = !DILocation(line: 1007, column: 2, scope: !13507)
!13509 = !DILocation(line: 1007, column: 2, scope: !13510)
!13510 = distinct !DILexicalBlock(scope: !13507, file: !3, line: 1007, column: 2)
!13511 = !DILocation(line: 1008, column: 2, scope: !13477)
!13512 = !DILocalVariable(name: "_v", scope: !13513, file: !3, line: 1008, type: !762)
!13513 = distinct !DILexicalBlock(scope: !13477, file: !3, line: 1008, column: 2)
!13514 = !DILocation(line: 1008, column: 2, scope: !13513)
!13515 = !DILocation(line: 1008, column: 2, scope: !13516)
!13516 = distinct !DILexicalBlock(scope: !13513, file: !3, line: 1008, column: 2)
!13517 = !DILocation(line: 1009, column: 2, scope: !13477)
!13518 = !DILocalVariable(name: "_v", scope: !13519, file: !3, line: 1009, type: !762)
!13519 = distinct !DILexicalBlock(scope: !13477, file: !3, line: 1009, column: 2)
!13520 = !DILocation(line: 1009, column: 2, scope: !13519)
!13521 = !DILocation(line: 1009, column: 2, scope: !13522)
!13522 = distinct !DILexicalBlock(scope: !13519, file: !3, line: 1009, column: 2)
!13523 = !DILocation(line: 1011, column: 8, scope: !13524)
!13524 = distinct !DILexicalBlock(scope: !13477, file: !3, line: 1011, column: 8)
!13525 = !DILocation(line: 1011, column: 8, scope: !13477)
!13526 = !DILocation(line: 1011, column: 6, scope: !13477)
!13527 = !DILocation(line: 1012, column: 6, scope: !13528)
!13528 = distinct !DILexicalBlock(scope: !13477, file: !3, line: 1012, column: 6)
!13529 = !DILocation(line: 1012, column: 6, scope: !13477)
!13530 = !DILocation(line: 1013, column: 10, scope: !13528)
!13531 = !DILocation(line: 1013, column: 3, scope: !13528)
!13532 = !DILocation(line: 1015, column: 27, scope: !13477)
!13533 = !DILocation(line: 1015, column: 3, scope: !13477)
!13534 = !DILocation(line: 1015, column: 25, scope: !13477)
!13535 = !DILocation(line: 1017, column: 27, scope: !13477)
!13536 = !DILocation(line: 1017, column: 3, scope: !13477)
!13537 = !DILocation(line: 1017, column: 25, scope: !13477)
!13538 = !DILocation(line: 1019, column: 2, scope: !13477)
!13539 = !DILocation(line: 1020, column: 1, scope: !13477)
!13540 = distinct !DISubprogram(name: "mlx5_core_modify_hca_vport_context", scope: !3, file: !3, line: 1022, type: !13541, scopeLine: 1026, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !798)
!13541 = !DISubroutineType(types: !13542)
!13542 = !{!37, !10073, !1451, !1451, !37, !12600}
!13543 = !DILocalVariable(name: "dev", arg: 1, scope: !13540, file: !3, line: 1022, type: !10073)
!13544 = !DILocation(line: 1022, column: 62, scope: !13540)
!13545 = !DILocalVariable(name: "other_vport", arg: 2, scope: !13540, file: !3, line: 1023, type: !1451)
!13546 = !DILocation(line: 1023, column: 15, scope: !13540)
!13547 = !DILocalVariable(name: "port_num", arg: 3, scope: !13540, file: !3, line: 1023, type: !1451)
!13548 = !DILocation(line: 1023, column: 31, scope: !13540)
!13549 = !DILocalVariable(name: "vf", arg: 4, scope: !13540, file: !3, line: 1024, type: !37)
!13550 = !DILocation(line: 1024, column: 16, scope: !13540)
!13551 = !DILocalVariable(name: "req", arg: 5, scope: !13540, file: !3, line: 1025, type: !12600)
!13552 = !DILocation(line: 1025, column: 43, scope: !13540)
!13553 = !DILocalVariable(name: "in_sz", scope: !13540, file: !3, line: 1027, type: !37)
!13554 = !DILocation(line: 1027, column: 6, scope: !13540)
!13555 = !DILocalVariable(name: "is_group_manager", scope: !13540, file: !3, line: 1028, type: !37)
!13556 = !DILocation(line: 1028, column: 6, scope: !13540)
!13557 = !DILocalVariable(name: "ctx", scope: !13540, file: !3, line: 1029, type: !625)
!13558 = !DILocation(line: 1029, column: 8, scope: !13540)
!13559 = !DILocalVariable(name: "in", scope: !13540, file: !3, line: 1030, type: !625)
!13560 = !DILocation(line: 1030, column: 8, scope: !13540)
!13561 = !DILocalVariable(name: "err", scope: !13540, file: !3, line: 1031, type: !37)
!13562 = !DILocation(line: 1031, column: 6, scope: !13540)
!13563 = !DILocation(line: 1034, column: 21, scope: !13540)
!13564 = !DILocation(line: 1034, column: 19, scope: !13540)
!13565 = !DILocation(line: 1035, column: 15, scope: !13540)
!13566 = !DILocation(line: 1035, column: 7, scope: !13540)
!13567 = !DILocation(line: 1035, column: 5, scope: !13540)
!13568 = !DILocation(line: 1036, column: 7, scope: !13569)
!13569 = distinct !DILexicalBlock(scope: !13540, file: !3, line: 1036, column: 6)
!13570 = !DILocation(line: 1036, column: 6, scope: !13540)
!13571 = !DILocation(line: 1037, column: 3, scope: !13569)
!13572 = !DILocation(line: 1039, column: 2, scope: !13540)
!13573 = !DILocalVariable(name: "_v", scope: !13574, file: !3, line: 1039, type: !762)
!13574 = distinct !DILexicalBlock(scope: !13540, file: !3, line: 1039, column: 2)
!13575 = !DILocation(line: 1039, column: 2, scope: !13574)
!13576 = !DILocation(line: 1039, column: 2, scope: !13577)
!13577 = distinct !DILexicalBlock(scope: !13574, file: !3, line: 1039, column: 2)
!13578 = !DILocation(line: 1040, column: 6, scope: !13579)
!13579 = distinct !DILexicalBlock(scope: !13540, file: !3, line: 1040, column: 6)
!13580 = !DILocation(line: 1040, column: 6, scope: !13540)
!13581 = !DILocation(line: 1041, column: 7, scope: !13582)
!13582 = distinct !DILexicalBlock(scope: !13583, file: !3, line: 1041, column: 7)
!13583 = distinct !DILexicalBlock(scope: !13579, file: !3, line: 1040, column: 19)
!13584 = !DILocation(line: 1041, column: 7, scope: !13583)
!13585 = !DILocation(line: 1042, column: 4, scope: !13586)
!13586 = distinct !DILexicalBlock(scope: !13582, file: !3, line: 1041, column: 25)
!13587 = !DILocalVariable(name: "_v", scope: !13588, file: !3, line: 1042, type: !762)
!13588 = distinct !DILexicalBlock(scope: !13586, file: !3, line: 1042, column: 4)
!13589 = !DILocation(line: 1042, column: 4, scope: !13588)
!13590 = !DILocation(line: 1042, column: 4, scope: !13591)
!13591 = distinct !DILexicalBlock(scope: !13588, file: !3, line: 1042, column: 4)
!13592 = !DILocation(line: 1043, column: 4, scope: !13586)
!13593 = !DILocalVariable(name: "_v", scope: !13594, file: !3, line: 1043, type: !762)
!13594 = distinct !DILexicalBlock(scope: !13586, file: !3, line: 1043, column: 4)
!13595 = !DILocation(line: 1043, column: 4, scope: !13594)
!13596 = !DILocation(line: 1043, column: 4, scope: !13597)
!13597 = distinct !DILexicalBlock(scope: !13594, file: !3, line: 1043, column: 4)
!13598 = !DILocation(line: 1044, column: 3, scope: !13586)
!13599 = !DILocation(line: 1045, column: 8, scope: !13600)
!13600 = distinct !DILexicalBlock(scope: !13582, file: !3, line: 1044, column: 10)
!13601 = !DILocation(line: 1046, column: 4, scope: !13600)
!13602 = !DILocation(line: 1048, column: 2, scope: !13583)
!13603 = !DILocation(line: 1050, column: 6, scope: !13604)
!13604 = distinct !DILexicalBlock(scope: !13540, file: !3, line: 1050, column: 6)
!13605 = !DILocation(line: 1050, column: 35, scope: !13604)
!13606 = !DILocation(line: 1050, column: 6, scope: !13540)
!13607 = !DILocation(line: 1051, column: 3, scope: !13604)
!13608 = !DILocalVariable(name: "_v", scope: !13609, file: !3, line: 1051, type: !762)
!13609 = distinct !DILexicalBlock(scope: !13604, file: !3, line: 1051, column: 3)
!13610 = !DILocation(line: 1051, column: 3, scope: !13609)
!13611 = !DILocation(line: 1051, column: 3, scope: !13612)
!13612 = distinct !DILexicalBlock(scope: !13609, file: !3, line: 1051, column: 3)
!13613 = !DILocation(line: 1053, column: 8, scope: !13540)
!13614 = !DILocation(line: 1053, column: 6, scope: !13540)
!13615 = !DILocation(line: 1054, column: 2, scope: !13540)
!13616 = !DILocalVariable(name: "_v", scope: !13617, file: !3, line: 1054, type: !762)
!13617 = distinct !DILexicalBlock(scope: !13540, file: !3, line: 1054, column: 2)
!13618 = !DILocation(line: 1054, column: 2, scope: !13617)
!13619 = !DILocation(line: 1054, column: 2, scope: !13620)
!13620 = distinct !DILexicalBlock(scope: !13617, file: !3, line: 1054, column: 2)
!13621 = !DILocation(line: 1055, column: 6, scope: !13622)
!13622 = distinct !DILexicalBlock(scope: !13540, file: !3, line: 1055, column: 6)
!13623 = !DILocation(line: 1055, column: 11, scope: !13622)
!13624 = !DILocation(line: 1055, column: 24, scope: !13622)
!13625 = !DILocation(line: 1055, column: 6, scope: !13540)
!13626 = !DILocation(line: 1056, column: 3, scope: !13622)
!13627 = !DILocalVariable(name: "_v", scope: !13628, file: !3, line: 1056, type: !762)
!13628 = distinct !DILexicalBlock(scope: !13622, file: !3, line: 1056, column: 3)
!13629 = !DILocation(line: 1056, column: 3, scope: !13628)
!13630 = !DILocation(line: 1056, column: 3, scope: !13631)
!13631 = distinct !DILexicalBlock(scope: !13628, file: !3, line: 1056, column: 3)
!13632 = !DILocation(line: 1058, column: 6, scope: !13633)
!13633 = distinct !DILexicalBlock(scope: !13540, file: !3, line: 1058, column: 6)
!13634 = !DILocation(line: 1058, column: 11, scope: !13633)
!13635 = !DILocation(line: 1058, column: 24, scope: !13633)
!13636 = !DILocation(line: 1058, column: 6, scope: !13540)
!13637 = !DILocation(line: 1059, column: 3, scope: !13633)
!13638 = !DILocation(line: 1059, column: 3, scope: !13639)
!13639 = distinct !DILexicalBlock(scope: !13633, file: !3, line: 1059, column: 3)
!13640 = !DILocation(line: 1059, column: 3, scope: !13641)
!13641 = distinct !DILexicalBlock(scope: !13639, file: !3, line: 1059, column: 3)
!13642 = !DILocation(line: 1059, column: 3, scope: !13643)
!13643 = distinct !DILexicalBlock(scope: !13639, file: !3, line: 1059, column: 3)
!13644 = !DILocation(line: 1059, column: 3, scope: !13645)
!13645 = distinct !DILexicalBlock(scope: !13643, file: !3, line: 1059, column: 3)
!13646 = !DILocation(line: 1060, column: 6, scope: !13647)
!13647 = distinct !DILexicalBlock(scope: !13540, file: !3, line: 1060, column: 6)
!13648 = !DILocation(line: 1060, column: 11, scope: !13647)
!13649 = !DILocation(line: 1060, column: 24, scope: !13647)
!13650 = !DILocation(line: 1060, column: 6, scope: !13540)
!13651 = !DILocation(line: 1061, column: 3, scope: !13647)
!13652 = !DILocation(line: 1061, column: 3, scope: !13653)
!13653 = distinct !DILexicalBlock(scope: !13647, file: !3, line: 1061, column: 3)
!13654 = !DILocation(line: 1061, column: 3, scope: !13655)
!13655 = distinct !DILexicalBlock(scope: !13653, file: !3, line: 1061, column: 3)
!13656 = !DILocation(line: 1061, column: 3, scope: !13657)
!13657 = distinct !DILexicalBlock(scope: !13653, file: !3, line: 1061, column: 3)
!13658 = !DILocation(line: 1061, column: 3, scope: !13659)
!13659 = distinct !DILexicalBlock(scope: !13657, file: !3, line: 1061, column: 3)
!13660 = !DILocation(line: 1062, column: 2, scope: !13540)
!13661 = !DILocalVariable(name: "_v", scope: !13662, file: !3, line: 1062, type: !762)
!13662 = distinct !DILexicalBlock(scope: !13540, file: !3, line: 1062, column: 2)
!13663 = !DILocation(line: 1062, column: 2, scope: !13662)
!13664 = !DILocation(line: 1062, column: 2, scope: !13665)
!13665 = distinct !DILexicalBlock(scope: !13662, file: !3, line: 1062, column: 2)
!13666 = !DILocation(line: 1063, column: 2, scope: !13540)
!13667 = !DILocalVariable(name: "_v", scope: !13668, file: !3, line: 1063, type: !762)
!13668 = distinct !DILexicalBlock(scope: !13540, file: !3, line: 1063, column: 2)
!13669 = !DILocation(line: 1063, column: 2, scope: !13668)
!13670 = !DILocation(line: 1063, column: 2, scope: !13671)
!13671 = distinct !DILexicalBlock(scope: !13668, file: !3, line: 1063, column: 2)
!13672 = !DILocalVariable(name: "_out", scope: !13673, file: !3, line: 1065, type: !10940)
!13673 = distinct !DILexicalBlock(scope: !13540, file: !3, line: 1065, column: 8)
!13674 = !DILocation(line: 1065, column: 8, scope: !13673)
!13675 = !DILocation(line: 1065, column: 8, scope: !13676)
!13676 = distinct !DILexicalBlock(scope: !13673, file: !3, line: 1065, column: 8)
!13677 = !DILocation(line: 1065, column: 6, scope: !13540)
!13678 = !DILocation(line: 1065, column: 2, scope: !13540)
!13679 = !DILabel(scope: !13540, name: "ex", file: !3, line: 1066)
!13680 = !DILocation(line: 1066, column: 1, scope: !13540)
!13681 = !DILocation(line: 1067, column: 8, scope: !13540)
!13682 = !DILocation(line: 1067, column: 2, scope: !13540)
!13683 = !DILocation(line: 1068, column: 9, scope: !13540)
!13684 = !DILocation(line: 1068, column: 2, scope: !13540)
!13685 = !DILocation(line: 1069, column: 1, scope: !13540)
!13686 = distinct !DISubprogram(name: "mlx5_nic_vport_affiliate_multiport", scope: !3, file: !3, line: 1072, type: !13687, scopeLine: 1074, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !798)
!13687 = !DISubroutineType(types: !13688)
!13688 = !{!37, !10073, !10073}
!13689 = !DILocalVariable(name: "master_mdev", arg: 1, scope: !13686, file: !3, line: 1072, type: !10073)
!13690 = !DILocation(line: 1072, column: 62, scope: !13686)
!13691 = !DILocalVariable(name: "port_mdev", arg: 2, scope: !13686, file: !3, line: 1073, type: !10073)
!13692 = !DILocation(line: 1073, column: 34, scope: !13686)
!13693 = !DILocalVariable(name: "inlen", scope: !13686, file: !3, line: 1075, type: !37)
!13694 = !DILocation(line: 1075, column: 6, scope: !13686)
!13695 = !DILocalVariable(name: "in", scope: !13686, file: !3, line: 1076, type: !625)
!13696 = !DILocation(line: 1076, column: 8, scope: !13686)
!13697 = !DILocalVariable(name: "err", scope: !13686, file: !3, line: 1077, type: !37)
!13698 = !DILocation(line: 1077, column: 6, scope: !13686)
!13699 = !DILocation(line: 1079, column: 16, scope: !13686)
!13700 = !DILocation(line: 1079, column: 7, scope: !13686)
!13701 = !DILocation(line: 1079, column: 5, scope: !13686)
!13702 = !DILocation(line: 1080, column: 7, scope: !13703)
!13703 = distinct !DILexicalBlock(scope: !13686, file: !3, line: 1080, column: 6)
!13704 = !DILocation(line: 1080, column: 6, scope: !13686)
!13705 = !DILocation(line: 1081, column: 3, scope: !13703)
!13706 = !DILocation(line: 1083, column: 35, scope: !13686)
!13707 = !DILocation(line: 1083, column: 8, scope: !13686)
!13708 = !DILocation(line: 1083, column: 6, scope: !13686)
!13709 = !DILocation(line: 1084, column: 6, scope: !13710)
!13710 = distinct !DILexicalBlock(scope: !13686, file: !3, line: 1084, column: 6)
!13711 = !DILocation(line: 1084, column: 6, scope: !13686)
!13712 = !DILocation(line: 1085, column: 3, scope: !13710)
!13713 = !DILocation(line: 1087, column: 2, scope: !13686)
!13714 = !DILocalVariable(name: "_v", scope: !13715, file: !3, line: 1087, type: !762)
!13715 = distinct !DILexicalBlock(scope: !13686, file: !3, line: 1087, column: 2)
!13716 = !DILocation(line: 1087, column: 2, scope: !13715)
!13717 = !DILocation(line: 1087, column: 2, scope: !13718)
!13718 = distinct !DILexicalBlock(scope: !13715, file: !3, line: 1087, column: 2)
!13719 = !DILocation(line: 1088, column: 2, scope: !13686)
!13720 = !DILocalVariable(name: "_v", scope: !13721, file: !3, line: 1088, type: !762)
!13721 = distinct !DILexicalBlock(scope: !13686, file: !3, line: 1088, column: 2)
!13722 = !DILocation(line: 1088, column: 2, scope: !13721)
!13723 = !DILocation(line: 1088, column: 2, scope: !13724)
!13724 = distinct !DILexicalBlock(scope: !13721, file: !3, line: 1088, column: 2)
!13725 = !DILocation(line: 1091, column: 2, scope: !13686)
!13726 = !DILocalVariable(name: "_v", scope: !13727, file: !3, line: 1091, type: !762)
!13727 = distinct !DILexicalBlock(scope: !13686, file: !3, line: 1091, column: 2)
!13728 = !DILocation(line: 1091, column: 2, scope: !13727)
!13729 = !DILocation(line: 1091, column: 2, scope: !13730)
!13730 = distinct !DILexicalBlock(scope: !13727, file: !3, line: 1091, column: 2)
!13731 = !DILocation(line: 1094, column: 2, scope: !13686)
!13732 = !DILocalVariable(name: "_v", scope: !13733, file: !3, line: 1094, type: !762)
!13733 = distinct !DILexicalBlock(scope: !13686, file: !3, line: 1094, column: 2)
!13734 = !DILocation(line: 1094, column: 2, scope: !13733)
!13735 = !DILocation(line: 1094, column: 2, scope: !13736)
!13736 = distinct !DILexicalBlock(scope: !13733, file: !3, line: 1094, column: 2)
!13737 = !DILocalVariable(name: "_out", scope: !13738, file: !3, line: 1097, type: !10940)
!13738 = distinct !DILexicalBlock(scope: !13686, file: !3, line: 1097, column: 8)
!13739 = !DILocation(line: 1097, column: 8, scope: !13738)
!13740 = !DILocation(line: 1097, column: 8, scope: !13741)
!13741 = distinct !DILexicalBlock(scope: !13738, file: !3, line: 1097, column: 8)
!13742 = !DILocation(line: 1097, column: 6, scope: !13686)
!13743 = !DILocation(line: 1098, column: 6, scope: !13744)
!13744 = distinct !DILexicalBlock(scope: !13686, file: !3, line: 1098, column: 6)
!13745 = !DILocation(line: 1098, column: 6, scope: !13686)
!13746 = !DILocation(line: 1099, column: 31, scope: !13744)
!13747 = !DILocation(line: 1099, column: 3, scope: !13744)
!13748 = !DILabel(scope: !13686, name: "free", file: !3, line: 1101)
!13749 = !DILocation(line: 1101, column: 1, scope: !13686)
!13750 = !DILocation(line: 1102, column: 9, scope: !13686)
!13751 = !DILocation(line: 1102, column: 2, scope: !13686)
!13752 = !DILocation(line: 1103, column: 9, scope: !13686)
!13753 = !DILocation(line: 1103, column: 2, scope: !13686)
!13754 = !DILocation(line: 1104, column: 1, scope: !13686)
!13755 = distinct !DISubprogram(name: "mlx5_nic_vport_unaffiliate_multiport", scope: !3, file: !3, line: 1107, type: !13279, scopeLine: 1108, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !798)
!13756 = !DILocalVariable(name: "port_mdev", arg: 1, scope: !13755, file: !3, line: 1107, type: !10073)
!13757 = !DILocation(line: 1107, column: 64, scope: !13755)
!13758 = !DILocalVariable(name: "inlen", scope: !13755, file: !3, line: 1109, type: !37)
!13759 = !DILocation(line: 1109, column: 6, scope: !13755)
!13760 = !DILocalVariable(name: "in", scope: !13755, file: !3, line: 1110, type: !625)
!13761 = !DILocation(line: 1110, column: 8, scope: !13755)
!13762 = !DILocalVariable(name: "err", scope: !13755, file: !3, line: 1111, type: !37)
!13763 = !DILocation(line: 1111, column: 6, scope: !13755)
!13764 = !DILocation(line: 1113, column: 16, scope: !13755)
!13765 = !DILocation(line: 1113, column: 7, scope: !13755)
!13766 = !DILocation(line: 1113, column: 5, scope: !13755)
!13767 = !DILocation(line: 1114, column: 7, scope: !13768)
!13768 = distinct !DILexicalBlock(scope: !13755, file: !3, line: 1114, column: 6)
!13769 = !DILocation(line: 1114, column: 6, scope: !13755)
!13770 = !DILocation(line: 1115, column: 3, scope: !13768)
!13771 = !DILocation(line: 1117, column: 2, scope: !13755)
!13772 = !DILocalVariable(name: "_v", scope: !13773, file: !3, line: 1117, type: !762)
!13773 = distinct !DILexicalBlock(scope: !13755, file: !3, line: 1117, column: 2)
!13774 = !DILocation(line: 1117, column: 2, scope: !13773)
!13775 = !DILocation(line: 1117, column: 2, scope: !13776)
!13776 = distinct !DILexicalBlock(scope: !13773, file: !3, line: 1117, column: 2)
!13777 = !DILocation(line: 1118, column: 2, scope: !13755)
!13778 = !DILocalVariable(name: "_v", scope: !13779, file: !3, line: 1118, type: !762)
!13779 = distinct !DILexicalBlock(scope: !13755, file: !3, line: 1118, column: 2)
!13780 = !DILocation(line: 1118, column: 2, scope: !13779)
!13781 = !DILocation(line: 1118, column: 2, scope: !13782)
!13782 = distinct !DILexicalBlock(scope: !13779, file: !3, line: 1118, column: 2)
!13783 = !DILocation(line: 1120, column: 2, scope: !13755)
!13784 = !DILocalVariable(name: "_v", scope: !13785, file: !3, line: 1120, type: !762)
!13785 = distinct !DILexicalBlock(scope: !13755, file: !3, line: 1120, column: 2)
!13786 = !DILocation(line: 1120, column: 2, scope: !13785)
!13787 = !DILocation(line: 1120, column: 2, scope: !13788)
!13788 = distinct !DILexicalBlock(scope: !13785, file: !3, line: 1120, column: 2)
!13789 = !DILocation(line: 1122, column: 2, scope: !13755)
!13790 = !DILocalVariable(name: "_v", scope: !13791, file: !3, line: 1122, type: !762)
!13791 = distinct !DILexicalBlock(scope: !13755, file: !3, line: 1122, column: 2)
!13792 = !DILocation(line: 1122, column: 2, scope: !13791)
!13793 = !DILocation(line: 1122, column: 2, scope: !13794)
!13794 = distinct !DILexicalBlock(scope: !13791, file: !3, line: 1122, column: 2)
!13795 = !DILocalVariable(name: "_out", scope: !13796, file: !3, line: 1125, type: !10940)
!13796 = distinct !DILexicalBlock(scope: !13755, file: !3, line: 1125, column: 8)
!13797 = !DILocation(line: 1125, column: 8, scope: !13796)
!13798 = !DILocation(line: 1125, column: 8, scope: !13799)
!13799 = distinct !DILexicalBlock(scope: !13796, file: !3, line: 1125, column: 8)
!13800 = !DILocation(line: 1125, column: 6, scope: !13755)
!13801 = !DILocation(line: 1126, column: 7, scope: !13802)
!13802 = distinct !DILexicalBlock(scope: !13755, file: !3, line: 1126, column: 6)
!13803 = !DILocation(line: 1126, column: 6, scope: !13755)
!13804 = !DILocation(line: 1127, column: 31, scope: !13802)
!13805 = !DILocation(line: 1127, column: 3, scope: !13802)
!13806 = !DILocation(line: 1129, column: 9, scope: !13755)
!13807 = !DILocation(line: 1129, column: 2, scope: !13755)
!13808 = !DILocation(line: 1130, column: 9, scope: !13755)
!13809 = !DILocation(line: 1130, column: 2, scope: !13755)
!13810 = !DILocation(line: 1131, column: 1, scope: !13755)
!13811 = distinct !DISubprogram(name: "mlx5_query_nic_system_image_guid", scope: !3, file: !3, line: 1134, type: !13812, scopeLine: 1135, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !798)
!13812 = !DISubroutineType(types: !13813)
!13813 = !{!391, !10073}
!13814 = !DILocalVariable(name: "mdev", arg: 1, scope: !13811, file: !3, line: 1134, type: !10073)
!13815 = !DILocation(line: 1134, column: 60, scope: !13811)
!13816 = !DILocalVariable(name: "port_type_cap", scope: !13811, file: !3, line: 1136, type: !37)
!13817 = !DILocation(line: 1136, column: 6, scope: !13811)
!13818 = !DILocation(line: 1136, column: 22, scope: !13811)
!13819 = !DILocalVariable(name: "tmp", scope: !13811, file: !3, line: 1137, type: !391)
!13820 = !DILocation(line: 1137, column: 6, scope: !13811)
!13821 = !DILocation(line: 1139, column: 6, scope: !13822)
!13822 = distinct !DILexicalBlock(scope: !13811, file: !3, line: 1139, column: 6)
!13823 = !DILocation(line: 1139, column: 12, scope: !13822)
!13824 = !DILocation(line: 1139, column: 6, scope: !13811)
!13825 = !DILocation(line: 1140, column: 10, scope: !13822)
!13826 = !DILocation(line: 1140, column: 16, scope: !13822)
!13827 = !DILocation(line: 1140, column: 3, scope: !13822)
!13828 = !DILocation(line: 1142, column: 6, scope: !13829)
!13829 = distinct !DILexicalBlock(scope: !13811, file: !3, line: 1142, column: 6)
!13830 = !DILocation(line: 1142, column: 20, scope: !13829)
!13831 = !DILocation(line: 1142, column: 6, scope: !13811)
!13832 = !DILocation(line: 1143, column: 42, scope: !13829)
!13833 = !DILocation(line: 1143, column: 3, scope: !13829)
!13834 = !DILocation(line: 1145, column: 42, scope: !13829)
!13835 = !DILocation(line: 1145, column: 3, scope: !13829)
!13836 = !DILocation(line: 1147, column: 25, scope: !13811)
!13837 = !DILocation(line: 1147, column: 2, scope: !13811)
!13838 = !DILocation(line: 1147, column: 8, scope: !13811)
!13839 = !DILocation(line: 1147, column: 23, scope: !13811)
!13840 = !DILocation(line: 1149, column: 9, scope: !13811)
!13841 = !DILocation(line: 1149, column: 2, scope: !13811)
!13842 = !DILocation(line: 1150, column: 1, scope: !13811)
!13843 = distinct !DISubprogram(name: "mlx5_eswitch_get_total_vports", scope: !3, file: !3, line: 1161, type: !13844, scopeLine: 1162, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !798)
!13844 = !DISubroutineType(types: !13845)
!13845 = !{!1092, !13846}
!13846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13847, size: 64)
!13847 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10074)
!13848 = !DILocalVariable(name: "dev", arg: 1, scope: !13843, file: !3, line: 1161, type: !13846)
!13849 = !DILocation(line: 1161, column: 63, scope: !13843)
!13850 = !DILocation(line: 1163, column: 9, scope: !13843)
!13851 = !DILocation(line: 1163, column: 54, scope: !13843)
!13852 = !DILocation(line: 1163, column: 36, scope: !13843)
!13853 = !DILocation(line: 1163, column: 34, scope: !13843)
!13854 = !DILocation(line: 1163, column: 2, scope: !13843)
!13855 = distinct !DISubprogram(name: "mlx5_ecpf_vport_exists", scope: !9710, file: !9710, line: 1151, type: !13856, scopeLine: 1152, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !798)
!13856 = !DISubroutineType(types: !13857)
!13857 = !{!595, !13846}
!13858 = !DILocalVariable(name: "dev", arg: 1, scope: !13855, file: !9710, line: 1151, type: !13846)
!13859 = !DILocation(line: 1151, column: 71, scope: !13855)
!13860 = !DILocation(line: 1153, column: 25, scope: !13855)
!13861 = !DILocation(line: 1153, column: 9, scope: !13855)
!13862 = !DILocation(line: 1153, column: 30, scope: !13855)
!13863 = !DILocation(line: 1153, column: 33, scope: !13855)
!13864 = !DILocation(line: 0, scope: !13855)
!13865 = !DILocation(line: 1153, column: 2, scope: !13855)
!13866 = distinct !DISubprogram(name: "mlx5_core_max_vfs", scope: !9710, file: !9710, line: 1156, type: !13844, scopeLine: 1157, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !798)
!13867 = !DILocalVariable(name: "dev", arg: 1, scope: !13866, file: !9710, line: 1156, type: !13846)
!13868 = !DILocation(line: 1156, column: 65, scope: !13866)
!13869 = !DILocation(line: 1158, column: 9, scope: !13866)
!13870 = !DILocation(line: 1158, column: 14, scope: !13866)
!13871 = !DILocation(line: 1158, column: 19, scope: !13866)
!13872 = !DILocation(line: 1158, column: 25, scope: !13866)
!13873 = !DILocation(line: 1158, column: 2, scope: !13866)
!13874 = distinct !DISubprogram(name: "__arch_swab32", scope: !13875, file: !13875, line: 8, type: !10986, scopeLine: 9, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !798)
!13875 = !DIFile(filename: "./arch/x86/include/uapi/asm/swab.h", directory: "/home/lizy2001/genbc/linux")
!13876 = !DILocalVariable(name: "val", arg: 1, scope: !13874, file: !13875, line: 8, type: !523)
!13877 = !DILocation(line: 8, column: 61, scope: !13874)
!13878 = !DILocation(line: 10, column: 38, scope: !13874)
!13879 = !DILocation(line: 10, column: 2, scope: !13874)
!13880 = !{i32 542757}
!13881 = !DILocation(line: 11, column: 9, scope: !13874)
!13882 = !DILocation(line: 11, column: 2, scope: !13874)
!13883 = distinct !DISubprogram(name: "kvmalloc", scope: !19, file: !19, line: 763, type: !11338, scopeLine: 764, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !798)
!13884 = !DILocalVariable(name: "size", arg: 1, scope: !13883, file: !19, line: 763, type: !649)
!13885 = !DILocation(line: 763, column: 37, scope: !13883)
!13886 = !DILocalVariable(name: "flags", arg: 2, scope: !13883, file: !19, line: 763, type: !1612)
!13887 = !DILocation(line: 763, column: 49, scope: !13883)
!13888 = !DILocation(line: 765, column: 23, scope: !13883)
!13889 = !DILocation(line: 765, column: 29, scope: !13883)
!13890 = !DILocation(line: 765, column: 9, scope: !13883)
!13891 = !DILocation(line: 765, column: 2, scope: !13883)
!13892 = distinct !DISubprogram(name: "get_order", scope: !13893, file: !13893, line: 29, type: !13894, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !798)
!13893 = !DIFile(filename: "./include/asm-generic/getorder.h", directory: "/home/lizy2001/genbc/linux")
!13894 = !DISubroutineType(types: !13895)
!13895 = !{!37, !372}
!13896 = !DILocalVariable(name: "x", arg: 1, scope: !13897, file: !13898, line: 366, type: !393)
!13897 = distinct !DISubprogram(name: "fls64", scope: !13898, file: !13898, line: 366, type: !13899, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !798)
!13898 = !DIFile(filename: "./arch/x86/include/asm/bitops.h", directory: "/home/lizy2001/genbc/linux")
!13899 = !DISubroutineType(types: !13900)
!13900 = !{!37, !393}
!13901 = !DILocation(line: 366, column: 40, scope: !13897, inlinedAt: !13902)
!13902 = distinct !DILocation(line: 46, column: 9, scope: !13892)
!13903 = !DILocalVariable(name: "bitpos", scope: !13897, file: !13898, line: 368, type: !37)
!13904 = !DILocation(line: 368, column: 6, scope: !13897, inlinedAt: !13902)
!13905 = !DILocalVariable(name: "size", arg: 1, scope: !13892, file: !13893, line: 29, type: !372)
!13906 = !DILocation(line: 29, column: 63, scope: !13892)
!13907 = !DILocation(line: 31, column: 27, scope: !13908)
!13908 = distinct !DILexicalBlock(scope: !13892, file: !13893, line: 31, column: 6)
!13909 = !DILocation(line: 31, column: 6, scope: !13908)
!13910 = !DILocation(line: 31, column: 6, scope: !13892)
!13911 = !DILocation(line: 32, column: 8, scope: !13912)
!13912 = distinct !DILexicalBlock(scope: !13913, file: !13893, line: 32, column: 7)
!13913 = distinct !DILexicalBlock(scope: !13908, file: !13893, line: 31, column: 34)
!13914 = !DILocation(line: 32, column: 7, scope: !13913)
!13915 = !DILocation(line: 33, column: 4, scope: !13912)
!13916 = !DILocation(line: 35, column: 7, scope: !13917)
!13917 = distinct !DILexicalBlock(scope: !13913, file: !13893, line: 35, column: 7)
!13918 = !DILocation(line: 35, column: 12, scope: !13917)
!13919 = !DILocation(line: 35, column: 7, scope: !13913)
!13920 = !DILocation(line: 36, column: 4, scope: !13917)
!13921 = !DILocation(line: 38, column: 10, scope: !13913)
!13922 = !DILocation(line: 38, column: 28, scope: !13913)
!13923 = !DILocation(line: 38, column: 41, scope: !13913)
!13924 = !DILocation(line: 38, column: 3, scope: !13913)
!13925 = !DILocation(line: 41, column: 6, scope: !13892)
!13926 = !DILocation(line: 42, column: 7, scope: !13892)
!13927 = !DILocation(line: 46, column: 15, scope: !13892)
!13928 = !DILocation(line: 374, column: 2, scope: !13897, inlinedAt: !13902)
!13929 = !DILocation(line: 376, column: 14, scope: !13897, inlinedAt: !13902)
!13930 = !{i32 422533}
!13931 = !DILocation(line: 377, column: 9, scope: !13897, inlinedAt: !13902)
!13932 = !DILocation(line: 377, column: 16, scope: !13897, inlinedAt: !13902)
!13933 = !DILocation(line: 46, column: 2, scope: !13892)
!13934 = !DILocation(line: 48, column: 1, scope: !13892)
!13935 = distinct !DISubprogram(name: "__ilog2_u64", scope: !13936, file: !13936, line: 30, type: !13937, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !798)
!13936 = !DIFile(filename: "./include/linux/log2.h", directory: "/home/lizy2001/genbc/linux")
!13937 = !DISubroutineType(types: !13938)
!13938 = !{!37, !391}
!13939 = !DILocation(line: 366, column: 40, scope: !13897, inlinedAt: !13940)
!13940 = distinct !DILocation(line: 32, column: 9, scope: !13935)
!13941 = !DILocation(line: 368, column: 6, scope: !13897, inlinedAt: !13940)
!13942 = !DILocalVariable(name: "n", arg: 1, scope: !13935, file: !13936, line: 30, type: !391)
!13943 = !DILocation(line: 30, column: 21, scope: !13935)
!13944 = !DILocation(line: 32, column: 15, scope: !13935)
!13945 = !DILocation(line: 374, column: 2, scope: !13897, inlinedAt: !13940)
!13946 = !DILocation(line: 376, column: 14, scope: !13897, inlinedAt: !13940)
!13947 = !DILocation(line: 377, column: 9, scope: !13897, inlinedAt: !13940)
!13948 = !DILocation(line: 377, column: 16, scope: !13897, inlinedAt: !13940)
!13949 = !DILocation(line: 32, column: 18, scope: !13935)
!13950 = !DILocation(line: 32, column: 2, scope: !13935)
!13951 = distinct !DISubprogram(name: "kasan_kmalloc", scope: !13952, file: !13952, line: 137, type: !13953, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !798)
!13952 = !DIFile(filename: "./include/linux/kasan.h", directory: "/home/lizy2001/genbc/linux")
!13953 = !DISubroutineType(types: !13954)
!13954 = !{!625, !1620, !2337, !649, !1612}
!13955 = !DILocalVariable(name: "s", arg: 1, scope: !13951, file: !13952, line: 137, type: !1620)
!13956 = !DILocation(line: 137, column: 54, scope: !13951)
!13957 = !DILocalVariable(name: "object", arg: 2, scope: !13951, file: !13952, line: 137, type: !2337)
!13958 = !DILocation(line: 137, column: 69, scope: !13951)
!13959 = !DILocalVariable(name: "size", arg: 3, scope: !13951, file: !13952, line: 138, type: !649)
!13960 = !DILocation(line: 138, column: 12, scope: !13951)
!13961 = !DILocalVariable(name: "flags", arg: 4, scope: !13951, file: !13952, line: 138, type: !1612)
!13962 = !DILocation(line: 138, column: 24, scope: !13951)
!13963 = !DILocation(line: 140, column: 17, scope: !13951)
!13964 = !DILocation(line: 140, column: 2, scope: !13951)
!13965 = distinct !DISubprogram(name: "__arch_swab64", scope: !13875, file: !13875, line: 15, type: !12095, scopeLine: 16, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !798)
!13966 = !DILocalVariable(name: "val", arg: 1, scope: !13965, file: !13875, line: 15, type: !393)
!13967 = !DILocation(line: 15, column: 61, scope: !13965)
!13968 = !DILocation(line: 31, column: 38, scope: !13965)
!13969 = !DILocation(line: 31, column: 2, scope: !13965)
!13970 = !{i32 543161}
!13971 = !DILocation(line: 32, column: 9, scope: !13965)
!13972 = !DILocation(line: 32, column: 2, scope: !13965)
!13973 = distinct !DISubprogram(name: "mlx5_core_is_pf", scope: !9710, file: !9710, line: 1130, type: !13856, scopeLine: 1131, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !798)
!13974 = !DILocalVariable(name: "dev", arg: 1, scope: !13973, file: !9710, line: 1130, type: !13846)
!13975 = !DILocation(line: 1130, column: 64, scope: !13973)
!13976 = !DILocation(line: 1132, column: 9, scope: !13973)
!13977 = !DILocation(line: 1132, column: 14, scope: !13973)
!13978 = !DILocation(line: 1132, column: 27, scope: !13973)
!13979 = !DILocation(line: 1132, column: 2, scope: !13973)
